; ModuleID = 'ginstall.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.infomap = type { i8*, i8* }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.hash_table = type { %struct.hash_entry*, %struct.hash_entry*, i64, i64, i64, %struct.hash_tuning*, i64 (i8*, i64)*, i1 (i8*, i8*)*, void (i8*)*, %struct.hash_entry* }
%struct.hash_tuning = type { float, float, float, float, i8 }
%struct.hash_entry = type { i8*, %struct.hash_entry* }
%struct.quoting_options = type { i32, i32, [8 x i32], i8*, i8* }
%struct.slotvec = type { i64, i8* }
%struct.fs_res = type { i64, i32, i8 }
%struct.cp_options = type { i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, %struct.hash_table*, %struct.hash_table* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.mode_change = type { i8, i8, i32, i32, i32 }
%struct.passwd = type { i8*, i8*, i32, i32, i8*, i8*, i8* }
%struct.group = type { i8*, i8*, i32, i8** }
%struct.savewd = type { i32, %union.anon }
%union.anon = type { i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.dir_list = type { %struct.dir_list*, i64, i64 }
%struct.error_context = type { void (%struct.error_context*, i8*, ...)*, i8* (%struct.error_context*, i8*)*, void (%struct.error_context*, i8*)* }
%struct.extent_scan = type { i32, i64, i32, i64, i8, i8, %struct.extent_info* }
%struct.extent_info = type { i64, i64, i32 }
%struct.Src_to_dest = type { i64, i64, i8* }
%union.anon.17 = type { %struct.fiemap, [4064 x i8] }
%struct.fiemap = type { i64, i64, i32, i32, i32, i32, [0 x %struct.fiemap_extent] }
%struct.fiemap_extent = type { i64, i64, i64, [2 x i64], i32, [3 x i32] }
%struct.link_arg = type { i32, i8*, i32, i32 }
%struct.symlink_arg = type { i8*, i32 }
%struct.__dirstream = type opaque
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.F_triple = type { i8*, i64, i64 }
%struct.permission_context = type { i32, %struct.__acl_ext*, %struct.__acl_ext*, i8 }
%struct.__acl_ext = type opaque
%struct.direntry_t = type { i8*, i64 }
%struct.randint_source = type { %struct.randread_source*, i64, i64 }
%struct.randread_source = type { %struct._IO_FILE*, void (i8*)*, i8*, %union.anon.128 }
%union.anon.128 = type { %struct.isaac }
%struct.isaac = type { i64, %struct.isaac_state, %union.anon.0 }
%struct.isaac_state = type { [256 x i64], i64, i64, i64 }
%union.anon.0 = type { [256 x i64] }
%struct.__acl_entry_ext = type opaque
%struct.timezone = type { i32, i32 }

@stderr = external dso_local global %struct._IO_FILE*, align 8, !ctir !0
@.str = private unnamed_addr constant [39 x i8] c"Try '%s --help' for more information.\0A\00", align 1
@.str.1 = private unnamed_addr constant [165 x i8] c"Usage: %s [OPTION]... [-T] SOURCE DEST\0A  or:  %s [OPTION]... SOURCE... DIRECTORY\0A  or:  %s [OPTION]... -t DIRECTORY SOURCE...\0A  or:  %s [OPTION]... -d DIRECTORY...\0A\00", align 1
@.str.2 = private unnamed_addr constant [465 x i8] c"\0AThis install program copies files (often just compiled) into destination\0Alocations you choose.  If you want to download and install a ready-to-use\0Apackage on a GNU/Linux system, you should instead be using a package manager\0Alike yum(1) or apt-get(1).\0A\0AIn the first three forms, copy SOURCE to DEST or multiple SOURCE(s) to\0Athe existing DIRECTORY, while setting permission modes and owner/group.\0AIn the 4th form, create all components of the given DIRECTORY(ies).\0A\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8, !ctir !0
@.str.3 = private unnamed_addr constant [465 x i8] c"      --backup[=CONTROL]  make a backup of each existing destination file\0A  -b                  like --backup but does not accept an argument\0A  -c                  (ignored)\0A  -C, --compare       compare each pair of source and destination files, and\0A                        in some cases, do not modify the destination at all\0A  -d, --directory     treat all arguments as directory names; create all\0A                        components of the specified directories\0A\00", align 1
@.str.4 = private unnamed_addr constant [401 x i8] c"  -D                  create all leading components of DEST except the last,\0A                        or all components of --target-directory,\0A                        then copy SOURCE to DEST\0A  -g, --group=GROUP   set group ownership, instead of process' current group\0A  -m, --mode=MODE     set permission mode (as in chmod), instead of rwxr-xr-x\0A  -o, --owner=OWNER   set ownership (super-user only)\0A\00", align 1
@.str.5 = private unnamed_addr constant [504 x i8] c"  -p, --preserve-timestamps   apply access/modification times of SOURCE files\0A                        to corresponding destination files\0A  -s, --strip         strip symbol tables\0A      --strip-program=PROGRAM  program used to strip binaries\0A  -S, --suffix=SUFFIX  override the usual backup suffix\0A  -t, --target-directory=DIRECTORY  copy all SOURCE arguments into DIRECTORY\0A  -T, --no-target-directory  treat DEST as a normal file\0A  -v, --verbose       print the name of each directory as it is created\0A\00", align 1
@.str.6 = private unnamed_addr constant [347 x i8] c"      --preserve-context  preserve SELinux security context\0A  -Z                      set SELinux security context of destination\0A                            file and each created directory to default type\0A      --context[=CTX]     like -Z, or if CTX is specified then set the\0A                            SELinux or SMACK security context to CTX\0A\00", align 1
@.str.7 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 1
@.str.8 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"install\00", align 1
@__const.emit_ancillary_info.infomap = private unnamed_addr constant [7 x %struct.infomap] [%struct.infomap { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.39, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.40, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i32 0, i32 0) }, %struct.infomap zeroinitializer], align 16
@.str.46 = private unnamed_addr constant [23 x i8] c"\0A%s online help: <%s>\0A\00", align 1
@.str.17 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.47 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.48 = private unnamed_addr constant [4 x i8] c"en_\00", align 1
@.str.49 = private unnamed_addr constant [71 x i8] c"Report any translation bugs to <https://translationproject.org/team/>\0A\00", align 1
@.str.50 = private unnamed_addr constant [27 x i8] c"Full documentation <%s%s>\0A\00", align 1
@.str.51 = private unnamed_addr constant [51 x i8] c"or available locally via: info '(coreutils) %s%s'\0A\00", align 1
@.str.52 = private unnamed_addr constant [12 x i8] c" invocation\00", align 1
@.str.10 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.38 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.39 = private unnamed_addr constant [16 x i8] c"test invocation\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"coreutils\00", align 1
@.str.40 = private unnamed_addr constant [22 x i8] c"Multi-call invocation\00", align 1
@.str.41 = private unnamed_addr constant [10 x i8] c"sha224sum\00", align 1
@.str.42 = private unnamed_addr constant [15 x i8] c"sha2 utilities\00", align 1
@.str.43 = private unnamed_addr constant [10 x i8] c"sha256sum\00", align 1
@.str.44 = private unnamed_addr constant [10 x i8] c"sha384sum\00", align 1
@.str.45 = private unnamed_addr constant [10 x i8] c"sha512sum\00", align 1
@.str.36 = private unnamed_addr constant [221 x i8] c"\0AThe backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.\0AThe version control method may be selected via the --backup option or through\0Athe VERSION_CONTROL environment variable.  Here are the values:\0A\0A\00", align 1
@.str.37 = private unnamed_addr constant [222 x i8] c"  none, off       never make backups (even if --backup is given)\0A  numbered, t     make numbered backups\0A  existing, nil   numbered if numbered backups exist, simple otherwise\0A  simple, never   always make simple backups\0A\00", align 1
@.str.35 = private unnamed_addr constant [75 x i8] c"\0AMandatory arguments to long options are mandatory for short options too.\0A\00", align 1
@selinux_enabled = internal global i32 0, align 4, !dbg !63, !ctir !7
@.str.12 = private unnamed_addr constant [24 x i8] c"/usr/local/share/locale\00", align 1
@owner_name = internal global i8* null, align 8, !dbg !309, !ctir !9
@group_name = internal global i8* null, align 8, !dbg !311, !ctir !9
@strip_files = internal global i8 0, align 1, !dbg !315, !ctir !142
@dir_arg = internal global i8 0, align 1, !dbg !317, !ctir !142
@.str.13 = private unnamed_addr constant [21 x i8] c"bcCsDdg:m:o:pt:TvS:Z\00", align 1
@long_options = internal constant [18 x %struct.option] [%struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.53, i32 0, i32 0), i32 2, i32* null, i32 98 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.54, i32 0, i32 0), i32 0, i32* null, i32 67 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.55, i32 0, i32 0), i32 2, i32* null, i32 90 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.56, i32 0, i32 0), i32 0, i32* null, i32 100 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i32 0, i32 0), i32 1, i32* null, i32 103 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58, i32 0, i32 0), i32 1, i32* null, i32 109 }, %struct.option { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.59, i32 0, i32 0), i32 0, i32* null, i32 84 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i32 0, i32 0), i32 1, i32* null, i32 111 }, %struct.option { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.61, i32 0, i32 0), i32 0, i32* null, i32 112 }, %struct.option { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.62, i32 0, i32 0), i32 0, i32* null, i32 128 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i32 0, i32 0), i32 0, i32* null, i32 115 }, %struct.option { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.64, i32 0, i32 0), i32 1, i32* null, i32 129 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.65, i32 0, i32 0), i32 1, i32* null, i32 83 }, %struct.option { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.66, i32 0, i32 0), i32 1, i32* null, i32 116 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.67, i32 0, i32 0), i32 0, i32* null, i32 118 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i32 0, i32 0), i32 0, i32* null, i32 -130 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.69, i32 0, i32 0), i32 0, i32* null, i32 -131 }, %struct.option zeroinitializer], align 16, !dbg !319, !ctir !185
@optarg = external dso_local global i8*, align 8, !ctir !9
@copy_only_if_needed = internal global i8 0, align 1, !dbg !313, !ctir !142
@strip_program = internal global i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i32 0, i32 0), align 8, !dbg !321, !ctir !180
@.str.14 = private unnamed_addr constant [38 x i8] c"multiple target directories specified\00", align 1
@.str.15 = private unnamed_addr constant [73 x i8] c"WARNING: ignoring --preserve-context; this kernel is not SELinux-enabled\00", align 1
@use_default_selinux_context = internal global i8 1, align 1, !dbg !323, !ctir !142
@.str.16 = private unnamed_addr constant [67 x i8] c"warning: ignoring --context; it requires an SELinux-enabled kernel\00", align 1
@.str.18 = private unnamed_addr constant [16 x i8] c"David MacKenzie\00", align 1
@.str.19 = private unnamed_addr constant [61 x i8] c"the strip option may not be used when installing a directory\00", align 1
@.str.20 = private unnamed_addr constant [57 x i8] c"target directory not allowed when installing a directory\00", align 1
@.str.21 = private unnamed_addr constant [20 x i8] c"failed to access %s\00", align 1
@.str.22 = private unnamed_addr constant [29 x i8] c"target %s is not a directory\00", align 1
@.str.23 = private unnamed_addr constant [12 x i8] c"backup type\00", align 1
@.str.24 = private unnamed_addr constant [42 x i8] c"cannot set target context and preserve it\00", align 1
@.str.25 = private unnamed_addr constant [50 x i8] c"failed to set default file creation context to %s\00", align 1
@optind = external dso_local global i32, align 4, !ctir !7
@.str.26 = private unnamed_addr constant [21 x i8] c"missing file operand\00", align 1
@.str.27 = private unnamed_addr constant [42 x i8] c"missing destination file operand after %s\00", align 1
@.str.28 = private unnamed_addr constant [70 x i8] c"cannot combine --target-directory (-t) and --no-target-directory (-T)\00", align 1
@.str.29 = private unnamed_addr constant [17 x i8] c"extra operand %s\00", align 1
@.str.30 = private unnamed_addr constant [16 x i8] c"invalid mode %s\00", align 1
@mode = internal global i32 493, align 4, !dbg !325, !ctir !139
@dir_mode_bits = internal global i32 4095, align 4, !dbg !327, !ctir !139
@dir_mode = internal global i32 493, align 4, !dbg !329, !ctir !139
@.str.31 = private unnamed_addr constant [72 x i8] c"WARNING: ignoring --strip-program option as -s option was not specified\00", align 1
@.str.32 = private unnamed_addr constant [72 x i8] c"options --compare (-C) and --preserve-timestamps are mutually exclusive\00", align 1
@.str.33 = private unnamed_addr constant [58 x i8] c"options --compare (-C) and --strip are mutually exclusive\00", align 1
@.str.34 = private unnamed_addr constant [86 x i8] c"the --compare (-C) option is ignored when you specify a mode with non-permission bits\00", align 1
@.str.75 = private unnamed_addr constant [27 x i8] c"cannot create directory %s\00", align 1
@.str.73 = private unnamed_addr constant [46 x i8] c"failed to set default creation context for %s\00", align 1
@.str.74 = private unnamed_addr constant [22 x i8] c"creating directory %s\00", align 1
@.str.76 = private unnamed_addr constant [15 x i8] c"cannot stat %s\00", align 1
@.str.77 = private unnamed_addr constant [17 x i8] c"cannot unlink %s\00", align 1
@owner_id = internal global i32 0, align 4, !dbg !331, !ctir !127
@group_id = internal global i32 0, align 4, !dbg !333, !ctir !129
@.str.83 = private unnamed_addr constant [30 x i8] c"cannot change ownership of %s\00", align 1
@.str.84 = private unnamed_addr constant [32 x i8] c"cannot change permissions of %s\00", align 1
@setdefaultfilecon.first_call = internal global i8 1, align 1, !dbg !343
@.str.85 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.86 = private unnamed_addr constant [9 x i8] c"<<none>>\00", align 1
@.str.87 = private unnamed_addr constant [44 x i8] c"warning: %s: failed to change context to %s\00", align 1
@.str.82 = private unnamed_addr constant [29 x i8] c"cannot set timestamps for %s\00", align 1
@.str.78 = private unnamed_addr constant [24 x i8] c"fork system call failed\00", align 1
@.str.79 = private unnamed_addr constant [14 x i8] c"cannot run %s\00", align 1
@.str.80 = private unnamed_addr constant [18 x i8] c"waiting for strip\00", align 1
@.str.81 = private unnamed_addr constant [36 x i8] c"strip process terminated abnormally\00", align 1
@have_same_content.a_buff = internal global [4096 x i8] zeroinitializer, align 16, !dbg !335
@have_same_content.b_buff = internal global [4096 x i8] zeroinitializer, align 16, !dbg !341
@.str.72 = private unnamed_addr constant [33 x i8] c"failed to restore context for %s\00", align 1
@.str.70 = private unnamed_addr constant [16 x i8] c"invalid user %s\00", align 1
@.str.71 = private unnamed_addr constant [17 x i8] c"invalid group %s\00", align 1
@.str.63 = private unnamed_addr constant [6 x i8] c"strip\00", align 1
@.str.53 = private unnamed_addr constant [7 x i8] c"backup\00", align 1
@.str.54 = private unnamed_addr constant [8 x i8] c"compare\00", align 1
@.str.55 = private unnamed_addr constant [8 x i8] c"context\00", align 1
@.str.56 = private unnamed_addr constant [10 x i8] c"directory\00", align 1
@.str.57 = private unnamed_addr constant [6 x i8] c"group\00", align 1
@.str.58 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@.str.59 = private unnamed_addr constant [20 x i8] c"no-target-directory\00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c"owner\00", align 1
@.str.61 = private unnamed_addr constant [20 x i8] c"preserve-timestamps\00", align 1
@.str.62 = private unnamed_addr constant [17 x i8] c"preserve-context\00", align 1
@.str.64 = private unnamed_addr constant [14 x i8] c"strip-program\00", align 1
@.str.65 = private unnamed_addr constant [7 x i8] c"suffix\00", align 1
@.str.66 = private unnamed_addr constant [17 x i8] c"target-directory\00", align 1
@.str.67 = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@.str.68 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.69 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.88 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.89 = private unnamed_addr constant [50 x i8] c"failed to set default file creation context to %s\00", align 1
@.str.1.90 = private unnamed_addr constant [37 x i8] c"failed to get security context of %s\00", align 1
@.str.2.93 = private unnamed_addr constant [51 x i8] c"failed to set default file creation context for %s\00", align 1
@.str.3.95 = private unnamed_addr constant [41 x i8] c"failed to set the security context of %s\00", align 1
@.str.4.100 = private unnamed_addr constant [24 x i8] c"valid_options (options)\00", align 1
@.str.5.101 = private unnamed_addr constant [11 x i8] c"src/copy.c\00", align 1
@__PRETTY_FUNCTION__.copy = private unnamed_addr constant [91 x i8] c"_Bool copy(const char *, const char *, _Bool, const struct cp_options *, _Bool *, _Bool *)\00", align 1
@top_level_src_name = internal global i8* null, align 8, !dbg !346, !ctir !180
@top_level_dst_name = internal global i8* null, align 8, !dbg !602, !ctir !180
@.str.12.102 = private unnamed_addr constant [15 x i8] c"cannot stat %s\00", align 1
@.str.13.103 = private unnamed_addr constant [40 x i8] c"-r not specified; omitting directory %s\00", align 1
@.str.14.104 = private unnamed_addr constant [22 x i8] c"omitting directory %s\00", align 1
@.str.15.105 = private unnamed_addr constant [49 x i8] c"warning: source file %s specified more than once\00", align 1
@.str.16.106 = private unnamed_addr constant [28 x i8] c"%s and %s are the same file\00", align 1
@.str.17.107 = private unnamed_addr constant [52 x i8] c"cannot overwrite non-directory %s with directory %s\00", align 1
@.str.18.108 = private unnamed_addr constant [43 x i8] c"will not overwrite just-created %s with %s\00", align 1
@.str.19.109 = private unnamed_addr constant [49 x i8] c"cannot overwrite directory %s with non-directory\00", align 1
@.str.20.110 = private unnamed_addr constant [51 x i8] c"cannot move directory onto non-directory: %s -> %s\00", align 1
@.str.21.111 = private unnamed_addr constant [50 x i8] c"backing up %s might destroy source;  %s not moved\00", align 1
@.str.22.112 = private unnamed_addr constant [51 x i8] c"backing up %s might destroy source;  %s not copied\00", align 1
@.str.23.113 = private unnamed_addr constant [17 x i8] c"cannot backup %s\00", align 1
@.str.24.114 = private unnamed_addr constant [17 x i8] c"cannot remove %s\00", align 1
@.str.25.115 = private unnamed_addr constant [12 x i8] c"removed %s\0A\00", align 1
@.str.26.116 = private unnamed_addr constant [49 x i8] c"will not copy %s through just-created symlink %s\00", align 1
@.str.27.117 = private unnamed_addr constant [45 x i8] c"cannot copy a directory, %s, into itself, %s\00", align 1
@.str.28.118 = private unnamed_addr constant [54 x i8] c"warning: source directory %s specified more than once\00", align 1
@.str.29.119 = private unnamed_addr constant [45 x i8] c"will not create hard link %s to directory %s\00", align 1
@.str.30.120 = private unnamed_addr constant [9 x i8] c"renamed \00", align 1
@.str.31.121 = private unnamed_addr constant [47 x i8] c"cannot move %s to a subdirectory of itself, %s\00", align 1
@.str.32.122 = private unnamed_addr constant [21 x i8] c"cannot move %s to %s\00", align 1
@.str.33.123 = private unnamed_addr constant [60 x i8] c"inter-device move failed: %s to %s; unable to remove target\00", align 1
@.str.34.124 = private unnamed_addr constant [8 x i8] c"copied \00", align 1
@.str.35.125 = private unnamed_addr constant [36 x i8] c"cannot copy cyclic symbolic link %s\00", align 1
@.str.36.126 = private unnamed_addr constant [27 x i8] c"cannot create directory %s\00", align 1
@.str.37.127 = private unnamed_addr constant [27 x i8] c"setting permissions for %s\00", align 1
@.str.38.128 = private unnamed_addr constant [22 x i8] c"created directory %s\0A\00", align 1
@.str.39.129 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.40.130 = private unnamed_addr constant [63 x i8] c"%s: can make relative symbolic links only in current directory\00", align 1
@.str.41.131 = private unnamed_addr constant [37 x i8] c"cannot create symbolic link %s to %s\00", align 1
@.str.42.132 = private unnamed_addr constant [22 x i8] c"cannot create fifo %s\00", align 1
@.str.43.133 = private unnamed_addr constant [30 x i8] c"cannot create special file %s\00", align 1
@.str.44.134 = private unnamed_addr constant [29 x i8] c"cannot read symbolic link %s\00", align 1
@.str.45.135 = private unnamed_addr constant [31 x i8] c"cannot create symbolic link %s\00", align 1
@.str.46.136 = private unnamed_addr constant [36 x i8] c"failed to preserve ownership for %s\00", align 1
@.str.47.137 = private unnamed_addr constant [25 x i8] c"%s has unknown file type\00", align 1
@.str.48.138 = private unnamed_addr constant [24 x i8] c"preserving times for %s\00", align 1
@.str.49.139 = private unnamed_addr constant [30 x i8] c"preserving permissions for %s\00", align 1
@.str.50.140 = private unnamed_addr constant [20 x i8] c"cannot un-backup %s\00", align 1
@.str.51.141 = private unnamed_addr constant [21 x i8] c"%s -> %s (unbackup)\0A\00", align 1
@cached_umask.mask = internal global i32 -1, align 4, !dbg !599
@.str.77.142 = private unnamed_addr constant [17 x i8] c"security.selinux\00", align 1
@.str.76.143 = private unnamed_addr constant [28 x i8] c"clearing permissions for %s\00", align 1
@.str.75.144 = private unnamed_addr constant [52 x i8] c"failed to restore the default file creation context\00", align 1
@.str.60.145 = private unnamed_addr constant [27 x i8] c"cannot open %s for reading\00", align 1
@.str.61.146 = private unnamed_addr constant [16 x i8] c"cannot fstat %s\00", align 1
@.str.62.147 = private unnamed_addr constant [56 x i8] c"skipping file %s, as it was replaced while being copied\00", align 1
@.str.63.148 = private unnamed_addr constant [40 x i8] c"not writing through dangling symlink %s\00", align 1
@.str.64.149 = private unnamed_addr constant [30 x i8] c"cannot create regular file %s\00", align 1
@.str.65.150 = private unnamed_addr constant [27 x i8] c"failed to clone %s from %s\00", align 1
@.str.66.151 = private unnamed_addr constant [20 x i8] c"failed to extend %s\00", align 1
@.str.67.152 = private unnamed_addr constant [19 x i8] c"failed to close %s\00", align 1
@.str.72.153 = private unnamed_addr constant [17 x i8] c"error reading %s\00", align 1
@.str.73.154 = private unnamed_addr constant [17 x i8] c"error writing %s\00", align 1
@.str.74.155 = private unnamed_addr constant [20 x i8] c"overflow reading %s\00", align 1
@.str.69.156 = private unnamed_addr constant [16 x i8] c"cannot lseek %s\00", align 1
@.str.71.157 = private unnamed_addr constant [22 x i8] c"error deallocating %s\00", align 1
@.str.68.158 = private unnamed_addr constant [31 x i8] c"%s: failed to get extents info\00", align 1
@.str.70.159 = private unnamed_addr constant [17 x i8] c"%s: write failed\00", align 1
@write_zeros.zeros = internal global i8* null, align 8, !dbg !604
@write_zeros.nz = internal global i64 131072, align 8, !dbg !607
@write_zeros.fallback = internal global [1024 x i8] zeroinitializer, align 16, !dbg !609
@.str.59.160 = private unnamed_addr constant [17 x i8] c"cannot access %s\00", align 1
@.str.57.161 = private unnamed_addr constant [9 x i8] c"%s -> %s\00", align 1
@.str.58.162 = private unnamed_addr constant [14 x i8] c" (backup: %s)\00", align 1
@.str.54.163 = private unnamed_addr constant [45 x i8] c"%s: replace %s, overriding mode %04lo (%s)? \00", align 1
@.str.55.164 = private unnamed_addr constant [49 x i8] c"%s: unwritable %s (mode %04lo, %s); try anyway? \00", align 1
@.str.56.165 = private unnamed_addr constant [19 x i8] c"%s: overwrite %s? \00", align 1
@.str.53.166 = private unnamed_addr constant [13 x i8] c"x->move_mode\00", align 1
@__PRETTY_FUNCTION__.abandon_move = private unnamed_addr constant [81 x i8] c"_Bool abandon_move(const struct cp_options *, const char *, const struct stat *)\00", align 1
@.str.52.167 = private unnamed_addr constant [33 x i8] c"cannot create hard link %s to %s\00", align 1
@.str.6.168 = private unnamed_addr constant [11 x i8] c"co != NULL\00", align 1
@__PRETTY_FUNCTION__.valid_options = private unnamed_addr constant [47 x i8] c"_Bool valid_options(const struct cp_options *)\00", align 1
@.str.7.169 = private unnamed_addr constant [36 x i8] c"VALID_BACKUP_TYPE (co->backup_type)\00", align 1
@.str.8.170 = private unnamed_addr constant [36 x i8] c"VALID_SPARSE_MODE (co->sparse_mode)\00", align 1
@.str.9.171 = private unnamed_addr constant [38 x i8] c"VALID_REFLINK_MODE (co->reflink_mode)\00", align 1
@.str.10.172 = private unnamed_addr constant [38 x i8] c"!(co->hard_link && co->symbolic_link)\00", align 1
@.str.11.173 = private unnamed_addr constant [73 x i8] c"! (co->reflink_mode == REFLINK_ALWAYS && co->sparse_mode != SPARSE_AUTO)\00", align 1
@src_to_dest = internal global %struct.hash_table* null, align 8, !dbg !614, !ctir !175
@.str.188 = private unnamed_addr constant [55 x i8] c"scan->ei_count <= SIZE_MAX - fiemap->fm_mapped_extents\00", align 1
@.str.1.189 = private unnamed_addr constant [18 x i8] c"src/extent-scan.c\00", align 1
@__PRETTY_FUNCTION__.extent_scan_read = private unnamed_addr constant [45 x i8] c"_Bool extent_scan_read(struct extent_scan *)\00", align 1
@.str.2.190 = private unnamed_addr constant [64 x i8] c"fm_extents[i].fe_logical <= OFF_T_MAX - fm_extents[i].fe_length\00", align 1
@simple_pattern = internal constant [9 x i8] c"CuXXXXXX\00", align 1, !dbg !640, !ctir !655
@Version = dso_local global i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.197, i32 0, i32 0), align 8, !dbg !673, !ctir !180
@.str.197 = private unnamed_addr constant [15 x i8] c"8.31.48-f2dfea\00", align 1
@.str.200 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.1.201 = private unnamed_addr constant [30 x i8] c"preserving permissions for %s\00", align 1
@.str.204 = private unnamed_addr constant [27 x i8] c"setting permissions for %s\00", align 1
@simple_backup_suffix = dso_local global i8* null, align 8, !dbg !679, !ctir !180
@.str.211 = private unnamed_addr constant [21 x i8] c"SIMPLE_BACKUP_SUFFIX\00", align 1
@.str.1.212 = private unnamed_addr constant [2 x i8] c"~\00", align 1
@.str.2.213 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.3.214 = private unnamed_addr constant [5 x i8] c".~1~\00", align 1
@backup_args = internal constant [9 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.217, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3.218, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4.219, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.220, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6.221, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7.222, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8.223, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.224, i32 0, i32 0), i8* null], align 16, !dbg !716, !ctir !730
@backup_types = internal constant [8 x i32] [i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3], align 16, !dbg !736, !ctir !726
@.str.2.217 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.3.218 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@.str.4.219 = private unnamed_addr constant [7 x i8] c"simple\00", align 1
@.str.5.220 = private unnamed_addr constant [6 x i8] c"never\00", align 1
@.str.6.221 = private unnamed_addr constant [9 x i8] c"existing\00", align 1
@.str.7.222 = private unnamed_addr constant [4 x i8] c"nil\00", align 1
@.str.8.223 = private unnamed_addr constant [9 x i8] c"numbered\00", align 1
@.str.9.224 = private unnamed_addr constant [2 x i8] c"t\00", align 1
@.str.1.227 = private unnamed_addr constant [16 x i8] c"VERSION_CONTROL\00", align 1
@.str.228 = private unnamed_addr constant [17 x i8] c"$VERSION_CONTROL\00", align 1
@file_name = internal global i8* null, align 8, !dbg !739, !ctir !180
@stdin = external dso_local global %struct._IO_FILE*, align 8, !ctir !744
@.str.233 = private unnamed_addr constant [19 x i8] c"error closing file\00", align 1
@.str.1.234 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.235 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@file_name.236 = internal global i8* null, align 8, !dbg !781, !ctir !180
@ignore_EPIPE = internal global i8 0, align 1, !dbg !823, !ctir !142
@.str.239 = private unnamed_addr constant [12 x i8] c"write error\00", align 1
@.str.1.240 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.241 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@exit_failure = dso_local global i32 1, align 4, !dbg !826, !ctir !778
@.str.270 = private unnamed_addr constant [24 x i8] c"# entries:         %lu\0A\00", align 1
@.str.1.271 = private unnamed_addr constant [24 x i8] c"# buckets:         %lu\0A\00", align 1
@.str.2.272 = private unnamed_addr constant [33 x i8] c"# buckets used:    %lu (%.2f%%)\0A\00", align 1
@.str.3.273 = private unnamed_addr constant [24 x i8] c"max bucket length: %lu\0A\00", align 1
@default_tuning = internal constant %struct.hash_tuning { float 0.000000e+00, float 1.000000e+00, float 0x3FE99999A0000000, float 0x3FF69FBE80000000, i8 0 }, align 4, !dbg !833, !ctir !860
@.str.296 = private unnamed_addr constant [15 x i8] c"cannot stat %s\00", align 1
@.str.1.297 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.2.298 = private unnamed_addr constant [32 x i8] c"cannot change permissions of %s\00", align 1
@.str.3.299 = private unnamed_addr constant [42 x i8] c"cannot change owner and permissions of %s\00", align 1
@.str.4.300 = private unnamed_addr constant [27 x i8] c"cannot create directory %s\00", align 1
@program_name = dso_local global i8* null, align 8, !dbg !968, !ctir !180
@.str.311 = private unnamed_addr constant [56 x i8] c"A NULL argv[0] was passed through an exec system call.\0A\00", align 1
@.str.1.312 = private unnamed_addr constant [8 x i8] c"/.libs/\00", align 1
@.str.2.313 = private unnamed_addr constant [4 x i8] c"lt-\00", align 1
@program_invocation_short_name = external dso_local global i8*, align 8, !ctir !9
@program_invocation_name = external dso_local global i8*, align 8, !ctir !9
@quoting_style_args = dso_local constant [11 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.318, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.319, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.320, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.321, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.322, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.323, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.324, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.325, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8.326, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9.327, i32 0, i32 0), i8* null], align 16, !dbg !1009, !ctir !1029
@.str.318 = private unnamed_addr constant [8 x i8] c"literal\00", align 1
@.str.1.319 = private unnamed_addr constant [6 x i8] c"shell\00", align 1
@.str.2.320 = private unnamed_addr constant [13 x i8] c"shell-always\00", align 1
@.str.3.321 = private unnamed_addr constant [13 x i8] c"shell-escape\00", align 1
@.str.4.322 = private unnamed_addr constant [20 x i8] c"shell-escape-always\00", align 1
@.str.5.323 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.6.324 = private unnamed_addr constant [8 x i8] c"c-maybe\00", align 1
@.str.7.325 = private unnamed_addr constant [7 x i8] c"escape\00", align 1
@.str.8.326 = private unnamed_addr constant [7 x i8] c"locale\00", align 1
@.str.9.327 = private unnamed_addr constant [8 x i8] c"clocale\00", align 1
@quoting_style_vals = dso_local constant [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9], align 16, !dbg !1135, !ctir !1032
@quote_quoting_options = dso_local global %struct.quoting_options { i32 8, i32 0, [8 x i32] zeroinitializer, i8* null, i8* null }, align 8, !dbg !1137, !ctir !1039
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 8, !dbg !1139, !ctir !1039
@.str.10.328 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.11.329 = private unnamed_addr constant [2 x i8] c"`\00", align 1
@.str.12.330 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.13.331 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.14.332 = private unnamed_addr constant [4 x i8] c"\E2\80\98\00", align 1
@.str.15.333 = private unnamed_addr constant [4 x i8] c"\E2\80\99\00", align 1
@.str.16.334 = private unnamed_addr constant [8 x i8] c"GB18030\00", align 1
@.str.17.335 = private unnamed_addr constant [4 x i8] c"\A1\07e\00", align 1
@.str.18.336 = private unnamed_addr constant [3 x i8] c"\A1\AF\00", align 1
@slotvec = internal global %struct.slotvec* @slotvec0, align 8, !dbg !1143, !ctir !1067
@nslots = internal global i32 1, align 4, !dbg !1145, !ctir !7
@slot0 = internal global [256 x i8] zeroinitializer, align 16, !dbg !1141, !ctir !647
@slotvec0 = internal global %struct.slotvec { i64 256, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0) }, align 8, !dbg !1147, !ctir !1068
@.str.357 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@comparison_function_table = internal constant [3 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* null, i32 (i8*, i8*)* @direntry_cmp_name, i32 (i8*, i8*)* @direntry_cmp_inode], align 16, !dbg !1149, !ctir !1176
@.str.366 = private unnamed_addr constant [19 x i8] c"wd->val.child == 0\00", align 1
@.str.1.367 = private unnamed_addr constant [13 x i8] c"lib/savewd.c\00", align 1
@__PRETTY_FUNCTION__.savewd_chdir = private unnamed_addr constant [60 x i8] c"int savewd_chdir(struct savewd *, const char *, int, int *)\00", align 1
@.str.2.368 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.5.369 = private unnamed_addr constant [2 x i8] c".\00", align 1
@__PRETTY_FUNCTION__.savewd_save = private unnamed_addr constant [35 x i8] c"_Bool savewd_save(struct savewd *)\00", align 1
@.str.3.372 = private unnamed_addr constant [28 x i8] c"(*__errno_location ()) == 4\00", align 1
@__PRETTY_FUNCTION__.savewd_restore = private unnamed_addr constant [41 x i8] c"int savewd_restore(struct savewd *, int)\00", align 1
@.str.4.375 = private unnamed_addr constant [18 x i8] c"wd->val.child < 0\00", align 1
@__PRETTY_FUNCTION__.savewd_finish = private unnamed_addr constant [36 x i8] c"void savewd_finish(struct savewd *)\00", align 1
@letters = internal constant [63 x i8] c"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\00", align 16, !dbg !1192, !ctir !1203
@.str.2.398 = private unnamed_addr constant [2 x i8] c"X\00", align 1
@.str.399 = private unnamed_addr constant [35 x i8] c"! \22invalid KIND in __gen_tempname\22\00", align 1
@.str.1.400 = private unnamed_addr constant [15 x i8] c"lib/tempname.c\00", align 1
@__PRETTY_FUNCTION__.gen_tempname_len = private unnamed_addr constant [52 x i8] c"int gen_tempname_len(char *, int, int, int, size_t)\00", align 1
@utimecmpat.ht = internal global %struct.hash_table* null, align 8, !dbg !1216
@utimecmpat.new_dst_res = internal global %struct.fs_res* null, align 8, !dbg !1262
@utimensat_works_really = internal global i32 0, align 4, !dbg !1264, !ctir !7
@lutimensat_works_really = internal global i32 0, align 4, !dbg !1314, !ctir !7
@.str.413 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.1.414 = private unnamed_addr constant [32 x i8] c"unable to display error message\00", align 1
@.str.415 = private unnamed_addr constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str.1.416 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.2.417 = private unnamed_addr constant [4 x i8] c"(C)\00", align 1
@.str.3.418 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4.419 = private unnamed_addr constant [171 x i8] c"License GPLv3+: GNU GPL version 3 or later <%s>.\0AThis is free software: you are free to change and redistribute it.\0AThere is NO WARRANTY, to the extent permitted by law.\0A\00", align 1
@.str.5.420 = private unnamed_addr constant [34 x i8] c"https://gnu.org/licenses/gpl.html\00", align 1
@.str.6.421 = private unnamed_addr constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str.7.422 = private unnamed_addr constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str.8.423 = private unnamed_addr constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str.9.424 = private unnamed_addr constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.10.425 = private unnamed_addr constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.11.426 = private unnamed_addr constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 1
@.str.12.427 = private unnamed_addr constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 1
@.str.13.428 = private unnamed_addr constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.14.429 = private unnamed_addr constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.15.430 = private unnamed_addr constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 1
@.str.16.433 = private unnamed_addr constant [20 x i8] c"Report bugs to: %s\0A\00", align 1
@.str.17.434 = private unnamed_addr constant [22 x i8] c"bug-coreutils@gnu.org\00", align 1
@.str.18.435 = private unnamed_addr constant [20 x i8] c"%s home page: <%s>\0A\00", align 1
@.str.19.436 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.20.437 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.21.438 = private unnamed_addr constant [39 x i8] c"General help using GNU software: <%s>\0A\00", align 1
@.str.22.439 = private unnamed_addr constant [29 x i8] c"https://www.gnu.org/gethelp/\00", align 1
@version_etc_copyright = dso_local constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 16, !dbg !1317, !ctir !1322
@can_write_any_file.initialized = internal global i8 0, align 1, !dbg !1327
@can_write_any_file.can_write = internal global i8 0, align 1, !dbg !1337
@.str.1.462 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.463 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.466 = private unnamed_addr constant [38 x i8] c"0 <= strtol_base && strtol_base <= 36\00", align 1
@.str.1.467 = private unnamed_addr constant [16 x i8] c"./lib/xstrtol.c\00", align 1
@__PRETTY_FUNCTION__.xstrtoul = private unnamed_addr constant [81 x i8] c"strtol_error xstrtoul(const char *, char **, int, unsigned long *, const char *)\00", align 1
@argmatch_die = dso_local global void ()* @__argmatch_die, align 8, !dbg !1339, !ctir !732
@.str.488 = private unnamed_addr constant [27 x i8] c"invalid argument %s for %s\00", align 1
@.str.1.489 = private unnamed_addr constant [29 x i8] c"ambiguous argument %s for %s\00", align 1
@.str.2.490 = private unnamed_addr constant [21 x i8] c"Valid arguments are:\00", align 1
@.str.3.491 = private unnamed_addr constant [8 x i8] c"\0A  - %s\00", align 1
@.str.4.492 = private unnamed_addr constant [5 x i8] c", %s\00", align 1
@.str.507 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.1.508 = private unnamed_addr constant [6 x i8] c"POSIX\00", align 1
@.str.513 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.514 = private unnamed_addr constant [6 x i8] c"ASCII\00", align 1
@.str.527 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.3.528 = private unnamed_addr constant [13 x i8] c"/dev/urandom\00", align 1
@.str.1.529 = private unnamed_addr constant [16 x i8] c"%s: end of file\00", align 1
@.str.2.530 = private unnamed_addr constant [15 x i8] c"%s: read error\00", align 1
@rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec = internal global i32 0, align 4, !dbg !1391

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @usage(i32 %status) #0 !dbg !2634 !ctir !125 {
entry:
  %status.addr = alloca i32, align 4
  store i32 %status, i32* %status.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !2639, metadata !DIExpression()), !dbg !2640
  %0 = load i32, i32* %status.addr, align 4, !dbg !2641, !tbaa !2635
  %cmp = icmp ne i32 %0, 0, !dbg !2643
  br i1 %cmp, label %if.then, label %if.else, !dbg !2644

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !2645

do.body:                                          ; preds = %if.then
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2646, !tbaa !2648
  %call = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0)) #9, !dbg !2646
  %2 = load i8*, i8** @program_name, align 8, !dbg !2646, !tbaa !2648
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* %call, i8* %2), !dbg !2646
  br label %do.end, !dbg !2646

do.end:                                           ; preds = %do.body
  br label %if.end, !dbg !2646

if.else:                                          ; preds = %entry
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([165 x i8], [165 x i8]* @.str.1, i64 0, i64 0)) #9, !dbg !2650
  %3 = load i8*, i8** @program_name, align 8, !dbg !2652, !tbaa !2648
  %4 = load i8*, i8** @program_name, align 8, !dbg !2653, !tbaa !2648
  %5 = load i8*, i8** @program_name, align 8, !dbg !2654, !tbaa !2648
  %6 = load i8*, i8** @program_name, align 8, !dbg !2655, !tbaa !2648
  %call3 = call i32 (i8*, ...) @printf(i8* %call2, i8* %3, i8* %4, i8* %5, i8* %6), !dbg !2656
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([465 x i8], [465 x i8]* @.str.2, i64 0, i64 0)) #9, !dbg !2657
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2657, !tbaa !2648
  %call5 = call i32 @fputs_unlocked(i8* %call4, %struct._IO_FILE* %7), !dbg !2657
  call void @emit_mandatory_arg_note(), !dbg !2658
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([465 x i8], [465 x i8]* @.str.3, i64 0, i64 0)) #9, !dbg !2659
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2659, !tbaa !2648
  %call7 = call i32 @fputs_unlocked(i8* %call6, %struct._IO_FILE* %8), !dbg !2659
  %call8 = call i8* @gettext(i8* getelementptr inbounds ([401 x i8], [401 x i8]* @.str.4, i64 0, i64 0)) #9, !dbg !2660
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2660, !tbaa !2648
  %call9 = call i32 @fputs_unlocked(i8* %call8, %struct._IO_FILE* %9), !dbg !2660
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([504 x i8], [504 x i8]* @.str.5, i64 0, i64 0)) #9, !dbg !2661
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2661, !tbaa !2648
  %call11 = call i32 @fputs_unlocked(i8* %call10, %struct._IO_FILE* %10), !dbg !2661
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([347 x i8], [347 x i8]* @.str.6, i64 0, i64 0)) #9, !dbg !2662
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2662, !tbaa !2648
  %call13 = call i32 @fputs_unlocked(i8* %call12, %struct._IO_FILE* %11), !dbg !2662
  %call14 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.7, i64 0, i64 0)) #9, !dbg !2663
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2663, !tbaa !2648
  %call15 = call i32 @fputs_unlocked(i8* %call14, %struct._IO_FILE* %12), !dbg !2663
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.8, i64 0, i64 0)) #9, !dbg !2664
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2664, !tbaa !2648
  %call17 = call i32 @fputs_unlocked(i8* %call16, %struct._IO_FILE* %13), !dbg !2664
  call void @emit_backup_suffix_note(), !dbg !2665
  call void @emit_ancillary_info(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0)), !dbg !2666
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  %14 = load i32, i32* %status.addr, align 4, !dbg !2667, !tbaa !2635
  call void @exit(i32 %14) #13, !dbg !2668
  unreachable, !dbg !2668
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare dso_local i8* @gettext(i8*) #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

declare dso_local i32 @printf(i8*, ...) #3

declare dso_local i32 @fputs_unlocked(i8*, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_mandatory_arg_note() #4 !dbg !2669 !ctir !200 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.35, i64 0, i64 0)) #9, !dbg !2670
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2670, !tbaa !2648
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !2670
  ret void, !dbg !2671
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_backup_suffix_note() #4 !dbg !2672 !ctir !200 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([221 x i8], [221 x i8]* @.str.36, i64 0, i64 0)) #9, !dbg !2673
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2673, !tbaa !2648
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !2673
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([222 x i8], [222 x i8]* @.str.37, i64 0, i64 0)) #9, !dbg !2674
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2674, !tbaa !2648
  %call3 = call i32 @fputs_unlocked(i8* %call2, %struct._IO_FILE* %1), !dbg !2674
  ret void, !dbg !2675
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_ancillary_info(i8* %program) #4 !dbg !208 !ctir !202 {
entry:
  %program.addr = alloca i8*, align 8
  %infomap = alloca [7 x %struct.infomap], align 16, !ctir !204
  %node = alloca i8*, align 8, !ctir !180
  %map_prog = alloca %struct.infomap*, align 8, !ctir !215
  %lc_messages = alloca i8*, align 8, !ctir !180
  store i8* %program, i8** %program.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %program.addr, metadata !2676, metadata !DIExpression()), !dbg !2677
  call void @llvm.dbg.declare(metadata [7 x %struct.infomap]* %infomap, metadata !2678, metadata !DIExpression()), !dbg !2679
  %0 = bitcast [7 x %struct.infomap]* %infomap to i8*, !dbg !2679
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 bitcast ([7 x %struct.infomap]* @__const.emit_ancillary_info.infomap to i8*), i64 112, i1 false), !dbg !2679
  call void @llvm.dbg.declare(metadata i8** %node, metadata !2680, metadata !DIExpression()), !dbg !2681
  %1 = load i8*, i8** %program.addr, align 8, !dbg !2682, !tbaa !2648
  store i8* %1, i8** %node, align 8, !dbg !2681, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.infomap** %map_prog, metadata !2683, metadata !DIExpression()), !dbg !2684
  %arraydecay = getelementptr inbounds [7 x %struct.infomap], [7 x %struct.infomap]* %infomap, i64 0, i64 0, !dbg !2685
  store %struct.infomap* %arraydecay, %struct.infomap** %map_prog, align 8, !dbg !2684, !tbaa !2648
  br label %while.cond, !dbg !2686

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !2687, !tbaa !2648
  %program1 = getelementptr inbounds %struct.infomap, %struct.infomap* %2, i32 0, i32 0, !dbg !2688, !ctir !205
  %3 = load i8*, i8** %program1, align 8, !dbg !2688, !tbaa !2689, !ctir !180
  %tobool = icmp ne i8* %3, null, !dbg !2687
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !2691

land.rhs:                                         ; preds = %while.cond
  %4 = load i8*, i8** %program.addr, align 8, !dbg !2692, !tbaa !2648
  %5 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !2692, !tbaa !2648
  %program2 = getelementptr inbounds %struct.infomap, %struct.infomap* %5, i32 0, i32 0, !dbg !2692, !ctir !205
  %6 = load i8*, i8** %program2, align 8, !dbg !2692, !tbaa !2689, !ctir !180
  %call = call i32 @strcmp(i8* %4, i8* %6) #14, !dbg !2692
  %cmp = icmp eq i32 %call, 0, !dbg !2692
  %lnot = xor i1 %cmp, true, !dbg !2693
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %7 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !2694
  br i1 %7, label %while.body, label %while.end, !dbg !2686

while.body:                                       ; preds = %land.end
  %8 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !2695, !tbaa !2648
  %incdec.ptr = getelementptr inbounds %struct.infomap, %struct.infomap* %8, i32 1, !dbg !2695
  store %struct.infomap* %incdec.ptr, %struct.infomap** %map_prog, align 8, !dbg !2695, !tbaa !2648
  br label %while.cond, !dbg !2686, !llvm.loop !2696

while.end:                                        ; preds = %land.end
  %9 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !2697, !tbaa !2648
  %node3 = getelementptr inbounds %struct.infomap, %struct.infomap* %9, i32 0, i32 1, !dbg !2699, !ctir !205
  %10 = load i8*, i8** %node3, align 8, !dbg !2699, !tbaa !2700, !ctir !180
  %tobool4 = icmp ne i8* %10, null, !dbg !2697
  br i1 %tobool4, label %if.then, label %if.end, !dbg !2701

if.then:                                          ; preds = %while.end
  %11 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !2702, !tbaa !2648
  %node5 = getelementptr inbounds %struct.infomap, %struct.infomap* %11, i32 0, i32 1, !dbg !2703, !ctir !205
  %12 = load i8*, i8** %node5, align 8, !dbg !2703, !tbaa !2700, !ctir !180
  store i8* %12, i8** %node, align 8, !dbg !2704, !tbaa !2648
  br label %if.end, !dbg !2705

if.end:                                           ; preds = %if.then, %while.end
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.46, i64 0, i64 0)) #9, !dbg !2706
  %call7 = call i32 (i8*, ...) @printf(i8* %call6, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.47, i64 0, i64 0)), !dbg !2707
  call void @llvm.dbg.declare(metadata i8** %lc_messages, metadata !2708, metadata !DIExpression()), !dbg !2709
  %call8 = call i8* @setlocale(i32 5, i8* null) #9, !dbg !2710
  store i8* %call8, i8** %lc_messages, align 8, !dbg !2709, !tbaa !2648
  %13 = load i8*, i8** %lc_messages, align 8, !dbg !2711, !tbaa !2648
  %tobool9 = icmp ne i8* %13, null, !dbg !2711
  br i1 %tobool9, label %land.lhs.true, label %if.end15, !dbg !2713

land.lhs.true:                                    ; preds = %if.end
  %14 = load i8*, i8** %lc_messages, align 8, !dbg !2714, !tbaa !2648
  %call10 = call i32 @strncmp(i8* %14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i64 0, i64 0), i64 3) #14, !dbg !2714
  %tobool11 = icmp ne i32 %call10, 0, !dbg !2714
  br i1 %tobool11, label %if.then12, label %if.end15, !dbg !2715

if.then12:                                        ; preds = %land.lhs.true
  %call13 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.49, i64 0, i64 0)) #9, !dbg !2716
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2716, !tbaa !2648
  %call14 = call i32 @fputs_unlocked(i8* %call13, %struct._IO_FILE* %15), !dbg !2716
  br label %if.end15, !dbg !2718

if.end15:                                         ; preds = %if.then12, %land.lhs.true, %if.end
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.50, i64 0, i64 0)) #9, !dbg !2719
  %16 = load i8*, i8** %program.addr, align 8, !dbg !2720, !tbaa !2648
  %call17 = call i32 (i8*, ...) @printf(i8* %call16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.47, i64 0, i64 0), i8* %16), !dbg !2721
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.51, i64 0, i64 0)) #9, !dbg !2722
  %17 = load i8*, i8** %node, align 8, !dbg !2723, !tbaa !2648
  %18 = load i8*, i8** %node, align 8, !dbg !2724, !tbaa !2648
  %19 = load i8*, i8** %program.addr, align 8, !dbg !2725, !tbaa !2648
  %cmp19 = icmp eq i8* %18, %19, !dbg !2726
  %20 = zext i1 %cmp19 to i64, !dbg !2724
  %cond = select i1 %cmp19, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.52, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), !dbg !2724
  %call20 = call i32 (i8*, ...) @printf(i8* %call18, i8* %17, i8* %cond), !dbg !2727
  ret void, !dbg !2728
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #7

; Function Attrs: nounwind
declare dso_local i8* @setlocale(i32, i8*) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %argc, i8** %argv) #4 !dbg !2729 !ctir !182 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %optc = alloca i32, align 4, !ctir !7
  %exit_status = alloca i32, align 4, !ctir !7
  %specified_mode = alloca i8*, align 8, !ctir !180
  %make_backups = alloca i8, align 1, !ctir !142
  %backup_suffix = alloca i8*, align 8, !ctir !180
  %version_control_string = alloca i8*, align 8, !ctir !9
  %mkdir_and_install = alloca i8, align 1, !ctir !142
  %x = alloca %struct.cp_options, align 8, !ctir !132
  %target_directory = alloca i8*, align 8, !ctir !180
  %no_target_directory = alloca i8, align 1, !ctir !142
  %n_files = alloca i32, align 4, !ctir !7
  %file = alloca i8**, align 8, !ctir !184
  %strip_program_specified = alloca i8, align 1, !ctir !142
  %scontext = alloca i8*, align 8, !ctir !180
  %st = alloca %struct.stat, align 8, !ctir !270
  %stat_success = alloca i8, align 1, !ctir !142
  %change = alloca %struct.mode_change*, align 8, !ctir !197
  %i = alloca i32, align 4, !ctir !7
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !2730, metadata !DIExpression()), !dbg !2731
  store i8** %argv, i8*** %argv.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !2732, metadata !DIExpression()), !dbg !2733
  call void @llvm.dbg.declare(metadata i32* %optc, metadata !2734, metadata !DIExpression()), !dbg !2735
  call void @llvm.dbg.declare(metadata i32* %exit_status, metadata !2736, metadata !DIExpression()), !dbg !2737
  store i32 0, i32* %exit_status, align 4, !dbg !2737, !tbaa !2635
  call void @llvm.dbg.declare(metadata i8** %specified_mode, metadata !2738, metadata !DIExpression()), !dbg !2739
  store i8* null, i8** %specified_mode, align 8, !dbg !2739, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8* %make_backups, metadata !2740, metadata !DIExpression()), !dbg !2741
  store i8 0, i8* %make_backups, align 1, !dbg !2741, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8** %backup_suffix, metadata !2744, metadata !DIExpression()), !dbg !2745
  store i8* null, i8** %backup_suffix, align 8, !dbg !2745, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %version_control_string, metadata !2746, metadata !DIExpression()), !dbg !2747
  store i8* null, i8** %version_control_string, align 8, !dbg !2747, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8* %mkdir_and_install, metadata !2748, metadata !DIExpression()), !dbg !2749
  store i8 0, i8* %mkdir_and_install, align 1, !dbg !2749, !tbaa !2742
  call void @llvm.dbg.declare(metadata %struct.cp_options* %x, metadata !2750, metadata !DIExpression()), !dbg !2751
  call void @llvm.dbg.declare(metadata i8** %target_directory, metadata !2752, metadata !DIExpression()), !dbg !2753
  store i8* null, i8** %target_directory, align 8, !dbg !2753, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8* %no_target_directory, metadata !2754, metadata !DIExpression()), !dbg !2755
  store i8 0, i8* %no_target_directory, align 1, !dbg !2755, !tbaa !2742
  call void @llvm.dbg.declare(metadata i32* %n_files, metadata !2756, metadata !DIExpression()), !dbg !2757
  call void @llvm.dbg.declare(metadata i8*** %file, metadata !2758, metadata !DIExpression()), !dbg !2759
  call void @llvm.dbg.declare(metadata i8* %strip_program_specified, metadata !2760, metadata !DIExpression()), !dbg !2761
  store i8 0, i8* %strip_program_specified, align 1, !dbg !2761, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8** %scontext, metadata !2762, metadata !DIExpression()), !dbg !2763
  store i8* null, i8** %scontext, align 8, !dbg !2763, !tbaa !2648
  store i32 0, i32* @selinux_enabled, align 4, !dbg !2764, !tbaa !2635
  %0 = load i8**, i8*** %argv.addr, align 8, !dbg !2765, !tbaa !2648
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 0, !dbg !2765, !ctir !184
  %1 = load i8*, i8** %arrayidx, align 8, !dbg !2765, !tbaa !2648
  call void @set_program_name(i8* %1), !dbg !2766
  %call = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0)) #9, !dbg !2767
  %call1 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0)) #9, !dbg !2768
  %call2 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0)) #9, !dbg !2769
  %call3 = call i32 @atexit(void ()* @close_stdin) #9, !dbg !2770
  call void @cp_option_init(%struct.cp_options* %x), !dbg !2771
  store i8* null, i8** @owner_name, align 8, !dbg !2772, !tbaa !2648
  store i8* null, i8** @group_name, align 8, !dbg !2773, !tbaa !2648
  store i8 0, i8* @strip_files, align 1, !dbg !2774, !tbaa !2742
  store i8 0, i8* @dir_arg, align 1, !dbg !2775, !tbaa !2742
  %call4 = call i32 @umask(i32 0) #9, !dbg !2776
  br label %while.cond, !dbg !2777

while.cond:                                       ; preds = %sw.epilog, %entry
  %2 = load i32, i32* %argc.addr, align 4, !dbg !2778, !tbaa !2635
  %3 = load i8**, i8*** %argv.addr, align 8, !dbg !2779, !tbaa !2648
  %call5 = call i32 @getopt_long(i32 %2, i8** %3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i64 0, i64 0), %struct.option* getelementptr inbounds ([18 x %struct.option], [18 x %struct.option]* @long_options, i64 0, i64 0), i32* null) #9, !dbg !2780
  store i32 %call5, i32* %optc, align 4, !dbg !2781, !tbaa !2635
  %cmp = icmp ne i32 %call5, -1, !dbg !2782
  br i1 %cmp, label %while.body, label %while.end, !dbg !2777

while.body:                                       ; preds = %while.cond
  %4 = load i32, i32* %optc, align 4, !dbg !2783, !tbaa !2635
  switch i32 %4, label %sw.default [
    i32 98, label %sw.bb
    i32 99, label %sw.bb6
    i32 67, label %sw.bb7
    i32 115, label %sw.bb8
    i32 129, label %sw.bb10
    i32 100, label %sw.bb12
    i32 68, label %sw.bb13
    i32 118, label %sw.bb14
    i32 103, label %sw.bb15
    i32 109, label %sw.bb16
    i32 111, label %sw.bb17
    i32 112, label %sw.bb18
    i32 83, label %sw.bb19
    i32 116, label %sw.bb20
    i32 84, label %sw.bb25
    i32 128, label %sw.bb26
    i32 90, label %sw.bb31
    i32 -130, label %sw.bb43
    i32 -131, label %sw.bb44
  ], !dbg !2785

sw.bb:                                            ; preds = %while.body
  store i8 1, i8* %make_backups, align 1, !dbg !2786, !tbaa !2742
  %5 = load i8*, i8** @optarg, align 8, !dbg !2788, !tbaa !2648
  %tobool = icmp ne i8* %5, null, !dbg !2788
  br i1 %tobool, label %if.then, label %if.end, !dbg !2790

if.then:                                          ; preds = %sw.bb
  %6 = load i8*, i8** @optarg, align 8, !dbg !2791, !tbaa !2648
  store i8* %6, i8** %version_control_string, align 8, !dbg !2792, !tbaa !2648
  br label %if.end, !dbg !2793

if.end:                                           ; preds = %if.then, %sw.bb
  br label %sw.epilog, !dbg !2794

sw.bb6:                                           ; preds = %while.body
  br label %sw.epilog, !dbg !2795

sw.bb7:                                           ; preds = %while.body
  store i8 1, i8* @copy_only_if_needed, align 1, !dbg !2796, !tbaa !2742
  br label %sw.epilog, !dbg !2797

sw.bb8:                                           ; preds = %while.body
  store i8 1, i8* @strip_files, align 1, !dbg !2798, !tbaa !2742
  %call9 = call void (i32)* @signal(i32 17, void (i32)* null) #9, !dbg !2799
  br label %sw.epilog, !dbg !2800

sw.bb10:                                          ; preds = %while.body
  %7 = load i8*, i8** @optarg, align 8, !dbg !2801, !tbaa !2648
  %call11 = call noalias i8* @xstrdup(i8* %7), !dbg !2802
  store i8* %call11, i8** @strip_program, align 8, !dbg !2803, !tbaa !2648
  store i8 1, i8* %strip_program_specified, align 1, !dbg !2804, !tbaa !2742
  br label %sw.epilog, !dbg !2805

sw.bb12:                                          ; preds = %while.body
  store i8 1, i8* @dir_arg, align 1, !dbg !2806, !tbaa !2742
  br label %sw.epilog, !dbg !2807

sw.bb13:                                          ; preds = %while.body
  store i8 1, i8* %mkdir_and_install, align 1, !dbg !2808, !tbaa !2742
  br label %sw.epilog, !dbg !2809

sw.bb14:                                          ; preds = %while.body
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 31, !dbg !2810, !ctir !132
  store i8 1, i8* %verbose, align 2, !dbg !2811, !tbaa !2812, !ctir !142
  br label %sw.epilog, !dbg !2814

sw.bb15:                                          ; preds = %while.body
  %8 = load i8*, i8** @optarg, align 8, !dbg !2815, !tbaa !2648
  store i8* %8, i8** @group_name, align 8, !dbg !2816, !tbaa !2648
  br label %sw.epilog, !dbg !2817

sw.bb16:                                          ; preds = %while.body
  %9 = load i8*, i8** @optarg, align 8, !dbg !2818, !tbaa !2648
  store i8* %9, i8** %specified_mode, align 8, !dbg !2819, !tbaa !2648
  br label %sw.epilog, !dbg !2820

sw.bb17:                                          ; preds = %while.body
  %10 = load i8*, i8** @optarg, align 8, !dbg !2821, !tbaa !2648
  store i8* %10, i8** @owner_name, align 8, !dbg !2822, !tbaa !2648
  br label %sw.epilog, !dbg !2823

sw.bb18:                                          ; preds = %while.body
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 16, !dbg !2824, !ctir !132
  store i8 1, i8* %preserve_timestamps, align 1, !dbg !2825, !tbaa !2826, !ctir !142
  br label %sw.epilog, !dbg !2827

sw.bb19:                                          ; preds = %while.body
  store i8 1, i8* %make_backups, align 1, !dbg !2828, !tbaa !2742
  %11 = load i8*, i8** @optarg, align 8, !dbg !2829, !tbaa !2648
  store i8* %11, i8** %backup_suffix, align 8, !dbg !2830, !tbaa !2648
  br label %sw.epilog, !dbg !2831

sw.bb20:                                          ; preds = %while.body
  %12 = load i8*, i8** %target_directory, align 8, !dbg !2832, !tbaa !2648
  %tobool21 = icmp ne i8* %12, null, !dbg !2832
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !2834

if.then22:                                        ; preds = %sw.bb20
  %call23 = call i8* @gettext(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.14, i64 0, i64 0)) #9, !dbg !2835
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call23), !dbg !2835
  unreachable, !dbg !2835

if.end24:                                         ; preds = %sw.bb20
  %13 = load i8*, i8** @optarg, align 8, !dbg !2836, !tbaa !2648
  store i8* %13, i8** %target_directory, align 8, !dbg !2837, !tbaa !2648
  br label %sw.epilog, !dbg !2838

sw.bb25:                                          ; preds = %while.body
  store i8 1, i8* %no_target_directory, align 1, !dbg !2839, !tbaa !2742
  br label %sw.epilog, !dbg !2840

sw.bb26:                                          ; preds = %while.body
  %14 = load i32, i32* @selinux_enabled, align 4, !dbg !2841, !tbaa !2635
  %tobool27 = icmp ne i32 %14, 0, !dbg !2841
  br i1 %tobool27, label %if.end30, label %if.then28, !dbg !2843

if.then28:                                        ; preds = %sw.bb26
  %call29 = call i8* @gettext(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.15, i64 0, i64 0)) #9, !dbg !2844
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call29), !dbg !2846
  br label %sw.epilog, !dbg !2847

if.end30:                                         ; preds = %sw.bb26
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 22, !dbg !2848, !ctir !132
  store i8 1, i8* %preserve_security_context, align 1, !dbg !2849, !tbaa !2850, !ctir !142
  store i8 0, i8* @use_default_selinux_context, align 1, !dbg !2851, !tbaa !2742
  br label %sw.epilog, !dbg !2852

sw.bb31:                                          ; preds = %while.body
  %15 = load i32, i32* @selinux_enabled, align 4, !dbg !2853, !tbaa !2635
  %tobool32 = icmp ne i32 %15, 0, !dbg !2853
  br i1 %tobool32, label %if.then33, label %if.else37, !dbg !2855

if.then33:                                        ; preds = %sw.bb31
  store i8 0, i8* @use_default_selinux_context, align 1, !dbg !2856, !tbaa !2742
  %16 = load i8*, i8** @optarg, align 8, !dbg !2858, !tbaa !2648
  %tobool34 = icmp ne i8* %16, null, !dbg !2858
  br i1 %tobool34, label %if.then35, label %if.else, !dbg !2860

if.then35:                                        ; preds = %if.then33
  %17 = load i8*, i8** @optarg, align 8, !dbg !2861, !tbaa !2648
  store i8* %17, i8** %scontext, align 8, !dbg !2862, !tbaa !2648
  br label %if.end36, !dbg !2863

if.else:                                          ; preds = %if.then33
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 18, !dbg !2864, !ctir !132
  store i8 1, i8* %set_security_context, align 1, !dbg !2865, !tbaa !2866, !ctir !142
  br label %if.end36

if.end36:                                         ; preds = %if.else, %if.then35
  br label %if.end42, !dbg !2867

if.else37:                                        ; preds = %sw.bb31
  %18 = load i8*, i8** @optarg, align 8, !dbg !2868, !tbaa !2648
  %tobool38 = icmp ne i8* %18, null, !dbg !2868
  br i1 %tobool38, label %if.then39, label %if.end41, !dbg !2870

if.then39:                                        ; preds = %if.else37
  %call40 = call i8* @gettext(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.16, i64 0, i64 0)) #9, !dbg !2871
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call40), !dbg !2873
  br label %if.end41, !dbg !2874

if.end41:                                         ; preds = %if.then39, %if.else37
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.end36
  br label %sw.epilog, !dbg !2875

sw.bb43:                                          ; preds = %while.body
  call void @usage(i32 0) #15, !dbg !2876
  unreachable, !dbg !2876

sw.bb44:                                          ; preds = %while.body
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2877, !tbaa !2648
  %20 = load i8*, i8** @Version, align 8, !dbg !2877, !tbaa !2648
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %19, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17, i64 0, i64 0), i8* %20, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i64 0, i64 0), i8* null), !dbg !2877
  call void @exit(i32 0) #13, !dbg !2877
  unreachable, !dbg !2877

sw.default:                                       ; preds = %while.body
  call void @usage(i32 1) #15, !dbg !2878
  unreachable, !dbg !2878

sw.epilog:                                        ; preds = %if.end42, %if.end30, %if.then28, %sw.bb25, %if.end24, %sw.bb19, %sw.bb18, %sw.bb17, %sw.bb16, %sw.bb15, %sw.bb14, %sw.bb13, %sw.bb12, %sw.bb10, %sw.bb8, %sw.bb7, %sw.bb6, %if.end
  br label %while.cond, !dbg !2777, !llvm.loop !2879

while.end:                                        ; preds = %while.cond
  %21 = load i8, i8* @dir_arg, align 1, !dbg !2881, !tbaa !2742
  %tobool45 = trunc i8 %21 to i1, !dbg !2881
  br i1 %tobool45, label %land.lhs.true, label %if.end49, !dbg !2883

land.lhs.true:                                    ; preds = %while.end
  %22 = load i8, i8* @strip_files, align 1, !dbg !2884, !tbaa !2742
  %tobool46 = trunc i8 %22 to i1, !dbg !2884
  br i1 %tobool46, label %if.then47, label %if.end49, !dbg !2885

if.then47:                                        ; preds = %land.lhs.true
  %call48 = call i8* @gettext(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.19, i64 0, i64 0)) #9, !dbg !2886
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call48), !dbg !2886
  unreachable, !dbg !2886

if.end49:                                         ; preds = %land.lhs.true, %while.end
  %23 = load i8, i8* @dir_arg, align 1, !dbg !2887, !tbaa !2742
  %tobool50 = trunc i8 %23 to i1, !dbg !2887
  br i1 %tobool50, label %land.lhs.true51, label %if.end55, !dbg !2889

land.lhs.true51:                                  ; preds = %if.end49
  %24 = load i8*, i8** %target_directory, align 8, !dbg !2890, !tbaa !2648
  %tobool52 = icmp ne i8* %24, null, !dbg !2890
  br i1 %tobool52, label %if.then53, label %if.end55, !dbg !2891

if.then53:                                        ; preds = %land.lhs.true51
  %call54 = call i8* @gettext(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.20, i64 0, i64 0)) #9, !dbg !2892
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call54), !dbg !2892
  unreachable, !dbg !2892

if.end55:                                         ; preds = %land.lhs.true51, %if.end49
  %25 = load i8*, i8** %target_directory, align 8, !dbg !2893, !tbaa !2648
  %tobool56 = icmp ne i8* %25, null, !dbg !2893
  br i1 %tobool56, label %if.then57, label %if.end76, !dbg !2895

if.then57:                                        ; preds = %if.end55
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !2896, metadata !DIExpression()), !dbg !2898
  call void @llvm.dbg.declare(metadata i8* %stat_success, metadata !2899, metadata !DIExpression()), !dbg !2900
  %26 = load i8*, i8** %target_directory, align 8, !dbg !2901, !tbaa !2648
  %call58 = call i32 @stat(i8* %26, %struct.stat* %st) #9, !dbg !2902
  %cmp59 = icmp eq i32 %call58, 0, !dbg !2903
  %27 = zext i1 %cmp59 to i64, !dbg !2902
  %cond = select i1 %cmp59, i32 1, i32 0, !dbg !2902
  %tobool60 = icmp ne i32 %cond, 0, !dbg !2902
  %frombool = zext i1 %tobool60 to i8, !dbg !2900
  store i8 %frombool, i8* %stat_success, align 1, !dbg !2900, !tbaa !2742
  %28 = load i8, i8* %mkdir_and_install, align 1, !dbg !2904, !tbaa !2742
  %tobool61 = trunc i8 %28 to i1, !dbg !2904
  br i1 %tobool61, label %if.end68, label %land.lhs.true62, !dbg !2906

land.lhs.true62:                                  ; preds = %if.then57
  %29 = load i8, i8* %stat_success, align 1, !dbg !2907, !tbaa !2742
  %tobool63 = trunc i8 %29 to i1, !dbg !2907
  br i1 %tobool63, label %if.end68, label %if.then64, !dbg !2908

if.then64:                                        ; preds = %land.lhs.true62
  %call65 = call i32* @__errno_location() #16, !dbg !2909
  %30 = load i32, i32* %call65, align 4, !dbg !2909, !tbaa !2635, !ctir !7
  %call66 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i64 0, i64 0)) #9, !dbg !2909
  %31 = load i8*, i8** %target_directory, align 8, !dbg !2909, !tbaa !2648
  %call67 = call i8* @quotearg_style(i32 4, i8* %31), !dbg !2909
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %30, i8* %call66, i8* %call67), !dbg !2909
  unreachable, !dbg !2909

if.end68:                                         ; preds = %land.lhs.true62, %if.then57
  %32 = load i8, i8* %stat_success, align 1, !dbg !2910, !tbaa !2742
  %tobool69 = trunc i8 %32 to i1, !dbg !2910
  br i1 %tobool69, label %land.lhs.true70, label %if.end75, !dbg !2912

land.lhs.true70:                                  ; preds = %if.end68
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !2913, !ctir !270
  %33 = load i32, i32* %st_mode, align 8, !dbg !2913, !tbaa !2914, !ctir !140
  %and = and i32 %33, 61440, !dbg !2913
  %cmp71 = icmp eq i32 %and, 16384, !dbg !2913
  br i1 %cmp71, label %if.end75, label %if.then72, !dbg !2918

if.then72:                                        ; preds = %land.lhs.true70
  %call73 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22, i64 0, i64 0)) #9, !dbg !2919
  %34 = load i8*, i8** %target_directory, align 8, !dbg !2919, !tbaa !2648
  %call74 = call i8* @quotearg_style(i32 4, i8* %34), !dbg !2919
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call73, i8* %call74), !dbg !2919
  unreachable, !dbg !2919

if.end75:                                         ; preds = %land.lhs.true70, %if.end68
  br label %if.end76, !dbg !2920

if.end76:                                         ; preds = %if.end75, %if.end55
  %35 = load i8, i8* %make_backups, align 1, !dbg !2921, !tbaa !2742
  %tobool77 = trunc i8 %35 to i1, !dbg !2921
  br i1 %tobool77, label %cond.true, label %cond.false, !dbg !2921

cond.true:                                        ; preds = %if.end76
  %call78 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i64 0, i64 0)) #9, !dbg !2922
  %36 = load i8*, i8** %version_control_string, align 8, !dbg !2923, !tbaa !2648
  %call79 = call i32 @xget_version(i8* %call78, i8* %36), !dbg !2924
  br label %cond.end, !dbg !2921

cond.false:                                       ; preds = %if.end76
  br label %cond.end, !dbg !2921

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond80 = phi i32 [ %call79, %cond.true ], [ 0, %cond.false ], !dbg !2921
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 0, !dbg !2925, !ctir !132
  store i32 %cond80, i32* %backup_type, align 8, !dbg !2926, !tbaa !2927, !ctir !68
  %37 = load i8*, i8** %backup_suffix, align 8, !dbg !2928, !tbaa !2648
  call void @set_simple_backup_suffix(i8* %37), !dbg !2929
  %preserve_security_context81 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 22, !dbg !2930, !ctir !132
  %38 = load i8, i8* %preserve_security_context81, align 1, !dbg !2930, !tbaa !2850
  %tobool82 = trunc i8 %38 to i1, !dbg !2930, !ctir !142
  br i1 %tobool82, label %land.lhs.true83, label %if.end89, !dbg !2932

land.lhs.true83:                                  ; preds = %cond.end
  %set_security_context84 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 18, !dbg !2933, !ctir !132
  %39 = load i8, i8* %set_security_context84, align 1, !dbg !2933, !tbaa !2866
  %tobool85 = trunc i8 %39 to i1, !dbg !2933, !ctir !142
  br i1 %tobool85, label %if.then87, label %lor.lhs.false, !dbg !2934

lor.lhs.false:                                    ; preds = %land.lhs.true83
  %40 = load i8*, i8** %scontext, align 8, !dbg !2935, !tbaa !2648
  %tobool86 = icmp ne i8* %40, null, !dbg !2935
  br i1 %tobool86, label %if.then87, label %if.end89, !dbg !2936

if.then87:                                        ; preds = %lor.lhs.false, %land.lhs.true83
  %call88 = call i8* @gettext(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.24, i64 0, i64 0)) #9, !dbg !2937
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call88), !dbg !2937
  unreachable, !dbg !2937

if.end89:                                         ; preds = %lor.lhs.false, %cond.end
  %41 = load i8*, i8** %scontext, align 8, !dbg !2938, !tbaa !2648
  %tobool90 = icmp ne i8* %41, null, !dbg !2938
  br i1 %tobool90, label %land.lhs.true91, label %if.end99, !dbg !2940

land.lhs.true91:                                  ; preds = %if.end89
  %42 = load i8*, i8** %scontext, align 8, !dbg !2941, !tbaa !2648
  %call92 = call i8* @se_const(i8* %42), !dbg !2942
  %call93 = call i32 @setfscreatecon(i8* %call92), !dbg !2943
  %cmp94 = icmp slt i32 %call93, 0, !dbg !2944
  br i1 %cmp94, label %if.then95, label %if.end99, !dbg !2945

if.then95:                                        ; preds = %land.lhs.true91
  %call96 = call i32* @__errno_location() #16, !dbg !2946
  %43 = load i32, i32* %call96, align 4, !dbg !2946, !tbaa !2635, !ctir !7
  %call97 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.25, i64 0, i64 0)) #9, !dbg !2946
  %44 = load i8*, i8** %scontext, align 8, !dbg !2946, !tbaa !2648
  %call98 = call i8* @quote(i8* %44), !dbg !2946
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %43, i8* %call97, i8* %call98), !dbg !2946
  unreachable, !dbg !2946

if.end99:                                         ; preds = %land.lhs.true91, %if.end89
  %45 = load i32, i32* %argc.addr, align 4, !dbg !2947, !tbaa !2635
  %46 = load i32, i32* @optind, align 4, !dbg !2948, !tbaa !2635
  %sub = sub nsw i32 %45, %46, !dbg !2949
  store i32 %sub, i32* %n_files, align 4, !dbg !2950, !tbaa !2635
  %47 = load i8**, i8*** %argv.addr, align 8, !dbg !2951, !tbaa !2648
  %48 = load i32, i32* @optind, align 4, !dbg !2952, !tbaa !2635
  %idx.ext = sext i32 %48 to i64, !dbg !2953
  %add.ptr = getelementptr inbounds i8*, i8** %47, i64 %idx.ext, !dbg !2953
  store i8** %add.ptr, i8*** %file, align 8, !dbg !2954, !tbaa !2648
  %49 = load i32, i32* %n_files, align 4, !dbg !2955, !tbaa !2635
  %50 = load i8, i8* @dir_arg, align 1, !dbg !2957, !tbaa !2742
  %tobool100 = trunc i8 %50 to i1, !dbg !2957
  br i1 %tobool100, label %lor.end, label %lor.rhs, !dbg !2958

lor.rhs:                                          ; preds = %if.end99
  %51 = load i8*, i8** %target_directory, align 8, !dbg !2959, !tbaa !2648
  %tobool101 = icmp ne i8* %51, null, !dbg !2958
  br label %lor.end, !dbg !2958

lor.end:                                          ; preds = %lor.rhs, %if.end99
  %52 = phi i1 [ true, %if.end99 ], [ %tobool101, %lor.rhs ]
  %lnot = xor i1 %52, true, !dbg !2960
  %lnot.ext = zext i1 %lnot to i32, !dbg !2960
  %cmp102 = icmp sle i32 %49, %lnot.ext, !dbg !2961
  br i1 %cmp102, label %if.then103, label %if.end112, !dbg !2962

if.then103:                                       ; preds = %lor.end
  %53 = load i32, i32* %n_files, align 4, !dbg !2963, !tbaa !2635
  %cmp104 = icmp sle i32 %53, 0, !dbg !2966
  br i1 %cmp104, label %if.then105, label %if.else107, !dbg !2967

if.then105:                                       ; preds = %if.then103
  %call106 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.26, i64 0, i64 0)) #9, !dbg !2968
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call106), !dbg !2969
  br label %if.end111, !dbg !2969

if.else107:                                       ; preds = %if.then103
  %call108 = call i8* @gettext(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.27, i64 0, i64 0)) #9, !dbg !2970
  %54 = load i8**, i8*** %file, align 8, !dbg !2971, !tbaa !2648
  %arrayidx109 = getelementptr inbounds i8*, i8** %54, i64 0, !dbg !2971, !ctir !184
  %55 = load i8*, i8** %arrayidx109, align 8, !dbg !2971, !tbaa !2648
  %call110 = call i8* @quotearg_style(i32 4, i8* %55), !dbg !2971
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call108, i8* %call110), !dbg !2972
  br label %if.end111

if.end111:                                        ; preds = %if.else107, %if.then105
  call void @usage(i32 1) #15, !dbg !2973
  unreachable, !dbg !2973

if.end112:                                        ; preds = %lor.end
  %56 = load i8, i8* %no_target_directory, align 1, !dbg !2974, !tbaa !2742
  %tobool113 = trunc i8 %56 to i1, !dbg !2974
  br i1 %tobool113, label %if.then114, label %if.else125, !dbg !2976

if.then114:                                       ; preds = %if.end112
  %57 = load i8*, i8** %target_directory, align 8, !dbg !2977, !tbaa !2648
  %tobool115 = icmp ne i8* %57, null, !dbg !2977
  br i1 %tobool115, label %if.then116, label %if.end118, !dbg !2980

if.then116:                                       ; preds = %if.then114
  %call117 = call i8* @gettext(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.28, i64 0, i64 0)) #9, !dbg !2981
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call117), !dbg !2981
  unreachable, !dbg !2981

if.end118:                                        ; preds = %if.then114
  %58 = load i32, i32* %n_files, align 4, !dbg !2982, !tbaa !2635
  %cmp119 = icmp slt i32 2, %58, !dbg !2984
  br i1 %cmp119, label %if.then120, label %if.end124, !dbg !2985

if.then120:                                       ; preds = %if.end118
  %call121 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.29, i64 0, i64 0)) #9, !dbg !2986
  %59 = load i8**, i8*** %file, align 8, !dbg !2988, !tbaa !2648
  %arrayidx122 = getelementptr inbounds i8*, i8** %59, i64 2, !dbg !2988, !ctir !184
  %60 = load i8*, i8** %arrayidx122, align 8, !dbg !2988, !tbaa !2648
  %call123 = call i8* @quotearg_style(i32 4, i8* %60), !dbg !2988
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call121, i8* %call123), !dbg !2989
  call void @usage(i32 1) #15, !dbg !2990
  unreachable, !dbg !2990

if.end124:                                        ; preds = %if.end118
  br label %if.end149, !dbg !2991

if.else125:                                       ; preds = %if.end112
  %61 = load i8, i8* @dir_arg, align 1, !dbg !2992, !tbaa !2742
  %tobool126 = trunc i8 %61 to i1, !dbg !2992
  br i1 %tobool126, label %if.end148, label %lor.lhs.false127, !dbg !2994

lor.lhs.false127:                                 ; preds = %if.else125
  %62 = load i8*, i8** %target_directory, align 8, !dbg !2995, !tbaa !2648
  %tobool128 = icmp ne i8* %62, null, !dbg !2995
  br i1 %tobool128, label %if.end148, label %if.then129, !dbg !2996

if.then129:                                       ; preds = %lor.lhs.false127
  %63 = load i32, i32* %n_files, align 4, !dbg !2997, !tbaa !2635
  %cmp130 = icmp sle i32 2, %63, !dbg !3000
  br i1 %cmp130, label %land.lhs.true131, label %if.else138, !dbg !3001

land.lhs.true131:                                 ; preds = %if.then129
  %64 = load i8**, i8*** %file, align 8, !dbg !3002, !tbaa !2648
  %65 = load i32, i32* %n_files, align 4, !dbg !3003, !tbaa !2635
  %sub132 = sub nsw i32 %65, 1, !dbg !3004
  %idxprom = sext i32 %sub132 to i64, !dbg !3002
  %arrayidx133 = getelementptr inbounds i8*, i8** %64, i64 %idxprom, !dbg !3002, !ctir !184
  %66 = load i8*, i8** %arrayidx133, align 8, !dbg !3002, !tbaa !2648
  %call134 = call zeroext i1 @target_directory_operand(i8* %66), !dbg !3005
  br i1 %call134, label %if.then135, label %if.else138, !dbg !3006

if.then135:                                       ; preds = %land.lhs.true131
  %67 = load i8**, i8*** %file, align 8, !dbg !3007, !tbaa !2648
  %68 = load i32, i32* %n_files, align 4, !dbg !3008, !tbaa !2635
  %dec = add nsw i32 %68, -1, !dbg !3008
  store i32 %dec, i32* %n_files, align 4, !dbg !3008, !tbaa !2635
  %idxprom136 = sext i32 %dec to i64, !dbg !3007
  %arrayidx137 = getelementptr inbounds i8*, i8** %67, i64 %idxprom136, !dbg !3007, !ctir !184
  %69 = load i8*, i8** %arrayidx137, align 8, !dbg !3007, !tbaa !2648
  store i8* %69, i8** %target_directory, align 8, !dbg !3009, !tbaa !2648
  br label %if.end147, !dbg !3010

if.else138:                                       ; preds = %land.lhs.true131, %if.then129
  %70 = load i32, i32* %n_files, align 4, !dbg !3011, !tbaa !2635
  %cmp139 = icmp slt i32 2, %70, !dbg !3013
  br i1 %cmp139, label %if.then140, label %if.end146, !dbg !3014

if.then140:                                       ; preds = %if.else138
  %call141 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22, i64 0, i64 0)) #9, !dbg !3015
  %71 = load i8**, i8*** %file, align 8, !dbg !3015, !tbaa !2648
  %72 = load i32, i32* %n_files, align 4, !dbg !3015, !tbaa !2635
  %sub142 = sub nsw i32 %72, 1, !dbg !3015
  %idxprom143 = sext i32 %sub142 to i64, !dbg !3015
  %arrayidx144 = getelementptr inbounds i8*, i8** %71, i64 %idxprom143, !dbg !3015, !ctir !184
  %73 = load i8*, i8** %arrayidx144, align 8, !dbg !3015, !tbaa !2648
  %call145 = call i8* @quotearg_style(i32 4, i8* %73), !dbg !3015
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call141, i8* %call145), !dbg !3015
  unreachable, !dbg !3015

if.end146:                                        ; preds = %if.else138
  br label %if.end147

if.end147:                                        ; preds = %if.end146, %if.then135
  br label %if.end148, !dbg !3016

if.end148:                                        ; preds = %if.end147, %lor.lhs.false127, %if.else125
  br label %if.end149

if.end149:                                        ; preds = %if.end148, %if.end124
  %74 = load i8*, i8** %specified_mode, align 8, !dbg !3017, !tbaa !2648
  %tobool150 = icmp ne i8* %74, null, !dbg !3017
  br i1 %tobool150, label %if.then151, label %if.end160, !dbg !3019

if.then151:                                       ; preds = %if.end149
  call void @llvm.dbg.declare(metadata %struct.mode_change** %change, metadata !3020, metadata !DIExpression()), !dbg !3022
  %75 = load i8*, i8** %specified_mode, align 8, !dbg !3023, !tbaa !2648
  %call152 = call %struct.mode_change* @mode_compile(i8* %75), !dbg !3024
  store %struct.mode_change* %call152, %struct.mode_change** %change, align 8, !dbg !3022, !tbaa !2648
  %76 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !3025, !tbaa !2648
  %tobool153 = icmp ne %struct.mode_change* %76, null, !dbg !3025
  br i1 %tobool153, label %if.end157, label %if.then154, !dbg !3027

if.then154:                                       ; preds = %if.then151
  %call155 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30, i64 0, i64 0)) #9, !dbg !3028
  %77 = load i8*, i8** %specified_mode, align 8, !dbg !3028, !tbaa !2648
  %call156 = call i8* @quote(i8* %77), !dbg !3028
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call155, i8* %call156), !dbg !3028
  unreachable, !dbg !3028

if.end157:                                        ; preds = %if.then151
  %78 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !3029, !tbaa !2648
  %call158 = call i32 @mode_adjust(i32 0, i1 zeroext false, i32 0, %struct.mode_change* %78, i32* null), !dbg !3030
  store i32 %call158, i32* @mode, align 4, !dbg !3031, !tbaa !2635
  %79 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !3032, !tbaa !2648
  %call159 = call i32 @mode_adjust(i32 0, i1 zeroext true, i32 0, %struct.mode_change* %79, i32* @dir_mode_bits), !dbg !3033
  store i32 %call159, i32* @dir_mode, align 4, !dbg !3034, !tbaa !2635
  %80 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !3035, !tbaa !2648
  %81 = bitcast %struct.mode_change* %80 to i8*, !dbg !3035
  call void @free(i8* %81) #9, !dbg !3036
  br label %if.end160, !dbg !3037

if.end160:                                        ; preds = %if.end157, %if.end149
  %82 = load i8, i8* %strip_program_specified, align 1, !dbg !3038, !tbaa !2742
  %tobool161 = trunc i8 %82 to i1, !dbg !3038
  br i1 %tobool161, label %land.lhs.true162, label %if.end166, !dbg !3040

land.lhs.true162:                                 ; preds = %if.end160
  %83 = load i8, i8* @strip_files, align 1, !dbg !3041, !tbaa !2742
  %tobool163 = trunc i8 %83 to i1, !dbg !3041
  br i1 %tobool163, label %if.end166, label %if.then164, !dbg !3042

if.then164:                                       ; preds = %land.lhs.true162
  %call165 = call i8* @gettext(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.31, i64 0, i64 0)) #9, !dbg !3043
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call165), !dbg !3044
  br label %if.end166, !dbg !3044

if.end166:                                        ; preds = %if.then164, %land.lhs.true162, %if.end160
  %84 = load i8, i8* @copy_only_if_needed, align 1, !dbg !3045, !tbaa !2742
  %tobool167 = trunc i8 %84 to i1, !dbg !3045
  br i1 %tobool167, label %land.lhs.true168, label %if.end173, !dbg !3047

land.lhs.true168:                                 ; preds = %if.end166
  %preserve_timestamps169 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 16, !dbg !3048, !ctir !132
  %85 = load i8, i8* %preserve_timestamps169, align 1, !dbg !3048, !tbaa !2826
  %tobool170 = trunc i8 %85 to i1, !dbg !3048, !ctir !142
  br i1 %tobool170, label %if.then171, label %if.end173, !dbg !3049

if.then171:                                       ; preds = %land.lhs.true168
  %call172 = call i8* @gettext(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.32, i64 0, i64 0)) #9, !dbg !3050
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call172), !dbg !3052
  call void @usage(i32 1) #15, !dbg !3053
  unreachable, !dbg !3053

if.end173:                                        ; preds = %land.lhs.true168, %if.end166
  %86 = load i8, i8* @copy_only_if_needed, align 1, !dbg !3054, !tbaa !2742
  %tobool174 = trunc i8 %86 to i1, !dbg !3054
  br i1 %tobool174, label %land.lhs.true175, label %if.end179, !dbg !3056

land.lhs.true175:                                 ; preds = %if.end173
  %87 = load i8, i8* @strip_files, align 1, !dbg !3057, !tbaa !2742
  %tobool176 = trunc i8 %87 to i1, !dbg !3057
  br i1 %tobool176, label %if.then177, label %if.end179, !dbg !3058

if.then177:                                       ; preds = %land.lhs.true175
  %call178 = call i8* @gettext(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.33, i64 0, i64 0)) #9, !dbg !3059
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call178), !dbg !3061
  call void @usage(i32 1) #15, !dbg !3062
  unreachable, !dbg !3062

if.end179:                                        ; preds = %land.lhs.true175, %if.end173
  %88 = load i8, i8* @copy_only_if_needed, align 1, !dbg !3063, !tbaa !2742
  %tobool180 = trunc i8 %88 to i1, !dbg !3063
  br i1 %tobool180, label %land.lhs.true181, label %if.end185, !dbg !3065

land.lhs.true181:                                 ; preds = %if.end179
  %89 = load i32, i32* @mode, align 4, !dbg !3066, !tbaa !2635
  %call182 = call zeroext i1 @extra_mode(i32 %89), !dbg !3067
  br i1 %call182, label %if.then183, label %if.end185, !dbg !3068

if.then183:                                       ; preds = %land.lhs.true181
  %call184 = call i8* @gettext(i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.34, i64 0, i64 0)) #9, !dbg !3069
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call184), !dbg !3070
  br label %if.end185, !dbg !3070

if.end185:                                        ; preds = %if.then183, %land.lhs.true181, %if.end179
  call void @get_ids(), !dbg !3071
  %90 = load i8, i8* @dir_arg, align 1, !dbg !3072, !tbaa !2742
  %tobool186 = trunc i8 %90 to i1, !dbg !3072
  br i1 %tobool186, label %if.then187, label %if.else189, !dbg !3074

if.then187:                                       ; preds = %if.end185
  %91 = load i32, i32* %n_files, align 4, !dbg !3075, !tbaa !2635
  %92 = load i8**, i8*** %file, align 8, !dbg !3076, !tbaa !2648
  %93 = bitcast %struct.cp_options* %x to i8*, !dbg !3077
  %call188 = call i32 @savewd_process_files(i32 %91, i8** %92, i32 (i8*, %struct.savewd*, i8*)* @process_dir, i8* %93), !dbg !3078
  store i32 %call188, i32* %exit_status, align 4, !dbg !3079, !tbaa !2635
  br label %if.end213, !dbg !3080

if.else189:                                       ; preds = %if.end185
  call void @hash_init(), !dbg !3081
  %94 = load i8*, i8** %target_directory, align 8, !dbg !3083, !tbaa !2648
  %tobool190 = icmp ne i8* %94, null, !dbg !3083
  br i1 %tobool190, label %if.else203, label %if.then191, !dbg !3085

if.then191:                                       ; preds = %if.else189
  %95 = load i8, i8* %mkdir_and_install, align 1, !dbg !3086, !tbaa !2742
  %tobool192 = trunc i8 %95 to i1, !dbg !3086
  br i1 %tobool192, label %cond.true193, label %cond.false197, !dbg !3089

cond.true193:                                     ; preds = %if.then191
  %96 = load i8**, i8*** %file, align 8, !dbg !3090, !tbaa !2648
  %arrayidx194 = getelementptr inbounds i8*, i8** %96, i64 0, !dbg !3090, !ctir !184
  %97 = load i8*, i8** %arrayidx194, align 8, !dbg !3090, !tbaa !2648
  %98 = load i8**, i8*** %file, align 8, !dbg !3091, !tbaa !2648
  %arrayidx195 = getelementptr inbounds i8*, i8** %98, i64 1, !dbg !3091, !ctir !184
  %99 = load i8*, i8** %arrayidx195, align 8, !dbg !3091, !tbaa !2648
  %call196 = call zeroext i1 @install_file_in_file_parents(i8* %97, i8* %99, %struct.cp_options* %x), !dbg !3092
  br i1 %call196, label %if.end202, label %if.then201, !dbg !3086

cond.false197:                                    ; preds = %if.then191
  %100 = load i8**, i8*** %file, align 8, !dbg !3093, !tbaa !2648
  %arrayidx198 = getelementptr inbounds i8*, i8** %100, i64 0, !dbg !3093, !ctir !184
  %101 = load i8*, i8** %arrayidx198, align 8, !dbg !3093, !tbaa !2648
  %102 = load i8**, i8*** %file, align 8, !dbg !3094, !tbaa !2648
  %arrayidx199 = getelementptr inbounds i8*, i8** %102, i64 1, !dbg !3094, !ctir !184
  %103 = load i8*, i8** %arrayidx199, align 8, !dbg !3094, !tbaa !2648
  %call200 = call zeroext i1 @install_file_in_file(i8* %101, i8* %103, %struct.cp_options* %x), !dbg !3095
  br i1 %call200, label %if.end202, label %if.then201, !dbg !3089

if.then201:                                       ; preds = %cond.false197, %cond.true193
  store i32 1, i32* %exit_status, align 4, !dbg !3096, !tbaa !2635
  br label %if.end202, !dbg !3097

if.end202:                                        ; preds = %if.then201, %cond.false197, %cond.true193
  br label %if.end212, !dbg !3098

if.else203:                                       ; preds = %if.else189
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3099, metadata !DIExpression()), !dbg !3101
  call void @dest_info_init(%struct.cp_options* %x), !dbg !3102
  store i32 0, i32* %i, align 4, !dbg !3103, !tbaa !2635
  br label %for.cond, !dbg !3105

for.cond:                                         ; preds = %for.inc, %if.else203
  %104 = load i32, i32* %i, align 4, !dbg !3106, !tbaa !2635
  %105 = load i32, i32* %n_files, align 4, !dbg !3108, !tbaa !2635
  %cmp204 = icmp slt i32 %104, %105, !dbg !3109
  br i1 %cmp204, label %for.body, label %for.end, !dbg !3110

for.body:                                         ; preds = %for.cond
  %106 = load i8**, i8*** %file, align 8, !dbg !3111, !tbaa !2648
  %107 = load i32, i32* %i, align 4, !dbg !3113, !tbaa !2635
  %idxprom205 = sext i32 %107 to i64, !dbg !3111
  %arrayidx206 = getelementptr inbounds i8*, i8** %106, i64 %idxprom205, !dbg !3111, !ctir !184
  %108 = load i8*, i8** %arrayidx206, align 8, !dbg !3111, !tbaa !2648
  %109 = load i8*, i8** %target_directory, align 8, !dbg !3114, !tbaa !2648
  %110 = load i32, i32* %i, align 4, !dbg !3115, !tbaa !2635
  %cmp207 = icmp eq i32 %110, 0, !dbg !3116
  br i1 %cmp207, label %land.rhs, label %land.end, !dbg !3117

land.rhs:                                         ; preds = %for.body
  %111 = load i8, i8* %mkdir_and_install, align 1, !dbg !3118, !tbaa !2742
  %tobool208 = trunc i8 %111 to i1, !dbg !3118
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.body
  %112 = phi i1 [ false, %for.body ], [ %tobool208, %land.rhs ], !dbg !3119
  %call209 = call zeroext i1 @install_file_in_dir(i8* %108, i8* %109, %struct.cp_options* %x, i1 zeroext %112), !dbg !3120
  br i1 %call209, label %if.end211, label %if.then210, !dbg !3121

if.then210:                                       ; preds = %land.end
  store i32 1, i32* %exit_status, align 4, !dbg !3122, !tbaa !2635
  br label %if.end211, !dbg !3123

if.end211:                                        ; preds = %if.then210, %land.end
  br label %for.inc, !dbg !3124

for.inc:                                          ; preds = %if.end211
  %113 = load i32, i32* %i, align 4, !dbg !3125, !tbaa !2635
  %inc = add nsw i32 %113, 1, !dbg !3125
  store i32 %inc, i32* %i, align 4, !dbg !3125, !tbaa !2635
  br label %for.cond, !dbg !3126, !llvm.loop !3127

for.end:                                          ; preds = %for.cond
  br label %if.end212

if.end212:                                        ; preds = %for.end, %if.end202
  br label %if.end213

if.end213:                                        ; preds = %if.end212, %if.then187
  %114 = load i32, i32* %exit_status, align 4, !dbg !3129, !tbaa !2635
  ret i32 %114, !dbg !3130
}

; Function Attrs: nounwind
declare dso_local i8* @bindtextdomain(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @textdomain(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @atexit(void ()*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @cp_option_init(%struct.cp_options* %x) #4 !dbg !3131 !ctir !216 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3132, metadata !DIExpression()), !dbg !3133
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3134, !tbaa !2648
  call void @cp_options_default(%struct.cp_options* %0), !dbg !3135
  %1 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3136, !tbaa !2648
  %copy_as_regular = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1, i32 0, i32 5, !dbg !3137, !ctir !132
  store i8 1, i8* %copy_as_regular, align 4, !dbg !3138, !tbaa !3139, !ctir !142
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3140, !tbaa !2648
  %reflink_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 36, !dbg !3141, !ctir !132
  store i32 0, i32* %reflink_mode, align 8, !dbg !3142, !tbaa !3143, !ctir !95
  %3 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3144, !tbaa !2648
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 1, !dbg !3145, !ctir !132
  store i32 4, i32* %dereference, align 4, !dbg !3146, !tbaa !3147, !ctir !76
  %4 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3148, !tbaa !2648
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %4, i32 0, i32 6, !dbg !3149, !ctir !132
  store i8 1, i8* %unlink_dest_before_opening, align 1, !dbg !3150, !tbaa !3151, !ctir !142
  %5 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3152, !tbaa !2648
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 7, !dbg !3153, !ctir !132
  store i8 0, i8* %unlink_dest_after_failed_open, align 2, !dbg !3154, !tbaa !3155, !ctir !142
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3156, !tbaa !2648
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 8, !dbg !3157, !ctir !132
  store i8 0, i8* %hard_link, align 1, !dbg !3158, !tbaa !3159, !ctir !142
  %7 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3160, !tbaa !2648
  %interactive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 2, !dbg !3161, !ctir !132
  store i32 4, i32* %interactive, align 8, !dbg !3162, !tbaa !3163, !ctir !83
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3164, !tbaa !2648
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 9, !dbg !3165, !ctir !132
  store i8 0, i8* %move_mode, align 8, !dbg !3166, !tbaa !3167, !ctir !142
  %9 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3168, !tbaa !2648
  %install_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 10, !dbg !3169, !ctir !132
  store i8 1, i8* %install_mode, align 1, !dbg !3170, !tbaa !3171, !ctir !142
  %10 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3172, !tbaa !2648
  %one_file_system = getelementptr inbounds %struct.cp_options, %struct.cp_options* %10, i32 0, i32 13, !dbg !3173, !ctir !132
  store i8 0, i8* %one_file_system, align 4, !dbg !3174, !tbaa !3175, !ctir !142
  %11 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3176, !tbaa !2648
  %preserve_ownership = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 14, !dbg !3177, !ctir !132
  store i8 0, i8* %preserve_ownership, align 1, !dbg !3178, !tbaa !3179, !ctir !142
  %12 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3180, !tbaa !2648
  %preserve_links = getelementptr inbounds %struct.cp_options, %struct.cp_options* %12, i32 0, i32 19, !dbg !3181, !ctir !132
  store i8 0, i8* %preserve_links, align 2, !dbg !3182, !tbaa !3183, !ctir !142
  %13 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3184, !tbaa !2648
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %13, i32 0, i32 15, !dbg !3185, !ctir !132
  store i8 0, i8* %preserve_mode, align 2, !dbg !3186, !tbaa !3187, !ctir !142
  %14 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3188, !tbaa !2648
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %14, i32 0, i32 16, !dbg !3189, !ctir !132
  store i8 0, i8* %preserve_timestamps, align 1, !dbg !3190, !tbaa !2826, !ctir !142
  %15 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3191, !tbaa !2648
  %explicit_no_preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %15, i32 0, i32 17, !dbg !3192, !ctir !132
  store i8 0, i8* %explicit_no_preserve_mode, align 8, !dbg !3193, !tbaa !3194, !ctir !142
  %16 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3195, !tbaa !2648
  %reduce_diagnostics = getelementptr inbounds %struct.cp_options, %struct.cp_options* %16, i32 0, i32 26, !dbg !3196, !ctir !132
  store i8 0, i8* %reduce_diagnostics, align 1, !dbg !3197, !tbaa !3198, !ctir !142
  %17 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3199, !tbaa !2648
  %data_copy_required = getelementptr inbounds %struct.cp_options, %struct.cp_options* %17, i32 0, i32 20, !dbg !3200, !ctir !132
  store i8 1, i8* %data_copy_required, align 1, !dbg !3201, !tbaa !3202, !ctir !142
  %18 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3203, !tbaa !2648
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %18, i32 0, i32 21, !dbg !3204, !ctir !132
  store i8 0, i8* %require_preserve, align 4, !dbg !3205, !tbaa !3206, !ctir !142
  %19 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3207, !tbaa !2648
  %require_preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %19, i32 0, i32 25, !dbg !3208, !ctir !132
  store i8 0, i8* %require_preserve_xattr, align 8, !dbg !3209, !tbaa !3210, !ctir !142
  %20 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3211, !tbaa !2648
  %recursive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %20, i32 0, i32 27, !dbg !3212, !ctir !132
  store i8 0, i8* %recursive, align 2, !dbg !3213, !tbaa !3214, !ctir !142
  %21 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3215, !tbaa !2648
  %sparse_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %21, i32 0, i32 3, !dbg !3216, !ctir !132
  store i32 2, i32* %sparse_mode, align 4, !dbg !3217, !tbaa !3218, !ctir !89
  %22 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3219, !tbaa !2648
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %22, i32 0, i32 29, !dbg !3220, !ctir !132
  store i8 0, i8* %symbolic_link, align 4, !dbg !3221, !tbaa !3222, !ctir !142
  %23 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3223, !tbaa !2648
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %23, i32 0, i32 0, !dbg !3224, !ctir !132
  store i32 0, i32* %backup_type, align 8, !dbg !3225, !tbaa !2927, !ctir !68
  %24 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3226, !tbaa !2648
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %24, i32 0, i32 28, !dbg !3227, !ctir !132
  store i8 1, i8* %set_mode, align 1, !dbg !3228, !tbaa !3229, !ctir !142
  %25 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3230, !tbaa !2648
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %25, i32 0, i32 4, !dbg !3231, !ctir !132
  store i32 384, i32* %mode, align 8, !dbg !3232, !tbaa !3233, !ctir !139
  %26 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3234, !tbaa !2648
  %stdin_tty = getelementptr inbounds %struct.cp_options, %struct.cp_options* %26, i32 0, i32 32, !dbg !3235, !ctir !132
  store i8 0, i8* %stdin_tty, align 1, !dbg !3236, !tbaa !3237, !ctir !142
  %27 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3238, !tbaa !2648
  %open_dangling_dest_symlink = getelementptr inbounds %struct.cp_options, %struct.cp_options* %27, i32 0, i32 33, !dbg !3239, !ctir !132
  store i8 0, i8* %open_dangling_dest_symlink, align 8, !dbg !3240, !tbaa !3241, !ctir !142
  %28 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3242, !tbaa !2648
  %update = getelementptr inbounds %struct.cp_options, %struct.cp_options* %28, i32 0, i32 30, !dbg !3243, !ctir !132
  store i8 0, i8* %update, align 1, !dbg !3244, !tbaa !3245, !ctir !142
  %29 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3246, !tbaa !2648
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %29, i32 0, i32 23, !dbg !3247, !ctir !132
  store i8 0, i8* %require_preserve_context, align 2, !dbg !3248, !tbaa !3249, !ctir !142
  %30 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3250, !tbaa !2648
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %30, i32 0, i32 22, !dbg !3251, !ctir !132
  store i8 0, i8* %preserve_security_context, align 1, !dbg !3252, !tbaa !2850, !ctir !142
  %31 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3253, !tbaa !2648
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %31, i32 0, i32 18, !dbg !3254, !ctir !132
  store i8 0, i8* %set_security_context, align 1, !dbg !3255, !tbaa !2866, !ctir !142
  %32 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3256, !tbaa !2648
  %preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %32, i32 0, i32 24, !dbg !3257, !ctir !132
  store i8 0, i8* %preserve_xattr, align 1, !dbg !3258, !tbaa !3259, !ctir !142
  %33 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3260, !tbaa !2648
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %33, i32 0, i32 31, !dbg !3261, !ctir !132
  store i8 0, i8* %verbose, align 2, !dbg !3262, !tbaa !2812, !ctir !142
  %34 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3263, !tbaa !2648
  %dest_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %34, i32 0, i32 37, !dbg !3264, !ctir !132
  store %struct.hash_table* null, %struct.hash_table** %dest_info, align 8, !dbg !3265, !tbaa !3266, !ctir !175
  %35 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3267, !tbaa !2648
  %src_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %35, i32 0, i32 38, !dbg !3268, !ctir !132
  store %struct.hash_table* null, %struct.hash_table** %src_info, align 8, !dbg !3269, !tbaa !3270, !ctir !175
  ret void, !dbg !3271
}

; Function Attrs: nounwind
declare dso_local i32 @umask(i32) #2

; Function Attrs: nounwind
declare dso_local i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #2

; Function Attrs: nounwind
declare dso_local void (i32)* @signal(i32, void (i32)*) #2

declare dso_local void @error(i32, i32, i8*, ...) #3

; Function Attrs: nounwind
declare dso_local i32 @stat(i8*, %struct.stat*) #2

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #8

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @se_const(i8* %sctx) #4 !dbg !3272 !ctir !218 {
entry:
  %sctx.addr = alloca i8*, align 8
  store i8* %sctx, i8** %sctx.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %sctx.addr, metadata !3273, metadata !DIExpression()), !dbg !3274
  %0 = load i8*, i8** %sctx.addr, align 8, !dbg !3275, !tbaa !2648
  ret i8* %0, !dbg !3276
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @target_directory_operand(i8* %file) #4 !dbg !3277 !ctir !220 {
entry:
  %file.addr = alloca i8*, align 8
  %b = alloca i8*, align 8, !ctir !180
  %blen = alloca i64, align 8, !ctir !55
  %looks_like_a_dir = alloca i8, align 1, !ctir !142
  %st = alloca %struct.stat, align 8, !ctir !270
  %err = alloca i32, align 4, !ctir !7
  %is_a_dir = alloca i8, align 1, !ctir !142
  store i8* %file, i8** %file.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !3278, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.declare(metadata i8** %b, metadata !3280, metadata !DIExpression()), !dbg !3281
  %0 = load i8*, i8** %file.addr, align 8, !dbg !3282, !tbaa !2648
  %call = call i8* @last_component(i8* %0) #14, !dbg !3283
  store i8* %call, i8** %b, align 8, !dbg !3281, !tbaa !2648
  call void @llvm.dbg.declare(metadata i64* %blen, metadata !3284, metadata !DIExpression()), !dbg !3285
  %1 = load i8*, i8** %b, align 8, !dbg !3286, !tbaa !2648
  %call1 = call i64 @strlen(i8* %1) #14, !dbg !3287
  store i64 %call1, i64* %blen, align 8, !dbg !3285, !tbaa !3288
  call void @llvm.dbg.declare(metadata i8* %looks_like_a_dir, metadata !3289, metadata !DIExpression()), !dbg !3290
  %2 = load i64, i64* %blen, align 8, !dbg !3291, !tbaa !3288
  %cmp = icmp eq i64 %2, 0, !dbg !3292
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !3293

lor.rhs:                                          ; preds = %entry
  %3 = load i8*, i8** %b, align 8, !dbg !3294, !tbaa !2648
  %4 = load i64, i64* %blen, align 8, !dbg !3294, !tbaa !3288
  %sub = sub i64 %4, 1, !dbg !3294
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %sub, !dbg !3294, !ctir !180
  %5 = load i8, i8* %arrayidx, align 1, !dbg !3294, !tbaa !3295
  %conv = sext i8 %5 to i32, !dbg !3294
  %cmp2 = icmp eq i32 %conv, 47, !dbg !3294
  br label %lor.end, !dbg !3293

lor.end:                                          ; preds = %lor.rhs, %entry
  %6 = phi i1 [ true, %entry ], [ %cmp2, %lor.rhs ]
  %frombool = zext i1 %6 to i8, !dbg !3290
  store i8 %frombool, i8* %looks_like_a_dir, align 1, !dbg !3290, !tbaa !2742
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !3296, metadata !DIExpression()), !dbg !3297
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3298, metadata !DIExpression()), !dbg !3299
  %7 = load i8*, i8** %file.addr, align 8, !dbg !3300, !tbaa !2648
  %call4 = call i32 @stat(i8* %7, %struct.stat* %st) #9, !dbg !3301
  %cmp5 = icmp eq i32 %call4, 0, !dbg !3302
  br i1 %cmp5, label %cond.true, label %cond.false, !dbg !3301

cond.true:                                        ; preds = %lor.end
  br label %cond.end, !dbg !3301

cond.false:                                       ; preds = %lor.end
  %call7 = call i32* @__errno_location() #16, !dbg !3303
  %8 = load i32, i32* %call7, align 4, !dbg !3303, !tbaa !2635, !ctir !7
  br label %cond.end, !dbg !3301

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %8, %cond.false ], !dbg !3301
  store i32 %cond, i32* %err, align 4, !dbg !3299, !tbaa !2635
  call void @llvm.dbg.declare(metadata i8* %is_a_dir, metadata !3304, metadata !DIExpression()), !dbg !3305
  %9 = load i32, i32* %err, align 4, !dbg !3306, !tbaa !2635
  %tobool = icmp ne i32 %9, 0, !dbg !3306
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !3307

land.rhs:                                         ; preds = %cond.end
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !3308, !ctir !270
  %10 = load i32, i32* %st_mode, align 8, !dbg !3308, !tbaa !2914, !ctir !140
  %and = and i32 %10, 61440, !dbg !3308
  %cmp8 = icmp eq i32 %and, 16384, !dbg !3308
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.end
  %11 = phi i1 [ false, %cond.end ], [ %cmp8, %land.rhs ], !dbg !3309
  %frombool10 = zext i1 %11 to i8, !dbg !3305
  store i8 %frombool10, i8* %is_a_dir, align 1, !dbg !3305, !tbaa !2742
  %12 = load i32, i32* %err, align 4, !dbg !3310, !tbaa !2635
  %tobool11 = icmp ne i32 %12, 0, !dbg !3310
  br i1 %tobool11, label %land.lhs.true, label %if.end, !dbg !3312

land.lhs.true:                                    ; preds = %land.end
  %13 = load i32, i32* %err, align 4, !dbg !3313, !tbaa !2635
  %cmp12 = icmp ne i32 %13, 2, !dbg !3314
  br i1 %cmp12, label %if.then, label %if.end, !dbg !3315

if.then:                                          ; preds = %land.lhs.true
  %14 = load i32, i32* %err, align 4, !dbg !3316, !tbaa !2635
  %call14 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i64 0, i64 0)) #9, !dbg !3316
  %15 = load i8*, i8** %file.addr, align 8, !dbg !3316, !tbaa !2648
  %call15 = call i8* @quotearg_style(i32 4, i8* %15), !dbg !3316
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %14, i8* %call14, i8* %call15), !dbg !3316
  unreachable, !dbg !3316

if.end:                                           ; preds = %land.lhs.true, %land.end
  %16 = load i8, i8* %is_a_dir, align 1, !dbg !3317, !tbaa !2742
  %tobool16 = trunc i8 %16 to i1, !dbg !3317
  %conv17 = zext i1 %tobool16 to i32, !dbg !3317
  %17 = load i8, i8* %looks_like_a_dir, align 1, !dbg !3319, !tbaa !2742
  %tobool18 = trunc i8 %17 to i1, !dbg !3319
  %conv19 = zext i1 %tobool18 to i32, !dbg !3319
  %cmp20 = icmp slt i32 %conv17, %conv19, !dbg !3320
  br i1 %cmp20, label %if.then22, label %if.end25, !dbg !3321

if.then22:                                        ; preds = %if.end
  %18 = load i32, i32* %err, align 4, !dbg !3322, !tbaa !2635
  %call23 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22, i64 0, i64 0)) #9, !dbg !3322
  %19 = load i8*, i8** %file.addr, align 8, !dbg !3322, !tbaa !2648
  %call24 = call i8* @quotearg_style(i32 4, i8* %19), !dbg !3322
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %18, i8* %call23, i8* %call24), !dbg !3322
  unreachable, !dbg !3322

if.end25:                                         ; preds = %if.end
  %20 = load i8, i8* %is_a_dir, align 1, !dbg !3323, !tbaa !2742
  %tobool26 = trunc i8 %20 to i1, !dbg !3323
  ret i1 %tobool26, !dbg !3324
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @extra_mode(i32 %input) #4 !dbg !3325 !ctir !222 {
entry:
  %input.addr = alloca i32, align 4
  %mask = alloca i32, align 4, !ctir !139
  store i32 %input, i32* %input.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %input.addr, metadata !3326, metadata !DIExpression()), !dbg !3327
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !3328, metadata !DIExpression()), !dbg !3329
  store i32 61951, i32* %mask, align 4, !dbg !3329, !tbaa !2635
  %0 = load i32, i32* %input.addr, align 4, !dbg !3330, !tbaa !2635
  %1 = load i32, i32* %mask, align 4, !dbg !3331, !tbaa !2635
  %neg = xor i32 %1, -1, !dbg !3332
  %and = and i32 %0, %neg, !dbg !3333
  %tobool = icmp ne i32 %and, 0, !dbg !3334
  %lnot = xor i1 %tobool, true, !dbg !3334
  %lnot1 = xor i1 %lnot, true, !dbg !3335
  ret i1 %lnot1, !dbg !3336
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @get_ids() #4 !dbg !3337 !ctir !200 {
entry:
  %pw = alloca %struct.passwd*, align 8, !ctir !224
  %gr = alloca %struct.group*, align 8, !ctir !235
  %tmp = alloca i64, align 8, !ctir !57
  %tmp17 = alloca i64, align 8, !ctir !57
  call void @llvm.dbg.declare(metadata %struct.passwd** %pw, metadata !3338, metadata !DIExpression()), !dbg !3339
  call void @llvm.dbg.declare(metadata %struct.group** %gr, metadata !3340, metadata !DIExpression()), !dbg !3341
  %0 = load i8*, i8** @owner_name, align 8, !dbg !3342, !tbaa !2648
  %tobool = icmp ne i8* %0, null, !dbg !3342
  br i1 %tobool, label %if.then, label %if.else9, !dbg !3344

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** @owner_name, align 8, !dbg !3345, !tbaa !2648
  %call = call %struct.passwd* @getpwnam(i8* %1), !dbg !3347
  store %struct.passwd* %call, %struct.passwd** %pw, align 8, !dbg !3348, !tbaa !2648
  %2 = load %struct.passwd*, %struct.passwd** %pw, align 8, !dbg !3349, !tbaa !2648
  %cmp = icmp eq %struct.passwd* %2, null, !dbg !3351
  br i1 %cmp, label %if.then1, label %if.else, !dbg !3352

if.then1:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !3353, metadata !DIExpression()), !dbg !3355
  %3 = load i8*, i8** @owner_name, align 8, !dbg !3356, !tbaa !2648
  %call2 = call i32 @xstrtoul(i8* %3, i8** null, i32 0, i64* %tmp, i8* null), !dbg !3358
  %cmp3 = icmp ne i32 %call2, 0, !dbg !3359
  br i1 %cmp3, label %if.then5, label %lor.lhs.false, !dbg !3360

lor.lhs.false:                                    ; preds = %if.then1
  %4 = load i64, i64* %tmp, align 8, !dbg !3361, !tbaa !3288
  %cmp4 = icmp ult i64 4294967295, %4, !dbg !3362
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !3363

if.then5:                                         ; preds = %lor.lhs.false, %if.then1
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.70, i64 0, i64 0)) #9, !dbg !3364
  %5 = load i8*, i8** @owner_name, align 8, !dbg !3364, !tbaa !2648
  %call7 = call i8* @quote(i8* %5), !dbg !3364
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call6, i8* %call7), !dbg !3364
  unreachable, !dbg !3364

if.end:                                           ; preds = %lor.lhs.false
  %6 = load i64, i64* %tmp, align 8, !dbg !3365, !tbaa !3288
  %conv = trunc i64 %6 to i32, !dbg !3365
  store i32 %conv, i32* @owner_id, align 4, !dbg !3366, !tbaa !2635
  br label %if.end8, !dbg !3367

if.else:                                          ; preds = %if.then
  %7 = load %struct.passwd*, %struct.passwd** %pw, align 8, !dbg !3368, !tbaa !2648
  %pw_uid = getelementptr inbounds %struct.passwd, %struct.passwd* %7, i32 0, i32 2, !dbg !3369, !ctir !225
  %8 = load i32, i32* %pw_uid, align 8, !dbg !3369, !tbaa !3370, !ctir !128
  store i32 %8, i32* @owner_id, align 4, !dbg !3372, !tbaa !2635
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.end
  call void @endpwent(), !dbg !3373
  br label %if.end10, !dbg !3374

if.else9:                                         ; preds = %entry
  store i32 -1, i32* @owner_id, align 4, !dbg !3375, !tbaa !2635
  br label %if.end10

if.end10:                                         ; preds = %if.else9, %if.end8
  %9 = load i8*, i8** @group_name, align 8, !dbg !3376, !tbaa !2648
  %tobool11 = icmp ne i8* %9, null, !dbg !3376
  br i1 %tobool11, label %if.then12, label %if.else31, !dbg !3378

if.then12:                                        ; preds = %if.end10
  %10 = load i8*, i8** @group_name, align 8, !dbg !3379, !tbaa !2648
  %call13 = call %struct.group* @getgrnam(i8* %10), !dbg !3381
  store %struct.group* %call13, %struct.group** %gr, align 8, !dbg !3382, !tbaa !2648
  %11 = load %struct.group*, %struct.group** %gr, align 8, !dbg !3383, !tbaa !2648
  %cmp14 = icmp eq %struct.group* %11, null, !dbg !3385
  br i1 %cmp14, label %if.then16, label %if.else29, !dbg !3386

if.then16:                                        ; preds = %if.then12
  call void @llvm.dbg.declare(metadata i64* %tmp17, metadata !3387, metadata !DIExpression()), !dbg !3389
  %12 = load i8*, i8** @group_name, align 8, !dbg !3390, !tbaa !2648
  %call18 = call i32 @xstrtoul(i8* %12, i8** null, i32 0, i64* %tmp17, i8* null), !dbg !3392
  %cmp19 = icmp ne i32 %call18, 0, !dbg !3393
  br i1 %cmp19, label %if.then24, label %lor.lhs.false21, !dbg !3394

lor.lhs.false21:                                  ; preds = %if.then16
  %13 = load i64, i64* %tmp17, align 8, !dbg !3395, !tbaa !3288
  %cmp22 = icmp ult i64 4294967295, %13, !dbg !3396
  br i1 %cmp22, label %if.then24, label %if.end27, !dbg !3397

if.then24:                                        ; preds = %lor.lhs.false21, %if.then16
  %call25 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.71, i64 0, i64 0)) #9, !dbg !3398
  %14 = load i8*, i8** @group_name, align 8, !dbg !3398, !tbaa !2648
  %call26 = call i8* @quote(i8* %14), !dbg !3398
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call25, i8* %call26), !dbg !3398
  unreachable, !dbg !3398

if.end27:                                         ; preds = %lor.lhs.false21
  %15 = load i64, i64* %tmp17, align 8, !dbg !3399, !tbaa !3288
  %conv28 = trunc i64 %15 to i32, !dbg !3399
  store i32 %conv28, i32* @group_id, align 4, !dbg !3400, !tbaa !2635
  br label %if.end30, !dbg !3401

if.else29:                                        ; preds = %if.then12
  %16 = load %struct.group*, %struct.group** %gr, align 8, !dbg !3402, !tbaa !2648
  %gr_gid = getelementptr inbounds %struct.group, %struct.group* %16, i32 0, i32 2, !dbg !3403, !ctir !236
  %17 = load i32, i32* %gr_gid, align 8, !dbg !3403, !tbaa !3404, !ctir !130
  store i32 %17, i32* @group_id, align 4, !dbg !3406, !tbaa !2635
  br label %if.end30

if.end30:                                         ; preds = %if.else29, %if.end27
  call void @endgrent(), !dbg !3407
  br label %if.end32, !dbg !3408

if.else31:                                        ; preds = %if.end10
  store i32 -1, i32* @group_id, align 4, !dbg !3409, !tbaa !2635
  br label %if.end32

if.end32:                                         ; preds = %if.else31, %if.end30
  ret void, !dbg !3410
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @process_dir(i8* %dir, %struct.savewd* %wd, i8* %options) #4 !dbg !3411 !ctir !243 {
entry:
  %dir.addr = alloca i8*, align 8
  %wd.addr = alloca %struct.savewd*, align 8
  %options.addr = alloca i8*, align 8
  %x = alloca %struct.cp_options*, align 8, !ctir !246
  %ret = alloca i32, align 4, !ctir !7
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !3412, metadata !DIExpression()), !dbg !3413
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !3414, metadata !DIExpression()), !dbg !3415
  store i8* %options, i8** %options.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %options.addr, metadata !3416, metadata !DIExpression()), !dbg !3417
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x, metadata !3418, metadata !DIExpression()), !dbg !3419
  %0 = load i8*, i8** %options.addr, align 8, !dbg !3420, !tbaa !2648
  %1 = bitcast i8* %0 to %struct.cp_options*, !dbg !3420
  store %struct.cp_options* %1, %struct.cp_options** %x, align 8, !dbg !3419, !tbaa !2648
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3421, metadata !DIExpression()), !dbg !3422
  %2 = load i8*, i8** %dir.addr, align 8, !dbg !3423, !tbaa !2648
  %3 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !3424, !tbaa !2648
  %4 = load i8*, i8** %options.addr, align 8, !dbg !3425, !tbaa !2648
  %5 = load i32, i32* @dir_mode, align 4, !dbg !3426, !tbaa !2635
  %6 = load i32, i32* @dir_mode_bits, align 4, !dbg !3427, !tbaa !2635
  %7 = load i32, i32* @owner_id, align 4, !dbg !3428, !tbaa !2635
  %8 = load i32, i32* @group_id, align 4, !dbg !3429, !tbaa !2635
  %call = call zeroext i1 @make_dir_parents(i8* %2, %struct.savewd* %3, i32 (i8*, i8*, i8*)* @make_ancestor, i8* %4, i32 %5, void (i8*, i8*)* @announce_mkdir, i32 %6, i32 %7, i32 %8, i1 zeroext false), !dbg !3430
  %9 = zext i1 %call to i64, !dbg !3430
  %cond = select i1 %call, i32 0, i32 1, !dbg !3430
  store i32 %cond, i32* %ret, align 4, !dbg !3422, !tbaa !2635
  %10 = load i32, i32* %ret, align 4, !dbg !3431, !tbaa !2635
  %cmp = icmp eq i32 %10, 0, !dbg !3433
  br i1 %cmp, label %land.lhs.true, label %if.end10, !dbg !3434

land.lhs.true:                                    ; preds = %entry
  %11 = load %struct.cp_options*, %struct.cp_options** %x, align 8, !dbg !3435, !tbaa !2648
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 18, !dbg !3436, !ctir !247
  %12 = load i8, i8* %set_security_context, align 1, !dbg !3436, !tbaa !2866
  %tobool = trunc i8 %12 to i1, !dbg !3436, !ctir !142
  br i1 %tobool, label %if.then, label %if.end10, !dbg !3437

if.then:                                          ; preds = %land.lhs.true
  %13 = load i8*, i8** %dir.addr, align 8, !dbg !3438, !tbaa !2648
  %call1 = call i8* @last_component(i8* %13) #14, !dbg !3441
  %call2 = call zeroext i1 @restorecon(i8* %call1, i1 zeroext false, i1 zeroext false), !dbg !3442
  br i1 %call2, label %if.end, label %land.lhs.true3, !dbg !3443

land.lhs.true3:                                   ; preds = %if.then
  %call4 = call i32* @__errno_location() #16, !dbg !3444
  %14 = load i32, i32* %call4, align 4, !dbg !3444, !tbaa !2635, !ctir !7
  %call5 = call zeroext i1 @ignorable_ctx_err(i32 %14), !dbg !3445
  br i1 %call5, label %if.end, label %if.then6, !dbg !3446

if.then6:                                         ; preds = %land.lhs.true3
  %call7 = call i32* @__errno_location() #16, !dbg !3447
  %15 = load i32, i32* %call7, align 4, !dbg !3447, !tbaa !2635, !ctir !7
  %call8 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.72, i64 0, i64 0)) #9, !dbg !3448
  %16 = load i8*, i8** %dir.addr, align 8, !dbg !3449, !tbaa !2648
  %call9 = call i8* @quotearg_style(i32 4, i8* %16), !dbg !3449
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %15, i8* %call8, i8* %call9), !dbg !3450
  br label %if.end, !dbg !3450

if.end:                                           ; preds = %if.then6, %land.lhs.true3, %if.then
  br label %if.end10, !dbg !3451

if.end10:                                         ; preds = %if.end, %land.lhs.true, %entry
  %17 = load i32, i32* %ret, align 4, !dbg !3452, !tbaa !2635
  ret i32 %17, !dbg !3453
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @install_file_in_file_parents(i8* %from, i8* %to, %struct.cp_options* %x) #4 !dbg !3454 !ctir !258 {
entry:
  %from.addr = alloca i8*, align 8
  %to.addr = alloca i8*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  store i8* %from, i8** %from.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %from.addr, metadata !3455, metadata !DIExpression()), !dbg !3456
  store i8* %to, i8** %to.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %to.addr, metadata !3457, metadata !DIExpression()), !dbg !3458
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3459, metadata !DIExpression()), !dbg !3460
  %0 = load i8*, i8** %from.addr, align 8, !dbg !3461, !tbaa !2648
  %1 = load i8*, i8** %to.addr, align 8, !dbg !3462, !tbaa !2648
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3463, !tbaa !2648
  %call = call zeroext i1 @mkancesdirs_safe_wd(i8* %0, i8* %1, %struct.cp_options* %2, i1 zeroext false), !dbg !3464
  br i1 %call, label %land.rhs, label %land.end, !dbg !3465

land.rhs:                                         ; preds = %entry
  %3 = load i8*, i8** %from.addr, align 8, !dbg !3466, !tbaa !2648
  %4 = load i8*, i8** %to.addr, align 8, !dbg !3467, !tbaa !2648
  %5 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3468, !tbaa !2648
  %call1 = call zeroext i1 @install_file_in_file(i8* %3, i8* %4, %struct.cp_options* %5), !dbg !3469
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %6 = phi i1 [ false, %entry ], [ %call1, %land.rhs ], !dbg !3470
  ret i1 %6, !dbg !3471
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @install_file_in_file(i8* %from, i8* %to, %struct.cp_options* %x) #4 !dbg !3472 !ctir !262 {
entry:
  %retval = alloca i1, align 1
  %from.addr = alloca i8*, align 8
  %to.addr = alloca i8*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %from_sb = alloca %struct.stat, align 8, !ctir !270
  store i8* %from, i8** %from.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %from.addr, metadata !3473, metadata !DIExpression()), !dbg !3474
  store i8* %to, i8** %to.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %to.addr, metadata !3475, metadata !DIExpression()), !dbg !3476
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3477, metadata !DIExpression()), !dbg !3478
  call void @llvm.dbg.declare(metadata %struct.stat* %from_sb, metadata !3479, metadata !DIExpression()), !dbg !3480
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3481, !tbaa !2648
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 16, !dbg !3483, !ctir !247
  %1 = load i8, i8* %preserve_timestamps, align 1, !dbg !3483, !tbaa !2826
  %tobool = trunc i8 %1 to i1, !dbg !3483, !ctir !142
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3484

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %from.addr, align 8, !dbg !3485, !tbaa !2648
  %call = call i32 @stat(i8* %2, %struct.stat* %from_sb) #9, !dbg !3486
  %cmp = icmp ne i32 %call, 0, !dbg !3487
  br i1 %cmp, label %if.then, label %if.end, !dbg !3488

if.then:                                          ; preds = %land.lhs.true
  %call1 = call i32* @__errno_location() #16, !dbg !3489
  %3 = load i32, i32* %call1, align 4, !dbg !3489, !tbaa !2635, !ctir !7
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.76, i64 0, i64 0)) #9, !dbg !3491
  %4 = load i8*, i8** %from.addr, align 8, !dbg !3492, !tbaa !2648
  %call3 = call i8* @quotearg_style(i32 4, i8* %4), !dbg !3492
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %3, i8* %call2, i8* %call3), !dbg !3493
  store i1 false, i1* %retval, align 1, !dbg !3494
  br label %return, !dbg !3494

if.end:                                           ; preds = %land.lhs.true, %entry
  %5 = load i8*, i8** %from.addr, align 8, !dbg !3495, !tbaa !2648
  %6 = load i8*, i8** %to.addr, align 8, !dbg !3497, !tbaa !2648
  %7 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3498, !tbaa !2648
  %call4 = call zeroext i1 @copy_file(i8* %5, i8* %6, %struct.cp_options* %7), !dbg !3499
  br i1 %call4, label %if.end6, label %if.then5, !dbg !3500

if.then5:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !3501
  br label %return, !dbg !3501

if.end6:                                          ; preds = %if.end
  %8 = load i8, i8* @strip_files, align 1, !dbg !3502, !tbaa !2742
  %tobool7 = trunc i8 %8 to i1, !dbg !3502
  br i1 %tobool7, label %if.then8, label %if.end19, !dbg !3504

if.then8:                                         ; preds = %if.end6
  %9 = load i8*, i8** %to.addr, align 8, !dbg !3505, !tbaa !2648
  %call9 = call zeroext i1 @strip(i8* %9), !dbg !3507
  br i1 %call9, label %if.end18, label %if.then10, !dbg !3508

if.then10:                                        ; preds = %if.then8
  %10 = load i8*, i8** %to.addr, align 8, !dbg !3509, !tbaa !2648
  %call11 = call i32 @unlink(i8* %10) #9, !dbg !3512
  %cmp12 = icmp ne i32 %call11, 0, !dbg !3513
  br i1 %cmp12, label %if.then13, label %if.end17, !dbg !3514

if.then13:                                        ; preds = %if.then10
  %call14 = call i32* @__errno_location() #16, !dbg !3515
  %11 = load i32, i32* %call14, align 4, !dbg !3515, !tbaa !2635, !ctir !7
  %call15 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.77, i64 0, i64 0)) #9, !dbg !3515
  %12 = load i8*, i8** %to.addr, align 8, !dbg !3515, !tbaa !2648
  %call16 = call i8* @quotearg_style(i32 4, i8* %12), !dbg !3515
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %11, i8* %call15, i8* %call16), !dbg !3515
  unreachable, !dbg !3515

if.end17:                                         ; preds = %if.then10
  store i1 false, i1* %retval, align 1, !dbg !3516
  br label %return, !dbg !3516

if.end18:                                         ; preds = %if.then8
  br label %if.end19, !dbg !3517

if.end19:                                         ; preds = %if.end18, %if.end6
  %13 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3518, !tbaa !2648
  %preserve_timestamps20 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %13, i32 0, i32 16, !dbg !3520, !ctir !247
  %14 = load i8, i8* %preserve_timestamps20, align 1, !dbg !3520, !tbaa !2826
  %tobool21 = trunc i8 %14 to i1, !dbg !3520, !ctir !142
  br i1 %tobool21, label %land.lhs.true22, label %if.end28, !dbg !3521

land.lhs.true22:                                  ; preds = %if.end19
  %15 = load i8, i8* @strip_files, align 1, !dbg !3522, !tbaa !2742
  %tobool23 = trunc i8 %15 to i1, !dbg !3522
  br i1 %tobool23, label %land.lhs.true25, label %lor.lhs.false, !dbg !3523

lor.lhs.false:                                    ; preds = %land.lhs.true22
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %from_sb, i32 0, i32 3, !dbg !3524, !ctir !270
  %16 = load i32, i32* %st_mode, align 8, !dbg !3524, !tbaa !2914, !ctir !140
  %and = and i32 %16, 61440, !dbg !3524
  %cmp24 = icmp eq i32 %and, 32768, !dbg !3524
  br i1 %cmp24, label %if.end28, label %land.lhs.true25, !dbg !3525

land.lhs.true25:                                  ; preds = %lor.lhs.false, %land.lhs.true22
  %17 = load i8*, i8** %to.addr, align 8, !dbg !3526, !tbaa !2648
  %call26 = call zeroext i1 @change_timestamps(%struct.stat* %from_sb, i8* %17), !dbg !3527
  br i1 %call26, label %if.end28, label %if.then27, !dbg !3528

if.then27:                                        ; preds = %land.lhs.true25
  store i1 false, i1* %retval, align 1, !dbg !3529
  br label %return, !dbg !3529

if.end28:                                         ; preds = %land.lhs.true25, %lor.lhs.false, %if.end19
  %18 = load i8*, i8** %to.addr, align 8, !dbg !3530, !tbaa !2648
  %call29 = call zeroext i1 @change_attributes(i8* %18), !dbg !3531
  store i1 %call29, i1* %retval, align 1, !dbg !3532
  br label %return, !dbg !3532

return:                                           ; preds = %if.end28, %if.then27, %if.end17, %if.then5, %if.then
  %19 = load i1, i1* %retval, align 1, !dbg !3533
  ret i1 %19, !dbg !3533
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @install_file_in_dir(i8* %from, i8* %to_dir, %struct.cp_options* %x, i1 zeroext %mkdir_and_install) #4 !dbg !3534 !ctir !306 {
entry:
  %from.addr = alloca i8*, align 8
  %to_dir.addr = alloca i8*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %mkdir_and_install.addr = alloca i8, align 1
  %from_base = alloca i8*, align 8, !ctir !180
  %to = alloca i8*, align 8, !ctir !9
  %ret = alloca i8, align 1, !ctir !142
  store i8* %from, i8** %from.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %from.addr, metadata !3535, metadata !DIExpression()), !dbg !3536
  store i8* %to_dir, i8** %to_dir.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %to_dir.addr, metadata !3537, metadata !DIExpression()), !dbg !3538
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3539, metadata !DIExpression()), !dbg !3540
  %frombool = zext i1 %mkdir_and_install to i8
  store i8 %frombool, i8* %mkdir_and_install.addr, align 1, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %mkdir_and_install.addr, metadata !3541, metadata !DIExpression()), !dbg !3542
  call void @llvm.dbg.declare(metadata i8** %from_base, metadata !3543, metadata !DIExpression()), !dbg !3544
  %0 = load i8*, i8** %from.addr, align 8, !dbg !3545, !tbaa !2648
  %call = call i8* @last_component(i8* %0) #14, !dbg !3546
  store i8* %call, i8** %from_base, align 8, !dbg !3544, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %to, metadata !3547, metadata !DIExpression()), !dbg !3548
  %1 = load i8*, i8** %to_dir.addr, align 8, !dbg !3549, !tbaa !2648
  %2 = load i8*, i8** %from_base, align 8, !dbg !3550, !tbaa !2648
  %call1 = call i8* @file_name_concat(i8* %1, i8* %2, i8** null), !dbg !3551
  store i8* %call1, i8** %to, align 8, !dbg !3548, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !3552, metadata !DIExpression()), !dbg !3553
  store i8 1, i8* %ret, align 1, !dbg !3553, !tbaa !2742
  %3 = load i8, i8* %mkdir_and_install.addr, align 1, !dbg !3554, !tbaa !2742
  %tobool = trunc i8 %3 to i1, !dbg !3554
  br i1 %tobool, label %if.then, label %if.end, !dbg !3556

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %from.addr, align 8, !dbg !3557, !tbaa !2648
  %5 = load i8*, i8** %to, align 8, !dbg !3558, !tbaa !2648
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3559, !tbaa !2648
  %call2 = call zeroext i1 @mkancesdirs_safe_wd(i8* %4, i8* %5, %struct.cp_options* %6, i1 zeroext true), !dbg !3560
  %frombool3 = zext i1 %call2 to i8, !dbg !3561
  store i8 %frombool3, i8* %ret, align 1, !dbg !3561, !tbaa !2742
  br label %if.end, !dbg !3562

if.end:                                           ; preds = %if.then, %entry
  %7 = load i8, i8* %ret, align 1, !dbg !3563, !tbaa !2742
  %tobool4 = trunc i8 %7 to i1, !dbg !3563
  br i1 %tobool4, label %land.rhs, label %land.end, !dbg !3564

land.rhs:                                         ; preds = %if.end
  %8 = load i8*, i8** %from.addr, align 8, !dbg !3565, !tbaa !2648
  %9 = load i8*, i8** %to, align 8, !dbg !3566, !tbaa !2648
  %10 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3567, !tbaa !2648
  %call5 = call zeroext i1 @install_file_in_file(i8* %8, i8* %9, %struct.cp_options* %10), !dbg !3568
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %11 = phi i1 [ false, %if.end ], [ %call5, %land.rhs ], !dbg !3569
  %frombool6 = zext i1 %11 to i8, !dbg !3570
  store i8 %frombool6, i8* %ret, align 1, !dbg !3570, !tbaa !2742
  %12 = load i8*, i8** %to, align 8, !dbg !3571, !tbaa !2648
  call void @free(i8* %12) #9, !dbg !3572
  %13 = load i8, i8* %ret, align 1, !dbg !3573, !tbaa !2742
  %tobool7 = trunc i8 %13 to i1, !dbg !3573
  ret i1 %tobool7, !dbg !3574
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @mkancesdirs_safe_wd(i8* %from, i8* %to, %struct.cp_options* %x, i1 zeroext %save_always) #4 !dbg !3575 !ctir !260 {
entry:
  %retval = alloca i1, align 1
  %from.addr = alloca i8*, align 8
  %to.addr = alloca i8*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %save_always.addr = alloca i8, align 1
  %save_working_directory = alloca i8, align 1, !ctir !142
  %status = alloca i32, align 4, !ctir !7
  %wd = alloca %struct.savewd, align 4, !ctir !102
  %restore_result = alloca i32, align 4, !ctir !7
  %restore_errno = alloca i32, align 4, !ctir !7
  store i8* %from, i8** %from.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %from.addr, metadata !3576, metadata !DIExpression()), !dbg !3577
  store i8* %to, i8** %to.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %to.addr, metadata !3578, metadata !DIExpression()), !dbg !3579
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3580, metadata !DIExpression()), !dbg !3581
  %frombool = zext i1 %save_always to i8
  store i8 %frombool, i8* %save_always.addr, align 1, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %save_always.addr, metadata !3582, metadata !DIExpression()), !dbg !3583
  call void @llvm.dbg.declare(metadata i8* %save_working_directory, metadata !3584, metadata !DIExpression()), !dbg !3585
  %0 = load i8, i8* %save_always.addr, align 1, !dbg !3586, !tbaa !2742
  %tobool = trunc i8 %0 to i1, !dbg !3586
  br i1 %tobool, label %lor.end7, label %lor.rhs, !dbg !3587

lor.rhs:                                          ; preds = %entry
  %1 = load i8*, i8** %from.addr, align 8, !dbg !3588, !tbaa !2648
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !3588, !ctir !180
  %2 = load i8, i8* %arrayidx, align 1, !dbg !3588, !tbaa !3295
  %conv = sext i8 %2 to i32, !dbg !3588
  %cmp = icmp eq i32 %conv, 47, !dbg !3588
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3589

land.rhs:                                         ; preds = %lor.rhs
  %3 = load i8*, i8** %to.addr, align 8, !dbg !3590, !tbaa !2648
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 0, !dbg !3590, !ctir !9
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !3590, !tbaa !3295
  %conv3 = sext i8 %4 to i32, !dbg !3590
  %cmp4 = icmp eq i32 %conv3, 47, !dbg !3590
  br i1 %cmp4, label %lor.end, label %lor.rhs6, !dbg !3590

lor.rhs6:                                         ; preds = %land.rhs
  br label %lor.end, !dbg !3590

lor.end:                                          ; preds = %lor.rhs6, %land.rhs
  %5 = phi i1 [ true, %land.rhs ], [ false, %lor.rhs6 ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %lor.rhs
  %6 = phi i1 [ false, %lor.rhs ], [ %5, %lor.end ], !dbg !3591
  %lnot = xor i1 %6, true, !dbg !3592
  br label %lor.end7, !dbg !3587

lor.end7:                                         ; preds = %land.end, %entry
  %7 = phi i1 [ true, %entry ], [ %lnot, %land.end ]
  %frombool8 = zext i1 %7 to i8, !dbg !3585
  store i8 %frombool8, i8* %save_working_directory, align 1, !dbg !3585, !tbaa !2742
  call void @llvm.dbg.declare(metadata i32* %status, metadata !3593, metadata !DIExpression()), !dbg !3594
  store i32 0, i32* %status, align 4, !dbg !3594, !tbaa !2635
  call void @llvm.dbg.declare(metadata %struct.savewd* %wd, metadata !3595, metadata !DIExpression()), !dbg !3596
  call void @savewd_init(%struct.savewd* %wd), !dbg !3597
  %8 = load i8, i8* %save_working_directory, align 1, !dbg !3598, !tbaa !2742
  %tobool9 = trunc i8 %8 to i1, !dbg !3598
  br i1 %tobool9, label %if.end, label %if.then, !dbg !3600

if.then:                                          ; preds = %lor.end7
  call void @savewd_finish(%struct.savewd* %wd), !dbg !3601
  br label %if.end, !dbg !3601

if.end:                                           ; preds = %if.then, %lor.end7
  %9 = load i8*, i8** %to.addr, align 8, !dbg !3602, !tbaa !2648
  %10 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3604, !tbaa !2648
  %11 = bitcast %struct.cp_options* %10 to i8*, !dbg !3604
  %call = call i64 @mkancesdirs(i8* %9, %struct.savewd* %wd, i32 (i8*, i8*, i8*)* @make_ancestor, i8* %11), !dbg !3605
  %cmp10 = icmp eq i64 %call, -1, !dbg !3606
  br i1 %cmp10, label %if.then12, label %if.end16, !dbg !3607

if.then12:                                        ; preds = %if.end
  %call13 = call i32* @__errno_location() #16, !dbg !3608
  %12 = load i32, i32* %call13, align 4, !dbg !3608, !tbaa !2635, !ctir !7
  %call14 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.75, i64 0, i64 0)) #9, !dbg !3610
  %13 = load i8*, i8** %to.addr, align 8, !dbg !3611, !tbaa !2648
  %call15 = call i8* @quotearg_style(i32 4, i8* %13), !dbg !3611
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %12, i8* %call14, i8* %call15), !dbg !3612
  store i32 1, i32* %status, align 4, !dbg !3613, !tbaa !2635
  br label %if.end16, !dbg !3614

if.end16:                                         ; preds = %if.then12, %if.end
  %14 = load i8, i8* %save_working_directory, align 1, !dbg !3615, !tbaa !2742
  %tobool17 = trunc i8 %14 to i1, !dbg !3615
  br i1 %tobool17, label %if.then18, label %if.end33, !dbg !3617

if.then18:                                        ; preds = %if.end16
  call void @llvm.dbg.declare(metadata i32* %restore_result, metadata !3618, metadata !DIExpression()), !dbg !3620
  %15 = load i32, i32* %status, align 4, !dbg !3621, !tbaa !2635
  %call19 = call i32 @savewd_restore(%struct.savewd* %wd, i32 %15), !dbg !3622
  store i32 %call19, i32* %restore_result, align 4, !dbg !3620, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %restore_errno, metadata !3623, metadata !DIExpression()), !dbg !3624
  %call20 = call i32* @__errno_location() #16, !dbg !3625
  %16 = load i32, i32* %call20, align 4, !dbg !3625, !tbaa !2635, !ctir !7
  store i32 %16, i32* %restore_errno, align 4, !dbg !3624, !tbaa !2635
  call void @savewd_finish(%struct.savewd* %wd), !dbg !3626
  %17 = load i32, i32* %restore_result, align 4, !dbg !3627, !tbaa !2635
  %cmp21 = icmp slt i32 0, %17, !dbg !3629
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !3630

if.then23:                                        ; preds = %if.then18
  store i1 false, i1* %retval, align 1, !dbg !3631
  br label %return, !dbg !3631

if.end24:                                         ; preds = %if.then18
  %18 = load i32, i32* %restore_result, align 4, !dbg !3632, !tbaa !2635
  %cmp25 = icmp slt i32 %18, 0, !dbg !3634
  br i1 %cmp25, label %land.lhs.true, label %if.end32, !dbg !3635

land.lhs.true:                                    ; preds = %if.end24
  %19 = load i32, i32* %status, align 4, !dbg !3636, !tbaa !2635
  %cmp27 = icmp eq i32 %19, 0, !dbg !3637
  br i1 %cmp27, label %if.then29, label %if.end32, !dbg !3638

if.then29:                                        ; preds = %land.lhs.true
  %20 = load i32, i32* %restore_errno, align 4, !dbg !3639, !tbaa !2635
  %call30 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.75, i64 0, i64 0)) #9, !dbg !3641
  %21 = load i8*, i8** %to.addr, align 8, !dbg !3642, !tbaa !2648
  %call31 = call i8* @quotearg_style(i32 4, i8* %21), !dbg !3642
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %20, i8* %call30, i8* %call31), !dbg !3643
  store i1 false, i1* %retval, align 1, !dbg !3644
  br label %return, !dbg !3644

if.end32:                                         ; preds = %land.lhs.true, %if.end24
  br label %if.end33, !dbg !3645

if.end33:                                         ; preds = %if.end32, %if.end16
  %22 = load i32, i32* %status, align 4, !dbg !3646, !tbaa !2635
  %cmp34 = icmp eq i32 %22, 0, !dbg !3647
  store i1 %cmp34, i1* %retval, align 1, !dbg !3648
  br label %return, !dbg !3648

return:                                           ; preds = %if.end33, %if.then29, %if.then23
  %23 = load i1, i1* %retval, align 1, !dbg !3649
  ret i1 %23, !dbg !3649
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @make_ancestor(i8* %dir, i8* %component, i8* %options) #4 !dbg !3650 !ctir !248 {
entry:
  %dir.addr = alloca i8*, align 8
  %component.addr = alloca i8*, align 8
  %options.addr = alloca i8*, align 8
  %x = alloca %struct.cp_options*, align 8, !ctir !246
  %r = alloca i32, align 4, !ctir !7
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !3651, metadata !DIExpression()), !dbg !3652
  store i8* %component, i8** %component.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %component.addr, metadata !3653, metadata !DIExpression()), !dbg !3654
  store i8* %options, i8** %options.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %options.addr, metadata !3655, metadata !DIExpression()), !dbg !3656
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x, metadata !3657, metadata !DIExpression()), !dbg !3658
  %0 = load i8*, i8** %options.addr, align 8, !dbg !3659, !tbaa !2648
  %1 = bitcast i8* %0 to %struct.cp_options*, !dbg !3659
  store %struct.cp_options* %1, %struct.cp_options** %x, align 8, !dbg !3658, !tbaa !2648
  %2 = load %struct.cp_options*, %struct.cp_options** %x, align 8, !dbg !3660, !tbaa !2648
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 18, !dbg !3662, !ctir !247
  %3 = load i8, i8* %set_security_context, align 1, !dbg !3662, !tbaa !2866
  %tobool = trunc i8 %3 to i1, !dbg !3662, !ctir !142
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3663

land.lhs.true:                                    ; preds = %entry
  %4 = load i8*, i8** %component.addr, align 8, !dbg !3664, !tbaa !2648
  %call = call i32 @defaultcon(i8* %4, i32 16384), !dbg !3665
  %cmp = icmp slt i32 %call, 0, !dbg !3666
  br i1 %cmp, label %land.lhs.true1, label %if.end, !dbg !3667

land.lhs.true1:                                   ; preds = %land.lhs.true
  %call2 = call i32* @__errno_location() #16, !dbg !3668
  %5 = load i32, i32* %call2, align 4, !dbg !3668, !tbaa !2635, !ctir !7
  %call3 = call zeroext i1 @ignorable_ctx_err(i32 %5), !dbg !3669
  br i1 %call3, label %if.end, label %if.then, !dbg !3670

if.then:                                          ; preds = %land.lhs.true1
  %call4 = call i32* @__errno_location() #16, !dbg !3671
  %6 = load i32, i32* %call4, align 4, !dbg !3671, !tbaa !2635, !ctir !7
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.73, i64 0, i64 0)) #9, !dbg !3672
  %7 = load i8*, i8** %dir.addr, align 8, !dbg !3673, !tbaa !2648
  %call6 = call i8* @quotearg_style(i32 4, i8* %7), !dbg !3673
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* %call5, i8* %call6), !dbg !3674
  br label %if.end, !dbg !3674

if.end:                                           ; preds = %if.then, %land.lhs.true1, %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata i32* %r, metadata !3675, metadata !DIExpression()), !dbg !3676
  %8 = load i8*, i8** %component.addr, align 8, !dbg !3677, !tbaa !2648
  %call7 = call i32 @mkdir(i8* %8, i32 493) #9, !dbg !3678
  store i32 %call7, i32* %r, align 4, !dbg !3676, !tbaa !2635
  %9 = load i32, i32* %r, align 4, !dbg !3679, !tbaa !2635
  %cmp8 = icmp eq i32 %9, 0, !dbg !3681
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !3682

if.then9:                                         ; preds = %if.end
  %10 = load i8*, i8** %dir.addr, align 8, !dbg !3683, !tbaa !2648
  %11 = load i8*, i8** %options.addr, align 8, !dbg !3684, !tbaa !2648
  call void @announce_mkdir(i8* %10, i8* %11), !dbg !3685
  br label %if.end10, !dbg !3685

if.end10:                                         ; preds = %if.then9, %if.end
  %12 = load i32, i32* %r, align 4, !dbg !3686, !tbaa !2635
  ret i32 %12, !dbg !3687
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @defaultcon(i8* %path, i32 %mode) #4 !dbg !3688 !ctir !250 {
entry:
  %path.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  store i8* %path, i8** %path.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !3690, metadata !DIExpression()), !dbg !3691
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !3692, metadata !DIExpression()), !dbg !3693
  %call = call i32* @__errno_location() #16, !dbg !3694
  store i32 95, i32* %call, align 4, !dbg !3695, !tbaa !2635, !ctir !7
  ret i32 -1, !dbg !3696
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @ignorable_ctx_err(i32 %err) #4 !dbg !3697 !ctir !256 {
entry:
  %err.addr = alloca i32, align 4
  store i32 %err, i32* %err.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !3698, metadata !DIExpression()), !dbg !3699
  %0 = load i32, i32* %err.addr, align 4, !dbg !3700, !tbaa !2635
  %cmp = icmp eq i32 %0, 95, !dbg !3701
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !3702

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %err.addr, align 4, !dbg !3703, !tbaa !2635
  %cmp1 = icmp eq i32 %1, 61, !dbg !3704
  br label %lor.end, !dbg !3702

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !3705
}

; Function Attrs: nounwind
declare dso_local i32 @mkdir(i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @announce_mkdir(i8* %dir, i8* %options) #4 !dbg !3706 !ctir !252 {
entry:
  %dir.addr = alloca i8*, align 8
  %options.addr = alloca i8*, align 8
  %x = alloca %struct.cp_options*, align 8, !ctir !246
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !3707, metadata !DIExpression()), !dbg !3708
  store i8* %options, i8** %options.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %options.addr, metadata !3709, metadata !DIExpression()), !dbg !3710
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x, metadata !3711, metadata !DIExpression()), !dbg !3712
  %0 = load i8*, i8** %options.addr, align 8, !dbg !3713, !tbaa !2648
  %1 = bitcast i8* %0 to %struct.cp_options*, !dbg !3713
  store %struct.cp_options* %1, %struct.cp_options** %x, align 8, !dbg !3712, !tbaa !2648
  %2 = load %struct.cp_options*, %struct.cp_options** %x, align 8, !dbg !3714, !tbaa !2648
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 31, !dbg !3716, !ctir !247
  %3 = load i8, i8* %verbose, align 2, !dbg !3716, !tbaa !2812
  %tobool = trunc i8 %3 to i1, !dbg !3716, !ctir !142
  br i1 %tobool, label %if.then, label %if.end, !dbg !3717

if.then:                                          ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3718, !tbaa !2648
  %call = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.74, i64 0, i64 0)) #9, !dbg !3719
  %5 = load i8*, i8** %dir.addr, align 8, !dbg !3720, !tbaa !2648
  %call1 = call i8* @quotearg_style(i32 4, i8* %5), !dbg !3720
  call void (%struct._IO_FILE*, i8*, ...) @prog_fprintf(%struct._IO_FILE* %4, i8* %call, i8* %call1), !dbg !3721
  br label %if.end, !dbg !3721

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !3722
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_file(i8* %from, i8* %to, %struct.cp_options* %x) #4 !dbg !3723 !ctir !262 {
entry:
  %retval = alloca i1, align 1
  %from.addr = alloca i8*, align 8
  %to.addr = alloca i8*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %copy_into_self = alloca i8, align 1, !ctir !142
  store i8* %from, i8** %from.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %from.addr, metadata !3724, metadata !DIExpression()), !dbg !3725
  store i8* %to, i8** %to.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %to.addr, metadata !3726, metadata !DIExpression()), !dbg !3727
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3728, metadata !DIExpression()), !dbg !3729
  call void @llvm.dbg.declare(metadata i8* %copy_into_self, metadata !3730, metadata !DIExpression()), !dbg !3731
  %0 = load i8, i8* @copy_only_if_needed, align 1, !dbg !3732, !tbaa !2742
  %tobool = trunc i8 %0 to i1, !dbg !3732
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3734

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %from.addr, align 8, !dbg !3735, !tbaa !2648
  %2 = load i8*, i8** %to.addr, align 8, !dbg !3736, !tbaa !2648
  %3 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3737, !tbaa !2648
  %call = call zeroext i1 @need_copy(i8* %1, i8* %2, %struct.cp_options* %3), !dbg !3738
  br i1 %call, label %if.end, label %if.then, !dbg !3739

if.then:                                          ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !3740
  br label %return, !dbg !3740

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load i8*, i8** %from.addr, align 8, !dbg !3741, !tbaa !2648
  %5 = load i8*, i8** %to.addr, align 8, !dbg !3742, !tbaa !2648
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3743, !tbaa !2648
  %call1 = call zeroext i1 @copy(i8* %4, i8* %5, i1 zeroext false, %struct.cp_options* %6, i8* %copy_into_self, i8* null), !dbg !3744
  store i1 %call1, i1* %retval, align 1, !dbg !3745
  br label %return, !dbg !3745

return:                                           ; preds = %if.end, %if.then
  %7 = load i1, i1* %retval, align 1, !dbg !3746
  ret i1 %7, !dbg !3746
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @strip(i8* %name) #4 !dbg !3747 !ctir !220 {
entry:
  %name.addr = alloca i8*, align 8
  %status = alloca i32, align 4, !ctir !7
  %ok = alloca i8, align 1, !ctir !142
  %pid = alloca i32, align 4, !ctir !111
  store i8* %name, i8** %name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3748, metadata !DIExpression()), !dbg !3749
  call void @llvm.dbg.declare(metadata i32* %status, metadata !3750, metadata !DIExpression()), !dbg !3751
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !3752, metadata !DIExpression()), !dbg !3753
  store i8 0, i8* %ok, align 1, !dbg !3753, !tbaa !2742
  call void @llvm.dbg.declare(metadata i32* %pid, metadata !3754, metadata !DIExpression()), !dbg !3755
  %call = call i32 @fork() #9, !dbg !3756
  store i32 %call, i32* %pid, align 4, !dbg !3755, !tbaa !2635
  %0 = load i32, i32* %pid, align 4, !dbg !3757, !tbaa !2635
  switch i32 %0, label %sw.default [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb3
  ], !dbg !3758

sw.bb:                                            ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !3759
  %1 = load i32, i32* %call1, align 4, !dbg !3759, !tbaa !2635, !ctir !7
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.78, i64 0, i64 0)) #9, !dbg !3761
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %1, i8* %call2), !dbg !3762
  br label %sw.epilog, !dbg !3763

sw.bb3:                                           ; preds = %entry
  %2 = load i8*, i8** @strip_program, align 8, !dbg !3764, !tbaa !2648
  %3 = load i8*, i8** @strip_program, align 8, !dbg !3765, !tbaa !2648
  %4 = load i8*, i8** %name.addr, align 8, !dbg !3766, !tbaa !2648
  %call4 = call i32 (i8*, i8*, ...) @execlp(i8* %2, i8* %3, i8* %4, i8* null) #9, !dbg !3767
  %call5 = call i32* @__errno_location() #16, !dbg !3768
  %5 = load i32, i32* %call5, align 4, !dbg !3768, !tbaa !2635, !ctir !7
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.79, i64 0, i64 0)) #9, !dbg !3768
  %6 = load i8*, i8** @strip_program, align 8, !dbg !3768, !tbaa !2648
  %call7 = call i8* @quotearg_style(i32 4, i8* %6), !dbg !3768
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %5, i8* %call6, i8* %call7), !dbg !3768
  unreachable, !dbg !3768

sw.default:                                       ; preds = %entry
  %7 = load i32, i32* %pid, align 4, !dbg !3769, !tbaa !2635
  %call8 = call i32 @waitpid(i32 %7, i32* %status, i32 0), !dbg !3771
  %cmp = icmp slt i32 %call8, 0, !dbg !3772
  br i1 %cmp, label %if.then, label %if.else, !dbg !3773

if.then:                                          ; preds = %sw.default
  %call9 = call i32* @__errno_location() #16, !dbg !3774
  %8 = load i32, i32* %call9, align 4, !dbg !3774, !tbaa !2635, !ctir !7
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.80, i64 0, i64 0)) #9, !dbg !3775
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %8, i8* %call10), !dbg !3776
  br label %if.end16, !dbg !3776

if.else:                                          ; preds = %sw.default
  %9 = load i32, i32* %status, align 4, !dbg !3777, !tbaa !2635
  %and = and i32 %9, 127, !dbg !3777
  %cmp11 = icmp eq i32 %and, 0, !dbg !3777
  br i1 %cmp11, label %lor.lhs.false, label %if.then13, !dbg !3779

lor.lhs.false:                                    ; preds = %if.else
  %10 = load i32, i32* %status, align 4, !dbg !3780, !tbaa !2635
  %and12 = and i32 %10, 65280, !dbg !3780
  %shr = ashr i32 %and12, 8, !dbg !3780
  %tobool = icmp ne i32 %shr, 0, !dbg !3780
  br i1 %tobool, label %if.then13, label %if.else15, !dbg !3781

if.then13:                                        ; preds = %lor.lhs.false, %if.else
  %call14 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.81, i64 0, i64 0)) #9, !dbg !3782
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call14), !dbg !3783
  br label %if.end, !dbg !3783

if.else15:                                        ; preds = %lor.lhs.false
  store i8 1, i8* %ok, align 1, !dbg !3784, !tbaa !2742
  br label %if.end

if.end:                                           ; preds = %if.else15, %if.then13
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then
  br label %sw.epilog, !dbg !3785

sw.epilog:                                        ; preds = %if.end16, %sw.bb
  %11 = load i8, i8* %ok, align 1, !dbg !3786, !tbaa !2742
  %tobool17 = trunc i8 %11 to i1, !dbg !3786
  ret i1 %tobool17, !dbg !3787
}

; Function Attrs: nounwind
declare dso_local i32 @unlink(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @change_timestamps(%struct.stat* %src_sb, i8* %dest) #4 !dbg !3788 !ctir !266 {
entry:
  %retval = alloca i1, align 1
  %src_sb.addr = alloca %struct.stat*, align 8
  %dest.addr = alloca i8*, align 8
  %timespec = alloca [2 x %struct.timespec], align 16, !ctir !303
  %tmp = alloca %struct.timespec, align 8
  %tmp2 = alloca %struct.timespec, align 8
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !3789, metadata !DIExpression()), !dbg !3790
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !3791, metadata !DIExpression()), !dbg !3792
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timespec, metadata !3793, metadata !DIExpression()), !dbg !3794
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !3795, !ctir !303
  %0 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !3796, !tbaa !2648
  %call = call { i64, i64 } @get_stat_atime(%struct.stat* %0) #14, !dbg !3797
  %1 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !3797
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !3797
  %3 = extractvalue { i64, i64 } %call, 0, !dbg !3797
  store i64 %3, i64* %2, align 8, !dbg !3797
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !3797
  %5 = extractvalue { i64, i64 } %call, 1, !dbg !3797
  store i64 %5, i64* %4, align 8, !dbg !3797
  %6 = bitcast %struct.timespec* %arrayidx to i8*, !dbg !3797
  %7 = bitcast %struct.timespec* %tmp to i8*, !dbg !3797
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %6, i8* align 8 %7, i64 16, i1 false), !dbg !3797, !tbaa.struct !3798
  %arrayidx1 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !3799, !ctir !303
  %8 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !3800, !tbaa !2648
  %call3 = call { i64, i64 } @get_stat_mtime(%struct.stat* %8) #14, !dbg !3801
  %9 = bitcast %struct.timespec* %tmp2 to { i64, i64 }*, !dbg !3801
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !3801
  %11 = extractvalue { i64, i64 } %call3, 0, !dbg !3801
  store i64 %11, i64* %10, align 8, !dbg !3801
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !3801
  %13 = extractvalue { i64, i64 } %call3, 1, !dbg !3801
  store i64 %13, i64* %12, align 8, !dbg !3801
  %14 = bitcast %struct.timespec* %arrayidx1 to i8*, !dbg !3801
  %15 = bitcast %struct.timespec* %tmp2 to i8*, !dbg !3801
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %14, i8* align 8 %15, i64 16, i1 false), !dbg !3801, !tbaa.struct !3798
  %16 = load i8*, i8** %dest.addr, align 8, !dbg !3802, !tbaa !2648
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !3804
  %call4 = call i32 @utimens(i8* %16, %struct.timespec* %arraydecay), !dbg !3805
  %tobool = icmp ne i32 %call4, 0, !dbg !3805
  br i1 %tobool, label %if.then, label %if.end, !dbg !3806

if.then:                                          ; preds = %entry
  %call5 = call i32* @__errno_location() #16, !dbg !3807
  %17 = load i32, i32* %call5, align 4, !dbg !3807, !tbaa !2635, !ctir !7
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.82, i64 0, i64 0)) #9, !dbg !3809
  %18 = load i8*, i8** %dest.addr, align 8, !dbg !3810, !tbaa !2648
  %call7 = call i8* @quotearg_style(i32 4, i8* %18), !dbg !3810
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %17, i8* %call6, i8* %call7), !dbg !3811
  store i1 false, i1* %retval, align 1, !dbg !3812
  br label %return, !dbg !3812

if.end:                                           ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !3813
  br label %return, !dbg !3813

return:                                           ; preds = %if.end, %if.then
  %19 = load i1, i1* %retval, align 1, !dbg !3814
  ret i1 %19, !dbg !3814
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @change_attributes(i8* %name) #4 !dbg !3815 !ctir !220 {
entry:
  %name.addr = alloca i8*, align 8
  %ok = alloca i8, align 1, !ctir !142
  store i8* %name, i8** %name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3816, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !3818, metadata !DIExpression()), !dbg !3819
  store i8 0, i8* %ok, align 1, !dbg !3819, !tbaa !2742
  %0 = load i32, i32* @owner_id, align 4, !dbg !3820, !tbaa !2635
  %cmp = icmp eq i32 %0, -1, !dbg !3822
  br i1 %cmp, label %land.lhs.true, label %land.lhs.true2, !dbg !3823

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @group_id, align 4, !dbg !3824, !tbaa !2635
  %cmp1 = icmp eq i32 %1, -1, !dbg !3825
  br i1 %cmp1, label %if.else, label %land.lhs.true2, !dbg !3826

land.lhs.true2:                                   ; preds = %land.lhs.true, %entry
  %2 = load i8*, i8** %name.addr, align 8, !dbg !3827, !tbaa !2648
  %3 = load i32, i32* @owner_id, align 4, !dbg !3828, !tbaa !2635
  %4 = load i32, i32* @group_id, align 4, !dbg !3829, !tbaa !2635
  %call = call i32 @lchown(i8* %2, i32 %3, i32 %4) #9, !dbg !3830
  %cmp3 = icmp ne i32 %call, 0, !dbg !3831
  br i1 %cmp3, label %if.then, label %if.else, !dbg !3832

if.then:                                          ; preds = %land.lhs.true2
  %call4 = call i32* @__errno_location() #16, !dbg !3833
  %5 = load i32, i32* %call4, align 4, !dbg !3833, !tbaa !2635, !ctir !7
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.83, i64 0, i64 0)) #9, !dbg !3834
  %6 = load i8*, i8** %name.addr, align 8, !dbg !3835, !tbaa !2648
  %call6 = call i8* @quotearg_style(i32 4, i8* %6), !dbg !3835
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %5, i8* %call5, i8* %call6), !dbg !3836
  br label %if.end14, !dbg !3836

if.else:                                          ; preds = %land.lhs.true2, %land.lhs.true
  %7 = load i8*, i8** %name.addr, align 8, !dbg !3837, !tbaa !2648
  %8 = load i32, i32* @mode, align 4, !dbg !3839, !tbaa !2635
  %call7 = call i32 @chmod(i8* %7, i32 %8) #9, !dbg !3840
  %cmp8 = icmp ne i32 %call7, 0, !dbg !3841
  br i1 %cmp8, label %if.then9, label %if.else13, !dbg !3842

if.then9:                                         ; preds = %if.else
  %call10 = call i32* @__errno_location() #16, !dbg !3843
  %9 = load i32, i32* %call10, align 4, !dbg !3843, !tbaa !2635, !ctir !7
  %call11 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.84, i64 0, i64 0)) #9, !dbg !3844
  %10 = load i8*, i8** %name.addr, align 8, !dbg !3845, !tbaa !2648
  %call12 = call i8* @quotearg_style(i32 4, i8* %10), !dbg !3845
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %9, i8* %call11, i8* %call12), !dbg !3846
  br label %if.end, !dbg !3846

if.else13:                                        ; preds = %if.else
  store i8 1, i8* %ok, align 1, !dbg !3847, !tbaa !2742
  br label %if.end

if.end:                                           ; preds = %if.else13, %if.then9
  br label %if.end14

if.end14:                                         ; preds = %if.end, %if.then
  %11 = load i8, i8* @use_default_selinux_context, align 1, !dbg !3848, !tbaa !2742
  %tobool = trunc i8 %11 to i1, !dbg !3848
  br i1 %tobool, label %if.then15, label %if.end16, !dbg !3850

if.then15:                                        ; preds = %if.end14
  %12 = load i8*, i8** %name.addr, align 8, !dbg !3851, !tbaa !2648
  call void @setdefaultfilecon(i8* %12), !dbg !3852
  br label %if.end16, !dbg !3852

if.end16:                                         ; preds = %if.then15, %if.end14
  %13 = load i8, i8* %ok, align 1, !dbg !3853, !tbaa !2742
  %tobool17 = trunc i8 %13 to i1, !dbg !3853
  ret i1 %tobool17, !dbg !3854
}

; Function Attrs: nounwind
declare dso_local i32 @lchown(i8*, i32, i32) #2

; Function Attrs: nounwind
declare dso_local i32 @chmod(i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @setdefaultfilecon(i8* %file) #4 !dbg !345 !ctir !202 {
entry:
  %file.addr = alloca i8*, align 8
  %st = alloca %struct.stat, align 8, !ctir !270
  %scontext = alloca i8*, align 8, !ctir !9
  %p0 = alloca i8*, align 8, !ctir !180
  %p = alloca i8*, align 8, !ctir !180
  %prefix = alloca i8*, align 8, !ctir !9
  store i8* %file, i8** %file.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !3855, metadata !DIExpression()), !dbg !3856
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !3857, metadata !DIExpression()), !dbg !3858
  call void @llvm.dbg.declare(metadata i8** %scontext, metadata !3859, metadata !DIExpression()), !dbg !3860
  store i8* null, i8** %scontext, align 8, !dbg !3860, !tbaa !2648
  %0 = load i32, i32* @selinux_enabled, align 4, !dbg !3861, !tbaa !2635
  %cmp = icmp ne i32 %0, 1, !dbg !3863
  br i1 %cmp, label %if.then, label %if.end, !dbg !3864

if.then:                                          ; preds = %entry
  br label %return, !dbg !3865

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %file.addr, align 8, !dbg !3867, !tbaa !2648
  %call = call i32 @lstat(i8* %1, %struct.stat* %st) #9, !dbg !3869
  %cmp1 = icmp ne i32 %call, 0, !dbg !3870
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !3871

if.then2:                                         ; preds = %if.end
  br label %return, !dbg !3872

if.end3:                                          ; preds = %if.end
  %2 = load i8, i8* @setdefaultfilecon.first_call, align 1, !dbg !3873, !tbaa !2742
  %tobool = trunc i8 %2 to i1, !dbg !3873
  br i1 %tobool, label %land.lhs.true, label %if.end29, !dbg !3875

land.lhs.true:                                    ; preds = %if.end3
  %3 = load i8*, i8** %file.addr, align 8, !dbg !3876, !tbaa !2648
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 0, !dbg !3876, !ctir !180
  %4 = load i8, i8* %arrayidx, align 1, !dbg !3876, !tbaa !3295
  %conv = sext i8 %4 to i32, !dbg !3876
  %cmp4 = icmp eq i32 %conv, 47, !dbg !3876
  br i1 %cmp4, label %if.then6, label %if.end29, !dbg !3877

if.then6:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %p0, metadata !3878, metadata !DIExpression()), !dbg !3880
  call void @llvm.dbg.declare(metadata i8** %p, metadata !3881, metadata !DIExpression()), !dbg !3882
  %5 = load i8*, i8** %file.addr, align 8, !dbg !3883, !tbaa !2648
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 1, !dbg !3884
  store i8* %add.ptr, i8** %p, align 8, !dbg !3882, !tbaa !2648
  br label %while.cond, !dbg !3885

while.cond:                                       ; preds = %while.body, %if.then6
  %6 = load i8*, i8** %p, align 8, !dbg !3886, !tbaa !2648
  %7 = load i8, i8* %6, align 1, !dbg !3886, !tbaa !3295, !ctir !181
  %conv7 = sext i8 %7 to i32, !dbg !3886
  %cmp8 = icmp eq i32 %conv7, 47, !dbg !3886
  br i1 %cmp8, label %while.body, label %while.end, !dbg !3885

while.body:                                       ; preds = %while.cond
  %8 = load i8*, i8** %p, align 8, !dbg !3887, !tbaa !2648
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i32 1, !dbg !3887
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !3887, !tbaa !2648
  br label %while.cond, !dbg !3885, !llvm.loop !3888

while.end:                                        ; preds = %while.cond
  %9 = load i8*, i8** %p, align 8, !dbg !3890, !tbaa !2648
  %add.ptr10 = getelementptr inbounds i8, i8* %9, i64 -1, !dbg !3891
  store i8* %add.ptr10, i8** %p0, align 8, !dbg !3892, !tbaa !2648
  %10 = load i8*, i8** %p, align 8, !dbg !3893, !tbaa !2648
  %11 = load i8, i8* %10, align 1, !dbg !3895, !tbaa !3295, !ctir !181
  %tobool11 = icmp ne i8 %11, 0, !dbg !3895
  br i1 %tobool11, label %if.then12, label %if.end28, !dbg !3896

if.then12:                                        ; preds = %while.end
  call void @llvm.dbg.declare(metadata i8** %prefix, metadata !3897, metadata !DIExpression()), !dbg !3899
  br label %do.body, !dbg !3900

do.body:                                          ; preds = %land.end, %if.then12
  %12 = load i8*, i8** %p, align 8, !dbg !3901, !tbaa !2648
  %incdec.ptr13 = getelementptr inbounds i8, i8* %12, i32 1, !dbg !3901
  store i8* %incdec.ptr13, i8** %p, align 8, !dbg !3901, !tbaa !2648
  br label %do.cond, !dbg !3903

do.cond:                                          ; preds = %do.body
  %13 = load i8*, i8** %p, align 8, !dbg !3904, !tbaa !2648
  %14 = load i8, i8* %13, align 1, !dbg !3905, !tbaa !3295, !ctir !181
  %conv14 = sext i8 %14 to i32, !dbg !3905
  %tobool15 = icmp ne i32 %conv14, 0, !dbg !3905
  br i1 %tobool15, label %land.rhs, label %land.end, !dbg !3906

land.rhs:                                         ; preds = %do.cond
  %15 = load i8*, i8** %p, align 8, !dbg !3907, !tbaa !2648
  %16 = load i8, i8* %15, align 1, !dbg !3907, !tbaa !3295, !ctir !181
  %conv16 = sext i8 %16 to i32, !dbg !3907
  %cmp17 = icmp eq i32 %conv16, 47, !dbg !3907
  %lnot = xor i1 %cmp17, true, !dbg !3908
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %17 = phi i1 [ false, %do.cond ], [ %lnot, %land.rhs ], !dbg !3909
  br i1 %17, label %do.body, label %do.end, !dbg !3903, !llvm.loop !3910

do.end:                                           ; preds = %land.end
  %18 = load i8*, i8** %p, align 8, !dbg !3912, !tbaa !2648
  %19 = load i8*, i8** %p0, align 8, !dbg !3913, !tbaa !2648
  %sub.ptr.lhs.cast = ptrtoint i8* %18 to i64, !dbg !3914
  %sub.ptr.rhs.cast = ptrtoint i8* %19 to i64, !dbg !3914
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3914
  %add = add nsw i64 %sub.ptr.sub, 2, !dbg !3915
  %call19 = call noalias i8* @malloc(i64 %add) #9, !dbg !3916
  store i8* %call19, i8** %prefix, align 8, !dbg !3917, !tbaa !2648
  %20 = load i8*, i8** %prefix, align 8, !dbg !3918, !tbaa !2648
  %tobool20 = icmp ne i8* %20, null, !dbg !3918
  br i1 %tobool20, label %if.then21, label %if.end27, !dbg !3920

if.then21:                                        ; preds = %do.end
  %21 = load i8*, i8** %prefix, align 8, !dbg !3921, !tbaa !2648
  %22 = load i8*, i8** %p0, align 8, !dbg !3923, !tbaa !2648
  %23 = load i8*, i8** %p, align 8, !dbg !3924, !tbaa !2648
  %24 = load i8*, i8** %p0, align 8, !dbg !3925, !tbaa !2648
  %sub.ptr.lhs.cast22 = ptrtoint i8* %23 to i64, !dbg !3926
  %sub.ptr.rhs.cast23 = ptrtoint i8* %24 to i64, !dbg !3926
  %sub.ptr.sub24 = sub i64 %sub.ptr.lhs.cast22, %sub.ptr.rhs.cast23, !dbg !3926
  %call25 = call i8* @stpncpy(i8* %21, i8* %22, i64 %sub.ptr.sub24) #9, !dbg !3927
  %call26 = call i8* @stpcpy(i8* %call25, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85, i64 0, i64 0)) #9, !dbg !3928
  %25 = load i8*, i8** %prefix, align 8, !dbg !3929, !tbaa !2648
  call void @free(i8* %25) #9, !dbg !3930
  br label %if.end27, !dbg !3931

if.end27:                                         ; preds = %if.then21, %do.end
  br label %if.end28, !dbg !3932

if.end28:                                         ; preds = %if.end27, %while.end
  br label %if.end29, !dbg !3933

if.end29:                                         ; preds = %if.end28, %land.lhs.true, %if.end3
  store i8 0, i8* @setdefaultfilecon.first_call, align 1, !dbg !3934, !tbaa !2742
  %26 = load i8*, i8** %file.addr, align 8, !dbg !3935, !tbaa !2648
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !3937, !ctir !270
  %27 = load i32, i32* %st_mode, align 8, !dbg !3937, !tbaa !2914, !ctir !140
  %call30 = call i32 @matchpathcon(i8* %26, i32 %27, i8** %scontext), !dbg !3938
  %cmp31 = icmp ne i32 %call30, 0, !dbg !3939
  br i1 %cmp31, label %if.then36, label %lor.lhs.false, !dbg !3940

lor.lhs.false:                                    ; preds = %if.end29
  %28 = load i8*, i8** %scontext, align 8, !dbg !3941, !tbaa !2648
  %call33 = call i32 @strcmp(i8* %28, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.86, i64 0, i64 0)) #14, !dbg !3941
  %cmp34 = icmp eq i32 %call33, 0, !dbg !3941
  br i1 %cmp34, label %if.then36, label %if.end41, !dbg !3942

if.then36:                                        ; preds = %lor.lhs.false, %if.end29
  %29 = load i8*, i8** %scontext, align 8, !dbg !3943, !tbaa !2648
  %cmp37 = icmp ne i8* %29, null, !dbg !3946
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !3947

if.then39:                                        ; preds = %if.then36
  %30 = load i8*, i8** %scontext, align 8, !dbg !3948, !tbaa !2648
  call void @freecon(i8* %30), !dbg !3949
  br label %if.end40, !dbg !3949

if.end40:                                         ; preds = %if.then39, %if.then36
  br label %return, !dbg !3950

if.end41:                                         ; preds = %lor.lhs.false
  %31 = load i8*, i8** %file.addr, align 8, !dbg !3951, !tbaa !2648
  %32 = load i8*, i8** %scontext, align 8, !dbg !3953, !tbaa !2648
  %call42 = call i32 @lsetfilecon(i8* %31, i8* %32), !dbg !3954
  %cmp43 = icmp slt i32 %call42, 0, !dbg !3955
  br i1 %cmp43, label %land.lhs.true45, label %if.end54, !dbg !3956

land.lhs.true45:                                  ; preds = %if.end41
  %call46 = call i32* @__errno_location() #16, !dbg !3957
  %33 = load i32, i32* %call46, align 4, !dbg !3957, !tbaa !2635, !ctir !7
  %cmp47 = icmp ne i32 %33, 95, !dbg !3958
  br i1 %cmp47, label %if.then49, label %if.end54, !dbg !3959

if.then49:                                        ; preds = %land.lhs.true45
  %call50 = call i32* @__errno_location() #16, !dbg !3960
  %34 = load i32, i32* %call50, align 4, !dbg !3960, !tbaa !2635, !ctir !7
  %call51 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.87, i64 0, i64 0)) #9, !dbg !3961
  %35 = load i8*, i8** %file.addr, align 8, !dbg !3962, !tbaa !2648
  %call52 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %35), !dbg !3962
  %36 = load i8*, i8** %scontext, align 8, !dbg !3963, !tbaa !2648
  %call53 = call i8* @quote_n(i32 1, i8* %36), !dbg !3964
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %34, i8* %call51, i8* %call52, i8* %call53), !dbg !3965
  br label %if.end54, !dbg !3965

if.end54:                                         ; preds = %if.then49, %land.lhs.true45, %if.end41
  %37 = load i8*, i8** %scontext, align 8, !dbg !3966, !tbaa !2648
  call void @freecon(i8* %37), !dbg !3967
  br label %return, !dbg !3968

return:                                           ; preds = %if.end54, %if.end40, %if.then2, %if.then
  ret void, !dbg !3969
}

; Function Attrs: nounwind
declare dso_local i32 @lstat(i8*, %struct.stat*) #2

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

; Function Attrs: nounwind
declare dso_local i8* @stpncpy(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i8* @stpcpy(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @fork() #2

; Function Attrs: nounwind
declare dso_local i32 @execlp(i8*, i8*, ...) #2

declare dso_local i32 @waitpid(i32, i32*, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @need_copy(i8* %src_name, i8* %dest_name, %struct.cp_options* %x) #4 !dbg !3970 !ctir !262 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %dest_name.addr = alloca i8*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %src_sb = alloca %struct.stat, align 8, !ctir !270
  %dest_sb = alloca %struct.stat, align 8, !ctir !270
  %src_fd = alloca i32, align 4, !ctir !7
  %dest_fd = alloca i32, align 4, !ctir !7
  %content_match = alloca i8, align 1, !ctir !142
  %ruid = alloca i32, align 4, !ctir !127
  %rgid = alloca i32, align 4, !ctir !129
  %file_scontext = alloca i8*, align 8, !ctir !9
  %to_scontext = alloca i8*, align 8, !ctir !9
  %scontext_match = alloca i8, align 1, !ctir !142
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !3971, metadata !DIExpression()), !dbg !3972
  store i8* %dest_name, i8** %dest_name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dest_name.addr, metadata !3973, metadata !DIExpression()), !dbg !3974
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3975, metadata !DIExpression()), !dbg !3976
  call void @llvm.dbg.declare(metadata %struct.stat* %src_sb, metadata !3977, metadata !DIExpression()), !dbg !3978
  call void @llvm.dbg.declare(metadata %struct.stat* %dest_sb, metadata !3979, metadata !DIExpression()), !dbg !3980
  call void @llvm.dbg.declare(metadata i32* %src_fd, metadata !3981, metadata !DIExpression()), !dbg !3982
  call void @llvm.dbg.declare(metadata i32* %dest_fd, metadata !3983, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.declare(metadata i8* %content_match, metadata !3985, metadata !DIExpression()), !dbg !3986
  %0 = load i32, i32* @mode, align 4, !dbg !3987, !tbaa !2635
  %call = call zeroext i1 @extra_mode(i32 %0), !dbg !3989
  br i1 %call, label %if.then, label %if.end, !dbg !3990

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !3991
  br label %return, !dbg !3991

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %src_name.addr, align 8, !dbg !3992, !tbaa !2648
  %call1 = call i32 @lstat(i8* %1, %struct.stat* %src_sb) #9, !dbg !3994
  %cmp = icmp ne i32 %call1, 0, !dbg !3995
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !3996

if.then2:                                         ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !3997
  br label %return, !dbg !3997

if.end3:                                          ; preds = %if.end
  %2 = load i8*, i8** %dest_name.addr, align 8, !dbg !3998, !tbaa !2648
  %call4 = call i32 @lstat(i8* %2, %struct.stat* %dest_sb) #9, !dbg !4000
  %cmp5 = icmp ne i32 %call4, 0, !dbg !4001
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !4002

if.then6:                                         ; preds = %if.end3
  store i1 true, i1* %retval, align 1, !dbg !4003
  br label %return, !dbg !4003

if.end7:                                          ; preds = %if.end3
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !4004, !ctir !270
  %3 = load i32, i32* %st_mode, align 8, !dbg !4004, !tbaa !2914, !ctir !140
  %and = and i32 %3, 61440, !dbg !4004
  %cmp8 = icmp eq i32 %and, 32768, !dbg !4004
  br i1 %cmp8, label %lor.lhs.false, label %if.then18, !dbg !4006

lor.lhs.false:                                    ; preds = %if.end7
  %st_mode9 = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 3, !dbg !4007, !ctir !270
  %4 = load i32, i32* %st_mode9, align 8, !dbg !4007, !tbaa !2914, !ctir !140
  %and10 = and i32 %4, 61440, !dbg !4007
  %cmp11 = icmp eq i32 %and10, 32768, !dbg !4007
  br i1 %cmp11, label %lor.lhs.false12, label %if.then18, !dbg !4008

lor.lhs.false12:                                  ; preds = %lor.lhs.false
  %st_mode13 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !4009, !ctir !270
  %5 = load i32, i32* %st_mode13, align 8, !dbg !4009, !tbaa !2914, !ctir !140
  %call14 = call zeroext i1 @extra_mode(i32 %5), !dbg !4010
  br i1 %call14, label %if.then18, label %lor.lhs.false15, !dbg !4011

lor.lhs.false15:                                  ; preds = %lor.lhs.false12
  %st_mode16 = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 3, !dbg !4012, !ctir !270
  %6 = load i32, i32* %st_mode16, align 8, !dbg !4012, !tbaa !2914, !ctir !140
  %call17 = call zeroext i1 @extra_mode(i32 %6), !dbg !4013
  br i1 %call17, label %if.then18, label %if.end19, !dbg !4014

if.then18:                                        ; preds = %lor.lhs.false15, %lor.lhs.false12, %lor.lhs.false, %if.end7
  store i1 true, i1* %retval, align 1, !dbg !4015
  br label %return, !dbg !4015

if.end19:                                         ; preds = %lor.lhs.false15
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 8, !dbg !4016, !ctir !270
  %7 = load i64, i64* %st_size, align 8, !dbg !4016, !tbaa !4018, !ctir !29
  %st_size20 = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 8, !dbg !4019, !ctir !270
  %8 = load i64, i64* %st_size20, align 8, !dbg !4019, !tbaa !4018, !ctir !29
  %cmp21 = icmp ne i64 %7, %8, !dbg !4020
  br i1 %cmp21, label %if.then26, label %lor.lhs.false22, !dbg !4021

lor.lhs.false22:                                  ; preds = %if.end19
  %st_mode23 = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 3, !dbg !4022, !ctir !270
  %9 = load i32, i32* %st_mode23, align 8, !dbg !4022, !tbaa !2914, !ctir !140
  %and24 = and i32 %9, 4095, !dbg !4023
  %10 = load i32, i32* @mode, align 4, !dbg !4024, !tbaa !2635
  %cmp25 = icmp ne i32 %and24, %10, !dbg !4025
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !4026

if.then26:                                        ; preds = %lor.lhs.false22, %if.end19
  store i1 true, i1* %retval, align 1, !dbg !4027
  br label %return, !dbg !4027

if.end27:                                         ; preds = %lor.lhs.false22
  %11 = load i32, i32* @owner_id, align 4, !dbg !4028, !tbaa !2635
  %cmp28 = icmp eq i32 %11, -1, !dbg !4030
  br i1 %cmp28, label %if.then29, label %if.else, !dbg !4031

if.then29:                                        ; preds = %if.end27
  %call30 = call i32* @__errno_location() #16, !dbg !4032
  store i32 0, i32* %call30, align 4, !dbg !4034, !tbaa !2635, !ctir !7
  call void @llvm.dbg.declare(metadata i32* %ruid, metadata !4035, metadata !DIExpression()), !dbg !4036
  %call31 = call i32 @getuid() #9, !dbg !4037
  store i32 %call31, i32* %ruid, align 4, !dbg !4036, !tbaa !2635
  %12 = load i32, i32* %ruid, align 4, !dbg !4038, !tbaa !2635
  %cmp32 = icmp eq i32 %12, -1, !dbg !4040
  br i1 %cmp32, label %land.lhs.true, label %lor.lhs.false34, !dbg !4041

land.lhs.true:                                    ; preds = %if.then29
  %call33 = call i32* @__errno_location() #16, !dbg !4042
  %13 = load i32, i32* %call33, align 4, !dbg !4042, !tbaa !2635, !ctir !7
  %tobool = icmp ne i32 %13, 0, !dbg !4042
  br i1 %tobool, label %if.then36, label %lor.lhs.false34, !dbg !4043

lor.lhs.false34:                                  ; preds = %land.lhs.true, %if.then29
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 4, !dbg !4044, !ctir !270
  %14 = load i32, i32* %st_uid, align 4, !dbg !4044, !tbaa !4045, !ctir !128
  %15 = load i32, i32* %ruid, align 4, !dbg !4046, !tbaa !2635
  %cmp35 = icmp ne i32 %14, %15, !dbg !4047
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !4048

if.then36:                                        ; preds = %lor.lhs.false34, %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !4049
  br label %return, !dbg !4049

if.end37:                                         ; preds = %lor.lhs.false34
  br label %if.end42, !dbg !4050

if.else:                                          ; preds = %if.end27
  %st_uid38 = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 4, !dbg !4051, !ctir !270
  %16 = load i32, i32* %st_uid38, align 4, !dbg !4051, !tbaa !4045, !ctir !128
  %17 = load i32, i32* @owner_id, align 4, !dbg !4053, !tbaa !2635
  %cmp39 = icmp ne i32 %16, %17, !dbg !4054
  br i1 %cmp39, label %if.then40, label %if.end41, !dbg !4055

if.then40:                                        ; preds = %if.else
  store i1 true, i1* %retval, align 1, !dbg !4056
  br label %return, !dbg !4056

if.end41:                                         ; preds = %if.else
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.end37
  %18 = load i32, i32* @group_id, align 4, !dbg !4057, !tbaa !2635
  %cmp43 = icmp eq i32 %18, -1, !dbg !4059
  br i1 %cmp43, label %if.then44, label %if.else55, !dbg !4060

if.then44:                                        ; preds = %if.end42
  %call45 = call i32* @__errno_location() #16, !dbg !4061
  store i32 0, i32* %call45, align 4, !dbg !4063, !tbaa !2635, !ctir !7
  call void @llvm.dbg.declare(metadata i32* %rgid, metadata !4064, metadata !DIExpression()), !dbg !4065
  %call46 = call i32 @getgid() #9, !dbg !4066
  store i32 %call46, i32* %rgid, align 4, !dbg !4065, !tbaa !2635
  %19 = load i32, i32* %rgid, align 4, !dbg !4067, !tbaa !2635
  %cmp47 = icmp eq i32 %19, -1, !dbg !4069
  br i1 %cmp47, label %land.lhs.true48, label %lor.lhs.false51, !dbg !4070

land.lhs.true48:                                  ; preds = %if.then44
  %call49 = call i32* @__errno_location() #16, !dbg !4071
  %20 = load i32, i32* %call49, align 4, !dbg !4071, !tbaa !2635, !ctir !7
  %tobool50 = icmp ne i32 %20, 0, !dbg !4071
  br i1 %tobool50, label %if.then53, label %lor.lhs.false51, !dbg !4072

lor.lhs.false51:                                  ; preds = %land.lhs.true48, %if.then44
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 5, !dbg !4073, !ctir !270
  %21 = load i32, i32* %st_gid, align 8, !dbg !4073, !tbaa !4074, !ctir !130
  %22 = load i32, i32* %rgid, align 4, !dbg !4075, !tbaa !2635
  %cmp52 = icmp ne i32 %21, %22, !dbg !4076
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !4077

if.then53:                                        ; preds = %lor.lhs.false51, %land.lhs.true48
  store i1 true, i1* %retval, align 1, !dbg !4078
  br label %return, !dbg !4078

if.end54:                                         ; preds = %lor.lhs.false51
  br label %if.end60, !dbg !4079

if.else55:                                        ; preds = %if.end42
  %st_gid56 = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 5, !dbg !4080, !ctir !270
  %23 = load i32, i32* %st_gid56, align 8, !dbg !4080, !tbaa !4074, !ctir !130
  %24 = load i32, i32* @group_id, align 4, !dbg !4082, !tbaa !2635
  %cmp57 = icmp ne i32 %23, %24, !dbg !4083
  br i1 %cmp57, label %if.then58, label %if.end59, !dbg !4084

if.then58:                                        ; preds = %if.else55
  store i1 true, i1* %retval, align 1, !dbg !4085
  br label %return, !dbg !4085

if.end59:                                         ; preds = %if.else55
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.end54
  %25 = load i32, i32* @selinux_enabled, align 4, !dbg !4086, !tbaa !2635
  %tobool61 = icmp ne i32 %25, 0, !dbg !4086
  br i1 %tobool61, label %land.lhs.true62, label %if.end78, !dbg !4088

land.lhs.true62:                                  ; preds = %if.end60
  %26 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4089, !tbaa !2648
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %26, i32 0, i32 22, !dbg !4090, !ctir !247
  %27 = load i8, i8* %preserve_security_context, align 1, !dbg !4090, !tbaa !2850
  %tobool63 = trunc i8 %27 to i1, !dbg !4090, !ctir !142
  br i1 %tobool63, label %if.then64, label %if.end78, !dbg !4091

if.then64:                                        ; preds = %land.lhs.true62
  call void @llvm.dbg.declare(metadata i8** %file_scontext, metadata !4092, metadata !DIExpression()), !dbg !4094
  store i8* null, i8** %file_scontext, align 8, !dbg !4094, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %to_scontext, metadata !4095, metadata !DIExpression()), !dbg !4096
  store i8* null, i8** %to_scontext, align 8, !dbg !4096, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8* %scontext_match, metadata !4097, metadata !DIExpression()), !dbg !4098
  %28 = load i8*, i8** %src_name.addr, align 8, !dbg !4099, !tbaa !2648
  %call65 = call i32 @getfilecon(i8* %28, i8** %file_scontext), !dbg !4101
  %cmp66 = icmp eq i32 %call65, -1, !dbg !4102
  br i1 %cmp66, label %if.then67, label %if.end68, !dbg !4103

if.then67:                                        ; preds = %if.then64
  store i1 true, i1* %retval, align 1, !dbg !4104
  br label %return, !dbg !4104

if.end68:                                         ; preds = %if.then64
  %29 = load i8*, i8** %dest_name.addr, align 8, !dbg !4105, !tbaa !2648
  %call69 = call i32 @getfilecon(i8* %29, i8** %to_scontext), !dbg !4107
  %cmp70 = icmp eq i32 %call69, -1, !dbg !4108
  br i1 %cmp70, label %if.then71, label %if.end72, !dbg !4109

if.then71:                                        ; preds = %if.end68
  %30 = load i8*, i8** %file_scontext, align 8, !dbg !4110, !tbaa !2648
  call void @freecon(i8* %30), !dbg !4112
  store i1 true, i1* %retval, align 1, !dbg !4113
  br label %return, !dbg !4113

if.end72:                                         ; preds = %if.end68
  %31 = load i8*, i8** %file_scontext, align 8, !dbg !4114, !tbaa !2648
  %32 = load i8*, i8** %to_scontext, align 8, !dbg !4114, !tbaa !2648
  %call73 = call i32 @strcmp(i8* %31, i8* %32) #14, !dbg !4114
  %cmp74 = icmp eq i32 %call73, 0, !dbg !4114
  %frombool = zext i1 %cmp74 to i8, !dbg !4115
  store i8 %frombool, i8* %scontext_match, align 1, !dbg !4115, !tbaa !2742
  %33 = load i8*, i8** %file_scontext, align 8, !dbg !4116, !tbaa !2648
  call void @freecon(i8* %33), !dbg !4117
  %34 = load i8*, i8** %to_scontext, align 8, !dbg !4118, !tbaa !2648
  call void @freecon(i8* %34), !dbg !4119
  %35 = load i8, i8* %scontext_match, align 1, !dbg !4120, !tbaa !2742
  %tobool75 = trunc i8 %35 to i1, !dbg !4120
  br i1 %tobool75, label %if.end77, label %if.then76, !dbg !4122

if.then76:                                        ; preds = %if.end72
  store i1 true, i1* %retval, align 1, !dbg !4123
  br label %return, !dbg !4123

if.end77:                                         ; preds = %if.end72
  br label %if.end78, !dbg !4124

if.end78:                                         ; preds = %if.end77, %land.lhs.true62, %if.end60
  %36 = load i8*, i8** %src_name.addr, align 8, !dbg !4125, !tbaa !2648
  %call79 = call i32 (i8*, i32, ...) @open(i8* %36, i32 0), !dbg !4126
  store i32 %call79, i32* %src_fd, align 4, !dbg !4127, !tbaa !2635
  %37 = load i32, i32* %src_fd, align 4, !dbg !4128, !tbaa !2635
  %cmp80 = icmp slt i32 %37, 0, !dbg !4130
  br i1 %cmp80, label %if.then81, label %if.end82, !dbg !4131

if.then81:                                        ; preds = %if.end78
  store i1 true, i1* %retval, align 1, !dbg !4132
  br label %return, !dbg !4132

if.end82:                                         ; preds = %if.end78
  %38 = load i8*, i8** %dest_name.addr, align 8, !dbg !4133, !tbaa !2648
  %call83 = call i32 (i8*, i32, ...) @open(i8* %38, i32 0), !dbg !4134
  store i32 %call83, i32* %dest_fd, align 4, !dbg !4135, !tbaa !2635
  %39 = load i32, i32* %dest_fd, align 4, !dbg !4136, !tbaa !2635
  %cmp84 = icmp slt i32 %39, 0, !dbg !4138
  br i1 %cmp84, label %if.then85, label %if.end87, !dbg !4139

if.then85:                                        ; preds = %if.end82
  %40 = load i32, i32* %src_fd, align 4, !dbg !4140, !tbaa !2635
  %call86 = call i32 @close(i32 %40), !dbg !4142
  store i1 true, i1* %retval, align 1, !dbg !4143
  br label %return, !dbg !4143

if.end87:                                         ; preds = %if.end82
  %41 = load i32, i32* %src_fd, align 4, !dbg !4144, !tbaa !2635
  %42 = load i32, i32* %dest_fd, align 4, !dbg !4145, !tbaa !2635
  %call88 = call zeroext i1 @have_same_content(i32 %41, i32 %42), !dbg !4146
  %frombool89 = zext i1 %call88 to i8, !dbg !4147
  store i8 %frombool89, i8* %content_match, align 1, !dbg !4147, !tbaa !2742
  %43 = load i32, i32* %src_fd, align 4, !dbg !4148, !tbaa !2635
  %call90 = call i32 @close(i32 %43), !dbg !4149
  %44 = load i32, i32* %dest_fd, align 4, !dbg !4150, !tbaa !2635
  %call91 = call i32 @close(i32 %44), !dbg !4151
  %45 = load i8, i8* %content_match, align 1, !dbg !4152, !tbaa !2742
  %tobool92 = trunc i8 %45 to i1, !dbg !4152
  %lnot = xor i1 %tobool92, true, !dbg !4153
  store i1 %lnot, i1* %retval, align 1, !dbg !4154
  br label %return, !dbg !4154

return:                                           ; preds = %if.end87, %if.then85, %if.then81, %if.then76, %if.then71, %if.then67, %if.then58, %if.then53, %if.then40, %if.then36, %if.then26, %if.then18, %if.then6, %if.then2, %if.then
  %46 = load i1, i1* %retval, align 1, !dbg !4155
  ret i1 %46, !dbg !4155
}

; Function Attrs: nounwind
declare dso_local i32 @getuid() #2

; Function Attrs: nounwind
declare dso_local i32 @getgid() #2

declare dso_local i32 @open(i8*, i32, ...) #3

declare dso_local i32 @close(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @have_same_content(i32 %a_fd, i32 %b_fd) #4 !dbg !337 !ctir !264 {
entry:
  %retval = alloca i1, align 1
  %a_fd.addr = alloca i32, align 4
  %b_fd.addr = alloca i32, align 4
  %size = alloca i64, align 8, !ctir !55
  store i32 %a_fd, i32* %a_fd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %a_fd.addr, metadata !4156, metadata !DIExpression()), !dbg !4157
  store i32 %b_fd, i32* %b_fd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %b_fd.addr, metadata !4158, metadata !DIExpression()), !dbg !4159
  call void @llvm.dbg.declare(metadata i64* %size, metadata !4160, metadata !DIExpression()), !dbg !4161
  br label %while.cond, !dbg !4162

while.cond:                                       ; preds = %if.end6, %entry
  %0 = load i32, i32* %a_fd.addr, align 4, !dbg !4163, !tbaa !2635
  %call = call i64 @full_read(i32 %0, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @have_same_content.a_buff, i64 0, i64 0), i64 4096), !dbg !4164
  store i64 %call, i64* %size, align 8, !dbg !4165, !tbaa !3288
  %cmp = icmp ult i64 0, %call, !dbg !4166
  br i1 %cmp, label %while.body, label %while.end, !dbg !4162

while.body:                                       ; preds = %while.cond
  %1 = load i64, i64* %size, align 8, !dbg !4167, !tbaa !3288
  %2 = load i32, i32* %b_fd.addr, align 4, !dbg !4170, !tbaa !2635
  %call1 = call i64 @full_read(i32 %2, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @have_same_content.b_buff, i64 0, i64 0), i64 4096), !dbg !4171
  %cmp2 = icmp ne i64 %1, %call1, !dbg !4172
  br i1 %cmp2, label %if.then, label %if.end, !dbg !4173

if.then:                                          ; preds = %while.body
  store i1 false, i1* %retval, align 1, !dbg !4174
  br label %return, !dbg !4174

if.end:                                           ; preds = %while.body
  %3 = load i64, i64* %size, align 8, !dbg !4175, !tbaa !3288
  %call3 = call i32 @memcmp(i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @have_same_content.a_buff, i64 0, i64 0), i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @have_same_content.b_buff, i64 0, i64 0), i64 %3) #14, !dbg !4177
  %cmp4 = icmp ne i32 %call3, 0, !dbg !4178
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !4179

if.then5:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !4180
  br label %return, !dbg !4180

if.end6:                                          ; preds = %if.end
  br label %while.cond, !dbg !4162, !llvm.loop !4181

while.end:                                        ; preds = %while.cond
  %4 = load i64, i64* %size, align 8, !dbg !4183, !tbaa !3288
  %cmp7 = icmp eq i64 %4, 0, !dbg !4184
  store i1 %cmp7, i1* %retval, align 1, !dbg !4185
  br label %return, !dbg !4185

return:                                           ; preds = %while.end, %if.then5, %if.then
  %5 = load i1, i1* %retval, align 1, !dbg !4186
  ret i1 %5, !dbg !4186
}

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @restorecon(i8* %path, i1 zeroext %recurse, i1 zeroext %preserve) #4 !dbg !4187 !ctir !254 {
entry:
  %path.addr = alloca i8*, align 8
  %recurse.addr = alloca i8, align 1
  %preserve.addr = alloca i8, align 1
  store i8* %path, i8** %path.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !4188, metadata !DIExpression()), !dbg !4189
  %frombool = zext i1 %recurse to i8
  store i8 %frombool, i8* %recurse.addr, align 1, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %recurse.addr, metadata !4190, metadata !DIExpression()), !dbg !4191
  %frombool1 = zext i1 %preserve to i8
  store i8 %frombool1, i8* %preserve.addr, align 1, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %preserve.addr, metadata !4192, metadata !DIExpression()), !dbg !4193
  %call = call i32* @__errno_location() #16, !dbg !4194
  store i32 95, i32* %call, align 4, !dbg !4195, !tbaa !2635, !ctir !7
  ret i1 false, !dbg !4196
}

declare dso_local %struct.passwd* @getpwnam(i8*) #3

declare dso_local void @endpwent() #3

declare dso_local %struct.group* @getgrnam(i8*) #3

declare dso_local void @endgrent() #3

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @prog_fprintf(%struct._IO_FILE* %fp, i8* %fmt, ...) #4 !dbg !4197 !ctir !1411 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %fmt.addr = alloca i8*, align 8
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1447
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !4200, metadata !DIExpression()), !dbg !4201
  store i8* %fmt, i8** %fmt.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !4202, metadata !DIExpression()), !dbg !4203
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !4204, metadata !DIExpression()), !dbg !4205
  %0 = load i8*, i8** @program_name, align 8, !dbg !4206, !tbaa !2648
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !4206, !tbaa !2648
  %call = call i32 @fputs_unlocked(i8* %0, %struct._IO_FILE* %1), !dbg !4206
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !4207, !tbaa !2648
  %call1 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.88, i64 0, i64 0), %struct._IO_FILE* %2), !dbg !4207
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !4208
  %arraydecay2 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !4208
  call void @llvm.va_start(i8* %arraydecay2), !dbg !4208
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !4209, !tbaa !2648
  %4 = load i8*, i8** %fmt.addr, align 8, !dbg !4210, !tbaa !2648
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !4211
  %call4 = call i32 @vfprintf(%struct._IO_FILE* %3, i8* %4, %struct.__va_list_tag* %arraydecay3), !dbg !4212
  %arraydecay5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !4213
  %arraydecay56 = bitcast %struct.__va_list_tag* %arraydecay5 to i8*, !dbg !4213
  call void @llvm.va_end(i8* %arraydecay56), !dbg !4213
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !4214, !tbaa !2648
  %call7 = call i32 @fputc_unlocked(i32 10, %struct._IO_FILE* %5), !dbg !4214
  ret void, !dbg !4215
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #9

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) #3

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #9

declare dso_local i32 @fputc_unlocked(i32, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @set_process_security_ctx(i8* %src_name, i8* %dst_name, i32 %mode, i1 zeroext %new_dst, %struct.cp_options* %x) #4 !dbg !4216 !ctir !354 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  %new_dst.addr = alloca i8, align 1
  %x.addr = alloca %struct.cp_options*, align 8
  %all_errors = alloca i8, align 1, !ctir !142
  %some_errors = alloca i8, align 1, !ctir !142
  %con = alloca i8*, align 8, !ctir !9
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !4217, metadata !DIExpression()), !dbg !4218
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !4219, metadata !DIExpression()), !dbg !4220
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4221, metadata !DIExpression()), !dbg !4222
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !4223, metadata !DIExpression()), !dbg !4224
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !4225, metadata !DIExpression()), !dbg !4226
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4227, !tbaa !2648
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 22, !dbg !4229, !ctir !357
  %1 = load i8, i8* %preserve_security_context, align 1, !dbg !4229, !tbaa !2850
  %tobool = trunc i8 %1 to i1, !dbg !4229, !ctir !142
  br i1 %tobool, label %if.then, label %if.else40, !dbg !4230

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %all_errors, metadata !4231, metadata !DIExpression()), !dbg !4233
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4234, !tbaa !2648
  %data_copy_required = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 20, !dbg !4235, !ctir !357
  %3 = load i8, i8* %data_copy_required, align 1, !dbg !4235, !tbaa !3202
  %tobool1 = trunc i8 %3 to i1, !dbg !4235, !ctir !142
  br i1 %tobool1, label %lor.rhs, label %lor.end, !dbg !4236

lor.rhs:                                          ; preds = %if.then
  %4 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4237, !tbaa !2648
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %4, i32 0, i32 23, !dbg !4238, !ctir !357
  %5 = load i8, i8* %require_preserve_context, align 2, !dbg !4238, !tbaa !3249
  %tobool2 = trunc i8 %5 to i1, !dbg !4238, !ctir !142
  br label %lor.end, !dbg !4236

lor.end:                                          ; preds = %lor.rhs, %if.then
  %6 = phi i1 [ true, %if.then ], [ %tobool2, %lor.rhs ]
  %frombool3 = zext i1 %6 to i8, !dbg !4233
  store i8 %frombool3, i8* %all_errors, align 1, !dbg !4233, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %some_errors, metadata !4239, metadata !DIExpression()), !dbg !4240
  %7 = load i8, i8* %all_errors, align 1, !dbg !4241, !tbaa !2742
  %tobool4 = trunc i8 %7 to i1, !dbg !4241
  br i1 %tobool4, label %land.end, label %land.rhs, !dbg !4242

land.rhs:                                         ; preds = %lor.end
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4243, !tbaa !2648
  %reduce_diagnostics = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 26, !dbg !4244, !ctir !357
  %9 = load i8, i8* %reduce_diagnostics, align 1, !dbg !4244, !tbaa !3198
  %tobool5 = trunc i8 %9 to i1, !dbg !4244, !ctir !142
  %lnot = xor i1 %tobool5, true, !dbg !4245
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.end
  %10 = phi i1 [ false, %lor.end ], [ %lnot, %land.rhs ], !dbg !4246
  %frombool6 = zext i1 %10 to i8, !dbg !4240
  store i8 %frombool6, i8* %some_errors, align 1, !dbg !4240, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8** %con, metadata !4247, metadata !DIExpression()), !dbg !4248
  %11 = load i8*, i8** %src_name.addr, align 8, !dbg !4249, !tbaa !2648
  %call = call i32 @lgetfilecon(i8* %11, i8** %con), !dbg !4251
  %cmp = icmp sle i32 0, %call, !dbg !4252
  br i1 %cmp, label %if.then7, label %if.else, !dbg !4253

if.then7:                                         ; preds = %land.end
  %12 = load i8*, i8** %con, align 8, !dbg !4254, !tbaa !2648
  %call8 = call i32 @setfscreatecon(i8* %12), !dbg !4257
  %cmp9 = icmp slt i32 %call8, 0, !dbg !4258
  br i1 %cmp9, label %if.then10, label %if.end23, !dbg !4259

if.then10:                                        ; preds = %if.then7
  %13 = load i8, i8* %all_errors, align 1, !dbg !4260, !tbaa !2742
  %tobool11 = trunc i8 %13 to i1, !dbg !4260
  br i1 %tobool11, label %if.then15, label %lor.lhs.false, !dbg !4263

lor.lhs.false:                                    ; preds = %if.then10
  %14 = load i8, i8* %some_errors, align 1, !dbg !4264, !tbaa !2742
  %tobool12 = trunc i8 %14 to i1, !dbg !4264
  br i1 %tobool12, label %land.lhs.true, label %if.end, !dbg !4265

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call13 = call i32* @__errno_location() #16, !dbg !4266
  %15 = load i32, i32* %call13, align 4, !dbg !4266, !tbaa !2635, !ctir !7
  %call14 = call zeroext i1 @errno_unsupported(i32 %15), !dbg !4267
  br i1 %call14, label %if.end, label %if.then15, !dbg !4268

if.then15:                                        ; preds = %land.lhs.true, %if.then10
  %call16 = call i32* @__errno_location() #16, !dbg !4269
  %16 = load i32, i32* %call16, align 4, !dbg !4269, !tbaa !2635, !ctir !7
  %call17 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.89, i64 0, i64 0)) #9, !dbg !4270
  %17 = load i8*, i8** %con, align 8, !dbg !4271, !tbaa !2648
  %call18 = call i8* @quote(i8* %17), !dbg !4272
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %16, i8* %call17, i8* %call18), !dbg !4273
  br label %if.end, !dbg !4273

if.end:                                           ; preds = %if.then15, %land.lhs.true, %lor.lhs.false
  %18 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4274, !tbaa !2648
  %require_preserve_context19 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %18, i32 0, i32 23, !dbg !4276, !ctir !357
  %19 = load i8, i8* %require_preserve_context19, align 2, !dbg !4276, !tbaa !3249
  %tobool20 = trunc i8 %19 to i1, !dbg !4276, !ctir !142
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !4277

if.then21:                                        ; preds = %if.end
  %20 = load i8*, i8** %con, align 8, !dbg !4278, !tbaa !2648
  call void @freecon(i8* %20), !dbg !4280
  store i1 false, i1* %retval, align 1, !dbg !4281
  br label %return, !dbg !4281

if.end22:                                         ; preds = %if.end
  br label %if.end23, !dbg !4282

if.end23:                                         ; preds = %if.end22, %if.then7
  %21 = load i8*, i8** %con, align 8, !dbg !4283, !tbaa !2648
  call void @freecon(i8* %21), !dbg !4284
  br label %if.end39, !dbg !4285

if.else:                                          ; preds = %land.end
  %22 = load i8, i8* %all_errors, align 1, !dbg !4286, !tbaa !2742
  %tobool24 = trunc i8 %22 to i1, !dbg !4286
  br i1 %tobool24, label %if.then30, label %lor.lhs.false25, !dbg !4289

lor.lhs.false25:                                  ; preds = %if.else
  %23 = load i8, i8* %some_errors, align 1, !dbg !4290, !tbaa !2742
  %tobool26 = trunc i8 %23 to i1, !dbg !4290
  br i1 %tobool26, label %land.lhs.true27, label %if.end34, !dbg !4291

land.lhs.true27:                                  ; preds = %lor.lhs.false25
  %call28 = call i32* @__errno_location() #16, !dbg !4292
  %24 = load i32, i32* %call28, align 4, !dbg !4292, !tbaa !2635, !ctir !7
  %call29 = call zeroext i1 @errno_unsupported(i32 %24), !dbg !4293
  br i1 %call29, label %if.end34, label %if.then30, !dbg !4294

if.then30:                                        ; preds = %land.lhs.true27, %if.else
  %call31 = call i32* @__errno_location() #16, !dbg !4295
  %25 = load i32, i32* %call31, align 4, !dbg !4295, !tbaa !2635, !ctir !7
  %call32 = call i8* @gettext(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1.90, i64 0, i64 0)) #9, !dbg !4297
  %26 = load i8*, i8** %src_name.addr, align 8, !dbg !4298, !tbaa !2648
  %call33 = call i8* @quotearg_style(i32 4, i8* %26), !dbg !4298
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %25, i8* %call32, i8* %call33), !dbg !4299
  br label %if.end34, !dbg !4300

if.end34:                                         ; preds = %if.then30, %land.lhs.true27, %lor.lhs.false25
  %27 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4301, !tbaa !2648
  %require_preserve_context35 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %27, i32 0, i32 23, !dbg !4303, !ctir !357
  %28 = load i8, i8* %require_preserve_context35, align 2, !dbg !4303, !tbaa !3249
  %tobool36 = trunc i8 %28 to i1, !dbg !4303, !ctir !142
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !4304

if.then37:                                        ; preds = %if.end34
  store i1 false, i1* %retval, align 1, !dbg !4305
  br label %return, !dbg !4305

if.end38:                                         ; preds = %if.end34
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.end23
  br label %if.end56, !dbg !4306

if.else40:                                        ; preds = %entry
  %29 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4307, !tbaa !2648
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %29, i32 0, i32 18, !dbg !4309, !ctir !357
  %30 = load i8, i8* %set_security_context, align 1, !dbg !4309, !tbaa !2866
  %tobool41 = trunc i8 %30 to i1, !dbg !4309, !ctir !142
  br i1 %tobool41, label %if.then42, label %if.end55, !dbg !4310

if.then42:                                        ; preds = %if.else40
  %31 = load i8, i8* %new_dst.addr, align 1, !dbg !4311, !tbaa !2742
  %tobool43 = trunc i8 %31 to i1, !dbg !4311
  br i1 %tobool43, label %land.lhs.true44, label %if.end54, !dbg !4314

land.lhs.true44:                                  ; preds = %if.then42
  %32 = load i8*, i8** %dst_name.addr, align 8, !dbg !4315, !tbaa !2648
  %33 = load i32, i32* %mode.addr, align 4, !dbg !4316, !tbaa !2635
  %call45 = call i32 @defaultcon.91(i8* %32, i32 %33), !dbg !4317
  %cmp46 = icmp slt i32 %call45, 0, !dbg !4318
  br i1 %cmp46, label %land.lhs.true47, label %if.end54, !dbg !4319

land.lhs.true47:                                  ; preds = %land.lhs.true44
  %call48 = call i32* @__errno_location() #16, !dbg !4320
  %34 = load i32, i32* %call48, align 4, !dbg !4320, !tbaa !2635, !ctir !7
  %call49 = call zeroext i1 @ignorable_ctx_err.92(i32 %34), !dbg !4321
  br i1 %call49, label %if.end54, label %if.then50, !dbg !4322

if.then50:                                        ; preds = %land.lhs.true47
  %call51 = call i32* @__errno_location() #16, !dbg !4323
  %35 = load i32, i32* %call51, align 4, !dbg !4323, !tbaa !2635, !ctir !7
  %call52 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.93, i64 0, i64 0)) #9, !dbg !4325
  %36 = load i8*, i8** %dst_name.addr, align 8, !dbg !4326, !tbaa !2648
  %call53 = call i8* @quotearg_style(i32 4, i8* %36), !dbg !4326
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %35, i8* %call52, i8* %call53), !dbg !4327
  br label %if.end54, !dbg !4328

if.end54:                                         ; preds = %if.then50, %land.lhs.true47, %land.lhs.true44, %if.then42
  br label %if.end55, !dbg !4329

if.end55:                                         ; preds = %if.end54, %if.else40
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.end39
  store i1 true, i1* %retval, align 1, !dbg !4330
  br label %return, !dbg !4330

return:                                           ; preds = %if.end56, %if.then37, %if.then21
  %37 = load i1, i1* %retval, align 1, !dbg !4331
  ret i1 %37, !dbg !4331
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @errno_unsupported(i32 %err) #4 !dbg !4332 !ctir !256 {
entry:
  %err.addr = alloca i32, align 4
  store i32 %err, i32* %err.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !4333, metadata !DIExpression()), !dbg !4334
  %0 = load i32, i32* %err.addr, align 4, !dbg !4335, !tbaa !2635
  %cmp = icmp eq i32 %0, 95, !dbg !4336
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !4337

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %err.addr, align 4, !dbg !4338, !tbaa !2635
  %cmp1 = icmp eq i32 %1, 61, !dbg !4339
  br label %lor.end, !dbg !4337

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !4340
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @defaultcon.91(i8* %path, i32 %mode) #4 !dbg !4341 !ctir !250 {
entry:
  %path.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  store i8* %path, i8** %path.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !4342, metadata !DIExpression()), !dbg !4343
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4344, metadata !DIExpression()), !dbg !4345
  %call = call i32* @__errno_location() #16, !dbg !4346
  store i32 95, i32* %call, align 4, !dbg !4347, !tbaa !2635, !ctir !7
  ret i32 -1, !dbg !4348
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @ignorable_ctx_err.92(i32 %err) #4 !dbg !4349 !ctir !256 {
entry:
  %err.addr = alloca i32, align 4
  store i32 %err, i32* %err.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !4350, metadata !DIExpression()), !dbg !4351
  %0 = load i32, i32* %err.addr, align 4, !dbg !4352, !tbaa !2635
  %cmp = icmp eq i32 %0, 95, !dbg !4353
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !4354

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %err.addr, align 4, !dbg !4355, !tbaa !2635
  %cmp1 = icmp eq i32 %1, 61, !dbg !4356
  br label %lor.end, !dbg !4354

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !4357
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @set_file_security_ctx(i8* %dst_name, i1 zeroext %process_local, i1 zeroext %recurse, %struct.cp_options* %x) #4 !dbg !4358 !ctir !399 {
entry:
  %retval = alloca i1, align 1
  %dst_name.addr = alloca i8*, align 8
  %process_local.addr = alloca i8, align 1
  %recurse.addr = alloca i8, align 1
  %x.addr = alloca %struct.cp_options*, align 8
  %all_errors = alloca i8, align 1, !ctir !142
  %some_errors = alloca i8, align 1, !ctir !142
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !4359, metadata !DIExpression()), !dbg !4360
  %frombool = zext i1 %process_local to i8
  store i8 %frombool, i8* %process_local.addr, align 1, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %process_local.addr, metadata !4361, metadata !DIExpression()), !dbg !4362
  %frombool1 = zext i1 %recurse to i8
  store i8 %frombool1, i8* %recurse.addr, align 1, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %recurse.addr, metadata !4363, metadata !DIExpression()), !dbg !4364
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !4365, metadata !DIExpression()), !dbg !4366
  call void @llvm.dbg.declare(metadata i8* %all_errors, metadata !4367, metadata !DIExpression()), !dbg !4368
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4369, !tbaa !2648
  %data_copy_required = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 20, !dbg !4370, !ctir !357
  %1 = load i8, i8* %data_copy_required, align 1, !dbg !4370, !tbaa !3202
  %tobool = trunc i8 %1 to i1, !dbg !4370, !ctir !142
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !4371

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4372, !tbaa !2648
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 23, !dbg !4373, !ctir !357
  %3 = load i8, i8* %require_preserve_context, align 2, !dbg !4373, !tbaa !3249
  %tobool2 = trunc i8 %3 to i1, !dbg !4373, !ctir !142
  br label %lor.end, !dbg !4371

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %tobool2, %lor.rhs ]
  %frombool3 = zext i1 %4 to i8, !dbg !4368
  store i8 %frombool3, i8* %all_errors, align 1, !dbg !4368, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %some_errors, metadata !4374, metadata !DIExpression()), !dbg !4375
  %5 = load i8, i8* %all_errors, align 1, !dbg !4376, !tbaa !2742
  %tobool4 = trunc i8 %5 to i1, !dbg !4376
  br i1 %tobool4, label %land.end, label %land.rhs, !dbg !4377

land.rhs:                                         ; preds = %lor.end
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4378, !tbaa !2648
  %reduce_diagnostics = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 26, !dbg !4379, !ctir !357
  %7 = load i8, i8* %reduce_diagnostics, align 1, !dbg !4379, !tbaa !3198
  %tobool5 = trunc i8 %7 to i1, !dbg !4379, !ctir !142
  %lnot = xor i1 %tobool5, true, !dbg !4380
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.end
  %8 = phi i1 [ false, %lor.end ], [ %lnot, %land.rhs ], !dbg !4381
  %frombool6 = zext i1 %8 to i8, !dbg !4375
  store i8 %frombool6, i8* %some_errors, align 1, !dbg !4375, !tbaa !2742
  %9 = load i8*, i8** %dst_name.addr, align 8, !dbg !4382, !tbaa !2648
  %10 = load i8, i8* %recurse.addr, align 1, !dbg !4384, !tbaa !2742
  %tobool7 = trunc i8 %10 to i1, !dbg !4384
  %11 = load i8, i8* %process_local.addr, align 1, !dbg !4385, !tbaa !2742
  %tobool8 = trunc i8 %11 to i1, !dbg !4385
  %call = call zeroext i1 @restorecon.94(i8* %9, i1 zeroext %tobool7, i1 zeroext %tobool8), !dbg !4386
  br i1 %call, label %if.end17, label %if.then, !dbg !4387

if.then:                                          ; preds = %land.end
  %12 = load i8, i8* %all_errors, align 1, !dbg !4388, !tbaa !2742
  %tobool9 = trunc i8 %12 to i1, !dbg !4388
  br i1 %tobool9, label %if.then13, label %lor.lhs.false, !dbg !4391

lor.lhs.false:                                    ; preds = %if.then
  %13 = load i8, i8* %some_errors, align 1, !dbg !4392, !tbaa !2742
  %tobool10 = trunc i8 %13 to i1, !dbg !4392
  br i1 %tobool10, label %land.lhs.true, label %if.end, !dbg !4393

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call11 = call i32* @__errno_location() #16, !dbg !4394
  %14 = load i32, i32* %call11, align 4, !dbg !4394, !tbaa !2635, !ctir !7
  %call12 = call zeroext i1 @errno_unsupported(i32 %14), !dbg !4395
  br i1 %call12, label %if.end, label %if.then13, !dbg !4396

if.then13:                                        ; preds = %land.lhs.true, %if.then
  %call14 = call i32* @__errno_location() #16, !dbg !4397
  %15 = load i32, i32* %call14, align 4, !dbg !4397, !tbaa !2635, !ctir !7
  %call15 = call i8* @gettext(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3.95, i64 0, i64 0)) #9, !dbg !4398
  %16 = load i8*, i8** %dst_name.addr, align 8, !dbg !4399, !tbaa !2648
  %call16 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %16), !dbg !4399
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %15, i8* %call15, i8* %call16), !dbg !4400
  br label %if.end, !dbg !4400

if.end:                                           ; preds = %if.then13, %land.lhs.true, %lor.lhs.false
  store i1 false, i1* %retval, align 1, !dbg !4401
  br label %return, !dbg !4401

if.end17:                                         ; preds = %land.end
  store i1 true, i1* %retval, align 1, !dbg !4402
  br label %return, !dbg !4402

return:                                           ; preds = %if.end17, %if.end
  %17 = load i1, i1* %retval, align 1, !dbg !4403
  ret i1 %17, !dbg !4403
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @restorecon.94(i8* %path, i1 zeroext %recurse, i1 zeroext %preserve) #4 !dbg !4404 !ctir !254 {
entry:
  %path.addr = alloca i8*, align 8
  %recurse.addr = alloca i8, align 1
  %preserve.addr = alloca i8, align 1
  store i8* %path, i8** %path.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !4405, metadata !DIExpression()), !dbg !4406
  %frombool = zext i1 %recurse to i8
  store i8 %frombool, i8* %recurse.addr, align 1, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %recurse.addr, metadata !4407, metadata !DIExpression()), !dbg !4408
  %frombool1 = zext i1 %preserve to i8
  store i8 %frombool1, i8* %preserve.addr, align 1, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %preserve.addr, metadata !4409, metadata !DIExpression()), !dbg !4410
  %call = call i32* @__errno_location() #16, !dbg !4411
  store i32 95, i32* %call, align 4, !dbg !4412, !tbaa !2635, !ctir !7
  ret i1 false, !dbg !4413
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @dest_info_init(%struct.cp_options* %x) #4 !dbg !4414 !ctir !401 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !4415, metadata !DIExpression()), !dbg !4416
  %call = call %struct.hash_table* @hash_initialize(i64 61, %struct.hash_tuning* null, i64 (i8*, i64)* @triple_hash, i1 (i8*, i8*)* @triple_compare, void (i8*)* @triple_free), !dbg !4417
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4418, !tbaa !2648
  %dest_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 37, !dbg !4419, !ctir !358
  store %struct.hash_table* %call, %struct.hash_table** %dest_info, align 8, !dbg !4420, !tbaa !3266, !ctir !175
  ret void, !dbg !4421
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @src_info_init(%struct.cp_options* %x) #4 !dbg !4422 !ctir !401 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !4423, metadata !DIExpression()), !dbg !4424
  %call = call %struct.hash_table* @hash_initialize(i64 61, %struct.hash_tuning* null, i64 (i8*, i64)* @triple_hash_no_name, i1 (i8*, i8*)* @triple_compare, void (i8*)* @triple_free), !dbg !4425
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4426, !tbaa !2648
  %src_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 38, !dbg !4427, !ctir !358
  store %struct.hash_table* %call, %struct.hash_table** %src_info, align 8, !dbg !4428, !tbaa !3270, !ctir !175
  ret void, !dbg !4429
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @copy(i8* %src_name, i8* %dst_name, i1 zeroext %nonexistent_dst, %struct.cp_options* %options, i8* %copy_into_self, i8* %rename_succeeded) #4 !dbg !4430 !ctir !404 {
entry:
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %nonexistent_dst.addr = alloca i8, align 1
  %options.addr = alloca %struct.cp_options*, align 8
  %copy_into_self.addr = alloca i8*, align 8
  %rename_succeeded.addr = alloca i8*, align 8
  %first_dir_created_per_command_line_arg = alloca i8, align 1, !ctir !142
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !4431, metadata !DIExpression()), !dbg !4432
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !4433, metadata !DIExpression()), !dbg !4434
  %frombool = zext i1 %nonexistent_dst to i8
  store i8 %frombool, i8* %nonexistent_dst.addr, align 1, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %nonexistent_dst.addr, metadata !4435, metadata !DIExpression()), !dbg !4436
  store %struct.cp_options* %options, %struct.cp_options** %options.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.cp_options** %options.addr, metadata !4437, metadata !DIExpression()), !dbg !4438
  store i8* %copy_into_self, i8** %copy_into_self.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %copy_into_self.addr, metadata !4439, metadata !DIExpression()), !dbg !4440
  store i8* %rename_succeeded, i8** %rename_succeeded.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %rename_succeeded.addr, metadata !4441, metadata !DIExpression()), !dbg !4442
  %0 = load %struct.cp_options*, %struct.cp_options** %options.addr, align 8, !dbg !4443, !tbaa !2648
  %call = call zeroext i1 @valid_options(%struct.cp_options* %0) #14, !dbg !4443
  br i1 %call, label %if.then, label %if.else, !dbg !4446

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !4446

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4.100, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 3013, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__.copy, i64 0, i64 0)) #13, !dbg !4443
  unreachable, !dbg !4443

if.end:                                           ; preds = %if.then
  %1 = load i8*, i8** %src_name.addr, align 8, !dbg !4447, !tbaa !2648
  store i8* %1, i8** @top_level_src_name, align 8, !dbg !4448, !tbaa !2648
  %2 = load i8*, i8** %dst_name.addr, align 8, !dbg !4449, !tbaa !2648
  store i8* %2, i8** @top_level_dst_name, align 8, !dbg !4450, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8* %first_dir_created_per_command_line_arg, metadata !4451, metadata !DIExpression()), !dbg !4452
  store i8 0, i8* %first_dir_created_per_command_line_arg, align 1, !dbg !4452, !tbaa !2742
  %3 = load i8*, i8** %src_name.addr, align 8, !dbg !4453, !tbaa !2648
  %4 = load i8*, i8** %dst_name.addr, align 8, !dbg !4454, !tbaa !2648
  %5 = load i8, i8* %nonexistent_dst.addr, align 1, !dbg !4455, !tbaa !2742
  %tobool = trunc i8 %5 to i1, !dbg !4455
  %6 = load %struct.cp_options*, %struct.cp_options** %options.addr, align 8, !dbg !4456, !tbaa !2648
  %7 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !4457, !tbaa !2648
  %8 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4458, !tbaa !2648
  %call1 = call zeroext i1 @copy_internal(i8* %3, i8* %4, i1 zeroext %tobool, %struct.stat* null, %struct.dir_list* null, %struct.cp_options* %6, i1 zeroext true, i8* %first_dir_created_per_command_line_arg, i8* %7, i8* %8), !dbg !4459
  ret i1 %call1, !dbg !4460
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @valid_options(%struct.cp_options* %co) #10 !dbg !4461 !ctir !407 {
entry:
  %co.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %co, %struct.cp_options** %co.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.cp_options** %co.addr, metadata !4462, metadata !DIExpression()), !dbg !4463
  %0 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4464, !tbaa !2648
  %cmp = icmp ne %struct.cp_options* %0, null, !dbg !4464
  br i1 %cmp, label %if.then, label %if.else, !dbg !4467

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !4467

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6.168, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 2988, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4464
  unreachable, !dbg !4464

if.end:                                           ; preds = %if.then
  %1 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4468, !tbaa !2648
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1, i32 0, i32 0, !dbg !4468, !ctir !357
  %2 = load i32, i32* %backup_type, align 8, !dbg !4468, !tbaa !2927, !ctir !68
  %cmp1 = icmp ule i32 %2, 3, !dbg !4468
  br i1 %cmp1, label %if.then2, label %if.else3, !dbg !4471

if.then2:                                         ; preds = %if.end
  br label %if.end4, !dbg !4471

if.else3:                                         ; preds = %if.end
  call void @__assert_fail(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7.169, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 2989, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4468
  unreachable, !dbg !4468

if.end4:                                          ; preds = %if.then2
  %3 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4472, !tbaa !2648
  %sparse_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 3, !dbg !4472, !ctir !357
  %4 = load i32, i32* %sparse_mode, align 4, !dbg !4472, !tbaa !3218, !ctir !89
  %cmp5 = icmp eq i32 %4, 1, !dbg !4472
  br i1 %cmp5, label %if.then11, label %lor.lhs.false, !dbg !4472

lor.lhs.false:                                    ; preds = %if.end4
  %5 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4472, !tbaa !2648
  %sparse_mode6 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 3, !dbg !4472, !ctir !357
  %6 = load i32, i32* %sparse_mode6, align 4, !dbg !4472, !tbaa !3218, !ctir !89
  %cmp7 = icmp eq i32 %6, 2, !dbg !4472
  br i1 %cmp7, label %if.then11, label %lor.lhs.false8, !dbg !4472

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %7 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4472, !tbaa !2648
  %sparse_mode9 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 3, !dbg !4472, !ctir !357
  %8 = load i32, i32* %sparse_mode9, align 4, !dbg !4472, !tbaa !3218, !ctir !89
  %cmp10 = icmp eq i32 %8, 3, !dbg !4472
  br i1 %cmp10, label %if.then11, label %if.else12, !dbg !4475

if.then11:                                        ; preds = %lor.lhs.false8, %lor.lhs.false, %if.end4
  br label %if.end13, !dbg !4475

if.else12:                                        ; preds = %lor.lhs.false8
  call void @__assert_fail(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.170, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 2990, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4472
  unreachable, !dbg !4472

if.end13:                                         ; preds = %if.then11
  %9 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4476, !tbaa !2648
  %reflink_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 36, !dbg !4476, !ctir !357
  %10 = load i32, i32* %reflink_mode, align 8, !dbg !4476, !tbaa !3143, !ctir !95
  %cmp14 = icmp eq i32 %10, 0, !dbg !4476
  br i1 %cmp14, label %if.then21, label %lor.lhs.false15, !dbg !4476

lor.lhs.false15:                                  ; preds = %if.end13
  %11 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4476, !tbaa !2648
  %reflink_mode16 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 36, !dbg !4476, !ctir !357
  %12 = load i32, i32* %reflink_mode16, align 8, !dbg !4476, !tbaa !3143, !ctir !95
  %cmp17 = icmp eq i32 %12, 1, !dbg !4476
  br i1 %cmp17, label %if.then21, label %lor.lhs.false18, !dbg !4476

lor.lhs.false18:                                  ; preds = %lor.lhs.false15
  %13 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4476, !tbaa !2648
  %reflink_mode19 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %13, i32 0, i32 36, !dbg !4476, !ctir !357
  %14 = load i32, i32* %reflink_mode19, align 8, !dbg !4476, !tbaa !3143, !ctir !95
  %cmp20 = icmp eq i32 %14, 2, !dbg !4476
  br i1 %cmp20, label %if.then21, label %if.else22, !dbg !4479

if.then21:                                        ; preds = %lor.lhs.false18, %lor.lhs.false15, %if.end13
  br label %if.end23, !dbg !4479

if.else22:                                        ; preds = %lor.lhs.false18
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9.171, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 2991, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4476
  unreachable, !dbg !4476

if.end23:                                         ; preds = %if.then21
  %15 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4480, !tbaa !2648
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %15, i32 0, i32 8, !dbg !4480, !ctir !357
  %16 = load i8, i8* %hard_link, align 1, !dbg !4480, !tbaa !3159
  %tobool = trunc i8 %16 to i1, !dbg !4480, !ctir !142
  br i1 %tobool, label %land.lhs.true, label %if.then25, !dbg !4480

land.lhs.true:                                    ; preds = %if.end23
  %17 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4480, !tbaa !2648
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %17, i32 0, i32 29, !dbg !4480, !ctir !357
  %18 = load i8, i8* %symbolic_link, align 4, !dbg !4480, !tbaa !3222
  %tobool24 = trunc i8 %18 to i1, !dbg !4480, !ctir !142
  br i1 %tobool24, label %if.else26, label %if.then25, !dbg !4483

if.then25:                                        ; preds = %land.lhs.true, %if.end23
  br label %if.end27, !dbg !4483

if.else26:                                        ; preds = %land.lhs.true
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10.172, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 2992, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4480
  unreachable, !dbg !4480

if.end27:                                         ; preds = %if.then25
  %19 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4484, !tbaa !2648
  %reflink_mode28 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %19, i32 0, i32 36, !dbg !4484, !ctir !357
  %20 = load i32, i32* %reflink_mode28, align 8, !dbg !4484, !tbaa !3143, !ctir !95
  %cmp29 = icmp eq i32 %20, 2, !dbg !4484
  br i1 %cmp29, label %land.lhs.true30, label %if.then33, !dbg !4484

land.lhs.true30:                                  ; preds = %if.end27
  %21 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4484, !tbaa !2648
  %sparse_mode31 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %21, i32 0, i32 3, !dbg !4484, !ctir !357
  %22 = load i32, i32* %sparse_mode31, align 4, !dbg !4484, !tbaa !3218, !ctir !89
  %cmp32 = icmp ne i32 %22, 2, !dbg !4484
  br i1 %cmp32, label %if.else34, label %if.then33, !dbg !4487

if.then33:                                        ; preds = %land.lhs.true30, %if.end27
  br label %if.end35, !dbg !4487

if.else34:                                        ; preds = %land.lhs.true30
  call void @__assert_fail(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.11.173, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 2995, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4484
  unreachable, !dbg !4484

if.end35:                                         ; preds = %if.then33
  ret i1 true, !dbg !4488
}

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_internal(i8* %src_name, i8* %dst_name, i1 zeroext %new_dst, %struct.stat* %parent, %struct.dir_list* %ancestors, %struct.cp_options* %x, i1 zeroext %command_line_arg, i8* %first_dir_created_per_command_line_arg, i8* %copy_into_self, i8* %rename_succeeded) #4 !dbg !4489 !ctir !411 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %new_dst.addr = alloca i8, align 1
  %parent.addr = alloca %struct.stat*, align 8
  %ancestors.addr = alloca %struct.dir_list*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %command_line_arg.addr = alloca i8, align 1
  %first_dir_created_per_command_line_arg.addr = alloca i8*, align 8
  %copy_into_self.addr = alloca i8*, align 8
  %rename_succeeded.addr = alloca i8*, align 8
  %src_sb = alloca %struct.stat, align 8, !ctir !415
  %dst_sb = alloca %struct.stat, align 8, !ctir !415
  %src_mode = alloca i32, align 4, !ctir !139
  %dst_mode = alloca i32, align 4, !ctir !139
  %dst_mode_bits = alloca i32, align 4, !ctir !139
  %omitted_permissions = alloca i32, align 4, !ctir !139
  %restore_dst_mode = alloca i8, align 1, !ctir !142
  %earlier_file = alloca i8*, align 8, !ctir !9
  %dst_backup = alloca i8*, align 8, !ctir !9
  %delayed_ok = alloca i8, align 1, !ctir !142
  %copied_as_regular = alloca i8, align 1, !ctir !142
  %dest_is_symlink = alloca i8, align 1, !ctir !142
  %have_dst_lstat = alloca i8, align 1, !ctir !142
  %rename_errno = alloca i32, align 4, !ctir !7
  %name = alloca i8*, align 8, !ctir !180
  %fstatat_flags = alloca i32, align 4, !ctir !7
  %dereference65 = alloca i8, align 1, !ctir !142
  %use_lstat = alloca i8, align 1, !ctir !142
  %fstatat_flags98 = alloca i32, align 4, !ctir !7
  %return_now = alloca i8, align 1, !ctir !142
  %options = alloca i32, align 4, !ctir !7
  %srcbase = alloca i8*, align 8, !ctir !180
  %fmt = alloca i8*, align 8, !ctir !180
  %tmp_backup = alloca i8*, align 8, !ctir !9
  %__old = alloca i8*, align 8, !ctir !180
  %__len = alloca i64, align 8, !ctir !55
  %__new = alloca i8*, align 8, !ctir !9
  %tmp = alloca i8*, align 8
  %lstat_ok = alloca i8, align 1, !ctir !142
  %tmp_buf = alloca %struct.stat, align 8, !ctir !415
  %dst_lstat_sb = alloca %struct.stat*, align 8, !ctir !444
  %dir = alloca %struct.dir_list*, align 8, !ctir !436
  %dot_sb = alloca %struct.stat, align 8, !ctir !415
  %dst_parent_sb = alloca %struct.stat, align 8, !ctir !415
  %dst_parent = alloca i8*, align 8, !ctir !9
  %in_current_dir = alloca i8, align 1, !ctir !142
  %err = alloca i32, align 4, !ctir !7
  %replace = alloca i8, align 1, !ctir !142
  %src_link_val = alloca i8*, align 8, !ctir !9
  %symlink_err = alloca i32, align 4, !ctir !7
  %dest_link_val = alloca i8*, align 8, !ctir !9
  %sb = alloca %struct.stat, align 8, !ctir !415
  %timespec = alloca [2 x %struct.timespec], align 16, !ctir !445
  %tmp952 = alloca %struct.timespec, align 8
  %tmp955 = alloca %struct.timespec, align 8
  %default_permissions = alloca i32, align 4, !ctir !7
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !4490, metadata !DIExpression()), !dbg !4491
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !4492, metadata !DIExpression()), !dbg !4493
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !4494, metadata !DIExpression()), !dbg !4495
  store %struct.stat* %parent, %struct.stat** %parent.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.stat** %parent.addr, metadata !4496, metadata !DIExpression()), !dbg !4497
  store %struct.dir_list* %ancestors, %struct.dir_list** %ancestors.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.dir_list** %ancestors.addr, metadata !4498, metadata !DIExpression()), !dbg !4499
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !4500, metadata !DIExpression()), !dbg !4501
  %frombool1 = zext i1 %command_line_arg to i8
  store i8 %frombool1, i8* %command_line_arg.addr, align 1, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !4502, metadata !DIExpression()), !dbg !4503
  store i8* %first_dir_created_per_command_line_arg, i8** %first_dir_created_per_command_line_arg.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %first_dir_created_per_command_line_arg.addr, metadata !4504, metadata !DIExpression()), !dbg !4505
  store i8* %copy_into_self, i8** %copy_into_self.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %copy_into_self.addr, metadata !4506, metadata !DIExpression()), !dbg !4507
  store i8* %rename_succeeded, i8** %rename_succeeded.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %rename_succeeded.addr, metadata !4508, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.declare(metadata %struct.stat* %src_sb, metadata !4510, metadata !DIExpression()), !dbg !4511
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_sb, metadata !4512, metadata !DIExpression()), !dbg !4513
  call void @llvm.dbg.declare(metadata i32* %src_mode, metadata !4514, metadata !DIExpression()), !dbg !4515
  call void @llvm.dbg.declare(metadata i32* %dst_mode, metadata !4516, metadata !DIExpression()), !dbg !4517
  call void @llvm.dbg.declare(metadata i32* %dst_mode_bits, metadata !4518, metadata !DIExpression()), !dbg !4519
  call void @llvm.dbg.declare(metadata i32* %omitted_permissions, metadata !4520, metadata !DIExpression()), !dbg !4521
  call void @llvm.dbg.declare(metadata i8* %restore_dst_mode, metadata !4522, metadata !DIExpression()), !dbg !4523
  store i8 0, i8* %restore_dst_mode, align 1, !dbg !4523, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8** %earlier_file, metadata !4524, metadata !DIExpression()), !dbg !4525
  store i8* null, i8** %earlier_file, align 8, !dbg !4525, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dst_backup, metadata !4526, metadata !DIExpression()), !dbg !4527
  store i8* null, i8** %dst_backup, align 8, !dbg !4527, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8* %delayed_ok, metadata !4528, metadata !DIExpression()), !dbg !4529
  call void @llvm.dbg.declare(metadata i8* %copied_as_regular, metadata !4530, metadata !DIExpression()), !dbg !4531
  store i8 0, i8* %copied_as_regular, align 1, !dbg !4531, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %dest_is_symlink, metadata !4532, metadata !DIExpression()), !dbg !4533
  store i8 0, i8* %dest_is_symlink, align 1, !dbg !4533, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %have_dst_lstat, metadata !4534, metadata !DIExpression()), !dbg !4535
  store i8 0, i8* %have_dst_lstat, align 1, !dbg !4535, !tbaa !2742
  %0 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !4536, !tbaa !2648
  store i8 0, i8* %0, align 1, !dbg !4537, !tbaa !2742, !ctir !142
  call void @llvm.dbg.declare(metadata i32* %rename_errno, metadata !4538, metadata !DIExpression()), !dbg !4539
  %1 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4540, !tbaa !2648
  %rename_errno2 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1, i32 0, i32 35, !dbg !4541, !ctir !357
  %2 = load i32, i32* %rename_errno2, align 4, !dbg !4541, !tbaa !4542, !ctir !7
  store i32 %2, i32* %rename_errno, align 4, !dbg !4539, !tbaa !2635
  %3 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4543, !tbaa !2648
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 9, !dbg !4545, !ctir !357
  %4 = load i8, i8* %move_mode, align 8, !dbg !4545, !tbaa !3167
  %tobool = trunc i8 %4 to i1, !dbg !4545, !ctir !142
  br i1 %tobool, label %if.then, label %if.end13, !dbg !4546

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %rename_errno, align 4, !dbg !4547, !tbaa !2635
  %cmp = icmp slt i32 %5, 0, !dbg !4550
  br i1 %cmp, label %if.then3, label %if.end, !dbg !4551

if.then3:                                         ; preds = %if.then
  %6 = load i8*, i8** %src_name.addr, align 8, !dbg !4552, !tbaa !2648
  %7 = load i8*, i8** %dst_name.addr, align 8, !dbg !4553, !tbaa !2648
  %call = call i32 @renameatu(i32 -100, i8* %6, i32 -100, i8* %7, i32 1), !dbg !4554
  %tobool4 = icmp ne i32 %call, 0, !dbg !4554
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !4554

cond.true:                                        ; preds = %if.then3
  %call5 = call i32* @__errno_location() #16, !dbg !4555
  %8 = load i32, i32* %call5, align 4, !dbg !4555, !tbaa !2635, !ctir !7
  br label %cond.end, !dbg !4554

cond.false:                                       ; preds = %if.then3
  br label %cond.end, !dbg !4554

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %8, %cond.true ], [ 0, %cond.false ], !dbg !4554
  store i32 %cond, i32* %rename_errno, align 4, !dbg !4556, !tbaa !2635
  br label %if.end, !dbg !4557

if.end:                                           ; preds = %cond.end, %if.then
  %9 = load i32, i32* %rename_errno, align 4, !dbg !4558, !tbaa !2635
  %cmp6 = icmp eq i32 %9, 0, !dbg !4559
  %frombool7 = zext i1 %cmp6 to i8, !dbg !4560
  store i8 %frombool7, i8* %new_dst.addr, align 1, !dbg !4560, !tbaa !2742
  %10 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4561, !tbaa !2648
  %tobool8 = icmp ne i8* %10, null, !dbg !4561
  br i1 %tobool8, label %if.then9, label %if.end12, !dbg !4563

if.then9:                                         ; preds = %if.end
  %11 = load i8, i8* %new_dst.addr, align 1, !dbg !4564, !tbaa !2742
  %tobool10 = trunc i8 %11 to i1, !dbg !4564
  %12 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4565, !tbaa !2648
  %frombool11 = zext i1 %tobool10 to i8, !dbg !4566
  store i8 %frombool11, i8* %12, align 1, !dbg !4566, !tbaa !2742, !ctir !142
  br label %if.end12, !dbg !4567

if.end12:                                         ; preds = %if.then9, %if.end
  br label %if.end13, !dbg !4568

if.end13:                                         ; preds = %if.end12, %entry
  %13 = load i32, i32* %rename_errno, align 4, !dbg !4569, !tbaa !2635
  %cmp14 = icmp eq i32 %13, 0, !dbg !4571
  br i1 %cmp14, label %cond.true15, label %cond.false17, !dbg !4572

cond.true15:                                      ; preds = %if.end13
  %14 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4573, !tbaa !2648
  %last_file = getelementptr inbounds %struct.cp_options, %struct.cp_options* %14, i32 0, i32 34, !dbg !4574, !ctir !357
  %15 = load i8, i8* %last_file, align 1, !dbg !4574, !tbaa !4575
  %tobool16 = trunc i8 %15 to i1, !dbg !4574, !ctir !142
  br i1 %tobool16, label %if.end47, label %if.then20, !dbg !4569

cond.false17:                                     ; preds = %if.end13
  %16 = load i32, i32* %rename_errno, align 4, !dbg !4576, !tbaa !2635
  %cmp18 = icmp ne i32 %16, 17, !dbg !4577
  br i1 %cmp18, label %if.then20, label %lor.lhs.false, !dbg !4578

lor.lhs.false:                                    ; preds = %cond.false17
  %17 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4579, !tbaa !2648
  %interactive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %17, i32 0, i32 2, !dbg !4580, !ctir !357
  %18 = load i32, i32* %interactive, align 8, !dbg !4580, !tbaa !3163, !ctir !83
  %cmp19 = icmp ne i32 %18, 2, !dbg !4581
  br i1 %cmp19, label %if.then20, label %if.end47, !dbg !4572

if.then20:                                        ; preds = %lor.lhs.false, %cond.false17, %cond.true15
  call void @llvm.dbg.declare(metadata i8** %name, metadata !4582, metadata !DIExpression()), !dbg !4584
  %19 = load i32, i32* %rename_errno, align 4, !dbg !4585, !tbaa !2635
  %cmp21 = icmp eq i32 %19, 0, !dbg !4586
  br i1 %cmp21, label %cond.true22, label %cond.false23, !dbg !4585

cond.true22:                                      ; preds = %if.then20
  %20 = load i8*, i8** %dst_name.addr, align 8, !dbg !4587, !tbaa !2648
  br label %cond.end24, !dbg !4585

cond.false23:                                     ; preds = %if.then20
  %21 = load i8*, i8** %src_name.addr, align 8, !dbg !4588, !tbaa !2648
  br label %cond.end24, !dbg !4585

cond.end24:                                       ; preds = %cond.false23, %cond.true22
  %cond25 = phi i8* [ %20, %cond.true22 ], [ %21, %cond.false23 ], !dbg !4585
  store i8* %cond25, i8** %name, align 8, !dbg !4584, !tbaa !2648
  call void @llvm.dbg.declare(metadata i32* %fstatat_flags, metadata !4589, metadata !DIExpression()), !dbg !4590
  %22 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4591, !tbaa !2648
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %22, i32 0, i32 1, !dbg !4592, !ctir !357
  %23 = load i32, i32* %dereference, align 4, !dbg !4592, !tbaa !3147, !ctir !76
  %cmp26 = icmp eq i32 %23, 2, !dbg !4593
  %24 = zext i1 %cmp26 to i64, !dbg !4591
  %cond27 = select i1 %cmp26, i32 256, i32 0, !dbg !4591
  store i32 %cond27, i32* %fstatat_flags, align 4, !dbg !4590, !tbaa !2635
  %25 = load i8*, i8** %name, align 8, !dbg !4594, !tbaa !2648
  %26 = load i32, i32* %fstatat_flags, align 4, !dbg !4596, !tbaa !2635
  %call28 = call i32 @follow_fstatat(i32 -100, i8* %25, %struct.stat* %src_sb, i32 %26), !dbg !4597
  %cmp29 = icmp ne i32 %call28, 0, !dbg !4598
  br i1 %cmp29, label %if.then30, label %if.end34, !dbg !4599

if.then30:                                        ; preds = %cond.end24
  %call31 = call i32* @__errno_location() #16, !dbg !4600
  %27 = load i32, i32* %call31, align 4, !dbg !4600, !tbaa !2635, !ctir !7
  %call32 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.102, i64 0, i64 0)) #9, !dbg !4602
  %28 = load i8*, i8** %name, align 8, !dbg !4603, !tbaa !2648
  %call33 = call i8* @quotearg_style(i32 4, i8* %28), !dbg !4603
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %27, i8* %call32, i8* %call33), !dbg !4604
  store i1 false, i1* %retval, align 1, !dbg !4605
  br label %return, !dbg !4605

if.end34:                                         ; preds = %cond.end24
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !4606, !ctir !415
  %29 = load i32, i32* %st_mode, align 8, !dbg !4606, !tbaa !2914, !ctir !140
  store i32 %29, i32* %src_mode, align 4, !dbg !4607, !tbaa !2635
  %30 = load i32, i32* %src_mode, align 4, !dbg !4608, !tbaa !2635
  %and = and i32 %30, 61440, !dbg !4608
  %cmp35 = icmp eq i32 %and, 16384, !dbg !4608
  br i1 %cmp35, label %land.lhs.true, label %if.end46, !dbg !4610

land.lhs.true:                                    ; preds = %if.end34
  %31 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4611, !tbaa !2648
  %recursive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %31, i32 0, i32 27, !dbg !4612, !ctir !357
  %32 = load i8, i8* %recursive, align 2, !dbg !4612, !tbaa !3214
  %tobool36 = trunc i8 %32 to i1, !dbg !4612, !ctir !142
  br i1 %tobool36, label %if.end46, label %if.then37, !dbg !4613

if.then37:                                        ; preds = %land.lhs.true
  %33 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4614, !tbaa !2648
  %install_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %33, i32 0, i32 10, !dbg !4616, !ctir !357
  %34 = load i8, i8* %install_mode, align 1, !dbg !4616, !tbaa !3171
  %tobool38 = trunc i8 %34 to i1, !dbg !4616, !ctir !142
  br i1 %tobool38, label %cond.false41, label %cond.true39, !dbg !4617

cond.true39:                                      ; preds = %if.then37
  %call40 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.13.103, i64 0, i64 0)) #9, !dbg !4618
  br label %cond.end43, !dbg !4617

cond.false41:                                     ; preds = %if.then37
  %call42 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14.104, i64 0, i64 0)) #9, !dbg !4619
  br label %cond.end43, !dbg !4617

cond.end43:                                       ; preds = %cond.false41, %cond.true39
  %cond44 = phi i8* [ %call40, %cond.true39 ], [ %call42, %cond.false41 ], !dbg !4617
  %35 = load i8*, i8** %src_name.addr, align 8, !dbg !4620, !tbaa !2648
  %call45 = call i8* @quotearg_style(i32 4, i8* %35), !dbg !4620
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %cond44, i8* %call45), !dbg !4621
  store i1 false, i1* %retval, align 1, !dbg !4622
  br label %return, !dbg !4622

if.end46:                                         ; preds = %land.lhs.true, %if.end34
  br label %if.end47, !dbg !4623

if.end47:                                         ; preds = %if.end46, %lor.lhs.false, %cond.true15
  %36 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4624, !tbaa !2742
  %tobool48 = trunc i8 %36 to i1, !dbg !4624
  br i1 %tobool48, label %land.lhs.true49, label %if.end64, !dbg !4626

land.lhs.true49:                                  ; preds = %if.end47
  %37 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4627, !tbaa !2648
  %src_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %37, i32 0, i32 38, !dbg !4628, !ctir !357
  %38 = load %struct.hash_table*, %struct.hash_table** %src_info, align 8, !dbg !4628, !tbaa !3270, !ctir !175
  %tobool50 = icmp ne %struct.hash_table* %38, null, !dbg !4627
  br i1 %tobool50, label %if.then51, label %if.end64, !dbg !4629

if.then51:                                        ; preds = %land.lhs.true49
  %39 = load i32, i32* %src_mode, align 4, !dbg !4630, !tbaa !2635
  %and52 = and i32 %39, 61440, !dbg !4630
  %cmp53 = icmp eq i32 %and52, 16384, !dbg !4630
  br i1 %cmp53, label %if.end62, label %land.lhs.true54, !dbg !4633

land.lhs.true54:                                  ; preds = %if.then51
  %40 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4634, !tbaa !2648
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %40, i32 0, i32 0, !dbg !4635, !ctir !357
  %41 = load i32, i32* %backup_type, align 8, !dbg !4635, !tbaa !2927, !ctir !68
  %cmp55 = icmp eq i32 %41, 0, !dbg !4636
  br i1 %cmp55, label %land.lhs.true56, label %if.end62, !dbg !4637

land.lhs.true56:                                  ; preds = %land.lhs.true54
  %42 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4638, !tbaa !2648
  %src_info57 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %42, i32 0, i32 38, !dbg !4639, !ctir !357
  %43 = load %struct.hash_table*, %struct.hash_table** %src_info57, align 8, !dbg !4639, !tbaa !3270, !ctir !175
  %44 = load i8*, i8** %src_name.addr, align 8, !dbg !4640, !tbaa !2648
  %call58 = call zeroext i1 @seen_file(%struct.hash_table* %43, i8* %44, %struct.stat* %src_sb), !dbg !4641
  br i1 %call58, label %if.then59, label %if.end62, !dbg !4642

if.then59:                                        ; preds = %land.lhs.true56
  %call60 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.15.105, i64 0, i64 0)) #9, !dbg !4643
  %45 = load i8*, i8** %src_name.addr, align 8, !dbg !4645, !tbaa !2648
  %call61 = call i8* @quotearg_style(i32 4, i8* %45), !dbg !4645
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call60, i8* %call61), !dbg !4646
  store i1 true, i1* %retval, align 1, !dbg !4647
  br label %return, !dbg !4647

if.end62:                                         ; preds = %land.lhs.true56, %land.lhs.true54, %if.then51
  %46 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4648, !tbaa !2648
  %src_info63 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %46, i32 0, i32 38, !dbg !4649, !ctir !357
  %47 = load %struct.hash_table*, %struct.hash_table** %src_info63, align 8, !dbg !4649, !tbaa !3270, !ctir !175
  %48 = load i8*, i8** %src_name.addr, align 8, !dbg !4650, !tbaa !2648
  call void @record_file(%struct.hash_table* %47, i8* %48, %struct.stat* %src_sb), !dbg !4651
  br label %if.end64, !dbg !4652

if.end64:                                         ; preds = %if.end62, %land.lhs.true49, %if.end47
  call void @llvm.dbg.declare(metadata i8* %dereference65, metadata !4653, metadata !DIExpression()), !dbg !4654
  %49 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4655, !tbaa !2648
  %50 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4656, !tbaa !2742
  %tobool66 = trunc i8 %50 to i1, !dbg !4656
  %call67 = call zeroext i1 @should_dereference(%struct.cp_options* %49, i1 zeroext %tobool66) #14, !dbg !4657
  %frombool68 = zext i1 %call67 to i8, !dbg !4654
  store i8 %frombool68, i8* %dereference65, align 1, !dbg !4654, !tbaa !2742
  %51 = load i8, i8* %new_dst.addr, align 1, !dbg !4658, !tbaa !2742
  %tobool69 = trunc i8 %51 to i1, !dbg !4658
  br i1 %tobool69, label %if.end345, label %if.then70, !dbg !4660

if.then70:                                        ; preds = %if.end64
  %52 = load i32, i32* %rename_errno, align 4, !dbg !4661, !tbaa !2635
  %cmp71 = icmp eq i32 %52, 17, !dbg !4664
  br i1 %cmp71, label %land.lhs.true72, label %if.then75, !dbg !4665

land.lhs.true72:                                  ; preds = %if.then70
  %53 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4666, !tbaa !2648
  %interactive73 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %53, i32 0, i32 2, !dbg !4667, !ctir !357
  %54 = load i32, i32* %interactive73, align 8, !dbg !4667, !tbaa !3163, !ctir !83
  %cmp74 = icmp eq i32 %54, 2, !dbg !4668
  br i1 %cmp74, label %if.end122, label %if.then75, !dbg !4669

if.then75:                                        ; preds = %land.lhs.true72, %if.then70
  call void @llvm.dbg.declare(metadata i8* %use_lstat, metadata !4670, metadata !DIExpression()), !dbg !4672
  %55 = load i32, i32* %src_mode, align 4, !dbg !4673, !tbaa !2635
  %and76 = and i32 %55, 61440, !dbg !4673
  %cmp77 = icmp eq i32 %and76, 32768, !dbg !4673
  br i1 %cmp77, label %lor.lhs.false86, label %land.lhs.true78, !dbg !4674

land.lhs.true78:                                  ; preds = %if.then75
  %56 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4675, !tbaa !2648
  %copy_as_regular = getelementptr inbounds %struct.cp_options, %struct.cp_options* %56, i32 0, i32 5, !dbg !4676, !ctir !357
  %57 = load i8, i8* %copy_as_regular, align 4, !dbg !4676, !tbaa !3139
  %tobool79 = trunc i8 %57 to i1, !dbg !4676, !ctir !142
  br i1 %tobool79, label %lor.lhs.false80, label %lor.end, !dbg !4677

lor.lhs.false80:                                  ; preds = %land.lhs.true78
  %58 = load i32, i32* %src_mode, align 4, !dbg !4678, !tbaa !2635
  %and81 = and i32 %58, 61440, !dbg !4678
  %cmp82 = icmp eq i32 %and81, 16384, !dbg !4678
  br i1 %cmp82, label %lor.end, label %lor.lhs.false83, !dbg !4679

lor.lhs.false83:                                  ; preds = %lor.lhs.false80
  %59 = load i32, i32* %src_mode, align 4, !dbg !4680, !tbaa !2635
  %and84 = and i32 %59, 61440, !dbg !4680
  %cmp85 = icmp eq i32 %and84, 40960, !dbg !4680
  br i1 %cmp85, label %lor.end, label %lor.lhs.false86, !dbg !4681

lor.lhs.false86:                                  ; preds = %lor.lhs.false83, %if.then75
  %60 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4682, !tbaa !2648
  %move_mode87 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %60, i32 0, i32 9, !dbg !4683, !ctir !357
  %61 = load i8, i8* %move_mode87, align 8, !dbg !4683, !tbaa !3167
  %tobool88 = trunc i8 %61 to i1, !dbg !4683, !ctir !142
  br i1 %tobool88, label %lor.end, label %lor.lhs.false89, !dbg !4684

lor.lhs.false89:                                  ; preds = %lor.lhs.false86
  %62 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4685, !tbaa !2648
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %62, i32 0, i32 29, !dbg !4686, !ctir !357
  %63 = load i8, i8* %symbolic_link, align 4, !dbg !4686, !tbaa !3222
  %tobool90 = trunc i8 %63 to i1, !dbg !4686, !ctir !142
  br i1 %tobool90, label %lor.end, label %lor.lhs.false91, !dbg !4687

lor.lhs.false91:                                  ; preds = %lor.lhs.false89
  %64 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4688, !tbaa !2648
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %64, i32 0, i32 8, !dbg !4689, !ctir !357
  %65 = load i8, i8* %hard_link, align 1, !dbg !4689, !tbaa !3159
  %tobool92 = trunc i8 %65 to i1, !dbg !4689, !ctir !142
  br i1 %tobool92, label %lor.end, label %lor.lhs.false93, !dbg !4690

lor.lhs.false93:                                  ; preds = %lor.lhs.false91
  %66 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4691, !tbaa !2648
  %backup_type94 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %66, i32 0, i32 0, !dbg !4692, !ctir !357
  %67 = load i32, i32* %backup_type94, align 8, !dbg !4692, !tbaa !2927, !ctir !68
  %cmp95 = icmp ne i32 %67, 0, !dbg !4693
  br i1 %cmp95, label %lor.end, label %lor.rhs, !dbg !4694

lor.rhs:                                          ; preds = %lor.lhs.false93
  %68 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4695, !tbaa !2648
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %68, i32 0, i32 6, !dbg !4696, !ctir !357
  %69 = load i8, i8* %unlink_dest_before_opening, align 1, !dbg !4696, !tbaa !3151
  %tobool96 = trunc i8 %69 to i1, !dbg !4696, !ctir !142
  br label %lor.end, !dbg !4694

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false93, %lor.lhs.false91, %lor.lhs.false89, %lor.lhs.false86, %lor.lhs.false83, %lor.lhs.false80, %land.lhs.true78
  %70 = phi i1 [ true, %lor.lhs.false93 ], [ true, %lor.lhs.false91 ], [ true, %lor.lhs.false89 ], [ true, %lor.lhs.false86 ], [ true, %lor.lhs.false83 ], [ true, %lor.lhs.false80 ], [ true, %land.lhs.true78 ], [ %tobool96, %lor.rhs ]
  %frombool97 = zext i1 %70 to i8, !dbg !4672
  store i8 %frombool97, i8* %use_lstat, align 1, !dbg !4672, !tbaa !2742
  call void @llvm.dbg.declare(metadata i32* %fstatat_flags98, metadata !4697, metadata !DIExpression()), !dbg !4698
  %71 = load i8, i8* %use_lstat, align 1, !dbg !4699, !tbaa !2742
  %tobool99 = trunc i8 %71 to i1, !dbg !4699
  %72 = zext i1 %tobool99 to i64, !dbg !4699
  %cond100 = select i1 %tobool99, i32 256, i32 0, !dbg !4699
  store i32 %cond100, i32* %fstatat_flags98, align 4, !dbg !4698, !tbaa !2635
  %73 = load i8*, i8** %dst_name.addr, align 8, !dbg !4700, !tbaa !2648
  %74 = load i32, i32* %fstatat_flags98, align 4, !dbg !4702, !tbaa !2635
  %call101 = call i32 @follow_fstatat(i32 -100, i8* %73, %struct.stat* %dst_sb, i32 %74), !dbg !4703
  %cmp102 = icmp eq i32 %call101, 0, !dbg !4704
  br i1 %cmp102, label %if.then103, label %if.else, !dbg !4705

if.then103:                                       ; preds = %lor.end
  %75 = load i8, i8* %use_lstat, align 1, !dbg !4706, !tbaa !2742
  %tobool104 = trunc i8 %75 to i1, !dbg !4706
  %frombool105 = zext i1 %tobool104 to i8, !dbg !4708
  store i8 %frombool105, i8* %have_dst_lstat, align 1, !dbg !4708, !tbaa !2742
  store i32 17, i32* %rename_errno, align 4, !dbg !4709, !tbaa !2635
  br label %if.end121, !dbg !4710

if.else:                                          ; preds = %lor.end
  %call106 = call i32* @__errno_location() #16, !dbg !4711
  %76 = load i32, i32* %call106, align 4, !dbg !4711, !tbaa !2635, !ctir !7
  %cmp107 = icmp eq i32 %76, 40, !dbg !4714
  br i1 %cmp107, label %land.lhs.true108, label %if.else111, !dbg !4715

land.lhs.true108:                                 ; preds = %if.else
  %77 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4716, !tbaa !2648
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %77, i32 0, i32 7, !dbg !4717, !ctir !357
  %78 = load i8, i8* %unlink_dest_after_failed_open, align 2, !dbg !4717, !tbaa !3155
  %tobool109 = trunc i8 %78 to i1, !dbg !4717, !ctir !142
  br i1 %tobool109, label %if.then110, label %if.else111, !dbg !4718

if.then110:                                       ; preds = %land.lhs.true108
  br label %if.end120, !dbg !4718

if.else111:                                       ; preds = %land.lhs.true108, %if.else
  %call112 = call i32* @__errno_location() #16, !dbg !4719
  %79 = load i32, i32* %call112, align 4, !dbg !4719, !tbaa !2635, !ctir !7
  %cmp113 = icmp ne i32 %79, 2, !dbg !4721
  br i1 %cmp113, label %if.then114, label %if.else118, !dbg !4722

if.then114:                                       ; preds = %if.else111
  %call115 = call i32* @__errno_location() #16, !dbg !4723
  %80 = load i32, i32* %call115, align 4, !dbg !4723, !tbaa !2635, !ctir !7
  %call116 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.102, i64 0, i64 0)) #9, !dbg !4725
  %81 = load i8*, i8** %dst_name.addr, align 8, !dbg !4726, !tbaa !2648
  %call117 = call i8* @quotearg_style(i32 4, i8* %81), !dbg !4726
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %80, i8* %call116, i8* %call117), !dbg !4727
  store i1 false, i1* %retval, align 1, !dbg !4728
  br label %return, !dbg !4728

if.else118:                                       ; preds = %if.else111
  store i8 1, i8* %new_dst.addr, align 1, !dbg !4729, !tbaa !2742
  br label %if.end119

if.end119:                                        ; preds = %if.else118
  br label %if.end120

if.end120:                                        ; preds = %if.end119, %if.then110
  br label %if.end121

if.end121:                                        ; preds = %if.end120, %if.then103
  br label %if.end122, !dbg !4730

if.end122:                                        ; preds = %if.end121, %land.lhs.true72
  %82 = load i32, i32* %rename_errno, align 4, !dbg !4731, !tbaa !2635
  %cmp123 = icmp eq i32 %82, 17, !dbg !4733
  br i1 %cmp123, label %if.then124, label %if.end344, !dbg !4734

if.then124:                                       ; preds = %if.end122
  call void @llvm.dbg.declare(metadata i8* %return_now, metadata !4735, metadata !DIExpression()), !dbg !4737
  store i8 0, i8* %return_now, align 1, !dbg !4737, !tbaa !2742
  %83 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4738, !tbaa !2648
  %interactive125 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %83, i32 0, i32 2, !dbg !4740, !ctir !357
  %84 = load i32, i32* %interactive125, align 8, !dbg !4740, !tbaa !3163, !ctir !83
  %cmp126 = icmp ne i32 %84, 2, !dbg !4741
  br i1 %cmp126, label %land.lhs.true127, label %if.end133, !dbg !4742

land.lhs.true127:                                 ; preds = %if.then124
  %85 = load i8*, i8** %src_name.addr, align 8, !dbg !4743, !tbaa !2648
  %86 = load i8*, i8** %dst_name.addr, align 8, !dbg !4744, !tbaa !2648
  %87 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4745, !tbaa !2648
  %call128 = call zeroext i1 @same_file_ok(i8* %85, %struct.stat* %src_sb, i8* %86, %struct.stat* %dst_sb, %struct.cp_options* %87, i8* %return_now), !dbg !4746
  br i1 %call128, label %if.end133, label %if.then129, !dbg !4747

if.then129:                                       ; preds = %land.lhs.true127
  %call130 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.16.106, i64 0, i64 0)) #9, !dbg !4748
  %88 = load i8*, i8** %src_name.addr, align 8, !dbg !4750, !tbaa !2648
  %call131 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %88), !dbg !4750
  %89 = load i8*, i8** %dst_name.addr, align 8, !dbg !4751, !tbaa !2648
  %call132 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %89), !dbg !4751
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call130, i8* %call131, i8* %call132), !dbg !4752
  store i1 false, i1* %retval, align 1, !dbg !4753
  br label %return, !dbg !4753

if.end133:                                        ; preds = %land.lhs.true127, %if.then124
  %90 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4754, !tbaa !2648
  %update = getelementptr inbounds %struct.cp_options, %struct.cp_options* %90, i32 0, i32 30, !dbg !4756, !ctir !357
  %91 = load i8, i8* %update, align 1, !dbg !4756, !tbaa !3245
  %tobool134 = trunc i8 %91 to i1, !dbg !4756, !ctir !142
  br i1 %tobool134, label %land.lhs.true135, label %if.end164, !dbg !4757

land.lhs.true135:                                 ; preds = %if.end133
  %92 = load i32, i32* %src_mode, align 4, !dbg !4758, !tbaa !2635
  %and136 = and i32 %92, 61440, !dbg !4758
  %cmp137 = icmp eq i32 %and136, 16384, !dbg !4758
  br i1 %cmp137, label %if.end164, label %if.then138, !dbg !4759

if.then138:                                       ; preds = %land.lhs.true135
  call void @llvm.dbg.declare(metadata i32* %options, metadata !4760, metadata !DIExpression()), !dbg !4762
  %93 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4763, !tbaa !2648
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %93, i32 0, i32 16, !dbg !4764, !ctir !357
  %94 = load i8, i8* %preserve_timestamps, align 1, !dbg !4764, !tbaa !2826
  %tobool139 = trunc i8 %94 to i1, !dbg !4764, !ctir !142
  br i1 %tobool139, label %land.rhs, label %land.end145, !dbg !4765

land.rhs:                                         ; preds = %if.then138
  %95 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4766, !tbaa !2648
  %move_mode140 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %95, i32 0, i32 9, !dbg !4767, !ctir !357
  %96 = load i8, i8* %move_mode140, align 8, !dbg !4767, !tbaa !3167
  %tobool141 = trunc i8 %96 to i1, !dbg !4767, !ctir !142
  br i1 %tobool141, label %land.rhs142, label %land.end, !dbg !4768

land.rhs142:                                      ; preds = %land.rhs
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 0, !dbg !4769, !ctir !415
  %97 = load i64, i64* %st_dev, align 8, !dbg !4769, !tbaa !4770, !ctir !274
  %st_dev143 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4771, !ctir !415
  %98 = load i64, i64* %st_dev143, align 8, !dbg !4771, !tbaa !4770, !ctir !274
  %cmp144 = icmp eq i64 %97, %98, !dbg !4772
  br label %land.end

land.end:                                         ; preds = %land.rhs142, %land.rhs
  %99 = phi i1 [ false, %land.rhs ], [ %cmp144, %land.rhs142 ], !dbg !4773
  %lnot = xor i1 %99, true, !dbg !4774
  br label %land.end145

land.end145:                                      ; preds = %land.end, %if.then138
  %100 = phi i1 [ false, %if.then138 ], [ %lnot, %land.end ], !dbg !4773
  %101 = zext i1 %100 to i64, !dbg !4775
  %cond146 = select i1 %100, i32 1, i32 0, !dbg !4775
  store i32 %cond146, i32* %options, align 4, !dbg !4762, !tbaa !2635
  %102 = load i8*, i8** %dst_name.addr, align 8, !dbg !4776, !tbaa !2648
  %103 = load i32, i32* %options, align 4, !dbg !4778, !tbaa !2635
  %call147 = call i32 @utimecmp(i8* %102, %struct.stat* %dst_sb, %struct.stat* %src_sb, i32 %103), !dbg !4779
  %cmp148 = icmp sle i32 0, %call147, !dbg !4780
  br i1 %cmp148, label %if.then149, label %if.end163, !dbg !4781

if.then149:                                       ; preds = %land.end145
  %104 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4782, !tbaa !2648
  %tobool150 = icmp ne i8* %104, null, !dbg !4782
  br i1 %tobool150, label %if.then151, label %if.end152, !dbg !4785

if.then151:                                       ; preds = %if.then149
  %105 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4786, !tbaa !2648
  store i8 1, i8* %105, align 1, !dbg !4787, !tbaa !2742, !ctir !142
  br label %if.end152, !dbg !4788

if.end152:                                        ; preds = %if.then151, %if.then149
  %106 = load i8*, i8** %dst_name.addr, align 8, !dbg !4789, !tbaa !2648
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !4790, !ctir !415
  %107 = load i64, i64* %st_ino, align 8, !dbg !4790, !tbaa !4791, !ctir !276
  %st_dev153 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4792, !ctir !415
  %108 = load i64, i64* %st_dev153, align 8, !dbg !4792, !tbaa !4770, !ctir !274
  %call154 = call i8* @remember_copied(i8* %106, i64 %107, i64 %108), !dbg !4793
  store i8* %call154, i8** %earlier_file, align 8, !dbg !4794, !tbaa !2648
  %109 = load i8*, i8** %earlier_file, align 8, !dbg !4795, !tbaa !2648
  %tobool155 = icmp ne i8* %109, null, !dbg !4795
  br i1 %tobool155, label %if.then156, label %if.end162, !dbg !4797

if.then156:                                       ; preds = %if.end152
  %110 = load i8*, i8** %earlier_file, align 8, !dbg !4798, !tbaa !2648
  %111 = load i8*, i8** %dst_name.addr, align 8, !dbg !4801, !tbaa !2648
  %112 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4802, !tbaa !2648
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %112, i32 0, i32 31, !dbg !4803, !ctir !357
  %113 = load i8, i8* %verbose, align 2, !dbg !4803, !tbaa !2812
  %tobool157 = trunc i8 %113 to i1, !dbg !4803, !ctir !142
  %114 = load i8, i8* %dereference65, align 1, !dbg !4804, !tbaa !2742
  %tobool158 = trunc i8 %114 to i1, !dbg !4804
  %call159 = call zeroext i1 @create_hard_link(i8* %110, i8* %111, i1 zeroext true, i1 zeroext %tobool157, i1 zeroext %tobool158), !dbg !4805
  br i1 %call159, label %if.end161, label %if.then160, !dbg !4806

if.then160:                                       ; preds = %if.then156
  br label %un_backup, !dbg !4807

if.end161:                                        ; preds = %if.then156
  br label %if.end162, !dbg !4809

if.end162:                                        ; preds = %if.end161, %if.end152
  store i1 true, i1* %retval, align 1, !dbg !4810
  br label %return, !dbg !4810

if.end163:                                        ; preds = %land.end145
  br label %if.end164, !dbg !4811

if.end164:                                        ; preds = %if.end163, %land.lhs.true135, %if.end133
  %115 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4812, !tbaa !2648
  %move_mode165 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %115, i32 0, i32 9, !dbg !4814, !ctir !357
  %116 = load i8, i8* %move_mode165, align 8, !dbg !4814, !tbaa !3167
  %tobool166 = trunc i8 %116 to i1, !dbg !4814, !ctir !142
  br i1 %tobool166, label %if.then167, label %if.else174, !dbg !4815

if.then167:                                       ; preds = %if.end164
  %117 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4816, !tbaa !2648
  %118 = load i8*, i8** %dst_name.addr, align 8, !dbg !4819, !tbaa !2648
  %call168 = call zeroext i1 @abandon_move(%struct.cp_options* %117, i8* %118, %struct.stat* %dst_sb), !dbg !4820
  br i1 %call168, label %if.then169, label %if.end173, !dbg !4821

if.then169:                                       ; preds = %if.then167
  %119 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4822, !tbaa !2648
  %tobool170 = icmp ne i8* %119, null, !dbg !4822
  br i1 %tobool170, label %if.then171, label %if.end172, !dbg !4825

if.then171:                                       ; preds = %if.then169
  %120 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4826, !tbaa !2648
  store i8 1, i8* %120, align 1, !dbg !4827, !tbaa !2742, !ctir !142
  br label %if.end172, !dbg !4828

if.end172:                                        ; preds = %if.then171, %if.then169
  store i1 true, i1* %retval, align 1, !dbg !4829
  br label %return, !dbg !4829

if.end173:                                        ; preds = %if.then167
  br label %if.end187, !dbg !4830

if.else174:                                       ; preds = %if.end164
  %121 = load i32, i32* %src_mode, align 4, !dbg !4831, !tbaa !2635
  %and175 = and i32 %121, 61440, !dbg !4831
  %cmp176 = icmp eq i32 %and175, 16384, !dbg !4831
  br i1 %cmp176, label %if.end186, label %land.lhs.true177, !dbg !4834

land.lhs.true177:                                 ; preds = %if.else174
  %122 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4835, !tbaa !2648
  %interactive178 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %122, i32 0, i32 2, !dbg !4836, !ctir !357
  %123 = load i32, i32* %interactive178, align 8, !dbg !4836, !tbaa !3163, !ctir !83
  %cmp179 = icmp eq i32 %123, 2, !dbg !4837
  br i1 %cmp179, label %if.then185, label %lor.lhs.false180, !dbg !4838

lor.lhs.false180:                                 ; preds = %land.lhs.true177
  %124 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4839, !tbaa !2648
  %interactive181 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %124, i32 0, i32 2, !dbg !4840, !ctir !357
  %125 = load i32, i32* %interactive181, align 8, !dbg !4840, !tbaa !3163, !ctir !83
  %cmp182 = icmp eq i32 %125, 3, !dbg !4841
  br i1 %cmp182, label %land.lhs.true183, label %if.end186, !dbg !4842

land.lhs.true183:                                 ; preds = %lor.lhs.false180
  %126 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4843, !tbaa !2648
  %127 = load i8*, i8** %dst_name.addr, align 8, !dbg !4844, !tbaa !2648
  %call184 = call zeroext i1 @overwrite_ok(%struct.cp_options* %126, i8* %127, %struct.stat* %dst_sb), !dbg !4845
  br i1 %call184, label %if.end186, label %if.then185, !dbg !4846

if.then185:                                       ; preds = %land.lhs.true183, %land.lhs.true177
  store i1 true, i1* %retval, align 1, !dbg !4847
  br label %return, !dbg !4847

if.end186:                                        ; preds = %land.lhs.true183, %lor.lhs.false180, %if.else174
  br label %if.end187

if.end187:                                        ; preds = %if.end186, %if.end173
  %128 = load i8, i8* %return_now, align 1, !dbg !4848, !tbaa !2742
  %tobool188 = trunc i8 %128 to i1, !dbg !4848
  br i1 %tobool188, label %if.then189, label %if.end190, !dbg !4850

if.then189:                                       ; preds = %if.end187
  store i1 true, i1* %retval, align 1, !dbg !4851
  br label %return, !dbg !4851

if.end190:                                        ; preds = %if.end187
  %st_mode191 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !4852, !ctir !415
  %129 = load i32, i32* %st_mode191, align 8, !dbg !4852, !tbaa !2914, !ctir !140
  %and192 = and i32 %129, 61440, !dbg !4852
  %cmp193 = icmp eq i32 %and192, 16384, !dbg !4852
  br i1 %cmp193, label %if.end221, label %if.then194, !dbg !4854

if.then194:                                       ; preds = %if.end190
  %130 = load i32, i32* %src_mode, align 4, !dbg !4855, !tbaa !2635
  %and195 = and i32 %130, 61440, !dbg !4855
  %cmp196 = icmp eq i32 %and195, 16384, !dbg !4855
  br i1 %cmp196, label %if.then197, label %if.end209, !dbg !4858

if.then197:                                       ; preds = %if.then194
  %131 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4859, !tbaa !2648
  %move_mode198 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %131, i32 0, i32 9, !dbg !4862, !ctir !357
  %132 = load i8, i8* %move_mode198, align 8, !dbg !4862, !tbaa !3167
  %tobool199 = trunc i8 %132 to i1, !dbg !4862, !ctir !142
  br i1 %tobool199, label %land.lhs.true200, label %if.else204, !dbg !4863

land.lhs.true200:                                 ; preds = %if.then197
  %133 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4864, !tbaa !2648
  %backup_type201 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %133, i32 0, i32 0, !dbg !4865, !ctir !357
  %134 = load i32, i32* %backup_type201, align 8, !dbg !4865, !tbaa !2927, !ctir !68
  %cmp202 = icmp ne i32 %134, 0, !dbg !4866
  br i1 %cmp202, label %if.then203, label %if.else204, !dbg !4867

if.then203:                                       ; preds = %land.lhs.true200
  br label %if.end208, !dbg !4868

if.else204:                                       ; preds = %land.lhs.true200, %if.then197
  %call205 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.17.107, i64 0, i64 0)) #9, !dbg !4870
  %135 = load i8*, i8** %dst_name.addr, align 8, !dbg !4872, !tbaa !2648
  %call206 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %135), !dbg !4872
  %136 = load i8*, i8** %src_name.addr, align 8, !dbg !4873, !tbaa !2648
  %call207 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %136), !dbg !4873
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call205, i8* %call206, i8* %call207), !dbg !4874
  store i1 false, i1* %retval, align 1, !dbg !4875
  br label %return, !dbg !4875

if.end208:                                        ; preds = %if.then203
  br label %if.end209, !dbg !4876

if.end209:                                        ; preds = %if.end208, %if.then194
  %137 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4877, !tbaa !2742
  %tobool210 = trunc i8 %137 to i1, !dbg !4877
  br i1 %tobool210, label %land.lhs.true211, label %if.end220, !dbg !4879

land.lhs.true211:                                 ; preds = %if.end209
  %138 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4880, !tbaa !2648
  %backup_type212 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %138, i32 0, i32 0, !dbg !4881, !ctir !357
  %139 = load i32, i32* %backup_type212, align 8, !dbg !4881, !tbaa !2927, !ctir !68
  %cmp213 = icmp ne i32 %139, 3, !dbg !4882
  br i1 %cmp213, label %land.lhs.true214, label %if.end220, !dbg !4883

land.lhs.true214:                                 ; preds = %land.lhs.true211
  %140 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4884, !tbaa !2648
  %dest_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %140, i32 0, i32 37, !dbg !4885, !ctir !357
  %141 = load %struct.hash_table*, %struct.hash_table** %dest_info, align 8, !dbg !4885, !tbaa !3266, !ctir !175
  %142 = load i8*, i8** %dst_name.addr, align 8, !dbg !4886, !tbaa !2648
  %call215 = call zeroext i1 @seen_file(%struct.hash_table* %141, i8* %142, %struct.stat* %dst_sb), !dbg !4887
  br i1 %call215, label %if.then216, label %if.end220, !dbg !4888

if.then216:                                       ; preds = %land.lhs.true214
  %call217 = call i8* @gettext(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.18.108, i64 0, i64 0)) #9, !dbg !4889
  %143 = load i8*, i8** %dst_name.addr, align 8, !dbg !4891, !tbaa !2648
  %call218 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %143), !dbg !4891
  %144 = load i8*, i8** %src_name.addr, align 8, !dbg !4892, !tbaa !2648
  %call219 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %144), !dbg !4892
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call217, i8* %call218, i8* %call219), !dbg !4893
  store i1 false, i1* %retval, align 1, !dbg !4894
  br label %return, !dbg !4894

if.end220:                                        ; preds = %land.lhs.true214, %land.lhs.true211, %if.end209
  br label %if.end221, !dbg !4895

if.end221:                                        ; preds = %if.end220, %if.end190
  %145 = load i32, i32* %src_mode, align 4, !dbg !4896, !tbaa !2635
  %and222 = and i32 %145, 61440, !dbg !4896
  %cmp223 = icmp eq i32 %and222, 16384, !dbg !4896
  br i1 %cmp223, label %if.end240, label %if.then224, !dbg !4898

if.then224:                                       ; preds = %if.end221
  %st_mode225 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !4899, !ctir !415
  %146 = load i32, i32* %st_mode225, align 8, !dbg !4899, !tbaa !2914, !ctir !140
  %and226 = and i32 %146, 61440, !dbg !4899
  %cmp227 = icmp eq i32 %and226, 16384, !dbg !4899
  br i1 %cmp227, label %if.then228, label %if.end239, !dbg !4902

if.then228:                                       ; preds = %if.then224
  %147 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4903, !tbaa !2648
  %move_mode229 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %147, i32 0, i32 9, !dbg !4906, !ctir !357
  %148 = load i8, i8* %move_mode229, align 8, !dbg !4906, !tbaa !3167
  %tobool230 = trunc i8 %148 to i1, !dbg !4906, !ctir !142
  br i1 %tobool230, label %land.lhs.true231, label %if.else235, !dbg !4907

land.lhs.true231:                                 ; preds = %if.then228
  %149 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4908, !tbaa !2648
  %backup_type232 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %149, i32 0, i32 0, !dbg !4909, !ctir !357
  %150 = load i32, i32* %backup_type232, align 8, !dbg !4909, !tbaa !2927, !ctir !68
  %cmp233 = icmp ne i32 %150, 0, !dbg !4910
  br i1 %cmp233, label %if.then234, label %if.else235, !dbg !4911

if.then234:                                       ; preds = %land.lhs.true231
  br label %if.end238, !dbg !4912

if.else235:                                       ; preds = %land.lhs.true231, %if.then228
  %call236 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.19.109, i64 0, i64 0)) #9, !dbg !4914
  %151 = load i8*, i8** %dst_name.addr, align 8, !dbg !4916, !tbaa !2648
  %call237 = call i8* @quotearg_style(i32 4, i8* %151), !dbg !4916
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call236, i8* %call237), !dbg !4917
  store i1 false, i1* %retval, align 1, !dbg !4918
  br label %return, !dbg !4918

if.end238:                                        ; preds = %if.then234
  br label %if.end239, !dbg !4919

if.end239:                                        ; preds = %if.end238, %if.then224
  br label %if.end240, !dbg !4920

if.end240:                                        ; preds = %if.end239, %if.end221
  %152 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4921, !tbaa !2648
  %move_mode241 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %152, i32 0, i32 9, !dbg !4923, !ctir !357
  %153 = load i8, i8* %move_mode241, align 8, !dbg !4923, !tbaa !3167
  %tobool242 = trunc i8 %153 to i1, !dbg !4923, !ctir !142
  br i1 %tobool242, label %if.then243, label %if.end259, !dbg !4924

if.then243:                                       ; preds = %if.end240
  %st_mode244 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !4925, !ctir !415
  %154 = load i32, i32* %st_mode244, align 8, !dbg !4925, !tbaa !2914, !ctir !140
  %and245 = and i32 %154, 61440, !dbg !4925
  %cmp246 = icmp eq i32 %and245, 16384, !dbg !4925
  br i1 %cmp246, label %land.lhs.true247, label %if.end258, !dbg !4928

land.lhs.true247:                                 ; preds = %if.then243
  %st_mode248 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !4929, !ctir !415
  %155 = load i32, i32* %st_mode248, align 8, !dbg !4929, !tbaa !2914, !ctir !140
  %and249 = and i32 %155, 61440, !dbg !4929
  %cmp250 = icmp eq i32 %and249, 16384, !dbg !4929
  br i1 %cmp250, label %if.end258, label %land.lhs.true251, !dbg !4930

land.lhs.true251:                                 ; preds = %land.lhs.true247
  %156 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4931, !tbaa !2648
  %backup_type252 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %156, i32 0, i32 0, !dbg !4932, !ctir !357
  %157 = load i32, i32* %backup_type252, align 8, !dbg !4932, !tbaa !2927, !ctir !68
  %cmp253 = icmp eq i32 %157, 0, !dbg !4933
  br i1 %cmp253, label %if.then254, label %if.end258, !dbg !4934

if.then254:                                       ; preds = %land.lhs.true251
  %call255 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.20.110, i64 0, i64 0)) #9, !dbg !4935
  %158 = load i8*, i8** %src_name.addr, align 8, !dbg !4937, !tbaa !2648
  %call256 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %158), !dbg !4937
  %159 = load i8*, i8** %dst_name.addr, align 8, !dbg !4938, !tbaa !2648
  %call257 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %159), !dbg !4938
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call255, i8* %call256, i8* %call257), !dbg !4939
  store i1 false, i1* %retval, align 1, !dbg !4940
  br label %return, !dbg !4940

if.end258:                                        ; preds = %land.lhs.true251, %land.lhs.true247, %if.then243
  br label %if.end259, !dbg !4941

if.end259:                                        ; preds = %if.end258, %if.end240
  call void @llvm.dbg.declare(metadata i8** %srcbase, metadata !4942, metadata !DIExpression()), !dbg !4943
  %160 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4944, !tbaa !2648
  %backup_type260 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %160, i32 0, i32 0, !dbg !4946, !ctir !357
  %161 = load i32, i32* %backup_type260, align 8, !dbg !4946, !tbaa !2927, !ctir !68
  %cmp261 = icmp ne i32 %161, 0, !dbg !4947
  br i1 %cmp261, label %land.lhs.true262, label %if.else303, !dbg !4948

land.lhs.true262:                                 ; preds = %if.end259
  %162 = load i8*, i8** %src_name.addr, align 8, !dbg !4949, !tbaa !2648
  %call263 = call i8* @last_component(i8* %162) #14, !dbg !4950
  store i8* %call263, i8** %srcbase, align 8, !dbg !4951, !tbaa !2648
  %call264 = call zeroext i1 @dot_or_dotdot(i8* %call263), !dbg !4952
  br i1 %call264, label %if.else303, label %land.lhs.true265, !dbg !4953

land.lhs.true265:                                 ; preds = %land.lhs.true262
  %163 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4954, !tbaa !2648
  %move_mode266 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %163, i32 0, i32 9, !dbg !4955, !ctir !357
  %164 = load i8, i8* %move_mode266, align 8, !dbg !4955, !tbaa !3167
  %tobool267 = trunc i8 %164 to i1, !dbg !4955, !ctir !142
  br i1 %tobool267, label %if.then272, label %lor.lhs.false268, !dbg !4956

lor.lhs.false268:                                 ; preds = %land.lhs.true265
  %st_mode269 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !4957, !ctir !415
  %165 = load i32, i32* %st_mode269, align 8, !dbg !4957, !tbaa !2914, !ctir !140
  %and270 = and i32 %165, 61440, !dbg !4957
  %cmp271 = icmp eq i32 %and270, 16384, !dbg !4957
  br i1 %cmp271, label %if.else303, label %if.then272, !dbg !4958

if.then272:                                       ; preds = %lor.lhs.false268, %land.lhs.true265
  %166 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4959, !tbaa !2648
  %backup_type273 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %166, i32 0, i32 0, !dbg !4962, !ctir !357
  %167 = load i32, i32* %backup_type273, align 8, !dbg !4962, !tbaa !2927, !ctir !68
  %cmp274 = icmp ne i32 %167, 3, !dbg !4963
  br i1 %cmp274, label %land.lhs.true275, label %if.end288, !dbg !4964

land.lhs.true275:                                 ; preds = %if.then272
  %168 = load i8*, i8** %srcbase, align 8, !dbg !4965, !tbaa !2648
  %169 = load i8*, i8** %dst_name.addr, align 8, !dbg !4966, !tbaa !2648
  %call276 = call zeroext i1 @source_is_dst_backup(i8* %168, %struct.stat* %src_sb, i8* %169), !dbg !4967
  br i1 %call276, label %if.then277, label %if.end288, !dbg !4968

if.then277:                                       ; preds = %land.lhs.true275
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !4969, metadata !DIExpression()), !dbg !4971
  %170 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4972, !tbaa !2648
  %move_mode278 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %170, i32 0, i32 9, !dbg !4973, !ctir !357
  %171 = load i8, i8* %move_mode278, align 8, !dbg !4973, !tbaa !3167
  %tobool279 = trunc i8 %171 to i1, !dbg !4973, !ctir !142
  br i1 %tobool279, label %cond.true280, label %cond.false282, !dbg !4972

cond.true280:                                     ; preds = %if.then277
  %call281 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.21.111, i64 0, i64 0)) #9, !dbg !4974
  br label %cond.end284, !dbg !4972

cond.false282:                                    ; preds = %if.then277
  %call283 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.22.112, i64 0, i64 0)) #9, !dbg !4975
  br label %cond.end284, !dbg !4972

cond.end284:                                      ; preds = %cond.false282, %cond.true280
  %cond285 = phi i8* [ %call281, %cond.true280 ], [ %call283, %cond.false282 ], !dbg !4972
  store i8* %cond285, i8** %fmt, align 8, !dbg !4976, !tbaa !2648
  %172 = load i8*, i8** %fmt, align 8, !dbg !4977, !tbaa !2648
  %173 = load i8*, i8** %dst_name.addr, align 8, !dbg !4978, !tbaa !2648
  %call286 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %173), !dbg !4978
  %174 = load i8*, i8** %src_name.addr, align 8, !dbg !4979, !tbaa !2648
  %call287 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %174), !dbg !4979
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %172, i8* %call286, i8* %call287), !dbg !4980
  store i1 false, i1* %retval, align 1, !dbg !4981
  br label %return, !dbg !4981

if.end288:                                        ; preds = %land.lhs.true275, %if.then272
  call void @llvm.dbg.declare(metadata i8** %tmp_backup, metadata !4982, metadata !DIExpression()), !dbg !4983
  %175 = load i8*, i8** %dst_name.addr, align 8, !dbg !4984, !tbaa !2648
  %176 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4985, !tbaa !2648
  %backup_type289 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %176, i32 0, i32 0, !dbg !4986, !ctir !357
  %177 = load i32, i32* %backup_type289, align 8, !dbg !4986, !tbaa !2927, !ctir !68
  %call290 = call i8* @backup_file_rename(i32 -100, i8* %175, i32 %177), !dbg !4987
  store i8* %call290, i8** %tmp_backup, align 8, !dbg !4983, !tbaa !2648
  %178 = load i8*, i8** %tmp_backup, align 8, !dbg !4988, !tbaa !2648
  %tobool291 = icmp ne i8* %178, null, !dbg !4988
  br i1 %tobool291, label %if.then292, label %if.else294, !dbg !4990

if.then292:                                       ; preds = %if.end288
  br label %do.body, !dbg !4991

do.body:                                          ; preds = %if.then292
  call void @llvm.dbg.declare(metadata i8** %__old, metadata !4993, metadata !DIExpression()), !dbg !4996
  %179 = load i8*, i8** %tmp_backup, align 8, !dbg !4996, !tbaa !2648
  store i8* %179, i8** %__old, align 8, !dbg !4996, !tbaa !2648
  call void @llvm.dbg.declare(metadata i64* %__len, metadata !4997, metadata !DIExpression()), !dbg !4996
  %180 = load i8*, i8** %__old, align 8, !dbg !4996, !tbaa !2648
  %call293 = call i64 @strlen(i8* %180) #14, !dbg !4996
  %add = add i64 %call293, 1, !dbg !4996
  store i64 %add, i64* %__len, align 8, !dbg !4996, !tbaa !3288
  call void @llvm.dbg.declare(metadata i8** %__new, metadata !4998, metadata !DIExpression()), !dbg !4996
  %181 = load i64, i64* %__len, align 8, !dbg !4996, !tbaa !3288
  %182 = alloca i8, i64 %181, align 16, !dbg !4996
  store i8* %182, i8** %__new, align 8, !dbg !4996, !tbaa !2648
  %183 = load i8*, i8** %__new, align 8, !dbg !4996, !tbaa !2648
  %184 = load i8*, i8** %__old, align 8, !dbg !4996, !tbaa !2648
  %185 = load i64, i64* %__len, align 8, !dbg !4996, !tbaa !3288
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %183, i8* align 1 %184, i64 %185, i1 false), !dbg !4996
  store i8* %183, i8** %tmp, align 8, !dbg !4996, !tbaa !2648
  %186 = load i8*, i8** %tmp, align 8, !dbg !4996, !tbaa !2648
  store i8* %186, i8** %dst_backup, align 8, !dbg !4999, !tbaa !2648
  br label %do.end, !dbg !4999

do.end:                                           ; preds = %do.body
  %187 = load i8*, i8** %tmp_backup, align 8, !dbg !5000, !tbaa !2648
  call void @free(i8* %187) #9, !dbg !5001
  br label %if.end302, !dbg !5002

if.else294:                                       ; preds = %if.end288
  %call295 = call i32* @__errno_location() #16, !dbg !5003
  %188 = load i32, i32* %call295, align 4, !dbg !5003, !tbaa !2635, !ctir !7
  %cmp296 = icmp ne i32 %188, 2, !dbg !5005
  br i1 %cmp296, label %if.then297, label %if.end301, !dbg !5006

if.then297:                                       ; preds = %if.else294
  %call298 = call i32* @__errno_location() #16, !dbg !5007
  %189 = load i32, i32* %call298, align 4, !dbg !5007, !tbaa !2635, !ctir !7
  %call299 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23.113, i64 0, i64 0)) #9, !dbg !5009
  %190 = load i8*, i8** %dst_name.addr, align 8, !dbg !5010, !tbaa !2648
  %call300 = call i8* @quotearg_style(i32 4, i8* %190), !dbg !5010
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %189, i8* %call299, i8* %call300), !dbg !5011
  store i1 false, i1* %retval, align 1, !dbg !5012
  br label %return, !dbg !5012

if.end301:                                        ; preds = %if.else294
  br label %if.end302

if.end302:                                        ; preds = %if.end301, %do.end
  store i8 1, i8* %new_dst.addr, align 1, !dbg !5013, !tbaa !2742
  br label %if.end343, !dbg !5014

if.else303:                                       ; preds = %lor.lhs.false268, %land.lhs.true262, %if.end259
  %st_mode304 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5015, !ctir !415
  %191 = load i32, i32* %st_mode304, align 8, !dbg !5015, !tbaa !2914, !ctir !140
  %and305 = and i32 %191, 61440, !dbg !5015
  %cmp306 = icmp eq i32 %and305, 16384, !dbg !5015
  br i1 %cmp306, label %if.end342, label %land.lhs.true307, !dbg !5017

land.lhs.true307:                                 ; preds = %if.else303
  %192 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5018, !tbaa !2648
  %move_mode308 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %192, i32 0, i32 9, !dbg !5019, !ctir !357
  %193 = load i8, i8* %move_mode308, align 8, !dbg !5019, !tbaa !3167
  %tobool309 = trunc i8 %193 to i1, !dbg !5019, !ctir !142
  br i1 %tobool309, label %if.end342, label %land.lhs.true310, !dbg !5020

land.lhs.true310:                                 ; preds = %land.lhs.true307
  %194 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5021, !tbaa !2648
  %unlink_dest_before_opening311 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %194, i32 0, i32 6, !dbg !5022, !ctir !357
  %195 = load i8, i8* %unlink_dest_before_opening311, align 1, !dbg !5022, !tbaa !3151
  %tobool312 = trunc i8 %195 to i1, !dbg !5022, !ctir !142
  br i1 %tobool312, label %if.then324, label %lor.lhs.false313, !dbg !5023

lor.lhs.false313:                                 ; preds = %land.lhs.true310
  %196 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5024, !tbaa !2648
  %preserve_links = getelementptr inbounds %struct.cp_options, %struct.cp_options* %196, i32 0, i32 19, !dbg !5025, !ctir !357
  %197 = load i8, i8* %preserve_links, align 2, !dbg !5025, !tbaa !3183
  %tobool314 = trunc i8 %197 to i1, !dbg !5025, !ctir !142
  br i1 %tobool314, label %land.lhs.true315, label %lor.lhs.false317, !dbg !5026

land.lhs.true315:                                 ; preds = %lor.lhs.false313
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 2, !dbg !5027, !ctir !415
  %198 = load i64, i64* %st_nlink, align 8, !dbg !5027, !tbaa !5028, !ctir !278
  %cmp316 = icmp ult i64 1, %198, !dbg !5029
  br i1 %cmp316, label %if.then324, label %lor.lhs.false317, !dbg !5030

lor.lhs.false317:                                 ; preds = %land.lhs.true315, %lor.lhs.false313
  %199 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5031, !tbaa !2648
  %dereference318 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %199, i32 0, i32 1, !dbg !5032, !ctir !357
  %200 = load i32, i32* %dereference318, align 4, !dbg !5032, !tbaa !3147, !ctir !76
  %cmp319 = icmp eq i32 %200, 2, !dbg !5033
  br i1 %cmp319, label %land.lhs.true320, label %if.end342, !dbg !5034

land.lhs.true320:                                 ; preds = %lor.lhs.false317
  %st_mode321 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !5035, !ctir !415
  %201 = load i32, i32* %st_mode321, align 8, !dbg !5035, !tbaa !2914, !ctir !140
  %and322 = and i32 %201, 61440, !dbg !5035
  %cmp323 = icmp eq i32 %and322, 32768, !dbg !5035
  br i1 %cmp323, label %if.end342, label %if.then324, !dbg !5036

if.then324:                                       ; preds = %land.lhs.true320, %land.lhs.true315, %land.lhs.true310
  %202 = load i8*, i8** %dst_name.addr, align 8, !dbg !5037, !tbaa !2648
  %call325 = call i32 @unlink(i8* %202) #9, !dbg !5040
  %cmp326 = icmp ne i32 %call325, 0, !dbg !5041
  br i1 %cmp326, label %land.lhs.true327, label %if.end334, !dbg !5042

land.lhs.true327:                                 ; preds = %if.then324
  %call328 = call i32* @__errno_location() #16, !dbg !5043
  %203 = load i32, i32* %call328, align 4, !dbg !5043, !tbaa !2635, !ctir !7
  %cmp329 = icmp ne i32 %203, 2, !dbg !5044
  br i1 %cmp329, label %if.then330, label %if.end334, !dbg !5045

if.then330:                                       ; preds = %land.lhs.true327
  %call331 = call i32* @__errno_location() #16, !dbg !5046
  %204 = load i32, i32* %call331, align 4, !dbg !5046, !tbaa !2635, !ctir !7
  %call332 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24.114, i64 0, i64 0)) #9, !dbg !5048
  %205 = load i8*, i8** %dst_name.addr, align 8, !dbg !5049, !tbaa !2648
  %call333 = call i8* @quotearg_style(i32 4, i8* %205), !dbg !5049
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %204, i8* %call332, i8* %call333), !dbg !5050
  store i1 false, i1* %retval, align 1, !dbg !5051
  br label %return, !dbg !5051

if.end334:                                        ; preds = %land.lhs.true327, %if.then324
  store i8 1, i8* %new_dst.addr, align 1, !dbg !5052, !tbaa !2742
  %206 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5053, !tbaa !2648
  %verbose335 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %206, i32 0, i32 31, !dbg !5055, !ctir !357
  %207 = load i8, i8* %verbose335, align 2, !dbg !5055, !tbaa !2812
  %tobool336 = trunc i8 %207 to i1, !dbg !5055, !ctir !142
  br i1 %tobool336, label %if.then337, label %if.end341, !dbg !5056

if.then337:                                       ; preds = %if.end334
  %call338 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25.115, i64 0, i64 0)) #9, !dbg !5057
  %208 = load i8*, i8** %dst_name.addr, align 8, !dbg !5058, !tbaa !2648
  %call339 = call i8* @quotearg_style(i32 4, i8* %208), !dbg !5058
  %call340 = call i32 (i8*, ...) @printf(i8* %call338, i8* %call339), !dbg !5059
  br label %if.end341, !dbg !5059

if.end341:                                        ; preds = %if.then337, %if.end334
  br label %if.end342, !dbg !5060

if.end342:                                        ; preds = %if.end341, %land.lhs.true320, %lor.lhs.false317, %land.lhs.true307, %if.else303
  br label %if.end343

if.end343:                                        ; preds = %if.end342, %if.end302
  br label %if.end344, !dbg !5061

if.end344:                                        ; preds = %if.end343, %if.end122
  br label %if.end345, !dbg !5062

if.end345:                                        ; preds = %if.end344, %if.end64
  %209 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5063, !tbaa !2742
  %tobool346 = trunc i8 %209 to i1, !dbg !5063
  br i1 %tobool346, label %land.lhs.true347, label %if.end379, !dbg !5065

land.lhs.true347:                                 ; preds = %if.end345
  %210 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5066, !tbaa !2648
  %dest_info348 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %210, i32 0, i32 37, !dbg !5067, !ctir !357
  %211 = load %struct.hash_table*, %struct.hash_table** %dest_info348, align 8, !dbg !5067, !tbaa !3266, !ctir !175
  %tobool349 = icmp ne %struct.hash_table* %211, null, !dbg !5066
  br i1 %tobool349, label %land.lhs.true350, label %if.end379, !dbg !5068

land.lhs.true350:                                 ; preds = %land.lhs.true347
  %212 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5069, !tbaa !2648
  %move_mode351 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %212, i32 0, i32 9, !dbg !5070, !ctir !357
  %213 = load i8, i8* %move_mode351, align 8, !dbg !5070, !tbaa !3167
  %tobool352 = trunc i8 %213 to i1, !dbg !5070, !ctir !142
  br i1 %tobool352, label %if.end379, label %land.lhs.true353, !dbg !5071

land.lhs.true353:                                 ; preds = %land.lhs.true350
  %214 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5072, !tbaa !2648
  %backup_type354 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %214, i32 0, i32 0, !dbg !5073, !ctir !357
  %215 = load i32, i32* %backup_type354, align 8, !dbg !5073, !tbaa !2927, !ctir !68
  %cmp355 = icmp eq i32 %215, 0, !dbg !5074
  br i1 %cmp355, label %if.then356, label %if.end379, !dbg !5075

if.then356:                                       ; preds = %land.lhs.true353
  call void @llvm.dbg.declare(metadata i8* %lstat_ok, metadata !5076, metadata !DIExpression()), !dbg !5078
  store i8 1, i8* %lstat_ok, align 1, !dbg !5078, !tbaa !2742
  call void @llvm.dbg.declare(metadata %struct.stat* %tmp_buf, metadata !5079, metadata !DIExpression()), !dbg !5080
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_lstat_sb, metadata !5081, metadata !DIExpression()), !dbg !5082
  %216 = load i8, i8* %have_dst_lstat, align 1, !dbg !5083, !tbaa !2742
  %tobool357 = trunc i8 %216 to i1, !dbg !5083
  br i1 %tobool357, label %if.then358, label %if.else359, !dbg !5085

if.then358:                                       ; preds = %if.then356
  store %struct.stat* %dst_sb, %struct.stat** %dst_lstat_sb, align 8, !dbg !5086, !tbaa !2648
  br label %if.end365, !dbg !5087

if.else359:                                       ; preds = %if.then356
  %217 = load i8*, i8** %dst_name.addr, align 8, !dbg !5088, !tbaa !2648
  %call360 = call i32 @lstat(i8* %217, %struct.stat* %tmp_buf) #9, !dbg !5091
  %cmp361 = icmp eq i32 %call360, 0, !dbg !5092
  br i1 %cmp361, label %if.then362, label %if.else363, !dbg !5093

if.then362:                                       ; preds = %if.else359
  store %struct.stat* %tmp_buf, %struct.stat** %dst_lstat_sb, align 8, !dbg !5094, !tbaa !2648
  br label %if.end364, !dbg !5095

if.else363:                                       ; preds = %if.else359
  store i8 0, i8* %lstat_ok, align 1, !dbg !5096, !tbaa !2742
  br label %if.end364

if.end364:                                        ; preds = %if.else363, %if.then362
  br label %if.end365

if.end365:                                        ; preds = %if.end364, %if.then358
  %218 = load i8, i8* %lstat_ok, align 1, !dbg !5097, !tbaa !2742
  %tobool366 = trunc i8 %218 to i1, !dbg !5097
  br i1 %tobool366, label %land.lhs.true367, label %if.end378, !dbg !5099

land.lhs.true367:                                 ; preds = %if.end365
  %219 = load %struct.stat*, %struct.stat** %dst_lstat_sb, align 8, !dbg !5100, !tbaa !2648
  %st_mode368 = getelementptr inbounds %struct.stat, %struct.stat* %219, i32 0, i32 3, !dbg !5100, !ctir !415
  %220 = load i32, i32* %st_mode368, align 8, !dbg !5100, !tbaa !2914, !ctir !140
  %and369 = and i32 %220, 61440, !dbg !5100
  %cmp370 = icmp eq i32 %and369, 40960, !dbg !5100
  br i1 %cmp370, label %land.lhs.true371, label %if.end378, !dbg !5101

land.lhs.true371:                                 ; preds = %land.lhs.true367
  %221 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5102, !tbaa !2648
  %dest_info372 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %221, i32 0, i32 37, !dbg !5103, !ctir !357
  %222 = load %struct.hash_table*, %struct.hash_table** %dest_info372, align 8, !dbg !5103, !tbaa !3266, !ctir !175
  %223 = load i8*, i8** %dst_name.addr, align 8, !dbg !5104, !tbaa !2648
  %224 = load %struct.stat*, %struct.stat** %dst_lstat_sb, align 8, !dbg !5105, !tbaa !2648
  %call373 = call zeroext i1 @seen_file(%struct.hash_table* %222, i8* %223, %struct.stat* %224), !dbg !5106
  br i1 %call373, label %if.then374, label %if.end378, !dbg !5107

if.then374:                                       ; preds = %land.lhs.true371
  %call375 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.26.116, i64 0, i64 0)) #9, !dbg !5108
  %225 = load i8*, i8** %src_name.addr, align 8, !dbg !5110, !tbaa !2648
  %call376 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %225), !dbg !5110
  %226 = load i8*, i8** %dst_name.addr, align 8, !dbg !5111, !tbaa !2648
  %call377 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %226), !dbg !5111
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call375, i8* %call376, i8* %call377), !dbg !5112
  store i1 false, i1* %retval, align 1, !dbg !5113
  br label %return, !dbg !5113

if.end378:                                        ; preds = %land.lhs.true371, %land.lhs.true367, %if.end365
  br label %if.end379, !dbg !5114

if.end379:                                        ; preds = %if.end378, %land.lhs.true353, %land.lhs.true350, %land.lhs.true347, %if.end345
  %227 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5115, !tbaa !2648
  %verbose380 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %227, i32 0, i32 31, !dbg !5117, !ctir !357
  %228 = load i8, i8* %verbose380, align 2, !dbg !5117, !tbaa !2812
  %tobool381 = trunc i8 %228 to i1, !dbg !5117, !ctir !142
  br i1 %tobool381, label %land.lhs.true382, label %if.end389, !dbg !5118

land.lhs.true382:                                 ; preds = %if.end379
  %229 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5119, !tbaa !2648
  %move_mode383 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %229, i32 0, i32 9, !dbg !5120, !ctir !357
  %230 = load i8, i8* %move_mode383, align 8, !dbg !5120, !tbaa !3167
  %tobool384 = trunc i8 %230 to i1, !dbg !5120, !ctir !142
  br i1 %tobool384, label %if.end389, label %land.lhs.true385, !dbg !5121

land.lhs.true385:                                 ; preds = %land.lhs.true382
  %231 = load i32, i32* %src_mode, align 4, !dbg !5122, !tbaa !2635
  %and386 = and i32 %231, 61440, !dbg !5122
  %cmp387 = icmp eq i32 %and386, 16384, !dbg !5122
  br i1 %cmp387, label %if.end389, label %if.then388, !dbg !5123

if.then388:                                       ; preds = %land.lhs.true385
  %232 = load i8*, i8** %src_name.addr, align 8, !dbg !5124, !tbaa !2648
  %233 = load i8*, i8** %dst_name.addr, align 8, !dbg !5125, !tbaa !2648
  %234 = load i8*, i8** %dst_backup, align 8, !dbg !5126, !tbaa !2648
  call void @emit_verbose(i8* %232, i8* %233, i8* %234), !dbg !5127
  br label %if.end389, !dbg !5127

if.end389:                                        ; preds = %if.then388, %land.lhs.true385, %land.lhs.true382, %if.end379
  %235 = load i32, i32* %rename_errno, align 4, !dbg !5128, !tbaa !2635
  %cmp390 = icmp eq i32 %235, 0, !dbg !5130
  br i1 %cmp390, label %if.then391, label %if.else392, !dbg !5131

if.then391:                                       ; preds = %if.end389
  store i8* null, i8** %earlier_file, align 8, !dbg !5132, !tbaa !2648
  br label %if.end443, !dbg !5133

if.else392:                                       ; preds = %if.end389
  %236 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5134, !tbaa !2648
  %recursive393 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %236, i32 0, i32 27, !dbg !5136, !ctir !357
  %237 = load i8, i8* %recursive393, align 2, !dbg !5136, !tbaa !3214
  %tobool394 = trunc i8 %237 to i1, !dbg !5136, !ctir !142
  br i1 %tobool394, label %land.lhs.true395, label %if.else409, !dbg !5137

land.lhs.true395:                                 ; preds = %if.else392
  %238 = load i32, i32* %src_mode, align 4, !dbg !5138, !tbaa !2635
  %and396 = and i32 %238, 61440, !dbg !5138
  %cmp397 = icmp eq i32 %and396, 16384, !dbg !5138
  br i1 %cmp397, label %if.then398, label %if.else409, !dbg !5139

if.then398:                                       ; preds = %land.lhs.true395
  %239 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5140, !tbaa !2742
  %tobool399 = trunc i8 %239 to i1, !dbg !5140
  br i1 %tobool399, label %if.then400, label %if.else404, !dbg !5143

if.then400:                                       ; preds = %if.then398
  %240 = load i8*, i8** %dst_name.addr, align 8, !dbg !5144, !tbaa !2648
  %st_ino401 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5145, !ctir !415
  %241 = load i64, i64* %st_ino401, align 8, !dbg !5145, !tbaa !4791, !ctir !276
  %st_dev402 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5146, !ctir !415
  %242 = load i64, i64* %st_dev402, align 8, !dbg !5146, !tbaa !4770, !ctir !274
  %call403 = call i8* @remember_copied(i8* %240, i64 %241, i64 %242), !dbg !5147
  store i8* %call403, i8** %earlier_file, align 8, !dbg !5148, !tbaa !2648
  br label %if.end408, !dbg !5149

if.else404:                                       ; preds = %if.then398
  %st_ino405 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5150, !ctir !415
  %243 = load i64, i64* %st_ino405, align 8, !dbg !5150, !tbaa !4791, !ctir !276
  %st_dev406 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5151, !ctir !415
  %244 = load i64, i64* %st_dev406, align 8, !dbg !5151, !tbaa !4770, !ctir !274
  %call407 = call i8* @src_to_dest_lookup(i64 %243, i64 %244), !dbg !5152
  store i8* %call407, i8** %earlier_file, align 8, !dbg !5153, !tbaa !2648
  br label %if.end408

if.end408:                                        ; preds = %if.else404, %if.then400
  br label %if.end442, !dbg !5154

if.else409:                                       ; preds = %land.lhs.true395, %if.else392
  %245 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5155, !tbaa !2648
  %move_mode410 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %245, i32 0, i32 9, !dbg !5157, !ctir !357
  %246 = load i8, i8* %move_mode410, align 8, !dbg !5157, !tbaa !3167
  %tobool411 = trunc i8 %246 to i1, !dbg !5157, !ctir !142
  br i1 %tobool411, label %land.lhs.true412, label %if.else419, !dbg !5158

land.lhs.true412:                                 ; preds = %if.else409
  %st_nlink413 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 2, !dbg !5159, !ctir !415
  %247 = load i64, i64* %st_nlink413, align 8, !dbg !5159, !tbaa !5028, !ctir !278
  %cmp414 = icmp eq i64 %247, 1, !dbg !5160
  br i1 %cmp414, label %if.then415, label %if.else419, !dbg !5161

if.then415:                                       ; preds = %land.lhs.true412
  %st_ino416 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5162, !ctir !415
  %248 = load i64, i64* %st_ino416, align 8, !dbg !5162, !tbaa !4791, !ctir !276
  %st_dev417 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5164, !ctir !415
  %249 = load i64, i64* %st_dev417, align 8, !dbg !5164, !tbaa !4770, !ctir !274
  %call418 = call i8* @src_to_dest_lookup(i64 %248, i64 %249), !dbg !5165
  store i8* %call418, i8** %earlier_file, align 8, !dbg !5166, !tbaa !2648
  br label %if.end441, !dbg !5167

if.else419:                                       ; preds = %land.lhs.true412, %if.else409
  %250 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5168, !tbaa !2648
  %preserve_links420 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %250, i32 0, i32 19, !dbg !5170, !ctir !357
  %251 = load i8, i8* %preserve_links420, align 2, !dbg !5170, !tbaa !3183
  %tobool421 = trunc i8 %251 to i1, !dbg !5170, !ctir !142
  br i1 %tobool421, label %land.lhs.true422, label %if.end440, !dbg !5171

land.lhs.true422:                                 ; preds = %if.else419
  %252 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5172, !tbaa !2648
  %hard_link423 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %252, i32 0, i32 8, !dbg !5173, !ctir !357
  %253 = load i8, i8* %hard_link423, align 1, !dbg !5173, !tbaa !3159
  %tobool424 = trunc i8 %253 to i1, !dbg !5173, !ctir !142
  br i1 %tobool424, label %if.end440, label %land.lhs.true425, !dbg !5174

land.lhs.true425:                                 ; preds = %land.lhs.true422
  %st_nlink426 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 2, !dbg !5175, !ctir !415
  %254 = load i64, i64* %st_nlink426, align 8, !dbg !5175, !tbaa !5028, !ctir !278
  %cmp427 = icmp ult i64 1, %254, !dbg !5176
  br i1 %cmp427, label %if.then436, label %lor.lhs.false428, !dbg !5177

lor.lhs.false428:                                 ; preds = %land.lhs.true425
  %255 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5178, !tbaa !2742
  %tobool429 = trunc i8 %255 to i1, !dbg !5178
  br i1 %tobool429, label %land.lhs.true430, label %lor.lhs.false433, !dbg !5179

land.lhs.true430:                                 ; preds = %lor.lhs.false428
  %256 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5180, !tbaa !2648
  %dereference431 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %256, i32 0, i32 1, !dbg !5181, !ctir !357
  %257 = load i32, i32* %dereference431, align 4, !dbg !5181, !tbaa !3147, !ctir !76
  %cmp432 = icmp eq i32 %257, 3, !dbg !5182
  br i1 %cmp432, label %if.then436, label %lor.lhs.false433, !dbg !5183

lor.lhs.false433:                                 ; preds = %land.lhs.true430, %lor.lhs.false428
  %258 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5184, !tbaa !2648
  %dereference434 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %258, i32 0, i32 1, !dbg !5185, !ctir !357
  %259 = load i32, i32* %dereference434, align 4, !dbg !5185, !tbaa !3147, !ctir !76
  %cmp435 = icmp eq i32 %259, 4, !dbg !5186
  br i1 %cmp435, label %if.then436, label %if.end440, !dbg !5187

if.then436:                                       ; preds = %lor.lhs.false433, %land.lhs.true430, %land.lhs.true425
  %260 = load i8*, i8** %dst_name.addr, align 8, !dbg !5188, !tbaa !2648
  %st_ino437 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5190, !ctir !415
  %261 = load i64, i64* %st_ino437, align 8, !dbg !5190, !tbaa !4791, !ctir !276
  %st_dev438 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5191, !ctir !415
  %262 = load i64, i64* %st_dev438, align 8, !dbg !5191, !tbaa !4770, !ctir !274
  %call439 = call i8* @remember_copied(i8* %260, i64 %261, i64 %262), !dbg !5192
  store i8* %call439, i8** %earlier_file, align 8, !dbg !5193, !tbaa !2648
  br label %if.end440, !dbg !5194

if.end440:                                        ; preds = %if.then436, %lor.lhs.false433, %land.lhs.true422, %if.else419
  br label %if.end441

if.end441:                                        ; preds = %if.end440, %if.then415
  br label %if.end442

if.end442:                                        ; preds = %if.end441, %if.end408
  br label %if.end443

if.end443:                                        ; preds = %if.end442, %if.then391
  %263 = load i8*, i8** %earlier_file, align 8, !dbg !5195, !tbaa !2648
  %tobool444 = icmp ne i8* %263, null, !dbg !5195
  br i1 %tobool444, label %if.then445, label %if.end489, !dbg !5197

if.then445:                                       ; preds = %if.end443
  %264 = load i32, i32* %src_mode, align 4, !dbg !5198, !tbaa !2635
  %and446 = and i32 %264, 61440, !dbg !5198
  %cmp447 = icmp eq i32 %and446, 16384, !dbg !5198
  br i1 %cmp447, label %if.then448, label %if.else481, !dbg !5201

if.then448:                                       ; preds = %if.then445
  %265 = load i8*, i8** %src_name.addr, align 8, !dbg !5202, !tbaa !2648
  %266 = load i8*, i8** %earlier_file, align 8, !dbg !5205, !tbaa !2648
  %call449 = call zeroext i1 @same_name(i8* %265, i8* %266), !dbg !5206
  br i1 %call449, label %if.then450, label %if.else454, !dbg !5207

if.then450:                                       ; preds = %if.then448
  %call451 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.27.117, i64 0, i64 0)) #9, !dbg !5208
  %267 = load i8*, i8** @top_level_src_name, align 8, !dbg !5210, !tbaa !2648
  %call452 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %267), !dbg !5210
  %268 = load i8*, i8** @top_level_dst_name, align 8, !dbg !5211, !tbaa !2648
  %call453 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %268), !dbg !5211
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call451, i8* %call452, i8* %call453), !dbg !5212
  %269 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !5213, !tbaa !2648
  store i8 1, i8* %269, align 1, !dbg !5214, !tbaa !2742, !ctir !142
  br label %un_backup, !dbg !5215

if.else454:                                       ; preds = %if.then448
  %270 = load i8*, i8** %dst_name.addr, align 8, !dbg !5216, !tbaa !2648
  %271 = load i8*, i8** %earlier_file, align 8, !dbg !5218, !tbaa !2648
  %call455 = call zeroext i1 @same_name(i8* %270, i8* %271), !dbg !5219
  br i1 %call455, label %if.then456, label %if.else465, !dbg !5220

if.then456:                                       ; preds = %if.else454
  %call457 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.28.118, i64 0, i64 0)) #9, !dbg !5221
  %272 = load i8*, i8** @top_level_src_name, align 8, !dbg !5223, !tbaa !2648
  %call458 = call i8* @quotearg_style(i32 4, i8* %272), !dbg !5223
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call457, i8* %call458), !dbg !5224
  %273 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5225, !tbaa !2648
  %move_mode459 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %273, i32 0, i32 9, !dbg !5227, !ctir !357
  %274 = load i8, i8* %move_mode459, align 8, !dbg !5227, !tbaa !3167
  %tobool460 = trunc i8 %274 to i1, !dbg !5227, !ctir !142
  br i1 %tobool460, label %land.lhs.true461, label %if.end464, !dbg !5228

land.lhs.true461:                                 ; preds = %if.then456
  %275 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !5229, !tbaa !2648
  %tobool462 = icmp ne i8* %275, null, !dbg !5229
  br i1 %tobool462, label %if.then463, label %if.end464, !dbg !5230

if.then463:                                       ; preds = %land.lhs.true461
  %276 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !5231, !tbaa !2648
  store i8 1, i8* %276, align 1, !dbg !5232, !tbaa !2742, !ctir !142
  br label %if.end464, !dbg !5233

if.end464:                                        ; preds = %if.then463, %land.lhs.true461, %if.then456
  store i1 true, i1* %retval, align 1, !dbg !5234
  br label %return, !dbg !5234

if.else465:                                       ; preds = %if.else454
  %277 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5235, !tbaa !2648
  %dereference466 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %277, i32 0, i32 1, !dbg !5237, !ctir !357
  %278 = load i32, i32* %dereference466, align 4, !dbg !5237, !tbaa !3147, !ctir !76
  %cmp467 = icmp eq i32 %278, 4, !dbg !5238
  br i1 %cmp467, label %if.then473, label %lor.lhs.false468, !dbg !5239

lor.lhs.false468:                                 ; preds = %if.else465
  %279 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5240, !tbaa !2742
  %tobool469 = trunc i8 %279 to i1, !dbg !5240
  br i1 %tobool469, label %land.lhs.true470, label %if.else474, !dbg !5241

land.lhs.true470:                                 ; preds = %lor.lhs.false468
  %280 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5242, !tbaa !2648
  %dereference471 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %280, i32 0, i32 1, !dbg !5243, !ctir !357
  %281 = load i32, i32* %dereference471, align 4, !dbg !5243, !tbaa !3147, !ctir !76
  %cmp472 = icmp eq i32 %281, 3, !dbg !5244
  br i1 %cmp472, label %if.then473, label %if.else474, !dbg !5245

if.then473:                                       ; preds = %land.lhs.true470, %if.else465
  br label %if.end478, !dbg !5246

if.else474:                                       ; preds = %land.lhs.true470, %lor.lhs.false468
  %call475 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.29.119, i64 0, i64 0)) #9, !dbg !5248
  %282 = load i8*, i8** %dst_name.addr, align 8, !dbg !5250, !tbaa !2648
  %call476 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %282), !dbg !5250
  %283 = load i8*, i8** %earlier_file, align 8, !dbg !5251, !tbaa !2648
  %call477 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %283), !dbg !5251
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call475, i8* %call476, i8* %call477), !dbg !5252
  br label %un_backup, !dbg !5253

if.end478:                                        ; preds = %if.then473
  br label %if.end479

if.end479:                                        ; preds = %if.end478
  br label %if.end480

if.end480:                                        ; preds = %if.end479
  br label %if.end488, !dbg !5254

if.else481:                                       ; preds = %if.then445
  %284 = load i8*, i8** %earlier_file, align 8, !dbg !5255, !tbaa !2648
  %285 = load i8*, i8** %dst_name.addr, align 8, !dbg !5258, !tbaa !2648
  %286 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5259, !tbaa !2648
  %verbose482 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %286, i32 0, i32 31, !dbg !5260, !ctir !357
  %287 = load i8, i8* %verbose482, align 2, !dbg !5260, !tbaa !2812
  %tobool483 = trunc i8 %287 to i1, !dbg !5260, !ctir !142
  %288 = load i8, i8* %dereference65, align 1, !dbg !5261, !tbaa !2742
  %tobool484 = trunc i8 %288 to i1, !dbg !5261
  %call485 = call zeroext i1 @create_hard_link(i8* %284, i8* %285, i1 zeroext true, i1 zeroext %tobool483, i1 zeroext %tobool484), !dbg !5262
  br i1 %call485, label %if.end487, label %if.then486, !dbg !5263

if.then486:                                       ; preds = %if.else481
  br label %un_backup, !dbg !5264

if.end487:                                        ; preds = %if.else481
  store i1 true, i1* %retval, align 1, !dbg !5265
  br label %return, !dbg !5265

if.end488:                                        ; preds = %if.end480
  br label %if.end489, !dbg !5266

if.end489:                                        ; preds = %if.end488, %if.end443
  %289 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5267, !tbaa !2648
  %move_mode490 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %289, i32 0, i32 9, !dbg !5269, !ctir !357
  %290 = load i8, i8* %move_mode490, align 8, !dbg !5269, !tbaa !3167
  %tobool491 = trunc i8 %290 to i1, !dbg !5269, !ctir !142
  br i1 %tobool491, label %if.then492, label %if.end569, !dbg !5270

if.then492:                                       ; preds = %if.end489
  %291 = load i32, i32* %rename_errno, align 4, !dbg !5271, !tbaa !2635
  %cmp493 = icmp eq i32 %291, 17, !dbg !5274
  br i1 %cmp493, label %if.then494, label %if.end502, !dbg !5275

if.then494:                                       ; preds = %if.then492
  %292 = load i8*, i8** %src_name.addr, align 8, !dbg !5276, !tbaa !2648
  %293 = load i8*, i8** %dst_name.addr, align 8, !dbg !5277, !tbaa !2648
  %call495 = call i32 @rename(i8* %292, i8* %293) #9, !dbg !5278
  %cmp496 = icmp eq i32 %call495, 0, !dbg !5279
  br i1 %cmp496, label %cond.true497, label %cond.false498, !dbg !5278

cond.true497:                                     ; preds = %if.then494
  br label %cond.end500, !dbg !5278

cond.false498:                                    ; preds = %if.then494
  %call499 = call i32* @__errno_location() #16, !dbg !5280
  %294 = load i32, i32* %call499, align 4, !dbg !5280, !tbaa !2635, !ctir !7
  br label %cond.end500, !dbg !5278

cond.end500:                                      ; preds = %cond.false498, %cond.true497
  %cond501 = phi i32 [ 0, %cond.true497 ], [ %294, %cond.false498 ], !dbg !5278
  store i32 %cond501, i32* %rename_errno, align 4, !dbg !5281, !tbaa !2635
  br label %if.end502, !dbg !5282

if.end502:                                        ; preds = %cond.end500, %if.then492
  %295 = load i32, i32* %rename_errno, align 4, !dbg !5283, !tbaa !2635
  %cmp503 = icmp eq i32 %295, 0, !dbg !5285
  br i1 %cmp503, label %if.then504, label %if.end525, !dbg !5286

if.then504:                                       ; preds = %if.end502
  %296 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5287, !tbaa !2648
  %verbose505 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %296, i32 0, i32 31, !dbg !5290, !ctir !357
  %297 = load i8, i8* %verbose505, align 2, !dbg !5290, !tbaa !2812
  %tobool506 = trunc i8 %297 to i1, !dbg !5290, !ctir !142
  br i1 %tobool506, label %if.then507, label %if.end510, !dbg !5291

if.then507:                                       ; preds = %if.then504
  %call508 = call i8* @gettext(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30.120, i64 0, i64 0)) #9, !dbg !5292
  %call509 = call i32 (i8*, ...) @printf(i8* %call508), !dbg !5294
  %298 = load i8*, i8** %src_name.addr, align 8, !dbg !5295, !tbaa !2648
  %299 = load i8*, i8** %dst_name.addr, align 8, !dbg !5296, !tbaa !2648
  %300 = load i8*, i8** %dst_backup, align 8, !dbg !5297, !tbaa !2648
  call void @emit_verbose(i8* %298, i8* %299, i8* %300), !dbg !5298
  br label %if.end510, !dbg !5299

if.end510:                                        ; preds = %if.then507, %if.then504
  %301 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5300, !tbaa !2648
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %301, i32 0, i32 18, !dbg !5302, !ctir !357
  %302 = load i8, i8* %set_security_context, align 1, !dbg !5302, !tbaa !2866
  %tobool511 = trunc i8 %302 to i1, !dbg !5302, !ctir !142
  br i1 %tobool511, label %if.then512, label %if.end514, !dbg !5303

if.then512:                                       ; preds = %if.end510
  %303 = load i8*, i8** %dst_name.addr, align 8, !dbg !5304, !tbaa !2648
  %304 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5306, !tbaa !2648
  %call513 = call zeroext i1 @set_file_security_ctx(i8* %303, i1 zeroext false, i1 zeroext true, %struct.cp_options* %304), !dbg !5307
  br label %if.end514, !dbg !5308

if.end514:                                        ; preds = %if.then512, %if.end510
  %305 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !5309, !tbaa !2648
  %tobool515 = icmp ne i8* %305, null, !dbg !5309
  br i1 %tobool515, label %if.then516, label %if.end517, !dbg !5311

if.then516:                                       ; preds = %if.end514
  %306 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !5312, !tbaa !2648
  store i8 1, i8* %306, align 1, !dbg !5313, !tbaa !2742, !ctir !142
  br label %if.end517, !dbg !5314

if.end517:                                        ; preds = %if.then516, %if.end514
  %307 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5315, !tbaa !2742
  %tobool518 = trunc i8 %307 to i1, !dbg !5315
  br i1 %tobool518, label %land.lhs.true519, label %if.end524, !dbg !5317

land.lhs.true519:                                 ; preds = %if.end517
  %308 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5318, !tbaa !2648
  %last_file520 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %308, i32 0, i32 34, !dbg !5319, !ctir !357
  %309 = load i8, i8* %last_file520, align 1, !dbg !5319, !tbaa !4575
  %tobool521 = trunc i8 %309 to i1, !dbg !5319, !ctir !142
  br i1 %tobool521, label %if.end524, label %if.then522, !dbg !5320

if.then522:                                       ; preds = %land.lhs.true519
  %310 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5321, !tbaa !2648
  %dest_info523 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %310, i32 0, i32 37, !dbg !5323, !ctir !357
  %311 = load %struct.hash_table*, %struct.hash_table** %dest_info523, align 8, !dbg !5323, !tbaa !3266, !ctir !175
  %312 = load i8*, i8** %dst_name.addr, align 8, !dbg !5324, !tbaa !2648
  call void @record_file(%struct.hash_table* %311, i8* %312, %struct.stat* %src_sb), !dbg !5325
  br label %if.end524, !dbg !5326

if.end524:                                        ; preds = %if.then522, %land.lhs.true519, %if.end517
  store i1 true, i1* %retval, align 1, !dbg !5327
  br label %return, !dbg !5327

if.end525:                                        ; preds = %if.end502
  %313 = load i32, i32* %rename_errno, align 4, !dbg !5328, !tbaa !2635
  %cmp526 = icmp eq i32 %313, 22, !dbg !5330
  br i1 %cmp526, label %if.then527, label %if.end531, !dbg !5331

if.then527:                                       ; preds = %if.end525
  %call528 = call i8* @gettext(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.31.121, i64 0, i64 0)) #9, !dbg !5332
  %314 = load i8*, i8** @top_level_src_name, align 8, !dbg !5334, !tbaa !2648
  %call529 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %314), !dbg !5334
  %315 = load i8*, i8** @top_level_dst_name, align 8, !dbg !5335, !tbaa !2648
  %call530 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %315), !dbg !5335
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call528, i8* %call529, i8* %call530), !dbg !5336
  %316 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !5337, !tbaa !2648
  store i8 1, i8* %316, align 1, !dbg !5338, !tbaa !2742, !ctir !142
  store i1 true, i1* %retval, align 1, !dbg !5339
  br label %return, !dbg !5339

if.end531:                                        ; preds = %if.end525
  %317 = load i32, i32* %rename_errno, align 4, !dbg !5340, !tbaa !2635
  %cmp532 = icmp ne i32 %317, 18, !dbg !5342
  br i1 %cmp532, label %if.then533, label %if.end539, !dbg !5343

if.then533:                                       ; preds = %if.end531
  %318 = load i32, i32* %rename_errno, align 4, !dbg !5344, !tbaa !2635
  %call534 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.32.122, i64 0, i64 0)) #9, !dbg !5346
  %319 = load i8*, i8** %src_name.addr, align 8, !dbg !5347, !tbaa !2648
  %call535 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %319), !dbg !5347
  %320 = load i8*, i8** %dst_name.addr, align 8, !dbg !5348, !tbaa !2648
  %call536 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %320), !dbg !5348
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %318, i8* %call534, i8* %call535, i8* %call536), !dbg !5349
  %st_ino537 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5350, !ctir !415
  %321 = load i64, i64* %st_ino537, align 8, !dbg !5350, !tbaa !4791, !ctir !276
  %st_dev538 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5351, !ctir !415
  %322 = load i64, i64* %st_dev538, align 8, !dbg !5351, !tbaa !4770, !ctir !274
  call void @forget_created(i64 %321, i64 %322), !dbg !5352
  store i1 false, i1* %retval, align 1, !dbg !5353
  br label %return, !dbg !5353

if.end539:                                        ; preds = %if.end531
  %323 = load i32, i32* %src_mode, align 4, !dbg !5354, !tbaa !2635
  %and540 = and i32 %323, 61440, !dbg !5354
  %cmp541 = icmp eq i32 %and540, 16384, !dbg !5354
  br i1 %cmp541, label %cond.true542, label %cond.false544, !dbg !5354

cond.true542:                                     ; preds = %if.end539
  %324 = load i8*, i8** %dst_name.addr, align 8, !dbg !5356, !tbaa !2648
  %call543 = call i32 @rmdir(i8* %324) #9, !dbg !5357
  br label %cond.end546, !dbg !5354

cond.false544:                                    ; preds = %if.end539
  %325 = load i8*, i8** %dst_name.addr, align 8, !dbg !5358, !tbaa !2648
  %call545 = call i32 @unlink(i8* %325) #9, !dbg !5359
  br label %cond.end546, !dbg !5354

cond.end546:                                      ; preds = %cond.false544, %cond.true542
  %cond547 = phi i32 [ %call543, %cond.true542 ], [ %call545, %cond.false544 ], !dbg !5354
  %cmp548 = icmp ne i32 %cond547, 0, !dbg !5360
  br i1 %cmp548, label %land.lhs.true549, label %if.end559, !dbg !5361

land.lhs.true549:                                 ; preds = %cond.end546
  %call550 = call i32* @__errno_location() #16, !dbg !5362
  %326 = load i32, i32* %call550, align 4, !dbg !5362, !tbaa !2635, !ctir !7
  %cmp551 = icmp ne i32 %326, 2, !dbg !5363
  br i1 %cmp551, label %if.then552, label %if.end559, !dbg !5364

if.then552:                                       ; preds = %land.lhs.true549
  %call553 = call i32* @__errno_location() #16, !dbg !5365
  %327 = load i32, i32* %call553, align 4, !dbg !5365, !tbaa !2635, !ctir !7
  %call554 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.33.123, i64 0, i64 0)) #9, !dbg !5367
  %328 = load i8*, i8** %src_name.addr, align 8, !dbg !5368, !tbaa !2648
  %call555 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %328), !dbg !5368
  %329 = load i8*, i8** %dst_name.addr, align 8, !dbg !5369, !tbaa !2648
  %call556 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %329), !dbg !5369
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %327, i8* %call554, i8* %call555, i8* %call556), !dbg !5370
  %st_ino557 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5371, !ctir !415
  %330 = load i64, i64* %st_ino557, align 8, !dbg !5371, !tbaa !4791, !ctir !276
  %st_dev558 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5372, !ctir !415
  %331 = load i64, i64* %st_dev558, align 8, !dbg !5372, !tbaa !4770, !ctir !274
  call void @forget_created(i64 %330, i64 %331), !dbg !5373
  store i1 false, i1* %retval, align 1, !dbg !5374
  br label %return, !dbg !5374

if.end559:                                        ; preds = %land.lhs.true549, %cond.end546
  %332 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5375, !tbaa !2648
  %verbose560 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %332, i32 0, i32 31, !dbg !5377, !ctir !357
  %333 = load i8, i8* %verbose560, align 2, !dbg !5377, !tbaa !2812
  %tobool561 = trunc i8 %333 to i1, !dbg !5377, !ctir !142
  br i1 %tobool561, label %land.lhs.true562, label %if.end568, !dbg !5378

land.lhs.true562:                                 ; preds = %if.end559
  %334 = load i32, i32* %src_mode, align 4, !dbg !5379, !tbaa !2635
  %and563 = and i32 %334, 61440, !dbg !5379
  %cmp564 = icmp eq i32 %and563, 16384, !dbg !5379
  br i1 %cmp564, label %if.end568, label %if.then565, !dbg !5380

if.then565:                                       ; preds = %land.lhs.true562
  %call566 = call i8* @gettext(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.34.124, i64 0, i64 0)) #9, !dbg !5381
  %call567 = call i32 (i8*, ...) @printf(i8* %call566), !dbg !5383
  %335 = load i8*, i8** %src_name.addr, align 8, !dbg !5384, !tbaa !2648
  %336 = load i8*, i8** %dst_name.addr, align 8, !dbg !5385, !tbaa !2648
  %337 = load i8*, i8** %dst_backup, align 8, !dbg !5386, !tbaa !2648
  call void @emit_verbose(i8* %335, i8* %336, i8* %337), !dbg !5387
  br label %if.end568, !dbg !5388

if.end568:                                        ; preds = %if.then565, %land.lhs.true562, %if.end559
  store i8 1, i8* %new_dst.addr, align 1, !dbg !5389, !tbaa !2742
  br label %if.end569, !dbg !5390

if.end569:                                        ; preds = %if.end568, %if.end489
  %338 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5391, !tbaa !2648
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %338, i32 0, i32 28, !dbg !5392, !ctir !357
  %339 = load i8, i8* %set_mode, align 1, !dbg !5392, !tbaa !3229
  %tobool570 = trunc i8 %339 to i1, !dbg !5392, !ctir !142
  br i1 %tobool570, label %cond.true571, label %cond.false572, !dbg !5391

cond.true571:                                     ; preds = %if.end569
  %340 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5393, !tbaa !2648
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %340, i32 0, i32 4, !dbg !5394, !ctir !357
  %341 = load i32, i32* %mode, align 8, !dbg !5394, !tbaa !3233, !ctir !139
  br label %cond.end573, !dbg !5391

cond.false572:                                    ; preds = %if.end569
  %342 = load i32, i32* %src_mode, align 4, !dbg !5395, !tbaa !2635
  br label %cond.end573, !dbg !5391

cond.end573:                                      ; preds = %cond.false572, %cond.true571
  %cond574 = phi i32 [ %341, %cond.true571 ], [ %342, %cond.false572 ], !dbg !5391
  %and575 = and i32 %cond574, 4095, !dbg !5396
  store i32 %and575, i32* %dst_mode_bits, align 4, !dbg !5397, !tbaa !2635
  %343 = load i32, i32* %dst_mode_bits, align 4, !dbg !5398, !tbaa !2635
  %344 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5399, !tbaa !2648
  %preserve_ownership = getelementptr inbounds %struct.cp_options, %struct.cp_options* %344, i32 0, i32 14, !dbg !5400, !ctir !357
  %345 = load i8, i8* %preserve_ownership, align 1, !dbg !5400, !tbaa !3179
  %tobool576 = trunc i8 %345 to i1, !dbg !5400, !ctir !142
  br i1 %tobool576, label %cond.true577, label %cond.false578, !dbg !5399

cond.true577:                                     ; preds = %cond.end573
  br label %cond.end582, !dbg !5399

cond.false578:                                    ; preds = %cond.end573
  %346 = load i32, i32* %src_mode, align 4, !dbg !5401, !tbaa !2635
  %and579 = and i32 %346, 61440, !dbg !5401
  %cmp580 = icmp eq i32 %and579, 16384, !dbg !5401
  %347 = zext i1 %cmp580 to i64, !dbg !5401
  %cond581 = select i1 %cmp580, i32 18, i32 0, !dbg !5401
  br label %cond.end582, !dbg !5399

cond.end582:                                      ; preds = %cond.false578, %cond.true577
  %cond583 = phi i32 [ 63, %cond.true577 ], [ %cond581, %cond.false578 ], !dbg !5399
  %and584 = and i32 %343, %cond583, !dbg !5402
  store i32 %and584, i32* %omitted_permissions, align 4, !dbg !5403, !tbaa !2635
  store i8 1, i8* %delayed_ok, align 1, !dbg !5404, !tbaa !2742
  %348 = load i8*, i8** %src_name.addr, align 8, !dbg !5405, !tbaa !2648
  %349 = load i8*, i8** %dst_name.addr, align 8, !dbg !5407, !tbaa !2648
  %350 = load i32, i32* %src_mode, align 4, !dbg !5408, !tbaa !2635
  %351 = load i8, i8* %new_dst.addr, align 1, !dbg !5409, !tbaa !2742
  %tobool585 = trunc i8 %351 to i1, !dbg !5409
  %352 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5410, !tbaa !2648
  %call586 = call zeroext i1 @set_process_security_ctx(i8* %348, i8* %349, i32 %350, i1 zeroext %tobool585, %struct.cp_options* %352), !dbg !5411
  br i1 %call586, label %if.end588, label %if.then587, !dbg !5412

if.then587:                                       ; preds = %cond.end582
  store i1 false, i1* %retval, align 1, !dbg !5413
  br label %return, !dbg !5413

if.end588:                                        ; preds = %cond.end582
  %353 = load i32, i32* %src_mode, align 4, !dbg !5414, !tbaa !2635
  %and589 = and i32 %353, 61440, !dbg !5414
  %cmp590 = icmp eq i32 %and589, 16384, !dbg !5414
  br i1 %cmp590, label %if.then591, label %if.else682, !dbg !5416

if.then591:                                       ; preds = %if.end588
  call void @llvm.dbg.declare(metadata %struct.dir_list** %dir, metadata !5417, metadata !DIExpression()), !dbg !5419
  %354 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !5420, !tbaa !2648
  %call592 = call zeroext i1 @is_ancestor(%struct.stat* %src_sb, %struct.dir_list* %354) #14, !dbg !5422
  br i1 %call592, label %if.then593, label %if.end596, !dbg !5423

if.then593:                                       ; preds = %if.then591
  %call594 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.35.125, i64 0, i64 0)) #9, !dbg !5424
  %355 = load i8*, i8** %src_name.addr, align 8, !dbg !5426, !tbaa !2648
  %call595 = call i8* @quotearg_style(i32 4, i8* %355), !dbg !5426
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call594, i8* %call595), !dbg !5427
  br label %un_backup, !dbg !5428

if.end596:                                        ; preds = %if.then591
  %356 = alloca i8, i64 24, align 16, !dbg !5429
  %357 = bitcast i8* %356 to %struct.dir_list*, !dbg !5429
  store %struct.dir_list* %357, %struct.dir_list** %dir, align 8, !dbg !5430, !tbaa !2648
  %358 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !5431, !tbaa !2648
  %359 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !5432, !tbaa !2648
  %parent597 = getelementptr inbounds %struct.dir_list, %struct.dir_list* %359, i32 0, i32 0, !dbg !5433, !ctir !437
  store %struct.dir_list* %358, %struct.dir_list** %parent597, align 8, !dbg !5434, !tbaa !5435, !ctir !436
  %st_ino598 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5437, !ctir !415
  %360 = load i64, i64* %st_ino598, align 8, !dbg !5437, !tbaa !4791, !ctir !276
  %361 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !5438, !tbaa !2648
  %ino = getelementptr inbounds %struct.dir_list, %struct.dir_list* %361, i32 0, i32 1, !dbg !5439, !ctir !437
  store i64 %360, i64* %ino, align 8, !dbg !5440, !tbaa !5441, !ctir !441
  %st_dev599 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5442, !ctir !415
  %362 = load i64, i64* %st_dev599, align 8, !dbg !5442, !tbaa !4770, !ctir !274
  %363 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !5443, !tbaa !2648
  %dev = getelementptr inbounds %struct.dir_list, %struct.dir_list* %363, i32 0, i32 2, !dbg !5444, !ctir !437
  store i64 %362, i64* %dev, align 8, !dbg !5445, !tbaa !5446, !ctir !443
  %364 = load i8, i8* %new_dst.addr, align 1, !dbg !5447, !tbaa !2742
  %tobool600 = trunc i8 %364 to i1, !dbg !5447
  br i1 %tobool600, label %if.then605, label %lor.lhs.false601, !dbg !5449

lor.lhs.false601:                                 ; preds = %if.end596
  %st_mode602 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5450, !ctir !415
  %365 = load i32, i32* %st_mode602, align 8, !dbg !5450, !tbaa !2914, !ctir !140
  %and603 = and i32 %365, 61440, !dbg !5450
  %cmp604 = icmp eq i32 %and603, 16384, !dbg !5450
  br i1 %cmp604, label %if.else653, label %if.then605, !dbg !5451

if.then605:                                       ; preds = %lor.lhs.false601, %if.end596
  %366 = load i8*, i8** %dst_name.addr, align 8, !dbg !5452, !tbaa !2648
  %367 = load i32, i32* %dst_mode_bits, align 4, !dbg !5455, !tbaa !2635
  %368 = load i32, i32* %omitted_permissions, align 4, !dbg !5456, !tbaa !2635
  %neg = xor i32 %368, -1, !dbg !5457
  %and606 = and i32 %367, %neg, !dbg !5458
  %call607 = call i32 @mkdir(i8* %366, i32 %and606) #9, !dbg !5459
  %cmp608 = icmp ne i32 %call607, 0, !dbg !5460
  br i1 %cmp608, label %if.then609, label %if.end613, !dbg !5461

if.then609:                                       ; preds = %if.then605
  %call610 = call i32* @__errno_location() #16, !dbg !5462
  %369 = load i32, i32* %call610, align 4, !dbg !5462, !tbaa !2635, !ctir !7
  %call611 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36.126, i64 0, i64 0)) #9, !dbg !5464
  %370 = load i8*, i8** %dst_name.addr, align 8, !dbg !5465, !tbaa !2648
  %call612 = call i8* @quotearg_style(i32 4, i8* %370), !dbg !5465
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %369, i8* %call611, i8* %call612), !dbg !5466
  br label %un_backup, !dbg !5467

if.end613:                                        ; preds = %if.then605
  %371 = load i8*, i8** %dst_name.addr, align 8, !dbg !5468, !tbaa !2648
  %call614 = call i32 @lstat(i8* %371, %struct.stat* %dst_sb) #9, !dbg !5470
  %cmp615 = icmp ne i32 %call614, 0, !dbg !5471
  br i1 %cmp615, label %if.then616, label %if.else620, !dbg !5472

if.then616:                                       ; preds = %if.end613
  %call617 = call i32* @__errno_location() #16, !dbg !5473
  %372 = load i32, i32* %call617, align 4, !dbg !5473, !tbaa !2635, !ctir !7
  %call618 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.102, i64 0, i64 0)) #9, !dbg !5475
  %373 = load i8*, i8** %dst_name.addr, align 8, !dbg !5476, !tbaa !2648
  %call619 = call i8* @quotearg_style(i32 4, i8* %373), !dbg !5476
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %372, i8* %call618, i8* %call619), !dbg !5477
  br label %un_backup, !dbg !5478

if.else620:                                       ; preds = %if.end613
  %st_mode621 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5479, !ctir !415
  %374 = load i32, i32* %st_mode621, align 8, !dbg !5479, !tbaa !2914, !ctir !140
  %and622 = and i32 %374, 448, !dbg !5481
  %cmp623 = icmp ne i32 %and622, 448, !dbg !5482
  br i1 %cmp623, label %if.then624, label %if.end633, !dbg !5483

if.then624:                                       ; preds = %if.else620
  %st_mode625 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5484, !ctir !415
  %375 = load i32, i32* %st_mode625, align 8, !dbg !5484, !tbaa !2914, !ctir !140
  store i32 %375, i32* %dst_mode, align 4, !dbg !5486, !tbaa !2635
  store i8 1, i8* %restore_dst_mode, align 1, !dbg !5487, !tbaa !2742
  %376 = load i8*, i8** %dst_name.addr, align 8, !dbg !5488, !tbaa !2648
  %377 = load i32, i32* %dst_mode, align 4, !dbg !5490, !tbaa !2635
  %or = or i32 %377, 448, !dbg !5491
  %call626 = call i32 @chmod(i8* %376, i32 %or) #9, !dbg !5492
  %cmp627 = icmp ne i32 %call626, 0, !dbg !5493
  br i1 %cmp627, label %if.then628, label %if.end632, !dbg !5494

if.then628:                                       ; preds = %if.then624
  %call629 = call i32* @__errno_location() #16, !dbg !5495
  %378 = load i32, i32* %call629, align 4, !dbg !5495, !tbaa !2635, !ctir !7
  %call630 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.37.127, i64 0, i64 0)) #9, !dbg !5497
  %379 = load i8*, i8** %dst_name.addr, align 8, !dbg !5498, !tbaa !2648
  %call631 = call i8* @quotearg_style(i32 4, i8* %379), !dbg !5498
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %378, i8* %call630, i8* %call631), !dbg !5499
  br label %un_backup, !dbg !5500

if.end632:                                        ; preds = %if.then624
  br label %if.end633, !dbg !5501

if.end633:                                        ; preds = %if.end632, %if.else620
  br label %if.end634

if.end634:                                        ; preds = %if.end633
  %380 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !5502, !tbaa !2648
  %381 = load i8, i8* %380, align 1, !dbg !5504, !tbaa !2742
  %tobool635 = trunc i8 %381 to i1, !dbg !5504, !ctir !142
  br i1 %tobool635, label %if.end640, label %if.then636, !dbg !5505

if.then636:                                       ; preds = %if.end634
  %382 = load i8*, i8** %dst_name.addr, align 8, !dbg !5506, !tbaa !2648
  %st_ino637 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 1, !dbg !5508, !ctir !415
  %383 = load i64, i64* %st_ino637, align 8, !dbg !5508, !tbaa !4791, !ctir !276
  %st_dev638 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 0, !dbg !5509, !ctir !415
  %384 = load i64, i64* %st_dev638, align 8, !dbg !5509, !tbaa !4770, !ctir !274
  %call639 = call i8* @remember_copied(i8* %382, i64 %383, i64 %384), !dbg !5510
  %385 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !5511, !tbaa !2648
  store i8 1, i8* %385, align 1, !dbg !5512, !tbaa !2742, !ctir !142
  br label %if.end640, !dbg !5513

if.end640:                                        ; preds = %if.then636, %if.end634
  %386 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5514, !tbaa !2648
  %verbose641 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %386, i32 0, i32 31, !dbg !5516, !ctir !357
  %387 = load i8, i8* %verbose641, align 2, !dbg !5516, !tbaa !2812
  %tobool642 = trunc i8 %387 to i1, !dbg !5516, !ctir !142
  br i1 %tobool642, label %if.then643, label %if.end652, !dbg !5517

if.then643:                                       ; preds = %if.end640
  %388 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5518, !tbaa !2648
  %move_mode644 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %388, i32 0, i32 9, !dbg !5521, !ctir !357
  %389 = load i8, i8* %move_mode644, align 8, !dbg !5521, !tbaa !3167
  %tobool645 = trunc i8 %389 to i1, !dbg !5521, !ctir !142
  br i1 %tobool645, label %if.then646, label %if.else650, !dbg !5522

if.then646:                                       ; preds = %if.then643
  %call647 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.38.128, i64 0, i64 0)) #9, !dbg !5523
  %390 = load i8*, i8** %dst_name.addr, align 8, !dbg !5524, !tbaa !2648
  %call648 = call i8* @quotearg_style(i32 4, i8* %390), !dbg !5524
  %call649 = call i32 (i8*, ...) @printf(i8* %call647, i8* %call648), !dbg !5525
  br label %if.end651, !dbg !5525

if.else650:                                       ; preds = %if.then643
  %391 = load i8*, i8** %src_name.addr, align 8, !dbg !5526, !tbaa !2648
  %392 = load i8*, i8** %dst_name.addr, align 8, !dbg !5527, !tbaa !2648
  call void @emit_verbose(i8* %391, i8* %392, i8* null), !dbg !5528
  br label %if.end651

if.end651:                                        ; preds = %if.else650, %if.then646
  br label %if.end652, !dbg !5529

if.end652:                                        ; preds = %if.end651, %if.end640
  br label %if.end668, !dbg !5530

if.else653:                                       ; preds = %lor.lhs.false601
  store i32 0, i32* %omitted_permissions, align 4, !dbg !5531, !tbaa !2635
  %393 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5533, !tbaa !2648
  %set_security_context654 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %393, i32 0, i32 18, !dbg !5535, !ctir !357
  %394 = load i8, i8* %set_security_context654, align 1, !dbg !5535, !tbaa !2866
  %tobool655 = trunc i8 %394 to i1, !dbg !5535, !ctir !142
  br i1 %tobool655, label %if.then658, label %lor.lhs.false656, !dbg !5536

lor.lhs.false656:                                 ; preds = %if.else653
  %395 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5537, !tbaa !2648
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %395, i32 0, i32 22, !dbg !5538, !ctir !357
  %396 = load i8, i8* %preserve_security_context, align 1, !dbg !5538, !tbaa !2850
  %tobool657 = trunc i8 %396 to i1, !dbg !5538, !ctir !142
  br i1 %tobool657, label %if.then658, label %if.end667, !dbg !5539

if.then658:                                       ; preds = %lor.lhs.false656, %if.else653
  %397 = load i8*, i8** %dst_name.addr, align 8, !dbg !5540, !tbaa !2648
  %398 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5542, !tbaa !2648
  %preserve_security_context659 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %398, i32 0, i32 22, !dbg !5543, !ctir !357
  %399 = load i8, i8* %preserve_security_context659, align 1, !dbg !5543, !tbaa !2850
  %tobool660 = trunc i8 %399 to i1, !dbg !5543, !ctir !142
  %400 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5544, !tbaa !2648
  %call661 = call zeroext i1 @set_file_security_ctx(i8* %397, i1 zeroext %tobool660, i1 zeroext false, %struct.cp_options* %400), !dbg !5545
  br i1 %call661, label %if.end666, label %if.then662, !dbg !5546

if.then662:                                       ; preds = %if.then658
  %401 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5547, !tbaa !2648
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %401, i32 0, i32 23, !dbg !5550, !ctir !357
  %402 = load i8, i8* %require_preserve_context, align 2, !dbg !5550, !tbaa !3249
  %tobool663 = trunc i8 %402 to i1, !dbg !5550, !ctir !142
  br i1 %tobool663, label %if.then664, label %if.end665, !dbg !5551

if.then664:                                       ; preds = %if.then662
  br label %un_backup, !dbg !5552

if.end665:                                        ; preds = %if.then662
  br label %if.end666, !dbg !5553

if.end666:                                        ; preds = %if.end665, %if.then658
  br label %if.end667, !dbg !5554

if.end667:                                        ; preds = %if.end666, %lor.lhs.false656
  br label %if.end668

if.end668:                                        ; preds = %if.end667, %if.end652
  %403 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5555, !tbaa !2648
  %one_file_system = getelementptr inbounds %struct.cp_options, %struct.cp_options* %403, i32 0, i32 13, !dbg !5557, !ctir !357
  %404 = load i8, i8* %one_file_system, align 4, !dbg !5557, !tbaa !3175
  %tobool669 = trunc i8 %404 to i1, !dbg !5557, !ctir !142
  br i1 %tobool669, label %land.lhs.true670, label %if.else677, !dbg !5558

land.lhs.true670:                                 ; preds = %if.end668
  %405 = load %struct.stat*, %struct.stat** %parent.addr, align 8, !dbg !5559, !tbaa !2648
  %tobool671 = icmp ne %struct.stat* %405, null, !dbg !5559
  br i1 %tobool671, label %land.lhs.true672, label %if.else677, !dbg !5560

land.lhs.true672:                                 ; preds = %land.lhs.true670
  %406 = load %struct.stat*, %struct.stat** %parent.addr, align 8, !dbg !5561, !tbaa !2648
  %st_dev673 = getelementptr inbounds %struct.stat, %struct.stat* %406, i32 0, i32 0, !dbg !5562, !ctir !414
  %407 = load i64, i64* %st_dev673, align 8, !dbg !5562, !tbaa !4770, !ctir !274
  %st_dev674 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5563, !ctir !415
  %408 = load i64, i64* %st_dev674, align 8, !dbg !5563, !tbaa !4770, !ctir !274
  %cmp675 = icmp ne i64 %407, %408, !dbg !5564
  br i1 %cmp675, label %if.then676, label %if.else677, !dbg !5565

if.then676:                                       ; preds = %land.lhs.true672
  br label %if.end681, !dbg !5566

if.else677:                                       ; preds = %land.lhs.true672, %land.lhs.true670, %if.end668
  %409 = load i8*, i8** %src_name.addr, align 8, !dbg !5568, !tbaa !2648
  %410 = load i8*, i8** %dst_name.addr, align 8, !dbg !5570, !tbaa !2648
  %411 = load i8, i8* %new_dst.addr, align 1, !dbg !5571, !tbaa !2742
  %tobool678 = trunc i8 %411 to i1, !dbg !5571
  %412 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !5572, !tbaa !2648
  %413 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5573, !tbaa !2648
  %414 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !5574, !tbaa !2648
  %415 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !5575, !tbaa !2648
  %call679 = call zeroext i1 @copy_dir(i8* %409, i8* %410, i1 zeroext %tobool678, %struct.stat* %src_sb, %struct.dir_list* %412, %struct.cp_options* %413, i8* %414, i8* %415), !dbg !5576
  %frombool680 = zext i1 %call679 to i8, !dbg !5577
  store i8 %frombool680, i8* %delayed_ok, align 1, !dbg !5577, !tbaa !2742
  br label %if.end681

if.end681:                                        ; preds = %if.else677, %if.then676
  br label %if.end894, !dbg !5578

if.else682:                                       ; preds = %if.end588
  %416 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5579, !tbaa !2648
  %symbolic_link683 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %416, i32 0, i32 29, !dbg !5581, !ctir !357
  %417 = load i8, i8* %symbolic_link683, align 4, !dbg !5581, !tbaa !3222
  %tobool684 = trunc i8 %417 to i1, !dbg !5581, !ctir !142
  br i1 %tobool684, label %if.then685, label %if.else730, !dbg !5582

if.then685:                                       ; preds = %if.else682
  store i8 1, i8* %dest_is_symlink, align 1, !dbg !5583, !tbaa !2742
  %418 = load i8*, i8** %src_name.addr, align 8, !dbg !5585, !tbaa !2648
  %419 = load i8, i8* %418, align 1, !dbg !5587, !tbaa !3295, !ctir !181
  %conv = sext i8 %419 to i32, !dbg !5587
  %cmp686 = icmp ne i32 %conv, 47, !dbg !5588
  br i1 %cmp686, label %if.then688, label %if.end719, !dbg !5589

if.then688:                                       ; preds = %if.then685
  call void @llvm.dbg.declare(metadata %struct.stat* %dot_sb, metadata !5590, metadata !DIExpression()), !dbg !5592
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_parent_sb, metadata !5593, metadata !DIExpression()), !dbg !5594
  call void @llvm.dbg.declare(metadata i8** %dst_parent, metadata !5595, metadata !DIExpression()), !dbg !5596
  call void @llvm.dbg.declare(metadata i8* %in_current_dir, metadata !5597, metadata !DIExpression()), !dbg !5598
  %420 = load i8*, i8** %dst_name.addr, align 8, !dbg !5599, !tbaa !2648
  %call689 = call i8* @dir_name(i8* %420), !dbg !5600
  store i8* %call689, i8** %dst_parent, align 8, !dbg !5601, !tbaa !2648
  %421 = load i8*, i8** %dst_parent, align 8, !dbg !5602, !tbaa !2648
  %call690 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39.129, i64 0, i64 0), i8* %421) #14, !dbg !5602
  %cmp691 = icmp eq i32 %call690, 0, !dbg !5602
  br i1 %cmp691, label %lor.end712, label %lor.lhs.false693, !dbg !5603

lor.lhs.false693:                                 ; preds = %if.then688
  %call694 = call i32 @stat(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39.129, i64 0, i64 0), %struct.stat* %dot_sb) #9, !dbg !5604
  %cmp695 = icmp ne i32 %call694, 0, !dbg !5605
  br i1 %cmp695, label %lor.end712, label %lor.lhs.false697, !dbg !5606

lor.lhs.false697:                                 ; preds = %lor.lhs.false693
  %422 = load i8*, i8** %dst_parent, align 8, !dbg !5607, !tbaa !2648
  %call698 = call i32 @stat(i8* %422, %struct.stat* %dst_parent_sb) #9, !dbg !5608
  %cmp699 = icmp ne i32 %call698, 0, !dbg !5609
  br i1 %cmp699, label %lor.end712, label %lor.rhs701, !dbg !5610

lor.rhs701:                                       ; preds = %lor.lhs.false697
  %st_ino702 = getelementptr inbounds %struct.stat, %struct.stat* %dot_sb, i32 0, i32 1, !dbg !5611, !ctir !415
  %423 = load i64, i64* %st_ino702, align 8, !dbg !5611, !tbaa !4791, !ctir !276
  %st_ino703 = getelementptr inbounds %struct.stat, %struct.stat* %dst_parent_sb, i32 0, i32 1, !dbg !5611, !ctir !415
  %424 = load i64, i64* %st_ino703, align 8, !dbg !5611, !tbaa !4791, !ctir !276
  %cmp704 = icmp eq i64 %423, %424, !dbg !5611
  br i1 %cmp704, label %land.rhs706, label %land.end711, !dbg !5611

land.rhs706:                                      ; preds = %lor.rhs701
  %st_dev707 = getelementptr inbounds %struct.stat, %struct.stat* %dot_sb, i32 0, i32 0, !dbg !5611, !ctir !415
  %425 = load i64, i64* %st_dev707, align 8, !dbg !5611, !tbaa !4770, !ctir !274
  %st_dev708 = getelementptr inbounds %struct.stat, %struct.stat* %dst_parent_sb, i32 0, i32 0, !dbg !5611, !ctir !415
  %426 = load i64, i64* %st_dev708, align 8, !dbg !5611, !tbaa !4770, !ctir !274
  %cmp709 = icmp eq i64 %425, %426, !dbg !5611
  br label %land.end711

land.end711:                                      ; preds = %land.rhs706, %lor.rhs701
  %427 = phi i1 [ false, %lor.rhs701 ], [ %cmp709, %land.rhs706 ], !dbg !5612
  br label %lor.end712, !dbg !5610

lor.end712:                                       ; preds = %land.end711, %lor.lhs.false697, %lor.lhs.false693, %if.then688
  %428 = phi i1 [ true, %lor.lhs.false697 ], [ true, %lor.lhs.false693 ], [ true, %if.then688 ], [ %427, %land.end711 ]
  %frombool713 = zext i1 %428 to i8, !dbg !5613
  store i8 %frombool713, i8* %in_current_dir, align 1, !dbg !5613, !tbaa !2742
  %429 = load i8*, i8** %dst_parent, align 8, !dbg !5614, !tbaa !2648
  call void @free(i8* %429) #9, !dbg !5615
  %430 = load i8, i8* %in_current_dir, align 1, !dbg !5616, !tbaa !2742
  %tobool714 = trunc i8 %430 to i1, !dbg !5616
  br i1 %tobool714, label %if.end718, label %if.then715, !dbg !5618

if.then715:                                       ; preds = %lor.end712
  %call716 = call i8* @gettext(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.40.130, i64 0, i64 0)) #9, !dbg !5619
  %431 = load i8*, i8** %dst_name.addr, align 8, !dbg !5621, !tbaa !2648
  %call717 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %431), !dbg !5621
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call716, i8* %call717), !dbg !5622
  br label %un_backup, !dbg !5623

if.end718:                                        ; preds = %lor.end712
  br label %if.end719, !dbg !5624

if.end719:                                        ; preds = %if.end718, %if.then685
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5625, metadata !DIExpression()), !dbg !5626
  %432 = load i8*, i8** %src_name.addr, align 8, !dbg !5627, !tbaa !2648
  %433 = load i8*, i8** %dst_name.addr, align 8, !dbg !5628, !tbaa !2648
  %434 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5629, !tbaa !2648
  %unlink_dest_after_failed_open720 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %434, i32 0, i32 7, !dbg !5630, !ctir !357
  %435 = load i8, i8* %unlink_dest_after_failed_open720, align 2, !dbg !5630, !tbaa !3155
  %tobool721 = trunc i8 %435 to i1, !dbg !5630, !ctir !142
  %call722 = call i32 @force_symlinkat(i8* %432, i32 -100, i8* %433, i1 zeroext %tobool721, i32 -1), !dbg !5631
  store i32 %call722, i32* %err, align 4, !dbg !5626, !tbaa !2635
  %436 = load i32, i32* %err, align 4, !dbg !5632, !tbaa !2635
  %cmp723 = icmp slt i32 0, %436, !dbg !5634
  br i1 %cmp723, label %if.then725, label %if.end729, !dbg !5635

if.then725:                                       ; preds = %if.end719
  %437 = load i32, i32* %err, align 4, !dbg !5636, !tbaa !2635
  %call726 = call i8* @gettext(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.41.131, i64 0, i64 0)) #9, !dbg !5638
  %438 = load i8*, i8** %dst_name.addr, align 8, !dbg !5639, !tbaa !2648
  %call727 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %438), !dbg !5639
  %439 = load i8*, i8** %src_name.addr, align 8, !dbg !5640, !tbaa !2648
  %call728 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %439), !dbg !5640
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %437, i8* %call726, i8* %call727, i8* %call728), !dbg !5641
  br label %un_backup, !dbg !5642

if.end729:                                        ; preds = %if.end719
  br label %if.end893, !dbg !5643

if.else730:                                       ; preds = %if.else682
  %440 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5644, !tbaa !2648
  %hard_link731 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %440, i32 0, i32 8, !dbg !5646, !ctir !357
  %441 = load i8, i8* %hard_link731, align 1, !dbg !5646, !tbaa !3159
  %tobool732 = trunc i8 %441 to i1, !dbg !5646, !ctir !142
  br i1 %tobool732, label %if.then734, label %if.else749, !dbg !5647

if.then734:                                       ; preds = %if.else730
  call void @llvm.dbg.declare(metadata i8* %replace, metadata !5648, metadata !DIExpression()), !dbg !5650
  %442 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5651, !tbaa !2648
  %unlink_dest_after_failed_open735 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %442, i32 0, i32 7, !dbg !5652, !ctir !357
  %443 = load i8, i8* %unlink_dest_after_failed_open735, align 2, !dbg !5652, !tbaa !3155
  %tobool736 = trunc i8 %443 to i1, !dbg !5652, !ctir !142
  br i1 %tobool736, label %lor.end742, label %lor.rhs738, !dbg !5653

lor.rhs738:                                       ; preds = %if.then734
  %444 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5654, !tbaa !2648
  %interactive739 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %444, i32 0, i32 2, !dbg !5655, !ctir !357
  %445 = load i32, i32* %interactive739, align 8, !dbg !5655, !tbaa !3163, !ctir !83
  %cmp740 = icmp eq i32 %445, 3, !dbg !5656
  br label %lor.end742, !dbg !5653

lor.end742:                                       ; preds = %lor.rhs738, %if.then734
  %446 = phi i1 [ true, %if.then734 ], [ %cmp740, %lor.rhs738 ]
  %frombool743 = zext i1 %446 to i8, !dbg !5650
  store i8 %frombool743, i8* %replace, align 1, !dbg !5650, !tbaa !2742
  %447 = load i8*, i8** %src_name.addr, align 8, !dbg !5657, !tbaa !2648
  %448 = load i8*, i8** %dst_name.addr, align 8, !dbg !5659, !tbaa !2648
  %449 = load i8, i8* %replace, align 1, !dbg !5660, !tbaa !2742
  %tobool744 = trunc i8 %449 to i1, !dbg !5660
  %450 = load i8, i8* %dereference65, align 1, !dbg !5661, !tbaa !2742
  %tobool745 = trunc i8 %450 to i1, !dbg !5661
  %call746 = call zeroext i1 @create_hard_link(i8* %447, i8* %448, i1 zeroext %tobool744, i1 zeroext false, i1 zeroext %tobool745), !dbg !5662
  br i1 %call746, label %if.end748, label %if.then747, !dbg !5663

if.then747:                                       ; preds = %lor.end742
  br label %un_backup, !dbg !5664

if.end748:                                        ; preds = %lor.end742
  br label %if.end892, !dbg !5665

if.else749:                                       ; preds = %if.else730
  %451 = load i32, i32* %src_mode, align 4, !dbg !5666, !tbaa !2635
  %and750 = and i32 %451, 61440, !dbg !5666
  %cmp751 = icmp eq i32 %and750, 32768, !dbg !5666
  br i1 %cmp751, label %if.then761, label %lor.lhs.false753, !dbg !5668

lor.lhs.false753:                                 ; preds = %if.else749
  %452 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5669, !tbaa !2648
  %copy_as_regular754 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %452, i32 0, i32 5, !dbg !5670, !ctir !357
  %453 = load i8, i8* %copy_as_regular754, align 4, !dbg !5670, !tbaa !3139
  %tobool755 = trunc i8 %453 to i1, !dbg !5670, !ctir !142
  br i1 %tobool755, label %land.lhs.true757, label %if.else766, !dbg !5671

land.lhs.true757:                                 ; preds = %lor.lhs.false753
  %454 = load i32, i32* %src_mode, align 4, !dbg !5672, !tbaa !2635
  %and758 = and i32 %454, 61440, !dbg !5672
  %cmp759 = icmp eq i32 %and758, 40960, !dbg !5672
  br i1 %cmp759, label %if.else766, label %if.then761, !dbg !5673

if.then761:                                       ; preds = %land.lhs.true757, %if.else749
  store i8 1, i8* %copied_as_regular, align 1, !dbg !5674, !tbaa !2742
  %455 = load i8*, i8** %src_name.addr, align 8, !dbg !5676, !tbaa !2648
  %456 = load i8*, i8** %dst_name.addr, align 8, !dbg !5678, !tbaa !2648
  %457 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5679, !tbaa !2648
  %458 = load i32, i32* %dst_mode_bits, align 4, !dbg !5680, !tbaa !2635
  %and762 = and i32 %458, 511, !dbg !5681
  %459 = load i32, i32* %omitted_permissions, align 4, !dbg !5682, !tbaa !2635
  %call763 = call zeroext i1 @copy_reg(i8* %455, i8* %456, %struct.cp_options* %457, i32 %and762, i32 %459, i8* %new_dst.addr, %struct.stat* %src_sb), !dbg !5683
  br i1 %call763, label %if.end765, label %if.then764, !dbg !5684

if.then764:                                       ; preds = %if.then761
  br label %un_backup, !dbg !5685

if.end765:                                        ; preds = %if.then761
  br label %if.end891, !dbg !5686

if.else766:                                       ; preds = %land.lhs.true757, %lor.lhs.false753
  %460 = load i32, i32* %src_mode, align 4, !dbg !5687, !tbaa !2635
  %and767 = and i32 %460, 61440, !dbg !5687
  %cmp768 = icmp eq i32 %and767, 4096, !dbg !5687
  br i1 %cmp768, label %if.then770, label %if.else789, !dbg !5689

if.then770:                                       ; preds = %if.else766
  %461 = load i8*, i8** %dst_name.addr, align 8, !dbg !5690, !tbaa !2648
  %462 = load i32, i32* %src_mode, align 4, !dbg !5693, !tbaa !2635
  %463 = load i32, i32* %omitted_permissions, align 4, !dbg !5694, !tbaa !2635
  %neg771 = xor i32 %463, -1, !dbg !5695
  %and772 = and i32 %462, %neg771, !dbg !5696
  %call773 = call i32 @mknod(i8* %461, i32 %and772, i64 0) #9, !dbg !5697
  %cmp774 = icmp ne i32 %call773, 0, !dbg !5698
  br i1 %cmp774, label %if.then776, label %if.end788, !dbg !5699

if.then776:                                       ; preds = %if.then770
  %464 = load i8*, i8** %dst_name.addr, align 8, !dbg !5700, !tbaa !2648
  %465 = load i32, i32* %src_mode, align 4, !dbg !5702, !tbaa !2635
  %and777 = and i32 %465, -4097, !dbg !5703
  %466 = load i32, i32* %omitted_permissions, align 4, !dbg !5704, !tbaa !2635
  %neg778 = xor i32 %466, -1, !dbg !5705
  %and779 = and i32 %and777, %neg778, !dbg !5706
  %call780 = call i32 @mkfifo(i8* %464, i32 %and779) #9, !dbg !5707
  %cmp781 = icmp ne i32 %call780, 0, !dbg !5708
  br i1 %cmp781, label %if.then783, label %if.end787, !dbg !5709

if.then783:                                       ; preds = %if.then776
  %call784 = call i32* @__errno_location() #16, !dbg !5710
  %467 = load i32, i32* %call784, align 4, !dbg !5710, !tbaa !2635, !ctir !7
  %call785 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.42.132, i64 0, i64 0)) #9, !dbg !5712
  %468 = load i8*, i8** %dst_name.addr, align 8, !dbg !5713, !tbaa !2648
  %call786 = call i8* @quotearg_style(i32 4, i8* %468), !dbg !5713
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %467, i8* %call785, i8* %call786), !dbg !5714
  br label %un_backup, !dbg !5715

if.end787:                                        ; preds = %if.then776
  br label %if.end788, !dbg !5716

if.end788:                                        ; preds = %if.end787, %if.then770
  br label %if.end890, !dbg !5717

if.else789:                                       ; preds = %if.else766
  %469 = load i32, i32* %src_mode, align 4, !dbg !5718, !tbaa !2635
  %and790 = and i32 %469, 61440, !dbg !5718
  %cmp791 = icmp eq i32 %and790, 24576, !dbg !5718
  br i1 %cmp791, label %if.then801, label %lor.lhs.false793, !dbg !5720

lor.lhs.false793:                                 ; preds = %if.else789
  %470 = load i32, i32* %src_mode, align 4, !dbg !5721, !tbaa !2635
  %and794 = and i32 %470, 61440, !dbg !5721
  %cmp795 = icmp eq i32 %and794, 8192, !dbg !5721
  br i1 %cmp795, label %if.then801, label %lor.lhs.false797, !dbg !5722

lor.lhs.false797:                                 ; preds = %lor.lhs.false793
  %471 = load i32, i32* %src_mode, align 4, !dbg !5723, !tbaa !2635
  %and798 = and i32 %471, 61440, !dbg !5723
  %cmp799 = icmp eq i32 %and798, 49152, !dbg !5723
  br i1 %cmp799, label %if.then801, label %if.else812, !dbg !5724

if.then801:                                       ; preds = %lor.lhs.false797, %lor.lhs.false793, %if.else789
  %472 = load i8*, i8** %dst_name.addr, align 8, !dbg !5725, !tbaa !2648
  %473 = load i32, i32* %src_mode, align 4, !dbg !5728, !tbaa !2635
  %474 = load i32, i32* %omitted_permissions, align 4, !dbg !5729, !tbaa !2635
  %neg802 = xor i32 %474, -1, !dbg !5730
  %and803 = and i32 %473, %neg802, !dbg !5731
  %st_rdev = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 7, !dbg !5732, !ctir !415
  %475 = load i64, i64* %st_rdev, align 8, !dbg !5732, !tbaa !5733, !ctir !274
  %call804 = call i32 @mknod(i8* %472, i32 %and803, i64 %475) #9, !dbg !5734
  %cmp805 = icmp ne i32 %call804, 0, !dbg !5735
  br i1 %cmp805, label %if.then807, label %if.end811, !dbg !5736

if.then807:                                       ; preds = %if.then801
  %call808 = call i32* @__errno_location() #16, !dbg !5737
  %476 = load i32, i32* %call808, align 4, !dbg !5737, !tbaa !2635, !ctir !7
  %call809 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.43.133, i64 0, i64 0)) #9, !dbg !5739
  %477 = load i8*, i8** %dst_name.addr, align 8, !dbg !5740, !tbaa !2648
  %call810 = call i8* @quotearg_style(i32 4, i8* %477), !dbg !5740
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %476, i8* %call809, i8* %call810), !dbg !5741
  br label %un_backup, !dbg !5742

if.end811:                                        ; preds = %if.then801
  br label %if.end889, !dbg !5743

if.else812:                                       ; preds = %lor.lhs.false797
  %478 = load i32, i32* %src_mode, align 4, !dbg !5744, !tbaa !2635
  %and813 = and i32 %478, 61440, !dbg !5744
  %cmp814 = icmp eq i32 %and813, 40960, !dbg !5744
  br i1 %cmp814, label %if.then816, label %if.else885, !dbg !5746

if.then816:                                       ; preds = %if.else812
  call void @llvm.dbg.declare(metadata i8** %src_link_val, metadata !5747, metadata !DIExpression()), !dbg !5749
  %479 = load i8*, i8** %src_name.addr, align 8, !dbg !5750, !tbaa !2648
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 8, !dbg !5751, !ctir !415
  %480 = load i64, i64* %st_size, align 8, !dbg !5751, !tbaa !4018, !ctir !29
  %call817 = call i8* @areadlink_with_size(i8* %479, i64 %480), !dbg !5752
  store i8* %call817, i8** %src_link_val, align 8, !dbg !5749, !tbaa !2648
  store i8 1, i8* %dest_is_symlink, align 1, !dbg !5753, !tbaa !2742
  %481 = load i8*, i8** %src_link_val, align 8, !dbg !5754, !tbaa !2648
  %cmp818 = icmp eq i8* %481, null, !dbg !5756
  br i1 %cmp818, label %if.then820, label %if.end824, !dbg !5757

if.then820:                                       ; preds = %if.then816
  %call821 = call i32* @__errno_location() #16, !dbg !5758
  %482 = load i32, i32* %call821, align 4, !dbg !5758, !tbaa !2635, !ctir !7
  %call822 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44.134, i64 0, i64 0)) #9, !dbg !5760
  %483 = load i8*, i8** %src_name.addr, align 8, !dbg !5761, !tbaa !2648
  %call823 = call i8* @quotearg_style(i32 4, i8* %483), !dbg !5761
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %482, i8* %call822, i8* %call823), !dbg !5762
  br label %un_backup, !dbg !5763

if.end824:                                        ; preds = %if.then816
  call void @llvm.dbg.declare(metadata i32* %symlink_err, metadata !5764, metadata !DIExpression()), !dbg !5765
  %484 = load i8*, i8** %src_link_val, align 8, !dbg !5766, !tbaa !2648
  %485 = load i8*, i8** %dst_name.addr, align 8, !dbg !5767, !tbaa !2648
  %486 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5768, !tbaa !2648
  %unlink_dest_after_failed_open825 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %486, i32 0, i32 7, !dbg !5769, !ctir !357
  %487 = load i8, i8* %unlink_dest_after_failed_open825, align 2, !dbg !5769, !tbaa !3155
  %tobool826 = trunc i8 %487 to i1, !dbg !5769, !ctir !142
  %call827 = call i32 @force_symlinkat(i8* %484, i32 -100, i8* %485, i1 zeroext %tobool826, i32 -1), !dbg !5770
  store i32 %call827, i32* %symlink_err, align 4, !dbg !5765, !tbaa !2635
  %488 = load i32, i32* %symlink_err, align 4, !dbg !5771, !tbaa !2635
  %cmp828 = icmp slt i32 0, %488, !dbg !5773
  br i1 %cmp828, label %land.lhs.true830, label %if.end857, !dbg !5774

land.lhs.true830:                                 ; preds = %if.end824
  %489 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5775, !tbaa !2648
  %update831 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %489, i32 0, i32 30, !dbg !5776, !ctir !357
  %490 = load i8, i8* %update831, align 1, !dbg !5776, !tbaa !3245
  %tobool832 = trunc i8 %490 to i1, !dbg !5776, !ctir !142
  br i1 %tobool832, label %land.lhs.true834, label %if.end857, !dbg !5777

land.lhs.true834:                                 ; preds = %land.lhs.true830
  %491 = load i8, i8* %new_dst.addr, align 1, !dbg !5778, !tbaa !2742
  %tobool835 = trunc i8 %491 to i1, !dbg !5778
  br i1 %tobool835, label %if.end857, label %land.lhs.true836, !dbg !5779

land.lhs.true836:                                 ; preds = %land.lhs.true834
  %st_mode837 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5780, !ctir !415
  %492 = load i32, i32* %st_mode837, align 8, !dbg !5780, !tbaa !2914, !ctir !140
  %and838 = and i32 %492, 61440, !dbg !5780
  %cmp839 = icmp eq i32 %and838, 40960, !dbg !5780
  br i1 %cmp839, label %land.lhs.true841, label %if.end857, !dbg !5781

land.lhs.true841:                                 ; preds = %land.lhs.true836
  %st_size842 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 8, !dbg !5782, !ctir !415
  %493 = load i64, i64* %st_size842, align 8, !dbg !5782, !tbaa !4018, !ctir !29
  %494 = load i8*, i8** %src_link_val, align 8, !dbg !5783, !tbaa !2648
  %call843 = call i64 @strlen(i8* %494) #14, !dbg !5784
  %cmp844 = icmp eq i64 %493, %call843, !dbg !5785
  br i1 %cmp844, label %if.then846, label %if.end857, !dbg !5786

if.then846:                                       ; preds = %land.lhs.true841
  call void @llvm.dbg.declare(metadata i8** %dest_link_val, metadata !5787, metadata !DIExpression()), !dbg !5789
  %495 = load i8*, i8** %dst_name.addr, align 8, !dbg !5790, !tbaa !2648
  %st_size847 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 8, !dbg !5791, !ctir !415
  %496 = load i64, i64* %st_size847, align 8, !dbg !5791, !tbaa !4018, !ctir !29
  %call848 = call i8* @areadlink_with_size(i8* %495, i64 %496), !dbg !5792
  store i8* %call848, i8** %dest_link_val, align 8, !dbg !5789, !tbaa !2648
  %497 = load i8*, i8** %dest_link_val, align 8, !dbg !5793, !tbaa !2648
  %tobool849 = icmp ne i8* %497, null, !dbg !5793
  br i1 %tobool849, label %if.then850, label %if.end856, !dbg !5795

if.then850:                                       ; preds = %if.then846
  %498 = load i8*, i8** %dest_link_val, align 8, !dbg !5796, !tbaa !2648
  %499 = load i8*, i8** %src_link_val, align 8, !dbg !5796, !tbaa !2648
  %call851 = call i32 @strcmp(i8* %498, i8* %499) #14, !dbg !5796
  %cmp852 = icmp eq i32 %call851, 0, !dbg !5796
  br i1 %cmp852, label %if.then854, label %if.end855, !dbg !5799

if.then854:                                       ; preds = %if.then850
  store i32 0, i32* %symlink_err, align 4, !dbg !5800, !tbaa !2635
  br label %if.end855, !dbg !5801

if.end855:                                        ; preds = %if.then854, %if.then850
  %500 = load i8*, i8** %dest_link_val, align 8, !dbg !5802, !tbaa !2648
  call void @free(i8* %500) #9, !dbg !5803
  br label %if.end856, !dbg !5804

if.end856:                                        ; preds = %if.end855, %if.then846
  br label %if.end857, !dbg !5805

if.end857:                                        ; preds = %if.end856, %land.lhs.true841, %land.lhs.true836, %land.lhs.true834, %land.lhs.true830, %if.end824
  %501 = load i8*, i8** %src_link_val, align 8, !dbg !5806, !tbaa !2648
  call void @free(i8* %501) #9, !dbg !5807
  %502 = load i32, i32* %symlink_err, align 4, !dbg !5808, !tbaa !2635
  %cmp858 = icmp slt i32 0, %502, !dbg !5810
  br i1 %cmp858, label %if.then860, label %if.end863, !dbg !5811

if.then860:                                       ; preds = %if.end857
  %503 = load i32, i32* %symlink_err, align 4, !dbg !5812, !tbaa !2635
  %call861 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.45.135, i64 0, i64 0)) #9, !dbg !5814
  %504 = load i8*, i8** %dst_name.addr, align 8, !dbg !5815, !tbaa !2648
  %call862 = call i8* @quotearg_style(i32 4, i8* %504), !dbg !5815
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %503, i8* %call861, i8* %call862), !dbg !5816
  br label %un_backup, !dbg !5817

if.end863:                                        ; preds = %if.end857
  %505 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5818, !tbaa !2648
  %preserve_security_context864 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %505, i32 0, i32 22, !dbg !5820, !ctir !357
  %506 = load i8, i8* %preserve_security_context864, align 1, !dbg !5820, !tbaa !2850
  %tobool865 = trunc i8 %506 to i1, !dbg !5820, !ctir !142
  br i1 %tobool865, label %if.then866, label %if.end867, !dbg !5821

if.then866:                                       ; preds = %if.end863
  call void @restore_default_fscreatecon_or_die(), !dbg !5822
  br label %if.end867, !dbg !5822

if.end867:                                        ; preds = %if.then866, %if.end863
  %507 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5823, !tbaa !2648
  %preserve_ownership868 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %507, i32 0, i32 14, !dbg !5825, !ctir !357
  %508 = load i8, i8* %preserve_ownership868, align 1, !dbg !5825, !tbaa !3179
  %tobool869 = trunc i8 %508 to i1, !dbg !5825, !ctir !142
  br i1 %tobool869, label %if.then870, label %if.end884, !dbg !5826

if.then870:                                       ; preds = %if.end867
  %509 = load i8*, i8** %dst_name.addr, align 8, !dbg !5827, !tbaa !2648
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 4, !dbg !5830, !ctir !415
  %510 = load i32, i32* %st_uid, align 4, !dbg !5830, !tbaa !4045, !ctir !128
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 5, !dbg !5831, !ctir !415
  %511 = load i32, i32* %st_gid, align 8, !dbg !5831, !tbaa !4074, !ctir !130
  %call871 = call i32 @lchown(i8* %509, i32 %510, i32 %511) #9, !dbg !5832
  %cmp872 = icmp ne i32 %call871, 0, !dbg !5833
  br i1 %cmp872, label %land.lhs.true874, label %if.else882, !dbg !5834

land.lhs.true874:                                 ; preds = %if.then870
  %512 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5835, !tbaa !2648
  %call875 = call zeroext i1 @chown_failure_ok(%struct.cp_options* %512) #14, !dbg !5836
  br i1 %call875, label %if.else882, label %if.then876, !dbg !5837

if.then876:                                       ; preds = %land.lhs.true874
  %call877 = call i32* @__errno_location() #16, !dbg !5838
  %513 = load i32, i32* %call877, align 4, !dbg !5838, !tbaa !2635, !ctir !7
  %call878 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.46.136, i64 0, i64 0)) #9, !dbg !5840
  %514 = load i8*, i8** %dst_name.addr, align 8, !dbg !5841, !tbaa !2648
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %513, i8* %call878, i8* %514), !dbg !5842
  %515 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5843, !tbaa !2648
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %515, i32 0, i32 21, !dbg !5845, !ctir !357
  %516 = load i8, i8* %require_preserve, align 4, !dbg !5845, !tbaa !3206
  %tobool879 = trunc i8 %516 to i1, !dbg !5845, !ctir !142
  br i1 %tobool879, label %if.then880, label %if.end881, !dbg !5846

if.then880:                                       ; preds = %if.then876
  br label %un_backup, !dbg !5847

if.end881:                                        ; preds = %if.then876
  br label %if.end883, !dbg !5848

if.else882:                                       ; preds = %land.lhs.true874, %if.then870
  br label %if.end883

if.end883:                                        ; preds = %if.else882, %if.end881
  br label %if.end884, !dbg !5849

if.end884:                                        ; preds = %if.end883, %if.end867
  br label %if.end888, !dbg !5850

if.else885:                                       ; preds = %if.else812
  %call886 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.47.137, i64 0, i64 0)) #9, !dbg !5851
  %517 = load i8*, i8** %src_name.addr, align 8, !dbg !5853, !tbaa !2648
  %call887 = call i8* @quotearg_style(i32 4, i8* %517), !dbg !5853
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call886, i8* %call887), !dbg !5854
  br label %un_backup, !dbg !5855

if.end888:                                        ; preds = %if.end884
  br label %if.end889

if.end889:                                        ; preds = %if.end888, %if.end811
  br label %if.end890

if.end890:                                        ; preds = %if.end889, %if.end788
  br label %if.end891

if.end891:                                        ; preds = %if.end890, %if.end765
  br label %if.end892

if.end892:                                        ; preds = %if.end891, %if.end748
  br label %if.end893

if.end893:                                        ; preds = %if.end892, %if.end729
  br label %if.end894

if.end894:                                        ; preds = %if.end893, %if.end681
  %518 = load i8, i8* %new_dst.addr, align 1, !dbg !5856, !tbaa !2742
  %tobool895 = trunc i8 %518 to i1, !dbg !5856
  br i1 %tobool895, label %if.end921, label %land.lhs.true896, !dbg !5858

land.lhs.true896:                                 ; preds = %if.end894
  %519 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5859, !tbaa !2648
  %copy_as_regular897 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %519, i32 0, i32 5, !dbg !5860, !ctir !357
  %520 = load i8, i8* %copy_as_regular897, align 4, !dbg !5860, !tbaa !3139
  %tobool898 = trunc i8 %520 to i1, !dbg !5860, !ctir !142
  br i1 %tobool898, label %if.end921, label %land.lhs.true899, !dbg !5861

land.lhs.true899:                                 ; preds = %land.lhs.true896
  %521 = load i32, i32* %src_mode, align 4, !dbg !5862, !tbaa !2635
  %and900 = and i32 %521, 61440, !dbg !5862
  %cmp901 = icmp eq i32 %and900, 16384, !dbg !5862
  br i1 %cmp901, label %if.end921, label %land.lhs.true903, !dbg !5863

land.lhs.true903:                                 ; preds = %land.lhs.true899
  %522 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5864, !tbaa !2648
  %set_security_context904 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %522, i32 0, i32 18, !dbg !5865, !ctir !357
  %523 = load i8, i8* %set_security_context904, align 1, !dbg !5865, !tbaa !2866
  %tobool905 = trunc i8 %523 to i1, !dbg !5865, !ctir !142
  br i1 %tobool905, label %if.then911, label %lor.lhs.false907, !dbg !5866

lor.lhs.false907:                                 ; preds = %land.lhs.true903
  %524 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5867, !tbaa !2648
  %preserve_security_context908 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %524, i32 0, i32 22, !dbg !5868, !ctir !357
  %525 = load i8, i8* %preserve_security_context908, align 1, !dbg !5868, !tbaa !2850
  %tobool909 = trunc i8 %525 to i1, !dbg !5868, !ctir !142
  br i1 %tobool909, label %if.then911, label %if.end921, !dbg !5869

if.then911:                                       ; preds = %lor.lhs.false907, %land.lhs.true903
  %526 = load i8*, i8** %dst_name.addr, align 8, !dbg !5870, !tbaa !2648
  %527 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5873, !tbaa !2648
  %preserve_security_context912 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %527, i32 0, i32 22, !dbg !5874, !ctir !357
  %528 = load i8, i8* %preserve_security_context912, align 1, !dbg !5874, !tbaa !2850
  %tobool913 = trunc i8 %528 to i1, !dbg !5874, !ctir !142
  %529 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5875, !tbaa !2648
  %call914 = call zeroext i1 @set_file_security_ctx(i8* %526, i1 zeroext %tobool913, i1 zeroext false, %struct.cp_options* %529), !dbg !5876
  br i1 %call914, label %if.end920, label %if.then915, !dbg !5877

if.then915:                                       ; preds = %if.then911
  %530 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5878, !tbaa !2648
  %require_preserve_context916 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %530, i32 0, i32 23, !dbg !5881, !ctir !357
  %531 = load i8, i8* %require_preserve_context916, align 2, !dbg !5881, !tbaa !3249
  %tobool917 = trunc i8 %531 to i1, !dbg !5881, !ctir !142
  br i1 %tobool917, label %if.then918, label %if.end919, !dbg !5882

if.then918:                                       ; preds = %if.then915
  br label %un_backup, !dbg !5883

if.end919:                                        ; preds = %if.then915
  br label %if.end920, !dbg !5884

if.end920:                                        ; preds = %if.end919, %if.then911
  br label %if.end921, !dbg !5885

if.end921:                                        ; preds = %if.end920, %lor.lhs.false907, %land.lhs.true899, %land.lhs.true896, %if.end894
  %532 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5886, !tbaa !2742
  %tobool922 = trunc i8 %532 to i1, !dbg !5886
  br i1 %tobool922, label %land.lhs.true924, label %if.end934, !dbg !5888

land.lhs.true924:                                 ; preds = %if.end921
  %533 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5889, !tbaa !2648
  %dest_info925 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %533, i32 0, i32 37, !dbg !5890, !ctir !357
  %534 = load %struct.hash_table*, %struct.hash_table** %dest_info925, align 8, !dbg !5890, !tbaa !3266, !ctir !175
  %tobool926 = icmp ne %struct.hash_table* %534, null, !dbg !5889
  br i1 %tobool926, label %if.then927, label %if.end934, !dbg !5891

if.then927:                                       ; preds = %land.lhs.true924
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !5892, metadata !DIExpression()), !dbg !5894
  %535 = load i8*, i8** %dst_name.addr, align 8, !dbg !5895, !tbaa !2648
  %call928 = call i32 @lstat(i8* %535, %struct.stat* %sb) #9, !dbg !5897
  %cmp929 = icmp eq i32 %call928, 0, !dbg !5898
  br i1 %cmp929, label %if.then931, label %if.end933, !dbg !5899

if.then931:                                       ; preds = %if.then927
  %536 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5900, !tbaa !2648
  %dest_info932 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %536, i32 0, i32 37, !dbg !5901, !ctir !357
  %537 = load %struct.hash_table*, %struct.hash_table** %dest_info932, align 8, !dbg !5901, !tbaa !3266, !ctir !175
  %538 = load i8*, i8** %dst_name.addr, align 8, !dbg !5902, !tbaa !2648
  call void @record_file(%struct.hash_table* %537, i8* %538, %struct.stat* %sb), !dbg !5903
  br label %if.end933, !dbg !5903

if.end933:                                        ; preds = %if.then931, %if.then927
  br label %if.end934, !dbg !5904

if.end934:                                        ; preds = %if.end933, %land.lhs.true924, %if.end921
  %539 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5905, !tbaa !2648
  %hard_link935 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %539, i32 0, i32 8, !dbg !5907, !ctir !357
  %540 = load i8, i8* %hard_link935, align 1, !dbg !5907, !tbaa !3159
  %tobool936 = trunc i8 %540 to i1, !dbg !5907, !ctir !142
  br i1 %tobool936, label %land.lhs.true938, label %if.end944, !dbg !5908

land.lhs.true938:                                 ; preds = %if.end934
  %541 = load i32, i32* %src_mode, align 4, !dbg !5909, !tbaa !2635
  %and939 = and i32 %541, 61440, !dbg !5909
  %cmp940 = icmp eq i32 %and939, 16384, !dbg !5909
  br i1 %cmp940, label %if.end944, label %if.then942, !dbg !5910

if.then942:                                       ; preds = %land.lhs.true938
  %542 = load i8, i8* %delayed_ok, align 1, !dbg !5911, !tbaa !2742
  %tobool943 = trunc i8 %542 to i1, !dbg !5911
  store i1 %tobool943, i1* %retval, align 1, !dbg !5912
  br label %return, !dbg !5912

if.end944:                                        ; preds = %land.lhs.true938, %if.end934
  %543 = load i8, i8* %copied_as_regular, align 1, !dbg !5913, !tbaa !2742
  %tobool945 = trunc i8 %543 to i1, !dbg !5913
  br i1 %tobool945, label %if.then946, label %if.end948, !dbg !5915

if.then946:                                       ; preds = %if.end944
  %544 = load i8, i8* %delayed_ok, align 1, !dbg !5916, !tbaa !2742
  %tobool947 = trunc i8 %544 to i1, !dbg !5916
  store i1 %tobool947, i1* %retval, align 1, !dbg !5917
  br label %return, !dbg !5917

if.end948:                                        ; preds = %if.end944
  %545 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5918, !tbaa !2648
  %preserve_timestamps949 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %545, i32 0, i32 16, !dbg !5920, !ctir !357
  %546 = load i8, i8* %preserve_timestamps949, align 1, !dbg !5920, !tbaa !2826
  %tobool950 = trunc i8 %546 to i1, !dbg !5920, !ctir !142
  br i1 %tobool950, label %if.then951, label %if.end977, !dbg !5921

if.then951:                                       ; preds = %if.end948
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timespec, metadata !5922, metadata !DIExpression()), !dbg !5924
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !5925, !ctir !445
  %call953 = call { i64, i64 } @get_stat_atime(%struct.stat* %src_sb) #14, !dbg !5926
  %547 = bitcast %struct.timespec* %tmp952 to { i64, i64 }*, !dbg !5926
  %548 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %547, i32 0, i32 0, !dbg !5926
  %549 = extractvalue { i64, i64 } %call953, 0, !dbg !5926
  store i64 %549, i64* %548, align 8, !dbg !5926
  %550 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %547, i32 0, i32 1, !dbg !5926
  %551 = extractvalue { i64, i64 } %call953, 1, !dbg !5926
  store i64 %551, i64* %550, align 8, !dbg !5926
  %552 = bitcast %struct.timespec* %arrayidx to i8*, !dbg !5926
  %553 = bitcast %struct.timespec* %tmp952 to i8*, !dbg !5926
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %552, i8* align 8 %553, i64 16, i1 false), !dbg !5926, !tbaa.struct !3798
  %arrayidx954 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !5927, !ctir !445
  %call956 = call { i64, i64 } @get_stat_mtime(%struct.stat* %src_sb) #14, !dbg !5928
  %554 = bitcast %struct.timespec* %tmp955 to { i64, i64 }*, !dbg !5928
  %555 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %554, i32 0, i32 0, !dbg !5928
  %556 = extractvalue { i64, i64 } %call956, 0, !dbg !5928
  store i64 %556, i64* %555, align 8, !dbg !5928
  %557 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %554, i32 0, i32 1, !dbg !5928
  %558 = extractvalue { i64, i64 } %call956, 1, !dbg !5928
  store i64 %558, i64* %557, align 8, !dbg !5928
  %559 = bitcast %struct.timespec* %arrayidx954 to i8*, !dbg !5928
  %560 = bitcast %struct.timespec* %tmp955 to i8*, !dbg !5928
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %559, i8* align 8 %560, i64 16, i1 false), !dbg !5928, !tbaa.struct !3798
  %561 = load i8, i8* %dest_is_symlink, align 1, !dbg !5929, !tbaa !2742
  %tobool957 = trunc i8 %561 to i1, !dbg !5929
  br i1 %tobool957, label %cond.true959, label %cond.false961, !dbg !5929

cond.true959:                                     ; preds = %if.then951
  %562 = load i8*, i8** %dst_name.addr, align 8, !dbg !5931, !tbaa !2648
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !5932
  %call960 = call i32 @utimens_symlink(i8* %562, %struct.timespec* %arraydecay), !dbg !5933
  br label %cond.end964, !dbg !5929

cond.false961:                                    ; preds = %if.then951
  %563 = load i8*, i8** %dst_name.addr, align 8, !dbg !5934, !tbaa !2648
  %arraydecay962 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !5935
  %call963 = call i32 @utimens(i8* %563, %struct.timespec* %arraydecay962), !dbg !5936
  br label %cond.end964, !dbg !5929

cond.end964:                                      ; preds = %cond.false961, %cond.true959
  %cond965 = phi i32 [ %call960, %cond.true959 ], [ %call963, %cond.false961 ], !dbg !5929
  %cmp966 = icmp ne i32 %cond965, 0, !dbg !5937
  br i1 %cmp966, label %if.then968, label %if.end976, !dbg !5938

if.then968:                                       ; preds = %cond.end964
  %call969 = call i32* @__errno_location() #16, !dbg !5939
  %564 = load i32, i32* %call969, align 4, !dbg !5939, !tbaa !2635, !ctir !7
  %call970 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.48.138, i64 0, i64 0)) #9, !dbg !5941
  %565 = load i8*, i8** %dst_name.addr, align 8, !dbg !5942, !tbaa !2648
  %call971 = call i8* @quotearg_style(i32 4, i8* %565), !dbg !5942
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %564, i8* %call970, i8* %call971), !dbg !5943
  %566 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5944, !tbaa !2648
  %require_preserve972 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %566, i32 0, i32 21, !dbg !5946, !ctir !357
  %567 = load i8, i8* %require_preserve972, align 4, !dbg !5946, !tbaa !3206
  %tobool973 = trunc i8 %567 to i1, !dbg !5946, !ctir !142
  br i1 %tobool973, label %if.then974, label %if.end975, !dbg !5947

if.then974:                                       ; preds = %if.then968
  store i1 false, i1* %retval, align 1, !dbg !5948
  br label %return, !dbg !5948

if.end975:                                        ; preds = %if.then968
  br label %if.end976, !dbg !5949

if.end976:                                        ; preds = %if.end975, %cond.end964
  br label %if.end977, !dbg !5950

if.end977:                                        ; preds = %if.end976, %if.end948
  %568 = load i8, i8* %dest_is_symlink, align 1, !dbg !5951, !tbaa !2742
  %tobool978 = trunc i8 %568 to i1, !dbg !5951
  br i1 %tobool978, label %if.end1001, label %land.lhs.true979, !dbg !5953

land.lhs.true979:                                 ; preds = %if.end977
  %569 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5954, !tbaa !2648
  %preserve_ownership980 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %569, i32 0, i32 14, !dbg !5955, !ctir !357
  %570 = load i8, i8* %preserve_ownership980, align 1, !dbg !5955, !tbaa !3179
  %tobool981 = trunc i8 %570 to i1, !dbg !5955, !ctir !142
  br i1 %tobool981, label %land.lhs.true983, label %if.end1001, !dbg !5956

land.lhs.true983:                                 ; preds = %land.lhs.true979
  %571 = load i8, i8* %new_dst.addr, align 1, !dbg !5957, !tbaa !2742
  %tobool984 = trunc i8 %571 to i1, !dbg !5957
  br i1 %tobool984, label %if.then996, label %lor.lhs.false986, !dbg !5958

lor.lhs.false986:                                 ; preds = %land.lhs.true983
  %st_uid987 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 4, !dbg !5959, !ctir !415
  %572 = load i32, i32* %st_uid987, align 4, !dbg !5959, !tbaa !4045, !ctir !128
  %st_uid988 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 4, !dbg !5959, !ctir !415
  %573 = load i32, i32* %st_uid988, align 4, !dbg !5959, !tbaa !4045, !ctir !128
  %cmp989 = icmp eq i32 %572, %573, !dbg !5959
  br i1 %cmp989, label %land.lhs.true991, label %if.then996, !dbg !5959

land.lhs.true991:                                 ; preds = %lor.lhs.false986
  %st_gid992 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 5, !dbg !5959, !ctir !415
  %574 = load i32, i32* %st_gid992, align 8, !dbg !5959, !tbaa !4074, !ctir !130
  %st_gid993 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 5, !dbg !5959, !ctir !415
  %575 = load i32, i32* %st_gid993, align 8, !dbg !5959, !tbaa !4074, !ctir !130
  %cmp994 = icmp eq i32 %574, %575, !dbg !5959
  br i1 %cmp994, label %if.end1001, label %if.then996, !dbg !5960

if.then996:                                       ; preds = %land.lhs.true991, %lor.lhs.false986, %land.lhs.true983
  %576 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5961, !tbaa !2648
  %577 = load i8*, i8** %dst_name.addr, align 8, !dbg !5963, !tbaa !2648
  %578 = load i8, i8* %new_dst.addr, align 1, !dbg !5964, !tbaa !2742
  %tobool997 = trunc i8 %578 to i1, !dbg !5964
  %call998 = call i32 @set_owner(%struct.cp_options* %576, i8* %577, i32 -1, %struct.stat* %src_sb, i1 zeroext %tobool997, %struct.stat* %dst_sb), !dbg !5965
  switch i32 %call998, label %sw.epilog [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb999
  ], !dbg !5966

sw.bb:                                            ; preds = %if.then996
  store i1 false, i1* %retval, align 1, !dbg !5967
  br label %return, !dbg !5967

sw.bb999:                                         ; preds = %if.then996
  %579 = load i32, i32* %src_mode, align 4, !dbg !5969, !tbaa !2635
  %and1000 = and i32 %579, -3585, !dbg !5969
  store i32 %and1000, i32* %src_mode, align 4, !dbg !5969, !tbaa !2635
  br label %sw.epilog, !dbg !5970

sw.epilog:                                        ; preds = %if.then996, %sw.bb999
  br label %if.end1001, !dbg !5971

if.end1001:                                       ; preds = %sw.epilog, %land.lhs.true991, %land.lhs.true979, %if.end977
  %580 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5972, !tbaa !2648
  %preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %580, i32 0, i32 24, !dbg !5974, !ctir !357
  %581 = load i8, i8* %preserve_xattr, align 1, !dbg !5974, !tbaa !3259
  %tobool1002 = trunc i8 %581 to i1, !dbg !5974, !ctir !142
  br i1 %tobool1002, label %land.lhs.true1004, label %if.end1010, !dbg !5975

land.lhs.true1004:                                ; preds = %if.end1001
  %582 = load i8*, i8** %src_name.addr, align 8, !dbg !5976, !tbaa !2648
  %583 = load i8*, i8** %dst_name.addr, align 8, !dbg !5977, !tbaa !2648
  %584 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5978, !tbaa !2648
  %call1005 = call zeroext i1 @copy_attr(i8* %582, i32 -1, i8* %583, i32 -1, %struct.cp_options* %584), !dbg !5979
  br i1 %call1005, label %if.end1010, label %land.lhs.true1006, !dbg !5980

land.lhs.true1006:                                ; preds = %land.lhs.true1004
  %585 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5981, !tbaa !2648
  %require_preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %585, i32 0, i32 25, !dbg !5982, !ctir !357
  %586 = load i8, i8* %require_preserve_xattr, align 8, !dbg !5982, !tbaa !3210
  %tobool1007 = trunc i8 %586 to i1, !dbg !5982, !ctir !142
  br i1 %tobool1007, label %if.then1009, label %if.end1010, !dbg !5983

if.then1009:                                      ; preds = %land.lhs.true1006
  store i1 false, i1* %retval, align 1, !dbg !5984
  br label %return, !dbg !5984

if.end1010:                                       ; preds = %land.lhs.true1006, %land.lhs.true1004, %if.end1001
  %587 = load i8, i8* %dest_is_symlink, align 1, !dbg !5985, !tbaa !2742
  %tobool1011 = trunc i8 %587 to i1, !dbg !5985
  br i1 %tobool1011, label %if.then1012, label %if.end1014, !dbg !5987

if.then1012:                                      ; preds = %if.end1010
  %588 = load i8, i8* %delayed_ok, align 1, !dbg !5988, !tbaa !2742
  %tobool1013 = trunc i8 %588 to i1, !dbg !5988
  store i1 %tobool1013, i1* %retval, align 1, !dbg !5989
  br label %return, !dbg !5989

if.end1014:                                       ; preds = %if.end1010
  %589 = load i8*, i8** %dst_name.addr, align 8, !dbg !5990, !tbaa !2648
  call void @set_author(i8* %589, i32 -1, %struct.stat* %src_sb), !dbg !5991
  %590 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5992, !tbaa !2648
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %590, i32 0, i32 15, !dbg !5994, !ctir !357
  %591 = load i8, i8* %preserve_mode, align 2, !dbg !5994, !tbaa !3187
  %tobool1015 = trunc i8 %591 to i1, !dbg !5994, !ctir !142
  br i1 %tobool1015, label %if.then1021, label %lor.lhs.false1017, !dbg !5995

lor.lhs.false1017:                                ; preds = %if.end1014
  %592 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5996, !tbaa !2648
  %move_mode1018 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %592, i32 0, i32 9, !dbg !5997, !ctir !357
  %593 = load i8, i8* %move_mode1018, align 8, !dbg !5997, !tbaa !3167
  %tobool1019 = trunc i8 %593 to i1, !dbg !5997, !ctir !142
  br i1 %tobool1019, label %if.then1021, label %if.else1031, !dbg !5998

if.then1021:                                      ; preds = %lor.lhs.false1017, %if.end1014
  %594 = load i8*, i8** %src_name.addr, align 8, !dbg !5999, !tbaa !2648
  %595 = load i8*, i8** %dst_name.addr, align 8, !dbg !6002, !tbaa !2648
  %596 = load i32, i32* %src_mode, align 4, !dbg !6003, !tbaa !2635
  %call1022 = call i32 @copy_acl(i8* %594, i32 -1, i8* %595, i32 -1, i32 %596), !dbg !6004
  %cmp1023 = icmp ne i32 %call1022, 0, !dbg !6005
  br i1 %cmp1023, label %land.lhs.true1025, label %if.end1030, !dbg !6006

land.lhs.true1025:                                ; preds = %if.then1021
  %597 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6007, !tbaa !2648
  %require_preserve1026 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %597, i32 0, i32 21, !dbg !6008, !ctir !357
  %598 = load i8, i8* %require_preserve1026, align 4, !dbg !6008, !tbaa !3206
  %tobool1027 = trunc i8 %598 to i1, !dbg !6008, !ctir !142
  br i1 %tobool1027, label %if.then1029, label %if.end1030, !dbg !6009

if.then1029:                                      ; preds = %land.lhs.true1025
  store i1 false, i1* %retval, align 1, !dbg !6010
  br label %return, !dbg !6010

if.end1030:                                       ; preds = %land.lhs.true1025, %if.then1021
  br label %if.end1112, !dbg !6011

if.else1031:                                      ; preds = %lor.lhs.false1017
  %599 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6012, !tbaa !2648
  %set_mode1032 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %599, i32 0, i32 28, !dbg !6014, !ctir !357
  %600 = load i8, i8* %set_mode1032, align 1, !dbg !6014, !tbaa !3229
  %tobool1033 = trunc i8 %600 to i1, !dbg !6014, !ctir !142
  br i1 %tobool1033, label %if.then1034, label %if.else1041, !dbg !6015

if.then1034:                                      ; preds = %if.else1031
  %601 = load i8*, i8** %dst_name.addr, align 8, !dbg !6016, !tbaa !2648
  %602 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6019, !tbaa !2648
  %mode1035 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %602, i32 0, i32 4, !dbg !6020, !ctir !357
  %603 = load i32, i32* %mode1035, align 8, !dbg !6020, !tbaa !3233, !ctir !139
  %call1036 = call i32 @set_acl(i8* %601, i32 -1, i32 %603), !dbg !6021
  %cmp1037 = icmp ne i32 %call1036, 0, !dbg !6022
  br i1 %cmp1037, label %if.then1039, label %if.end1040, !dbg !6023

if.then1039:                                      ; preds = %if.then1034
  store i1 false, i1* %retval, align 1, !dbg !6024
  br label %return, !dbg !6024

if.end1040:                                       ; preds = %if.then1034
  br label %if.end1111, !dbg !6025

if.else1041:                                      ; preds = %if.else1031
  %604 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6026, !tbaa !2648
  %explicit_no_preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %604, i32 0, i32 17, !dbg !6028, !ctir !357
  %605 = load i8, i8* %explicit_no_preserve_mode, align 8, !dbg !6028, !tbaa !3194
  %tobool1042 = trunc i8 %605 to i1, !dbg !6028, !ctir !142
  br i1 %tobool1042, label %land.lhs.true1044, label %if.else1065, !dbg !6029

land.lhs.true1044:                                ; preds = %if.else1041
  %606 = load i8, i8* %new_dst.addr, align 1, !dbg !6030, !tbaa !2742
  %tobool1045 = trunc i8 %606 to i1, !dbg !6030
  br i1 %tobool1045, label %if.then1047, label %if.else1065, !dbg !6031

if.then1047:                                      ; preds = %land.lhs.true1044
  call void @llvm.dbg.declare(metadata i32* %default_permissions, metadata !6032, metadata !DIExpression()), !dbg !6034
  %607 = load i32, i32* %src_mode, align 4, !dbg !6035, !tbaa !2635
  %and1048 = and i32 %607, 61440, !dbg !6035
  %cmp1049 = icmp eq i32 %and1048, 16384, !dbg !6035
  br i1 %cmp1049, label %lor.end1055, label %lor.rhs1051, !dbg !6036

lor.rhs1051:                                      ; preds = %if.then1047
  %608 = load i32, i32* %src_mode, align 4, !dbg !6037, !tbaa !2635
  %and1052 = and i32 %608, 61440, !dbg !6037
  %cmp1053 = icmp eq i32 %and1052, 49152, !dbg !6037
  br label %lor.end1055, !dbg !6036

lor.end1055:                                      ; preds = %lor.rhs1051, %if.then1047
  %609 = phi i1 [ true, %if.then1047 ], [ %cmp1053, %lor.rhs1051 ]
  %610 = zext i1 %609 to i64, !dbg !6035
  %cond1056 = select i1 %609, i32 511, i32 438, !dbg !6035
  store i32 %cond1056, i32* %default_permissions, align 4, !dbg !6034, !tbaa !2635
  %611 = load i8*, i8** %dst_name.addr, align 8, !dbg !6038, !tbaa !2648
  %612 = load i32, i32* %default_permissions, align 4, !dbg !6040, !tbaa !2635
  %call1057 = call i32 @cached_umask(), !dbg !6041
  %neg1058 = xor i32 %call1057, -1, !dbg !6042
  %and1059 = and i32 %612, %neg1058, !dbg !6043
  %call1060 = call i32 @set_acl(i8* %611, i32 -1, i32 %and1059), !dbg !6044
  %cmp1061 = icmp ne i32 %call1060, 0, !dbg !6045
  br i1 %cmp1061, label %if.then1063, label %if.end1064, !dbg !6046

if.then1063:                                      ; preds = %lor.end1055
  store i1 false, i1* %retval, align 1, !dbg !6047
  br label %return, !dbg !6047

if.end1064:                                       ; preds = %lor.end1055
  br label %if.end1110, !dbg !6048

if.else1065:                                      ; preds = %land.lhs.true1044, %if.else1041
  %613 = load i32, i32* %omitted_permissions, align 4, !dbg !6049, !tbaa !2635
  %tobool1066 = icmp ne i32 %613, 0, !dbg !6049
  br i1 %tobool1066, label %if.then1067, label %if.end1093, !dbg !6052

if.then1067:                                      ; preds = %if.else1065
  %call1068 = call i32 @cached_umask(), !dbg !6053
  %neg1069 = xor i32 %call1068, -1, !dbg !6055
  %614 = load i32, i32* %omitted_permissions, align 4, !dbg !6056, !tbaa !2635
  %and1070 = and i32 %614, %neg1069, !dbg !6056
  store i32 %and1070, i32* %omitted_permissions, align 4, !dbg !6056, !tbaa !2635
  %615 = load i32, i32* %omitted_permissions, align 4, !dbg !6057, !tbaa !2635
  %tobool1071 = icmp ne i32 %615, 0, !dbg !6057
  br i1 %tobool1071, label %land.lhs.true1072, label %if.end1092, !dbg !6059

land.lhs.true1072:                                ; preds = %if.then1067
  %616 = load i8, i8* %restore_dst_mode, align 1, !dbg !6060, !tbaa !2742
  %tobool1073 = trunc i8 %616 to i1, !dbg !6060
  br i1 %tobool1073, label %if.end1092, label %if.then1074, !dbg !6061

if.then1074:                                      ; preds = %land.lhs.true1072
  %617 = load i8, i8* %new_dst.addr, align 1, !dbg !6062, !tbaa !2742
  %tobool1075 = trunc i8 %617 to i1, !dbg !6062
  br i1 %tobool1075, label %land.lhs.true1077, label %if.end1085, !dbg !6065

land.lhs.true1077:                                ; preds = %if.then1074
  %618 = load i8*, i8** %dst_name.addr, align 8, !dbg !6066, !tbaa !2648
  %call1078 = call i32 @lstat(i8* %618, %struct.stat* %dst_sb) #9, !dbg !6067
  %cmp1079 = icmp ne i32 %call1078, 0, !dbg !6068
  br i1 %cmp1079, label %if.then1081, label %if.end1085, !dbg !6069

if.then1081:                                      ; preds = %land.lhs.true1077
  %call1082 = call i32* @__errno_location() #16, !dbg !6070
  %619 = load i32, i32* %call1082, align 4, !dbg !6070, !tbaa !2635, !ctir !7
  %call1083 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.102, i64 0, i64 0)) #9, !dbg !6072
  %620 = load i8*, i8** %dst_name.addr, align 8, !dbg !6073, !tbaa !2648
  %call1084 = call i8* @quotearg_style(i32 4, i8* %620), !dbg !6073
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %619, i8* %call1083, i8* %call1084), !dbg !6074
  store i1 false, i1* %retval, align 1, !dbg !6075
  br label %return, !dbg !6075

if.end1085:                                       ; preds = %land.lhs.true1077, %if.then1074
  %st_mode1086 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !6076, !ctir !415
  %621 = load i32, i32* %st_mode1086, align 8, !dbg !6076, !tbaa !2914, !ctir !140
  store i32 %621, i32* %dst_mode, align 4, !dbg !6077, !tbaa !2635
  %622 = load i32, i32* %omitted_permissions, align 4, !dbg !6078, !tbaa !2635
  %623 = load i32, i32* %dst_mode, align 4, !dbg !6080, !tbaa !2635
  %neg1087 = xor i32 %623, -1, !dbg !6081
  %and1088 = and i32 %622, %neg1087, !dbg !6082
  %tobool1089 = icmp ne i32 %and1088, 0, !dbg !6082
  br i1 %tobool1089, label %if.then1090, label %if.end1091, !dbg !6083

if.then1090:                                      ; preds = %if.end1085
  store i8 1, i8* %restore_dst_mode, align 1, !dbg !6084, !tbaa !2742
  br label %if.end1091, !dbg !6085

if.end1091:                                       ; preds = %if.then1090, %if.end1085
  br label %if.end1092, !dbg !6086

if.end1092:                                       ; preds = %if.end1091, %land.lhs.true1072, %if.then1067
  br label %if.end1093, !dbg !6087

if.end1093:                                       ; preds = %if.end1092, %if.else1065
  %624 = load i8, i8* %restore_dst_mode, align 1, !dbg !6088, !tbaa !2742
  %tobool1094 = trunc i8 %624 to i1, !dbg !6088
  br i1 %tobool1094, label %if.then1095, label %if.end1109, !dbg !6090

if.then1095:                                      ; preds = %if.end1093
  %625 = load i8*, i8** %dst_name.addr, align 8, !dbg !6091, !tbaa !2648
  %626 = load i32, i32* %dst_mode, align 4, !dbg !6094, !tbaa !2635
  %627 = load i32, i32* %omitted_permissions, align 4, !dbg !6095, !tbaa !2635
  %or1096 = or i32 %626, %627, !dbg !6096
  %call1097 = call i32 @chmod(i8* %625, i32 %or1096) #9, !dbg !6097
  %cmp1098 = icmp ne i32 %call1097, 0, !dbg !6098
  br i1 %cmp1098, label %if.then1100, label %if.end1108, !dbg !6099

if.then1100:                                      ; preds = %if.then1095
  %call1101 = call i32* @__errno_location() #16, !dbg !6100
  %628 = load i32, i32* %call1101, align 4, !dbg !6100, !tbaa !2635, !ctir !7
  %call1102 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.49.139, i64 0, i64 0)) #9, !dbg !6102
  %629 = load i8*, i8** %dst_name.addr, align 8, !dbg !6103, !tbaa !2648
  %call1103 = call i8* @quotearg_style(i32 4, i8* %629), !dbg !6103
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %628, i8* %call1102, i8* %call1103), !dbg !6104
  %630 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6105, !tbaa !2648
  %require_preserve1104 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %630, i32 0, i32 21, !dbg !6107, !ctir !357
  %631 = load i8, i8* %require_preserve1104, align 4, !dbg !6107, !tbaa !3206
  %tobool1105 = trunc i8 %631 to i1, !dbg !6107, !ctir !142
  br i1 %tobool1105, label %if.then1106, label %if.end1107, !dbg !6108

if.then1106:                                      ; preds = %if.then1100
  store i1 false, i1* %retval, align 1, !dbg !6109
  br label %return, !dbg !6109

if.end1107:                                       ; preds = %if.then1100
  br label %if.end1108, !dbg !6110

if.end1108:                                       ; preds = %if.end1107, %if.then1095
  br label %if.end1109, !dbg !6111

if.end1109:                                       ; preds = %if.end1108, %if.end1093
  br label %if.end1110

if.end1110:                                       ; preds = %if.end1109, %if.end1064
  br label %if.end1111

if.end1111:                                       ; preds = %if.end1110, %if.end1040
  br label %if.end1112

if.end1112:                                       ; preds = %if.end1111, %if.end1030
  %632 = load i8, i8* %delayed_ok, align 1, !dbg !6112, !tbaa !2742
  %tobool1113 = trunc i8 %632 to i1, !dbg !6112
  store i1 %tobool1113, i1* %retval, align 1, !dbg !6113
  br label %return, !dbg !6113

un_backup:                                        ; preds = %if.then918, %if.else885, %if.then880, %if.then860, %if.then820, %if.then807, %if.then783, %if.then764, %if.then747, %if.then725, %if.then715, %if.then664, %if.then628, %if.then616, %if.then609, %if.then593, %if.then486, %if.else474, %if.then450, %if.then160
  call void @llvm.dbg.label(metadata !6114), !dbg !6115
  %633 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6116, !tbaa !2648
  %preserve_security_context1114 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %633, i32 0, i32 22, !dbg !6118, !ctir !357
  %634 = load i8, i8* %preserve_security_context1114, align 1, !dbg !6118, !tbaa !2850
  %tobool1115 = trunc i8 %634 to i1, !dbg !6118, !ctir !142
  br i1 %tobool1115, label %if.then1116, label %if.end1117, !dbg !6119

if.then1116:                                      ; preds = %un_backup
  call void @restore_default_fscreatecon_or_die(), !dbg !6120
  br label %if.end1117, !dbg !6120

if.end1117:                                       ; preds = %if.then1116, %un_backup
  %635 = load i8*, i8** %earlier_file, align 8, !dbg !6121, !tbaa !2648
  %cmp1118 = icmp eq i8* %635, null, !dbg !6123
  br i1 %cmp1118, label %if.then1120, label %if.end1123, !dbg !6124

if.then1120:                                      ; preds = %if.end1117
  %st_ino1121 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !6125, !ctir !415
  %636 = load i64, i64* %st_ino1121, align 8, !dbg !6125, !tbaa !4791, !ctir !276
  %st_dev1122 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !6126, !ctir !415
  %637 = load i64, i64* %st_dev1122, align 8, !dbg !6126, !tbaa !4770, !ctir !274
  call void @forget_created(i64 %636, i64 %637), !dbg !6127
  br label %if.end1123, !dbg !6127

if.end1123:                                       ; preds = %if.then1120, %if.end1117
  %638 = load i8*, i8** %dst_backup, align 8, !dbg !6128, !tbaa !2648
  %tobool1124 = icmp ne i8* %638, null, !dbg !6128
  br i1 %tobool1124, label %if.then1125, label %if.end1143, !dbg !6130

if.then1125:                                      ; preds = %if.end1123
  %639 = load i8*, i8** %dst_backup, align 8, !dbg !6131, !tbaa !2648
  %640 = load i8*, i8** %dst_name.addr, align 8, !dbg !6134, !tbaa !2648
  %call1126 = call i32 @rename(i8* %639, i8* %640) #9, !dbg !6135
  %cmp1127 = icmp ne i32 %call1126, 0, !dbg !6136
  br i1 %cmp1127, label %if.then1129, label %if.else1133, !dbg !6137

if.then1129:                                      ; preds = %if.then1125
  %call1130 = call i32* @__errno_location() #16, !dbg !6138
  %641 = load i32, i32* %call1130, align 4, !dbg !6138, !tbaa !2635, !ctir !7
  %call1131 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.50.140, i64 0, i64 0)) #9, !dbg !6139
  %642 = load i8*, i8** %dst_name.addr, align 8, !dbg !6140, !tbaa !2648
  %call1132 = call i8* @quotearg_style(i32 4, i8* %642), !dbg !6140
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %641, i8* %call1131, i8* %call1132), !dbg !6141
  br label %if.end1142, !dbg !6141

if.else1133:                                      ; preds = %if.then1125
  %643 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6142, !tbaa !2648
  %verbose1134 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %643, i32 0, i32 31, !dbg !6145, !ctir !357
  %644 = load i8, i8* %verbose1134, align 2, !dbg !6145, !tbaa !2812
  %tobool1135 = trunc i8 %644 to i1, !dbg !6145, !ctir !142
  br i1 %tobool1135, label %if.then1136, label %if.end1141, !dbg !6146

if.then1136:                                      ; preds = %if.else1133
  %call1137 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.51.141, i64 0, i64 0)) #9, !dbg !6147
  %645 = load i8*, i8** %dst_backup, align 8, !dbg !6148, !tbaa !2648
  %call1138 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %645), !dbg !6148
  %646 = load i8*, i8** %dst_name.addr, align 8, !dbg !6149, !tbaa !2648
  %call1139 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %646), !dbg !6149
  %call1140 = call i32 (i8*, ...) @printf(i8* %call1137, i8* %call1138, i8* %call1139), !dbg !6150
  br label %if.end1141, !dbg !6150

if.end1141:                                       ; preds = %if.then1136, %if.else1133
  br label %if.end1142

if.end1142:                                       ; preds = %if.end1141, %if.then1129
  br label %if.end1143, !dbg !6151

if.end1143:                                       ; preds = %if.end1142, %if.end1123
  store i1 false, i1* %retval, align 1, !dbg !6152
  br label %return, !dbg !6152

return:                                           ; preds = %if.end1143, %if.end1112, %if.then1106, %if.then1081, %if.then1063, %if.then1039, %if.then1029, %if.then1012, %if.then1009, %sw.bb, %if.then974, %if.then946, %if.then942, %if.then587, %if.then552, %if.then533, %if.then527, %if.end524, %if.end487, %if.end464, %if.then374, %if.then330, %if.then297, %cond.end284, %if.then254, %if.else235, %if.then216, %if.else204, %if.then189, %if.then185, %if.end172, %if.end162, %if.then129, %if.then114, %if.then59, %cond.end43, %if.then30
  %647 = load i1, i1* %retval, align 1, !dbg !6153
  ret i1 %647, !dbg !6153
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @follow_fstatat(i32 %dirfd, i8* %filename, %struct.stat* %st, i32 %flags) #4 !dbg !6154 !ctir !446 {
entry:
  %dirfd.addr = alloca i32, align 4
  %filename.addr = alloca i8*, align 8
  %st.addr = alloca %struct.stat*, align 8
  %flags.addr = alloca i32, align 4
  %result = alloca i32, align 4, !ctir !7
  store i32 %dirfd, i32* %dirfd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %dirfd.addr, metadata !6155, metadata !DIExpression()), !dbg !6156
  store i8* %filename, i8** %filename.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !6157, metadata !DIExpression()), !dbg !6158
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !6159, metadata !DIExpression()), !dbg !6160
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6161, metadata !DIExpression()), !dbg !6162
  call void @llvm.dbg.declare(metadata i32* %result, metadata !6163, metadata !DIExpression()), !dbg !6164
  %0 = load i32, i32* %dirfd.addr, align 4, !dbg !6165, !tbaa !2635
  %1 = load i8*, i8** %filename.addr, align 8, !dbg !6166, !tbaa !2648
  %2 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !6167, !tbaa !2648
  %3 = load i32, i32* %flags.addr, align 4, !dbg !6168, !tbaa !2635
  %call = call i32 @fstatat(i32 %0, i8* %1, %struct.stat* %2, i32 %3) #9, !dbg !6169
  store i32 %call, i32* %result, align 4, !dbg !6164, !tbaa !2635
  %4 = load i32, i32* %result, align 4, !dbg !6170, !tbaa !2635
  ret i32 %4, !dbg !6171
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @should_dereference(%struct.cp_options* %x, i1 zeroext %command_line_arg) #10 !dbg !6172 !ctir !448 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  %command_line_arg.addr = alloca i8, align 1
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6173, metadata !DIExpression()), !dbg !6174
  %frombool = zext i1 %command_line_arg to i8
  store i8 %frombool, i8* %command_line_arg.addr, align 1, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !6175, metadata !DIExpression()), !dbg !6176
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6177, !tbaa !2648
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 1, !dbg !6178, !ctir !357
  %1 = load i32, i32* %dereference, align 4, !dbg !6178, !tbaa !3147, !ctir !76
  %cmp = icmp eq i32 %1, 4, !dbg !6179
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !6180

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6181, !tbaa !2648
  %dereference1 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 1, !dbg !6182, !ctir !357
  %3 = load i32, i32* %dereference1, align 4, !dbg !6182, !tbaa !3147, !ctir !76
  %cmp2 = icmp eq i32 %3, 3, !dbg !6183
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !6184

land.rhs:                                         ; preds = %lor.rhs
  %4 = load i8, i8* %command_line_arg.addr, align 1, !dbg !6185, !tbaa !2742
  %tobool = trunc i8 %4 to i1, !dbg !6185
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %5 = phi i1 [ false, %lor.rhs ], [ %tobool, %land.rhs ], !dbg !6186
  br label %lor.end, !dbg !6180

lor.end:                                          ; preds = %land.end, %entry
  %6 = phi i1 [ true, %entry ], [ %5, %land.end ]
  ret i1 %6, !dbg !6187
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @same_file_ok(i8* %src_name, %struct.stat* %src_sb, i8* %dst_name, %struct.stat* %dst_sb, %struct.cp_options* %x, i8* %return_now) #4 !dbg !6188 !ctir !450 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %src_sb.addr = alloca %struct.stat*, align 8
  %dst_name.addr = alloca i8*, align 8
  %dst_sb.addr = alloca %struct.stat*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %return_now.addr = alloca i8*, align 8
  %src_sb_link = alloca %struct.stat*, align 8, !ctir !413
  %dst_sb_link = alloca %struct.stat*, align 8, !ctir !413
  %tmp_dst_sb = alloca %struct.stat, align 8, !ctir !415
  %tmp_src_sb = alloca %struct.stat, align 8, !ctir !415
  %same_link = alloca i8, align 1, !ctir !142
  %same = alloca i8, align 1, !ctir !142
  %sn = alloca i8, align 1, !ctir !142
  %abs_src = alloca i8*, align 8, !ctir !9
  %result = alloca i8, align 1, !ctir !142
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !6189, metadata !DIExpression()), !dbg !6190
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !6191, metadata !DIExpression()), !dbg !6192
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6193, metadata !DIExpression()), !dbg !6194
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !6195, metadata !DIExpression()), !dbg !6196
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6197, metadata !DIExpression()), !dbg !6198
  store i8* %return_now, i8** %return_now.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %return_now.addr, metadata !6199, metadata !DIExpression()), !dbg !6200
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb_link, metadata !6201, metadata !DIExpression()), !dbg !6202
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb_link, metadata !6203, metadata !DIExpression()), !dbg !6204
  call void @llvm.dbg.declare(metadata %struct.stat* %tmp_dst_sb, metadata !6205, metadata !DIExpression()), !dbg !6206
  call void @llvm.dbg.declare(metadata %struct.stat* %tmp_src_sb, metadata !6207, metadata !DIExpression()), !dbg !6208
  call void @llvm.dbg.declare(metadata i8* %same_link, metadata !6209, metadata !DIExpression()), !dbg !6210
  call void @llvm.dbg.declare(metadata i8* %same, metadata !6211, metadata !DIExpression()), !dbg !6212
  %0 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6213, !tbaa !2648
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 1, !dbg !6213, !ctir !414
  %1 = load i64, i64* %st_ino, align 8, !dbg !6213, !tbaa !4791, !ctir !276
  %2 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6213, !tbaa !2648
  %st_ino1 = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 1, !dbg !6213, !ctir !414
  %3 = load i64, i64* %st_ino1, align 8, !dbg !6213, !tbaa !4791, !ctir !276
  %cmp = icmp eq i64 %1, %3, !dbg !6213
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6213

land.rhs:                                         ; preds = %entry
  %4 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6213, !tbaa !2648
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 0, !dbg !6213, !ctir !414
  %5 = load i64, i64* %st_dev, align 8, !dbg !6213, !tbaa !4770, !ctir !274
  %6 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6213, !tbaa !2648
  %st_dev2 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 0, !dbg !6213, !ctir !414
  %7 = load i64, i64* %st_dev2, align 8, !dbg !6213, !tbaa !4770, !ctir !274
  %cmp3 = icmp eq i64 %5, %7, !dbg !6213
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %8 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !6214
  %frombool = zext i1 %8 to i8, !dbg !6212
  store i8 %frombool, i8* %same, align 1, !dbg !6212, !tbaa !2742
  %9 = load i8*, i8** %return_now.addr, align 8, !dbg !6215, !tbaa !2648
  store i8 0, i8* %9, align 1, !dbg !6216, !tbaa !2742, !ctir !142
  %10 = load i8, i8* %same, align 1, !dbg !6217, !tbaa !2742
  %tobool = trunc i8 %10 to i1, !dbg !6217
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6219

land.lhs.true:                                    ; preds = %land.end
  %11 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6220, !tbaa !2648
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 8, !dbg !6221, !ctir !357
  %12 = load i8, i8* %hard_link, align 1, !dbg !6221, !tbaa !3159
  %tobool4 = trunc i8 %12 to i1, !dbg !6221, !ctir !142
  br i1 %tobool4, label %if.then, label %if.end, !dbg !6222

if.then:                                          ; preds = %land.lhs.true
  %13 = load i8*, i8** %return_now.addr, align 8, !dbg !6223, !tbaa !2648
  store i8 1, i8* %13, align 1, !dbg !6225, !tbaa !2742, !ctir !142
  store i1 true, i1* %retval, align 1, !dbg !6226
  br label %return, !dbg !6226

if.end:                                           ; preds = %land.lhs.true, %land.end
  %14 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6227, !tbaa !2648
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %14, i32 0, i32 1, !dbg !6229, !ctir !357
  %15 = load i32, i32* %dereference, align 4, !dbg !6229, !tbaa !3147, !ctir !76
  %cmp5 = icmp eq i32 %15, 2, !dbg !6230
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !6231

if.then6:                                         ; preds = %if.end
  %16 = load i8, i8* %same, align 1, !dbg !6232, !tbaa !2742
  %tobool7 = trunc i8 %16 to i1, !dbg !6232
  %frombool8 = zext i1 %tobool7 to i8, !dbg !6234
  store i8 %frombool8, i8* %same_link, align 1, !dbg !6234, !tbaa !2742
  %17 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6235, !tbaa !2648
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 3, !dbg !6235, !ctir !414
  %18 = load i32, i32* %st_mode, align 8, !dbg !6235, !tbaa !2914, !ctir !140
  %and = and i32 %18, 61440, !dbg !6235
  %cmp9 = icmp eq i32 %and, 40960, !dbg !6235
  br i1 %cmp9, label %land.lhs.true10, label %if.end28, !dbg !6237

land.lhs.true10:                                  ; preds = %if.then6
  %19 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6238, !tbaa !2648
  %st_mode11 = getelementptr inbounds %struct.stat, %struct.stat* %19, i32 0, i32 3, !dbg !6238, !ctir !414
  %20 = load i32, i32* %st_mode11, align 8, !dbg !6238, !tbaa !2914, !ctir !140
  %and12 = and i32 %20, 61440, !dbg !6238
  %cmp13 = icmp eq i32 %and12, 40960, !dbg !6238
  br i1 %cmp13, label %if.then14, label %if.end28, !dbg !6239

if.then14:                                        ; preds = %land.lhs.true10
  call void @llvm.dbg.declare(metadata i8* %sn, metadata !6240, metadata !DIExpression()), !dbg !6242
  %21 = load i8*, i8** %src_name.addr, align 8, !dbg !6243, !tbaa !2648
  %22 = load i8*, i8** %dst_name.addr, align 8, !dbg !6244, !tbaa !2648
  %call = call zeroext i1 @same_name(i8* %21, i8* %22), !dbg !6245
  %frombool15 = zext i1 %call to i8, !dbg !6242
  store i8 %frombool15, i8* %sn, align 1, !dbg !6242, !tbaa !2742
  %23 = load i8, i8* %sn, align 1, !dbg !6246, !tbaa !2742
  %tobool16 = trunc i8 %23 to i1, !dbg !6246
  br i1 %tobool16, label %if.end25, label %if.then17, !dbg !6248

if.then17:                                        ; preds = %if.then14
  %24 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6249, !tbaa !2648
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %24, i32 0, i32 0, !dbg !6252, !ctir !357
  %25 = load i32, i32* %backup_type, align 8, !dbg !6252, !tbaa !2927, !ctir !68
  %cmp18 = icmp ne i32 %25, 0, !dbg !6253
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !6254

if.then19:                                        ; preds = %if.then17
  store i1 true, i1* %retval, align 1, !dbg !6255
  br label %return, !dbg !6255

if.end20:                                         ; preds = %if.then17
  %26 = load i8, i8* %same_link, align 1, !dbg !6256, !tbaa !2742
  %tobool21 = trunc i8 %26 to i1, !dbg !6256
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !6258

if.then22:                                        ; preds = %if.end20
  %27 = load i8*, i8** %return_now.addr, align 8, !dbg !6259, !tbaa !2648
  store i8 1, i8* %27, align 1, !dbg !6261, !tbaa !2742, !ctir !142
  %28 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6262, !tbaa !2648
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %28, i32 0, i32 9, !dbg !6263, !ctir !357
  %29 = load i8, i8* %move_mode, align 8, !dbg !6263, !tbaa !3167
  %tobool23 = trunc i8 %29 to i1, !dbg !6263, !ctir !142
  %lnot = xor i1 %tobool23, true, !dbg !6264
  store i1 %lnot, i1* %retval, align 1, !dbg !6265
  br label %return, !dbg !6265

if.end24:                                         ; preds = %if.end20
  br label %if.end25, !dbg !6266

if.end25:                                         ; preds = %if.end24, %if.then14
  %30 = load i8, i8* %sn, align 1, !dbg !6267, !tbaa !2742
  %tobool26 = trunc i8 %30 to i1, !dbg !6267
  %lnot27 = xor i1 %tobool26, true, !dbg !6268
  store i1 %lnot27, i1* %retval, align 1, !dbg !6269
  br label %return, !dbg !6269

if.end28:                                         ; preds = %land.lhs.true10, %if.then6
  %31 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6270, !tbaa !2648
  store %struct.stat* %31, %struct.stat** %src_sb_link, align 8, !dbg !6271, !tbaa !2648
  %32 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6272, !tbaa !2648
  store %struct.stat* %32, %struct.stat** %dst_sb_link, align 8, !dbg !6273, !tbaa !2648
  br label %if.end58, !dbg !6274

if.else:                                          ; preds = %if.end
  %33 = load i8, i8* %same, align 1, !dbg !6275, !tbaa !2742
  %tobool29 = trunc i8 %33 to i1, !dbg !6275
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !6278

if.then30:                                        ; preds = %if.else
  store i1 true, i1* %retval, align 1, !dbg !6279
  br label %return, !dbg !6279

if.end31:                                         ; preds = %if.else
  %34 = load i8*, i8** %dst_name.addr, align 8, !dbg !6280, !tbaa !2648
  %call32 = call i32 @lstat(i8* %34, %struct.stat* %tmp_dst_sb) #9, !dbg !6282
  %cmp33 = icmp ne i32 %call32, 0, !dbg !6283
  br i1 %cmp33, label %if.then36, label %lor.lhs.false, !dbg !6284

lor.lhs.false:                                    ; preds = %if.end31
  %35 = load i8*, i8** %src_name.addr, align 8, !dbg !6285, !tbaa !2648
  %call34 = call i32 @lstat(i8* %35, %struct.stat* %tmp_src_sb) #9, !dbg !6286
  %cmp35 = icmp ne i32 %call34, 0, !dbg !6287
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !6288

if.then36:                                        ; preds = %lor.lhs.false, %if.end31
  store i1 true, i1* %retval, align 1, !dbg !6289
  br label %return, !dbg !6289

if.end37:                                         ; preds = %lor.lhs.false
  store %struct.stat* %tmp_src_sb, %struct.stat** %src_sb_link, align 8, !dbg !6290, !tbaa !2648
  store %struct.stat* %tmp_dst_sb, %struct.stat** %dst_sb_link, align 8, !dbg !6291, !tbaa !2648
  %36 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6292, !tbaa !2648
  %st_ino38 = getelementptr inbounds %struct.stat, %struct.stat* %36, i32 0, i32 1, !dbg !6292, !ctir !414
  %37 = load i64, i64* %st_ino38, align 8, !dbg !6292, !tbaa !4791, !ctir !276
  %38 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6292, !tbaa !2648
  %st_ino39 = getelementptr inbounds %struct.stat, %struct.stat* %38, i32 0, i32 1, !dbg !6292, !ctir !414
  %39 = load i64, i64* %st_ino39, align 8, !dbg !6292, !tbaa !4791, !ctir !276
  %cmp40 = icmp eq i64 %37, %39, !dbg !6292
  br i1 %cmp40, label %land.rhs41, label %land.end45, !dbg !6292

land.rhs41:                                       ; preds = %if.end37
  %40 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6292, !tbaa !2648
  %st_dev42 = getelementptr inbounds %struct.stat, %struct.stat* %40, i32 0, i32 0, !dbg !6292, !ctir !414
  %41 = load i64, i64* %st_dev42, align 8, !dbg !6292, !tbaa !4770, !ctir !274
  %42 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6292, !tbaa !2648
  %st_dev43 = getelementptr inbounds %struct.stat, %struct.stat* %42, i32 0, i32 0, !dbg !6292, !ctir !414
  %43 = load i64, i64* %st_dev43, align 8, !dbg !6292, !tbaa !4770, !ctir !274
  %cmp44 = icmp eq i64 %41, %43, !dbg !6292
  br label %land.end45

land.end45:                                       ; preds = %land.rhs41, %if.end37
  %44 = phi i1 [ false, %if.end37 ], [ %cmp44, %land.rhs41 ], !dbg !6293
  %frombool46 = zext i1 %44 to i8, !dbg !6294
  store i8 %frombool46, i8* %same_link, align 1, !dbg !6294, !tbaa !2742
  %45 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6295, !tbaa !2648
  %st_mode47 = getelementptr inbounds %struct.stat, %struct.stat* %45, i32 0, i32 3, !dbg !6295, !ctir !414
  %46 = load i32, i32* %st_mode47, align 8, !dbg !6295, !tbaa !2914, !ctir !140
  %and48 = and i32 %46, 61440, !dbg !6295
  %cmp49 = icmp eq i32 %and48, 40960, !dbg !6295
  br i1 %cmp49, label %land.lhs.true50, label %if.end57, !dbg !6297

land.lhs.true50:                                  ; preds = %land.end45
  %47 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6298, !tbaa !2648
  %st_mode51 = getelementptr inbounds %struct.stat, %struct.stat* %47, i32 0, i32 3, !dbg !6298, !ctir !414
  %48 = load i32, i32* %st_mode51, align 8, !dbg !6298, !tbaa !2914, !ctir !140
  %and52 = and i32 %48, 61440, !dbg !6298
  %cmp53 = icmp eq i32 %and52, 40960, !dbg !6298
  br i1 %cmp53, label %land.lhs.true54, label %if.end57, !dbg !6299

land.lhs.true54:                                  ; preds = %land.lhs.true50
  %49 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6300, !tbaa !2648
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %49, i32 0, i32 6, !dbg !6301, !ctir !357
  %50 = load i8, i8* %unlink_dest_before_opening, align 1, !dbg !6301, !tbaa !3151
  %tobool55 = trunc i8 %50 to i1, !dbg !6301, !ctir !142
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !6302

if.then56:                                        ; preds = %land.lhs.true54
  store i1 true, i1* %retval, align 1, !dbg !6303
  br label %return, !dbg !6303

if.end57:                                         ; preds = %land.lhs.true54, %land.lhs.true50, %land.end45
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.end28
  %51 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6304, !tbaa !2648
  %backup_type59 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %51, i32 0, i32 0, !dbg !6306, !ctir !357
  %52 = load i32, i32* %backup_type59, align 8, !dbg !6306, !tbaa !2927, !ctir !68
  %cmp60 = icmp ne i32 %52, 0, !dbg !6307
  br i1 %cmp60, label %if.then61, label %if.end82, !dbg !6308

if.then61:                                        ; preds = %if.end58
  %53 = load i8, i8* %same_link, align 1, !dbg !6309, !tbaa !2742
  %tobool62 = trunc i8 %53 to i1, !dbg !6309
  br i1 %tobool62, label %if.end79, label %if.then63, !dbg !6312

if.then63:                                        ; preds = %if.then61
  %54 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6313, !tbaa !2648
  %move_mode64 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %54, i32 0, i32 9, !dbg !6316, !ctir !357
  %55 = load i8, i8* %move_mode64, align 8, !dbg !6316, !tbaa !3167
  %tobool65 = trunc i8 %55 to i1, !dbg !6316, !ctir !142
  br i1 %tobool65, label %if.end78, label %land.lhs.true66, !dbg !6317

land.lhs.true66:                                  ; preds = %if.then63
  %56 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6318, !tbaa !2648
  %dereference67 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %56, i32 0, i32 1, !dbg !6319, !ctir !357
  %57 = load i32, i32* %dereference67, align 4, !dbg !6319, !tbaa !3147, !ctir !76
  %cmp68 = icmp ne i32 %57, 2, !dbg !6320
  br i1 %cmp68, label %land.lhs.true69, label %if.end78, !dbg !6321

land.lhs.true69:                                  ; preds = %land.lhs.true66
  %58 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6322, !tbaa !2648
  %st_mode70 = getelementptr inbounds %struct.stat, %struct.stat* %58, i32 0, i32 3, !dbg !6322, !ctir !414
  %59 = load i32, i32* %st_mode70, align 8, !dbg !6322, !tbaa !2914, !ctir !140
  %and71 = and i32 %59, 61440, !dbg !6322
  %cmp72 = icmp eq i32 %and71, 40960, !dbg !6322
  br i1 %cmp72, label %land.lhs.true73, label %if.end78, !dbg !6323

land.lhs.true73:                                  ; preds = %land.lhs.true69
  %60 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6324, !tbaa !2648
  %st_mode74 = getelementptr inbounds %struct.stat, %struct.stat* %60, i32 0, i32 3, !dbg !6324, !ctir !414
  %61 = load i32, i32* %st_mode74, align 8, !dbg !6324, !tbaa !2914, !ctir !140
  %and75 = and i32 %61, 61440, !dbg !6324
  %cmp76 = icmp eq i32 %and75, 40960, !dbg !6324
  br i1 %cmp76, label %if.end78, label %if.then77, !dbg !6325

if.then77:                                        ; preds = %land.lhs.true73
  store i1 false, i1* %retval, align 1, !dbg !6326
  br label %return, !dbg !6326

if.end78:                                         ; preds = %land.lhs.true73, %land.lhs.true69, %land.lhs.true66, %if.then63
  store i1 true, i1* %retval, align 1, !dbg !6327
  br label %return, !dbg !6327

if.end79:                                         ; preds = %if.then61
  %62 = load i8*, i8** %src_name.addr, align 8, !dbg !6328, !tbaa !2648
  %63 = load i8*, i8** %dst_name.addr, align 8, !dbg !6329, !tbaa !2648
  %call80 = call zeroext i1 @same_name(i8* %62, i8* %63), !dbg !6330
  %lnot81 = xor i1 %call80, true, !dbg !6331
  store i1 %lnot81, i1* %retval, align 1, !dbg !6332
  br label %return, !dbg !6332

if.end82:                                         ; preds = %if.end58
  %64 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6333, !tbaa !2648
  %move_mode83 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %64, i32 0, i32 9, !dbg !6335, !ctir !357
  %65 = load i8, i8* %move_mode83, align 8, !dbg !6335, !tbaa !3167
  %tobool84 = trunc i8 %65 to i1, !dbg !6335, !ctir !142
  br i1 %tobool84, label %if.then88, label %lor.lhs.false85, !dbg !6336

lor.lhs.false85:                                  ; preds = %if.end82
  %66 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6337, !tbaa !2648
  %unlink_dest_before_opening86 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %66, i32 0, i32 6, !dbg !6338, !ctir !357
  %67 = load i8, i8* %unlink_dest_before_opening86, align 1, !dbg !6338, !tbaa !3151
  %tobool87 = trunc i8 %67 to i1, !dbg !6338, !ctir !142
  br i1 %tobool87, label %if.then88, label %if.end104, !dbg !6339

if.then88:                                        ; preds = %lor.lhs.false85, %if.end82
  %68 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6340, !tbaa !2648
  %st_mode89 = getelementptr inbounds %struct.stat, %struct.stat* %68, i32 0, i32 3, !dbg !6340, !ctir !414
  %69 = load i32, i32* %st_mode89, align 8, !dbg !6340, !tbaa !2914, !ctir !140
  %and90 = and i32 %69, 61440, !dbg !6340
  %cmp91 = icmp eq i32 %and90, 40960, !dbg !6340
  br i1 %cmp91, label %if.then92, label %if.end93, !dbg !6343

if.then92:                                        ; preds = %if.then88
  store i1 true, i1* %retval, align 1, !dbg !6344
  br label %return, !dbg !6344

if.end93:                                         ; preds = %if.then88
  %70 = load i8, i8* %same_link, align 1, !dbg !6345, !tbaa !2742
  %tobool94 = trunc i8 %70 to i1, !dbg !6345
  br i1 %tobool94, label %land.lhs.true95, label %if.end103, !dbg !6347

land.lhs.true95:                                  ; preds = %if.end93
  %71 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6348, !tbaa !2648
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %71, i32 0, i32 2, !dbg !6349, !ctir !414
  %72 = load i64, i64* %st_nlink, align 8, !dbg !6349, !tbaa !5028, !ctir !278
  %cmp96 = icmp ult i64 1, %72, !dbg !6350
  br i1 %cmp96, label %land.lhs.true97, label %if.end103, !dbg !6351

land.lhs.true97:                                  ; preds = %land.lhs.true95
  %73 = load i8*, i8** %src_name.addr, align 8, !dbg !6352, !tbaa !2648
  %74 = load i8*, i8** %dst_name.addr, align 8, !dbg !6353, !tbaa !2648
  %call98 = call zeroext i1 @same_name(i8* %73, i8* %74), !dbg !6354
  br i1 %call98, label %if.end103, label %if.then99, !dbg !6355

if.then99:                                        ; preds = %land.lhs.true97
  %75 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6356, !tbaa !2648
  %move_mode100 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %75, i32 0, i32 9, !dbg !6357, !ctir !357
  %76 = load i8, i8* %move_mode100, align 8, !dbg !6357, !tbaa !3167
  %tobool101 = trunc i8 %76 to i1, !dbg !6357, !ctir !142
  %lnot102 = xor i1 %tobool101, true, !dbg !6358
  store i1 %lnot102, i1* %retval, align 1, !dbg !6359
  br label %return, !dbg !6359

if.end103:                                        ; preds = %land.lhs.true97, %land.lhs.true95, %if.end93
  br label %if.end104, !dbg !6360

if.end104:                                        ; preds = %if.end103, %lor.lhs.false85
  %77 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6361, !tbaa !2648
  %st_mode105 = getelementptr inbounds %struct.stat, %struct.stat* %77, i32 0, i32 3, !dbg !6361, !ctir !414
  %78 = load i32, i32* %st_mode105, align 8, !dbg !6361, !tbaa !2914, !ctir !140
  %and106 = and i32 %78, 61440, !dbg !6361
  %cmp107 = icmp eq i32 %and106, 40960, !dbg !6361
  br i1 %cmp107, label %if.end126, label %land.lhs.true108, !dbg !6363

land.lhs.true108:                                 ; preds = %if.end104
  %79 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6364, !tbaa !2648
  %st_mode109 = getelementptr inbounds %struct.stat, %struct.stat* %79, i32 0, i32 3, !dbg !6364, !ctir !414
  %80 = load i32, i32* %st_mode109, align 8, !dbg !6364, !tbaa !2914, !ctir !140
  %and110 = and i32 %80, 61440, !dbg !6364
  %cmp111 = icmp eq i32 %and110, 40960, !dbg !6364
  br i1 %cmp111, label %if.end126, label %if.then112, !dbg !6365

if.then112:                                       ; preds = %land.lhs.true108
  %81 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6366, !tbaa !2648
  %st_ino113 = getelementptr inbounds %struct.stat, %struct.stat* %81, i32 0, i32 1, !dbg !6366, !ctir !414
  %82 = load i64, i64* %st_ino113, align 8, !dbg !6366, !tbaa !4791, !ctir !276
  %83 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6366, !tbaa !2648
  %st_ino114 = getelementptr inbounds %struct.stat, %struct.stat* %83, i32 0, i32 1, !dbg !6366, !ctir !414
  %84 = load i64, i64* %st_ino114, align 8, !dbg !6366, !tbaa !4791, !ctir !276
  %cmp115 = icmp eq i64 %82, %84, !dbg !6366
  br i1 %cmp115, label %land.lhs.true116, label %if.then120, !dbg !6366

land.lhs.true116:                                 ; preds = %if.then112
  %85 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6366, !tbaa !2648
  %st_dev117 = getelementptr inbounds %struct.stat, %struct.stat* %85, i32 0, i32 0, !dbg !6366, !ctir !414
  %86 = load i64, i64* %st_dev117, align 8, !dbg !6366, !tbaa !4770, !ctir !274
  %87 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6366, !tbaa !2648
  %st_dev118 = getelementptr inbounds %struct.stat, %struct.stat* %87, i32 0, i32 0, !dbg !6366, !ctir !414
  %88 = load i64, i64* %st_dev118, align 8, !dbg !6366, !tbaa !4770, !ctir !274
  %cmp119 = icmp eq i64 %86, %88, !dbg !6366
  br i1 %cmp119, label %if.end121, label %if.then120, !dbg !6369

if.then120:                                       ; preds = %land.lhs.true116, %if.then112
  store i1 true, i1* %retval, align 1, !dbg !6370
  br label %return, !dbg !6370

if.end121:                                        ; preds = %land.lhs.true116
  %89 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6371, !tbaa !2648
  %hard_link122 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %89, i32 0, i32 8, !dbg !6373, !ctir !357
  %90 = load i8, i8* %hard_link122, align 1, !dbg !6373, !tbaa !3159
  %tobool123 = trunc i8 %90 to i1, !dbg !6373, !ctir !142
  br i1 %tobool123, label %if.then124, label %if.end125, !dbg !6374

if.then124:                                       ; preds = %if.end121
  %91 = load i8*, i8** %return_now.addr, align 8, !dbg !6375, !tbaa !2648
  store i8 1, i8* %91, align 1, !dbg !6377, !tbaa !2742, !ctir !142
  store i1 true, i1* %retval, align 1, !dbg !6378
  br label %return, !dbg !6378

if.end125:                                        ; preds = %if.end121
  br label %if.end126, !dbg !6379

if.end126:                                        ; preds = %if.end125, %land.lhs.true108, %if.end104
  %92 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6380, !tbaa !2648
  %move_mode127 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %92, i32 0, i32 9, !dbg !6382, !ctir !357
  %93 = load i8, i8* %move_mode127, align 8, !dbg !6382, !tbaa !3167
  %tobool128 = trunc i8 %93 to i1, !dbg !6382, !ctir !142
  br i1 %tobool128, label %land.lhs.true129, label %if.end145, !dbg !6383

land.lhs.true129:                                 ; preds = %if.end126
  %94 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6384, !tbaa !2648
  %st_mode130 = getelementptr inbounds %struct.stat, %struct.stat* %94, i32 0, i32 3, !dbg !6384, !ctir !414
  %95 = load i32, i32* %st_mode130, align 8, !dbg !6384, !tbaa !2914, !ctir !140
  %and131 = and i32 %95, 61440, !dbg !6384
  %cmp132 = icmp eq i32 %and131, 40960, !dbg !6384
  br i1 %cmp132, label %land.lhs.true133, label %if.end145, !dbg !6385

land.lhs.true133:                                 ; preds = %land.lhs.true129
  %96 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6386, !tbaa !2648
  %st_nlink134 = getelementptr inbounds %struct.stat, %struct.stat* %96, i32 0, i32 2, !dbg !6387, !ctir !414
  %97 = load i64, i64* %st_nlink134, align 8, !dbg !6387, !tbaa !5028, !ctir !278
  %cmp135 = icmp ult i64 1, %97, !dbg !6388
  br i1 %cmp135, label %if.then136, label %if.end145, !dbg !6389

if.then136:                                       ; preds = %land.lhs.true133
  call void @llvm.dbg.declare(metadata i8** %abs_src, metadata !6390, metadata !DIExpression()), !dbg !6392
  %98 = load i8*, i8** %src_name.addr, align 8, !dbg !6393, !tbaa !2648
  %call137 = call i8* @canonicalize_file_name(i8* %98) #9, !dbg !6394
  store i8* %call137, i8** %abs_src, align 8, !dbg !6392, !tbaa !2648
  %99 = load i8*, i8** %abs_src, align 8, !dbg !6395, !tbaa !2648
  %tobool138 = icmp ne i8* %99, null, !dbg !6395
  br i1 %tobool138, label %if.then139, label %if.end144, !dbg !6397

if.then139:                                       ; preds = %if.then136
  call void @llvm.dbg.declare(metadata i8* %result, metadata !6398, metadata !DIExpression()), !dbg !6400
  %100 = load i8*, i8** %abs_src, align 8, !dbg !6401, !tbaa !2648
  %101 = load i8*, i8** %dst_name.addr, align 8, !dbg !6402, !tbaa !2648
  %call140 = call zeroext i1 @same_name(i8* %100, i8* %101), !dbg !6403
  %lnot141 = xor i1 %call140, true, !dbg !6404
  %frombool142 = zext i1 %lnot141 to i8, !dbg !6400
  store i8 %frombool142, i8* %result, align 1, !dbg !6400, !tbaa !2742
  %102 = load i8*, i8** %abs_src, align 8, !dbg !6405, !tbaa !2648
  call void @free(i8* %102) #9, !dbg !6406
  %103 = load i8, i8* %result, align 1, !dbg !6407, !tbaa !2742
  %tobool143 = trunc i8 %103 to i1, !dbg !6407
  store i1 %tobool143, i1* %retval, align 1, !dbg !6408
  br label %return, !dbg !6408

if.end144:                                        ; preds = %if.then136
  br label %if.end145, !dbg !6409

if.end145:                                        ; preds = %if.end144, %land.lhs.true133, %land.lhs.true129, %if.end126
  %104 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6410, !tbaa !2648
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %104, i32 0, i32 29, !dbg !6412, !ctir !357
  %105 = load i8, i8* %symbolic_link, align 4, !dbg !6412, !tbaa !3222
  %tobool146 = trunc i8 %105 to i1, !dbg !6412, !ctir !142
  br i1 %tobool146, label %land.lhs.true147, label %if.end152, !dbg !6413

land.lhs.true147:                                 ; preds = %if.end145
  %106 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6414, !tbaa !2648
  %st_mode148 = getelementptr inbounds %struct.stat, %struct.stat* %106, i32 0, i32 3, !dbg !6414, !ctir !414
  %107 = load i32, i32* %st_mode148, align 8, !dbg !6414, !tbaa !2914, !ctir !140
  %and149 = and i32 %107, 61440, !dbg !6414
  %cmp150 = icmp eq i32 %and149, 40960, !dbg !6414
  br i1 %cmp150, label %if.then151, label %if.end152, !dbg !6415

if.then151:                                       ; preds = %land.lhs.true147
  store i1 true, i1* %retval, align 1, !dbg !6416
  br label %return, !dbg !6416

if.end152:                                        ; preds = %land.lhs.true147, %if.end145
  %108 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6417, !tbaa !2648
  %dereference153 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %108, i32 0, i32 1, !dbg !6419, !ctir !357
  %109 = load i32, i32* %dereference153, align 4, !dbg !6419, !tbaa !3147, !ctir !76
  %cmp154 = icmp eq i32 %109, 2, !dbg !6420
  br i1 %cmp154, label %if.then155, label %if.end194, !dbg !6421

if.then155:                                       ; preds = %if.end152
  %110 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6422, !tbaa !2648
  %st_mode156 = getelementptr inbounds %struct.stat, %struct.stat* %110, i32 0, i32 3, !dbg !6422, !ctir !414
  %111 = load i32, i32* %st_mode156, align 8, !dbg !6422, !tbaa !2914, !ctir !140
  %and157 = and i32 %111, 61440, !dbg !6422
  %cmp158 = icmp eq i32 %and157, 40960, !dbg !6422
  br i1 %cmp158, label %if.else160, label %if.then159, !dbg !6425

if.then159:                                       ; preds = %if.then155
  %112 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6426, !tbaa !2648
  %113 = bitcast %struct.stat* %tmp_src_sb to i8*, !dbg !6427
  %114 = bitcast %struct.stat* %112 to i8*, !dbg !6427
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 144, i1 false), !dbg !6427, !tbaa.struct !6428
  br label %if.end165, !dbg !6429

if.else160:                                       ; preds = %if.then155
  %115 = load i8*, i8** %src_name.addr, align 8, !dbg !6430, !tbaa !2648
  %call161 = call i32 @stat(i8* %115, %struct.stat* %tmp_src_sb) #9, !dbg !6432
  %cmp162 = icmp ne i32 %call161, 0, !dbg !6433
  br i1 %cmp162, label %if.then163, label %if.end164, !dbg !6434

if.then163:                                       ; preds = %if.else160
  store i1 true, i1* %retval, align 1, !dbg !6435
  br label %return, !dbg !6435

if.end164:                                        ; preds = %if.else160
  br label %if.end165

if.end165:                                        ; preds = %if.end164, %if.then159
  %116 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6436, !tbaa !2648
  %st_mode166 = getelementptr inbounds %struct.stat, %struct.stat* %116, i32 0, i32 3, !dbg !6436, !ctir !414
  %117 = load i32, i32* %st_mode166, align 8, !dbg !6436, !tbaa !2914, !ctir !140
  %and167 = and i32 %117, 61440, !dbg !6436
  %cmp168 = icmp eq i32 %and167, 40960, !dbg !6436
  br i1 %cmp168, label %if.else170, label %if.then169, !dbg !6438

if.then169:                                       ; preds = %if.end165
  %118 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6439, !tbaa !2648
  %119 = bitcast %struct.stat* %tmp_dst_sb to i8*, !dbg !6440
  %120 = bitcast %struct.stat* %118 to i8*, !dbg !6440
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 144, i1 false), !dbg !6440, !tbaa.struct !6428
  br label %if.end175, !dbg !6441

if.else170:                                       ; preds = %if.end165
  %121 = load i8*, i8** %dst_name.addr, align 8, !dbg !6442, !tbaa !2648
  %call171 = call i32 @stat(i8* %121, %struct.stat* %tmp_dst_sb) #9, !dbg !6444
  %cmp172 = icmp ne i32 %call171, 0, !dbg !6445
  br i1 %cmp172, label %if.then173, label %if.end174, !dbg !6446

if.then173:                                       ; preds = %if.else170
  store i1 true, i1* %retval, align 1, !dbg !6447
  br label %return, !dbg !6447

if.end174:                                        ; preds = %if.else170
  br label %if.end175

if.end175:                                        ; preds = %if.end174, %if.then169
  %st_ino176 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_src_sb, i32 0, i32 1, !dbg !6448, !ctir !415
  %122 = load i64, i64* %st_ino176, align 8, !dbg !6448, !tbaa !4791, !ctir !276
  %st_ino177 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_dst_sb, i32 0, i32 1, !dbg !6448, !ctir !415
  %123 = load i64, i64* %st_ino177, align 8, !dbg !6448, !tbaa !4791, !ctir !276
  %cmp178 = icmp eq i64 %122, %123, !dbg !6448
  br i1 %cmp178, label %land.lhs.true179, label %if.then183, !dbg !6448

land.lhs.true179:                                 ; preds = %if.end175
  %st_dev180 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_src_sb, i32 0, i32 0, !dbg !6448, !ctir !415
  %124 = load i64, i64* %st_dev180, align 8, !dbg !6448, !tbaa !4770, !ctir !274
  %st_dev181 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_dst_sb, i32 0, i32 0, !dbg !6448, !ctir !415
  %125 = load i64, i64* %st_dev181, align 8, !dbg !6448, !tbaa !4770, !ctir !274
  %cmp182 = icmp eq i64 %124, %125, !dbg !6448
  br i1 %cmp182, label %if.end184, label %if.then183, !dbg !6450

if.then183:                                       ; preds = %land.lhs.true179, %if.end175
  store i1 true, i1* %retval, align 1, !dbg !6451
  br label %return, !dbg !6451

if.end184:                                        ; preds = %land.lhs.true179
  %126 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6452, !tbaa !2648
  %hard_link185 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %126, i32 0, i32 8, !dbg !6454, !ctir !357
  %127 = load i8, i8* %hard_link185, align 1, !dbg !6454, !tbaa !3159
  %tobool186 = trunc i8 %127 to i1, !dbg !6454, !ctir !142
  br i1 %tobool186, label %if.then187, label %if.end193, !dbg !6455

if.then187:                                       ; preds = %if.end184
  %128 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6456, !tbaa !2648
  %st_mode188 = getelementptr inbounds %struct.stat, %struct.stat* %128, i32 0, i32 3, !dbg !6456, !ctir !414
  %129 = load i32, i32* %st_mode188, align 8, !dbg !6456, !tbaa !2914, !ctir !140
  %and189 = and i32 %129, 61440, !dbg !6456
  %cmp190 = icmp eq i32 %and189, 40960, !dbg !6456
  %lnot191 = xor i1 %cmp190, true, !dbg !6458
  %130 = load i8*, i8** %return_now.addr, align 8, !dbg !6459, !tbaa !2648
  %frombool192 = zext i1 %lnot191 to i8, !dbg !6460
  store i8 %frombool192, i8* %130, align 1, !dbg !6460, !tbaa !2742, !ctir !142
  store i1 true, i1* %retval, align 1, !dbg !6461
  br label %return, !dbg !6461

if.end193:                                        ; preds = %if.end184
  br label %if.end194, !dbg !6462

if.end194:                                        ; preds = %if.end193, %if.end152
  store i1 false, i1* %retval, align 1, !dbg !6463
  br label %return, !dbg !6463

return:                                           ; preds = %if.end194, %if.then187, %if.then183, %if.then173, %if.then163, %if.then151, %if.then139, %if.then124, %if.then120, %if.then99, %if.then92, %if.end79, %if.end78, %if.then77, %if.then56, %if.then36, %if.then30, %if.end25, %if.then22, %if.then19, %if.then
  %131 = load i1, i1* %retval, align 1, !dbg !6464
  ret i1 %131, !dbg !6464
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @create_hard_link(i8* %src_name, i8* %dst_name, i1 zeroext %replace, i1 zeroext %verbose, i1 zeroext %dereference) #4 !dbg !6465 !ctir !452 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %replace.addr = alloca i8, align 1
  %verbose.addr = alloca i8, align 1
  %dereference.addr = alloca i8, align 1
  %err = alloca i32, align 4, !ctir !7
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !6466, metadata !DIExpression()), !dbg !6467
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6468, metadata !DIExpression()), !dbg !6469
  %frombool = zext i1 %replace to i8
  store i8 %frombool, i8* %replace.addr, align 1, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %replace.addr, metadata !6470, metadata !DIExpression()), !dbg !6471
  %frombool1 = zext i1 %verbose to i8
  store i8 %frombool1, i8* %verbose.addr, align 1, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %verbose.addr, metadata !6472, metadata !DIExpression()), !dbg !6473
  %frombool2 = zext i1 %dereference to i8
  store i8 %frombool2, i8* %dereference.addr, align 1, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %dereference.addr, metadata !6474, metadata !DIExpression()), !dbg !6475
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6476, metadata !DIExpression()), !dbg !6477
  %0 = load i8*, i8** %src_name.addr, align 8, !dbg !6478, !tbaa !2648
  %1 = load i8*, i8** %dst_name.addr, align 8, !dbg !6479, !tbaa !2648
  %2 = load i8, i8* %dereference.addr, align 1, !dbg !6480, !tbaa !2742
  %tobool = trunc i8 %2 to i1, !dbg !6480
  %3 = zext i1 %tobool to i64, !dbg !6480
  %cond = select i1 %tobool, i32 1024, i32 0, !dbg !6480
  %4 = load i8, i8* %replace.addr, align 1, !dbg !6481, !tbaa !2742
  %tobool3 = trunc i8 %4 to i1, !dbg !6481
  %call = call i32 @force_linkat(i32 -100, i8* %0, i32 -100, i8* %1, i32 %cond, i1 zeroext %tobool3, i32 -1), !dbg !6482
  store i32 %call, i32* %err, align 4, !dbg !6477, !tbaa !2635
  %5 = load i32, i32* %err, align 4, !dbg !6483, !tbaa !2635
  %cmp = icmp slt i32 0, %5, !dbg !6485
  br i1 %cmp, label %if.then, label %if.end, !dbg !6486

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %err, align 4, !dbg !6487, !tbaa !2635
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.52.167, i64 0, i64 0)) #9, !dbg !6489
  %7 = load i8*, i8** %dst_name.addr, align 8, !dbg !6490, !tbaa !2648
  %call5 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %7), !dbg !6490
  %8 = load i8*, i8** %src_name.addr, align 8, !dbg !6491, !tbaa !2648
  %call6 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %8), !dbg !6491
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* %call4, i8* %call5, i8* %call6), !dbg !6492
  store i1 false, i1* %retval, align 1, !dbg !6493
  br label %return, !dbg !6493

if.end:                                           ; preds = %entry
  %9 = load i32, i32* %err, align 4, !dbg !6494, !tbaa !2635
  %cmp7 = icmp slt i32 %9, 0, !dbg !6496
  br i1 %cmp7, label %land.lhs.true, label %if.end13, !dbg !6497

land.lhs.true:                                    ; preds = %if.end
  %10 = load i8, i8* %verbose.addr, align 1, !dbg !6498, !tbaa !2742
  %tobool8 = trunc i8 %10 to i1, !dbg !6498
  br i1 %tobool8, label %if.then9, label %if.end13, !dbg !6499

if.then9:                                         ; preds = %land.lhs.true
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25.115, i64 0, i64 0)) #9, !dbg !6500
  %11 = load i8*, i8** %dst_name.addr, align 8, !dbg !6501, !tbaa !2648
  %call11 = call i8* @quotearg_style(i32 4, i8* %11), !dbg !6501
  %call12 = call i32 (i8*, ...) @printf(i8* %call10, i8* %call11), !dbg !6502
  br label %if.end13, !dbg !6502

if.end13:                                         ; preds = %if.then9, %land.lhs.true, %if.end
  store i1 true, i1* %retval, align 1, !dbg !6503
  br label %return, !dbg !6503

return:                                           ; preds = %if.end13, %if.then
  %12 = load i1, i1* %retval, align 1, !dbg !6504
  ret i1 %12, !dbg !6504
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @abandon_move(%struct.cp_options* %x, i8* %dst_name, %struct.stat* %dst_sb) #4 !dbg !6505 !ctir !454 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  %dst_name.addr = alloca i8*, align 8
  %dst_sb.addr = alloca %struct.stat*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6506, metadata !DIExpression()), !dbg !6507
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6508, metadata !DIExpression()), !dbg !6509
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !6510, metadata !DIExpression()), !dbg !6511
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6512, !tbaa !2648
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 9, !dbg !6512, !ctir !357
  %1 = load i8, i8* %move_mode, align 8, !dbg !6512, !tbaa !3167
  %tobool = trunc i8 %1 to i1, !dbg !6512, !ctir !142
  br i1 %tobool, label %if.then, label %if.else, !dbg !6515

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !6515

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.53.166, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 1782, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__.abandon_move, i64 0, i64 0)) #13, !dbg !6512
  unreachable, !dbg !6512

if.end:                                           ; preds = %if.then
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6516, !tbaa !2648
  %interactive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 2, !dbg !6517, !ctir !357
  %3 = load i32, i32* %interactive, align 8, !dbg !6517, !tbaa !3163, !ctir !83
  %cmp = icmp eq i32 %3, 2, !dbg !6518
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !6519

lor.rhs:                                          ; preds = %if.end
  %4 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6520, !tbaa !2648
  %interactive1 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %4, i32 0, i32 2, !dbg !6521, !ctir !357
  %5 = load i32, i32* %interactive1, align 8, !dbg !6521, !tbaa !3163, !ctir !83
  %cmp2 = icmp eq i32 %5, 3, !dbg !6522
  br i1 %cmp2, label %land.rhs, label %lor.lhs.false, !dbg !6523

lor.lhs.false:                                    ; preds = %lor.rhs
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6524, !tbaa !2648
  %interactive3 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 2, !dbg !6525, !ctir !357
  %7 = load i32, i32* %interactive3, align 8, !dbg !6525, !tbaa !3163, !ctir !83
  %cmp4 = icmp eq i32 %7, 4, !dbg !6526
  br i1 %cmp4, label %land.lhs.true, label %land.end, !dbg !6527

land.lhs.true:                                    ; preds = %lor.lhs.false
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6528, !tbaa !2648
  %stdin_tty = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 32, !dbg !6529, !ctir !357
  %9 = load i8, i8* %stdin_tty, align 1, !dbg !6529, !tbaa !3237
  %tobool5 = trunc i8 %9 to i1, !dbg !6529, !ctir !142
  br i1 %tobool5, label %land.lhs.true6, label %land.end, !dbg !6530

land.lhs.true6:                                   ; preds = %land.lhs.true
  %10 = load i8*, i8** %dst_name.addr, align 8, !dbg !6531, !tbaa !2648
  %11 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6532, !tbaa !2648
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 3, !dbg !6533, !ctir !414
  %12 = load i32, i32* %st_mode, align 8, !dbg !6533, !tbaa !2914, !ctir !140
  %call = call zeroext i1 @writable_destination(i8* %10, i32 %12), !dbg !6534
  br i1 %call, label %land.end, label %land.rhs, !dbg !6535

land.rhs:                                         ; preds = %land.lhs.true6, %lor.rhs
  %13 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6536, !tbaa !2648
  %14 = load i8*, i8** %dst_name.addr, align 8, !dbg !6537, !tbaa !2648
  %15 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6538, !tbaa !2648
  %call7 = call zeroext i1 @overwrite_ok(%struct.cp_options* %13, i8* %14, %struct.stat* %15), !dbg !6539
  %lnot = xor i1 %call7, true, !dbg !6540
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true6, %land.lhs.true, %lor.lhs.false
  %16 = phi i1 [ false, %land.lhs.true6 ], [ false, %land.lhs.true ], [ false, %lor.lhs.false ], [ %lnot, %land.rhs ], !dbg !6541
  br label %lor.end, !dbg !6519

lor.end:                                          ; preds = %land.end, %if.end
  %17 = phi i1 [ true, %if.end ], [ %16, %land.end ]
  ret i1 %17, !dbg !6542
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @overwrite_ok(%struct.cp_options* %x, i8* %dst_name, %struct.stat* %dst_sb) #4 !dbg !6543 !ctir !454 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  %dst_name.addr = alloca i8*, align 8
  %dst_sb.addr = alloca %struct.stat*, align 8
  %perms = alloca [12 x i8], align 1, !ctir !458
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6544, metadata !DIExpression()), !dbg !6545
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6546, metadata !DIExpression()), !dbg !6547
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !6548, metadata !DIExpression()), !dbg !6549
  %0 = load i8*, i8** %dst_name.addr, align 8, !dbg !6550, !tbaa !2648
  %1 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6552, !tbaa !2648
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %1, i32 0, i32 3, !dbg !6553, !ctir !414
  %2 = load i32, i32* %st_mode, align 8, !dbg !6553, !tbaa !2914, !ctir !140
  %call = call zeroext i1 @writable_destination(i8* %0, i32 %2), !dbg !6554
  br i1 %call, label %if.else, label %if.then, !dbg !6555

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [12 x i8]* %perms, metadata !6556, metadata !DIExpression()), !dbg !6558
  %3 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6559, !tbaa !2648
  %st_mode1 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 3, !dbg !6560, !ctir !414
  %4 = load i32, i32* %st_mode1, align 8, !dbg !6560, !tbaa !2914, !ctir !140
  %arraydecay = getelementptr inbounds [12 x i8], [12 x i8]* %perms, i64 0, i64 0, !dbg !6561
  call void @strmode(i32 %4, i8* %arraydecay), !dbg !6562
  %arrayidx = getelementptr inbounds [12 x i8], [12 x i8]* %perms, i64 0, i64 10, !dbg !6563, !ctir !458
  store i8 0, i8* %arrayidx, align 1, !dbg !6564, !tbaa !3295
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !6565, !tbaa !2648
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6566, !tbaa !2648
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 9, !dbg !6567, !ctir !357
  %7 = load i8, i8* %move_mode, align 8, !dbg !6567, !tbaa !3167
  %tobool = trunc i8 %7 to i1, !dbg !6567, !ctir !142
  br i1 %tobool, label %cond.true, label %lor.lhs.false, !dbg !6568

lor.lhs.false:                                    ; preds = %if.then
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6569, !tbaa !2648
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 6, !dbg !6570, !ctir !357
  %9 = load i8, i8* %unlink_dest_before_opening, align 1, !dbg !6570, !tbaa !3151
  %tobool2 = trunc i8 %9 to i1, !dbg !6570, !ctir !142
  br i1 %tobool2, label %cond.true, label %lor.lhs.false3, !dbg !6571

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %10 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6572, !tbaa !2648
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %10, i32 0, i32 7, !dbg !6573, !ctir !357
  %11 = load i8, i8* %unlink_dest_after_failed_open, align 2, !dbg !6573, !tbaa !3155
  %tobool4 = trunc i8 %11 to i1, !dbg !6573, !ctir !142
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !6574

cond.true:                                        ; preds = %lor.lhs.false3, %lor.lhs.false, %if.then
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.54.163, i64 0, i64 0)) #9, !dbg !6575
  br label %cond.end, !dbg !6574

cond.false:                                       ; preds = %lor.lhs.false3
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55.164, i64 0, i64 0)) #9, !dbg !6576
  br label %cond.end, !dbg !6574

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call5, %cond.true ], [ %call6, %cond.false ], !dbg !6574
  %12 = load i8*, i8** @program_name, align 8, !dbg !6577, !tbaa !2648
  %13 = load i8*, i8** %dst_name.addr, align 8, !dbg !6578, !tbaa !2648
  %call7 = call i8* @quotearg_style(i32 4, i8* %13), !dbg !6578
  %14 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6579, !tbaa !2648
  %st_mode8 = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 3, !dbg !6580, !ctir !414
  %15 = load i32, i32* %st_mode8, align 8, !dbg !6580, !tbaa !2914, !ctir !140
  %and = and i32 %15, 4095, !dbg !6581
  %conv = zext i32 %and to i64, !dbg !6582
  %arrayidx9 = getelementptr inbounds [12 x i8], [12 x i8]* %perms, i64 0, i64 1, !dbg !6583, !ctir !458
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* %cond, i8* %12, i8* %call7, i64 %conv, i8* %arrayidx9), !dbg !6584
  br label %if.end, !dbg !6585

if.else:                                          ; preds = %entry
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !6586, !tbaa !2648
  %call11 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.56.165, i64 0, i64 0)) #9, !dbg !6588
  %17 = load i8*, i8** @program_name, align 8, !dbg !6589, !tbaa !2648
  %18 = load i8*, i8** %dst_name.addr, align 8, !dbg !6590, !tbaa !2648
  %call12 = call i8* @quotearg_style(i32 4, i8* %18), !dbg !6590
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* %call11, i8* %17, i8* %call12), !dbg !6591
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end
  %call14 = call zeroext i1 @yesno(), !dbg !6592
  ret i1 %call14, !dbg !6593
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dot_or_dotdot(i8* %file_name) #4 !dbg !6594 !ctir !220 {
entry:
  %retval = alloca i1, align 1
  %file_name.addr = alloca i8*, align 8
  %sep = alloca i8, align 1, !ctir !10
  store i8* %file_name, i8** %file_name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %file_name.addr, metadata !6595, metadata !DIExpression()), !dbg !6596
  %0 = load i8*, i8** %file_name.addr, align 8, !dbg !6597, !tbaa !2648
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !6597, !ctir !180
  %1 = load i8, i8* %arrayidx, align 1, !dbg !6597, !tbaa !3295
  %conv = sext i8 %1 to i32, !dbg !6597
  %cmp = icmp eq i32 %conv, 46, !dbg !6599
  br i1 %cmp, label %if.then, label %if.else, !dbg !6600

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %sep, metadata !6601, metadata !DIExpression()), !dbg !6603
  %2 = load i8*, i8** %file_name.addr, align 8, !dbg !6604, !tbaa !2648
  %3 = load i8*, i8** %file_name.addr, align 8, !dbg !6605, !tbaa !2648
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !6605, !ctir !180
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !6605, !tbaa !3295
  %conv3 = sext i8 %4 to i32, !dbg !6605
  %cmp4 = icmp eq i32 %conv3, 46, !dbg !6606
  %conv5 = zext i1 %cmp4 to i32, !dbg !6606
  %add = add nsw i32 %conv5, 1, !dbg !6607
  %idxprom = sext i32 %add to i64, !dbg !6604
  %arrayidx6 = getelementptr inbounds i8, i8* %2, i64 %idxprom, !dbg !6604, !ctir !180
  %5 = load i8, i8* %arrayidx6, align 1, !dbg !6604, !tbaa !3295
  store i8 %5, i8* %sep, align 1, !dbg !6603, !tbaa !3295
  %6 = load i8, i8* %sep, align 1, !dbg !6608, !tbaa !3295
  %tobool = icmp ne i8 %6, 0, !dbg !6608
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !6609

lor.rhs:                                          ; preds = %if.then
  %7 = load i8, i8* %sep, align 1, !dbg !6610, !tbaa !3295
  %conv7 = sext i8 %7 to i32, !dbg !6610
  %cmp8 = icmp eq i32 %conv7, 47, !dbg !6610
  br label %lor.end, !dbg !6609

lor.end:                                          ; preds = %lor.rhs, %if.then
  %8 = phi i1 [ true, %if.then ], [ %cmp8, %lor.rhs ]
  store i1 %8, i1* %retval, align 1, !dbg !6611
  br label %return, !dbg !6611

if.else:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !6612
  br label %return, !dbg !6612

return:                                           ; preds = %if.else, %lor.end
  %9 = load i1, i1* %retval, align 1, !dbg !6613
  ret i1 %9, !dbg !6613
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @source_is_dst_backup(i8* %srcbase, %struct.stat* %src_st, i8* %dst_name) #4 !dbg !6614 !ctir !495 {
entry:
  %retval = alloca i1, align 1
  %srcbase.addr = alloca i8*, align 8
  %src_st.addr = alloca %struct.stat*, align 8
  %dst_name.addr = alloca i8*, align 8
  %srcbaselen = alloca i64, align 8, !ctir !55
  %dstbase = alloca i8*, align 8, !ctir !180
  %dstbaselen = alloca i64, align 8, !ctir !55
  %suffixlen = alloca i64, align 8, !ctir !55
  %dstlen = alloca i64, align 8, !ctir !55
  %dst_back = alloca i8*, align 8, !ctir !9
  %dst_back_sb = alloca %struct.stat, align 8, !ctir !415
  %dst_back_status = alloca i32, align 4, !ctir !7
  store i8* %srcbase, i8** %srcbase.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %srcbase.addr, metadata !6615, metadata !DIExpression()), !dbg !6616
  store %struct.stat* %src_st, %struct.stat** %src_st.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.stat** %src_st.addr, metadata !6617, metadata !DIExpression()), !dbg !6618
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6619, metadata !DIExpression()), !dbg !6620
  call void @llvm.dbg.declare(metadata i64* %srcbaselen, metadata !6621, metadata !DIExpression()), !dbg !6622
  %0 = load i8*, i8** %srcbase.addr, align 8, !dbg !6623, !tbaa !2648
  %call = call i64 @strlen(i8* %0) #14, !dbg !6624
  store i64 %call, i64* %srcbaselen, align 8, !dbg !6622, !tbaa !3288
  call void @llvm.dbg.declare(metadata i8** %dstbase, metadata !6625, metadata !DIExpression()), !dbg !6626
  %1 = load i8*, i8** %dst_name.addr, align 8, !dbg !6627, !tbaa !2648
  %call1 = call i8* @last_component(i8* %1) #14, !dbg !6628
  store i8* %call1, i8** %dstbase, align 8, !dbg !6626, !tbaa !2648
  call void @llvm.dbg.declare(metadata i64* %dstbaselen, metadata !6629, metadata !DIExpression()), !dbg !6630
  %2 = load i8*, i8** %dstbase, align 8, !dbg !6631, !tbaa !2648
  %call2 = call i64 @strlen(i8* %2) #14, !dbg !6632
  store i64 %call2, i64* %dstbaselen, align 8, !dbg !6630, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %suffixlen, metadata !6633, metadata !DIExpression()), !dbg !6634
  %3 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !6635, !tbaa !2648
  %call3 = call i64 @strlen(i8* %3) #14, !dbg !6636
  store i64 %call3, i64* %suffixlen, align 8, !dbg !6634, !tbaa !3288
  %4 = load i64, i64* %srcbaselen, align 8, !dbg !6637, !tbaa !3288
  %5 = load i64, i64* %dstbaselen, align 8, !dbg !6639, !tbaa !3288
  %6 = load i64, i64* %suffixlen, align 8, !dbg !6640, !tbaa !3288
  %add = add i64 %5, %6, !dbg !6641
  %cmp = icmp eq i64 %4, %add, !dbg !6642
  br i1 %cmp, label %land.lhs.true, label %if.then, !dbg !6643

land.lhs.true:                                    ; preds = %entry
  %7 = load i8*, i8** %srcbase.addr, align 8, !dbg !6644, !tbaa !2648
  %8 = load i8*, i8** %dstbase, align 8, !dbg !6645, !tbaa !2648
  %9 = load i64, i64* %dstbaselen, align 8, !dbg !6646, !tbaa !3288
  %call4 = call i32 @memcmp(i8* %7, i8* %8, i64 %9) #14, !dbg !6647
  %cmp5 = icmp eq i32 %call4, 0, !dbg !6648
  br i1 %cmp5, label %land.lhs.true6, label %if.then, !dbg !6649

land.lhs.true6:                                   ; preds = %land.lhs.true
  %10 = load i8*, i8** %srcbase.addr, align 8, !dbg !6650, !tbaa !2648
  %11 = load i64, i64* %dstbaselen, align 8, !dbg !6650, !tbaa !3288
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %11, !dbg !6650
  %12 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !6650, !tbaa !2648
  %call7 = call i32 @strcmp(i8* %add.ptr, i8* %12) #14, !dbg !6650
  %cmp8 = icmp eq i32 %call7, 0, !dbg !6650
  br i1 %cmp8, label %if.end, label %if.then, !dbg !6651

if.then:                                          ; preds = %land.lhs.true6, %land.lhs.true, %entry
  store i1 false, i1* %retval, align 1, !dbg !6652
  br label %return, !dbg !6652

if.end:                                           ; preds = %land.lhs.true6
  call void @llvm.dbg.declare(metadata i64* %dstlen, metadata !6653, metadata !DIExpression()), !dbg !6654
  %13 = load i8*, i8** %dst_name.addr, align 8, !dbg !6655, !tbaa !2648
  %call9 = call i64 @strlen(i8* %13) #14, !dbg !6656
  store i64 %call9, i64* %dstlen, align 8, !dbg !6654, !tbaa !3288
  call void @llvm.dbg.declare(metadata i8** %dst_back, metadata !6657, metadata !DIExpression()), !dbg !6658
  %14 = load i64, i64* %dstlen, align 8, !dbg !6659, !tbaa !3288
  %15 = load i64, i64* %suffixlen, align 8, !dbg !6660, !tbaa !3288
  %add10 = add i64 %14, %15, !dbg !6661
  %add11 = add i64 %add10, 1, !dbg !6662
  %call12 = call noalias i8* @xmalloc(i64 %add11), !dbg !6663
  store i8* %call12, i8** %dst_back, align 8, !dbg !6658, !tbaa !2648
  %16 = load i8*, i8** %dst_back, align 8, !dbg !6664, !tbaa !2648
  %17 = load i8*, i8** %dst_name.addr, align 8, !dbg !6665, !tbaa !2648
  %18 = load i64, i64* %dstlen, align 8, !dbg !6666, !tbaa !3288
  %call13 = call i8* @mempcpy(i8* %16, i8* %17, i64 %18) #9, !dbg !6667
  %19 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !6668, !tbaa !2648
  %call14 = call i8* @strcpy(i8* %call13, i8* %19) #9, !dbg !6669
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_back_sb, metadata !6670, metadata !DIExpression()), !dbg !6671
  call void @llvm.dbg.declare(metadata i32* %dst_back_status, metadata !6672, metadata !DIExpression()), !dbg !6673
  %20 = load i8*, i8** %dst_back, align 8, !dbg !6674, !tbaa !2648
  %call15 = call i32 @stat(i8* %20, %struct.stat* %dst_back_sb) #9, !dbg !6675
  store i32 %call15, i32* %dst_back_status, align 4, !dbg !6673, !tbaa !2635
  %21 = load i8*, i8** %dst_back, align 8, !dbg !6676, !tbaa !2648
  call void @free(i8* %21) #9, !dbg !6677
  %22 = load i32, i32* %dst_back_status, align 4, !dbg !6678, !tbaa !2635
  %cmp16 = icmp eq i32 %22, 0, !dbg !6679
  br i1 %cmp16, label %land.rhs, label %land.end22, !dbg !6680

land.rhs:                                         ; preds = %if.end
  %23 = load %struct.stat*, %struct.stat** %src_st.addr, align 8, !dbg !6681, !tbaa !2648
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 1, !dbg !6681, !ctir !414
  %24 = load i64, i64* %st_ino, align 8, !dbg !6681, !tbaa !4791, !ctir !276
  %st_ino17 = getelementptr inbounds %struct.stat, %struct.stat* %dst_back_sb, i32 0, i32 1, !dbg !6681, !ctir !415
  %25 = load i64, i64* %st_ino17, align 8, !dbg !6681, !tbaa !4791, !ctir !276
  %cmp18 = icmp eq i64 %24, %25, !dbg !6681
  br i1 %cmp18, label %land.rhs19, label %land.end, !dbg !6681

land.rhs19:                                       ; preds = %land.rhs
  %26 = load %struct.stat*, %struct.stat** %src_st.addr, align 8, !dbg !6681, !tbaa !2648
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %26, i32 0, i32 0, !dbg !6681, !ctir !414
  %27 = load i64, i64* %st_dev, align 8, !dbg !6681, !tbaa !4770, !ctir !274
  %st_dev20 = getelementptr inbounds %struct.stat, %struct.stat* %dst_back_sb, i32 0, i32 0, !dbg !6681, !ctir !415
  %28 = load i64, i64* %st_dev20, align 8, !dbg !6681, !tbaa !4770, !ctir !274
  %cmp21 = icmp eq i64 %27, %28, !dbg !6681
  br label %land.end

land.end:                                         ; preds = %land.rhs19, %land.rhs
  %29 = phi i1 [ false, %land.rhs ], [ %cmp21, %land.rhs19 ], !dbg !6682
  br label %land.end22

land.end22:                                       ; preds = %land.end, %if.end
  %30 = phi i1 [ false, %if.end ], [ %29, %land.end ], !dbg !6682
  store i1 %30, i1* %retval, align 1, !dbg !6683
  br label %return, !dbg !6683

return:                                           ; preds = %land.end22, %if.then
  %31 = load i1, i1* %retval, align 1, !dbg !6684
  ret i1 %31, !dbg !6684
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_verbose(i8* %src, i8* %dst, i8* %backup_dst_name) #4 !dbg !6685 !ctir !497 {
entry:
  %src.addr = alloca i8*, align 8
  %dst.addr = alloca i8*, align 8
  %backup_dst_name.addr = alloca i8*, align 8
  store i8* %src, i8** %src.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !6686, metadata !DIExpression()), !dbg !6687
  store i8* %dst, i8** %dst.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !6688, metadata !DIExpression()), !dbg !6689
  store i8* %backup_dst_name, i8** %backup_dst_name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %backup_dst_name.addr, metadata !6690, metadata !DIExpression()), !dbg !6691
  %0 = load i8*, i8** %src.addr, align 8, !dbg !6692, !tbaa !2648
  %call = call i8* @quotearg_n_style(i32 0, i32 4, i8* %0), !dbg !6692
  %1 = load i8*, i8** %dst.addr, align 8, !dbg !6693, !tbaa !2648
  %call1 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %1), !dbg !6693
  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57.161, i64 0, i64 0), i8* %call, i8* %call1), !dbg !6694
  %2 = load i8*, i8** %backup_dst_name.addr, align 8, !dbg !6695, !tbaa !2648
  %tobool = icmp ne i8* %2, null, !dbg !6695
  br i1 %tobool, label %if.then, label %if.end, !dbg !6697

if.then:                                          ; preds = %entry
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.58.162, i64 0, i64 0)) #9, !dbg !6698
  %3 = load i8*, i8** %backup_dst_name.addr, align 8, !dbg !6699, !tbaa !2648
  %call4 = call i8* @quotearg_style(i32 4, i8* %3), !dbg !6699
  %call5 = call i32 (i8*, ...) @printf(i8* %call3, i8* %call4), !dbg !6700
  br label %if.end, !dbg !6700

if.end:                                           ; preds = %if.then, %entry
  %call6 = call i32 @putchar_unlocked(i32 10), !dbg !6701
  ret void, !dbg !6702
}

; Function Attrs: nounwind
declare dso_local i32 @rename(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @rmdir(i8*) #2

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @is_ancestor(%struct.stat* %sb, %struct.dir_list* %ancestors) #10 !dbg !6703 !ctir !499 {
entry:
  %retval = alloca i1, align 1
  %sb.addr = alloca %struct.stat*, align 8
  %ancestors.addr = alloca %struct.dir_list*, align 8
  store %struct.stat* %sb, %struct.stat** %sb.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.stat** %sb.addr, metadata !6704, metadata !DIExpression()), !dbg !6705
  store %struct.dir_list* %ancestors, %struct.dir_list** %ancestors.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.dir_list** %ancestors.addr, metadata !6706, metadata !DIExpression()), !dbg !6707
  br label %while.cond, !dbg !6708

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !6709, !tbaa !2648
  %cmp = icmp ne %struct.dir_list* %0, null, !dbg !6710
  br i1 %cmp, label %while.body, label %while.end, !dbg !6708

while.body:                                       ; preds = %while.cond
  %1 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !6711, !tbaa !2648
  %ino = getelementptr inbounds %struct.dir_list, %struct.dir_list* %1, i32 0, i32 1, !dbg !6714, !ctir !502
  %2 = load i64, i64* %ino, align 8, !dbg !6714, !tbaa !5441, !ctir !441
  %3 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !6715, !tbaa !2648
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 1, !dbg !6716, !ctir !414
  %4 = load i64, i64* %st_ino, align 8, !dbg !6716, !tbaa !4791, !ctir !276
  %cmp1 = icmp eq i64 %2, %4, !dbg !6717
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !6718

land.lhs.true:                                    ; preds = %while.body
  %5 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !6719, !tbaa !2648
  %dev = getelementptr inbounds %struct.dir_list, %struct.dir_list* %5, i32 0, i32 2, !dbg !6720, !ctir !502
  %6 = load i64, i64* %dev, align 8, !dbg !6720, !tbaa !5446, !ctir !443
  %7 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !6721, !tbaa !2648
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %7, i32 0, i32 0, !dbg !6722, !ctir !414
  %8 = load i64, i64* %st_dev, align 8, !dbg !6722, !tbaa !4770, !ctir !274
  %cmp2 = icmp eq i64 %6, %8, !dbg !6723
  br i1 %cmp2, label %if.then, label %if.end, !dbg !6724

if.then:                                          ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !6725
  br label %return, !dbg !6725

if.end:                                           ; preds = %land.lhs.true, %while.body
  %9 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !6726, !tbaa !2648
  %parent = getelementptr inbounds %struct.dir_list, %struct.dir_list* %9, i32 0, i32 0, !dbg !6727, !ctir !502
  %10 = load %struct.dir_list*, %struct.dir_list** %parent, align 8, !dbg !6727, !tbaa !5435, !ctir !436
  store %struct.dir_list* %10, %struct.dir_list** %ancestors.addr, align 8, !dbg !6728, !tbaa !2648
  br label %while.cond, !dbg !6708, !llvm.loop !6729

while.end:                                        ; preds = %while.cond
  store i1 false, i1* %retval, align 1, !dbg !6731
  br label %return, !dbg !6731

return:                                           ; preds = %while.end, %if.then
  %11 = load i1, i1* %retval, align 1, !dbg !6732
  ret i1 %11, !dbg !6732
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_dir(i8* %src_name_in, i8* %dst_name_in, i1 zeroext %new_dst, %struct.stat* %src_sb, %struct.dir_list* %ancestors, %struct.cp_options* %x, i8* %first_dir_created_per_command_line_arg, i8* %copy_into_self) #4 !dbg !6733 !ctir !503 {
entry:
  %retval = alloca i1, align 1
  %src_name_in.addr = alloca i8*, align 8
  %dst_name_in.addr = alloca i8*, align 8
  %new_dst.addr = alloca i8, align 1
  %src_sb.addr = alloca %struct.stat*, align 8
  %ancestors.addr = alloca %struct.dir_list*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %first_dir_created_per_command_line_arg.addr = alloca i8*, align 8
  %copy_into_self.addr = alloca i8*, align 8
  %name_space = alloca i8*, align 8, !ctir !9
  %namep = alloca i8*, align 8, !ctir !9
  %non_command_line_options = alloca %struct.cp_options, align 8, !ctir !358
  %ok = alloca i8, align 1, !ctir !142
  %new_first_dir_created = alloca i8, align 1, !ctir !142
  %local_copy_into_self = alloca i8, align 1, !ctir !142
  %src_name = alloca i8*, align 8, !ctir !9
  %dst_name = alloca i8*, align 8, !ctir !9
  %first_dir_created = alloca i8, align 1, !ctir !142
  store i8* %src_name_in, i8** %src_name_in.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %src_name_in.addr, metadata !6734, metadata !DIExpression()), !dbg !6735
  store i8* %dst_name_in, i8** %dst_name_in.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dst_name_in.addr, metadata !6736, metadata !DIExpression()), !dbg !6737
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !6738, metadata !DIExpression()), !dbg !6739
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !6740, metadata !DIExpression()), !dbg !6741
  store %struct.dir_list* %ancestors, %struct.dir_list** %ancestors.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.dir_list** %ancestors.addr, metadata !6742, metadata !DIExpression()), !dbg !6743
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6744, metadata !DIExpression()), !dbg !6745
  store i8* %first_dir_created_per_command_line_arg, i8** %first_dir_created_per_command_line_arg.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %first_dir_created_per_command_line_arg.addr, metadata !6746, metadata !DIExpression()), !dbg !6747
  store i8* %copy_into_self, i8** %copy_into_self.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %copy_into_self.addr, metadata !6748, metadata !DIExpression()), !dbg !6749
  call void @llvm.dbg.declare(metadata i8** %name_space, metadata !6750, metadata !DIExpression()), !dbg !6751
  call void @llvm.dbg.declare(metadata i8** %namep, metadata !6752, metadata !DIExpression()), !dbg !6753
  call void @llvm.dbg.declare(metadata %struct.cp_options* %non_command_line_options, metadata !6754, metadata !DIExpression()), !dbg !6755
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6756, !tbaa !2648
  %1 = bitcast %struct.cp_options* %non_command_line_options to i8*, !dbg !6757
  %2 = bitcast %struct.cp_options* %0 to i8*, !dbg !6757
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 80, i1 false), !dbg !6757, !tbaa.struct !6758
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !6759, metadata !DIExpression()), !dbg !6760
  store i8 1, i8* %ok, align 1, !dbg !6760, !tbaa !2742
  %3 = load i8*, i8** %src_name_in.addr, align 8, !dbg !6761, !tbaa !2648
  %call = call i8* @savedir(i8* %3, i32 2), !dbg !6762
  store i8* %call, i8** %name_space, align 8, !dbg !6763, !tbaa !2648
  %4 = load i8*, i8** %name_space, align 8, !dbg !6764, !tbaa !2648
  %cmp = icmp eq i8* %4, null, !dbg !6766
  br i1 %cmp, label %if.then, label %if.end, !dbg !6767

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !6768
  %5 = load i32, i32* %call1, align 4, !dbg !6768, !tbaa !2635, !ctir !7
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.59.160, i64 0, i64 0)) #9, !dbg !6770
  %6 = load i8*, i8** %src_name_in.addr, align 8, !dbg !6771, !tbaa !2648
  %call3 = call i8* @quotearg_style(i32 4, i8* %6), !dbg !6771
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %5, i8* %call2, i8* %call3), !dbg !6772
  store i1 false, i1* %retval, align 1, !dbg !6773
  br label %return, !dbg !6773

if.end:                                           ; preds = %entry
  %7 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6774, !tbaa !2648
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 1, !dbg !6776, !ctir !357
  %8 = load i32, i32* %dereference, align 4, !dbg !6776, !tbaa !3147, !ctir !76
  %cmp4 = icmp eq i32 %8, 3, !dbg !6777
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !6778

if.then5:                                         ; preds = %if.end
  %dereference6 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %non_command_line_options, i32 0, i32 1, !dbg !6779, !ctir !358
  store i32 2, i32* %dereference6, align 4, !dbg !6780, !tbaa !3147, !ctir !76
  br label %if.end7, !dbg !6781

if.end7:                                          ; preds = %if.then5, %if.end
  call void @llvm.dbg.declare(metadata i8* %new_first_dir_created, metadata !6782, metadata !DIExpression()), !dbg !6783
  store i8 0, i8* %new_first_dir_created, align 1, !dbg !6783, !tbaa !2742
  %9 = load i8*, i8** %name_space, align 8, !dbg !6784, !tbaa !2648
  store i8* %9, i8** %namep, align 8, !dbg !6785, !tbaa !2648
  br label %while.cond, !dbg !6786

while.cond:                                       ; preds = %if.end28, %if.end7
  %10 = load i8*, i8** %namep, align 8, !dbg !6787, !tbaa !2648
  %11 = load i8, i8* %10, align 1, !dbg !6788, !tbaa !3295, !ctir !10
  %conv = sext i8 %11 to i32, !dbg !6788
  %cmp8 = icmp ne i32 %conv, 0, !dbg !6789
  br i1 %cmp8, label %while.body, label %while.end, !dbg !6786

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8* %local_copy_into_self, metadata !6790, metadata !DIExpression()), !dbg !6792
  call void @llvm.dbg.declare(metadata i8** %src_name, metadata !6793, metadata !DIExpression()), !dbg !6794
  %12 = load i8*, i8** %src_name_in.addr, align 8, !dbg !6795, !tbaa !2648
  %13 = load i8*, i8** %namep, align 8, !dbg !6796, !tbaa !2648
  %call10 = call i8* @file_name_concat(i8* %12, i8* %13, i8** null), !dbg !6797
  store i8* %call10, i8** %src_name, align 8, !dbg !6794, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dst_name, metadata !6798, metadata !DIExpression()), !dbg !6799
  %14 = load i8*, i8** %dst_name_in.addr, align 8, !dbg !6800, !tbaa !2648
  %15 = load i8*, i8** %namep, align 8, !dbg !6801, !tbaa !2648
  %call11 = call i8* @file_name_concat(i8* %14, i8* %15, i8** null), !dbg !6802
  store i8* %call11, i8** %dst_name, align 8, !dbg !6799, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8* %first_dir_created, metadata !6803, metadata !DIExpression()), !dbg !6804
  %16 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !6805, !tbaa !2648
  %17 = load i8, i8* %16, align 1, !dbg !6806, !tbaa !2742
  %tobool = trunc i8 %17 to i1, !dbg !6806, !ctir !142
  %frombool12 = zext i1 %tobool to i8, !dbg !6804
  store i8 %frombool12, i8* %first_dir_created, align 1, !dbg !6804, !tbaa !2742
  %18 = load i8*, i8** %src_name, align 8, !dbg !6807, !tbaa !2648
  %19 = load i8*, i8** %dst_name, align 8, !dbg !6808, !tbaa !2648
  %20 = load i8, i8* %new_dst.addr, align 1, !dbg !6809, !tbaa !2742
  %tobool13 = trunc i8 %20 to i1, !dbg !6809
  %21 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6810, !tbaa !2648
  %22 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !6811, !tbaa !2648
  %call14 = call zeroext i1 @copy_internal(i8* %18, i8* %19, i1 zeroext %tobool13, %struct.stat* %21, %struct.dir_list* %22, %struct.cp_options* %non_command_line_options, i1 zeroext false, i8* %first_dir_created, i8* %local_copy_into_self, i8* null), !dbg !6812
  %conv15 = zext i1 %call14 to i32, !dbg !6812
  %23 = load i8, i8* %ok, align 1, !dbg !6813, !tbaa !2742
  %tobool16 = trunc i8 %23 to i1, !dbg !6813
  %conv17 = zext i1 %tobool16 to i32, !dbg !6813
  %and = and i32 %conv17, %conv15, !dbg !6813
  %tobool18 = icmp ne i32 %and, 0, !dbg !6813
  %frombool19 = zext i1 %tobool18 to i8, !dbg !6813
  store i8 %frombool19, i8* %ok, align 1, !dbg !6813, !tbaa !2742
  %24 = load i8, i8* %local_copy_into_self, align 1, !dbg !6814, !tbaa !2742
  %tobool20 = trunc i8 %24 to i1, !dbg !6814
  %conv21 = zext i1 %tobool20 to i32, !dbg !6814
  %25 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !6815, !tbaa !2648
  %26 = load i8, i8* %25, align 1, !dbg !6816, !tbaa !2742
  %tobool22 = trunc i8 %26 to i1, !dbg !6816, !ctir !142
  %conv23 = zext i1 %tobool22 to i32, !dbg !6816
  %or = or i32 %conv23, %conv21, !dbg !6816
  %tobool24 = icmp ne i32 %or, 0, !dbg !6816
  %frombool25 = zext i1 %tobool24 to i8, !dbg !6816
  store i8 %frombool25, i8* %25, align 1, !dbg !6816, !tbaa !2742, !ctir !142
  %27 = load i8*, i8** %dst_name, align 8, !dbg !6817, !tbaa !2648
  call void @free(i8* %27) #9, !dbg !6818
  %28 = load i8*, i8** %src_name, align 8, !dbg !6819, !tbaa !2648
  call void @free(i8* %28) #9, !dbg !6820
  %29 = load i8, i8* %local_copy_into_self, align 1, !dbg !6821, !tbaa !2742
  %tobool26 = trunc i8 %29 to i1, !dbg !6821
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !6823

if.then27:                                        ; preds = %while.body
  br label %while.end, !dbg !6824

if.end28:                                         ; preds = %while.body
  %30 = load i8, i8* %first_dir_created, align 1, !dbg !6825, !tbaa !2742
  %tobool29 = trunc i8 %30 to i1, !dbg !6825
  %conv30 = zext i1 %tobool29 to i32, !dbg !6825
  %31 = load i8, i8* %new_first_dir_created, align 1, !dbg !6826, !tbaa !2742
  %tobool31 = trunc i8 %31 to i1, !dbg !6826
  %conv32 = zext i1 %tobool31 to i32, !dbg !6826
  %or33 = or i32 %conv32, %conv30, !dbg !6826
  %tobool34 = icmp ne i32 %or33, 0, !dbg !6826
  %frombool35 = zext i1 %tobool34 to i8, !dbg !6826
  store i8 %frombool35, i8* %new_first_dir_created, align 1, !dbg !6826, !tbaa !2742
  %32 = load i8*, i8** %namep, align 8, !dbg !6827, !tbaa !2648
  %call36 = call i64 @strlen(i8* %32) #14, !dbg !6828
  %add = add i64 %call36, 1, !dbg !6829
  %33 = load i8*, i8** %namep, align 8, !dbg !6830, !tbaa !2648
  %add.ptr = getelementptr inbounds i8, i8* %33, i64 %add, !dbg !6830
  store i8* %add.ptr, i8** %namep, align 8, !dbg !6830, !tbaa !2648
  br label %while.cond, !dbg !6786, !llvm.loop !6831

while.end:                                        ; preds = %if.then27, %while.cond
  %34 = load i8*, i8** %name_space, align 8, !dbg !6833, !tbaa !2648
  call void @free(i8* %34) #9, !dbg !6834
  %35 = load i8, i8* %new_first_dir_created, align 1, !dbg !6835, !tbaa !2742
  %tobool37 = trunc i8 %35 to i1, !dbg !6835
  %36 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !6836, !tbaa !2648
  %frombool38 = zext i1 %tobool37 to i8, !dbg !6837
  store i8 %frombool38, i8* %36, align 1, !dbg !6837, !tbaa !2742, !ctir !142
  %37 = load i8, i8* %ok, align 1, !dbg !6838, !tbaa !2742
  %tobool39 = trunc i8 %37 to i1, !dbg !6838
  store i1 %tobool39, i1* %retval, align 1, !dbg !6839
  br label %return, !dbg !6839

return:                                           ; preds = %while.end, %if.then
  %38 = load i1, i1* %retval, align 1, !dbg !6840
  ret i1 %38, !dbg !6840
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_reg(i8* %src_name, i8* %dst_name, %struct.cp_options* %x, i32 %dst_mode, i32 %omitted_permissions, i8* %new_dst, %struct.stat* %src_sb) #4 !dbg !6841 !ctir !505 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %dst_mode.addr = alloca i32, align 4
  %omitted_permissions.addr = alloca i32, align 4
  %new_dst.addr = alloca i8*, align 8
  %src_sb.addr = alloca %struct.stat*, align 8
  %buf = alloca i8*, align 8, !ctir !9
  %buf_alloc = alloca i8*, align 8, !ctir !9
  %name_alloc = alloca i8*, align 8, !ctir !9
  %dest_desc = alloca i32, align 4, !ctir !7
  %dest_errno = alloca i32, align 4, !ctir !7
  %source_desc = alloca i32, align 4, !ctir !7
  %src_mode = alloca i32, align 4, !ctir !139
  %sb = alloca %struct.stat, align 8, !ctir !415
  %src_open_sb = alloca %struct.stat, align 8, !ctir !415
  %return_val = alloca i8, align 1, !ctir !142
  %data_copy_required = alloca i8, align 1, !ctir !142
  %open_flags = alloca i32, align 4, !ctir !7
  %open_flags72 = alloca i32, align 4, !ctir !7
  %dangling_link_sb = alloca %struct.stat, align 8, !ctir !415
  %clone_ok = alloca i8, align 1, !ctir !142
  %buf_alignment = alloca i64, align 8, !ctir !55
  %buf_size = alloca i64, align 8, !ctir !55
  %hole_size = alloca i64, align 8, !ctir !55
  %make_holes = alloca i8, align 1, !ctir !142
  %sparse_src = alloca i8, align 1, !ctir !142
  %blcm_max = alloca i64, align 8, !ctir !55
  %blcm = alloca i64, align 8, !ctir !55
  %normal_copy_required = alloca i8, align 1, !ctir !142
  %n_read = alloca i64, align 8, !ctir !352
  %wrote_hole_at_eof = alloca i8, align 1, !ctir !142
  %timespec = alloca [2 x %struct.timespec], align 16, !ctir !445
  %tmp = alloca %struct.timespec, align 8
  %tmp271 = alloca %struct.timespec, align 8
  %access_changed = alloca i8, align 1, !ctir !142
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !6842, metadata !DIExpression()), !dbg !6843
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6844, metadata !DIExpression()), !dbg !6845
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6846, metadata !DIExpression()), !dbg !6847
  store i32 %dst_mode, i32* %dst_mode.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %dst_mode.addr, metadata !6848, metadata !DIExpression()), !dbg !6849
  store i32 %omitted_permissions, i32* %omitted_permissions.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %omitted_permissions.addr, metadata !6850, metadata !DIExpression()), !dbg !6851
  store i8* %new_dst, i8** %new_dst.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %new_dst.addr, metadata !6852, metadata !DIExpression()), !dbg !6853
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !6854, metadata !DIExpression()), !dbg !6855
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !6856, metadata !DIExpression()), !dbg !6857
  call void @llvm.dbg.declare(metadata i8** %buf_alloc, metadata !6858, metadata !DIExpression()), !dbg !6859
  store i8* null, i8** %buf_alloc, align 8, !dbg !6859, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %name_alloc, metadata !6860, metadata !DIExpression()), !dbg !6861
  store i8* null, i8** %name_alloc, align 8, !dbg !6861, !tbaa !2648
  call void @llvm.dbg.declare(metadata i32* %dest_desc, metadata !6862, metadata !DIExpression()), !dbg !6863
  call void @llvm.dbg.declare(metadata i32* %dest_errno, metadata !6864, metadata !DIExpression()), !dbg !6865
  call void @llvm.dbg.declare(metadata i32* %source_desc, metadata !6866, metadata !DIExpression()), !dbg !6867
  call void @llvm.dbg.declare(metadata i32* %src_mode, metadata !6868, metadata !DIExpression()), !dbg !6869
  %0 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6870, !tbaa !2648
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !6871, !ctir !414
  %1 = load i32, i32* %st_mode, align 8, !dbg !6871, !tbaa !2914, !ctir !140
  store i32 %1, i32* %src_mode, align 4, !dbg !6869, !tbaa !2635
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !6872, metadata !DIExpression()), !dbg !6873
  call void @llvm.dbg.declare(metadata %struct.stat* %src_open_sb, metadata !6874, metadata !DIExpression()), !dbg !6875
  call void @llvm.dbg.declare(metadata i8* %return_val, metadata !6876, metadata !DIExpression()), !dbg !6877
  store i8 1, i8* %return_val, align 1, !dbg !6877, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %data_copy_required, metadata !6878, metadata !DIExpression()), !dbg !6879
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6880, !tbaa !2648
  %data_copy_required1 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 20, !dbg !6881, !ctir !357
  %3 = load i8, i8* %data_copy_required1, align 1, !dbg !6881, !tbaa !3202
  %tobool = trunc i8 %3 to i1, !dbg !6881, !ctir !142
  %frombool = zext i1 %tobool to i8, !dbg !6879
  store i8 %frombool, i8* %data_copy_required, align 1, !dbg !6879, !tbaa !2742
  %4 = load i8*, i8** %src_name.addr, align 8, !dbg !6882, !tbaa !2648
  %5 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6883, !tbaa !2648
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 1, !dbg !6884, !ctir !357
  %6 = load i32, i32* %dereference, align 4, !dbg !6884, !tbaa !3147, !ctir !76
  %cmp = icmp eq i32 %6, 2, !dbg !6885
  %7 = zext i1 %cmp to i64, !dbg !6883
  %cond = select i1 %cmp, i32 131072, i32 0, !dbg !6883
  %or = or i32 0, %cond, !dbg !6886
  %call = call i32 (i8*, i32, ...) @open_safer(i8* %4, i32 %or), !dbg !6887
  store i32 %call, i32* %source_desc, align 4, !dbg !6888, !tbaa !2635
  %8 = load i32, i32* %source_desc, align 4, !dbg !6889, !tbaa !2635
  %cmp2 = icmp slt i32 %8, 0, !dbg !6891
  br i1 %cmp2, label %if.then, label %if.end, !dbg !6892

if.then:                                          ; preds = %entry
  %call3 = call i32* @__errno_location() #16, !dbg !6893
  %9 = load i32, i32* %call3, align 4, !dbg !6893, !tbaa !2635, !ctir !7
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.60.145, i64 0, i64 0)) #9, !dbg !6895
  %10 = load i8*, i8** %src_name.addr, align 8, !dbg !6896, !tbaa !2648
  %call5 = call i8* @quotearg_style(i32 4, i8* %10), !dbg !6896
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %9, i8* %call4, i8* %call5), !dbg !6897
  store i1 false, i1* %retval, align 1, !dbg !6898
  br label %return, !dbg !6898

if.end:                                           ; preds = %entry
  %11 = load i32, i32* %source_desc, align 4, !dbg !6899, !tbaa !2635
  %call6 = call i32 @fstat(i32 %11, %struct.stat* %src_open_sb) #9, !dbg !6901
  %cmp7 = icmp ne i32 %call6, 0, !dbg !6902
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !6903

if.then8:                                         ; preds = %if.end
  %call9 = call i32* @__errno_location() #16, !dbg !6904
  %12 = load i32, i32* %call9, align 4, !dbg !6904, !tbaa !2635, !ctir !7
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61.146, i64 0, i64 0)) #9, !dbg !6906
  %13 = load i8*, i8** %src_name.addr, align 8, !dbg !6907, !tbaa !2648
  %call11 = call i8* @quotearg_style(i32 4, i8* %13), !dbg !6907
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %12, i8* %call10, i8* %call11), !dbg !6908
  store i8 0, i8* %return_val, align 1, !dbg !6909, !tbaa !2742
  br label %close_src_desc, !dbg !6910

if.end12:                                         ; preds = %if.end
  %14 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6911, !tbaa !2648
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 1, !dbg !6911, !ctir !414
  %15 = load i64, i64* %st_ino, align 8, !dbg !6911, !tbaa !4791, !ctir !276
  %st_ino13 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 1, !dbg !6911, !ctir !415
  %16 = load i64, i64* %st_ino13, align 8, !dbg !6911, !tbaa !4791, !ctir !276
  %cmp14 = icmp eq i64 %15, %16, !dbg !6911
  br i1 %cmp14, label %land.lhs.true, label %if.then17, !dbg !6911

land.lhs.true:                                    ; preds = %if.end12
  %17 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6911, !tbaa !2648
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 0, !dbg !6911, !ctir !414
  %18 = load i64, i64* %st_dev, align 8, !dbg !6911, !tbaa !4770, !ctir !274
  %st_dev15 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 0, !dbg !6911, !ctir !415
  %19 = load i64, i64* %st_dev15, align 8, !dbg !6911, !tbaa !4770, !ctir !274
  %cmp16 = icmp eq i64 %18, %19, !dbg !6911
  br i1 %cmp16, label %if.end20, label %if.then17, !dbg !6913

if.then17:                                        ; preds = %land.lhs.true, %if.end12
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.62.147, i64 0, i64 0)) #9, !dbg !6914
  %20 = load i8*, i8** %src_name.addr, align 8, !dbg !6916, !tbaa !2648
  %call19 = call i8* @quotearg_style(i32 4, i8* %20), !dbg !6916
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call18, i8* %call19), !dbg !6917
  store i8 0, i8* %return_val, align 1, !dbg !6918, !tbaa !2742
  br label %close_src_desc, !dbg !6919

if.end20:                                         ; preds = %land.lhs.true
  %21 = load i8*, i8** %new_dst.addr, align 8, !dbg !6920, !tbaa !2648
  %22 = load i8, i8* %21, align 1, !dbg !6922, !tbaa !2742
  %tobool21 = trunc i8 %22 to i1, !dbg !6922, !ctir !142
  br i1 %tobool21, label %if.end69, label %if.then22, !dbg !6923

if.then22:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata i32* %open_flags, metadata !6924, metadata !DIExpression()), !dbg !6926
  %23 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6927, !tbaa !2648
  %data_copy_required23 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %23, i32 0, i32 20, !dbg !6928, !ctir !357
  %24 = load i8, i8* %data_copy_required23, align 1, !dbg !6928, !tbaa !3202
  %tobool24 = trunc i8 %24 to i1, !dbg !6928, !ctir !142
  %25 = zext i1 %tobool24 to i64, !dbg !6927
  %cond25 = select i1 %tobool24, i32 512, i32 0, !dbg !6927
  %or26 = or i32 1, %cond25, !dbg !6929
  store i32 %or26, i32* %open_flags, align 4, !dbg !6926, !tbaa !2635
  %26 = load i8*, i8** %dst_name.addr, align 8, !dbg !6930, !tbaa !2648
  %27 = load i32, i32* %open_flags, align 4, !dbg !6931, !tbaa !2635
  %call27 = call i32 (i8*, i32, ...) @open_safer(i8* %26, i32 %27), !dbg !6932
  store i32 %call27, i32* %dest_desc, align 4, !dbg !6933, !tbaa !2635
  %call28 = call i32* @__errno_location() #16, !dbg !6934
  %28 = load i32, i32* %call28, align 4, !dbg !6934, !tbaa !2635, !ctir !7
  store i32 %28, i32* %dest_errno, align 4, !dbg !6935, !tbaa !2635
  %29 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6936, !tbaa !2648
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %29, i32 0, i32 18, !dbg !6938, !ctir !357
  %30 = load i8, i8* %set_security_context, align 1, !dbg !6938, !tbaa !2866
  %tobool29 = trunc i8 %30 to i1, !dbg !6938, !ctir !142
  br i1 %tobool29, label %land.lhs.true31, label %lor.lhs.false, !dbg !6939

lor.lhs.false:                                    ; preds = %if.then22
  %31 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6940, !tbaa !2648
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %31, i32 0, i32 22, !dbg !6941, !ctir !357
  %32 = load i8, i8* %preserve_security_context, align 1, !dbg !6941, !tbaa !2850
  %tobool30 = trunc i8 %32 to i1, !dbg !6941, !ctir !142
  br i1 %tobool30, label %land.lhs.true31, label %if.end42, !dbg !6942

land.lhs.true31:                                  ; preds = %lor.lhs.false, %if.then22
  %33 = load i32, i32* %dest_desc, align 4, !dbg !6943, !tbaa !2635
  %cmp32 = icmp sle i32 0, %33, !dbg !6944
  br i1 %cmp32, label %if.then33, label %if.end42, !dbg !6945

if.then33:                                        ; preds = %land.lhs.true31
  %34 = load i8*, i8** %dst_name.addr, align 8, !dbg !6946, !tbaa !2648
  %35 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6949, !tbaa !2648
  %preserve_security_context34 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %35, i32 0, i32 22, !dbg !6950, !ctir !357
  %36 = load i8, i8* %preserve_security_context34, align 1, !dbg !6950, !tbaa !2850
  %tobool35 = trunc i8 %36 to i1, !dbg !6950, !ctir !142
  %37 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6951, !tbaa !2648
  %call36 = call zeroext i1 @set_file_security_ctx(i8* %34, i1 zeroext %tobool35, i1 zeroext false, %struct.cp_options* %37), !dbg !6952
  br i1 %call36, label %if.end41, label %if.then37, !dbg !6953

if.then37:                                        ; preds = %if.then33
  %38 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6954, !tbaa !2648
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %38, i32 0, i32 23, !dbg !6957, !ctir !357
  %39 = load i8, i8* %require_preserve_context, align 2, !dbg !6957, !tbaa !3249
  %tobool38 = trunc i8 %39 to i1, !dbg !6957, !ctir !142
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !6958

if.then39:                                        ; preds = %if.then37
  store i8 0, i8* %return_val, align 1, !dbg !6959, !tbaa !2742
  br label %close_src_and_dst_desc, !dbg !6961

if.end40:                                         ; preds = %if.then37
  br label %if.end41, !dbg !6962

if.end41:                                         ; preds = %if.end40, %if.then33
  br label %if.end42, !dbg !6963

if.end42:                                         ; preds = %if.end41, %land.lhs.true31, %lor.lhs.false
  %40 = load i32, i32* %dest_desc, align 4, !dbg !6964, !tbaa !2635
  %cmp43 = icmp slt i32 %40, 0, !dbg !6966
  br i1 %cmp43, label %land.lhs.true44, label %if.end68, !dbg !6967

land.lhs.true44:                                  ; preds = %if.end42
  %41 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6968, !tbaa !2648
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %41, i32 0, i32 7, !dbg !6969, !ctir !357
  %42 = load i8, i8* %unlink_dest_after_failed_open, align 2, !dbg !6969, !tbaa !3155
  %tobool45 = trunc i8 %42 to i1, !dbg !6969, !ctir !142
  br i1 %tobool45, label %if.then46, label %if.end68, !dbg !6970

if.then46:                                        ; preds = %land.lhs.true44
  %43 = load i8*, i8** %dst_name.addr, align 8, !dbg !6971, !tbaa !2648
  %call47 = call i32 @unlink(i8* %43) #9, !dbg !6974
  %cmp48 = icmp ne i32 %call47, 0, !dbg !6975
  br i1 %cmp48, label %if.then49, label %if.end53, !dbg !6976

if.then49:                                        ; preds = %if.then46
  %call50 = call i32* @__errno_location() #16, !dbg !6977
  %44 = load i32, i32* %call50, align 4, !dbg !6977, !tbaa !2635, !ctir !7
  %call51 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24.114, i64 0, i64 0)) #9, !dbg !6979
  %45 = load i8*, i8** %dst_name.addr, align 8, !dbg !6980, !tbaa !2648
  %call52 = call i8* @quotearg_style(i32 4, i8* %45), !dbg !6980
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %44, i8* %call51, i8* %call52), !dbg !6981
  store i8 0, i8* %return_val, align 1, !dbg !6982, !tbaa !2742
  br label %close_src_desc, !dbg !6983

if.end53:                                         ; preds = %if.then46
  %46 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6984, !tbaa !2648
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %46, i32 0, i32 31, !dbg !6986, !ctir !357
  %47 = load i8, i8* %verbose, align 2, !dbg !6986, !tbaa !2812
  %tobool54 = trunc i8 %47 to i1, !dbg !6986, !ctir !142
  br i1 %tobool54, label %if.then55, label %if.end59, !dbg !6987

if.then55:                                        ; preds = %if.end53
  %call56 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25.115, i64 0, i64 0)) #9, !dbg !6988
  %48 = load i8*, i8** %dst_name.addr, align 8, !dbg !6989, !tbaa !2648
  %call57 = call i8* @quotearg_style(i32 4, i8* %48), !dbg !6989
  %call58 = call i32 (i8*, ...) @printf(i8* %call56, i8* %call57), !dbg !6990
  br label %if.end59, !dbg !6990

if.end59:                                         ; preds = %if.then55, %if.end53
  %49 = load i8*, i8** %new_dst.addr, align 8, !dbg !6991, !tbaa !2648
  store i8 1, i8* %49, align 1, !dbg !6992, !tbaa !2742, !ctir !142
  %50 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6993, !tbaa !2648
  %set_security_context60 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %50, i32 0, i32 18, !dbg !6995, !ctir !357
  %51 = load i8, i8* %set_security_context60, align 1, !dbg !6995, !tbaa !2866
  %tobool61 = trunc i8 %51 to i1, !dbg !6995, !ctir !142
  br i1 %tobool61, label %if.then62, label %if.end67, !dbg !6996

if.then62:                                        ; preds = %if.end59
  %52 = load i8*, i8** %src_name.addr, align 8, !dbg !6997, !tbaa !2648
  %53 = load i8*, i8** %dst_name.addr, align 8, !dbg !7000, !tbaa !2648
  %54 = load i32, i32* %dst_mode.addr, align 4, !dbg !7001, !tbaa !2635
  %55 = load i8*, i8** %new_dst.addr, align 8, !dbg !7002, !tbaa !2648
  %56 = load i8, i8* %55, align 1, !dbg !7003, !tbaa !2742
  %tobool63 = trunc i8 %56 to i1, !dbg !7003, !ctir !142
  %57 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7004, !tbaa !2648
  %call64 = call zeroext i1 @set_process_security_ctx(i8* %52, i8* %53, i32 %54, i1 zeroext %tobool63, %struct.cp_options* %57), !dbg !7005
  br i1 %call64, label %if.end66, label %if.then65, !dbg !7006

if.then65:                                        ; preds = %if.then62
  store i8 0, i8* %return_val, align 1, !dbg !7007, !tbaa !2742
  br label %close_src_desc, !dbg !7009

if.end66:                                         ; preds = %if.then62
  br label %if.end67, !dbg !7010

if.end67:                                         ; preds = %if.end66, %if.end59
  br label %if.end68, !dbg !7011

if.end68:                                         ; preds = %if.end67, %land.lhs.true44, %if.end42
  br label %if.end69, !dbg !7012

if.end69:                                         ; preds = %if.end68, %if.end20
  %58 = load i8*, i8** %new_dst.addr, align 8, !dbg !7013, !tbaa !2648
  %59 = load i8, i8* %58, align 1, !dbg !7015, !tbaa !2742
  %tobool70 = trunc i8 %59 to i1, !dbg !7015, !ctir !142
  br i1 %tobool70, label %if.then71, label %if.else112, !dbg !7016

if.then71:                                        ; preds = %if.end69
  br label %open_with_O_CREAT, !dbg !7017

open_with_O_CREAT:                                ; preds = %if.then124, %if.then71
  call void @llvm.dbg.label(metadata !7018), !dbg !7020
  call void @llvm.dbg.declare(metadata i32* %open_flags72, metadata !7021, metadata !DIExpression()), !dbg !7022
  store i32 65, i32* %open_flags72, align 4, !dbg !7022, !tbaa !2635
  %60 = load i8*, i8** %dst_name.addr, align 8, !dbg !7023, !tbaa !2648
  %61 = load i32, i32* %open_flags72, align 4, !dbg !7024, !tbaa !2635
  %or73 = or i32 %61, 128, !dbg !7025
  %62 = load i32, i32* %dst_mode.addr, align 4, !dbg !7026, !tbaa !2635
  %63 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7027, !tbaa !2635
  %neg = xor i32 %63, -1, !dbg !7028
  %and = and i32 %62, %neg, !dbg !7029
  %call74 = call i32 (i8*, i32, ...) @open_safer(i8* %60, i32 %or73, i32 %and), !dbg !7030
  store i32 %call74, i32* %dest_desc, align 4, !dbg !7031, !tbaa !2635
  %call75 = call i32* @__errno_location() #16, !dbg !7032
  %64 = load i32, i32* %call75, align 4, !dbg !7032, !tbaa !2635, !ctir !7
  store i32 %64, i32* %dest_errno, align 4, !dbg !7033, !tbaa !2635
  %65 = load i32, i32* %dest_desc, align 4, !dbg !7034, !tbaa !2635
  %cmp76 = icmp slt i32 %65, 0, !dbg !7036
  br i1 %cmp76, label %land.lhs.true77, label %if.end99, !dbg !7037

land.lhs.true77:                                  ; preds = %open_with_O_CREAT
  %66 = load i32, i32* %dest_errno, align 4, !dbg !7038, !tbaa !2635
  %cmp78 = icmp eq i32 %66, 17, !dbg !7039
  br i1 %cmp78, label %land.lhs.true79, label %if.end99, !dbg !7040

land.lhs.true79:                                  ; preds = %land.lhs.true77
  %67 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7041, !tbaa !2648
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %67, i32 0, i32 9, !dbg !7042, !ctir !357
  %68 = load i8, i8* %move_mode, align 8, !dbg !7042, !tbaa !3167
  %tobool80 = trunc i8 %68 to i1, !dbg !7042, !ctir !142
  br i1 %tobool80, label %if.end99, label %if.then81, !dbg !7043

if.then81:                                        ; preds = %land.lhs.true79
  call void @llvm.dbg.declare(metadata %struct.stat* %dangling_link_sb, metadata !7044, metadata !DIExpression()), !dbg !7046
  %69 = load i8*, i8** %dst_name.addr, align 8, !dbg !7047, !tbaa !2648
  %call82 = call i32 @lstat(i8* %69, %struct.stat* %dangling_link_sb) #9, !dbg !7049
  %cmp83 = icmp eq i32 %call82, 0, !dbg !7050
  br i1 %cmp83, label %land.lhs.true84, label %if.end98, !dbg !7051

land.lhs.true84:                                  ; preds = %if.then81
  %st_mode85 = getelementptr inbounds %struct.stat, %struct.stat* %dangling_link_sb, i32 0, i32 3, !dbg !7052, !ctir !415
  %70 = load i32, i32* %st_mode85, align 8, !dbg !7052, !tbaa !2914, !ctir !140
  %and86 = and i32 %70, 61440, !dbg !7052
  %cmp87 = icmp eq i32 %and86, 40960, !dbg !7052
  br i1 %cmp87, label %if.then88, label %if.end98, !dbg !7053

if.then88:                                        ; preds = %land.lhs.true84
  %71 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7054, !tbaa !2648
  %open_dangling_dest_symlink = getelementptr inbounds %struct.cp_options, %struct.cp_options* %71, i32 0, i32 33, !dbg !7057, !ctir !357
  %72 = load i8, i8* %open_dangling_dest_symlink, align 8, !dbg !7057, !tbaa !3241
  %tobool89 = trunc i8 %72 to i1, !dbg !7057, !ctir !142
  br i1 %tobool89, label %if.then90, label %if.else, !dbg !7058

if.then90:                                        ; preds = %if.then88
  %73 = load i8*, i8** %dst_name.addr, align 8, !dbg !7059, !tbaa !2648
  %74 = load i32, i32* %open_flags72, align 4, !dbg !7061, !tbaa !2635
  %75 = load i32, i32* %dst_mode.addr, align 4, !dbg !7062, !tbaa !2635
  %76 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7063, !tbaa !2635
  %neg91 = xor i32 %76, -1, !dbg !7064
  %and92 = and i32 %75, %neg91, !dbg !7065
  %call93 = call i32 (i8*, i32, ...) @open_safer(i8* %73, i32 %74, i32 %and92), !dbg !7066
  store i32 %call93, i32* %dest_desc, align 4, !dbg !7067, !tbaa !2635
  %call94 = call i32* @__errno_location() #16, !dbg !7068
  %77 = load i32, i32* %call94, align 4, !dbg !7068, !tbaa !2635, !ctir !7
  store i32 %77, i32* %dest_errno, align 4, !dbg !7069, !tbaa !2635
  br label %if.end97, !dbg !7070

if.else:                                          ; preds = %if.then88
  %call95 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.63.148, i64 0, i64 0)) #9, !dbg !7071
  %78 = load i8*, i8** %dst_name.addr, align 8, !dbg !7073, !tbaa !2648
  %call96 = call i8* @quotearg_style(i32 4, i8* %78), !dbg !7073
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call95, i8* %call96), !dbg !7074
  store i8 0, i8* %return_val, align 1, !dbg !7075, !tbaa !2742
  br label %close_src_desc, !dbg !7076

if.end97:                                         ; preds = %if.then90
  br label %if.end98, !dbg !7077

if.end98:                                         ; preds = %if.end97, %land.lhs.true84, %if.then81
  br label %if.end99, !dbg !7078

if.end99:                                         ; preds = %if.end98, %land.lhs.true79, %land.lhs.true77, %open_with_O_CREAT
  %79 = load i32, i32* %dest_desc, align 4, !dbg !7079, !tbaa !2635
  %cmp100 = icmp slt i32 %79, 0, !dbg !7081
  br i1 %cmp100, label %land.lhs.true101, label %if.end111, !dbg !7082

land.lhs.true101:                                 ; preds = %if.end99
  %80 = load i32, i32* %dest_errno, align 4, !dbg !7083, !tbaa !2635
  %cmp102 = icmp eq i32 %80, 21, !dbg !7084
  br i1 %cmp102, label %land.lhs.true103, label %if.end111, !dbg !7085

land.lhs.true103:                                 ; preds = %land.lhs.true101
  %81 = load i8*, i8** %dst_name.addr, align 8, !dbg !7086, !tbaa !2648
  %82 = load i8, i8* %81, align 1, !dbg !7087, !tbaa !3295, !ctir !181
  %conv = sext i8 %82 to i32, !dbg !7087
  %tobool104 = icmp ne i32 %conv, 0, !dbg !7087
  br i1 %tobool104, label %land.lhs.true105, label %if.end111, !dbg !7088

land.lhs.true105:                                 ; preds = %land.lhs.true103
  %83 = load i8*, i8** %dst_name.addr, align 8, !dbg !7089, !tbaa !2648
  %84 = load i8*, i8** %dst_name.addr, align 8, !dbg !7090, !tbaa !2648
  %call106 = call i64 @strlen(i8* %84) #14, !dbg !7091
  %sub = sub i64 %call106, 1, !dbg !7092
  %arrayidx = getelementptr inbounds i8, i8* %83, i64 %sub, !dbg !7089, !ctir !180
  %85 = load i8, i8* %arrayidx, align 1, !dbg !7089, !tbaa !3295
  %conv107 = sext i8 %85 to i32, !dbg !7089
  %cmp108 = icmp eq i32 %conv107, 47, !dbg !7093
  br i1 %cmp108, label %if.then110, label %if.end111, !dbg !7094

if.then110:                                       ; preds = %land.lhs.true105
  store i32 20, i32* %dest_errno, align 4, !dbg !7095, !tbaa !2635
  br label %if.end111, !dbg !7096

if.end111:                                        ; preds = %if.then110, %land.lhs.true105, %land.lhs.true103, %land.lhs.true101, %if.end99
  br label %if.end113, !dbg !7097

if.else112:                                       ; preds = %if.end69
  store i32 0, i32* %omitted_permissions.addr, align 4, !dbg !7098, !tbaa !2635
  br label %if.end113

if.end113:                                        ; preds = %if.else112, %if.end111
  %86 = load i32, i32* %dest_desc, align 4, !dbg !7100, !tbaa !2635
  %cmp114 = icmp slt i32 %86, 0, !dbg !7102
  br i1 %cmp114, label %if.then116, label %if.end128, !dbg !7103

if.then116:                                       ; preds = %if.end113
  %87 = load i32, i32* %dest_errno, align 4, !dbg !7104, !tbaa !2635
  %cmp117 = icmp eq i32 %87, 2, !dbg !7107
  br i1 %cmp117, label %land.lhs.true119, label %if.end125, !dbg !7108

land.lhs.true119:                                 ; preds = %if.then116
  %88 = load i8*, i8** %new_dst.addr, align 8, !dbg !7109, !tbaa !2648
  %89 = load i8, i8* %88, align 1, !dbg !7110, !tbaa !2742
  %tobool120 = trunc i8 %89 to i1, !dbg !7110, !ctir !142
  br i1 %tobool120, label %if.end125, label %land.lhs.true121, !dbg !7111

land.lhs.true121:                                 ; preds = %land.lhs.true119
  %90 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7112, !tbaa !2648
  %move_mode122 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %90, i32 0, i32 9, !dbg !7113, !ctir !357
  %91 = load i8, i8* %move_mode122, align 8, !dbg !7113, !tbaa !3167
  %tobool123 = trunc i8 %91 to i1, !dbg !7113, !ctir !142
  br i1 %tobool123, label %if.end125, label %if.then124, !dbg !7114

if.then124:                                       ; preds = %land.lhs.true121
  %92 = load i8*, i8** %new_dst.addr, align 8, !dbg !7115, !tbaa !2648
  store i8 1, i8* %92, align 1, !dbg !7117, !tbaa !2742, !ctir !142
  br label %open_with_O_CREAT, !dbg !7118

if.end125:                                        ; preds = %land.lhs.true121, %land.lhs.true119, %if.then116
  %93 = load i32, i32* %dest_errno, align 4, !dbg !7119, !tbaa !2635
  %call126 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.64.149, i64 0, i64 0)) #9, !dbg !7120
  %94 = load i8*, i8** %dst_name.addr, align 8, !dbg !7121, !tbaa !2648
  %call127 = call i8* @quotearg_style(i32 4, i8* %94), !dbg !7121
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %93, i8* %call126, i8* %call127), !dbg !7122
  store i8 0, i8* %return_val, align 1, !dbg !7123, !tbaa !2742
  br label %close_src_desc, !dbg !7124

if.end128:                                        ; preds = %if.end113
  %95 = load i32, i32* %dest_desc, align 4, !dbg !7125, !tbaa !2635
  %call129 = call i32 @fstat(i32 %95, %struct.stat* %sb) #9, !dbg !7127
  %cmp130 = icmp ne i32 %call129, 0, !dbg !7128
  br i1 %cmp130, label %if.then132, label %if.end136, !dbg !7129

if.then132:                                       ; preds = %if.end128
  %call133 = call i32* @__errno_location() #16, !dbg !7130
  %96 = load i32, i32* %call133, align 4, !dbg !7130, !tbaa !2635, !ctir !7
  %call134 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61.146, i64 0, i64 0)) #9, !dbg !7132
  %97 = load i8*, i8** %dst_name.addr, align 8, !dbg !7133, !tbaa !2648
  %call135 = call i8* @quotearg_style(i32 4, i8* %97), !dbg !7133
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %96, i8* %call134, i8* %call135), !dbg !7134
  store i8 0, i8* %return_val, align 1, !dbg !7135, !tbaa !2742
  br label %close_src_and_dst_desc, !dbg !7136

if.end136:                                        ; preds = %if.end128
  %98 = load i8, i8* %data_copy_required, align 1, !dbg !7137, !tbaa !2742
  %tobool137 = trunc i8 %98 to i1, !dbg !7137
  br i1 %tobool137, label %land.lhs.true139, label %if.end161, !dbg !7139

land.lhs.true139:                                 ; preds = %if.end136
  %99 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7140, !tbaa !2648
  %reflink_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %99, i32 0, i32 36, !dbg !7141, !ctir !357
  %100 = load i32, i32* %reflink_mode, align 8, !dbg !7141, !tbaa !3143, !ctir !95
  %tobool140 = icmp ne i32 %100, 0, !dbg !7140
  br i1 %tobool140, label %if.then141, label %if.end161, !dbg !7142

if.then141:                                       ; preds = %land.lhs.true139
  call void @llvm.dbg.declare(metadata i8* %clone_ok, metadata !7143, metadata !DIExpression()), !dbg !7145
  %101 = load i32, i32* %dest_desc, align 4, !dbg !7146, !tbaa !2635
  %102 = load i32, i32* %source_desc, align 4, !dbg !7147, !tbaa !2635
  %call142 = call i32 @clone_file(i32 %101, i32 %102), !dbg !7148
  %cmp143 = icmp eq i32 %call142, 0, !dbg !7149
  %frombool145 = zext i1 %cmp143 to i8, !dbg !7145
  store i8 %frombool145, i8* %clone_ok, align 1, !dbg !7145, !tbaa !2742
  %103 = load i8, i8* %clone_ok, align 1, !dbg !7150, !tbaa !2742
  %tobool146 = trunc i8 %103 to i1, !dbg !7150
  br i1 %tobool146, label %if.then152, label %lor.lhs.false148, !dbg !7152

lor.lhs.false148:                                 ; preds = %if.then141
  %104 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7153, !tbaa !2648
  %reflink_mode149 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %104, i32 0, i32 36, !dbg !7154, !ctir !357
  %105 = load i32, i32* %reflink_mode149, align 8, !dbg !7154, !tbaa !3143, !ctir !95
  %cmp150 = icmp eq i32 %105, 2, !dbg !7155
  br i1 %cmp150, label %if.then152, label %if.end160, !dbg !7156

if.then152:                                       ; preds = %lor.lhs.false148, %if.then141
  %106 = load i8, i8* %clone_ok, align 1, !dbg !7157, !tbaa !2742
  %tobool153 = trunc i8 %106 to i1, !dbg !7157
  br i1 %tobool153, label %if.end159, label %if.then154, !dbg !7160

if.then154:                                       ; preds = %if.then152
  %call155 = call i32* @__errno_location() #16, !dbg !7161
  %107 = load i32, i32* %call155, align 4, !dbg !7161, !tbaa !2635, !ctir !7
  %call156 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.65.150, i64 0, i64 0)) #9, !dbg !7163
  %108 = load i8*, i8** %dst_name.addr, align 8, !dbg !7164, !tbaa !2648
  %call157 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %108), !dbg !7164
  %109 = load i8*, i8** %src_name.addr, align 8, !dbg !7165, !tbaa !2648
  %call158 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %109), !dbg !7165
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %107, i8* %call156, i8* %call157, i8* %call158), !dbg !7166
  store i8 0, i8* %return_val, align 1, !dbg !7167, !tbaa !2742
  br label %close_src_and_dst_desc, !dbg !7168

if.end159:                                        ; preds = %if.then152
  store i8 0, i8* %data_copy_required, align 1, !dbg !7169, !tbaa !2742
  br label %if.end160, !dbg !7170

if.end160:                                        ; preds = %if.end159, %lor.lhs.false148
  br label %if.end161, !dbg !7171

if.end161:                                        ; preds = %if.end160, %land.lhs.true139, %if.end136
  %110 = load i8, i8* %data_copy_required, align 1, !dbg !7172, !tbaa !2742
  %tobool162 = trunc i8 %110 to i1, !dbg !7172
  br i1 %tobool162, label %if.then163, label %if.end265, !dbg !7174

if.then163:                                       ; preds = %if.end161
  call void @llvm.dbg.declare(metadata i64* %buf_alignment, metadata !7175, metadata !DIExpression()), !dbg !7177
  %call164 = call i32 @getpagesize() #16, !dbg !7178
  %conv165 = sext i32 %call164 to i64, !dbg !7178
  store i64 %conv165, i64* %buf_alignment, align 8, !dbg !7177, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %buf_size, metadata !7179, metadata !DIExpression()), !dbg !7180
  %call166 = call i64 @io_blksize(%struct.stat* byval(%struct.stat) align 8 %sb), !dbg !7181
  store i64 %call166, i64* %buf_size, align 8, !dbg !7180, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %hole_size, metadata !7182, metadata !DIExpression()), !dbg !7183
  %st_blksize = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7184, !ctir !415
  %111 = load i64, i64* %st_blksize, align 8, !dbg !7184, !tbaa !7185, !ctir !286
  %cmp167 = icmp slt i64 0, %111, !dbg !7184
  br i1 %cmp167, label %land.lhs.true169, label %cond.false, !dbg !7184

land.lhs.true169:                                 ; preds = %if.then163
  %st_blksize170 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7184, !ctir !415
  %112 = load i64, i64* %st_blksize170, align 8, !dbg !7184, !tbaa !7185, !ctir !286
  %cmp171 = icmp ule i64 %112, 2305843009213693952, !dbg !7184
  br i1 %cmp171, label %cond.true, label %cond.false, !dbg !7184

cond.true:                                        ; preds = %land.lhs.true169
  %st_blksize173 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7184, !ctir !415
  %113 = load i64, i64* %st_blksize173, align 8, !dbg !7184, !tbaa !7185, !ctir !286
  br label %cond.end, !dbg !7184

cond.false:                                       ; preds = %land.lhs.true169, %if.then163
  br label %cond.end, !dbg !7184

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond174 = phi i64 [ %113, %cond.true ], [ 512, %cond.false ], !dbg !7184
  store i64 %cond174, i64* %hole_size, align 8, !dbg !7183, !tbaa !3288
  %114 = load i32, i32* %source_desc, align 4, !dbg !7186, !tbaa !2635
  call void @fdadvise(i32 %114, i64 0, i64 0, i32 2), !dbg !7187
  call void @llvm.dbg.declare(metadata i8* %make_holes, metadata !7188, metadata !DIExpression()), !dbg !7189
  store i8 0, i8* %make_holes, align 1, !dbg !7189, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %sparse_src, metadata !7190, metadata !DIExpression()), !dbg !7191
  %call175 = call zeroext i1 @is_probably_sparse(%struct.stat* %src_open_sb), !dbg !7192
  %frombool176 = zext i1 %call175 to i8, !dbg !7191
  store i8 %frombool176, i8* %sparse_src, align 1, !dbg !7191, !tbaa !2742
  %st_mode177 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 3, !dbg !7193, !ctir !415
  %115 = load i32, i32* %st_mode177, align 8, !dbg !7193, !tbaa !2914, !ctir !140
  %and178 = and i32 %115, 61440, !dbg !7193
  %cmp179 = icmp eq i32 %and178, 32768, !dbg !7193
  br i1 %cmp179, label %if.then181, label %if.end194, !dbg !7195

if.then181:                                       ; preds = %cond.end
  %116 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7196, !tbaa !2648
  %sparse_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %116, i32 0, i32 3, !dbg !7199, !ctir !357
  %117 = load i32, i32* %sparse_mode, align 4, !dbg !7199, !tbaa !3218, !ctir !89
  %cmp182 = icmp eq i32 %117, 3, !dbg !7200
  br i1 %cmp182, label %if.then184, label %if.end185, !dbg !7201

if.then184:                                       ; preds = %if.then181
  store i8 1, i8* %make_holes, align 1, !dbg !7202, !tbaa !2742
  br label %if.end185, !dbg !7203

if.end185:                                        ; preds = %if.then184, %if.then181
  %118 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7204, !tbaa !2648
  %sparse_mode186 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %118, i32 0, i32 3, !dbg !7206, !ctir !357
  %119 = load i32, i32* %sparse_mode186, align 4, !dbg !7206, !tbaa !3218, !ctir !89
  %cmp187 = icmp eq i32 %119, 2, !dbg !7207
  br i1 %cmp187, label %land.lhs.true189, label %if.end193, !dbg !7208

land.lhs.true189:                                 ; preds = %if.end185
  %120 = load i8, i8* %sparse_src, align 1, !dbg !7209, !tbaa !2742
  %tobool190 = trunc i8 %120 to i1, !dbg !7209
  br i1 %tobool190, label %if.then192, label %if.end193, !dbg !7210

if.then192:                                       ; preds = %land.lhs.true189
  store i8 1, i8* %make_holes, align 1, !dbg !7211, !tbaa !2742
  br label %if.end193, !dbg !7212

if.end193:                                        ; preds = %if.then192, %land.lhs.true189, %if.end185
  br label %if.end194, !dbg !7213

if.end194:                                        ; preds = %if.end193, %cond.end
  %121 = load i8, i8* %make_holes, align 1, !dbg !7214, !tbaa !2742
  %tobool195 = trunc i8 %121 to i1, !dbg !7214
  br i1 %tobool195, label %if.end220, label %if.then196, !dbg !7216

if.then196:                                       ; preds = %if.end194
  call void @llvm.dbg.declare(metadata i64* %blcm_max, metadata !7217, metadata !DIExpression()), !dbg !7219
  %122 = load i64, i64* %buf_alignment, align 8, !dbg !7220, !tbaa !3288
  %sub197 = sub i64 9223372036854775807, %122, !dbg !7221
  store i64 %sub197, i64* %blcm_max, align 8, !dbg !7219, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %blcm, metadata !7222, metadata !DIExpression()), !dbg !7223
  %call198 = call i64 @io_blksize(%struct.stat* byval(%struct.stat) align 8 %src_open_sb), !dbg !7224
  %123 = load i64, i64* %buf_size, align 8, !dbg !7225, !tbaa !3288
  %124 = load i64, i64* %blcm_max, align 8, !dbg !7226, !tbaa !3288
  %call199 = call i64 @buffer_lcm(i64 %call198, i64 %123, i64 %124) #16, !dbg !7227
  store i64 %call199, i64* %blcm, align 8, !dbg !7223, !tbaa !3288
  %st_mode200 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 3, !dbg !7228, !ctir !415
  %125 = load i32, i32* %st_mode200, align 8, !dbg !7228, !tbaa !2914, !ctir !140
  %and201 = and i32 %125, 61440, !dbg !7228
  %cmp202 = icmp eq i32 %and201, 32768, !dbg !7228
  br i1 %cmp202, label %land.lhs.true204, label %if.end209, !dbg !7230

land.lhs.true204:                                 ; preds = %if.then196
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 8, !dbg !7231, !ctir !415
  %126 = load i64, i64* %st_size, align 8, !dbg !7231, !tbaa !4018, !ctir !29
  %127 = load i64, i64* %buf_size, align 8, !dbg !7232, !tbaa !3288
  %cmp205 = icmp ult i64 %126, %127, !dbg !7233
  br i1 %cmp205, label %if.then207, label %if.end209, !dbg !7234

if.then207:                                       ; preds = %land.lhs.true204
  %st_size208 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 8, !dbg !7235, !ctir !415
  %128 = load i64, i64* %st_size208, align 8, !dbg !7235, !tbaa !4018, !ctir !29
  %add = add nsw i64 %128, 1, !dbg !7236
  store i64 %add, i64* %buf_size, align 8, !dbg !7237, !tbaa !3288
  br label %if.end209, !dbg !7238

if.end209:                                        ; preds = %if.then207, %land.lhs.true204, %if.then196
  %129 = load i64, i64* %blcm, align 8, !dbg !7239, !tbaa !3288
  %sub210 = sub i64 %129, 1, !dbg !7240
  %130 = load i64, i64* %buf_size, align 8, !dbg !7241, !tbaa !3288
  %add211 = add i64 %130, %sub210, !dbg !7241
  store i64 %add211, i64* %buf_size, align 8, !dbg !7241, !tbaa !3288
  %131 = load i64, i64* %buf_size, align 8, !dbg !7242, !tbaa !3288
  %132 = load i64, i64* %blcm, align 8, !dbg !7243, !tbaa !3288
  %rem = urem i64 %131, %132, !dbg !7244
  %133 = load i64, i64* %buf_size, align 8, !dbg !7245, !tbaa !3288
  %sub212 = sub i64 %133, %rem, !dbg !7245
  store i64 %sub212, i64* %buf_size, align 8, !dbg !7245, !tbaa !3288
  %134 = load i64, i64* %buf_size, align 8, !dbg !7246, !tbaa !3288
  %cmp213 = icmp eq i64 %134, 0, !dbg !7248
  br i1 %cmp213, label %if.then218, label %lor.lhs.false215, !dbg !7249

lor.lhs.false215:                                 ; preds = %if.end209
  %135 = load i64, i64* %blcm_max, align 8, !dbg !7250, !tbaa !3288
  %136 = load i64, i64* %buf_size, align 8, !dbg !7251, !tbaa !3288
  %cmp216 = icmp ult i64 %135, %136, !dbg !7252
  br i1 %cmp216, label %if.then218, label %if.end219, !dbg !7253

if.then218:                                       ; preds = %lor.lhs.false215, %if.end209
  %137 = load i64, i64* %blcm, align 8, !dbg !7254, !tbaa !3288
  store i64 %137, i64* %buf_size, align 8, !dbg !7255, !tbaa !3288
  br label %if.end219, !dbg !7256

if.end219:                                        ; preds = %if.then218, %lor.lhs.false215
  br label %if.end220, !dbg !7257

if.end220:                                        ; preds = %if.end219, %if.end194
  %138 = load i64, i64* %buf_size, align 8, !dbg !7258, !tbaa !3288
  %139 = load i64, i64* %buf_alignment, align 8, !dbg !7259, !tbaa !3288
  %add221 = add i64 %138, %139, !dbg !7260
  %call222 = call noalias i8* @xmalloc(i64 %add221), !dbg !7261
  store i8* %call222, i8** %buf_alloc, align 8, !dbg !7262, !tbaa !2648
  %140 = load i8*, i8** %buf_alloc, align 8, !dbg !7263, !tbaa !2648
  %141 = load i64, i64* %buf_alignment, align 8, !dbg !7264, !tbaa !3288
  %call223 = call i8* @ptr_align(i8* %140, i64 %141), !dbg !7265
  store i8* %call223, i8** %buf, align 8, !dbg !7266, !tbaa !2648
  %142 = load i8, i8* %sparse_src, align 1, !dbg !7267, !tbaa !2742
  %tobool224 = trunc i8 %142 to i1, !dbg !7267
  br i1 %tobool224, label %if.then225, label %if.end240, !dbg !7269

if.then225:                                       ; preds = %if.end220
  call void @llvm.dbg.declare(metadata i8* %normal_copy_required, metadata !7270, metadata !DIExpression()), !dbg !7272
  %143 = load i32, i32* %source_desc, align 4, !dbg !7273, !tbaa !2635
  %144 = load i32, i32* %dest_desc, align 4, !dbg !7275, !tbaa !2635
  %145 = load i8*, i8** %buf, align 8, !dbg !7276, !tbaa !2648
  %146 = load i64, i64* %buf_size, align 8, !dbg !7277, !tbaa !3288
  %147 = load i64, i64* %hole_size, align 8, !dbg !7278, !tbaa !3288
  %st_size226 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 8, !dbg !7279, !ctir !415
  %148 = load i64, i64* %st_size226, align 8, !dbg !7279, !tbaa !4018, !ctir !29
  %149 = load i8, i8* %make_holes, align 1, !dbg !7280, !tbaa !2742
  %tobool227 = trunc i8 %149 to i1, !dbg !7280
  br i1 %tobool227, label %cond.true229, label %cond.false231, !dbg !7280

cond.true229:                                     ; preds = %if.then225
  %150 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7281, !tbaa !2648
  %sparse_mode230 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %150, i32 0, i32 3, !dbg !7282, !ctir !357
  %151 = load i32, i32* %sparse_mode230, align 4, !dbg !7282, !tbaa !3218, !ctir !89
  br label %cond.end232, !dbg !7280

cond.false231:                                    ; preds = %if.then225
  br label %cond.end232, !dbg !7280

cond.end232:                                      ; preds = %cond.false231, %cond.true229
  %cond233 = phi i32 [ %151, %cond.true229 ], [ 1, %cond.false231 ], !dbg !7280
  %152 = load i8*, i8** %src_name.addr, align 8, !dbg !7283, !tbaa !2648
  %153 = load i8*, i8** %dst_name.addr, align 8, !dbg !7284, !tbaa !2648
  %call234 = call zeroext i1 @extent_copy(i32 %143, i32 %144, i8* %145, i64 %146, i64 %147, i64 %148, i32 %cond233, i8* %152, i8* %153, i8* %normal_copy_required), !dbg !7285
  br i1 %call234, label %if.then235, label %if.end236, !dbg !7286

if.then235:                                       ; preds = %cond.end232
  br label %preserve_metadata, !dbg !7287

if.end236:                                        ; preds = %cond.end232
  %154 = load i8, i8* %normal_copy_required, align 1, !dbg !7288, !tbaa !2742
  %tobool237 = trunc i8 %154 to i1, !dbg !7288
  br i1 %tobool237, label %if.end239, label %if.then238, !dbg !7290

if.then238:                                       ; preds = %if.end236
  store i8 0, i8* %return_val, align 1, !dbg !7291, !tbaa !2742
  br label %close_src_and_dst_desc, !dbg !7293

if.end239:                                        ; preds = %if.end236
  br label %if.end240, !dbg !7294

if.end240:                                        ; preds = %if.end239, %if.end220
  call void @llvm.dbg.declare(metadata i64* %n_read, metadata !7295, metadata !DIExpression()), !dbg !7296
  call void @llvm.dbg.declare(metadata i8* %wrote_hole_at_eof, metadata !7297, metadata !DIExpression()), !dbg !7298
  %155 = load i32, i32* %source_desc, align 4, !dbg !7299, !tbaa !2635
  %156 = load i32, i32* %dest_desc, align 4, !dbg !7301, !tbaa !2635
  %157 = load i8*, i8** %buf, align 8, !dbg !7302, !tbaa !2648
  %158 = load i64, i64* %buf_size, align 8, !dbg !7303, !tbaa !3288
  %159 = load i8, i8* %make_holes, align 1, !dbg !7304, !tbaa !2742
  %tobool241 = trunc i8 %159 to i1, !dbg !7304
  br i1 %tobool241, label %cond.true243, label %cond.false244, !dbg !7304

cond.true243:                                     ; preds = %if.end240
  %160 = load i64, i64* %hole_size, align 8, !dbg !7305, !tbaa !3288
  br label %cond.end245, !dbg !7304

cond.false244:                                    ; preds = %if.end240
  br label %cond.end245, !dbg !7304

cond.end245:                                      ; preds = %cond.false244, %cond.true243
  %cond246 = phi i64 [ %160, %cond.true243 ], [ 0, %cond.false244 ], !dbg !7304
  %161 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7306, !tbaa !2648
  %sparse_mode247 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %161, i32 0, i32 3, !dbg !7307, !ctir !357
  %162 = load i32, i32* %sparse_mode247, align 4, !dbg !7307, !tbaa !3218, !ctir !89
  %cmp248 = icmp eq i32 %162, 3, !dbg !7308
  %163 = load i8*, i8** %src_name.addr, align 8, !dbg !7309, !tbaa !2648
  %164 = load i8*, i8** %dst_name.addr, align 8, !dbg !7310, !tbaa !2648
  %call250 = call zeroext i1 @sparse_copy(i32 %155, i32 %156, i8* %157, i64 %158, i64 %cond246, i1 zeroext %cmp248, i8* %163, i8* %164, i64 -1, i64* %n_read, i8* %wrote_hole_at_eof), !dbg !7311
  br i1 %call250, label %if.else252, label %if.then251, !dbg !7312

if.then251:                                       ; preds = %cond.end245
  store i8 0, i8* %return_val, align 1, !dbg !7313, !tbaa !2742
  br label %close_src_and_dst_desc, !dbg !7315

if.else252:                                       ; preds = %cond.end245
  %165 = load i8, i8* %wrote_hole_at_eof, align 1, !dbg !7316, !tbaa !2742
  %tobool253 = trunc i8 %165 to i1, !dbg !7316
  br i1 %tobool253, label %land.lhs.true255, label %if.end263, !dbg !7318

land.lhs.true255:                                 ; preds = %if.else252
  %166 = load i32, i32* %dest_desc, align 4, !dbg !7319, !tbaa !2635
  %167 = load i64, i64* %n_read, align 8, !dbg !7320, !tbaa !3288
  %call256 = call i32 @ftruncate(i32 %166, i64 %167) #9, !dbg !7321
  %cmp257 = icmp slt i32 %call256, 0, !dbg !7322
  br i1 %cmp257, label %if.then259, label %if.end263, !dbg !7323

if.then259:                                       ; preds = %land.lhs.true255
  %call260 = call i32* @__errno_location() #16, !dbg !7324
  %168 = load i32, i32* %call260, align 4, !dbg !7324, !tbaa !2635, !ctir !7
  %call261 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.66.151, i64 0, i64 0)) #9, !dbg !7326
  %169 = load i8*, i8** %dst_name.addr, align 8, !dbg !7327, !tbaa !2648
  %call262 = call i8* @quotearg_style(i32 4, i8* %169), !dbg !7327
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %168, i8* %call261, i8* %call262), !dbg !7328
  store i8 0, i8* %return_val, align 1, !dbg !7329, !tbaa !2742
  br label %close_src_and_dst_desc, !dbg !7330

if.end263:                                        ; preds = %land.lhs.true255, %if.else252
  br label %if.end264

if.end264:                                        ; preds = %if.end263
  br label %if.end265, !dbg !7331

if.end265:                                        ; preds = %if.end264, %if.end161
  br label %preserve_metadata, !dbg !7172

preserve_metadata:                                ; preds = %if.end265, %if.then235
  call void @llvm.dbg.label(metadata !7332), !dbg !7333
  %170 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7334, !tbaa !2648
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %170, i32 0, i32 16, !dbg !7336, !ctir !357
  %171 = load i8, i8* %preserve_timestamps, align 1, !dbg !7336, !tbaa !2826
  %tobool266 = trunc i8 %171 to i1, !dbg !7336, !ctir !142
  br i1 %tobool266, label %if.then267, label %if.end284, !dbg !7337

if.then267:                                       ; preds = %preserve_metadata
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timespec, metadata !7338, metadata !DIExpression()), !dbg !7340
  %arrayidx268 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !7341, !ctir !445
  %172 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7342, !tbaa !2648
  %call269 = call { i64, i64 } @get_stat_atime(%struct.stat* %172) #14, !dbg !7343
  %173 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !7343
  %174 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %173, i32 0, i32 0, !dbg !7343
  %175 = extractvalue { i64, i64 } %call269, 0, !dbg !7343
  store i64 %175, i64* %174, align 8, !dbg !7343
  %176 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %173, i32 0, i32 1, !dbg !7343
  %177 = extractvalue { i64, i64 } %call269, 1, !dbg !7343
  store i64 %177, i64* %176, align 8, !dbg !7343
  %178 = bitcast %struct.timespec* %arrayidx268 to i8*, !dbg !7343
  %179 = bitcast %struct.timespec* %tmp to i8*, !dbg !7343
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %178, i8* align 8 %179, i64 16, i1 false), !dbg !7343, !tbaa.struct !3798
  %arrayidx270 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !7344, !ctir !445
  %180 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7345, !tbaa !2648
  %call272 = call { i64, i64 } @get_stat_mtime(%struct.stat* %180) #14, !dbg !7346
  %181 = bitcast %struct.timespec* %tmp271 to { i64, i64 }*, !dbg !7346
  %182 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %181, i32 0, i32 0, !dbg !7346
  %183 = extractvalue { i64, i64 } %call272, 0, !dbg !7346
  store i64 %183, i64* %182, align 8, !dbg !7346
  %184 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %181, i32 0, i32 1, !dbg !7346
  %185 = extractvalue { i64, i64 } %call272, 1, !dbg !7346
  store i64 %185, i64* %184, align 8, !dbg !7346
  %186 = bitcast %struct.timespec* %arrayidx270 to i8*, !dbg !7346
  %187 = bitcast %struct.timespec* %tmp271 to i8*, !dbg !7346
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %186, i8* align 8 %187, i64 16, i1 false), !dbg !7346, !tbaa.struct !3798
  %188 = load i32, i32* %dest_desc, align 4, !dbg !7347, !tbaa !2635
  %189 = load i8*, i8** %dst_name.addr, align 8, !dbg !7349, !tbaa !2648
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !7350
  %call273 = call i32 @fdutimens(i32 %188, i8* %189, %struct.timespec* %arraydecay), !dbg !7351
  %cmp274 = icmp ne i32 %call273, 0, !dbg !7352
  br i1 %cmp274, label %if.then276, label %if.end283, !dbg !7353

if.then276:                                       ; preds = %if.then267
  %call277 = call i32* @__errno_location() #16, !dbg !7354
  %190 = load i32, i32* %call277, align 4, !dbg !7354, !tbaa !2635, !ctir !7
  %call278 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.48.138, i64 0, i64 0)) #9, !dbg !7356
  %191 = load i8*, i8** %dst_name.addr, align 8, !dbg !7357, !tbaa !2648
  %call279 = call i8* @quotearg_style(i32 4, i8* %191), !dbg !7357
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %190, i8* %call278, i8* %call279), !dbg !7358
  %192 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7359, !tbaa !2648
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %192, i32 0, i32 21, !dbg !7361, !ctir !357
  %193 = load i8, i8* %require_preserve, align 4, !dbg !7361, !tbaa !3206
  %tobool280 = trunc i8 %193 to i1, !dbg !7361, !ctir !142
  br i1 %tobool280, label %if.then281, label %if.end282, !dbg !7362

if.then281:                                       ; preds = %if.then276
  store i8 0, i8* %return_val, align 1, !dbg !7363, !tbaa !2742
  br label %close_src_and_dst_desc, !dbg !7365

if.end282:                                        ; preds = %if.then276
  br label %if.end283, !dbg !7366

if.end283:                                        ; preds = %if.end282, %if.then267
  br label %if.end284, !dbg !7367

if.end284:                                        ; preds = %if.end283, %preserve_metadata
  %194 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7368, !tbaa !2648
  %preserve_ownership = getelementptr inbounds %struct.cp_options, %struct.cp_options* %194, i32 0, i32 14, !dbg !7370, !ctir !357
  %195 = load i8, i8* %preserve_ownership, align 1, !dbg !7370, !tbaa !3179
  %tobool285 = trunc i8 %195 to i1, !dbg !7370, !ctir !142
  br i1 %tobool285, label %land.lhs.true287, label %if.end300, !dbg !7371

land.lhs.true287:                                 ; preds = %if.end284
  %196 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7372, !tbaa !2648
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %196, i32 0, i32 4, !dbg !7372, !ctir !414
  %197 = load i32, i32* %st_uid, align 4, !dbg !7372, !tbaa !4045, !ctir !128
  %st_uid288 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 4, !dbg !7372, !ctir !415
  %198 = load i32, i32* %st_uid288, align 4, !dbg !7372, !tbaa !4045, !ctir !128
  %cmp289 = icmp eq i32 %197, %198, !dbg !7372
  br i1 %cmp289, label %land.lhs.true291, label %if.then295, !dbg !7372

land.lhs.true291:                                 ; preds = %land.lhs.true287
  %199 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7372, !tbaa !2648
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %199, i32 0, i32 5, !dbg !7372, !ctir !414
  %200 = load i32, i32* %st_gid, align 8, !dbg !7372, !tbaa !4074, !ctir !130
  %st_gid292 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 5, !dbg !7372, !ctir !415
  %201 = load i32, i32* %st_gid292, align 8, !dbg !7372, !tbaa !4074, !ctir !130
  %cmp293 = icmp eq i32 %200, %201, !dbg !7372
  br i1 %cmp293, label %if.end300, label %if.then295, !dbg !7373

if.then295:                                       ; preds = %land.lhs.true291, %land.lhs.true287
  %202 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7374, !tbaa !2648
  %203 = load i8*, i8** %dst_name.addr, align 8, !dbg !7376, !tbaa !2648
  %204 = load i32, i32* %dest_desc, align 4, !dbg !7377, !tbaa !2635
  %205 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7378, !tbaa !2648
  %206 = load i8*, i8** %new_dst.addr, align 8, !dbg !7379, !tbaa !2648
  %207 = load i8, i8* %206, align 1, !dbg !7380, !tbaa !2742
  %tobool296 = trunc i8 %207 to i1, !dbg !7380, !ctir !142
  %call297 = call i32 @set_owner(%struct.cp_options* %202, i8* %203, i32 %204, %struct.stat* %205, i1 zeroext %tobool296, %struct.stat* %sb), !dbg !7381
  switch i32 %call297, label %sw.epilog [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb298
  ], !dbg !7382

sw.bb:                                            ; preds = %if.then295
  store i8 0, i8* %return_val, align 1, !dbg !7383, !tbaa !2742
  br label %close_src_and_dst_desc, !dbg !7385

sw.bb298:                                         ; preds = %if.then295
  %208 = load i32, i32* %src_mode, align 4, !dbg !7386, !tbaa !2635
  %and299 = and i32 %208, -3585, !dbg !7386
  store i32 %and299, i32* %src_mode, align 4, !dbg !7386, !tbaa !2635
  br label %sw.epilog, !dbg !7387

sw.epilog:                                        ; preds = %if.then295, %sw.bb298
  br label %if.end300, !dbg !7388

if.end300:                                        ; preds = %sw.epilog, %land.lhs.true291, %if.end284
  %209 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7389, !tbaa !2648
  %preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %209, i32 0, i32 24, !dbg !7391, !ctir !357
  %210 = load i8, i8* %preserve_xattr, align 1, !dbg !7391, !tbaa !3259
  %tobool301 = trunc i8 %210 to i1, !dbg !7391, !ctir !142
  br i1 %tobool301, label %if.then302, label %if.end328, !dbg !7392

if.then302:                                       ; preds = %if.end300
  call void @llvm.dbg.declare(metadata i8* %access_changed, metadata !7393, metadata !DIExpression()), !dbg !7395
  store i8 0, i8* %access_changed, align 1, !dbg !7395, !tbaa !2742
  %st_mode303 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 3, !dbg !7396, !ctir !415
  %211 = load i32, i32* %st_mode303, align 8, !dbg !7396, !tbaa !2914, !ctir !140
  %and304 = and i32 %211, 128, !dbg !7398
  %tobool305 = icmp ne i32 %and304, 0, !dbg !7398
  br i1 %tobool305, label %if.end315, label %land.lhs.true306, !dbg !7399

land.lhs.true306:                                 ; preds = %if.then302
  %call307 = call i32 @geteuid() #9, !dbg !7400
  %cmp308 = icmp ne i32 %call307, 0, !dbg !7401
  br i1 %cmp308, label %if.then310, label %if.end315, !dbg !7402

if.then310:                                       ; preds = %land.lhs.true306
  %212 = load i32, i32* %dest_desc, align 4, !dbg !7403, !tbaa !2635
  %213 = load i8*, i8** %dst_name.addr, align 8, !dbg !7405, !tbaa !2648
  %call311 = call i32 @fchmod_or_lchmod(i32 %212, i8* %213, i32 384), !dbg !7406
  %cmp312 = icmp eq i32 %call311, 0, !dbg !7407
  %frombool314 = zext i1 %cmp312 to i8, !dbg !7408
  store i8 %frombool314, i8* %access_changed, align 1, !dbg !7408, !tbaa !2742
  br label %if.end315, !dbg !7409

if.end315:                                        ; preds = %if.then310, %land.lhs.true306, %if.then302
  %214 = load i8*, i8** %src_name.addr, align 8, !dbg !7410, !tbaa !2648
  %215 = load i32, i32* %source_desc, align 4, !dbg !7412, !tbaa !2635
  %216 = load i8*, i8** %dst_name.addr, align 8, !dbg !7413, !tbaa !2648
  %217 = load i32, i32* %dest_desc, align 4, !dbg !7414, !tbaa !2635
  %218 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7415, !tbaa !2648
  %call316 = call zeroext i1 @copy_attr(i8* %214, i32 %215, i8* %216, i32 %217, %struct.cp_options* %218), !dbg !7416
  br i1 %call316, label %if.end321, label %land.lhs.true317, !dbg !7417

land.lhs.true317:                                 ; preds = %if.end315
  %219 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7418, !tbaa !2648
  %require_preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %219, i32 0, i32 25, !dbg !7419, !ctir !357
  %220 = load i8, i8* %require_preserve_xattr, align 8, !dbg !7419, !tbaa !3210
  %tobool318 = trunc i8 %220 to i1, !dbg !7419, !ctir !142
  br i1 %tobool318, label %if.then320, label %if.end321, !dbg !7420

if.then320:                                       ; preds = %land.lhs.true317
  store i8 0, i8* %return_val, align 1, !dbg !7421, !tbaa !2742
  br label %if.end321, !dbg !7422

if.end321:                                        ; preds = %if.then320, %land.lhs.true317, %if.end315
  %221 = load i8, i8* %access_changed, align 1, !dbg !7423, !tbaa !2742
  %tobool322 = trunc i8 %221 to i1, !dbg !7423
  br i1 %tobool322, label %if.then323, label %if.end327, !dbg !7425

if.then323:                                       ; preds = %if.end321
  %222 = load i32, i32* %dest_desc, align 4, !dbg !7426, !tbaa !2635
  %223 = load i8*, i8** %dst_name.addr, align 8, !dbg !7427, !tbaa !2648
  %224 = load i32, i32* %dst_mode.addr, align 4, !dbg !7428, !tbaa !2635
  %225 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7429, !tbaa !2635
  %neg324 = xor i32 %225, -1, !dbg !7430
  %and325 = and i32 %224, %neg324, !dbg !7431
  %call326 = call i32 @fchmod_or_lchmod(i32 %222, i8* %223, i32 %and325), !dbg !7432
  br label %if.end327, !dbg !7432

if.end327:                                        ; preds = %if.then323, %if.end321
  br label %if.end328, !dbg !7433

if.end328:                                        ; preds = %if.end327, %if.end300
  %226 = load i8*, i8** %dst_name.addr, align 8, !dbg !7434, !tbaa !2648
  %227 = load i32, i32* %dest_desc, align 4, !dbg !7435, !tbaa !2635
  %228 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7436, !tbaa !2648
  call void @set_author(i8* %226, i32 %227, %struct.stat* %228), !dbg !7437
  %229 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7438, !tbaa !2648
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %229, i32 0, i32 15, !dbg !7440, !ctir !357
  %230 = load i8, i8* %preserve_mode, align 2, !dbg !7440, !tbaa !3187
  %tobool329 = trunc i8 %230 to i1, !dbg !7440, !ctir !142
  br i1 %tobool329, label %if.then335, label %lor.lhs.false331, !dbg !7441

lor.lhs.false331:                                 ; preds = %if.end328
  %231 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7442, !tbaa !2648
  %move_mode332 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %231, i32 0, i32 9, !dbg !7443, !ctir !357
  %232 = load i8, i8* %move_mode332, align 8, !dbg !7443, !tbaa !3167
  %tobool333 = trunc i8 %232 to i1, !dbg !7443, !ctir !142
  br i1 %tobool333, label %if.then335, label %if.else345, !dbg !7444

if.then335:                                       ; preds = %lor.lhs.false331, %if.end328
  %233 = load i8*, i8** %src_name.addr, align 8, !dbg !7445, !tbaa !2648
  %234 = load i32, i32* %source_desc, align 4, !dbg !7448, !tbaa !2635
  %235 = load i8*, i8** %dst_name.addr, align 8, !dbg !7449, !tbaa !2648
  %236 = load i32, i32* %dest_desc, align 4, !dbg !7450, !tbaa !2635
  %237 = load i32, i32* %src_mode, align 4, !dbg !7451, !tbaa !2635
  %call336 = call i32 @copy_acl(i8* %233, i32 %234, i8* %235, i32 %236, i32 %237), !dbg !7452
  %cmp337 = icmp ne i32 %call336, 0, !dbg !7453
  br i1 %cmp337, label %land.lhs.true339, label %if.end344, !dbg !7454

land.lhs.true339:                                 ; preds = %if.then335
  %238 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7455, !tbaa !2648
  %require_preserve340 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %238, i32 0, i32 21, !dbg !7456, !ctir !357
  %239 = load i8, i8* %require_preserve340, align 4, !dbg !7456, !tbaa !3206
  %tobool341 = trunc i8 %239 to i1, !dbg !7456, !ctir !142
  br i1 %tobool341, label %if.then343, label %if.end344, !dbg !7457

if.then343:                                       ; preds = %land.lhs.true339
  store i8 0, i8* %return_val, align 1, !dbg !7458, !tbaa !2742
  br label %if.end344, !dbg !7459

if.end344:                                        ; preds = %if.then343, %land.lhs.true339, %if.then335
  br label %if.end391, !dbg !7460

if.else345:                                       ; preds = %lor.lhs.false331
  %240 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7461, !tbaa !2648
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %240, i32 0, i32 28, !dbg !7463, !ctir !357
  %241 = load i8, i8* %set_mode, align 1, !dbg !7463, !tbaa !3229
  %tobool346 = trunc i8 %241 to i1, !dbg !7463, !ctir !142
  br i1 %tobool346, label %if.then347, label %if.else353, !dbg !7464

if.then347:                                       ; preds = %if.else345
  %242 = load i8*, i8** %dst_name.addr, align 8, !dbg !7465, !tbaa !2648
  %243 = load i32, i32* %dest_desc, align 4, !dbg !7468, !tbaa !2635
  %244 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7469, !tbaa !2648
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %244, i32 0, i32 4, !dbg !7470, !ctir !357
  %245 = load i32, i32* %mode, align 8, !dbg !7470, !tbaa !3233, !ctir !139
  %call348 = call i32 @set_acl(i8* %242, i32 %243, i32 %245), !dbg !7471
  %cmp349 = icmp ne i32 %call348, 0, !dbg !7472
  br i1 %cmp349, label %if.then351, label %if.end352, !dbg !7473

if.then351:                                       ; preds = %if.then347
  store i8 0, i8* %return_val, align 1, !dbg !7474, !tbaa !2742
  br label %if.end352, !dbg !7475

if.end352:                                        ; preds = %if.then351, %if.then347
  br label %if.end390, !dbg !7476

if.else353:                                       ; preds = %if.else345
  %246 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7477, !tbaa !2648
  %explicit_no_preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %246, i32 0, i32 17, !dbg !7479, !ctir !357
  %247 = load i8, i8* %explicit_no_preserve_mode, align 8, !dbg !7479, !tbaa !3194
  %tobool354 = trunc i8 %247 to i1, !dbg !7479, !ctir !142
  br i1 %tobool354, label %land.lhs.true356, label %if.else368, !dbg !7480

land.lhs.true356:                                 ; preds = %if.else353
  %248 = load i8*, i8** %new_dst.addr, align 8, !dbg !7481, !tbaa !2648
  %249 = load i8, i8* %248, align 1, !dbg !7482, !tbaa !2742
  %tobool357 = trunc i8 %249 to i1, !dbg !7482, !ctir !142
  br i1 %tobool357, label %if.then359, label %if.else368, !dbg !7483

if.then359:                                       ; preds = %land.lhs.true356
  %250 = load i8*, i8** %dst_name.addr, align 8, !dbg !7484, !tbaa !2648
  %251 = load i32, i32* %dest_desc, align 4, !dbg !7487, !tbaa !2635
  %call360 = call i32 @cached_umask(), !dbg !7488
  %neg361 = xor i32 %call360, -1, !dbg !7489
  %and362 = and i32 438, %neg361, !dbg !7490
  %call363 = call i32 @set_acl(i8* %250, i32 %251, i32 %and362), !dbg !7491
  %cmp364 = icmp ne i32 %call363, 0, !dbg !7492
  br i1 %cmp364, label %if.then366, label %if.end367, !dbg !7493

if.then366:                                       ; preds = %if.then359
  store i8 0, i8* %return_val, align 1, !dbg !7494, !tbaa !2742
  br label %if.end367, !dbg !7495

if.end367:                                        ; preds = %if.then366, %if.then359
  br label %if.end389, !dbg !7496

if.else368:                                       ; preds = %land.lhs.true356, %if.else353
  %252 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7497, !tbaa !2635
  %tobool369 = icmp ne i32 %252, 0, !dbg !7497
  br i1 %tobool369, label %if.then370, label %if.end388, !dbg !7499

if.then370:                                       ; preds = %if.else368
  %call371 = call i32 @cached_umask(), !dbg !7500
  %neg372 = xor i32 %call371, -1, !dbg !7502
  %253 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7503, !tbaa !2635
  %and373 = and i32 %253, %neg372, !dbg !7503
  store i32 %and373, i32* %omitted_permissions.addr, align 4, !dbg !7503, !tbaa !2635
  %254 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7504, !tbaa !2635
  %tobool374 = icmp ne i32 %254, 0, !dbg !7504
  br i1 %tobool374, label %land.lhs.true375, label %if.end387, !dbg !7506

land.lhs.true375:                                 ; preds = %if.then370
  %255 = load i32, i32* %dest_desc, align 4, !dbg !7507, !tbaa !2635
  %256 = load i8*, i8** %dst_name.addr, align 8, !dbg !7508, !tbaa !2648
  %257 = load i32, i32* %dst_mode.addr, align 4, !dbg !7509, !tbaa !2635
  %call376 = call i32 @fchmod_or_lchmod(i32 %255, i8* %256, i32 %257), !dbg !7510
  %cmp377 = icmp ne i32 %call376, 0, !dbg !7511
  br i1 %cmp377, label %if.then379, label %if.end387, !dbg !7512

if.then379:                                       ; preds = %land.lhs.true375
  %call380 = call i32* @__errno_location() #16, !dbg !7513
  %258 = load i32, i32* %call380, align 4, !dbg !7513, !tbaa !2635, !ctir !7
  %call381 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.49.139, i64 0, i64 0)) #9, !dbg !7515
  %259 = load i8*, i8** %dst_name.addr, align 8, !dbg !7516, !tbaa !2648
  %call382 = call i8* @quotearg_style(i32 4, i8* %259), !dbg !7516
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %258, i8* %call381, i8* %call382), !dbg !7517
  %260 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7518, !tbaa !2648
  %require_preserve383 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %260, i32 0, i32 21, !dbg !7520, !ctir !357
  %261 = load i8, i8* %require_preserve383, align 4, !dbg !7520, !tbaa !3206
  %tobool384 = trunc i8 %261 to i1, !dbg !7520, !ctir !142
  br i1 %tobool384, label %if.then385, label %if.end386, !dbg !7521

if.then385:                                       ; preds = %if.then379
  store i8 0, i8* %return_val, align 1, !dbg !7522, !tbaa !2742
  br label %if.end386, !dbg !7523

if.end386:                                        ; preds = %if.then385, %if.then379
  br label %if.end387, !dbg !7524

if.end387:                                        ; preds = %if.end386, %land.lhs.true375, %if.then370
  br label %if.end388, !dbg !7525

if.end388:                                        ; preds = %if.end387, %if.else368
  br label %if.end389

if.end389:                                        ; preds = %if.end388, %if.end367
  br label %if.end390

if.end390:                                        ; preds = %if.end389, %if.end352
  br label %if.end391

if.end391:                                        ; preds = %if.end390, %if.end344
  br label %close_src_and_dst_desc, !dbg !7443

close_src_and_dst_desc:                           ; preds = %if.end391, %sw.bb, %if.then281, %if.then259, %if.then251, %if.then238, %if.then154, %if.then132, %if.then39
  call void @llvm.dbg.label(metadata !7526), !dbg !7527
  %262 = load i32, i32* %dest_desc, align 4, !dbg !7528, !tbaa !2635
  %call392 = call i32 @close(i32 %262), !dbg !7530
  %cmp393 = icmp slt i32 %call392, 0, !dbg !7531
  br i1 %cmp393, label %if.then395, label %if.end399, !dbg !7532

if.then395:                                       ; preds = %close_src_and_dst_desc
  %call396 = call i32* @__errno_location() #16, !dbg !7533
  %263 = load i32, i32* %call396, align 4, !dbg !7533, !tbaa !2635, !ctir !7
  %call397 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.67.152, i64 0, i64 0)) #9, !dbg !7535
  %264 = load i8*, i8** %dst_name.addr, align 8, !dbg !7536, !tbaa !2648
  %call398 = call i8* @quotearg_style(i32 4, i8* %264), !dbg !7536
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %263, i8* %call397, i8* %call398), !dbg !7537
  store i8 0, i8* %return_val, align 1, !dbg !7538, !tbaa !2742
  br label %if.end399, !dbg !7539

if.end399:                                        ; preds = %if.then395, %close_src_and_dst_desc
  br label %close_src_desc, !dbg !7540

close_src_desc:                                   ; preds = %if.end399, %if.end125, %if.else, %if.then65, %if.then49, %if.then17, %if.then8
  call void @llvm.dbg.label(metadata !7541), !dbg !7542
  %265 = load i32, i32* %source_desc, align 4, !dbg !7543, !tbaa !2635
  %call400 = call i32 @close(i32 %265), !dbg !7545
  %cmp401 = icmp slt i32 %call400, 0, !dbg !7546
  br i1 %cmp401, label %if.then403, label %if.end407, !dbg !7547

if.then403:                                       ; preds = %close_src_desc
  %call404 = call i32* @__errno_location() #16, !dbg !7548
  %266 = load i32, i32* %call404, align 4, !dbg !7548, !tbaa !2635, !ctir !7
  %call405 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.67.152, i64 0, i64 0)) #9, !dbg !7550
  %267 = load i8*, i8** %src_name.addr, align 8, !dbg !7551, !tbaa !2648
  %call406 = call i8* @quotearg_style(i32 4, i8* %267), !dbg !7551
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %266, i8* %call405, i8* %call406), !dbg !7552
  store i8 0, i8* %return_val, align 1, !dbg !7553, !tbaa !2742
  br label %if.end407, !dbg !7554

if.end407:                                        ; preds = %if.then403, %close_src_desc
  %268 = load i8*, i8** %buf_alloc, align 8, !dbg !7555, !tbaa !2648
  call void @free(i8* %268) #9, !dbg !7556
  %269 = load i8*, i8** %name_alloc, align 8, !dbg !7557, !tbaa !2648
  call void @free(i8* %269) #9, !dbg !7558
  %270 = load i8, i8* %return_val, align 1, !dbg !7559, !tbaa !2742
  %tobool408 = trunc i8 %270 to i1, !dbg !7559
  store i1 %tobool408, i1* %retval, align 1, !dbg !7560
  br label %return, !dbg !7560

return:                                           ; preds = %if.end407, %if.then
  %271 = load i1, i1* %retval, align 1, !dbg !7561
  ret i1 %271, !dbg !7561
}

; Function Attrs: nounwind
declare dso_local i32 @mknod(i8*, i32, i64) #2

; Function Attrs: nounwind
declare dso_local i32 @mkfifo(i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @restore_default_fscreatecon_or_die() #4 !dbg !7562 !ctir !200 {
entry:
  %call = call i32 @setfscreatecon(i8* null), !dbg !7563
  %cmp = icmp ne i32 %call, 0, !dbg !7565
  br i1 %cmp, label %if.then, label %if.end, !dbg !7566

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !7567
  %0 = load i32, i32* %call1, align 4, !dbg !7567, !tbaa !2635, !ctir !7
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.75.144, i64 0, i64 0)) #9, !dbg !7567
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %0, i8* %call2), !dbg !7567
  unreachable, !dbg !7567

if.end:                                           ; preds = %entry
  ret void, !dbg !7568
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @chown_failure_ok(%struct.cp_options* %x) #10 !dbg !7569 !ctir !407 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !7570, metadata !DIExpression()), !dbg !7571
  %call = call i32* @__errno_location() #16, !dbg !7572
  %0 = load i32, i32* %call, align 4, !dbg !7572, !tbaa !2635, !ctir !7
  %cmp = icmp eq i32 %0, 1, !dbg !7573
  br i1 %cmp, label %land.rhs, label %lor.lhs.false, !dbg !7574

lor.lhs.false:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !7575
  %1 = load i32, i32* %call1, align 4, !dbg !7575, !tbaa !2635, !ctir !7
  %cmp2 = icmp eq i32 %1, 22, !dbg !7576
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !7577

land.rhs:                                         ; preds = %lor.lhs.false, %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7578, !tbaa !2648
  %chown_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 11, !dbg !7579, !ctir !357
  %3 = load i8, i8* %chown_privileges, align 2, !dbg !7579, !tbaa !7580
  %tobool = trunc i8 %3 to i1, !dbg !7579, !ctir !142
  %lnot = xor i1 %tobool, true, !dbg !7581
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false
  %4 = phi i1 [ false, %lor.lhs.false ], [ %lnot, %land.rhs ], !dbg !7582
  ret i1 %4, !dbg !7583
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @utimens_symlink(i8* %file, %struct.timespec* %timespec) #4 !dbg !7584 !ctir !559 {
entry:
  %file.addr = alloca i8*, align 8
  %timespec.addr = alloca %struct.timespec*, align 8
  %err = alloca i32, align 4, !ctir !7
  store i8* %file, i8** %file.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !7585, metadata !DIExpression()), !dbg !7586
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !7587, metadata !DIExpression()), !dbg !7588
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7589, metadata !DIExpression()), !dbg !7590
  %0 = load i8*, i8** %file.addr, align 8, !dbg !7591, !tbaa !2648
  %1 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !7592, !tbaa !2648
  %call = call i32 @lutimens(i8* %0, %struct.timespec* %1), !dbg !7593
  store i32 %call, i32* %err, align 4, !dbg !7590, !tbaa !2635
  %2 = load i32, i32* %err, align 4, !dbg !7594, !tbaa !2635
  %tobool = icmp ne i32 %2, 0, !dbg !7594
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7596

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !7597
  %3 = load i32, i32* %call1, align 4, !dbg !7597, !tbaa !2635, !ctir !7
  %cmp = icmp eq i32 %3, 38, !dbg !7598
  br i1 %cmp, label %if.then, label %if.end, !dbg !7599

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %err, align 4, !dbg !7600, !tbaa !2635
  br label %if.end, !dbg !7601

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %4 = load i32, i32* %err, align 4, !dbg !7602, !tbaa !2635
  ret i32 %4, !dbg !7603
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @set_owner(%struct.cp_options* %x, i8* %dst_name, i32 %dest_desc, %struct.stat* %src_sb, i1 zeroext %new_dst, %struct.stat* %dst_sb) #4 !dbg !7604 !ctir !563 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.cp_options*, align 8
  %dst_name.addr = alloca i8*, align 8
  %dest_desc.addr = alloca i32, align 4
  %src_sb.addr = alloca %struct.stat*, align 8
  %new_dst.addr = alloca i8, align 1
  %dst_sb.addr = alloca %struct.stat*, align 8
  %uid = alloca i32, align 4, !ctir !127
  %gid = alloca i32, align 4, !ctir !129
  %old_mode = alloca i32, align 4, !ctir !139
  %new_mode = alloca i32, align 4, !ctir !139
  %restrictive_temp_mode = alloca i32, align 4, !ctir !139
  %saved_errno = alloca i32, align 4, !ctir !7
  %__x = alloca i32, align 4, !ctir !7
  %saved_errno54 = alloca i32, align 4, !ctir !7
  %__x56 = alloca i32, align 4, !ctir !7
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !7605, metadata !DIExpression()), !dbg !7606
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !7607, metadata !DIExpression()), !dbg !7608
  store i32 %dest_desc, i32* %dest_desc.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !7609, metadata !DIExpression()), !dbg !7610
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !7611, metadata !DIExpression()), !dbg !7612
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !7613, metadata !DIExpression()), !dbg !7614
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !7615, metadata !DIExpression()), !dbg !7616
  call void @llvm.dbg.declare(metadata i32* %uid, metadata !7617, metadata !DIExpression()), !dbg !7618
  %0 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7619, !tbaa !2648
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 4, !dbg !7620, !ctir !414
  %1 = load i32, i32* %st_uid, align 4, !dbg !7620, !tbaa !4045, !ctir !128
  store i32 %1, i32* %uid, align 4, !dbg !7618, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %gid, metadata !7621, metadata !DIExpression()), !dbg !7622
  %2 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7623, !tbaa !2648
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 5, !dbg !7624, !ctir !414
  %3 = load i32, i32* %st_gid, align 8, !dbg !7624, !tbaa !4074, !ctir !130
  store i32 %3, i32* %gid, align 4, !dbg !7622, !tbaa !2635
  %4 = load i8, i8* %new_dst.addr, align 1, !dbg !7625, !tbaa !2742
  %tobool = trunc i8 %4 to i1, !dbg !7625
  br i1 %tobool, label %if.end20, label %land.lhs.true, !dbg !7627

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7628, !tbaa !2648
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 15, !dbg !7629, !ctir !357
  %6 = load i8, i8* %preserve_mode, align 2, !dbg !7629, !tbaa !3187
  %tobool1 = trunc i8 %6 to i1, !dbg !7629, !ctir !142
  br i1 %tobool1, label %if.then, label %lor.lhs.false, !dbg !7630

lor.lhs.false:                                    ; preds = %land.lhs.true
  %7 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7631, !tbaa !2648
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 9, !dbg !7632, !ctir !357
  %8 = load i8, i8* %move_mode, align 8, !dbg !7632, !tbaa !3167
  %tobool2 = trunc i8 %8 to i1, !dbg !7632, !ctir !142
  br i1 %tobool2, label %if.then, label %lor.lhs.false3, !dbg !7633

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %9 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7634, !tbaa !2648
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 28, !dbg !7635, !ctir !357
  %10 = load i8, i8* %set_mode, align 1, !dbg !7635, !tbaa !3229
  %tobool4 = trunc i8 %10 to i1, !dbg !7635, !ctir !142
  br i1 %tobool4, label %if.then, label %if.end20, !dbg !7636

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %old_mode, metadata !7637, metadata !DIExpression()), !dbg !7639
  %11 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !7640, !tbaa !2648
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 3, !dbg !7641, !ctir !414
  %12 = load i32, i32* %st_mode, align 8, !dbg !7641, !tbaa !2914, !ctir !140
  store i32 %12, i32* %old_mode, align 4, !dbg !7639, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %new_mode, metadata !7642, metadata !DIExpression()), !dbg !7643
  %13 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7644, !tbaa !2648
  %preserve_mode5 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %13, i32 0, i32 15, !dbg !7645, !ctir !357
  %14 = load i8, i8* %preserve_mode5, align 2, !dbg !7645, !tbaa !3187
  %tobool6 = trunc i8 %14 to i1, !dbg !7645, !ctir !142
  br i1 %tobool6, label %cond.true, label %lor.lhs.false7, !dbg !7646

lor.lhs.false7:                                   ; preds = %if.then
  %15 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7647, !tbaa !2648
  %move_mode8 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %15, i32 0, i32 9, !dbg !7648, !ctir !357
  %16 = load i8, i8* %move_mode8, align 8, !dbg !7648, !tbaa !3167
  %tobool9 = trunc i8 %16 to i1, !dbg !7648, !ctir !142
  br i1 %tobool9, label %cond.true, label %cond.false, !dbg !7644

cond.true:                                        ; preds = %lor.lhs.false7, %if.then
  %17 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7649, !tbaa !2648
  %st_mode10 = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 3, !dbg !7650, !ctir !414
  %18 = load i32, i32* %st_mode10, align 8, !dbg !7650, !tbaa !2914, !ctir !140
  br label %cond.end, !dbg !7644

cond.false:                                       ; preds = %lor.lhs.false7
  %19 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7651, !tbaa !2648
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %19, i32 0, i32 4, !dbg !7652, !ctir !357
  %20 = load i32, i32* %mode, align 8, !dbg !7652, !tbaa !3233, !ctir !139
  br label %cond.end, !dbg !7644

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %18, %cond.true ], [ %20, %cond.false ], !dbg !7644
  store i32 %cond, i32* %new_mode, align 4, !dbg !7643, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %restrictive_temp_mode, metadata !7653, metadata !DIExpression()), !dbg !7654
  %21 = load i32, i32* %old_mode, align 4, !dbg !7655, !tbaa !2635
  %22 = load i32, i32* %new_mode, align 4, !dbg !7656, !tbaa !2635
  %and = and i32 %21, %22, !dbg !7657
  %and11 = and i32 %and, 448, !dbg !7658
  store i32 %and11, i32* %restrictive_temp_mode, align 4, !dbg !7654, !tbaa !2635
  %23 = load i8*, i8** %dst_name.addr, align 8, !dbg !7659, !tbaa !2648
  %24 = load i32, i32* %dest_desc.addr, align 4, !dbg !7661, !tbaa !2635
  %25 = load i32, i32* %restrictive_temp_mode, align 4, !dbg !7662, !tbaa !2635
  %call = call i32 @qset_acl(i8* %23, i32 %24, i32 %25), !dbg !7663
  %cmp = icmp ne i32 %call, 0, !dbg !7664
  br i1 %cmp, label %if.then12, label %if.end19, !dbg !7665

if.then12:                                        ; preds = %cond.end
  %26 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7666, !tbaa !2648
  %call13 = call zeroext i1 @owner_failure_ok(%struct.cp_options* %26), !dbg !7669
  br i1 %call13, label %if.end, label %if.then14, !dbg !7670

if.then14:                                        ; preds = %if.then12
  %call15 = call i32* @__errno_location() #16, !dbg !7671
  %27 = load i32, i32* %call15, align 4, !dbg !7671, !tbaa !2635, !ctir !7
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.76.143, i64 0, i64 0)) #9, !dbg !7672
  %28 = load i8*, i8** %dst_name.addr, align 8, !dbg !7673, !tbaa !2648
  %call17 = call i8* @quotearg_style(i32 4, i8* %28), !dbg !7673
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %27, i8* %call16, i8* %call17), !dbg !7674
  br label %if.end, !dbg !7674

if.end:                                           ; preds = %if.then14, %if.then12
  %29 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7675, !tbaa !2648
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %29, i32 0, i32 21, !dbg !7676, !ctir !357
  %30 = load i8, i8* %require_preserve, align 4, !dbg !7676, !tbaa !3206
  %tobool18 = trunc i8 %30 to i1, !dbg !7676, !ctir !142
  %conv = zext i1 %tobool18 to i32, !dbg !7675
  %sub = sub nsw i32 0, %conv, !dbg !7677
  store i32 %sub, i32* %retval, align 4, !dbg !7678
  br label %return, !dbg !7678

if.end19:                                         ; preds = %cond.end
  br label %if.end20, !dbg !7679

if.end20:                                         ; preds = %if.end19, %lor.lhs.false3, %entry
  %31 = load i32, i32* %dest_desc.addr, align 4, !dbg !7680, !tbaa !2635
  %cmp21 = icmp ne i32 %31, -1, !dbg !7682
  br i1 %cmp21, label %if.then23, label %if.else, !dbg !7683

if.then23:                                        ; preds = %if.end20
  %32 = load i32, i32* %dest_desc.addr, align 4, !dbg !7684, !tbaa !2635
  %33 = load i32, i32* %uid, align 4, !dbg !7687, !tbaa !2635
  %34 = load i32, i32* %gid, align 4, !dbg !7688, !tbaa !2635
  %call24 = call i32 @fchown(i32 %32, i32 %33, i32 %34) #9, !dbg !7689
  %cmp25 = icmp eq i32 %call24, 0, !dbg !7690
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !7691

if.then27:                                        ; preds = %if.then23
  store i32 1, i32* %retval, align 4, !dbg !7692
  br label %return, !dbg !7692

if.end28:                                         ; preds = %if.then23
  %call29 = call i32* @__errno_location() #16, !dbg !7693
  %35 = load i32, i32* %call29, align 4, !dbg !7693, !tbaa !2635, !ctir !7
  %cmp30 = icmp eq i32 %35, 1, !dbg !7695
  br i1 %cmp30, label %if.then36, label %lor.lhs.false32, !dbg !7696

lor.lhs.false32:                                  ; preds = %if.end28
  %call33 = call i32* @__errno_location() #16, !dbg !7697
  %36 = load i32, i32* %call33, align 4, !dbg !7697, !tbaa !2635, !ctir !7
  %cmp34 = icmp eq i32 %36, 22, !dbg !7698
  br i1 %cmp34, label %if.then36, label %if.end40, !dbg !7699

if.then36:                                        ; preds = %lor.lhs.false32, %if.end28
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !7700, metadata !DIExpression()), !dbg !7702
  %call37 = call i32* @__errno_location() #16, !dbg !7703
  %37 = load i32, i32* %call37, align 4, !dbg !7703, !tbaa !2635, !ctir !7
  store i32 %37, i32* %saved_errno, align 4, !dbg !7702, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !7704, metadata !DIExpression()), !dbg !7706
  %38 = load i32, i32* %dest_desc.addr, align 4, !dbg !7706, !tbaa !2635
  %39 = load i32, i32* %gid, align 4, !dbg !7706, !tbaa !2635
  %call38 = call i32 @fchown(i32 %38, i32 -1, i32 %39) #9, !dbg !7706
  store i32 %call38, i32* %__x, align 4, !dbg !7706, !tbaa !2635
  %40 = load i32, i32* %__x, align 4, !dbg !7706, !tbaa !2635
  %41 = load i32, i32* %saved_errno, align 4, !dbg !7707, !tbaa !2635
  %call39 = call i32* @__errno_location() #16, !dbg !7708
  store i32 %41, i32* %call39, align 4, !dbg !7709, !tbaa !2635, !ctir !7
  br label %if.end40, !dbg !7710

if.end40:                                         ; preds = %if.then36, %lor.lhs.false32
  br label %if.end60, !dbg !7711

if.else:                                          ; preds = %if.end20
  %42 = load i8*, i8** %dst_name.addr, align 8, !dbg !7712, !tbaa !2648
  %43 = load i32, i32* %uid, align 4, !dbg !7715, !tbaa !2635
  %44 = load i32, i32* %gid, align 4, !dbg !7716, !tbaa !2635
  %call41 = call i32 @lchown(i8* %42, i32 %43, i32 %44) #9, !dbg !7717
  %cmp42 = icmp eq i32 %call41, 0, !dbg !7718
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !7719

if.then44:                                        ; preds = %if.else
  store i32 1, i32* %retval, align 4, !dbg !7720
  br label %return, !dbg !7720

if.end45:                                         ; preds = %if.else
  %call46 = call i32* @__errno_location() #16, !dbg !7721
  %45 = load i32, i32* %call46, align 4, !dbg !7721, !tbaa !2635, !ctir !7
  %cmp47 = icmp eq i32 %45, 1, !dbg !7723
  br i1 %cmp47, label %if.then53, label %lor.lhs.false49, !dbg !7724

lor.lhs.false49:                                  ; preds = %if.end45
  %call50 = call i32* @__errno_location() #16, !dbg !7725
  %46 = load i32, i32* %call50, align 4, !dbg !7725, !tbaa !2635, !ctir !7
  %cmp51 = icmp eq i32 %46, 22, !dbg !7726
  br i1 %cmp51, label %if.then53, label %if.end59, !dbg !7727

if.then53:                                        ; preds = %lor.lhs.false49, %if.end45
  call void @llvm.dbg.declare(metadata i32* %saved_errno54, metadata !7728, metadata !DIExpression()), !dbg !7730
  %call55 = call i32* @__errno_location() #16, !dbg !7731
  %47 = load i32, i32* %call55, align 4, !dbg !7731, !tbaa !2635, !ctir !7
  store i32 %47, i32* %saved_errno54, align 4, !dbg !7730, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %__x56, metadata !7732, metadata !DIExpression()), !dbg !7734
  %48 = load i8*, i8** %dst_name.addr, align 8, !dbg !7734, !tbaa !2648
  %49 = load i32, i32* %gid, align 4, !dbg !7734, !tbaa !2635
  %call57 = call i32 @lchown(i8* %48, i32 -1, i32 %49) #9, !dbg !7734
  store i32 %call57, i32* %__x56, align 4, !dbg !7734, !tbaa !2635
  %50 = load i32, i32* %__x56, align 4, !dbg !7734, !tbaa !2635
  %51 = load i32, i32* %saved_errno54, align 4, !dbg !7735, !tbaa !2635
  %call58 = call i32* @__errno_location() #16, !dbg !7736
  store i32 %51, i32* %call58, align 4, !dbg !7737, !tbaa !2635, !ctir !7
  br label %if.end59, !dbg !7738

if.end59:                                         ; preds = %if.then53, %lor.lhs.false49
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.end40
  %52 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7739, !tbaa !2648
  %call61 = call zeroext i1 @chown_failure_ok(%struct.cp_options* %52) #14, !dbg !7741
  br i1 %call61, label %if.end70, label %if.then62, !dbg !7742

if.then62:                                        ; preds = %if.end60
  %call63 = call i32* @__errno_location() #16, !dbg !7743
  %53 = load i32, i32* %call63, align 4, !dbg !7743, !tbaa !2635, !ctir !7
  %call64 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.46.136, i64 0, i64 0)) #9, !dbg !7745
  %54 = load i8*, i8** %dst_name.addr, align 8, !dbg !7746, !tbaa !2648
  %call65 = call i8* @quotearg_style(i32 4, i8* %54), !dbg !7746
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %53, i8* %call64, i8* %call65), !dbg !7747
  %55 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7748, !tbaa !2648
  %require_preserve66 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %55, i32 0, i32 21, !dbg !7750, !ctir !357
  %56 = load i8, i8* %require_preserve66, align 4, !dbg !7750, !tbaa !3206
  %tobool67 = trunc i8 %56 to i1, !dbg !7750, !ctir !142
  br i1 %tobool67, label %if.then68, label %if.end69, !dbg !7751

if.then68:                                        ; preds = %if.then62
  store i32 -1, i32* %retval, align 4, !dbg !7752
  br label %return, !dbg !7752

if.end69:                                         ; preds = %if.then62
  br label %if.end70, !dbg !7753

if.end70:                                         ; preds = %if.end69, %if.end60
  store i32 0, i32* %retval, align 4, !dbg !7754
  br label %return, !dbg !7754

return:                                           ; preds = %if.end70, %if.then68, %if.then44, %if.then27, %if.end
  %57 = load i32, i32* %retval, align 4, !dbg !7755
  ret i32 %57, !dbg !7755
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_attr(i8* %src_path, i32 %src_fd, i8* %dst_path, i32 %dst_fd, %struct.cp_options* %x) #4 !dbg !7756 !ctir !565 {
entry:
  %src_path.addr = alloca i8*, align 8
  %src_fd.addr = alloca i32, align 4
  %dst_path.addr = alloca i8*, align 8
  %dst_fd.addr = alloca i32, align 4
  %x.addr = alloca %struct.cp_options*, align 8
  %ret = alloca i32, align 4, !ctir !7
  %all_errors = alloca i8, align 1, !ctir !142
  %some_errors = alloca i8, align 1, !ctir !142
  %selinux_done = alloca i8, align 1, !ctir !142
  %ctx = alloca %struct.error_context, align 8, !ctir !570
  store i8* %src_path, i8** %src_path.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %src_path.addr, metadata !7757, metadata !DIExpression()), !dbg !7758
  store i32 %src_fd, i32* %src_fd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !7759, metadata !DIExpression()), !dbg !7760
  store i8* %dst_path, i8** %dst_path.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dst_path.addr, metadata !7761, metadata !DIExpression()), !dbg !7762
  store i32 %dst_fd, i32* %dst_fd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %dst_fd.addr, metadata !7763, metadata !DIExpression()), !dbg !7764
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !7765, metadata !DIExpression()), !dbg !7766
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7767, metadata !DIExpression()), !dbg !7768
  call void @llvm.dbg.declare(metadata i8* %all_errors, metadata !7769, metadata !DIExpression()), !dbg !7770
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7771, !tbaa !2648
  %data_copy_required = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 20, !dbg !7772, !ctir !357
  %1 = load i8, i8* %data_copy_required, align 1, !dbg !7772, !tbaa !3202
  %tobool = trunc i8 %1 to i1, !dbg !7772, !ctir !142
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !7773

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7774, !tbaa !2648
  %require_preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 25, !dbg !7775, !ctir !357
  %3 = load i8, i8* %require_preserve_xattr, align 8, !dbg !7775, !tbaa !3210
  %tobool1 = trunc i8 %3 to i1, !dbg !7775, !ctir !142
  br label %lor.end, !dbg !7773

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %tobool1, %lor.rhs ]
  %frombool = zext i1 %4 to i8, !dbg !7770
  store i8 %frombool, i8* %all_errors, align 1, !dbg !7770, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %some_errors, metadata !7776, metadata !DIExpression()), !dbg !7777
  %5 = load i8, i8* %all_errors, align 1, !dbg !7778, !tbaa !2742
  %tobool2 = trunc i8 %5 to i1, !dbg !7778
  br i1 %tobool2, label %land.end, label %land.rhs, !dbg !7779

land.rhs:                                         ; preds = %lor.end
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7780, !tbaa !2648
  %reduce_diagnostics = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 26, !dbg !7781, !ctir !357
  %7 = load i8, i8* %reduce_diagnostics, align 1, !dbg !7781, !tbaa !3198
  %tobool3 = trunc i8 %7 to i1, !dbg !7781, !ctir !142
  %lnot = xor i1 %tobool3, true, !dbg !7782
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.end
  %8 = phi i1 [ false, %lor.end ], [ %lnot, %land.rhs ], !dbg !7783
  %frombool4 = zext i1 %8 to i8, !dbg !7777
  store i8 %frombool4, i8* %some_errors, align 1, !dbg !7777, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %selinux_done, metadata !7784, metadata !DIExpression()), !dbg !7785
  %9 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7786, !tbaa !2648
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 22, !dbg !7787, !ctir !357
  %10 = load i8, i8* %preserve_security_context, align 1, !dbg !7787, !tbaa !2850
  %tobool5 = trunc i8 %10 to i1, !dbg !7787, !ctir !142
  br i1 %tobool5, label %lor.end8, label %lor.rhs6, !dbg !7788

lor.rhs6:                                         ; preds = %land.end
  %11 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7789, !tbaa !2648
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 18, !dbg !7790, !ctir !357
  %12 = load i8, i8* %set_security_context, align 1, !dbg !7790, !tbaa !2866
  %tobool7 = trunc i8 %12 to i1, !dbg !7790, !ctir !142
  br label %lor.end8, !dbg !7788

lor.end8:                                         ; preds = %lor.rhs6, %land.end
  %13 = phi i1 [ true, %land.end ], [ %tobool7, %lor.rhs6 ]
  %frombool9 = zext i1 %13 to i8, !dbg !7785
  store i8 %frombool9, i8* %selinux_done, align 1, !dbg !7785, !tbaa !2742
  call void @llvm.dbg.declare(metadata %struct.error_context* %ctx, metadata !7791, metadata !DIExpression()), !dbg !7792
  %error = getelementptr inbounds %struct.error_context, %struct.error_context* %ctx, i32 0, i32 0, !dbg !7793
  %14 = load i8, i8* %all_errors, align 1, !dbg !7794, !tbaa !2742
  %tobool10 = trunc i8 %14 to i1, !dbg !7794
  %15 = zext i1 %tobool10 to i64, !dbg !7794
  %cond = select i1 %tobool10, void (%struct.error_context*, i8*, ...)* @copy_attr_allerror, void (%struct.error_context*, i8*, ...)* @copy_attr_error, !dbg !7794
  store void (%struct.error_context*, i8*, ...)* %cond, void (%struct.error_context*, i8*, ...)** %error, align 8, !dbg !7793, !tbaa !7795
  %quote = getelementptr inbounds %struct.error_context, %struct.error_context* %ctx, i32 0, i32 1, !dbg !7793
  store i8* (%struct.error_context*, i8*)* @copy_attr_quote, i8* (%struct.error_context*, i8*)** %quote, align 8, !dbg !7793, !tbaa !7797
  %quote_free = getelementptr inbounds %struct.error_context, %struct.error_context* %ctx, i32 0, i32 2, !dbg !7793
  store void (%struct.error_context*, i8*)* @copy_attr_free, void (%struct.error_context*, i8*)** %quote_free, align 8, !dbg !7793, !tbaa !7798
  %16 = load i32, i32* %src_fd.addr, align 4, !dbg !7799, !tbaa !2635
  %cmp = icmp sle i32 0, %16, !dbg !7801
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !7802

land.lhs.true:                                    ; preds = %lor.end8
  %17 = load i32, i32* %dst_fd.addr, align 4, !dbg !7803, !tbaa !2635
  %cmp11 = icmp sle i32 0, %17, !dbg !7804
  br i1 %cmp11, label %if.then, label %if.else, !dbg !7805

if.then:                                          ; preds = %land.lhs.true
  %18 = load i8*, i8** %src_path.addr, align 8, !dbg !7806, !tbaa !2648
  %19 = load i32, i32* %src_fd.addr, align 4, !dbg !7807, !tbaa !2635
  %20 = load i8*, i8** %dst_path.addr, align 8, !dbg !7808, !tbaa !2648
  %21 = load i32, i32* %dst_fd.addr, align 4, !dbg !7809, !tbaa !2635
  %22 = load i8, i8* %selinux_done, align 1, !dbg !7810, !tbaa !2742
  %tobool12 = trunc i8 %22 to i1, !dbg !7810
  %23 = zext i1 %tobool12 to i64, !dbg !7810
  %cond13 = select i1 %tobool12, i32 (i8*, %struct.error_context*)* @check_selinux_attr, i32 (i8*, %struct.error_context*)* null, !dbg !7810
  %24 = load i8, i8* %all_errors, align 1, !dbg !7811, !tbaa !2742
  %tobool14 = trunc i8 %24 to i1, !dbg !7811
  br i1 %tobool14, label %cond.true, label %lor.lhs.false, !dbg !7812

lor.lhs.false:                                    ; preds = %if.then
  %25 = load i8, i8* %some_errors, align 1, !dbg !7813, !tbaa !2742
  %tobool15 = trunc i8 %25 to i1, !dbg !7813
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !7811

cond.true:                                        ; preds = %lor.lhs.false, %if.then
  br label %cond.end, !dbg !7811

cond.false:                                       ; preds = %lor.lhs.false
  br label %cond.end, !dbg !7811

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond16 = phi %struct.error_context* [ %ctx, %cond.true ], [ null, %cond.false ], !dbg !7811
  %call = call i32 @attr_copy_fd(i8* %18, i32 %19, i8* %20, i32 %21, i32 (i8*, %struct.error_context*)* %cond13, %struct.error_context* %cond16), !dbg !7814
  store i32 %call, i32* %ret, align 4, !dbg !7815, !tbaa !2635
  br label %if.end, !dbg !7816

if.else:                                          ; preds = %land.lhs.true, %lor.end8
  %26 = load i8*, i8** %src_path.addr, align 8, !dbg !7817, !tbaa !2648
  %27 = load i8*, i8** %dst_path.addr, align 8, !dbg !7818, !tbaa !2648
  %28 = load i8, i8* %selinux_done, align 1, !dbg !7819, !tbaa !2742
  %tobool17 = trunc i8 %28 to i1, !dbg !7819
  %29 = zext i1 %tobool17 to i64, !dbg !7819
  %cond18 = select i1 %tobool17, i32 (i8*, %struct.error_context*)* @check_selinux_attr, i32 (i8*, %struct.error_context*)* null, !dbg !7819
  %30 = load i8, i8* %all_errors, align 1, !dbg !7820, !tbaa !2742
  %tobool19 = trunc i8 %30 to i1, !dbg !7820
  br i1 %tobool19, label %cond.true22, label %lor.lhs.false20, !dbg !7821

lor.lhs.false20:                                  ; preds = %if.else
  %31 = load i8, i8* %some_errors, align 1, !dbg !7822, !tbaa !2742
  %tobool21 = trunc i8 %31 to i1, !dbg !7822
  br i1 %tobool21, label %cond.true22, label %cond.false23, !dbg !7820

cond.true22:                                      ; preds = %lor.lhs.false20, %if.else
  br label %cond.end24, !dbg !7820

cond.false23:                                     ; preds = %lor.lhs.false20
  br label %cond.end24, !dbg !7820

cond.end24:                                       ; preds = %cond.false23, %cond.true22
  %cond25 = phi %struct.error_context* [ %ctx, %cond.true22 ], [ null, %cond.false23 ], !dbg !7820
  %call26 = call i32 @attr_copy_file(i8* %26, i8* %27, i32 (i8*, %struct.error_context*)* %cond18, %struct.error_context* %cond25), !dbg !7823
  store i32 %call26, i32* %ret, align 4, !dbg !7824, !tbaa !2635
  br label %if.end

if.end:                                           ; preds = %cond.end24, %cond.end
  %32 = load i32, i32* %ret, align 4, !dbg !7825, !tbaa !2635
  %cmp27 = icmp eq i32 %32, 0, !dbg !7826
  ret i1 %cmp27, !dbg !7827
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_author(i8* %dst_name, i32 %dest_desc, %struct.stat* %src_sb) #4 !dbg !7828 !ctir !596 {
entry:
  %dst_name.addr = alloca i8*, align 8
  %dest_desc.addr = alloca i32, align 4
  %src_sb.addr = alloca %struct.stat*, align 8
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !7829, metadata !DIExpression()), !dbg !7830
  store i32 %dest_desc, i32* %dest_desc.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !7831, metadata !DIExpression()), !dbg !7832
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !7833, metadata !DIExpression()), !dbg !7834
  %0 = load i8*, i8** %dst_name.addr, align 8, !dbg !7835, !tbaa !2648
  %1 = load i32, i32* %dest_desc.addr, align 4, !dbg !7836, !tbaa !2635
  %2 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7837, !tbaa !2648
  ret void, !dbg !7838
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @cached_umask() #4 !dbg !601 !ctir !409 {
entry:
  %0 = load i32, i32* @cached_umask.mask, align 4, !dbg !7839, !tbaa !2635
  %cmp = icmp eq i32 %0, -1, !dbg !7841
  br i1 %cmp, label %if.then, label %if.end, !dbg !7842

if.then:                                          ; preds = %entry
  %call = call i32 @umask(i32 0) #9, !dbg !7843
  store i32 %call, i32* @cached_umask.mask, align 4, !dbg !7845, !tbaa !2635
  %1 = load i32, i32* @cached_umask.mask, align 4, !dbg !7846, !tbaa !2635
  %call1 = call i32 @umask(i32 %1) #9, !dbg !7847
  br label %if.end, !dbg !7848

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* @cached_umask.mask, align 4, !dbg !7849, !tbaa !2635
  ret i32 %2, !dbg !7850
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal void @copy_attr_allerror(%struct.error_context* %ctx, i8* %fmt, ...) #4 !dbg !7851 !ctir !567 {
entry:
  %ctx.addr = alloca %struct.error_context*, align 8
  %fmt.addr = alloca i8*, align 8
  %err = alloca i32, align 4, !ctir !7
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !583
  store %struct.error_context* %ctx, %struct.error_context** %ctx.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.error_context** %ctx.addr, metadata !7852, metadata !DIExpression()), !dbg !7853
  store i8* %fmt, i8** %fmt.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !7854, metadata !DIExpression()), !dbg !7855
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7856, metadata !DIExpression()), !dbg !7857
  %call = call i32* @__errno_location() #16, !dbg !7858
  %0 = load i32, i32* %call, align 4, !dbg !7858, !tbaa !2635, !ctir !7
  store i32 %0, i32* %err, align 4, !dbg !7857, !tbaa !2635
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !7859, metadata !DIExpression()), !dbg !7860
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !7861
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !7861
  call void @llvm.va_start(i8* %arraydecay1), !dbg !7861
  %1 = load i32, i32* %err, align 4, !dbg !7862, !tbaa !2635
  %2 = load i8*, i8** %fmt.addr, align 8, !dbg !7863, !tbaa !2648
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !7864
  call void @verror(i32 0, i32 %1, i8* %2, %struct.__va_list_tag* %arraydecay2), !dbg !7865
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !7866
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !7866
  call void @llvm.va_end(i8* %arraydecay34), !dbg !7866
  ret void, !dbg !7867
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @copy_attr_error(%struct.error_context* %ctx, i8* %fmt, ...) #4 !dbg !7868 !ctir !567 {
entry:
  %ctx.addr = alloca %struct.error_context*, align 8
  %fmt.addr = alloca i8*, align 8
  %err = alloca i32, align 4, !ctir !7
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !583
  store %struct.error_context* %ctx, %struct.error_context** %ctx.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.error_context** %ctx.addr, metadata !7869, metadata !DIExpression()), !dbg !7870
  store i8* %fmt, i8** %fmt.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !7871, metadata !DIExpression()), !dbg !7872
  %call = call i32* @__errno_location() #16, !dbg !7873
  %0 = load i32, i32* %call, align 4, !dbg !7873, !tbaa !2635, !ctir !7
  %call1 = call zeroext i1 @errno_unsupported(i32 %0), !dbg !7875
  br i1 %call1, label %if.end, label %if.then, !dbg !7876

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7877, metadata !DIExpression()), !dbg !7879
  %call2 = call i32* @__errno_location() #16, !dbg !7880
  %1 = load i32, i32* %call2, align 4, !dbg !7880, !tbaa !2635, !ctir !7
  store i32 %1, i32* %err, align 4, !dbg !7879, !tbaa !2635
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !7881, metadata !DIExpression()), !dbg !7882
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !7883
  %arraydecay3 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !7883
  call void @llvm.va_start(i8* %arraydecay3), !dbg !7883
  %2 = load i32, i32* %err, align 4, !dbg !7884, !tbaa !2635
  %3 = load i8*, i8** %fmt.addr, align 8, !dbg !7885, !tbaa !2648
  %arraydecay4 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !7886
  call void @verror(i32 0, i32 %2, i8* %3, %struct.__va_list_tag* %arraydecay4), !dbg !7887
  %arraydecay5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !7888
  %arraydecay56 = bitcast %struct.__va_list_tag* %arraydecay5 to i8*, !dbg !7888
  call void @llvm.va_end(i8* %arraydecay56), !dbg !7888
  br label %if.end, !dbg !7889

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7890
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @copy_attr_quote(%struct.error_context* %ctx, i8* %str) #4 !dbg !7891 !ctir !579 {
entry:
  %ctx.addr = alloca %struct.error_context*, align 8
  %str.addr = alloca i8*, align 8
  store %struct.error_context* %ctx, %struct.error_context** %ctx.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.error_context** %ctx.addr, metadata !7892, metadata !DIExpression()), !dbg !7893
  store i8* %str, i8** %str.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !7894, metadata !DIExpression()), !dbg !7895
  %0 = load i8*, i8** %str.addr, align 8, !dbg !7896, !tbaa !2648
  %call = call i8* @quotearg_style(i32 4, i8* %0), !dbg !7896
  ret i8* %call, !dbg !7897
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @copy_attr_free(%struct.error_context* %ctx, i8* %str) #4 !dbg !7898 !ctir !567 {
entry:
  %ctx.addr = alloca %struct.error_context*, align 8
  %str.addr = alloca i8*, align 8
  store %struct.error_context* %ctx, %struct.error_context** %ctx.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.error_context** %ctx.addr, metadata !7899, metadata !DIExpression()), !dbg !7900
  store i8* %str, i8** %str.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !7901, metadata !DIExpression()), !dbg !7902
  ret void, !dbg !7903
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @check_selinux_attr(i8* %name, %struct.error_context* %ctx) #4 !dbg !7904 !ctir !594 {
entry:
  %name.addr = alloca i8*, align 8
  %ctx.addr = alloca %struct.error_context*, align 8
  store i8* %name, i8** %name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7905, metadata !DIExpression()), !dbg !7906
  store %struct.error_context* %ctx, %struct.error_context** %ctx.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.error_context** %ctx.addr, metadata !7907, metadata !DIExpression()), !dbg !7908
  %0 = load i8*, i8** %name.addr, align 8, !dbg !7909, !tbaa !2648
  %call = call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.77.142, i64 0, i64 0), i64 16) #14, !dbg !7909
  %tobool = icmp ne i32 %call, 0, !dbg !7909
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !7910

land.rhs:                                         ; preds = %entry
  %1 = load i8*, i8** %name.addr, align 8, !dbg !7911, !tbaa !2648
  %2 = load %struct.error_context*, %struct.error_context** %ctx.addr, align 8, !dbg !7912, !tbaa !2648
  %call1 = call i32 @attr_copy_check_permissions(i8* %1, %struct.error_context* %2), !dbg !7913
  %tobool2 = icmp ne i32 %call1, 0, !dbg !7910
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ], !dbg !7914
  %land.ext = zext i1 %3 to i32, !dbg !7910
  ret i32 %land.ext, !dbg !7915
}

declare dso_local i32 @attr_copy_fd(i8*, i32, i8*, i32, i32 (i8*, %struct.error_context*)*, %struct.error_context*) #3

declare dso_local i32 @attr_copy_file(i8*, i8*, i32 (i8*, %struct.error_context*)*, %struct.error_context*) #3

declare dso_local i32 @attr_copy_check_permissions(i8*, %struct.error_context*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @owner_failure_ok(%struct.cp_options* %x) #4 !dbg !7916 !ctir !407 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !7917, metadata !DIExpression()), !dbg !7918
  %call = call i32* @__errno_location() #16, !dbg !7919
  %0 = load i32, i32* %call, align 4, !dbg !7919, !tbaa !2635, !ctir !7
  %cmp = icmp eq i32 %0, 1, !dbg !7920
  br i1 %cmp, label %land.rhs, label %lor.lhs.false, !dbg !7921

lor.lhs.false:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !7922
  %1 = load i32, i32* %call1, align 4, !dbg !7922, !tbaa !2635, !ctir !7
  %cmp2 = icmp eq i32 %1, 22, !dbg !7923
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !7924

land.rhs:                                         ; preds = %lor.lhs.false, %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7925, !tbaa !2648
  %owner_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 12, !dbg !7926, !ctir !357
  %3 = load i8, i8* %owner_privileges, align 1, !dbg !7926, !tbaa !7927
  %tobool = trunc i8 %3 to i1, !dbg !7926, !ctir !142
  %lnot = xor i1 %tobool, true, !dbg !7928
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false
  %4 = phi i1 [ false, %lor.lhs.false ], [ %lnot, %land.rhs ], !dbg !7929
  ret i1 %4, !dbg !7930
}

; Function Attrs: nounwind
declare dso_local i32 @fchown(i32, i32, i32) #2

; Function Attrs: nounwind
declare dso_local i32 @fstat(i32, %struct.stat*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @clone_file(i32 %dest_fd, i32 %src_fd) #4 !dbg !7931 !ctir !507 {
entry:
  %dest_fd.addr = alloca i32, align 4
  %src_fd.addr = alloca i32, align 4
  store i32 %dest_fd, i32* %dest_fd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %dest_fd.addr, metadata !7932, metadata !DIExpression()), !dbg !7933
  store i32 %src_fd, i32* %src_fd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !7934, metadata !DIExpression()), !dbg !7935
  %0 = load i32, i32* %dest_fd.addr, align 4, !dbg !7936, !tbaa !2635
  %1 = load i32, i32* %src_fd.addr, align 4, !dbg !7937, !tbaa !2635
  %call = call i32 (i32, i64, ...) @ioctl(i32 %0, i64 1074041865, i32 %1) #9, !dbg !7938
  ret i32 %call, !dbg !7939
}

; Function Attrs: nounwind readnone
declare dso_local i32 @getpagesize() #8

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @io_blksize(%struct.stat* byval(%struct.stat) align 8 %sb) #4 !dbg !7940 !ctir !509 {
entry:
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !7942, metadata !DIExpression()), !dbg !7943
  %st_blksize = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7944, !ctir !415
  %0 = load i64, i64* %st_blksize, align 8, !dbg !7944, !tbaa !7185, !ctir !286
  %cmp = icmp slt i64 0, %0, !dbg !7944
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !7944

land.lhs.true:                                    ; preds = %entry
  %st_blksize1 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7944, !ctir !415
  %1 = load i64, i64* %st_blksize1, align 8, !dbg !7944, !tbaa !7185, !ctir !286
  %cmp2 = icmp ule i64 %1, 2305843009213693952, !dbg !7944
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !7944

cond.true:                                        ; preds = %land.lhs.true
  %st_blksize3 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7944, !ctir !415
  %2 = load i64, i64* %st_blksize3, align 8, !dbg !7944, !tbaa !7185, !ctir !286
  br label %cond.end, !dbg !7944

cond.false:                                       ; preds = %land.lhs.true, %entry
  br label %cond.end, !dbg !7944

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ 512, %cond.false ], !dbg !7944
  %cmp4 = icmp sgt i64 131072, %cond, !dbg !7944
  br i1 %cmp4, label %cond.true5, label %cond.false6, !dbg !7944

cond.true5:                                       ; preds = %cond.end
  br label %cond.end17, !dbg !7944

cond.false6:                                      ; preds = %cond.end
  %st_blksize7 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7944, !ctir !415
  %3 = load i64, i64* %st_blksize7, align 8, !dbg !7944, !tbaa !7185, !ctir !286
  %cmp8 = icmp slt i64 0, %3, !dbg !7944
  br i1 %cmp8, label %land.lhs.true9, label %cond.false14, !dbg !7944

land.lhs.true9:                                   ; preds = %cond.false6
  %st_blksize10 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7944, !ctir !415
  %4 = load i64, i64* %st_blksize10, align 8, !dbg !7944, !tbaa !7185, !ctir !286
  %cmp11 = icmp ule i64 %4, 2305843009213693952, !dbg !7944
  br i1 %cmp11, label %cond.true12, label %cond.false14, !dbg !7944

cond.true12:                                      ; preds = %land.lhs.true9
  %st_blksize13 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7944, !ctir !415
  %5 = load i64, i64* %st_blksize13, align 8, !dbg !7944, !tbaa !7185, !ctir !286
  br label %cond.end15, !dbg !7944

cond.false14:                                     ; preds = %land.lhs.true9, %cond.false6
  br label %cond.end15, !dbg !7944

cond.end15:                                       ; preds = %cond.false14, %cond.true12
  %cond16 = phi i64 [ %5, %cond.true12 ], [ 512, %cond.false14 ], !dbg !7944
  br label %cond.end17, !dbg !7944

cond.end17:                                       ; preds = %cond.end15, %cond.true5
  %cond18 = phi i64 [ 131072, %cond.true5 ], [ %cond16, %cond.end15 ], !dbg !7944
  ret i64 %cond18, !dbg !7945
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_probably_sparse(%struct.stat* %sb) #4 !dbg !7946 !ctir !511 {
entry:
  %sb.addr = alloca %struct.stat*, align 8
  store %struct.stat* %sb, %struct.stat** %sb.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.stat** %sb.addr, metadata !7947, metadata !DIExpression()), !dbg !7948
  %0 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !7949, !tbaa !2648
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !7949, !ctir !414
  %1 = load i32, i32* %st_mode, align 8, !dbg !7949, !tbaa !2914, !ctir !140
  %and = and i32 %1, 61440, !dbg !7949
  %cmp = icmp eq i32 %and, 32768, !dbg !7949
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !7950

land.rhs:                                         ; preds = %entry
  %2 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !7951, !tbaa !2648
  %st_blocks = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 10, !dbg !7951, !ctir !414
  %3 = load i64, i64* %st_blocks, align 8, !dbg !7951, !tbaa !7952, !ctir !288
  %4 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !7953, !tbaa !2648
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 8, !dbg !7954, !ctir !414
  %5 = load i64, i64* %st_size, align 8, !dbg !7954, !tbaa !4018, !ctir !29
  %div = sdiv i64 %5, 512, !dbg !7955
  %cmp1 = icmp slt i64 %3, %div, !dbg !7956
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %6 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !7957
  ret i1 %6, !dbg !7958
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @ptr_align(i8* %ptr, i64 %alignment) #4 !dbg !7959 !ctir !513 {
entry:
  %ptr.addr = alloca i8*, align 8
  %alignment.addr = alloca i64, align 8
  %p0 = alloca i8*, align 8, !ctir !180
  %p1 = alloca i8*, align 8, !ctir !180
  store i8* %ptr, i8** %ptr.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7960, metadata !DIExpression()), !dbg !7961
  store i64 %alignment, i64* %alignment.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %alignment.addr, metadata !7962, metadata !DIExpression()), !dbg !7963
  call void @llvm.dbg.declare(metadata i8** %p0, metadata !7964, metadata !DIExpression()), !dbg !7965
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !7966, !tbaa !2648
  store i8* %0, i8** %p0, align 8, !dbg !7965, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !7967, metadata !DIExpression()), !dbg !7968
  %1 = load i8*, i8** %p0, align 8, !dbg !7969, !tbaa !2648
  %2 = load i64, i64* %alignment.addr, align 8, !dbg !7970, !tbaa !3288
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %2, !dbg !7971
  %add.ptr1 = getelementptr inbounds i8, i8* %add.ptr, i64 -1, !dbg !7972
  store i8* %add.ptr1, i8** %p1, align 8, !dbg !7968, !tbaa !2648
  %3 = load i8*, i8** %p1, align 8, !dbg !7973, !tbaa !2648
  %4 = load i8*, i8** %p1, align 8, !dbg !7974, !tbaa !2648
  %5 = ptrtoint i8* %4 to i64, !dbg !7975
  %6 = load i64, i64* %alignment.addr, align 8, !dbg !7976, !tbaa !3288
  %rem = urem i64 %5, %6, !dbg !7977
  %idx.neg = sub i64 0, %rem, !dbg !7978
  %add.ptr2 = getelementptr inbounds i8, i8* %3, i64 %idx.neg, !dbg !7978
  ret i8* %add.ptr2, !dbg !7979
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @extent_copy(i32 %src_fd, i32 %dest_fd, i8* %buf, i64 %buf_size, i64 %hole_size, i64 %src_total_size, i32 %sparse_mode, i8* %src_name, i8* %dst_name, i8* %require_normal_copy) #4 !dbg !7980 !ctir !517 {
entry:
  %retval = alloca i1, align 1
  %src_fd.addr = alloca i32, align 4
  %dest_fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %buf_size.addr = alloca i64, align 8
  %hole_size.addr = alloca i64, align 8
  %src_total_size.addr = alloca i64, align 8
  %sparse_mode.addr = alloca i32, align 4
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %require_normal_copy.addr = alloca i8*, align 8
  %scan = alloca %struct.extent_scan, align 8, !ctir !529
  %last_ext_start = alloca i64, align 8, !ctir !352
  %last_ext_len = alloca i64, align 8, !ctir !352
  %dest_pos = alloca i64, align 8, !ctir !352
  %wrote_hole_at_eof = alloca i8, align 1, !ctir !142
  %ok = alloca i8, align 1, !ctir !142
  %empty_extent = alloca i8, align 1, !ctir !142
  %i = alloca i32, align 4, !ctir !70
  %ext_start = alloca i64, align 8, !ctir !352
  %ext_len = alloca i64, align 8, !ctir !352
  %ext_hole_size = alloca i64, align 8, !ctir !352
  %nzeros = alloca i64, align 8, !ctir !352
  %n_read = alloca i64, align 8, !ctir !352
  %read_hole = alloca i8, align 1, !ctir !142
  store i32 %src_fd, i32* %src_fd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !7981, metadata !DIExpression()), !dbg !7982
  store i32 %dest_fd, i32* %dest_fd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %dest_fd.addr, metadata !7983, metadata !DIExpression()), !dbg !7984
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7985, metadata !DIExpression()), !dbg !7986
  store i64 %buf_size, i64* %buf_size.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %buf_size.addr, metadata !7987, metadata !DIExpression()), !dbg !7988
  store i64 %hole_size, i64* %hole_size.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %hole_size.addr, metadata !7989, metadata !DIExpression()), !dbg !7990
  store i64 %src_total_size, i64* %src_total_size.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %src_total_size.addr, metadata !7991, metadata !DIExpression()), !dbg !7992
  store i32 %sparse_mode, i32* %sparse_mode.addr, align 4, !tbaa !3295
  call void @llvm.dbg.declare(metadata i32* %sparse_mode.addr, metadata !7993, metadata !DIExpression()), !dbg !7994
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !7995, metadata !DIExpression()), !dbg !7996
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !7997, metadata !DIExpression()), !dbg !7998
  store i8* %require_normal_copy, i8** %require_normal_copy.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %require_normal_copy.addr, metadata !7999, metadata !DIExpression()), !dbg !8000
  call void @llvm.dbg.declare(metadata %struct.extent_scan* %scan, metadata !8001, metadata !DIExpression()), !dbg !8002
  call void @llvm.dbg.declare(metadata i64* %last_ext_start, metadata !8003, metadata !DIExpression()), !dbg !8004
  store i64 0, i64* %last_ext_start, align 8, !dbg !8004, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %last_ext_len, metadata !8005, metadata !DIExpression()), !dbg !8006
  store i64 0, i64* %last_ext_len, align 8, !dbg !8006, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %dest_pos, metadata !8007, metadata !DIExpression()), !dbg !8008
  store i64 0, i64* %dest_pos, align 8, !dbg !8008, !tbaa !3288
  %0 = load i32, i32* %src_fd.addr, align 4, !dbg !8009, !tbaa !2635
  call void @extent_scan_init(i32 %0, %struct.extent_scan* %scan), !dbg !8010
  %1 = load i8*, i8** %require_normal_copy.addr, align 8, !dbg !8011, !tbaa !2648
  store i8 0, i8* %1, align 1, !dbg !8012, !tbaa !2742, !ctir !142
  call void @llvm.dbg.declare(metadata i8* %wrote_hole_at_eof, metadata !8013, metadata !DIExpression()), !dbg !8014
  store i8 1, i8* %wrote_hole_at_eof, align 1, !dbg !8014, !tbaa !2742
  br label %do.body, !dbg !8015

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !8016, metadata !DIExpression()), !dbg !8018
  %call = call zeroext i1 @extent_scan_read(%struct.extent_scan* %scan), !dbg !8019
  %frombool = zext i1 %call to i8, !dbg !8018
  store i8 %frombool, i8* %ok, align 1, !dbg !8018, !tbaa !2742
  %2 = load i8, i8* %ok, align 1, !dbg !8020, !tbaa !2742
  %tobool = trunc i8 %2 to i1, !dbg !8020
  br i1 %tobool, label %if.end9, label %if.then, !dbg !8022

if.then:                                          ; preds = %do.body
  %hit_final_extent = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 5, !dbg !8023, !ctir !529
  %3 = load i8, i8* %hit_final_extent, align 1, !dbg !8023, !tbaa !8026
  %tobool1 = trunc i8 %3 to i1, !dbg !8023, !ctir !142
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !8028

if.then2:                                         ; preds = %if.then
  br label %do.end, !dbg !8029

if.end:                                           ; preds = %if.then
  %initial_scan_failed = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 4, !dbg !8030, !ctir !529
  %4 = load i8, i8* %initial_scan_failed, align 8, !dbg !8030, !tbaa !8032
  %tobool3 = trunc i8 %4 to i1, !dbg !8030, !ctir !142
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !8033

if.then4:                                         ; preds = %if.end
  %5 = load i8*, i8** %require_normal_copy.addr, align 8, !dbg !8034, !tbaa !2648
  store i8 1, i8* %5, align 1, !dbg !8036, !tbaa !2742, !ctir !142
  store i1 false, i1* %retval, align 1, !dbg !8037
  br label %return, !dbg !8037

if.end5:                                          ; preds = %if.end
  %call6 = call i32* @__errno_location() #16, !dbg !8038
  %6 = load i32, i32* %call6, align 4, !dbg !8038, !tbaa !2635, !ctir !7
  %call7 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.68.158, i64 0, i64 0)) #9, !dbg !8039
  %7 = load i8*, i8** %src_name.addr, align 8, !dbg !8040, !tbaa !2648
  %call8 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %7), !dbg !8040
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* %call7, i8* %call8), !dbg !8041
  store i1 false, i1* %retval, align 1, !dbg !8042
  br label %return, !dbg !8042

if.end9:                                          ; preds = %do.body
  call void @llvm.dbg.declare(metadata i8* %empty_extent, metadata !8043, metadata !DIExpression()), !dbg !8044
  store i8 0, i8* %empty_extent, align 1, !dbg !8044, !tbaa !2742
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8045, metadata !DIExpression()), !dbg !8047
  store i32 0, i32* %i, align 4, !dbg !8047, !tbaa !2635
  br label %for.cond, !dbg !8048

for.cond:                                         ; preds = %for.inc, %if.end9
  %8 = load i32, i32* %i, align 4, !dbg !8049, !tbaa !2635
  %conv = zext i32 %8 to i64, !dbg !8049
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 3, !dbg !8051, !ctir !529
  %9 = load i64, i64* %ei_count, align 8, !dbg !8051, !tbaa !8052, !ctir !55
  %cmp = icmp ult i64 %conv, %9, !dbg !8053
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !8054

lor.rhs:                                          ; preds = %for.cond
  %10 = load i8, i8* %empty_extent, align 1, !dbg !8055, !tbaa !2742
  %tobool11 = trunc i8 %10 to i1, !dbg !8055
  br label %lor.end, !dbg !8054

lor.end:                                          ; preds = %lor.rhs, %for.cond
  %11 = phi i1 [ true, %for.cond ], [ %tobool11, %lor.rhs ]
  br i1 %11, label %for.body, label %for.end, !dbg !8056

for.body:                                         ; preds = %lor.end
  call void @llvm.dbg.declare(metadata i64* %ext_start, metadata !8057, metadata !DIExpression()), !dbg !8059
  call void @llvm.dbg.declare(metadata i64* %ext_len, metadata !8060, metadata !DIExpression()), !dbg !8061
  call void @llvm.dbg.declare(metadata i64* %ext_hole_size, metadata !8062, metadata !DIExpression()), !dbg !8063
  %12 = load i32, i32* %i, align 4, !dbg !8064, !tbaa !2635
  %conv13 = zext i32 %12 to i64, !dbg !8064
  %ei_count14 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 3, !dbg !8066, !ctir !529
  %13 = load i64, i64* %ei_count14, align 8, !dbg !8066, !tbaa !8052, !ctir !55
  %cmp15 = icmp ult i64 %conv13, %13, !dbg !8067
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !8068

if.then17:                                        ; preds = %for.body
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 6, !dbg !8069, !ctir !529
  %14 = load %struct.extent_info*, %struct.extent_info** %ext_info, align 8, !dbg !8069, !tbaa !8071, !ctir !519
  %15 = load i32, i32* %i, align 4, !dbg !8072, !tbaa !2635
  %idxprom = zext i32 %15 to i64, !dbg !8073
  %arrayidx = getelementptr inbounds %struct.extent_info, %struct.extent_info* %14, i64 %idxprom, !dbg !8073, !ctir !519
  %ext_logical = getelementptr inbounds %struct.extent_info, %struct.extent_info* %arrayidx, i32 0, i32 0, !dbg !8074, !ctir !520
  %16 = load i64, i64* %ext_logical, align 8, !dbg !8074, !tbaa !8075, !ctir !352
  store i64 %16, i64* %ext_start, align 8, !dbg !8077, !tbaa !3288
  %ext_info18 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 6, !dbg !8078, !ctir !529
  %17 = load %struct.extent_info*, %struct.extent_info** %ext_info18, align 8, !dbg !8078, !tbaa !8071, !ctir !519
  %18 = load i32, i32* %i, align 4, !dbg !8079, !tbaa !2635
  %idxprom19 = zext i32 %18 to i64, !dbg !8080
  %arrayidx20 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %17, i64 %idxprom19, !dbg !8080, !ctir !519
  %ext_length = getelementptr inbounds %struct.extent_info, %struct.extent_info* %arrayidx20, i32 0, i32 1, !dbg !8081, !ctir !520
  %19 = load i64, i64* %ext_length, align 8, !dbg !8081, !tbaa !8082, !ctir !352
  store i64 %19, i64* %ext_len, align 8, !dbg !8083, !tbaa !3288
  br label %if.end25, !dbg !8084

if.else:                                          ; preds = %for.body
  %20 = load i32, i32* %i, align 4, !dbg !8085, !tbaa !2635
  %dec = add i32 %20, -1, !dbg !8085
  store i32 %dec, i32* %i, align 4, !dbg !8085, !tbaa !2635
  %21 = load i64, i64* %last_ext_start, align 8, !dbg !8087, !tbaa !3288
  %ext_info21 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 6, !dbg !8088, !ctir !529
  %22 = load %struct.extent_info*, %struct.extent_info** %ext_info21, align 8, !dbg !8088, !tbaa !8071, !ctir !519
  %23 = load i32, i32* %i, align 4, !dbg !8089, !tbaa !2635
  %idxprom22 = zext i32 %23 to i64, !dbg !8090
  %arrayidx23 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %22, i64 %idxprom22, !dbg !8090, !ctir !519
  %ext_length24 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %arrayidx23, i32 0, i32 1, !dbg !8091, !ctir !520
  %24 = load i64, i64* %ext_length24, align 8, !dbg !8091, !tbaa !8082, !ctir !352
  %add = add nsw i64 %21, %24, !dbg !8092
  store i64 %add, i64* %ext_start, align 8, !dbg !8093, !tbaa !3288
  store i64 0, i64* %ext_len, align 8, !dbg !8094, !tbaa !3288
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then17
  %25 = load i64, i64* %src_total_size.addr, align 8, !dbg !8095, !tbaa !3288
  %26 = load i64, i64* %ext_start, align 8, !dbg !8097, !tbaa !3288
  %27 = load i64, i64* %ext_len, align 8, !dbg !8098, !tbaa !3288
  %add26 = add nsw i64 %26, %27, !dbg !8099
  %cmp27 = icmp slt i64 %25, %add26, !dbg !8100
  br i1 %cmp27, label %if.then29, label %if.end34, !dbg !8101

if.then29:                                        ; preds = %if.end25
  %28 = load i64, i64* %src_total_size.addr, align 8, !dbg !8102, !tbaa !3288
  %29 = load i64, i64* %ext_start, align 8, !dbg !8105, !tbaa !3288
  %cmp30 = icmp slt i64 %28, %29, !dbg !8106
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !8107

if.then32:                                        ; preds = %if.then29
  %30 = load i64, i64* %src_total_size.addr, align 8, !dbg !8108, !tbaa !3288
  store i64 %30, i64* %ext_start, align 8, !dbg !8109, !tbaa !3288
  br label %if.end33, !dbg !8110

if.end33:                                         ; preds = %if.then32, %if.then29
  %31 = load i64, i64* %src_total_size.addr, align 8, !dbg !8111, !tbaa !3288
  %32 = load i64, i64* %ext_start, align 8, !dbg !8112, !tbaa !3288
  %sub = sub nsw i64 %31, %32, !dbg !8113
  store i64 %sub, i64* %ext_len, align 8, !dbg !8114, !tbaa !3288
  br label %if.end34, !dbg !8115

if.end34:                                         ; preds = %if.end33, %if.end25
  %33 = load i64, i64* %ext_start, align 8, !dbg !8116, !tbaa !3288
  %34 = load i64, i64* %last_ext_start, align 8, !dbg !8117, !tbaa !3288
  %sub35 = sub nsw i64 %33, %34, !dbg !8118
  %35 = load i64, i64* %last_ext_len, align 8, !dbg !8119, !tbaa !3288
  %sub36 = sub nsw i64 %sub35, %35, !dbg !8120
  store i64 %sub36, i64* %ext_hole_size, align 8, !dbg !8121, !tbaa !3288
  store i8 0, i8* %wrote_hole_at_eof, align 1, !dbg !8122, !tbaa !2742
  %36 = load i64, i64* %ext_hole_size, align 8, !dbg !8123, !tbaa !3288
  %tobool37 = icmp ne i64 %36, 0, !dbg !8123
  br i1 %tobool37, label %if.then38, label %if.end82, !dbg !8125

if.then38:                                        ; preds = %if.end34
  %37 = load i32, i32* %src_fd.addr, align 4, !dbg !8126, !tbaa !2635
  %38 = load i64, i64* %ext_start, align 8, !dbg !8129, !tbaa !3288
  %call39 = call i64 @lseek(i32 %37, i64 %38, i32 0) #9, !dbg !8130
  %cmp40 = icmp slt i64 %call39, 0, !dbg !8131
  br i1 %cmp40, label %if.then42, label %if.end46, !dbg !8132

if.then42:                                        ; preds = %if.then38
  %call43 = call i32* @__errno_location() #16, !dbg !8133
  %39 = load i32, i32* %call43, align 4, !dbg !8133, !tbaa !2635, !ctir !7
  %call44 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.69.156, i64 0, i64 0)) #9, !dbg !8135
  %40 = load i8*, i8** %src_name.addr, align 8, !dbg !8136, !tbaa !2648
  %call45 = call i8* @quotearg_style(i32 4, i8* %40), !dbg !8136
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %39, i8* %call44, i8* %call45), !dbg !8137
  br label %fail, !dbg !8137

fail:                                             ; preds = %if.then90, %if.then70, %if.then59, %if.then42
  call void @llvm.dbg.label(metadata !8138), !dbg !8139
  call void @extent_scan_free(%struct.extent_scan* %scan), !dbg !8140
  store i1 false, i1* %retval, align 1, !dbg !8141
  br label %return, !dbg !8141

if.end46:                                         ; preds = %if.then38
  %41 = load i8, i8* %empty_extent, align 1, !dbg !8142, !tbaa !2742
  %tobool47 = trunc i8 %41 to i1, !dbg !8142
  br i1 %tobool47, label %land.lhs.true, label %lor.lhs.false, !dbg !8144

land.lhs.true:                                    ; preds = %if.end46
  %42 = load i32, i32* %sparse_mode.addr, align 4, !dbg !8145, !tbaa !3295
  %cmp49 = icmp eq i32 %42, 3, !dbg !8146
  br i1 %cmp49, label %if.then55, label %lor.lhs.false, !dbg !8147

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end46
  %43 = load i8, i8* %empty_extent, align 1, !dbg !8148, !tbaa !2742
  %tobool51 = trunc i8 %43 to i1, !dbg !8148
  br i1 %tobool51, label %if.else61, label %land.lhs.true52, !dbg !8149

land.lhs.true52:                                  ; preds = %lor.lhs.false
  %44 = load i32, i32* %sparse_mode.addr, align 4, !dbg !8150, !tbaa !3295
  %cmp53 = icmp ne i32 %44, 1, !dbg !8151
  br i1 %cmp53, label %if.then55, label %if.else61, !dbg !8152

if.then55:                                        ; preds = %land.lhs.true52, %land.lhs.true
  %45 = load i32, i32* %dest_fd.addr, align 4, !dbg !8153, !tbaa !2635
  %46 = load i8*, i8** %dst_name.addr, align 8, !dbg !8156, !tbaa !2648
  %47 = load i32, i32* %sparse_mode.addr, align 4, !dbg !8157, !tbaa !3295
  %cmp56 = icmp eq i32 %47, 3, !dbg !8158
  %48 = load i64, i64* %ext_hole_size, align 8, !dbg !8159, !tbaa !3288
  %call58 = call zeroext i1 @create_hole(i32 %45, i8* %46, i1 zeroext %cmp56, i64 %48), !dbg !8160
  br i1 %call58, label %if.end60, label %if.then59, !dbg !8161

if.then59:                                        ; preds = %if.then55
  br label %fail, !dbg !8162

if.end60:                                         ; preds = %if.then55
  store i8 1, i8* %wrote_hole_at_eof, align 1, !dbg !8163, !tbaa !2742
  br label %if.end81, !dbg !8164

if.else61:                                        ; preds = %land.lhs.true52, %lor.lhs.false
  call void @llvm.dbg.declare(metadata i64* %nzeros, metadata !8165, metadata !DIExpression()), !dbg !8167
  %49 = load i64, i64* %ext_hole_size, align 8, !dbg !8168, !tbaa !3288
  store i64 %49, i64* %nzeros, align 8, !dbg !8167, !tbaa !3288
  %50 = load i8, i8* %empty_extent, align 1, !dbg !8169, !tbaa !2742
  %tobool62 = trunc i8 %50 to i1, !dbg !8169
  br i1 %tobool62, label %if.then63, label %if.end68, !dbg !8171

if.then63:                                        ; preds = %if.else61
  %51 = load i64, i64* %src_total_size.addr, align 8, !dbg !8172, !tbaa !3288
  %52 = load i64, i64* %dest_pos, align 8, !dbg !8172, !tbaa !3288
  %sub64 = sub nsw i64 %51, %52, !dbg !8172
  %53 = load i64, i64* %ext_hole_size, align 8, !dbg !8172, !tbaa !3288
  %cmp65 = icmp slt i64 %sub64, %53, !dbg !8172
  br i1 %cmp65, label %cond.true, label %cond.false, !dbg !8172

cond.true:                                        ; preds = %if.then63
  %54 = load i64, i64* %src_total_size.addr, align 8, !dbg !8172, !tbaa !3288
  %55 = load i64, i64* %dest_pos, align 8, !dbg !8172, !tbaa !3288
  %sub67 = sub nsw i64 %54, %55, !dbg !8172
  br label %cond.end, !dbg !8172

cond.false:                                       ; preds = %if.then63
  %56 = load i64, i64* %ext_hole_size, align 8, !dbg !8172, !tbaa !3288
  br label %cond.end, !dbg !8172

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub67, %cond.true ], [ %56, %cond.false ], !dbg !8172
  store i64 %cond, i64* %nzeros, align 8, !dbg !8173, !tbaa !3288
  br label %if.end68, !dbg !8174

if.end68:                                         ; preds = %cond.end, %if.else61
  %57 = load i32, i32* %dest_fd.addr, align 4, !dbg !8175, !tbaa !2635
  %58 = load i64, i64* %nzeros, align 8, !dbg !8177, !tbaa !3288
  %call69 = call zeroext i1 @write_zeros(i32 %57, i64 %58), !dbg !8178
  br i1 %call69, label %if.end74, label %if.then70, !dbg !8179

if.then70:                                        ; preds = %if.end68
  %call71 = call i32* @__errno_location() #16, !dbg !8180
  %59 = load i32, i32* %call71, align 4, !dbg !8180, !tbaa !2635, !ctir !7
  %call72 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.70.159, i64 0, i64 0)) #9, !dbg !8182
  %60 = load i8*, i8** %dst_name.addr, align 8, !dbg !8183, !tbaa !2648
  %call73 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %60), !dbg !8183
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %59, i8* %call72, i8* %call73), !dbg !8184
  br label %fail, !dbg !8185

if.end74:                                         ; preds = %if.end68
  %61 = load i64, i64* %src_total_size.addr, align 8, !dbg !8186, !tbaa !3288
  %62 = load i64, i64* %ext_start, align 8, !dbg !8186, !tbaa !3288
  %cmp75 = icmp slt i64 %61, %62, !dbg !8186
  br i1 %cmp75, label %cond.true77, label %cond.false78, !dbg !8186

cond.true77:                                      ; preds = %if.end74
  %63 = load i64, i64* %src_total_size.addr, align 8, !dbg !8186, !tbaa !3288
  br label %cond.end79, !dbg !8186

cond.false78:                                     ; preds = %if.end74
  %64 = load i64, i64* %ext_start, align 8, !dbg !8186, !tbaa !3288
  br label %cond.end79, !dbg !8186

cond.end79:                                       ; preds = %cond.false78, %cond.true77
  %cond80 = phi i64 [ %63, %cond.true77 ], [ %64, %cond.false78 ], !dbg !8186
  store i64 %cond80, i64* %dest_pos, align 8, !dbg !8187, !tbaa !3288
  br label %if.end81

if.end81:                                         ; preds = %cond.end79, %if.end60
  br label %if.end82, !dbg !8188

if.end82:                                         ; preds = %if.end81, %if.end34
  %65 = load i64, i64* %ext_start, align 8, !dbg !8189, !tbaa !3288
  store i64 %65, i64* %last_ext_start, align 8, !dbg !8190, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %n_read, metadata !8191, metadata !DIExpression()), !dbg !8194
  store i8 0, i8* %empty_extent, align 1, !dbg !8195, !tbaa !2742
  %66 = load i64, i64* %ext_len, align 8, !dbg !8196, !tbaa !3288
  store i64 %66, i64* %last_ext_len, align 8, !dbg !8197, !tbaa !3288
  call void @llvm.dbg.declare(metadata i8* %read_hole, metadata !8198, metadata !DIExpression()), !dbg !8199
  %67 = load i32, i32* %src_fd.addr, align 4, !dbg !8200, !tbaa !2635
  %68 = load i32, i32* %dest_fd.addr, align 4, !dbg !8202, !tbaa !2635
  %69 = load i8*, i8** %buf.addr, align 8, !dbg !8203, !tbaa !2648
  %70 = load i64, i64* %buf_size.addr, align 8, !dbg !8204, !tbaa !3288
  %71 = load i32, i32* %sparse_mode.addr, align 4, !dbg !8205, !tbaa !3295
  %cmp83 = icmp eq i32 %71, 3, !dbg !8206
  br i1 %cmp83, label %cond.true85, label %cond.false86, !dbg !8205

cond.true85:                                      ; preds = %if.end82
  %72 = load i64, i64* %hole_size.addr, align 8, !dbg !8207, !tbaa !3288
  br label %cond.end87, !dbg !8205

cond.false86:                                     ; preds = %if.end82
  br label %cond.end87, !dbg !8205

cond.end87:                                       ; preds = %cond.false86, %cond.true85
  %cond88 = phi i64 [ %72, %cond.true85 ], [ 0, %cond.false86 ], !dbg !8205
  %73 = load i8*, i8** %src_name.addr, align 8, !dbg !8208, !tbaa !2648
  %74 = load i8*, i8** %dst_name.addr, align 8, !dbg !8209, !tbaa !2648
  %75 = load i64, i64* %ext_len, align 8, !dbg !8210, !tbaa !3288
  %call89 = call zeroext i1 @sparse_copy(i32 %67, i32 %68, i8* %69, i64 %70, i64 %cond88, i1 zeroext true, i8* %73, i8* %74, i64 %75, i64* %n_read, i8* %read_hole), !dbg !8211
  br i1 %call89, label %if.end91, label %if.then90, !dbg !8212

if.then90:                                        ; preds = %cond.end87
  br label %fail, !dbg !8213

if.end91:                                         ; preds = %cond.end87
  %76 = load i64, i64* %ext_start, align 8, !dbg !8214, !tbaa !3288
  %77 = load i64, i64* %n_read, align 8, !dbg !8215, !tbaa !3288
  %add92 = add nsw i64 %76, %77, !dbg !8216
  store i64 %add92, i64* %dest_pos, align 8, !dbg !8217, !tbaa !3288
  %78 = load i64, i64* %n_read, align 8, !dbg !8218, !tbaa !3288
  %tobool93 = icmp ne i64 %78, 0, !dbg !8218
  br i1 %tobool93, label %if.then94, label %if.end97, !dbg !8220

if.then94:                                        ; preds = %if.end91
  %79 = load i8, i8* %read_hole, align 1, !dbg !8221, !tbaa !2742
  %tobool95 = trunc i8 %79 to i1, !dbg !8221
  %frombool96 = zext i1 %tobool95 to i8, !dbg !8222
  store i8 %frombool96, i8* %wrote_hole_at_eof, align 1, !dbg !8222, !tbaa !2742
  br label %if.end97, !dbg !8223

if.end97:                                         ; preds = %if.then94, %if.end91
  %80 = load i64, i64* %dest_pos, align 8, !dbg !8224, !tbaa !3288
  %81 = load i64, i64* %src_total_size.addr, align 8, !dbg !8226, !tbaa !3288
  %cmp98 = icmp eq i64 %80, %81, !dbg !8227
  br i1 %cmp98, label %if.then100, label %if.end102, !dbg !8228

if.then100:                                       ; preds = %if.end97
  %hit_final_extent101 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 5, !dbg !8229, !ctir !529
  store i8 1, i8* %hit_final_extent101, align 1, !dbg !8231, !tbaa !8026, !ctir !142
  br label %for.end, !dbg !8232

if.end102:                                        ; preds = %if.end97
  br label %for.inc, !dbg !8233

for.inc:                                          ; preds = %if.end102
  %82 = load i32, i32* %i, align 4, !dbg !8234, !tbaa !2635
  %inc = add i32 %82, 1, !dbg !8234
  store i32 %inc, i32* %i, align 4, !dbg !8234, !tbaa !2635
  br label %for.cond, !dbg !8235, !llvm.loop !8236

for.end:                                          ; preds = %if.then100, %lor.end
  call void @extent_scan_free(%struct.extent_scan* %scan), !dbg !8238
  br label %do.cond, !dbg !8239

do.cond:                                          ; preds = %for.end
  %hit_final_extent103 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 5, !dbg !8240, !ctir !529
  %83 = load i8, i8* %hit_final_extent103, align 1, !dbg !8240, !tbaa !8026
  %tobool104 = trunc i8 %83 to i1, !dbg !8240, !ctir !142
  %lnot = xor i1 %tobool104, true, !dbg !8241
  br i1 %lnot, label %do.body, label %do.end, !dbg !8239, !llvm.loop !8242

do.end:                                           ; preds = %do.cond, %if.then2
  %84 = load i64, i64* %dest_pos, align 8, !dbg !8244, !tbaa !3288
  %85 = load i64, i64* %src_total_size.addr, align 8, !dbg !8246, !tbaa !3288
  %cmp105 = icmp slt i64 %84, %85, !dbg !8247
  br i1 %cmp105, label %land.lhs.true110, label %lor.lhs.false107, !dbg !8248

lor.lhs.false107:                                 ; preds = %do.end
  %86 = load i8, i8* %wrote_hole_at_eof, align 1, !dbg !8249, !tbaa !2742
  %tobool108 = trunc i8 %86 to i1, !dbg !8249
  br i1 %tobool108, label %land.lhs.true110, label %if.end123, !dbg !8250

land.lhs.true110:                                 ; preds = %lor.lhs.false107, %do.end
  %87 = load i32, i32* %sparse_mode.addr, align 4, !dbg !8251, !tbaa !3295
  %cmp111 = icmp ne i32 %87, 1, !dbg !8252
  br i1 %cmp111, label %cond.true113, label %cond.false116, !dbg !8253

cond.true113:                                     ; preds = %land.lhs.true110
  %88 = load i32, i32* %dest_fd.addr, align 4, !dbg !8254, !tbaa !2635
  %89 = load i64, i64* %src_total_size.addr, align 8, !dbg !8255, !tbaa !3288
  %call114 = call i32 @ftruncate(i32 %88, i64 %89) #9, !dbg !8256
  %tobool115 = icmp ne i32 %call114, 0, !dbg !8256
  br i1 %tobool115, label %if.then119, label %if.end123, !dbg !8251

cond.false116:                                    ; preds = %land.lhs.true110
  %90 = load i32, i32* %dest_fd.addr, align 4, !dbg !8257, !tbaa !2635
  %91 = load i64, i64* %src_total_size.addr, align 8, !dbg !8258, !tbaa !3288
  %92 = load i64, i64* %dest_pos, align 8, !dbg !8259, !tbaa !3288
  %sub117 = sub nsw i64 %91, %92, !dbg !8260
  %call118 = call zeroext i1 @write_zeros(i32 %90, i64 %sub117), !dbg !8261
  br i1 %call118, label %if.end123, label %if.then119, !dbg !8253

if.then119:                                       ; preds = %cond.false116, %cond.true113
  %call120 = call i32* @__errno_location() #16, !dbg !8262
  %93 = load i32, i32* %call120, align 4, !dbg !8262, !tbaa !2635, !ctir !7
  %call121 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.66.151, i64 0, i64 0)) #9, !dbg !8264
  %94 = load i8*, i8** %dst_name.addr, align 8, !dbg !8265, !tbaa !2648
  %call122 = call i8* @quotearg_style(i32 4, i8* %94), !dbg !8265
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %93, i8* %call121, i8* %call122), !dbg !8266
  store i1 false, i1* %retval, align 1, !dbg !8267
  br label %return, !dbg !8267

if.end123:                                        ; preds = %cond.false116, %cond.true113, %lor.lhs.false107
  %95 = load i32, i32* %sparse_mode.addr, align 4, !dbg !8268, !tbaa !3295
  %cmp124 = icmp eq i32 %95, 3, !dbg !8270
  br i1 %cmp124, label %land.lhs.true126, label %if.end138, !dbg !8271

land.lhs.true126:                                 ; preds = %if.end123
  %96 = load i64, i64* %dest_pos, align 8, !dbg !8272, !tbaa !3288
  %97 = load i64, i64* %src_total_size.addr, align 8, !dbg !8273, !tbaa !3288
  %cmp127 = icmp slt i64 %96, %97, !dbg !8274
  br i1 %cmp127, label %land.lhs.true129, label %if.end138, !dbg !8275

land.lhs.true129:                                 ; preds = %land.lhs.true126
  %98 = load i32, i32* %dest_fd.addr, align 4, !dbg !8276, !tbaa !2635
  %99 = load i64, i64* %dest_pos, align 8, !dbg !8277, !tbaa !3288
  %100 = load i64, i64* %src_total_size.addr, align 8, !dbg !8278, !tbaa !3288
  %101 = load i64, i64* %dest_pos, align 8, !dbg !8279, !tbaa !3288
  %sub130 = sub nsw i64 %100, %101, !dbg !8280
  %call131 = call i32 @punch_hole(i32 %98, i64 %99, i64 %sub130), !dbg !8281
  %cmp132 = icmp slt i32 %call131, 0, !dbg !8282
  br i1 %cmp132, label %if.then134, label %if.end138, !dbg !8283

if.then134:                                       ; preds = %land.lhs.true129
  %call135 = call i32* @__errno_location() #16, !dbg !8284
  %102 = load i32, i32* %call135, align 4, !dbg !8284, !tbaa !2635, !ctir !7
  %call136 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.71.157, i64 0, i64 0)) #9, !dbg !8286
  %103 = load i8*, i8** %dst_name.addr, align 8, !dbg !8287, !tbaa !2648
  %call137 = call i8* @quotearg_style(i32 4, i8* %103), !dbg !8287
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %102, i8* %call136, i8* %call137), !dbg !8288
  store i1 false, i1* %retval, align 1, !dbg !8289
  br label %return, !dbg !8289

if.end138:                                        ; preds = %land.lhs.true129, %land.lhs.true126, %if.end123
  store i1 true, i1* %retval, align 1, !dbg !8290
  br label %return, !dbg !8290

return:                                           ; preds = %if.end138, %if.then134, %if.then119, %fail, %if.end5, %if.then4
  %104 = load i1, i1* %retval, align 1, !dbg !8291
  ret i1 %104, !dbg !8291
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @sparse_copy(i32 %src_fd, i32 %dest_fd, i8* %buf, i64 %buf_size, i64 %hole_size, i1 zeroext %punch_holes, i8* %src_name, i8* %dst_name, i64 %max_n_read, i64* %total_n_read, i8* %last_write_made_hole) #4 !dbg !8292 !ctir !544 {
entry:
  %retval = alloca i1, align 1
  %src_fd.addr = alloca i32, align 4
  %dest_fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %buf_size.addr = alloca i64, align 8
  %hole_size.addr = alloca i64, align 8
  %punch_holes.addr = alloca i8, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %max_n_read.addr = alloca i64, align 8
  %total_n_read.addr = alloca i64*, align 8
  %last_write_made_hole.addr = alloca i8*, align 8
  %make_hole = alloca i8, align 1, !ctir !142
  %psize = alloca i64, align 8, !ctir !352
  %n_read = alloca i64, align 8, !ctir !550
  %csize = alloca i64, align 8, !ctir !55
  %cbuf = alloca i8*, align 8, !ctir !9
  %pbuf = alloca i8*, align 8, !ctir !9
  %prev_hole = alloca i8, align 1, !ctir !142
  %transition = alloca i8, align 1, !ctir !142
  %last_chunk = alloca i8, align 1, !ctir !142
  store i32 %src_fd, i32* %src_fd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !8293, metadata !DIExpression()), !dbg !8294
  store i32 %dest_fd, i32* %dest_fd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %dest_fd.addr, metadata !8295, metadata !DIExpression()), !dbg !8296
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8297, metadata !DIExpression()), !dbg !8298
  store i64 %buf_size, i64* %buf_size.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %buf_size.addr, metadata !8299, metadata !DIExpression()), !dbg !8300
  store i64 %hole_size, i64* %hole_size.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %hole_size.addr, metadata !8301, metadata !DIExpression()), !dbg !8302
  %frombool = zext i1 %punch_holes to i8
  store i8 %frombool, i8* %punch_holes.addr, align 1, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %punch_holes.addr, metadata !8303, metadata !DIExpression()), !dbg !8304
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !8305, metadata !DIExpression()), !dbg !8306
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !8307, metadata !DIExpression()), !dbg !8308
  store i64 %max_n_read, i64* %max_n_read.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %max_n_read.addr, metadata !8309, metadata !DIExpression()), !dbg !8310
  store i64* %total_n_read, i64** %total_n_read.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i64** %total_n_read.addr, metadata !8311, metadata !DIExpression()), !dbg !8312
  store i8* %last_write_made_hole, i8** %last_write_made_hole.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %last_write_made_hole.addr, metadata !8313, metadata !DIExpression()), !dbg !8314
  %0 = load i8*, i8** %last_write_made_hole.addr, align 8, !dbg !8315, !tbaa !2648
  store i8 0, i8* %0, align 1, !dbg !8316, !tbaa !2742, !ctir !142
  %1 = load i64*, i64** %total_n_read.addr, align 8, !dbg !8317, !tbaa !2648
  store i64 0, i64* %1, align 8, !dbg !8318, !tbaa !3288, !ctir !352
  call void @llvm.dbg.declare(metadata i8* %make_hole, metadata !8319, metadata !DIExpression()), !dbg !8320
  store i8 0, i8* %make_hole, align 1, !dbg !8320, !tbaa !2742
  call void @llvm.dbg.declare(metadata i64* %psize, metadata !8321, metadata !DIExpression()), !dbg !8322
  store i64 0, i64* %psize, align 8, !dbg !8322, !tbaa !3288
  br label %while.cond, !dbg !8323

while.cond:                                       ; preds = %while.end, %if.then4, %entry
  %2 = load i64, i64* %max_n_read.addr, align 8, !dbg !8324, !tbaa !3288
  %tobool = icmp ne i64 %2, 0, !dbg !8323
  br i1 %tobool, label %while.body, label %while.end94, !dbg !8323

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %n_read, metadata !8325, metadata !DIExpression()), !dbg !8327
  %3 = load i32, i32* %src_fd.addr, align 4, !dbg !8328, !tbaa !2635
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !8329, !tbaa !2648
  %5 = load i64, i64* %max_n_read.addr, align 8, !dbg !8330, !tbaa !3288
  %6 = load i64, i64* %buf_size.addr, align 8, !dbg !8330, !tbaa !3288
  %cmp = icmp ult i64 %5, %6, !dbg !8330
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8330

cond.true:                                        ; preds = %while.body
  %7 = load i64, i64* %max_n_read.addr, align 8, !dbg !8330, !tbaa !3288
  br label %cond.end, !dbg !8330

cond.false:                                       ; preds = %while.body
  %8 = load i64, i64* %buf_size.addr, align 8, !dbg !8330, !tbaa !3288
  br label %cond.end, !dbg !8330

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %7, %cond.true ], [ %8, %cond.false ], !dbg !8330
  %call = call i64 @read(i32 %3, i8* %4, i64 %cond), !dbg !8331
  store i64 %call, i64* %n_read, align 8, !dbg !8327, !tbaa !3288
  %9 = load i64, i64* %n_read, align 8, !dbg !8332, !tbaa !3288
  %cmp1 = icmp slt i64 %9, 0, !dbg !8334
  br i1 %cmp1, label %if.then, label %if.end8, !dbg !8335

if.then:                                          ; preds = %cond.end
  %call2 = call i32* @__errno_location() #16, !dbg !8336
  %10 = load i32, i32* %call2, align 4, !dbg !8336, !tbaa !2635, !ctir !7
  %cmp3 = icmp eq i32 %10, 4, !dbg !8339
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !8340

if.then4:                                         ; preds = %if.then
  br label %while.cond, !dbg !8341, !llvm.loop !8342

if.end:                                           ; preds = %if.then
  %call5 = call i32* @__errno_location() #16, !dbg !8344
  %11 = load i32, i32* %call5, align 4, !dbg !8344, !tbaa !2635, !ctir !7
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.72.153, i64 0, i64 0)) #9, !dbg !8345
  %12 = load i8*, i8** %src_name.addr, align 8, !dbg !8346, !tbaa !2648
  %call7 = call i8* @quotearg_style(i32 4, i8* %12), !dbg !8346
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %11, i8* %call6, i8* %call7), !dbg !8347
  store i1 false, i1* %retval, align 1, !dbg !8348
  br label %return, !dbg !8348

if.end8:                                          ; preds = %cond.end
  %13 = load i64, i64* %n_read, align 8, !dbg !8349, !tbaa !3288
  %cmp9 = icmp eq i64 %13, 0, !dbg !8351
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !8352

if.then10:                                        ; preds = %if.end8
  br label %while.end94, !dbg !8353

if.end11:                                         ; preds = %if.end8
  %14 = load i64, i64* %n_read, align 8, !dbg !8354, !tbaa !3288
  %15 = load i64, i64* %max_n_read.addr, align 8, !dbg !8355, !tbaa !3288
  %sub = sub i64 %15, %14, !dbg !8355
  store i64 %sub, i64* %max_n_read.addr, align 8, !dbg !8355, !tbaa !3288
  %16 = load i64, i64* %n_read, align 8, !dbg !8356, !tbaa !3288
  %17 = load i64*, i64** %total_n_read.addr, align 8, !dbg !8357, !tbaa !2648
  %18 = load i64, i64* %17, align 8, !dbg !8358, !tbaa !3288, !ctir !352
  %add = add nsw i64 %18, %16, !dbg !8358
  store i64 %add, i64* %17, align 8, !dbg !8358, !tbaa !3288, !ctir !352
  call void @llvm.dbg.declare(metadata i64* %csize, metadata !8359, metadata !DIExpression()), !dbg !8360
  %19 = load i64, i64* %hole_size.addr, align 8, !dbg !8361, !tbaa !3288
  %tobool12 = icmp ne i64 %19, 0, !dbg !8361
  br i1 %tobool12, label %cond.true13, label %cond.false14, !dbg !8361

cond.true13:                                      ; preds = %if.end11
  %20 = load i64, i64* %hole_size.addr, align 8, !dbg !8362, !tbaa !3288
  br label %cond.end15, !dbg !8361

cond.false14:                                     ; preds = %if.end11
  %21 = load i64, i64* %buf_size.addr, align 8, !dbg !8363, !tbaa !3288
  br label %cond.end15, !dbg !8361

cond.end15:                                       ; preds = %cond.false14, %cond.true13
  %cond16 = phi i64 [ %20, %cond.true13 ], [ %21, %cond.false14 ], !dbg !8361
  store i64 %cond16, i64* %csize, align 8, !dbg !8360, !tbaa !3288
  call void @llvm.dbg.declare(metadata i8** %cbuf, metadata !8364, metadata !DIExpression()), !dbg !8365
  %22 = load i8*, i8** %buf.addr, align 8, !dbg !8366, !tbaa !2648
  store i8* %22, i8** %cbuf, align 8, !dbg !8365, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %pbuf, metadata !8367, metadata !DIExpression()), !dbg !8368
  %23 = load i8*, i8** %buf.addr, align 8, !dbg !8369, !tbaa !2648
  store i8* %23, i8** %pbuf, align 8, !dbg !8368, !tbaa !2648
  br label %while.cond17, !dbg !8370

while.cond17:                                     ; preds = %if.end90, %cond.end15
  %24 = load i64, i64* %n_read, align 8, !dbg !8371, !tbaa !3288
  %tobool18 = icmp ne i64 %24, 0, !dbg !8370
  br i1 %tobool18, label %while.body19, label %while.end, !dbg !8370

while.body19:                                     ; preds = %while.cond17
  call void @llvm.dbg.declare(metadata i8* %prev_hole, metadata !8372, metadata !DIExpression()), !dbg !8374
  %25 = load i8, i8* %make_hole, align 1, !dbg !8375, !tbaa !2742
  %tobool20 = trunc i8 %25 to i1, !dbg !8375
  %frombool21 = zext i1 %tobool20 to i8, !dbg !8374
  store i8 %frombool21, i8* %prev_hole, align 1, !dbg !8374, !tbaa !2742
  %26 = load i64, i64* %csize, align 8, !dbg !8376, !tbaa !3288
  %27 = load i64, i64* %n_read, align 8, !dbg !8376, !tbaa !3288
  %cmp22 = icmp ult i64 %26, %27, !dbg !8376
  br i1 %cmp22, label %cond.true23, label %cond.false24, !dbg !8376

cond.true23:                                      ; preds = %while.body19
  %28 = load i64, i64* %csize, align 8, !dbg !8376, !tbaa !3288
  br label %cond.end25, !dbg !8376

cond.false24:                                     ; preds = %while.body19
  %29 = load i64, i64* %n_read, align 8, !dbg !8376, !tbaa !3288
  br label %cond.end25, !dbg !8376

cond.end25:                                       ; preds = %cond.false24, %cond.true23
  %cond26 = phi i64 [ %28, %cond.true23 ], [ %29, %cond.false24 ], !dbg !8376
  store i64 %cond26, i64* %csize, align 8, !dbg !8377, !tbaa !3288
  %30 = load i64, i64* %hole_size.addr, align 8, !dbg !8378, !tbaa !3288
  %tobool27 = icmp ne i64 %30, 0, !dbg !8378
  br i1 %tobool27, label %land.lhs.true, label %if.end32, !dbg !8380

land.lhs.true:                                    ; preds = %cond.end25
  %31 = load i64, i64* %csize, align 8, !dbg !8381, !tbaa !3288
  %tobool28 = icmp ne i64 %31, 0, !dbg !8381
  br i1 %tobool28, label %if.then29, label %if.end32, !dbg !8382

if.then29:                                        ; preds = %land.lhs.true
  %32 = load i8*, i8** %cbuf, align 8, !dbg !8383, !tbaa !2648
  %33 = load i64, i64* %csize, align 8, !dbg !8384, !tbaa !3288
  %call30 = call zeroext i1 @is_nul(i8* %32, i64 %33) #14, !dbg !8385
  %frombool31 = zext i1 %call30 to i8, !dbg !8386
  store i8 %frombool31, i8* %make_hole, align 1, !dbg !8386, !tbaa !2742
  br label %if.end32, !dbg !8387

if.end32:                                         ; preds = %if.then29, %land.lhs.true, %cond.end25
  call void @llvm.dbg.declare(metadata i8* %transition, metadata !8388, metadata !DIExpression()), !dbg !8389
  %34 = load i8, i8* %make_hole, align 1, !dbg !8390, !tbaa !2742
  %tobool33 = trunc i8 %34 to i1, !dbg !8390
  %conv = zext i1 %tobool33 to i32, !dbg !8390
  %35 = load i8, i8* %prev_hole, align 1, !dbg !8391, !tbaa !2742
  %tobool34 = trunc i8 %35 to i1, !dbg !8391
  %conv35 = zext i1 %tobool34 to i32, !dbg !8391
  %cmp36 = icmp ne i32 %conv, %conv35, !dbg !8392
  br i1 %cmp36, label %land.rhs, label %land.end, !dbg !8393

land.rhs:                                         ; preds = %if.end32
  %36 = load i64, i64* %psize, align 8, !dbg !8394, !tbaa !3288
  %tobool38 = icmp ne i64 %36, 0, !dbg !8393
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end32
  %37 = phi i1 [ false, %if.end32 ], [ %tobool38, %land.rhs ], !dbg !8395
  %frombool39 = zext i1 %37 to i8, !dbg !8389
  store i8 %frombool39, i8* %transition, align 1, !dbg !8389, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %last_chunk, metadata !8396, metadata !DIExpression()), !dbg !8397
  %38 = load i64, i64* %n_read, align 8, !dbg !8398, !tbaa !3288
  %39 = load i64, i64* %csize, align 8, !dbg !8399, !tbaa !3288
  %cmp40 = icmp eq i64 %38, %39, !dbg !8400
  br i1 %cmp40, label %land.lhs.true42, label %lor.rhs, !dbg !8401

land.lhs.true42:                                  ; preds = %land.end
  %40 = load i8, i8* %make_hole, align 1, !dbg !8402, !tbaa !2742
  %tobool43 = trunc i8 %40 to i1, !dbg !8402
  br i1 %tobool43, label %lor.rhs, label %lor.end, !dbg !8403

lor.rhs:                                          ; preds = %land.lhs.true42, %land.end
  %41 = load i64, i64* %csize, align 8, !dbg !8404, !tbaa !3288
  %tobool44 = icmp ne i64 %41, 0, !dbg !8405
  %lnot = xor i1 %tobool44, true, !dbg !8405
  br label %lor.end, !dbg !8403

lor.end:                                          ; preds = %lor.rhs, %land.lhs.true42
  %42 = phi i1 [ true, %land.lhs.true42 ], [ %lnot, %lor.rhs ]
  %frombool45 = zext i1 %42 to i8, !dbg !8397
  store i8 %frombool45, i8* %last_chunk, align 1, !dbg !8397, !tbaa !2742
  %43 = load i8, i8* %transition, align 1, !dbg !8406, !tbaa !2742
  %tobool46 = trunc i8 %43 to i1, !dbg !8406
  br i1 %tobool46, label %if.then50, label %lor.lhs.false, !dbg !8408

lor.lhs.false:                                    ; preds = %lor.end
  %44 = load i8, i8* %last_chunk, align 1, !dbg !8409, !tbaa !2742
  %tobool48 = trunc i8 %44 to i1, !dbg !8409
  br i1 %tobool48, label %if.then50, label %if.else80, !dbg !8410

if.then50:                                        ; preds = %lor.lhs.false, %lor.end
  %45 = load i8, i8* %transition, align 1, !dbg !8411, !tbaa !2742
  %tobool51 = trunc i8 %45 to i1, !dbg !8411
  br i1 %tobool51, label %if.end54, label %if.then52, !dbg !8414

if.then52:                                        ; preds = %if.then50
  %46 = load i64, i64* %csize, align 8, !dbg !8415, !tbaa !3288
  %47 = load i64, i64* %psize, align 8, !dbg !8416, !tbaa !3288
  %add53 = add i64 %47, %46, !dbg !8416
  store i64 %add53, i64* %psize, align 8, !dbg !8416, !tbaa !3288
  br label %if.end54, !dbg !8417

if.end54:                                         ; preds = %if.then52, %if.then50
  %48 = load i8, i8* %prev_hole, align 1, !dbg !8418, !tbaa !2742
  %tobool55 = trunc i8 %48 to i1, !dbg !8418
  br i1 %tobool55, label %if.else, label %if.then56, !dbg !8420

if.then56:                                        ; preds = %if.end54
  %49 = load i32, i32* %dest_fd.addr, align 4, !dbg !8421, !tbaa !2635
  %50 = load i8*, i8** %pbuf, align 8, !dbg !8424, !tbaa !2648
  %51 = load i64, i64* %psize, align 8, !dbg !8425, !tbaa !3288
  %call57 = call i64 @full_write(i32 %49, i8* %50, i64 %51), !dbg !8426
  %52 = load i64, i64* %psize, align 8, !dbg !8427, !tbaa !3288
  %cmp58 = icmp ne i64 %call57, %52, !dbg !8428
  br i1 %cmp58, label %if.then60, label %if.end64, !dbg !8429

if.then60:                                        ; preds = %if.then56
  %call61 = call i32* @__errno_location() #16, !dbg !8430
  %53 = load i32, i32* %call61, align 4, !dbg !8430, !tbaa !2635, !ctir !7
  %call62 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.73.154, i64 0, i64 0)) #9, !dbg !8432
  %54 = load i8*, i8** %dst_name.addr, align 8, !dbg !8433, !tbaa !2648
  %call63 = call i8* @quotearg_style(i32 4, i8* %54), !dbg !8433
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %53, i8* %call62, i8* %call63), !dbg !8434
  store i1 false, i1* %retval, align 1, !dbg !8435
  br label %return, !dbg !8435

if.end64:                                         ; preds = %if.then56
  br label %if.end69, !dbg !8436

if.else:                                          ; preds = %if.end54
  %55 = load i32, i32* %dest_fd.addr, align 4, !dbg !8437, !tbaa !2635
  %56 = load i8*, i8** %dst_name.addr, align 8, !dbg !8440, !tbaa !2648
  %57 = load i8, i8* %punch_holes.addr, align 1, !dbg !8441, !tbaa !2742
  %tobool65 = trunc i8 %57 to i1, !dbg !8441
  %58 = load i64, i64* %psize, align 8, !dbg !8442, !tbaa !3288
  %call66 = call zeroext i1 @create_hole(i32 %55, i8* %56, i1 zeroext %tobool65, i64 %58), !dbg !8443
  br i1 %call66, label %if.end68, label %if.then67, !dbg !8444

if.then67:                                        ; preds = %if.else
  store i1 false, i1* %retval, align 1, !dbg !8445
  br label %return, !dbg !8445

if.end68:                                         ; preds = %if.else
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.end64
  %59 = load i8*, i8** %cbuf, align 8, !dbg !8446, !tbaa !2648
  store i8* %59, i8** %pbuf, align 8, !dbg !8447, !tbaa !2648
  %60 = load i64, i64* %csize, align 8, !dbg !8448, !tbaa !3288
  store i64 %60, i64* %psize, align 8, !dbg !8449, !tbaa !3288
  %61 = load i8, i8* %last_chunk, align 1, !dbg !8450, !tbaa !2742
  %tobool70 = trunc i8 %61 to i1, !dbg !8450
  br i1 %tobool70, label %if.then71, label %if.end79, !dbg !8452

if.then71:                                        ; preds = %if.end69
  %62 = load i64, i64* %csize, align 8, !dbg !8453, !tbaa !3288
  %tobool72 = icmp ne i64 %62, 0, !dbg !8453
  br i1 %tobool72, label %if.end74, label %if.then73, !dbg !8456

if.then73:                                        ; preds = %if.then71
  store i64 0, i64* %n_read, align 8, !dbg !8457, !tbaa !3288
  br label %if.end74, !dbg !8458

if.end74:                                         ; preds = %if.then73, %if.then71
  %63 = load i8, i8* %transition, align 1, !dbg !8459, !tbaa !2742
  %tobool75 = trunc i8 %63 to i1, !dbg !8459
  br i1 %tobool75, label %if.then76, label %if.else77, !dbg !8461

if.then76:                                        ; preds = %if.end74
  store i64 0, i64* %csize, align 8, !dbg !8462, !tbaa !3288
  br label %if.end78, !dbg !8463

if.else77:                                        ; preds = %if.end74
  store i64 0, i64* %psize, align 8, !dbg !8464, !tbaa !3288
  br label %if.end78

if.end78:                                         ; preds = %if.else77, %if.then76
  br label %if.end79, !dbg !8465

if.end79:                                         ; preds = %if.end78, %if.end69
  br label %if.end90, !dbg !8466

if.else80:                                        ; preds = %lor.lhs.false
  %64 = load i64, i64* %psize, align 8, !dbg !8467, !tbaa !3288
  %65 = load i64, i64* %csize, align 8, !dbg !8470, !tbaa !3288
  %sub81 = sub i64 9223372036854775807, %65, !dbg !8471
  %cmp82 = icmp ule i64 %64, %sub81, !dbg !8472
  br i1 %cmp82, label %if.then84, label %if.else86, !dbg !8473

if.then84:                                        ; preds = %if.else80
  %66 = load i64, i64* %csize, align 8, !dbg !8474, !tbaa !3288
  %67 = load i64, i64* %psize, align 8, !dbg !8475, !tbaa !3288
  %add85 = add i64 %67, %66, !dbg !8475
  store i64 %add85, i64* %psize, align 8, !dbg !8475, !tbaa !3288
  br label %if.end89, !dbg !8476

if.else86:                                        ; preds = %if.else80
  %call87 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.74.155, i64 0, i64 0)) #9, !dbg !8477
  %68 = load i8*, i8** %src_name.addr, align 8, !dbg !8479, !tbaa !2648
  %call88 = call i8* @quotearg_style(i32 4, i8* %68), !dbg !8479
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call87, i8* %call88), !dbg !8480
  store i1 false, i1* %retval, align 1, !dbg !8481
  br label %return, !dbg !8481

if.end89:                                         ; preds = %if.then84
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %if.end79
  %69 = load i64, i64* %csize, align 8, !dbg !8482, !tbaa !3288
  %70 = load i64, i64* %n_read, align 8, !dbg !8483, !tbaa !3288
  %sub91 = sub i64 %70, %69, !dbg !8483
  store i64 %sub91, i64* %n_read, align 8, !dbg !8483, !tbaa !3288
  %71 = load i64, i64* %csize, align 8, !dbg !8484, !tbaa !3288
  %72 = load i8*, i8** %cbuf, align 8, !dbg !8485, !tbaa !2648
  %add.ptr = getelementptr inbounds i8, i8* %72, i64 %71, !dbg !8485
  store i8* %add.ptr, i8** %cbuf, align 8, !dbg !8485, !tbaa !2648
  br label %while.cond17, !dbg !8370, !llvm.loop !8486

while.end:                                        ; preds = %while.cond17
  %73 = load i8, i8* %make_hole, align 1, !dbg !8488, !tbaa !2742
  %tobool92 = trunc i8 %73 to i1, !dbg !8488
  %74 = load i8*, i8** %last_write_made_hole.addr, align 8, !dbg !8489, !tbaa !2648
  %frombool93 = zext i1 %tobool92 to i8, !dbg !8490
  store i8 %frombool93, i8* %74, align 1, !dbg !8490, !tbaa !2742, !ctir !142
  br label %while.cond, !dbg !8323, !llvm.loop !8342

while.end94:                                      ; preds = %if.then10, %while.cond
  %75 = load i8, i8* %make_hole, align 1, !dbg !8491, !tbaa !2742
  %tobool95 = trunc i8 %75 to i1, !dbg !8491
  br i1 %tobool95, label %land.lhs.true97, label %if.else101, !dbg !8493

land.lhs.true97:                                  ; preds = %while.end94
  %76 = load i32, i32* %dest_fd.addr, align 4, !dbg !8494, !tbaa !2635
  %77 = load i8*, i8** %dst_name.addr, align 8, !dbg !8495, !tbaa !2648
  %78 = load i8, i8* %punch_holes.addr, align 1, !dbg !8496, !tbaa !2742
  %tobool98 = trunc i8 %78 to i1, !dbg !8496
  %79 = load i64, i64* %psize, align 8, !dbg !8497, !tbaa !3288
  %call99 = call zeroext i1 @create_hole(i32 %76, i8* %77, i1 zeroext %tobool98, i64 %79), !dbg !8498
  br i1 %call99, label %if.else101, label %if.then100, !dbg !8499

if.then100:                                       ; preds = %land.lhs.true97
  store i1 false, i1* %retval, align 1, !dbg !8500
  br label %return, !dbg !8500

if.else101:                                       ; preds = %land.lhs.true97, %while.end94
  store i1 true, i1* %retval, align 1, !dbg !8501
  br label %return, !dbg !8501

return:                                           ; preds = %if.else101, %if.then100, %if.else86, %if.then67, %if.then60, %if.end
  %80 = load i1, i1* %retval, align 1, !dbg !8502
  ret i1 %80, !dbg !8502
}

; Function Attrs: nounwind
declare dso_local i32 @ftruncate(i32, i64) #2

; Function Attrs: nounwind
declare dso_local i32 @geteuid() #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @fchmod_or_lchmod(i32 %desc, i8* %name, i32 %mode) #4 !dbg !8503 !ctir !557 {
entry:
  %retval = alloca i32, align 4
  %desc.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !8504, metadata !DIExpression()), !dbg !8505
  store i8* %name, i8** %name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8506, metadata !DIExpression()), !dbg !8507
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !8508, metadata !DIExpression()), !dbg !8509
  %0 = load i32, i32* %desc.addr, align 4, !dbg !8510, !tbaa !2635
  %cmp = icmp sle i32 0, %0, !dbg !8512
  br i1 %cmp, label %if.then, label %if.end, !dbg !8513

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %desc.addr, align 4, !dbg !8514, !tbaa !2635
  %2 = load i32, i32* %mode.addr, align 4, !dbg !8515, !tbaa !2635
  %call = call i32 @fchmod(i32 %1, i32 %2) #9, !dbg !8516
  store i32 %call, i32* %retval, align 4, !dbg !8517
  br label %return, !dbg !8517

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %name.addr, align 8, !dbg !8518, !tbaa !2648
  %4 = load i32, i32* %mode.addr, align 4, !dbg !8519, !tbaa !2635
  %call1 = call i32 @chmod(i8* %3, i32 %4) #9, !dbg !8520
  store i32 %call1, i32* %retval, align 4, !dbg !8521
  br label %return, !dbg !8521

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !8522
  ret i32 %5, !dbg !8522
}

; Function Attrs: nounwind
declare dso_local i32 @fchmod(i32, i32) #2

declare dso_local i64 @read(i32, i8*, i64) #3

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @is_nul(i8* %buf, i64 %length) #10 !dbg !8523 !ctir !552 {
entry:
  %retval = alloca i1, align 1
  %buf.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %p = alloca i8*, align 8, !ctir !554
  %word = alloca i8, align 1, !ctir !556
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8524, metadata !DIExpression()), !dbg !8525
  store i64 %length, i64* %length.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !8526, metadata !DIExpression()), !dbg !8527
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8528, metadata !DIExpression()), !dbg !8529
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !8530, !tbaa !2648
  store i8* %0, i8** %p, align 8, !dbg !8529, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8* %word, metadata !8531, metadata !DIExpression()), !dbg !8532
  %1 = load i64, i64* %length.addr, align 8, !dbg !8533, !tbaa !3288
  %tobool = icmp ne i64 %1, 0, !dbg !8533
  br i1 %tobool, label %if.end, label %if.then, !dbg !8535

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !8536
  br label %return, !dbg !8536

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !8537

while.cond:                                       ; preds = %if.end7, %if.end
  %2 = load i64, i64* %length.addr, align 8, !dbg !8538, !tbaa !3288
  %and = and i64 %2, 0, !dbg !8538
  %tobool1 = icmp ne i64 %and, 0, !dbg !8537
  br i1 %tobool1, label %while.body, label %while.end, !dbg !8537

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %p, align 8, !dbg !8539, !tbaa !2648
  %4 = load i8, i8* %3, align 1, !dbg !8542, !tbaa !3295, !ctir !555
  %tobool2 = icmp ne i8 %4, 0, !dbg !8542
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !8543

if.then3:                                         ; preds = %while.body
  store i1 false, i1* %retval, align 1, !dbg !8544
  br label %return, !dbg !8544

if.end4:                                          ; preds = %while.body
  %5 = load i8*, i8** %p, align 8, !dbg !8545, !tbaa !2648
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8545
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !8545, !tbaa !2648
  %6 = load i64, i64* %length.addr, align 8, !dbg !8546, !tbaa !3288
  %dec = add i64 %6, -1, !dbg !8546
  store i64 %dec, i64* %length.addr, align 8, !dbg !8546, !tbaa !3288
  %7 = load i64, i64* %length.addr, align 8, !dbg !8547, !tbaa !3288
  %tobool5 = icmp ne i64 %7, 0, !dbg !8547
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !8549

if.then6:                                         ; preds = %if.end4
  store i1 true, i1* %retval, align 1, !dbg !8550
  br label %return, !dbg !8550

if.end7:                                          ; preds = %if.end4
  br label %while.cond, !dbg !8537, !llvm.loop !8551

while.end:                                        ; preds = %while.cond
  br label %for.cond, !dbg !8553

for.cond:                                         ; preds = %if.end16, %while.end
  %8 = load i8*, i8** %p, align 8, !dbg !8554, !tbaa !2648
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %word, i8* align 1 %8, i64 1, i1 false), !dbg !8558
  %9 = load i8, i8* %word, align 1, !dbg !8559, !tbaa !3295
  %tobool8 = icmp ne i8 %9, 0, !dbg !8559
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !8561

if.then9:                                         ; preds = %for.cond
  store i1 false, i1* %retval, align 1, !dbg !8562
  br label %return, !dbg !8562

if.end10:                                         ; preds = %for.cond
  %10 = load i8*, i8** %p, align 8, !dbg !8563, !tbaa !2648
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 1, !dbg !8563
  store i8* %add.ptr, i8** %p, align 8, !dbg !8563, !tbaa !2648
  %11 = load i64, i64* %length.addr, align 8, !dbg !8564, !tbaa !3288
  %sub = sub i64 %11, 1, !dbg !8564
  store i64 %sub, i64* %length.addr, align 8, !dbg !8564, !tbaa !3288
  %12 = load i64, i64* %length.addr, align 8, !dbg !8565, !tbaa !3288
  %tobool11 = icmp ne i64 %12, 0, !dbg !8565
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !8567

if.then12:                                        ; preds = %if.end10
  store i1 true, i1* %retval, align 1, !dbg !8568
  br label %return, !dbg !8568

if.end13:                                         ; preds = %if.end10
  %13 = load i64, i64* %length.addr, align 8, !dbg !8569, !tbaa !3288
  %and14 = and i64 %13, 15, !dbg !8569
  %cmp = icmp eq i64 %and14, 0, !dbg !8571
  br i1 %cmp, label %if.then15, label %if.end16, !dbg !8572

if.then15:                                        ; preds = %if.end13
  br label %for.end, !dbg !8573

if.end16:                                         ; preds = %if.end13
  br label %for.cond, !dbg !8574, !llvm.loop !8575

for.end:                                          ; preds = %if.then15
  %14 = load i8*, i8** %buf.addr, align 8, !dbg !8578, !tbaa !2648
  %15 = load i8*, i8** %p, align 8, !dbg !8579, !tbaa !2648
  %16 = load i64, i64* %length.addr, align 8, !dbg !8580, !tbaa !3288
  %call = call i32 @memcmp(i8* %14, i8* %15, i64 %16) #14, !dbg !8581
  %cmp17 = icmp eq i32 %call, 0, !dbg !8582
  store i1 %cmp17, i1* %retval, align 1, !dbg !8583
  br label %return, !dbg !8583

return:                                           ; preds = %for.end, %if.then12, %if.then9, %if.then6, %if.then3, %if.then
  %17 = load i1, i1* %retval, align 1, !dbg !8584
  ret i1 %17, !dbg !8584
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @create_hole(i32 %fd, i8* %name, i1 zeroext %punch_holes, i64 %size) #4 !dbg !8585 !ctir !538 {
entry:
  %retval = alloca i1, align 1
  %fd.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %punch_holes.addr = alloca i8, align 1
  %size.addr = alloca i64, align 8
  %file_end = alloca i64, align 8, !ctir !352
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !8586, metadata !DIExpression()), !dbg !8587
  store i8* %name, i8** %name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8588, metadata !DIExpression()), !dbg !8589
  %frombool = zext i1 %punch_holes to i8
  store i8 %frombool, i8* %punch_holes.addr, align 1, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %punch_holes.addr, metadata !8590, metadata !DIExpression()), !dbg !8591
  store i64 %size, i64* %size.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8592, metadata !DIExpression()), !dbg !8593
  call void @llvm.dbg.declare(metadata i64* %file_end, metadata !8594, metadata !DIExpression()), !dbg !8595
  %0 = load i32, i32* %fd.addr, align 4, !dbg !8596, !tbaa !2635
  %1 = load i64, i64* %size.addr, align 8, !dbg !8597, !tbaa !3288
  %call = call i64 @lseek(i32 %0, i64 %1, i32 1) #9, !dbg !8598
  store i64 %call, i64* %file_end, align 8, !dbg !8595, !tbaa !3288
  %2 = load i64, i64* %file_end, align 8, !dbg !8599, !tbaa !3288
  %cmp = icmp slt i64 %2, 0, !dbg !8601
  br i1 %cmp, label %if.then, label %if.end, !dbg !8602

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !8603
  %3 = load i32, i32* %call1, align 4, !dbg !8603, !tbaa !2635, !ctir !7
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.69.156, i64 0, i64 0)) #9, !dbg !8605
  %4 = load i8*, i8** %name.addr, align 8, !dbg !8606, !tbaa !2648
  %call3 = call i8* @quotearg_style(i32 4, i8* %4), !dbg !8606
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %3, i8* %call2, i8* %call3), !dbg !8607
  store i1 false, i1* %retval, align 1, !dbg !8608
  br label %return, !dbg !8608

if.end:                                           ; preds = %entry
  %5 = load i8, i8* %punch_holes.addr, align 1, !dbg !8609, !tbaa !2742
  %tobool = trunc i8 %5 to i1, !dbg !8609
  br i1 %tobool, label %land.lhs.true, label %if.end10, !dbg !8611

land.lhs.true:                                    ; preds = %if.end
  %6 = load i32, i32* %fd.addr, align 4, !dbg !8612, !tbaa !2635
  %7 = load i64, i64* %file_end, align 8, !dbg !8613, !tbaa !3288
  %8 = load i64, i64* %size.addr, align 8, !dbg !8614, !tbaa !3288
  %sub = sub nsw i64 %7, %8, !dbg !8615
  %9 = load i64, i64* %size.addr, align 8, !dbg !8616, !tbaa !3288
  %call4 = call i32 @punch_hole(i32 %6, i64 %sub, i64 %9), !dbg !8617
  %cmp5 = icmp slt i32 %call4, 0, !dbg !8618
  br i1 %cmp5, label %if.then6, label %if.end10, !dbg !8619

if.then6:                                         ; preds = %land.lhs.true
  %call7 = call i32* @__errno_location() #16, !dbg !8620
  %10 = load i32, i32* %call7, align 4, !dbg !8620, !tbaa !2635, !ctir !7
  %call8 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.71.157, i64 0, i64 0)) #9, !dbg !8622
  %11 = load i8*, i8** %name.addr, align 8, !dbg !8623, !tbaa !2648
  %call9 = call i8* @quotearg_style(i32 4, i8* %11), !dbg !8623
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %10, i8* %call8, i8* %call9), !dbg !8624
  store i1 false, i1* %retval, align 1, !dbg !8625
  br label %return, !dbg !8625

if.end10:                                         ; preds = %land.lhs.true, %if.end
  store i1 true, i1* %retval, align 1, !dbg !8626
  br label %return, !dbg !8626

return:                                           ; preds = %if.end10, %if.then6, %if.then
  %12 = load i1, i1* %retval, align 1, !dbg !8627
  ret i1 %12, !dbg !8627
}

; Function Attrs: nounwind
declare dso_local i64 @lseek(i32, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @punch_hole(i32 %fd, i64 %offset, i64 %length) #4 !dbg !8628 !ctir !542 {
entry:
  %fd.addr = alloca i32, align 4
  %offset.addr = alloca i64, align 8
  %length.addr = alloca i64, align 8
  %ret = alloca i32, align 4, !ctir !7
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !8629, metadata !DIExpression()), !dbg !8630
  store i64 %offset, i64* %offset.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !8631, metadata !DIExpression()), !dbg !8632
  store i64 %length, i64* %length.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !8633, metadata !DIExpression()), !dbg !8634
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8635, metadata !DIExpression()), !dbg !8636
  store i32 0, i32* %ret, align 4, !dbg !8636, !tbaa !2635
  %0 = load i32, i32* %fd.addr, align 4, !dbg !8637, !tbaa !2635
  %1 = load i64, i64* %offset.addr, align 8, !dbg !8638, !tbaa !3288
  %2 = load i64, i64* %length.addr, align 8, !dbg !8639, !tbaa !3288
  %call = call i32 @fallocate(i32 %0, i32 3, i64 %1, i64 %2), !dbg !8640
  store i32 %call, i32* %ret, align 4, !dbg !8641, !tbaa !2635
  %3 = load i32, i32* %ret, align 4, !dbg !8642, !tbaa !2635
  %cmp = icmp slt i32 %3, 0, !dbg !8644
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8645

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !8646
  %4 = load i32, i32* %call1, align 4, !dbg !8646, !tbaa !2635, !ctir !7
  %call2 = call zeroext i1 @is_ENOTSUP(i32 %4), !dbg !8647
  br i1 %call2, label %if.then, label %lor.lhs.false, !dbg !8648

lor.lhs.false:                                    ; preds = %land.lhs.true
  %call3 = call i32* @__errno_location() #16, !dbg !8649
  %5 = load i32, i32* %call3, align 4, !dbg !8649, !tbaa !2635, !ctir !7
  %cmp4 = icmp eq i32 %5, 38, !dbg !8650
  br i1 %cmp4, label %if.then, label %if.end, !dbg !8651

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  store i32 0, i32* %ret, align 4, !dbg !8652, !tbaa !2635
  br label %if.end, !dbg !8653

if.end:                                           ; preds = %if.then, %lor.lhs.false, %entry
  %6 = load i32, i32* %ret, align 4, !dbg !8654, !tbaa !2635
  ret i32 %6, !dbg !8655
}

declare dso_local i32 @fallocate(i32, i32, i64, i64) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_ENOTSUP(i32 %err) #4 !dbg !8656 !ctir !256 {
entry:
  %err.addr = alloca i32, align 4
  store i32 %err, i32* %err.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !8657, metadata !DIExpression()), !dbg !8658
  %0 = load i32, i32* %err.addr, align 4, !dbg !8659, !tbaa !2635
  %cmp = icmp eq i32 %0, 95, !dbg !8660
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !8661

lor.rhs:                                          ; preds = %entry
  br label %lor.end, !dbg !8661

lor.end:                                          ; preds = %lor.rhs, %entry
  %1 = phi i1 [ true, %entry ], [ false, %lor.rhs ]
  ret i1 %1, !dbg !8662
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @extent_scan_free(%struct.extent_scan* %scan) #4 !dbg !8663 !ctir !526 {
entry:
  %scan.addr = alloca %struct.extent_scan*, align 8
  store %struct.extent_scan* %scan, %struct.extent_scan** %scan.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.extent_scan** %scan.addr, metadata !8664, metadata !DIExpression()), !dbg !8665
  %0 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8666, !tbaa !2648
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %0, i32 0, i32 6, !dbg !8667, !ctir !529
  %1 = load %struct.extent_info*, %struct.extent_info** %ext_info, align 8, !dbg !8667, !tbaa !8071, !ctir !519
  %2 = bitcast %struct.extent_info* %1 to i8*, !dbg !8666
  call void @free(i8* %2) #9, !dbg !8668
  %3 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8669, !tbaa !2648
  %ext_info1 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %3, i32 0, i32 6, !dbg !8670, !ctir !529
  store %struct.extent_info* null, %struct.extent_info** %ext_info1, align 8, !dbg !8671, !tbaa !8071, !ctir !519
  %4 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8672, !tbaa !2648
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %4, i32 0, i32 3, !dbg !8673, !ctir !529
  store i64 0, i64* %ei_count, align 8, !dbg !8674, !tbaa !8052, !ctir !55
  ret void, !dbg !8675
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @write_zeros(i32 %fd, i64 %n_bytes) #4 !dbg !606 !ctir !540 {
entry:
  %retval = alloca i1, align 1
  %fd.addr = alloca i32, align 4
  %n_bytes.addr = alloca i64, align 8
  %n = alloca i64, align 8, !ctir !55
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !8676, metadata !DIExpression()), !dbg !8677
  store i64 %n_bytes, i64* %n_bytes.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %n_bytes.addr, metadata !8678, metadata !DIExpression()), !dbg !8679
  %0 = load i8*, i8** @write_zeros.zeros, align 8, !dbg !8680, !tbaa !2648
  %cmp = icmp eq i8* %0, null, !dbg !8682
  br i1 %cmp, label %if.then, label %if.end3, !dbg !8683

if.then:                                          ; preds = %entry
  %1 = load i64, i64* @write_zeros.nz, align 8, !dbg !8684, !tbaa !3288
  %call = call noalias i8* @calloc(i64 %1, i64 1) #9, !dbg !8686
  store i8* %call, i8** @write_zeros.zeros, align 8, !dbg !8687, !tbaa !2648
  %2 = load i8*, i8** @write_zeros.zeros, align 8, !dbg !8688, !tbaa !2648
  %cmp1 = icmp eq i8* %2, null, !dbg !8690
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !8691

if.then2:                                         ; preds = %if.then
  store i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @write_zeros.fallback, i64 0, i64 0), i8** @write_zeros.zeros, align 8, !dbg !8692, !tbaa !2648
  store i64 1024, i64* @write_zeros.nz, align 8, !dbg !8694, !tbaa !3288
  br label %if.end, !dbg !8695

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end3, !dbg !8696

if.end3:                                          ; preds = %if.end, %entry
  br label %while.cond, !dbg !8697

while.cond:                                       ; preds = %if.end8, %if.end3
  %3 = load i64, i64* %n_bytes.addr, align 8, !dbg !8698, !tbaa !3288
  %tobool = icmp ne i64 %3, 0, !dbg !8697
  br i1 %tobool, label %while.body, label %while.end, !dbg !8697

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %n, metadata !8699, metadata !DIExpression()), !dbg !8701
  %4 = load i64, i64* @write_zeros.nz, align 8, !dbg !8702, !tbaa !3288
  %5 = load i64, i64* %n_bytes.addr, align 8, !dbg !8702, !tbaa !3288
  %cmp4 = icmp ult i64 %4, %5, !dbg !8702
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !8702

cond.true:                                        ; preds = %while.body
  %6 = load i64, i64* @write_zeros.nz, align 8, !dbg !8702, !tbaa !3288
  br label %cond.end, !dbg !8702

cond.false:                                       ; preds = %while.body
  %7 = load i64, i64* %n_bytes.addr, align 8, !dbg !8702, !tbaa !3288
  br label %cond.end, !dbg !8702

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %6, %cond.true ], [ %7, %cond.false ], !dbg !8702
  store i64 %cond, i64* %n, align 8, !dbg !8701, !tbaa !3288
  %8 = load i32, i32* %fd.addr, align 4, !dbg !8703, !tbaa !2635
  %9 = load i8*, i8** @write_zeros.zeros, align 8, !dbg !8705, !tbaa !2648
  %10 = load i64, i64* %n, align 8, !dbg !8706, !tbaa !3288
  %call5 = call i64 @full_write(i32 %8, i8* %9, i64 %10), !dbg !8707
  %11 = load i64, i64* %n, align 8, !dbg !8708, !tbaa !3288
  %cmp6 = icmp ne i64 %call5, %11, !dbg !8709
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !8710

if.then7:                                         ; preds = %cond.end
  store i1 false, i1* %retval, align 1, !dbg !8711
  br label %return, !dbg !8711

if.end8:                                          ; preds = %cond.end
  %12 = load i64, i64* %n, align 8, !dbg !8712, !tbaa !3288
  %13 = load i64, i64* %n_bytes.addr, align 8, !dbg !8713, !tbaa !3288
  %sub = sub i64 %13, %12, !dbg !8713
  store i64 %sub, i64* %n_bytes.addr, align 8, !dbg !8713, !tbaa !3288
  br label %while.cond, !dbg !8697, !llvm.loop !8714

while.end:                                        ; preds = %while.cond
  store i1 true, i1* %retval, align 1, !dbg !8716
  br label %return, !dbg !8716

return:                                           ; preds = %while.end, %if.then7
  %14 = load i1, i1* %retval, align 1, !dbg !8717
  ret i1 %14, !dbg !8717
}

; Function Attrs: nounwind
declare dso_local noalias i8* @calloc(i64, i64) #2

; Function Attrs: nounwind
declare dso_local i32 @ioctl(i32, i64, ...) #2

declare dso_local i32 @putchar_unlocked(i32) #3

; Function Attrs: nounwind
declare dso_local i8* @mempcpy(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @writable_destination(i8* %file, i32 %mode) #4 !dbg !8718 !ctir !456 {
entry:
  %file.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  store i8* %file, i8** %file.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !8719, metadata !DIExpression()), !dbg !8720
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !8721, metadata !DIExpression()), !dbg !8722
  %0 = load i32, i32* %mode.addr, align 4, !dbg !8723, !tbaa !2635
  %and = and i32 %0, 61440, !dbg !8723
  %cmp = icmp eq i32 %and, 40960, !dbg !8723
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !8724

lor.lhs.false:                                    ; preds = %entry
  %call = call zeroext i1 @can_write_any_file(), !dbg !8725
  br i1 %call, label %lor.end, label %lor.rhs, !dbg !8726

lor.rhs:                                          ; preds = %lor.lhs.false
  %1 = load i8*, i8** %file.addr, align 8, !dbg !8727, !tbaa !2648
  %call1 = call i32 @euidaccess(i8* %1, i32 2) #9, !dbg !8728
  %cmp2 = icmp eq i32 %call1, 0, !dbg !8729
  br label %lor.end, !dbg !8726

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %2 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp2, %lor.rhs ]
  ret i1 %2, !dbg !8730
}

; Function Attrs: nounwind
declare dso_local i32 @euidaccess(i8*, i32) #2

; Function Attrs: nounwind
declare dso_local i8* @canonicalize_file_name(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @fstatat(i32, i8*, %struct.stat*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @cp_options_default(%struct.cp_options* %x) #4 !dbg !8731 !ctir !401 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !8732, metadata !DIExpression()), !dbg !8733
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8734, !tbaa !2648
  %1 = bitcast %struct.cp_options* %0 to i8*, !dbg !8735
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 80, i1 false), !dbg !8735
  %call = call i32 @geteuid() #9, !dbg !8736
  %cmp = icmp eq i32 %call, 0, !dbg !8737
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8738, !tbaa !2648
  %owner_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 12, !dbg !8739, !ctir !358
  %frombool = zext i1 %cmp to i8, !dbg !8740
  store i8 %frombool, i8* %owner_privileges, align 1, !dbg !8740, !tbaa !7927, !ctir !142
  %3 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8741, !tbaa !2648
  %chown_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 11, !dbg !8742, !ctir !358
  %frombool1 = zext i1 %cmp to i8, !dbg !8743
  store i8 %frombool1, i8* %chown_privileges, align 2, !dbg !8743, !tbaa !7580, !ctir !142
  %4 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8744, !tbaa !2648
  %rename_errno = getelementptr inbounds %struct.cp_options, %struct.cp_options* %4, i32 0, i32 35, !dbg !8745, !ctir !358
  store i32 -1, i32* %rename_errno, align 4, !dbg !8746, !tbaa !4542, !ctir !7
  ret void, !dbg !8747
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @forget_created(i64 %ino, i64 %dev) #4 !dbg !8748 !ctir !619 {
entry:
  %ino.addr = alloca i64, align 8
  %dev.addr = alloca i64, align 8
  %probe = alloca %struct.Src_to_dest, align 8, !ctir !622
  %ent = alloca %struct.Src_to_dest*, align 8, !ctir !621
  store i64 %ino, i64* %ino.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %ino.addr, metadata !8749, metadata !DIExpression()), !dbg !8750
  store i64 %dev, i64* %dev.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %dev.addr, metadata !8751, metadata !DIExpression()), !dbg !8752
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest* %probe, metadata !8753, metadata !DIExpression()), !dbg !8754
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %ent, metadata !8755, metadata !DIExpression()), !dbg !8756
  %0 = load i64, i64* %ino.addr, align 8, !dbg !8757, !tbaa !3288
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %probe, i32 0, i32 0, !dbg !8758, !ctir !622
  store i64 %0, i64* %st_ino, align 8, !dbg !8759, !tbaa !8760, !ctir !441
  %1 = load i64, i64* %dev.addr, align 8, !dbg !8762, !tbaa !3288
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %probe, i32 0, i32 1, !dbg !8763, !ctir !622
  store i64 %1, i64* %st_dev, align 8, !dbg !8764, !tbaa !8765, !ctir !443
  %name = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %probe, i32 0, i32 2, !dbg !8766, !ctir !622
  store i8* null, i8** %name, align 8, !dbg !8767, !tbaa !8768, !ctir !9
  %2 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !8769, !tbaa !2648
  %3 = bitcast %struct.Src_to_dest* %probe to i8*, !dbg !8770
  %call = call i8* @hash_delete(%struct.hash_table* %2, i8* %3), !dbg !8771
  %4 = bitcast i8* %call to %struct.Src_to_dest*, !dbg !8771
  store %struct.Src_to_dest* %4, %struct.Src_to_dest** %ent, align 8, !dbg !8772, !tbaa !2648
  %5 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8773, !tbaa !2648
  %tobool = icmp ne %struct.Src_to_dest* %5, null, !dbg !8773
  br i1 %tobool, label %if.then, label %if.end, !dbg !8775

if.then:                                          ; preds = %entry
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8776, !tbaa !2648
  %7 = bitcast %struct.Src_to_dest* %6 to i8*, !dbg !8776
  call void @src_to_dest_free(i8* %7), !dbg !8777
  br label %if.end, !dbg !8777

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8778
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @src_to_dest_free(i8* %x) #4 !dbg !8779 !ctir !633 {
entry:
  %x.addr = alloca i8*, align 8
  %a = alloca %struct.Src_to_dest*, align 8, !ctir !621
  store i8* %x, i8** %x.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !8780, metadata !DIExpression()), !dbg !8781
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %a, metadata !8782, metadata !DIExpression()), !dbg !8783
  %0 = load i8*, i8** %x.addr, align 8, !dbg !8784, !tbaa !2648
  %1 = bitcast i8* %0 to %struct.Src_to_dest*, !dbg !8784
  store %struct.Src_to_dest* %1, %struct.Src_to_dest** %a, align 8, !dbg !8783, !tbaa !2648
  %2 = load %struct.Src_to_dest*, %struct.Src_to_dest** %a, align 8, !dbg !8785, !tbaa !2648
  %name = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %2, i32 0, i32 2, !dbg !8786, !ctir !622
  %3 = load i8*, i8** %name, align 8, !dbg !8786, !tbaa !8768, !ctir !9
  call void @free(i8* %3) #9, !dbg !8787
  %4 = load i8*, i8** %x.addr, align 8, !dbg !8788, !tbaa !2648
  call void @free(i8* %4) #9, !dbg !8789
  ret void, !dbg !8790
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @src_to_dest_lookup(i64 %ino, i64 %dev) #4 !dbg !8791 !ctir !627 {
entry:
  %ino.addr = alloca i64, align 8
  %dev.addr = alloca i64, align 8
  %ent = alloca %struct.Src_to_dest, align 8, !ctir !622
  %e = alloca %struct.Src_to_dest*, align 8, !ctir !629
  store i64 %ino, i64* %ino.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %ino.addr, metadata !8792, metadata !DIExpression()), !dbg !8793
  store i64 %dev, i64* %dev.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %dev.addr, metadata !8794, metadata !DIExpression()), !dbg !8795
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest* %ent, metadata !8796, metadata !DIExpression()), !dbg !8797
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %e, metadata !8798, metadata !DIExpression()), !dbg !8799
  %0 = load i64, i64* %ino.addr, align 8, !dbg !8800, !tbaa !3288
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %ent, i32 0, i32 0, !dbg !8801, !ctir !622
  store i64 %0, i64* %st_ino, align 8, !dbg !8802, !tbaa !8760, !ctir !441
  %1 = load i64, i64* %dev.addr, align 8, !dbg !8803, !tbaa !3288
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %ent, i32 0, i32 1, !dbg !8804, !ctir !622
  store i64 %1, i64* %st_dev, align 8, !dbg !8805, !tbaa !8765, !ctir !443
  %2 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !8806, !tbaa !2648
  %3 = bitcast %struct.Src_to_dest* %ent to i8*, !dbg !8807
  %call = call i8* @hash_lookup(%struct.hash_table* %2, i8* %3), !dbg !8808
  %4 = bitcast i8* %call to %struct.Src_to_dest*, !dbg !8808
  store %struct.Src_to_dest* %4, %struct.Src_to_dest** %e, align 8, !dbg !8809, !tbaa !2648
  %5 = load %struct.Src_to_dest*, %struct.Src_to_dest** %e, align 8, !dbg !8810, !tbaa !2648
  %tobool = icmp ne %struct.Src_to_dest* %5, null, !dbg !8810
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8810

cond.true:                                        ; preds = %entry
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %e, align 8, !dbg !8811, !tbaa !2648
  %name = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %6, i32 0, i32 2, !dbg !8812, !ctir !630
  %7 = load i8*, i8** %name, align 8, !dbg !8812, !tbaa !8768, !ctir !9
  br label %cond.end, !dbg !8810

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8810

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %7, %cond.true ], [ null, %cond.false ], !dbg !8810
  ret i8* %cond, !dbg !8813
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @remember_copied(i8* %name, i64 %ino, i64 %dev) #4 !dbg !8814 !ctir !631 {
entry:
  %retval = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %ino.addr = alloca i64, align 8
  %dev.addr = alloca i64, align 8
  %ent = alloca %struct.Src_to_dest*, align 8, !ctir !621
  %ent_from_table = alloca %struct.Src_to_dest*, align 8, !ctir !621
  store i8* %name, i8** %name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8815, metadata !DIExpression()), !dbg !8816
  store i64 %ino, i64* %ino.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %ino.addr, metadata !8817, metadata !DIExpression()), !dbg !8818
  store i64 %dev, i64* %dev.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %dev.addr, metadata !8819, metadata !DIExpression()), !dbg !8820
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %ent, metadata !8821, metadata !DIExpression()), !dbg !8822
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %ent_from_table, metadata !8823, metadata !DIExpression()), !dbg !8824
  %call = call noalias i8* @xmalloc(i64 24), !dbg !8825
  %0 = bitcast i8* %call to %struct.Src_to_dest*, !dbg !8825
  store %struct.Src_to_dest* %0, %struct.Src_to_dest** %ent, align 8, !dbg !8826, !tbaa !2648
  %1 = load i8*, i8** %name.addr, align 8, !dbg !8827, !tbaa !2648
  %call1 = call noalias i8* @xstrdup(i8* %1), !dbg !8828
  %2 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8829, !tbaa !2648
  %name2 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %2, i32 0, i32 2, !dbg !8830, !ctir !622
  store i8* %call1, i8** %name2, align 8, !dbg !8831, !tbaa !8768, !ctir !9
  %3 = load i64, i64* %ino.addr, align 8, !dbg !8832, !tbaa !3288
  %4 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8833, !tbaa !2648
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %4, i32 0, i32 0, !dbg !8834, !ctir !622
  store i64 %3, i64* %st_ino, align 8, !dbg !8835, !tbaa !8760, !ctir !441
  %5 = load i64, i64* %dev.addr, align 8, !dbg !8836, !tbaa !3288
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8837, !tbaa !2648
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %6, i32 0, i32 1, !dbg !8838, !ctir !622
  store i64 %5, i64* %st_dev, align 8, !dbg !8839, !tbaa !8765, !ctir !443
  %7 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !8840, !tbaa !2648
  %8 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8841, !tbaa !2648
  %9 = bitcast %struct.Src_to_dest* %8 to i8*, !dbg !8841
  %call3 = call i8* @hash_insert(%struct.hash_table* %7, i8* %9), !dbg !8842
  %10 = bitcast i8* %call3 to %struct.Src_to_dest*, !dbg !8842
  store %struct.Src_to_dest* %10, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !8843, !tbaa !2648
  %11 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !8844, !tbaa !2648
  %cmp = icmp eq %struct.Src_to_dest* %11, null, !dbg !8846
  br i1 %cmp, label %if.then, label %if.end, !dbg !8847

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !8848
  unreachable, !dbg !8848

if.end:                                           ; preds = %entry
  %12 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !8850, !tbaa !2648
  %13 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8852, !tbaa !2648
  %cmp4 = icmp ne %struct.Src_to_dest* %12, %13, !dbg !8853
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !8854

if.then5:                                         ; preds = %if.end
  %14 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8855, !tbaa !2648
  %15 = bitcast %struct.Src_to_dest* %14 to i8*, !dbg !8855
  call void @src_to_dest_free(i8* %15), !dbg !8857
  %16 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !8858, !tbaa !2648
  %name6 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %16, i32 0, i32 2, !dbg !8859, !ctir !622
  %17 = load i8*, i8** %name6, align 8, !dbg !8859, !tbaa !8768, !ctir !9
  store i8* %17, i8** %retval, align 8, !dbg !8860
  br label %return, !dbg !8860

if.end7:                                          ; preds = %if.end
  store i8* null, i8** %retval, align 8, !dbg !8861
  br label %return, !dbg !8861

return:                                           ; preds = %if.end7, %if.then5
  %18 = load i8*, i8** %retval, align 8, !dbg !8862
  ret i8* %18, !dbg !8862
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_init() #4 !dbg !8863 !ctir !200 {
entry:
  %call = call %struct.hash_table* @hash_initialize(i64 103, %struct.hash_tuning* null, i64 (i8*, i64)* @src_to_dest_hash, i1 (i8*, i8*)* @src_to_dest_compare, void (i8*)* @src_to_dest_free), !dbg !8864
  store %struct.hash_table* %call, %struct.hash_table** @src_to_dest, align 8, !dbg !8865, !tbaa !2648
  %0 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !8866, !tbaa !2648
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !8868
  br i1 %cmp, label %if.then, label %if.end, !dbg !8869

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !8870
  unreachable, !dbg !8870

if.end:                                           ; preds = %entry
  ret void, !dbg !8871
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @src_to_dest_hash(i8* %x, i64 %table_size) #4 !dbg !8872 !ctir !635 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.Src_to_dest*, align 8, !ctir !629
  store i8* %x, i8** %x.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !8873, metadata !DIExpression()), !dbg !8874
  store i64 %table_size, i64* %table_size.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !8875, metadata !DIExpression()), !dbg !8876
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %p, metadata !8877, metadata !DIExpression()), !dbg !8878
  %0 = load i8*, i8** %x.addr, align 8, !dbg !8879, !tbaa !2648
  %1 = bitcast i8* %0 to %struct.Src_to_dest*, !dbg !8879
  store %struct.Src_to_dest* %1, %struct.Src_to_dest** %p, align 8, !dbg !8878, !tbaa !2648
  %2 = load %struct.Src_to_dest*, %struct.Src_to_dest** %p, align 8, !dbg !8880, !tbaa !2648
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %2, i32 0, i32 0, !dbg !8881, !ctir !630
  %3 = load i64, i64* %st_ino, align 8, !dbg !8881, !tbaa !8760, !ctir !441
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !8882, !tbaa !3288
  %rem = urem i64 %3, %4, !dbg !8883
  ret i64 %rem, !dbg !8884
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @src_to_dest_compare(i8* %x, i8* %y) #4 !dbg !8885 !ctir !637 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.Src_to_dest*, align 8, !ctir !629
  %b = alloca %struct.Src_to_dest*, align 8, !ctir !629
  store i8* %x, i8** %x.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !8886, metadata !DIExpression()), !dbg !8887
  store i8* %y, i8** %y.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !8888, metadata !DIExpression()), !dbg !8889
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %a, metadata !8890, metadata !DIExpression()), !dbg !8891
  %0 = load i8*, i8** %x.addr, align 8, !dbg !8892, !tbaa !2648
  %1 = bitcast i8* %0 to %struct.Src_to_dest*, !dbg !8892
  store %struct.Src_to_dest* %1, %struct.Src_to_dest** %a, align 8, !dbg !8891, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %b, metadata !8893, metadata !DIExpression()), !dbg !8894
  %2 = load i8*, i8** %y.addr, align 8, !dbg !8895, !tbaa !2648
  %3 = bitcast i8* %2 to %struct.Src_to_dest*, !dbg !8895
  store %struct.Src_to_dest* %3, %struct.Src_to_dest** %b, align 8, !dbg !8894, !tbaa !2648
  %4 = load %struct.Src_to_dest*, %struct.Src_to_dest** %a, align 8, !dbg !8896, !tbaa !2648
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %4, i32 0, i32 0, !dbg !8896, !ctir !630
  %5 = load i64, i64* %st_ino, align 8, !dbg !8896, !tbaa !8760, !ctir !441
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %b, align 8, !dbg !8896, !tbaa !2648
  %st_ino1 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %6, i32 0, i32 0, !dbg !8896, !ctir !630
  %7 = load i64, i64* %st_ino1, align 8, !dbg !8896, !tbaa !8760, !ctir !441
  %cmp = icmp eq i64 %5, %7, !dbg !8896
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !8896

land.rhs:                                         ; preds = %entry
  %8 = load %struct.Src_to_dest*, %struct.Src_to_dest** %a, align 8, !dbg !8896, !tbaa !2648
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %8, i32 0, i32 1, !dbg !8896, !ctir !630
  %9 = load i64, i64* %st_dev, align 8, !dbg !8896, !tbaa !8765, !ctir !443
  %10 = load %struct.Src_to_dest*, %struct.Src_to_dest** %b, align 8, !dbg !8896, !tbaa !2648
  %st_dev2 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %10, i32 0, i32 1, !dbg !8896, !ctir !630
  %11 = load i64, i64* %st_dev2, align 8, !dbg !8896, !tbaa !8765, !ctir !443
  %cmp3 = icmp eq i64 %9, %11, !dbg !8896
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %12 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !8897
  %13 = zext i1 %12 to i64, !dbg !8896
  %cond = select i1 %12, i32 1, i32 0, !dbg !8896
  %tobool = icmp ne i32 %cond, 0, !dbg !8896
  ret i1 %tobool, !dbg !8898
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @forget_all() #4 !dbg !8899 !ctir !200 {
entry:
  %0 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !8900, !tbaa !2648
  call void @hash_free(%struct.hash_table* %0), !dbg !8901
  ret void, !dbg !8902
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @extent_scan_init(i32 %src_fd, %struct.extent_scan* %scan) #4 !dbg !8903 !ctir !1461 {
entry:
  %src_fd.addr = alloca i32, align 4
  %scan.addr = alloca %struct.extent_scan*, align 8
  store i32 %src_fd, i32* %src_fd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !8904, metadata !DIExpression()), !dbg !8905
  store %struct.extent_scan* %scan, %struct.extent_scan** %scan.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.extent_scan** %scan.addr, metadata !8906, metadata !DIExpression()), !dbg !8907
  %0 = load i32, i32* %src_fd.addr, align 4, !dbg !8908, !tbaa !2635
  %1 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8909, !tbaa !2648
  %fd = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %1, i32 0, i32 0, !dbg !8910, !ctir !1464
  store i32 %0, i32* %fd, align 8, !dbg !8911, !tbaa !8912, !ctir !7
  %2 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8913, !tbaa !2648
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %2, i32 0, i32 3, !dbg !8914, !ctir !1464
  store i64 0, i64* %ei_count, align 8, !dbg !8915, !tbaa !8052, !ctir !55
  %3 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8916, !tbaa !2648
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %3, i32 0, i32 6, !dbg !8917, !ctir !1464
  store %struct.extent_info* null, %struct.extent_info** %ext_info, align 8, !dbg !8918, !tbaa !8071, !ctir !1473
  %4 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8919, !tbaa !2648
  %scan_start = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %4, i32 0, i32 1, !dbg !8920, !ctir !1464
  store i64 0, i64* %scan_start, align 8, !dbg !8921, !tbaa !8922, !ctir !1460
  %5 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8923, !tbaa !2648
  %initial_scan_failed = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %5, i32 0, i32 4, !dbg !8924, !ctir !1464
  store i8 0, i8* %initial_scan_failed, align 8, !dbg !8925, !tbaa !8032, !ctir !142
  %6 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8926, !tbaa !2648
  %hit_final_extent = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %6, i32 0, i32 5, !dbg !8927, !ctir !1464
  store i8 0, i8* %hit_final_extent, align 1, !dbg !8928, !tbaa !8026, !ctir !142
  %call = call zeroext i1 @extent_need_sync(), !dbg !8929
  %7 = zext i1 %call to i64, !dbg !8929
  %cond = select i1 %call, i32 1, i32 0, !dbg !8929
  %8 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8930, !tbaa !2648
  %fm_flags = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %8, i32 0, i32 2, !dbg !8931, !ctir !1464
  store i32 %cond, i32* %fm_flags, align 8, !dbg !8932, !tbaa !8933, !ctir !70
  ret void, !dbg !8934
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @extent_need_sync() #4 !dbg !8935 !ctir !1331 {
entry:
  ret i1 true, !dbg !8936
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @extent_scan_read(%struct.extent_scan* %scan) #4 !dbg !8937 !ctir !1479 {
entry:
  %retval = alloca i1, align 1
  %scan.addr = alloca %struct.extent_scan*, align 8
  %si = alloca i32, align 4, !ctir !70
  %last_ei = alloca %struct.extent_info*, align 8, !ctir !1473
  %fiemap_buf = alloca %union.anon.17, align 8, !ctir !8938
  %fiemap = alloca %struct.fiemap*, align 8, !ctir !1481
  %fm_extents = alloca %struct.fiemap_extent*, align 8, !ctir !1510
  %prev_idx = alloca i64, align 8, !ctir !55
  %i = alloca i32, align 4, !ctir !70
  %new_logical = alloca i64, align 8, !ctir !1486
  %length_adjust = alloca i64, align 8, !ctir !1486
  store %struct.extent_scan* %scan, %struct.extent_scan** %scan.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.extent_scan** %scan.addr, metadata !8942, metadata !DIExpression()), !dbg !8943
  call void @llvm.dbg.declare(metadata i32* %si, metadata !8944, metadata !DIExpression()), !dbg !8945
  store i32 0, i32* %si, align 4, !dbg !8945, !tbaa !2635
  call void @llvm.dbg.declare(metadata %struct.extent_info** %last_ei, metadata !8946, metadata !DIExpression()), !dbg !8947
  %0 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8948, !tbaa !2648
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %0, i32 0, i32 6, !dbg !8949, !ctir !1464
  %1 = load %struct.extent_info*, %struct.extent_info** %ext_info, align 8, !dbg !8949, !tbaa !8071, !ctir !1473
  store %struct.extent_info* %1, %struct.extent_info** %last_ei, align 8, !dbg !8947, !tbaa !2648
  br label %while.body, !dbg !8950

while.body:                                       ; preds = %entry, %if.end165
  call void @llvm.dbg.declare(metadata %union.anon.17* %fiemap_buf, metadata !8951, metadata !DIExpression()), !dbg !8953
  call void @llvm.dbg.declare(metadata %struct.fiemap** %fiemap, metadata !8954, metadata !DIExpression()), !dbg !8955
  %f = bitcast %union.anon.17* %fiemap_buf to %struct.fiemap*, !dbg !8956
  store %struct.fiemap* %f, %struct.fiemap** %fiemap, align 8, !dbg !8955, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.fiemap_extent** %fm_extents, metadata !8957, metadata !DIExpression()), !dbg !8958
  %2 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8959, !tbaa !2648
  %fm_extents1 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %2, i32 0, i32 6, !dbg !8960, !ctir !1482
  %arrayidx = getelementptr inbounds [0 x %struct.fiemap_extent], [0 x %struct.fiemap_extent]* %fm_extents1, i64 0, i64 0, !dbg !8959, !ctir !1497
  store %struct.fiemap_extent* %arrayidx, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8958, !tbaa !2648
  %3 = bitcast %union.anon.17* %fiemap_buf to i8*, !dbg !8961
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 4096, i1 false), !dbg !8961
  %4 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8962, !tbaa !2648
  %scan_start = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %4, i32 0, i32 1, !dbg !8963, !ctir !1464
  %5 = load i64, i64* %scan_start, align 8, !dbg !8963, !tbaa !8922, !ctir !1460
  %6 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8964, !tbaa !2648
  %fm_start = getelementptr inbounds %struct.fiemap, %struct.fiemap* %6, i32 0, i32 0, !dbg !8965, !ctir !1482
  store i64 %5, i64* %fm_start, align 8, !dbg !8966, !tbaa !3288, !ctir !1486
  %7 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8967, !tbaa !2648
  %fm_flags = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %7, i32 0, i32 2, !dbg !8968, !ctir !1464
  %8 = load i32, i32* %fm_flags, align 8, !dbg !8968, !tbaa !8933, !ctir !70
  %9 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8969, !tbaa !2648
  %fm_flags2 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %9, i32 0, i32 2, !dbg !8970, !ctir !1482
  store i32 %8, i32* %fm_flags2, align 8, !dbg !8971, !tbaa !2635, !ctir !1491
  %10 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8972, !tbaa !2648
  %fm_extent_count = getelementptr inbounds %struct.fiemap, %struct.fiemap* %10, i32 0, i32 4, !dbg !8973, !ctir !1482
  store i32 72, i32* %fm_extent_count, align 8, !dbg !8974, !tbaa !2635, !ctir !1491
  %11 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8975, !tbaa !2648
  %scan_start3 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %11, i32 0, i32 1, !dbg !8976, !ctir !1464
  %12 = load i64, i64* %scan_start3, align 8, !dbg !8976, !tbaa !8922, !ctir !1460
  %sub = sub i64 -1, %12, !dbg !8977
  %13 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8978, !tbaa !2648
  %fm_length = getelementptr inbounds %struct.fiemap, %struct.fiemap* %13, i32 0, i32 1, !dbg !8979, !ctir !1482
  store i64 %sub, i64* %fm_length, align 8, !dbg !8980, !tbaa !3288, !ctir !1486
  %14 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8981, !tbaa !2648
  %fd = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %14, i32 0, i32 0, !dbg !8983, !ctir !1464
  %15 = load i32, i32* %fd, align 8, !dbg !8983, !tbaa !8912, !ctir !7
  %16 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8984, !tbaa !2648
  %call = call i32 (i32, i64, ...) @ioctl(i32 %15, i64 3223348747, %struct.fiemap* %16) #9, !dbg !8985
  %cmp = icmp slt i32 %call, 0, !dbg !8986
  br i1 %cmp, label %if.then, label %if.end7, !dbg !8987

if.then:                                          ; preds = %while.body
  %17 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8988, !tbaa !2648
  %scan_start4 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %17, i32 0, i32 1, !dbg !8991, !ctir !1464
  %18 = load i64, i64* %scan_start4, align 8, !dbg !8991, !tbaa !8922, !ctir !1460
  %cmp5 = icmp eq i64 %18, 0, !dbg !8992
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !8993

if.then6:                                         ; preds = %if.then
  %19 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8994, !tbaa !2648
  %initial_scan_failed = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %19, i32 0, i32 4, !dbg !8995, !ctir !1464
  store i8 1, i8* %initial_scan_failed, align 8, !dbg !8996, !tbaa !8032, !ctir !142
  br label %if.end, !dbg !8994

if.end:                                           ; preds = %if.then6, %if.then
  store i1 false, i1* %retval, align 1, !dbg !8997
  br label %return, !dbg !8997

if.end7:                                          ; preds = %while.body
  %20 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8998, !tbaa !2648
  %fm_mapped_extents = getelementptr inbounds %struct.fiemap, %struct.fiemap* %20, i32 0, i32 3, !dbg !9000, !ctir !1482
  %21 = load i32, i32* %fm_mapped_extents, align 4, !dbg !9000, !tbaa !2635, !ctir !1491
  %cmp8 = icmp eq i32 %21, 0, !dbg !9001
  br i1 %cmp8, label %if.then9, label %if.end12, !dbg !9002

if.then9:                                         ; preds = %if.end7
  %22 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9003, !tbaa !2648
  %hit_final_extent = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %22, i32 0, i32 5, !dbg !9005, !ctir !1464
  store i8 1, i8* %hit_final_extent, align 1, !dbg !9006, !tbaa !8026, !ctir !142
  %23 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9007, !tbaa !2648
  %scan_start10 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %23, i32 0, i32 1, !dbg !9008, !ctir !1464
  %24 = load i64, i64* %scan_start10, align 8, !dbg !9008, !tbaa !8922, !ctir !1460
  %cmp11 = icmp ne i64 %24, 0, !dbg !9009
  store i1 %cmp11, i1* %retval, align 1, !dbg !9010
  br label %return, !dbg !9010

if.end12:                                         ; preds = %if.end7
  %25 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9011, !tbaa !2648
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %25, i32 0, i32 3, !dbg !9011, !ctir !1464
  %26 = load i64, i64* %ei_count, align 8, !dbg !9011, !tbaa !8052, !ctir !55
  %27 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !9011, !tbaa !2648
  %fm_mapped_extents13 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %27, i32 0, i32 3, !dbg !9011, !ctir !1482
  %28 = load i32, i32* %fm_mapped_extents13, align 4, !dbg !9011, !tbaa !2635, !ctir !1491
  %conv = zext i32 %28 to i64, !dbg !9011
  %sub14 = sub i64 -1, %conv, !dbg !9011
  %cmp15 = icmp ule i64 %26, %sub14, !dbg !9011
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !9014

if.then17:                                        ; preds = %if.end12
  br label %if.end18, !dbg !9014

if.else:                                          ; preds = %if.end12
  call void @__assert_fail(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.188, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.189, i64 0, i64 0), i32 127, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__.extent_scan_read, i64 0, i64 0)) #13, !dbg !9011
  unreachable, !dbg !9011

if.end18:                                         ; preds = %if.then17
  %29 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !9015, !tbaa !2648
  %fm_mapped_extents19 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %29, i32 0, i32 3, !dbg !9016, !ctir !1482
  %30 = load i32, i32* %fm_mapped_extents19, align 4, !dbg !9016, !tbaa !2635, !ctir !1491
  %conv20 = zext i32 %30 to i64, !dbg !9015
  %31 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9017, !tbaa !2648
  %ei_count21 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %31, i32 0, i32 3, !dbg !9018, !ctir !1464
  %32 = load i64, i64* %ei_count21, align 8, !dbg !9019, !tbaa !8052, !ctir !55
  %add = add i64 %32, %conv20, !dbg !9019
  store i64 %add, i64* %ei_count21, align 8, !dbg !9019, !tbaa !8052, !ctir !55
  call void @llvm.dbg.declare(metadata i64* %prev_idx, metadata !9020, metadata !DIExpression()), !dbg !9022
  %33 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9023, !tbaa !2648
  %34 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9024, !tbaa !2648
  %ext_info22 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %34, i32 0, i32 6, !dbg !9025, !ctir !1464
  %35 = load %struct.extent_info*, %struct.extent_info** %ext_info22, align 8, !dbg !9025, !tbaa !8071, !ctir !1473
  %sub.ptr.lhs.cast = ptrtoint %struct.extent_info* %33 to i64, !dbg !9026
  %sub.ptr.rhs.cast = ptrtoint %struct.extent_info* %35 to i64, !dbg !9026
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9026
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 24, !dbg !9026
  store i64 %sub.ptr.div, i64* %prev_idx, align 8, !dbg !9022, !tbaa !3288
  %36 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9027, !tbaa !2648
  %ext_info23 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %36, i32 0, i32 6, !dbg !9028, !ctir !1464
  %37 = load %struct.extent_info*, %struct.extent_info** %ext_info23, align 8, !dbg !9028, !tbaa !8071, !ctir !1473
  %38 = bitcast %struct.extent_info* %37 to i8*, !dbg !9027
  %39 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9029, !tbaa !2648
  %ei_count24 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %39, i32 0, i32 3, !dbg !9030, !ctir !1464
  %40 = load i64, i64* %ei_count24, align 8, !dbg !9030, !tbaa !8052, !ctir !55
  %call25 = call i8* @xnrealloc(i8* %38, i64 %40, i64 24), !dbg !9031
  %41 = bitcast i8* %call25 to %struct.extent_info*, !dbg !9031
  %42 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9032, !tbaa !2648
  %ext_info26 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %42, i32 0, i32 6, !dbg !9033, !ctir !1464
  store %struct.extent_info* %41, %struct.extent_info** %ext_info26, align 8, !dbg !9034, !tbaa !8071, !ctir !1473
  %43 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9035, !tbaa !2648
  %ext_info27 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %43, i32 0, i32 6, !dbg !9036, !ctir !1464
  %44 = load %struct.extent_info*, %struct.extent_info** %ext_info27, align 8, !dbg !9036, !tbaa !8071, !ctir !1473
  %45 = load i64, i64* %prev_idx, align 8, !dbg !9037, !tbaa !3288
  %add.ptr = getelementptr inbounds %struct.extent_info, %struct.extent_info* %44, i64 %45, !dbg !9038
  store %struct.extent_info* %add.ptr, %struct.extent_info** %last_ei, align 8, !dbg !9039, !tbaa !2648
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9040, metadata !DIExpression()), !dbg !9041
  store i32 0, i32* %i, align 4, !dbg !9041, !tbaa !2635
  store i32 0, i32* %i, align 4, !dbg !9042, !tbaa !2635
  br label %for.cond, !dbg !9044

for.cond:                                         ; preds = %for.inc, %if.end18
  %46 = load i32, i32* %i, align 4, !dbg !9045, !tbaa !2635
  %47 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !9047, !tbaa !2648
  %fm_mapped_extents28 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %47, i32 0, i32 3, !dbg !9048, !ctir !1482
  %48 = load i32, i32* %fm_mapped_extents28, align 4, !dbg !9048, !tbaa !2635, !ctir !1491
  %cmp29 = icmp ult i32 %46, %48, !dbg !9049
  br i1 %cmp29, label %for.body, label %for.end, !dbg !9050

for.body:                                         ; preds = %for.cond
  %49 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9051, !tbaa !2648
  %50 = load i32, i32* %i, align 4, !dbg !9051, !tbaa !2635
  %idxprom = zext i32 %50 to i64, !dbg !9051
  %arrayidx31 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %49, i64 %idxprom, !dbg !9051, !ctir !1510
  %fe_logical = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx31, i32 0, i32 0, !dbg !9051, !ctir !1498
  %51 = load i64, i64* %fe_logical, align 8, !dbg !9051, !tbaa !9055, !ctir !1486
  %52 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9051, !tbaa !2648
  %53 = load i32, i32* %i, align 4, !dbg !9051, !tbaa !2635
  %idxprom32 = zext i32 %53 to i64, !dbg !9051
  %arrayidx33 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %52, i64 %idxprom32, !dbg !9051, !ctir !1510
  %fe_length = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx33, i32 0, i32 2, !dbg !9051, !ctir !1498
  %54 = load i64, i64* %fe_length, align 8, !dbg !9051, !tbaa !9057, !ctir !1486
  %sub34 = sub i64 9223372036854775807, %54, !dbg !9051
  %cmp35 = icmp ule i64 %51, %sub34, !dbg !9051
  br i1 %cmp35, label %if.then37, label %if.else38, !dbg !9058

if.then37:                                        ; preds = %for.body
  br label %if.end39, !dbg !9058

if.else38:                                        ; preds = %for.body
  call void @__assert_fail(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.2.190, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.189, i64 0, i64 0), i32 142, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__.extent_scan_read, i64 0, i64 0)) #13, !dbg !9051
  unreachable, !dbg !9051

if.end39:                                         ; preds = %if.then37
  %55 = load i32, i32* %si, align 4, !dbg !9059, !tbaa !2635
  %tobool = icmp ne i32 %55, 0, !dbg !9059
  br i1 %tobool, label %land.lhs.true, label %if.else61, !dbg !9061

land.lhs.true:                                    ; preds = %if.end39
  %56 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9062, !tbaa !2648
  %ext_flags = getelementptr inbounds %struct.extent_info, %struct.extent_info* %56, i32 0, i32 2, !dbg !9063, !ctir !1474
  %57 = load i32, i32* %ext_flags, align 8, !dbg !9063, !tbaa !9064, !ctir !70
  %58 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9065, !tbaa !2648
  %59 = load i32, i32* %i, align 4, !dbg !9066, !tbaa !2635
  %idxprom40 = zext i32 %59 to i64, !dbg !9065
  %arrayidx41 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %58, i64 %idxprom40, !dbg !9065, !ctir !1510
  %fe_flags = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx41, i32 0, i32 4, !dbg !9067, !ctir !1498
  %60 = load i32, i32* %fe_flags, align 8, !dbg !9067, !tbaa !9068, !ctir !1491
  %and = and i32 %60, -2, !dbg !9069
  %cmp42 = icmp eq i32 %57, %and, !dbg !9070
  br i1 %cmp42, label %land.lhs.true44, label %if.else61, !dbg !9071

land.lhs.true44:                                  ; preds = %land.lhs.true
  %61 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9072, !tbaa !2648
  %ext_logical = getelementptr inbounds %struct.extent_info, %struct.extent_info* %61, i32 0, i32 0, !dbg !9073, !ctir !1474
  %62 = load i64, i64* %ext_logical, align 8, !dbg !9073, !tbaa !8075, !ctir !1460
  %63 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9074, !tbaa !2648
  %ext_length = getelementptr inbounds %struct.extent_info, %struct.extent_info* %63, i32 0, i32 1, !dbg !9075, !ctir !1474
  %64 = load i64, i64* %ext_length, align 8, !dbg !9075, !tbaa !8082, !ctir !1460
  %add45 = add nsw i64 %62, %64, !dbg !9076
  %65 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9077, !tbaa !2648
  %66 = load i32, i32* %i, align 4, !dbg !9078, !tbaa !2635
  %idxprom46 = zext i32 %66 to i64, !dbg !9077
  %arrayidx47 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %65, i64 %idxprom46, !dbg !9077, !ctir !1510
  %fe_logical48 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx47, i32 0, i32 0, !dbg !9079, !ctir !1498
  %67 = load i64, i64* %fe_logical48, align 8, !dbg !9079, !tbaa !9055, !ctir !1486
  %cmp49 = icmp eq i64 %add45, %67, !dbg !9080
  br i1 %cmp49, label %if.then51, label %if.else61, !dbg !9081

if.then51:                                        ; preds = %land.lhs.true44
  %68 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9082, !tbaa !2648
  %69 = load i32, i32* %i, align 4, !dbg !9084, !tbaa !2635
  %idxprom52 = zext i32 %69 to i64, !dbg !9082
  %arrayidx53 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %68, i64 %idxprom52, !dbg !9082, !ctir !1510
  %fe_length54 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx53, i32 0, i32 2, !dbg !9085, !ctir !1498
  %70 = load i64, i64* %fe_length54, align 8, !dbg !9085, !tbaa !9057, !ctir !1486
  %71 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9086, !tbaa !2648
  %ext_length55 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %71, i32 0, i32 1, !dbg !9087, !ctir !1474
  %72 = load i64, i64* %ext_length55, align 8, !dbg !9088, !tbaa !8082, !ctir !1460
  %add56 = add i64 %72, %70, !dbg !9088
  store i64 %add56, i64* %ext_length55, align 8, !dbg !9088, !tbaa !8082, !ctir !1460
  %73 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9089, !tbaa !2648
  %74 = load i32, i32* %i, align 4, !dbg !9090, !tbaa !2635
  %idxprom57 = zext i32 %74 to i64, !dbg !9089
  %arrayidx58 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %73, i64 %idxprom57, !dbg !9089, !ctir !1510
  %fe_flags59 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx58, i32 0, i32 4, !dbg !9091, !ctir !1498
  %75 = load i32, i32* %fe_flags59, align 8, !dbg !9091, !tbaa !9068, !ctir !1491
  %76 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9092, !tbaa !2648
  %ext_flags60 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %76, i32 0, i32 2, !dbg !9093, !ctir !1474
  store i32 %75, i32* %ext_flags60, align 8, !dbg !9094, !tbaa !9064, !ctir !70
  br label %if.end131, !dbg !9095

if.else61:                                        ; preds = %land.lhs.true44, %land.lhs.true, %if.end39
  %77 = load i32, i32* %si, align 4, !dbg !9096, !tbaa !2635
  %cmp62 = icmp eq i32 %77, 0, !dbg !9098
  br i1 %cmp62, label %land.lhs.true64, label %lor.lhs.false, !dbg !9099

land.lhs.true64:                                  ; preds = %if.else61
  %78 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9100, !tbaa !2648
  %scan_start65 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %78, i32 0, i32 1, !dbg !9101, !ctir !1464
  %79 = load i64, i64* %scan_start65, align 8, !dbg !9101, !tbaa !8922, !ctir !1460
  %80 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9102, !tbaa !2648
  %81 = load i32, i32* %i, align 4, !dbg !9103, !tbaa !2635
  %idxprom66 = zext i32 %81 to i64, !dbg !9102
  %arrayidx67 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %80, i64 %idxprom66, !dbg !9102, !ctir !1510
  %fe_logical68 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx67, i32 0, i32 0, !dbg !9104, !ctir !1498
  %82 = load i64, i64* %fe_logical68, align 8, !dbg !9104, !tbaa !9055, !ctir !1486
  %cmp69 = icmp ugt i64 %79, %82, !dbg !9105
  br i1 %cmp69, label %if.then81, label %lor.lhs.false, !dbg !9106

lor.lhs.false:                                    ; preds = %land.lhs.true64, %if.else61
  %83 = load i32, i32* %si, align 4, !dbg !9107, !tbaa !2635
  %tobool71 = icmp ne i32 %83, 0, !dbg !9107
  br i1 %tobool71, label %land.lhs.true72, label %if.else115, !dbg !9108

land.lhs.true72:                                  ; preds = %lor.lhs.false
  %84 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9109, !tbaa !2648
  %ext_logical73 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %84, i32 0, i32 0, !dbg !9110, !ctir !1474
  %85 = load i64, i64* %ext_logical73, align 8, !dbg !9110, !tbaa !8075, !ctir !1460
  %86 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9111, !tbaa !2648
  %ext_length74 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %86, i32 0, i32 1, !dbg !9112, !ctir !1474
  %87 = load i64, i64* %ext_length74, align 8, !dbg !9112, !tbaa !8082, !ctir !1460
  %add75 = add nsw i64 %85, %87, !dbg !9113
  %88 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9114, !tbaa !2648
  %89 = load i32, i32* %i, align 4, !dbg !9115, !tbaa !2635
  %idxprom76 = zext i32 %89 to i64, !dbg !9114
  %arrayidx77 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %88, i64 %idxprom76, !dbg !9114, !ctir !1510
  %fe_logical78 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx77, i32 0, i32 0, !dbg !9116, !ctir !1498
  %90 = load i64, i64* %fe_logical78, align 8, !dbg !9116, !tbaa !9055, !ctir !1486
  %cmp79 = icmp ugt i64 %add75, %90, !dbg !9117
  br i1 %cmp79, label %if.then81, label %if.else115, !dbg !9118

if.then81:                                        ; preds = %land.lhs.true72, %land.lhs.true64
  call void @llvm.dbg.declare(metadata i64* %new_logical, metadata !9119, metadata !DIExpression()), !dbg !9121
  call void @llvm.dbg.declare(metadata i64* %length_adjust, metadata !9122, metadata !DIExpression()), !dbg !9123
  %91 = load i32, i32* %si, align 4, !dbg !9124, !tbaa !2635
  %cmp82 = icmp eq i32 %91, 0, !dbg !9126
  br i1 %cmp82, label %if.then84, label %if.else86, !dbg !9127

if.then84:                                        ; preds = %if.then81
  %92 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9128, !tbaa !2648
  %scan_start85 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %92, i32 0, i32 1, !dbg !9129, !ctir !1464
  %93 = load i64, i64* %scan_start85, align 8, !dbg !9129, !tbaa !8922, !ctir !1460
  store i64 %93, i64* %new_logical, align 8, !dbg !9130, !tbaa !3288
  br label %if.end90, !dbg !9131

if.else86:                                        ; preds = %if.then81
  %94 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9132, !tbaa !2648
  %ext_logical87 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %94, i32 0, i32 0, !dbg !9134, !ctir !1474
  %95 = load i64, i64* %ext_logical87, align 8, !dbg !9134, !tbaa !8075, !ctir !1460
  %96 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9135, !tbaa !2648
  %ext_length88 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %96, i32 0, i32 1, !dbg !9136, !ctir !1474
  %97 = load i64, i64* %ext_length88, align 8, !dbg !9136, !tbaa !8082, !ctir !1460
  %add89 = add nsw i64 %95, %97, !dbg !9137
  store i64 %add89, i64* %new_logical, align 8, !dbg !9138, !tbaa !3288
  br label %if.end90

if.end90:                                         ; preds = %if.else86, %if.then84
  %98 = load i64, i64* %new_logical, align 8, !dbg !9139, !tbaa !3288
  %99 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9140, !tbaa !2648
  %100 = load i32, i32* %i, align 4, !dbg !9141, !tbaa !2635
  %idxprom91 = zext i32 %100 to i64, !dbg !9140
  %arrayidx92 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %99, i64 %idxprom91, !dbg !9140, !ctir !1510
  %fe_logical93 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx92, i32 0, i32 0, !dbg !9142, !ctir !1498
  %101 = load i64, i64* %fe_logical93, align 8, !dbg !9142, !tbaa !9055, !ctir !1486
  %sub94 = sub i64 %98, %101, !dbg !9143
  store i64 %sub94, i64* %length_adjust, align 8, !dbg !9144, !tbaa !3288
  %102 = load i64, i64* %length_adjust, align 8, !dbg !9145, !tbaa !3288
  %103 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9147, !tbaa !2648
  %104 = load i32, i32* %i, align 4, !dbg !9148, !tbaa !2635
  %idxprom95 = zext i32 %104 to i64, !dbg !9147
  %arrayidx96 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %103, i64 %idxprom95, !dbg !9147, !ctir !1510
  %fe_length97 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx96, i32 0, i32 2, !dbg !9149, !ctir !1498
  %105 = load i64, i64* %fe_length97, align 8, !dbg !9149, !tbaa !9057, !ctir !1486
  %cmp98 = icmp ult i64 %102, %105, !dbg !9150
  br i1 %cmp98, label %if.then100, label %if.end107, !dbg !9151

if.then100:                                       ; preds = %if.end90
  %106 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9152, !tbaa !2648
  %scan_start101 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %106, i32 0, i32 1, !dbg !9155, !ctir !1464
  %107 = load i64, i64* %scan_start101, align 8, !dbg !9155, !tbaa !8922, !ctir !1460
  %cmp102 = icmp eq i64 %107, 0, !dbg !9156
  br i1 %cmp102, label %if.then104, label %if.end106, !dbg !9157

if.then104:                                       ; preds = %if.then100
  %108 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9158, !tbaa !2648
  %initial_scan_failed105 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %108, i32 0, i32 4, !dbg !9159, !ctir !1464
  store i8 1, i8* %initial_scan_failed105, align 8, !dbg !9160, !tbaa !8032, !ctir !142
  br label %if.end106, !dbg !9158

if.end106:                                        ; preds = %if.then104, %if.then100
  store i1 false, i1* %retval, align 1, !dbg !9161
  br label %return, !dbg !9161

if.end107:                                        ; preds = %if.end90
  %109 = load i64, i64* %new_logical, align 8, !dbg !9162, !tbaa !3288
  %110 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9163, !tbaa !2648
  %111 = load i32, i32* %i, align 4, !dbg !9164, !tbaa !2635
  %idxprom108 = zext i32 %111 to i64, !dbg !9163
  %arrayidx109 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %110, i64 %idxprom108, !dbg !9163, !ctir !1510
  %fe_logical110 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx109, i32 0, i32 0, !dbg !9165, !ctir !1498
  store i64 %109, i64* %fe_logical110, align 8, !dbg !9166, !tbaa !9055, !ctir !1486
  %112 = load i64, i64* %length_adjust, align 8, !dbg !9167, !tbaa !3288
  %113 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9168, !tbaa !2648
  %114 = load i32, i32* %i, align 4, !dbg !9169, !tbaa !2635
  %idxprom111 = zext i32 %114 to i64, !dbg !9168
  %arrayidx112 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %113, i64 %idxprom111, !dbg !9168, !ctir !1510
  %fe_length113 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx112, i32 0, i32 2, !dbg !9170, !ctir !1498
  %115 = load i64, i64* %fe_length113, align 8, !dbg !9171, !tbaa !9057, !ctir !1486
  %sub114 = sub i64 %115, %112, !dbg !9171
  store i64 %sub114, i64* %fe_length113, align 8, !dbg !9171, !tbaa !9057, !ctir !1486
  %116 = load i32, i32* %i, align 4, !dbg !9172, !tbaa !2635
  %dec = add i32 %116, -1, !dbg !9172
  store i32 %dec, i32* %i, align 4, !dbg !9172, !tbaa !2635
  br label %for.inc, !dbg !9173

if.else115:                                       ; preds = %land.lhs.true72, %lor.lhs.false
  %117 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9174, !tbaa !2648
  %ext_info116 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %117, i32 0, i32 6, !dbg !9176, !ctir !1464
  %118 = load %struct.extent_info*, %struct.extent_info** %ext_info116, align 8, !dbg !9176, !tbaa !8071, !ctir !1473
  %119 = load i32, i32* %si, align 4, !dbg !9177, !tbaa !2635
  %idx.ext = zext i32 %119 to i64, !dbg !9178
  %add.ptr117 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %118, i64 %idx.ext, !dbg !9178
  store %struct.extent_info* %add.ptr117, %struct.extent_info** %last_ei, align 8, !dbg !9179, !tbaa !2648
  %120 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9180, !tbaa !2648
  %121 = load i32, i32* %i, align 4, !dbg !9181, !tbaa !2635
  %idxprom118 = zext i32 %121 to i64, !dbg !9180
  %arrayidx119 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %120, i64 %idxprom118, !dbg !9180, !ctir !1510
  %fe_logical120 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx119, i32 0, i32 0, !dbg !9182, !ctir !1498
  %122 = load i64, i64* %fe_logical120, align 8, !dbg !9182, !tbaa !9055, !ctir !1486
  %123 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9183, !tbaa !2648
  %ext_logical121 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %123, i32 0, i32 0, !dbg !9184, !ctir !1474
  store i64 %122, i64* %ext_logical121, align 8, !dbg !9185, !tbaa !8075, !ctir !1460
  %124 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9186, !tbaa !2648
  %125 = load i32, i32* %i, align 4, !dbg !9187, !tbaa !2635
  %idxprom122 = zext i32 %125 to i64, !dbg !9186
  %arrayidx123 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %124, i64 %idxprom122, !dbg !9186, !ctir !1510
  %fe_length124 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx123, i32 0, i32 2, !dbg !9188, !ctir !1498
  %126 = load i64, i64* %fe_length124, align 8, !dbg !9188, !tbaa !9057, !ctir !1486
  %127 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9189, !tbaa !2648
  %ext_length125 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %127, i32 0, i32 1, !dbg !9190, !ctir !1474
  store i64 %126, i64* %ext_length125, align 8, !dbg !9191, !tbaa !8082, !ctir !1460
  %128 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9192, !tbaa !2648
  %129 = load i32, i32* %i, align 4, !dbg !9193, !tbaa !2635
  %idxprom126 = zext i32 %129 to i64, !dbg !9192
  %arrayidx127 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %128, i64 %idxprom126, !dbg !9192, !ctir !1510
  %fe_flags128 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx127, i32 0, i32 4, !dbg !9194, !ctir !1498
  %130 = load i32, i32* %fe_flags128, align 8, !dbg !9194, !tbaa !9068, !ctir !1491
  %131 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9195, !tbaa !2648
  %ext_flags129 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %131, i32 0, i32 2, !dbg !9196, !ctir !1474
  store i32 %130, i32* %ext_flags129, align 8, !dbg !9197, !tbaa !9064, !ctir !70
  %132 = load i32, i32* %si, align 4, !dbg !9198, !tbaa !2635
  %inc = add i32 %132, 1, !dbg !9198
  store i32 %inc, i32* %si, align 4, !dbg !9198, !tbaa !2635
  br label %if.end130

if.end130:                                        ; preds = %if.else115
  br label %if.end131

if.end131:                                        ; preds = %if.end130, %if.then51
  br label %for.inc, !dbg !9199

for.inc:                                          ; preds = %if.end131, %if.end107
  %133 = load i32, i32* %i, align 4, !dbg !9200, !tbaa !2635
  %inc132 = add i32 %133, 1, !dbg !9200
  store i32 %inc132, i32* %i, align 4, !dbg !9200, !tbaa !2635
  br label %for.cond, !dbg !9201, !llvm.loop !9202

for.end:                                          ; preds = %for.cond
  %134 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9204, !tbaa !2648
  %ext_flags133 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %134, i32 0, i32 2, !dbg !9206, !ctir !1474
  %135 = load i32, i32* %ext_flags133, align 8, !dbg !9206, !tbaa !9064, !ctir !70
  %and134 = and i32 %135, 1, !dbg !9207
  %tobool135 = icmp ne i32 %and134, 0, !dbg !9207
  br i1 %tobool135, label %if.then136, label %if.end138, !dbg !9208

if.then136:                                       ; preds = %for.end
  %136 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9209, !tbaa !2648
  %hit_final_extent137 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %136, i32 0, i32 5, !dbg !9210, !ctir !1464
  store i8 1, i8* %hit_final_extent137, align 1, !dbg !9211, !tbaa !8026, !ctir !142
  br label %if.end138, !dbg !9209

if.end138:                                        ; preds = %if.then136, %for.end
  %137 = load i32, i32* %si, align 4, !dbg !9212, !tbaa !2635
  %cmp139 = icmp ugt i32 %137, 72, !dbg !9214
  br i1 %cmp139, label %land.lhs.true141, label %if.end150, !dbg !9215

land.lhs.true141:                                 ; preds = %if.end138
  %138 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9216, !tbaa !2648
  %hit_final_extent142 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %138, i32 0, i32 5, !dbg !9217, !ctir !1464
  %139 = load i8, i8* %hit_final_extent142, align 1, !dbg !9217, !tbaa !8026
  %tobool143 = trunc i8 %139 to i1, !dbg !9217, !ctir !142
  br i1 %tobool143, label %if.end150, label %if.then144, !dbg !9218

if.then144:                                       ; preds = %land.lhs.true141
  %140 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9219, !tbaa !2648
  %ext_info145 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %140, i32 0, i32 6, !dbg !9220, !ctir !1464
  %141 = load %struct.extent_info*, %struct.extent_info** %ext_info145, align 8, !dbg !9220, !tbaa !8071, !ctir !1473
  %142 = load i32, i32* %si, align 4, !dbg !9221, !tbaa !2635
  %dec146 = add i32 %142, -1, !dbg !9221
  store i32 %dec146, i32* %si, align 4, !dbg !9221, !tbaa !2635
  %idx.ext147 = zext i32 %dec146 to i64, !dbg !9222
  %add.ptr148 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %141, i64 %idx.ext147, !dbg !9222
  %add.ptr149 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %add.ptr148, i64 -1, !dbg !9223
  store %struct.extent_info* %add.ptr149, %struct.extent_info** %last_ei, align 8, !dbg !9224, !tbaa !2648
  br label %if.end150, !dbg !9225

if.end150:                                        ; preds = %if.then144, %land.lhs.true141, %if.end138
  %143 = load i32, i32* %si, align 4, !dbg !9226, !tbaa !2635
  %conv151 = zext i32 %143 to i64, !dbg !9226
  %144 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9227, !tbaa !2648
  %ei_count152 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %144, i32 0, i32 3, !dbg !9228, !ctir !1464
  store i64 %conv151, i64* %ei_count152, align 8, !dbg !9229, !tbaa !8052, !ctir !55
  %145 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9230, !tbaa !2648
  %hit_final_extent153 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %145, i32 0, i32 5, !dbg !9232, !ctir !1464
  %146 = load i8, i8* %hit_final_extent153, align 1, !dbg !9232, !tbaa !8026
  %tobool154 = trunc i8 %146 to i1, !dbg !9232, !ctir !142
  br i1 %tobool154, label %if.then155, label %if.else156, !dbg !9233

if.then155:                                       ; preds = %if.end150
  br label %while.end, !dbg !9234

if.else156:                                       ; preds = %if.end150
  %147 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9235, !tbaa !2648
  %ext_logical157 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %147, i32 0, i32 0, !dbg !9236, !ctir !1474
  %148 = load i64, i64* %ext_logical157, align 8, !dbg !9236, !tbaa !8075, !ctir !1460
  %149 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9237, !tbaa !2648
  %ext_length158 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %149, i32 0, i32 1, !dbg !9238, !ctir !1474
  %150 = load i64, i64* %ext_length158, align 8, !dbg !9238, !tbaa !8082, !ctir !1460
  %add159 = add nsw i64 %148, %150, !dbg !9239
  %151 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9240, !tbaa !2648
  %scan_start160 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %151, i32 0, i32 1, !dbg !9241, !ctir !1464
  store i64 %add159, i64* %scan_start160, align 8, !dbg !9242, !tbaa !8922, !ctir !1460
  br label %if.end161

if.end161:                                        ; preds = %if.else156
  %152 = load i32, i32* %si, align 4, !dbg !9243, !tbaa !2635
  %cmp162 = icmp uge i32 %152, 72, !dbg !9245
  br i1 %cmp162, label %if.then164, label %if.end165, !dbg !9246

if.then164:                                       ; preds = %if.end161
  br label %while.end, !dbg !9247

if.end165:                                        ; preds = %if.end161
  br label %while.body, !dbg !8950, !llvm.loop !9248

while.end:                                        ; preds = %if.then164, %if.then155
  store i1 true, i1* %retval, align 1, !dbg !9250
  br label %return, !dbg !9250

return:                                           ; preds = %while.end, %if.end106, %if.then9, %if.end
  %153 = load i1, i1* %retval, align 1, !dbg !9251
  ret i1 %153, !dbg !9251
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @force_linkat(i32 %srcdir, i8* %srcname, i32 %dstdir, i8* %dstname, i32 %flags, i1 zeroext %force, i32 %linkat_errno) #4 !dbg !9252 !ctir !645 {
entry:
  %retval = alloca i32, align 4
  %srcdir.addr = alloca i32, align 4
  %srcname.addr = alloca i8*, align 8
  %dstdir.addr = alloca i32, align 4
  %dstname.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %force.addr = alloca i8, align 1
  %linkat_errno.addr = alloca i32, align 4
  %buf = alloca [256 x i8], align 16, !ctir !647
  %dsttmp = alloca i8*, align 8, !ctir !9
  %arg = alloca %struct.link_arg, align 8, !ctir !661
  %err = alloca i32, align 4, !ctir !7
  store i32 %srcdir, i32* %srcdir.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %srcdir.addr, metadata !9253, metadata !DIExpression()), !dbg !9254
  store i8* %srcname, i8** %srcname.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %srcname.addr, metadata !9255, metadata !DIExpression()), !dbg !9256
  store i32 %dstdir, i32* %dstdir.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %dstdir.addr, metadata !9257, metadata !DIExpression()), !dbg !9258
  store i8* %dstname, i8** %dstname.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dstname.addr, metadata !9259, metadata !DIExpression()), !dbg !9260
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !9261, metadata !DIExpression()), !dbg !9262
  %frombool = zext i1 %force to i8
  store i8 %frombool, i8* %force.addr, align 1, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %force.addr, metadata !9263, metadata !DIExpression()), !dbg !9264
  store i32 %linkat_errno, i32* %linkat_errno.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %linkat_errno.addr, metadata !9265, metadata !DIExpression()), !dbg !9266
  %0 = load i32, i32* %linkat_errno.addr, align 4, !dbg !9267, !tbaa !2635
  %cmp = icmp slt i32 %0, 0, !dbg !9269
  br i1 %cmp, label %if.then, label %if.end, !dbg !9270

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %srcdir.addr, align 4, !dbg !9271, !tbaa !2635
  %2 = load i8*, i8** %srcname.addr, align 8, !dbg !9272, !tbaa !2648
  %3 = load i32, i32* %dstdir.addr, align 4, !dbg !9273, !tbaa !2635
  %4 = load i8*, i8** %dstname.addr, align 8, !dbg !9274, !tbaa !2648
  %5 = load i32, i32* %flags.addr, align 4, !dbg !9275, !tbaa !2635
  %call = call i32 @linkat(i32 %1, i8* %2, i32 %3, i8* %4, i32 %5) #9, !dbg !9276
  %cmp1 = icmp eq i32 %call, 0, !dbg !9277
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !9276

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !9276

cond.false:                                       ; preds = %if.then
  %call2 = call i32* @__errno_location() #16, !dbg !9278
  %6 = load i32, i32* %call2, align 4, !dbg !9278, !tbaa !2635, !ctir !7
  br label %cond.end, !dbg !9276

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %6, %cond.false ], !dbg !9276
  store i32 %cond, i32* %linkat_errno.addr, align 4, !dbg !9279, !tbaa !2635
  br label %if.end, !dbg !9280

if.end:                                           ; preds = %cond.end, %entry
  %7 = load i8, i8* %force.addr, align 1, !dbg !9281, !tbaa !2742
  %tobool = trunc i8 %7 to i1, !dbg !9281
  br i1 %tobool, label %lor.lhs.false, label %if.then4, !dbg !9283

lor.lhs.false:                                    ; preds = %if.end
  %8 = load i32, i32* %linkat_errno.addr, align 4, !dbg !9284, !tbaa !2635
  %cmp3 = icmp ne i32 %8, 17, !dbg !9285
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !9286

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %9 = load i32, i32* %linkat_errno.addr, align 4, !dbg !9287, !tbaa !2635
  store i32 %9, i32* %retval, align 4, !dbg !9288
  br label %return, !dbg !9288

if.end5:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata [256 x i8]* %buf, metadata !9289, metadata !DIExpression()), !dbg !9290
  call void @llvm.dbg.declare(metadata i8** %dsttmp, metadata !9291, metadata !DIExpression()), !dbg !9292
  %10 = load i8*, i8** %dstname.addr, align 8, !dbg !9293, !tbaa !2648
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !9294
  %call6 = call i8* @samedir_template(i8* %10, i8* %arraydecay), !dbg !9295
  store i8* %call6, i8** %dsttmp, align 8, !dbg !9292, !tbaa !2648
  %11 = load i8*, i8** %dsttmp, align 8, !dbg !9296, !tbaa !2648
  %tobool7 = icmp ne i8* %11, null, !dbg !9296
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !9298

if.then8:                                         ; preds = %if.end5
  %call9 = call i32* @__errno_location() #16, !dbg !9299
  %12 = load i32, i32* %call9, align 4, !dbg !9299, !tbaa !2635, !ctir !7
  store i32 %12, i32* %retval, align 4, !dbg !9300
  br label %return, !dbg !9300

if.end10:                                         ; preds = %if.end5
  call void @llvm.dbg.declare(metadata %struct.link_arg* %arg, metadata !9301, metadata !DIExpression()), !dbg !9302
  %srcdir11 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 0, !dbg !9303
  %13 = load i32, i32* %srcdir.addr, align 4, !dbg !9304, !tbaa !2635
  store i32 %13, i32* %srcdir11, align 8, !dbg !9303, !tbaa !9305
  %srcname12 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 1, !dbg !9303
  %14 = load i8*, i8** %srcname.addr, align 8, !dbg !9307, !tbaa !2648
  store i8* %14, i8** %srcname12, align 8, !dbg !9303, !tbaa !9308
  %dstdir13 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 2, !dbg !9303
  %15 = load i32, i32* %dstdir.addr, align 4, !dbg !9309, !tbaa !2635
  store i32 %15, i32* %dstdir13, align 8, !dbg !9303, !tbaa !9310
  %flags14 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 3, !dbg !9303
  %16 = load i32, i32* %flags.addr, align 4, !dbg !9311, !tbaa !2635
  store i32 %16, i32* %flags14, align 4, !dbg !9303, !tbaa !9312
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9313, metadata !DIExpression()), !dbg !9314
  %17 = load i8*, i8** %dsttmp, align 8, !dbg !9315, !tbaa !2648
  %18 = bitcast %struct.link_arg* %arg to i8*, !dbg !9317
  %call15 = call i32 @try_tempname_len(i8* %17, i32 0, i8* %18, i32 (i8*, i8*)* @try_link, i64 6), !dbg !9318
  %cmp16 = icmp ne i32 %call15, 0, !dbg !9319
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !9320

if.then17:                                        ; preds = %if.end10
  %call18 = call i32* @__errno_location() #16, !dbg !9321
  %19 = load i32, i32* %call18, align 4, !dbg !9321, !tbaa !2635, !ctir !7
  store i32 %19, i32* %err, align 4, !dbg !9322, !tbaa !2635
  br label %if.end27, !dbg !9323

if.else:                                          ; preds = %if.end10
  %20 = load i32, i32* %dstdir.addr, align 4, !dbg !9324, !tbaa !2635
  %21 = load i8*, i8** %dsttmp, align 8, !dbg !9326, !tbaa !2648
  %22 = load i32, i32* %dstdir.addr, align 4, !dbg !9327, !tbaa !2635
  %23 = load i8*, i8** %dstname.addr, align 8, !dbg !9328, !tbaa !2648
  %call19 = call i32 @renameat(i32 %20, i8* %21, i32 %22, i8* %23) #9, !dbg !9329
  %cmp20 = icmp eq i32 %call19, 0, !dbg !9330
  br i1 %cmp20, label %cond.true21, label %cond.false22, !dbg !9329

cond.true21:                                      ; preds = %if.else
  br label %cond.end24, !dbg !9329

cond.false22:                                     ; preds = %if.else
  %call23 = call i32* @__errno_location() #16, !dbg !9331
  %24 = load i32, i32* %call23, align 4, !dbg !9331, !tbaa !2635, !ctir !7
  br label %cond.end24, !dbg !9329

cond.end24:                                       ; preds = %cond.false22, %cond.true21
  %cond25 = phi i32 [ -1, %cond.true21 ], [ %24, %cond.false22 ], !dbg !9329
  store i32 %cond25, i32* %err, align 4, !dbg !9332, !tbaa !2635
  %25 = load i32, i32* %dstdir.addr, align 4, !dbg !9333, !tbaa !2635
  %26 = load i8*, i8** %dsttmp, align 8, !dbg !9334, !tbaa !2648
  %call26 = call i32 @unlinkat(i32 %25, i8* %26, i32 0) #9, !dbg !9335
  br label %if.end27

if.end27:                                         ; preds = %cond.end24, %if.then17
  %27 = load i8*, i8** %dsttmp, align 8, !dbg !9336, !tbaa !2648
  %arraydecay28 = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !9338
  %cmp29 = icmp ne i8* %27, %arraydecay28, !dbg !9339
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !9340

if.then30:                                        ; preds = %if.end27
  %28 = load i8*, i8** %dsttmp, align 8, !dbg !9341, !tbaa !2648
  call void @free(i8* %28) #9, !dbg !9342
  br label %if.end31, !dbg !9342

if.end31:                                         ; preds = %if.then30, %if.end27
  %29 = load i32, i32* %err, align 4, !dbg !9343, !tbaa !2635
  store i32 %29, i32* %retval, align 4, !dbg !9344
  br label %return, !dbg !9344

return:                                           ; preds = %if.end31, %if.then8, %if.then4
  %30 = load i32, i32* %retval, align 4, !dbg !9345
  ret i32 %30, !dbg !9345
}

; Function Attrs: nounwind
declare dso_local i32 @linkat(i32, i8*, i32, i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @samedir_template(i8* %dstname, i8* %buf) #4 !dbg !9346 !ctir !652 {
entry:
  %retval = alloca i8*, align 8
  %dstname.addr = alloca i8*, align 8
  %buf.addr = alloca i8*, align 8
  %dstdirlen = alloca i64, align 8, !ctir !654
  %dsttmpsize = alloca i64, align 8, !ctir !55
  %dsttmp = alloca i8*, align 8, !ctir !9
  store i8* %dstname, i8** %dstname.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dstname.addr, metadata !9347, metadata !DIExpression()), !dbg !9348
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !9349, metadata !DIExpression()), !dbg !9350
  call void @llvm.dbg.declare(metadata i64* %dstdirlen, metadata !9351, metadata !DIExpression()), !dbg !9352
  %0 = load i8*, i8** %dstname.addr, align 8, !dbg !9353, !tbaa !2648
  %call = call i8* @last_component(i8* %0) #14, !dbg !9354
  %1 = load i8*, i8** %dstname.addr, align 8, !dbg !9355, !tbaa !2648
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !9356
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !9356
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9356
  store i64 %sub.ptr.sub, i64* %dstdirlen, align 8, !dbg !9352, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %dsttmpsize, metadata !9357, metadata !DIExpression()), !dbg !9358
  %2 = load i64, i64* %dstdirlen, align 8, !dbg !9359, !tbaa !3288
  %add = add i64 %2, 9, !dbg !9360
  store i64 %add, i64* %dsttmpsize, align 8, !dbg !9358, !tbaa !3288
  call void @llvm.dbg.declare(metadata i8** %dsttmp, metadata !9361, metadata !DIExpression()), !dbg !9362
  %3 = load i64, i64* %dsttmpsize, align 8, !dbg !9363, !tbaa !3288
  %cmp = icmp ule i64 %3, 256, !dbg !9365
  br i1 %cmp, label %if.then, label %if.else, !dbg !9366

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !9367, !tbaa !2648
  store i8* %4, i8** %dsttmp, align 8, !dbg !9368, !tbaa !2648
  br label %if.end3, !dbg !9369

if.else:                                          ; preds = %entry
  %5 = load i64, i64* %dsttmpsize, align 8, !dbg !9370, !tbaa !3288
  %call1 = call noalias i8* @malloc(i64 %5) #9, !dbg !9372
  store i8* %call1, i8** %dsttmp, align 8, !dbg !9373, !tbaa !2648
  %6 = load i8*, i8** %dsttmp, align 8, !dbg !9374, !tbaa !2648
  %tobool = icmp ne i8* %6, null, !dbg !9374
  br i1 %tobool, label %if.end, label %if.then2, !dbg !9376

if.then2:                                         ; preds = %if.else
  %7 = load i8*, i8** %dsttmp, align 8, !dbg !9377, !tbaa !2648
  store i8* %7, i8** %retval, align 8, !dbg !9378
  br label %return, !dbg !9378

if.end:                                           ; preds = %if.else
  br label %if.end3

if.end3:                                          ; preds = %if.end, %if.then
  %8 = load i8*, i8** %dsttmp, align 8, !dbg !9379, !tbaa !2648
  %9 = load i8*, i8** %dstname.addr, align 8, !dbg !9380, !tbaa !2648
  %10 = load i64, i64* %dstdirlen, align 8, !dbg !9381, !tbaa !3288
  %call4 = call i8* @mempcpy(i8* %8, i8* %9, i64 %10) #9, !dbg !9382
  %call5 = call i8* @strcpy(i8* %call4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @simple_pattern, i64 0, i64 0)) #9, !dbg !9383
  %11 = load i8*, i8** %dsttmp, align 8, !dbg !9384, !tbaa !2648
  store i8* %11, i8** %retval, align 8, !dbg !9385
  br label %return, !dbg !9385

return:                                           ; preds = %if.end3, %if.then2
  %12 = load i8*, i8** %retval, align 8, !dbg !9386
  ret i8* %12, !dbg !9386
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_link(i8* %dest, i8* %arg) #4 !dbg !9387 !ctir !658 {
entry:
  %dest.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %a = alloca %struct.link_arg*, align 8, !ctir !660
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !9388, metadata !DIExpression()), !dbg !9389
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !9390, metadata !DIExpression()), !dbg !9391
  call void @llvm.dbg.declare(metadata %struct.link_arg** %a, metadata !9392, metadata !DIExpression()), !dbg !9393
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !9394, !tbaa !2648
  %1 = bitcast i8* %0 to %struct.link_arg*, !dbg !9394
  store %struct.link_arg* %1, %struct.link_arg** %a, align 8, !dbg !9393, !tbaa !2648
  %2 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !9395, !tbaa !2648
  %srcdir = getelementptr inbounds %struct.link_arg, %struct.link_arg* %2, i32 0, i32 0, !dbg !9396, !ctir !661
  %3 = load i32, i32* %srcdir, align 8, !dbg !9396, !tbaa !9305, !ctir !7
  %4 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !9397, !tbaa !2648
  %srcname = getelementptr inbounds %struct.link_arg, %struct.link_arg* %4, i32 0, i32 1, !dbg !9398, !ctir !661
  %5 = load i8*, i8** %srcname, align 8, !dbg !9398, !tbaa !9308, !ctir !180
  %6 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !9399, !tbaa !2648
  %dstdir = getelementptr inbounds %struct.link_arg, %struct.link_arg* %6, i32 0, i32 2, !dbg !9400, !ctir !661
  %7 = load i32, i32* %dstdir, align 8, !dbg !9400, !tbaa !9310, !ctir !7
  %8 = load i8*, i8** %dest.addr, align 8, !dbg !9401, !tbaa !2648
  %9 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !9402, !tbaa !2648
  %flags = getelementptr inbounds %struct.link_arg, %struct.link_arg* %9, i32 0, i32 3, !dbg !9403, !ctir !661
  %10 = load i32, i32* %flags, align 4, !dbg !9403, !tbaa !9312, !ctir !7
  %call = call i32 @linkat(i32 %3, i8* %5, i32 %7, i8* %8, i32 %10) #9, !dbg !9404
  ret i32 %call, !dbg !9405
}

; Function Attrs: nounwind
declare dso_local i32 @renameat(i32, i8*, i32, i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @unlinkat(i32, i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @force_symlinkat(i8* %srcname, i32 %dstdir, i8* %dstname, i1 zeroext %force, i32 %symlinkat_errno) #4 !dbg !9406 !ctir !650 {
entry:
  %retval = alloca i32, align 4
  %srcname.addr = alloca i8*, align 8
  %dstdir.addr = alloca i32, align 4
  %dstname.addr = alloca i8*, align 8
  %force.addr = alloca i8, align 1
  %symlinkat_errno.addr = alloca i32, align 4
  %buf = alloca [256 x i8], align 16, !ctir !647
  %dsttmp = alloca i8*, align 8, !ctir !9
  %arg = alloca %struct.symlink_arg, align 8, !ctir !668
  %err = alloca i32, align 4, !ctir !7
  store i8* %srcname, i8** %srcname.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %srcname.addr, metadata !9407, metadata !DIExpression()), !dbg !9408
  store i32 %dstdir, i32* %dstdir.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %dstdir.addr, metadata !9409, metadata !DIExpression()), !dbg !9410
  store i8* %dstname, i8** %dstname.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dstname.addr, metadata !9411, metadata !DIExpression()), !dbg !9412
  %frombool = zext i1 %force to i8
  store i8 %frombool, i8* %force.addr, align 1, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %force.addr, metadata !9413, metadata !DIExpression()), !dbg !9414
  store i32 %symlinkat_errno, i32* %symlinkat_errno.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %symlinkat_errno.addr, metadata !9415, metadata !DIExpression()), !dbg !9416
  %0 = load i32, i32* %symlinkat_errno.addr, align 4, !dbg !9417, !tbaa !2635
  %cmp = icmp slt i32 %0, 0, !dbg !9419
  br i1 %cmp, label %if.then, label %if.end, !dbg !9420

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %srcname.addr, align 8, !dbg !9421, !tbaa !2648
  %2 = load i32, i32* %dstdir.addr, align 4, !dbg !9422, !tbaa !2635
  %3 = load i8*, i8** %dstname.addr, align 8, !dbg !9423, !tbaa !2648
  %call = call i32 @symlinkat(i8* %1, i32 %2, i8* %3) #9, !dbg !9424
  %cmp1 = icmp eq i32 %call, 0, !dbg !9425
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !9424

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !9424

cond.false:                                       ; preds = %if.then
  %call2 = call i32* @__errno_location() #16, !dbg !9426
  %4 = load i32, i32* %call2, align 4, !dbg !9426, !tbaa !2635, !ctir !7
  br label %cond.end, !dbg !9424

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %4, %cond.false ], !dbg !9424
  store i32 %cond, i32* %symlinkat_errno.addr, align 4, !dbg !9427, !tbaa !2635
  br label %if.end, !dbg !9428

if.end:                                           ; preds = %cond.end, %entry
  %5 = load i8, i8* %force.addr, align 1, !dbg !9429, !tbaa !2742
  %tobool = trunc i8 %5 to i1, !dbg !9429
  br i1 %tobool, label %lor.lhs.false, label %if.then4, !dbg !9431

lor.lhs.false:                                    ; preds = %if.end
  %6 = load i32, i32* %symlinkat_errno.addr, align 4, !dbg !9432, !tbaa !2635
  %cmp3 = icmp ne i32 %6, 17, !dbg !9433
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !9434

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %7 = load i32, i32* %symlinkat_errno.addr, align 4, !dbg !9435, !tbaa !2635
  store i32 %7, i32* %retval, align 4, !dbg !9436
  br label %return, !dbg !9436

if.end5:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata [256 x i8]* %buf, metadata !9437, metadata !DIExpression()), !dbg !9438
  call void @llvm.dbg.declare(metadata i8** %dsttmp, metadata !9439, metadata !DIExpression()), !dbg !9440
  %8 = load i8*, i8** %dstname.addr, align 8, !dbg !9441, !tbaa !2648
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !9442
  %call6 = call i8* @samedir_template(i8* %8, i8* %arraydecay), !dbg !9443
  store i8* %call6, i8** %dsttmp, align 8, !dbg !9440, !tbaa !2648
  %9 = load i8*, i8** %dsttmp, align 8, !dbg !9444, !tbaa !2648
  %tobool7 = icmp ne i8* %9, null, !dbg !9444
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !9446

if.then8:                                         ; preds = %if.end5
  %call9 = call i32* @__errno_location() #16, !dbg !9447
  %10 = load i32, i32* %call9, align 4, !dbg !9447, !tbaa !2635, !ctir !7
  store i32 %10, i32* %retval, align 4, !dbg !9448
  br label %return, !dbg !9448

if.end10:                                         ; preds = %if.end5
  call void @llvm.dbg.declare(metadata %struct.symlink_arg* %arg, metadata !9449, metadata !DIExpression()), !dbg !9450
  %srcname11 = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %arg, i32 0, i32 0, !dbg !9451
  %11 = load i8*, i8** %srcname.addr, align 8, !dbg !9452, !tbaa !2648
  store i8* %11, i8** %srcname11, align 8, !dbg !9451, !tbaa !9453
  %dstdir12 = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %arg, i32 0, i32 1, !dbg !9451
  %12 = load i32, i32* %dstdir.addr, align 4, !dbg !9455, !tbaa !2635
  store i32 %12, i32* %dstdir12, align 8, !dbg !9451, !tbaa !9456
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9457, metadata !DIExpression()), !dbg !9458
  %13 = load i8*, i8** %dsttmp, align 8, !dbg !9459, !tbaa !2648
  %14 = bitcast %struct.symlink_arg* %arg to i8*, !dbg !9461
  %call13 = call i32 @try_tempname_len(i8* %13, i32 0, i8* %14, i32 (i8*, i8*)* @try_symlink, i64 6), !dbg !9462
  %cmp14 = icmp ne i32 %call13, 0, !dbg !9463
  br i1 %cmp14, label %if.then15, label %if.else, !dbg !9464

if.then15:                                        ; preds = %if.end10
  %call16 = call i32* @__errno_location() #16, !dbg !9465
  %15 = load i32, i32* %call16, align 4, !dbg !9465, !tbaa !2635, !ctir !7
  store i32 %15, i32* %err, align 4, !dbg !9466, !tbaa !2635
  br label %if.end24, !dbg !9467

if.else:                                          ; preds = %if.end10
  %16 = load i32, i32* %dstdir.addr, align 4, !dbg !9468, !tbaa !2635
  %17 = load i8*, i8** %dsttmp, align 8, !dbg !9470, !tbaa !2648
  %18 = load i32, i32* %dstdir.addr, align 4, !dbg !9471, !tbaa !2635
  %19 = load i8*, i8** %dstname.addr, align 8, !dbg !9472, !tbaa !2648
  %call17 = call i32 @renameat(i32 %16, i8* %17, i32 %18, i8* %19) #9, !dbg !9473
  %cmp18 = icmp ne i32 %call17, 0, !dbg !9474
  br i1 %cmp18, label %if.then19, label %if.else22, !dbg !9475

if.then19:                                        ; preds = %if.else
  %call20 = call i32* @__errno_location() #16, !dbg !9476
  %20 = load i32, i32* %call20, align 4, !dbg !9476, !tbaa !2635, !ctir !7
  store i32 %20, i32* %err, align 4, !dbg !9478, !tbaa !2635
  %21 = load i32, i32* %dstdir.addr, align 4, !dbg !9479, !tbaa !2635
  %22 = load i8*, i8** %dsttmp, align 8, !dbg !9480, !tbaa !2648
  %call21 = call i32 @unlinkat(i32 %21, i8* %22, i32 0) #9, !dbg !9481
  br label %if.end23, !dbg !9482

if.else22:                                        ; preds = %if.else
  store i32 -1, i32* %err, align 4, !dbg !9483, !tbaa !2635
  br label %if.end23

if.end23:                                         ; preds = %if.else22, %if.then19
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then15
  %23 = load i8*, i8** %dsttmp, align 8, !dbg !9485, !tbaa !2648
  %arraydecay25 = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !9487
  %cmp26 = icmp ne i8* %23, %arraydecay25, !dbg !9488
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !9489

if.then27:                                        ; preds = %if.end24
  %24 = load i8*, i8** %dsttmp, align 8, !dbg !9490, !tbaa !2648
  call void @free(i8* %24) #9, !dbg !9491
  br label %if.end28, !dbg !9491

if.end28:                                         ; preds = %if.then27, %if.end24
  %25 = load i32, i32* %err, align 4, !dbg !9492, !tbaa !2635
  store i32 %25, i32* %retval, align 4, !dbg !9493
  br label %return, !dbg !9493

return:                                           ; preds = %if.end28, %if.then8, %if.then4
  %26 = load i32, i32* %retval, align 4, !dbg !9494
  ret i32 %26, !dbg !9494
}

; Function Attrs: nounwind
declare dso_local i32 @symlinkat(i8*, i32, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_symlink(i8* %dest, i8* %arg) #4 !dbg !9495 !ctir !658 {
entry:
  %dest.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %a = alloca %struct.symlink_arg*, align 8, !ctir !667
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !9496, metadata !DIExpression()), !dbg !9497
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !9498, metadata !DIExpression()), !dbg !9499
  call void @llvm.dbg.declare(metadata %struct.symlink_arg** %a, metadata !9500, metadata !DIExpression()), !dbg !9501
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !9502, !tbaa !2648
  %1 = bitcast i8* %0 to %struct.symlink_arg*, !dbg !9502
  store %struct.symlink_arg* %1, %struct.symlink_arg** %a, align 8, !dbg !9501, !tbaa !2648
  %2 = load %struct.symlink_arg*, %struct.symlink_arg** %a, align 8, !dbg !9503, !tbaa !2648
  %srcname = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %2, i32 0, i32 0, !dbg !9504, !ctir !668
  %3 = load i8*, i8** %srcname, align 8, !dbg !9504, !tbaa !9453, !ctir !180
  %4 = load %struct.symlink_arg*, %struct.symlink_arg** %a, align 8, !dbg !9505, !tbaa !2648
  %dstdir = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %4, i32 0, i32 1, !dbg !9506, !ctir !668
  %5 = load i32, i32* %dstdir, align 8, !dbg !9506, !tbaa !9456, !ctir !7
  %6 = load i8*, i8** %dest.addr, align 8, !dbg !9507, !tbaa !2648
  %call = call i32 @symlinkat(i8* %3, i32 %5, i8* %6) #9, !dbg !9508
  ret i32 %call, !dbg !9509
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @copy_acl(i8* %src_name, i32 %source_desc, i8* %dst_name, i32 %dest_desc, i32 %mode) #4 !dbg !9510 !ctir !1516 {
entry:
  %src_name.addr = alloca i8*, align 8
  %source_desc.addr = alloca i32, align 4
  %dst_name.addr = alloca i8*, align 8
  %dest_desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ret = alloca i32, align 4, !ctir !7
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !9512, metadata !DIExpression()), !dbg !9513
  store i32 %source_desc, i32* %source_desc.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %source_desc.addr, metadata !9514, metadata !DIExpression()), !dbg !9515
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !9516, metadata !DIExpression()), !dbg !9517
  store i32 %dest_desc, i32* %dest_desc.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !9518, metadata !DIExpression()), !dbg !9519
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !9520, metadata !DIExpression()), !dbg !9521
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9522, metadata !DIExpression()), !dbg !9523
  %0 = load i8*, i8** %src_name.addr, align 8, !dbg !9524, !tbaa !2648
  %1 = load i32, i32* %source_desc.addr, align 4, !dbg !9525, !tbaa !2635
  %2 = load i8*, i8** %dst_name.addr, align 8, !dbg !9526, !tbaa !2648
  %3 = load i32, i32* %dest_desc.addr, align 4, !dbg !9527, !tbaa !2635
  %4 = load i32, i32* %mode.addr, align 4, !dbg !9528, !tbaa !2635
  %call = call i32 @qcopy_acl(i8* %0, i32 %1, i8* %2, i32 %3, i32 %4), !dbg !9529
  store i32 %call, i32* %ret, align 4, !dbg !9523, !tbaa !2635
  %5 = load i32, i32* %ret, align 4, !dbg !9530, !tbaa !2635
  switch i32 %5, label %sw.default [
    i32 -2, label %sw.bb
    i32 -1, label %sw.bb3
  ], !dbg !9531

sw.bb:                                            ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !9532
  %6 = load i32, i32* %call1, align 4, !dbg !9532, !tbaa !2635, !ctir !7
  %7 = load i8*, i8** %src_name.addr, align 8, !dbg !9534, !tbaa !2648
  %call2 = call i8* @quote(i8* %7), !dbg !9535
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.200, i64 0, i64 0), i8* %call2), !dbg !9536
  br label %sw.epilog, !dbg !9537

sw.bb3:                                           ; preds = %entry
  %call4 = call i32* @__errno_location() #16, !dbg !9538
  %8 = load i32, i32* %call4, align 4, !dbg !9538, !tbaa !2635, !ctir !7
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1.201, i64 0, i64 0)) #9, !dbg !9539
  %9 = load i8*, i8** %dst_name.addr, align 8, !dbg !9540, !tbaa !2648
  %call6 = call i8* @quote(i8* %9), !dbg !9541
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %8, i8* %call5, i8* %call6), !dbg !9542
  br label %sw.epilog, !dbg !9543

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !9544

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb
  %10 = load i32, i32* %ret, align 4, !dbg !9545, !tbaa !2635
  ret i32 %10, !dbg !9546
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_acl(i8* %name, i32 %desc, i32 %mode) #4 !dbg !9547 !ctir !1521 {
entry:
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ret = alloca i32, align 4, !ctir !7
  store i8* %name, i8** %name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9549, metadata !DIExpression()), !dbg !9550
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !9551, metadata !DIExpression()), !dbg !9552
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !9553, metadata !DIExpression()), !dbg !9554
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9555, metadata !DIExpression()), !dbg !9556
  %0 = load i8*, i8** %name.addr, align 8, !dbg !9557, !tbaa !2648
  %1 = load i32, i32* %desc.addr, align 4, !dbg !9558, !tbaa !2635
  %2 = load i32, i32* %mode.addr, align 4, !dbg !9559, !tbaa !2635
  %call = call i32 @qset_acl(i8* %0, i32 %1, i32 %2), !dbg !9560
  store i32 %call, i32* %ret, align 4, !dbg !9556, !tbaa !2635
  %3 = load i32, i32* %ret, align 4, !dbg !9561, !tbaa !2635
  %cmp = icmp ne i32 %3, 0, !dbg !9563
  br i1 %cmp, label %if.then, label %if.end, !dbg !9564

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !9565
  %4 = load i32, i32* %call1, align 4, !dbg !9565, !tbaa !2635, !ctir !7
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.204, i64 0, i64 0)) #9, !dbg !9566
  %5 = load i8*, i8** %name.addr, align 8, !dbg !9567, !tbaa !2648
  %call3 = call i8* @quote(i8* %5), !dbg !9568
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %4, i8* %call2, i8* %call3), !dbg !9569
  br label %if.end, !dbg !9569

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %ret, align 4, !dbg !9570, !tbaa !2635
  ret i32 %6, !dbg !9571
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @areadlink_with_size(i8* %file, i64 %size) #4 !dbg !9572 !ctir !1076 {
entry:
  %retval = alloca i8*, align 8
  %file.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %symlink_max = alloca i64, align 8, !ctir !55
  %INITIAL_LIMIT_BOUND = alloca i64, align 8, !ctir !55
  %initial_limit = alloca i64, align 8, !ctir !55
  %buf_size = alloca i64, align 8, !ctir !55
  %r = alloca i64, align 8, !ctir !694
  %link_length = alloca i64, align 8, !ctir !55
  %stackbuf = alloca [128 x i8], align 16, !ctir !1526
  %buf = alloca i8*, align 8, !ctir !9
  %buffer = alloca i8*, align 8, !ctir !9
  %saved_errno = alloca i32, align 4, !ctir !7
  %shrinked_buffer = alloca i8*, align 8, !ctir !9
  store i8* %file, i8** %file.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9574, metadata !DIExpression()), !dbg !9575
  store i64 %size, i64* %size.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9576, metadata !DIExpression()), !dbg !9577
  call void @llvm.dbg.declare(metadata i64* %symlink_max, metadata !9578, metadata !DIExpression()), !dbg !9579
  store i64 1024, i64* %symlink_max, align 8, !dbg !9579, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %INITIAL_LIMIT_BOUND, metadata !9580, metadata !DIExpression()), !dbg !9581
  store i64 8192, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !9581, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %initial_limit, metadata !9582, metadata !DIExpression()), !dbg !9583
  %0 = load i64, i64* %symlink_max, align 8, !dbg !9584, !tbaa !3288
  %1 = load i64, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !9585, !tbaa !3288
  %cmp = icmp ult i64 %0, %1, !dbg !9586
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9584

cond.true:                                        ; preds = %entry
  %2 = load i64, i64* %symlink_max, align 8, !dbg !9587, !tbaa !3288
  %add = add i64 %2, 1, !dbg !9588
  br label %cond.end, !dbg !9584

cond.false:                                       ; preds = %entry
  %3 = load i64, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !9589, !tbaa !3288
  br label %cond.end, !dbg !9584

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %add, %cond.true ], [ %3, %cond.false ], !dbg !9584
  store i64 %cond, i64* %initial_limit, align 8, !dbg !9583, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %buf_size, metadata !9590, metadata !DIExpression()), !dbg !9591
  %4 = load i64, i64* %size.addr, align 8, !dbg !9592, !tbaa !3288
  %cmp1 = icmp eq i64 %4, 0, !dbg !9593
  br i1 %cmp1, label %cond.true2, label %cond.false3, !dbg !9592

cond.true2:                                       ; preds = %cond.end
  br label %cond.end10, !dbg !9592

cond.false3:                                      ; preds = %cond.end
  %5 = load i64, i64* %size.addr, align 8, !dbg !9594, !tbaa !3288
  %6 = load i64, i64* %initial_limit, align 8, !dbg !9595, !tbaa !3288
  %cmp4 = icmp ult i64 %5, %6, !dbg !9596
  br i1 %cmp4, label %cond.true5, label %cond.false7, !dbg !9594

cond.true5:                                       ; preds = %cond.false3
  %7 = load i64, i64* %size.addr, align 8, !dbg !9597, !tbaa !3288
  %add6 = add i64 %7, 1, !dbg !9598
  br label %cond.end8, !dbg !9594

cond.false7:                                      ; preds = %cond.false3
  %8 = load i64, i64* %initial_limit, align 8, !dbg !9599, !tbaa !3288
  br label %cond.end8, !dbg !9594

cond.end8:                                        ; preds = %cond.false7, %cond.true5
  %cond9 = phi i64 [ %add6, %cond.true5 ], [ %8, %cond.false7 ], !dbg !9594
  br label %cond.end10, !dbg !9592

cond.end10:                                       ; preds = %cond.end8, %cond.true2
  %cond11 = phi i64 [ 128, %cond.true2 ], [ %cond9, %cond.end8 ], !dbg !9592
  store i64 %cond11, i64* %buf_size, align 8, !dbg !9591, !tbaa !3288
  br label %while.body, !dbg !9600

while.body:                                       ; preds = %cond.end10, %if.end54
  call void @llvm.dbg.declare(metadata i64* %r, metadata !9601, metadata !DIExpression()), !dbg !9603
  call void @llvm.dbg.declare(metadata i64* %link_length, metadata !9604, metadata !DIExpression()), !dbg !9605
  call void @llvm.dbg.declare(metadata [128 x i8]* %stackbuf, metadata !9606, metadata !DIExpression()), !dbg !9607
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !9608, metadata !DIExpression()), !dbg !9609
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %stackbuf, i64 0, i64 0, !dbg !9610
  store i8* %arraydecay, i8** %buf, align 8, !dbg !9609, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %buffer, metadata !9611, metadata !DIExpression()), !dbg !9612
  store i8* null, i8** %buffer, align 8, !dbg !9612, !tbaa !2648
  %9 = load i64, i64* %size.addr, align 8, !dbg !9613, !tbaa !3288
  %cmp12 = icmp eq i64 %9, 0, !dbg !9615
  br i1 %cmp12, label %land.lhs.true, label %if.then, !dbg !9616

land.lhs.true:                                    ; preds = %while.body
  %10 = load i64, i64* %buf_size, align 8, !dbg !9617, !tbaa !3288
  %cmp13 = icmp eq i64 %10, 128, !dbg !9618
  br i1 %cmp13, label %if.end15, label %if.then, !dbg !9619

if.then:                                          ; preds = %land.lhs.true, %while.body
  %11 = load i64, i64* %buf_size, align 8, !dbg !9620, !tbaa !3288
  %call = call noalias i8* @malloc(i64 %11) #9, !dbg !9622
  store i8* %call, i8** %buffer, align 8, !dbg !9623, !tbaa !2648
  store i8* %call, i8** %buf, align 8, !dbg !9624, !tbaa !2648
  %12 = load i8*, i8** %buffer, align 8, !dbg !9625, !tbaa !2648
  %tobool = icmp ne i8* %12, null, !dbg !9625
  br i1 %tobool, label %if.end, label %if.then14, !dbg !9627

if.then14:                                        ; preds = %if.then
  store i8* null, i8** %retval, align 8, !dbg !9628
  br label %return, !dbg !9628

if.end:                                           ; preds = %if.then
  br label %if.end15, !dbg !9629

if.end15:                                         ; preds = %if.end, %land.lhs.true
  %13 = load i8*, i8** %file.addr, align 8, !dbg !9630, !tbaa !2648
  %14 = load i8*, i8** %buf, align 8, !dbg !9631, !tbaa !2648
  %15 = load i64, i64* %buf_size, align 8, !dbg !9632, !tbaa !3288
  %call16 = call i64 @readlink(i8* %13, i8* %14, i64 %15) #9, !dbg !9633
  store i64 %call16, i64* %r, align 8, !dbg !9634, !tbaa !3288
  %16 = load i64, i64* %r, align 8, !dbg !9635, !tbaa !3288
  store i64 %16, i64* %link_length, align 8, !dbg !9636, !tbaa !3288
  %17 = load i64, i64* %r, align 8, !dbg !9637, !tbaa !3288
  %cmp17 = icmp slt i64 %17, 0, !dbg !9639
  br i1 %cmp17, label %land.lhs.true18, label %if.end24, !dbg !9640

land.lhs.true18:                                  ; preds = %if.end15
  %call19 = call i32* @__errno_location() #16, !dbg !9641
  %18 = load i32, i32* %call19, align 4, !dbg !9641, !tbaa !2635, !ctir !7
  %cmp20 = icmp ne i32 %18, 34, !dbg !9642
  br i1 %cmp20, label %if.then21, label %if.end24, !dbg !9643

if.then21:                                        ; preds = %land.lhs.true18
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !9644, metadata !DIExpression()), !dbg !9646
  %call22 = call i32* @__errno_location() #16, !dbg !9647
  %19 = load i32, i32* %call22, align 4, !dbg !9647, !tbaa !2635, !ctir !7
  store i32 %19, i32* %saved_errno, align 4, !dbg !9646, !tbaa !2635
  %20 = load i8*, i8** %buffer, align 8, !dbg !9648, !tbaa !2648
  call void @free(i8* %20) #9, !dbg !9649
  %21 = load i32, i32* %saved_errno, align 4, !dbg !9650, !tbaa !2635
  %call23 = call i32* @__errno_location() #16, !dbg !9651
  store i32 %21, i32* %call23, align 4, !dbg !9652, !tbaa !2635, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !9653
  br label %return, !dbg !9653

if.end24:                                         ; preds = %land.lhs.true18, %if.end15
  %22 = load i64, i64* %link_length, align 8, !dbg !9654, !tbaa !3288
  %23 = load i64, i64* %buf_size, align 8, !dbg !9656, !tbaa !3288
  %cmp25 = icmp ult i64 %22, %23, !dbg !9657
  br i1 %cmp25, label %if.then26, label %if.end45, !dbg !9658

if.then26:                                        ; preds = %if.end24
  %24 = load i8*, i8** %buf, align 8, !dbg !9659, !tbaa !2648
  %25 = load i64, i64* %link_length, align 8, !dbg !9661, !tbaa !3288
  %arrayidx = getelementptr inbounds i8, i8* %24, i64 %25, !dbg !9659, !ctir !9
  store i8 0, i8* %arrayidx, align 1, !dbg !9662, !tbaa !3295
  %26 = load i8*, i8** %buffer, align 8, !dbg !9663, !tbaa !2648
  %tobool27 = icmp ne i8* %26, null, !dbg !9663
  br i1 %tobool27, label %if.else, label %if.then28, !dbg !9665

if.then28:                                        ; preds = %if.then26
  %27 = load i64, i64* %link_length, align 8, !dbg !9666, !tbaa !3288
  %add29 = add i64 %27, 1, !dbg !9668
  %call30 = call noalias i8* @malloc(i64 %add29) #9, !dbg !9669
  store i8* %call30, i8** %buffer, align 8, !dbg !9670, !tbaa !2648
  %28 = load i8*, i8** %buffer, align 8, !dbg !9671, !tbaa !2648
  %tobool31 = icmp ne i8* %28, null, !dbg !9671
  br i1 %tobool31, label %if.then32, label %if.end34, !dbg !9673

if.then32:                                        ; preds = %if.then28
  %29 = load i8*, i8** %buffer, align 8, !dbg !9674, !tbaa !2648
  %30 = load i8*, i8** %buf, align 8, !dbg !9675, !tbaa !2648
  %31 = load i64, i64* %link_length, align 8, !dbg !9676, !tbaa !3288
  %add33 = add i64 %31, 1, !dbg !9677
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %29, i8* align 1 %30, i64 %add33, i1 false), !dbg !9678
  store i8* %29, i8** %retval, align 8, !dbg !9679
  br label %return, !dbg !9679

if.end34:                                         ; preds = %if.then28
  br label %if.end44, !dbg !9680

if.else:                                          ; preds = %if.then26
  %32 = load i64, i64* %link_length, align 8, !dbg !9681, !tbaa !3288
  %add35 = add i64 %32, 1, !dbg !9683
  %33 = load i64, i64* %buf_size, align 8, !dbg !9684, !tbaa !3288
  %cmp36 = icmp ult i64 %add35, %33, !dbg !9685
  br i1 %cmp36, label %if.then37, label %if.end43, !dbg !9686

if.then37:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i8** %shrinked_buffer, metadata !9687, metadata !DIExpression()), !dbg !9689
  %34 = load i8*, i8** %buffer, align 8, !dbg !9690, !tbaa !2648
  %35 = load i64, i64* %link_length, align 8, !dbg !9691, !tbaa !3288
  %add38 = add i64 %35, 1, !dbg !9692
  %call39 = call i8* @realloc(i8* %34, i64 %add38) #9, !dbg !9693
  store i8* %call39, i8** %shrinked_buffer, align 8, !dbg !9689, !tbaa !2648
  %36 = load i8*, i8** %shrinked_buffer, align 8, !dbg !9694, !tbaa !2648
  %cmp40 = icmp ne i8* %36, null, !dbg !9696
  br i1 %cmp40, label %if.then41, label %if.end42, !dbg !9697

if.then41:                                        ; preds = %if.then37
  %37 = load i8*, i8** %shrinked_buffer, align 8, !dbg !9698, !tbaa !2648
  store i8* %37, i8** %buffer, align 8, !dbg !9699, !tbaa !2648
  br label %if.end42, !dbg !9700

if.end42:                                         ; preds = %if.then41, %if.then37
  br label %if.end43, !dbg !9701

if.end43:                                         ; preds = %if.end42, %if.else
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end34
  %38 = load i8*, i8** %buffer, align 8, !dbg !9702, !tbaa !2648
  store i8* %38, i8** %retval, align 8, !dbg !9703
  br label %return, !dbg !9703

if.end45:                                         ; preds = %if.end24
  %39 = load i8*, i8** %buffer, align 8, !dbg !9704, !tbaa !2648
  call void @free(i8* %39) #9, !dbg !9705
  %40 = load i64, i64* %buf_size, align 8, !dbg !9706, !tbaa !3288
  %cmp46 = icmp ule i64 %40, 4611686018427387903, !dbg !9708
  br i1 %cmp46, label %if.then47, label %if.else48, !dbg !9709

if.then47:                                        ; preds = %if.end45
  %41 = load i64, i64* %buf_size, align 8, !dbg !9710, !tbaa !3288
  %mul = mul i64 %41, 2, !dbg !9710
  store i64 %mul, i64* %buf_size, align 8, !dbg !9710, !tbaa !3288
  br label %if.end54, !dbg !9711

if.else48:                                        ; preds = %if.end45
  %42 = load i64, i64* %buf_size, align 8, !dbg !9712, !tbaa !3288
  %cmp49 = icmp ult i64 %42, 9223372036854775807, !dbg !9714
  br i1 %cmp49, label %if.then50, label %if.else51, !dbg !9715

if.then50:                                        ; preds = %if.else48
  store i64 9223372036854775807, i64* %buf_size, align 8, !dbg !9716, !tbaa !3288
  br label %if.end53, !dbg !9717

if.else51:                                        ; preds = %if.else48
  %call52 = call i32* @__errno_location() #16, !dbg !9718
  store i32 12, i32* %call52, align 4, !dbg !9720, !tbaa !2635, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !9721
  br label %return, !dbg !9721

if.end53:                                         ; preds = %if.then50
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then47
  br label %while.body, !dbg !9600, !llvm.loop !9722

return:                                           ; preds = %if.else51, %if.end44, %if.then32, %if.then21, %if.then14
  %43 = load i8*, i8** %retval, align 8, !dbg !9724
  ret i8* %43, !dbg !9724
}

; Function Attrs: nounwind
declare dso_local i64 @readlink(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_simple_backup_suffix(i8* %s) #4 !dbg !9725 !ctir !202 {
entry:
  %s.addr = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !9726, metadata !DIExpression()), !dbg !9727
  %0 = load i8*, i8** %s.addr, align 8, !dbg !9728, !tbaa !2648
  %tobool = icmp ne i8* %0, null, !dbg !9728
  br i1 %tobool, label %if.end, label %if.then, !dbg !9730

if.then:                                          ; preds = %entry
  %call = call i8* @getenv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.211, i64 0, i64 0)) #9, !dbg !9731
  store i8* %call, i8** %s.addr, align 8, !dbg !9732, !tbaa !2648
  br label %if.end, !dbg !9733

if.end:                                           ; preds = %if.then, %entry
  %1 = load i8*, i8** %s.addr, align 8, !dbg !9734, !tbaa !2648
  %tobool1 = icmp ne i8* %1, null, !dbg !9734
  br i1 %tobool1, label %land.lhs.true, label %cond.false, !dbg !9735

land.lhs.true:                                    ; preds = %if.end
  %2 = load i8*, i8** %s.addr, align 8, !dbg !9736, !tbaa !2648
  %3 = load i8, i8* %2, align 1, !dbg !9737, !tbaa !3295, !ctir !181
  %conv = sext i8 %3 to i32, !dbg !9737
  %tobool2 = icmp ne i32 %conv, 0, !dbg !9737
  br i1 %tobool2, label %land.lhs.true3, label %cond.false, !dbg !9738

land.lhs.true3:                                   ; preds = %land.lhs.true
  %4 = load i8*, i8** %s.addr, align 8, !dbg !9739, !tbaa !2648
  %5 = load i8*, i8** %s.addr, align 8, !dbg !9740, !tbaa !2648
  %call4 = call i8* @last_component(i8* %5) #14, !dbg !9741
  %cmp = icmp eq i8* %4, %call4, !dbg !9742
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9734

cond.true:                                        ; preds = %land.lhs.true3
  %6 = load i8*, i8** %s.addr, align 8, !dbg !9743, !tbaa !2648
  br label %cond.end, !dbg !9734

cond.false:                                       ; preds = %land.lhs.true3, %land.lhs.true, %if.end
  br label %cond.end, !dbg !9734

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %6, %cond.true ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.212, i64 0, i64 0), %cond.false ], !dbg !9734
  store i8* %cond, i8** @simple_backup_suffix, align 8, !dbg !9744, !tbaa !2648
  ret void, !dbg !9745
}

; Function Attrs: nounwind
declare dso_local i8* @getenv(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @backupfile_internal(i32 %dir_fd, i8* %file, i32 %backup_type, i1 zeroext %rename) #4 !dbg !9746 !ctir !692 {
entry:
  %retval = alloca i8*, align 8
  %dir_fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %backup_type.addr = alloca i32, align 4
  %rename.addr = alloca i8, align 1
  %base_offset = alloca i64, align 8, !ctir !654
  %filelen = alloca i64, align 8, !ctir !55
  %simple_backup_suffix_size = alloca i64, align 8, !ctir !55
  %backup_suffix_size_guess = alloca i64, align 8, !ctir !55
  %ssize = alloca i64, align 8, !ctir !694
  %s = alloca i8*, align 8, !ctir !9
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !695
  %sdir = alloca i32, align 4, !ctir !7
  %base_max = alloca i64, align 8, !ctir !55
  %flags = alloca i32, align 4, !ctir !70
  %e = alloca i32, align 4, !ctir !7
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !9747, metadata !DIExpression()), !dbg !9748
  store i8* %file, i8** %file.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9749, metadata !DIExpression()), !dbg !9750
  store i32 %backup_type, i32* %backup_type.addr, align 4, !tbaa !3295
  call void @llvm.dbg.declare(metadata i32* %backup_type.addr, metadata !9751, metadata !DIExpression()), !dbg !9752
  %frombool = zext i1 %rename to i8
  store i8 %frombool, i8* %rename.addr, align 1, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %rename.addr, metadata !9753, metadata !DIExpression()), !dbg !9754
  call void @llvm.dbg.declare(metadata i64* %base_offset, metadata !9755, metadata !DIExpression()), !dbg !9756
  %0 = load i8*, i8** %file.addr, align 8, !dbg !9757, !tbaa !2648
  %call = call i8* @last_component(i8* %0) #14, !dbg !9758
  %1 = load i8*, i8** %file.addr, align 8, !dbg !9759, !tbaa !2648
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !9760
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !9760
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9760
  store i64 %sub.ptr.sub, i64* %base_offset, align 8, !dbg !9756, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %filelen, metadata !9761, metadata !DIExpression()), !dbg !9762
  %2 = load i64, i64* %base_offset, align 8, !dbg !9763, !tbaa !3288
  %3 = load i8*, i8** %file.addr, align 8, !dbg !9764, !tbaa !2648
  %4 = load i64, i64* %base_offset, align 8, !dbg !9765, !tbaa !3288
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %4, !dbg !9766
  %call1 = call i64 @strlen(i8* %add.ptr) #14, !dbg !9767
  %add = add i64 %2, %call1, !dbg !9768
  store i64 %add, i64* %filelen, align 8, !dbg !9762, !tbaa !3288
  %5 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !9769, !tbaa !2648
  %tobool = icmp ne i8* %5, null, !dbg !9769
  br i1 %tobool, label %if.end, label %if.then, !dbg !9771

if.then:                                          ; preds = %entry
  call void @set_simple_backup_suffix(i8* null), !dbg !9772
  br label %if.end, !dbg !9772

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.dbg.declare(metadata i64* %simple_backup_suffix_size, metadata !9773, metadata !DIExpression()), !dbg !9774
  %6 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !9775, !tbaa !2648
  %call2 = call i64 @strlen(i8* %6) #14, !dbg !9776
  %add3 = add i64 %call2, 1, !dbg !9777
  store i64 %add3, i64* %simple_backup_suffix_size, align 8, !dbg !9774, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %backup_suffix_size_guess, metadata !9778, metadata !DIExpression()), !dbg !9779
  %7 = load i64, i64* %simple_backup_suffix_size, align 8, !dbg !9780, !tbaa !3288
  store i64 %7, i64* %backup_suffix_size_guess, align 8, !dbg !9779, !tbaa !3288
  %8 = load i64, i64* %backup_suffix_size_guess, align 8, !dbg !9781, !tbaa !3288
  %cmp = icmp ult i64 %8, 9, !dbg !9783
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !9784

if.then4:                                         ; preds = %if.end
  store i64 9, i64* %backup_suffix_size_guess, align 8, !dbg !9785, !tbaa !3288
  br label %if.end5, !dbg !9786

if.end5:                                          ; preds = %if.then4, %if.end
  call void @llvm.dbg.declare(metadata i64* %ssize, metadata !9787, metadata !DIExpression()), !dbg !9788
  %9 = load i64, i64* %filelen, align 8, !dbg !9789, !tbaa !3288
  %10 = load i64, i64* %backup_suffix_size_guess, align 8, !dbg !9790, !tbaa !3288
  %add6 = add i64 %9, %10, !dbg !9791
  %add7 = add i64 %add6, 1, !dbg !9792
  store i64 %add7, i64* %ssize, align 8, !dbg !9788, !tbaa !3288
  call void @llvm.dbg.declare(metadata i8** %s, metadata !9793, metadata !DIExpression()), !dbg !9794
  %11 = load i64, i64* %ssize, align 8, !dbg !9795, !tbaa !3288
  %call8 = call noalias i8* @malloc(i64 %11) #9, !dbg !9796
  store i8* %call8, i8** %s, align 8, !dbg !9794, !tbaa !2648
  %12 = load i8*, i8** %s, align 8, !dbg !9797, !tbaa !2648
  %tobool9 = icmp ne i8* %12, null, !dbg !9797
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !9799

if.then10:                                        ; preds = %if.end5
  %13 = load i8*, i8** %s, align 8, !dbg !9800, !tbaa !2648
  store i8* %13, i8** %retval, align 8, !dbg !9801
  br label %return, !dbg !9801

if.end11:                                         ; preds = %if.end5
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !9802, metadata !DIExpression()), !dbg !9803
  store %struct.__dirstream* null, %struct.__dirstream** %dirp, align 8, !dbg !9803, !tbaa !2648
  call void @llvm.dbg.declare(metadata i32* %sdir, metadata !9804, metadata !DIExpression()), !dbg !9805
  store i32 -1, i32* %sdir, align 4, !dbg !9805, !tbaa !2635
  call void @llvm.dbg.declare(metadata i64* %base_max, metadata !9806, metadata !DIExpression()), !dbg !9807
  store i64 0, i64* %base_max, align 8, !dbg !9807, !tbaa !3288
  br label %while.body, !dbg !9808

while.body:                                       ; preds = %if.end11, %if.end50
  %14 = load i8*, i8** %s, align 8, !dbg !9809, !tbaa !2648
  %15 = load i8*, i8** %file.addr, align 8, !dbg !9811, !tbaa !2648
  %16 = load i64, i64* %filelen, align 8, !dbg !9812, !tbaa !3288
  %add12 = add i64 %16, 1, !dbg !9813
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %15, i64 %add12, i1 false), !dbg !9814
  %17 = load i32, i32* %backup_type.addr, align 4, !dbg !9815, !tbaa !3295
  %cmp13 = icmp eq i32 %17, 1, !dbg !9817
  br i1 %cmp13, label %if.then14, label %if.else, !dbg !9818

if.then14:                                        ; preds = %while.body
  %18 = load i8*, i8** %s, align 8, !dbg !9819, !tbaa !2648
  %19 = load i64, i64* %filelen, align 8, !dbg !9820, !tbaa !3288
  %add.ptr15 = getelementptr inbounds i8, i8* %18, i64 %19, !dbg !9821
  %20 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !9822, !tbaa !2648
  %21 = load i64, i64* %simple_backup_suffix_size, align 8, !dbg !9823, !tbaa !3288
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr15, i8* align 1 %20, i64 %21, i1 false), !dbg !9824
  br label %if.end29, !dbg !9824

if.else:                                          ; preds = %while.body
  %22 = load i32, i32* %dir_fd.addr, align 4, !dbg !9825, !tbaa !2635
  %23 = load i64, i64* %ssize, align 8, !dbg !9826, !tbaa !3288
  %24 = load i64, i64* %filelen, align 8, !dbg !9827, !tbaa !3288
  %25 = load i64, i64* %base_offset, align 8, !dbg !9828, !tbaa !3288
  %call16 = call i32 @numbered_backup(i32 %22, i8** %s, i64 %23, i64 %24, i64 %25, %struct.__dirstream** %dirp, i32* %sdir), !dbg !9829
  switch i32 %call16, label %sw.epilog [
    i32 0, label %sw.bb
    i32 2, label %sw.bb17
    i32 1, label %sw.bb22
    i32 3, label %sw.bb23
  ], !dbg !9830

sw.bb:                                            ; preds = %if.else
  br label %sw.epilog, !dbg !9831

sw.bb17:                                          ; preds = %if.else
  %26 = load i32, i32* %backup_type.addr, align 4, !dbg !9833, !tbaa !3295
  %cmp18 = icmp eq i32 %26, 2, !dbg !9835
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !9836

if.then19:                                        ; preds = %sw.bb17
  store i32 1, i32* %backup_type.addr, align 4, !dbg !9837, !tbaa !3295
  %27 = load i8*, i8** %s, align 8, !dbg !9839, !tbaa !2648
  %28 = load i64, i64* %filelen, align 8, !dbg !9840, !tbaa !3288
  %add.ptr20 = getelementptr inbounds i8, i8* %27, i64 %28, !dbg !9841
  %29 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !9842, !tbaa !2648
  %30 = load i64, i64* %simple_backup_suffix_size, align 8, !dbg !9843, !tbaa !3288
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr20, i8* align 1 %29, i64 %30, i1 false), !dbg !9844
  br label %if.end21, !dbg !9845

if.end21:                                         ; preds = %if.then19, %sw.bb17
  br label %sw.bb22, !dbg !9846

sw.bb22:                                          ; preds = %if.else, %if.end21
  %31 = load i8*, i8** %s, align 8, !dbg !9847, !tbaa !2648
  %32 = load i64, i64* %filelen, align 8, !dbg !9848, !tbaa !3288
  %33 = load i32, i32* %sdir, align 4, !dbg !9849, !tbaa !2635
  call void @check_extension(i8* %31, i64 %32, i8 signext 126, i32 %33, i64* %base_max), !dbg !9850
  br label %sw.epilog, !dbg !9851

sw.bb23:                                          ; preds = %if.else
  %34 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9852, !tbaa !2648
  %tobool24 = icmp ne %struct.__dirstream* %34, null, !dbg !9852
  br i1 %tobool24, label %if.then25, label %if.end27, !dbg !9854

if.then25:                                        ; preds = %sw.bb23
  %35 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9855, !tbaa !2648
  %call26 = call i32 @closedir(%struct.__dirstream* %35), !dbg !9856
  br label %if.end27, !dbg !9856

if.end27:                                         ; preds = %if.then25, %sw.bb23
  %36 = load i8*, i8** %s, align 8, !dbg !9857, !tbaa !2648
  call void @free(i8* %36) #9, !dbg !9858
  %call28 = call i32* @__errno_location() #16, !dbg !9859
  store i32 12, i32* %call28, align 4, !dbg !9860, !tbaa !2635, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !9861
  br label %return, !dbg !9861

sw.epilog:                                        ; preds = %if.else, %sw.bb22, %sw.bb
  br label %if.end29

if.end29:                                         ; preds = %sw.epilog, %if.then14
  %37 = load i8, i8* %rename.addr, align 1, !dbg !9862, !tbaa !2742
  %tobool30 = trunc i8 %37 to i1, !dbg !9862
  br i1 %tobool30, label %if.end32, label %if.then31, !dbg !9864

if.then31:                                        ; preds = %if.end29
  br label %while.end, !dbg !9865

if.end32:                                         ; preds = %if.end29
  %38 = load i32, i32* %sdir, align 4, !dbg !9866, !tbaa !2635
  %cmp33 = icmp slt i32 %38, 0, !dbg !9868
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !9869

if.then34:                                        ; preds = %if.end32
  store i32 -100, i32* %sdir, align 4, !dbg !9870, !tbaa !2635
  store i64 0, i64* %base_offset, align 8, !dbg !9872, !tbaa !3288
  br label %if.end35, !dbg !9873

if.end35:                                         ; preds = %if.then34, %if.end32
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !9874, metadata !DIExpression()), !dbg !9875
  %39 = load i32, i32* %backup_type.addr, align 4, !dbg !9876, !tbaa !3295
  %cmp36 = icmp eq i32 %39, 1, !dbg !9877
  %40 = zext i1 %cmp36 to i64, !dbg !9876
  %cond = select i1 %cmp36, i32 0, i32 1, !dbg !9876
  store i32 %cond, i32* %flags, align 4, !dbg !9875, !tbaa !2635
  %41 = load i8*, i8** %file.addr, align 8, !dbg !9878, !tbaa !2648
  %42 = load i32, i32* %sdir, align 4, !dbg !9880, !tbaa !2635
  %43 = load i8*, i8** %s, align 8, !dbg !9881, !tbaa !2648
  %44 = load i64, i64* %base_offset, align 8, !dbg !9882, !tbaa !3288
  %add.ptr37 = getelementptr inbounds i8, i8* %43, i64 %44, !dbg !9883
  %45 = load i32, i32* %flags, align 4, !dbg !9884, !tbaa !2635
  %call38 = call i32 @renameatu(i32 -100, i8* %41, i32 %42, i8* %add.ptr37, i32 %45), !dbg !9885
  %cmp39 = icmp eq i32 %call38, 0, !dbg !9886
  br i1 %cmp39, label %if.then40, label %if.end41, !dbg !9887

if.then40:                                        ; preds = %if.end35
  br label %while.end, !dbg !9888

if.end41:                                         ; preds = %if.end35
  call void @llvm.dbg.declare(metadata i32* %e, metadata !9889, metadata !DIExpression()), !dbg !9890
  %call42 = call i32* @__errno_location() #16, !dbg !9891
  %46 = load i32, i32* %call42, align 4, !dbg !9891, !tbaa !2635, !ctir !7
  store i32 %46, i32* %e, align 4, !dbg !9890, !tbaa !2635
  %47 = load i32, i32* %e, align 4, !dbg !9892, !tbaa !2635
  %cmp43 = icmp ne i32 %47, 17, !dbg !9894
  br i1 %cmp43, label %if.then44, label %if.end50, !dbg !9895

if.then44:                                        ; preds = %if.end41
  %48 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9896, !tbaa !2648
  %tobool45 = icmp ne %struct.__dirstream* %48, null, !dbg !9896
  br i1 %tobool45, label %if.then46, label %if.end48, !dbg !9899

if.then46:                                        ; preds = %if.then44
  %49 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9900, !tbaa !2648
  %call47 = call i32 @closedir(%struct.__dirstream* %49), !dbg !9901
  br label %if.end48, !dbg !9901

if.end48:                                         ; preds = %if.then46, %if.then44
  %50 = load i8*, i8** %s, align 8, !dbg !9902, !tbaa !2648
  call void @free(i8* %50) #9, !dbg !9903
  %51 = load i32, i32* %e, align 4, !dbg !9904, !tbaa !2635
  %call49 = call i32* @__errno_location() #16, !dbg !9905
  store i32 %51, i32* %call49, align 4, !dbg !9906, !tbaa !2635, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !9907
  br label %return, !dbg !9907

if.end50:                                         ; preds = %if.end41
  br label %while.body, !dbg !9808, !llvm.loop !9908

while.end:                                        ; preds = %if.then40, %if.then31
  %52 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9910, !tbaa !2648
  %tobool51 = icmp ne %struct.__dirstream* %52, null, !dbg !9910
  br i1 %tobool51, label %if.then52, label %if.end54, !dbg !9912

if.then52:                                        ; preds = %while.end
  %53 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9913, !tbaa !2648
  %call53 = call i32 @closedir(%struct.__dirstream* %53), !dbg !9914
  br label %if.end54, !dbg !9914

if.end54:                                         ; preds = %if.then52, %while.end
  %54 = load i8*, i8** %s, align 8, !dbg !9915, !tbaa !2648
  store i8* %54, i8** %retval, align 8, !dbg !9916
  br label %return, !dbg !9916

return:                                           ; preds = %if.end54, %if.end48, %if.end27, %if.then10
  %55 = load i8*, i8** %retval, align 8, !dbg !9917
  ret i8* %55, !dbg !9917
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @numbered_backup(i32 %dir_fd, i8** %buffer, i64 %buffer_size, i64 %filelen, i64 %base_offset, %struct.__dirstream** %dirpp, i32* %pnew_fd) #4 !dbg !9918 !ctir !699 {
entry:
  %retval = alloca i32, align 4
  %dir_fd.addr = alloca i32, align 4
  %buffer.addr = alloca i8**, align 8
  %buffer_size.addr = alloca i64, align 8
  %filelen.addr = alloca i64, align 8
  %base_offset.addr = alloca i64, align 8
  %dirpp.addr = alloca %struct.__dirstream**, align 8
  %pnew_fd.addr = alloca i32*, align 8
  %result = alloca i32, align 4, !ctir !684
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !695
  %dp = alloca %struct.dirent*, align 8, !ctir !702
  %buf = alloca i8*, align 8, !ctir !9
  %versionlenmax = alloca i64, align 8, !ctir !55
  %base = alloca i8*, align 8, !ctir !9
  %baselen = alloca i64, align 8, !ctir !55
  %tmp = alloca [2 x i8], align 1, !ctir !711
  %p = alloca i8*, align 8, !ctir !180
  %q = alloca i8*, align 8, !ctir !9
  %all_9s = alloca i8, align 1, !ctir !142
  %versionlen = alloca i64, align 8, !ctir !55
  %new_buffer_size = alloca i64, align 8, !ctir !55
  %new_buf = alloca i8*, align 8, !ctir !9
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !9919, metadata !DIExpression()), !dbg !9920
  store i8** %buffer, i8*** %buffer.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8*** %buffer.addr, metadata !9921, metadata !DIExpression()), !dbg !9922
  store i64 %buffer_size, i64* %buffer_size.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %buffer_size.addr, metadata !9923, metadata !DIExpression()), !dbg !9924
  store i64 %filelen, i64* %filelen.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %filelen.addr, metadata !9925, metadata !DIExpression()), !dbg !9926
  store i64 %base_offset, i64* %base_offset.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %base_offset.addr, metadata !9927, metadata !DIExpression()), !dbg !9928
  store %struct.__dirstream** %dirpp, %struct.__dirstream*** %dirpp.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.__dirstream*** %dirpp.addr, metadata !9929, metadata !DIExpression()), !dbg !9930
  store i32* %pnew_fd, i32** %pnew_fd.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i32** %pnew_fd.addr, metadata !9931, metadata !DIExpression()), !dbg !9932
  call void @llvm.dbg.declare(metadata i32* %result, metadata !9933, metadata !DIExpression()), !dbg !9934
  store i32 2, i32* %result, align 4, !dbg !9934, !tbaa !3295
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !9935, metadata !DIExpression()), !dbg !9936
  %0 = load %struct.__dirstream**, %struct.__dirstream*** %dirpp.addr, align 8, !dbg !9937, !tbaa !2648
  %1 = load %struct.__dirstream*, %struct.__dirstream** %0, align 8, !dbg !9938, !tbaa !2648, !ctir !695
  store %struct.__dirstream* %1, %struct.__dirstream** %dirp, align 8, !dbg !9936, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.dirent** %dp, metadata !9939, metadata !DIExpression()), !dbg !9940
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !9941, metadata !DIExpression()), !dbg !9942
  %2 = load i8**, i8*** %buffer.addr, align 8, !dbg !9943, !tbaa !2648
  %3 = load i8*, i8** %2, align 8, !dbg !9944, !tbaa !2648, !ctir !9
  store i8* %3, i8** %buf, align 8, !dbg !9942, !tbaa !2648
  call void @llvm.dbg.declare(metadata i64* %versionlenmax, metadata !9945, metadata !DIExpression()), !dbg !9946
  store i64 1, i64* %versionlenmax, align 8, !dbg !9946, !tbaa !3288
  call void @llvm.dbg.declare(metadata i8** %base, metadata !9947, metadata !DIExpression()), !dbg !9948
  %4 = load i8*, i8** %buf, align 8, !dbg !9949, !tbaa !2648
  %5 = load i64, i64* %base_offset.addr, align 8, !dbg !9950, !tbaa !3288
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %5, !dbg !9951
  store i8* %add.ptr, i8** %base, align 8, !dbg !9948, !tbaa !2648
  call void @llvm.dbg.declare(metadata i64* %baselen, metadata !9952, metadata !DIExpression()), !dbg !9953
  %6 = load i8*, i8** %base, align 8, !dbg !9954, !tbaa !2648
  %call = call i64 @base_len(i8* %6) #14, !dbg !9955
  store i64 %call, i64* %baselen, align 8, !dbg !9953, !tbaa !3288
  %7 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9956, !tbaa !2648
  %tobool = icmp ne %struct.__dirstream* %7, null, !dbg !9956
  br i1 %tobool, label %if.then, label %if.else, !dbg !9958

if.then:                                          ; preds = %entry
  %8 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9959, !tbaa !2648
  call void @rewinddir(%struct.__dirstream* %8) #9, !dbg !9960
  br label %if.end12, !dbg !9960

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [2 x i8]* %tmp, metadata !9961, metadata !DIExpression()), !dbg !9963
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !9964
  %9 = load i8*, i8** %base, align 8, !dbg !9965, !tbaa !2648
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay, i8* align 1 %9, i64 2, i1 false), !dbg !9964
  %10 = load i8*, i8** %base, align 8, !dbg !9966, !tbaa !2648
  %call1 = call i8* @strcpy(i8* %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.213, i64 0, i64 0)) #9, !dbg !9967
  %11 = load i32, i32* %dir_fd.addr, align 4, !dbg !9968, !tbaa !2635
  %12 = load i8*, i8** %buf, align 8, !dbg !9969, !tbaa !2648
  %13 = load i32*, i32** %pnew_fd.addr, align 8, !dbg !9970, !tbaa !2648
  %call2 = call %struct.__dirstream* @opendirat(i32 %11, i8* %12, i32 0, i32* %13), !dbg !9971
  store %struct.__dirstream* %call2, %struct.__dirstream** %dirp, align 8, !dbg !9972, !tbaa !2648
  %14 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9973, !tbaa !2648
  %tobool3 = icmp ne %struct.__dirstream* %14, null, !dbg !9973
  br i1 %tobool3, label %if.end, label %land.lhs.true, !dbg !9975

land.lhs.true:                                    ; preds = %if.else
  %call4 = call i32* @__errno_location() #16, !dbg !9976
  %15 = load i32, i32* %call4, align 4, !dbg !9976, !tbaa !2635, !ctir !7
  %cmp = icmp eq i32 %15, 12, !dbg !9977
  br i1 %cmp, label %if.then5, label %if.end, !dbg !9978

if.then5:                                         ; preds = %land.lhs.true
  store i32 3, i32* %result, align 4, !dbg !9979, !tbaa !3295
  br label %if.end, !dbg !9980

if.end:                                           ; preds = %if.then5, %land.lhs.true, %if.else
  %16 = load i8*, i8** %base, align 8, !dbg !9981, !tbaa !2648
  %arraydecay6 = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !9982
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %arraydecay6, i64 2, i1 false), !dbg !9982
  %17 = load i8*, i8** %base, align 8, !dbg !9983, !tbaa !2648
  %18 = load i64, i64* %baselen, align 8, !dbg !9984, !tbaa !3288
  %add.ptr7 = getelementptr inbounds i8, i8* %17, i64 %18, !dbg !9985
  %call8 = call i8* @strcpy(i8* %add.ptr7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.214, i64 0, i64 0)) #9, !dbg !9986
  %19 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9987, !tbaa !2648
  %tobool9 = icmp ne %struct.__dirstream* %19, null, !dbg !9987
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !9989

if.then10:                                        ; preds = %if.end
  %20 = load i32, i32* %result, align 4, !dbg !9990, !tbaa !3295
  store i32 %20, i32* %retval, align 4, !dbg !9991
  br label %return, !dbg !9991

if.end11:                                         ; preds = %if.end
  %21 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9992, !tbaa !2648
  %22 = load %struct.__dirstream**, %struct.__dirstream*** %dirpp.addr, align 8, !dbg !9993, !tbaa !2648
  store %struct.__dirstream* %21, %struct.__dirstream** %22, align 8, !dbg !9994, !tbaa !2648, !ctir !695
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.then
  br label %while.cond, !dbg !9995

while.cond:                                       ; preds = %while.end, %if.then73, %if.then38, %if.then26, %if.then18, %if.end12
  %23 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9996, !tbaa !2648
  %call13 = call %struct.dirent* @readdir(%struct.__dirstream* %23), !dbg !9997
  store %struct.dirent* %call13, %struct.dirent** %dp, align 8, !dbg !9998, !tbaa !2648
  %cmp14 = icmp ne %struct.dirent* %call13, null, !dbg !9999
  br i1 %cmp14, label %while.body, label %while.end109, !dbg !9995

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10000, metadata !DIExpression()), !dbg !10002
  call void @llvm.dbg.declare(metadata i8** %q, metadata !10003, metadata !DIExpression()), !dbg !10004
  call void @llvm.dbg.declare(metadata i8* %all_9s, metadata !10005, metadata !DIExpression()), !dbg !10006
  call void @llvm.dbg.declare(metadata i64* %versionlen, metadata !10007, metadata !DIExpression()), !dbg !10008
  %24 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !10009, !tbaa !2648
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %24, i32 0, i32 4, !dbg !10009, !ctir !703
  %arraydecay15 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !10009
  %call16 = call i64 @strlen(i8* %arraydecay15) #14, !dbg !10009
  %25 = load i64, i64* %baselen, align 8, !dbg !10011, !tbaa !3288
  %add = add i64 %25, 4, !dbg !10012
  %cmp17 = icmp ult i64 %call16, %add, !dbg !10013
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !10014

if.then18:                                        ; preds = %while.body
  br label %while.cond, !dbg !10015, !llvm.loop !10016

if.end19:                                         ; preds = %while.body
  %26 = load i8*, i8** %buf, align 8, !dbg !10018, !tbaa !2648
  %27 = load i64, i64* %base_offset.addr, align 8, !dbg !10020, !tbaa !3288
  %add.ptr20 = getelementptr inbounds i8, i8* %26, i64 %27, !dbg !10021
  %28 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !10022, !tbaa !2648
  %d_name21 = getelementptr inbounds %struct.dirent, %struct.dirent* %28, i32 0, i32 4, !dbg !10023, !ctir !703
  %arraydecay22 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name21, i64 0, i64 0, !dbg !10022
  %29 = load i64, i64* %baselen, align 8, !dbg !10024, !tbaa !3288
  %add23 = add i64 %29, 2, !dbg !10025
  %call24 = call i32 @memcmp(i8* %add.ptr20, i8* %arraydecay22, i64 %add23) #14, !dbg !10026
  %cmp25 = icmp ne i32 %call24, 0, !dbg !10027
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !10028

if.then26:                                        ; preds = %if.end19
  br label %while.cond, !dbg !10029, !llvm.loop !10016

if.end27:                                         ; preds = %if.end19
  %30 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !10030, !tbaa !2648
  %d_name28 = getelementptr inbounds %struct.dirent, %struct.dirent* %30, i32 0, i32 4, !dbg !10031, !ctir !703
  %arraydecay29 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name28, i64 0, i64 0, !dbg !10030
  %31 = load i64, i64* %baselen, align 8, !dbg !10032, !tbaa !3288
  %add.ptr30 = getelementptr inbounds i8, i8* %arraydecay29, i64 %31, !dbg !10033
  %add.ptr31 = getelementptr inbounds i8, i8* %add.ptr30, i64 2, !dbg !10034
  store i8* %add.ptr31, i8** %p, align 8, !dbg !10035, !tbaa !2648
  %32 = load i8*, i8** %p, align 8, !dbg !10036, !tbaa !2648
  %33 = load i8, i8* %32, align 1, !dbg !10038, !tbaa !3295, !ctir !181
  %conv = sext i8 %33 to i32, !dbg !10038
  %cmp32 = icmp sle i32 49, %conv, !dbg !10039
  br i1 %cmp32, label %land.lhs.true34, label %if.then38, !dbg !10040

land.lhs.true34:                                  ; preds = %if.end27
  %34 = load i8*, i8** %p, align 8, !dbg !10041, !tbaa !2648
  %35 = load i8, i8* %34, align 1, !dbg !10042, !tbaa !3295, !ctir !181
  %conv35 = sext i8 %35 to i32, !dbg !10042
  %cmp36 = icmp sle i32 %conv35, 57, !dbg !10043
  br i1 %cmp36, label %if.end39, label %if.then38, !dbg !10044

if.then38:                                        ; preds = %land.lhs.true34, %if.end27
  br label %while.cond, !dbg !10045, !llvm.loop !10016

if.end39:                                         ; preds = %land.lhs.true34
  %36 = load i8*, i8** %p, align 8, !dbg !10046, !tbaa !2648
  %37 = load i8, i8* %36, align 1, !dbg !10047, !tbaa !3295, !ctir !181
  %conv40 = sext i8 %37 to i32, !dbg !10047
  %cmp41 = icmp eq i32 %conv40, 57, !dbg !10048
  %frombool = zext i1 %cmp41 to i8, !dbg !10049
  store i8 %frombool, i8* %all_9s, align 1, !dbg !10049, !tbaa !2742
  store i64 1, i64* %versionlen, align 8, !dbg !10050, !tbaa !3288
  br label %for.cond, !dbg !10052

for.cond:                                         ; preds = %for.inc, %if.end39
  %38 = load i8*, i8** %p, align 8, !dbg !10053, !tbaa !2648
  %39 = load i64, i64* %versionlen, align 8, !dbg !10053, !tbaa !3288
  %arrayidx = getelementptr inbounds i8, i8* %38, i64 %39, !dbg !10053, !ctir !180
  %40 = load i8, i8* %arrayidx, align 1, !dbg !10053, !tbaa !3295
  %conv43 = sext i8 %40 to i32, !dbg !10053
  %sub = sub i32 %conv43, 48, !dbg !10053
  %cmp44 = icmp ule i32 %sub, 9, !dbg !10053
  br i1 %cmp44, label %for.body, label %for.end, !dbg !10055

for.body:                                         ; preds = %for.cond
  %41 = load i8*, i8** %p, align 8, !dbg !10056, !tbaa !2648
  %42 = load i64, i64* %versionlen, align 8, !dbg !10057, !tbaa !3288
  %arrayidx46 = getelementptr inbounds i8, i8* %41, i64 %42, !dbg !10056, !ctir !180
  %43 = load i8, i8* %arrayidx46, align 1, !dbg !10056, !tbaa !3295
  %conv47 = sext i8 %43 to i32, !dbg !10056
  %cmp48 = icmp eq i32 %conv47, 57, !dbg !10058
  %conv49 = zext i1 %cmp48 to i32, !dbg !10058
  %44 = load i8, i8* %all_9s, align 1, !dbg !10059, !tbaa !2742
  %tobool50 = trunc i8 %44 to i1, !dbg !10059
  %conv51 = zext i1 %tobool50 to i32, !dbg !10059
  %and = and i32 %conv51, %conv49, !dbg !10059
  %tobool52 = icmp ne i32 %and, 0, !dbg !10059
  %frombool53 = zext i1 %tobool52 to i8, !dbg !10059
  store i8 %frombool53, i8* %all_9s, align 1, !dbg !10059, !tbaa !2742
  br label %for.inc, !dbg !10060

for.inc:                                          ; preds = %for.body
  %45 = load i64, i64* %versionlen, align 8, !dbg !10061, !tbaa !3288
  %inc = add i64 %45, 1, !dbg !10061
  store i64 %inc, i64* %versionlen, align 8, !dbg !10061, !tbaa !3288
  br label %for.cond, !dbg !10062, !llvm.loop !10063

for.end:                                          ; preds = %for.cond
  %46 = load i8*, i8** %p, align 8, !dbg !10065, !tbaa !2648
  %47 = load i64, i64* %versionlen, align 8, !dbg !10067, !tbaa !3288
  %arrayidx54 = getelementptr inbounds i8, i8* %46, i64 %47, !dbg !10065, !ctir !180
  %48 = load i8, i8* %arrayidx54, align 1, !dbg !10065, !tbaa !3295
  %conv55 = sext i8 %48 to i32, !dbg !10065
  %cmp56 = icmp eq i32 %conv55, 126, !dbg !10068
  br i1 %cmp56, label %land.lhs.true58, label %if.then73, !dbg !10069

land.lhs.true58:                                  ; preds = %for.end
  %49 = load i8*, i8** %p, align 8, !dbg !10070, !tbaa !2648
  %50 = load i64, i64* %versionlen, align 8, !dbg !10071, !tbaa !3288
  %add59 = add i64 %50, 1, !dbg !10072
  %arrayidx60 = getelementptr inbounds i8, i8* %49, i64 %add59, !dbg !10070, !ctir !180
  %51 = load i8, i8* %arrayidx60, align 1, !dbg !10070, !tbaa !3295
  %tobool61 = icmp ne i8 %51, 0, !dbg !10070
  br i1 %tobool61, label %if.then73, label %land.lhs.true62, !dbg !10073

land.lhs.true62:                                  ; preds = %land.lhs.true58
  %52 = load i64, i64* %versionlenmax, align 8, !dbg !10074, !tbaa !3288
  %53 = load i64, i64* %versionlen, align 8, !dbg !10075, !tbaa !3288
  %cmp63 = icmp ult i64 %52, %53, !dbg !10076
  br i1 %cmp63, label %if.end74, label %lor.lhs.false, !dbg !10077

lor.lhs.false:                                    ; preds = %land.lhs.true62
  %54 = load i64, i64* %versionlenmax, align 8, !dbg !10078, !tbaa !3288
  %55 = load i64, i64* %versionlen, align 8, !dbg !10079, !tbaa !3288
  %cmp65 = icmp eq i64 %54, %55, !dbg !10080
  br i1 %cmp65, label %land.lhs.true67, label %if.then73, !dbg !10081

land.lhs.true67:                                  ; preds = %lor.lhs.false
  %56 = load i8*, i8** %buf, align 8, !dbg !10082, !tbaa !2648
  %57 = load i64, i64* %filelen.addr, align 8, !dbg !10083, !tbaa !3288
  %add.ptr68 = getelementptr inbounds i8, i8* %56, i64 %57, !dbg !10084
  %add.ptr69 = getelementptr inbounds i8, i8* %add.ptr68, i64 2, !dbg !10085
  %58 = load i8*, i8** %p, align 8, !dbg !10086, !tbaa !2648
  %59 = load i64, i64* %versionlen, align 8, !dbg !10087, !tbaa !3288
  %call70 = call i32 @memcmp(i8* %add.ptr69, i8* %58, i64 %59) #14, !dbg !10088
  %cmp71 = icmp sle i32 %call70, 0, !dbg !10089
  br i1 %cmp71, label %if.end74, label %if.then73, !dbg !10090

if.then73:                                        ; preds = %land.lhs.true67, %lor.lhs.false, %land.lhs.true58, %for.end
  br label %while.cond, !dbg !10091, !llvm.loop !10016

if.end74:                                         ; preds = %land.lhs.true67, %land.lhs.true62
  %60 = load i8, i8* %all_9s, align 1, !dbg !10092, !tbaa !2742
  %tobool75 = trunc i8 %60 to i1, !dbg !10092
  %conv76 = zext i1 %tobool75 to i64, !dbg !10092
  %61 = load i64, i64* %versionlen, align 8, !dbg !10093, !tbaa !3288
  %add77 = add i64 %conv76, %61, !dbg !10094
  store i64 %add77, i64* %versionlenmax, align 8, !dbg !10095, !tbaa !3288
  %62 = load i8, i8* %all_9s, align 1, !dbg !10096, !tbaa !2742
  %tobool78 = trunc i8 %62 to i1, !dbg !10096
  %63 = zext i1 %tobool78 to i64, !dbg !10096
  %cond = select i1 %tobool78, i32 1, i32 0, !dbg !10096
  store i32 %cond, i32* %result, align 4, !dbg !10097, !tbaa !3295
  call void @llvm.dbg.declare(metadata i64* %new_buffer_size, metadata !10098, metadata !DIExpression()), !dbg !10099
  %64 = load i64, i64* %filelen.addr, align 8, !dbg !10100, !tbaa !3288
  %add80 = add i64 %64, 2, !dbg !10101
  %65 = load i64, i64* %versionlenmax, align 8, !dbg !10102, !tbaa !3288
  %add81 = add i64 %add80, %65, !dbg !10103
  %add82 = add i64 %add81, 2, !dbg !10104
  store i64 %add82, i64* %new_buffer_size, align 8, !dbg !10099, !tbaa !3288
  %66 = load i64, i64* %buffer_size.addr, align 8, !dbg !10105, !tbaa !3288
  %67 = load i64, i64* %new_buffer_size, align 8, !dbg !10107, !tbaa !3288
  %cmp83 = icmp ult i64 %66, %67, !dbg !10108
  br i1 %cmp83, label %if.then85, label %if.end94, !dbg !10109

if.then85:                                        ; preds = %if.end74
  %68 = load i64, i64* %new_buffer_size, align 8, !dbg !10110, !tbaa !3288
  %cmp86 = icmp ult i64 4611686018427387903, %68, !dbg !10110
  br i1 %cmp86, label %if.end89, label %if.then88, !dbg !10113

if.then88:                                        ; preds = %if.then85
  %69 = load i64, i64* %new_buffer_size, align 8, !dbg !10114, !tbaa !3288
  %mul = mul i64 %69, 2, !dbg !10114
  store i64 %mul, i64* %new_buffer_size, align 8, !dbg !10114, !tbaa !3288
  br label %if.end89, !dbg !10115

if.end89:                                         ; preds = %if.then88, %if.then85
  call void @llvm.dbg.declare(metadata i8** %new_buf, metadata !10116, metadata !DIExpression()), !dbg !10117
  %70 = load i8*, i8** %buf, align 8, !dbg !10118, !tbaa !2648
  %71 = load i64, i64* %new_buffer_size, align 8, !dbg !10119, !tbaa !3288
  %call90 = call i8* @realloc(i8* %70, i64 %71) #9, !dbg !10120
  store i8* %call90, i8** %new_buf, align 8, !dbg !10117, !tbaa !2648
  %72 = load i8*, i8** %new_buf, align 8, !dbg !10121, !tbaa !2648
  %tobool91 = icmp ne i8* %72, null, !dbg !10121
  br i1 %tobool91, label %if.end93, label %if.then92, !dbg !10123

if.then92:                                        ; preds = %if.end89
  %73 = load i8*, i8** %buf, align 8, !dbg !10124, !tbaa !2648
  %74 = load i8**, i8*** %buffer.addr, align 8, !dbg !10126, !tbaa !2648
  store i8* %73, i8** %74, align 8, !dbg !10127, !tbaa !2648, !ctir !9
  store i32 3, i32* %retval, align 4, !dbg !10128
  br label %return, !dbg !10128

if.end93:                                         ; preds = %if.end89
  %75 = load i8*, i8** %new_buf, align 8, !dbg !10129, !tbaa !2648
  store i8* %75, i8** %buf, align 8, !dbg !10130, !tbaa !2648
  %76 = load i64, i64* %new_buffer_size, align 8, !dbg !10131, !tbaa !3288
  store i64 %76, i64* %buffer_size.addr, align 8, !dbg !10132, !tbaa !3288
  br label %if.end94, !dbg !10133

if.end94:                                         ; preds = %if.end93, %if.end74
  %77 = load i8*, i8** %buf, align 8, !dbg !10134, !tbaa !2648
  %78 = load i64, i64* %filelen.addr, align 8, !dbg !10135, !tbaa !3288
  %add.ptr95 = getelementptr inbounds i8, i8* %77, i64 %78, !dbg !10136
  store i8* %add.ptr95, i8** %q, align 8, !dbg !10137, !tbaa !2648
  %79 = load i8*, i8** %q, align 8, !dbg !10138, !tbaa !2648
  %incdec.ptr = getelementptr inbounds i8, i8* %79, i32 1, !dbg !10138
  store i8* %incdec.ptr, i8** %q, align 8, !dbg !10138, !tbaa !2648
  store i8 46, i8* %79, align 1, !dbg !10139, !tbaa !3295, !ctir !10
  %80 = load i8*, i8** %q, align 8, !dbg !10140, !tbaa !2648
  %incdec.ptr96 = getelementptr inbounds i8, i8* %80, i32 1, !dbg !10140
  store i8* %incdec.ptr96, i8** %q, align 8, !dbg !10140, !tbaa !2648
  store i8 126, i8* %80, align 1, !dbg !10141, !tbaa !3295, !ctir !10
  %81 = load i8*, i8** %q, align 8, !dbg !10142, !tbaa !2648
  store i8 48, i8* %81, align 1, !dbg !10143, !tbaa !3295, !ctir !10
  %82 = load i8, i8* %all_9s, align 1, !dbg !10144, !tbaa !2742
  %tobool97 = trunc i8 %82 to i1, !dbg !10144
  %conv98 = zext i1 %tobool97 to i32, !dbg !10144
  %83 = load i8*, i8** %q, align 8, !dbg !10145, !tbaa !2648
  %idx.ext = sext i32 %conv98 to i64, !dbg !10145
  %add.ptr99 = getelementptr inbounds i8, i8* %83, i64 %idx.ext, !dbg !10145
  store i8* %add.ptr99, i8** %q, align 8, !dbg !10145, !tbaa !2648
  %84 = load i8*, i8** %q, align 8, !dbg !10146, !tbaa !2648
  %85 = load i8*, i8** %p, align 8, !dbg !10147, !tbaa !2648
  %86 = load i64, i64* %versionlen, align 8, !dbg !10148, !tbaa !3288
  %add100 = add i64 %86, 2, !dbg !10149
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %84, i8* align 1 %85, i64 %add100, i1 false), !dbg !10150
  %87 = load i64, i64* %versionlen, align 8, !dbg !10151, !tbaa !3288
  %88 = load i8*, i8** %q, align 8, !dbg !10152, !tbaa !2648
  %add.ptr101 = getelementptr inbounds i8, i8* %88, i64 %87, !dbg !10152
  store i8* %add.ptr101, i8** %q, align 8, !dbg !10152, !tbaa !2648
  br label %while.cond102, !dbg !10153

while.cond102:                                    ; preds = %while.body107, %if.end94
  %89 = load i8*, i8** %q, align 8, !dbg !10154, !tbaa !2648
  %incdec.ptr103 = getelementptr inbounds i8, i8* %89, i32 -1, !dbg !10154
  store i8* %incdec.ptr103, i8** %q, align 8, !dbg !10154, !tbaa !2648
  %90 = load i8, i8* %incdec.ptr103, align 1, !dbg !10155, !tbaa !3295, !ctir !10
  %conv104 = sext i8 %90 to i32, !dbg !10155
  %cmp105 = icmp eq i32 %conv104, 57, !dbg !10156
  br i1 %cmp105, label %while.body107, label %while.end, !dbg !10153

while.body107:                                    ; preds = %while.cond102
  %91 = load i8*, i8** %q, align 8, !dbg !10157, !tbaa !2648
  store i8 48, i8* %91, align 1, !dbg !10158, !tbaa !3295, !ctir !10
  br label %while.cond102, !dbg !10153, !llvm.loop !10159

while.end:                                        ; preds = %while.cond102
  %92 = load i8*, i8** %q, align 8, !dbg !10161, !tbaa !2648
  %93 = load i8, i8* %92, align 1, !dbg !10162, !tbaa !3295, !ctir !10
  %inc108 = add i8 %93, 1, !dbg !10162
  store i8 %inc108, i8* %92, align 1, !dbg !10162, !tbaa !3295, !ctir !10
  br label %while.cond, !dbg !9995, !llvm.loop !10016

while.end109:                                     ; preds = %while.cond
  %94 = load i8*, i8** %buf, align 8, !dbg !10163, !tbaa !2648
  %95 = load i8**, i8*** %buffer.addr, align 8, !dbg !10164, !tbaa !2648
  store i8* %94, i8** %95, align 8, !dbg !10165, !tbaa !2648, !ctir !9
  %96 = load i32, i32* %result, align 4, !dbg !10166, !tbaa !3295
  store i32 %96, i32* %retval, align 4, !dbg !10167
  br label %return, !dbg !10167

return:                                           ; preds = %while.end109, %if.then92, %if.then10
  %97 = load i32, i32* %retval, align 4, !dbg !10168
  ret i32 %97, !dbg !10168
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @check_extension(i8* %file, i64 %filelen, i8 signext %e, i32 %dir_fd, i64* %base_max) #4 !dbg !10169 !ctir !712 {
entry:
  %file.addr = alloca i8*, align 8
  %filelen.addr = alloca i64, align 8
  %e.addr = alloca i8, align 1
  %dir_fd.addr = alloca i32, align 4
  %base_max.addr = alloca i64*, align 8
  %base = alloca i8*, align 8, !ctir !9
  %baselen = alloca i64, align 8, !ctir !55
  %baselen_max = alloca i64, align 8, !ctir !55
  %name_max = alloca i64, align 8, !ctir !31
  %tmp = alloca [2 x i8], align 1, !ctir !711
  store i8* %file, i8** %file.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10170, metadata !DIExpression()), !dbg !10171
  store i64 %filelen, i64* %filelen.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %filelen.addr, metadata !10172, metadata !DIExpression()), !dbg !10173
  store i8 %e, i8* %e.addr, align 1, !tbaa !3295
  call void @llvm.dbg.declare(metadata i8* %e.addr, metadata !10174, metadata !DIExpression()), !dbg !10175
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !10176, metadata !DIExpression()), !dbg !10177
  store i64* %base_max, i64** %base_max.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i64** %base_max.addr, metadata !10178, metadata !DIExpression()), !dbg !10179
  call void @llvm.dbg.declare(metadata i8** %base, metadata !10180, metadata !DIExpression()), !dbg !10181
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10182, !tbaa !2648
  %call = call i8* @last_component(i8* %0) #14, !dbg !10183
  store i8* %call, i8** %base, align 8, !dbg !10181, !tbaa !2648
  call void @llvm.dbg.declare(metadata i64* %baselen, metadata !10184, metadata !DIExpression()), !dbg !10185
  %1 = load i8*, i8** %base, align 8, !dbg !10186, !tbaa !2648
  %call1 = call i64 @base_len(i8* %1) #14, !dbg !10187
  store i64 %call1, i64* %baselen, align 8, !dbg !10185, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %baselen_max, metadata !10188, metadata !DIExpression()), !dbg !10189
  store i64 255, i64* %baselen_max, align 8, !dbg !10189, !tbaa !3288
  %2 = load i64, i64* %baselen, align 8, !dbg !10190, !tbaa !3288
  %cmp = icmp ult i64 14, %2, !dbg !10192
  br i1 %cmp, label %if.then, label %if.end27, !dbg !10193

if.then:                                          ; preds = %entry
  %3 = load i64*, i64** %base_max.addr, align 8, !dbg !10194, !tbaa !2648
  %4 = load i64, i64* %3, align 8, !dbg !10197, !tbaa !3288, !ctir !55
  %cmp2 = icmp eq i64 %4, 0, !dbg !10198
  br i1 %cmp2, label %if.then3, label %if.end26, !dbg !10199

if.then3:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i64* %name_max, metadata !10200, metadata !DIExpression()), !dbg !10202
  %5 = load i32, i32* %dir_fd.addr, align 4, !dbg !10203, !tbaa !2635
  %cmp4 = icmp slt i32 %5, 0, !dbg !10205
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !10206

if.then5:                                         ; preds = %if.then3
  call void @llvm.dbg.declare(metadata [2 x i8]* %tmp, metadata !10207, metadata !DIExpression()), !dbg !10209
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !10210
  %6 = load i8*, i8** %base, align 8, !dbg !10211, !tbaa !2648
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay, i8* align 1 %6, i64 2, i1 false), !dbg !10210
  %7 = load i8*, i8** %base, align 8, !dbg !10212, !tbaa !2648
  %call6 = call i8* @strcpy(i8* %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.213, i64 0, i64 0)) #9, !dbg !10213
  %call7 = call i32* @__errno_location() #16, !dbg !10214
  store i32 0, i32* %call7, align 4, !dbg !10215, !tbaa !2635, !ctir !7
  %8 = load i8*, i8** %file.addr, align 8, !dbg !10216, !tbaa !2648
  %call8 = call i64 @pathconf(i8* %8, i32 3) #9, !dbg !10217
  store i64 %call8, i64* %name_max, align 8, !dbg !10218, !tbaa !3288
  %call9 = call i32* @__errno_location() #16, !dbg !10219
  %9 = load i32, i32* %call9, align 4, !dbg !10219, !tbaa !2635, !ctir !7
  %tobool = icmp ne i32 %9, 0, !dbg !10220
  %lnot = xor i1 %tobool, true, !dbg !10220
  %lnot.ext = zext i1 %lnot to i32, !dbg !10220
  %conv = sext i32 %lnot.ext to i64, !dbg !10220
  %10 = load i64, i64* %name_max, align 8, !dbg !10221, !tbaa !3288
  %sub = sub nsw i64 %10, %conv, !dbg !10221
  store i64 %sub, i64* %name_max, align 8, !dbg !10221, !tbaa !3288
  %11 = load i8*, i8** %base, align 8, !dbg !10222, !tbaa !2648
  %arraydecay10 = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !10223
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %arraydecay10, i64 2, i1 false), !dbg !10223
  br label %if.end, !dbg !10224

if.else:                                          ; preds = %if.then3
  %call11 = call i32* @__errno_location() #16, !dbg !10225
  store i32 0, i32* %call11, align 4, !dbg !10227, !tbaa !2635, !ctir !7
  %12 = load i32, i32* %dir_fd.addr, align 4, !dbg !10228, !tbaa !2635
  %call12 = call i64 @fpathconf(i32 %12, i32 3) #9, !dbg !10229
  store i64 %call12, i64* %name_max, align 8, !dbg !10230, !tbaa !3288
  %call13 = call i32* @__errno_location() #16, !dbg !10231
  %13 = load i32, i32* %call13, align 4, !dbg !10231, !tbaa !2635, !ctir !7
  %tobool14 = icmp ne i32 %13, 0, !dbg !10232
  %lnot15 = xor i1 %tobool14, true, !dbg !10232
  %lnot.ext16 = zext i1 %lnot15 to i32, !dbg !10232
  %conv17 = sext i32 %lnot.ext16 to i64, !dbg !10232
  %14 = load i64, i64* %name_max, align 8, !dbg !10233, !tbaa !3288
  %sub18 = sub nsw i64 %14, %conv17, !dbg !10233
  store i64 %sub18, i64* %name_max, align 8, !dbg !10233, !tbaa !3288
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  %15 = load i64, i64* %name_max, align 8, !dbg !10234, !tbaa !3288
  %cmp19 = icmp sle i64 0, %15, !dbg !10235
  br i1 %cmp19, label %land.lhs.true, label %cond.false, !dbg !10236

land.lhs.true:                                    ; preds = %if.end
  %16 = load i64, i64* %name_max, align 8, !dbg !10237, !tbaa !3288
  %cmp21 = icmp ule i64 %16, -1, !dbg !10238
  br i1 %cmp21, label %cond.true, label %cond.false, !dbg !10239

cond.true:                                        ; preds = %land.lhs.true
  %17 = load i64, i64* %name_max, align 8, !dbg !10240, !tbaa !3288
  br label %cond.end, !dbg !10239

cond.false:                                       ; preds = %land.lhs.true, %if.end
  %18 = load i64, i64* %name_max, align 8, !dbg !10241, !tbaa !3288
  %cmp23 = icmp slt i64 %18, -1, !dbg !10242
  %19 = zext i1 %cmp23 to i64, !dbg !10241
  %cond = select i1 %cmp23, i64 14, i64 -1, !dbg !10241
  br label %cond.end, !dbg !10239

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond25 = phi i64 [ %17, %cond.true ], [ %cond, %cond.false ], !dbg !10239
  %20 = load i64*, i64** %base_max.addr, align 8, !dbg !10243, !tbaa !2648
  store i64 %cond25, i64* %20, align 8, !dbg !10244, !tbaa !3288, !ctir !55
  br label %if.end26, !dbg !10245

if.end26:                                         ; preds = %cond.end, %if.then
  %21 = load i64*, i64** %base_max.addr, align 8, !dbg !10246, !tbaa !2648
  %22 = load i64, i64* %21, align 8, !dbg !10247, !tbaa !3288, !ctir !55
  store i64 %22, i64* %baselen_max, align 8, !dbg !10248, !tbaa !3288
  br label %if.end27, !dbg !10249

if.end27:                                         ; preds = %if.end26, %entry
  %23 = load i64, i64* %baselen_max, align 8, !dbg !10250, !tbaa !3288
  %24 = load i64, i64* %baselen, align 8, !dbg !10252, !tbaa !3288
  %cmp28 = icmp ult i64 %23, %24, !dbg !10253
  br i1 %cmp28, label %if.then30, label %if.end37, !dbg !10254

if.then30:                                        ; preds = %if.end27
  %25 = load i8*, i8** %file.addr, align 8, !dbg !10255, !tbaa !2648
  %26 = load i64, i64* %filelen.addr, align 8, !dbg !10257, !tbaa !3288
  %add.ptr = getelementptr inbounds i8, i8* %25, i64 %26, !dbg !10258
  %27 = load i8*, i8** %base, align 8, !dbg !10259, !tbaa !2648
  %sub.ptr.lhs.cast = ptrtoint i8* %add.ptr to i64, !dbg !10260
  %sub.ptr.rhs.cast = ptrtoint i8* %27 to i64, !dbg !10260
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10260
  store i64 %sub.ptr.sub, i64* %baselen, align 8, !dbg !10261, !tbaa !3288
  %28 = load i64, i64* %baselen_max, align 8, !dbg !10262, !tbaa !3288
  %29 = load i64, i64* %baselen, align 8, !dbg !10264, !tbaa !3288
  %cmp31 = icmp ule i64 %28, %29, !dbg !10265
  br i1 %cmp31, label %if.then33, label %if.end35, !dbg !10266

if.then33:                                        ; preds = %if.then30
  %30 = load i64, i64* %baselen_max, align 8, !dbg !10267, !tbaa !3288
  %sub34 = sub i64 %30, 1, !dbg !10268
  store i64 %sub34, i64* %baselen, align 8, !dbg !10269, !tbaa !3288
  br label %if.end35, !dbg !10270

if.end35:                                         ; preds = %if.then33, %if.then30
  %31 = load i8, i8* %e.addr, align 1, !dbg !10271, !tbaa !3295
  %32 = load i8*, i8** %base, align 8, !dbg !10272, !tbaa !2648
  %33 = load i64, i64* %baselen, align 8, !dbg !10273, !tbaa !3288
  %arrayidx = getelementptr inbounds i8, i8* %32, i64 %33, !dbg !10272, !ctir !9
  store i8 %31, i8* %arrayidx, align 1, !dbg !10274, !tbaa !3295
  %34 = load i8*, i8** %base, align 8, !dbg !10275, !tbaa !2648
  %35 = load i64, i64* %baselen, align 8, !dbg !10276, !tbaa !3288
  %add = add i64 %35, 1, !dbg !10277
  %arrayidx36 = getelementptr inbounds i8, i8* %34, i64 %add, !dbg !10275, !ctir !9
  store i8 0, i8* %arrayidx36, align 1, !dbg !10278, !tbaa !3295
  br label %if.end37, !dbg !10279

if.end37:                                         ; preds = %if.end35, %if.end27
  ret void, !dbg !10280
}

declare dso_local i32 @closedir(%struct.__dirstream*) #3

; Function Attrs: nounwind
declare dso_local i64 @pathconf(i8*, i32) #2

; Function Attrs: nounwind
declare dso_local i64 @fpathconf(i32, i32) #2

; Function Attrs: nounwind
declare dso_local void @rewinddir(%struct.__dirstream*) #2

declare dso_local %struct.dirent* @readdir(%struct.__dirstream*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @backup_file_rename(i32 %dir_fd, i8* %file, i32 %backup_type) #4 !dbg !10281 !ctir !722 {
entry:
  %dir_fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %backup_type.addr = alloca i32, align 4
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !10283, metadata !DIExpression()), !dbg !10284
  store i8* %file, i8** %file.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10285, metadata !DIExpression()), !dbg !10286
  store i32 %backup_type, i32* %backup_type.addr, align 4, !tbaa !3295
  call void @llvm.dbg.declare(metadata i32* %backup_type.addr, metadata !10287, metadata !DIExpression()), !dbg !10288
  %0 = load i32, i32* %dir_fd.addr, align 4, !dbg !10289, !tbaa !2635
  %1 = load i8*, i8** %file.addr, align 8, !dbg !10290, !tbaa !2648
  %2 = load i32, i32* %backup_type.addr, align 4, !dbg !10291, !tbaa !3295
  %call = call i8* @backupfile_internal(i32 %0, i8* %1, i32 %2, i1 zeroext true), !dbg !10292
  ret i8* %call, !dbg !10293
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @find_backup_file_name(i32 %dir_fd, i8* %file, i32 %backup_type) #4 !dbg !10294 !ctir !722 {
entry:
  %dir_fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %backup_type.addr = alloca i32, align 4
  %result = alloca i8*, align 8, !ctir !9
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !10295, metadata !DIExpression()), !dbg !10296
  store i8* %file, i8** %file.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10297, metadata !DIExpression()), !dbg !10298
  store i32 %backup_type, i32* %backup_type.addr, align 4, !tbaa !3295
  call void @llvm.dbg.declare(metadata i32* %backup_type.addr, metadata !10299, metadata !DIExpression()), !dbg !10300
  call void @llvm.dbg.declare(metadata i8** %result, metadata !10301, metadata !DIExpression()), !dbg !10302
  %0 = load i32, i32* %dir_fd.addr, align 4, !dbg !10303, !tbaa !2635
  %1 = load i8*, i8** %file.addr, align 8, !dbg !10304, !tbaa !2648
  %2 = load i32, i32* %backup_type.addr, align 4, !dbg !10305, !tbaa !3295
  %call = call i8* @backupfile_internal(i32 %0, i8* %1, i32 %2, i1 zeroext false), !dbg !10306
  store i8* %call, i8** %result, align 8, !dbg !10302, !tbaa !2648
  %3 = load i8*, i8** %result, align 8, !dbg !10307, !tbaa !2648
  %tobool = icmp ne i8* %3, null, !dbg !10307
  br i1 %tobool, label %if.end, label %if.then, !dbg !10309

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !10310
  unreachable, !dbg !10310

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %result, align 8, !dbg !10311, !tbaa !2648
  ret i8* %4, !dbg !10312
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_version(i8* %context, i8* %version) #4 !dbg !10313 !ctir !724 {
entry:
  %retval = alloca i32, align 4
  %context.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  store i8* %context, i8** %context.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !10314, metadata !DIExpression()), !dbg !10315
  store i8* %version, i8** %version.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !10316, metadata !DIExpression()), !dbg !10317
  %0 = load i8*, i8** %version.addr, align 8, !dbg !10318, !tbaa !2648
  %cmp = icmp eq i8* %0, null, !dbg !10320
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10321

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %version.addr, align 8, !dbg !10322, !tbaa !2648
  %2 = load i8, i8* %1, align 1, !dbg !10323, !tbaa !3295, !ctir !181
  %conv = sext i8 %2 to i32, !dbg !10323
  %cmp1 = icmp eq i32 %conv, 0, !dbg !10324
  br i1 %cmp1, label %if.then, label %if.else, !dbg !10325

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 2, i32* %retval, align 4, !dbg !10326
  br label %return, !dbg !10326

if.else:                                          ; preds = %lor.lhs.false
  %3 = load i8*, i8** %context.addr, align 8, !dbg !10327, !tbaa !2648
  %4 = load i8*, i8** %version.addr, align 8, !dbg !10327, !tbaa !2648
  %5 = load void ()*, void ()** @argmatch_die, align 8, !dbg !10327, !tbaa !2648
  %call = call i64 @__xargmatch_internal(i8* %3, i8* %4, i8** getelementptr inbounds ([9 x i8*], [9 x i8*]* @backup_args, i64 0, i64 0), i8* bitcast ([8 x i32]* @backup_types to i8*), i64 4, void ()* %5), !dbg !10327
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* @backup_types, i64 0, i64 %call, !dbg !10327, !ctir !726
  %6 = load i32, i32* %arrayidx, align 4, !dbg !10327, !tbaa !3295
  store i32 %6, i32* %retval, align 4, !dbg !10328
  br label %return, !dbg !10328

return:                                           ; preds = %if.else, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !10329
  ret i32 %7, !dbg !10329
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @xget_version(i8* %context, i8* %version) #4 !dbg !10330 !ctir !724 {
entry:
  %retval = alloca i32, align 4
  %context.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  store i8* %context, i8** %context.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !10331, metadata !DIExpression()), !dbg !10332
  store i8* %version, i8** %version.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !10333, metadata !DIExpression()), !dbg !10334
  %0 = load i8*, i8** %version.addr, align 8, !dbg !10335, !tbaa !2648
  %tobool = icmp ne i8* %0, null, !dbg !10335
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !10337

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %version.addr, align 8, !dbg !10338, !tbaa !2648
  %2 = load i8, i8* %1, align 1, !dbg !10339, !tbaa !3295, !ctir !181
  %conv = sext i8 %2 to i32, !dbg !10339
  %tobool1 = icmp ne i32 %conv, 0, !dbg !10339
  br i1 %tobool1, label %if.then, label %if.else, !dbg !10340

if.then:                                          ; preds = %land.lhs.true
  %3 = load i8*, i8** %context.addr, align 8, !dbg !10341, !tbaa !2648
  %4 = load i8*, i8** %version.addr, align 8, !dbg !10342, !tbaa !2648
  %call = call i32 @get_version(i8* %3, i8* %4), !dbg !10343
  store i32 %call, i32* %retval, align 4, !dbg !10344
  br label %return, !dbg !10344

if.else:                                          ; preds = %land.lhs.true, %entry
  %call2 = call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.227, i64 0, i64 0)) #9, !dbg !10345
  %call3 = call i32 @get_version(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.228, i64 0, i64 0), i8* %call2), !dbg !10346
  store i32 %call3, i32* %retval, align 4, !dbg !10347
  br label %return, !dbg !10347

return:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !10348
  ret i32 %5, !dbg !10348
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define dso_local i64 @buffer_lcm(i64 %a, i64 %b, i64 %lcm_max) #11 !dbg !10349 !ctir !1535 {
entry:
  %retval = alloca i64, align 8
  %a.addr = alloca i64, align 8
  %b.addr = alloca i64, align 8
  %lcm_max.addr = alloca i64, align 8
  %size = alloca i64, align 8, !ctir !55
  %lcm = alloca i64, align 8, !ctir !55
  %m = alloca i64, align 8, !ctir !55
  %n = alloca i64, align 8, !ctir !55
  %q = alloca i64, align 8, !ctir !55
  %r = alloca i64, align 8, !ctir !55
  store i64 %a, i64* %a.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !10351, metadata !DIExpression()), !dbg !10352
  store i64 %b, i64* %b.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !10353, metadata !DIExpression()), !dbg !10354
  store i64 %lcm_max, i64* %lcm_max.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %lcm_max.addr, metadata !10355, metadata !DIExpression()), !dbg !10356
  call void @llvm.dbg.declare(metadata i64* %size, metadata !10357, metadata !DIExpression()), !dbg !10358
  %0 = load i64, i64* %a.addr, align 8, !dbg !10359, !tbaa !3288
  %tobool = icmp ne i64 %0, 0, !dbg !10359
  br i1 %tobool, label %if.else, label %if.then, !dbg !10361

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %b.addr, align 8, !dbg !10362, !tbaa !3288
  %tobool1 = icmp ne i64 %1, 0, !dbg !10362
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !10362

cond.true:                                        ; preds = %if.then
  %2 = load i64, i64* %b.addr, align 8, !dbg !10363, !tbaa !3288
  br label %cond.end, !dbg !10362

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !10362

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ 8192, %cond.false ], !dbg !10362
  store i64 %cond, i64* %size, align 8, !dbg !10364, !tbaa !3288
  br label %if.end9, !dbg !10365

if.else:                                          ; preds = %entry
  %3 = load i64, i64* %b.addr, align 8, !dbg !10366, !tbaa !3288
  %tobool2 = icmp ne i64 %3, 0, !dbg !10366
  br i1 %tobool2, label %if.then3, label %if.end8, !dbg !10369

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i64* %lcm, metadata !10370, metadata !DIExpression()), !dbg !10372
  call void @llvm.dbg.declare(metadata i64* %m, metadata !10373, metadata !DIExpression()), !dbg !10374
  call void @llvm.dbg.declare(metadata i64* %n, metadata !10375, metadata !DIExpression()), !dbg !10376
  call void @llvm.dbg.declare(metadata i64* %q, metadata !10377, metadata !DIExpression()), !dbg !10378
  call void @llvm.dbg.declare(metadata i64* %r, metadata !10379, metadata !DIExpression()), !dbg !10380
  %4 = load i64, i64* %a.addr, align 8, !dbg !10381, !tbaa !3288
  store i64 %4, i64* %m, align 8, !dbg !10383, !tbaa !3288
  %5 = load i64, i64* %b.addr, align 8, !dbg !10384, !tbaa !3288
  store i64 %5, i64* %n, align 8, !dbg !10385, !tbaa !3288
  br label %for.cond, !dbg !10386

for.cond:                                         ; preds = %for.inc, %if.then3
  %6 = load i64, i64* %m, align 8, !dbg !10387, !tbaa !3288
  %7 = load i64, i64* %n, align 8, !dbg !10389, !tbaa !3288
  %rem = urem i64 %6, %7, !dbg !10390
  store i64 %rem, i64* %r, align 8, !dbg !10391, !tbaa !3288
  %cmp = icmp ne i64 %rem, 0, !dbg !10392
  br i1 %cmp, label %for.body, label %for.end, !dbg !10393

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !10394

for.inc:                                          ; preds = %for.body
  %8 = load i64, i64* %n, align 8, !dbg !10395, !tbaa !3288
  store i64 %8, i64* %m, align 8, !dbg !10396, !tbaa !3288
  %9 = load i64, i64* %r, align 8, !dbg !10397, !tbaa !3288
  store i64 %9, i64* %n, align 8, !dbg !10398, !tbaa !3288
  br label %for.cond, !dbg !10399, !llvm.loop !10400

for.end:                                          ; preds = %for.cond
  %10 = load i64, i64* %a.addr, align 8, !dbg !10402, !tbaa !3288
  %11 = load i64, i64* %n, align 8, !dbg !10403, !tbaa !3288
  %div = udiv i64 %10, %11, !dbg !10404
  store i64 %div, i64* %q, align 8, !dbg !10405, !tbaa !3288
  %12 = load i64, i64* %q, align 8, !dbg !10406, !tbaa !3288
  %13 = load i64, i64* %b.addr, align 8, !dbg !10407, !tbaa !3288
  %mul = mul i64 %12, %13, !dbg !10408
  store i64 %mul, i64* %lcm, align 8, !dbg !10409, !tbaa !3288
  %14 = load i64, i64* %lcm, align 8, !dbg !10410, !tbaa !3288
  %15 = load i64, i64* %lcm_max.addr, align 8, !dbg !10412, !tbaa !3288
  %cmp4 = icmp ule i64 %14, %15, !dbg !10413
  br i1 %cmp4, label %land.lhs.true, label %if.end, !dbg !10414

land.lhs.true:                                    ; preds = %for.end
  %16 = load i64, i64* %lcm, align 8, !dbg !10415, !tbaa !3288
  %17 = load i64, i64* %b.addr, align 8, !dbg !10416, !tbaa !3288
  %div5 = udiv i64 %16, %17, !dbg !10417
  %18 = load i64, i64* %q, align 8, !dbg !10418, !tbaa !3288
  %cmp6 = icmp eq i64 %div5, %18, !dbg !10419
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !10420

if.then7:                                         ; preds = %land.lhs.true
  %19 = load i64, i64* %lcm, align 8, !dbg !10421, !tbaa !3288
  store i64 %19, i64* %retval, align 8, !dbg !10422
  br label %return, !dbg !10422

if.end:                                           ; preds = %land.lhs.true, %for.end
  br label %if.end8, !dbg !10423

if.end8:                                          ; preds = %if.end, %if.else
  %20 = load i64, i64* %a.addr, align 8, !dbg !10424, !tbaa !3288
  store i64 %20, i64* %size, align 8, !dbg !10425, !tbaa !3288
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %cond.end
  %21 = load i64, i64* %size, align 8, !dbg !10426, !tbaa !3288
  %22 = load i64, i64* %lcm_max.addr, align 8, !dbg !10427, !tbaa !3288
  %cmp10 = icmp ule i64 %21, %22, !dbg !10428
  br i1 %cmp10, label %cond.true11, label %cond.false12, !dbg !10426

cond.true11:                                      ; preds = %if.end9
  %23 = load i64, i64* %size, align 8, !dbg !10429, !tbaa !3288
  br label %cond.end13, !dbg !10426

cond.false12:                                     ; preds = %if.end9
  %24 = load i64, i64* %lcm_max.addr, align 8, !dbg !10430, !tbaa !3288
  br label %cond.end13, !dbg !10426

cond.end13:                                       ; preds = %cond.false12, %cond.true11
  %cond14 = phi i64 [ %23, %cond.true11 ], [ %24, %cond.false12 ], !dbg !10426
  store i64 %cond14, i64* %retval, align 8, !dbg !10431
  br label %return, !dbg !10431

return:                                           ; preds = %cond.end13, %if.then7
  %25 = load i64, i64* %retval, align 8, !dbg !10432
  ret i64 %25, !dbg !10432
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdin_set_file_name(i8* %file) #4 !dbg !10433 !ctir !202 {
entry:
  %file.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10434, metadata !DIExpression()), !dbg !10435
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10436, !tbaa !2648
  store i8* %0, i8** @file_name, align 8, !dbg !10437, !tbaa !2648
  ret void, !dbg !10438
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdin() #4 !dbg !10439 !ctir !200 {
entry:
  %fail = alloca i8, align 1, !ctir !142
  %close_error = alloca i8*, align 8, !ctir !180
  call void @llvm.dbg.declare(metadata i8* %fail, metadata !10440, metadata !DIExpression()), !dbg !10441
  store i8 0, i8* %fail, align 1, !dbg !10441, !tbaa !2742
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !10442, !tbaa !2648
  %call = call i64 @freadahead(%struct._IO_FILE* %0) #14, !dbg !10444
  %cmp = icmp ugt i64 %call, 0, !dbg !10445
  br i1 %cmp, label %if.then, label %if.end6, !dbg !10446

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !10447, !tbaa !2648
  %call1 = call i32 @rpl_fseeko(%struct._IO_FILE* %1, i64 0, i32 1), !dbg !10450
  %cmp2 = icmp eq i32 %call1, 0, !dbg !10451
  br i1 %cmp2, label %land.lhs.true, label %if.end, !dbg !10452

land.lhs.true:                                    ; preds = %if.then
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !10453, !tbaa !2648
  %call3 = call i32 @rpl_fflush(%struct._IO_FILE* %2), !dbg !10454
  %cmp4 = icmp ne i32 %call3, 0, !dbg !10455
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !10456

if.then5:                                         ; preds = %land.lhs.true
  store i8 1, i8* %fail, align 1, !dbg !10457, !tbaa !2742
  br label %if.end, !dbg !10458

if.end:                                           ; preds = %if.then5, %land.lhs.true, %if.then
  br label %if.end6, !dbg !10459

if.end6:                                          ; preds = %if.end, %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !10460, !tbaa !2648
  %call7 = call i32 @close_stream(%struct._IO_FILE* %3), !dbg !10462
  %cmp8 = icmp ne i32 %call7, 0, !dbg !10463
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !10464

if.then9:                                         ; preds = %if.end6
  store i8 1, i8* %fail, align 1, !dbg !10465, !tbaa !2742
  br label %if.end10, !dbg !10466

if.end10:                                         ; preds = %if.then9, %if.end6
  %4 = load i8, i8* %fail, align 1, !dbg !10467, !tbaa !2742
  %tobool = trunc i8 %4 to i1, !dbg !10467
  br i1 %tobool, label %if.then11, label %if.end19, !dbg !10469

if.then11:                                        ; preds = %if.end10
  call void @llvm.dbg.declare(metadata i8** %close_error, metadata !10470, metadata !DIExpression()), !dbg !10472
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.233, i64 0, i64 0)) #9, !dbg !10473
  store i8* %call12, i8** %close_error, align 8, !dbg !10472, !tbaa !2648
  %5 = load i8*, i8** @file_name, align 8, !dbg !10474, !tbaa !2648
  %tobool13 = icmp ne i8* %5, null, !dbg !10474
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !10476

if.then14:                                        ; preds = %if.then11
  %call15 = call i32* @__errno_location() #16, !dbg !10477
  %6 = load i32, i32* %call15, align 4, !dbg !10477, !tbaa !2635, !ctir !7
  %7 = load i8*, i8** @file_name, align 8, !dbg !10478, !tbaa !2648
  %call16 = call i8* @quotearg_colon(i8* %7), !dbg !10479
  %8 = load i8*, i8** %close_error, align 8, !dbg !10480, !tbaa !2648
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.234, i64 0, i64 0), i8* %call16, i8* %8), !dbg !10481
  br label %if.end18, !dbg !10481

if.else:                                          ; preds = %if.then11
  %call17 = call i32* @__errno_location() #16, !dbg !10482
  %9 = load i32, i32* %call17, align 4, !dbg !10482, !tbaa !2635, !ctir !7
  %10 = load i8*, i8** %close_error, align 8, !dbg !10483, !tbaa !2648
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.235, i64 0, i64 0), i8* %10), !dbg !10484
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then14
  br label %if.end19, !dbg !10485

if.end19:                                         ; preds = %if.end18, %if.end10
  call void @close_stdout(), !dbg !10486
  %11 = load i8, i8* %fail, align 1, !dbg !10487, !tbaa !2742
  %tobool20 = trunc i8 %11 to i1, !dbg !10487
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !10489

if.then21:                                        ; preds = %if.end19
  %12 = load volatile i32, i32* @exit_failure, align 4, !dbg !10490, !tbaa !2635
  call void @_exit(i32 %12) #15, !dbg !10491
  unreachable, !dbg !10491

if.end22:                                         ; preds = %if.end19
  ret void, !dbg !10492
}

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #12

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout_set_file_name(i8* %file) #4 !dbg !10493 !ctir !202 {
entry:
  %file.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10494, metadata !DIExpression()), !dbg !10495
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10496, !tbaa !2648
  store i8* %0, i8** @file_name.236, align 8, !dbg !10497, !tbaa !2648
  ret void, !dbg !10498
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout_set_ignore_EPIPE(i1 zeroext %ignore) #4 !dbg !10499 !ctir !786 {
entry:
  %ignore.addr = alloca i8, align 1
  %frombool = zext i1 %ignore to i8
  store i8 %frombool, i8* %ignore.addr, align 1, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %ignore.addr, metadata !10500, metadata !DIExpression()), !dbg !10501
  %0 = load i8, i8* %ignore.addr, align 1, !dbg !10502, !tbaa !2742
  %tobool = trunc i8 %0 to i1, !dbg !10502
  %frombool1 = zext i1 %tobool to i8, !dbg !10503
  store i8 %frombool1, i8* @ignore_EPIPE, align 1, !dbg !10503, !tbaa !2742
  ret void, !dbg !10504
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout() #4 !dbg !10505 !ctir !200 {
entry:
  %write_error = alloca i8*, align 8, !ctir !180
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !10506, !tbaa !2648
  %call = call i32 @close_stream(%struct._IO_FILE* %0), !dbg !10508
  %cmp = icmp ne i32 %call, 0, !dbg !10509
  br i1 %cmp, label %land.lhs.true, label %if.end10, !dbg !10510

land.lhs.true:                                    ; preds = %entry
  %1 = load i8, i8* @ignore_EPIPE, align 1, !dbg !10511, !tbaa !2742
  %tobool = trunc i8 %1 to i1, !dbg !10511
  br i1 %tobool, label %land.lhs.true1, label %if.then, !dbg !10512

land.lhs.true1:                                   ; preds = %land.lhs.true
  %call2 = call i32* @__errno_location() #16, !dbg !10513
  %2 = load i32, i32* %call2, align 4, !dbg !10513, !tbaa !2635, !ctir !7
  %cmp3 = icmp eq i32 %2, 32, !dbg !10514
  br i1 %cmp3, label %if.end10, label %if.then, !dbg !10515

if.then:                                          ; preds = %land.lhs.true1, %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %write_error, metadata !10516, metadata !DIExpression()), !dbg !10518
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.239, i64 0, i64 0)) #9, !dbg !10519
  store i8* %call4, i8** %write_error, align 8, !dbg !10518, !tbaa !2648
  %3 = load i8*, i8** @file_name.236, align 8, !dbg !10520, !tbaa !2648
  %tobool5 = icmp ne i8* %3, null, !dbg !10520
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !10522

if.then6:                                         ; preds = %if.then
  %call7 = call i32* @__errno_location() #16, !dbg !10523
  %4 = load i32, i32* %call7, align 4, !dbg !10523, !tbaa !2635, !ctir !7
  %5 = load i8*, i8** @file_name.236, align 8, !dbg !10524, !tbaa !2648
  %call8 = call i8* @quotearg_colon(i8* %5), !dbg !10525
  %6 = load i8*, i8** %write_error, align 8, !dbg !10526, !tbaa !2648
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.240, i64 0, i64 0), i8* %call8, i8* %6), !dbg !10527
  br label %if.end, !dbg !10527

if.else:                                          ; preds = %if.then
  %call9 = call i32* @__errno_location() #16, !dbg !10528
  %7 = load i32, i32* %call9, align 4, !dbg !10528, !tbaa !2635, !ctir !7
  %8 = load i8*, i8** %write_error, align 8, !dbg !10529, !tbaa !2648
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.241, i64 0, i64 0), i8* %8), !dbg !10530
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  %9 = load volatile i32, i32* @exit_failure, align 4, !dbg !10531, !tbaa !2635
  call void @_exit(i32 %9) #15, !dbg !10532
  unreachable, !dbg !10532

if.end10:                                         ; preds = %land.lhs.true1, %entry
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !10533, !tbaa !2648
  %call11 = call i32 @close_stream(%struct._IO_FILE* %10), !dbg !10535
  %cmp12 = icmp ne i32 %call11, 0, !dbg !10536
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !10537

if.then13:                                        ; preds = %if.end10
  %11 = load volatile i32, i32* @exit_failure, align 4, !dbg !10538, !tbaa !2635
  call void @_exit(i32 %11) #15, !dbg !10539
  unreachable, !dbg !10539

if.end14:                                         ; preds = %if.end10
  ret void, !dbg !10540
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @dir_name(i8* %file) #4 !dbg !10541 !ctir !218 {
entry:
  %file.addr = alloca i8*, align 8
  %result = alloca i8*, align 8, !ctir !9
  store i8* %file, i8** %file.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10543, metadata !DIExpression()), !dbg !10544
  call void @llvm.dbg.declare(metadata i8** %result, metadata !10545, metadata !DIExpression()), !dbg !10546
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10547, !tbaa !2648
  %call = call i8* @mdir_name(i8* %0), !dbg !10548
  store i8* %call, i8** %result, align 8, !dbg !10546, !tbaa !2648
  %1 = load i8*, i8** %result, align 8, !dbg !10549, !tbaa !2648
  %tobool = icmp ne i8* %1, null, !dbg !10549
  br i1 %tobool, label %if.end, label %if.then, !dbg !10551

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !10552
  unreachable, !dbg !10552

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %result, align 8, !dbg !10553, !tbaa !2648
  ret i8* %2, !dbg !10554
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @dir_len(i8* %file) #10 !dbg !10555 !ctir !1543 {
entry:
  %file.addr = alloca i8*, align 8
  %prefix_length = alloca i64, align 8, !ctir !55
  %length = alloca i64, align 8, !ctir !55
  store i8* %file, i8** %file.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10557, metadata !DIExpression()), !dbg !10558
  call void @llvm.dbg.declare(metadata i64* %prefix_length, metadata !10559, metadata !DIExpression()), !dbg !10560
  store i64 0, i64* %prefix_length, align 8, !dbg !10560, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %length, metadata !10561, metadata !DIExpression()), !dbg !10562
  %0 = load i64, i64* %prefix_length, align 8, !dbg !10563, !tbaa !3288
  %cmp = icmp ne i64 %0, 0, !dbg !10564
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10563

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !10563

cond.false:                                       ; preds = %entry
  %1 = load i8*, i8** %file.addr, align 8, !dbg !10565, !tbaa !2648
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !10565, !ctir !180
  %2 = load i8, i8* %arrayidx, align 1, !dbg !10565, !tbaa !3295
  %conv = sext i8 %2 to i32, !dbg !10565
  %cmp1 = icmp eq i32 %conv, 47, !dbg !10565
  %3 = zext i1 %cmp1 to i64, !dbg !10565
  %cond = select i1 %cmp1, i32 1, i32 0, !dbg !10565
  br label %cond.end, !dbg !10563

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond3 = phi i32 [ 0, %cond.true ], [ %cond, %cond.false ], !dbg !10563
  %conv4 = sext i32 %cond3 to i64, !dbg !10566
  %4 = load i64, i64* %prefix_length, align 8, !dbg !10567, !tbaa !3288
  %add = add i64 %4, %conv4, !dbg !10567
  store i64 %add, i64* %prefix_length, align 8, !dbg !10567, !tbaa !3288
  %5 = load i8*, i8** %file.addr, align 8, !dbg !10568, !tbaa !2648
  %call = call i8* @last_component(i8* %5) #14, !dbg !10570
  %6 = load i8*, i8** %file.addr, align 8, !dbg !10571, !tbaa !2648
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !10572
  %sub.ptr.rhs.cast = ptrtoint i8* %6 to i64, !dbg !10572
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10572
  store i64 %sub.ptr.sub, i64* %length, align 8, !dbg !10573, !tbaa !3288
  br label %for.cond, !dbg !10574

for.cond:                                         ; preds = %for.inc, %cond.end
  %7 = load i64, i64* %prefix_length, align 8, !dbg !10575, !tbaa !3288
  %8 = load i64, i64* %length, align 8, !dbg !10577, !tbaa !3288
  %cmp5 = icmp ult i64 %7, %8, !dbg !10578
  br i1 %cmp5, label %for.body, label %for.end, !dbg !10579

for.body:                                         ; preds = %for.cond
  %9 = load i8*, i8** %file.addr, align 8, !dbg !10580, !tbaa !2648
  %10 = load i64, i64* %length, align 8, !dbg !10580, !tbaa !3288
  %sub = sub i64 %10, 1, !dbg !10580
  %arrayidx7 = getelementptr inbounds i8, i8* %9, i64 %sub, !dbg !10580, !ctir !180
  %11 = load i8, i8* %arrayidx7, align 1, !dbg !10580, !tbaa !3295
  %conv8 = sext i8 %11 to i32, !dbg !10580
  %cmp9 = icmp eq i32 %conv8, 47, !dbg !10580
  br i1 %cmp9, label %if.end, label %if.then, !dbg !10582

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !10583

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !10580

for.inc:                                          ; preds = %if.end
  %12 = load i64, i64* %length, align 8, !dbg !10584, !tbaa !3288
  %dec = add i64 %12, -1, !dbg !10584
  store i64 %dec, i64* %length, align 8, !dbg !10584, !tbaa !3288
  br label %for.cond, !dbg !10585, !llvm.loop !10586

for.end:                                          ; preds = %if.then, %for.cond
  %13 = load i64, i64* %length, align 8, !dbg !10588, !tbaa !3288
  ret i64 %13, !dbg !10589
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @mdir_name(i8* %file) #4 !dbg !10590 !ctir !218 {
entry:
  %retval = alloca i8*, align 8
  %file.addr = alloca i8*, align 8
  %length = alloca i64, align 8, !ctir !55
  %append_dot = alloca i8, align 1, !ctir !142
  %dir = alloca i8*, align 8, !ctir !9
  store i8* %file, i8** %file.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10591, metadata !DIExpression()), !dbg !10592
  call void @llvm.dbg.declare(metadata i64* %length, metadata !10593, metadata !DIExpression()), !dbg !10594
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10595, !tbaa !2648
  %call = call i64 @dir_len(i8* %0) #14, !dbg !10596
  store i64 %call, i64* %length, align 8, !dbg !10594, !tbaa !3288
  call void @llvm.dbg.declare(metadata i8* %append_dot, metadata !10597, metadata !DIExpression()), !dbg !10598
  %1 = load i64, i64* %length, align 8, !dbg !10599, !tbaa !3288
  %cmp = icmp eq i64 %1, 0, !dbg !10600
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !10601

lor.rhs:                                          ; preds = %entry
  br label %lor.end, !dbg !10601

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ false, %lor.rhs ]
  %frombool = zext i1 %2 to i8, !dbg !10598
  store i8 %frombool, i8* %append_dot, align 1, !dbg !10598, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8** %dir, metadata !10602, metadata !DIExpression()), !dbg !10603
  %3 = load i64, i64* %length, align 8, !dbg !10604, !tbaa !3288
  %4 = load i8, i8* %append_dot, align 1, !dbg !10605, !tbaa !2742
  %tobool = trunc i8 %4 to i1, !dbg !10605
  %conv = zext i1 %tobool to i64, !dbg !10605
  %add = add i64 %3, %conv, !dbg !10606
  %add1 = add i64 %add, 1, !dbg !10607
  %call2 = call noalias i8* @malloc(i64 %add1) #9, !dbg !10608
  store i8* %call2, i8** %dir, align 8, !dbg !10603, !tbaa !2648
  %5 = load i8*, i8** %dir, align 8, !dbg !10609, !tbaa !2648
  %tobool3 = icmp ne i8* %5, null, !dbg !10609
  br i1 %tobool3, label %if.end, label %if.then, !dbg !10611

if.then:                                          ; preds = %lor.end
  store i8* null, i8** %retval, align 8, !dbg !10612
  br label %return, !dbg !10612

if.end:                                           ; preds = %lor.end
  %6 = load i8*, i8** %dir, align 8, !dbg !10613, !tbaa !2648
  %7 = load i8*, i8** %file.addr, align 8, !dbg !10614, !tbaa !2648
  %8 = load i64, i64* %length, align 8, !dbg !10615, !tbaa !3288
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %7, i64 %8, i1 false), !dbg !10616
  %9 = load i8, i8* %append_dot, align 1, !dbg !10617, !tbaa !2742
  %tobool4 = trunc i8 %9 to i1, !dbg !10617
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !10619

if.then5:                                         ; preds = %if.end
  %10 = load i8*, i8** %dir, align 8, !dbg !10620, !tbaa !2648
  %11 = load i64, i64* %length, align 8, !dbg !10621, !tbaa !3288
  %inc = add i64 %11, 1, !dbg !10621
  store i64 %inc, i64* %length, align 8, !dbg !10621, !tbaa !3288
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 %11, !dbg !10620, !ctir !9
  store i8 46, i8* %arrayidx, align 1, !dbg !10622, !tbaa !3295
  br label %if.end6, !dbg !10620

if.end6:                                          ; preds = %if.then5, %if.end
  %12 = load i8*, i8** %dir, align 8, !dbg !10623, !tbaa !2648
  %13 = load i64, i64* %length, align 8, !dbg !10624, !tbaa !3288
  %arrayidx7 = getelementptr inbounds i8, i8* %12, i64 %13, !dbg !10623, !ctir !9
  store i8 0, i8* %arrayidx7, align 1, !dbg !10625, !tbaa !3295
  %14 = load i8*, i8** %dir, align 8, !dbg !10626, !tbaa !2648
  store i8* %14, i8** %retval, align 8, !dbg !10627
  br label %return, !dbg !10627

return:                                           ; preds = %if.end6, %if.then
  %15 = load i8*, i8** %retval, align 8, !dbg !10628
  ret i8* %15, !dbg !10628
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @last_component(i8* %name) #10 !dbg !10629 !ctir !218 {
entry:
  %name.addr = alloca i8*, align 8
  %base = alloca i8*, align 8, !ctir !180
  %p = alloca i8*, align 8, !ctir !180
  %saw_slash = alloca i8, align 1, !ctir !142
  store i8* %name, i8** %name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10631, metadata !DIExpression()), !dbg !10632
  call void @llvm.dbg.declare(metadata i8** %base, metadata !10633, metadata !DIExpression()), !dbg !10634
  %0 = load i8*, i8** %name.addr, align 8, !dbg !10635, !tbaa !2648
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 0, !dbg !10636
  store i8* %add.ptr, i8** %base, align 8, !dbg !10634, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10637, metadata !DIExpression()), !dbg !10638
  call void @llvm.dbg.declare(metadata i8* %saw_slash, metadata !10639, metadata !DIExpression()), !dbg !10640
  store i8 0, i8* %saw_slash, align 1, !dbg !10640, !tbaa !2742
  br label %while.cond, !dbg !10641

while.cond:                                       ; preds = %while.body, %entry
  %1 = load i8*, i8** %base, align 8, !dbg !10642, !tbaa !2648
  %2 = load i8, i8* %1, align 1, !dbg !10642, !tbaa !3295, !ctir !181
  %conv = sext i8 %2 to i32, !dbg !10642
  %cmp = icmp eq i32 %conv, 47, !dbg !10642
  br i1 %cmp, label %while.body, label %while.end, !dbg !10641

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %base, align 8, !dbg !10643, !tbaa !2648
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !10643
  store i8* %incdec.ptr, i8** %base, align 8, !dbg !10643, !tbaa !2648
  br label %while.cond, !dbg !10641, !llvm.loop !10644

while.end:                                        ; preds = %while.cond
  %4 = load i8*, i8** %base, align 8, !dbg !10645, !tbaa !2648
  store i8* %4, i8** %p, align 8, !dbg !10647, !tbaa !2648
  br label %for.cond, !dbg !10648

for.cond:                                         ; preds = %for.inc, %while.end
  %5 = load i8*, i8** %p, align 8, !dbg !10649, !tbaa !2648
  %6 = load i8, i8* %5, align 1, !dbg !10651, !tbaa !3295, !ctir !181
  %tobool = icmp ne i8 %6, 0, !dbg !10652
  br i1 %tobool, label %for.body, label %for.end, !dbg !10652

for.body:                                         ; preds = %for.cond
  %7 = load i8*, i8** %p, align 8, !dbg !10653, !tbaa !2648
  %8 = load i8, i8* %7, align 1, !dbg !10653, !tbaa !3295, !ctir !181
  %conv2 = sext i8 %8 to i32, !dbg !10653
  %cmp3 = icmp eq i32 %conv2, 47, !dbg !10653
  br i1 %cmp3, label %if.then, label %if.else, !dbg !10656

if.then:                                          ; preds = %for.body
  store i8 1, i8* %saw_slash, align 1, !dbg !10657, !tbaa !2742
  br label %if.end7, !dbg !10658

if.else:                                          ; preds = %for.body
  %9 = load i8, i8* %saw_slash, align 1, !dbg !10659, !tbaa !2742
  %tobool5 = trunc i8 %9 to i1, !dbg !10659
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !10661

if.then6:                                         ; preds = %if.else
  %10 = load i8*, i8** %p, align 8, !dbg !10662, !tbaa !2648
  store i8* %10, i8** %base, align 8, !dbg !10664, !tbaa !2648
  store i8 0, i8* %saw_slash, align 1, !dbg !10665, !tbaa !2742
  br label %if.end, !dbg !10666

if.end:                                           ; preds = %if.then6, %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  br label %for.inc, !dbg !10667

for.inc:                                          ; preds = %if.end7
  %11 = load i8*, i8** %p, align 8, !dbg !10668, !tbaa !2648
  %incdec.ptr8 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !10668
  store i8* %incdec.ptr8, i8** %p, align 8, !dbg !10668, !tbaa !2648
  br label %for.cond, !dbg !10669, !llvm.loop !10670

for.end:                                          ; preds = %for.cond
  %12 = load i8*, i8** %base, align 8, !dbg !10672, !tbaa !2648
  ret i8* %12, !dbg !10673
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @base_len(i8* %name) #10 !dbg !10674 !ctir !1543 {
entry:
  %name.addr = alloca i8*, align 8
  %len = alloca i64, align 8, !ctir !55
  %prefix_len = alloca i64, align 8, !ctir !55
  store i8* %name, i8** %name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10675, metadata !DIExpression()), !dbg !10676
  call void @llvm.dbg.declare(metadata i64* %len, metadata !10677, metadata !DIExpression()), !dbg !10678
  call void @llvm.dbg.declare(metadata i64* %prefix_len, metadata !10679, metadata !DIExpression()), !dbg !10680
  store i64 0, i64* %prefix_len, align 8, !dbg !10680, !tbaa !3288
  %0 = load i8*, i8** %name.addr, align 8, !dbg !10681, !tbaa !2648
  %call = call i64 @strlen(i8* %0) #14, !dbg !10683
  store i64 %call, i64* %len, align 8, !dbg !10684, !tbaa !3288
  br label %for.cond, !dbg !10685

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64, i64* %len, align 8, !dbg !10686, !tbaa !3288
  %cmp = icmp ult i64 1, %1, !dbg !10688
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !10689

land.rhs:                                         ; preds = %for.cond
  %2 = load i8*, i8** %name.addr, align 8, !dbg !10690, !tbaa !2648
  %3 = load i64, i64* %len, align 8, !dbg !10690, !tbaa !3288
  %sub = sub i64 %3, 1, !dbg !10690
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %sub, !dbg !10690, !ctir !180
  %4 = load i8, i8* %arrayidx, align 1, !dbg !10690, !tbaa !3295
  %conv = sext i8 %4 to i32, !dbg !10690
  %cmp1 = icmp eq i32 %conv, 47, !dbg !10690
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %5 = phi i1 [ false, %for.cond ], [ %cmp1, %land.rhs ], !dbg !10691
  br i1 %5, label %for.body, label %for.end, !dbg !10692

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !10693

for.inc:                                          ; preds = %for.body
  %6 = load i64, i64* %len, align 8, !dbg !10694, !tbaa !3288
  %dec = add i64 %6, -1, !dbg !10694
  store i64 %dec, i64* %len, align 8, !dbg !10694, !tbaa !3288
  br label %for.cond, !dbg !10695, !llvm.loop !10696

for.end:                                          ; preds = %land.end
  %7 = load i64, i64* %len, align 8, !dbg !10698, !tbaa !3288
  ret i64 %7, !dbg !10699
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @fdadvise(i32 %fd, i64 %offset, i64 %len, i32 %advice) #4 !dbg !10700 !ctir !1561 {
entry:
  %fd.addr = alloca i32, align 4
  %offset.addr = alloca i64, align 8
  %len.addr = alloca i64, align 8
  %advice.addr = alloca i32, align 4
  %__x = alloca i32, align 4, !ctir !7
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !10702, metadata !DIExpression()), !dbg !10703
  store i64 %offset, i64* %offset.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !10704, metadata !DIExpression()), !dbg !10705
  store i64 %len, i64* %len.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !10706, metadata !DIExpression()), !dbg !10707
  store i32 %advice, i32* %advice.addr, align 4, !tbaa !3295
  call void @llvm.dbg.declare(metadata i32* %advice.addr, metadata !10708, metadata !DIExpression()), !dbg !10709
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !10710, metadata !DIExpression()), !dbg !10712
  %0 = load i32, i32* %fd.addr, align 4, !dbg !10712, !tbaa !2635
  %1 = load i64, i64* %offset.addr, align 8, !dbg !10712, !tbaa !3288
  %2 = load i64, i64* %len.addr, align 8, !dbg !10712, !tbaa !3288
  %3 = load i32, i32* %advice.addr, align 4, !dbg !10712, !tbaa !3295
  %call = call i32 @posix_fadvise(i32 %0, i64 %1, i64 %2, i32 %3) #9, !dbg !10712
  store i32 %call, i32* %__x, align 4, !dbg !10712, !tbaa !2635
  %4 = load i32, i32* %__x, align 4, !dbg !10712, !tbaa !2635
  ret void, !dbg !10713
}

; Function Attrs: nounwind
declare dso_local i32 @posix_fadvise(i32, i64, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @fadvise(%struct._IO_FILE* %fp, i32 %advice) #4 !dbg !10714 !ctir !1564 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %advice.addr = alloca i32, align 4
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !10715, metadata !DIExpression()), !dbg !10716
  store i32 %advice, i32* %advice.addr, align 4, !tbaa !3295
  call void @llvm.dbg.declare(metadata i32* %advice.addr, metadata !10717, metadata !DIExpression()), !dbg !10718
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !10719, !tbaa !2648
  %tobool = icmp ne %struct._IO_FILE* %0, null, !dbg !10719
  br i1 %tobool, label %if.then, label %if.end, !dbg !10721

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !10722, !tbaa !2648
  %call = call i32 @fileno(%struct._IO_FILE* %1) #9, !dbg !10723
  %2 = load i32, i32* %advice.addr, align 4, !dbg !10724, !tbaa !3295
  call void @fdadvise(i32 %call, i64 0, i64 0, i32 %2), !dbg !10725
  br label %if.end, !dbg !10725

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !10726
}

; Function Attrs: nounwind
declare dso_local i32 @fileno(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @open_safer(i8* %file, i32 %flags, ...) #4 !dbg !10727 !ctir !1603 {
entry:
  %file.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %mode = alloca i32, align 4, !ctir !139
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1605
  store i8* %file, i8** %file.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10731, metadata !DIExpression()), !dbg !10732
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10733, metadata !DIExpression()), !dbg !10734
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !10735, metadata !DIExpression()), !dbg !10736
  store i32 0, i32* %mode, align 4, !dbg !10736, !tbaa !2635
  %0 = load i32, i32* %flags.addr, align 4, !dbg !10737, !tbaa !2635
  %and = and i32 %0, 64, !dbg !10739
  %tobool = icmp ne i32 %and, 0, !dbg !10739
  br i1 %tobool, label %if.then, label %if.end, !dbg !10740

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !10741, metadata !DIExpression()), !dbg !10743
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !10744
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !10744
  call void @llvm.va_start(i8* %arraydecay1), !dbg !10744
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !10745
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0, !dbg !10745
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !10745
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !10745
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !10745

vaarg.in_reg:                                     ; preds = %if.then
  %1 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3, !dbg !10745
  %reg_save_area = load i8*, i8** %1, align 16, !dbg !10745
  %2 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !10745
  %3 = bitcast i8* %2 to i32*, !dbg !10745
  %4 = add i32 %gp_offset, 8, !dbg !10745
  store i32 %4, i32* %gp_offset_p, align 16, !dbg !10745
  br label %vaarg.end, !dbg !10745

vaarg.in_mem:                                     ; preds = %if.then
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !10745
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !10745
  %5 = bitcast i8* %overflow_arg_area to i32*, !dbg !10745
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !10745
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !10745
  br label %vaarg.end, !dbg !10745

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %3, %vaarg.in_reg ], [ %5, %vaarg.in_mem ], !dbg !10745
  %6 = load i32, i32* %vaarg.addr, align 4, !dbg !10745
  store i32 %6, i32* %mode, align 4, !dbg !10746, !tbaa !2635
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !10747
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !10747
  call void @llvm.va_end(i8* %arraydecay34), !dbg !10747
  br label %if.end, !dbg !10748

if.end:                                           ; preds = %vaarg.end, %entry
  %7 = load i8*, i8** %file.addr, align 8, !dbg !10749, !tbaa !2648
  %8 = load i32, i32* %flags.addr, align 4, !dbg !10750, !tbaa !2635
  %9 = load i32, i32* %mode, align 4, !dbg !10751, !tbaa !2635
  %call = call i32 (i8*, i32, ...) @open(i8* %7, i32 %8, i32 %9), !dbg !10752
  %call5 = call i32 @fd_safer(i32 %call), !dbg !10753
  ret i32 %call5, !dbg !10754
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @record_file(%struct.hash_table* %ht, i8* nonnull %file, %struct.stat* nonnull %stats) #4 !dbg !10755 !ctir !1617 {
entry:
  %ht.addr = alloca %struct.hash_table*, align 8
  %file.addr = alloca i8*, align 8
  %stats.addr = alloca %struct.stat*, align 8
  %ent = alloca %struct.F_triple*, align 8, !ctir !1642
  %ent_from_table = alloca %struct.F_triple*, align 8, !ctir !1642
  store %struct.hash_table* %ht, %struct.hash_table** %ht.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.hash_table** %ht.addr, metadata !10757, metadata !DIExpression()), !dbg !10758
  store i8* %file, i8** %file.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10759, metadata !DIExpression()), !dbg !10760
  store %struct.stat* %stats, %struct.stat** %stats.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.stat** %stats.addr, metadata !10761, metadata !DIExpression()), !dbg !10762
  call void @llvm.dbg.declare(metadata %struct.F_triple** %ent, metadata !10763, metadata !DIExpression()), !dbg !10764
  %0 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10765, !tbaa !2648
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !10767
  br i1 %cmp, label %if.then, label %if.end, !dbg !10768

if.then:                                          ; preds = %entry
  br label %if.end10, !dbg !10769

if.end:                                           ; preds = %entry
  %call = call noalias i8* @xmalloc(i64 24), !dbg !10770
  %1 = bitcast i8* %call to %struct.F_triple*, !dbg !10770
  store %struct.F_triple* %1, %struct.F_triple** %ent, align 8, !dbg !10771, !tbaa !2648
  %2 = load i8*, i8** %file.addr, align 8, !dbg !10772, !tbaa !2648
  %call1 = call noalias i8* @xstrdup(i8* %2), !dbg !10773
  %3 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10774, !tbaa !2648
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %3, i32 0, i32 0, !dbg !10775, !ctir !1643
  store i8* %call1, i8** %name, align 8, !dbg !10776, !tbaa !10777, !ctir !9
  %4 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10779, !tbaa !2648
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 1, !dbg !10780, !ctir !1620
  %5 = load i64, i64* %st_ino, align 8, !dbg !10780, !tbaa !4791, !ctir !276
  %6 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10781, !tbaa !2648
  %st_ino2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !10782, !ctir !1643
  store i64 %5, i64* %st_ino2, align 8, !dbg !10783, !tbaa !10784, !ctir !441
  %7 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10785, !tbaa !2648
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %7, i32 0, i32 0, !dbg !10786, !ctir !1620
  %8 = load i64, i64* %st_dev, align 8, !dbg !10786, !tbaa !4770, !ctir !274
  %9 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10787, !tbaa !2648
  %st_dev3 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %9, i32 0, i32 2, !dbg !10788, !ctir !1643
  store i64 %8, i64* %st_dev3, align 8, !dbg !10789, !tbaa !10790, !ctir !443
  call void @llvm.dbg.declare(metadata %struct.F_triple** %ent_from_table, metadata !10791, metadata !DIExpression()), !dbg !10793
  %10 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10794, !tbaa !2648
  %11 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10795, !tbaa !2648
  %12 = bitcast %struct.F_triple* %11 to i8*, !dbg !10795
  %call4 = call i8* @hash_insert(%struct.hash_table* %10, i8* %12), !dbg !10796
  %13 = bitcast i8* %call4 to %struct.F_triple*, !dbg !10796
  store %struct.F_triple* %13, %struct.F_triple** %ent_from_table, align 8, !dbg !10793, !tbaa !2648
  %14 = load %struct.F_triple*, %struct.F_triple** %ent_from_table, align 8, !dbg !10797, !tbaa !2648
  %cmp5 = icmp eq %struct.F_triple* %14, null, !dbg !10799
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !10800

if.then6:                                         ; preds = %if.end
  call void @xalloc_die() #15, !dbg !10801
  unreachable, !dbg !10801

if.end7:                                          ; preds = %if.end
  %15 = load %struct.F_triple*, %struct.F_triple** %ent_from_table, align 8, !dbg !10803, !tbaa !2648
  %16 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10805, !tbaa !2648
  %cmp8 = icmp ne %struct.F_triple* %15, %16, !dbg !10806
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !10807

if.then9:                                         ; preds = %if.end7
  %17 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10808, !tbaa !2648
  %18 = bitcast %struct.F_triple* %17 to i8*, !dbg !10808
  call void @triple_free(i8* %18), !dbg !10810
  br label %if.end10, !dbg !10811

if.end10:                                         ; preds = %if.then, %if.then9, %if.end7
  ret void, !dbg !10812
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @seen_file(%struct.hash_table* %ht, i8* %file, %struct.stat* %stats) #4 !dbg !10813 !ctir !1649 {
entry:
  %retval = alloca i1, align 1
  %ht.addr = alloca %struct.hash_table*, align 8
  %file.addr = alloca i8*, align 8
  %stats.addr = alloca %struct.stat*, align 8
  %new_ent = alloca %struct.F_triple, align 8, !ctir !1643
  store %struct.hash_table* %ht, %struct.hash_table** %ht.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.hash_table** %ht.addr, metadata !10814, metadata !DIExpression()), !dbg !10815
  store i8* %file, i8** %file.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10816, metadata !DIExpression()), !dbg !10817
  store %struct.stat* %stats, %struct.stat** %stats.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.stat** %stats.addr, metadata !10818, metadata !DIExpression()), !dbg !10819
  call void @llvm.dbg.declare(metadata %struct.F_triple* %new_ent, metadata !10820, metadata !DIExpression()), !dbg !10821
  %0 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10822, !tbaa !2648
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !10824
  br i1 %cmp, label %if.then, label %if.end, !dbg !10825

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !10826
  br label %return, !dbg !10826

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %file.addr, align 8, !dbg !10827, !tbaa !2648
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 0, !dbg !10828, !ctir !1643
  store i8* %1, i8** %name, align 8, !dbg !10829, !tbaa !10777, !ctir !9
  %2 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10830, !tbaa !2648
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 1, !dbg !10831, !ctir !1620
  %3 = load i64, i64* %st_ino, align 8, !dbg !10831, !tbaa !4791, !ctir !276
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 1, !dbg !10832, !ctir !1643
  store i64 %3, i64* %st_ino1, align 8, !dbg !10833, !tbaa !10784, !ctir !441
  %4 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10834, !tbaa !2648
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 0, !dbg !10835, !ctir !1620
  %5 = load i64, i64* %st_dev, align 8, !dbg !10835, !tbaa !4770, !ctir !274
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 2, !dbg !10836, !ctir !1643
  store i64 %5, i64* %st_dev2, align 8, !dbg !10837, !tbaa !10790, !ctir !443
  %6 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10838, !tbaa !2648
  %7 = bitcast %struct.F_triple* %new_ent to i8*, !dbg !10839
  %call = call i8* @hash_lookup(%struct.hash_table* %6, i8* %7), !dbg !10840
  %tobool = icmp ne i8* %call, null, !dbg !10841
  %lnot = xor i1 %tobool, true, !dbg !10841
  %lnot3 = xor i1 %lnot, true, !dbg !10842
  store i1 %lnot3, i1* %retval, align 1, !dbg !10843
  br label %return, !dbg !10843

return:                                           ; preds = %if.end, %if.then
  %8 = load i1, i1* %retval, align 1, !dbg !10844
  ret i1 %8, !dbg !10844
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @strmode(i32 %mode, i8* %str) #4 !dbg !10845 !ctir !1656 {
entry:
  %mode.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !10847, metadata !DIExpression()), !dbg !10848
  store i8* %str, i8** %str.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !10849, metadata !DIExpression()), !dbg !10850
  %0 = load i32, i32* %mode.addr, align 4, !dbg !10851, !tbaa !2635
  %call = call signext i8 @ftypelet(i32 %0), !dbg !10852
  %1 = load i8*, i8** %str.addr, align 8, !dbg !10853, !tbaa !2648
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !10853, !ctir !9
  store i8 %call, i8* %arrayidx, align 1, !dbg !10854, !tbaa !3295
  %2 = load i32, i32* %mode.addr, align 4, !dbg !10855, !tbaa !2635
  %and = and i32 %2, 256, !dbg !10856
  %tobool = icmp ne i32 %and, 0, !dbg !10855
  %3 = zext i1 %tobool to i64, !dbg !10855
  %cond = select i1 %tobool, i32 114, i32 45, !dbg !10855
  %conv = trunc i32 %cond to i8, !dbg !10855
  %4 = load i8*, i8** %str.addr, align 8, !dbg !10857, !tbaa !2648
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !10857, !ctir !9
  store i8 %conv, i8* %arrayidx1, align 1, !dbg !10858, !tbaa !3295
  %5 = load i32, i32* %mode.addr, align 4, !dbg !10859, !tbaa !2635
  %and2 = and i32 %5, 128, !dbg !10860
  %tobool3 = icmp ne i32 %and2, 0, !dbg !10859
  %6 = zext i1 %tobool3 to i64, !dbg !10859
  %cond4 = select i1 %tobool3, i32 119, i32 45, !dbg !10859
  %conv5 = trunc i32 %cond4 to i8, !dbg !10859
  %7 = load i8*, i8** %str.addr, align 8, !dbg !10861, !tbaa !2648
  %arrayidx6 = getelementptr inbounds i8, i8* %7, i64 2, !dbg !10861, !ctir !9
  store i8 %conv5, i8* %arrayidx6, align 1, !dbg !10862, !tbaa !3295
  %8 = load i32, i32* %mode.addr, align 4, !dbg !10863, !tbaa !2635
  %and7 = and i32 %8, 2048, !dbg !10864
  %tobool8 = icmp ne i32 %and7, 0, !dbg !10864
  br i1 %tobool8, label %cond.true, label %cond.false, !dbg !10863

cond.true:                                        ; preds = %entry
  %9 = load i32, i32* %mode.addr, align 4, !dbg !10865, !tbaa !2635
  %and9 = and i32 %9, 64, !dbg !10866
  %tobool10 = icmp ne i32 %and9, 0, !dbg !10865
  %10 = zext i1 %tobool10 to i64, !dbg !10865
  %cond11 = select i1 %tobool10, i32 115, i32 83, !dbg !10865
  br label %cond.end, !dbg !10863

cond.false:                                       ; preds = %entry
  %11 = load i32, i32* %mode.addr, align 4, !dbg !10867, !tbaa !2635
  %and12 = and i32 %11, 64, !dbg !10868
  %tobool13 = icmp ne i32 %and12, 0, !dbg !10867
  %12 = zext i1 %tobool13 to i64, !dbg !10867
  %cond14 = select i1 %tobool13, i32 120, i32 45, !dbg !10867
  br label %cond.end, !dbg !10863

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond15 = phi i32 [ %cond11, %cond.true ], [ %cond14, %cond.false ], !dbg !10863
  %conv16 = trunc i32 %cond15 to i8, !dbg !10869
  %13 = load i8*, i8** %str.addr, align 8, !dbg !10870, !tbaa !2648
  %arrayidx17 = getelementptr inbounds i8, i8* %13, i64 3, !dbg !10870, !ctir !9
  store i8 %conv16, i8* %arrayidx17, align 1, !dbg !10871, !tbaa !3295
  %14 = load i32, i32* %mode.addr, align 4, !dbg !10872, !tbaa !2635
  %and18 = and i32 %14, 32, !dbg !10873
  %tobool19 = icmp ne i32 %and18, 0, !dbg !10872
  %15 = zext i1 %tobool19 to i64, !dbg !10872
  %cond20 = select i1 %tobool19, i32 114, i32 45, !dbg !10872
  %conv21 = trunc i32 %cond20 to i8, !dbg !10872
  %16 = load i8*, i8** %str.addr, align 8, !dbg !10874, !tbaa !2648
  %arrayidx22 = getelementptr inbounds i8, i8* %16, i64 4, !dbg !10874, !ctir !9
  store i8 %conv21, i8* %arrayidx22, align 1, !dbg !10875, !tbaa !3295
  %17 = load i32, i32* %mode.addr, align 4, !dbg !10876, !tbaa !2635
  %and23 = and i32 %17, 16, !dbg !10877
  %tobool24 = icmp ne i32 %and23, 0, !dbg !10876
  %18 = zext i1 %tobool24 to i64, !dbg !10876
  %cond25 = select i1 %tobool24, i32 119, i32 45, !dbg !10876
  %conv26 = trunc i32 %cond25 to i8, !dbg !10876
  %19 = load i8*, i8** %str.addr, align 8, !dbg !10878, !tbaa !2648
  %arrayidx27 = getelementptr inbounds i8, i8* %19, i64 5, !dbg !10878, !ctir !9
  store i8 %conv26, i8* %arrayidx27, align 1, !dbg !10879, !tbaa !3295
  %20 = load i32, i32* %mode.addr, align 4, !dbg !10880, !tbaa !2635
  %and28 = and i32 %20, 1024, !dbg !10881
  %tobool29 = icmp ne i32 %and28, 0, !dbg !10881
  br i1 %tobool29, label %cond.true30, label %cond.false34, !dbg !10880

cond.true30:                                      ; preds = %cond.end
  %21 = load i32, i32* %mode.addr, align 4, !dbg !10882, !tbaa !2635
  %and31 = and i32 %21, 8, !dbg !10883
  %tobool32 = icmp ne i32 %and31, 0, !dbg !10882
  %22 = zext i1 %tobool32 to i64, !dbg !10882
  %cond33 = select i1 %tobool32, i32 115, i32 83, !dbg !10882
  br label %cond.end38, !dbg !10880

cond.false34:                                     ; preds = %cond.end
  %23 = load i32, i32* %mode.addr, align 4, !dbg !10884, !tbaa !2635
  %and35 = and i32 %23, 8, !dbg !10885
  %tobool36 = icmp ne i32 %and35, 0, !dbg !10884
  %24 = zext i1 %tobool36 to i64, !dbg !10884
  %cond37 = select i1 %tobool36, i32 120, i32 45, !dbg !10884
  br label %cond.end38, !dbg !10880

cond.end38:                                       ; preds = %cond.false34, %cond.true30
  %cond39 = phi i32 [ %cond33, %cond.true30 ], [ %cond37, %cond.false34 ], !dbg !10880
  %conv40 = trunc i32 %cond39 to i8, !dbg !10886
  %25 = load i8*, i8** %str.addr, align 8, !dbg !10887, !tbaa !2648
  %arrayidx41 = getelementptr inbounds i8, i8* %25, i64 6, !dbg !10887, !ctir !9
  store i8 %conv40, i8* %arrayidx41, align 1, !dbg !10888, !tbaa !3295
  %26 = load i32, i32* %mode.addr, align 4, !dbg !10889, !tbaa !2635
  %and42 = and i32 %26, 4, !dbg !10890
  %tobool43 = icmp ne i32 %and42, 0, !dbg !10889
  %27 = zext i1 %tobool43 to i64, !dbg !10889
  %cond44 = select i1 %tobool43, i32 114, i32 45, !dbg !10889
  %conv45 = trunc i32 %cond44 to i8, !dbg !10889
  %28 = load i8*, i8** %str.addr, align 8, !dbg !10891, !tbaa !2648
  %arrayidx46 = getelementptr inbounds i8, i8* %28, i64 7, !dbg !10891, !ctir !9
  store i8 %conv45, i8* %arrayidx46, align 1, !dbg !10892, !tbaa !3295
  %29 = load i32, i32* %mode.addr, align 4, !dbg !10893, !tbaa !2635
  %and47 = and i32 %29, 2, !dbg !10894
  %tobool48 = icmp ne i32 %and47, 0, !dbg !10893
  %30 = zext i1 %tobool48 to i64, !dbg !10893
  %cond49 = select i1 %tobool48, i32 119, i32 45, !dbg !10893
  %conv50 = trunc i32 %cond49 to i8, !dbg !10893
  %31 = load i8*, i8** %str.addr, align 8, !dbg !10895, !tbaa !2648
  %arrayidx51 = getelementptr inbounds i8, i8* %31, i64 8, !dbg !10895, !ctir !9
  store i8 %conv50, i8* %arrayidx51, align 1, !dbg !10896, !tbaa !3295
  %32 = load i32, i32* %mode.addr, align 4, !dbg !10897, !tbaa !2635
  %and52 = and i32 %32, 512, !dbg !10898
  %tobool53 = icmp ne i32 %and52, 0, !dbg !10898
  br i1 %tobool53, label %cond.true54, label %cond.false58, !dbg !10897

cond.true54:                                      ; preds = %cond.end38
  %33 = load i32, i32* %mode.addr, align 4, !dbg !10899, !tbaa !2635
  %and55 = and i32 %33, 1, !dbg !10900
  %tobool56 = icmp ne i32 %and55, 0, !dbg !10899
  %34 = zext i1 %tobool56 to i64, !dbg !10899
  %cond57 = select i1 %tobool56, i32 116, i32 84, !dbg !10899
  br label %cond.end62, !dbg !10897

cond.false58:                                     ; preds = %cond.end38
  %35 = load i32, i32* %mode.addr, align 4, !dbg !10901, !tbaa !2635
  %and59 = and i32 %35, 1, !dbg !10902
  %tobool60 = icmp ne i32 %and59, 0, !dbg !10901
  %36 = zext i1 %tobool60 to i64, !dbg !10901
  %cond61 = select i1 %tobool60, i32 120, i32 45, !dbg !10901
  br label %cond.end62, !dbg !10897

cond.end62:                                       ; preds = %cond.false58, %cond.true54
  %cond63 = phi i32 [ %cond57, %cond.true54 ], [ %cond61, %cond.false58 ], !dbg !10897
  %conv64 = trunc i32 %cond63 to i8, !dbg !10903
  %37 = load i8*, i8** %str.addr, align 8, !dbg !10904, !tbaa !2648
  %arrayidx65 = getelementptr inbounds i8, i8* %37, i64 9, !dbg !10904, !ctir !9
  store i8 %conv64, i8* %arrayidx65, align 1, !dbg !10905, !tbaa !3295
  %38 = load i8*, i8** %str.addr, align 8, !dbg !10906, !tbaa !2648
  %arrayidx66 = getelementptr inbounds i8, i8* %38, i64 10, !dbg !10906, !ctir !9
  store i8 32, i8* %arrayidx66, align 1, !dbg !10907, !tbaa !3295
  %39 = load i8*, i8** %str.addr, align 8, !dbg !10908, !tbaa !2648
  %arrayidx67 = getelementptr inbounds i8, i8* %39, i64 11, !dbg !10908, !ctir !9
  store i8 0, i8* %arrayidx67, align 1, !dbg !10909, !tbaa !3295
  ret void, !dbg !10910
}

; Function Attrs: noinline nounwind optnone uwtable
define internal signext i8 @ftypelet(i32 %bits) #4 !dbg !10911 !ctir !1683 {
entry:
  %retval = alloca i8, align 1
  %bits.addr = alloca i32, align 4
  store i32 %bits, i32* %bits.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !10912, metadata !DIExpression()), !dbg !10913
  %0 = load i32, i32* %bits.addr, align 4, !dbg !10914, !tbaa !2635
  %and = and i32 %0, 61440, !dbg !10914
  %cmp = icmp eq i32 %and, 32768, !dbg !10914
  br i1 %cmp, label %if.then, label %if.end, !dbg !10916

if.then:                                          ; preds = %entry
  store i8 45, i8* %retval, align 1, !dbg !10917
  br label %return, !dbg !10917

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %bits.addr, align 4, !dbg !10918, !tbaa !2635
  %and1 = and i32 %1, 61440, !dbg !10918
  %cmp2 = icmp eq i32 %and1, 16384, !dbg !10918
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !10920

if.then3:                                         ; preds = %if.end
  store i8 100, i8* %retval, align 1, !dbg !10921
  br label %return, !dbg !10921

if.end4:                                          ; preds = %if.end
  %2 = load i32, i32* %bits.addr, align 4, !dbg !10922, !tbaa !2635
  %and5 = and i32 %2, 61440, !dbg !10922
  %cmp6 = icmp eq i32 %and5, 24576, !dbg !10922
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !10924

if.then7:                                         ; preds = %if.end4
  store i8 98, i8* %retval, align 1, !dbg !10925
  br label %return, !dbg !10925

if.end8:                                          ; preds = %if.end4
  %3 = load i32, i32* %bits.addr, align 4, !dbg !10926, !tbaa !2635
  %and9 = and i32 %3, 61440, !dbg !10926
  %cmp10 = icmp eq i32 %and9, 8192, !dbg !10926
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !10928

if.then11:                                        ; preds = %if.end8
  store i8 99, i8* %retval, align 1, !dbg !10929
  br label %return, !dbg !10929

if.end12:                                         ; preds = %if.end8
  %4 = load i32, i32* %bits.addr, align 4, !dbg !10930, !tbaa !2635
  %and13 = and i32 %4, 61440, !dbg !10930
  %cmp14 = icmp eq i32 %and13, 40960, !dbg !10930
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !10932

if.then15:                                        ; preds = %if.end12
  store i8 108, i8* %retval, align 1, !dbg !10933
  br label %return, !dbg !10933

if.end16:                                         ; preds = %if.end12
  %5 = load i32, i32* %bits.addr, align 4, !dbg !10934, !tbaa !2635
  %and17 = and i32 %5, 61440, !dbg !10934
  %cmp18 = icmp eq i32 %and17, 4096, !dbg !10934
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !10936

if.then19:                                        ; preds = %if.end16
  store i8 112, i8* %retval, align 1, !dbg !10937
  br label %return, !dbg !10937

if.end20:                                         ; preds = %if.end16
  %6 = load i32, i32* %bits.addr, align 4, !dbg !10938, !tbaa !2635
  %and21 = and i32 %6, 61440, !dbg !10938
  %cmp22 = icmp eq i32 %and21, 49152, !dbg !10938
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !10940

if.then23:                                        ; preds = %if.end20
  store i8 115, i8* %retval, align 1, !dbg !10941
  br label %return, !dbg !10941

if.end24:                                         ; preds = %if.end20
  store i8 63, i8* %retval, align 1, !dbg !10942
  br label %return, !dbg !10942

return:                                           ; preds = %if.end24, %if.then23, %if.then19, %if.then15, %if.then11, %if.then7, %if.then3, %if.then
  %7 = load i8, i8* %retval, align 1, !dbg !10943
  ret i8 %7, !dbg !10943
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @filemodestring(%struct.stat* %statp, i8* %str) #4 !dbg !10944 !ctir !1658 {
entry:
  %statp.addr = alloca %struct.stat*, align 8
  %str.addr = alloca i8*, align 8
  store %struct.stat* %statp, %struct.stat** %statp.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.stat** %statp.addr, metadata !10945, metadata !DIExpression()), !dbg !10946
  store i8* %str, i8** %str.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !10947, metadata !DIExpression()), !dbg !10948
  %0 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10949, !tbaa !2648
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !10950, !ctir !1661
  %1 = load i32, i32* %st_mode, align 8, !dbg !10950, !tbaa !2914, !ctir !140
  %2 = load i8*, i8** %str.addr, align 8, !dbg !10951, !tbaa !2648
  call void @strmode(i32 %1, i8* %2), !dbg !10952
  %3 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10953, !tbaa !2648
  %st_mode1 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 3, !dbg !10953, !ctir !1661
  %4 = load i32, i32* %st_mode1, align 8, !dbg !10953, !tbaa !2914, !ctir !140
  %5 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10953, !tbaa !2648
  %st_mode2 = getelementptr inbounds %struct.stat, %struct.stat* %5, i32 0, i32 3, !dbg !10953, !ctir !1661
  %6 = load i32, i32* %st_mode2, align 8, !dbg !10953, !tbaa !2914, !ctir !140
  %sub = sub i32 %4, %6, !dbg !10953
  %tobool = icmp ne i32 %sub, 0, !dbg !10953
  br i1 %tobool, label %if.then, label %if.else, !dbg !10955

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %str.addr, align 8, !dbg !10956, !tbaa !2648
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 0, !dbg !10956, !ctir !9
  store i8 70, i8* %arrayidx, align 1, !dbg !10957, !tbaa !3295
  br label %if.end18, !dbg !10956

if.else:                                          ; preds = %entry
  %8 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10958, !tbaa !2648
  %st_mode3 = getelementptr inbounds %struct.stat, %struct.stat* %8, i32 0, i32 3, !dbg !10958, !ctir !1661
  %9 = load i32, i32* %st_mode3, align 8, !dbg !10958, !tbaa !2914, !ctir !140
  %10 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10958, !tbaa !2648
  %st_mode4 = getelementptr inbounds %struct.stat, %struct.stat* %10, i32 0, i32 3, !dbg !10958, !ctir !1661
  %11 = load i32, i32* %st_mode4, align 8, !dbg !10958, !tbaa !2914, !ctir !140
  %sub5 = sub i32 %9, %11, !dbg !10958
  %tobool6 = icmp ne i32 %sub5, 0, !dbg !10958
  br i1 %tobool6, label %if.then7, label %if.else9, !dbg !10961

if.then7:                                         ; preds = %if.else
  %12 = load i8*, i8** %str.addr, align 8, !dbg !10962, !tbaa !2648
  %arrayidx8 = getelementptr inbounds i8, i8* %12, i64 0, !dbg !10962, !ctir !9
  store i8 81, i8* %arrayidx8, align 1, !dbg !10963, !tbaa !3295
  br label %if.end17, !dbg !10962

if.else9:                                         ; preds = %if.else
  %13 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10964, !tbaa !2648
  %st_mode10 = getelementptr inbounds %struct.stat, %struct.stat* %13, i32 0, i32 3, !dbg !10964, !ctir !1661
  %14 = load i32, i32* %st_mode10, align 8, !dbg !10964, !tbaa !2914, !ctir !140
  %15 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10964, !tbaa !2648
  %st_mode11 = getelementptr inbounds %struct.stat, %struct.stat* %15, i32 0, i32 3, !dbg !10964, !ctir !1661
  %16 = load i32, i32* %st_mode11, align 8, !dbg !10964, !tbaa !2914, !ctir !140
  %sub12 = sub i32 %14, %16, !dbg !10964
  %tobool13 = icmp ne i32 %sub12, 0, !dbg !10964
  br i1 %tobool13, label %if.then14, label %if.else16, !dbg !10966

if.then14:                                        ; preds = %if.else9
  %17 = load i8*, i8** %str.addr, align 8, !dbg !10967, !tbaa !2648
  %arrayidx15 = getelementptr inbounds i8, i8* %17, i64 0, !dbg !10967, !ctir !9
  store i8 83, i8* %arrayidx15, align 1, !dbg !10968, !tbaa !3295
  br label %if.end, !dbg !10967

if.else16:                                        ; preds = %if.else9
  br label %if.end

if.end:                                           ; preds = %if.else16, %if.then14
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then7
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then
  ret void, !dbg !10969
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @file_name_concat(i8* %dir, i8* %base, i8** %base_in_result) #4 !dbg !10970 !ctir !1688 {
entry:
  %dir.addr = alloca i8*, align 8
  %base.addr = alloca i8*, align 8
  %base_in_result.addr = alloca i8**, align 8
  %p = alloca i8*, align 8, !ctir !9
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !10972, metadata !DIExpression()), !dbg !10973
  store i8* %base, i8** %base.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !10974, metadata !DIExpression()), !dbg !10975
  store i8** %base_in_result, i8*** %base_in_result.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8*** %base_in_result.addr, metadata !10976, metadata !DIExpression()), !dbg !10977
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10978, metadata !DIExpression()), !dbg !10979
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !10980, !tbaa !2648
  %1 = load i8*, i8** %base.addr, align 8, !dbg !10981, !tbaa !2648
  %2 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !10982, !tbaa !2648
  %call = call i8* @mfile_name_concat(i8* %0, i8* %1, i8** %2), !dbg !10983
  store i8* %call, i8** %p, align 8, !dbg !10979, !tbaa !2648
  %3 = load i8*, i8** %p, align 8, !dbg !10984, !tbaa !2648
  %cmp = icmp eq i8* %3, null, !dbg !10986
  br i1 %cmp, label %if.then, label %if.end, !dbg !10987

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !10988
  unreachable, !dbg !10988

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %p, align 8, !dbg !10989, !tbaa !2648
  ret i8* %4, !dbg !10990
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @mfile_name_concat(i8* %dir, i8* %base, i8** %base_in_result) #4 !dbg !10991 !ctir !1688 {
entry:
  %retval = alloca i8*, align 8
  %dir.addr = alloca i8*, align 8
  %base.addr = alloca i8*, align 8
  %base_in_result.addr = alloca i8**, align 8
  %dirbase = alloca i8*, align 8, !ctir !180
  %dirbaselen = alloca i64, align 8, !ctir !55
  %dirlen = alloca i64, align 8, !ctir !55
  %baselen = alloca i64, align 8, !ctir !55
  %sep = alloca i8, align 1, !ctir !10
  %p_concat = alloca i8*, align 8, !ctir !9
  %p = alloca i8*, align 8, !ctir !9
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !10993, metadata !DIExpression()), !dbg !10994
  store i8* %base, i8** %base.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !10995, metadata !DIExpression()), !dbg !10996
  store i8** %base_in_result, i8*** %base_in_result.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8*** %base_in_result.addr, metadata !10997, metadata !DIExpression()), !dbg !10998
  call void @llvm.dbg.declare(metadata i8** %dirbase, metadata !10999, metadata !DIExpression()), !dbg !11000
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !11001, !tbaa !2648
  %call = call i8* @last_component(i8* %0) #14, !dbg !11002
  store i8* %call, i8** %dirbase, align 8, !dbg !11000, !tbaa !2648
  call void @llvm.dbg.declare(metadata i64* %dirbaselen, metadata !11003, metadata !DIExpression()), !dbg !11004
  %1 = load i8*, i8** %dirbase, align 8, !dbg !11005, !tbaa !2648
  %call1 = call i64 @base_len(i8* %1) #14, !dbg !11006
  store i64 %call1, i64* %dirbaselen, align 8, !dbg !11004, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %dirlen, metadata !11007, metadata !DIExpression()), !dbg !11008
  %2 = load i8*, i8** %dirbase, align 8, !dbg !11009, !tbaa !2648
  %3 = load i8*, i8** %dir.addr, align 8, !dbg !11010, !tbaa !2648
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !11011
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !11011
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11011
  %4 = load i64, i64* %dirbaselen, align 8, !dbg !11012, !tbaa !3288
  %add = add i64 %sub.ptr.sub, %4, !dbg !11013
  store i64 %add, i64* %dirlen, align 8, !dbg !11008, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %baselen, metadata !11014, metadata !DIExpression()), !dbg !11015
  %5 = load i8*, i8** %base.addr, align 8, !dbg !11016, !tbaa !2648
  %call2 = call i64 @strlen(i8* %5) #14, !dbg !11017
  store i64 %call2, i64* %baselen, align 8, !dbg !11015, !tbaa !3288
  call void @llvm.dbg.declare(metadata i8* %sep, metadata !11018, metadata !DIExpression()), !dbg !11019
  store i8 0, i8* %sep, align 1, !dbg !11019, !tbaa !3295
  %6 = load i64, i64* %dirbaselen, align 8, !dbg !11020, !tbaa !3288
  %tobool = icmp ne i64 %6, 0, !dbg !11020
  br i1 %tobool, label %if.then, label %if.else, !dbg !11022

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %dir.addr, align 8, !dbg !11023, !tbaa !2648
  %8 = load i64, i64* %dirlen, align 8, !dbg !11023, !tbaa !3288
  %sub = sub i64 %8, 1, !dbg !11023
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %sub, !dbg !11023, !ctir !180
  %9 = load i8, i8* %arrayidx, align 1, !dbg !11023, !tbaa !3295
  %conv = sext i8 %9 to i32, !dbg !11023
  %cmp = icmp eq i32 %conv, 47, !dbg !11023
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !11026

land.lhs.true:                                    ; preds = %if.then
  %10 = load i8*, i8** %base.addr, align 8, !dbg !11027, !tbaa !2648
  %11 = load i8, i8* %10, align 1, !dbg !11027, !tbaa !3295, !ctir !181
  %conv4 = sext i8 %11 to i32, !dbg !11027
  %cmp5 = icmp eq i32 %conv4, 47, !dbg !11027
  br i1 %cmp5, label %if.end, label %if.then7, !dbg !11028

if.then7:                                         ; preds = %land.lhs.true
  store i8 47, i8* %sep, align 1, !dbg !11029, !tbaa !3295
  br label %if.end, !dbg !11030

if.end:                                           ; preds = %if.then7, %land.lhs.true, %if.then
  br label %if.end13, !dbg !11031

if.else:                                          ; preds = %entry
  %12 = load i8*, i8** %base.addr, align 8, !dbg !11032, !tbaa !2648
  %13 = load i8, i8* %12, align 1, !dbg !11032, !tbaa !3295, !ctir !181
  %conv8 = sext i8 %13 to i32, !dbg !11032
  %cmp9 = icmp eq i32 %conv8, 47, !dbg !11032
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !11034

if.then11:                                        ; preds = %if.else
  store i8 46, i8* %sep, align 1, !dbg !11035, !tbaa !3295
  br label %if.end12, !dbg !11037

if.end12:                                         ; preds = %if.then11, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.end
  call void @llvm.dbg.declare(metadata i8** %p_concat, metadata !11038, metadata !DIExpression()), !dbg !11039
  %14 = load i64, i64* %dirlen, align 8, !dbg !11040, !tbaa !3288
  %15 = load i8, i8* %sep, align 1, !dbg !11041, !tbaa !3295
  %conv14 = sext i8 %15 to i32, !dbg !11041
  %cmp15 = icmp ne i32 %conv14, 0, !dbg !11042
  %conv16 = zext i1 %cmp15 to i32, !dbg !11042
  %conv17 = sext i32 %conv16 to i64, !dbg !11043
  %add18 = add i64 %14, %conv17, !dbg !11044
  %16 = load i64, i64* %baselen, align 8, !dbg !11045, !tbaa !3288
  %add19 = add i64 %add18, %16, !dbg !11046
  %add20 = add i64 %add19, 1, !dbg !11047
  %call21 = call noalias i8* @malloc(i64 %add20) #9, !dbg !11048
  store i8* %call21, i8** %p_concat, align 8, !dbg !11039, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %p, metadata !11049, metadata !DIExpression()), !dbg !11050
  %17 = load i8*, i8** %p_concat, align 8, !dbg !11051, !tbaa !2648
  %cmp22 = icmp eq i8* %17, null, !dbg !11053
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !11054

if.then24:                                        ; preds = %if.end13
  store i8* null, i8** %retval, align 8, !dbg !11055
  br label %return, !dbg !11055

if.end25:                                         ; preds = %if.end13
  %18 = load i8*, i8** %p_concat, align 8, !dbg !11056, !tbaa !2648
  %19 = load i8*, i8** %dir.addr, align 8, !dbg !11057, !tbaa !2648
  %20 = load i64, i64* %dirlen, align 8, !dbg !11058, !tbaa !3288
  %call26 = call i8* @mempcpy(i8* %18, i8* %19, i64 %20) #9, !dbg !11059
  store i8* %call26, i8** %p, align 8, !dbg !11060, !tbaa !2648
  %21 = load i8, i8* %sep, align 1, !dbg !11061, !tbaa !3295
  %22 = load i8*, i8** %p, align 8, !dbg !11062, !tbaa !2648
  store i8 %21, i8* %22, align 1, !dbg !11063, !tbaa !3295, !ctir !10
  %23 = load i8, i8* %sep, align 1, !dbg !11064, !tbaa !3295
  %conv27 = sext i8 %23 to i32, !dbg !11064
  %cmp28 = icmp ne i32 %conv27, 0, !dbg !11065
  %conv29 = zext i1 %cmp28 to i32, !dbg !11065
  %24 = load i8*, i8** %p, align 8, !dbg !11066, !tbaa !2648
  %idx.ext = sext i32 %conv29 to i64, !dbg !11066
  %add.ptr = getelementptr inbounds i8, i8* %24, i64 %idx.ext, !dbg !11066
  store i8* %add.ptr, i8** %p, align 8, !dbg !11066, !tbaa !2648
  %25 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !11067, !tbaa !2648
  %tobool30 = icmp ne i8** %25, null, !dbg !11067
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !11069

if.then31:                                        ; preds = %if.end25
  %26 = load i8*, i8** %p, align 8, !dbg !11070, !tbaa !2648
  %27 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !11071, !tbaa !2648
  store i8* %26, i8** %27, align 8, !dbg !11072, !tbaa !2648, !ctir !9
  br label %if.end32, !dbg !11073

if.end32:                                         ; preds = %if.then31, %if.end25
  %28 = load i8*, i8** %p, align 8, !dbg !11074, !tbaa !2648
  %29 = load i8*, i8** %base.addr, align 8, !dbg !11075, !tbaa !2648
  %30 = load i64, i64* %baselen, align 8, !dbg !11076, !tbaa !3288
  %call33 = call i8* @mempcpy(i8* %28, i8* %29, i64 %30) #9, !dbg !11077
  store i8* %call33, i8** %p, align 8, !dbg !11078, !tbaa !2648
  %31 = load i8*, i8** %p, align 8, !dbg !11079, !tbaa !2648
  store i8 0, i8* %31, align 1, !dbg !11080, !tbaa !3295, !ctir !10
  %32 = load i8*, i8** %p_concat, align 8, !dbg !11081, !tbaa !2648
  store i8* %32, i8** %retval, align 8, !dbg !11082
  br label %return, !dbg !11082

return:                                           ; preds = %if.end32, %if.then24
  %33 = load i8*, i8** %retval, align 8, !dbg !11083
  ret i8* %33, !dbg !11083
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @full_read(i32 %fd, i8* %buf, i64 %count) #4 !dbg !11084 !ctir !1696 {
entry:
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %total = alloca i64, align 8, !ctir !55
  %ptr = alloca i8*, align 8, !ctir !9
  %n_rw = alloca i64, align 8, !ctir !55
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !11085, metadata !DIExpression()), !dbg !11086
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11087, metadata !DIExpression()), !dbg !11088
  store i64 %count, i64* %count.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !11089, metadata !DIExpression()), !dbg !11090
  call void @llvm.dbg.declare(metadata i64* %total, metadata !11091, metadata !DIExpression()), !dbg !11092
  store i64 0, i64* %total, align 8, !dbg !11092, !tbaa !3288
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !11093, metadata !DIExpression()), !dbg !11094
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11095, !tbaa !2648
  store i8* %0, i8** %ptr, align 8, !dbg !11094, !tbaa !2648
  br label %while.cond, !dbg !11096

while.cond:                                       ; preds = %if.end5, %entry
  %1 = load i64, i64* %count.addr, align 8, !dbg !11097, !tbaa !3288
  %cmp = icmp ugt i64 %1, 0, !dbg !11098
  br i1 %cmp, label %while.body, label %while.end, !dbg !11096

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %n_rw, metadata !11099, metadata !DIExpression()), !dbg !11101
  %2 = load i32, i32* %fd.addr, align 4, !dbg !11102, !tbaa !2635
  %3 = load i8*, i8** %ptr, align 8, !dbg !11103, !tbaa !2648
  %4 = load i64, i64* %count.addr, align 8, !dbg !11104, !tbaa !3288
  %call = call i64 @safe_read(i32 %2, i8* %3, i64 %4), !dbg !11105
  store i64 %call, i64* %n_rw, align 8, !dbg !11101, !tbaa !3288
  %5 = load i64, i64* %n_rw, align 8, !dbg !11106, !tbaa !3288
  %cmp1 = icmp eq i64 %5, -1, !dbg !11108
  br i1 %cmp1, label %if.then, label %if.end, !dbg !11109

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !11110

if.end:                                           ; preds = %while.body
  %6 = load i64, i64* %n_rw, align 8, !dbg !11111, !tbaa !3288
  %cmp2 = icmp eq i64 %6, 0, !dbg !11113
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !11114

if.then3:                                         ; preds = %if.end
  %call4 = call i32* @__errno_location() #16, !dbg !11115
  store i32 0, i32* %call4, align 4, !dbg !11117, !tbaa !2635, !ctir !7
  br label %while.end, !dbg !11118

if.end5:                                          ; preds = %if.end
  %7 = load i64, i64* %n_rw, align 8, !dbg !11119, !tbaa !3288
  %8 = load i64, i64* %total, align 8, !dbg !11120, !tbaa !3288
  %add = add i64 %8, %7, !dbg !11120
  store i64 %add, i64* %total, align 8, !dbg !11120, !tbaa !3288
  %9 = load i64, i64* %n_rw, align 8, !dbg !11121, !tbaa !3288
  %10 = load i8*, i8** %ptr, align 8, !dbg !11122, !tbaa !2648
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %9, !dbg !11122
  store i8* %add.ptr, i8** %ptr, align 8, !dbg !11122, !tbaa !2648
  %11 = load i64, i64* %n_rw, align 8, !dbg !11123, !tbaa !3288
  %12 = load i64, i64* %count.addr, align 8, !dbg !11124, !tbaa !3288
  %sub = sub i64 %12, %11, !dbg !11124
  store i64 %sub, i64* %count.addr, align 8, !dbg !11124, !tbaa !3288
  br label %while.cond, !dbg !11096, !llvm.loop !11125

while.end:                                        ; preds = %if.then3, %if.then, %while.cond
  %13 = load i64, i64* %total, align 8, !dbg !11127, !tbaa !3288
  ret i64 %13, !dbg !11128
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @full_write(i32 %fd, i8* %buf, i64 %count) #4 !dbg !11129 !ctir !1701 {
entry:
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %total = alloca i64, align 8, !ctir !55
  %ptr = alloca i8*, align 8, !ctir !180
  %n_rw = alloca i64, align 8, !ctir !55
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !11131, metadata !DIExpression()), !dbg !11132
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11133, metadata !DIExpression()), !dbg !11134
  store i64 %count, i64* %count.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !11135, metadata !DIExpression()), !dbg !11136
  call void @llvm.dbg.declare(metadata i64* %total, metadata !11137, metadata !DIExpression()), !dbg !11138
  store i64 0, i64* %total, align 8, !dbg !11138, !tbaa !3288
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !11139, metadata !DIExpression()), !dbg !11140
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11141, !tbaa !2648
  store i8* %0, i8** %ptr, align 8, !dbg !11140, !tbaa !2648
  br label %while.cond, !dbg !11142

while.cond:                                       ; preds = %if.end5, %entry
  %1 = load i64, i64* %count.addr, align 8, !dbg !11143, !tbaa !3288
  %cmp = icmp ugt i64 %1, 0, !dbg !11144
  br i1 %cmp, label %while.body, label %while.end, !dbg !11142

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %n_rw, metadata !11145, metadata !DIExpression()), !dbg !11147
  %2 = load i32, i32* %fd.addr, align 4, !dbg !11148, !tbaa !2635
  %3 = load i8*, i8** %ptr, align 8, !dbg !11149, !tbaa !2648
  %4 = load i64, i64* %count.addr, align 8, !dbg !11150, !tbaa !3288
  %call = call i64 @safe_write(i32 %2, i8* %3, i64 %4), !dbg !11151
  store i64 %call, i64* %n_rw, align 8, !dbg !11147, !tbaa !3288
  %5 = load i64, i64* %n_rw, align 8, !dbg !11152, !tbaa !3288
  %cmp1 = icmp eq i64 %5, -1, !dbg !11154
  br i1 %cmp1, label %if.then, label %if.end, !dbg !11155

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !11156

if.end:                                           ; preds = %while.body
  %6 = load i64, i64* %n_rw, align 8, !dbg !11157, !tbaa !3288
  %cmp2 = icmp eq i64 %6, 0, !dbg !11159
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !11160

if.then3:                                         ; preds = %if.end
  %call4 = call i32* @__errno_location() #16, !dbg !11161
  store i32 28, i32* %call4, align 4, !dbg !11163, !tbaa !2635, !ctir !7
  br label %while.end, !dbg !11164

if.end5:                                          ; preds = %if.end
  %7 = load i64, i64* %n_rw, align 8, !dbg !11165, !tbaa !3288
  %8 = load i64, i64* %total, align 8, !dbg !11166, !tbaa !3288
  %add = add i64 %8, %7, !dbg !11166
  store i64 %add, i64* %total, align 8, !dbg !11166, !tbaa !3288
  %9 = load i64, i64* %n_rw, align 8, !dbg !11167, !tbaa !3288
  %10 = load i8*, i8** %ptr, align 8, !dbg !11168, !tbaa !2648
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %9, !dbg !11168
  store i8* %add.ptr, i8** %ptr, align 8, !dbg !11168, !tbaa !2648
  %11 = load i64, i64* %n_rw, align 8, !dbg !11169, !tbaa !3288
  %12 = load i64, i64* %count.addr, align 8, !dbg !11170, !tbaa !3288
  %sub = sub i64 %12, %11, !dbg !11170
  store i64 %sub, i64* %count.addr, align 8, !dbg !11170, !tbaa !3288
  br label %while.cond, !dbg !11142, !llvm.loop !11171

while.end:                                        ; preds = %if.then3, %if.then, %while.cond
  %13 = load i64, i64* %total, align 8, !dbg !11173, !tbaa !3288
  ret i64 %13, !dbg !11174
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_buckets(%struct.hash_table* %table) #10 !dbg !11175 !ctir !838 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11176, metadata !DIExpression()), !dbg !11177
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11178, !tbaa !2648
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 2, !dbg !11179, !ctir !841
  %1 = load i64, i64* %n_buckets, align 8, !dbg !11179, !tbaa !11180, !ctir !55
  ret i64 %1, !dbg !11182
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_buckets_used(%struct.hash_table* %table) #10 !dbg !11183 !ctir !838 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11184, metadata !DIExpression()), !dbg !11185
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11186, !tbaa !2648
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 3, !dbg !11187, !ctir !841
  %1 = load i64, i64* %n_buckets_used, align 8, !dbg !11187, !tbaa !11188, !ctir !55
  ret i64 %1, !dbg !11189
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_entries(%struct.hash_table* %table) #10 !dbg !11190 !ctir !838 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11191, metadata !DIExpression()), !dbg !11192
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11193, !tbaa !2648
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 4, !dbg !11194, !ctir !841
  %1 = load i64, i64* %n_entries, align 8, !dbg !11194, !tbaa !11195, !ctir !55
  ret i64 %1, !dbg !11196
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_max_bucket_length(%struct.hash_table* %table) #10 !dbg !11197 !ctir !838 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !853
  %max_bucket_length = alloca i64, align 8, !ctir !55
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !853
  %bucket_length = alloca i64, align 8, !ctir !55
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11198, metadata !DIExpression()), !dbg !11199
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11200, metadata !DIExpression()), !dbg !11201
  call void @llvm.dbg.declare(metadata i64* %max_bucket_length, metadata !11202, metadata !DIExpression()), !dbg !11203
  store i64 0, i64* %max_bucket_length, align 8, !dbg !11203, !tbaa !3288
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11204, !tbaa !2648
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11206, !ctir !841
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11206, !tbaa !11207, !ctir !847
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11208, !tbaa !2648
  br label %for.cond, !dbg !11209

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11210, !tbaa !2648
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11212, !tbaa !2648
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11213, !ctir !841
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11213, !tbaa !11214, !ctir !853
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11215
  br i1 %cmp, label %for.body, label %for.end, !dbg !11216

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11217, !tbaa !2648
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11220, !ctir !854
  %6 = load i8*, i8** %data, align 8, !dbg !11220, !tbaa !11221, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !11217
  br i1 %tobool, label %if.then, label %if.end5, !dbg !11223

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11224, metadata !DIExpression()), !dbg !11226
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11227, !tbaa !2648
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11226, !tbaa !2648
  call void @llvm.dbg.declare(metadata i64* %bucket_length, metadata !11228, metadata !DIExpression()), !dbg !11229
  store i64 1, i64* %bucket_length, align 8, !dbg !11229, !tbaa !3288
  br label %while.cond, !dbg !11230

while.cond:                                       ; preds = %while.body, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11231, !tbaa !2648
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %8, i32 0, i32 1, !dbg !11232, !ctir !854
  %9 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11232, !tbaa !11233, !ctir !847
  store %struct.hash_entry* %9, %struct.hash_entry** %cursor, align 8, !dbg !11234, !tbaa !2648
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11235, !tbaa !2648
  %tobool2 = icmp ne %struct.hash_entry* %10, null, !dbg !11230
  br i1 %tobool2, label %while.body, label %while.end, !dbg !11230

while.body:                                       ; preds = %while.cond
  %11 = load i64, i64* %bucket_length, align 8, !dbg !11236, !tbaa !3288
  %inc = add i64 %11, 1, !dbg !11236
  store i64 %inc, i64* %bucket_length, align 8, !dbg !11236, !tbaa !3288
  br label %while.cond, !dbg !11230, !llvm.loop !11237

while.end:                                        ; preds = %while.cond
  %12 = load i64, i64* %bucket_length, align 8, !dbg !11238, !tbaa !3288
  %13 = load i64, i64* %max_bucket_length, align 8, !dbg !11240, !tbaa !3288
  %cmp3 = icmp ugt i64 %12, %13, !dbg !11241
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !11242

if.then4:                                         ; preds = %while.end
  %14 = load i64, i64* %bucket_length, align 8, !dbg !11243, !tbaa !3288
  store i64 %14, i64* %max_bucket_length, align 8, !dbg !11244, !tbaa !3288
  br label %if.end, !dbg !11245

if.end:                                           ; preds = %if.then4, %while.end
  br label %if.end5, !dbg !11246

if.end5:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !11247

for.inc:                                          ; preds = %if.end5
  %15 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11248, !tbaa !2648
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 1, !dbg !11248
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11248, !tbaa !2648
  br label %for.cond, !dbg !11249, !llvm.loop !11250

for.end:                                          ; preds = %for.cond
  %16 = load i64, i64* %max_bucket_length, align 8, !dbg !11252, !tbaa !3288
  ret i64 %16, !dbg !11253
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @hash_table_ok(%struct.hash_table* %table) #10 !dbg !11254 !ctir !880 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !853
  %n_buckets_used = alloca i64, align 8, !ctir !55
  %n_entries = alloca i64, align 8, !ctir !55
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !853
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11255, metadata !DIExpression()), !dbg !11256
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11257, metadata !DIExpression()), !dbg !11258
  call void @llvm.dbg.declare(metadata i64* %n_buckets_used, metadata !11259, metadata !DIExpression()), !dbg !11260
  store i64 0, i64* %n_buckets_used, align 8, !dbg !11260, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %n_entries, metadata !11261, metadata !DIExpression()), !dbg !11262
  store i64 0, i64* %n_entries, align 8, !dbg !11262, !tbaa !3288
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11263, !tbaa !2648
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11265, !ctir !841
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11265, !tbaa !11207, !ctir !847
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11266, !tbaa !2648
  br label %for.cond, !dbg !11267

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11268, !tbaa !2648
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11270, !tbaa !2648
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11271, !ctir !841
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11271, !tbaa !11214, !ctir !853
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11272
  br i1 %cmp, label %for.body, label %for.end, !dbg !11273

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11274, !tbaa !2648
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11277, !ctir !854
  %6 = load i8*, i8** %data, align 8, !dbg !11277, !tbaa !11221, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !11274
  br i1 %tobool, label %if.then, label %if.end, !dbg !11278

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11279, metadata !DIExpression()), !dbg !11281
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11282, !tbaa !2648
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11281, !tbaa !2648
  %8 = load i64, i64* %n_buckets_used, align 8, !dbg !11283, !tbaa !3288
  %inc = add i64 %8, 1, !dbg !11283
  store i64 %inc, i64* %n_buckets_used, align 8, !dbg !11283, !tbaa !3288
  %9 = load i64, i64* %n_entries, align 8, !dbg !11284, !tbaa !3288
  %inc2 = add i64 %9, 1, !dbg !11284
  store i64 %inc2, i64* %n_entries, align 8, !dbg !11284, !tbaa !3288
  br label %while.cond, !dbg !11285

while.cond:                                       ; preds = %while.body, %if.then
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11286, !tbaa !2648
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 1, !dbg !11287, !ctir !854
  %11 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11287, !tbaa !11233, !ctir !847
  store %struct.hash_entry* %11, %struct.hash_entry** %cursor, align 8, !dbg !11288, !tbaa !2648
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11289, !tbaa !2648
  %tobool3 = icmp ne %struct.hash_entry* %12, null, !dbg !11285
  br i1 %tobool3, label %while.body, label %while.end, !dbg !11285

while.body:                                       ; preds = %while.cond
  %13 = load i64, i64* %n_entries, align 8, !dbg !11290, !tbaa !3288
  %inc4 = add i64 %13, 1, !dbg !11290
  store i64 %inc4, i64* %n_entries, align 8, !dbg !11290, !tbaa !3288
  br label %while.cond, !dbg !11285, !llvm.loop !11291

while.end:                                        ; preds = %while.cond
  br label %if.end, !dbg !11292

if.end:                                           ; preds = %while.end, %for.body
  br label %for.inc, !dbg !11293

for.inc:                                          ; preds = %if.end
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11294, !tbaa !2648
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 1, !dbg !11294
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11294, !tbaa !2648
  br label %for.cond, !dbg !11295, !llvm.loop !11296

for.end:                                          ; preds = %for.cond
  %15 = load i64, i64* %n_buckets_used, align 8, !dbg !11298, !tbaa !3288
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11300, !tbaa !2648
  %n_buckets_used5 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 3, !dbg !11301, !ctir !841
  %17 = load i64, i64* %n_buckets_used5, align 8, !dbg !11301, !tbaa !11188, !ctir !55
  %cmp6 = icmp eq i64 %15, %17, !dbg !11302
  br i1 %cmp6, label %land.lhs.true, label %if.end10, !dbg !11303

land.lhs.true:                                    ; preds = %for.end
  %18 = load i64, i64* %n_entries, align 8, !dbg !11304, !tbaa !3288
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11305, !tbaa !2648
  %n_entries7 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 4, !dbg !11306, !ctir !841
  %20 = load i64, i64* %n_entries7, align 8, !dbg !11306, !tbaa !11195, !ctir !55
  %cmp8 = icmp eq i64 %18, %20, !dbg !11307
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !11308

if.then9:                                         ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !11309
  br label %return, !dbg !11309

if.end10:                                         ; preds = %land.lhs.true, %for.end
  store i1 false, i1* %retval, align 1, !dbg !11310
  br label %return, !dbg !11310

return:                                           ; preds = %if.end10, %if.then9
  %21 = load i1, i1* %retval, align 1, !dbg !11311
  ret i1 %21, !dbg !11311
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_print_statistics(%struct.hash_table* %table, %struct._IO_FILE* %stream) #4 !dbg !11312 !ctir !882 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %n_entries = alloca i64, align 8, !ctir !55
  %n_buckets = alloca i64, align 8, !ctir !55
  %n_buckets_used = alloca i64, align 8, !ctir !55
  %max_bucket_length = alloca i64, align 8, !ctir !55
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11313, metadata !DIExpression()), !dbg !11314
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !11315, metadata !DIExpression()), !dbg !11316
  call void @llvm.dbg.declare(metadata i64* %n_entries, metadata !11317, metadata !DIExpression()), !dbg !11318
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11319, !tbaa !2648
  %call = call i64 @hash_get_n_entries(%struct.hash_table* %0) #14, !dbg !11320
  store i64 %call, i64* %n_entries, align 8, !dbg !11318, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %n_buckets, metadata !11321, metadata !DIExpression()), !dbg !11322
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11323, !tbaa !2648
  %call1 = call i64 @hash_get_n_buckets(%struct.hash_table* %1) #14, !dbg !11324
  store i64 %call1, i64* %n_buckets, align 8, !dbg !11322, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %n_buckets_used, metadata !11325, metadata !DIExpression()), !dbg !11326
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11327, !tbaa !2648
  %call2 = call i64 @hash_get_n_buckets_used(%struct.hash_table* %2) #14, !dbg !11328
  store i64 %call2, i64* %n_buckets_used, align 8, !dbg !11326, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %max_bucket_length, metadata !11329, metadata !DIExpression()), !dbg !11330
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11331, !tbaa !2648
  %call3 = call i64 @hash_get_max_bucket_length(%struct.hash_table* %3) #14, !dbg !11332
  store i64 %call3, i64* %max_bucket_length, align 8, !dbg !11330, !tbaa !3288
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11333, !tbaa !2648
  %5 = load i64, i64* %n_entries, align 8, !dbg !11334, !tbaa !3288
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.270, i64 0, i64 0), i64 %5), !dbg !11335
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11336, !tbaa !2648
  %7 = load i64, i64* %n_buckets, align 8, !dbg !11337, !tbaa !3288
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1.271, i64 0, i64 0), i64 %7), !dbg !11338
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11339, !tbaa !2648
  %9 = load i64, i64* %n_buckets_used, align 8, !dbg !11340, !tbaa !3288
  %10 = load i64, i64* %n_buckets_used, align 8, !dbg !11341, !tbaa !3288
  %conv = uitofp i64 %10 to double, !dbg !11341
  %mul = fmul double 1.000000e+02, %conv, !dbg !11342
  %11 = load i64, i64* %n_buckets, align 8, !dbg !11343, !tbaa !3288
  %conv6 = uitofp i64 %11 to double, !dbg !11343
  %div = fdiv double %mul, %conv6, !dbg !11344
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2.272, i64 0, i64 0), i64 %9, double %div), !dbg !11345
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11346, !tbaa !2648
  %13 = load i64, i64* %max_bucket_length, align 8, !dbg !11347, !tbaa !3288
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.273, i64 0, i64 0), i64 %13), !dbg !11348
  ret void, !dbg !11349
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_lookup(%struct.hash_table* %table, i8* %entry1) #4 !dbg !11350 !ctir !918 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !853
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !853
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11351, metadata !DIExpression()), !dbg !11352
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !11353, metadata !DIExpression()), !dbg !11354
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11355, metadata !DIExpression()), !dbg !11356
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11357, !tbaa !2648
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !11358, !tbaa !2648
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !11359
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !11356, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11360, metadata !DIExpression()), !dbg !11361
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11362, !tbaa !2648
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %2, i32 0, i32 0, !dbg !11364, !ctir !854
  %3 = load i8*, i8** %data, align 8, !dbg !11364, !tbaa !11221, !ctir !53
  %cmp = icmp eq i8* %3, null, !dbg !11365
  br i1 %cmp, label %if.then, label %if.end, !dbg !11366

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !11367
  br label %return, !dbg !11367

if.end:                                           ; preds = %entry
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11368, !tbaa !2648
  store %struct.hash_entry* %4, %struct.hash_entry** %cursor, align 8, !dbg !11370, !tbaa !2648
  br label %for.cond, !dbg !11371

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11372, !tbaa !2648
  %tobool = icmp ne %struct.hash_entry* %5, null, !dbg !11374
  br i1 %tobool, label %for.body, label %for.end, !dbg !11374

for.body:                                         ; preds = %for.cond
  %6 = load i8*, i8** %entry.addr, align 8, !dbg !11375, !tbaa !2648
  %7 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11377, !tbaa !2648
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !11378, !ctir !854
  %8 = load i8*, i8** %data2, align 8, !dbg !11378, !tbaa !11221, !ctir !53
  %cmp3 = icmp eq i8* %6, %8, !dbg !11379
  br i1 %cmp3, label %if.then6, label %lor.lhs.false, !dbg !11380

lor.lhs.false:                                    ; preds = %for.body
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11381, !tbaa !2648
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 7, !dbg !11382, !ctir !841
  %10 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !11382, !tbaa !11383, !ctir !874
  %11 = load i8*, i8** %entry.addr, align 8, !dbg !11384, !tbaa !2648
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11385, !tbaa !2648
  %data4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !11386, !ctir !854
  %13 = load i8*, i8** %data4, align 8, !dbg !11386, !tbaa !11221, !ctir !53
  %call5 = call zeroext i1 %10(i8* %11, i8* %13), !dbg !11381
  br i1 %call5, label %if.then6, label %if.end8, !dbg !11387

if.then6:                                         ; preds = %lor.lhs.false, %for.body
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11388, !tbaa !2648
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !11389, !ctir !854
  %15 = load i8*, i8** %data7, align 8, !dbg !11389, !tbaa !11221, !ctir !53
  store i8* %15, i8** %retval, align 8, !dbg !11390
  br label %return, !dbg !11390

if.end8:                                          ; preds = %lor.lhs.false
  br label %for.inc, !dbg !11391

for.inc:                                          ; preds = %if.end8
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11392, !tbaa !2648
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 1, !dbg !11393, !ctir !854
  %17 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11393, !tbaa !11233, !ctir !847
  store %struct.hash_entry* %17, %struct.hash_entry** %cursor, align 8, !dbg !11394, !tbaa !2648
  br label %for.cond, !dbg !11395, !llvm.loop !11396

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !11398
  br label %return, !dbg !11398

return:                                           ; preds = %for.end, %if.then6, %if.then
  %18 = load i8*, i8** %retval, align 8, !dbg !11399
  ret i8* %18, !dbg !11399
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.hash_entry* @safe_hasher(%struct.hash_table* %table, i8* %key) #4 !dbg !11400 !ctir !948 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %key.addr = alloca i8*, align 8
  %n = alloca i64, align 8, !ctir !55
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11401, metadata !DIExpression()), !dbg !11402
  store i8* %key, i8** %key.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !11403, metadata !DIExpression()), !dbg !11404
  call void @llvm.dbg.declare(metadata i64* %n, metadata !11405, metadata !DIExpression()), !dbg !11406
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11407, !tbaa !2648
  %hasher = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 6, !dbg !11408, !ctir !841
  %1 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher, align 8, !dbg !11408, !tbaa !11409, !ctir !871
  %2 = load i8*, i8** %key.addr, align 8, !dbg !11410, !tbaa !2648
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11411, !tbaa !2648
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 2, !dbg !11412, !ctir !841
  %4 = load i64, i64* %n_buckets, align 8, !dbg !11412, !tbaa !11180, !ctir !55
  %call = call i64 %1(i8* %2, i64 %4), !dbg !11407
  store i64 %call, i64* %n, align 8, !dbg !11406, !tbaa !3288
  %5 = load i64, i64* %n, align 8, !dbg !11413, !tbaa !3288
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11415, !tbaa !2648
  %n_buckets1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 2, !dbg !11416, !ctir !841
  %7 = load i64, i64* %n_buckets1, align 8, !dbg !11416, !tbaa !11180, !ctir !55
  %cmp = icmp ult i64 %5, %7, !dbg !11417
  br i1 %cmp, label %if.end, label %if.then, !dbg !11418

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !11419
  unreachable, !dbg !11419

if.end:                                           ; preds = %entry
  %8 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11420, !tbaa !2648
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 0, !dbg !11421, !ctir !841
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11421, !tbaa !11207, !ctir !847
  %10 = load i64, i64* %n, align 8, !dbg !11422, !tbaa !3288
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i64 %10, !dbg !11423
  ret %struct.hash_entry* %add.ptr, !dbg !11424
}

; Function Attrs: noreturn nounwind
declare dso_local void @abort() #5

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @hash_get_first(%struct.hash_table* %table) #10 !dbg !11425 !ctir !920 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !853
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11426, metadata !DIExpression()), !dbg !11427
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11428, metadata !DIExpression()), !dbg !11429
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11430, !tbaa !2648
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 4, !dbg !11432, !ctir !841
  %1 = load i64, i64* %n_entries, align 8, !dbg !11432, !tbaa !11195, !ctir !55
  %cmp = icmp eq i64 %1, 0, !dbg !11433
  br i1 %cmp, label %if.then, label %if.end, !dbg !11434

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !11435
  br label %return, !dbg !11435

if.end:                                           ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11436, !tbaa !2648
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 0, !dbg !11438, !ctir !841
  %3 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11438, !tbaa !11207, !ctir !847
  store %struct.hash_entry* %3, %struct.hash_entry** %bucket, align 8, !dbg !11439, !tbaa !2648
  br label %for.cond, !dbg !11440

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11441, !tbaa !2648
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11444, !tbaa !2648
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 1, !dbg !11445, !ctir !841
  %6 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11445, !tbaa !11214, !ctir !853
  %cmp2 = icmp ult %struct.hash_entry* %4, %6, !dbg !11446
  br i1 %cmp2, label %if.else, label %if.then3, !dbg !11447

if.then3:                                         ; preds = %for.cond
  call void @abort() #13, !dbg !11448
  unreachable, !dbg !11448

if.else:                                          ; preds = %for.cond
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11449, !tbaa !2648
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !11451, !ctir !854
  %8 = load i8*, i8** %data, align 8, !dbg !11451, !tbaa !11221, !ctir !53
  %tobool = icmp ne i8* %8, null, !dbg !11449
  br i1 %tobool, label %if.then4, label %if.end6, !dbg !11452

if.then4:                                         ; preds = %if.else
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11453, !tbaa !2648
  %data5 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !11454, !ctir !854
  %10 = load i8*, i8** %data5, align 8, !dbg !11454, !tbaa !11221, !ctir !53
  store i8* %10, i8** %retval, align 8, !dbg !11455
  br label %return, !dbg !11455

if.end6:                                          ; preds = %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end6
  br label %for.inc, !dbg !11456

for.inc:                                          ; preds = %if.end7
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11457, !tbaa !2648
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %11, i32 1, !dbg !11457
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11457, !tbaa !2648
  br label %for.cond, !dbg !11458, !llvm.loop !11459

return:                                           ; preds = %if.then4, %if.then
  %12 = load i8*, i8** %retval, align 8, !dbg !11462
  ret i8* %12, !dbg !11462
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_get_next(%struct.hash_table* %table, i8* %entry1) #4 !dbg !11463 !ctir !918 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !853
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !853
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11464, metadata !DIExpression()), !dbg !11465
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !11466, metadata !DIExpression()), !dbg !11467
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11468, metadata !DIExpression()), !dbg !11469
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11470, !tbaa !2648
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !11471, !tbaa !2648
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !11472
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !11469, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11473, metadata !DIExpression()), !dbg !11474
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11475, !tbaa !2648
  store %struct.hash_entry* %2, %struct.hash_entry** %cursor, align 8, !dbg !11476, !tbaa !2648
  br label %do.body, !dbg !11477

do.body:                                          ; preds = %do.cond, %entry
  %3 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11478, !tbaa !2648
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %3, i32 0, i32 0, !dbg !11481, !ctir !854
  %4 = load i8*, i8** %data, align 8, !dbg !11481, !tbaa !11221, !ctir !53
  %5 = load i8*, i8** %entry.addr, align 8, !dbg !11482, !tbaa !2648
  %cmp = icmp eq i8* %4, %5, !dbg !11483
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11484

land.lhs.true:                                    ; preds = %do.body
  %6 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11485, !tbaa !2648
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %6, i32 0, i32 1, !dbg !11486, !ctir !854
  %7 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11486, !tbaa !11233, !ctir !847
  %tobool = icmp ne %struct.hash_entry* %7, null, !dbg !11485
  br i1 %tobool, label %if.then, label %if.end, !dbg !11487

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11488, !tbaa !2648
  %next2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %8, i32 0, i32 1, !dbg !11489, !ctir !854
  %9 = load %struct.hash_entry*, %struct.hash_entry** %next2, align 8, !dbg !11489, !tbaa !11233, !ctir !847
  %data3 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !11490, !ctir !848
  %10 = load i8*, i8** %data3, align 8, !dbg !11490, !tbaa !11221, !ctir !53
  store i8* %10, i8** %retval, align 8, !dbg !11491
  br label %return, !dbg !11491

if.end:                                           ; preds = %land.lhs.true, %do.body
  %11 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11492, !tbaa !2648
  %next4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %11, i32 0, i32 1, !dbg !11493, !ctir !854
  %12 = load %struct.hash_entry*, %struct.hash_entry** %next4, align 8, !dbg !11493, !tbaa !11233, !ctir !847
  store %struct.hash_entry* %12, %struct.hash_entry** %cursor, align 8, !dbg !11494, !tbaa !2648
  br label %do.cond, !dbg !11495

do.cond:                                          ; preds = %if.end
  %13 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11496, !tbaa !2648
  %cmp5 = icmp ne %struct.hash_entry* %13, null, !dbg !11497
  br i1 %cmp5, label %do.body, label %do.end, !dbg !11495, !llvm.loop !11498

do.end:                                           ; preds = %do.cond
  br label %while.cond, !dbg !11500

while.cond:                                       ; preds = %if.end11, %do.end
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11501, !tbaa !2648
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 1, !dbg !11501
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11501, !tbaa !2648
  %15 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11502, !tbaa !2648
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %15, i32 0, i32 1, !dbg !11503, !ctir !841
  %16 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11503, !tbaa !11214, !ctir !853
  %cmp6 = icmp ult %struct.hash_entry* %incdec.ptr, %16, !dbg !11504
  br i1 %cmp6, label %while.body, label %while.end, !dbg !11500

while.body:                                       ; preds = %while.cond
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11505, !tbaa !2648
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 0, !dbg !11507, !ctir !854
  %18 = load i8*, i8** %data7, align 8, !dbg !11507, !tbaa !11221, !ctir !53
  %tobool8 = icmp ne i8* %18, null, !dbg !11505
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !11508

if.then9:                                         ; preds = %while.body
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11509, !tbaa !2648
  %data10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 0, i32 0, !dbg !11510, !ctir !854
  %20 = load i8*, i8** %data10, align 8, !dbg !11510, !tbaa !11221, !ctir !53
  store i8* %20, i8** %retval, align 8, !dbg !11511
  br label %return, !dbg !11511

if.end11:                                         ; preds = %while.body
  br label %while.cond, !dbg !11500, !llvm.loop !11512

while.end:                                        ; preds = %while.cond
  store i8* null, i8** %retval, align 8, !dbg !11514
  br label %return, !dbg !11514

return:                                           ; preds = %while.end, %if.then9, %if.then
  %21 = load i8*, i8** %retval, align 8, !dbg !11515
  ret i8* %21, !dbg !11515
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @hash_get_entries(%struct.hash_table* %table, i8** %buffer, i64 %buffer_size) #4 !dbg !11516 !ctir !922 {
entry:
  %retval = alloca i64, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %buffer.addr = alloca i8**, align 8
  %buffer_size.addr = alloca i64, align 8
  %counter = alloca i64, align 8, !ctir !55
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !853
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !853
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11517, metadata !DIExpression()), !dbg !11518
  store i8** %buffer, i8*** %buffer.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8*** %buffer.addr, metadata !11519, metadata !DIExpression()), !dbg !11520
  store i64 %buffer_size, i64* %buffer_size.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %buffer_size.addr, metadata !11521, metadata !DIExpression()), !dbg !11522
  call void @llvm.dbg.declare(metadata i64* %counter, metadata !11523, metadata !DIExpression()), !dbg !11524
  store i64 0, i64* %counter, align 8, !dbg !11524, !tbaa !3288
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11525, metadata !DIExpression()), !dbg !11526
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11527, metadata !DIExpression()), !dbg !11528
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11529, !tbaa !2648
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11531, !ctir !841
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11531, !tbaa !11207, !ctir !847
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11532, !tbaa !2648
  br label %for.cond, !dbg !11533

for.cond:                                         ; preds = %for.inc9, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11534, !tbaa !2648
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11536, !tbaa !2648
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11537, !ctir !841
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11537, !tbaa !11214, !ctir !853
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11538
  br i1 %cmp, label %for.body, label %for.end10, !dbg !11539

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11540, !tbaa !2648
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11543, !ctir !854
  %6 = load i8*, i8** %data, align 8, !dbg !11543, !tbaa !11221, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !11540
  br i1 %tobool, label %if.then, label %if.end8, !dbg !11544

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11545, !tbaa !2648
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11548, !tbaa !2648
  br label %for.cond2, !dbg !11549

for.cond2:                                        ; preds = %for.inc, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11550, !tbaa !2648
  %tobool3 = icmp ne %struct.hash_entry* %8, null, !dbg !11552
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !11552

for.body4:                                        ; preds = %for.cond2
  %9 = load i64, i64* %counter, align 8, !dbg !11553, !tbaa !3288
  %10 = load i64, i64* %buffer_size.addr, align 8, !dbg !11556, !tbaa !3288
  %cmp5 = icmp uge i64 %9, %10, !dbg !11557
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !11558

if.then6:                                         ; preds = %for.body4
  %11 = load i64, i64* %counter, align 8, !dbg !11559, !tbaa !3288
  store i64 %11, i64* %retval, align 8, !dbg !11560
  br label %return, !dbg !11560

if.end:                                           ; preds = %for.body4
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11561, !tbaa !2648
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !11562, !ctir !854
  %13 = load i8*, i8** %data7, align 8, !dbg !11562, !tbaa !11221, !ctir !53
  %14 = load i8**, i8*** %buffer.addr, align 8, !dbg !11563, !tbaa !2648
  %15 = load i64, i64* %counter, align 8, !dbg !11564, !tbaa !3288
  %inc = add i64 %15, 1, !dbg !11564
  store i64 %inc, i64* %counter, align 8, !dbg !11564, !tbaa !3288
  %arrayidx = getelementptr inbounds i8*, i8** %14, i64 %15, !dbg !11563, !ctir !924
  store i8* %13, i8** %arrayidx, align 8, !dbg !11565, !tbaa !2648
  br label %for.inc, !dbg !11566

for.inc:                                          ; preds = %if.end
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11567, !tbaa !2648
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 1, !dbg !11568, !ctir !854
  %17 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11568, !tbaa !11233, !ctir !847
  store %struct.hash_entry* %17, %struct.hash_entry** %cursor, align 8, !dbg !11569, !tbaa !2648
  br label %for.cond2, !dbg !11570, !llvm.loop !11571

for.end:                                          ; preds = %for.cond2
  br label %if.end8, !dbg !11573

if.end8:                                          ; preds = %for.end, %for.body
  br label %for.inc9, !dbg !11574

for.inc9:                                         ; preds = %if.end8
  %18 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11575, !tbaa !2648
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %18, i32 1, !dbg !11575
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11575, !tbaa !2648
  br label %for.cond, !dbg !11576, !llvm.loop !11577

for.end10:                                        ; preds = %for.cond
  %19 = load i64, i64* %counter, align 8, !dbg !11579, !tbaa !3288
  store i64 %19, i64* %retval, align 8, !dbg !11580
  br label %return, !dbg !11580

return:                                           ; preds = %for.end10, %if.then6
  %20 = load i64, i64* %retval, align 8, !dbg !11581
  ret i64 %20, !dbg !11581
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @hash_do_for_each(%struct.hash_table* %table, i1 (i8*, i8*)* %processor, i8* %processor_data) #4 !dbg !11582 !ctir !925 {
entry:
  %retval = alloca i64, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %processor.addr = alloca i1 (i8*, i8*)*, align 8
  %processor_data.addr = alloca i8*, align 8
  %counter = alloca i64, align 8, !ctir !55
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !853
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !853
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11583, metadata !DIExpression()), !dbg !11584
  store i1 (i8*, i8*)* %processor, i1 (i8*, i8*)** %processor.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i1 (i8*, i8*)** %processor.addr, metadata !11585, metadata !DIExpression()), !dbg !11586
  store i8* %processor_data, i8** %processor_data.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %processor_data.addr, metadata !11587, metadata !DIExpression()), !dbg !11588
  call void @llvm.dbg.declare(metadata i64* %counter, metadata !11589, metadata !DIExpression()), !dbg !11590
  store i64 0, i64* %counter, align 8, !dbg !11590, !tbaa !3288
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11591, metadata !DIExpression()), !dbg !11592
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11593, metadata !DIExpression()), !dbg !11594
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11595, !tbaa !2648
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11597, !ctir !841
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11597, !tbaa !11207, !ctir !847
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11598, !tbaa !2648
  br label %for.cond, !dbg !11599

for.cond:                                         ; preds = %for.inc8, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11600, !tbaa !2648
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11602, !tbaa !2648
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11603, !ctir !841
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11603, !tbaa !11214, !ctir !853
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11604
  br i1 %cmp, label %for.body, label %for.end9, !dbg !11605

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11606, !tbaa !2648
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11609, !ctir !854
  %6 = load i8*, i8** %data, align 8, !dbg !11609, !tbaa !11221, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !11606
  br i1 %tobool, label %if.then, label %if.end7, !dbg !11610

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11611, !tbaa !2648
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11614, !tbaa !2648
  br label %for.cond2, !dbg !11615

for.cond2:                                        ; preds = %for.inc, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11616, !tbaa !2648
  %tobool3 = icmp ne %struct.hash_entry* %8, null, !dbg !11618
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !11618

for.body4:                                        ; preds = %for.cond2
  %9 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %processor.addr, align 8, !dbg !11619, !tbaa !2648
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11622, !tbaa !2648
  %data5 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 0, !dbg !11623, !ctir !854
  %11 = load i8*, i8** %data5, align 8, !dbg !11623, !tbaa !11221, !ctir !53
  %12 = load i8*, i8** %processor_data.addr, align 8, !dbg !11624, !tbaa !2648
  %call = call zeroext i1 %9(i8* %11, i8* %12), !dbg !11619
  br i1 %call, label %if.end, label %if.then6, !dbg !11625

if.then6:                                         ; preds = %for.body4
  %13 = load i64, i64* %counter, align 8, !dbg !11626, !tbaa !3288
  store i64 %13, i64* %retval, align 8, !dbg !11627
  br label %return, !dbg !11627

if.end:                                           ; preds = %for.body4
  %14 = load i64, i64* %counter, align 8, !dbg !11628, !tbaa !3288
  %inc = add i64 %14, 1, !dbg !11628
  store i64 %inc, i64* %counter, align 8, !dbg !11628, !tbaa !3288
  br label %for.inc, !dbg !11629

for.inc:                                          ; preds = %if.end
  %15 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11630, !tbaa !2648
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 0, i32 1, !dbg !11631, !ctir !854
  %16 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11631, !tbaa !11233, !ctir !847
  store %struct.hash_entry* %16, %struct.hash_entry** %cursor, align 8, !dbg !11632, !tbaa !2648
  br label %for.cond2, !dbg !11633, !llvm.loop !11634

for.end:                                          ; preds = %for.cond2
  br label %if.end7, !dbg !11636

if.end7:                                          ; preds = %for.end, %for.body
  br label %for.inc8, !dbg !11637

for.inc8:                                         ; preds = %if.end7
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11638, !tbaa !2648
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 1, !dbg !11638
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11638, !tbaa !2648
  br label %for.cond, !dbg !11639, !llvm.loop !11640

for.end9:                                         ; preds = %for.cond
  %18 = load i64, i64* %counter, align 8, !dbg !11642, !tbaa !3288
  store i64 %18, i64* %retval, align 8, !dbg !11643
  br label %return, !dbg !11643

return:                                           ; preds = %for.end9, %if.then6
  %19 = load i64, i64* %retval, align 8, !dbg !11644
  ret i64 %19, !dbg !11644
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_string(i8* %string, i64 %n_buckets) #10 !dbg !11645 !ctir !931 {
entry:
  %string.addr = alloca i8*, align 8
  %n_buckets.addr = alloca i64, align 8
  %value = alloca i64, align 8, !ctir !55
  %ch = alloca i8, align 1, !ctir !556
  store i8* %string, i8** %string.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !11646, metadata !DIExpression()), !dbg !11647
  store i64 %n_buckets, i64* %n_buckets.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %n_buckets.addr, metadata !11648, metadata !DIExpression()), !dbg !11649
  call void @llvm.dbg.declare(metadata i64* %value, metadata !11650, metadata !DIExpression()), !dbg !11651
  store i64 0, i64* %value, align 8, !dbg !11651, !tbaa !3288
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !11652, metadata !DIExpression()), !dbg !11653
  br label %for.cond, !dbg !11654

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8*, i8** %string.addr, align 8, !dbg !11655, !tbaa !2648
  %1 = load i8, i8* %0, align 1, !dbg !11658, !tbaa !3295, !ctir !181
  store i8 %1, i8* %ch, align 1, !dbg !11659, !tbaa !3295
  %tobool = icmp ne i8 %1, 0, !dbg !11660
  br i1 %tobool, label %for.body, label %for.end, !dbg !11660

for.body:                                         ; preds = %for.cond
  %2 = load i64, i64* %value, align 8, !dbg !11661, !tbaa !3288
  %mul = mul i64 %2, 31, !dbg !11662
  %3 = load i8, i8* %ch, align 1, !dbg !11663, !tbaa !3295
  %conv = zext i8 %3 to i64, !dbg !11663
  %add = add i64 %mul, %conv, !dbg !11664
  %4 = load i64, i64* %n_buckets.addr, align 8, !dbg !11665, !tbaa !3288
  %rem = urem i64 %add, %4, !dbg !11666
  store i64 %rem, i64* %value, align 8, !dbg !11667, !tbaa !3288
  br label %for.inc, !dbg !11668

for.inc:                                          ; preds = %for.body
  %5 = load i8*, i8** %string.addr, align 8, !dbg !11669, !tbaa !2648
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !11669
  store i8* %incdec.ptr, i8** %string.addr, align 8, !dbg !11669, !tbaa !2648
  br label %for.cond, !dbg !11670, !llvm.loop !11671

for.end:                                          ; preds = %for.cond
  %6 = load i64, i64* %value, align 8, !dbg !11673, !tbaa !3288
  ret i64 %6, !dbg !11674
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_reset_tuning(%struct.hash_tuning* %tuning) #4 !dbg !11675 !ctir !933 {
entry:
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !11676, metadata !DIExpression()), !dbg !11677
  %0 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11678, !tbaa !2648
  %1 = bitcast %struct.hash_tuning* %0 to i8*, !dbg !11679
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 bitcast (%struct.hash_tuning* @default_tuning to i8*), i64 20, i1 false), !dbg !11679, !tbaa.struct !11680
  ret void, !dbg !11683
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.hash_table* @hash_initialize(i64 %candidate, %struct.hash_tuning* %tuning, i64 (i8*, i64)* %hasher, i1 (i8*, i8*)* %comparator, void (i8*)* %data_freer) #4 !dbg !11684 !ctir !936 {
entry:
  %retval = alloca %struct.hash_table*, align 8
  %candidate.addr = alloca i64, align 8
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  %hasher.addr = alloca i64 (i8*, i64)*, align 8
  %comparator.addr = alloca i1 (i8*, i8*)*, align 8
  %data_freer.addr = alloca void (i8*)*, align 8
  %table = alloca %struct.hash_table*, align 8, !ctir !938
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !11685, metadata !DIExpression()), !dbg !11686
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !11687, metadata !DIExpression()), !dbg !11688
  store i64 (i8*, i64)* %hasher, i64 (i8*, i64)** %hasher.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i64 (i8*, i64)** %hasher.addr, metadata !11689, metadata !DIExpression()), !dbg !11690
  store i1 (i8*, i8*)* %comparator, i1 (i8*, i8*)** %comparator.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i1 (i8*, i8*)** %comparator.addr, metadata !11691, metadata !DIExpression()), !dbg !11692
  store void (i8*)* %data_freer, void (i8*)** %data_freer.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata void (i8*)** %data_freer.addr, metadata !11693, metadata !DIExpression()), !dbg !11694
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table, metadata !11695, metadata !DIExpression()), !dbg !11696
  %0 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !11697, !tbaa !2648
  %cmp = icmp eq i64 (i8*, i64)* %0, null, !dbg !11699
  br i1 %cmp, label %if.then, label %if.end, !dbg !11700

if.then:                                          ; preds = %entry
  store i64 (i8*, i64)* @raw_hasher, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !11701, !tbaa !2648
  br label %if.end, !dbg !11702

if.end:                                           ; preds = %if.then, %entry
  %1 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !11703, !tbaa !2648
  %cmp1 = icmp eq i1 (i8*, i8*)* %1, null, !dbg !11705
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !11706

if.then2:                                         ; preds = %if.end
  store i1 (i8*, i8*)* @raw_comparator, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !11707, !tbaa !2648
  br label %if.end3, !dbg !11708

if.end3:                                          ; preds = %if.then2, %if.end
  %call = call noalias i8* @malloc(i64 80) #9, !dbg !11709
  %2 = bitcast i8* %call to %struct.hash_table*, !dbg !11709
  store %struct.hash_table* %2, %struct.hash_table** %table, align 8, !dbg !11710, !tbaa !2648
  %3 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11711, !tbaa !2648
  %cmp4 = icmp eq %struct.hash_table* %3, null, !dbg !11713
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !11714

if.then5:                                         ; preds = %if.end3
  store %struct.hash_table* null, %struct.hash_table** %retval, align 8, !dbg !11715
  br label %return, !dbg !11715

if.end6:                                          ; preds = %if.end3
  %4 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11716, !tbaa !2648
  %tobool = icmp ne %struct.hash_tuning* %4, null, !dbg !11716
  br i1 %tobool, label %if.end8, label %if.then7, !dbg !11718

if.then7:                                         ; preds = %if.end6
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11719, !tbaa !2648
  br label %if.end8, !dbg !11720

if.end8:                                          ; preds = %if.then7, %if.end6
  %5 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11721, !tbaa !2648
  %6 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11722, !tbaa !2648
  %tuning9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 5, !dbg !11723, !ctir !842
  store %struct.hash_tuning* %5, %struct.hash_tuning** %tuning9, align 8, !dbg !11724, !tbaa !11725, !ctir !859
  %7 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11726, !tbaa !2648
  %call10 = call zeroext i1 @check_tuning(%struct.hash_table* %7), !dbg !11728
  br i1 %call10, label %if.end12, label %if.then11, !dbg !11729

if.then11:                                        ; preds = %if.end8
  br label %fail, !dbg !11730

if.end12:                                         ; preds = %if.end8
  %8 = load i64, i64* %candidate.addr, align 8, !dbg !11732, !tbaa !3288
  %9 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11733, !tbaa !2648
  %call13 = call i64 @compute_bucket_size(i64 %8, %struct.hash_tuning* %9) #14, !dbg !11734
  %10 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11735, !tbaa !2648
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 2, !dbg !11736, !ctir !842
  store i64 %call13, i64* %n_buckets, align 8, !dbg !11737, !tbaa !11180, !ctir !55
  %11 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11738, !tbaa !2648
  %n_buckets14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 2, !dbg !11740, !ctir !842
  %12 = load i64, i64* %n_buckets14, align 8, !dbg !11740, !tbaa !11180, !ctir !55
  %tobool15 = icmp ne i64 %12, 0, !dbg !11738
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !11741

if.then16:                                        ; preds = %if.end12
  br label %fail, !dbg !11742

if.end17:                                         ; preds = %if.end12
  %13 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11743, !tbaa !2648
  %n_buckets18 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 2, !dbg !11744, !ctir !842
  %14 = load i64, i64* %n_buckets18, align 8, !dbg !11744, !tbaa !11180, !ctir !55
  %call19 = call noalias i8* @calloc(i64 %14, i64 16) #9, !dbg !11745
  %15 = bitcast i8* %call19 to %struct.hash_entry*, !dbg !11745
  %16 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11746, !tbaa !2648
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 0, !dbg !11747, !ctir !842
  store %struct.hash_entry* %15, %struct.hash_entry** %bucket, align 8, !dbg !11748, !tbaa !11207, !ctir !847
  %17 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11749, !tbaa !2648
  %bucket20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 0, !dbg !11751, !ctir !842
  %18 = load %struct.hash_entry*, %struct.hash_entry** %bucket20, align 8, !dbg !11751, !tbaa !11207, !ctir !847
  %cmp21 = icmp eq %struct.hash_entry* %18, null, !dbg !11752
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !11753

if.then22:                                        ; preds = %if.end17
  br label %fail, !dbg !11754

if.end23:                                         ; preds = %if.end17
  %19 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11755, !tbaa !2648
  %bucket24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 0, !dbg !11756, !ctir !842
  %20 = load %struct.hash_entry*, %struct.hash_entry** %bucket24, align 8, !dbg !11756, !tbaa !11207, !ctir !847
  %21 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11757, !tbaa !2648
  %n_buckets25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 2, !dbg !11758, !ctir !842
  %22 = load i64, i64* %n_buckets25, align 8, !dbg !11758, !tbaa !11180, !ctir !55
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %20, i64 %22, !dbg !11759
  %23 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11760, !tbaa !2648
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 1, !dbg !11761, !ctir !842
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket_limit, align 8, !dbg !11762, !tbaa !11214, !ctir !853
  %24 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11763, !tbaa !2648
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %24, i32 0, i32 3, !dbg !11764, !ctir !842
  store i64 0, i64* %n_buckets_used, align 8, !dbg !11765, !tbaa !11188, !ctir !55
  %25 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11766, !tbaa !2648
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 4, !dbg !11767, !ctir !842
  store i64 0, i64* %n_entries, align 8, !dbg !11768, !tbaa !11195, !ctir !55
  %26 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !11769, !tbaa !2648
  %27 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11770, !tbaa !2648
  %hasher26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %27, i32 0, i32 6, !dbg !11771, !ctir !842
  store i64 (i8*, i64)* %26, i64 (i8*, i64)** %hasher26, align 8, !dbg !11772, !tbaa !11409, !ctir !871
  %28 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !11773, !tbaa !2648
  %29 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11774, !tbaa !2648
  %comparator27 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 7, !dbg !11775, !ctir !842
  store i1 (i8*, i8*)* %28, i1 (i8*, i8*)** %comparator27, align 8, !dbg !11776, !tbaa !11383, !ctir !874
  %30 = load void (i8*)*, void (i8*)** %data_freer.addr, align 8, !dbg !11777, !tbaa !2648
  %31 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11778, !tbaa !2648
  %data_freer28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %31, i32 0, i32 8, !dbg !11779, !ctir !842
  store void (i8*)* %30, void (i8*)** %data_freer28, align 8, !dbg !11780, !tbaa !11781, !ctir !877
  %32 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11782, !tbaa !2648
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 9, !dbg !11783, !ctir !842
  store %struct.hash_entry* null, %struct.hash_entry** %free_entry_list, align 8, !dbg !11784, !tbaa !11785, !ctir !847
  %33 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11786, !tbaa !2648
  store %struct.hash_table* %33, %struct.hash_table** %retval, align 8, !dbg !11787
  br label %return, !dbg !11787

fail:                                             ; preds = %if.then22, %if.then16, %if.then11
  call void @llvm.dbg.label(metadata !11788), !dbg !11789
  %34 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11790, !tbaa !2648
  %35 = bitcast %struct.hash_table* %34 to i8*, !dbg !11790
  call void @free(i8* %35) #9, !dbg !11791
  store %struct.hash_table* null, %struct.hash_table** %retval, align 8, !dbg !11792
  br label %return, !dbg !11792

return:                                           ; preds = %fail, %if.end23, %if.then5
  %36 = load %struct.hash_table*, %struct.hash_table** %retval, align 8, !dbg !11793
  ret %struct.hash_table* %36, !dbg !11793
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @raw_hasher(i8* %data, i64 %n) #4 !dbg !11794 !ctir !635 {
entry:
  %data.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %val = alloca i64, align 8, !ctir !55
  store i8* %data, i8** %data.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !11795, metadata !DIExpression()), !dbg !11796
  store i64 %n, i64* %n.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !11797, metadata !DIExpression()), !dbg !11798
  call void @llvm.dbg.declare(metadata i64* %val, metadata !11799, metadata !DIExpression()), !dbg !11800
  %0 = load i8*, i8** %data.addr, align 8, !dbg !11801, !tbaa !2648
  %1 = ptrtoint i8* %0 to i64, !dbg !11802
  %call = call i64 @rotr_sz(i64 %1, i32 3), !dbg !11803
  store i64 %call, i64* %val, align 8, !dbg !11800, !tbaa !3288
  %2 = load i64, i64* %val, align 8, !dbg !11804, !tbaa !3288
  %3 = load i64, i64* %n.addr, align 8, !dbg !11805, !tbaa !3288
  %rem = urem i64 %2, %3, !dbg !11806
  ret i64 %rem, !dbg !11807
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @raw_comparator(i8* %a, i8* %b) #4 !dbg !11808 !ctir !637 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !11809, metadata !DIExpression()), !dbg !11810
  store i8* %b, i8** %b.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !11811, metadata !DIExpression()), !dbg !11812
  %0 = load i8*, i8** %a.addr, align 8, !dbg !11813, !tbaa !2648
  %1 = load i8*, i8** %b.addr, align 8, !dbg !11814, !tbaa !2648
  %cmp = icmp eq i8* %0, %1, !dbg !11815
  ret i1 %cmp, !dbg !11816
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @check_tuning(%struct.hash_table* %table) #4 !dbg !11817 !ctir !950 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %tuning = alloca %struct.hash_tuning*, align 8, !ctir !859
  %epsilon = alloca float, align 4, !ctir !865
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11818, metadata !DIExpression()), !dbg !11819
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning, metadata !11820, metadata !DIExpression()), !dbg !11821
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11822, !tbaa !2648
  %tuning1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 5, !dbg !11823, !ctir !842
  %1 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning1, align 8, !dbg !11823, !tbaa !11725, !ctir !859
  store %struct.hash_tuning* %1, %struct.hash_tuning** %tuning, align 8, !dbg !11821, !tbaa !2648
  call void @llvm.dbg.declare(metadata float* %epsilon, metadata !11824, metadata !DIExpression()), !dbg !11825
  %2 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11826, !tbaa !2648
  %cmp = icmp eq %struct.hash_tuning* %2, @default_tuning, !dbg !11828
  br i1 %cmp, label %if.then, label %if.end, !dbg !11829

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !11830
  br label %return, !dbg !11830

if.end:                                           ; preds = %entry
  store float 0x3FB99999A0000000, float* %epsilon, align 4, !dbg !11831, !tbaa !11681
  %3 = load float, float* %epsilon, align 4, !dbg !11832, !tbaa !11681
  %4 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11834, !tbaa !2648
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %4, i32 0, i32 2, !dbg !11835, !ctir !860
  %5 = load float, float* %growth_threshold, align 4, !dbg !11835, !tbaa !11836, !ctir !865
  %cmp2 = fcmp olt float %3, %5, !dbg !11838
  br i1 %cmp2, label %land.lhs.true, label %if.end22, !dbg !11839

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11840, !tbaa !2648
  %growth_threshold3 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %6, i32 0, i32 2, !dbg !11841, !ctir !860
  %7 = load float, float* %growth_threshold3, align 4, !dbg !11841, !tbaa !11836, !ctir !865
  %8 = load float, float* %epsilon, align 4, !dbg !11842, !tbaa !11681
  %sub = fsub float 1.000000e+00, %8, !dbg !11843
  %cmp4 = fcmp olt float %7, %sub, !dbg !11844
  br i1 %cmp4, label %land.lhs.true5, label %if.end22, !dbg !11845

land.lhs.true5:                                   ; preds = %land.lhs.true
  %9 = load float, float* %epsilon, align 4, !dbg !11846, !tbaa !11681
  %add = fadd float 1.000000e+00, %9, !dbg !11847
  %10 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11848, !tbaa !2648
  %growth_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %10, i32 0, i32 3, !dbg !11849, !ctir !860
  %11 = load float, float* %growth_factor, align 4, !dbg !11849, !tbaa !11850, !ctir !865
  %cmp6 = fcmp olt float %add, %11, !dbg !11851
  br i1 %cmp6, label %land.lhs.true7, label %if.end22, !dbg !11852

land.lhs.true7:                                   ; preds = %land.lhs.true5
  %12 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11853, !tbaa !2648
  %shrink_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %12, i32 0, i32 0, !dbg !11854, !ctir !860
  %13 = load float, float* %shrink_threshold, align 4, !dbg !11854, !tbaa !11855, !ctir !865
  %cmp8 = fcmp ole float 0.000000e+00, %13, !dbg !11856
  br i1 %cmp8, label %land.lhs.true9, label %if.end22, !dbg !11857

land.lhs.true9:                                   ; preds = %land.lhs.true7
  %14 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11858, !tbaa !2648
  %shrink_threshold10 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %14, i32 0, i32 0, !dbg !11859, !ctir !860
  %15 = load float, float* %shrink_threshold10, align 4, !dbg !11859, !tbaa !11855, !ctir !865
  %16 = load float, float* %epsilon, align 4, !dbg !11860, !tbaa !11681
  %add11 = fadd float %15, %16, !dbg !11861
  %17 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11862, !tbaa !2648
  %shrink_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %17, i32 0, i32 1, !dbg !11863, !ctir !860
  %18 = load float, float* %shrink_factor, align 4, !dbg !11863, !tbaa !11864, !ctir !865
  %cmp12 = fcmp olt float %add11, %18, !dbg !11865
  br i1 %cmp12, label %land.lhs.true13, label %if.end22, !dbg !11866

land.lhs.true13:                                  ; preds = %land.lhs.true9
  %19 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11867, !tbaa !2648
  %shrink_factor14 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %19, i32 0, i32 1, !dbg !11868, !ctir !860
  %20 = load float, float* %shrink_factor14, align 4, !dbg !11868, !tbaa !11864, !ctir !865
  %cmp15 = fcmp ole float %20, 1.000000e+00, !dbg !11869
  br i1 %cmp15, label %land.lhs.true16, label %if.end22, !dbg !11870

land.lhs.true16:                                  ; preds = %land.lhs.true13
  %21 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11871, !tbaa !2648
  %shrink_threshold17 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %21, i32 0, i32 0, !dbg !11872, !ctir !860
  %22 = load float, float* %shrink_threshold17, align 4, !dbg !11872, !tbaa !11855, !ctir !865
  %23 = load float, float* %epsilon, align 4, !dbg !11873, !tbaa !11681
  %add18 = fadd float %22, %23, !dbg !11874
  %24 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11875, !tbaa !2648
  %growth_threshold19 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %24, i32 0, i32 2, !dbg !11876, !ctir !860
  %25 = load float, float* %growth_threshold19, align 4, !dbg !11876, !tbaa !11836, !ctir !865
  %cmp20 = fcmp olt float %add18, %25, !dbg !11877
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !11878

if.then21:                                        ; preds = %land.lhs.true16
  store i1 true, i1* %retval, align 1, !dbg !11879
  br label %return, !dbg !11879

if.end22:                                         ; preds = %land.lhs.true16, %land.lhs.true13, %land.lhs.true9, %land.lhs.true7, %land.lhs.true5, %land.lhs.true, %if.end
  %26 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11880, !tbaa !2648
  %tuning23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %26, i32 0, i32 5, !dbg !11881, !ctir !842
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %tuning23, align 8, !dbg !11882, !tbaa !11725, !ctir !859
  store i1 false, i1* %retval, align 1, !dbg !11883
  br label %return, !dbg !11883

return:                                           ; preds = %if.end22, %if.then21, %if.then
  %27 = load i1, i1* %retval, align 1, !dbg !11884
  ret i1 %27, !dbg !11884
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i64 @compute_bucket_size(i64 %candidate, %struct.hash_tuning* %tuning) #10 !dbg !11885 !ctir !952 {
entry:
  %retval = alloca i64, align 8
  %candidate.addr = alloca i64, align 8
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  %new_candidate = alloca float, align 4, !ctir !865
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !11886, metadata !DIExpression()), !dbg !11887
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !11888, metadata !DIExpression()), !dbg !11889
  %0 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11890, !tbaa !2648
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %0, i32 0, i32 4, !dbg !11892, !ctir !860
  %1 = load i8, i8* %is_n_buckets, align 4, !dbg !11892, !tbaa !11893
  %tobool = trunc i8 %1 to i1, !dbg !11892, !ctir !142
  br i1 %tobool, label %if.end4, label %if.then, !dbg !11894

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %new_candidate, metadata !11895, metadata !DIExpression()), !dbg !11897
  %2 = load i64, i64* %candidate.addr, align 8, !dbg !11898, !tbaa !3288
  %conv = uitofp i64 %2 to float, !dbg !11898
  %3 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11899, !tbaa !2648
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %3, i32 0, i32 2, !dbg !11900, !ctir !860
  %4 = load float, float* %growth_threshold, align 4, !dbg !11900, !tbaa !11836, !ctir !865
  %div = fdiv float %conv, %4, !dbg !11901
  store float %div, float* %new_candidate, align 4, !dbg !11897, !tbaa !11681
  %5 = load float, float* %new_candidate, align 4, !dbg !11902, !tbaa !11681
  %cmp = fcmp ole float 0x43F0000000000000, %5, !dbg !11904
  br i1 %cmp, label %if.then2, label %if.end, !dbg !11905

if.then2:                                         ; preds = %if.then
  store i64 0, i64* %retval, align 8, !dbg !11906
  br label %return, !dbg !11906

if.end:                                           ; preds = %if.then
  %6 = load float, float* %new_candidate, align 4, !dbg !11907, !tbaa !11681
  %conv3 = fptoui float %6 to i64, !dbg !11907
  store i64 %conv3, i64* %candidate.addr, align 8, !dbg !11908, !tbaa !3288
  br label %if.end4, !dbg !11909

if.end4:                                          ; preds = %if.end, %entry
  %7 = load i64, i64* %candidate.addr, align 8, !dbg !11910, !tbaa !3288
  %call = call i64 @next_prime(i64 %7) #16, !dbg !11911
  store i64 %call, i64* %candidate.addr, align 8, !dbg !11912, !tbaa !3288
  %8 = load i64, i64* %candidate.addr, align 8, !dbg !11913, !tbaa !3288
  %cmp5 = icmp ult i64 1152921504606846975, %8, !dbg !11913
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !11915

if.then7:                                         ; preds = %if.end4
  store i64 0, i64* %retval, align 8, !dbg !11916
  br label %return, !dbg !11916

if.end8:                                          ; preds = %if.end4
  %9 = load i64, i64* %candidate.addr, align 8, !dbg !11917, !tbaa !3288
  store i64 %9, i64* %retval, align 8, !dbg !11918
  br label %return, !dbg !11918

return:                                           ; preds = %if.end8, %if.then7, %if.then2
  %10 = load i64, i64* %retval, align 8, !dbg !11919
  ret i64 %10, !dbg !11919
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define internal i64 @next_prime(i64 %candidate) #11 !dbg !11920 !ctir !954 {
entry:
  %candidate.addr = alloca i64, align 8
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !11921, metadata !DIExpression()), !dbg !11922
  %0 = load i64, i64* %candidate.addr, align 8, !dbg !11923, !tbaa !3288
  %cmp = icmp ult i64 %0, 10, !dbg !11925
  br i1 %cmp, label %if.then, label %if.end, !dbg !11926

if.then:                                          ; preds = %entry
  store i64 10, i64* %candidate.addr, align 8, !dbg !11927, !tbaa !3288
  br label %if.end, !dbg !11928

if.end:                                           ; preds = %if.then, %entry
  %1 = load i64, i64* %candidate.addr, align 8, !dbg !11929, !tbaa !3288
  %or = or i64 %1, 1, !dbg !11929
  store i64 %or, i64* %candidate.addr, align 8, !dbg !11929, !tbaa !3288
  br label %while.cond, !dbg !11930

while.cond:                                       ; preds = %while.body, %if.end
  %2 = load i64, i64* %candidate.addr, align 8, !dbg !11931, !tbaa !3288
  %cmp1 = icmp ne i64 -1, %2, !dbg !11932
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !11933

land.rhs:                                         ; preds = %while.cond
  %3 = load i64, i64* %candidate.addr, align 8, !dbg !11934, !tbaa !3288
  %call = call zeroext i1 @is_prime(i64 %3) #16, !dbg !11935
  %lnot = xor i1 %call, true, !dbg !11936
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %4 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !11937
  br i1 %4, label %while.body, label %while.end, !dbg !11930

while.body:                                       ; preds = %land.end
  %5 = load i64, i64* %candidate.addr, align 8, !dbg !11938, !tbaa !3288
  %add = add i64 %5, 2, !dbg !11938
  store i64 %add, i64* %candidate.addr, align 8, !dbg !11938, !tbaa !3288
  br label %while.cond, !dbg !11930, !llvm.loop !11939

while.end:                                        ; preds = %land.end
  %6 = load i64, i64* %candidate.addr, align 8, !dbg !11941, !tbaa !3288
  ret i64 %6, !dbg !11942
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define internal zeroext i1 @is_prime(i64 %candidate) #11 !dbg !11943 !ctir !956 {
entry:
  %candidate.addr = alloca i64, align 8
  %divisor = alloca i64, align 8, !ctir !55
  %square = alloca i64, align 8, !ctir !55
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !11944, metadata !DIExpression()), !dbg !11945
  call void @llvm.dbg.declare(metadata i64* %divisor, metadata !11946, metadata !DIExpression()), !dbg !11947
  store i64 3, i64* %divisor, align 8, !dbg !11947, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %square, metadata !11948, metadata !DIExpression()), !dbg !11949
  %0 = load i64, i64* %divisor, align 8, !dbg !11950, !tbaa !3288
  %1 = load i64, i64* %divisor, align 8, !dbg !11951, !tbaa !3288
  %mul = mul i64 %0, %1, !dbg !11952
  store i64 %mul, i64* %square, align 8, !dbg !11949, !tbaa !3288
  br label %while.cond, !dbg !11953

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i64, i64* %square, align 8, !dbg !11954, !tbaa !3288
  %3 = load i64, i64* %candidate.addr, align 8, !dbg !11955, !tbaa !3288
  %cmp = icmp ult i64 %2, %3, !dbg !11956
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !11957

land.rhs:                                         ; preds = %while.cond
  %4 = load i64, i64* %candidate.addr, align 8, !dbg !11958, !tbaa !3288
  %5 = load i64, i64* %divisor, align 8, !dbg !11959, !tbaa !3288
  %rem = urem i64 %4, %5, !dbg !11960
  %tobool = icmp ne i64 %rem, 0, !dbg !11957
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ], !dbg !11961
  br i1 %6, label %while.body, label %while.end, !dbg !11953

while.body:                                       ; preds = %land.end
  %7 = load i64, i64* %divisor, align 8, !dbg !11962, !tbaa !3288
  %inc = add i64 %7, 1, !dbg !11962
  store i64 %inc, i64* %divisor, align 8, !dbg !11962, !tbaa !3288
  %8 = load i64, i64* %divisor, align 8, !dbg !11964, !tbaa !3288
  %mul1 = mul i64 4, %8, !dbg !11965
  %9 = load i64, i64* %square, align 8, !dbg !11966, !tbaa !3288
  %add = add i64 %9, %mul1, !dbg !11966
  store i64 %add, i64* %square, align 8, !dbg !11966, !tbaa !3288
  %10 = load i64, i64* %divisor, align 8, !dbg !11967, !tbaa !3288
  %inc2 = add i64 %10, 1, !dbg !11967
  store i64 %inc2, i64* %divisor, align 8, !dbg !11967, !tbaa !3288
  br label %while.cond, !dbg !11953, !llvm.loop !11968

while.end:                                        ; preds = %land.end
  %11 = load i64, i64* %candidate.addr, align 8, !dbg !11970, !tbaa !3288
  %12 = load i64, i64* %divisor, align 8, !dbg !11971, !tbaa !3288
  %rem3 = urem i64 %11, %12, !dbg !11972
  %tobool4 = icmp ne i64 %rem3, 0, !dbg !11970
  %13 = zext i1 %tobool4 to i64, !dbg !11970
  %cond = select i1 %tobool4, i32 1, i32 0, !dbg !11970
  %tobool5 = icmp ne i32 %cond, 0, !dbg !11973
  ret i1 %tobool5, !dbg !11974
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_clear(%struct.hash_table* %table) #4 !dbg !11975 !ctir !939 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !847
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !847
  %next = alloca %struct.hash_entry*, align 8, !ctir !847
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11976, metadata !DIExpression()), !dbg !11977
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11978, metadata !DIExpression()), !dbg !11979
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11980, !tbaa !2648
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11982, !ctir !842
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11982, !tbaa !11207, !ctir !847
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11983, !tbaa !2648
  br label %for.cond, !dbg !11984

for.cond:                                         ; preds = %for.inc23, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11985, !tbaa !2648
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11987, !tbaa !2648
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11988, !ctir !842
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11988, !tbaa !11214, !ctir !853
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11989
  br i1 %cmp, label %for.body, label %for.end24, !dbg !11990

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11991, !tbaa !2648
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11994, !ctir !848
  %6 = load i8*, i8** %data, align 8, !dbg !11994, !tbaa !11221, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !11991
  br i1 %tobool, label %if.then, label %if.end22, !dbg !11995

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11996, metadata !DIExpression()), !dbg !11998
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !11999, metadata !DIExpression()), !dbg !12000
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12001, !tbaa !2648
  %next2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 1, !dbg !12003, !ctir !848
  %8 = load %struct.hash_entry*, %struct.hash_entry** %next2, align 8, !dbg !12003, !tbaa !11233, !ctir !847
  store %struct.hash_entry* %8, %struct.hash_entry** %cursor, align 8, !dbg !12004, !tbaa !2648
  br label %for.cond3, !dbg !12005

for.cond3:                                        ; preds = %for.inc, %if.then
  %9 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12006, !tbaa !2648
  %tobool4 = icmp ne %struct.hash_entry* %9, null, !dbg !12008
  br i1 %tobool4, label %for.body5, label %for.end, !dbg !12008

for.body5:                                        ; preds = %for.cond3
  %10 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12009, !tbaa !2648
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 8, !dbg !12012, !ctir !842
  %11 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !12012, !tbaa !11781, !ctir !877
  %tobool6 = icmp ne void (i8*)* %11, null, !dbg !12009
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !12013

if.then7:                                         ; preds = %for.body5
  %12 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12014, !tbaa !2648
  %data_freer8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %12, i32 0, i32 8, !dbg !12015, !ctir !842
  %13 = load void (i8*)*, void (i8*)** %data_freer8, align 8, !dbg !12015, !tbaa !11781, !ctir !877
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12016, !tbaa !2648
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !12017, !ctir !848
  %15 = load i8*, i8** %data9, align 8, !dbg !12017, !tbaa !11221, !ctir !53
  call void %13(i8* %15), !dbg !12014
  br label %if.end, !dbg !12014

if.end:                                           ; preds = %if.then7, %for.body5
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12018, !tbaa !2648
  %data10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 0, !dbg !12019, !ctir !848
  store i8* null, i8** %data10, align 8, !dbg !12020, !tbaa !11221, !ctir !53
  %17 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12021, !tbaa !2648
  %next11 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !12022, !ctir !848
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next11, align 8, !dbg !12022, !tbaa !11233, !ctir !847
  store %struct.hash_entry* %18, %struct.hash_entry** %next, align 8, !dbg !12023, !tbaa !2648
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12024, !tbaa !2648
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 9, !dbg !12025, !ctir !842
  %20 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12025, !tbaa !11785, !ctir !847
  %21 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12026, !tbaa !2648
  %next12 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %21, i32 0, i32 1, !dbg !12027, !ctir !848
  store %struct.hash_entry* %20, %struct.hash_entry** %next12, align 8, !dbg !12028, !tbaa !11233, !ctir !847
  %22 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12029, !tbaa !2648
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12030, !tbaa !2648
  %free_entry_list13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 9, !dbg !12031, !ctir !842
  store %struct.hash_entry* %22, %struct.hash_entry** %free_entry_list13, align 8, !dbg !12032, !tbaa !11785, !ctir !847
  br label %for.inc, !dbg !12033

for.inc:                                          ; preds = %if.end
  %24 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12034, !tbaa !2648
  store %struct.hash_entry* %24, %struct.hash_entry** %cursor, align 8, !dbg !12035, !tbaa !2648
  br label %for.cond3, !dbg !12036, !llvm.loop !12037

for.end:                                          ; preds = %for.cond3
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12039, !tbaa !2648
  %data_freer14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 8, !dbg !12041, !ctir !842
  %26 = load void (i8*)*, void (i8*)** %data_freer14, align 8, !dbg !12041, !tbaa !11781, !ctir !877
  %tobool15 = icmp ne void (i8*)* %26, null, !dbg !12039
  br i1 %tobool15, label %if.then16, label %if.end19, !dbg !12042

if.then16:                                        ; preds = %for.end
  %27 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12043, !tbaa !2648
  %data_freer17 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %27, i32 0, i32 8, !dbg !12044, !ctir !842
  %28 = load void (i8*)*, void (i8*)** %data_freer17, align 8, !dbg !12044, !tbaa !11781, !ctir !877
  %29 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12045, !tbaa !2648
  %data18 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %29, i32 0, i32 0, !dbg !12046, !ctir !848
  %30 = load i8*, i8** %data18, align 8, !dbg !12046, !tbaa !11221, !ctir !53
  call void %28(i8* %30), !dbg !12043
  br label %if.end19, !dbg !12043

if.end19:                                         ; preds = %if.then16, %for.end
  %31 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12047, !tbaa !2648
  %data20 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %31, i32 0, i32 0, !dbg !12048, !ctir !848
  store i8* null, i8** %data20, align 8, !dbg !12049, !tbaa !11221, !ctir !53
  %32 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12050, !tbaa !2648
  %next21 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %32, i32 0, i32 1, !dbg !12051, !ctir !848
  store %struct.hash_entry* null, %struct.hash_entry** %next21, align 8, !dbg !12052, !tbaa !11233, !ctir !847
  br label %if.end22, !dbg !12053

if.end22:                                         ; preds = %if.end19, %for.body
  br label %for.inc23, !dbg !12054

for.inc23:                                        ; preds = %if.end22
  %33 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12055, !tbaa !2648
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 1, !dbg !12055
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12055, !tbaa !2648
  br label %for.cond, !dbg !12056, !llvm.loop !12057

for.end24:                                        ; preds = %for.cond
  %34 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12059, !tbaa !2648
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 3, !dbg !12060, !ctir !842
  store i64 0, i64* %n_buckets_used, align 8, !dbg !12061, !tbaa !11188, !ctir !55
  %35 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12062, !tbaa !2648
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %35, i32 0, i32 4, !dbg !12063, !ctir !842
  store i64 0, i64* %n_entries, align 8, !dbg !12064, !tbaa !11195, !ctir !55
  ret void, !dbg !12065
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_free(%struct.hash_table* %table) #4 !dbg !12066 !ctir !939 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !847
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !847
  %next = alloca %struct.hash_entry*, align 8, !ctir !847
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12067, metadata !DIExpression()), !dbg !12068
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12069, metadata !DIExpression()), !dbg !12070
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12071, metadata !DIExpression()), !dbg !12072
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12073, metadata !DIExpression()), !dbg !12074
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12075, !tbaa !2648
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 8, !dbg !12077, !ctir !842
  %1 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !12077, !tbaa !11781, !ctir !877
  %tobool = icmp ne void (i8*)* %1, null, !dbg !12075
  br i1 %tobool, label %land.lhs.true, label %if.end13, !dbg !12078

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12079, !tbaa !2648
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 4, !dbg !12080, !ctir !842
  %3 = load i64, i64* %n_entries, align 8, !dbg !12080, !tbaa !11195, !ctir !55
  %tobool1 = icmp ne i64 %3, 0, !dbg !12079
  br i1 %tobool1, label %if.then, label %if.end13, !dbg !12081

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12082, !tbaa !2648
  %bucket2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %4, i32 0, i32 0, !dbg !12085, !ctir !842
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket2, align 8, !dbg !12085, !tbaa !11207, !ctir !847
  store %struct.hash_entry* %5, %struct.hash_entry** %bucket, align 8, !dbg !12086, !tbaa !2648
  br label %for.cond, !dbg !12087

for.cond:                                         ; preds = %for.inc11, %if.then
  %6 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12088, !tbaa !2648
  %7 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12090, !tbaa !2648
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %7, i32 0, i32 1, !dbg !12091, !ctir !842
  %8 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12091, !tbaa !11214, !ctir !853
  %cmp = icmp ult %struct.hash_entry* %6, %8, !dbg !12092
  br i1 %cmp, label %for.body, label %for.end12, !dbg !12093

for.body:                                         ; preds = %for.cond
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12094, !tbaa !2648
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !12097, !ctir !848
  %10 = load i8*, i8** %data, align 8, !dbg !12097, !tbaa !11221, !ctir !53
  %tobool3 = icmp ne i8* %10, null, !dbg !12094
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !12098

if.then4:                                         ; preds = %for.body
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12099, !tbaa !2648
  store %struct.hash_entry* %11, %struct.hash_entry** %cursor, align 8, !dbg !12102, !tbaa !2648
  br label %for.cond5, !dbg !12103

for.cond5:                                        ; preds = %for.inc, %if.then4
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12104, !tbaa !2648
  %tobool6 = icmp ne %struct.hash_entry* %12, null, !dbg !12106
  br i1 %tobool6, label %for.body7, label %for.end, !dbg !12106

for.body7:                                        ; preds = %for.cond5
  %13 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12107, !tbaa !2648
  %data_freer8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 8, !dbg !12108, !ctir !842
  %14 = load void (i8*)*, void (i8*)** %data_freer8, align 8, !dbg !12108, !tbaa !11781, !ctir !877
  %15 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12109, !tbaa !2648
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 0, i32 0, !dbg !12110, !ctir !848
  %16 = load i8*, i8** %data9, align 8, !dbg !12110, !tbaa !11221, !ctir !53
  call void %14(i8* %16), !dbg !12107
  br label %for.inc, !dbg !12107

for.inc:                                          ; preds = %for.body7
  %17 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12111, !tbaa !2648
  %next10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !12112, !ctir !848
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next10, align 8, !dbg !12112, !tbaa !11233, !ctir !847
  store %struct.hash_entry* %18, %struct.hash_entry** %cursor, align 8, !dbg !12113, !tbaa !2648
  br label %for.cond5, !dbg !12114, !llvm.loop !12115

for.end:                                          ; preds = %for.cond5
  br label %if.end, !dbg !12117

if.end:                                           ; preds = %for.end, %for.body
  br label %for.inc11, !dbg !12118

for.inc11:                                        ; preds = %if.end
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12119, !tbaa !2648
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 1, !dbg !12119
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12119, !tbaa !2648
  br label %for.cond, !dbg !12120, !llvm.loop !12121

for.end12:                                        ; preds = %for.cond
  br label %if.end13, !dbg !12123

if.end13:                                         ; preds = %for.end12, %land.lhs.true, %entry
  %20 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12124, !tbaa !2648
  %bucket14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20, i32 0, i32 0, !dbg !12126, !ctir !842
  %21 = load %struct.hash_entry*, %struct.hash_entry** %bucket14, align 8, !dbg !12126, !tbaa !11207, !ctir !847
  store %struct.hash_entry* %21, %struct.hash_entry** %bucket, align 8, !dbg !12127, !tbaa !2648
  br label %for.cond15, !dbg !12128

for.cond15:                                       ; preds = %for.inc26, %if.end13
  %22 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12129, !tbaa !2648
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12131, !tbaa !2648
  %bucket_limit16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 1, !dbg !12132, !ctir !842
  %24 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit16, align 8, !dbg !12132, !tbaa !11214, !ctir !853
  %cmp17 = icmp ult %struct.hash_entry* %22, %24, !dbg !12133
  br i1 %cmp17, label %for.body18, label %for.end28, !dbg !12134

for.body18:                                       ; preds = %for.cond15
  %25 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12135, !tbaa !2648
  %next19 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %25, i32 0, i32 1, !dbg !12138, !ctir !848
  %26 = load %struct.hash_entry*, %struct.hash_entry** %next19, align 8, !dbg !12138, !tbaa !11233, !ctir !847
  store %struct.hash_entry* %26, %struct.hash_entry** %cursor, align 8, !dbg !12139, !tbaa !2648
  br label %for.cond20, !dbg !12140

for.cond20:                                       ; preds = %for.inc24, %for.body18
  %27 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12141, !tbaa !2648
  %tobool21 = icmp ne %struct.hash_entry* %27, null, !dbg !12143
  br i1 %tobool21, label %for.body22, label %for.end25, !dbg !12143

for.body22:                                       ; preds = %for.cond20
  %28 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12144, !tbaa !2648
  %next23 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %28, i32 0, i32 1, !dbg !12146, !ctir !848
  %29 = load %struct.hash_entry*, %struct.hash_entry** %next23, align 8, !dbg !12146, !tbaa !11233, !ctir !847
  store %struct.hash_entry* %29, %struct.hash_entry** %next, align 8, !dbg !12147, !tbaa !2648
  %30 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12148, !tbaa !2648
  %31 = bitcast %struct.hash_entry* %30 to i8*, !dbg !12148
  call void @free(i8* %31) #9, !dbg !12149
  br label %for.inc24, !dbg !12150

for.inc24:                                        ; preds = %for.body22
  %32 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12151, !tbaa !2648
  store %struct.hash_entry* %32, %struct.hash_entry** %cursor, align 8, !dbg !12152, !tbaa !2648
  br label %for.cond20, !dbg !12153, !llvm.loop !12154

for.end25:                                        ; preds = %for.cond20
  br label %for.inc26, !dbg !12156

for.inc26:                                        ; preds = %for.end25
  %33 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12157, !tbaa !2648
  %incdec.ptr27 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 1, !dbg !12157
  store %struct.hash_entry* %incdec.ptr27, %struct.hash_entry** %bucket, align 8, !dbg !12157, !tbaa !2648
  br label %for.cond15, !dbg !12158, !llvm.loop !12159

for.end28:                                        ; preds = %for.cond15
  %34 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12161, !tbaa !2648
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 9, !dbg !12163, !ctir !842
  %35 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12163, !tbaa !11785, !ctir !847
  store %struct.hash_entry* %35, %struct.hash_entry** %cursor, align 8, !dbg !12164, !tbaa !2648
  br label %for.cond29, !dbg !12165

for.cond29:                                       ; preds = %for.inc33, %for.end28
  %36 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12166, !tbaa !2648
  %tobool30 = icmp ne %struct.hash_entry* %36, null, !dbg !12168
  br i1 %tobool30, label %for.body31, label %for.end34, !dbg !12168

for.body31:                                       ; preds = %for.cond29
  %37 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12169, !tbaa !2648
  %next32 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %37, i32 0, i32 1, !dbg !12171, !ctir !848
  %38 = load %struct.hash_entry*, %struct.hash_entry** %next32, align 8, !dbg !12171, !tbaa !11233, !ctir !847
  store %struct.hash_entry* %38, %struct.hash_entry** %next, align 8, !dbg !12172, !tbaa !2648
  %39 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12173, !tbaa !2648
  %40 = bitcast %struct.hash_entry* %39 to i8*, !dbg !12173
  call void @free(i8* %40) #9, !dbg !12174
  br label %for.inc33, !dbg !12175

for.inc33:                                        ; preds = %for.body31
  %41 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12176, !tbaa !2648
  store %struct.hash_entry* %41, %struct.hash_entry** %cursor, align 8, !dbg !12177, !tbaa !2648
  br label %for.cond29, !dbg !12178, !llvm.loop !12179

for.end34:                                        ; preds = %for.cond29
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12181, !tbaa !2648
  %bucket35 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %42, i32 0, i32 0, !dbg !12182, !ctir !842
  %43 = load %struct.hash_entry*, %struct.hash_entry** %bucket35, align 8, !dbg !12182, !tbaa !11207, !ctir !847
  %44 = bitcast %struct.hash_entry* %43 to i8*, !dbg !12181
  call void @free(i8* %44) #9, !dbg !12183
  %45 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12184, !tbaa !2648
  %46 = bitcast %struct.hash_table* %45 to i8*, !dbg !12184
  call void @free(i8* %46) #9, !dbg !12185
  ret void, !dbg !12186
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @hash_rehash(%struct.hash_table* %table, i64 %candidate) #4 !dbg !12187 !ctir !941 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %candidate.addr = alloca i64, align 8
  %storage = alloca %struct.hash_table, align 8, !ctir !842
  %new_table = alloca %struct.hash_table*, align 8, !ctir !938
  %new_size = alloca i64, align 8, !ctir !55
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12188, metadata !DIExpression()), !dbg !12189
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12190, metadata !DIExpression()), !dbg !12191
  call void @llvm.dbg.declare(metadata %struct.hash_table* %storage, metadata !12192, metadata !DIExpression()), !dbg !12193
  call void @llvm.dbg.declare(metadata %struct.hash_table** %new_table, metadata !12194, metadata !DIExpression()), !dbg !12195
  call void @llvm.dbg.declare(metadata i64* %new_size, metadata !12196, metadata !DIExpression()), !dbg !12197
  %0 = load i64, i64* %candidate.addr, align 8, !dbg !12198, !tbaa !3288
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12199, !tbaa !2648
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %1, i32 0, i32 5, !dbg !12200, !ctir !842
  %2 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12200, !tbaa !11725, !ctir !859
  %call = call i64 @compute_bucket_size(i64 %0, %struct.hash_tuning* %2) #14, !dbg !12201
  store i64 %call, i64* %new_size, align 8, !dbg !12197, !tbaa !3288
  %3 = load i64, i64* %new_size, align 8, !dbg !12202, !tbaa !3288
  %tobool = icmp ne i64 %3, 0, !dbg !12202
  br i1 %tobool, label %if.end, label %if.then, !dbg !12204

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !12205
  br label %return, !dbg !12205

if.end:                                           ; preds = %entry
  %4 = load i64, i64* %new_size, align 8, !dbg !12206, !tbaa !3288
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12208, !tbaa !2648
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 2, !dbg !12209, !ctir !842
  %6 = load i64, i64* %n_buckets, align 8, !dbg !12209, !tbaa !11180, !ctir !55
  %cmp = icmp eq i64 %4, %6, !dbg !12210
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !12211

if.then1:                                         ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !12212
  br label %return, !dbg !12212

if.end2:                                          ; preds = %if.end
  store %struct.hash_table* %storage, %struct.hash_table** %new_table, align 8, !dbg !12213, !tbaa !2648
  %7 = load i64, i64* %new_size, align 8, !dbg !12214, !tbaa !3288
  %call3 = call noalias i8* @calloc(i64 %7, i64 16) #9, !dbg !12215
  %8 = bitcast i8* %call3 to %struct.hash_entry*, !dbg !12215
  %9 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12216, !tbaa !2648
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 0, !dbg !12217, !ctir !842
  store %struct.hash_entry* %8, %struct.hash_entry** %bucket, align 8, !dbg !12218, !tbaa !11207, !ctir !847
  %10 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12219, !tbaa !2648
  %bucket4 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 0, !dbg !12221, !ctir !842
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket4, align 8, !dbg !12221, !tbaa !11207, !ctir !847
  %cmp5 = icmp eq %struct.hash_entry* %11, null, !dbg !12222
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !12223

if.then6:                                         ; preds = %if.end2
  store i1 false, i1* %retval, align 1, !dbg !12224
  br label %return, !dbg !12224

if.end7:                                          ; preds = %if.end2
  %12 = load i64, i64* %new_size, align 8, !dbg !12225, !tbaa !3288
  %13 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12226, !tbaa !2648
  %n_buckets8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 2, !dbg !12227, !ctir !842
  store i64 %12, i64* %n_buckets8, align 8, !dbg !12228, !tbaa !11180, !ctir !55
  %14 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12229, !tbaa !2648
  %bucket9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 0, !dbg !12230, !ctir !842
  %15 = load %struct.hash_entry*, %struct.hash_entry** %bucket9, align 8, !dbg !12230, !tbaa !11207, !ctir !847
  %16 = load i64, i64* %new_size, align 8, !dbg !12231, !tbaa !3288
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i64 %16, !dbg !12232
  %17 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12233, !tbaa !2648
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 1, !dbg !12234, !ctir !842
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket_limit, align 8, !dbg !12235, !tbaa !11214, !ctir !853
  %18 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12236, !tbaa !2648
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %18, i32 0, i32 3, !dbg !12237, !ctir !842
  store i64 0, i64* %n_buckets_used, align 8, !dbg !12238, !tbaa !11188, !ctir !55
  %19 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12239, !tbaa !2648
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 4, !dbg !12240, !ctir !842
  store i64 0, i64* %n_entries, align 8, !dbg !12241, !tbaa !11195, !ctir !55
  %20 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12242, !tbaa !2648
  %tuning10 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20, i32 0, i32 5, !dbg !12243, !ctir !842
  %21 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning10, align 8, !dbg !12243, !tbaa !11725, !ctir !859
  %22 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12244, !tbaa !2648
  %tuning11 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %22, i32 0, i32 5, !dbg !12245, !ctir !842
  store %struct.hash_tuning* %21, %struct.hash_tuning** %tuning11, align 8, !dbg !12246, !tbaa !11725, !ctir !859
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12247, !tbaa !2648
  %hasher = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 6, !dbg !12248, !ctir !842
  %24 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher, align 8, !dbg !12248, !tbaa !11409, !ctir !871
  %25 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12249, !tbaa !2648
  %hasher12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 6, !dbg !12250, !ctir !842
  store i64 (i8*, i64)* %24, i64 (i8*, i64)** %hasher12, align 8, !dbg !12251, !tbaa !11409, !ctir !871
  %26 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12252, !tbaa !2648
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %26, i32 0, i32 7, !dbg !12253, !ctir !842
  %27 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !12253, !tbaa !11383, !ctir !874
  %28 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12254, !tbaa !2648
  %comparator13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 7, !dbg !12255, !ctir !842
  store i1 (i8*, i8*)* %27, i1 (i8*, i8*)** %comparator13, align 8, !dbg !12256, !tbaa !11383, !ctir !874
  %29 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12257, !tbaa !2648
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 8, !dbg !12258, !ctir !842
  %30 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !12258, !tbaa !11781, !ctir !877
  %31 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12259, !tbaa !2648
  %data_freer14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %31, i32 0, i32 8, !dbg !12260, !ctir !842
  store void (i8*)* %30, void (i8*)** %data_freer14, align 8, !dbg !12261, !tbaa !11781, !ctir !877
  %32 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12262, !tbaa !2648
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 9, !dbg !12263, !ctir !842
  %33 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12263, !tbaa !11785, !ctir !847
  %34 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12264, !tbaa !2648
  %free_entry_list15 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 9, !dbg !12265, !ctir !842
  store %struct.hash_entry* %33, %struct.hash_entry** %free_entry_list15, align 8, !dbg !12266, !tbaa !11785, !ctir !847
  %35 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12267, !tbaa !2648
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12269, !tbaa !2648
  %call16 = call zeroext i1 @transfer_entries(%struct.hash_table* %35, %struct.hash_table* %36, i1 zeroext false), !dbg !12270
  br i1 %call16, label %if.then17, label %if.end29, !dbg !12271

if.then17:                                        ; preds = %if.end7
  %37 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12272, !tbaa !2648
  %bucket18 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %37, i32 0, i32 0, !dbg !12274, !ctir !842
  %38 = load %struct.hash_entry*, %struct.hash_entry** %bucket18, align 8, !dbg !12274, !tbaa !11207, !ctir !847
  %39 = bitcast %struct.hash_entry* %38 to i8*, !dbg !12272
  call void @free(i8* %39) #9, !dbg !12275
  %40 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12276, !tbaa !2648
  %bucket19 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %40, i32 0, i32 0, !dbg !12277, !ctir !842
  %41 = load %struct.hash_entry*, %struct.hash_entry** %bucket19, align 8, !dbg !12277, !tbaa !11207, !ctir !847
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12278, !tbaa !2648
  %bucket20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %42, i32 0, i32 0, !dbg !12279, !ctir !842
  store %struct.hash_entry* %41, %struct.hash_entry** %bucket20, align 8, !dbg !12280, !tbaa !11207, !ctir !847
  %43 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12281, !tbaa !2648
  %bucket_limit21 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %43, i32 0, i32 1, !dbg !12282, !ctir !842
  %44 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit21, align 8, !dbg !12282, !tbaa !11214, !ctir !853
  %45 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12283, !tbaa !2648
  %bucket_limit22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %45, i32 0, i32 1, !dbg !12284, !ctir !842
  store %struct.hash_entry* %44, %struct.hash_entry** %bucket_limit22, align 8, !dbg !12285, !tbaa !11214, !ctir !853
  %46 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12286, !tbaa !2648
  %n_buckets23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %46, i32 0, i32 2, !dbg !12287, !ctir !842
  %47 = load i64, i64* %n_buckets23, align 8, !dbg !12287, !tbaa !11180, !ctir !55
  %48 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12288, !tbaa !2648
  %n_buckets24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %48, i32 0, i32 2, !dbg !12289, !ctir !842
  store i64 %47, i64* %n_buckets24, align 8, !dbg !12290, !tbaa !11180, !ctir !55
  %49 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12291, !tbaa !2648
  %n_buckets_used25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %49, i32 0, i32 3, !dbg !12292, !ctir !842
  %50 = load i64, i64* %n_buckets_used25, align 8, !dbg !12292, !tbaa !11188, !ctir !55
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12293, !tbaa !2648
  %n_buckets_used26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %51, i32 0, i32 3, !dbg !12294, !ctir !842
  store i64 %50, i64* %n_buckets_used26, align 8, !dbg !12295, !tbaa !11188, !ctir !55
  %52 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12296, !tbaa !2648
  %free_entry_list27 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %52, i32 0, i32 9, !dbg !12297, !ctir !842
  %53 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list27, align 8, !dbg !12297, !tbaa !11785, !ctir !847
  %54 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12298, !tbaa !2648
  %free_entry_list28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %54, i32 0, i32 9, !dbg !12299, !ctir !842
  store %struct.hash_entry* %53, %struct.hash_entry** %free_entry_list28, align 8, !dbg !12300, !tbaa !11785, !ctir !847
  store i1 true, i1* %retval, align 1, !dbg !12301
  br label %return, !dbg !12301

if.end29:                                         ; preds = %if.end7
  %55 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12302, !tbaa !2648
  %free_entry_list30 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %55, i32 0, i32 9, !dbg !12303, !ctir !842
  %56 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list30, align 8, !dbg !12303, !tbaa !11785, !ctir !847
  %57 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12304, !tbaa !2648
  %free_entry_list31 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %57, i32 0, i32 9, !dbg !12305, !ctir !842
  store %struct.hash_entry* %56, %struct.hash_entry** %free_entry_list31, align 8, !dbg !12306, !tbaa !11785, !ctir !847
  %58 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12307, !tbaa !2648
  %59 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12309, !tbaa !2648
  %call32 = call zeroext i1 @transfer_entries(%struct.hash_table* %58, %struct.hash_table* %59, i1 zeroext true), !dbg !12310
  br i1 %call32, label %land.lhs.true, label %if.then34, !dbg !12311

land.lhs.true:                                    ; preds = %if.end29
  %60 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12312, !tbaa !2648
  %61 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12313, !tbaa !2648
  %call33 = call zeroext i1 @transfer_entries(%struct.hash_table* %60, %struct.hash_table* %61, i1 zeroext false), !dbg !12314
  br i1 %call33, label %if.end35, label %if.then34, !dbg !12315

if.then34:                                        ; preds = %land.lhs.true, %if.end29
  call void @abort() #13, !dbg !12316
  unreachable, !dbg !12316

if.end35:                                         ; preds = %land.lhs.true
  %62 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12317, !tbaa !2648
  %bucket36 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %62, i32 0, i32 0, !dbg !12318, !ctir !842
  %63 = load %struct.hash_entry*, %struct.hash_entry** %bucket36, align 8, !dbg !12318, !tbaa !11207, !ctir !847
  %64 = bitcast %struct.hash_entry* %63 to i8*, !dbg !12317
  call void @free(i8* %64) #9, !dbg !12319
  store i1 false, i1* %retval, align 1, !dbg !12320
  br label %return, !dbg !12320

return:                                           ; preds = %if.end35, %if.then17, %if.then6, %if.then1, %if.then
  %65 = load i1, i1* %retval, align 1, !dbg !12321
  ret i1 %65, !dbg !12321
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @transfer_entries(%struct.hash_table* %dst, %struct.hash_table* %src, i1 zeroext %safe) #4 !dbg !12322 !ctir !958 {
entry:
  %retval = alloca i1, align 1
  %dst.addr = alloca %struct.hash_table*, align 8
  %src.addr = alloca %struct.hash_table*, align 8
  %safe.addr = alloca i8, align 1
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !847
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !847
  %next = alloca %struct.hash_entry*, align 8, !ctir !847
  %data2 = alloca i8*, align 8, !ctir !53
  %new_bucket = alloca %struct.hash_entry*, align 8, !ctir !847
  %new_entry = alloca %struct.hash_entry*, align 8, !ctir !847
  store %struct.hash_table* %dst, %struct.hash_table** %dst.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.hash_table** %dst.addr, metadata !12323, metadata !DIExpression()), !dbg !12324
  store %struct.hash_table* %src, %struct.hash_table** %src.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.hash_table** %src.addr, metadata !12325, metadata !DIExpression()), !dbg !12326
  %frombool = zext i1 %safe to i8
  store i8 %frombool, i8* %safe.addr, align 1, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %safe.addr, metadata !12327, metadata !DIExpression()), !dbg !12328
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12329, metadata !DIExpression()), !dbg !12330
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12331, metadata !DIExpression()), !dbg !12332
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12333, metadata !DIExpression()), !dbg !12334
  %0 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12335, !tbaa !2648
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !12337, !ctir !842
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !12337, !tbaa !11207, !ctir !847
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !12338, !tbaa !2648
  br label %for.cond, !dbg !12339

for.cond:                                         ; preds = %for.inc41, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12340, !tbaa !2648
  %3 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12342, !tbaa !2648
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !12343, !ctir !842
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12343, !tbaa !11214, !ctir !853
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !12344
  br i1 %cmp, label %for.body, label %for.end42, !dbg !12345

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12346, !tbaa !2648
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12348, !ctir !848
  %6 = load i8*, i8** %data, align 8, !dbg !12348, !tbaa !11221, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !12346
  br i1 %tobool, label %if.then, label %if.end40, !dbg !12349

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %data2, metadata !12350, metadata !DIExpression()), !dbg !12352
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_bucket, metadata !12353, metadata !DIExpression()), !dbg !12354
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12355, !tbaa !2648
  %next3 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 1, !dbg !12357, !ctir !848
  %8 = load %struct.hash_entry*, %struct.hash_entry** %next3, align 8, !dbg !12357, !tbaa !11233, !ctir !847
  store %struct.hash_entry* %8, %struct.hash_entry** %cursor, align 8, !dbg !12358, !tbaa !2648
  br label %for.cond4, !dbg !12359

for.cond4:                                        ; preds = %for.inc, %if.then
  %9 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12360, !tbaa !2648
  %tobool5 = icmp ne %struct.hash_entry* %9, null, !dbg !12362
  br i1 %tobool5, label %for.body6, label %for.end, !dbg !12362

for.body6:                                        ; preds = %for.cond4
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12363, !tbaa !2648
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 0, !dbg !12365, !ctir !848
  %11 = load i8*, i8** %data7, align 8, !dbg !12365, !tbaa !11221, !ctir !53
  store i8* %11, i8** %data2, align 8, !dbg !12366, !tbaa !2648
  %12 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12367, !tbaa !2648
  %13 = load i8*, i8** %data2, align 8, !dbg !12368, !tbaa !2648
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %12, i8* %13), !dbg !12369
  store %struct.hash_entry* %call, %struct.hash_entry** %new_bucket, align 8, !dbg !12370, !tbaa !2648
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12371, !tbaa !2648
  %next8 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 1, !dbg !12372, !ctir !848
  %15 = load %struct.hash_entry*, %struct.hash_entry** %next8, align 8, !dbg !12372, !tbaa !11233, !ctir !847
  store %struct.hash_entry* %15, %struct.hash_entry** %next, align 8, !dbg !12373, !tbaa !2648
  %16 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12374, !tbaa !2648
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 0, !dbg !12376, !ctir !848
  %17 = load i8*, i8** %data9, align 8, !dbg !12376, !tbaa !11221, !ctir !53
  %tobool10 = icmp ne i8* %17, null, !dbg !12374
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !12377

if.then11:                                        ; preds = %for.body6
  %18 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12378, !tbaa !2648
  %next12 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %18, i32 0, i32 1, !dbg !12380, !ctir !848
  %19 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !12380, !tbaa !11233, !ctir !847
  %20 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12381, !tbaa !2648
  %next13 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %20, i32 0, i32 1, !dbg !12382, !ctir !848
  store %struct.hash_entry* %19, %struct.hash_entry** %next13, align 8, !dbg !12383, !tbaa !11233, !ctir !847
  %21 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12384, !tbaa !2648
  %22 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12385, !tbaa !2648
  %next14 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %22, i32 0, i32 1, !dbg !12386, !ctir !848
  store %struct.hash_entry* %21, %struct.hash_entry** %next14, align 8, !dbg !12387, !tbaa !11233, !ctir !847
  br label %if.end, !dbg !12388

if.else:                                          ; preds = %for.body6
  %23 = load i8*, i8** %data2, align 8, !dbg !12389, !tbaa !2648
  %24 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12391, !tbaa !2648
  %data15 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %24, i32 0, i32 0, !dbg !12392, !ctir !848
  store i8* %23, i8** %data15, align 8, !dbg !12393, !tbaa !11221, !ctir !53
  %25 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12394, !tbaa !2648
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 3, !dbg !12395, !ctir !842
  %26 = load i64, i64* %n_buckets_used, align 8, !dbg !12396, !tbaa !11188, !ctir !55
  %inc = add i64 %26, 1, !dbg !12396
  store i64 %inc, i64* %n_buckets_used, align 8, !dbg !12396, !tbaa !11188, !ctir !55
  %27 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12397, !tbaa !2648
  %28 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12398, !tbaa !2648
  call void @free_entry(%struct.hash_table* %27, %struct.hash_entry* %28), !dbg !12399
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then11
  br label %for.inc, !dbg !12400

for.inc:                                          ; preds = %if.end
  %29 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12401, !tbaa !2648
  store %struct.hash_entry* %29, %struct.hash_entry** %cursor, align 8, !dbg !12402, !tbaa !2648
  br label %for.cond4, !dbg !12403, !llvm.loop !12404

for.end:                                          ; preds = %for.cond4
  %30 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12406, !tbaa !2648
  %data16 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %30, i32 0, i32 0, !dbg !12407, !ctir !848
  %31 = load i8*, i8** %data16, align 8, !dbg !12407, !tbaa !11221, !ctir !53
  store i8* %31, i8** %data2, align 8, !dbg !12408, !tbaa !2648
  %32 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12409, !tbaa !2648
  %next17 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %32, i32 0, i32 1, !dbg !12410, !ctir !848
  store %struct.hash_entry* null, %struct.hash_entry** %next17, align 8, !dbg !12411, !tbaa !11233, !ctir !847
  %33 = load i8, i8* %safe.addr, align 1, !dbg !12412, !tbaa !2742
  %tobool18 = trunc i8 %33 to i1, !dbg !12412
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !12414

if.then19:                                        ; preds = %for.end
  br label %for.inc41, !dbg !12415

if.end20:                                         ; preds = %for.end
  %34 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12416, !tbaa !2648
  %35 = load i8*, i8** %data2, align 8, !dbg !12417, !tbaa !2648
  %call21 = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %34, i8* %35), !dbg !12418
  store %struct.hash_entry* %call21, %struct.hash_entry** %new_bucket, align 8, !dbg !12419, !tbaa !2648
  %36 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12420, !tbaa !2648
  %data22 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %36, i32 0, i32 0, !dbg !12422, !ctir !848
  %37 = load i8*, i8** %data22, align 8, !dbg !12422, !tbaa !11221, !ctir !53
  %tobool23 = icmp ne i8* %37, null, !dbg !12420
  br i1 %tobool23, label %if.then24, label %if.else33, !dbg !12423

if.then24:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_entry, metadata !12424, metadata !DIExpression()), !dbg !12426
  %38 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12427, !tbaa !2648
  %call25 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %38), !dbg !12428
  store %struct.hash_entry* %call25, %struct.hash_entry** %new_entry, align 8, !dbg !12426, !tbaa !2648
  %39 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12429, !tbaa !2648
  %cmp26 = icmp eq %struct.hash_entry* %39, null, !dbg !12431
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !12432

if.then27:                                        ; preds = %if.then24
  store i1 false, i1* %retval, align 1, !dbg !12433
  br label %return, !dbg !12433

if.end28:                                         ; preds = %if.then24
  %40 = load i8*, i8** %data2, align 8, !dbg !12434, !tbaa !2648
  %41 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12435, !tbaa !2648
  %data29 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %41, i32 0, i32 0, !dbg !12436, !ctir !848
  store i8* %40, i8** %data29, align 8, !dbg !12437, !tbaa !11221, !ctir !53
  %42 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12438, !tbaa !2648
  %next30 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %42, i32 0, i32 1, !dbg !12439, !ctir !848
  %43 = load %struct.hash_entry*, %struct.hash_entry** %next30, align 8, !dbg !12439, !tbaa !11233, !ctir !847
  %44 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12440, !tbaa !2648
  %next31 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %44, i32 0, i32 1, !dbg !12441, !ctir !848
  store %struct.hash_entry* %43, %struct.hash_entry** %next31, align 8, !dbg !12442, !tbaa !11233, !ctir !847
  %45 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12443, !tbaa !2648
  %46 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12444, !tbaa !2648
  %next32 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !12445, !ctir !848
  store %struct.hash_entry* %45, %struct.hash_entry** %next32, align 8, !dbg !12446, !tbaa !11233, !ctir !847
  br label %if.end37, !dbg !12447

if.else33:                                        ; preds = %if.end20
  %47 = load i8*, i8** %data2, align 8, !dbg !12448, !tbaa !2648
  %48 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12450, !tbaa !2648
  %data34 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 0, !dbg !12451, !ctir !848
  store i8* %47, i8** %data34, align 8, !dbg !12452, !tbaa !11221, !ctir !53
  %49 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12453, !tbaa !2648
  %n_buckets_used35 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %49, i32 0, i32 3, !dbg !12454, !ctir !842
  %50 = load i64, i64* %n_buckets_used35, align 8, !dbg !12455, !tbaa !11188, !ctir !55
  %inc36 = add i64 %50, 1, !dbg !12455
  store i64 %inc36, i64* %n_buckets_used35, align 8, !dbg !12455, !tbaa !11188, !ctir !55
  br label %if.end37

if.end37:                                         ; preds = %if.else33, %if.end28
  %51 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12456, !tbaa !2648
  %data38 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %51, i32 0, i32 0, !dbg !12457, !ctir !848
  store i8* null, i8** %data38, align 8, !dbg !12458, !tbaa !11221, !ctir !53
  %52 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12459, !tbaa !2648
  %n_buckets_used39 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %52, i32 0, i32 3, !dbg !12460, !ctir !842
  %53 = load i64, i64* %n_buckets_used39, align 8, !dbg !12461, !tbaa !11188, !ctir !55
  %dec = add i64 %53, -1, !dbg !12461
  store i64 %dec, i64* %n_buckets_used39, align 8, !dbg !12461, !tbaa !11188, !ctir !55
  br label %if.end40, !dbg !12462

if.end40:                                         ; preds = %if.end37, %for.body
  br label %for.inc41, !dbg !12348

for.inc41:                                        ; preds = %if.end40, %if.then19
  %54 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12463, !tbaa !2648
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 1, !dbg !12463
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12463, !tbaa !2648
  br label %for.cond, !dbg !12464, !llvm.loop !12465

for.end42:                                        ; preds = %for.cond
  store i1 true, i1* %retval, align 1, !dbg !12467
  br label %return, !dbg !12467

return:                                           ; preds = %for.end42, %if.then27
  %55 = load i1, i1* %retval, align 1, !dbg !12468
  ret i1 %55, !dbg !12468
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @free_entry(%struct.hash_table* %table, %struct.hash_entry* %entry1) #4 !dbg !12469 !ctir !960 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12470, metadata !DIExpression()), !dbg !12471
  store %struct.hash_entry* %entry1, %struct.hash_entry** %entry.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %entry.addr, metadata !12472, metadata !DIExpression()), !dbg !12473
  %0 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !12474, !tbaa !2648
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %0, i32 0, i32 0, !dbg !12475, !ctir !848
  store i8* null, i8** %data, align 8, !dbg !12476, !tbaa !11221, !ctir !53
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12477, !tbaa !2648
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %1, i32 0, i32 9, !dbg !12478, !ctir !842
  %2 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12478, !tbaa !11785, !ctir !847
  %3 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !12479, !tbaa !2648
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %3, i32 0, i32 1, !dbg !12480, !ctir !848
  store %struct.hash_entry* %2, %struct.hash_entry** %next, align 8, !dbg !12481, !tbaa !11233, !ctir !847
  %4 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !12482, !tbaa !2648
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12483, !tbaa !2648
  %free_entry_list2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 9, !dbg !12484, !ctir !842
  store %struct.hash_entry* %4, %struct.hash_entry** %free_entry_list2, align 8, !dbg !12485, !tbaa !11785, !ctir !847
  ret void, !dbg !12486
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.hash_entry* @allocate_entry(%struct.hash_table* %table) #4 !dbg !12487 !ctir !965 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %new = alloca %struct.hash_entry*, align 8, !ctir !847
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12488, metadata !DIExpression()), !dbg !12489
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new, metadata !12490, metadata !DIExpression()), !dbg !12491
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12492, !tbaa !2648
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 9, !dbg !12494, !ctir !842
  %1 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12494, !tbaa !11785, !ctir !847
  %tobool = icmp ne %struct.hash_entry* %1, null, !dbg !12492
  br i1 %tobool, label %if.then, label %if.else, !dbg !12495

if.then:                                          ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12496, !tbaa !2648
  %free_entry_list1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 9, !dbg !12498, !ctir !842
  %3 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list1, align 8, !dbg !12498, !tbaa !11785, !ctir !847
  store %struct.hash_entry* %3, %struct.hash_entry** %new, align 8, !dbg !12499, !tbaa !2648
  %4 = load %struct.hash_entry*, %struct.hash_entry** %new, align 8, !dbg !12500, !tbaa !2648
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %4, i32 0, i32 1, !dbg !12501, !ctir !848
  %5 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12501, !tbaa !11233, !ctir !847
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12502, !tbaa !2648
  %free_entry_list2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 9, !dbg !12503, !ctir !842
  store %struct.hash_entry* %5, %struct.hash_entry** %free_entry_list2, align 8, !dbg !12504, !tbaa !11785, !ctir !847
  br label %if.end, !dbg !12505

if.else:                                          ; preds = %entry
  %call = call noalias i8* @malloc(i64 16) #9, !dbg !12506
  %7 = bitcast i8* %call to %struct.hash_entry*, !dbg !12506
  store %struct.hash_entry* %7, %struct.hash_entry** %new, align 8, !dbg !12508, !tbaa !2648
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %new, align 8, !dbg !12509, !tbaa !2648
  ret %struct.hash_entry* %8, !dbg !12510
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @hash_insert_if_absent(%struct.hash_table* %table, i8* %entry1, i8** %matched_ent) #4 !dbg !12511 !ctir !943 {
entry:
  %retval = alloca i32, align 4
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %matched_ent.addr = alloca i8**, align 8
  %data = alloca i8*, align 8, !ctir !53
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !847
  %tuning22 = alloca %struct.hash_tuning*, align 8, !ctir !859
  %candidate = alloca float, align 4, !ctir !865
  %new_entry = alloca %struct.hash_entry*, align 8, !ctir !847
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12512, metadata !DIExpression()), !dbg !12513
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !12514, metadata !DIExpression()), !dbg !12515
  store i8** %matched_ent, i8*** %matched_ent.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8*** %matched_ent.addr, metadata !12516, metadata !DIExpression()), !dbg !12517
  call void @llvm.dbg.declare(metadata i8** %data, metadata !12518, metadata !DIExpression()), !dbg !12519
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12520, metadata !DIExpression()), !dbg !12521
  %0 = load i8*, i8** %entry.addr, align 8, !dbg !12522, !tbaa !2648
  %tobool = icmp ne i8* %0, null, !dbg !12522
  br i1 %tobool, label %if.end, label %if.then, !dbg !12524

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !12525
  unreachable, !dbg !12525

if.end:                                           ; preds = %entry
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12526, !tbaa !2648
  %2 = load i8*, i8** %entry.addr, align 8, !dbg !12528, !tbaa !2648
  %call = call i8* @hash_find_entry(%struct.hash_table* %1, i8* %2, %struct.hash_entry** %bucket, i1 zeroext false), !dbg !12529
  store i8* %call, i8** %data, align 8, !dbg !12530, !tbaa !2648
  %cmp = icmp ne i8* %call, null, !dbg !12531
  br i1 %cmp, label %if.then2, label %if.end6, !dbg !12532

if.then2:                                         ; preds = %if.end
  %3 = load i8**, i8*** %matched_ent.addr, align 8, !dbg !12533, !tbaa !2648
  %tobool3 = icmp ne i8** %3, null, !dbg !12533
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !12536

if.then4:                                         ; preds = %if.then2
  %4 = load i8*, i8** %data, align 8, !dbg !12537, !tbaa !2648
  %5 = load i8**, i8*** %matched_ent.addr, align 8, !dbg !12538, !tbaa !2648
  store i8* %4, i8** %5, align 8, !dbg !12539, !tbaa !2648, !ctir !515
  br label %if.end5, !dbg !12540

if.end5:                                          ; preds = %if.then4, %if.then2
  store i32 0, i32* %retval, align 4, !dbg !12541
  br label %return, !dbg !12541

if.end6:                                          ; preds = %if.end
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12542, !tbaa !2648
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 3, !dbg !12544, !ctir !842
  %7 = load i64, i64* %n_buckets_used, align 8, !dbg !12544, !tbaa !11188, !ctir !55
  %conv = uitofp i64 %7 to float, !dbg !12542
  %8 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12545, !tbaa !2648
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 5, !dbg !12546, !ctir !842
  %9 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12546, !tbaa !11725, !ctir !859
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %9, i32 0, i32 2, !dbg !12547, !ctir !860
  %10 = load float, float* %growth_threshold, align 4, !dbg !12547, !tbaa !11836, !ctir !865
  %11 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12548, !tbaa !2648
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 2, !dbg !12549, !ctir !842
  %12 = load i64, i64* %n_buckets, align 8, !dbg !12549, !tbaa !11180, !ctir !55
  %conv7 = uitofp i64 %12 to float, !dbg !12548
  %mul = fmul float %10, %conv7, !dbg !12550
  %cmp8 = fcmp ogt float %conv, %mul, !dbg !12551
  br i1 %cmp8, label %if.then10, label %if.end49, !dbg !12552

if.then10:                                        ; preds = %if.end6
  %13 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12553, !tbaa !2648
  %call11 = call zeroext i1 @check_tuning(%struct.hash_table* %13), !dbg !12555
  %14 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12556, !tbaa !2648
  %n_buckets_used12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 3, !dbg !12558, !ctir !842
  %15 = load i64, i64* %n_buckets_used12, align 8, !dbg !12558, !tbaa !11188, !ctir !55
  %conv13 = uitofp i64 %15 to float, !dbg !12556
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12559, !tbaa !2648
  %tuning14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 5, !dbg !12560, !ctir !842
  %17 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning14, align 8, !dbg !12560, !tbaa !11725, !ctir !859
  %growth_threshold15 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %17, i32 0, i32 2, !dbg !12561, !ctir !860
  %18 = load float, float* %growth_threshold15, align 4, !dbg !12561, !tbaa !11836, !ctir !865
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12562, !tbaa !2648
  %n_buckets16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 2, !dbg !12563, !ctir !842
  %20 = load i64, i64* %n_buckets16, align 8, !dbg !12563, !tbaa !11180, !ctir !55
  %conv17 = uitofp i64 %20 to float, !dbg !12562
  %mul18 = fmul float %18, %conv17, !dbg !12564
  %cmp19 = fcmp ogt float %conv13, %mul18, !dbg !12565
  br i1 %cmp19, label %if.then21, label %if.end48, !dbg !12566

if.then21:                                        ; preds = %if.then10
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning22, metadata !12567, metadata !DIExpression()), !dbg !12569
  %21 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12570, !tbaa !2648
  %tuning23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 5, !dbg !12571, !ctir !842
  %22 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning23, align 8, !dbg !12571, !tbaa !11725, !ctir !859
  store %struct.hash_tuning* %22, %struct.hash_tuning** %tuning22, align 8, !dbg !12569, !tbaa !2648
  call void @llvm.dbg.declare(metadata float* %candidate, metadata !12572, metadata !DIExpression()), !dbg !12573
  %23 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12574, !tbaa !2648
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %23, i32 0, i32 4, !dbg !12575, !ctir !860
  %24 = load i8, i8* %is_n_buckets, align 4, !dbg !12575, !tbaa !11893
  %tobool24 = trunc i8 %24 to i1, !dbg !12575, !ctir !142
  br i1 %tobool24, label %cond.true, label %cond.false, !dbg !12574

cond.true:                                        ; preds = %if.then21
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12576, !tbaa !2648
  %n_buckets26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 2, !dbg !12577, !ctir !842
  %26 = load i64, i64* %n_buckets26, align 8, !dbg !12577, !tbaa !11180, !ctir !55
  %conv27 = uitofp i64 %26 to float, !dbg !12576
  %27 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12578, !tbaa !2648
  %growth_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %27, i32 0, i32 3, !dbg !12579, !ctir !860
  %28 = load float, float* %growth_factor, align 4, !dbg !12579, !tbaa !11850, !ctir !865
  %mul28 = fmul float %conv27, %28, !dbg !12580
  br label %cond.end, !dbg !12574

cond.false:                                       ; preds = %if.then21
  %29 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12581, !tbaa !2648
  %n_buckets29 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 2, !dbg !12582, !ctir !842
  %30 = load i64, i64* %n_buckets29, align 8, !dbg !12582, !tbaa !11180, !ctir !55
  %conv30 = uitofp i64 %30 to float, !dbg !12581
  %31 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12583, !tbaa !2648
  %growth_factor31 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %31, i32 0, i32 3, !dbg !12584, !ctir !860
  %32 = load float, float* %growth_factor31, align 4, !dbg !12584, !tbaa !11850, !ctir !865
  %mul32 = fmul float %conv30, %32, !dbg !12585
  %33 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12586, !tbaa !2648
  %growth_threshold33 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %33, i32 0, i32 2, !dbg !12587, !ctir !860
  %34 = load float, float* %growth_threshold33, align 4, !dbg !12587, !tbaa !11836, !ctir !865
  %mul34 = fmul float %mul32, %34, !dbg !12588
  br label %cond.end, !dbg !12574

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul28, %cond.true ], [ %mul34, %cond.false ], !dbg !12574
  store float %cond, float* %candidate, align 4, !dbg !12573, !tbaa !11681
  %35 = load float, float* %candidate, align 4, !dbg !12589, !tbaa !11681
  %cmp35 = fcmp ole float 0x43F0000000000000, %35, !dbg !12591
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !12592

if.then37:                                        ; preds = %cond.end
  store i32 -1, i32* %retval, align 4, !dbg !12593
  br label %return, !dbg !12593

if.end38:                                         ; preds = %cond.end
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12594, !tbaa !2648
  %37 = load float, float* %candidate, align 4, !dbg !12596, !tbaa !11681
  %conv39 = fptoui float %37 to i64, !dbg !12596
  %call40 = call zeroext i1 @hash_rehash(%struct.hash_table* %36, i64 %conv39), !dbg !12597
  br i1 %call40, label %if.end42, label %if.then41, !dbg !12598

if.then41:                                        ; preds = %if.end38
  store i32 -1, i32* %retval, align 4, !dbg !12599
  br label %return, !dbg !12599

if.end42:                                         ; preds = %if.end38
  %38 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12600, !tbaa !2648
  %39 = load i8*, i8** %entry.addr, align 8, !dbg !12602, !tbaa !2648
  %call43 = call i8* @hash_find_entry(%struct.hash_table* %38, i8* %39, %struct.hash_entry** %bucket, i1 zeroext false), !dbg !12603
  %cmp44 = icmp ne i8* %call43, null, !dbg !12604
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !12605

if.then46:                                        ; preds = %if.end42
  call void @abort() #13, !dbg !12606
  unreachable, !dbg !12606

if.end47:                                         ; preds = %if.end42
  br label %if.end48, !dbg !12607

if.end48:                                         ; preds = %if.end47, %if.then10
  br label %if.end49, !dbg !12608

if.end49:                                         ; preds = %if.end48, %if.end6
  %40 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12609, !tbaa !2648
  %data50 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %40, i32 0, i32 0, !dbg !12611, !ctir !848
  %41 = load i8*, i8** %data50, align 8, !dbg !12611, !tbaa !11221, !ctir !53
  %tobool51 = icmp ne i8* %41, null, !dbg !12609
  br i1 %tobool51, label %if.then52, label %if.end61, !dbg !12612

if.then52:                                        ; preds = %if.end49
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_entry, metadata !12613, metadata !DIExpression()), !dbg !12615
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12616, !tbaa !2648
  %call53 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %42), !dbg !12617
  store %struct.hash_entry* %call53, %struct.hash_entry** %new_entry, align 8, !dbg !12615, !tbaa !2648
  %43 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12618, !tbaa !2648
  %cmp54 = icmp eq %struct.hash_entry* %43, null, !dbg !12620
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !12621

if.then56:                                        ; preds = %if.then52
  store i32 -1, i32* %retval, align 4, !dbg !12622
  br label %return, !dbg !12622

if.end57:                                         ; preds = %if.then52
  %44 = load i8*, i8** %entry.addr, align 8, !dbg !12623, !tbaa !2648
  %45 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12624, !tbaa !2648
  %data58 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %45, i32 0, i32 0, !dbg !12625, !ctir !848
  store i8* %44, i8** %data58, align 8, !dbg !12626, !tbaa !11221, !ctir !53
  %46 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12627, !tbaa !2648
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !12628, !ctir !848
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12628, !tbaa !11233, !ctir !847
  %48 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12629, !tbaa !2648
  %next59 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 1, !dbg !12630, !ctir !848
  store %struct.hash_entry* %47, %struct.hash_entry** %next59, align 8, !dbg !12631, !tbaa !11233, !ctir !847
  %49 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12632, !tbaa !2648
  %50 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12633, !tbaa !2648
  %next60 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %50, i32 0, i32 1, !dbg !12634, !ctir !848
  store %struct.hash_entry* %49, %struct.hash_entry** %next60, align 8, !dbg !12635, !tbaa !11233, !ctir !847
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12636, !tbaa !2648
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %51, i32 0, i32 4, !dbg !12637, !ctir !842
  %52 = load i64, i64* %n_entries, align 8, !dbg !12638, !tbaa !11195, !ctir !55
  %inc = add i64 %52, 1, !dbg !12638
  store i64 %inc, i64* %n_entries, align 8, !dbg !12638, !tbaa !11195, !ctir !55
  store i32 1, i32* %retval, align 4, !dbg !12639
  br label %return, !dbg !12639

if.end61:                                         ; preds = %if.end49
  %53 = load i8*, i8** %entry.addr, align 8, !dbg !12640, !tbaa !2648
  %54 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12641, !tbaa !2648
  %data62 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 0, i32 0, !dbg !12642, !ctir !848
  store i8* %53, i8** %data62, align 8, !dbg !12643, !tbaa !11221, !ctir !53
  %55 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12644, !tbaa !2648
  %n_entries63 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %55, i32 0, i32 4, !dbg !12645, !ctir !842
  %56 = load i64, i64* %n_entries63, align 8, !dbg !12646, !tbaa !11195, !ctir !55
  %inc64 = add i64 %56, 1, !dbg !12646
  store i64 %inc64, i64* %n_entries63, align 8, !dbg !12646, !tbaa !11195, !ctir !55
  %57 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12647, !tbaa !2648
  %n_buckets_used65 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %57, i32 0, i32 3, !dbg !12648, !ctir !842
  %58 = load i64, i64* %n_buckets_used65, align 8, !dbg !12649, !tbaa !11188, !ctir !55
  %inc66 = add i64 %58, 1, !dbg !12649
  store i64 %inc66, i64* %n_buckets_used65, align 8, !dbg !12649, !tbaa !11188, !ctir !55
  store i32 1, i32* %retval, align 4, !dbg !12650
  br label %return, !dbg !12650

return:                                           ; preds = %if.end61, %if.end57, %if.then56, %if.then41, %if.then37, %if.end5
  %59 = load i32, i32* %retval, align 4, !dbg !12651
  ret i32 %59, !dbg !12651
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @hash_find_entry(%struct.hash_table* %table, i8* %entry1, %struct.hash_entry** %bucket_head, i1 zeroext %delete) #4 !dbg !12652 !ctir !962 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket_head.addr = alloca %struct.hash_entry**, align 8
  %delete.addr = alloca i8, align 1
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !847
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !847
  %data7 = alloca i8*, align 8, !ctir !53
  %next12 = alloca %struct.hash_entry*, align 8, !ctir !847
  %data29 = alloca i8*, align 8, !ctir !53
  %next34 = alloca %struct.hash_entry*, align 8, !ctir !847
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12653, metadata !DIExpression()), !dbg !12654
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !12655, metadata !DIExpression()), !dbg !12656
  store %struct.hash_entry** %bucket_head, %struct.hash_entry*** %bucket_head.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.hash_entry*** %bucket_head.addr, metadata !12657, metadata !DIExpression()), !dbg !12658
  %frombool = zext i1 %delete to i8
  store i8 %frombool, i8* %delete.addr, align 1, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %delete.addr, metadata !12659, metadata !DIExpression()), !dbg !12660
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12661, metadata !DIExpression()), !dbg !12662
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12663, !tbaa !2648
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !12664, !tbaa !2648
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !12665
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !12662, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12666, metadata !DIExpression()), !dbg !12667
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12668, !tbaa !2648
  %3 = load %struct.hash_entry**, %struct.hash_entry*** %bucket_head.addr, align 8, !dbg !12669, !tbaa !2648
  store %struct.hash_entry* %2, %struct.hash_entry** %3, align 8, !dbg !12670, !tbaa !2648, !ctir !847
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12671, !tbaa !2648
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %4, i32 0, i32 0, !dbg !12673, !ctir !848
  %5 = load i8*, i8** %data, align 8, !dbg !12673, !tbaa !11221, !ctir !53
  %cmp = icmp eq i8* %5, null, !dbg !12674
  br i1 %cmp, label %if.then, label %if.end, !dbg !12675

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !12676
  br label %return, !dbg !12676

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %entry.addr, align 8, !dbg !12677, !tbaa !2648
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12679, !tbaa !2648
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !12680, !ctir !848
  %8 = load i8*, i8** %data2, align 8, !dbg !12680, !tbaa !11221, !ctir !53
  %cmp3 = icmp eq i8* %6, %8, !dbg !12681
  br i1 %cmp3, label %if.then6, label %lor.lhs.false, !dbg !12682

lor.lhs.false:                                    ; preds = %if.end
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12683, !tbaa !2648
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 7, !dbg !12684, !ctir !842
  %10 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !12684, !tbaa !11383, !ctir !874
  %11 = load i8*, i8** %entry.addr, align 8, !dbg !12685, !tbaa !2648
  %12 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12686, !tbaa !2648
  %data4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !12687, !ctir !848
  %13 = load i8*, i8** %data4, align 8, !dbg !12687, !tbaa !11221, !ctir !53
  %call5 = call zeroext i1 %10(i8* %11, i8* %13), !dbg !12683
  br i1 %call5, label %if.then6, label %if.end17, !dbg !12688

if.then6:                                         ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata i8** %data7, metadata !12689, metadata !DIExpression()), !dbg !12691
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12692, !tbaa !2648
  %data8 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !12693, !ctir !848
  %15 = load i8*, i8** %data8, align 8, !dbg !12693, !tbaa !11221, !ctir !53
  store i8* %15, i8** %data7, align 8, !dbg !12691, !tbaa !2648
  %16 = load i8, i8* %delete.addr, align 1, !dbg !12694, !tbaa !2742
  %tobool = trunc i8 %16 to i1, !dbg !12694
  br i1 %tobool, label %if.then9, label %if.end16, !dbg !12696

if.then9:                                         ; preds = %if.then6
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12697, !tbaa !2648
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !12700, !ctir !848
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12700, !tbaa !11233, !ctir !847
  %tobool10 = icmp ne %struct.hash_entry* %18, null, !dbg !12697
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !12701

if.then11:                                        ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next12, metadata !12702, metadata !DIExpression()), !dbg !12704
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12705, !tbaa !2648
  %next13 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 0, i32 1, !dbg !12706, !ctir !848
  %20 = load %struct.hash_entry*, %struct.hash_entry** %next13, align 8, !dbg !12706, !tbaa !11233, !ctir !847
  store %struct.hash_entry* %20, %struct.hash_entry** %next12, align 8, !dbg !12704, !tbaa !2648
  %21 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12707, !tbaa !2648
  %22 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !12708, !tbaa !2648
  %23 = bitcast %struct.hash_entry* %21 to i8*, !dbg !12709
  %24 = bitcast %struct.hash_entry* %22 to i8*, !dbg !12709
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false), !dbg !12709, !tbaa.struct !12710
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12711, !tbaa !2648
  %26 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !12712, !tbaa !2648
  call void @free_entry(%struct.hash_table* %25, %struct.hash_entry* %26), !dbg !12713
  br label %if.end15, !dbg !12714

if.else:                                          ; preds = %if.then9
  %27 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12715, !tbaa !2648
  %data14 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %27, i32 0, i32 0, !dbg !12717, !ctir !848
  store i8* null, i8** %data14, align 8, !dbg !12718, !tbaa !11221, !ctir !53
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then11
  br label %if.end16, !dbg !12719

if.end16:                                         ; preds = %if.end15, %if.then6
  %28 = load i8*, i8** %data7, align 8, !dbg !12720, !tbaa !2648
  store i8* %28, i8** %retval, align 8, !dbg !12721
  br label %return, !dbg !12721

if.end17:                                         ; preds = %lor.lhs.false
  %29 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12722, !tbaa !2648
  store %struct.hash_entry* %29, %struct.hash_entry** %cursor, align 8, !dbg !12724, !tbaa !2648
  br label %for.cond, !dbg !12725

for.cond:                                         ; preds = %for.inc, %if.end17
  %30 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12726, !tbaa !2648
  %next18 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %30, i32 0, i32 1, !dbg !12728, !ctir !848
  %31 = load %struct.hash_entry*, %struct.hash_entry** %next18, align 8, !dbg !12728, !tbaa !11233, !ctir !847
  %tobool19 = icmp ne %struct.hash_entry* %31, null, !dbg !12729
  br i1 %tobool19, label %for.body, label %for.end, !dbg !12729

for.body:                                         ; preds = %for.cond
  %32 = load i8*, i8** %entry.addr, align 8, !dbg !12730, !tbaa !2648
  %33 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12733, !tbaa !2648
  %next20 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 0, i32 1, !dbg !12734, !ctir !848
  %34 = load %struct.hash_entry*, %struct.hash_entry** %next20, align 8, !dbg !12734, !tbaa !11233, !ctir !847
  %data21 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %34, i32 0, i32 0, !dbg !12735, !ctir !848
  %35 = load i8*, i8** %data21, align 8, !dbg !12735, !tbaa !11221, !ctir !53
  %cmp22 = icmp eq i8* %32, %35, !dbg !12736
  br i1 %cmp22, label %if.then28, label %lor.lhs.false23, !dbg !12737

lor.lhs.false23:                                  ; preds = %for.body
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12738, !tbaa !2648
  %comparator24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %36, i32 0, i32 7, !dbg !12739, !ctir !842
  %37 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator24, align 8, !dbg !12739, !tbaa !11383, !ctir !874
  %38 = load i8*, i8** %entry.addr, align 8, !dbg !12740, !tbaa !2648
  %39 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12741, !tbaa !2648
  %next25 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %39, i32 0, i32 1, !dbg !12742, !ctir !848
  %40 = load %struct.hash_entry*, %struct.hash_entry** %next25, align 8, !dbg !12742, !tbaa !11233, !ctir !847
  %data26 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %40, i32 0, i32 0, !dbg !12743, !ctir !848
  %41 = load i8*, i8** %data26, align 8, !dbg !12743, !tbaa !11221, !ctir !53
  %call27 = call zeroext i1 %37(i8* %38, i8* %41), !dbg !12738
  br i1 %call27, label %if.then28, label %if.end39, !dbg !12744

if.then28:                                        ; preds = %lor.lhs.false23, %for.body
  call void @llvm.dbg.declare(metadata i8** %data29, metadata !12745, metadata !DIExpression()), !dbg !12747
  %42 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12748, !tbaa !2648
  %next30 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %42, i32 0, i32 1, !dbg !12749, !ctir !848
  %43 = load %struct.hash_entry*, %struct.hash_entry** %next30, align 8, !dbg !12749, !tbaa !11233, !ctir !847
  %data31 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 0, !dbg !12750, !ctir !848
  %44 = load i8*, i8** %data31, align 8, !dbg !12750, !tbaa !11221, !ctir !53
  store i8* %44, i8** %data29, align 8, !dbg !12747, !tbaa !2648
  %45 = load i8, i8* %delete.addr, align 1, !dbg !12751, !tbaa !2742
  %tobool32 = trunc i8 %45 to i1, !dbg !12751
  br i1 %tobool32, label %if.then33, label %if.end38, !dbg !12753

if.then33:                                        ; preds = %if.then28
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next34, metadata !12754, metadata !DIExpression()), !dbg !12756
  %46 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12757, !tbaa !2648
  %next35 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !12758, !ctir !848
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next35, align 8, !dbg !12758, !tbaa !11233, !ctir !847
  store %struct.hash_entry* %47, %struct.hash_entry** %next34, align 8, !dbg !12756, !tbaa !2648
  %48 = load %struct.hash_entry*, %struct.hash_entry** %next34, align 8, !dbg !12759, !tbaa !2648
  %next36 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 1, !dbg !12760, !ctir !848
  %49 = load %struct.hash_entry*, %struct.hash_entry** %next36, align 8, !dbg !12760, !tbaa !11233, !ctir !847
  %50 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12761, !tbaa !2648
  %next37 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %50, i32 0, i32 1, !dbg !12762, !ctir !848
  store %struct.hash_entry* %49, %struct.hash_entry** %next37, align 8, !dbg !12763, !tbaa !11233, !ctir !847
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12764, !tbaa !2648
  %52 = load %struct.hash_entry*, %struct.hash_entry** %next34, align 8, !dbg !12765, !tbaa !2648
  call void @free_entry(%struct.hash_table* %51, %struct.hash_entry* %52), !dbg !12766
  br label %if.end38, !dbg !12767

if.end38:                                         ; preds = %if.then33, %if.then28
  %53 = load i8*, i8** %data29, align 8, !dbg !12768, !tbaa !2648
  store i8* %53, i8** %retval, align 8, !dbg !12769
  br label %return, !dbg !12769

if.end39:                                         ; preds = %lor.lhs.false23
  br label %for.inc, !dbg !12770

for.inc:                                          ; preds = %if.end39
  %54 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12771, !tbaa !2648
  %next40 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 0, i32 1, !dbg !12772, !ctir !848
  %55 = load %struct.hash_entry*, %struct.hash_entry** %next40, align 8, !dbg !12772, !tbaa !11233, !ctir !847
  store %struct.hash_entry* %55, %struct.hash_entry** %cursor, align 8, !dbg !12773, !tbaa !2648
  br label %for.cond, !dbg !12774, !llvm.loop !12775

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !12777
  br label %return, !dbg !12777

return:                                           ; preds = %for.end, %if.end38, %if.end16, %if.then
  %56 = load i8*, i8** %retval, align 8, !dbg !12778
  ret i8* %56, !dbg !12778
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_insert(%struct.hash_table* %table, i8* %entry1) #4 !dbg !12779 !ctir !946 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %matched_ent = alloca i8*, align 8, !ctir !515
  %err = alloca i32, align 4, !ctir !7
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12780, metadata !DIExpression()), !dbg !12781
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !12782, metadata !DIExpression()), !dbg !12783
  call void @llvm.dbg.declare(metadata i8** %matched_ent, metadata !12784, metadata !DIExpression()), !dbg !12785
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12786, metadata !DIExpression()), !dbg !12787
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12788, !tbaa !2648
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !12789, !tbaa !2648
  %call = call i32 @hash_insert_if_absent(%struct.hash_table* %0, i8* %1, i8** %matched_ent), !dbg !12790
  store i32 %call, i32* %err, align 4, !dbg !12787, !tbaa !2635
  %2 = load i32, i32* %err, align 4, !dbg !12791, !tbaa !2635
  %cmp = icmp eq i32 %2, -1, !dbg !12792
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !12791

cond.true:                                        ; preds = %entry
  br label %cond.end5, !dbg !12791

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %err, align 4, !dbg !12793, !tbaa !2635
  %cmp2 = icmp eq i32 %3, 0, !dbg !12794
  br i1 %cmp2, label %cond.true3, label %cond.false4, !dbg !12793

cond.true3:                                       ; preds = %cond.false
  %4 = load i8*, i8** %matched_ent, align 8, !dbg !12795, !tbaa !2648
  br label %cond.end, !dbg !12793

cond.false4:                                      ; preds = %cond.false
  %5 = load i8*, i8** %entry.addr, align 8, !dbg !12796, !tbaa !2648
  br label %cond.end, !dbg !12793

cond.end:                                         ; preds = %cond.false4, %cond.true3
  %cond = phi i8* [ %4, %cond.true3 ], [ %5, %cond.false4 ], !dbg !12793
  br label %cond.end5, !dbg !12791

cond.end5:                                        ; preds = %cond.end, %cond.true
  %cond6 = phi i8* [ null, %cond.true ], [ %cond, %cond.end ], !dbg !12791
  ret i8* %cond6, !dbg !12797
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_delete(%struct.hash_table* %table, i8* %entry1) #4 !dbg !12798 !ctir !946 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %data = alloca i8*, align 8, !ctir !53
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !847
  %tuning21 = alloca %struct.hash_tuning*, align 8, !ctir !859
  %candidate = alloca i64, align 8, !ctir !55
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !847
  %next = alloca %struct.hash_entry*, align 8, !ctir !847
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12799, metadata !DIExpression()), !dbg !12800
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !12801, metadata !DIExpression()), !dbg !12802
  call void @llvm.dbg.declare(metadata i8** %data, metadata !12803, metadata !DIExpression()), !dbg !12804
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12805, metadata !DIExpression()), !dbg !12806
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12807, !tbaa !2648
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !12808, !tbaa !2648
  %call = call i8* @hash_find_entry(%struct.hash_table* %0, i8* %1, %struct.hash_entry** %bucket, i1 zeroext true), !dbg !12809
  store i8* %call, i8** %data, align 8, !dbg !12810, !tbaa !2648
  %2 = load i8*, i8** %data, align 8, !dbg !12811, !tbaa !2648
  %tobool = icmp ne i8* %2, null, !dbg !12811
  br i1 %tobool, label %if.end, label %if.then, !dbg !12813

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !12814
  br label %return, !dbg !12814

if.end:                                           ; preds = %entry
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12815, !tbaa !2648
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 4, !dbg !12816, !ctir !842
  %4 = load i64, i64* %n_entries, align 8, !dbg !12817, !tbaa !11195, !ctir !55
  %dec = add i64 %4, -1, !dbg !12817
  store i64 %dec, i64* %n_entries, align 8, !dbg !12817, !tbaa !11195, !ctir !55
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12818, !tbaa !2648
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12820, !ctir !848
  %6 = load i8*, i8** %data2, align 8, !dbg !12820, !tbaa !11221, !ctir !53
  %tobool3 = icmp ne i8* %6, null, !dbg !12818
  br i1 %tobool3, label %if.end42, label %if.then4, !dbg !12821

if.then4:                                         ; preds = %if.end
  %7 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12822, !tbaa !2648
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %7, i32 0, i32 3, !dbg !12824, !ctir !842
  %8 = load i64, i64* %n_buckets_used, align 8, !dbg !12825, !tbaa !11188, !ctir !55
  %dec5 = add i64 %8, -1, !dbg !12825
  store i64 %dec5, i64* %n_buckets_used, align 8, !dbg !12825, !tbaa !11188, !ctir !55
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12826, !tbaa !2648
  %n_buckets_used6 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 3, !dbg !12828, !ctir !842
  %10 = load i64, i64* %n_buckets_used6, align 8, !dbg !12828, !tbaa !11188, !ctir !55
  %conv = uitofp i64 %10 to float, !dbg !12826
  %11 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12829, !tbaa !2648
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 5, !dbg !12830, !ctir !842
  %12 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12830, !tbaa !11725, !ctir !859
  %shrink_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %12, i32 0, i32 0, !dbg !12831, !ctir !860
  %13 = load float, float* %shrink_threshold, align 4, !dbg !12831, !tbaa !11855, !ctir !865
  %14 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12832, !tbaa !2648
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 2, !dbg !12833, !ctir !842
  %15 = load i64, i64* %n_buckets, align 8, !dbg !12833, !tbaa !11180, !ctir !55
  %conv7 = uitofp i64 %15 to float, !dbg !12832
  %mul = fmul float %13, %conv7, !dbg !12834
  %cmp = fcmp olt float %conv, %mul, !dbg !12835
  br i1 %cmp, label %if.then9, label %if.end41, !dbg !12836

if.then9:                                         ; preds = %if.then4
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12837, !tbaa !2648
  %call10 = call zeroext i1 @check_tuning(%struct.hash_table* %16), !dbg !12839
  %17 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12840, !tbaa !2648
  %n_buckets_used11 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 3, !dbg !12842, !ctir !842
  %18 = load i64, i64* %n_buckets_used11, align 8, !dbg !12842, !tbaa !11188, !ctir !55
  %conv12 = uitofp i64 %18 to float, !dbg !12840
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12843, !tbaa !2648
  %tuning13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 5, !dbg !12844, !ctir !842
  %20 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning13, align 8, !dbg !12844, !tbaa !11725, !ctir !859
  %shrink_threshold14 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %20, i32 0, i32 0, !dbg !12845, !ctir !860
  %21 = load float, float* %shrink_threshold14, align 4, !dbg !12845, !tbaa !11855, !ctir !865
  %22 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12846, !tbaa !2648
  %n_buckets15 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %22, i32 0, i32 2, !dbg !12847, !ctir !842
  %23 = load i64, i64* %n_buckets15, align 8, !dbg !12847, !tbaa !11180, !ctir !55
  %conv16 = uitofp i64 %23 to float, !dbg !12846
  %mul17 = fmul float %21, %conv16, !dbg !12848
  %cmp18 = fcmp olt float %conv12, %mul17, !dbg !12849
  br i1 %cmp18, label %if.then20, label %if.end40, !dbg !12850

if.then20:                                        ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning21, metadata !12851, metadata !DIExpression()), !dbg !12853
  %24 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12854, !tbaa !2648
  %tuning22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %24, i32 0, i32 5, !dbg !12855, !ctir !842
  %25 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12855, !tbaa !11725, !ctir !859
  store %struct.hash_tuning* %25, %struct.hash_tuning** %tuning21, align 8, !dbg !12853, !tbaa !2648
  call void @llvm.dbg.declare(metadata i64* %candidate, metadata !12856, metadata !DIExpression()), !dbg !12857
  %26 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !12858, !tbaa !2648
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %26, i32 0, i32 4, !dbg !12859, !ctir !860
  %27 = load i8, i8* %is_n_buckets, align 4, !dbg !12859, !tbaa !11893
  %tobool23 = trunc i8 %27 to i1, !dbg !12859, !ctir !142
  br i1 %tobool23, label %cond.true, label %cond.false, !dbg !12858

cond.true:                                        ; preds = %if.then20
  %28 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12860, !tbaa !2648
  %n_buckets25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 2, !dbg !12861, !ctir !842
  %29 = load i64, i64* %n_buckets25, align 8, !dbg !12861, !tbaa !11180, !ctir !55
  %conv26 = uitofp i64 %29 to float, !dbg !12860
  %30 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !12862, !tbaa !2648
  %shrink_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %30, i32 0, i32 1, !dbg !12863, !ctir !860
  %31 = load float, float* %shrink_factor, align 4, !dbg !12863, !tbaa !11864, !ctir !865
  %mul27 = fmul float %conv26, %31, !dbg !12864
  br label %cond.end, !dbg !12858

cond.false:                                       ; preds = %if.then20
  %32 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12865, !tbaa !2648
  %n_buckets28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 2, !dbg !12866, !ctir !842
  %33 = load i64, i64* %n_buckets28, align 8, !dbg !12866, !tbaa !11180, !ctir !55
  %conv29 = uitofp i64 %33 to float, !dbg !12865
  %34 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !12867, !tbaa !2648
  %shrink_factor30 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %34, i32 0, i32 1, !dbg !12868, !ctir !860
  %35 = load float, float* %shrink_factor30, align 4, !dbg !12868, !tbaa !11864, !ctir !865
  %mul31 = fmul float %conv29, %35, !dbg !12869
  %36 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !12870, !tbaa !2648
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %36, i32 0, i32 2, !dbg !12871, !ctir !860
  %37 = load float, float* %growth_threshold, align 4, !dbg !12871, !tbaa !11836, !ctir !865
  %mul32 = fmul float %mul31, %37, !dbg !12872
  br label %cond.end, !dbg !12858

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul27, %cond.true ], [ %mul32, %cond.false ], !dbg !12858
  %conv33 = fptoui float %cond to i64, !dbg !12873
  store i64 %conv33, i64* %candidate, align 8, !dbg !12857, !tbaa !3288
  %38 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12874, !tbaa !2648
  %39 = load i64, i64* %candidate, align 8, !dbg !12876, !tbaa !3288
  %call34 = call zeroext i1 @hash_rehash(%struct.hash_table* %38, i64 %39), !dbg !12877
  br i1 %call34, label %if.end39, label %if.then35, !dbg !12878

if.then35:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12879, metadata !DIExpression()), !dbg !12881
  %40 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12882, !tbaa !2648
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %40, i32 0, i32 9, !dbg !12883, !ctir !842
  %41 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12883, !tbaa !11785, !ctir !847
  store %struct.hash_entry* %41, %struct.hash_entry** %cursor, align 8, !dbg !12881, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12884, metadata !DIExpression()), !dbg !12885
  br label %while.cond, !dbg !12886

while.cond:                                       ; preds = %while.body, %if.then35
  %42 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12887, !tbaa !2648
  %tobool36 = icmp ne %struct.hash_entry* %42, null, !dbg !12886
  br i1 %tobool36, label %while.body, label %while.end, !dbg !12886

while.body:                                       ; preds = %while.cond
  %43 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12888, !tbaa !2648
  %next37 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 1, !dbg !12890, !ctir !848
  %44 = load %struct.hash_entry*, %struct.hash_entry** %next37, align 8, !dbg !12890, !tbaa !11233, !ctir !847
  store %struct.hash_entry* %44, %struct.hash_entry** %next, align 8, !dbg !12891, !tbaa !2648
  %45 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12892, !tbaa !2648
  %46 = bitcast %struct.hash_entry* %45 to i8*, !dbg !12892
  call void @free(i8* %46) #9, !dbg !12893
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12894, !tbaa !2648
  store %struct.hash_entry* %47, %struct.hash_entry** %cursor, align 8, !dbg !12895, !tbaa !2648
  br label %while.cond, !dbg !12886, !llvm.loop !12896

while.end:                                        ; preds = %while.cond
  %48 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12898, !tbaa !2648
  %free_entry_list38 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %48, i32 0, i32 9, !dbg !12899, !ctir !842
  store %struct.hash_entry* null, %struct.hash_entry** %free_entry_list38, align 8, !dbg !12900, !tbaa !11785, !ctir !847
  br label %if.end39, !dbg !12901

if.end39:                                         ; preds = %while.end, %cond.end
  br label %if.end40, !dbg !12902

if.end40:                                         ; preds = %if.end39, %if.then9
  br label %if.end41, !dbg !12903

if.end41:                                         ; preds = %if.end40, %if.then4
  br label %if.end42, !dbg !12904

if.end42:                                         ; preds = %if.end41, %if.end
  %49 = load i8*, i8** %data, align 8, !dbg !12905, !tbaa !2648
  store i8* %49, i8** %retval, align 8, !dbg !12906
  br label %return, !dbg !12906

return:                                           ; preds = %if.end42, %if.then
  %50 = load i8*, i8** %retval, align 8, !dbg !12907
  ret i8* %50, !dbg !12907
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @triple_hash(i8* %x, i64 %table_size) #10 !dbg !12908 !ctir !635 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.F_triple*, align 8, !ctir !1706
  %tmp = alloca i64, align 8, !ctir !55
  store i8* %x, i8** %x.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !12910, metadata !DIExpression()), !dbg !12911
  store i64 %table_size, i64* %table_size.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !12912, metadata !DIExpression()), !dbg !12913
  call void @llvm.dbg.declare(metadata %struct.F_triple** %p, metadata !12914, metadata !DIExpression()), !dbg !12915
  %0 = load i8*, i8** %x.addr, align 8, !dbg !12916, !tbaa !2648
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !12916
  store %struct.F_triple* %1, %struct.F_triple** %p, align 8, !dbg !12915, !tbaa !2648
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !12917, metadata !DIExpression()), !dbg !12918
  %2 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !12919, !tbaa !2648
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 0, !dbg !12920, !ctir !1707
  %3 = load i8*, i8** %name, align 8, !dbg !12920, !tbaa !10777, !ctir !9
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !12921, !tbaa !3288
  %call = call i64 @hash_pjw(i8* %3, i64 %4) #14, !dbg !12922
  store i64 %call, i64* %tmp, align 8, !dbg !12918, !tbaa !3288
  %5 = load i64, i64* %tmp, align 8, !dbg !12923, !tbaa !3288
  %6 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !12924, !tbaa !2648
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !12925, !ctir !1707
  %7 = load i64, i64* %st_ino, align 8, !dbg !12925, !tbaa !10784, !ctir !441
  %xor = xor i64 %5, %7, !dbg !12926
  %8 = load i64, i64* %table_size.addr, align 8, !dbg !12927, !tbaa !3288
  %rem = urem i64 %xor, %8, !dbg !12928
  ret i64 %rem, !dbg !12929
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @triple_hash_no_name(i8* %x, i64 %table_size) #10 !dbg !12930 !ctir !635 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.F_triple*, align 8, !ctir !1706
  store i8* %x, i8** %x.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !12931, metadata !DIExpression()), !dbg !12932
  store i64 %table_size, i64* %table_size.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !12933, metadata !DIExpression()), !dbg !12934
  call void @llvm.dbg.declare(metadata %struct.F_triple** %p, metadata !12935, metadata !DIExpression()), !dbg !12936
  %0 = load i8*, i8** %x.addr, align 8, !dbg !12937, !tbaa !2648
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !12937
  store %struct.F_triple* %1, %struct.F_triple** %p, align 8, !dbg !12936, !tbaa !2648
  %2 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !12938, !tbaa !2648
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 1, !dbg !12939, !ctir !1707
  %3 = load i64, i64* %st_ino, align 8, !dbg !12939, !tbaa !10784, !ctir !441
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !12940, !tbaa !3288
  %rem = urem i64 %3, %4, !dbg !12941
  ret i64 %rem, !dbg !12942
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @triple_compare(i8* %x, i8* %y) #4 !dbg !12943 !ctir !637 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.F_triple*, align 8, !ctir !1706
  %b = alloca %struct.F_triple*, align 8, !ctir !1706
  store i8* %x, i8** %x.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !12944, metadata !DIExpression()), !dbg !12945
  store i8* %y, i8** %y.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !12946, metadata !DIExpression()), !dbg !12947
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !12948, metadata !DIExpression()), !dbg !12949
  %0 = load i8*, i8** %x.addr, align 8, !dbg !12950, !tbaa !2648
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !12950
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !12949, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.F_triple** %b, metadata !12951, metadata !DIExpression()), !dbg !12952
  %2 = load i8*, i8** %y.addr, align 8, !dbg !12953, !tbaa !2648
  %3 = bitcast i8* %2 to %struct.F_triple*, !dbg !12953
  store %struct.F_triple* %3, %struct.F_triple** %b, align 8, !dbg !12952, !tbaa !2648
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12954, !tbaa !2648
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %4, i32 0, i32 1, !dbg !12954, !ctir !1707
  %5 = load i64, i64* %st_ino, align 8, !dbg !12954, !tbaa !10784, !ctir !441
  %6 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12954, !tbaa !2648
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !12954, !ctir !1707
  %7 = load i64, i64* %st_ino1, align 8, !dbg !12954, !tbaa !10784, !ctir !441
  %cmp = icmp eq i64 %5, %7, !dbg !12954
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !12954

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12954, !tbaa !2648
  %st_dev = getelementptr inbounds %struct.F_triple, %struct.F_triple* %8, i32 0, i32 2, !dbg !12954, !ctir !1707
  %9 = load i64, i64* %st_dev, align 8, !dbg !12954, !tbaa !10790, !ctir !443
  %10 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12954, !tbaa !2648
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %10, i32 0, i32 2, !dbg !12954, !ctir !1707
  %11 = load i64, i64* %st_dev2, align 8, !dbg !12954, !tbaa !10790, !ctir !443
  %cmp3 = icmp eq i64 %9, %11, !dbg !12954
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !12955

land.rhs:                                         ; preds = %land.lhs.true
  %12 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12956, !tbaa !2648
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %12, i32 0, i32 0, !dbg !12957, !ctir !1707
  %13 = load i8*, i8** %name, align 8, !dbg !12957, !tbaa !10777, !ctir !9
  %14 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12958, !tbaa !2648
  %name4 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %14, i32 0, i32 0, !dbg !12959, !ctir !1707
  %15 = load i8*, i8** %name4, align 8, !dbg !12959, !tbaa !10777, !ctir !9
  %call = call zeroext i1 @same_name(i8* %13, i8* %15), !dbg !12960
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %16 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %call, %land.rhs ], !dbg !12961
  %17 = zext i1 %16 to i64, !dbg !12962
  %cond = select i1 %16, i32 1, i32 0, !dbg !12962
  %tobool = icmp ne i32 %cond, 0, !dbg !12962
  ret i1 %tobool, !dbg !12963
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @triple_compare_ino_str(i8* %x, i8* %y) #10 !dbg !12964 !ctir !637 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.F_triple*, align 8, !ctir !1706
  %b = alloca %struct.F_triple*, align 8, !ctir !1706
  store i8* %x, i8** %x.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !12965, metadata !DIExpression()), !dbg !12966
  store i8* %y, i8** %y.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !12967, metadata !DIExpression()), !dbg !12968
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !12969, metadata !DIExpression()), !dbg !12970
  %0 = load i8*, i8** %x.addr, align 8, !dbg !12971, !tbaa !2648
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !12971
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !12970, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.F_triple** %b, metadata !12972, metadata !DIExpression()), !dbg !12973
  %2 = load i8*, i8** %y.addr, align 8, !dbg !12974, !tbaa !2648
  %3 = bitcast i8* %2 to %struct.F_triple*, !dbg !12974
  store %struct.F_triple* %3, %struct.F_triple** %b, align 8, !dbg !12973, !tbaa !2648
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12975, !tbaa !2648
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %4, i32 0, i32 1, !dbg !12975, !ctir !1707
  %5 = load i64, i64* %st_ino, align 8, !dbg !12975, !tbaa !10784, !ctir !441
  %6 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12975, !tbaa !2648
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !12975, !ctir !1707
  %7 = load i64, i64* %st_ino1, align 8, !dbg !12975, !tbaa !10784, !ctir !441
  %cmp = icmp eq i64 %5, %7, !dbg !12975
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !12975

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12975, !tbaa !2648
  %st_dev = getelementptr inbounds %struct.F_triple, %struct.F_triple* %8, i32 0, i32 2, !dbg !12975, !ctir !1707
  %9 = load i64, i64* %st_dev, align 8, !dbg !12975, !tbaa !10790, !ctir !443
  %10 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12975, !tbaa !2648
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %10, i32 0, i32 2, !dbg !12975, !ctir !1707
  %11 = load i64, i64* %st_dev2, align 8, !dbg !12975, !tbaa !10790, !ctir !443
  %cmp3 = icmp eq i64 %9, %11, !dbg !12975
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !12976

land.rhs:                                         ; preds = %land.lhs.true
  %12 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12977, !tbaa !2648
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %12, i32 0, i32 0, !dbg !12977, !ctir !1707
  %13 = load i8*, i8** %name, align 8, !dbg !12977, !tbaa !10777, !ctir !9
  %14 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12977, !tbaa !2648
  %name4 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %14, i32 0, i32 0, !dbg !12977, !ctir !1707
  %15 = load i8*, i8** %name4, align 8, !dbg !12977, !tbaa !10777, !ctir !9
  %call = call i32 @strcmp(i8* %13, i8* %15) #14, !dbg !12977
  %cmp5 = icmp eq i32 %call, 0, !dbg !12977
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %16 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp5, %land.rhs ], !dbg !12978
  %17 = zext i1 %16 to i64, !dbg !12979
  %cond = select i1 %16, i32 1, i32 0, !dbg !12979
  %tobool = icmp ne i32 %cond, 0, !dbg !12979
  ret i1 %tobool, !dbg !12980
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @triple_free(i8* %x) #4 !dbg !12981 !ctir !633 {
entry:
  %x.addr = alloca i8*, align 8
  %a = alloca %struct.F_triple*, align 8, !ctir !1713
  store i8* %x, i8** %x.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !12982, metadata !DIExpression()), !dbg !12983
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !12984, metadata !DIExpression()), !dbg !12985
  %0 = load i8*, i8** %x.addr, align 8, !dbg !12986, !tbaa !2648
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !12986
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !12985, !tbaa !2648
  %2 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12987, !tbaa !2648
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 0, !dbg !12988, !ctir !1708
  %3 = load i8*, i8** %name, align 8, !dbg !12988, !tbaa !10777, !ctir !9
  call void @free(i8* %3) #9, !dbg !12989
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12990, !tbaa !2648
  %5 = bitcast %struct.F_triple* %4 to i8*, !dbg !12990
  call void @free(i8* %5) #9, !dbg !12991
  ret void, !dbg !12992
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @mkancesdirs(i8* %file, %struct.savewd* %wd, i32 (i8*, i8*, i8*)* %make_dir, i8* %make_dir_arg) #4 !dbg !12993 !ctir !1728 {
entry:
  %retval = alloca i64, align 8
  %file.addr = alloca i8*, align 8
  %wd.addr = alloca %struct.savewd*, align 8
  %make_dir.addr = alloca i32 (i8*, i8*, i8*)*, align 8
  %make_dir_arg.addr = alloca i8*, align 8
  %sep = alloca i8*, align 8, !ctir !9
  %component = alloca i8*, align 8, !ctir !9
  %p = alloca i8*, align 8, !ctir !9
  %c = alloca i8, align 1, !ctir !10
  %made_dir = alloca i8, align 1, !ctir !142
  %make_dir_errno = alloca i32, align 4, !ctir !7
  %savewd_chdir_options = alloca i32, align 4, !ctir !7
  %chdir_result = alloca i32, align 4, !ctir !7
  store i8* %file, i8** %file.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !12995, metadata !DIExpression()), !dbg !12996
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !12997, metadata !DIExpression()), !dbg !12998
  store i32 (i8*, i8*, i8*)* %make_dir, i32 (i8*, i8*, i8*)** %make_dir.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i8*)** %make_dir.addr, metadata !12999, metadata !DIExpression()), !dbg !13000
  store i8* %make_dir_arg, i8** %make_dir_arg.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %make_dir_arg.addr, metadata !13001, metadata !DIExpression()), !dbg !13002
  call void @llvm.dbg.declare(metadata i8** %sep, metadata !13003, metadata !DIExpression()), !dbg !13004
  store i8* null, i8** %sep, align 8, !dbg !13004, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %component, metadata !13005, metadata !DIExpression()), !dbg !13006
  %0 = load i8*, i8** %file.addr, align 8, !dbg !13007, !tbaa !2648
  store i8* %0, i8** %component, align 8, !dbg !13006, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %p, metadata !13008, metadata !DIExpression()), !dbg !13009
  %1 = load i8*, i8** %file.addr, align 8, !dbg !13010, !tbaa !2648
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 0, !dbg !13011
  store i8* %add.ptr, i8** %p, align 8, !dbg !13009, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8* %c, metadata !13012, metadata !DIExpression()), !dbg !13013
  call void @llvm.dbg.declare(metadata i8* %made_dir, metadata !13014, metadata !DIExpression()), !dbg !13015
  store i8 0, i8* %made_dir, align 1, !dbg !13015, !tbaa !2742
  br label %while.cond, !dbg !13016

while.cond:                                       ; preds = %if.end69, %entry
  %2 = load i8*, i8** %p, align 8, !dbg !13017, !tbaa !2648
  %incdec.ptr = getelementptr inbounds i8, i8* %2, i32 1, !dbg !13017
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !13017, !tbaa !2648
  %3 = load i8, i8* %2, align 1, !dbg !13018, !tbaa !3295, !ctir !10
  store i8 %3, i8* %c, align 1, !dbg !13019, !tbaa !3295
  %tobool = icmp ne i8 %3, 0, !dbg !13016
  br i1 %tobool, label %while.body, label %while.end, !dbg !13016

while.body:                                       ; preds = %while.cond
  %4 = load i8*, i8** %p, align 8, !dbg !13020, !tbaa !2648
  %5 = load i8, i8* %4, align 1, !dbg !13020, !tbaa !3295, !ctir !10
  %conv = sext i8 %5 to i32, !dbg !13020
  %cmp = icmp eq i32 %conv, 47, !dbg !13020
  br i1 %cmp, label %if.then, label %if.else, !dbg !13022

if.then:                                          ; preds = %while.body
  %6 = load i8, i8* %c, align 1, !dbg !13023, !tbaa !3295
  %conv2 = sext i8 %6 to i32, !dbg !13023
  %cmp3 = icmp eq i32 %conv2, 47, !dbg !13023
  br i1 %cmp3, label %if.end, label %if.then5, !dbg !13026

if.then5:                                         ; preds = %if.then
  %7 = load i8*, i8** %p, align 8, !dbg !13027, !tbaa !2648
  store i8* %7, i8** %sep, align 8, !dbg !13028, !tbaa !2648
  br label %if.end, !dbg !13029

if.end:                                           ; preds = %if.then5, %if.then
  br label %if.end69, !dbg !13030

if.else:                                          ; preds = %while.body
  %8 = load i8, i8* %c, align 1, !dbg !13031, !tbaa !3295
  %conv6 = sext i8 %8 to i32, !dbg !13031
  %cmp7 = icmp eq i32 %conv6, 47, !dbg !13031
  br i1 %cmp7, label %land.lhs.true, label %if.end68, !dbg !13033

land.lhs.true:                                    ; preds = %if.else
  %9 = load i8*, i8** %p, align 8, !dbg !13034, !tbaa !2648
  %10 = load i8, i8* %9, align 1, !dbg !13035, !tbaa !3295, !ctir !10
  %conv9 = sext i8 %10 to i32, !dbg !13035
  %tobool10 = icmp ne i32 %conv9, 0, !dbg !13035
  br i1 %tobool10, label %land.lhs.true11, label %if.end68, !dbg !13036

land.lhs.true11:                                  ; preds = %land.lhs.true
  %11 = load i8*, i8** %sep, align 8, !dbg !13037, !tbaa !2648
  %tobool12 = icmp ne i8* %11, null, !dbg !13037
  br i1 %tobool12, label %if.then13, label %if.end68, !dbg !13038

if.then13:                                        ; preds = %land.lhs.true11
  %12 = load i8*, i8** %sep, align 8, !dbg !13039, !tbaa !2648
  %13 = load i8*, i8** %component, align 8, !dbg !13042, !tbaa !2648
  %sub.ptr.lhs.cast = ptrtoint i8* %12 to i64, !dbg !13043
  %sub.ptr.rhs.cast = ptrtoint i8* %13 to i64, !dbg !13043
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !13043
  %cmp14 = icmp eq i64 %sub.ptr.sub, 1, !dbg !13044
  br i1 %cmp14, label %land.lhs.true16, label %if.then20, !dbg !13045

land.lhs.true16:                                  ; preds = %if.then13
  %14 = load i8*, i8** %component, align 8, !dbg !13046, !tbaa !2648
  %arrayidx = getelementptr inbounds i8, i8* %14, i64 0, !dbg !13046, !ctir !9
  %15 = load i8, i8* %arrayidx, align 1, !dbg !13046, !tbaa !3295
  %conv17 = sext i8 %15 to i32, !dbg !13046
  %cmp18 = icmp eq i32 %conv17, 46, !dbg !13047
  br i1 %cmp18, label %if.end67, label %if.then20, !dbg !13048

if.then20:                                        ; preds = %land.lhs.true16, %if.then13
  call void @llvm.dbg.declare(metadata i32* %make_dir_errno, metadata !13049, metadata !DIExpression()), !dbg !13051
  store i32 0, i32* %make_dir_errno, align 4, !dbg !13051, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %savewd_chdir_options, metadata !13052, metadata !DIExpression()), !dbg !13053
  store i32 0, i32* %savewd_chdir_options, align 4, !dbg !13053, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %chdir_result, metadata !13054, metadata !DIExpression()), !dbg !13055
  %16 = load i8*, i8** %sep, align 8, !dbg !13056, !tbaa !2648
  store i8 0, i8* %16, align 1, !dbg !13057, !tbaa !3295, !ctir !10
  %17 = load i8*, i8** %sep, align 8, !dbg !13058, !tbaa !2648
  %18 = load i8*, i8** %component, align 8, !dbg !13060, !tbaa !2648
  %sub.ptr.lhs.cast21 = ptrtoint i8* %17 to i64, !dbg !13061
  %sub.ptr.rhs.cast22 = ptrtoint i8* %18 to i64, !dbg !13061
  %sub.ptr.sub23 = sub i64 %sub.ptr.lhs.cast21, %sub.ptr.rhs.cast22, !dbg !13061
  %cmp24 = icmp eq i64 %sub.ptr.sub23, 2, !dbg !13062
  br i1 %cmp24, label %land.lhs.true26, label %if.else37, !dbg !13063

land.lhs.true26:                                  ; preds = %if.then20
  %19 = load i8*, i8** %component, align 8, !dbg !13064, !tbaa !2648
  %arrayidx27 = getelementptr inbounds i8, i8* %19, i64 0, !dbg !13064, !ctir !9
  %20 = load i8, i8* %arrayidx27, align 1, !dbg !13064, !tbaa !3295
  %conv28 = sext i8 %20 to i32, !dbg !13064
  %cmp29 = icmp eq i32 %conv28, 46, !dbg !13065
  br i1 %cmp29, label %land.lhs.true31, label %if.else37, !dbg !13066

land.lhs.true31:                                  ; preds = %land.lhs.true26
  %21 = load i8*, i8** %component, align 8, !dbg !13067, !tbaa !2648
  %arrayidx32 = getelementptr inbounds i8, i8* %21, i64 1, !dbg !13067, !ctir !9
  %22 = load i8, i8* %arrayidx32, align 1, !dbg !13067, !tbaa !3295
  %conv33 = sext i8 %22 to i32, !dbg !13067
  %cmp34 = icmp eq i32 %conv33, 46, !dbg !13068
  br i1 %cmp34, label %if.then36, label %if.else37, !dbg !13069

if.then36:                                        ; preds = %land.lhs.true31
  store i8 0, i8* %made_dir, align 1, !dbg !13070, !tbaa !2742
  br label %if.end44, !dbg !13071

if.else37:                                        ; preds = %land.lhs.true31, %land.lhs.true26, %if.then20
  %23 = load i32 (i8*, i8*, i8*)*, i32 (i8*, i8*, i8*)** %make_dir.addr, align 8, !dbg !13072, !tbaa !2648
  %24 = load i8*, i8** %file.addr, align 8, !dbg !13074, !tbaa !2648
  %25 = load i8*, i8** %component, align 8, !dbg !13075, !tbaa !2648
  %26 = load i8*, i8** %make_dir_arg.addr, align 8, !dbg !13076, !tbaa !2648
  %call = call i32 %23(i8* %24, i8* %25, i8* %26), !dbg !13072
  %cmp38 = icmp slt i32 %call, 0, !dbg !13077
  br i1 %cmp38, label %if.then40, label %if.else42, !dbg !13078

if.then40:                                        ; preds = %if.else37
  %call41 = call i32* @__errno_location() #16, !dbg !13079
  %27 = load i32, i32* %call41, align 4, !dbg !13079, !tbaa !2635, !ctir !7
  store i32 %27, i32* %make_dir_errno, align 4, !dbg !13080, !tbaa !2635
  br label %if.end43, !dbg !13081

if.else42:                                        ; preds = %if.else37
  store i8 1, i8* %made_dir, align 1, !dbg !13082, !tbaa !2742
  br label %if.end43

if.end43:                                         ; preds = %if.else42, %if.then40
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.then36
  %28 = load i8, i8* %made_dir, align 1, !dbg !13083, !tbaa !2742
  %tobool45 = trunc i8 %28 to i1, !dbg !13083
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !13085

if.then46:                                        ; preds = %if.end44
  %29 = load i32, i32* %savewd_chdir_options, align 4, !dbg !13086, !tbaa !2635
  %or = or i32 %29, 1, !dbg !13086
  store i32 %or, i32* %savewd_chdir_options, align 4, !dbg !13086, !tbaa !2635
  br label %if.end47, !dbg !13087

if.end47:                                         ; preds = %if.then46, %if.end44
  %30 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !13088, !tbaa !2648
  %31 = load i8*, i8** %component, align 8, !dbg !13089, !tbaa !2648
  %32 = load i32, i32* %savewd_chdir_options, align 4, !dbg !13090, !tbaa !2635
  %call48 = call i32 @savewd_chdir(%struct.savewd* %30, i8* %31, i32 %32, i32* null), !dbg !13091
  store i32 %call48, i32* %chdir_result, align 4, !dbg !13092, !tbaa !2635
  %33 = load i32, i32* %chdir_result, align 4, !dbg !13093, !tbaa !2635
  %cmp49 = icmp ne i32 %33, -1, !dbg !13095
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !13096

if.then51:                                        ; preds = %if.end47
  %34 = load i8*, i8** %sep, align 8, !dbg !13097, !tbaa !2648
  store i8 47, i8* %34, align 1, !dbg !13098, !tbaa !3295, !ctir !10
  br label %if.end52, !dbg !13099

if.end52:                                         ; preds = %if.then51, %if.end47
  %35 = load i32, i32* %chdir_result, align 4, !dbg !13100, !tbaa !2635
  %cmp53 = icmp ne i32 %35, 0, !dbg !13102
  br i1 %cmp53, label %if.then55, label %if.end66, !dbg !13103

if.then55:                                        ; preds = %if.end52
  %36 = load i32, i32* %make_dir_errno, align 4, !dbg !13104, !tbaa !2635
  %cmp56 = icmp ne i32 %36, 0, !dbg !13107
  br i1 %cmp56, label %land.lhs.true58, label %if.end64, !dbg !13108

land.lhs.true58:                                  ; preds = %if.then55
  %call59 = call i32* @__errno_location() #16, !dbg !13109
  %37 = load i32, i32* %call59, align 4, !dbg !13109, !tbaa !2635, !ctir !7
  %cmp60 = icmp eq i32 %37, 2, !dbg !13110
  br i1 %cmp60, label %if.then62, label %if.end64, !dbg !13111

if.then62:                                        ; preds = %land.lhs.true58
  %38 = load i32, i32* %make_dir_errno, align 4, !dbg !13112, !tbaa !2635
  %call63 = call i32* @__errno_location() #16, !dbg !13113
  store i32 %38, i32* %call63, align 4, !dbg !13114, !tbaa !2635, !ctir !7
  br label %if.end64, !dbg !13113

if.end64:                                         ; preds = %if.then62, %land.lhs.true58, %if.then55
  %39 = load i32, i32* %chdir_result, align 4, !dbg !13115, !tbaa !2635
  %conv65 = sext i32 %39 to i64, !dbg !13115
  store i64 %conv65, i64* %retval, align 8, !dbg !13116
  br label %return, !dbg !13116

if.end66:                                         ; preds = %if.end52
  br label %if.end67, !dbg !13117

if.end67:                                         ; preds = %if.end66, %land.lhs.true16
  %40 = load i8*, i8** %p, align 8, !dbg !13118, !tbaa !2648
  store i8* %40, i8** %component, align 8, !dbg !13119, !tbaa !2648
  br label %if.end68, !dbg !13120

if.end68:                                         ; preds = %if.end67, %land.lhs.true11, %land.lhs.true, %if.else
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.end
  br label %while.cond, !dbg !13016, !llvm.loop !13121

while.end:                                        ; preds = %while.cond
  %41 = load i8*, i8** %component, align 8, !dbg !13123, !tbaa !2648
  %42 = load i8*, i8** %file.addr, align 8, !dbg !13124, !tbaa !2648
  %sub.ptr.lhs.cast70 = ptrtoint i8* %41 to i64, !dbg !13125
  %sub.ptr.rhs.cast71 = ptrtoint i8* %42 to i64, !dbg !13125
  %sub.ptr.sub72 = sub i64 %sub.ptr.lhs.cast70, %sub.ptr.rhs.cast71, !dbg !13125
  store i64 %sub.ptr.sub72, i64* %retval, align 8, !dbg !13126
  br label %return, !dbg !13126

return:                                           ; preds = %while.end, %if.end64
  %43 = load i64, i64* %retval, align 8, !dbg !13127
  ret i64 %43, !dbg !13127
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @make_dir_parents(i8* %dir, %struct.savewd* %wd, i32 (i8*, i8*, i8*)* %make_ancestor, i8* %options, i32 %mode, void (i8*, i8*)* %announce, i32 %mode_bits, i32 %owner, i32 %group, i1 zeroext %preserve_existing) #4 !dbg !13128 !ctir !1746 {
entry:
  %retval = alloca i1, align 1
  %dir.addr = alloca i8*, align 8
  %wd.addr = alloca %struct.savewd*, align 8
  %make_ancestor.addr = alloca i32 (i8*, i8*, i8*)*, align 8
  %options.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  %announce.addr = alloca void (i8*, i8*)*, align 8
  %mode_bits.addr = alloca i32, align 4
  %owner.addr = alloca i32, align 4
  %group.addr = alloca i32, align 4
  %preserve_existing.addr = alloca i8, align 1
  %mkdir_errno = alloca i32, align 4, !ctir !7
  %prefix_len = alloca i64, align 8, !ctir !654
  %savewd_chdir_options = alloca i32, align 4, !ctir !7
  %keep_owner = alloca i8, align 1, !ctir !142
  %keep_special_mode_bits = alloca i8, align 1, !ctir !142
  %mkdir_mode = alloca i32, align 4, !ctir !139
  %umask_must_be_ok = alloca i8, align 1, !ctir !142
  %st = alloca %struct.stat, align 8, !ctir !13130
  %open_result = alloca [2 x i32], align 4, !ctir !1750
  %chdir_result = alloca i32, align 4, !ctir !7
  %chdir_ok = alloca i8, align 1, !ctir !142
  %subdir = alloca i8*, align 8, !ctir !180
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !13151, metadata !DIExpression()), !dbg !13152
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !13153, metadata !DIExpression()), !dbg !13154
  store i32 (i8*, i8*, i8*)* %make_ancestor, i32 (i8*, i8*, i8*)** %make_ancestor.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i8*)** %make_ancestor.addr, metadata !13155, metadata !DIExpression()), !dbg !13156
  store i8* %options, i8** %options.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %options.addr, metadata !13157, metadata !DIExpression()), !dbg !13158
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !13159, metadata !DIExpression()), !dbg !13160
  store void (i8*, i8*)* %announce, void (i8*, i8*)** %announce.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata void (i8*, i8*)** %announce.addr, metadata !13161, metadata !DIExpression()), !dbg !13162
  store i32 %mode_bits, i32* %mode_bits.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %mode_bits.addr, metadata !13163, metadata !DIExpression()), !dbg !13164
  store i32 %owner, i32* %owner.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %owner.addr, metadata !13165, metadata !DIExpression()), !dbg !13166
  store i32 %group, i32* %group.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %group.addr, metadata !13167, metadata !DIExpression()), !dbg !13168
  %frombool = zext i1 %preserve_existing to i8
  store i8 %frombool, i8* %preserve_existing.addr, align 1, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %preserve_existing.addr, metadata !13169, metadata !DIExpression()), !dbg !13170
  call void @llvm.dbg.declare(metadata i32* %mkdir_errno, metadata !13171, metadata !DIExpression()), !dbg !13172
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !13173, !tbaa !2648
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !13173, !ctir !9
  %1 = load i8, i8* %arrayidx, align 1, !dbg !13173, !tbaa !3295
  %conv = sext i8 %1 to i32, !dbg !13173
  %cmp = icmp eq i32 %conv, 47, !dbg !13173
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13173

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !13173

cond.false:                                       ; preds = %entry
  %2 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !13174, !tbaa !2648
  %call = call i32 @savewd_errno(%struct.savewd* %2) #14, !dbg !13175
  br label %cond.end, !dbg !13173

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %call, %cond.false ], !dbg !13173
  store i32 %cond, i32* %mkdir_errno, align 4, !dbg !13172, !tbaa !2635
  %3 = load i32, i32* %mkdir_errno, align 4, !dbg !13176, !tbaa !2635
  %cmp2 = icmp eq i32 %3, 0, !dbg !13178
  br i1 %cmp2, label %if.then, label %if.end140, !dbg !13179

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i64* %prefix_len, metadata !13180, metadata !DIExpression()), !dbg !13182
  store i64 0, i64* %prefix_len, align 8, !dbg !13182, !tbaa !3288
  call void @llvm.dbg.declare(metadata i32* %savewd_chdir_options, metadata !13183, metadata !DIExpression()), !dbg !13184
  store i32 2, i32* %savewd_chdir_options, align 4, !dbg !13184, !tbaa !2635
  %4 = load i32 (i8*, i8*, i8*)*, i32 (i8*, i8*, i8*)** %make_ancestor.addr, align 8, !dbg !13185, !tbaa !2648
  %tobool = icmp ne i32 (i8*, i8*, i8*)* %4, null, !dbg !13185
  br i1 %tobool, label %if.then4, label %if.end14, !dbg !13187

if.then4:                                         ; preds = %if.then
  %5 = load i8*, i8** %dir.addr, align 8, !dbg !13188, !tbaa !2648
  %6 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !13190, !tbaa !2648
  %7 = load i32 (i8*, i8*, i8*)*, i32 (i8*, i8*, i8*)** %make_ancestor.addr, align 8, !dbg !13191, !tbaa !2648
  %8 = load i8*, i8** %options.addr, align 8, !dbg !13192, !tbaa !2648
  %call5 = call i64 @mkancesdirs(i8* %5, %struct.savewd* %6, i32 (i8*, i8*, i8*)* %7, i8* %8), !dbg !13193
  store i64 %call5, i64* %prefix_len, align 8, !dbg !13194, !tbaa !3288
  %9 = load i64, i64* %prefix_len, align 8, !dbg !13195, !tbaa !3288
  %cmp6 = icmp slt i64 %9, 0, !dbg !13197
  br i1 %cmp6, label %if.then8, label %if.end13, !dbg !13198

if.then8:                                         ; preds = %if.then4
  %10 = load i64, i64* %prefix_len, align 8, !dbg !13199, !tbaa !3288
  %cmp9 = icmp slt i64 %10, -1, !dbg !13202
  br i1 %cmp9, label %if.then11, label %if.end, !dbg !13203

if.then11:                                        ; preds = %if.then8
  store i1 true, i1* %retval, align 1, !dbg !13204
  br label %return, !dbg !13204

if.end:                                           ; preds = %if.then8
  %call12 = call i32* @__errno_location() #16, !dbg !13205
  %11 = load i32, i32* %call12, align 4, !dbg !13205, !tbaa !2635, !ctir !7
  store i32 %11, i32* %mkdir_errno, align 4, !dbg !13206, !tbaa !2635
  br label %if.end13, !dbg !13207

if.end13:                                         ; preds = %if.end, %if.then4
  br label %if.end14, !dbg !13208

if.end14:                                         ; preds = %if.end13, %if.then
  %12 = load i64, i64* %prefix_len, align 8, !dbg !13209, !tbaa !3288
  %cmp15 = icmp sle i64 0, %12, !dbg !13211
  br i1 %cmp15, label %if.then17, label %if.end139, !dbg !13212

if.then17:                                        ; preds = %if.end14
  call void @llvm.dbg.declare(metadata i8* %keep_owner, metadata !13213, metadata !DIExpression()), !dbg !13215
  %13 = load i32, i32* %owner.addr, align 4, !dbg !13216, !tbaa !2635
  %cmp18 = icmp eq i32 %13, -1, !dbg !13217
  br i1 %cmp18, label %land.rhs, label %land.end, !dbg !13218

land.rhs:                                         ; preds = %if.then17
  %14 = load i32, i32* %group.addr, align 4, !dbg !13219, !tbaa !2635
  %cmp20 = icmp eq i32 %14, -1, !dbg !13220
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then17
  %15 = phi i1 [ false, %if.then17 ], [ %cmp20, %land.rhs ], !dbg !13221
  %frombool22 = zext i1 %15 to i8, !dbg !13215
  store i8 %frombool22, i8* %keep_owner, align 1, !dbg !13215, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %keep_special_mode_bits, metadata !13222, metadata !DIExpression()), !dbg !13223
  %16 = load i32, i32* %mode_bits.addr, align 4, !dbg !13224, !tbaa !2635
  %and = and i32 %16, 3072, !dbg !13225
  %17 = load i32, i32* %mode.addr, align 4, !dbg !13226, !tbaa !2635
  %and23 = and i32 %17, 512, !dbg !13227
  %or = or i32 %and, %and23, !dbg !13228
  %cmp24 = icmp eq i32 %or, 0, !dbg !13229
  %frombool26 = zext i1 %cmp24 to i8, !dbg !13223
  store i8 %frombool26, i8* %keep_special_mode_bits, align 1, !dbg !13223, !tbaa !2742
  call void @llvm.dbg.declare(metadata i32* %mkdir_mode, metadata !13230, metadata !DIExpression()), !dbg !13231
  %18 = load i32, i32* %mode.addr, align 4, !dbg !13232, !tbaa !2635
  store i32 %18, i32* %mkdir_mode, align 4, !dbg !13231, !tbaa !2635
  %19 = load i8, i8* %keep_owner, align 1, !dbg !13233, !tbaa !2742
  %tobool27 = trunc i8 %19 to i1, !dbg !13233
  br i1 %tobool27, label %if.else, label %if.then28, !dbg !13235

if.then28:                                        ; preds = %land.end
  %20 = load i32, i32* %mkdir_mode, align 4, !dbg !13236, !tbaa !2635
  %and29 = and i32 %20, -64, !dbg !13236
  store i32 %and29, i32* %mkdir_mode, align 4, !dbg !13236, !tbaa !2635
  br label %if.end34, !dbg !13237

if.else:                                          ; preds = %land.end
  %21 = load i8, i8* %keep_special_mode_bits, align 1, !dbg !13238, !tbaa !2742
  %tobool30 = trunc i8 %21 to i1, !dbg !13238
  br i1 %tobool30, label %if.end33, label %if.then31, !dbg !13240

if.then31:                                        ; preds = %if.else
  %22 = load i32, i32* %mkdir_mode, align 4, !dbg !13241, !tbaa !2635
  %and32 = and i32 %22, -19, !dbg !13241
  store i32 %and32, i32* %mkdir_mode, align 4, !dbg !13241, !tbaa !2635
  br label %if.end33, !dbg !13242

if.end33:                                         ; preds = %if.then31, %if.else
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then28
  %23 = load i8*, i8** %dir.addr, align 8, !dbg !13243, !tbaa !2648
  %24 = load i64, i64* %prefix_len, align 8, !dbg !13245, !tbaa !3288
  %add.ptr = getelementptr inbounds i8, i8* %23, i64 %24, !dbg !13246
  %25 = load i32, i32* %mkdir_mode, align 4, !dbg !13247, !tbaa !2635
  %call35 = call i32 @mkdir(i8* %add.ptr, i32 %25) #9, !dbg !13248
  %cmp36 = icmp eq i32 %call35, 0, !dbg !13249
  br i1 %cmp36, label %if.then38, label %if.else55, !dbg !13250

if.then38:                                        ; preds = %if.end34
  call void @llvm.dbg.declare(metadata i8* %umask_must_be_ok, metadata !13251, metadata !DIExpression()), !dbg !13253
  %26 = load i32, i32* %mode.addr, align 4, !dbg !13254, !tbaa !2635
  %27 = load i32, i32* %mode_bits.addr, align 4, !dbg !13255, !tbaa !2635
  %and39 = and i32 %26, %27, !dbg !13256
  %and40 = and i32 %and39, 511, !dbg !13257
  %cmp41 = icmp eq i32 %and40, 0, !dbg !13258
  %frombool43 = zext i1 %cmp41 to i8, !dbg !13253
  store i8 %frombool43, i8* %umask_must_be_ok, align 1, !dbg !13253, !tbaa !2742
  %28 = load void (i8*, i8*)*, void (i8*, i8*)** %announce.addr, align 8, !dbg !13259, !tbaa !2648
  %29 = load i8*, i8** %dir.addr, align 8, !dbg !13260, !tbaa !2648
  %30 = load i8*, i8** %options.addr, align 8, !dbg !13261, !tbaa !2648
  call void %28(i8* %29, i8* %30), !dbg !13259
  %31 = load i8, i8* %keep_owner, align 1, !dbg !13262, !tbaa !2742
  %tobool44 = trunc i8 %31 to i1, !dbg !13262
  %conv45 = zext i1 %tobool44 to i32, !dbg !13262
  %32 = load i8, i8* %keep_special_mode_bits, align 1, !dbg !13263, !tbaa !2742
  %tobool46 = trunc i8 %32 to i1, !dbg !13263
  %conv47 = zext i1 %tobool46 to i32, !dbg !13263
  %and48 = and i32 %conv45, %conv47, !dbg !13264
  %33 = load i8, i8* %umask_must_be_ok, align 1, !dbg !13265, !tbaa !2742
  %tobool49 = trunc i8 %33 to i1, !dbg !13265
  %conv50 = zext i1 %tobool49 to i32, !dbg !13265
  %and51 = and i32 %and48, %conv50, !dbg !13266
  %tobool52 = icmp ne i32 %and51, 0, !dbg !13267
  %frombool53 = zext i1 %tobool52 to i8, !dbg !13268
  store i8 %frombool53, i8* %preserve_existing.addr, align 1, !dbg !13268, !tbaa !2742
  %34 = load i32, i32* %savewd_chdir_options, align 4, !dbg !13269, !tbaa !2635
  %or54 = or i32 %34, 1, !dbg !13269
  store i32 %or54, i32* %savewd_chdir_options, align 4, !dbg !13269, !tbaa !2635
  br label %if.end57, !dbg !13270

if.else55:                                        ; preds = %if.end34
  %call56 = call i32* @__errno_location() #16, !dbg !13271
  %35 = load i32, i32* %call56, align 4, !dbg !13271, !tbaa !2635, !ctir !7
  store i32 %35, i32* %mkdir_errno, align 4, !dbg !13273, !tbaa !2635
  store i32 -1, i32* %mkdir_mode, align 4, !dbg !13274, !tbaa !2635
  br label %if.end57

if.end57:                                         ; preds = %if.else55, %if.then38
  %36 = load i8, i8* %preserve_existing.addr, align 1, !dbg !13275, !tbaa !2742
  %tobool58 = trunc i8 %36 to i1, !dbg !13275
  br i1 %tobool58, label %if.then59, label %if.else96, !dbg !13277

if.then59:                                        ; preds = %if.end57
  %37 = load i32, i32* %mkdir_errno, align 4, !dbg !13278, !tbaa !2635
  %cmp60 = icmp eq i32 %37, 0, !dbg !13281
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !13282

if.then62:                                        ; preds = %if.then59
  store i1 true, i1* %retval, align 1, !dbg !13283
  br label %return, !dbg !13283

if.end63:                                         ; preds = %if.then59
  %38 = load i32, i32* %mkdir_errno, align 4, !dbg !13284, !tbaa !2635
  %cmp64 = icmp ne i32 %38, 2, !dbg !13286
  br i1 %cmp64, label %land.lhs.true, label %if.end95, !dbg !13287

land.lhs.true:                                    ; preds = %if.end63
  %39 = load i32 (i8*, i8*, i8*)*, i32 (i8*, i8*, i8*)** %make_ancestor.addr, align 8, !dbg !13288, !tbaa !2648
  %tobool66 = icmp ne i32 (i8*, i8*, i8*)* %39, null, !dbg !13288
  br i1 %tobool66, label %if.then67, label %if.end95, !dbg !13289

if.then67:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !13290, metadata !DIExpression()), !dbg !13292
  %40 = load i8*, i8** %dir.addr, align 8, !dbg !13293, !tbaa !2648
  %41 = load i64, i64* %prefix_len, align 8, !dbg !13295, !tbaa !3288
  %add.ptr68 = getelementptr inbounds i8, i8* %40, i64 %41, !dbg !13296
  %call69 = call i32 @stat(i8* %add.ptr68, %struct.stat* %st) #9, !dbg !13297
  %cmp70 = icmp eq i32 %call69, 0, !dbg !13298
  br i1 %cmp70, label %if.then72, label %if.else78, !dbg !13299

if.then72:                                        ; preds = %if.then67
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !13300, !ctir !13130
  %42 = load i32, i32* %st_mode, align 8, !dbg !13300, !tbaa !2914, !ctir !140
  %and73 = and i32 %42, 61440, !dbg !13300
  %cmp74 = icmp eq i32 %and73, 16384, !dbg !13300
  br i1 %cmp74, label %if.then76, label %if.end77, !dbg !13303

if.then76:                                        ; preds = %if.then72
  store i1 true, i1* %retval, align 1, !dbg !13304
  br label %return, !dbg !13304

if.end77:                                         ; preds = %if.then72
  br label %if.end94, !dbg !13305

if.else78:                                        ; preds = %if.then67
  %43 = load i32, i32* %mkdir_errno, align 4, !dbg !13306, !tbaa !2635
  %cmp79 = icmp eq i32 %43, 17, !dbg !13308
  br i1 %cmp79, label %land.lhs.true81, label %if.end93, !dbg !13309

land.lhs.true81:                                  ; preds = %if.else78
  %call82 = call i32* @__errno_location() #16, !dbg !13310
  %44 = load i32, i32* %call82, align 4, !dbg !13310, !tbaa !2635, !ctir !7
  %cmp83 = icmp ne i32 %44, 2, !dbg !13311
  br i1 %cmp83, label %land.lhs.true85, label %if.end93, !dbg !13312

land.lhs.true85:                                  ; preds = %land.lhs.true81
  %call86 = call i32* @__errno_location() #16, !dbg !13313
  %45 = load i32, i32* %call86, align 4, !dbg !13313, !tbaa !2635, !ctir !7
  %cmp87 = icmp ne i32 %45, 20, !dbg !13314
  br i1 %cmp87, label %if.then89, label %if.end93, !dbg !13315

if.then89:                                        ; preds = %land.lhs.true85
  %call90 = call i32* @__errno_location() #16, !dbg !13316
  %46 = load i32, i32* %call90, align 4, !dbg !13316, !tbaa !2635, !ctir !7
  %call91 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.296, i64 0, i64 0)) #9, !dbg !13318
  %47 = load i8*, i8** %dir.addr, align 8, !dbg !13319, !tbaa !2648
  %call92 = call i8* @quote(i8* %47), !dbg !13320
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %46, i8* %call91, i8* %call92), !dbg !13321
  store i1 false, i1* %retval, align 1, !dbg !13322
  br label %return, !dbg !13322

if.end93:                                         ; preds = %land.lhs.true85, %land.lhs.true81, %if.else78
  br label %if.end94

if.end94:                                         ; preds = %if.end93, %if.end77
  br label %if.end95, !dbg !13323

if.end95:                                         ; preds = %if.end94, %land.lhs.true, %if.end63
  br label %if.end138, !dbg !13324

if.else96:                                        ; preds = %if.end57
  call void @llvm.dbg.declare(metadata [2 x i32]* %open_result, metadata !13325, metadata !DIExpression()), !dbg !13327
  call void @llvm.dbg.declare(metadata i32* %chdir_result, metadata !13328, metadata !DIExpression()), !dbg !13329
  %48 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !13330, !tbaa !2648
  %49 = load i8*, i8** %dir.addr, align 8, !dbg !13331, !tbaa !2648
  %50 = load i64, i64* %prefix_len, align 8, !dbg !13332, !tbaa !3288
  %add.ptr97 = getelementptr inbounds i8, i8* %49, i64 %50, !dbg !13333
  %51 = load i32, i32* %savewd_chdir_options, align 4, !dbg !13334, !tbaa !2635
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %open_result, i64 0, i64 0, !dbg !13335
  %call98 = call i32 @savewd_chdir(%struct.savewd* %48, i8* %add.ptr97, i32 %51, i32* %arraydecay), !dbg !13336
  store i32 %call98, i32* %chdir_result, align 4, !dbg !13329, !tbaa !2635
  %52 = load i32, i32* %chdir_result, align 4, !dbg !13337, !tbaa !2635
  %cmp99 = icmp slt i32 %52, -1, !dbg !13339
  br i1 %cmp99, label %if.then101, label %if.else102, !dbg !13340

if.then101:                                       ; preds = %if.else96
  store i1 true, i1* %retval, align 1, !dbg !13341
  br label %return, !dbg !13341

if.else102:                                       ; preds = %if.else96
  call void @llvm.dbg.declare(metadata i8* %chdir_ok, metadata !13342, metadata !DIExpression()), !dbg !13344
  %53 = load i32, i32* %chdir_result, align 4, !dbg !13345, !tbaa !2635
  %cmp103 = icmp eq i32 %53, 0, !dbg !13346
  %frombool105 = zext i1 %cmp103 to i8, !dbg !13344
  store i8 %frombool105, i8* %chdir_ok, align 1, !dbg !13344, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8** %subdir, metadata !13347, metadata !DIExpression()), !dbg !13348
  %54 = load i8, i8* %chdir_ok, align 1, !dbg !13349, !tbaa !2742
  %tobool106 = trunc i8 %54 to i1, !dbg !13349
  br i1 %tobool106, label %cond.true108, label %cond.false109, !dbg !13349

cond.true108:                                     ; preds = %if.else102
  br label %cond.end111, !dbg !13349

cond.false109:                                    ; preds = %if.else102
  %55 = load i8*, i8** %dir.addr, align 8, !dbg !13350, !tbaa !2648
  %56 = load i64, i64* %prefix_len, align 8, !dbg !13351, !tbaa !3288
  %add.ptr110 = getelementptr inbounds i8, i8* %55, i64 %56, !dbg !13352
  br label %cond.end111, !dbg !13349

cond.end111:                                      ; preds = %cond.false109, %cond.true108
  %cond112 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.297, i64 0, i64 0), %cond.true108 ], [ %add.ptr110, %cond.false109 ], !dbg !13349
  store i8* %cond112, i8** %subdir, align 8, !dbg !13348, !tbaa !2648
  %arrayidx113 = getelementptr inbounds [2 x i32], [2 x i32]* %open_result, i64 0, i64 0, !dbg !13353, !ctir !1750
  %57 = load i32, i32* %arrayidx113, align 4, !dbg !13353, !tbaa !2635
  %58 = load i8*, i8** %subdir, align 8, !dbg !13355, !tbaa !2648
  %59 = load i32, i32* %mkdir_mode, align 4, !dbg !13356, !tbaa !2635
  %60 = load i32, i32* %owner.addr, align 4, !dbg !13357, !tbaa !2635
  %61 = load i32, i32* %group.addr, align 4, !dbg !13358, !tbaa !2635
  %62 = load i32, i32* %mode.addr, align 4, !dbg !13359, !tbaa !2635
  %63 = load i32, i32* %mode_bits.addr, align 4, !dbg !13360, !tbaa !2635
  %call114 = call i32 @dirchownmod(i32 %57, i8* %58, i32 %59, i32 %60, i32 %61, i32 %62, i32 %63), !dbg !13361
  %cmp115 = icmp eq i32 %call114, 0, !dbg !13362
  br i1 %cmp115, label %if.then117, label %if.end118, !dbg !13363

if.then117:                                       ; preds = %cond.end111
  store i1 true, i1* %retval, align 1, !dbg !13364
  br label %return, !dbg !13364

if.end118:                                        ; preds = %cond.end111
  %64 = load i32, i32* %mkdir_errno, align 4, !dbg !13365, !tbaa !2635
  %cmp119 = icmp eq i32 %64, 0, !dbg !13367
  br i1 %cmp119, label %if.then129, label %lor.lhs.false, !dbg !13368

lor.lhs.false:                                    ; preds = %if.end118
  %65 = load i32, i32* %mkdir_errno, align 4, !dbg !13369, !tbaa !2635
  %cmp121 = icmp ne i32 %65, 2, !dbg !13370
  br i1 %cmp121, label %land.lhs.true123, label %if.end136, !dbg !13371

land.lhs.true123:                                 ; preds = %lor.lhs.false
  %66 = load i32 (i8*, i8*, i8*)*, i32 (i8*, i8*, i8*)** %make_ancestor.addr, align 8, !dbg !13372, !tbaa !2648
  %tobool124 = icmp ne i32 (i8*, i8*, i8*)* %66, null, !dbg !13372
  br i1 %tobool124, label %land.lhs.true125, label %if.end136, !dbg !13373

land.lhs.true125:                                 ; preds = %land.lhs.true123
  %call126 = call i32* @__errno_location() #16, !dbg !13374
  %67 = load i32, i32* %call126, align 4, !dbg !13374, !tbaa !2635, !ctir !7
  %cmp127 = icmp ne i32 %67, 20, !dbg !13375
  br i1 %cmp127, label %if.then129, label %if.end136, !dbg !13376

if.then129:                                       ; preds = %land.lhs.true125, %if.end118
  %call130 = call i32* @__errno_location() #16, !dbg !13377
  %68 = load i32, i32* %call130, align 4, !dbg !13377, !tbaa !2635, !ctir !7
  %69 = load i8, i8* %keep_owner, align 1, !dbg !13379, !tbaa !2742
  %tobool131 = trunc i8 %69 to i1, !dbg !13379
  %70 = zext i1 %tobool131 to i64, !dbg !13379
  %cond133 = select i1 %tobool131, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2.298, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3.299, i64 0, i64 0), !dbg !13379
  %call134 = call i8* @gettext(i8* %cond133) #9, !dbg !13379
  %71 = load i8*, i8** %dir.addr, align 8, !dbg !13380, !tbaa !2648
  %call135 = call i8* @quote(i8* %71), !dbg !13381
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %68, i8* %call134, i8* %call135), !dbg !13382
  store i1 false, i1* %retval, align 1, !dbg !13383
  br label %return, !dbg !13383

if.end136:                                        ; preds = %land.lhs.true125, %land.lhs.true123, %lor.lhs.false
  br label %if.end137

if.end137:                                        ; preds = %if.end136
  br label %if.end138

if.end138:                                        ; preds = %if.end137, %if.end95
  br label %if.end139, !dbg !13384

if.end139:                                        ; preds = %if.end138, %if.end14
  br label %if.end140, !dbg !13385

if.end140:                                        ; preds = %if.end139, %cond.end
  %72 = load i32, i32* %mkdir_errno, align 4, !dbg !13386, !tbaa !2635
  %call141 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4.300, i64 0, i64 0)) #9, !dbg !13387
  %73 = load i8*, i8** %dir.addr, align 8, !dbg !13388, !tbaa !2648
  %call142 = call i8* @quote(i8* %73), !dbg !13389
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %72, i8* %call141, i8* %call142), !dbg !13390
  store i1 false, i1* %retval, align 1, !dbg !13391
  br label %return, !dbg !13391

return:                                           ; preds = %if.end140, %if.then129, %if.then117, %if.then101, %if.then89, %if.then76, %if.then62, %if.then11
  %74 = load i1, i1* %retval, align 1, !dbg !13392
  ret i1 %74, !dbg !13392
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.mode_change* @mode_compile(i8* %mode_string) #4 !dbg !13393 !ctir !1754 {
entry:
  %retval = alloca %struct.mode_change*, align 8
  %mode_string.addr = alloca i8*, align 8
  %mc = alloca %struct.mode_change*, align 8, !ctir !1756
  %used = alloca i64, align 8, !ctir !55
  %p = alloca i8*, align 8, !ctir !180
  %octal_mode = alloca i32, align 4, !ctir !70
  %mode = alloca i32, align 4, !ctir !139
  %mentioned = alloca i32, align 4, !ctir !139
  %needed = alloca i64, align 8, !ctir !55
  %affected = alloca i32, align 4, !ctir !139
  %op = alloca i8, align 1, !ctir !10
  %value = alloca i32, align 4, !ctir !139
  %mentioned51 = alloca i32, align 4, !ctir !139
  %flag = alloca i8, align 1, !ctir !10
  %change = alloca %struct.mode_change*, align 8, !ctir !1756
  %octal_mode54 = alloca i32, align 4, !ctir !70
  store i8* %mode_string, i8** %mode_string.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %mode_string.addr, metadata !13394, metadata !DIExpression()), !dbg !13395
  call void @llvm.dbg.declare(metadata %struct.mode_change** %mc, metadata !13396, metadata !DIExpression()), !dbg !13397
  call void @llvm.dbg.declare(metadata i64* %used, metadata !13398, metadata !DIExpression()), !dbg !13399
  store i64 0, i64* %used, align 8, !dbg !13399, !tbaa !3288
  call void @llvm.dbg.declare(metadata i8** %p, metadata !13400, metadata !DIExpression()), !dbg !13401
  %0 = load i8*, i8** %mode_string.addr, align 8, !dbg !13402, !tbaa !2648
  %1 = load i8, i8* %0, align 1, !dbg !13404, !tbaa !3295, !ctir !181
  %conv = sext i8 %1 to i32, !dbg !13404
  %cmp = icmp sle i32 48, %conv, !dbg !13405
  br i1 %cmp, label %land.lhs.true, label %if.end21, !dbg !13406

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %mode_string.addr, align 8, !dbg !13407, !tbaa !2648
  %3 = load i8, i8* %2, align 1, !dbg !13408, !tbaa !3295, !ctir !181
  %conv2 = sext i8 %3 to i32, !dbg !13408
  %cmp3 = icmp slt i32 %conv2, 56, !dbg !13409
  br i1 %cmp3, label %if.then, label %if.end21, !dbg !13410

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %octal_mode, metadata !13411, metadata !DIExpression()), !dbg !13413
  store i32 0, i32* %octal_mode, align 4, !dbg !13413, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !13414, metadata !DIExpression()), !dbg !13415
  call void @llvm.dbg.declare(metadata i32* %mentioned, metadata !13416, metadata !DIExpression()), !dbg !13417
  %4 = load i8*, i8** %mode_string.addr, align 8, !dbg !13418, !tbaa !2648
  store i8* %4, i8** %p, align 8, !dbg !13419, !tbaa !2648
  br label %do.body, !dbg !13420

do.body:                                          ; preds = %land.end, %if.then
  %5 = load i32, i32* %octal_mode, align 4, !dbg !13421, !tbaa !2635
  %mul = mul i32 8, %5, !dbg !13423
  %6 = load i8*, i8** %p, align 8, !dbg !13424, !tbaa !2648
  %incdec.ptr = getelementptr inbounds i8, i8* %6, i32 1, !dbg !13424
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !13424, !tbaa !2648
  %7 = load i8, i8* %6, align 1, !dbg !13425, !tbaa !3295, !ctir !181
  %conv5 = sext i8 %7 to i32, !dbg !13425
  %add = add i32 %mul, %conv5, !dbg !13426
  %sub = sub i32 %add, 48, !dbg !13427
  store i32 %sub, i32* %octal_mode, align 4, !dbg !13428, !tbaa !2635
  %8 = load i32, i32* %octal_mode, align 4, !dbg !13429, !tbaa !2635
  %cmp6 = icmp ult i32 4095, %8, !dbg !13431
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !13432

if.then8:                                         ; preds = %do.body
  store %struct.mode_change* null, %struct.mode_change** %retval, align 8, !dbg !13433
  br label %return, !dbg !13433

if.end:                                           ; preds = %do.body
  br label %do.cond, !dbg !13434

do.cond:                                          ; preds = %if.end
  %9 = load i8*, i8** %p, align 8, !dbg !13435, !tbaa !2648
  %10 = load i8, i8* %9, align 1, !dbg !13436, !tbaa !3295, !ctir !181
  %conv9 = sext i8 %10 to i32, !dbg !13436
  %cmp10 = icmp sle i32 48, %conv9, !dbg !13437
  br i1 %cmp10, label %land.rhs, label %land.end, !dbg !13438

land.rhs:                                         ; preds = %do.cond
  %11 = load i8*, i8** %p, align 8, !dbg !13439, !tbaa !2648
  %12 = load i8, i8* %11, align 1, !dbg !13440, !tbaa !3295, !ctir !181
  %conv12 = sext i8 %12 to i32, !dbg !13440
  %cmp13 = icmp slt i32 %conv12, 56, !dbg !13441
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %13 = phi i1 [ false, %do.cond ], [ %cmp13, %land.rhs ], !dbg !13442
  br i1 %13, label %do.body, label %do.end, !dbg !13434, !llvm.loop !13443

do.end:                                           ; preds = %land.end
  %14 = load i8*, i8** %p, align 8, !dbg !13445, !tbaa !2648
  %15 = load i8, i8* %14, align 1, !dbg !13447, !tbaa !3295, !ctir !181
  %tobool = icmp ne i8 %15, 0, !dbg !13447
  br i1 %tobool, label %if.then15, label %if.end16, !dbg !13448

if.then15:                                        ; preds = %do.end
  store %struct.mode_change* null, %struct.mode_change** %retval, align 8, !dbg !13449
  br label %return, !dbg !13449

if.end16:                                         ; preds = %do.end
  %16 = load i32, i32* %octal_mode, align 4, !dbg !13450, !tbaa !2635
  %call = call i32 @octal_to_mode(i32 %16), !dbg !13451
  store i32 %call, i32* %mode, align 4, !dbg !13452, !tbaa !2635
  %17 = load i8*, i8** %p, align 8, !dbg !13453, !tbaa !2648
  %18 = load i8*, i8** %mode_string.addr, align 8, !dbg !13454, !tbaa !2648
  %sub.ptr.lhs.cast = ptrtoint i8* %17 to i64, !dbg !13455
  %sub.ptr.rhs.cast = ptrtoint i8* %18 to i64, !dbg !13455
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !13455
  %cmp17 = icmp slt i64 %sub.ptr.sub, 5, !dbg !13456
  br i1 %cmp17, label %cond.true, label %cond.false, !dbg !13453

cond.true:                                        ; preds = %if.end16
  %19 = load i32, i32* %mode, align 4, !dbg !13457, !tbaa !2635
  %and = and i32 %19, 3072, !dbg !13458
  %or = or i32 %and, 512, !dbg !13459
  %or19 = or i32 %or, 511, !dbg !13460
  br label %cond.end, !dbg !13453

cond.false:                                       ; preds = %if.end16
  br label %cond.end, !dbg !13453

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or19, %cond.true ], [ 4095, %cond.false ], !dbg !13453
  store i32 %cond, i32* %mentioned, align 4, !dbg !13461, !tbaa !2635
  %20 = load i32, i32* %mode, align 4, !dbg !13462, !tbaa !2635
  %21 = load i32, i32* %mentioned, align 4, !dbg !13463, !tbaa !2635
  %call20 = call %struct.mode_change* @make_node_op_equals(i32 %20, i32 %21), !dbg !13464
  store %struct.mode_change* %call20, %struct.mode_change** %retval, align 8, !dbg !13465
  br label %return, !dbg !13465

if.end21:                                         ; preds = %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata i64* %needed, metadata !13466, metadata !DIExpression()), !dbg !13468
  store i64 1, i64* %needed, align 8, !dbg !13468, !tbaa !3288
  %22 = load i8*, i8** %mode_string.addr, align 8, !dbg !13469, !tbaa !2648
  store i8* %22, i8** %p, align 8, !dbg !13471, !tbaa !2648
  br label %for.cond, !dbg !13472

for.cond:                                         ; preds = %for.inc, %if.end21
  %23 = load i8*, i8** %p, align 8, !dbg !13473, !tbaa !2648
  %24 = load i8, i8* %23, align 1, !dbg !13475, !tbaa !3295, !ctir !181
  %tobool22 = icmp ne i8 %24, 0, !dbg !13476
  br i1 %tobool22, label %for.body, label %for.end, !dbg !13476

for.body:                                         ; preds = %for.cond
  %25 = load i8*, i8** %p, align 8, !dbg !13477, !tbaa !2648
  %26 = load i8, i8* %25, align 1, !dbg !13478, !tbaa !3295, !ctir !181
  %conv23 = sext i8 %26 to i32, !dbg !13478
  %cmp24 = icmp eq i32 %conv23, 61, !dbg !13479
  br i1 %cmp24, label %lor.end, label %lor.lhs.false, !dbg !13480

lor.lhs.false:                                    ; preds = %for.body
  %27 = load i8*, i8** %p, align 8, !dbg !13481, !tbaa !2648
  %28 = load i8, i8* %27, align 1, !dbg !13482, !tbaa !3295, !ctir !181
  %conv26 = sext i8 %28 to i32, !dbg !13482
  %cmp27 = icmp eq i32 %conv26, 43, !dbg !13483
  br i1 %cmp27, label %lor.end, label %lor.rhs, !dbg !13484

lor.rhs:                                          ; preds = %lor.lhs.false
  %29 = load i8*, i8** %p, align 8, !dbg !13485, !tbaa !2648
  %30 = load i8, i8* %29, align 1, !dbg !13486, !tbaa !3295, !ctir !181
  %conv29 = sext i8 %30 to i32, !dbg !13486
  %cmp30 = icmp eq i32 %conv29, 45, !dbg !13487
  br label %lor.end, !dbg !13484

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %for.body
  %31 = phi i1 [ true, %lor.lhs.false ], [ true, %for.body ], [ %cmp30, %lor.rhs ]
  %lor.ext = zext i1 %31 to i32, !dbg !13484
  %conv32 = sext i32 %lor.ext to i64, !dbg !13488
  %32 = load i64, i64* %needed, align 8, !dbg !13489, !tbaa !3288
  %add33 = add i64 %32, %conv32, !dbg !13489
  store i64 %add33, i64* %needed, align 8, !dbg !13489, !tbaa !3288
  br label %for.inc, !dbg !13490

for.inc:                                          ; preds = %lor.end
  %33 = load i8*, i8** %p, align 8, !dbg !13491, !tbaa !2648
  %incdec.ptr34 = getelementptr inbounds i8, i8* %33, i32 1, !dbg !13491
  store i8* %incdec.ptr34, i8** %p, align 8, !dbg !13491, !tbaa !2648
  br label %for.cond, !dbg !13492, !llvm.loop !13493

for.end:                                          ; preds = %for.cond
  %34 = load i64, i64* %needed, align 8, !dbg !13495, !tbaa !3288
  %call35 = call noalias i8* @xnmalloc(i64 %34, i64 16), !dbg !13496
  %35 = bitcast i8* %call35 to %struct.mode_change*, !dbg !13496
  store %struct.mode_change* %35, %struct.mode_change** %mc, align 8, !dbg !13497, !tbaa !2648
  %36 = load i8*, i8** %mode_string.addr, align 8, !dbg !13498, !tbaa !2648
  store i8* %36, i8** %p, align 8, !dbg !13500, !tbaa !2648
  br label %for.cond36, !dbg !13501

for.cond36:                                       ; preds = %for.inc147, %for.end
  call void @llvm.dbg.declare(metadata i32* %affected, metadata !13502, metadata !DIExpression()), !dbg !13505
  store i32 0, i32* %affected, align 4, !dbg !13505, !tbaa !2635
  br label %for.cond37, !dbg !13506

for.cond37:                                       ; preds = %for.inc47, %for.cond36
  %37 = load i8*, i8** %p, align 8, !dbg !13507, !tbaa !2648
  %38 = load i8, i8* %37, align 1, !dbg !13510, !tbaa !3295, !ctir !181
  %conv38 = sext i8 %38 to i32, !dbg !13510
  switch i32 %conv38, label %sw.default [
    i32 117, label %sw.bb
    i32 103, label %sw.bb40
    i32 111, label %sw.bb42
    i32 97, label %sw.bb44
    i32 61, label %sw.bb46
    i32 43, label %sw.bb46
    i32 45, label %sw.bb46
  ], !dbg !13511

sw.default:                                       ; preds = %for.cond37
  br label %invalid, !dbg !13512

sw.bb:                                            ; preds = %for.cond37
  %39 = load i32, i32* %affected, align 4, !dbg !13514, !tbaa !2635
  %or39 = or i32 %39, 2496, !dbg !13514
  store i32 %or39, i32* %affected, align 4, !dbg !13514, !tbaa !2635
  br label %sw.epilog, !dbg !13515

sw.bb40:                                          ; preds = %for.cond37
  %40 = load i32, i32* %affected, align 4, !dbg !13516, !tbaa !2635
  %or41 = or i32 %40, 1080, !dbg !13516
  store i32 %or41, i32* %affected, align 4, !dbg !13516, !tbaa !2635
  br label %sw.epilog, !dbg !13517

sw.bb42:                                          ; preds = %for.cond37
  %41 = load i32, i32* %affected, align 4, !dbg !13518, !tbaa !2635
  %or43 = or i32 %41, 519, !dbg !13518
  store i32 %or43, i32* %affected, align 4, !dbg !13518, !tbaa !2635
  br label %sw.epilog, !dbg !13519

sw.bb44:                                          ; preds = %for.cond37
  %42 = load i32, i32* %affected, align 4, !dbg !13520, !tbaa !2635
  %or45 = or i32 %42, 4095, !dbg !13520
  store i32 %or45, i32* %affected, align 4, !dbg !13520, !tbaa !2635
  br label %sw.epilog, !dbg !13521

sw.bb46:                                          ; preds = %for.cond37, %for.cond37, %for.cond37
  br label %no_more_affected, !dbg !13522

sw.epilog:                                        ; preds = %sw.bb44, %sw.bb42, %sw.bb40, %sw.bb
  br label %for.inc47, !dbg !13523

for.inc47:                                        ; preds = %sw.epilog
  %43 = load i8*, i8** %p, align 8, !dbg !13524, !tbaa !2648
  %incdec.ptr48 = getelementptr inbounds i8, i8* %43, i32 1, !dbg !13524
  store i8* %incdec.ptr48, i8** %p, align 8, !dbg !13524, !tbaa !2648
  br label %for.cond37, !dbg !13525, !llvm.loop !13526

no_more_affected:                                 ; preds = %sw.bb46
  call void @llvm.dbg.label(metadata !13529), !dbg !13530
  br label %do.body49, !dbg !13531

do.body49:                                        ; preds = %lor.end139, %no_more_affected
  call void @llvm.dbg.declare(metadata i8* %op, metadata !13532, metadata !DIExpression()), !dbg !13534
  %44 = load i8*, i8** %p, align 8, !dbg !13535, !tbaa !2648
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !13535
  store i8* %incdec.ptr50, i8** %p, align 8, !dbg !13535, !tbaa !2648
  %45 = load i8, i8* %44, align 1, !dbg !13536, !tbaa !3295, !ctir !181
  store i8 %45, i8* %op, align 1, !dbg !13534, !tbaa !3295
  call void @llvm.dbg.declare(metadata i32* %value, metadata !13537, metadata !DIExpression()), !dbg !13538
  call void @llvm.dbg.declare(metadata i32* %mentioned51, metadata !13539, metadata !DIExpression()), !dbg !13540
  store i32 0, i32* %mentioned51, align 4, !dbg !13540, !tbaa !2635
  call void @llvm.dbg.declare(metadata i8* %flag, metadata !13541, metadata !DIExpression()), !dbg !13542
  store i8 3, i8* %flag, align 1, !dbg !13542, !tbaa !3295
  call void @llvm.dbg.declare(metadata %struct.mode_change** %change, metadata !13543, metadata !DIExpression()), !dbg !13544
  %46 = load i8*, i8** %p, align 8, !dbg !13545, !tbaa !2648
  %47 = load i8, i8* %46, align 1, !dbg !13546, !tbaa !3295, !ctir !181
  %conv52 = sext i8 %47 to i32, !dbg !13546
  switch i32 %conv52, label %sw.default92 [
    i32 48, label %sw.bb53
    i32 49, label %sw.bb53
    i32 50, label %sw.bb53
    i32 51, label %sw.bb53
    i32 52, label %sw.bb53
    i32 53, label %sw.bb53
    i32 54, label %sw.bb53
    i32 55, label %sw.bb53
    i32 117, label %sw.bb86
    i32 103, label %sw.bb88
    i32 111, label %sw.bb90
  ], !dbg !13547

sw.bb53:                                          ; preds = %do.body49, %do.body49, %do.body49, %do.body49, %do.body49, %do.body49, %do.body49, %do.body49
  call void @llvm.dbg.declare(metadata i32* %octal_mode54, metadata !13548, metadata !DIExpression()), !dbg !13551
  store i32 0, i32* %octal_mode54, align 4, !dbg !13551, !tbaa !2635
  br label %do.body55, !dbg !13552

do.body55:                                        ; preds = %land.end73, %sw.bb53
  %48 = load i32, i32* %octal_mode54, align 4, !dbg !13553, !tbaa !2635
  %mul56 = mul i32 8, %48, !dbg !13555
  %49 = load i8*, i8** %p, align 8, !dbg !13556, !tbaa !2648
  %incdec.ptr57 = getelementptr inbounds i8, i8* %49, i32 1, !dbg !13556
  store i8* %incdec.ptr57, i8** %p, align 8, !dbg !13556, !tbaa !2648
  %50 = load i8, i8* %49, align 1, !dbg !13557, !tbaa !3295, !ctir !181
  %conv58 = sext i8 %50 to i32, !dbg !13557
  %add59 = add i32 %mul56, %conv58, !dbg !13558
  %sub60 = sub i32 %add59, 48, !dbg !13559
  store i32 %sub60, i32* %octal_mode54, align 4, !dbg !13560, !tbaa !2635
  %51 = load i32, i32* %octal_mode54, align 4, !dbg !13561, !tbaa !2635
  %cmp61 = icmp ult i32 4095, %51, !dbg !13563
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !13564

if.then63:                                        ; preds = %do.body55
  br label %invalid, !dbg !13565

if.end64:                                         ; preds = %do.body55
  br label %do.cond65, !dbg !13566

do.cond65:                                        ; preds = %if.end64
  %52 = load i8*, i8** %p, align 8, !dbg !13567, !tbaa !2648
  %53 = load i8, i8* %52, align 1, !dbg !13568, !tbaa !3295, !ctir !181
  %conv66 = sext i8 %53 to i32, !dbg !13568
  %cmp67 = icmp sle i32 48, %conv66, !dbg !13569
  br i1 %cmp67, label %land.rhs69, label %land.end73, !dbg !13570

land.rhs69:                                       ; preds = %do.cond65
  %54 = load i8*, i8** %p, align 8, !dbg !13571, !tbaa !2648
  %55 = load i8, i8* %54, align 1, !dbg !13572, !tbaa !3295, !ctir !181
  %conv70 = sext i8 %55 to i32, !dbg !13572
  %cmp71 = icmp slt i32 %conv70, 56, !dbg !13573
  br label %land.end73

land.end73:                                       ; preds = %land.rhs69, %do.cond65
  %56 = phi i1 [ false, %do.cond65 ], [ %cmp71, %land.rhs69 ], !dbg !13574
  br i1 %56, label %do.body55, label %do.end74, !dbg !13566, !llvm.loop !13575

do.end74:                                         ; preds = %land.end73
  %57 = load i32, i32* %affected, align 4, !dbg !13577, !tbaa !2635
  %tobool75 = icmp ne i32 %57, 0, !dbg !13577
  br i1 %tobool75, label %if.then83, label %lor.lhs.false76, !dbg !13579

lor.lhs.false76:                                  ; preds = %do.end74
  %58 = load i8*, i8** %p, align 8, !dbg !13580, !tbaa !2648
  %59 = load i8, i8* %58, align 1, !dbg !13581, !tbaa !3295, !ctir !181
  %conv77 = sext i8 %59 to i32, !dbg !13581
  %tobool78 = icmp ne i32 %conv77, 0, !dbg !13581
  br i1 %tobool78, label %land.lhs.true79, label %if.end84, !dbg !13582

land.lhs.true79:                                  ; preds = %lor.lhs.false76
  %60 = load i8*, i8** %p, align 8, !dbg !13583, !tbaa !2648
  %61 = load i8, i8* %60, align 1, !dbg !13584, !tbaa !3295, !ctir !181
  %conv80 = sext i8 %61 to i32, !dbg !13584
  %cmp81 = icmp ne i32 %conv80, 44, !dbg !13585
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !13586

if.then83:                                        ; preds = %land.lhs.true79, %do.end74
  br label %invalid, !dbg !13587

if.end84:                                         ; preds = %land.lhs.true79, %lor.lhs.false76
  store i32 4095, i32* %mentioned51, align 4, !dbg !13588, !tbaa !2635
  store i32 4095, i32* %affected, align 4, !dbg !13589, !tbaa !2635
  %62 = load i32, i32* %octal_mode54, align 4, !dbg !13590, !tbaa !2635
  %call85 = call i32 @octal_to_mode(i32 %62), !dbg !13591
  store i32 %call85, i32* %value, align 4, !dbg !13592, !tbaa !2635
  store i8 1, i8* %flag, align 1, !dbg !13593, !tbaa !3295
  br label %sw.epilog110, !dbg !13594

sw.bb86:                                          ; preds = %do.body49
  store i32 448, i32* %value, align 4, !dbg !13595, !tbaa !2635
  %63 = load i8*, i8** %p, align 8, !dbg !13596, !tbaa !2648
  %incdec.ptr87 = getelementptr inbounds i8, i8* %63, i32 1, !dbg !13596
  store i8* %incdec.ptr87, i8** %p, align 8, !dbg !13596, !tbaa !2648
  br label %sw.epilog110, !dbg !13597

sw.bb88:                                          ; preds = %do.body49
  store i32 56, i32* %value, align 4, !dbg !13598, !tbaa !2635
  %64 = load i8*, i8** %p, align 8, !dbg !13599, !tbaa !2648
  %incdec.ptr89 = getelementptr inbounds i8, i8* %64, i32 1, !dbg !13599
  store i8* %incdec.ptr89, i8** %p, align 8, !dbg !13599, !tbaa !2648
  br label %sw.epilog110, !dbg !13600

sw.bb90:                                          ; preds = %do.body49
  store i32 7, i32* %value, align 4, !dbg !13601, !tbaa !2635
  %65 = load i8*, i8** %p, align 8, !dbg !13602, !tbaa !2648
  %incdec.ptr91 = getelementptr inbounds i8, i8* %65, i32 1, !dbg !13602
  store i8* %incdec.ptr91, i8** %p, align 8, !dbg !13602, !tbaa !2648
  br label %sw.epilog110, !dbg !13603

sw.default92:                                     ; preds = %do.body49
  store i32 0, i32* %value, align 4, !dbg !13604, !tbaa !2635
  store i8 1, i8* %flag, align 1, !dbg !13605, !tbaa !3295
  br label %for.cond93, !dbg !13606

for.cond93:                                       ; preds = %for.inc108, %sw.default92
  %66 = load i8*, i8** %p, align 8, !dbg !13607, !tbaa !2648
  %67 = load i8, i8* %66, align 1, !dbg !13610, !tbaa !3295, !ctir !181
  %conv94 = sext i8 %67 to i32, !dbg !13610
  switch i32 %conv94, label %sw.default106 [
    i32 114, label %sw.bb95
    i32 119, label %sw.bb97
    i32 120, label %sw.bb99
    i32 88, label %sw.bb101
    i32 115, label %sw.bb102
    i32 116, label %sw.bb104
  ], !dbg !13611

sw.bb95:                                          ; preds = %for.cond93
  %68 = load i32, i32* %value, align 4, !dbg !13612, !tbaa !2635
  %or96 = or i32 %68, 292, !dbg !13612
  store i32 %or96, i32* %value, align 4, !dbg !13612, !tbaa !2635
  br label %sw.epilog107, !dbg !13614

sw.bb97:                                          ; preds = %for.cond93
  %69 = load i32, i32* %value, align 4, !dbg !13615, !tbaa !2635
  %or98 = or i32 %69, 146, !dbg !13615
  store i32 %or98, i32* %value, align 4, !dbg !13615, !tbaa !2635
  br label %sw.epilog107, !dbg !13616

sw.bb99:                                          ; preds = %for.cond93
  %70 = load i32, i32* %value, align 4, !dbg !13617, !tbaa !2635
  %or100 = or i32 %70, 73, !dbg !13617
  store i32 %or100, i32* %value, align 4, !dbg !13617, !tbaa !2635
  br label %sw.epilog107, !dbg !13618

sw.bb101:                                         ; preds = %for.cond93
  store i8 2, i8* %flag, align 1, !dbg !13619, !tbaa !3295
  br label %sw.epilog107, !dbg !13620

sw.bb102:                                         ; preds = %for.cond93
  %71 = load i32, i32* %value, align 4, !dbg !13621, !tbaa !2635
  %or103 = or i32 %71, 3072, !dbg !13621
  store i32 %or103, i32* %value, align 4, !dbg !13621, !tbaa !2635
  br label %sw.epilog107, !dbg !13622

sw.bb104:                                         ; preds = %for.cond93
  %72 = load i32, i32* %value, align 4, !dbg !13623, !tbaa !2635
  %or105 = or i32 %72, 512, !dbg !13623
  store i32 %or105, i32* %value, align 4, !dbg !13623, !tbaa !2635
  br label %sw.epilog107, !dbg !13624

sw.default106:                                    ; preds = %for.cond93
  br label %no_more_values, !dbg !13625

sw.epilog107:                                     ; preds = %sw.bb104, %sw.bb102, %sw.bb101, %sw.bb99, %sw.bb97, %sw.bb95
  br label %for.inc108, !dbg !13626

for.inc108:                                       ; preds = %sw.epilog107
  %73 = load i8*, i8** %p, align 8, !dbg !13627, !tbaa !2648
  %incdec.ptr109 = getelementptr inbounds i8, i8* %73, i32 1, !dbg !13627
  store i8* %incdec.ptr109, i8** %p, align 8, !dbg !13627, !tbaa !2648
  br label %for.cond93, !dbg !13628, !llvm.loop !13629

no_more_values:                                   ; preds = %sw.default106
  call void @llvm.dbg.label(metadata !13632), !dbg !13633
  br label %sw.epilog110, !dbg !13634

sw.epilog110:                                     ; preds = %no_more_values, %sw.bb90, %sw.bb88, %sw.bb86, %if.end84
  %74 = load %struct.mode_change*, %struct.mode_change** %mc, align 8, !dbg !13635, !tbaa !2648
  %75 = load i64, i64* %used, align 8, !dbg !13636, !tbaa !3288
  %inc = add i64 %75, 1, !dbg !13636
  store i64 %inc, i64* %used, align 8, !dbg !13636, !tbaa !3288
  %arrayidx = getelementptr inbounds %struct.mode_change, %struct.mode_change* %74, i64 %75, !dbg !13635, !ctir !1756
  store %struct.mode_change* %arrayidx, %struct.mode_change** %change, align 8, !dbg !13637, !tbaa !2648
  %76 = load i8, i8* %op, align 1, !dbg !13638, !tbaa !3295
  %77 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !13639, !tbaa !2648
  %op111 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %77, i32 0, i32 0, !dbg !13640, !ctir !1757
  store i8 %76, i8* %op111, align 4, !dbg !13641, !tbaa !13642, !ctir !10
  %78 = load i8, i8* %flag, align 1, !dbg !13644, !tbaa !3295
  %79 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !13645, !tbaa !2648
  %flag112 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %79, i32 0, i32 1, !dbg !13646, !ctir !1757
  store i8 %78, i8* %flag112, align 1, !dbg !13647, !tbaa !13648, !ctir !10
  %80 = load i32, i32* %affected, align 4, !dbg !13649, !tbaa !2635
  %81 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !13650, !tbaa !2648
  %affected113 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %81, i32 0, i32 2, !dbg !13651, !ctir !1757
  store i32 %80, i32* %affected113, align 4, !dbg !13652, !tbaa !13653, !ctir !139
  %82 = load i32, i32* %value, align 4, !dbg !13654, !tbaa !2635
  %83 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !13655, !tbaa !2648
  %value114 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %83, i32 0, i32 3, !dbg !13656, !ctir !1757
  store i32 %82, i32* %value114, align 4, !dbg !13657, !tbaa !13658, !ctir !139
  %84 = load i32, i32* %mentioned51, align 4, !dbg !13659, !tbaa !2635
  %tobool115 = icmp ne i32 %84, 0, !dbg !13659
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !13659

cond.true116:                                     ; preds = %sw.epilog110
  %85 = load i32, i32* %mentioned51, align 4, !dbg !13660, !tbaa !2635
  br label %cond.end124, !dbg !13659

cond.false117:                                    ; preds = %sw.epilog110
  %86 = load i32, i32* %affected, align 4, !dbg !13661, !tbaa !2635
  %tobool118 = icmp ne i32 %86, 0, !dbg !13661
  br i1 %tobool118, label %cond.true119, label %cond.false121, !dbg !13661

cond.true119:                                     ; preds = %cond.false117
  %87 = load i32, i32* %affected, align 4, !dbg !13662, !tbaa !2635
  %88 = load i32, i32* %value, align 4, !dbg !13663, !tbaa !2635
  %and120 = and i32 %87, %88, !dbg !13664
  br label %cond.end122, !dbg !13661

cond.false121:                                    ; preds = %cond.false117
  %89 = load i32, i32* %value, align 4, !dbg !13665, !tbaa !2635
  br label %cond.end122, !dbg !13661

cond.end122:                                      ; preds = %cond.false121, %cond.true119
  %cond123 = phi i32 [ %and120, %cond.true119 ], [ %89, %cond.false121 ], !dbg !13661
  br label %cond.end124, !dbg !13659

cond.end124:                                      ; preds = %cond.end122, %cond.true116
  %cond125 = phi i32 [ %85, %cond.true116 ], [ %cond123, %cond.end122 ], !dbg !13659
  %90 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !13666, !tbaa !2648
  %mentioned126 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %90, i32 0, i32 4, !dbg !13667, !ctir !1757
  store i32 %cond125, i32* %mentioned126, align 4, !dbg !13668, !tbaa !13669, !ctir !139
  br label %do.cond127, !dbg !13670

do.cond127:                                       ; preds = %cond.end124
  %91 = load i8*, i8** %p, align 8, !dbg !13671, !tbaa !2648
  %92 = load i8, i8* %91, align 1, !dbg !13672, !tbaa !3295, !ctir !181
  %conv128 = sext i8 %92 to i32, !dbg !13672
  %cmp129 = icmp eq i32 %conv128, 61, !dbg !13673
  br i1 %cmp129, label %lor.end139, label %lor.lhs.false131, !dbg !13674

lor.lhs.false131:                                 ; preds = %do.cond127
  %93 = load i8*, i8** %p, align 8, !dbg !13675, !tbaa !2648
  %94 = load i8, i8* %93, align 1, !dbg !13676, !tbaa !3295, !ctir !181
  %conv132 = sext i8 %94 to i32, !dbg !13676
  %cmp133 = icmp eq i32 %conv132, 43, !dbg !13677
  br i1 %cmp133, label %lor.end139, label %lor.rhs135, !dbg !13678

lor.rhs135:                                       ; preds = %lor.lhs.false131
  %95 = load i8*, i8** %p, align 8, !dbg !13679, !tbaa !2648
  %96 = load i8, i8* %95, align 1, !dbg !13680, !tbaa !3295, !ctir !181
  %conv136 = sext i8 %96 to i32, !dbg !13680
  %cmp137 = icmp eq i32 %conv136, 45, !dbg !13681
  br label %lor.end139, !dbg !13678

lor.end139:                                       ; preds = %lor.rhs135, %lor.lhs.false131, %do.cond127
  %97 = phi i1 [ true, %lor.lhs.false131 ], [ true, %do.cond127 ], [ %cmp137, %lor.rhs135 ]
  br i1 %97, label %do.body49, label %do.end141, !dbg !13670, !llvm.loop !13682

do.end141:                                        ; preds = %lor.end139
  %98 = load i8*, i8** %p, align 8, !dbg !13684, !tbaa !2648
  %99 = load i8, i8* %98, align 1, !dbg !13686, !tbaa !3295, !ctir !181
  %conv142 = sext i8 %99 to i32, !dbg !13686
  %cmp143 = icmp ne i32 %conv142, 44, !dbg !13687
  br i1 %cmp143, label %if.then145, label %if.end146, !dbg !13688

if.then145:                                       ; preds = %do.end141
  br label %for.end149, !dbg !13689

if.end146:                                        ; preds = %do.end141
  br label %for.inc147, !dbg !13690

for.inc147:                                       ; preds = %if.end146
  %100 = load i8*, i8** %p, align 8, !dbg !13691, !tbaa !2648
  %incdec.ptr148 = getelementptr inbounds i8, i8* %100, i32 1, !dbg !13691
  store i8* %incdec.ptr148, i8** %p, align 8, !dbg !13691, !tbaa !2648
  br label %for.cond36, !dbg !13692, !llvm.loop !13693

for.end149:                                       ; preds = %if.then145
  %101 = load i8*, i8** %p, align 8, !dbg !13696, !tbaa !2648
  %102 = load i8, i8* %101, align 1, !dbg !13698, !tbaa !3295, !ctir !181
  %conv150 = sext i8 %102 to i32, !dbg !13698
  %cmp151 = icmp eq i32 %conv150, 0, !dbg !13699
  br i1 %cmp151, label %if.then153, label %if.end156, !dbg !13700

if.then153:                                       ; preds = %for.end149
  %103 = load %struct.mode_change*, %struct.mode_change** %mc, align 8, !dbg !13701, !tbaa !2648
  %104 = load i64, i64* %used, align 8, !dbg !13703, !tbaa !3288
  %arrayidx154 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %103, i64 %104, !dbg !13701, !ctir !1756
  %flag155 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %arrayidx154, i32 0, i32 1, !dbg !13704, !ctir !1757
  store i8 0, i8* %flag155, align 1, !dbg !13705, !tbaa !13648, !ctir !10
  %105 = load %struct.mode_change*, %struct.mode_change** %mc, align 8, !dbg !13706, !tbaa !2648
  store %struct.mode_change* %105, %struct.mode_change** %retval, align 8, !dbg !13707
  br label %return, !dbg !13707

if.end156:                                        ; preds = %for.end149
  br label %invalid, !dbg !13708

invalid:                                          ; preds = %if.end156, %if.then83, %if.then63, %sw.default
  call void @llvm.dbg.label(metadata !13709), !dbg !13710
  %106 = load %struct.mode_change*, %struct.mode_change** %mc, align 8, !dbg !13711, !tbaa !2648
  %107 = bitcast %struct.mode_change* %106 to i8*, !dbg !13711
  call void @free(i8* %107) #9, !dbg !13712
  store %struct.mode_change* null, %struct.mode_change** %retval, align 8, !dbg !13713
  br label %return, !dbg !13713

return:                                           ; preds = %invalid, %if.then153, %cond.end, %if.then15, %if.then8
  %108 = load %struct.mode_change*, %struct.mode_change** %retval, align 8, !dbg !13714
  ret %struct.mode_change* %108, !dbg !13714
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @octal_to_mode(i32 %octal) #4 !dbg !13715 !ctir !1770 {
entry:
  %octal.addr = alloca i32, align 4
  store i32 %octal, i32* %octal.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %octal.addr, metadata !13716, metadata !DIExpression()), !dbg !13717
  %0 = load i32, i32* %octal.addr, align 4, !dbg !13718, !tbaa !2635
  ret i32 %0, !dbg !13719
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.mode_change* @make_node_op_equals(i32 %new_mode, i32 %mentioned) #4 !dbg !13720 !ctir !1772 {
entry:
  %new_mode.addr = alloca i32, align 4
  %mentioned.addr = alloca i32, align 4
  %p = alloca %struct.mode_change*, align 8, !ctir !1756
  store i32 %new_mode, i32* %new_mode.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %new_mode.addr, metadata !13721, metadata !DIExpression()), !dbg !13722
  store i32 %mentioned, i32* %mentioned.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %mentioned.addr, metadata !13723, metadata !DIExpression()), !dbg !13724
  call void @llvm.dbg.declare(metadata %struct.mode_change** %p, metadata !13725, metadata !DIExpression()), !dbg !13726
  %call = call noalias i8* @xmalloc(i64 32), !dbg !13727
  %0 = bitcast i8* %call to %struct.mode_change*, !dbg !13727
  store %struct.mode_change* %0, %struct.mode_change** %p, align 8, !dbg !13726, !tbaa !2648
  %1 = load %struct.mode_change*, %struct.mode_change** %p, align 8, !dbg !13728, !tbaa !2648
  %op = getelementptr inbounds %struct.mode_change, %struct.mode_change* %1, i32 0, i32 0, !dbg !13729, !ctir !1757
  store i8 61, i8* %op, align 4, !dbg !13730, !tbaa !13642, !ctir !10
  %2 = load %struct.mode_change*, %struct.mode_change** %p, align 8, !dbg !13731, !tbaa !2648
  %flag = getelementptr inbounds %struct.mode_change, %struct.mode_change* %2, i32 0, i32 1, !dbg !13732, !ctir !1757
  store i8 1, i8* %flag, align 1, !dbg !13733, !tbaa !13648, !ctir !10
  %3 = load %struct.mode_change*, %struct.mode_change** %p, align 8, !dbg !13734, !tbaa !2648
  %affected = getelementptr inbounds %struct.mode_change, %struct.mode_change* %3, i32 0, i32 2, !dbg !13735, !ctir !1757
  store i32 4095, i32* %affected, align 4, !dbg !13736, !tbaa !13653, !ctir !139
  %4 = load i32, i32* %new_mode.addr, align 4, !dbg !13737, !tbaa !2635
  %5 = load %struct.mode_change*, %struct.mode_change** %p, align 8, !dbg !13738, !tbaa !2648
  %value = getelementptr inbounds %struct.mode_change, %struct.mode_change* %5, i32 0, i32 3, !dbg !13739, !ctir !1757
  store i32 %4, i32* %value, align 4, !dbg !13740, !tbaa !13658, !ctir !139
  %6 = load i32, i32* %mentioned.addr, align 4, !dbg !13741, !tbaa !2635
  %7 = load %struct.mode_change*, %struct.mode_change** %p, align 8, !dbg !13742, !tbaa !2648
  %mentioned1 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %7, i32 0, i32 4, !dbg !13743, !ctir !1757
  store i32 %6, i32* %mentioned1, align 4, !dbg !13744, !tbaa !13669, !ctir !139
  %8 = load %struct.mode_change*, %struct.mode_change** %p, align 8, !dbg !13745, !tbaa !2648
  %arrayidx = getelementptr inbounds %struct.mode_change, %struct.mode_change* %8, i64 1, !dbg !13745, !ctir !1756
  %flag2 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %arrayidx, i32 0, i32 1, !dbg !13746, !ctir !1757
  store i8 0, i8* %flag2, align 1, !dbg !13747, !tbaa !13648, !ctir !10
  %9 = load %struct.mode_change*, %struct.mode_change** %p, align 8, !dbg !13748, !tbaa !2648
  ret %struct.mode_change* %9, !dbg !13749
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.mode_change* @mode_create_from_ref(i8* %ref_file) #4 !dbg !13750 !ctir !1754 {
entry:
  %retval = alloca %struct.mode_change*, align 8
  %ref_file.addr = alloca i8*, align 8
  %ref_stats = alloca %struct.stat, align 8, !ctir !13751
  store i8* %ref_file, i8** %ref_file.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %ref_file.addr, metadata !13772, metadata !DIExpression()), !dbg !13773
  call void @llvm.dbg.declare(metadata %struct.stat* %ref_stats, metadata !13774, metadata !DIExpression()), !dbg !13775
  %0 = load i8*, i8** %ref_file.addr, align 8, !dbg !13776, !tbaa !2648
  %call = call i32 @stat(i8* %0, %struct.stat* %ref_stats) #9, !dbg !13778
  %cmp = icmp ne i32 %call, 0, !dbg !13779
  br i1 %cmp, label %if.then, label %if.end, !dbg !13780

if.then:                                          ; preds = %entry
  store %struct.mode_change* null, %struct.mode_change** %retval, align 8, !dbg !13781
  br label %return, !dbg !13781

if.end:                                           ; preds = %entry
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %ref_stats, i32 0, i32 3, !dbg !13782, !ctir !13751
  %1 = load i32, i32* %st_mode, align 8, !dbg !13782, !tbaa !2914, !ctir !140
  %call1 = call %struct.mode_change* @make_node_op_equals(i32 %1, i32 4095), !dbg !13783
  store %struct.mode_change* %call1, %struct.mode_change** %retval, align 8, !dbg !13784
  br label %return, !dbg !13784

return:                                           ; preds = %if.end, %if.then
  %2 = load %struct.mode_change*, %struct.mode_change** %retval, align 8, !dbg !13785
  ret %struct.mode_change* %2, !dbg !13785
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mode_adjust(i32 %oldmode, i1 zeroext %dir, i32 %umask_value, %struct.mode_change* %changes, i32* %pmode_bits) #4 !dbg !13786 !ctir !1765 {
entry:
  %oldmode.addr = alloca i32, align 4
  %dir.addr = alloca i8, align 1
  %umask_value.addr = alloca i32, align 4
  %changes.addr = alloca %struct.mode_change*, align 8
  %pmode_bits.addr = alloca i32*, align 8
  %newmode = alloca i32, align 4, !ctir !139
  %mode_bits = alloca i32, align 4, !ctir !139
  %affected = alloca i32, align 4, !ctir !139
  %omit_change = alloca i32, align 4, !ctir !139
  %value = alloca i32, align 4, !ctir !139
  %preserved = alloca i32, align 4, !ctir !139
  store i32 %oldmode, i32* %oldmode.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %oldmode.addr, metadata !13787, metadata !DIExpression()), !dbg !13788
  %frombool = zext i1 %dir to i8
  store i8 %frombool, i8* %dir.addr, align 1, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %dir.addr, metadata !13789, metadata !DIExpression()), !dbg !13790
  store i32 %umask_value, i32* %umask_value.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %umask_value.addr, metadata !13791, metadata !DIExpression()), !dbg !13792
  store %struct.mode_change* %changes, %struct.mode_change** %changes.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.mode_change** %changes.addr, metadata !13793, metadata !DIExpression()), !dbg !13794
  store i32* %pmode_bits, i32** %pmode_bits.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i32** %pmode_bits.addr, metadata !13795, metadata !DIExpression()), !dbg !13796
  call void @llvm.dbg.declare(metadata i32* %newmode, metadata !13797, metadata !DIExpression()), !dbg !13798
  %0 = load i32, i32* %oldmode.addr, align 4, !dbg !13799, !tbaa !2635
  %and = and i32 %0, 4095, !dbg !13800
  store i32 %and, i32* %newmode, align 4, !dbg !13798, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %mode_bits, metadata !13801, metadata !DIExpression()), !dbg !13802
  store i32 0, i32* %mode_bits, align 4, !dbg !13802, !tbaa !2635
  br label %for.cond, !dbg !13803

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.mode_change*, %struct.mode_change** %changes.addr, align 8, !dbg !13804, !tbaa !2648
  %flag = getelementptr inbounds %struct.mode_change, %struct.mode_change* %1, i32 0, i32 1, !dbg !13807, !ctir !1768
  %2 = load i8, i8* %flag, align 1, !dbg !13807, !tbaa !13648, !ctir !10
  %conv = sext i8 %2 to i32, !dbg !13804
  %cmp = icmp ne i32 %conv, 0, !dbg !13808
  br i1 %cmp, label %for.body, label %for.end, !dbg !13809

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %affected, metadata !13810, metadata !DIExpression()), !dbg !13812
  %3 = load %struct.mode_change*, %struct.mode_change** %changes.addr, align 8, !dbg !13813, !tbaa !2648
  %affected2 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %3, i32 0, i32 2, !dbg !13814, !ctir !1768
  %4 = load i32, i32* %affected2, align 4, !dbg !13814, !tbaa !13653, !ctir !139
  store i32 %4, i32* %affected, align 4, !dbg !13812, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %omit_change, metadata !13815, metadata !DIExpression()), !dbg !13816
  %5 = load i8, i8* %dir.addr, align 1, !dbg !13817, !tbaa !2742
  %tobool = trunc i8 %5 to i1, !dbg !13817
  %6 = zext i1 %tobool to i64, !dbg !13817
  %cond = select i1 %tobool, i32 3072, i32 0, !dbg !13817
  %7 = load %struct.mode_change*, %struct.mode_change** %changes.addr, align 8, !dbg !13818, !tbaa !2648
  %mentioned = getelementptr inbounds %struct.mode_change, %struct.mode_change* %7, i32 0, i32 4, !dbg !13819, !ctir !1768
  %8 = load i32, i32* %mentioned, align 4, !dbg !13819, !tbaa !13669, !ctir !139
  %neg = xor i32 %8, -1, !dbg !13820
  %and4 = and i32 %cond, %neg, !dbg !13821
  store i32 %and4, i32* %omit_change, align 4, !dbg !13816, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %value, metadata !13822, metadata !DIExpression()), !dbg !13823
  %9 = load %struct.mode_change*, %struct.mode_change** %changes.addr, align 8, !dbg !13824, !tbaa !2648
  %value5 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %9, i32 0, i32 3, !dbg !13825, !ctir !1768
  %10 = load i32, i32* %value5, align 4, !dbg !13825, !tbaa !13658, !ctir !139
  store i32 %10, i32* %value, align 4, !dbg !13823, !tbaa !2635
  %11 = load %struct.mode_change*, %struct.mode_change** %changes.addr, align 8, !dbg !13826, !tbaa !2648
  %flag6 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %11, i32 0, i32 1, !dbg !13827, !ctir !1768
  %12 = load i8, i8* %flag6, align 1, !dbg !13827, !tbaa !13648, !ctir !10
  %conv7 = sext i8 %12 to i32, !dbg !13826
  switch i32 %conv7, label %sw.epilog [
    i32 1, label %sw.bb
    i32 3, label %sw.bb8
    i32 2, label %sw.bb21
  ], !dbg !13828

sw.bb:                                            ; preds = %for.body
  br label %sw.epilog, !dbg !13829

sw.bb8:                                           ; preds = %for.body
  %13 = load i32, i32* %newmode, align 4, !dbg !13831, !tbaa !2635
  %14 = load i32, i32* %value, align 4, !dbg !13832, !tbaa !2635
  %and9 = and i32 %14, %13, !dbg !13832
  store i32 %and9, i32* %value, align 4, !dbg !13832, !tbaa !2635
  %15 = load i32, i32* %value, align 4, !dbg !13833, !tbaa !2635
  %and10 = and i32 %15, 292, !dbg !13834
  %tobool11 = icmp ne i32 %and10, 0, !dbg !13833
  %16 = zext i1 %tobool11 to i64, !dbg !13833
  %cond12 = select i1 %tobool11, i32 292, i32 0, !dbg !13833
  %17 = load i32, i32* %value, align 4, !dbg !13835, !tbaa !2635
  %and13 = and i32 %17, 146, !dbg !13836
  %tobool14 = icmp ne i32 %and13, 0, !dbg !13835
  %18 = zext i1 %tobool14 to i64, !dbg !13835
  %cond15 = select i1 %tobool14, i32 146, i32 0, !dbg !13835
  %or = or i32 %cond12, %cond15, !dbg !13837
  %19 = load i32, i32* %value, align 4, !dbg !13838, !tbaa !2635
  %and16 = and i32 %19, 73, !dbg !13839
  %tobool17 = icmp ne i32 %and16, 0, !dbg !13838
  %20 = zext i1 %tobool17 to i64, !dbg !13838
  %cond18 = select i1 %tobool17, i32 73, i32 0, !dbg !13838
  %or19 = or i32 %or, %cond18, !dbg !13840
  %21 = load i32, i32* %value, align 4, !dbg !13841, !tbaa !2635
  %or20 = or i32 %21, %or19, !dbg !13841
  store i32 %or20, i32* %value, align 4, !dbg !13841, !tbaa !2635
  br label %sw.epilog, !dbg !13842

sw.bb21:                                          ; preds = %for.body
  %22 = load i32, i32* %newmode, align 4, !dbg !13843, !tbaa !2635
  %and22 = and i32 %22, 73, !dbg !13845
  %23 = load i8, i8* %dir.addr, align 1, !dbg !13846, !tbaa !2742
  %tobool23 = trunc i8 %23 to i1, !dbg !13846
  %conv24 = zext i1 %tobool23 to i32, !dbg !13846
  %or25 = or i32 %and22, %conv24, !dbg !13847
  %tobool26 = icmp ne i32 %or25, 0, !dbg !13847
  br i1 %tobool26, label %if.then, label %if.end, !dbg !13848

if.then:                                          ; preds = %sw.bb21
  %24 = load i32, i32* %value, align 4, !dbg !13849, !tbaa !2635
  %or27 = or i32 %24, 73, !dbg !13849
  store i32 %or27, i32* %value, align 4, !dbg !13849, !tbaa !2635
  br label %if.end, !dbg !13850

if.end:                                           ; preds = %if.then, %sw.bb21
  br label %sw.epilog, !dbg !13851

sw.epilog:                                        ; preds = %for.body, %if.end, %sw.bb8, %sw.bb
  %25 = load i32, i32* %affected, align 4, !dbg !13852, !tbaa !2635
  %tobool28 = icmp ne i32 %25, 0, !dbg !13852
  br i1 %tobool28, label %cond.true, label %cond.false, !dbg !13852

cond.true:                                        ; preds = %sw.epilog
  %26 = load i32, i32* %affected, align 4, !dbg !13853, !tbaa !2635
  br label %cond.end, !dbg !13852

cond.false:                                       ; preds = %sw.epilog
  %27 = load i32, i32* %umask_value.addr, align 4, !dbg !13854, !tbaa !2635
  %neg29 = xor i32 %27, -1, !dbg !13855
  br label %cond.end, !dbg !13852

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond30 = phi i32 [ %26, %cond.true ], [ %neg29, %cond.false ], !dbg !13852
  %28 = load i32, i32* %omit_change, align 4, !dbg !13856, !tbaa !2635
  %neg31 = xor i32 %28, -1, !dbg !13857
  %and32 = and i32 %cond30, %neg31, !dbg !13858
  %29 = load i32, i32* %value, align 4, !dbg !13859, !tbaa !2635
  %and33 = and i32 %29, %and32, !dbg !13859
  store i32 %and33, i32* %value, align 4, !dbg !13859, !tbaa !2635
  %30 = load %struct.mode_change*, %struct.mode_change** %changes.addr, align 8, !dbg !13860, !tbaa !2648
  %op = getelementptr inbounds %struct.mode_change, %struct.mode_change* %30, i32 0, i32 0, !dbg !13861, !ctir !1768
  %31 = load i8, i8* %op, align 4, !dbg !13861, !tbaa !13642, !ctir !10
  %conv34 = sext i8 %31 to i32, !dbg !13860
  switch i32 %conv34, label %sw.epilog55 [
    i32 61, label %sw.bb35
    i32 43, label %sw.bb48
    i32 45, label %sw.bb51
  ], !dbg !13862

sw.bb35:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i32* %preserved, metadata !13863, metadata !DIExpression()), !dbg !13866
  %32 = load i32, i32* %affected, align 4, !dbg !13867, !tbaa !2635
  %tobool36 = icmp ne i32 %32, 0, !dbg !13867
  br i1 %tobool36, label %cond.true37, label %cond.false39, !dbg !13867

cond.true37:                                      ; preds = %sw.bb35
  %33 = load i32, i32* %affected, align 4, !dbg !13868, !tbaa !2635
  %neg38 = xor i32 %33, -1, !dbg !13869
  br label %cond.end40, !dbg !13867

cond.false39:                                     ; preds = %sw.bb35
  br label %cond.end40, !dbg !13867

cond.end40:                                       ; preds = %cond.false39, %cond.true37
  %cond41 = phi i32 [ %neg38, %cond.true37 ], [ 0, %cond.false39 ], !dbg !13867
  %34 = load i32, i32* %omit_change, align 4, !dbg !13870, !tbaa !2635
  %or42 = or i32 %cond41, %34, !dbg !13871
  store i32 %or42, i32* %preserved, align 4, !dbg !13866, !tbaa !2635
  %35 = load i32, i32* %preserved, align 4, !dbg !13872, !tbaa !2635
  %neg43 = xor i32 %35, -1, !dbg !13873
  %and44 = and i32 4095, %neg43, !dbg !13874
  %36 = load i32, i32* %mode_bits, align 4, !dbg !13875, !tbaa !2635
  %or45 = or i32 %36, %and44, !dbg !13875
  store i32 %or45, i32* %mode_bits, align 4, !dbg !13875, !tbaa !2635
  %37 = load i32, i32* %newmode, align 4, !dbg !13876, !tbaa !2635
  %38 = load i32, i32* %preserved, align 4, !dbg !13877, !tbaa !2635
  %and46 = and i32 %37, %38, !dbg !13878
  %39 = load i32, i32* %value, align 4, !dbg !13879, !tbaa !2635
  %or47 = or i32 %and46, %39, !dbg !13880
  store i32 %or47, i32* %newmode, align 4, !dbg !13881, !tbaa !2635
  br label %sw.epilog55, !dbg !13882

sw.bb48:                                          ; preds = %cond.end
  %40 = load i32, i32* %value, align 4, !dbg !13883, !tbaa !2635
  %41 = load i32, i32* %mode_bits, align 4, !dbg !13884, !tbaa !2635
  %or49 = or i32 %41, %40, !dbg !13884
  store i32 %or49, i32* %mode_bits, align 4, !dbg !13884, !tbaa !2635
  %42 = load i32, i32* %value, align 4, !dbg !13885, !tbaa !2635
  %43 = load i32, i32* %newmode, align 4, !dbg !13886, !tbaa !2635
  %or50 = or i32 %43, %42, !dbg !13886
  store i32 %or50, i32* %newmode, align 4, !dbg !13886, !tbaa !2635
  br label %sw.epilog55, !dbg !13887

sw.bb51:                                          ; preds = %cond.end
  %44 = load i32, i32* %value, align 4, !dbg !13888, !tbaa !2635
  %45 = load i32, i32* %mode_bits, align 4, !dbg !13889, !tbaa !2635
  %or52 = or i32 %45, %44, !dbg !13889
  store i32 %or52, i32* %mode_bits, align 4, !dbg !13889, !tbaa !2635
  %46 = load i32, i32* %value, align 4, !dbg !13890, !tbaa !2635
  %neg53 = xor i32 %46, -1, !dbg !13891
  %47 = load i32, i32* %newmode, align 4, !dbg !13892, !tbaa !2635
  %and54 = and i32 %47, %neg53, !dbg !13892
  store i32 %and54, i32* %newmode, align 4, !dbg !13892, !tbaa !2635
  br label %sw.epilog55, !dbg !13893

sw.epilog55:                                      ; preds = %cond.end, %sw.bb51, %sw.bb48, %cond.end40
  br label %for.inc, !dbg !13894

for.inc:                                          ; preds = %sw.epilog55
  %48 = load %struct.mode_change*, %struct.mode_change** %changes.addr, align 8, !dbg !13895, !tbaa !2648
  %incdec.ptr = getelementptr inbounds %struct.mode_change, %struct.mode_change* %48, i32 1, !dbg !13895
  store %struct.mode_change* %incdec.ptr, %struct.mode_change** %changes.addr, align 8, !dbg !13895, !tbaa !2648
  br label %for.cond, !dbg !13896, !llvm.loop !13897

for.end:                                          ; preds = %for.cond
  %49 = load i32*, i32** %pmode_bits.addr, align 8, !dbg !13899, !tbaa !2648
  %tobool56 = icmp ne i32* %49, null, !dbg !13899
  br i1 %tobool56, label %if.then57, label %if.end58, !dbg !13901

if.then57:                                        ; preds = %for.end
  %50 = load i32, i32* %mode_bits, align 4, !dbg !13902, !tbaa !2635
  %51 = load i32*, i32** %pmode_bits.addr, align 8, !dbg !13903, !tbaa !2648
  store i32 %50, i32* %51, align 4, !dbg !13904, !tbaa !2635, !ctir !139
  br label %if.end58, !dbg !13905

if.end58:                                         ; preds = %if.then57, %for.end
  %52 = load i32, i32* %newmode, align 4, !dbg !13906, !tbaa !2635
  ret i32 %52, !dbg !13907
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.__dirstream* @opendirat(i32 %dir_fd, i8* %dir, i32 %extra_flags, i32* %pnew_fd) #4 !dbg !13908 !ctir !1777 {
entry:
  %retval = alloca %struct.__dirstream*, align 8
  %dir_fd.addr = alloca i32, align 4
  %dir.addr = alloca i8*, align 8
  %extra_flags.addr = alloca i32, align 4
  %pnew_fd.addr = alloca i32*, align 8
  %open_flags = alloca i32, align 4, !ctir !7
  %new_fd = alloca i32, align 4, !ctir !7
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !695
  %fdopendir_errno = alloca i32, align 4, !ctir !7
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !13910, metadata !DIExpression()), !dbg !13911
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !13912, metadata !DIExpression()), !dbg !13913
  store i32 %extra_flags, i32* %extra_flags.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %extra_flags.addr, metadata !13914, metadata !DIExpression()), !dbg !13915
  store i32* %pnew_fd, i32** %pnew_fd.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i32** %pnew_fd.addr, metadata !13916, metadata !DIExpression()), !dbg !13917
  call void @llvm.dbg.declare(metadata i32* %open_flags, metadata !13918, metadata !DIExpression()), !dbg !13919
  %0 = load i32, i32* %extra_flags.addr, align 4, !dbg !13920, !tbaa !2635
  %or = or i32 592128, %0, !dbg !13921
  store i32 %or, i32* %open_flags, align 4, !dbg !13919, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %new_fd, metadata !13922, metadata !DIExpression()), !dbg !13923
  %1 = load i32, i32* %dir_fd.addr, align 4, !dbg !13924, !tbaa !2635
  %2 = load i8*, i8** %dir.addr, align 8, !dbg !13925, !tbaa !2648
  %3 = load i32, i32* %open_flags, align 4, !dbg !13926, !tbaa !2635
  %call = call i32 (i32, i8*, i32, ...) @openat_safer(i32 %1, i8* %2, i32 %3), !dbg !13927
  store i32 %call, i32* %new_fd, align 4, !dbg !13923, !tbaa !2635
  %4 = load i32, i32* %new_fd, align 4, !dbg !13928, !tbaa !2635
  %cmp = icmp slt i32 %4, 0, !dbg !13930
  br i1 %cmp, label %if.then, label %if.end, !dbg !13931

if.then:                                          ; preds = %entry
  store %struct.__dirstream* null, %struct.__dirstream** %retval, align 8, !dbg !13932
  br label %return, !dbg !13932

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !13933, metadata !DIExpression()), !dbg !13934
  %5 = load i32, i32* %new_fd, align 4, !dbg !13935, !tbaa !2635
  %call1 = call %struct.__dirstream* @fdopendir(i32 %5), !dbg !13936
  store %struct.__dirstream* %call1, %struct.__dirstream** %dirp, align 8, !dbg !13934, !tbaa !2648
  %6 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !13937, !tbaa !2648
  %tobool = icmp ne %struct.__dirstream* %6, null, !dbg !13937
  br i1 %tobool, label %if.then2, label %if.else, !dbg !13939

if.then2:                                         ; preds = %if.end
  %7 = load i32, i32* %new_fd, align 4, !dbg !13940, !tbaa !2635
  %8 = load i32*, i32** %pnew_fd.addr, align 8, !dbg !13941, !tbaa !2648
  store i32 %7, i32* %8, align 4, !dbg !13942, !tbaa !2635, !ctir !7
  br label %if.end6, !dbg !13943

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %fdopendir_errno, metadata !13944, metadata !DIExpression()), !dbg !13946
  %call3 = call i32* @__errno_location() #16, !dbg !13947
  %9 = load i32, i32* %call3, align 4, !dbg !13947, !tbaa !2635, !ctir !7
  store i32 %9, i32* %fdopendir_errno, align 4, !dbg !13946, !tbaa !2635
  %10 = load i32, i32* %new_fd, align 4, !dbg !13948, !tbaa !2635
  %call4 = call i32 @close(i32 %10), !dbg !13949
  %11 = load i32, i32* %fdopendir_errno, align 4, !dbg !13950, !tbaa !2635
  %call5 = call i32* @__errno_location() #16, !dbg !13951
  store i32 %11, i32* %call5, align 4, !dbg !13952, !tbaa !2635, !ctir !7
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then2
  %12 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !13953, !tbaa !2648
  store %struct.__dirstream* %12, %struct.__dirstream** %retval, align 8, !dbg !13954
  br label %return, !dbg !13954

return:                                           ; preds = %if.end6, %if.then
  %13 = load %struct.__dirstream*, %struct.__dirstream** %retval, align 8, !dbg !13955
  ret %struct.__dirstream* %13, !dbg !13955
}

declare dso_local %struct.__dirstream* @fdopendir(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_program_name(i8* %argv0) #4 !dbg !13956 !ctir !202 {
entry:
  %argv0.addr = alloca i8*, align 8
  %slash = alloca i8*, align 8, !ctir !180
  %base = alloca i8*, align 8, !ctir !180
  store i8* %argv0, i8** %argv0.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %argv0.addr, metadata !13957, metadata !DIExpression()), !dbg !13958
  call void @llvm.dbg.declare(metadata i8** %slash, metadata !13959, metadata !DIExpression()), !dbg !13960
  call void @llvm.dbg.declare(metadata i8** %base, metadata !13961, metadata !DIExpression()), !dbg !13962
  %0 = load i8*, i8** %argv0.addr, align 8, !dbg !13963, !tbaa !2648
  %cmp = icmp eq i8* %0, null, !dbg !13965
  br i1 %cmp, label %if.then, label %if.end, !dbg !13966

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !13967, !tbaa !2648
  %call = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.311, i64 0, i64 0), %struct._IO_FILE* %1), !dbg !13969
  call void @abort() #13, !dbg !13970
  unreachable, !dbg !13970

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %argv0.addr, align 8, !dbg !13971, !tbaa !2648
  %call1 = call i8* @strrchr(i8* %2, i32 47) #14, !dbg !13972
  store i8* %call1, i8** %slash, align 8, !dbg !13973, !tbaa !2648
  %3 = load i8*, i8** %slash, align 8, !dbg !13974, !tbaa !2648
  %cmp2 = icmp ne i8* %3, null, !dbg !13975
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !13974

cond.true:                                        ; preds = %if.end
  %4 = load i8*, i8** %slash, align 8, !dbg !13976, !tbaa !2648
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 1, !dbg !13977
  br label %cond.end, !dbg !13974

cond.false:                                       ; preds = %if.end
  %5 = load i8*, i8** %argv0.addr, align 8, !dbg !13978, !tbaa !2648
  br label %cond.end, !dbg !13974

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ %5, %cond.false ], !dbg !13974
  store i8* %cond, i8** %base, align 8, !dbg !13979, !tbaa !2648
  %6 = load i8*, i8** %base, align 8, !dbg !13980, !tbaa !2648
  %7 = load i8*, i8** %argv0.addr, align 8, !dbg !13982, !tbaa !2648
  %sub.ptr.lhs.cast = ptrtoint i8* %6 to i64, !dbg !13983
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !13983
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !13983
  %cmp3 = icmp sge i64 %sub.ptr.sub, 7, !dbg !13984
  br i1 %cmp3, label %land.lhs.true, label %if.end13, !dbg !13985

land.lhs.true:                                    ; preds = %cond.end
  %8 = load i8*, i8** %base, align 8, !dbg !13986, !tbaa !2648
  %add.ptr4 = getelementptr inbounds i8, i8* %8, i64 -7, !dbg !13987
  %call5 = call i32 @strncmp(i8* %add.ptr4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.312, i64 0, i64 0), i64 7) #14, !dbg !13988
  %cmp6 = icmp eq i32 %call5, 0, !dbg !13989
  br i1 %cmp6, label %if.then7, label %if.end13, !dbg !13990

if.then7:                                         ; preds = %land.lhs.true
  %9 = load i8*, i8** %base, align 8, !dbg !13991, !tbaa !2648
  store i8* %9, i8** %argv0.addr, align 8, !dbg !13993, !tbaa !2648
  %10 = load i8*, i8** %base, align 8, !dbg !13994, !tbaa !2648
  %call8 = call i32 @strncmp(i8* %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.313, i64 0, i64 0), i64 3) #14, !dbg !13996
  %cmp9 = icmp eq i32 %call8, 0, !dbg !13997
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !13998

if.then10:                                        ; preds = %if.then7
  %11 = load i8*, i8** %base, align 8, !dbg !13999, !tbaa !2648
  %add.ptr11 = getelementptr inbounds i8, i8* %11, i64 3, !dbg !14001
  store i8* %add.ptr11, i8** %argv0.addr, align 8, !dbg !14002, !tbaa !2648
  %12 = load i8*, i8** %argv0.addr, align 8, !dbg !14003, !tbaa !2648
  store i8* %12, i8** @program_invocation_short_name, align 8, !dbg !14004, !tbaa !2648
  br label %if.end12, !dbg !14005

if.end12:                                         ; preds = %if.then10, %if.then7
  br label %if.end13, !dbg !14006

if.end13:                                         ; preds = %if.end12, %land.lhs.true, %cond.end
  %13 = load i8*, i8** %argv0.addr, align 8, !dbg !14007, !tbaa !2648
  store i8* %13, i8** @program_name, align 8, !dbg !14008, !tbaa !2648
  %14 = load i8*, i8** %argv0.addr, align 8, !dbg !14009, !tbaa !2648
  store i8* %14, i8** @program_invocation_name, align 8, !dbg !14010, !tbaa !2648
  ret void, !dbg !14011
}

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) #3

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @qcopy_acl(i8* %src_name, i32 %source_desc, i8* %dst_name, i32 %dest_desc, i32 %mode) #4 !dbg !14012 !ctir !1516 {
entry:
  %retval = alloca i32, align 4
  %src_name.addr = alloca i8*, align 8
  %source_desc.addr = alloca i32, align 4
  %dst_name.addr = alloca i8*, align 8
  %dest_desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ctx = alloca %struct.permission_context, align 8, !ctir !14014
  %ret = alloca i32, align 4, !ctir !7
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !14020, metadata !DIExpression()), !dbg !14021
  store i32 %source_desc, i32* %source_desc.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %source_desc.addr, metadata !14022, metadata !DIExpression()), !dbg !14023
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !14024, metadata !DIExpression()), !dbg !14025
  store i32 %dest_desc, i32* %dest_desc.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !14026, metadata !DIExpression()), !dbg !14027
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !14028, metadata !DIExpression()), !dbg !14029
  call void @llvm.dbg.declare(metadata %struct.permission_context* %ctx, metadata !14030, metadata !DIExpression()), !dbg !14031
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !14032, metadata !DIExpression()), !dbg !14033
  %0 = load i8*, i8** %src_name.addr, align 8, !dbg !14034, !tbaa !2648
  %1 = load i32, i32* %source_desc.addr, align 4, !dbg !14035, !tbaa !2635
  %2 = load i32, i32* %mode.addr, align 4, !dbg !14036, !tbaa !2635
  %call = call i32 @get_permissions(i8* %0, i32 %1, i32 %2, %struct.permission_context* %ctx), !dbg !14037
  store i32 %call, i32* %ret, align 4, !dbg !14038, !tbaa !2635
  %3 = load i32, i32* %ret, align 4, !dbg !14039, !tbaa !2635
  %cmp = icmp ne i32 %3, 0, !dbg !14041
  br i1 %cmp, label %if.then, label %if.end, !dbg !14042

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval, align 4, !dbg !14043
  br label %return, !dbg !14043

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %dst_name.addr, align 8, !dbg !14044, !tbaa !2648
  %5 = load i32, i32* %dest_desc.addr, align 4, !dbg !14045, !tbaa !2635
  %call1 = call i32 @set_permissions(%struct.permission_context* %ctx, i8* %4, i32 %5), !dbg !14046
  store i32 %call1, i32* %ret, align 4, !dbg !14047, !tbaa !2635
  call void @free_permission_context(%struct.permission_context* %ctx), !dbg !14048
  %6 = load i32, i32* %ret, align 4, !dbg !14049, !tbaa !2635
  store i32 %6, i32* %retval, align 4, !dbg !14050
  br label %return, !dbg !14050

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !14051
  ret i32 %7, !dbg !14051
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @qset_acl(i8* %name, i32 %desc, i32 %mode) #4 !dbg !14052 !ctir !1521 {
entry:
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ctx = alloca %struct.permission_context, align 8, !ctir !14054
  %ret = alloca i32, align 4, !ctir !7
  store i8* %name, i8** %name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !14060, metadata !DIExpression()), !dbg !14061
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !14062, metadata !DIExpression()), !dbg !14063
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !14064, metadata !DIExpression()), !dbg !14065
  call void @llvm.dbg.declare(metadata %struct.permission_context* %ctx, metadata !14066, metadata !DIExpression()), !dbg !14067
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !14068, metadata !DIExpression()), !dbg !14069
  %0 = bitcast %struct.permission_context* %ctx to i8*, !dbg !14070
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 32, i1 false), !dbg !14070
  %1 = load i32, i32* %mode.addr, align 4, !dbg !14071, !tbaa !2635
  %mode1 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %ctx, i32 0, i32 0, !dbg !14072, !ctir !14054
  store i32 %1, i32* %mode1, align 8, !dbg !14073, !tbaa !14074, !ctir !139
  %2 = load i8*, i8** %name.addr, align 8, !dbg !14076, !tbaa !2648
  %3 = load i32, i32* %desc.addr, align 4, !dbg !14077, !tbaa !2635
  %call = call i32 @set_permissions(%struct.permission_context* %ctx, i8* %2, i32 %3), !dbg !14078
  store i32 %call, i32* %ret, align 4, !dbg !14079, !tbaa !2635
  call void @free_permission_context(%struct.permission_context* %ctx), !dbg !14080
  %4 = load i32, i32* %ret, align 4, !dbg !14081, !tbaa !2635
  ret i32 %4, !dbg !14082
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.quoting_options* @clone_quoting_options(%struct.quoting_options* %o) #4 !dbg !14083 !ctir !1036 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %e = alloca i32, align 4, !ctir !7
  %p = alloca %struct.quoting_options*, align 8, !ctir !1038
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14084, metadata !DIExpression()), !dbg !14085
  call void @llvm.dbg.declare(metadata i32* %e, metadata !14086, metadata !DIExpression()), !dbg !14087
  %call = call i32* @__errno_location() #16, !dbg !14088
  %0 = load i32, i32* %call, align 4, !dbg !14088, !tbaa !2635, !ctir !7
  store i32 %0, i32* %e, align 4, !dbg !14087, !tbaa !2635
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !14089, metadata !DIExpression()), !dbg !14090
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14091, !tbaa !2648
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !14091
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14091

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14092, !tbaa !2648
  br label %cond.end, !dbg !14091

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14091

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !14091
  %3 = bitcast %struct.quoting_options* %cond to i8*, !dbg !14091
  %call1 = call i8* @xmemdup(i8* %3, i64 56), !dbg !14093
  %4 = bitcast i8* %call1 to %struct.quoting_options*, !dbg !14093
  store %struct.quoting_options* %4, %struct.quoting_options** %p, align 8, !dbg !14090, !tbaa !2648
  %5 = load i32, i32* %e, align 4, !dbg !14094, !tbaa !2635
  %call2 = call i32* @__errno_location() #16, !dbg !14095
  store i32 %5, i32* %call2, align 4, !dbg !14096, !tbaa !2635, !ctir !7
  %6 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14097, !tbaa !2648
  ret %struct.quoting_options* %6, !dbg !14098
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_quoting_style(%struct.quoting_options* %o) #4 !dbg !14099 !ctir !1048 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14100, metadata !DIExpression()), !dbg !14101
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14102, !tbaa !2648
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !14102
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14102

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14103, !tbaa !2648
  br label %cond.end, !dbg !14102

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14102

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !14102
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 0, !dbg !14104, !ctir !1051
  %2 = load i32, i32* %style, align 8, !dbg !14104, !tbaa !14105, !ctir !1014
  ret i32 %2, !dbg !14107
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_quoting_style(%struct.quoting_options* %o, i32 %s) #4 !dbg !14108 !ctir !1052 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %s.addr = alloca i32, align 4
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14109, metadata !DIExpression()), !dbg !14110
  store i32 %s, i32* %s.addr, align 4, !tbaa !3295
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !14111, metadata !DIExpression()), !dbg !14112
  %0 = load i32, i32* %s.addr, align 4, !dbg !14113, !tbaa !3295
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14114, !tbaa !2648
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !14114
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14114

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14115, !tbaa !2648
  br label %cond.end, !dbg !14114

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14114

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !14114
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 0, !dbg !14116, !ctir !1039
  store i32 %0, i32* %style, align 8, !dbg !14117, !tbaa !14105, !ctir !1014
  ret void, !dbg !14118
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_char_quoting(%struct.quoting_options* %o, i8 signext %c, i32 %i) #4 !dbg !14119 !ctir !1054 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %c.addr = alloca i8, align 1
  %i.addr = alloca i32, align 4
  %uc = alloca i8, align 1, !ctir !556
  %p = alloca i32*, align 8, !ctir !1056
  %shift = alloca i32, align 4, !ctir !7
  %r = alloca i32, align 4, !ctir !7
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14120, metadata !DIExpression()), !dbg !14121
  store i8 %c, i8* %c.addr, align 1, !tbaa !3295
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !14122, metadata !DIExpression()), !dbg !14123
  store i32 %i, i32* %i.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !14124, metadata !DIExpression()), !dbg !14125
  call void @llvm.dbg.declare(metadata i8* %uc, metadata !14126, metadata !DIExpression()), !dbg !14127
  %0 = load i8, i8* %c.addr, align 1, !dbg !14128, !tbaa !3295
  store i8 %0, i8* %uc, align 1, !dbg !14127, !tbaa !3295
  call void @llvm.dbg.declare(metadata i32** %p, metadata !14129, metadata !DIExpression()), !dbg !14130
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14131, !tbaa !2648
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !14131
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14131

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14132, !tbaa !2648
  br label %cond.end, !dbg !14131

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14131

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !14131
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 2, !dbg !14133, !ctir !1039
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !14134
  %3 = load i8, i8* %uc, align 1, !dbg !14135, !tbaa !3295
  %conv = zext i8 %3 to i64, !dbg !14135
  %div = udiv i64 %conv, 32, !dbg !14136
  %add.ptr = getelementptr inbounds i32, i32* %arraydecay, i64 %div, !dbg !14137
  store i32* %add.ptr, i32** %p, align 8, !dbg !14130, !tbaa !2648
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !14138, metadata !DIExpression()), !dbg !14139
  %4 = load i8, i8* %uc, align 1, !dbg !14140, !tbaa !3295
  %conv1 = zext i8 %4 to i64, !dbg !14140
  %rem = urem i64 %conv1, 32, !dbg !14141
  %conv2 = trunc i64 %rem to i32, !dbg !14140
  store i32 %conv2, i32* %shift, align 4, !dbg !14139, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %r, metadata !14142, metadata !DIExpression()), !dbg !14143
  %5 = load i32*, i32** %p, align 8, !dbg !14144, !tbaa !2648
  %6 = load i32, i32* %5, align 4, !dbg !14145, !tbaa !2635, !ctir !70
  %7 = load i32, i32* %shift, align 4, !dbg !14146, !tbaa !2635
  %shr = lshr i32 %6, %7, !dbg !14147
  %and = and i32 %shr, 1, !dbg !14148
  store i32 %and, i32* %r, align 4, !dbg !14143, !tbaa !2635
  %8 = load i32, i32* %i.addr, align 4, !dbg !14149, !tbaa !2635
  %and3 = and i32 %8, 1, !dbg !14150
  %9 = load i32, i32* %r, align 4, !dbg !14151, !tbaa !2635
  %xor = xor i32 %and3, %9, !dbg !14152
  %10 = load i32, i32* %shift, align 4, !dbg !14153, !tbaa !2635
  %shl = shl i32 %xor, %10, !dbg !14154
  %11 = load i32*, i32** %p, align 8, !dbg !14155, !tbaa !2648
  %12 = load i32, i32* %11, align 4, !dbg !14156, !tbaa !2635, !ctir !70
  %xor4 = xor i32 %12, %shl, !dbg !14156
  store i32 %xor4, i32* %11, align 4, !dbg !14156, !tbaa !2635, !ctir !70
  %13 = load i32, i32* %r, align 4, !dbg !14157, !tbaa !2635
  ret i32 %13, !dbg !14158
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_quoting_flags(%struct.quoting_options* %o, i32 %i) #4 !dbg !14159 !ctir !1057 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %i.addr = alloca i32, align 4
  %r = alloca i32, align 4, !ctir !7
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14160, metadata !DIExpression()), !dbg !14161
  store i32 %i, i32* %i.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !14162, metadata !DIExpression()), !dbg !14163
  call void @llvm.dbg.declare(metadata i32* %r, metadata !14164, metadata !DIExpression()), !dbg !14165
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14166, !tbaa !2648
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !14166
  br i1 %tobool, label %if.end, label %if.then, !dbg !14168

if.then:                                          ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o.addr, align 8, !dbg !14169, !tbaa !2648
  br label %if.end, !dbg !14170

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14171, !tbaa !2648
  %flags = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %1, i32 0, i32 1, !dbg !14172, !ctir !1039
  %2 = load i32, i32* %flags, align 4, !dbg !14172, !tbaa !14173, !ctir !7
  store i32 %2, i32* %r, align 4, !dbg !14174, !tbaa !2635
  %3 = load i32, i32* %i.addr, align 4, !dbg !14175, !tbaa !2635
  %4 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14176, !tbaa !2648
  %flags1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %4, i32 0, i32 1, !dbg !14177, !ctir !1039
  store i32 %3, i32* %flags1, align 4, !dbg !14178, !tbaa !14173, !ctir !7
  %5 = load i32, i32* %r, align 4, !dbg !14179, !tbaa !2635
  ret i32 %5, !dbg !14180
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_custom_quoting(%struct.quoting_options* %o, i8* %left_quote, i8* %right_quote) #4 !dbg !14181 !ctir !1059 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14182, metadata !DIExpression()), !dbg !14183
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !14184, metadata !DIExpression()), !dbg !14185
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !14186, metadata !DIExpression()), !dbg !14187
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14188, !tbaa !2648
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !14188
  br i1 %tobool, label %if.end, label %if.then, !dbg !14190

if.then:                                          ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o.addr, align 8, !dbg !14191, !tbaa !2648
  br label %if.end, !dbg !14192

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14193, !tbaa !2648
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %1, i32 0, i32 0, !dbg !14194, !ctir !1039
  store i32 10, i32* %style, align 8, !dbg !14195, !tbaa !14105, !ctir !1014
  %2 = load i8*, i8** %left_quote.addr, align 8, !dbg !14196, !tbaa !2648
  %tobool1 = icmp ne i8* %2, null, !dbg !14196
  br i1 %tobool1, label %lor.lhs.false, label %if.then3, !dbg !14198

lor.lhs.false:                                    ; preds = %if.end
  %3 = load i8*, i8** %right_quote.addr, align 8, !dbg !14199, !tbaa !2648
  %tobool2 = icmp ne i8* %3, null, !dbg !14199
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !14200

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  call void @abort() #13, !dbg !14201
  unreachable, !dbg !14201

if.end4:                                          ; preds = %lor.lhs.false
  %4 = load i8*, i8** %left_quote.addr, align 8, !dbg !14202, !tbaa !2648
  %5 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14203, !tbaa !2648
  %left_quote5 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %5, i32 0, i32 3, !dbg !14204, !ctir !1039
  store i8* %4, i8** %left_quote5, align 8, !dbg !14205, !tbaa !14206, !ctir !180
  %6 = load i8*, i8** %right_quote.addr, align 8, !dbg !14207, !tbaa !2648
  %7 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14208, !tbaa !2648
  %right_quote6 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %7, i32 0, i32 4, !dbg !14209, !ctir !1039
  store i8* %6, i8** %right_quote6, align 8, !dbg !14210, !tbaa !14211, !ctir !180
  ret void, !dbg !14212
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @quotearg_buffer(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, %struct.quoting_options* %o) #4 !dbg !14213 !ctir !1061 {
entry:
  %buffer.addr = alloca i8*, align 8
  %buffersize.addr = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  %p = alloca %struct.quoting_options*, align 8, !ctir !1050
  %e = alloca i32, align 4, !ctir !7
  %r = alloca i64, align 8, !ctir !55
  store i8* %buffer, i8** %buffer.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !14214, metadata !DIExpression()), !dbg !14215
  store i64 %buffersize, i64* %buffersize.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %buffersize.addr, metadata !14216, metadata !DIExpression()), !dbg !14217
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14218, metadata !DIExpression()), !dbg !14219
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14220, metadata !DIExpression()), !dbg !14221
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14222, metadata !DIExpression()), !dbg !14223
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !14224, metadata !DIExpression()), !dbg !14225
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14226, !tbaa !2648
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !14226
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14226

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14227, !tbaa !2648
  br label %cond.end, !dbg !14226

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14226

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !14226
  store %struct.quoting_options* %cond, %struct.quoting_options** %p, align 8, !dbg !14225, !tbaa !2648
  call void @llvm.dbg.declare(metadata i32* %e, metadata !14228, metadata !DIExpression()), !dbg !14229
  %call = call i32* @__errno_location() #16, !dbg !14230
  %2 = load i32, i32* %call, align 4, !dbg !14230, !tbaa !2635, !ctir !7
  store i32 %2, i32* %e, align 4, !dbg !14229, !tbaa !2635
  call void @llvm.dbg.declare(metadata i64* %r, metadata !14231, metadata !DIExpression()), !dbg !14232
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !14233, !tbaa !2648
  %4 = load i64, i64* %buffersize.addr, align 8, !dbg !14234, !tbaa !3288
  %5 = load i8*, i8** %arg.addr, align 8, !dbg !14235, !tbaa !2648
  %6 = load i64, i64* %argsize.addr, align 8, !dbg !14236, !tbaa !3288
  %7 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14237, !tbaa !2648
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %7, i32 0, i32 0, !dbg !14238, !ctir !1051
  %8 = load i32, i32* %style, align 8, !dbg !14238, !tbaa !14105, !ctir !1014
  %9 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14239, !tbaa !2648
  %flags = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %9, i32 0, i32 1, !dbg !14240, !ctir !1051
  %10 = load i32, i32* %flags, align 4, !dbg !14240, !tbaa !14173, !ctir !7
  %11 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14241, !tbaa !2648
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %11, i32 0, i32 2, !dbg !14242, !ctir !1051
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !14241
  %12 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14243, !tbaa !2648
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %12, i32 0, i32 3, !dbg !14244, !ctir !1051
  %13 = load i8*, i8** %left_quote, align 8, !dbg !14244, !tbaa !14206, !ctir !180
  %14 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14245, !tbaa !2648
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %14, i32 0, i32 4, !dbg !14246, !ctir !1051
  %15 = load i8*, i8** %right_quote, align 8, !dbg !14246, !tbaa !14211, !ctir !180
  %call1 = call i64 @quotearg_buffer_restyled(i8* %3, i64 %4, i8* %5, i64 %6, i32 %8, i32 %10, i32* %arraydecay, i8* %13, i8* %15), !dbg !14247
  store i64 %call1, i64* %r, align 8, !dbg !14232, !tbaa !3288
  %16 = load i32, i32* %e, align 4, !dbg !14248, !tbaa !2635
  %call2 = call i32* @__errno_location() #16, !dbg !14249
  store i32 %16, i32* %call2, align 4, !dbg !14250, !tbaa !2635, !ctir !7
  %17 = load i64, i64* %r, align 8, !dbg !14251, !tbaa !3288
  ret i64 %17, !dbg !14252
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quotearg_buffer_restyled(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, i32 %quoting_style, i32 %flags, i32* %quote_these_too, i8* %left_quote, i8* %right_quote) #4 !dbg !14253 !ctir !1106 {
entry:
  %retval = alloca i64, align 8
  %buffer.addr = alloca i8*, align 8
  %buffersize.addr = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %quoting_style.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %quote_these_too.addr = alloca i32*, align 8
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %i = alloca i64, align 8, !ctir !55
  %len = alloca i64, align 8, !ctir !55
  %orig_buffersize = alloca i64, align 8, !ctir !55
  %quote_string = alloca i8*, align 8, !ctir !180
  %quote_string_len = alloca i64, align 8, !ctir !55
  %backslash_escapes = alloca i8, align 1, !ctir !142
  %unibyte_locale = alloca i8, align 1, !ctir !142
  %elide_outer_quotes = alloca i8, align 1, !ctir !142
  %pending_shell_escape_end = alloca i8, align 1, !ctir !142
  %encountered_single_quote = alloca i8, align 1, !ctir !142
  %all_c_and_shell_quote_compat = alloca i8, align 1, !ctir !142
  %c = alloca i8, align 1, !ctir !556
  %esc = alloca i8, align 1, !ctir !556
  %is_right_quote = alloca i8, align 1, !ctir !142
  %escaping = alloca i8, align 1, !ctir !142
  %c_and_shell_quote_compat = alloca i8, align 1, !ctir !142
  %m = alloca i64, align 8, !ctir !55
  %printable = alloca i8, align 1, !ctir !142
  %mbstate = alloca %struct.savewd, align 4, !ctir !1112
  %w = alloca i32, align 4, !ctir !1127
  %bytes = alloca i64, align 8, !ctir !55
  %j = alloca i64, align 8, !ctir !55
  %ilim = alloca i64, align 8, !ctir !55
  store i8* %buffer, i8** %buffer.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !14254, metadata !DIExpression()), !dbg !14255
  store i64 %buffersize, i64* %buffersize.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %buffersize.addr, metadata !14256, metadata !DIExpression()), !dbg !14257
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14258, metadata !DIExpression()), !dbg !14259
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14260, metadata !DIExpression()), !dbg !14261
  store i32 %quoting_style, i32* %quoting_style.addr, align 4, !tbaa !3295
  call void @llvm.dbg.declare(metadata i32* %quoting_style.addr, metadata !14262, metadata !DIExpression()), !dbg !14263
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !14264, metadata !DIExpression()), !dbg !14265
  store i32* %quote_these_too, i32** %quote_these_too.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i32** %quote_these_too.addr, metadata !14266, metadata !DIExpression()), !dbg !14267
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !14268, metadata !DIExpression()), !dbg !14269
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !14270, metadata !DIExpression()), !dbg !14271
  call void @llvm.dbg.declare(metadata i64* %i, metadata !14272, metadata !DIExpression()), !dbg !14273
  call void @llvm.dbg.declare(metadata i64* %len, metadata !14274, metadata !DIExpression()), !dbg !14275
  store i64 0, i64* %len, align 8, !dbg !14275, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %orig_buffersize, metadata !14276, metadata !DIExpression()), !dbg !14277
  store i64 0, i64* %orig_buffersize, align 8, !dbg !14277, !tbaa !3288
  call void @llvm.dbg.declare(metadata i8** %quote_string, metadata !14278, metadata !DIExpression()), !dbg !14279
  store i8* null, i8** %quote_string, align 8, !dbg !14279, !tbaa !2648
  call void @llvm.dbg.declare(metadata i64* %quote_string_len, metadata !14280, metadata !DIExpression()), !dbg !14281
  store i64 0, i64* %quote_string_len, align 8, !dbg !14281, !tbaa !3288
  call void @llvm.dbg.declare(metadata i8* %backslash_escapes, metadata !14282, metadata !DIExpression()), !dbg !14283
  store i8 0, i8* %backslash_escapes, align 1, !dbg !14283, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %unibyte_locale, metadata !14284, metadata !DIExpression()), !dbg !14285
  %call = call i64 @__ctype_get_mb_cur_max() #9, !dbg !14286
  %cmp = icmp eq i64 %call, 1, !dbg !14287
  %frombool = zext i1 %cmp to i8, !dbg !14285
  store i8 %frombool, i8* %unibyte_locale, align 1, !dbg !14285, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %elide_outer_quotes, metadata !14288, metadata !DIExpression()), !dbg !14289
  %0 = load i32, i32* %flags.addr, align 4, !dbg !14290, !tbaa !2635
  %and = and i32 %0, 2, !dbg !14291
  %cmp1 = icmp ne i32 %and, 0, !dbg !14292
  %frombool2 = zext i1 %cmp1 to i8, !dbg !14289
  store i8 %frombool2, i8* %elide_outer_quotes, align 1, !dbg !14289, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %pending_shell_escape_end, metadata !14293, metadata !DIExpression()), !dbg !14294
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !14294, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %encountered_single_quote, metadata !14295, metadata !DIExpression()), !dbg !14296
  store i8 0, i8* %encountered_single_quote, align 1, !dbg !14296, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %all_c_and_shell_quote_compat, metadata !14297, metadata !DIExpression()), !dbg !14298
  store i8 1, i8* %all_c_and_shell_quote_compat, align 1, !dbg !14298, !tbaa !2742
  br label %process_input, !dbg !14299

process_input:                                    ; preds = %if.then701, %entry
  call void @llvm.dbg.label(metadata !14300), !dbg !14301
  %1 = load i32, i32* %quoting_style.addr, align 4, !dbg !14302, !tbaa !3295
  switch i32 %1, label %sw.default [
    i32 6, label %sw.bb
    i32 5, label %sw.bb3
    i32 7, label %sw.bb7
    i32 8, label %sw.bb8
    i32 9, label %sw.bb8
    i32 10, label %sw.bb8
    i32 3, label %sw.bb26
    i32 1, label %sw.bb27
    i32 4, label %sw.bb28
    i32 2, label %sw.bb32
    i32 0, label %sw.bb43
  ], !dbg !14303

sw.bb:                                            ; preds = %process_input
  store i32 5, i32* %quoting_style.addr, align 4, !dbg !14304, !tbaa !3295
  store i8 1, i8* %elide_outer_quotes, align 1, !dbg !14306, !tbaa !2742
  br label %sw.bb3, !dbg !14307

sw.bb3:                                           ; preds = %process_input, %sw.bb
  %2 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14308, !tbaa !2742
  %tobool = trunc i8 %2 to i1, !dbg !14308
  br i1 %tobool, label %if.end6, label %if.then, !dbg !14310

if.then:                                          ; preds = %sw.bb3
  br label %do.body, !dbg !14311

do.body:                                          ; preds = %if.then
  %3 = load i64, i64* %len, align 8, !dbg !14312, !tbaa !3288
  %4 = load i64, i64* %buffersize.addr, align 8, !dbg !14312, !tbaa !3288
  %cmp4 = icmp ult i64 %3, %4, !dbg !14312
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !14315

if.then5:                                         ; preds = %do.body
  %5 = load i8*, i8** %buffer.addr, align 8, !dbg !14312, !tbaa !2648
  %6 = load i64, i64* %len, align 8, !dbg !14312, !tbaa !3288
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %6, !dbg !14312, !ctir !9
  store i8 34, i8* %arrayidx, align 1, !dbg !14312, !tbaa !3295
  br label %if.end, !dbg !14312

if.end:                                           ; preds = %if.then5, %do.body
  %7 = load i64, i64* %len, align 8, !dbg !14315, !tbaa !3288
  %inc = add i64 %7, 1, !dbg !14315
  store i64 %inc, i64* %len, align 8, !dbg !14315, !tbaa !3288
  br label %do.end, !dbg !14315

do.end:                                           ; preds = %if.end
  br label %if.end6, !dbg !14315

if.end6:                                          ; preds = %do.end, %sw.bb3
  store i8 1, i8* %backslash_escapes, align 1, !dbg !14316, !tbaa !2742
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.328, i64 0, i64 0), i8** %quote_string, align 8, !dbg !14317, !tbaa !2648
  store i64 1, i64* %quote_string_len, align 8, !dbg !14318, !tbaa !3288
  br label %sw.epilog, !dbg !14319

sw.bb7:                                           ; preds = %process_input
  store i8 1, i8* %backslash_escapes, align 1, !dbg !14320, !tbaa !2742
  store i8 0, i8* %elide_outer_quotes, align 1, !dbg !14321, !tbaa !2742
  br label %sw.epilog, !dbg !14322

sw.bb8:                                           ; preds = %process_input, %process_input, %process_input
  %8 = load i32, i32* %quoting_style.addr, align 4, !dbg !14323, !tbaa !3295
  %cmp9 = icmp ne i32 %8, 10, !dbg !14326
  br i1 %cmp9, label %if.then10, label %if.end13, !dbg !14327

if.then10:                                        ; preds = %sw.bb8
  %9 = load i32, i32* %quoting_style.addr, align 4, !dbg !14328, !tbaa !3295
  %call11 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.329, i64 0, i64 0), i32 %9), !dbg !14330
  store i8* %call11, i8** %left_quote.addr, align 8, !dbg !14331, !tbaa !2648
  %10 = load i32, i32* %quoting_style.addr, align 4, !dbg !14332, !tbaa !3295
  %call12 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.330, i64 0, i64 0), i32 %10), !dbg !14333
  store i8* %call12, i8** %right_quote.addr, align 8, !dbg !14334, !tbaa !2648
  br label %if.end13, !dbg !14335

if.end13:                                         ; preds = %if.then10, %sw.bb8
  %11 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14336, !tbaa !2742
  %tobool14 = trunc i8 %11 to i1, !dbg !14336
  br i1 %tobool14, label %if.end24, label %if.then15, !dbg !14338

if.then15:                                        ; preds = %if.end13
  %12 = load i8*, i8** %left_quote.addr, align 8, !dbg !14339, !tbaa !2648
  store i8* %12, i8** %quote_string, align 8, !dbg !14341, !tbaa !2648
  br label %for.cond, !dbg !14342

for.cond:                                         ; preds = %for.inc, %if.then15
  %13 = load i8*, i8** %quote_string, align 8, !dbg !14343, !tbaa !2648
  %14 = load i8, i8* %13, align 1, !dbg !14345, !tbaa !3295, !ctir !181
  %tobool16 = icmp ne i8 %14, 0, !dbg !14346
  br i1 %tobool16, label %for.body, label %for.end, !dbg !14346

for.body:                                         ; preds = %for.cond
  br label %do.body17, !dbg !14347

do.body17:                                        ; preds = %for.body
  %15 = load i64, i64* %len, align 8, !dbg !14348, !tbaa !3288
  %16 = load i64, i64* %buffersize.addr, align 8, !dbg !14348, !tbaa !3288
  %cmp18 = icmp ult i64 %15, %16, !dbg !14348
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !14351

if.then19:                                        ; preds = %do.body17
  %17 = load i8*, i8** %quote_string, align 8, !dbg !14348, !tbaa !2648
  %18 = load i8, i8* %17, align 1, !dbg !14348, !tbaa !3295, !ctir !181
  %19 = load i8*, i8** %buffer.addr, align 8, !dbg !14348, !tbaa !2648
  %20 = load i64, i64* %len, align 8, !dbg !14348, !tbaa !3288
  %arrayidx20 = getelementptr inbounds i8, i8* %19, i64 %20, !dbg !14348, !ctir !9
  store i8 %18, i8* %arrayidx20, align 1, !dbg !14348, !tbaa !3295
  br label %if.end21, !dbg !14348

if.end21:                                         ; preds = %if.then19, %do.body17
  %21 = load i64, i64* %len, align 8, !dbg !14351, !tbaa !3288
  %inc22 = add i64 %21, 1, !dbg !14351
  store i64 %inc22, i64* %len, align 8, !dbg !14351, !tbaa !3288
  br label %do.end23, !dbg !14351

do.end23:                                         ; preds = %if.end21
  br label %for.inc, !dbg !14351

for.inc:                                          ; preds = %do.end23
  %22 = load i8*, i8** %quote_string, align 8, !dbg !14352, !tbaa !2648
  %incdec.ptr = getelementptr inbounds i8, i8* %22, i32 1, !dbg !14352
  store i8* %incdec.ptr, i8** %quote_string, align 8, !dbg !14352, !tbaa !2648
  br label %for.cond, !dbg !14353, !llvm.loop !14354

for.end:                                          ; preds = %for.cond
  br label %if.end24, !dbg !14355

if.end24:                                         ; preds = %for.end, %if.end13
  store i8 1, i8* %backslash_escapes, align 1, !dbg !14356, !tbaa !2742
  %23 = load i8*, i8** %right_quote.addr, align 8, !dbg !14357, !tbaa !2648
  store i8* %23, i8** %quote_string, align 8, !dbg !14358, !tbaa !2648
  %24 = load i8*, i8** %quote_string, align 8, !dbg !14359, !tbaa !2648
  %call25 = call i64 @strlen(i8* %24) #14, !dbg !14360
  store i64 %call25, i64* %quote_string_len, align 8, !dbg !14361, !tbaa !3288
  br label %sw.epilog, !dbg !14362

sw.bb26:                                          ; preds = %process_input
  store i8 1, i8* %backslash_escapes, align 1, !dbg !14363, !tbaa !2742
  br label %sw.bb27, !dbg !14364

sw.bb27:                                          ; preds = %process_input, %sw.bb26
  store i8 1, i8* %elide_outer_quotes, align 1, !dbg !14365, !tbaa !2742
  br label %sw.bb28, !dbg !14366

sw.bb28:                                          ; preds = %process_input, %sw.bb27
  %25 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14367, !tbaa !2742
  %tobool29 = trunc i8 %25 to i1, !dbg !14367
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !14369

if.then30:                                        ; preds = %sw.bb28
  store i8 1, i8* %backslash_escapes, align 1, !dbg !14370, !tbaa !2742
  br label %if.end31, !dbg !14371

if.end31:                                         ; preds = %if.then30, %sw.bb28
  br label %sw.bb32, !dbg !14372

sw.bb32:                                          ; preds = %process_input, %if.end31
  store i32 2, i32* %quoting_style.addr, align 4, !dbg !14373, !tbaa !3295
  %26 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14374, !tbaa !2742
  %tobool33 = trunc i8 %26 to i1, !dbg !14374
  br i1 %tobool33, label %if.end42, label %if.then34, !dbg !14376

if.then34:                                        ; preds = %sw.bb32
  br label %do.body35, !dbg !14377

do.body35:                                        ; preds = %if.then34
  %27 = load i64, i64* %len, align 8, !dbg !14378, !tbaa !3288
  %28 = load i64, i64* %buffersize.addr, align 8, !dbg !14378, !tbaa !3288
  %cmp36 = icmp ult i64 %27, %28, !dbg !14378
  br i1 %cmp36, label %if.then37, label %if.end39, !dbg !14381

if.then37:                                        ; preds = %do.body35
  %29 = load i8*, i8** %buffer.addr, align 8, !dbg !14378, !tbaa !2648
  %30 = load i64, i64* %len, align 8, !dbg !14378, !tbaa !3288
  %arrayidx38 = getelementptr inbounds i8, i8* %29, i64 %30, !dbg !14378, !ctir !9
  store i8 39, i8* %arrayidx38, align 1, !dbg !14378, !tbaa !3295
  br label %if.end39, !dbg !14378

if.end39:                                         ; preds = %if.then37, %do.body35
  %31 = load i64, i64* %len, align 8, !dbg !14381, !tbaa !3288
  %inc40 = add i64 %31, 1, !dbg !14381
  store i64 %inc40, i64* %len, align 8, !dbg !14381, !tbaa !3288
  br label %do.end41, !dbg !14381

do.end41:                                         ; preds = %if.end39
  br label %if.end42, !dbg !14381

if.end42:                                         ; preds = %do.end41, %sw.bb32
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.330, i64 0, i64 0), i8** %quote_string, align 8, !dbg !14382, !tbaa !2648
  store i64 1, i64* %quote_string_len, align 8, !dbg !14383, !tbaa !3288
  br label %sw.epilog, !dbg !14384

sw.bb43:                                          ; preds = %process_input
  store i8 0, i8* %elide_outer_quotes, align 1, !dbg !14385, !tbaa !2742
  br label %sw.epilog, !dbg !14386

sw.default:                                       ; preds = %process_input
  call void @abort() #13, !dbg !14387
  unreachable, !dbg !14387

sw.epilog:                                        ; preds = %sw.bb43, %if.end42, %if.end24, %sw.bb7, %if.end6
  store i64 0, i64* %i, align 8, !dbg !14388, !tbaa !3288
  br label %for.cond44, !dbg !14390

for.cond44:                                       ; preds = %for.inc673, %sw.epilog
  %32 = load i64, i64* %argsize.addr, align 8, !dbg !14391, !tbaa !3288
  %cmp45 = icmp eq i64 %32, -1, !dbg !14393
  br i1 %cmp45, label %cond.true, label %cond.false, !dbg !14391

cond.true:                                        ; preds = %for.cond44
  %33 = load i8*, i8** %arg.addr, align 8, !dbg !14394, !tbaa !2648
  %34 = load i64, i64* %i, align 8, !dbg !14395, !tbaa !3288
  %arrayidx46 = getelementptr inbounds i8, i8* %33, i64 %34, !dbg !14394, !ctir !180
  %35 = load i8, i8* %arrayidx46, align 1, !dbg !14394, !tbaa !3295
  %conv = sext i8 %35 to i32, !dbg !14394
  %cmp47 = icmp eq i32 %conv, 0, !dbg !14396
  %conv48 = zext i1 %cmp47 to i32, !dbg !14396
  br label %cond.end, !dbg !14391

cond.false:                                       ; preds = %for.cond44
  %36 = load i64, i64* %i, align 8, !dbg !14397, !tbaa !3288
  %37 = load i64, i64* %argsize.addr, align 8, !dbg !14398, !tbaa !3288
  %cmp49 = icmp eq i64 %36, %37, !dbg !14399
  %conv50 = zext i1 %cmp49 to i32, !dbg !14399
  br label %cond.end, !dbg !14391

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv48, %cond.true ], [ %conv50, %cond.false ], !dbg !14391
  %tobool51 = icmp ne i32 %cond, 0, !dbg !14400
  %lnot = xor i1 %tobool51, true, !dbg !14400
  br i1 %lnot, label %for.body52, label %for.end675, !dbg !14401

for.body52:                                       ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i8* %c, metadata !14402, metadata !DIExpression()), !dbg !14404
  call void @llvm.dbg.declare(metadata i8* %esc, metadata !14405, metadata !DIExpression()), !dbg !14406
  call void @llvm.dbg.declare(metadata i8* %is_right_quote, metadata !14407, metadata !DIExpression()), !dbg !14408
  store i8 0, i8* %is_right_quote, align 1, !dbg !14408, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %escaping, metadata !14409, metadata !DIExpression()), !dbg !14410
  store i8 0, i8* %escaping, align 1, !dbg !14410, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %c_and_shell_quote_compat, metadata !14411, metadata !DIExpression()), !dbg !14412
  store i8 0, i8* %c_and_shell_quote_compat, align 1, !dbg !14412, !tbaa !2742
  %38 = load i8, i8* %backslash_escapes, align 1, !dbg !14413, !tbaa !2742
  %tobool53 = trunc i8 %38 to i1, !dbg !14413
  br i1 %tobool53, label %land.lhs.true, label %if.end80, !dbg !14415

land.lhs.true:                                    ; preds = %for.body52
  %39 = load i32, i32* %quoting_style.addr, align 4, !dbg !14416, !tbaa !3295
  %cmp55 = icmp ne i32 %39, 2, !dbg !14417
  br i1 %cmp55, label %land.lhs.true57, label %if.end80, !dbg !14418

land.lhs.true57:                                  ; preds = %land.lhs.true
  %40 = load i64, i64* %quote_string_len, align 8, !dbg !14419, !tbaa !3288
  %tobool58 = icmp ne i64 %40, 0, !dbg !14419
  br i1 %tobool58, label %land.lhs.true59, label %if.end80, !dbg !14420

land.lhs.true59:                                  ; preds = %land.lhs.true57
  %41 = load i64, i64* %i, align 8, !dbg !14421, !tbaa !3288
  %42 = load i64, i64* %quote_string_len, align 8, !dbg !14422, !tbaa !3288
  %add = add i64 %41, %42, !dbg !14423
  %43 = load i64, i64* %argsize.addr, align 8, !dbg !14424, !tbaa !3288
  %cmp60 = icmp eq i64 %43, -1, !dbg !14425
  br i1 %cmp60, label %land.lhs.true62, label %cond.false67, !dbg !14426

land.lhs.true62:                                  ; preds = %land.lhs.true59
  %44 = load i64, i64* %quote_string_len, align 8, !dbg !14427, !tbaa !3288
  %cmp63 = icmp ult i64 1, %44, !dbg !14428
  br i1 %cmp63, label %cond.true65, label %cond.false67, !dbg !14424

cond.true65:                                      ; preds = %land.lhs.true62
  %45 = load i8*, i8** %arg.addr, align 8, !dbg !14429, !tbaa !2648
  %call66 = call i64 @strlen(i8* %45) #14, !dbg !14430
  store i64 %call66, i64* %argsize.addr, align 8, !dbg !14431, !tbaa !3288
  br label %cond.end68, !dbg !14424

cond.false67:                                     ; preds = %land.lhs.true62, %land.lhs.true59
  %46 = load i64, i64* %argsize.addr, align 8, !dbg !14432, !tbaa !3288
  br label %cond.end68, !dbg !14424

cond.end68:                                       ; preds = %cond.false67, %cond.true65
  %cond69 = phi i64 [ %call66, %cond.true65 ], [ %46, %cond.false67 ], !dbg !14424
  %cmp70 = icmp ule i64 %add, %cond69, !dbg !14433
  br i1 %cmp70, label %land.lhs.true72, label %if.end80, !dbg !14434

land.lhs.true72:                                  ; preds = %cond.end68
  %47 = load i8*, i8** %arg.addr, align 8, !dbg !14435, !tbaa !2648
  %48 = load i64, i64* %i, align 8, !dbg !14436, !tbaa !3288
  %add.ptr = getelementptr inbounds i8, i8* %47, i64 %48, !dbg !14437
  %49 = load i8*, i8** %quote_string, align 8, !dbg !14438, !tbaa !2648
  %50 = load i64, i64* %quote_string_len, align 8, !dbg !14439, !tbaa !3288
  %call73 = call i32 @memcmp(i8* %add.ptr, i8* %49, i64 %50) #14, !dbg !14440
  %cmp74 = icmp eq i32 %call73, 0, !dbg !14441
  br i1 %cmp74, label %if.then76, label %if.end80, !dbg !14442

if.then76:                                        ; preds = %land.lhs.true72
  %51 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14443, !tbaa !2742
  %tobool77 = trunc i8 %51 to i1, !dbg !14443
  br i1 %tobool77, label %if.then78, label %if.end79, !dbg !14446

if.then78:                                        ; preds = %if.then76
  br label %force_outer_quoting_style, !dbg !14447

if.end79:                                         ; preds = %if.then76
  store i8 1, i8* %is_right_quote, align 1, !dbg !14448, !tbaa !2742
  br label %if.end80, !dbg !14449

if.end80:                                         ; preds = %if.end79, %land.lhs.true72, %cond.end68, %land.lhs.true57, %land.lhs.true, %for.body52
  %52 = load i8*, i8** %arg.addr, align 8, !dbg !14450, !tbaa !2648
  %53 = load i64, i64* %i, align 8, !dbg !14451, !tbaa !3288
  %arrayidx81 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !14450, !ctir !180
  %54 = load i8, i8* %arrayidx81, align 1, !dbg !14450, !tbaa !3295
  store i8 %54, i8* %c, align 1, !dbg !14452, !tbaa !3295
  %55 = load i8, i8* %c, align 1, !dbg !14453, !tbaa !3295
  %conv82 = zext i8 %55 to i32, !dbg !14453
  switch i32 %conv82, label %sw.default335 [
    i32 0, label %sw.bb83
    i32 63, label %sw.bb170
    i32 7, label %sw.bb236
    i32 8, label %sw.bb237
    i32 12, label %sw.bb238
    i32 10, label %sw.bb239
    i32 13, label %sw.bb240
    i32 9, label %sw.bb241
    i32 11, label %sw.bb242
    i32 92, label %sw.bb243
    i32 123, label %sw.bb270
    i32 125, label %sw.bb270
    i32 35, label %sw.bb283
    i32 126, label %sw.bb283
    i32 32, label %sw.bb288
    i32 33, label %sw.bb289
    i32 34, label %sw.bb289
    i32 36, label %sw.bb289
    i32 38, label %sw.bb289
    i32 40, label %sw.bb289
    i32 41, label %sw.bb289
    i32 42, label %sw.bb289
    i32 59, label %sw.bb289
    i32 60, label %sw.bb289
    i32 61, label %sw.bb289
    i32 62, label %sw.bb289
    i32 91, label %sw.bb289
    i32 94, label %sw.bb289
    i32 96, label %sw.bb289
    i32 124, label %sw.bb289
    i32 39, label %sw.bb297
    i32 37, label %sw.bb334
    i32 43, label %sw.bb334
    i32 44, label %sw.bb334
    i32 45, label %sw.bb334
    i32 46, label %sw.bb334
    i32 47, label %sw.bb334
    i32 48, label %sw.bb334
    i32 49, label %sw.bb334
    i32 50, label %sw.bb334
    i32 51, label %sw.bb334
    i32 52, label %sw.bb334
    i32 53, label %sw.bb334
    i32 54, label %sw.bb334
    i32 55, label %sw.bb334
    i32 56, label %sw.bb334
    i32 57, label %sw.bb334
    i32 58, label %sw.bb334
    i32 65, label %sw.bb334
    i32 66, label %sw.bb334
    i32 67, label %sw.bb334
    i32 68, label %sw.bb334
    i32 69, label %sw.bb334
    i32 70, label %sw.bb334
    i32 71, label %sw.bb334
    i32 72, label %sw.bb334
    i32 73, label %sw.bb334
    i32 74, label %sw.bb334
    i32 75, label %sw.bb334
    i32 76, label %sw.bb334
    i32 77, label %sw.bb334
    i32 78, label %sw.bb334
    i32 79, label %sw.bb334
    i32 80, label %sw.bb334
    i32 81, label %sw.bb334
    i32 82, label %sw.bb334
    i32 83, label %sw.bb334
    i32 84, label %sw.bb334
    i32 85, label %sw.bb334
    i32 86, label %sw.bb334
    i32 87, label %sw.bb334
    i32 88, label %sw.bb334
    i32 89, label %sw.bb334
    i32 90, label %sw.bb334
    i32 93, label %sw.bb334
    i32 95, label %sw.bb334
    i32 97, label %sw.bb334
    i32 98, label %sw.bb334
    i32 99, label %sw.bb334
    i32 100, label %sw.bb334
    i32 101, label %sw.bb334
    i32 102, label %sw.bb334
    i32 103, label %sw.bb334
    i32 104, label %sw.bb334
    i32 105, label %sw.bb334
    i32 106, label %sw.bb334
    i32 107, label %sw.bb334
    i32 108, label %sw.bb334
    i32 109, label %sw.bb334
    i32 110, label %sw.bb334
    i32 111, label %sw.bb334
    i32 112, label %sw.bb334
    i32 113, label %sw.bb334
    i32 114, label %sw.bb334
    i32 115, label %sw.bb334
    i32 116, label %sw.bb334
    i32 117, label %sw.bb334
    i32 118, label %sw.bb334
    i32 119, label %sw.bb334
    i32 120, label %sw.bb334
    i32 121, label %sw.bb334
    i32 122, label %sw.bb334
  ], !dbg !14454

sw.bb83:                                          ; preds = %if.end80
  %56 = load i8, i8* %backslash_escapes, align 1, !dbg !14455, !tbaa !2742
  %tobool84 = trunc i8 %56 to i1, !dbg !14455
  br i1 %tobool84, label %if.then85, label %if.else, !dbg !14458

if.then85:                                        ; preds = %sw.bb83
  br label %do.body86, !dbg !14459

do.body86:                                        ; preds = %if.then85
  %57 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14461, !tbaa !2742
  %tobool87 = trunc i8 %57 to i1, !dbg !14461
  br i1 %tobool87, label %if.then88, label %if.end89, !dbg !14464

if.then88:                                        ; preds = %do.body86
  br label %force_outer_quoting_style, !dbg !14461

if.end89:                                         ; preds = %do.body86
  store i8 1, i8* %escaping, align 1, !dbg !14464, !tbaa !2742
  %58 = load i32, i32* %quoting_style.addr, align 4, !dbg !14465, !tbaa !3295
  %cmp90 = icmp eq i32 %58, 2, !dbg !14465
  br i1 %cmp90, label %land.lhs.true92, label %if.end119, !dbg !14465

land.lhs.true92:                                  ; preds = %if.end89
  %59 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !14465, !tbaa !2742
  %tobool93 = trunc i8 %59 to i1, !dbg !14465
  br i1 %tobool93, label %if.end119, label %if.then94, !dbg !14464

if.then94:                                        ; preds = %land.lhs.true92
  br label %do.body95, !dbg !14467

do.body95:                                        ; preds = %if.then94
  %60 = load i64, i64* %len, align 8, !dbg !14469, !tbaa !3288
  %61 = load i64, i64* %buffersize.addr, align 8, !dbg !14469, !tbaa !3288
  %cmp96 = icmp ult i64 %60, %61, !dbg !14469
  br i1 %cmp96, label %if.then98, label %if.end100, !dbg !14472

if.then98:                                        ; preds = %do.body95
  %62 = load i8*, i8** %buffer.addr, align 8, !dbg !14469, !tbaa !2648
  %63 = load i64, i64* %len, align 8, !dbg !14469, !tbaa !3288
  %arrayidx99 = getelementptr inbounds i8, i8* %62, i64 %63, !dbg !14469, !ctir !9
  store i8 39, i8* %arrayidx99, align 1, !dbg !14469, !tbaa !3295
  br label %if.end100, !dbg !14469

if.end100:                                        ; preds = %if.then98, %do.body95
  %64 = load i64, i64* %len, align 8, !dbg !14472, !tbaa !3288
  %inc101 = add i64 %64, 1, !dbg !14472
  store i64 %inc101, i64* %len, align 8, !dbg !14472, !tbaa !3288
  br label %do.end102, !dbg !14472

do.end102:                                        ; preds = %if.end100
  br label %do.body103, !dbg !14467

do.body103:                                       ; preds = %do.end102
  %65 = load i64, i64* %len, align 8, !dbg !14473, !tbaa !3288
  %66 = load i64, i64* %buffersize.addr, align 8, !dbg !14473, !tbaa !3288
  %cmp104 = icmp ult i64 %65, %66, !dbg !14473
  br i1 %cmp104, label %if.then106, label %if.end108, !dbg !14476

if.then106:                                       ; preds = %do.body103
  %67 = load i8*, i8** %buffer.addr, align 8, !dbg !14473, !tbaa !2648
  %68 = load i64, i64* %len, align 8, !dbg !14473, !tbaa !3288
  %arrayidx107 = getelementptr inbounds i8, i8* %67, i64 %68, !dbg !14473, !ctir !9
  store i8 36, i8* %arrayidx107, align 1, !dbg !14473, !tbaa !3295
  br label %if.end108, !dbg !14473

if.end108:                                        ; preds = %if.then106, %do.body103
  %69 = load i64, i64* %len, align 8, !dbg !14476, !tbaa !3288
  %inc109 = add i64 %69, 1, !dbg !14476
  store i64 %inc109, i64* %len, align 8, !dbg !14476, !tbaa !3288
  br label %do.end110, !dbg !14476

do.end110:                                        ; preds = %if.end108
  br label %do.body111, !dbg !14467

do.body111:                                       ; preds = %do.end110
  %70 = load i64, i64* %len, align 8, !dbg !14477, !tbaa !3288
  %71 = load i64, i64* %buffersize.addr, align 8, !dbg !14477, !tbaa !3288
  %cmp112 = icmp ult i64 %70, %71, !dbg !14477
  br i1 %cmp112, label %if.then114, label %if.end116, !dbg !14480

if.then114:                                       ; preds = %do.body111
  %72 = load i8*, i8** %buffer.addr, align 8, !dbg !14477, !tbaa !2648
  %73 = load i64, i64* %len, align 8, !dbg !14477, !tbaa !3288
  %arrayidx115 = getelementptr inbounds i8, i8* %72, i64 %73, !dbg !14477, !ctir !9
  store i8 39, i8* %arrayidx115, align 1, !dbg !14477, !tbaa !3295
  br label %if.end116, !dbg !14477

if.end116:                                        ; preds = %if.then114, %do.body111
  %74 = load i64, i64* %len, align 8, !dbg !14480, !tbaa !3288
  %inc117 = add i64 %74, 1, !dbg !14480
  store i64 %inc117, i64* %len, align 8, !dbg !14480, !tbaa !3288
  br label %do.end118, !dbg !14480

do.end118:                                        ; preds = %if.end116
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !14467, !tbaa !2742
  br label %if.end119, !dbg !14467

if.end119:                                        ; preds = %do.end118, %land.lhs.true92, %if.end89
  br label %do.body120, !dbg !14464

do.body120:                                       ; preds = %if.end119
  %75 = load i64, i64* %len, align 8, !dbg !14481, !tbaa !3288
  %76 = load i64, i64* %buffersize.addr, align 8, !dbg !14481, !tbaa !3288
  %cmp121 = icmp ult i64 %75, %76, !dbg !14481
  br i1 %cmp121, label %if.then123, label %if.end125, !dbg !14484

if.then123:                                       ; preds = %do.body120
  %77 = load i8*, i8** %buffer.addr, align 8, !dbg !14481, !tbaa !2648
  %78 = load i64, i64* %len, align 8, !dbg !14481, !tbaa !3288
  %arrayidx124 = getelementptr inbounds i8, i8* %77, i64 %78, !dbg !14481, !ctir !9
  store i8 92, i8* %arrayidx124, align 1, !dbg !14481, !tbaa !3295
  br label %if.end125, !dbg !14481

if.end125:                                        ; preds = %if.then123, %do.body120
  %79 = load i64, i64* %len, align 8, !dbg !14484, !tbaa !3288
  %inc126 = add i64 %79, 1, !dbg !14484
  store i64 %inc126, i64* %len, align 8, !dbg !14484, !tbaa !3288
  br label %do.end127, !dbg !14484

do.end127:                                        ; preds = %if.end125
  br label %do.end128, !dbg !14464

do.end128:                                        ; preds = %do.end127
  %80 = load i32, i32* %quoting_style.addr, align 4, !dbg !14485, !tbaa !3295
  %cmp129 = icmp ne i32 %80, 2, !dbg !14487
  br i1 %cmp129, label %land.lhs.true131, label %if.end164, !dbg !14488

land.lhs.true131:                                 ; preds = %do.end128
  %81 = load i64, i64* %i, align 8, !dbg !14489, !tbaa !3288
  %add132 = add i64 %81, 1, !dbg !14490
  %82 = load i64, i64* %argsize.addr, align 8, !dbg !14491, !tbaa !3288
  %cmp133 = icmp ult i64 %add132, %82, !dbg !14492
  br i1 %cmp133, label %land.lhs.true135, label %if.end164, !dbg !14493

land.lhs.true135:                                 ; preds = %land.lhs.true131
  %83 = load i8*, i8** %arg.addr, align 8, !dbg !14494, !tbaa !2648
  %84 = load i64, i64* %i, align 8, !dbg !14495, !tbaa !3288
  %add136 = add i64 %84, 1, !dbg !14496
  %arrayidx137 = getelementptr inbounds i8, i8* %83, i64 %add136, !dbg !14494, !ctir !180
  %85 = load i8, i8* %arrayidx137, align 1, !dbg !14494, !tbaa !3295
  %conv138 = sext i8 %85 to i32, !dbg !14494
  %cmp139 = icmp sle i32 48, %conv138, !dbg !14497
  br i1 %cmp139, label %land.lhs.true141, label %if.end164, !dbg !14498

land.lhs.true141:                                 ; preds = %land.lhs.true135
  %86 = load i8*, i8** %arg.addr, align 8, !dbg !14499, !tbaa !2648
  %87 = load i64, i64* %i, align 8, !dbg !14500, !tbaa !3288
  %add142 = add i64 %87, 1, !dbg !14501
  %arrayidx143 = getelementptr inbounds i8, i8* %86, i64 %add142, !dbg !14499, !ctir !180
  %88 = load i8, i8* %arrayidx143, align 1, !dbg !14499, !tbaa !3295
  %conv144 = sext i8 %88 to i32, !dbg !14499
  %cmp145 = icmp sle i32 %conv144, 57, !dbg !14502
  br i1 %cmp145, label %if.then147, label %if.end164, !dbg !14503

if.then147:                                       ; preds = %land.lhs.true141
  br label %do.body148, !dbg !14504

do.body148:                                       ; preds = %if.then147
  %89 = load i64, i64* %len, align 8, !dbg !14506, !tbaa !3288
  %90 = load i64, i64* %buffersize.addr, align 8, !dbg !14506, !tbaa !3288
  %cmp149 = icmp ult i64 %89, %90, !dbg !14506
  br i1 %cmp149, label %if.then151, label %if.end153, !dbg !14509

if.then151:                                       ; preds = %do.body148
  %91 = load i8*, i8** %buffer.addr, align 8, !dbg !14506, !tbaa !2648
  %92 = load i64, i64* %len, align 8, !dbg !14506, !tbaa !3288
  %arrayidx152 = getelementptr inbounds i8, i8* %91, i64 %92, !dbg !14506, !ctir !9
  store i8 48, i8* %arrayidx152, align 1, !dbg !14506, !tbaa !3295
  br label %if.end153, !dbg !14506

if.end153:                                        ; preds = %if.then151, %do.body148
  %93 = load i64, i64* %len, align 8, !dbg !14509, !tbaa !3288
  %inc154 = add i64 %93, 1, !dbg !14509
  store i64 %inc154, i64* %len, align 8, !dbg !14509, !tbaa !3288
  br label %do.end155, !dbg !14509

do.end155:                                        ; preds = %if.end153
  br label %do.body156, !dbg !14510

do.body156:                                       ; preds = %do.end155
  %94 = load i64, i64* %len, align 8, !dbg !14511, !tbaa !3288
  %95 = load i64, i64* %buffersize.addr, align 8, !dbg !14511, !tbaa !3288
  %cmp157 = icmp ult i64 %94, %95, !dbg !14511
  br i1 %cmp157, label %if.then159, label %if.end161, !dbg !14514

if.then159:                                       ; preds = %do.body156
  %96 = load i8*, i8** %buffer.addr, align 8, !dbg !14511, !tbaa !2648
  %97 = load i64, i64* %len, align 8, !dbg !14511, !tbaa !3288
  %arrayidx160 = getelementptr inbounds i8, i8* %96, i64 %97, !dbg !14511, !ctir !9
  store i8 48, i8* %arrayidx160, align 1, !dbg !14511, !tbaa !3295
  br label %if.end161, !dbg !14511

if.end161:                                        ; preds = %if.then159, %do.body156
  %98 = load i64, i64* %len, align 8, !dbg !14514, !tbaa !3288
  %inc162 = add i64 %98, 1, !dbg !14514
  store i64 %inc162, i64* %len, align 8, !dbg !14514, !tbaa !3288
  br label %do.end163, !dbg !14514

do.end163:                                        ; preds = %if.end161
  br label %if.end164, !dbg !14515

if.end164:                                        ; preds = %do.end163, %land.lhs.true141, %land.lhs.true135, %land.lhs.true131, %do.end128
  store i8 48, i8* %c, align 1, !dbg !14516, !tbaa !3295
  br label %if.end169, !dbg !14517

if.else:                                          ; preds = %sw.bb83
  %99 = load i32, i32* %flags.addr, align 4, !dbg !14518, !tbaa !2635
  %and165 = and i32 %99, 1, !dbg !14520
  %tobool166 = icmp ne i32 %and165, 0, !dbg !14520
  br i1 %tobool166, label %if.then167, label %if.end168, !dbg !14521

if.then167:                                       ; preds = %if.else
  br label %for.inc673, !dbg !14522

if.end168:                                        ; preds = %if.else
  br label %if.end169

if.end169:                                        ; preds = %if.end168, %if.end164
  br label %sw.epilog564, !dbg !14523

sw.bb170:                                         ; preds = %if.end80
  %100 = load i32, i32* %quoting_style.addr, align 4, !dbg !14524, !tbaa !3295
  switch i32 %100, label %sw.default234 [
    i32 2, label %sw.bb171
    i32 5, label %sw.bb175
  ], !dbg !14525

sw.bb171:                                         ; preds = %sw.bb170
  %101 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14526, !tbaa !2742
  %tobool172 = trunc i8 %101 to i1, !dbg !14526
  br i1 %tobool172, label %if.then173, label %if.end174, !dbg !14529

if.then173:                                       ; preds = %sw.bb171
  br label %force_outer_quoting_style, !dbg !14530

if.end174:                                        ; preds = %sw.bb171
  br label %sw.epilog235, !dbg !14531

sw.bb175:                                         ; preds = %sw.bb170
  %102 = load i32, i32* %flags.addr, align 4, !dbg !14532, !tbaa !2635
  %and176 = and i32 %102, 4, !dbg !14534
  %tobool177 = icmp ne i32 %and176, 0, !dbg !14534
  br i1 %tobool177, label %land.lhs.true178, label %if.end233, !dbg !14535

land.lhs.true178:                                 ; preds = %sw.bb175
  %103 = load i64, i64* %i, align 8, !dbg !14536, !tbaa !3288
  %add179 = add i64 %103, 2, !dbg !14537
  %104 = load i64, i64* %argsize.addr, align 8, !dbg !14538, !tbaa !3288
  %cmp180 = icmp ult i64 %add179, %104, !dbg !14539
  br i1 %cmp180, label %land.lhs.true182, label %if.end233, !dbg !14540

land.lhs.true182:                                 ; preds = %land.lhs.true178
  %105 = load i8*, i8** %arg.addr, align 8, !dbg !14541, !tbaa !2648
  %106 = load i64, i64* %i, align 8, !dbg !14542, !tbaa !3288
  %add183 = add i64 %106, 1, !dbg !14543
  %arrayidx184 = getelementptr inbounds i8, i8* %105, i64 %add183, !dbg !14541, !ctir !180
  %107 = load i8, i8* %arrayidx184, align 1, !dbg !14541, !tbaa !3295
  %conv185 = sext i8 %107 to i32, !dbg !14541
  %cmp186 = icmp eq i32 %conv185, 63, !dbg !14544
  br i1 %cmp186, label %if.then188, label %if.end233, !dbg !14545

if.then188:                                       ; preds = %land.lhs.true182
  %108 = load i8*, i8** %arg.addr, align 8, !dbg !14546, !tbaa !2648
  %109 = load i64, i64* %i, align 8, !dbg !14547, !tbaa !3288
  %add189 = add i64 %109, 2, !dbg !14548
  %arrayidx190 = getelementptr inbounds i8, i8* %108, i64 %add189, !dbg !14546, !ctir !180
  %110 = load i8, i8* %arrayidx190, align 1, !dbg !14546, !tbaa !3295
  %conv191 = sext i8 %110 to i32, !dbg !14546
  switch i32 %conv191, label %sw.default231 [
    i32 33, label %sw.bb192
    i32 39, label %sw.bb192
    i32 40, label %sw.bb192
    i32 41, label %sw.bb192
    i32 45, label %sw.bb192
    i32 47, label %sw.bb192
    i32 60, label %sw.bb192
    i32 61, label %sw.bb192
    i32 62, label %sw.bb192
  ], !dbg !14549

sw.bb192:                                         ; preds = %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188
  %111 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14550, !tbaa !2742
  %tobool193 = trunc i8 %111 to i1, !dbg !14550
  br i1 %tobool193, label %if.then194, label %if.end195, !dbg !14553

if.then194:                                       ; preds = %sw.bb192
  br label %force_outer_quoting_style, !dbg !14554

if.end195:                                        ; preds = %sw.bb192
  %112 = load i8*, i8** %arg.addr, align 8, !dbg !14555, !tbaa !2648
  %113 = load i64, i64* %i, align 8, !dbg !14556, !tbaa !3288
  %add196 = add i64 %113, 2, !dbg !14557
  %arrayidx197 = getelementptr inbounds i8, i8* %112, i64 %add196, !dbg !14555, !ctir !180
  %114 = load i8, i8* %arrayidx197, align 1, !dbg !14555, !tbaa !3295
  store i8 %114, i8* %c, align 1, !dbg !14558, !tbaa !3295
  %115 = load i64, i64* %i, align 8, !dbg !14559, !tbaa !3288
  %add198 = add i64 %115, 2, !dbg !14559
  store i64 %add198, i64* %i, align 8, !dbg !14559, !tbaa !3288
  br label %do.body199, !dbg !14560

do.body199:                                       ; preds = %if.end195
  %116 = load i64, i64* %len, align 8, !dbg !14561, !tbaa !3288
  %117 = load i64, i64* %buffersize.addr, align 8, !dbg !14561, !tbaa !3288
  %cmp200 = icmp ult i64 %116, %117, !dbg !14561
  br i1 %cmp200, label %if.then202, label %if.end204, !dbg !14564

if.then202:                                       ; preds = %do.body199
  %118 = load i8*, i8** %buffer.addr, align 8, !dbg !14561, !tbaa !2648
  %119 = load i64, i64* %len, align 8, !dbg !14561, !tbaa !3288
  %arrayidx203 = getelementptr inbounds i8, i8* %118, i64 %119, !dbg !14561, !ctir !9
  store i8 63, i8* %arrayidx203, align 1, !dbg !14561, !tbaa !3295
  br label %if.end204, !dbg !14561

if.end204:                                        ; preds = %if.then202, %do.body199
  %120 = load i64, i64* %len, align 8, !dbg !14564, !tbaa !3288
  %inc205 = add i64 %120, 1, !dbg !14564
  store i64 %inc205, i64* %len, align 8, !dbg !14564, !tbaa !3288
  br label %do.end206, !dbg !14564

do.end206:                                        ; preds = %if.end204
  br label %do.body207, !dbg !14565

do.body207:                                       ; preds = %do.end206
  %121 = load i64, i64* %len, align 8, !dbg !14566, !tbaa !3288
  %122 = load i64, i64* %buffersize.addr, align 8, !dbg !14566, !tbaa !3288
  %cmp208 = icmp ult i64 %121, %122, !dbg !14566
  br i1 %cmp208, label %if.then210, label %if.end212, !dbg !14569

if.then210:                                       ; preds = %do.body207
  %123 = load i8*, i8** %buffer.addr, align 8, !dbg !14566, !tbaa !2648
  %124 = load i64, i64* %len, align 8, !dbg !14566, !tbaa !3288
  %arrayidx211 = getelementptr inbounds i8, i8* %123, i64 %124, !dbg !14566, !ctir !9
  store i8 34, i8* %arrayidx211, align 1, !dbg !14566, !tbaa !3295
  br label %if.end212, !dbg !14566

if.end212:                                        ; preds = %if.then210, %do.body207
  %125 = load i64, i64* %len, align 8, !dbg !14569, !tbaa !3288
  %inc213 = add i64 %125, 1, !dbg !14569
  store i64 %inc213, i64* %len, align 8, !dbg !14569, !tbaa !3288
  br label %do.end214, !dbg !14569

do.end214:                                        ; preds = %if.end212
  br label %do.body215, !dbg !14570

do.body215:                                       ; preds = %do.end214
  %126 = load i64, i64* %len, align 8, !dbg !14571, !tbaa !3288
  %127 = load i64, i64* %buffersize.addr, align 8, !dbg !14571, !tbaa !3288
  %cmp216 = icmp ult i64 %126, %127, !dbg !14571
  br i1 %cmp216, label %if.then218, label %if.end220, !dbg !14574

if.then218:                                       ; preds = %do.body215
  %128 = load i8*, i8** %buffer.addr, align 8, !dbg !14571, !tbaa !2648
  %129 = load i64, i64* %len, align 8, !dbg !14571, !tbaa !3288
  %arrayidx219 = getelementptr inbounds i8, i8* %128, i64 %129, !dbg !14571, !ctir !9
  store i8 34, i8* %arrayidx219, align 1, !dbg !14571, !tbaa !3295
  br label %if.end220, !dbg !14571

if.end220:                                        ; preds = %if.then218, %do.body215
  %130 = load i64, i64* %len, align 8, !dbg !14574, !tbaa !3288
  %inc221 = add i64 %130, 1, !dbg !14574
  store i64 %inc221, i64* %len, align 8, !dbg !14574, !tbaa !3288
  br label %do.end222, !dbg !14574

do.end222:                                        ; preds = %if.end220
  br label %do.body223, !dbg !14575

do.body223:                                       ; preds = %do.end222
  %131 = load i64, i64* %len, align 8, !dbg !14576, !tbaa !3288
  %132 = load i64, i64* %buffersize.addr, align 8, !dbg !14576, !tbaa !3288
  %cmp224 = icmp ult i64 %131, %132, !dbg !14576
  br i1 %cmp224, label %if.then226, label %if.end228, !dbg !14579

if.then226:                                       ; preds = %do.body223
  %133 = load i8*, i8** %buffer.addr, align 8, !dbg !14576, !tbaa !2648
  %134 = load i64, i64* %len, align 8, !dbg !14576, !tbaa !3288
  %arrayidx227 = getelementptr inbounds i8, i8* %133, i64 %134, !dbg !14576, !ctir !9
  store i8 63, i8* %arrayidx227, align 1, !dbg !14576, !tbaa !3295
  br label %if.end228, !dbg !14576

if.end228:                                        ; preds = %if.then226, %do.body223
  %135 = load i64, i64* %len, align 8, !dbg !14579, !tbaa !3288
  %inc229 = add i64 %135, 1, !dbg !14579
  store i64 %inc229, i64* %len, align 8, !dbg !14579, !tbaa !3288
  br label %do.end230, !dbg !14579

do.end230:                                        ; preds = %if.end228
  br label %sw.epilog232, !dbg !14580

sw.default231:                                    ; preds = %if.then188
  br label %sw.epilog232, !dbg !14581

sw.epilog232:                                     ; preds = %sw.default231, %do.end230
  br label %if.end233, !dbg !14582

if.end233:                                        ; preds = %sw.epilog232, %land.lhs.true182, %land.lhs.true178, %sw.bb175
  br label %sw.epilog235, !dbg !14583

sw.default234:                                    ; preds = %sw.bb170
  br label %sw.epilog235, !dbg !14584

sw.epilog235:                                     ; preds = %sw.default234, %if.end233, %if.end174
  br label %sw.epilog564, !dbg !14585

sw.bb236:                                         ; preds = %if.end80
  store i8 97, i8* %esc, align 1, !dbg !14586, !tbaa !3295
  br label %c_escape, !dbg !14587

sw.bb237:                                         ; preds = %if.end80
  store i8 98, i8* %esc, align 1, !dbg !14588, !tbaa !3295
  br label %c_escape, !dbg !14589

sw.bb238:                                         ; preds = %if.end80
  store i8 102, i8* %esc, align 1, !dbg !14590, !tbaa !3295
  br label %c_escape, !dbg !14591

sw.bb239:                                         ; preds = %if.end80
  store i8 110, i8* %esc, align 1, !dbg !14592, !tbaa !3295
  br label %c_and_shell_escape, !dbg !14593

sw.bb240:                                         ; preds = %if.end80
  store i8 114, i8* %esc, align 1, !dbg !14594, !tbaa !3295
  br label %c_and_shell_escape, !dbg !14595

sw.bb241:                                         ; preds = %if.end80
  store i8 116, i8* %esc, align 1, !dbg !14596, !tbaa !3295
  br label %c_and_shell_escape, !dbg !14597

sw.bb242:                                         ; preds = %if.end80
  store i8 118, i8* %esc, align 1, !dbg !14598, !tbaa !3295
  br label %c_escape, !dbg !14599

sw.bb243:                                         ; preds = %if.end80
  %136 = load i8, i8* %c, align 1, !dbg !14600, !tbaa !3295
  store i8 %136, i8* %esc, align 1, !dbg !14601, !tbaa !3295
  %137 = load i32, i32* %quoting_style.addr, align 4, !dbg !14602, !tbaa !3295
  %cmp244 = icmp eq i32 %137, 2, !dbg !14604
  br i1 %cmp244, label %if.then246, label %if.end250, !dbg !14605

if.then246:                                       ; preds = %sw.bb243
  %138 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14606, !tbaa !2742
  %tobool247 = trunc i8 %138 to i1, !dbg !14606
  br i1 %tobool247, label %if.then248, label %if.end249, !dbg !14609

if.then248:                                       ; preds = %if.then246
  br label %force_outer_quoting_style, !dbg !14610

if.end249:                                        ; preds = %if.then246
  br label %store_c, !dbg !14611

if.end250:                                        ; preds = %sw.bb243
  %139 = load i8, i8* %backslash_escapes, align 1, !dbg !14612, !tbaa !2742
  %tobool251 = trunc i8 %139 to i1, !dbg !14612
  br i1 %tobool251, label %land.lhs.true253, label %if.end259, !dbg !14614

land.lhs.true253:                                 ; preds = %if.end250
  %140 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14615, !tbaa !2742
  %tobool254 = trunc i8 %140 to i1, !dbg !14615
  br i1 %tobool254, label %land.lhs.true256, label %if.end259, !dbg !14616

land.lhs.true256:                                 ; preds = %land.lhs.true253
  %141 = load i64, i64* %quote_string_len, align 8, !dbg !14617, !tbaa !3288
  %tobool257 = icmp ne i64 %141, 0, !dbg !14617
  br i1 %tobool257, label %if.then258, label %if.end259, !dbg !14618

if.then258:                                       ; preds = %land.lhs.true256
  br label %store_c, !dbg !14619

if.end259:                                        ; preds = %land.lhs.true256, %land.lhs.true253, %if.end250
  br label %c_and_shell_escape, !dbg !14617

c_and_shell_escape:                               ; preds = %if.end259, %sw.bb241, %sw.bb240, %sw.bb239
  call void @llvm.dbg.label(metadata !14620), !dbg !14621
  %142 = load i32, i32* %quoting_style.addr, align 4, !dbg !14622, !tbaa !3295
  %cmp260 = icmp eq i32 %142, 2, !dbg !14624
  br i1 %cmp260, label %land.lhs.true262, label %if.end266, !dbg !14625

land.lhs.true262:                                 ; preds = %c_and_shell_escape
  %143 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14626, !tbaa !2742
  %tobool263 = trunc i8 %143 to i1, !dbg !14626
  br i1 %tobool263, label %if.then265, label %if.end266, !dbg !14627

if.then265:                                       ; preds = %land.lhs.true262
  br label %force_outer_quoting_style, !dbg !14628

if.end266:                                        ; preds = %land.lhs.true262, %c_and_shell_escape
  br label %c_escape, !dbg !14626

c_escape:                                         ; preds = %if.end266, %sw.bb242, %sw.bb238, %sw.bb237, %sw.bb236
  call void @llvm.dbg.label(metadata !14629), !dbg !14630
  %144 = load i8, i8* %backslash_escapes, align 1, !dbg !14631, !tbaa !2742
  %tobool267 = trunc i8 %144 to i1, !dbg !14631
  br i1 %tobool267, label %if.then268, label %if.end269, !dbg !14633

if.then268:                                       ; preds = %c_escape
  %145 = load i8, i8* %esc, align 1, !dbg !14634, !tbaa !3295
  store i8 %145, i8* %c, align 1, !dbg !14636, !tbaa !3295
  br label %store_escape, !dbg !14637

if.end269:                                        ; preds = %c_escape
  br label %sw.epilog564, !dbg !14638

sw.bb270:                                         ; preds = %if.end80, %if.end80
  %146 = load i64, i64* %argsize.addr, align 8, !dbg !14639, !tbaa !3288
  %cmp271 = icmp eq i64 %146, -1, !dbg !14641
  br i1 %cmp271, label %cond.true273, label %cond.false278, !dbg !14642

cond.true273:                                     ; preds = %sw.bb270
  %147 = load i8*, i8** %arg.addr, align 8, !dbg !14643, !tbaa !2648
  %arrayidx274 = getelementptr inbounds i8, i8* %147, i64 1, !dbg !14643, !ctir !180
  %148 = load i8, i8* %arrayidx274, align 1, !dbg !14643, !tbaa !3295
  %conv275 = sext i8 %148 to i32, !dbg !14643
  %cmp276 = icmp eq i32 %conv275, 0, !dbg !14644
  br i1 %cmp276, label %if.end282, label %if.then281, !dbg !14639

cond.false278:                                    ; preds = %sw.bb270
  %149 = load i64, i64* %argsize.addr, align 8, !dbg !14645, !tbaa !3288
  %cmp279 = icmp eq i64 %149, 1, !dbg !14646
  br i1 %cmp279, label %if.end282, label %if.then281, !dbg !14642

if.then281:                                       ; preds = %cond.false278, %cond.true273
  br label %sw.epilog564, !dbg !14647

if.end282:                                        ; preds = %cond.false278, %cond.true273
  br label %sw.bb283, !dbg !14648

sw.bb283:                                         ; preds = %if.end80, %if.end80, %if.end282
  %150 = load i64, i64* %i, align 8, !dbg !14649, !tbaa !3288
  %cmp284 = icmp ne i64 %150, 0, !dbg !14651
  br i1 %cmp284, label %if.then286, label %if.end287, !dbg !14652

if.then286:                                       ; preds = %sw.bb283
  br label %sw.epilog564, !dbg !14653

if.end287:                                        ; preds = %sw.bb283
  br label %sw.bb288, !dbg !14654

sw.bb288:                                         ; preds = %if.end80, %if.end287
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !14655, !tbaa !2742
  br label %sw.bb289, !dbg !14656

sw.bb289:                                         ; preds = %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %sw.bb288
  %151 = load i32, i32* %quoting_style.addr, align 4, !dbg !14657, !tbaa !3295
  %cmp290 = icmp eq i32 %151, 2, !dbg !14659
  br i1 %cmp290, label %land.lhs.true292, label %if.end296, !dbg !14660

land.lhs.true292:                                 ; preds = %sw.bb289
  %152 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14661, !tbaa !2742
  %tobool293 = trunc i8 %152 to i1, !dbg !14661
  br i1 %tobool293, label %if.then295, label %if.end296, !dbg !14662

if.then295:                                       ; preds = %land.lhs.true292
  br label %force_outer_quoting_style, !dbg !14663

if.end296:                                        ; preds = %land.lhs.true292, %sw.bb289
  br label %sw.epilog564, !dbg !14664

sw.bb297:                                         ; preds = %if.end80
  store i8 1, i8* %encountered_single_quote, align 1, !dbg !14665, !tbaa !2742
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !14666, !tbaa !2742
  %153 = load i32, i32* %quoting_style.addr, align 4, !dbg !14667, !tbaa !3295
  %cmp298 = icmp eq i32 %153, 2, !dbg !14669
  br i1 %cmp298, label %if.then300, label %if.end333, !dbg !14670

if.then300:                                       ; preds = %sw.bb297
  %154 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14671, !tbaa !2742
  %tobool301 = trunc i8 %154 to i1, !dbg !14671
  br i1 %tobool301, label %if.then302, label %if.end303, !dbg !14674

if.then302:                                       ; preds = %if.then300
  br label %force_outer_quoting_style, !dbg !14675

if.end303:                                        ; preds = %if.then300
  %155 = load i64, i64* %buffersize.addr, align 8, !dbg !14676, !tbaa !3288
  %tobool304 = icmp ne i64 %155, 0, !dbg !14676
  br i1 %tobool304, label %land.lhs.true305, label %if.end308, !dbg !14678

land.lhs.true305:                                 ; preds = %if.end303
  %156 = load i64, i64* %orig_buffersize, align 8, !dbg !14679, !tbaa !3288
  %tobool306 = icmp ne i64 %156, 0, !dbg !14679
  br i1 %tobool306, label %if.end308, label %if.then307, !dbg !14680

if.then307:                                       ; preds = %land.lhs.true305
  %157 = load i64, i64* %buffersize.addr, align 8, !dbg !14681, !tbaa !3288
  store i64 %157, i64* %orig_buffersize, align 8, !dbg !14683, !tbaa !3288
  store i64 0, i64* %buffersize.addr, align 8, !dbg !14684, !tbaa !3288
  br label %if.end308, !dbg !14685

if.end308:                                        ; preds = %if.then307, %land.lhs.true305, %if.end303
  br label %do.body309, !dbg !14686

do.body309:                                       ; preds = %if.end308
  %158 = load i64, i64* %len, align 8, !dbg !14687, !tbaa !3288
  %159 = load i64, i64* %buffersize.addr, align 8, !dbg !14687, !tbaa !3288
  %cmp310 = icmp ult i64 %158, %159, !dbg !14687
  br i1 %cmp310, label %if.then312, label %if.end314, !dbg !14690

if.then312:                                       ; preds = %do.body309
  %160 = load i8*, i8** %buffer.addr, align 8, !dbg !14687, !tbaa !2648
  %161 = load i64, i64* %len, align 8, !dbg !14687, !tbaa !3288
  %arrayidx313 = getelementptr inbounds i8, i8* %160, i64 %161, !dbg !14687, !ctir !9
  store i8 39, i8* %arrayidx313, align 1, !dbg !14687, !tbaa !3295
  br label %if.end314, !dbg !14687

if.end314:                                        ; preds = %if.then312, %do.body309
  %162 = load i64, i64* %len, align 8, !dbg !14690, !tbaa !3288
  %inc315 = add i64 %162, 1, !dbg !14690
  store i64 %inc315, i64* %len, align 8, !dbg !14690, !tbaa !3288
  br label %do.end316, !dbg !14690

do.end316:                                        ; preds = %if.end314
  br label %do.body317, !dbg !14691

do.body317:                                       ; preds = %do.end316
  %163 = load i64, i64* %len, align 8, !dbg !14692, !tbaa !3288
  %164 = load i64, i64* %buffersize.addr, align 8, !dbg !14692, !tbaa !3288
  %cmp318 = icmp ult i64 %163, %164, !dbg !14692
  br i1 %cmp318, label %if.then320, label %if.end322, !dbg !14695

if.then320:                                       ; preds = %do.body317
  %165 = load i8*, i8** %buffer.addr, align 8, !dbg !14692, !tbaa !2648
  %166 = load i64, i64* %len, align 8, !dbg !14692, !tbaa !3288
  %arrayidx321 = getelementptr inbounds i8, i8* %165, i64 %166, !dbg !14692, !ctir !9
  store i8 92, i8* %arrayidx321, align 1, !dbg !14692, !tbaa !3295
  br label %if.end322, !dbg !14692

if.end322:                                        ; preds = %if.then320, %do.body317
  %167 = load i64, i64* %len, align 8, !dbg !14695, !tbaa !3288
  %inc323 = add i64 %167, 1, !dbg !14695
  store i64 %inc323, i64* %len, align 8, !dbg !14695, !tbaa !3288
  br label %do.end324, !dbg !14695

do.end324:                                        ; preds = %if.end322
  br label %do.body325, !dbg !14696

do.body325:                                       ; preds = %do.end324
  %168 = load i64, i64* %len, align 8, !dbg !14697, !tbaa !3288
  %169 = load i64, i64* %buffersize.addr, align 8, !dbg !14697, !tbaa !3288
  %cmp326 = icmp ult i64 %168, %169, !dbg !14697
  br i1 %cmp326, label %if.then328, label %if.end330, !dbg !14700

if.then328:                                       ; preds = %do.body325
  %170 = load i8*, i8** %buffer.addr, align 8, !dbg !14697, !tbaa !2648
  %171 = load i64, i64* %len, align 8, !dbg !14697, !tbaa !3288
  %arrayidx329 = getelementptr inbounds i8, i8* %170, i64 %171, !dbg !14697, !ctir !9
  store i8 39, i8* %arrayidx329, align 1, !dbg !14697, !tbaa !3295
  br label %if.end330, !dbg !14697

if.end330:                                        ; preds = %if.then328, %do.body325
  %172 = load i64, i64* %len, align 8, !dbg !14700, !tbaa !3288
  %inc331 = add i64 %172, 1, !dbg !14700
  store i64 %inc331, i64* %len, align 8, !dbg !14700, !tbaa !3288
  br label %do.end332, !dbg !14700

do.end332:                                        ; preds = %if.end330
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !14701, !tbaa !2742
  br label %if.end333, !dbg !14702

if.end333:                                        ; preds = %do.end332, %sw.bb297
  br label %sw.epilog564, !dbg !14703

sw.bb334:                                         ; preds = %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !14704, !tbaa !2742
  br label %sw.epilog564, !dbg !14705

sw.default335:                                    ; preds = %if.end80
  call void @llvm.dbg.declare(metadata i64* %m, metadata !14706, metadata !DIExpression()), !dbg !14708
  call void @llvm.dbg.declare(metadata i8* %printable, metadata !14709, metadata !DIExpression()), !dbg !14710
  %173 = load i8, i8* %unibyte_locale, align 1, !dbg !14711, !tbaa !2742
  %tobool336 = trunc i8 %173 to i1, !dbg !14711
  br i1 %tobool336, label %if.then337, label %if.else346, !dbg !14713

if.then337:                                       ; preds = %sw.default335
  store i64 1, i64* %m, align 8, !dbg !14714, !tbaa !3288
  %call338 = call i16** @__ctype_b_loc() #16, !dbg !14716
  %174 = load i16*, i16** %call338, align 8, !dbg !14716, !tbaa !2648, !ctir !1110
  %175 = load i8, i8* %c, align 1, !dbg !14716, !tbaa !3295
  %conv339 = zext i8 %175 to i32, !dbg !14716
  %idxprom = sext i32 %conv339 to i64, !dbg !14716
  %arrayidx340 = getelementptr inbounds i16, i16* %174, i64 %idxprom, !dbg !14716, !ctir !1110
  %176 = load i16, i16* %arrayidx340, align 2, !dbg !14716, !tbaa !14717
  %conv341 = zext i16 %176 to i32, !dbg !14716
  %and342 = and i32 %conv341, 16384, !dbg !14716
  %cmp343 = icmp ne i32 %and342, 0, !dbg !14719
  %frombool345 = zext i1 %cmp343 to i8, !dbg !14720
  store i8 %frombool345, i8* %printable, align 1, !dbg !14720, !tbaa !2742
  br label %if.end410, !dbg !14721

if.else346:                                       ; preds = %sw.default335
  call void @llvm.dbg.declare(metadata %struct.savewd* %mbstate, metadata !14722, metadata !DIExpression()), !dbg !14724
  %177 = bitcast %struct.savewd* %mbstate to i8*, !dbg !14725
  call void @llvm.memset.p0i8.i64(i8* align 4 %177, i8 0, i64 8, i1 false), !dbg !14725
  store i64 0, i64* %m, align 8, !dbg !14726, !tbaa !3288
  store i8 1, i8* %printable, align 1, !dbg !14727, !tbaa !2742
  %178 = load i64, i64* %argsize.addr, align 8, !dbg !14728, !tbaa !3288
  %cmp347 = icmp eq i64 %178, -1, !dbg !14730
  br i1 %cmp347, label %if.then349, label %if.end351, !dbg !14731

if.then349:                                       ; preds = %if.else346
  %179 = load i8*, i8** %arg.addr, align 8, !dbg !14732, !tbaa !2648
  %call350 = call i64 @strlen(i8* %179) #14, !dbg !14733
  store i64 %call350, i64* %argsize.addr, align 8, !dbg !14734, !tbaa !3288
  br label %if.end351, !dbg !14735

if.end351:                                        ; preds = %if.then349, %if.else346
  br label %do.body352, !dbg !14736

do.body352:                                       ; preds = %do.cond, %if.end351
  call void @llvm.dbg.declare(metadata i32* %w, metadata !14737, metadata !DIExpression()), !dbg !14739
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !14740, metadata !DIExpression()), !dbg !14741
  %180 = load i8*, i8** %arg.addr, align 8, !dbg !14742, !tbaa !2648
  %181 = load i64, i64* %i, align 8, !dbg !14743, !tbaa !3288
  %182 = load i64, i64* %m, align 8, !dbg !14744, !tbaa !3288
  %add353 = add i64 %181, %182, !dbg !14745
  %arrayidx354 = getelementptr inbounds i8, i8* %180, i64 %add353, !dbg !14742, !ctir !180
  %183 = load i64, i64* %argsize.addr, align 8, !dbg !14746, !tbaa !3288
  %184 = load i64, i64* %i, align 8, !dbg !14747, !tbaa !3288
  %185 = load i64, i64* %m, align 8, !dbg !14748, !tbaa !3288
  %add355 = add i64 %184, %185, !dbg !14749
  %sub = sub i64 %183, %add355, !dbg !14750
  %call356 = call i64 @rpl_mbrtowc(i32* %w, i8* %arrayidx354, i64 %sub, %struct.savewd* %mbstate), !dbg !14751
  store i64 %call356, i64* %bytes, align 8, !dbg !14741, !tbaa !3288
  %186 = load i64, i64* %bytes, align 8, !dbg !14752, !tbaa !3288
  %cmp357 = icmp eq i64 %186, 0, !dbg !14754
  br i1 %cmp357, label %if.then359, label %if.else360, !dbg !14755

if.then359:                                       ; preds = %do.body352
  br label %do.end409, !dbg !14756

if.else360:                                       ; preds = %do.body352
  %187 = load i64, i64* %bytes, align 8, !dbg !14757, !tbaa !3288
  %cmp361 = icmp eq i64 %187, -1, !dbg !14759
  br i1 %cmp361, label %if.then363, label %if.else364, !dbg !14760

if.then363:                                       ; preds = %if.else360
  store i8 0, i8* %printable, align 1, !dbg !14761, !tbaa !2742
  br label %do.end409, !dbg !14763

if.else364:                                       ; preds = %if.else360
  %188 = load i64, i64* %bytes, align 8, !dbg !14764, !tbaa !3288
  %cmp365 = icmp eq i64 %188, -2, !dbg !14766
  br i1 %cmp365, label %if.then367, label %if.else376, !dbg !14767

if.then367:                                       ; preds = %if.else364
  store i8 0, i8* %printable, align 1, !dbg !14768, !tbaa !2742
  br label %while.cond, !dbg !14770

while.cond:                                       ; preds = %while.body, %if.then367
  %189 = load i64, i64* %i, align 8, !dbg !14771, !tbaa !3288
  %190 = load i64, i64* %m, align 8, !dbg !14772, !tbaa !3288
  %add368 = add i64 %189, %190, !dbg !14773
  %191 = load i64, i64* %argsize.addr, align 8, !dbg !14774, !tbaa !3288
  %cmp369 = icmp ult i64 %add368, %191, !dbg !14775
  br i1 %cmp369, label %land.rhs, label %land.end, !dbg !14776

land.rhs:                                         ; preds = %while.cond
  %192 = load i8*, i8** %arg.addr, align 8, !dbg !14777, !tbaa !2648
  %193 = load i64, i64* %i, align 8, !dbg !14778, !tbaa !3288
  %194 = load i64, i64* %m, align 8, !dbg !14779, !tbaa !3288
  %add371 = add i64 %193, %194, !dbg !14780
  %arrayidx372 = getelementptr inbounds i8, i8* %192, i64 %add371, !dbg !14777, !ctir !180
  %195 = load i8, i8* %arrayidx372, align 1, !dbg !14777, !tbaa !3295
  %conv373 = sext i8 %195 to i32, !dbg !14777
  %tobool374 = icmp ne i32 %conv373, 0, !dbg !14776
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %196 = phi i1 [ false, %while.cond ], [ %tobool374, %land.rhs ], !dbg !14781
  br i1 %196, label %while.body, label %while.end, !dbg !14770

while.body:                                       ; preds = %land.end
  %197 = load i64, i64* %m, align 8, !dbg !14782, !tbaa !3288
  %inc375 = add i64 %197, 1, !dbg !14782
  store i64 %inc375, i64* %m, align 8, !dbg !14782, !tbaa !3288
  br label %while.cond, !dbg !14770, !llvm.loop !14783

while.end:                                        ; preds = %land.end
  br label %do.end409, !dbg !14784

if.else376:                                       ; preds = %if.else364
  %198 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14785, !tbaa !2742
  %tobool377 = trunc i8 %198 to i1, !dbg !14785
  br i1 %tobool377, label %land.lhs.true379, label %if.end397, !dbg !14788

land.lhs.true379:                                 ; preds = %if.else376
  %199 = load i32, i32* %quoting_style.addr, align 4, !dbg !14789, !tbaa !3295
  %cmp380 = icmp eq i32 %199, 2, !dbg !14790
  br i1 %cmp380, label %if.then382, label %if.end397, !dbg !14791

if.then382:                                       ; preds = %land.lhs.true379
  call void @llvm.dbg.declare(metadata i64* %j, metadata !14792, metadata !DIExpression()), !dbg !14794
  store i64 1, i64* %j, align 8, !dbg !14795, !tbaa !3288
  br label %for.cond383, !dbg !14797

for.cond383:                                      ; preds = %for.inc394, %if.then382
  %200 = load i64, i64* %j, align 8, !dbg !14798, !tbaa !3288
  %201 = load i64, i64* %bytes, align 8, !dbg !14800, !tbaa !3288
  %cmp384 = icmp ult i64 %200, %201, !dbg !14801
  br i1 %cmp384, label %for.body386, label %for.end396, !dbg !14802

for.body386:                                      ; preds = %for.cond383
  %202 = load i8*, i8** %arg.addr, align 8, !dbg !14803, !tbaa !2648
  %203 = load i64, i64* %i, align 8, !dbg !14804, !tbaa !3288
  %204 = load i64, i64* %m, align 8, !dbg !14805, !tbaa !3288
  %add387 = add i64 %203, %204, !dbg !14806
  %205 = load i64, i64* %j, align 8, !dbg !14807, !tbaa !3288
  %add388 = add i64 %add387, %205, !dbg !14808
  %arrayidx389 = getelementptr inbounds i8, i8* %202, i64 %add388, !dbg !14803, !ctir !180
  %206 = load i8, i8* %arrayidx389, align 1, !dbg !14803, !tbaa !3295
  %conv390 = sext i8 %206 to i32, !dbg !14803
  switch i32 %conv390, label %sw.default392 [
    i32 91, label %sw.bb391
    i32 92, label %sw.bb391
    i32 94, label %sw.bb391
    i32 96, label %sw.bb391
    i32 124, label %sw.bb391
  ], !dbg !14809

sw.bb391:                                         ; preds = %for.body386, %for.body386, %for.body386, %for.body386, %for.body386
  br label %force_outer_quoting_style, !dbg !14810

sw.default392:                                    ; preds = %for.body386
  br label %sw.epilog393, !dbg !14812

sw.epilog393:                                     ; preds = %sw.default392
  br label %for.inc394, !dbg !14813

for.inc394:                                       ; preds = %sw.epilog393
  %207 = load i64, i64* %j, align 8, !dbg !14814, !tbaa !3288
  %inc395 = add i64 %207, 1, !dbg !14814
  store i64 %inc395, i64* %j, align 8, !dbg !14814, !tbaa !3288
  br label %for.cond383, !dbg !14815, !llvm.loop !14816

for.end396:                                       ; preds = %for.cond383
  br label %if.end397, !dbg !14818

if.end397:                                        ; preds = %for.end396, %land.lhs.true379, %if.else376
  %208 = load i32, i32* %w, align 4, !dbg !14819, !tbaa !2635
  %call398 = call i32 @iswprint(i32 %208) #9, !dbg !14821
  %tobool399 = icmp ne i32 %call398, 0, !dbg !14821
  br i1 %tobool399, label %if.end401, label %if.then400, !dbg !14822

if.then400:                                       ; preds = %if.end397
  store i8 0, i8* %printable, align 1, !dbg !14823, !tbaa !2742
  br label %if.end401, !dbg !14824

if.end401:                                        ; preds = %if.then400, %if.end397
  %209 = load i64, i64* %bytes, align 8, !dbg !14825, !tbaa !3288
  %210 = load i64, i64* %m, align 8, !dbg !14826, !tbaa !3288
  %add402 = add i64 %210, %209, !dbg !14826
  store i64 %add402, i64* %m, align 8, !dbg !14826, !tbaa !3288
  br label %if.end403

if.end403:                                        ; preds = %if.end401
  br label %if.end404

if.end404:                                        ; preds = %if.end403
  br label %if.end405

if.end405:                                        ; preds = %if.end404
  br label %do.cond, !dbg !14827

do.cond:                                          ; preds = %if.end405
  %call406 = call i32 @mbsinit(%struct.savewd* %mbstate) #14, !dbg !14828
  %tobool407 = icmp ne i32 %call406, 0, !dbg !14829
  %lnot408 = xor i1 %tobool407, true, !dbg !14829
  br i1 %lnot408, label %do.body352, label %do.end409, !dbg !14827, !llvm.loop !14830

do.end409:                                        ; preds = %do.cond, %while.end, %if.then363, %if.then359
  br label %if.end410

if.end410:                                        ; preds = %do.end409, %if.then337
  %211 = load i8, i8* %printable, align 1, !dbg !14832, !tbaa !2742
  %tobool411 = trunc i8 %211 to i1, !dbg !14832
  %frombool412 = zext i1 %tobool411 to i8, !dbg !14833
  store i8 %frombool412, i8* %c_and_shell_quote_compat, align 1, !dbg !14833, !tbaa !2742
  %212 = load i64, i64* %m, align 8, !dbg !14834, !tbaa !3288
  %cmp413 = icmp ult i64 1, %212, !dbg !14836
  br i1 %cmp413, label %if.then419, label %lor.lhs.false, !dbg !14837

lor.lhs.false:                                    ; preds = %if.end410
  %213 = load i8, i8* %backslash_escapes, align 1, !dbg !14838, !tbaa !2742
  %tobool415 = trunc i8 %213 to i1, !dbg !14838
  br i1 %tobool415, label %land.lhs.true417, label %if.end563, !dbg !14839

land.lhs.true417:                                 ; preds = %lor.lhs.false
  %214 = load i8, i8* %printable, align 1, !dbg !14840, !tbaa !2742
  %tobool418 = trunc i8 %214 to i1, !dbg !14840
  br i1 %tobool418, label %if.end563, label %if.then419, !dbg !14841

if.then419:                                       ; preds = %land.lhs.true417, %if.end410
  call void @llvm.dbg.declare(metadata i64* %ilim, metadata !14842, metadata !DIExpression()), !dbg !14844
  %215 = load i64, i64* %i, align 8, !dbg !14845, !tbaa !3288
  %216 = load i64, i64* %m, align 8, !dbg !14846, !tbaa !3288
  %add420 = add i64 %215, %216, !dbg !14847
  store i64 %add420, i64* %ilim, align 8, !dbg !14844, !tbaa !3288
  br label %for.cond421, !dbg !14848

for.cond421:                                      ; preds = %do.end559, %if.then419
  %217 = load i8, i8* %backslash_escapes, align 1, !dbg !14849, !tbaa !2742
  %tobool422 = trunc i8 %217 to i1, !dbg !14849
  br i1 %tobool422, label %land.lhs.true424, label %if.else505, !dbg !14854

land.lhs.true424:                                 ; preds = %for.cond421
  %218 = load i8, i8* %printable, align 1, !dbg !14855, !tbaa !2742
  %tobool425 = trunc i8 %218 to i1, !dbg !14855
  br i1 %tobool425, label %if.else505, label %if.then426, !dbg !14856

if.then426:                                       ; preds = %land.lhs.true424
  br label %do.body427, !dbg !14857

do.body427:                                       ; preds = %if.then426
  %219 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14859, !tbaa !2742
  %tobool428 = trunc i8 %219 to i1, !dbg !14859
  br i1 %tobool428, label %if.then429, label %if.end430, !dbg !14862

if.then429:                                       ; preds = %do.body427
  br label %force_outer_quoting_style, !dbg !14859

if.end430:                                        ; preds = %do.body427
  store i8 1, i8* %escaping, align 1, !dbg !14862, !tbaa !2742
  %220 = load i32, i32* %quoting_style.addr, align 4, !dbg !14863, !tbaa !3295
  %cmp431 = icmp eq i32 %220, 2, !dbg !14863
  br i1 %cmp431, label %land.lhs.true433, label %if.end463, !dbg !14863

land.lhs.true433:                                 ; preds = %if.end430
  %221 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !14863, !tbaa !2742
  %tobool434 = trunc i8 %221 to i1, !dbg !14863
  br i1 %tobool434, label %if.end463, label %if.then435, !dbg !14862

if.then435:                                       ; preds = %land.lhs.true433
  br label %do.body436, !dbg !14865

do.body436:                                       ; preds = %if.then435
  %222 = load i64, i64* %len, align 8, !dbg !14867, !tbaa !3288
  %223 = load i64, i64* %buffersize.addr, align 8, !dbg !14867, !tbaa !3288
  %cmp437 = icmp ult i64 %222, %223, !dbg !14867
  br i1 %cmp437, label %if.then439, label %if.end441, !dbg !14870

if.then439:                                       ; preds = %do.body436
  %224 = load i8*, i8** %buffer.addr, align 8, !dbg !14867, !tbaa !2648
  %225 = load i64, i64* %len, align 8, !dbg !14867, !tbaa !3288
  %arrayidx440 = getelementptr inbounds i8, i8* %224, i64 %225, !dbg !14867, !ctir !9
  store i8 39, i8* %arrayidx440, align 1, !dbg !14867, !tbaa !3295
  br label %if.end441, !dbg !14867

if.end441:                                        ; preds = %if.then439, %do.body436
  %226 = load i64, i64* %len, align 8, !dbg !14870, !tbaa !3288
  %inc442 = add i64 %226, 1, !dbg !14870
  store i64 %inc442, i64* %len, align 8, !dbg !14870, !tbaa !3288
  br label %do.end444, !dbg !14870

do.end444:                                        ; preds = %if.end441
  br label %do.body445, !dbg !14865

do.body445:                                       ; preds = %do.end444
  %227 = load i64, i64* %len, align 8, !dbg !14871, !tbaa !3288
  %228 = load i64, i64* %buffersize.addr, align 8, !dbg !14871, !tbaa !3288
  %cmp446 = icmp ult i64 %227, %228, !dbg !14871
  br i1 %cmp446, label %if.then448, label %if.end450, !dbg !14874

if.then448:                                       ; preds = %do.body445
  %229 = load i8*, i8** %buffer.addr, align 8, !dbg !14871, !tbaa !2648
  %230 = load i64, i64* %len, align 8, !dbg !14871, !tbaa !3288
  %arrayidx449 = getelementptr inbounds i8, i8* %229, i64 %230, !dbg !14871, !ctir !9
  store i8 36, i8* %arrayidx449, align 1, !dbg !14871, !tbaa !3295
  br label %if.end450, !dbg !14871

if.end450:                                        ; preds = %if.then448, %do.body445
  %231 = load i64, i64* %len, align 8, !dbg !14874, !tbaa !3288
  %inc451 = add i64 %231, 1, !dbg !14874
  store i64 %inc451, i64* %len, align 8, !dbg !14874, !tbaa !3288
  br label %do.end453, !dbg !14874

do.end453:                                        ; preds = %if.end450
  br label %do.body454, !dbg !14865

do.body454:                                       ; preds = %do.end453
  %232 = load i64, i64* %len, align 8, !dbg !14875, !tbaa !3288
  %233 = load i64, i64* %buffersize.addr, align 8, !dbg !14875, !tbaa !3288
  %cmp455 = icmp ult i64 %232, %233, !dbg !14875
  br i1 %cmp455, label %if.then457, label %if.end459, !dbg !14878

if.then457:                                       ; preds = %do.body454
  %234 = load i8*, i8** %buffer.addr, align 8, !dbg !14875, !tbaa !2648
  %235 = load i64, i64* %len, align 8, !dbg !14875, !tbaa !3288
  %arrayidx458 = getelementptr inbounds i8, i8* %234, i64 %235, !dbg !14875, !ctir !9
  store i8 39, i8* %arrayidx458, align 1, !dbg !14875, !tbaa !3295
  br label %if.end459, !dbg !14875

if.end459:                                        ; preds = %if.then457, %do.body454
  %236 = load i64, i64* %len, align 8, !dbg !14878, !tbaa !3288
  %inc460 = add i64 %236, 1, !dbg !14878
  store i64 %inc460, i64* %len, align 8, !dbg !14878, !tbaa !3288
  br label %do.end462, !dbg !14878

do.end462:                                        ; preds = %if.end459
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !14865, !tbaa !2742
  br label %if.end463, !dbg !14865

if.end463:                                        ; preds = %do.end462, %land.lhs.true433, %if.end430
  br label %do.body464, !dbg !14862

do.body464:                                       ; preds = %if.end463
  %237 = load i64, i64* %len, align 8, !dbg !14879, !tbaa !3288
  %238 = load i64, i64* %buffersize.addr, align 8, !dbg !14879, !tbaa !3288
  %cmp465 = icmp ult i64 %237, %238, !dbg !14879
  br i1 %cmp465, label %if.then467, label %if.end469, !dbg !14882

if.then467:                                       ; preds = %do.body464
  %239 = load i8*, i8** %buffer.addr, align 8, !dbg !14879, !tbaa !2648
  %240 = load i64, i64* %len, align 8, !dbg !14879, !tbaa !3288
  %arrayidx468 = getelementptr inbounds i8, i8* %239, i64 %240, !dbg !14879, !ctir !9
  store i8 92, i8* %arrayidx468, align 1, !dbg !14879, !tbaa !3295
  br label %if.end469, !dbg !14879

if.end469:                                        ; preds = %if.then467, %do.body464
  %241 = load i64, i64* %len, align 8, !dbg !14882, !tbaa !3288
  %inc470 = add i64 %241, 1, !dbg !14882
  store i64 %inc470, i64* %len, align 8, !dbg !14882, !tbaa !3288
  br label %do.end472, !dbg !14882

do.end472:                                        ; preds = %if.end469
  br label %do.end474, !dbg !14862

do.end474:                                        ; preds = %do.end472
  br label %do.body475, !dbg !14883

do.body475:                                       ; preds = %do.end474
  %242 = load i64, i64* %len, align 8, !dbg !14884, !tbaa !3288
  %243 = load i64, i64* %buffersize.addr, align 8, !dbg !14884, !tbaa !3288
  %cmp476 = icmp ult i64 %242, %243, !dbg !14884
  br i1 %cmp476, label %if.then478, label %if.end483, !dbg !14887

if.then478:                                       ; preds = %do.body475
  %244 = load i8, i8* %c, align 1, !dbg !14884, !tbaa !3295
  %conv479 = zext i8 %244 to i32, !dbg !14884
  %shr = ashr i32 %conv479, 6, !dbg !14884
  %add480 = add nsw i32 48, %shr, !dbg !14884
  %conv481 = trunc i32 %add480 to i8, !dbg !14884
  %245 = load i8*, i8** %buffer.addr, align 8, !dbg !14884, !tbaa !2648
  %246 = load i64, i64* %len, align 8, !dbg !14884, !tbaa !3288
  %arrayidx482 = getelementptr inbounds i8, i8* %245, i64 %246, !dbg !14884, !ctir !9
  store i8 %conv481, i8* %arrayidx482, align 1, !dbg !14884, !tbaa !3295
  br label %if.end483, !dbg !14884

if.end483:                                        ; preds = %if.then478, %do.body475
  %247 = load i64, i64* %len, align 8, !dbg !14887, !tbaa !3288
  %inc484 = add i64 %247, 1, !dbg !14887
  store i64 %inc484, i64* %len, align 8, !dbg !14887, !tbaa !3288
  br label %do.end486, !dbg !14887

do.end486:                                        ; preds = %if.end483
  br label %do.body487, !dbg !14888

do.body487:                                       ; preds = %do.end486
  %248 = load i64, i64* %len, align 8, !dbg !14889, !tbaa !3288
  %249 = load i64, i64* %buffersize.addr, align 8, !dbg !14889, !tbaa !3288
  %cmp488 = icmp ult i64 %248, %249, !dbg !14889
  br i1 %cmp488, label %if.then490, label %if.end497, !dbg !14892

if.then490:                                       ; preds = %do.body487
  %250 = load i8, i8* %c, align 1, !dbg !14889, !tbaa !3295
  %conv491 = zext i8 %250 to i32, !dbg !14889
  %shr492 = ashr i32 %conv491, 3, !dbg !14889
  %and493 = and i32 %shr492, 7, !dbg !14889
  %add494 = add nsw i32 48, %and493, !dbg !14889
  %conv495 = trunc i32 %add494 to i8, !dbg !14889
  %251 = load i8*, i8** %buffer.addr, align 8, !dbg !14889, !tbaa !2648
  %252 = load i64, i64* %len, align 8, !dbg !14889, !tbaa !3288
  %arrayidx496 = getelementptr inbounds i8, i8* %251, i64 %252, !dbg !14889, !ctir !9
  store i8 %conv495, i8* %arrayidx496, align 1, !dbg !14889, !tbaa !3295
  br label %if.end497, !dbg !14889

if.end497:                                        ; preds = %if.then490, %do.body487
  %253 = load i64, i64* %len, align 8, !dbg !14892, !tbaa !3288
  %inc498 = add i64 %253, 1, !dbg !14892
  store i64 %inc498, i64* %len, align 8, !dbg !14892, !tbaa !3288
  br label %do.end500, !dbg !14892

do.end500:                                        ; preds = %if.end497
  %254 = load i8, i8* %c, align 1, !dbg !14893, !tbaa !3295
  %conv501 = zext i8 %254 to i32, !dbg !14893
  %and502 = and i32 %conv501, 7, !dbg !14894
  %add503 = add nsw i32 48, %and502, !dbg !14895
  %conv504 = trunc i32 %add503 to i8, !dbg !14896
  store i8 %conv504, i8* %c, align 1, !dbg !14897, !tbaa !3295
  br label %if.end518, !dbg !14898

if.else505:                                       ; preds = %land.lhs.true424, %for.cond421
  %255 = load i8, i8* %is_right_quote, align 1, !dbg !14899, !tbaa !2742
  %tobool506 = trunc i8 %255 to i1, !dbg !14899
  br i1 %tobool506, label %if.then507, label %if.end517, !dbg !14901

if.then507:                                       ; preds = %if.else505
  br label %do.body508, !dbg !14902

do.body508:                                       ; preds = %if.then507
  %256 = load i64, i64* %len, align 8, !dbg !14904, !tbaa !3288
  %257 = load i64, i64* %buffersize.addr, align 8, !dbg !14904, !tbaa !3288
  %cmp509 = icmp ult i64 %256, %257, !dbg !14904
  br i1 %cmp509, label %if.then511, label %if.end513, !dbg !14907

if.then511:                                       ; preds = %do.body508
  %258 = load i8*, i8** %buffer.addr, align 8, !dbg !14904, !tbaa !2648
  %259 = load i64, i64* %len, align 8, !dbg !14904, !tbaa !3288
  %arrayidx512 = getelementptr inbounds i8, i8* %258, i64 %259, !dbg !14904, !ctir !9
  store i8 92, i8* %arrayidx512, align 1, !dbg !14904, !tbaa !3295
  br label %if.end513, !dbg !14904

if.end513:                                        ; preds = %if.then511, %do.body508
  %260 = load i64, i64* %len, align 8, !dbg !14907, !tbaa !3288
  %inc514 = add i64 %260, 1, !dbg !14907
  store i64 %inc514, i64* %len, align 8, !dbg !14907, !tbaa !3288
  br label %do.end516, !dbg !14907

do.end516:                                        ; preds = %if.end513
  store i8 0, i8* %is_right_quote, align 1, !dbg !14908, !tbaa !2742
  br label %if.end517, !dbg !14909

if.end517:                                        ; preds = %do.end516, %if.else505
  br label %if.end518

if.end518:                                        ; preds = %if.end517, %do.end500
  %261 = load i64, i64* %ilim, align 8, !dbg !14910, !tbaa !3288
  %262 = load i64, i64* %i, align 8, !dbg !14912, !tbaa !3288
  %add519 = add i64 %262, 1, !dbg !14913
  %cmp520 = icmp ule i64 %261, %add519, !dbg !14914
  br i1 %cmp520, label %if.then522, label %if.end523, !dbg !14915

if.then522:                                       ; preds = %if.end518
  br label %for.end562, !dbg !14916

if.end523:                                        ; preds = %if.end518
  br label %do.body524, !dbg !14917

do.body524:                                       ; preds = %if.end523
  %263 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !14918, !tbaa !2742
  %tobool525 = trunc i8 %263 to i1, !dbg !14918
  br i1 %tobool525, label %land.lhs.true527, label %if.end548, !dbg !14918

land.lhs.true527:                                 ; preds = %do.body524
  %264 = load i8, i8* %escaping, align 1, !dbg !14918, !tbaa !2742
  %tobool528 = trunc i8 %264 to i1, !dbg !14918
  br i1 %tobool528, label %if.end548, label %if.then529, !dbg !14921

if.then529:                                       ; preds = %land.lhs.true527
  br label %do.body530, !dbg !14922

do.body530:                                       ; preds = %if.then529
  %265 = load i64, i64* %len, align 8, !dbg !14924, !tbaa !3288
  %266 = load i64, i64* %buffersize.addr, align 8, !dbg !14924, !tbaa !3288
  %cmp531 = icmp ult i64 %265, %266, !dbg !14924
  br i1 %cmp531, label %if.then533, label %if.end535, !dbg !14927

if.then533:                                       ; preds = %do.body530
  %267 = load i8*, i8** %buffer.addr, align 8, !dbg !14924, !tbaa !2648
  %268 = load i64, i64* %len, align 8, !dbg !14924, !tbaa !3288
  %arrayidx534 = getelementptr inbounds i8, i8* %267, i64 %268, !dbg !14924, !ctir !9
  store i8 39, i8* %arrayidx534, align 1, !dbg !14924, !tbaa !3295
  br label %if.end535, !dbg !14924

if.end535:                                        ; preds = %if.then533, %do.body530
  %269 = load i64, i64* %len, align 8, !dbg !14927, !tbaa !3288
  %inc536 = add i64 %269, 1, !dbg !14927
  store i64 %inc536, i64* %len, align 8, !dbg !14927, !tbaa !3288
  br label %do.end538, !dbg !14927

do.end538:                                        ; preds = %if.end535
  br label %do.body539, !dbg !14922

do.body539:                                       ; preds = %do.end538
  %270 = load i64, i64* %len, align 8, !dbg !14928, !tbaa !3288
  %271 = load i64, i64* %buffersize.addr, align 8, !dbg !14928, !tbaa !3288
  %cmp540 = icmp ult i64 %270, %271, !dbg !14928
  br i1 %cmp540, label %if.then542, label %if.end544, !dbg !14931

if.then542:                                       ; preds = %do.body539
  %272 = load i8*, i8** %buffer.addr, align 8, !dbg !14928, !tbaa !2648
  %273 = load i64, i64* %len, align 8, !dbg !14928, !tbaa !3288
  %arrayidx543 = getelementptr inbounds i8, i8* %272, i64 %273, !dbg !14928, !ctir !9
  store i8 39, i8* %arrayidx543, align 1, !dbg !14928, !tbaa !3295
  br label %if.end544, !dbg !14928

if.end544:                                        ; preds = %if.then542, %do.body539
  %274 = load i64, i64* %len, align 8, !dbg !14931, !tbaa !3288
  %inc545 = add i64 %274, 1, !dbg !14931
  store i64 %inc545, i64* %len, align 8, !dbg !14931, !tbaa !3288
  br label %do.end547, !dbg !14931

do.end547:                                        ; preds = %if.end544
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !14922, !tbaa !2742
  br label %if.end548, !dbg !14922

if.end548:                                        ; preds = %do.end547, %land.lhs.true527, %do.body524
  br label %do.end550, !dbg !14921

do.end550:                                        ; preds = %if.end548
  br label %do.body551, !dbg !14932

do.body551:                                       ; preds = %do.end550
  %275 = load i64, i64* %len, align 8, !dbg !14933, !tbaa !3288
  %276 = load i64, i64* %buffersize.addr, align 8, !dbg !14933, !tbaa !3288
  %cmp552 = icmp ult i64 %275, %276, !dbg !14933
  br i1 %cmp552, label %if.then554, label %if.end556, !dbg !14936

if.then554:                                       ; preds = %do.body551
  %277 = load i8, i8* %c, align 1, !dbg !14933, !tbaa !3295
  %278 = load i8*, i8** %buffer.addr, align 8, !dbg !14933, !tbaa !2648
  %279 = load i64, i64* %len, align 8, !dbg !14933, !tbaa !3288
  %arrayidx555 = getelementptr inbounds i8, i8* %278, i64 %279, !dbg !14933, !ctir !9
  store i8 %277, i8* %arrayidx555, align 1, !dbg !14933, !tbaa !3295
  br label %if.end556, !dbg !14933

if.end556:                                        ; preds = %if.then554, %do.body551
  %280 = load i64, i64* %len, align 8, !dbg !14936, !tbaa !3288
  %inc557 = add i64 %280, 1, !dbg !14936
  store i64 %inc557, i64* %len, align 8, !dbg !14936, !tbaa !3288
  br label %do.end559, !dbg !14936

do.end559:                                        ; preds = %if.end556
  %281 = load i8*, i8** %arg.addr, align 8, !dbg !14937, !tbaa !2648
  %282 = load i64, i64* %i, align 8, !dbg !14938, !tbaa !3288
  %inc560 = add i64 %282, 1, !dbg !14938
  store i64 %inc560, i64* %i, align 8, !dbg !14938, !tbaa !3288
  %arrayidx561 = getelementptr inbounds i8, i8* %281, i64 %inc560, !dbg !14937, !ctir !180
  %283 = load i8, i8* %arrayidx561, align 1, !dbg !14937, !tbaa !3295
  store i8 %283, i8* %c, align 1, !dbg !14939, !tbaa !3295
  br label %for.cond421, !dbg !14940, !llvm.loop !14941

for.end562:                                       ; preds = %if.then522
  br label %store_c, !dbg !14944

if.end563:                                        ; preds = %land.lhs.true417, %lor.lhs.false
  br label %sw.epilog564, !dbg !14945

sw.epilog564:                                     ; preds = %if.end563, %sw.bb334, %if.end333, %if.end296, %if.then286, %if.then281, %if.end269, %sw.epilog235, %if.end169
  %284 = load i8, i8* %backslash_escapes, align 1, !dbg !14946, !tbaa !2742
  %tobool565 = trunc i8 %284 to i1, !dbg !14946
  br i1 %tobool565, label %land.lhs.true567, label %lor.lhs.false570, !dbg !14948

land.lhs.true567:                                 ; preds = %sw.epilog564
  %285 = load i32, i32* %quoting_style.addr, align 4, !dbg !14949, !tbaa !3295
  %cmp568 = icmp ne i32 %285, 2, !dbg !14950
  br i1 %cmp568, label %land.lhs.true573, label %lor.lhs.false570, !dbg !14951

lor.lhs.false570:                                 ; preds = %land.lhs.true567, %sw.epilog564
  %286 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14952, !tbaa !2742
  %tobool571 = trunc i8 %286 to i1, !dbg !14952
  br i1 %tobool571, label %land.lhs.true573, label %land.lhs.true582, !dbg !14953

land.lhs.true573:                                 ; preds = %lor.lhs.false570, %land.lhs.true567
  %287 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !14954, !tbaa !2648
  %tobool574 = icmp ne i32* %287, null, !dbg !14954
  br i1 %tobool574, label %land.lhs.true575, label %land.lhs.true582, !dbg !14955

land.lhs.true575:                                 ; preds = %land.lhs.true573
  %288 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !14956, !tbaa !2648
  %289 = load i8, i8* %c, align 1, !dbg !14957, !tbaa !3295
  %conv576 = zext i8 %289 to i64, !dbg !14957
  %div = udiv i64 %conv576, 32, !dbg !14958
  %arrayidx577 = getelementptr inbounds i32, i32* %288, i64 %div, !dbg !14956, !ctir !1108
  %290 = load i32, i32* %arrayidx577, align 4, !dbg !14956, !tbaa !2635
  %291 = load i8, i8* %c, align 1, !dbg !14959, !tbaa !3295
  %conv578 = zext i8 %291 to i64, !dbg !14959
  %rem = urem i64 %conv578, 32, !dbg !14960
  %sh_prom = trunc i64 %rem to i32, !dbg !14961
  %shr579 = lshr i32 %290, %sh_prom, !dbg !14961
  %and580 = and i32 %shr579, 1, !dbg !14962
  %tobool581 = icmp ne i32 %and580, 0, !dbg !14962
  br i1 %tobool581, label %if.end585, label %land.lhs.true582, !dbg !14963

land.lhs.true582:                                 ; preds = %land.lhs.true575, %land.lhs.true573, %lor.lhs.false570
  %292 = load i8, i8* %is_right_quote, align 1, !dbg !14964, !tbaa !2742
  %tobool583 = trunc i8 %292 to i1, !dbg !14964
  br i1 %tobool583, label %if.end585, label %if.then584, !dbg !14965

if.then584:                                       ; preds = %land.lhs.true582
  br label %store_c, !dbg !14966

if.end585:                                        ; preds = %land.lhs.true582, %land.lhs.true575
  br label %store_escape, !dbg !14964

store_escape:                                     ; preds = %if.end585, %if.then268
  call void @llvm.dbg.label(metadata !14967), !dbg !14968
  br label %do.body586, !dbg !14969

do.body586:                                       ; preds = %store_escape
  %293 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14970, !tbaa !2742
  %tobool587 = trunc i8 %293 to i1, !dbg !14970
  br i1 %tobool587, label %if.then588, label %if.end589, !dbg !14973

if.then588:                                       ; preds = %do.body586
  br label %force_outer_quoting_style, !dbg !14970

if.end589:                                        ; preds = %do.body586
  store i8 1, i8* %escaping, align 1, !dbg !14973, !tbaa !2742
  %294 = load i32, i32* %quoting_style.addr, align 4, !dbg !14974, !tbaa !3295
  %cmp590 = icmp eq i32 %294, 2, !dbg !14974
  br i1 %cmp590, label %land.lhs.true592, label %if.end622, !dbg !14974

land.lhs.true592:                                 ; preds = %if.end589
  %295 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !14974, !tbaa !2742
  %tobool593 = trunc i8 %295 to i1, !dbg !14974
  br i1 %tobool593, label %if.end622, label %if.then594, !dbg !14973

if.then594:                                       ; preds = %land.lhs.true592
  br label %do.body595, !dbg !14976

do.body595:                                       ; preds = %if.then594
  %296 = load i64, i64* %len, align 8, !dbg !14978, !tbaa !3288
  %297 = load i64, i64* %buffersize.addr, align 8, !dbg !14978, !tbaa !3288
  %cmp596 = icmp ult i64 %296, %297, !dbg !14978
  br i1 %cmp596, label %if.then598, label %if.end600, !dbg !14981

if.then598:                                       ; preds = %do.body595
  %298 = load i8*, i8** %buffer.addr, align 8, !dbg !14978, !tbaa !2648
  %299 = load i64, i64* %len, align 8, !dbg !14978, !tbaa !3288
  %arrayidx599 = getelementptr inbounds i8, i8* %298, i64 %299, !dbg !14978, !ctir !9
  store i8 39, i8* %arrayidx599, align 1, !dbg !14978, !tbaa !3295
  br label %if.end600, !dbg !14978

if.end600:                                        ; preds = %if.then598, %do.body595
  %300 = load i64, i64* %len, align 8, !dbg !14981, !tbaa !3288
  %inc601 = add i64 %300, 1, !dbg !14981
  store i64 %inc601, i64* %len, align 8, !dbg !14981, !tbaa !3288
  br label %do.end603, !dbg !14981

do.end603:                                        ; preds = %if.end600
  br label %do.body604, !dbg !14976

do.body604:                                       ; preds = %do.end603
  %301 = load i64, i64* %len, align 8, !dbg !14982, !tbaa !3288
  %302 = load i64, i64* %buffersize.addr, align 8, !dbg !14982, !tbaa !3288
  %cmp605 = icmp ult i64 %301, %302, !dbg !14982
  br i1 %cmp605, label %if.then607, label %if.end609, !dbg !14985

if.then607:                                       ; preds = %do.body604
  %303 = load i8*, i8** %buffer.addr, align 8, !dbg !14982, !tbaa !2648
  %304 = load i64, i64* %len, align 8, !dbg !14982, !tbaa !3288
  %arrayidx608 = getelementptr inbounds i8, i8* %303, i64 %304, !dbg !14982, !ctir !9
  store i8 36, i8* %arrayidx608, align 1, !dbg !14982, !tbaa !3295
  br label %if.end609, !dbg !14982

if.end609:                                        ; preds = %if.then607, %do.body604
  %305 = load i64, i64* %len, align 8, !dbg !14985, !tbaa !3288
  %inc610 = add i64 %305, 1, !dbg !14985
  store i64 %inc610, i64* %len, align 8, !dbg !14985, !tbaa !3288
  br label %do.end612, !dbg !14985

do.end612:                                        ; preds = %if.end609
  br label %do.body613, !dbg !14976

do.body613:                                       ; preds = %do.end612
  %306 = load i64, i64* %len, align 8, !dbg !14986, !tbaa !3288
  %307 = load i64, i64* %buffersize.addr, align 8, !dbg !14986, !tbaa !3288
  %cmp614 = icmp ult i64 %306, %307, !dbg !14986
  br i1 %cmp614, label %if.then616, label %if.end618, !dbg !14989

if.then616:                                       ; preds = %do.body613
  %308 = load i8*, i8** %buffer.addr, align 8, !dbg !14986, !tbaa !2648
  %309 = load i64, i64* %len, align 8, !dbg !14986, !tbaa !3288
  %arrayidx617 = getelementptr inbounds i8, i8* %308, i64 %309, !dbg !14986, !ctir !9
  store i8 39, i8* %arrayidx617, align 1, !dbg !14986, !tbaa !3295
  br label %if.end618, !dbg !14986

if.end618:                                        ; preds = %if.then616, %do.body613
  %310 = load i64, i64* %len, align 8, !dbg !14989, !tbaa !3288
  %inc619 = add i64 %310, 1, !dbg !14989
  store i64 %inc619, i64* %len, align 8, !dbg !14989, !tbaa !3288
  br label %do.end621, !dbg !14989

do.end621:                                        ; preds = %if.end618
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !14976, !tbaa !2742
  br label %if.end622, !dbg !14976

if.end622:                                        ; preds = %do.end621, %land.lhs.true592, %if.end589
  br label %do.body623, !dbg !14973

do.body623:                                       ; preds = %if.end622
  %311 = load i64, i64* %len, align 8, !dbg !14990, !tbaa !3288
  %312 = load i64, i64* %buffersize.addr, align 8, !dbg !14990, !tbaa !3288
  %cmp624 = icmp ult i64 %311, %312, !dbg !14990
  br i1 %cmp624, label %if.then626, label %if.end628, !dbg !14993

if.then626:                                       ; preds = %do.body623
  %313 = load i8*, i8** %buffer.addr, align 8, !dbg !14990, !tbaa !2648
  %314 = load i64, i64* %len, align 8, !dbg !14990, !tbaa !3288
  %arrayidx627 = getelementptr inbounds i8, i8* %313, i64 %314, !dbg !14990, !ctir !9
  store i8 92, i8* %arrayidx627, align 1, !dbg !14990, !tbaa !3295
  br label %if.end628, !dbg !14990

if.end628:                                        ; preds = %if.then626, %do.body623
  %315 = load i64, i64* %len, align 8, !dbg !14993, !tbaa !3288
  %inc629 = add i64 %315, 1, !dbg !14993
  store i64 %inc629, i64* %len, align 8, !dbg !14993, !tbaa !3288
  br label %do.end631, !dbg !14993

do.end631:                                        ; preds = %if.end628
  br label %do.end633, !dbg !14973

do.end633:                                        ; preds = %do.end631
  br label %store_c, !dbg !14973

store_c:                                          ; preds = %do.end633, %if.then584, %for.end562, %if.then258, %if.end249
  call void @llvm.dbg.label(metadata !14994), !dbg !14995
  br label %do.body634, !dbg !14996

do.body634:                                       ; preds = %store_c
  %316 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !14997, !tbaa !2742
  %tobool635 = trunc i8 %316 to i1, !dbg !14997
  br i1 %tobool635, label %land.lhs.true637, label %if.end658, !dbg !14997

land.lhs.true637:                                 ; preds = %do.body634
  %317 = load i8, i8* %escaping, align 1, !dbg !14997, !tbaa !2742
  %tobool638 = trunc i8 %317 to i1, !dbg !14997
  br i1 %tobool638, label %if.end658, label %if.then639, !dbg !15000

if.then639:                                       ; preds = %land.lhs.true637
  br label %do.body640, !dbg !15001

do.body640:                                       ; preds = %if.then639
  %318 = load i64, i64* %len, align 8, !dbg !15003, !tbaa !3288
  %319 = load i64, i64* %buffersize.addr, align 8, !dbg !15003, !tbaa !3288
  %cmp641 = icmp ult i64 %318, %319, !dbg !15003
  br i1 %cmp641, label %if.then643, label %if.end645, !dbg !15006

if.then643:                                       ; preds = %do.body640
  %320 = load i8*, i8** %buffer.addr, align 8, !dbg !15003, !tbaa !2648
  %321 = load i64, i64* %len, align 8, !dbg !15003, !tbaa !3288
  %arrayidx644 = getelementptr inbounds i8, i8* %320, i64 %321, !dbg !15003, !ctir !9
  store i8 39, i8* %arrayidx644, align 1, !dbg !15003, !tbaa !3295
  br label %if.end645, !dbg !15003

if.end645:                                        ; preds = %if.then643, %do.body640
  %322 = load i64, i64* %len, align 8, !dbg !15006, !tbaa !3288
  %inc646 = add i64 %322, 1, !dbg !15006
  store i64 %inc646, i64* %len, align 8, !dbg !15006, !tbaa !3288
  br label %do.end648, !dbg !15006

do.end648:                                        ; preds = %if.end645
  br label %do.body649, !dbg !15001

do.body649:                                       ; preds = %do.end648
  %323 = load i64, i64* %len, align 8, !dbg !15007, !tbaa !3288
  %324 = load i64, i64* %buffersize.addr, align 8, !dbg !15007, !tbaa !3288
  %cmp650 = icmp ult i64 %323, %324, !dbg !15007
  br i1 %cmp650, label %if.then652, label %if.end654, !dbg !15010

if.then652:                                       ; preds = %do.body649
  %325 = load i8*, i8** %buffer.addr, align 8, !dbg !15007, !tbaa !2648
  %326 = load i64, i64* %len, align 8, !dbg !15007, !tbaa !3288
  %arrayidx653 = getelementptr inbounds i8, i8* %325, i64 %326, !dbg !15007, !ctir !9
  store i8 39, i8* %arrayidx653, align 1, !dbg !15007, !tbaa !3295
  br label %if.end654, !dbg !15007

if.end654:                                        ; preds = %if.then652, %do.body649
  %327 = load i64, i64* %len, align 8, !dbg !15010, !tbaa !3288
  %inc655 = add i64 %327, 1, !dbg !15010
  store i64 %inc655, i64* %len, align 8, !dbg !15010, !tbaa !3288
  br label %do.end657, !dbg !15010

do.end657:                                        ; preds = %if.end654
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !15001, !tbaa !2742
  br label %if.end658, !dbg !15001

if.end658:                                        ; preds = %do.end657, %land.lhs.true637, %do.body634
  br label %do.end660, !dbg !15000

do.end660:                                        ; preds = %if.end658
  br label %do.body661, !dbg !15011

do.body661:                                       ; preds = %do.end660
  %328 = load i64, i64* %len, align 8, !dbg !15012, !tbaa !3288
  %329 = load i64, i64* %buffersize.addr, align 8, !dbg !15012, !tbaa !3288
  %cmp662 = icmp ult i64 %328, %329, !dbg !15012
  br i1 %cmp662, label %if.then664, label %if.end666, !dbg !15015

if.then664:                                       ; preds = %do.body661
  %330 = load i8, i8* %c, align 1, !dbg !15012, !tbaa !3295
  %331 = load i8*, i8** %buffer.addr, align 8, !dbg !15012, !tbaa !2648
  %332 = load i64, i64* %len, align 8, !dbg !15012, !tbaa !3288
  %arrayidx665 = getelementptr inbounds i8, i8* %331, i64 %332, !dbg !15012, !ctir !9
  store i8 %330, i8* %arrayidx665, align 1, !dbg !15012, !tbaa !3295
  br label %if.end666, !dbg !15012

if.end666:                                        ; preds = %if.then664, %do.body661
  %333 = load i64, i64* %len, align 8, !dbg !15015, !tbaa !3288
  %inc667 = add i64 %333, 1, !dbg !15015
  store i64 %inc667, i64* %len, align 8, !dbg !15015, !tbaa !3288
  br label %do.end669, !dbg !15015

do.end669:                                        ; preds = %if.end666
  %334 = load i8, i8* %c_and_shell_quote_compat, align 1, !dbg !15016, !tbaa !2742
  %tobool670 = trunc i8 %334 to i1, !dbg !15016
  br i1 %tobool670, label %if.end672, label %if.then671, !dbg !15018

if.then671:                                       ; preds = %do.end669
  store i8 0, i8* %all_c_and_shell_quote_compat, align 1, !dbg !15019, !tbaa !2742
  br label %if.end672, !dbg !15020

if.end672:                                        ; preds = %if.then671, %do.end669
  br label %for.inc673, !dbg !15021

for.inc673:                                       ; preds = %if.end672, %if.then167
  %335 = load i64, i64* %i, align 8, !dbg !15022, !tbaa !3288
  %inc674 = add i64 %335, 1, !dbg !15022
  store i64 %inc674, i64* %i, align 8, !dbg !15022, !tbaa !3288
  br label %for.cond44, !dbg !15023, !llvm.loop !15024

for.end675:                                       ; preds = %cond.end
  %336 = load i64, i64* %len, align 8, !dbg !15026, !tbaa !3288
  %cmp676 = icmp eq i64 %336, 0, !dbg !15028
  br i1 %cmp676, label %land.lhs.true678, label %if.end685, !dbg !15029

land.lhs.true678:                                 ; preds = %for.end675
  %337 = load i32, i32* %quoting_style.addr, align 4, !dbg !15030, !tbaa !3295
  %cmp679 = icmp eq i32 %337, 2, !dbg !15031
  br i1 %cmp679, label %land.lhs.true681, label %if.end685, !dbg !15032

land.lhs.true681:                                 ; preds = %land.lhs.true678
  %338 = load i8, i8* %elide_outer_quotes, align 1, !dbg !15033, !tbaa !2742
  %tobool682 = trunc i8 %338 to i1, !dbg !15033
  br i1 %tobool682, label %if.then684, label %if.end685, !dbg !15034

if.then684:                                       ; preds = %land.lhs.true681
  br label %force_outer_quoting_style, !dbg !15035

if.end685:                                        ; preds = %land.lhs.true681, %land.lhs.true678, %for.end675
  %339 = load i32, i32* %quoting_style.addr, align 4, !dbg !15036, !tbaa !3295
  %cmp686 = icmp eq i32 %339, 2, !dbg !15038
  br i1 %cmp686, label %land.lhs.true688, label %if.end704, !dbg !15039

land.lhs.true688:                                 ; preds = %if.end685
  %340 = load i8, i8* %elide_outer_quotes, align 1, !dbg !15040, !tbaa !2742
  %tobool689 = trunc i8 %340 to i1, !dbg !15040
  br i1 %tobool689, label %if.end704, label %land.lhs.true690, !dbg !15041

land.lhs.true690:                                 ; preds = %land.lhs.true688
  %341 = load i8, i8* %encountered_single_quote, align 1, !dbg !15042, !tbaa !2742
  %tobool691 = trunc i8 %341 to i1, !dbg !15042
  br i1 %tobool691, label %if.then693, label %if.end704, !dbg !15043

if.then693:                                       ; preds = %land.lhs.true690
  %342 = load i8, i8* %all_c_and_shell_quote_compat, align 1, !dbg !15044, !tbaa !2742
  %tobool694 = trunc i8 %342 to i1, !dbg !15044
  br i1 %tobool694, label %if.then695, label %if.else697, !dbg !15047

if.then695:                                       ; preds = %if.then693
  %343 = load i8*, i8** %buffer.addr, align 8, !dbg !15048, !tbaa !2648
  %344 = load i64, i64* %orig_buffersize, align 8, !dbg !15049, !tbaa !3288
  %345 = load i8*, i8** %arg.addr, align 8, !dbg !15050, !tbaa !2648
  %346 = load i64, i64* %argsize.addr, align 8, !dbg !15051, !tbaa !3288
  %347 = load i32, i32* %flags.addr, align 4, !dbg !15052, !tbaa !2635
  %348 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !15053, !tbaa !2648
  %349 = load i8*, i8** %left_quote.addr, align 8, !dbg !15054, !tbaa !2648
  %350 = load i8*, i8** %right_quote.addr, align 8, !dbg !15055, !tbaa !2648
  %call696 = call i64 @quotearg_buffer_restyled(i8* %343, i64 %344, i8* %345, i64 %346, i32 5, i32 %347, i32* %348, i8* %349, i8* %350), !dbg !15056
  store i64 %call696, i64* %retval, align 8, !dbg !15057
  br label %return, !dbg !15057

if.else697:                                       ; preds = %if.then693
  %351 = load i64, i64* %buffersize.addr, align 8, !dbg !15058, !tbaa !3288
  %tobool698 = icmp ne i64 %351, 0, !dbg !15058
  br i1 %tobool698, label %if.end702, label %land.lhs.true699, !dbg !15060

land.lhs.true699:                                 ; preds = %if.else697
  %352 = load i64, i64* %orig_buffersize, align 8, !dbg !15061, !tbaa !3288
  %tobool700 = icmp ne i64 %352, 0, !dbg !15061
  br i1 %tobool700, label %if.then701, label %if.end702, !dbg !15062

if.then701:                                       ; preds = %land.lhs.true699
  %353 = load i64, i64* %orig_buffersize, align 8, !dbg !15063, !tbaa !3288
  store i64 %353, i64* %buffersize.addr, align 8, !dbg !15065, !tbaa !3288
  store i64 0, i64* %len, align 8, !dbg !15066, !tbaa !3288
  br label %process_input, !dbg !15067

if.end702:                                        ; preds = %land.lhs.true699, %if.else697
  br label %if.end703

if.end703:                                        ; preds = %if.end702
  br label %if.end704, !dbg !15068

if.end704:                                        ; preds = %if.end703, %land.lhs.true690, %land.lhs.true688, %if.end685
  %354 = load i8*, i8** %quote_string, align 8, !dbg !15069, !tbaa !2648
  %tobool705 = icmp ne i8* %354, null, !dbg !15069
  br i1 %tobool705, label %land.lhs.true706, label %if.end724, !dbg !15071

land.lhs.true706:                                 ; preds = %if.end704
  %355 = load i8, i8* %elide_outer_quotes, align 1, !dbg !15072, !tbaa !2742
  %tobool707 = trunc i8 %355 to i1, !dbg !15072
  br i1 %tobool707, label %if.end724, label %if.then708, !dbg !15073

if.then708:                                       ; preds = %land.lhs.true706
  br label %for.cond709, !dbg !15074

for.cond709:                                      ; preds = %for.inc721, %if.then708
  %356 = load i8*, i8** %quote_string, align 8, !dbg !15075, !tbaa !2648
  %357 = load i8, i8* %356, align 1, !dbg !15078, !tbaa !3295, !ctir !181
  %tobool710 = icmp ne i8 %357, 0, !dbg !15079
  br i1 %tobool710, label %for.body711, label %for.end723, !dbg !15079

for.body711:                                      ; preds = %for.cond709
  br label %do.body712, !dbg !15080

do.body712:                                       ; preds = %for.body711
  %358 = load i64, i64* %len, align 8, !dbg !15081, !tbaa !3288
  %359 = load i64, i64* %buffersize.addr, align 8, !dbg !15081, !tbaa !3288
  %cmp713 = icmp ult i64 %358, %359, !dbg !15081
  br i1 %cmp713, label %if.then715, label %if.end717, !dbg !15084

if.then715:                                       ; preds = %do.body712
  %360 = load i8*, i8** %quote_string, align 8, !dbg !15081, !tbaa !2648
  %361 = load i8, i8* %360, align 1, !dbg !15081, !tbaa !3295, !ctir !181
  %362 = load i8*, i8** %buffer.addr, align 8, !dbg !15081, !tbaa !2648
  %363 = load i64, i64* %len, align 8, !dbg !15081, !tbaa !3288
  %arrayidx716 = getelementptr inbounds i8, i8* %362, i64 %363, !dbg !15081, !ctir !9
  store i8 %361, i8* %arrayidx716, align 1, !dbg !15081, !tbaa !3295
  br label %if.end717, !dbg !15081

if.end717:                                        ; preds = %if.then715, %do.body712
  %364 = load i64, i64* %len, align 8, !dbg !15084, !tbaa !3288
  %inc718 = add i64 %364, 1, !dbg !15084
  store i64 %inc718, i64* %len, align 8, !dbg !15084, !tbaa !3288
  br label %do.end720, !dbg !15084

do.end720:                                        ; preds = %if.end717
  br label %for.inc721, !dbg !15084

for.inc721:                                       ; preds = %do.end720
  %365 = load i8*, i8** %quote_string, align 8, !dbg !15085, !tbaa !2648
  %incdec.ptr722 = getelementptr inbounds i8, i8* %365, i32 1, !dbg !15085
  store i8* %incdec.ptr722, i8** %quote_string, align 8, !dbg !15085, !tbaa !2648
  br label %for.cond709, !dbg !15086, !llvm.loop !15087

for.end723:                                       ; preds = %for.cond709
  br label %if.end724, !dbg !15088

if.end724:                                        ; preds = %for.end723, %land.lhs.true706, %if.end704
  %366 = load i64, i64* %len, align 8, !dbg !15089, !tbaa !3288
  %367 = load i64, i64* %buffersize.addr, align 8, !dbg !15091, !tbaa !3288
  %cmp725 = icmp ult i64 %366, %367, !dbg !15092
  br i1 %cmp725, label %if.then727, label %if.end729, !dbg !15093

if.then727:                                       ; preds = %if.end724
  %368 = load i8*, i8** %buffer.addr, align 8, !dbg !15094, !tbaa !2648
  %369 = load i64, i64* %len, align 8, !dbg !15095, !tbaa !3288
  %arrayidx728 = getelementptr inbounds i8, i8* %368, i64 %369, !dbg !15094, !ctir !9
  store i8 0, i8* %arrayidx728, align 1, !dbg !15096, !tbaa !3295
  br label %if.end729, !dbg !15094

if.end729:                                        ; preds = %if.then727, %if.end724
  %370 = load i64, i64* %len, align 8, !dbg !15097, !tbaa !3288
  store i64 %370, i64* %retval, align 8, !dbg !15098
  br label %return, !dbg !15098

force_outer_quoting_style:                        ; preds = %if.then684, %if.then588, %if.then429, %sw.bb391, %if.then302, %if.then295, %if.then265, %if.then248, %if.then194, %if.then173, %if.then88, %if.then78
  call void @llvm.dbg.label(metadata !15099), !dbg !15100
  %371 = load i32, i32* %quoting_style.addr, align 4, !dbg !15101, !tbaa !3295
  %cmp730 = icmp eq i32 %371, 2, !dbg !15103
  br i1 %cmp730, label %land.lhs.true732, label %if.end736, !dbg !15104

land.lhs.true732:                                 ; preds = %force_outer_quoting_style
  %372 = load i8, i8* %backslash_escapes, align 1, !dbg !15105, !tbaa !2742
  %tobool733 = trunc i8 %372 to i1, !dbg !15105
  br i1 %tobool733, label %if.then735, label %if.end736, !dbg !15106

if.then735:                                       ; preds = %land.lhs.true732
  store i32 4, i32* %quoting_style.addr, align 4, !dbg !15107, !tbaa !3295
  br label %if.end736, !dbg !15108

if.end736:                                        ; preds = %if.then735, %land.lhs.true732, %force_outer_quoting_style
  %373 = load i8*, i8** %buffer.addr, align 8, !dbg !15109, !tbaa !2648
  %374 = load i64, i64* %buffersize.addr, align 8, !dbg !15110, !tbaa !3288
  %375 = load i8*, i8** %arg.addr, align 8, !dbg !15111, !tbaa !2648
  %376 = load i64, i64* %argsize.addr, align 8, !dbg !15112, !tbaa !3288
  %377 = load i32, i32* %quoting_style.addr, align 4, !dbg !15113, !tbaa !3295
  %378 = load i32, i32* %flags.addr, align 4, !dbg !15114, !tbaa !2635
  %and737 = and i32 %378, -3, !dbg !15115
  %379 = load i8*, i8** %left_quote.addr, align 8, !dbg !15116, !tbaa !2648
  %380 = load i8*, i8** %right_quote.addr, align 8, !dbg !15117, !tbaa !2648
  %call738 = call i64 @quotearg_buffer_restyled(i8* %373, i64 %374, i8* %375, i64 %376, i32 %377, i32 %and737, i32* null, i8* %379, i8* %380), !dbg !15118
  store i64 %call738, i64* %retval, align 8, !dbg !15119
  br label %return, !dbg !15119

return:                                           ; preds = %if.end736, %if.end729, %if.then695
  %381 = load i64, i64* %retval, align 8, !dbg !15120
  ret i64 %381, !dbg !15120
}

; Function Attrs: nounwind
declare dso_local i64 @__ctype_get_mb_cur_max() #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gettext_quote(i8* %msgid, i32 %s) #4 !dbg !15121 !ctir !1128 {
entry:
  %retval = alloca i8*, align 8
  %msgid.addr = alloca i8*, align 8
  %s.addr = alloca i32, align 4
  %translation = alloca i8*, align 8, !ctir !180
  %locale_code = alloca i8*, align 8, !ctir !180
  store i8* %msgid, i8** %msgid.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %msgid.addr, metadata !15122, metadata !DIExpression()), !dbg !15123
  store i32 %s, i32* %s.addr, align 4, !tbaa !3295
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !15124, metadata !DIExpression()), !dbg !15125
  call void @llvm.dbg.declare(metadata i8** %translation, metadata !15126, metadata !DIExpression()), !dbg !15127
  %0 = load i8*, i8** %msgid.addr, align 8, !dbg !15128, !tbaa !2648
  %call = call i8* @gettext(i8* %0) #9, !dbg !15128
  store i8* %call, i8** %translation, align 8, !dbg !15127, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %locale_code, metadata !15129, metadata !DIExpression()), !dbg !15130
  %1 = load i8*, i8** %translation, align 8, !dbg !15131, !tbaa !2648
  %2 = load i8*, i8** %msgid.addr, align 8, !dbg !15133, !tbaa !2648
  %cmp = icmp ne i8* %1, %2, !dbg !15134
  br i1 %cmp, label %if.then, label %if.end, !dbg !15135

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %translation, align 8, !dbg !15136, !tbaa !2648
  store i8* %3, i8** %retval, align 8, !dbg !15137
  br label %return, !dbg !15137

if.end:                                           ; preds = %entry
  %call1 = call i8* @locale_charset(), !dbg !15138
  store i8* %call1, i8** %locale_code, align 8, !dbg !15139, !tbaa !2648
  %4 = load i8*, i8** %locale_code, align 8, !dbg !15140, !tbaa !2648
  %call2 = call i32 @c_strcasecmp(i8* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.331, i64 0, i64 0)) #14, !dbg !15140
  %cmp3 = icmp eq i32 %call2, 0, !dbg !15140
  br i1 %cmp3, label %if.then4, label %if.end7, !dbg !15142

if.then4:                                         ; preds = %if.end
  %5 = load i8*, i8** %msgid.addr, align 8, !dbg !15143, !tbaa !2648
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !15143, !ctir !180
  %6 = load i8, i8* %arrayidx, align 1, !dbg !15143, !tbaa !3295
  %conv = sext i8 %6 to i32, !dbg !15143
  %cmp5 = icmp eq i32 %conv, 96, !dbg !15144
  %7 = zext i1 %cmp5 to i64, !dbg !15143
  %cond = select i1 %cmp5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.332, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.333, i64 0, i64 0), !dbg !15143
  store i8* %cond, i8** %retval, align 8, !dbg !15145
  br label %return, !dbg !15145

if.end7:                                          ; preds = %if.end
  %8 = load i8*, i8** %locale_code, align 8, !dbg !15146, !tbaa !2648
  %call8 = call i32 @c_strcasecmp(i8* %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.334, i64 0, i64 0)) #14, !dbg !15146
  %cmp9 = icmp eq i32 %call8, 0, !dbg !15146
  br i1 %cmp9, label %if.then11, label %if.end17, !dbg !15148

if.then11:                                        ; preds = %if.end7
  %9 = load i8*, i8** %msgid.addr, align 8, !dbg !15149, !tbaa !2648
  %arrayidx12 = getelementptr inbounds i8, i8* %9, i64 0, !dbg !15149, !ctir !180
  %10 = load i8, i8* %arrayidx12, align 1, !dbg !15149, !tbaa !3295
  %conv13 = sext i8 %10 to i32, !dbg !15149
  %cmp14 = icmp eq i32 %conv13, 96, !dbg !15150
  %11 = zext i1 %cmp14 to i64, !dbg !15149
  %cond16 = select i1 %cmp14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.335, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.336, i64 0, i64 0), !dbg !15149
  store i8* %cond16, i8** %retval, align 8, !dbg !15151
  br label %return, !dbg !15151

if.end17:                                         ; preds = %if.end7
  %12 = load i32, i32* %s.addr, align 4, !dbg !15152, !tbaa !3295
  %cmp18 = icmp eq i32 %12, 9, !dbg !15153
  %13 = zext i1 %cmp18 to i64, !dbg !15152
  %cond20 = select i1 %cmp18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.328, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.330, i64 0, i64 0), !dbg !15152
  store i8* %cond20, i8** %retval, align 8, !dbg !15154
  br label %return, !dbg !15154

return:                                           ; preds = %if.end17, %if.then11, %if.then4, %if.then
  %14 = load i8*, i8** %retval, align 8, !dbg !15155
  ret i8* %14, !dbg !15155
}

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #8

; Function Attrs: nounwind
declare dso_local i32 @iswprint(i32) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @mbsinit(%struct.savewd*) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_alloc(i8* %arg, i64 %argsize, %struct.quoting_options* %o) #4 !dbg !15156 !ctir !1063 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15157, metadata !DIExpression()), !dbg !15158
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15159, metadata !DIExpression()), !dbg !15160
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !15161, metadata !DIExpression()), !dbg !15162
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15163, !tbaa !2648
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !15164, !tbaa !3288
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !15165, !tbaa !2648
  %call = call i8* @quotearg_alloc_mem(i8* %0, i64 %1, i64* null, %struct.quoting_options* %2), !dbg !15166
  ret i8* %call, !dbg !15167
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_alloc_mem(i8* %arg, i64 %argsize, i64* %size, %struct.quoting_options* %o) #4 !dbg !15168 !ctir !1065 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %size.addr = alloca i64*, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  %p = alloca %struct.quoting_options*, align 8, !ctir !1050
  %e = alloca i32, align 4, !ctir !7
  %flags = alloca i32, align 4, !ctir !7
  %bufsize = alloca i64, align 8, !ctir !55
  %buf = alloca i8*, align 8, !ctir !9
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15169, metadata !DIExpression()), !dbg !15170
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15171, metadata !DIExpression()), !dbg !15172
  store i64* %size, i64** %size.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i64** %size.addr, metadata !15173, metadata !DIExpression()), !dbg !15174
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !15175, metadata !DIExpression()), !dbg !15176
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !15177, metadata !DIExpression()), !dbg !15178
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !15179, !tbaa !2648
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !15179
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !15179

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !15180, !tbaa !2648
  br label %cond.end, !dbg !15179

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !15179

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !15179
  store %struct.quoting_options* %cond, %struct.quoting_options** %p, align 8, !dbg !15178, !tbaa !2648
  call void @llvm.dbg.declare(metadata i32* %e, metadata !15181, metadata !DIExpression()), !dbg !15182
  %call = call i32* @__errno_location() #16, !dbg !15183
  %2 = load i32, i32* %call, align 4, !dbg !15183, !tbaa !2635, !ctir !7
  store i32 %2, i32* %e, align 4, !dbg !15182, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !15184, metadata !DIExpression()), !dbg !15185
  %3 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15186, !tbaa !2648
  %flags1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %3, i32 0, i32 1, !dbg !15187, !ctir !1051
  %4 = load i32, i32* %flags1, align 4, !dbg !15187, !tbaa !14173, !ctir !7
  %5 = load i64*, i64** %size.addr, align 8, !dbg !15188, !tbaa !2648
  %tobool2 = icmp ne i64* %5, null, !dbg !15188
  %6 = zext i1 %tobool2 to i64, !dbg !15188
  %cond3 = select i1 %tobool2, i32 0, i32 1, !dbg !15188
  %or = or i32 %4, %cond3, !dbg !15189
  store i32 %or, i32* %flags, align 4, !dbg !15185, !tbaa !2635
  call void @llvm.dbg.declare(metadata i64* %bufsize, metadata !15190, metadata !DIExpression()), !dbg !15191
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !15192, !tbaa !2648
  %8 = load i64, i64* %argsize.addr, align 8, !dbg !15193, !tbaa !3288
  %9 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15194, !tbaa !2648
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %9, i32 0, i32 0, !dbg !15195, !ctir !1051
  %10 = load i32, i32* %style, align 8, !dbg !15195, !tbaa !14105, !ctir !1014
  %11 = load i32, i32* %flags, align 4, !dbg !15196, !tbaa !2635
  %12 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15197, !tbaa !2648
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %12, i32 0, i32 2, !dbg !15198, !ctir !1051
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !15197
  %13 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15199, !tbaa !2648
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %13, i32 0, i32 3, !dbg !15200, !ctir !1051
  %14 = load i8*, i8** %left_quote, align 8, !dbg !15200, !tbaa !14206, !ctir !180
  %15 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15201, !tbaa !2648
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %15, i32 0, i32 4, !dbg !15202, !ctir !1051
  %16 = load i8*, i8** %right_quote, align 8, !dbg !15202, !tbaa !14211, !ctir !180
  %call4 = call i64 @quotearg_buffer_restyled(i8* null, i64 0, i8* %7, i64 %8, i32 %10, i32 %11, i32* %arraydecay, i8* %14, i8* %16), !dbg !15203
  %add = add i64 %call4, 1, !dbg !15204
  store i64 %add, i64* %bufsize, align 8, !dbg !15191, !tbaa !3288
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !15205, metadata !DIExpression()), !dbg !15206
  %17 = load i64, i64* %bufsize, align 8, !dbg !15207, !tbaa !3288
  %call5 = call noalias i8* @xcharalloc(i64 %17), !dbg !15208
  store i8* %call5, i8** %buf, align 8, !dbg !15206, !tbaa !2648
  %18 = load i8*, i8** %buf, align 8, !dbg !15209, !tbaa !2648
  %19 = load i64, i64* %bufsize, align 8, !dbg !15210, !tbaa !3288
  %20 = load i8*, i8** %arg.addr, align 8, !dbg !15211, !tbaa !2648
  %21 = load i64, i64* %argsize.addr, align 8, !dbg !15212, !tbaa !3288
  %22 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15213, !tbaa !2648
  %style6 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %22, i32 0, i32 0, !dbg !15214, !ctir !1051
  %23 = load i32, i32* %style6, align 8, !dbg !15214, !tbaa !14105, !ctir !1014
  %24 = load i32, i32* %flags, align 4, !dbg !15215, !tbaa !2635
  %25 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15216, !tbaa !2648
  %quote_these_too7 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %25, i32 0, i32 2, !dbg !15217, !ctir !1051
  %arraydecay8 = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too7, i64 0, i64 0, !dbg !15216
  %26 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15218, !tbaa !2648
  %left_quote9 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %26, i32 0, i32 3, !dbg !15219, !ctir !1051
  %27 = load i8*, i8** %left_quote9, align 8, !dbg !15219, !tbaa !14206, !ctir !180
  %28 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15220, !tbaa !2648
  %right_quote10 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %28, i32 0, i32 4, !dbg !15221, !ctir !1051
  %29 = load i8*, i8** %right_quote10, align 8, !dbg !15221, !tbaa !14211, !ctir !180
  %call11 = call i64 @quotearg_buffer_restyled(i8* %18, i64 %19, i8* %20, i64 %21, i32 %23, i32 %24, i32* %arraydecay8, i8* %27, i8* %29), !dbg !15222
  %30 = load i32, i32* %e, align 4, !dbg !15223, !tbaa !2635
  %call12 = call i32* @__errno_location() #16, !dbg !15224
  store i32 %30, i32* %call12, align 4, !dbg !15225, !tbaa !2635, !ctir !7
  %31 = load i64*, i64** %size.addr, align 8, !dbg !15226, !tbaa !2648
  %tobool13 = icmp ne i64* %31, null, !dbg !15226
  br i1 %tobool13, label %if.then, label %if.end, !dbg !15228

if.then:                                          ; preds = %cond.end
  %32 = load i64, i64* %bufsize, align 8, !dbg !15229, !tbaa !3288
  %sub = sub i64 %32, 1, !dbg !15230
  %33 = load i64*, i64** %size.addr, align 8, !dbg !15231, !tbaa !2648
  store i64 %sub, i64* %33, align 8, !dbg !15232, !tbaa !3288, !ctir !55
  br label %if.end, !dbg !15233

if.end:                                           ; preds = %if.then, %cond.end
  %34 = load i8*, i8** %buf, align 8, !dbg !15234, !tbaa !2648
  ret i8* %34, !dbg !15235
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @quotearg_free() #4 !dbg !15236 !ctir !200 {
entry:
  %sv = alloca %struct.slotvec*, align 8, !ctir !1067
  %i = alloca i32, align 4, !ctir !7
  call void @llvm.dbg.declare(metadata %struct.slotvec** %sv, metadata !15237, metadata !DIExpression()), !dbg !15238
  %0 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !15239, !tbaa !2648
  store %struct.slotvec* %0, %struct.slotvec** %sv, align 8, !dbg !15238, !tbaa !2648
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15240, metadata !DIExpression()), !dbg !15241
  store i32 1, i32* %i, align 4, !dbg !15242, !tbaa !2635
  br label %for.cond, !dbg !15244

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !15245, !tbaa !2635
  %2 = load i32, i32* @nslots, align 4, !dbg !15247, !tbaa !2635
  %cmp = icmp slt i32 %1, %2, !dbg !15248
  br i1 %cmp, label %for.body, label %for.end, !dbg !15249

for.body:                                         ; preds = %for.cond
  %3 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15250, !tbaa !2648
  %4 = load i32, i32* %i, align 4, !dbg !15251, !tbaa !2635
  %idxprom = sext i32 %4 to i64, !dbg !15250
  %arrayidx = getelementptr inbounds %struct.slotvec, %struct.slotvec* %3, i64 %idxprom, !dbg !15250, !ctir !1067
  %val = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx, i32 0, i32 1, !dbg !15252, !ctir !1068
  %5 = load i8*, i8** %val, align 8, !dbg !15252, !tbaa !15253, !ctir !9
  call void @free(i8* %5) #9, !dbg !15255
  br label %for.inc, !dbg !15255

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !15256, !tbaa !2635
  %inc = add nsw i32 %6, 1, !dbg !15256
  store i32 %inc, i32* %i, align 4, !dbg !15256, !tbaa !2635
  br label %for.cond, !dbg !15257, !llvm.loop !15258

for.end:                                          ; preds = %for.cond
  %7 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15260, !tbaa !2648
  %arrayidx1 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %7, i64 0, !dbg !15260, !ctir !1067
  %val2 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx1, i32 0, i32 1, !dbg !15262, !ctir !1068
  %8 = load i8*, i8** %val2, align 8, !dbg !15262, !tbaa !15253, !ctir !9
  %cmp3 = icmp ne i8* %8, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !15263
  br i1 %cmp3, label %if.then, label %if.end, !dbg !15264

if.then:                                          ; preds = %for.end
  %9 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15265, !tbaa !2648
  %arrayidx4 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %9, i64 0, !dbg !15265, !ctir !1067
  %val5 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx4, i32 0, i32 1, !dbg !15267, !ctir !1068
  %10 = load i8*, i8** %val5, align 8, !dbg !15267, !tbaa !15253, !ctir !9
  call void @free(i8* %10) #9, !dbg !15268
  store i64 256, i64* getelementptr inbounds (%struct.slotvec, %struct.slotvec* @slotvec0, i32 0, i32 0), align 8, !dbg !15269, !tbaa !15270, !ctir !55
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), i8** getelementptr inbounds (%struct.slotvec, %struct.slotvec* @slotvec0, i32 0, i32 1), align 8, !dbg !15271, !tbaa !15253, !ctir !9
  br label %if.end, !dbg !15272

if.end:                                           ; preds = %if.then, %for.end
  %11 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15273, !tbaa !2648
  %cmp6 = icmp ne %struct.slotvec* %11, @slotvec0, !dbg !15275
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !15276

if.then7:                                         ; preds = %if.end
  %12 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15277, !tbaa !2648
  %13 = bitcast %struct.slotvec* %12 to i8*, !dbg !15277
  call void @free(i8* %13) #9, !dbg !15279
  store %struct.slotvec* @slotvec0, %struct.slotvec** @slotvec, align 8, !dbg !15280, !tbaa !2648
  br label %if.end8, !dbg !15281

if.end8:                                          ; preds = %if.then7, %if.end
  store i32 1, i32* @nslots, align 4, !dbg !15282, !tbaa !2635
  ret void, !dbg !15283
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n(i32 %n, i8* %arg) #4 !dbg !15284 !ctir !1072 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15285, metadata !DIExpression()), !dbg !15286
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15287, metadata !DIExpression()), !dbg !15288
  %0 = load i32, i32* %n.addr, align 4, !dbg !15289, !tbaa !2635
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15290, !tbaa !2648
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 -1, %struct.quoting_options* @default_quoting_options), !dbg !15291
  ret i8* %call, !dbg !15292
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_options(i32 %n, i8* %arg, i64 %argsize, %struct.quoting_options* %options) #4 !dbg !15293 !ctir !1130 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %options.addr = alloca %struct.quoting_options*, align 8
  %e = alloca i32, align 4, !ctir !7
  %sv = alloca %struct.slotvec*, align 8, !ctir !1067
  %preallocated = alloca i8, align 1, !ctir !142
  %nmax = alloca i32, align 4, !ctir !7
  %size = alloca i64, align 8, !ctir !55
  %val = alloca i8*, align 8, !ctir !9
  %flags = alloca i32, align 4, !ctir !7
  %qsize = alloca i64, align 8, !ctir !55
  store i32 %n, i32* %n.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15294, metadata !DIExpression()), !dbg !15295
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15296, metadata !DIExpression()), !dbg !15297
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15298, metadata !DIExpression()), !dbg !15299
  store %struct.quoting_options* %options, %struct.quoting_options** %options.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %options.addr, metadata !15300, metadata !DIExpression()), !dbg !15301
  call void @llvm.dbg.declare(metadata i32* %e, metadata !15302, metadata !DIExpression()), !dbg !15303
  %call = call i32* @__errno_location() #16, !dbg !15304
  %0 = load i32, i32* %call, align 4, !dbg !15304, !tbaa !2635, !ctir !7
  store i32 %0, i32* %e, align 4, !dbg !15303, !tbaa !2635
  call void @llvm.dbg.declare(metadata %struct.slotvec** %sv, metadata !15305, metadata !DIExpression()), !dbg !15306
  %1 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !15307, !tbaa !2648
  store %struct.slotvec* %1, %struct.slotvec** %sv, align 8, !dbg !15306, !tbaa !2648
  %2 = load i32, i32* %n.addr, align 4, !dbg !15308, !tbaa !2635
  %cmp = icmp slt i32 %2, 0, !dbg !15310
  br i1 %cmp, label %if.then, label %if.end, !dbg !15311

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !15312
  unreachable, !dbg !15312

if.end:                                           ; preds = %entry
  %3 = load i32, i32* @nslots, align 4, !dbg !15313, !tbaa !2635
  %4 = load i32, i32* %n.addr, align 4, !dbg !15315, !tbaa !2635
  %cmp1 = icmp sle i32 %3, %4, !dbg !15316
  br i1 %cmp1, label %if.then2, label %if.end15, !dbg !15317

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %preallocated, metadata !15318, metadata !DIExpression()), !dbg !15320
  %5 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15321, !tbaa !2648
  %cmp3 = icmp eq %struct.slotvec* %5, @slotvec0, !dbg !15322
  %frombool = zext i1 %cmp3 to i8, !dbg !15320
  store i8 %frombool, i8* %preallocated, align 1, !dbg !15320, !tbaa !2742
  call void @llvm.dbg.declare(metadata i32* %nmax, metadata !15323, metadata !DIExpression()), !dbg !15324
  store i32 2147483646, i32* %nmax, align 4, !dbg !15324, !tbaa !2635
  %6 = load i32, i32* %nmax, align 4, !dbg !15325, !tbaa !2635
  %7 = load i32, i32* %n.addr, align 4, !dbg !15327, !tbaa !2635
  %cmp4 = icmp slt i32 %6, %7, !dbg !15328
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !15329

if.then5:                                         ; preds = %if.then2
  call void @xalloc_die() #15, !dbg !15330
  unreachable, !dbg !15330

if.end6:                                          ; preds = %if.then2
  %8 = load i8, i8* %preallocated, align 1, !dbg !15331, !tbaa !2742
  %tobool = trunc i8 %8 to i1, !dbg !15331
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !15331

cond.true:                                        ; preds = %if.end6
  br label %cond.end, !dbg !15331

cond.false:                                       ; preds = %if.end6
  %9 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15332, !tbaa !2648
  br label %cond.end, !dbg !15331

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.slotvec* [ null, %cond.true ], [ %9, %cond.false ], !dbg !15331
  %10 = bitcast %struct.slotvec* %cond to i8*, !dbg !15331
  %11 = load i32, i32* %n.addr, align 4, !dbg !15333, !tbaa !2635
  %add = add nsw i32 %11, 1, !dbg !15334
  %conv = sext i32 %add to i64, !dbg !15335
  %mul = mul i64 %conv, 16, !dbg !15336
  %call7 = call i8* @xrealloc(i8* %10, i64 %mul), !dbg !15337
  %12 = bitcast i8* %call7 to %struct.slotvec*, !dbg !15337
  store %struct.slotvec* %12, %struct.slotvec** %sv, align 8, !dbg !15338, !tbaa !2648
  store %struct.slotvec* %12, %struct.slotvec** @slotvec, align 8, !dbg !15339, !tbaa !2648
  %13 = load i8, i8* %preallocated, align 1, !dbg !15340, !tbaa !2742
  %tobool8 = trunc i8 %13 to i1, !dbg !15340
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !15342

if.then9:                                         ; preds = %cond.end
  %14 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15343, !tbaa !2648
  %15 = bitcast %struct.slotvec* %14 to i8*, !dbg !15344
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 bitcast (%struct.slotvec* @slotvec0 to i8*), i64 16, i1 false), !dbg !15344, !tbaa.struct !15345
  br label %if.end10, !dbg !15346

if.end10:                                         ; preds = %if.then9, %cond.end
  %16 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15347, !tbaa !2648
  %17 = load i32, i32* @nslots, align 4, !dbg !15348, !tbaa !2635
  %idx.ext = sext i32 %17 to i64, !dbg !15349
  %add.ptr = getelementptr inbounds %struct.slotvec, %struct.slotvec* %16, i64 %idx.ext, !dbg !15349
  %18 = bitcast %struct.slotvec* %add.ptr to i8*, !dbg !15350
  %19 = load i32, i32* %n.addr, align 4, !dbg !15351, !tbaa !2635
  %add11 = add nsw i32 %19, 1, !dbg !15352
  %20 = load i32, i32* @nslots, align 4, !dbg !15353, !tbaa !2635
  %sub = sub nsw i32 %add11, %20, !dbg !15354
  %conv12 = sext i32 %sub to i64, !dbg !15355
  %mul13 = mul i64 %conv12, 16, !dbg !15356
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 %mul13, i1 false), !dbg !15350
  %21 = load i32, i32* %n.addr, align 4, !dbg !15357, !tbaa !2635
  %add14 = add nsw i32 %21, 1, !dbg !15358
  store i32 %add14, i32* @nslots, align 4, !dbg !15359, !tbaa !2635
  br label %if.end15, !dbg !15360

if.end15:                                         ; preds = %if.end10, %if.end
  call void @llvm.dbg.declare(metadata i64* %size, metadata !15361, metadata !DIExpression()), !dbg !15363
  %22 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15364, !tbaa !2648
  %23 = load i32, i32* %n.addr, align 4, !dbg !15365, !tbaa !2635
  %idxprom = sext i32 %23 to i64, !dbg !15364
  %arrayidx = getelementptr inbounds %struct.slotvec, %struct.slotvec* %22, i64 %idxprom, !dbg !15364, !ctir !1067
  %size16 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx, i32 0, i32 0, !dbg !15366, !ctir !1068
  %24 = load i64, i64* %size16, align 8, !dbg !15366, !tbaa !15270, !ctir !55
  store i64 %24, i64* %size, align 8, !dbg !15363, !tbaa !3288
  call void @llvm.dbg.declare(metadata i8** %val, metadata !15367, metadata !DIExpression()), !dbg !15368
  %25 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15369, !tbaa !2648
  %26 = load i32, i32* %n.addr, align 4, !dbg !15370, !tbaa !2635
  %idxprom17 = sext i32 %26 to i64, !dbg !15369
  %arrayidx18 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %25, i64 %idxprom17, !dbg !15369, !ctir !1067
  %val19 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx18, i32 0, i32 1, !dbg !15371, !ctir !1068
  %27 = load i8*, i8** %val19, align 8, !dbg !15371, !tbaa !15253, !ctir !9
  store i8* %27, i8** %val, align 8, !dbg !15368, !tbaa !2648
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !15372, metadata !DIExpression()), !dbg !15373
  %28 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15374, !tbaa !2648
  %flags20 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %28, i32 0, i32 1, !dbg !15375, !ctir !1051
  %29 = load i32, i32* %flags20, align 4, !dbg !15375, !tbaa !14173, !ctir !7
  %or = or i32 %29, 1, !dbg !15376
  store i32 %or, i32* %flags, align 4, !dbg !15373, !tbaa !2635
  call void @llvm.dbg.declare(metadata i64* %qsize, metadata !15377, metadata !DIExpression()), !dbg !15378
  %30 = load i8*, i8** %val, align 8, !dbg !15379, !tbaa !2648
  %31 = load i64, i64* %size, align 8, !dbg !15380, !tbaa !3288
  %32 = load i8*, i8** %arg.addr, align 8, !dbg !15381, !tbaa !2648
  %33 = load i64, i64* %argsize.addr, align 8, !dbg !15382, !tbaa !3288
  %34 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15383, !tbaa !2648
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %34, i32 0, i32 0, !dbg !15384, !ctir !1051
  %35 = load i32, i32* %style, align 8, !dbg !15384, !tbaa !14105, !ctir !1014
  %36 = load i32, i32* %flags, align 4, !dbg !15385, !tbaa !2635
  %37 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15386, !tbaa !2648
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %37, i32 0, i32 2, !dbg !15387, !ctir !1051
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !15386
  %38 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15388, !tbaa !2648
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %38, i32 0, i32 3, !dbg !15389, !ctir !1051
  %39 = load i8*, i8** %left_quote, align 8, !dbg !15389, !tbaa !14206, !ctir !180
  %40 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15390, !tbaa !2648
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %40, i32 0, i32 4, !dbg !15391, !ctir !1051
  %41 = load i8*, i8** %right_quote, align 8, !dbg !15391, !tbaa !14211, !ctir !180
  %call21 = call i64 @quotearg_buffer_restyled(i8* %30, i64 %31, i8* %32, i64 %33, i32 %35, i32 %36, i32* %arraydecay, i8* %39, i8* %41), !dbg !15392
  store i64 %call21, i64* %qsize, align 8, !dbg !15378, !tbaa !3288
  %42 = load i64, i64* %size, align 8, !dbg !15393, !tbaa !3288
  %43 = load i64, i64* %qsize, align 8, !dbg !15395, !tbaa !3288
  %cmp22 = icmp ule i64 %42, %43, !dbg !15396
  br i1 %cmp22, label %if.then24, label %if.end43, !dbg !15397

if.then24:                                        ; preds = %if.end15
  %44 = load i64, i64* %qsize, align 8, !dbg !15398, !tbaa !3288
  %add25 = add i64 %44, 1, !dbg !15400
  store i64 %add25, i64* %size, align 8, !dbg !15401, !tbaa !3288
  %45 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15402, !tbaa !2648
  %46 = load i32, i32* %n.addr, align 4, !dbg !15403, !tbaa !2635
  %idxprom26 = sext i32 %46 to i64, !dbg !15402
  %arrayidx27 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %45, i64 %idxprom26, !dbg !15402, !ctir !1067
  %size28 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx27, i32 0, i32 0, !dbg !15404, !ctir !1068
  store i64 %add25, i64* %size28, align 8, !dbg !15405, !tbaa !15270, !ctir !55
  %47 = load i8*, i8** %val, align 8, !dbg !15406, !tbaa !2648
  %cmp29 = icmp ne i8* %47, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !15408
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !15409

if.then31:                                        ; preds = %if.then24
  %48 = load i8*, i8** %val, align 8, !dbg !15410, !tbaa !2648
  call void @free(i8* %48) #9, !dbg !15411
  br label %if.end32, !dbg !15411

if.end32:                                         ; preds = %if.then31, %if.then24
  %49 = load i64, i64* %size, align 8, !dbg !15412, !tbaa !3288
  %call33 = call noalias i8* @xcharalloc(i64 %49), !dbg !15413
  store i8* %call33, i8** %val, align 8, !dbg !15414, !tbaa !2648
  %50 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15415, !tbaa !2648
  %51 = load i32, i32* %n.addr, align 4, !dbg !15416, !tbaa !2635
  %idxprom34 = sext i32 %51 to i64, !dbg !15415
  %arrayidx35 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %50, i64 %idxprom34, !dbg !15415, !ctir !1067
  %val36 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx35, i32 0, i32 1, !dbg !15417, !ctir !1068
  store i8* %call33, i8** %val36, align 8, !dbg !15418, !tbaa !15253, !ctir !9
  %52 = load i8*, i8** %val, align 8, !dbg !15419, !tbaa !2648
  %53 = load i64, i64* %size, align 8, !dbg !15420, !tbaa !3288
  %54 = load i8*, i8** %arg.addr, align 8, !dbg !15421, !tbaa !2648
  %55 = load i64, i64* %argsize.addr, align 8, !dbg !15422, !tbaa !3288
  %56 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15423, !tbaa !2648
  %style37 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %56, i32 0, i32 0, !dbg !15424, !ctir !1051
  %57 = load i32, i32* %style37, align 8, !dbg !15424, !tbaa !14105, !ctir !1014
  %58 = load i32, i32* %flags, align 4, !dbg !15425, !tbaa !2635
  %59 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15426, !tbaa !2648
  %quote_these_too38 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %59, i32 0, i32 2, !dbg !15427, !ctir !1051
  %arraydecay39 = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too38, i64 0, i64 0, !dbg !15426
  %60 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15428, !tbaa !2648
  %left_quote40 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %60, i32 0, i32 3, !dbg !15429, !ctir !1051
  %61 = load i8*, i8** %left_quote40, align 8, !dbg !15429, !tbaa !14206, !ctir !180
  %62 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15430, !tbaa !2648
  %right_quote41 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %62, i32 0, i32 4, !dbg !15431, !ctir !1051
  %63 = load i8*, i8** %right_quote41, align 8, !dbg !15431, !tbaa !14211, !ctir !180
  %call42 = call i64 @quotearg_buffer_restyled(i8* %52, i64 %53, i8* %54, i64 %55, i32 %57, i32 %58, i32* %arraydecay39, i8* %61, i8* %63), !dbg !15432
  br label %if.end43, !dbg !15433

if.end43:                                         ; preds = %if.end32, %if.end15
  %64 = load i32, i32* %e, align 4, !dbg !15434, !tbaa !2635
  %call44 = call i32* @__errno_location() #16, !dbg !15435
  store i32 %64, i32* %call44, align 4, !dbg !15436, !tbaa !2635, !ctir !7
  %65 = load i8*, i8** %val, align 8, !dbg !15437, !tbaa !2648
  ret i8* %65, !dbg !15438
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_mem(i32 %n, i8* %arg, i64 %argsize) #4 !dbg !15439 !ctir !1074 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15440, metadata !DIExpression()), !dbg !15441
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15442, metadata !DIExpression()), !dbg !15443
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15444, metadata !DIExpression()), !dbg !15445
  %0 = load i32, i32* %n.addr, align 4, !dbg !15446, !tbaa !2635
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15447, !tbaa !2648
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !15448, !tbaa !3288
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 %2, %struct.quoting_options* @default_quoting_options), !dbg !15449
  ret i8* %call, !dbg !15450
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg(i8* %arg) #4 !dbg !15451 !ctir !218 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15452, metadata !DIExpression()), !dbg !15453
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15454, !tbaa !2648
  %call = call i8* @quotearg_n(i32 0, i8* %0), !dbg !15455
  ret i8* %call, !dbg !15456
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_mem(i8* %arg, i64 %argsize) #4 !dbg !15457 !ctir !1076 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15458, metadata !DIExpression()), !dbg !15459
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15460, metadata !DIExpression()), !dbg !15461
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15462, !tbaa !2648
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !15463, !tbaa !3288
  %call = call i8* @quotearg_n_mem(i32 0, i8* %0, i64 %1), !dbg !15464
  ret i8* %call, !dbg !15465
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style(i32 %n, i32 %s, i8* %arg) #4 !dbg !15466 !ctir !1078 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %o = alloca %struct.quoting_options, align 8, !ctir !1051
  store i32 %n, i32* %n.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15467, metadata !DIExpression()), !dbg !15468
  store i32 %s, i32* %s.addr, align 4, !tbaa !3295
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !15469, metadata !DIExpression()), !dbg !15470
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15471, metadata !DIExpression()), !dbg !15472
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !15473, metadata !DIExpression()), !dbg !15474
  %0 = load i32, i32* %s.addr, align 4, !dbg !15475, !tbaa !3295
  call void @quoting_options_from_style(%struct.quoting_options* sret %o, i32 %0), !dbg !15476
  %1 = load i32, i32* %n.addr, align 4, !dbg !15477, !tbaa !2635
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !15478, !tbaa !2648
  %call = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 -1, %struct.quoting_options* %o), !dbg !15479
  ret i8* %call, !dbg !15480
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @quoting_options_from_style(%struct.quoting_options* noalias sret %agg.result, i32 %style) #4 !dbg !15481 !ctir !1132 {
entry:
  %style.addr = alloca i32, align 4
  store i32 %style, i32* %style.addr, align 4, !tbaa !3295
  call void @llvm.dbg.declare(metadata i32* %style.addr, metadata !15482, metadata !DIExpression()), !dbg !15483
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %agg.result, metadata !15484, metadata !DIExpression()), !dbg !15485
  %0 = bitcast %struct.quoting_options* %agg.result to i8*, !dbg !15485
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 56, i1 false), !dbg !15485
  %1 = load i32, i32* %style.addr, align 4, !dbg !15486, !tbaa !3295
  %cmp = icmp eq i32 %1, 10, !dbg !15488
  br i1 %cmp, label %if.then, label %if.end, !dbg !15489

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !15490
  unreachable, !dbg !15490

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %style.addr, align 4, !dbg !15491, !tbaa !3295
  %style1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %agg.result, i32 0, i32 0, !dbg !15492, !ctir !1039
  store i32 %2, i32* %style1, align 8, !dbg !15493, !tbaa !14105, !ctir !1014
  ret void, !dbg !15494
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style_mem(i32 %n, i32 %s, i8* %arg, i64 %argsize) #4 !dbg !15495 !ctir !1080 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o = alloca %struct.quoting_options, align 8, !ctir !1051
  store i32 %n, i32* %n.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15496, metadata !DIExpression()), !dbg !15497
  store i32 %s, i32* %s.addr, align 4, !tbaa !3295
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !15498, metadata !DIExpression()), !dbg !15499
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15500, metadata !DIExpression()), !dbg !15501
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15502, metadata !DIExpression()), !dbg !15503
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !15504, metadata !DIExpression()), !dbg !15505
  %0 = load i32, i32* %s.addr, align 4, !dbg !15506, !tbaa !3295
  call void @quoting_options_from_style(%struct.quoting_options* sret %o, i32 %0), !dbg !15507
  %1 = load i32, i32* %n.addr, align 4, !dbg !15508, !tbaa !2635
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !15509, !tbaa !2648
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !15510, !tbaa !3288
  %call = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 %3, %struct.quoting_options* %o), !dbg !15511
  ret i8* %call, !dbg !15512
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_style(i32 %s, i8* %arg) #4 !dbg !15513 !ctir !1082 {
entry:
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %s, i32* %s.addr, align 4, !tbaa !3295
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !15514, metadata !DIExpression()), !dbg !15515
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15516, metadata !DIExpression()), !dbg !15517
  %0 = load i32, i32* %s.addr, align 4, !dbg !15518, !tbaa !3295
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15519, !tbaa !2648
  %call = call i8* @quotearg_n_style(i32 0, i32 %0, i8* %1), !dbg !15520
  ret i8* %call, !dbg !15521
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_style_mem(i32 %s, i8* %arg, i64 %argsize) #4 !dbg !15522 !ctir !1084 {
entry:
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i32 %s, i32* %s.addr, align 4, !tbaa !3295
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !15523, metadata !DIExpression()), !dbg !15524
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15525, metadata !DIExpression()), !dbg !15526
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15527, metadata !DIExpression()), !dbg !15528
  %0 = load i32, i32* %s.addr, align 4, !dbg !15529, !tbaa !3295
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15530, !tbaa !2648
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !15531, !tbaa !3288
  %call = call i8* @quotearg_n_style_mem(i32 0, i32 %0, i8* %1, i64 %2), !dbg !15532
  ret i8* %call, !dbg !15533
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_char_mem(i8* %arg, i64 %argsize, i8 signext %ch) #4 !dbg !15534 !ctir !1086 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %ch.addr = alloca i8, align 1
  %options = alloca %struct.quoting_options, align 8, !ctir !1039
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15535, metadata !DIExpression()), !dbg !15536
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15537, metadata !DIExpression()), !dbg !15538
  store i8 %ch, i8* %ch.addr, align 1, !tbaa !3295
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !15539, metadata !DIExpression()), !dbg !15540
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %options, metadata !15541, metadata !DIExpression()), !dbg !15542
  %0 = bitcast %struct.quoting_options* %options to i8*, !dbg !15543
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !15543, !tbaa.struct !15544
  %1 = load i8, i8* %ch.addr, align 1, !dbg !15545, !tbaa !3295
  %call = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext %1, i32 1), !dbg !15546
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !15547, !tbaa !2648
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !15548, !tbaa !3288
  %call1 = call i8* @quotearg_n_options(i32 0, i8* %2, i64 %3, %struct.quoting_options* %options), !dbg !15549
  ret i8* %call1, !dbg !15550
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_char(i8* %arg, i8 signext %ch) #4 !dbg !15551 !ctir !1088 {
entry:
  %arg.addr = alloca i8*, align 8
  %ch.addr = alloca i8, align 1
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15552, metadata !DIExpression()), !dbg !15553
  store i8 %ch, i8* %ch.addr, align 1, !tbaa !3295
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !15554, metadata !DIExpression()), !dbg !15555
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15556, !tbaa !2648
  %1 = load i8, i8* %ch.addr, align 1, !dbg !15557, !tbaa !3295
  %call = call i8* @quotearg_char_mem(i8* %0, i64 -1, i8 signext %1), !dbg !15558
  ret i8* %call, !dbg !15559
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_colon(i8* %arg) #4 !dbg !15560 !ctir !218 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15561, metadata !DIExpression()), !dbg !15562
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15563, !tbaa !2648
  %call = call i8* @quotearg_char(i8* %0, i8 signext 58), !dbg !15564
  ret i8* %call, !dbg !15565
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_colon_mem(i8* %arg, i64 %argsize) #4 !dbg !15566 !ctir !1076 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15567, metadata !DIExpression()), !dbg !15568
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15569, metadata !DIExpression()), !dbg !15570
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15571, !tbaa !2648
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !15572, !tbaa !3288
  %call = call i8* @quotearg_char_mem(i8* %0, i64 %1, i8 signext 58), !dbg !15573
  ret i8* %call, !dbg !15574
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style_colon(i32 %n, i32 %s, i8* %arg) #4 !dbg !15575 !ctir !1078 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %options = alloca %struct.quoting_options, align 8, !ctir !1039
  %tmp = alloca %struct.quoting_options, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15576, metadata !DIExpression()), !dbg !15577
  store i32 %s, i32* %s.addr, align 4, !tbaa !3295
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !15578, metadata !DIExpression()), !dbg !15579
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15580, metadata !DIExpression()), !dbg !15581
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %options, metadata !15582, metadata !DIExpression()), !dbg !15583
  %0 = load i32, i32* %s.addr, align 4, !dbg !15584, !tbaa !3295
  call void @quoting_options_from_style(%struct.quoting_options* sret %tmp, i32 %0), !dbg !15585
  %1 = bitcast %struct.quoting_options* %options to i8*, !dbg !15585
  %2 = bitcast %struct.quoting_options* %tmp to i8*, !dbg !15585
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 56, i1 false), !dbg !15585, !tbaa.struct !15544
  %call = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext 58, i32 1), !dbg !15586
  %3 = load i32, i32* %n.addr, align 4, !dbg !15587, !tbaa !2635
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !15588, !tbaa !2648
  %call1 = call i8* @quotearg_n_options(i32 %3, i8* %4, i64 -1, %struct.quoting_options* %options), !dbg !15589
  ret i8* %call1, !dbg !15590
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_custom(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg) #4 !dbg !15591 !ctir !1090 {
entry:
  %n.addr = alloca i32, align 4
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15592, metadata !DIExpression()), !dbg !15593
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !15594, metadata !DIExpression()), !dbg !15595
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !15596, metadata !DIExpression()), !dbg !15597
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15598, metadata !DIExpression()), !dbg !15599
  %0 = load i32, i32* %n.addr, align 4, !dbg !15600, !tbaa !2635
  %1 = load i8*, i8** %left_quote.addr, align 8, !dbg !15601, !tbaa !2648
  %2 = load i8*, i8** %right_quote.addr, align 8, !dbg !15602, !tbaa !2648
  %3 = load i8*, i8** %arg.addr, align 8, !dbg !15603, !tbaa !2648
  %call = call i8* @quotearg_n_custom_mem(i32 %0, i8* %1, i8* %2, i8* %3, i64 -1), !dbg !15604
  ret i8* %call, !dbg !15605
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_custom_mem(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) #4 !dbg !15606 !ctir !1092 {
entry:
  %n.addr = alloca i32, align 4
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o = alloca %struct.quoting_options, align 8, !ctir !1039
  store i32 %n, i32* %n.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15607, metadata !DIExpression()), !dbg !15608
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !15609, metadata !DIExpression()), !dbg !15610
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !15611, metadata !DIExpression()), !dbg !15612
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15613, metadata !DIExpression()), !dbg !15614
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15615, metadata !DIExpression()), !dbg !15616
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !15617, metadata !DIExpression()), !dbg !15618
  %0 = bitcast %struct.quoting_options* %o to i8*, !dbg !15619
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !15619, !tbaa.struct !15544
  %1 = load i8*, i8** %left_quote.addr, align 8, !dbg !15620, !tbaa !2648
  %2 = load i8*, i8** %right_quote.addr, align 8, !dbg !15621, !tbaa !2648
  call void @set_custom_quoting(%struct.quoting_options* %o, i8* %1, i8* %2), !dbg !15622
  %3 = load i32, i32* %n.addr, align 4, !dbg !15623, !tbaa !2635
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !15624, !tbaa !2648
  %5 = load i64, i64* %argsize.addr, align 8, !dbg !15625, !tbaa !3288
  %call = call i8* @quotearg_n_options(i32 %3, i8* %4, i64 %5, %struct.quoting_options* %o), !dbg !15626
  ret i8* %call, !dbg !15627
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_custom(i8* %left_quote, i8* %right_quote, i8* %arg) #4 !dbg !15628 !ctir !1094 {
entry:
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !15629, metadata !DIExpression()), !dbg !15630
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !15631, metadata !DIExpression()), !dbg !15632
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15633, metadata !DIExpression()), !dbg !15634
  %0 = load i8*, i8** %left_quote.addr, align 8, !dbg !15635, !tbaa !2648
  %1 = load i8*, i8** %right_quote.addr, align 8, !dbg !15636, !tbaa !2648
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !15637, !tbaa !2648
  %call = call i8* @quotearg_n_custom(i32 0, i8* %0, i8* %1, i8* %2), !dbg !15638
  ret i8* %call, !dbg !15639
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_custom_mem(i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) #4 !dbg !15640 !ctir !1096 {
entry:
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !15641, metadata !DIExpression()), !dbg !15642
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !15643, metadata !DIExpression()), !dbg !15644
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15645, metadata !DIExpression()), !dbg !15646
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15647, metadata !DIExpression()), !dbg !15648
  %0 = load i8*, i8** %left_quote.addr, align 8, !dbg !15649, !tbaa !2648
  %1 = load i8*, i8** %right_quote.addr, align 8, !dbg !15650, !tbaa !2648
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !15651, !tbaa !2648
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !15652, !tbaa !3288
  %call = call i8* @quotearg_n_custom_mem(i32 0, i8* %0, i8* %1, i8* %2, i64 %3), !dbg !15653
  ret i8* %call, !dbg !15654
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_n_mem(i32 %n, i8* %arg, i64 %argsize) #4 !dbg !15655 !ctir !1098 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15656, metadata !DIExpression()), !dbg !15657
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15658, metadata !DIExpression()), !dbg !15659
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15660, metadata !DIExpression()), !dbg !15661
  %0 = load i32, i32* %n.addr, align 4, !dbg !15662, !tbaa !2635
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15663, !tbaa !2648
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !15664, !tbaa !3288
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 %2, %struct.quoting_options* @quote_quoting_options), !dbg !15665
  ret i8* %call, !dbg !15666
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_mem(i8* %arg, i64 %argsize) #4 !dbg !15667 !ctir !1100 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15668, metadata !DIExpression()), !dbg !15669
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15670, metadata !DIExpression()), !dbg !15671
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15672, !tbaa !2648
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !15673, !tbaa !3288
  %call = call i8* @quote_n_mem(i32 0, i8* %0, i64 %1), !dbg !15674
  ret i8* %call, !dbg !15675
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_n(i32 %n, i8* %arg) #4 !dbg !15676 !ctir !1102 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15677, metadata !DIExpression()), !dbg !15678
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15679, metadata !DIExpression()), !dbg !15680
  %0 = load i32, i32* %n.addr, align 4, !dbg !15681, !tbaa !2635
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15682, !tbaa !2648
  %call = call i8* @quote_n_mem(i32 %0, i8* %1, i64 -1), !dbg !15683
  ret i8* %call, !dbg !15684
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote(i8* %arg) #4 !dbg !15685 !ctir !1104 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15686, metadata !DIExpression()), !dbg !15687
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15688, !tbaa !2648
  %call = call i8* @quote_n(i32 0, i8* %0), !dbg !15689
  ret i8* %call, !dbg !15690
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @renameatu(i32 %fd1, i8* %src, i32 %fd2, i8* %dst, i32 %flags) #4 !dbg !15691 !ctir !1787 {
entry:
  %retval = alloca i32, align 4
  %fd1.addr = alloca i32, align 4
  %src.addr = alloca i8*, align 8
  %fd2.addr = alloca i32, align 4
  %dst.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %ret_val = alloca i32, align 4, !ctir !7
  %err = alloca i32, align 4, !ctir !7
  %src_len = alloca i64, align 8, !ctir !55
  %dst_len = alloca i64, align 8, !ctir !55
  %src_temp = alloca i8*, align 8, !ctir !9
  %dst_temp = alloca i8*, align 8, !ctir !9
  %src_slash = alloca i8, align 1, !ctir !142
  %dst_slash = alloca i8, align 1, !ctir !142
  %rename_errno = alloca i32, align 4, !ctir !7
  %src_st = alloca %struct.stat, align 8, !ctir !15693
  %dst_st = alloca %struct.stat, align 8, !ctir !15693
  %dst_found_nonexistent = alloca i8, align 1, !ctir !142
  store i32 %fd1, i32* %fd1.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %fd1.addr, metadata !15714, metadata !DIExpression()), !dbg !15715
  store i8* %src, i8** %src.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !15716, metadata !DIExpression()), !dbg !15717
  store i32 %fd2, i32* %fd2.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %fd2.addr, metadata !15718, metadata !DIExpression()), !dbg !15719
  store i8* %dst, i8** %dst.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !15720, metadata !DIExpression()), !dbg !15721
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !15722, metadata !DIExpression()), !dbg !15723
  call void @llvm.dbg.declare(metadata i32* %ret_val, metadata !15724, metadata !DIExpression()), !dbg !15725
  store i32 -1, i32* %ret_val, align 4, !dbg !15725, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %err, metadata !15726, metadata !DIExpression()), !dbg !15727
  store i32 22, i32* %err, align 4, !dbg !15727, !tbaa !2635
  %0 = load i32, i32* %fd1.addr, align 4, !dbg !15728, !tbaa !2635
  %1 = load i8*, i8** %src.addr, align 8, !dbg !15729, !tbaa !2648
  %2 = load i32, i32* %fd2.addr, align 4, !dbg !15730, !tbaa !2635
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !15731, !tbaa !2648
  %4 = load i32, i32* %flags.addr, align 4, !dbg !15732, !tbaa !2635
  %call = call i32 @renameat2(i32 %0, i8* %1, i32 %2, i8* %3, i32 %4) #9, !dbg !15733
  store i32 %call, i32* %ret_val, align 4, !dbg !15734, !tbaa !2635
  %call1 = call i32* @__errno_location() #16, !dbg !15735
  %5 = load i32, i32* %call1, align 4, !dbg !15735, !tbaa !2635, !ctir !7
  store i32 %5, i32* %err, align 4, !dbg !15736, !tbaa !2635
  %6 = load i32, i32* %ret_val, align 4, !dbg !15737, !tbaa !2635
  %cmp = icmp slt i32 %6, 0, !dbg !15739
  br i1 %cmp, label %land.lhs.true, label %if.then, !dbg !15740

land.lhs.true:                                    ; preds = %entry
  %7 = load i32, i32* %err, align 4, !dbg !15741, !tbaa !2635
  %cmp2 = icmp eq i32 %7, 22, !dbg !15742
  br i1 %cmp2, label %if.end, label %lor.lhs.false, !dbg !15743

lor.lhs.false:                                    ; preds = %land.lhs.true
  %8 = load i32, i32* %err, align 4, !dbg !15744, !tbaa !2635
  %cmp3 = icmp eq i32 %8, 38, !dbg !15745
  br i1 %cmp3, label %if.end, label %lor.lhs.false4, !dbg !15746

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %9 = load i32, i32* %err, align 4, !dbg !15747, !tbaa !2635
  %cmp5 = icmp eq i32 %9, 95, !dbg !15748
  br i1 %cmp5, label %if.end, label %if.then, !dbg !15749

if.then:                                          ; preds = %lor.lhs.false4, %entry
  %10 = load i32, i32* %ret_val, align 4, !dbg !15750, !tbaa !2635
  store i32 %10, i32* %retval, align 4, !dbg !15751
  br label %return, !dbg !15751

if.end:                                           ; preds = %lor.lhs.false4, %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %src_len, metadata !15752, metadata !DIExpression()), !dbg !15754
  call void @llvm.dbg.declare(metadata i64* %dst_len, metadata !15755, metadata !DIExpression()), !dbg !15756
  call void @llvm.dbg.declare(metadata i8** %src_temp, metadata !15757, metadata !DIExpression()), !dbg !15758
  %11 = load i8*, i8** %src.addr, align 8, !dbg !15759, !tbaa !2648
  store i8* %11, i8** %src_temp, align 8, !dbg !15758, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dst_temp, metadata !15760, metadata !DIExpression()), !dbg !15761
  %12 = load i8*, i8** %dst.addr, align 8, !dbg !15762, !tbaa !2648
  store i8* %12, i8** %dst_temp, align 8, !dbg !15761, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8* %src_slash, metadata !15763, metadata !DIExpression()), !dbg !15764
  call void @llvm.dbg.declare(metadata i8* %dst_slash, metadata !15765, metadata !DIExpression()), !dbg !15766
  call void @llvm.dbg.declare(metadata i32* %rename_errno, metadata !15767, metadata !DIExpression()), !dbg !15768
  store i32 20, i32* %rename_errno, align 4, !dbg !15768, !tbaa !2635
  call void @llvm.dbg.declare(metadata %struct.stat* %src_st, metadata !15769, metadata !DIExpression()), !dbg !15770
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_st, metadata !15771, metadata !DIExpression()), !dbg !15772
  call void @llvm.dbg.declare(metadata i8* %dst_found_nonexistent, metadata !15773, metadata !DIExpression()), !dbg !15774
  store i8 0, i8* %dst_found_nonexistent, align 1, !dbg !15774, !tbaa !2742
  %13 = load i32, i32* %flags.addr, align 4, !dbg !15775, !tbaa !2635
  %cmp6 = icmp ne i32 %13, 0, !dbg !15777
  br i1 %cmp6, label %if.then7, label %if.end23, !dbg !15778

if.then7:                                         ; preds = %if.end
  %14 = load i32, i32* %flags.addr, align 4, !dbg !15779, !tbaa !2635
  %and = and i32 %14, -2, !dbg !15782
  %tobool = icmp ne i32 %and, 0, !dbg !15782
  br i1 %tobool, label %if.then8, label %if.else, !dbg !15783

if.then8:                                         ; preds = %if.then7
  %call9 = call i32 @errno_fail(i32 95), !dbg !15784
  store i32 %call9, i32* %retval, align 4, !dbg !15785
  br label %return, !dbg !15785

if.else:                                          ; preds = %if.then7
  %15 = load i32, i32* %fd2.addr, align 4, !dbg !15786, !tbaa !2635
  %16 = load i8*, i8** %dst.addr, align 8, !dbg !15789, !tbaa !2648
  %call10 = call i32 @lstatat(i32 %15, i8* %16, %struct.stat* %dst_st), !dbg !15790
  %cmp11 = icmp eq i32 %call10, 0, !dbg !15791
  br i1 %cmp11, label %if.then15, label %lor.lhs.false12, !dbg !15792

lor.lhs.false12:                                  ; preds = %if.else
  %call13 = call i32* @__errno_location() #16, !dbg !15793
  %17 = load i32, i32* %call13, align 4, !dbg !15793, !tbaa !2635, !ctir !7
  %cmp14 = icmp eq i32 %17, 75, !dbg !15794
  br i1 %cmp14, label %if.then15, label %if.end17, !dbg !15795

if.then15:                                        ; preds = %lor.lhs.false12, %if.else
  %call16 = call i32 @errno_fail(i32 17), !dbg !15796
  store i32 %call16, i32* %retval, align 4, !dbg !15797
  br label %return, !dbg !15797

if.end17:                                         ; preds = %lor.lhs.false12
  %call18 = call i32* @__errno_location() #16, !dbg !15798
  %18 = load i32, i32* %call18, align 4, !dbg !15798, !tbaa !2635, !ctir !7
  %cmp19 = icmp ne i32 %18, 2, !dbg !15800
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !15801

if.then20:                                        ; preds = %if.end17
  store i32 -1, i32* %retval, align 4, !dbg !15802
  br label %return, !dbg !15802

if.end21:                                         ; preds = %if.end17
  store i8 1, i8* %dst_found_nonexistent, align 1, !dbg !15803, !tbaa !2742
  br label %if.end22

if.end22:                                         ; preds = %if.end21
  br label %if.end23, !dbg !15804

if.end23:                                         ; preds = %if.end22, %if.end
  %19 = load i8*, i8** %src.addr, align 8, !dbg !15805, !tbaa !2648
  %call24 = call i64 @strlen(i8* %19) #14, !dbg !15806
  store i64 %call24, i64* %src_len, align 8, !dbg !15807, !tbaa !3288
  %20 = load i8*, i8** %dst.addr, align 8, !dbg !15808, !tbaa !2648
  %call25 = call i64 @strlen(i8* %20) #14, !dbg !15809
  store i64 %call25, i64* %dst_len, align 8, !dbg !15810, !tbaa !3288
  %21 = load i64, i64* %src_len, align 8, !dbg !15811, !tbaa !3288
  %tobool26 = icmp ne i64 %21, 0, !dbg !15811
  br i1 %tobool26, label %lor.lhs.false27, label %if.then29, !dbg !15813

lor.lhs.false27:                                  ; preds = %if.end23
  %22 = load i64, i64* %dst_len, align 8, !dbg !15814, !tbaa !3288
  %tobool28 = icmp ne i64 %22, 0, !dbg !15814
  br i1 %tobool28, label %if.end31, label %if.then29, !dbg !15815

if.then29:                                        ; preds = %lor.lhs.false27, %if.end23
  %23 = load i32, i32* %fd1.addr, align 4, !dbg !15816, !tbaa !2635
  %24 = load i8*, i8** %src.addr, align 8, !dbg !15817, !tbaa !2648
  %25 = load i32, i32* %fd2.addr, align 4, !dbg !15818, !tbaa !2635
  %26 = load i8*, i8** %dst.addr, align 8, !dbg !15819, !tbaa !2648
  %call30 = call i32 @renameat(i32 %23, i8* %24, i32 %25, i8* %26) #9, !dbg !15820
  store i32 %call30, i32* %retval, align 4, !dbg !15821
  br label %return, !dbg !15821

if.end31:                                         ; preds = %lor.lhs.false27
  %27 = load i8*, i8** %src.addr, align 8, !dbg !15822, !tbaa !2648
  %28 = load i64, i64* %src_len, align 8, !dbg !15823, !tbaa !3288
  %sub = sub i64 %28, 1, !dbg !15824
  %arrayidx = getelementptr inbounds i8, i8* %27, i64 %sub, !dbg !15822, !ctir !180
  %29 = load i8, i8* %arrayidx, align 1, !dbg !15822, !tbaa !3295
  %conv = sext i8 %29 to i32, !dbg !15822
  %cmp32 = icmp eq i32 %conv, 47, !dbg !15825
  %frombool = zext i1 %cmp32 to i8, !dbg !15826
  store i8 %frombool, i8* %src_slash, align 1, !dbg !15826, !tbaa !2742
  %30 = load i8*, i8** %dst.addr, align 8, !dbg !15827, !tbaa !2648
  %31 = load i64, i64* %dst_len, align 8, !dbg !15828, !tbaa !3288
  %sub34 = sub i64 %31, 1, !dbg !15829
  %arrayidx35 = getelementptr inbounds i8, i8* %30, i64 %sub34, !dbg !15827, !ctir !180
  %32 = load i8, i8* %arrayidx35, align 1, !dbg !15827, !tbaa !3295
  %conv36 = sext i8 %32 to i32, !dbg !15827
  %cmp37 = icmp eq i32 %conv36, 47, !dbg !15830
  %frombool39 = zext i1 %cmp37 to i8, !dbg !15831
  store i8 %frombool39, i8* %dst_slash, align 1, !dbg !15831, !tbaa !2742
  %33 = load i8, i8* %src_slash, align 1, !dbg !15832, !tbaa !2742
  %tobool40 = trunc i8 %33 to i1, !dbg !15832
  br i1 %tobool40, label %if.end45, label %land.lhs.true41, !dbg !15834

land.lhs.true41:                                  ; preds = %if.end31
  %34 = load i8, i8* %dst_slash, align 1, !dbg !15835, !tbaa !2742
  %tobool42 = trunc i8 %34 to i1, !dbg !15835
  br i1 %tobool42, label %if.end45, label %if.then43, !dbg !15836

if.then43:                                        ; preds = %land.lhs.true41
  %35 = load i32, i32* %fd1.addr, align 4, !dbg !15837, !tbaa !2635
  %36 = load i8*, i8** %src.addr, align 8, !dbg !15838, !tbaa !2648
  %37 = load i32, i32* %fd2.addr, align 4, !dbg !15839, !tbaa !2635
  %38 = load i8*, i8** %dst.addr, align 8, !dbg !15840, !tbaa !2648
  %call44 = call i32 @renameat(i32 %35, i8* %36, i32 %37, i8* %38) #9, !dbg !15841
  store i32 %call44, i32* %retval, align 4, !dbg !15842
  br label %return, !dbg !15842

if.end45:                                         ; preds = %land.lhs.true41, %if.end31
  %39 = load i32, i32* %fd1.addr, align 4, !dbg !15843, !tbaa !2635
  %40 = load i8*, i8** %src.addr, align 8, !dbg !15845, !tbaa !2648
  %call46 = call i32 @lstatat(i32 %39, i8* %40, %struct.stat* %src_st), !dbg !15846
  %tobool47 = icmp ne i32 %call46, 0, !dbg !15846
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !15847

if.then48:                                        ; preds = %if.end45
  store i32 -1, i32* %retval, align 4, !dbg !15848
  br label %return, !dbg !15848

if.end49:                                         ; preds = %if.end45
  %41 = load i8, i8* %dst_found_nonexistent, align 1, !dbg !15849, !tbaa !2742
  %tobool50 = trunc i8 %41 to i1, !dbg !15849
  br i1 %tobool50, label %if.then51, label %if.else58, !dbg !15851

if.then51:                                        ; preds = %if.end49
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %src_st, i32 0, i32 3, !dbg !15852, !ctir !15693
  %42 = load i32, i32* %st_mode, align 8, !dbg !15852, !tbaa !2914, !ctir !140
  %and52 = and i32 %42, 61440, !dbg !15852
  %cmp53 = icmp eq i32 %and52, 16384, !dbg !15852
  br i1 %cmp53, label %if.end57, label %if.then55, !dbg !15855

if.then55:                                        ; preds = %if.then51
  %call56 = call i32 @errno_fail(i32 2), !dbg !15856
  store i32 %call56, i32* %retval, align 4, !dbg !15857
  br label %return, !dbg !15857

if.end57:                                         ; preds = %if.then51
  br label %if.end89, !dbg !15858

if.else58:                                        ; preds = %if.end49
  %43 = load i32, i32* %fd2.addr, align 4, !dbg !15859, !tbaa !2635
  %44 = load i8*, i8** %dst.addr, align 8, !dbg !15861, !tbaa !2648
  %call59 = call i32 @lstatat(i32 %43, i8* %44, %struct.stat* %dst_st), !dbg !15862
  %tobool60 = icmp ne i32 %call59, 0, !dbg !15862
  br i1 %tobool60, label %if.then61, label %if.else72, !dbg !15863

if.then61:                                        ; preds = %if.else58
  %call62 = call i32* @__errno_location() #16, !dbg !15864
  %45 = load i32, i32* %call62, align 4, !dbg !15864, !tbaa !2635, !ctir !7
  %cmp63 = icmp ne i32 %45, 2, !dbg !15867
  br i1 %cmp63, label %if.then70, label %lor.lhs.false65, !dbg !15868

lor.lhs.false65:                                  ; preds = %if.then61
  %st_mode66 = getelementptr inbounds %struct.stat, %struct.stat* %src_st, i32 0, i32 3, !dbg !15869, !ctir !15693
  %46 = load i32, i32* %st_mode66, align 8, !dbg !15869, !tbaa !2914, !ctir !140
  %and67 = and i32 %46, 61440, !dbg !15869
  %cmp68 = icmp eq i32 %and67, 16384, !dbg !15869
  br i1 %cmp68, label %if.end71, label %if.then70, !dbg !15870

if.then70:                                        ; preds = %lor.lhs.false65, %if.then61
  store i32 -1, i32* %retval, align 4, !dbg !15871
  br label %return, !dbg !15871

if.end71:                                         ; preds = %lor.lhs.false65
  br label %if.end88, !dbg !15872

if.else72:                                        ; preds = %if.else58
  %st_mode73 = getelementptr inbounds %struct.stat, %struct.stat* %dst_st, i32 0, i32 3, !dbg !15873, !ctir !15693
  %47 = load i32, i32* %st_mode73, align 8, !dbg !15873, !tbaa !2914, !ctir !140
  %and74 = and i32 %47, 61440, !dbg !15873
  %cmp75 = icmp eq i32 %and74, 16384, !dbg !15873
  br i1 %cmp75, label %if.else79, label %if.then77, !dbg !15875

if.then77:                                        ; preds = %if.else72
  %call78 = call i32 @errno_fail(i32 20), !dbg !15876
  store i32 %call78, i32* %retval, align 4, !dbg !15877
  br label %return, !dbg !15877

if.else79:                                        ; preds = %if.else72
  %st_mode80 = getelementptr inbounds %struct.stat, %struct.stat* %src_st, i32 0, i32 3, !dbg !15878, !ctir !15693
  %48 = load i32, i32* %st_mode80, align 8, !dbg !15878, !tbaa !2914, !ctir !140
  %and81 = and i32 %48, 61440, !dbg !15878
  %cmp82 = icmp eq i32 %and81, 16384, !dbg !15878
  br i1 %cmp82, label %if.end86, label %if.then84, !dbg !15880

if.then84:                                        ; preds = %if.else79
  %call85 = call i32 @errno_fail(i32 21), !dbg !15881
  store i32 %call85, i32* %retval, align 4, !dbg !15882
  br label %return, !dbg !15882

if.end86:                                         ; preds = %if.else79
  br label %if.end87

if.end87:                                         ; preds = %if.end86
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %if.end71
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %if.end57
  %49 = load i32, i32* %fd1.addr, align 4, !dbg !15883, !tbaa !2635
  %50 = load i8*, i8** %src_temp, align 8, !dbg !15884, !tbaa !2648
  %51 = load i32, i32* %fd2.addr, align 4, !dbg !15885, !tbaa !2635
  %52 = load i8*, i8** %dst_temp, align 8, !dbg !15886, !tbaa !2648
  %call90 = call i32 @renameat(i32 %49, i8* %50, i32 %51, i8* %52) #9, !dbg !15887
  store i32 %call90, i32* %ret_val, align 4, !dbg !15888, !tbaa !2635
  %call91 = call i32* @__errno_location() #16, !dbg !15889
  %53 = load i32, i32* %call91, align 4, !dbg !15889, !tbaa !2635, !ctir !7
  store i32 %53, i32* %rename_errno, align 4, !dbg !15890, !tbaa !2635
  br label %out, !dbg !15891

out:                                              ; preds = %if.end89
  call void @llvm.dbg.label(metadata !15892), !dbg !15893
  %54 = load i8*, i8** %src_temp, align 8, !dbg !15894, !tbaa !2648
  %55 = load i8*, i8** %src.addr, align 8, !dbg !15896, !tbaa !2648
  %cmp92 = icmp ne i8* %54, %55, !dbg !15897
  br i1 %cmp92, label %if.then94, label %if.end95, !dbg !15898

if.then94:                                        ; preds = %out
  %56 = load i8*, i8** %src_temp, align 8, !dbg !15899, !tbaa !2648
  call void @free(i8* %56) #9, !dbg !15900
  br label %if.end95, !dbg !15900

if.end95:                                         ; preds = %if.then94, %out
  %57 = load i8*, i8** %dst_temp, align 8, !dbg !15901, !tbaa !2648
  %58 = load i8*, i8** %dst.addr, align 8, !dbg !15903, !tbaa !2648
  %cmp96 = icmp ne i8* %57, %58, !dbg !15904
  br i1 %cmp96, label %if.then98, label %if.end99, !dbg !15905

if.then98:                                        ; preds = %if.end95
  %59 = load i8*, i8** %dst_temp, align 8, !dbg !15906, !tbaa !2648
  call void @free(i8* %59) #9, !dbg !15907
  br label %if.end99, !dbg !15907

if.end99:                                         ; preds = %if.then98, %if.end95
  %60 = load i32, i32* %rename_errno, align 4, !dbg !15908, !tbaa !2635
  %call100 = call i32* @__errno_location() #16, !dbg !15909
  store i32 %60, i32* %call100, align 4, !dbg !15910, !tbaa !2635, !ctir !7
  %61 = load i32, i32* %ret_val, align 4, !dbg !15911, !tbaa !2635
  store i32 %61, i32* %retval, align 4, !dbg !15912
  br label %return, !dbg !15912

return:                                           ; preds = %if.end99, %if.then84, %if.then77, %if.then70, %if.then55, %if.then48, %if.then43, %if.then29, %if.then20, %if.then15, %if.then8, %if.then
  %62 = load i32, i32* %retval, align 4, !dbg !15913
  ret i32 %62, !dbg !15913
}

; Function Attrs: nounwind
declare dso_local i32 @renameat2(i32, i8*, i32, i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @errno_fail(i32 %e) #4 !dbg !15914 !ctir !1789 {
entry:
  %e.addr = alloca i32, align 4
  store i32 %e, i32* %e.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %e.addr, metadata !15915, metadata !DIExpression()), !dbg !15916
  %0 = load i32, i32* %e.addr, align 4, !dbg !15917, !tbaa !2635
  %call = call i32* @__errno_location() #16, !dbg !15918
  store i32 %0, i32* %call, align 4, !dbg !15919, !tbaa !2635, !ctir !7
  ret i32 -1, !dbg !15920
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @safe_read(i32 %fd, i8* %buf, i64 %count) #4 !dbg !15921 !ctir !1696 {
entry:
  %retval = alloca i64, align 8
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %result = alloca i64, align 8, !ctir !694
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !15923, metadata !DIExpression()), !dbg !15924
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15925, metadata !DIExpression()), !dbg !15926
  store i64 %count, i64* %count.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !15927, metadata !DIExpression()), !dbg !15928
  br label %for.cond, !dbg !15929

for.cond:                                         ; preds = %if.end11, %if.then3, %entry
  call void @llvm.dbg.declare(metadata i64* %result, metadata !15930, metadata !DIExpression()), !dbg !15934
  %0 = load i32, i32* %fd.addr, align 4, !dbg !15935, !tbaa !2635
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !15936, !tbaa !2648
  %2 = load i64, i64* %count.addr, align 8, !dbg !15937, !tbaa !3288
  %call = call i64 @read(i32 %0, i8* %1, i64 %2), !dbg !15938
  store i64 %call, i64* %result, align 8, !dbg !15934, !tbaa !3288
  %3 = load i64, i64* %result, align 8, !dbg !15939, !tbaa !3288
  %cmp = icmp sle i64 0, %3, !dbg !15941
  br i1 %cmp, label %if.then, label %if.else, !dbg !15942

if.then:                                          ; preds = %for.cond
  %4 = load i64, i64* %result, align 8, !dbg !15943, !tbaa !3288
  store i64 %4, i64* %retval, align 8, !dbg !15944
  br label %return, !dbg !15944

if.else:                                          ; preds = %for.cond
  %call1 = call i32* @__errno_location() #16, !dbg !15945
  %5 = load i32, i32* %call1, align 4, !dbg !15945, !tbaa !2635, !ctir !7
  %cmp2 = icmp eq i32 %5, 4, !dbg !15945
  br i1 %cmp2, label %if.then3, label %if.else4, !dbg !15947

if.then3:                                         ; preds = %if.else
  br label %for.cond, !dbg !15948, !llvm.loop !15949

if.else4:                                         ; preds = %if.else
  %call5 = call i32* @__errno_location() #16, !dbg !15952
  %6 = load i32, i32* %call5, align 4, !dbg !15952, !tbaa !2635, !ctir !7
  %cmp6 = icmp eq i32 %6, 22, !dbg !15954
  br i1 %cmp6, label %land.lhs.true, label %if.else9, !dbg !15955

land.lhs.true:                                    ; preds = %if.else4
  %7 = load i64, i64* %count.addr, align 8, !dbg !15956, !tbaa !3288
  %cmp7 = icmp ult i64 2146435072, %7, !dbg !15957
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !15958

if.then8:                                         ; preds = %land.lhs.true
  store i64 2146435072, i64* %count.addr, align 8, !dbg !15959, !tbaa !3288
  br label %if.end, !dbg !15960

if.else9:                                         ; preds = %land.lhs.true, %if.else4
  %8 = load i64, i64* %result, align 8, !dbg !15961, !tbaa !3288
  store i64 %8, i64* %retval, align 8, !dbg !15962
  br label %return, !dbg !15962

if.end:                                           ; preds = %if.then8
  br label %if.end10

if.end10:                                         ; preds = %if.end
  br label %if.end11

if.end11:                                         ; preds = %if.end10
  br label %for.cond, !dbg !15963, !llvm.loop !15949

return:                                           ; preds = %if.else9, %if.then
  %9 = load i64, i64* %retval, align 8, !dbg !15964
  ret i64 %9, !dbg !15964
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @safe_write(i32 %fd, i8* %buf, i64 %count) #4 !dbg !15965 !ctir !1701 {
entry:
  %retval = alloca i64, align 8
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %result = alloca i64, align 8, !ctir !694
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !15966, metadata !DIExpression()), !dbg !15967
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15968, metadata !DIExpression()), !dbg !15969
  store i64 %count, i64* %count.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !15970, metadata !DIExpression()), !dbg !15971
  br label %for.cond, !dbg !15972

for.cond:                                         ; preds = %if.end11, %if.then3, %entry
  call void @llvm.dbg.declare(metadata i64* %result, metadata !15973, metadata !DIExpression()), !dbg !15977
  %0 = load i32, i32* %fd.addr, align 4, !dbg !15978, !tbaa !2635
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !15979, !tbaa !2648
  %2 = load i64, i64* %count.addr, align 8, !dbg !15980, !tbaa !3288
  %call = call i64 @write(i32 %0, i8* %1, i64 %2), !dbg !15981
  store i64 %call, i64* %result, align 8, !dbg !15977, !tbaa !3288
  %3 = load i64, i64* %result, align 8, !dbg !15982, !tbaa !3288
  %cmp = icmp sle i64 0, %3, !dbg !15984
  br i1 %cmp, label %if.then, label %if.else, !dbg !15985

if.then:                                          ; preds = %for.cond
  %4 = load i64, i64* %result, align 8, !dbg !15986, !tbaa !3288
  store i64 %4, i64* %retval, align 8, !dbg !15987
  br label %return, !dbg !15987

if.else:                                          ; preds = %for.cond
  %call1 = call i32* @__errno_location() #16, !dbg !15988
  %5 = load i32, i32* %call1, align 4, !dbg !15988, !tbaa !2635, !ctir !7
  %cmp2 = icmp eq i32 %5, 4, !dbg !15988
  br i1 %cmp2, label %if.then3, label %if.else4, !dbg !15990

if.then3:                                         ; preds = %if.else
  br label %for.cond, !dbg !15991, !llvm.loop !15992

if.else4:                                         ; preds = %if.else
  %call5 = call i32* @__errno_location() #16, !dbg !15995
  %6 = load i32, i32* %call5, align 4, !dbg !15995, !tbaa !2635, !ctir !7
  %cmp6 = icmp eq i32 %6, 22, !dbg !15997
  br i1 %cmp6, label %land.lhs.true, label %if.else9, !dbg !15998

land.lhs.true:                                    ; preds = %if.else4
  %7 = load i64, i64* %count.addr, align 8, !dbg !15999, !tbaa !3288
  %cmp7 = icmp ult i64 2146435072, %7, !dbg !16000
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !16001

if.then8:                                         ; preds = %land.lhs.true
  store i64 2146435072, i64* %count.addr, align 8, !dbg !16002, !tbaa !3288
  br label %if.end, !dbg !16003

if.else9:                                         ; preds = %land.lhs.true, %if.else4
  %8 = load i64, i64* %result, align 8, !dbg !16004, !tbaa !3288
  store i64 %8, i64* %retval, align 8, !dbg !16005
  br label %return, !dbg !16005

if.end:                                           ; preds = %if.then8
  br label %if.end10

if.end10:                                         ; preds = %if.end
  br label %if.end11

if.end11:                                         ; preds = %if.end10
  br label %for.cond, !dbg !16006, !llvm.loop !15992

return:                                           ; preds = %if.else9, %if.then
  %9 = load i64, i64* %retval, align 8, !dbg !16007
  ret i64 %9, !dbg !16007
}

declare dso_local i64 @write(i32, i8*, i64) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @same_name(i8* %source, i8* %dest) #4 !dbg !16008 !ctir !1800 {
entry:
  %source.addr = alloca i8*, align 8
  %dest.addr = alloca i8*, align 8
  store i8* %source, i8** %source.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !16010, metadata !DIExpression()), !dbg !16011
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !16012, metadata !DIExpression()), !dbg !16013
  %0 = load i8*, i8** %source.addr, align 8, !dbg !16014, !tbaa !2648
  %1 = load i8*, i8** %dest.addr, align 8, !dbg !16015, !tbaa !2648
  %call = call zeroext i1 @same_nameat(i32 -100, i8* %0, i32 -100, i8* %1), !dbg !16016
  ret i1 %call, !dbg !16017
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @same_nameat(i32 %source_dfd, i8* %source, i32 %dest_dfd, i8* %dest) #4 !dbg !16018 !ctir !1802 {
entry:
  %source_dfd.addr = alloca i32, align 4
  %source.addr = alloca i8*, align 8
  %dest_dfd.addr = alloca i32, align 4
  %dest.addr = alloca i8*, align 8
  %source_basename = alloca i8*, align 8, !ctir !180
  %dest_basename = alloca i8*, align 8, !ctir !180
  %source_baselen = alloca i64, align 8, !ctir !55
  %dest_baselen = alloca i64, align 8, !ctir !55
  %identical_basenames = alloca i8, align 1, !ctir !142
  %compare_dirs = alloca i8, align 1, !ctir !142
  %same = alloca i8, align 1, !ctir !142
  %source_dir_stats = alloca %struct.stat, align 8, !ctir !16019
  %dest_dir_stats = alloca %struct.stat, align 8, !ctir !16019
  %source_dirname = alloca i8*, align 8, !ctir !9
  %flags = alloca i32, align 4, !ctir !7
  %dest_dirname = alloca i8*, align 8, !ctir !9
  store i32 %source_dfd, i32* %source_dfd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %source_dfd.addr, metadata !16040, metadata !DIExpression()), !dbg !16041
  store i8* %source, i8** %source.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !16042, metadata !DIExpression()), !dbg !16043
  store i32 %dest_dfd, i32* %dest_dfd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %dest_dfd.addr, metadata !16044, metadata !DIExpression()), !dbg !16045
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !16046, metadata !DIExpression()), !dbg !16047
  call void @llvm.dbg.declare(metadata i8** %source_basename, metadata !16048, metadata !DIExpression()), !dbg !16049
  %0 = load i8*, i8** %source.addr, align 8, !dbg !16050, !tbaa !2648
  %call = call i8* @last_component(i8* %0) #14, !dbg !16051
  store i8* %call, i8** %source_basename, align 8, !dbg !16049, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dest_basename, metadata !16052, metadata !DIExpression()), !dbg !16053
  %1 = load i8*, i8** %dest.addr, align 8, !dbg !16054, !tbaa !2648
  %call1 = call i8* @last_component(i8* %1) #14, !dbg !16055
  store i8* %call1, i8** %dest_basename, align 8, !dbg !16053, !tbaa !2648
  call void @llvm.dbg.declare(metadata i64* %source_baselen, metadata !16056, metadata !DIExpression()), !dbg !16057
  %2 = load i8*, i8** %source_basename, align 8, !dbg !16058, !tbaa !2648
  %call2 = call i64 @base_len(i8* %2) #14, !dbg !16059
  store i64 %call2, i64* %source_baselen, align 8, !dbg !16057, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %dest_baselen, metadata !16060, metadata !DIExpression()), !dbg !16061
  %3 = load i8*, i8** %dest_basename, align 8, !dbg !16062, !tbaa !2648
  %call3 = call i64 @base_len(i8* %3) #14, !dbg !16063
  store i64 %call3, i64* %dest_baselen, align 8, !dbg !16061, !tbaa !3288
  call void @llvm.dbg.declare(metadata i8* %identical_basenames, metadata !16064, metadata !DIExpression()), !dbg !16065
  %4 = load i64, i64* %source_baselen, align 8, !dbg !16066, !tbaa !3288
  %5 = load i64, i64* %dest_baselen, align 8, !dbg !16067, !tbaa !3288
  %cmp = icmp eq i64 %4, %5, !dbg !16068
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !16069

land.rhs:                                         ; preds = %entry
  %6 = load i8*, i8** %source_basename, align 8, !dbg !16070, !tbaa !2648
  %7 = load i8*, i8** %dest_basename, align 8, !dbg !16071, !tbaa !2648
  %8 = load i64, i64* %dest_baselen, align 8, !dbg !16072, !tbaa !3288
  %call4 = call i32 @memcmp(i8* %6, i8* %7, i64 %8) #14, !dbg !16073
  %cmp5 = icmp eq i32 %call4, 0, !dbg !16074
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %9 = phi i1 [ false, %entry ], [ %cmp5, %land.rhs ], !dbg !16075
  %frombool = zext i1 %9 to i8, !dbg !16065
  store i8 %frombool, i8* %identical_basenames, align 1, !dbg !16065, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %compare_dirs, metadata !16076, metadata !DIExpression()), !dbg !16077
  %10 = load i8, i8* %identical_basenames, align 1, !dbg !16078, !tbaa !2742
  %tobool = trunc i8 %10 to i1, !dbg !16078
  %frombool6 = zext i1 %tobool to i8, !dbg !16077
  store i8 %frombool6, i8* %compare_dirs, align 1, !dbg !16077, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %same, metadata !16079, metadata !DIExpression()), !dbg !16080
  store i8 0, i8* %same, align 1, !dbg !16080, !tbaa !2742
  %11 = load i8, i8* %compare_dirs, align 1, !dbg !16081, !tbaa !2742
  %tobool7 = trunc i8 %11 to i1, !dbg !16081
  br i1 %tobool7, label %if.then, label %if.end26, !dbg !16083

if.then:                                          ; preds = %land.end
  call void @llvm.dbg.declare(metadata %struct.stat* %source_dir_stats, metadata !16084, metadata !DIExpression()), !dbg !16086
  call void @llvm.dbg.declare(metadata %struct.stat* %dest_dir_stats, metadata !16087, metadata !DIExpression()), !dbg !16088
  call void @llvm.dbg.declare(metadata i8** %source_dirname, metadata !16089, metadata !DIExpression()), !dbg !16090
  %12 = load i8*, i8** %source.addr, align 8, !dbg !16091, !tbaa !2648
  %call8 = call i8* @dir_name(i8* %12), !dbg !16092
  store i8* %call8, i8** %source_dirname, align 8, !dbg !16090, !tbaa !2648
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !16093, metadata !DIExpression()), !dbg !16094
  store i32 256, i32* %flags, align 4, !dbg !16094, !tbaa !2635
  %13 = load i32, i32* %source_dfd.addr, align 4, !dbg !16095, !tbaa !2635
  %14 = load i8*, i8** %source_dirname, align 8, !dbg !16097, !tbaa !2648
  %15 = load i32, i32* %flags, align 4, !dbg !16098, !tbaa !2635
  %call9 = call i32 @fstatat(i32 %13, i8* %14, %struct.stat* %source_dir_stats, i32 %15) #9, !dbg !16099
  %cmp10 = icmp ne i32 %call9, 0, !dbg !16100
  br i1 %cmp10, label %if.then11, label %if.end, !dbg !16101

if.then11:                                        ; preds = %if.then
  %call12 = call i32* @__errno_location() #16, !dbg !16102
  %16 = load i32, i32* %call12, align 4, !dbg !16102, !tbaa !2635, !ctir !7
  %17 = load i8*, i8** %source_dirname, align 8, !dbg !16104, !tbaa !2648
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.357, i64 0, i64 0), i8* %17), !dbg !16105
  br label %if.end, !dbg !16106

if.end:                                           ; preds = %if.then11, %if.then
  %18 = load i8*, i8** %source_dirname, align 8, !dbg !16107, !tbaa !2648
  call void @free(i8* %18) #9, !dbg !16108
  call void @llvm.dbg.declare(metadata i8** %dest_dirname, metadata !16109, metadata !DIExpression()), !dbg !16110
  %19 = load i8*, i8** %dest.addr, align 8, !dbg !16111, !tbaa !2648
  %call13 = call i8* @dir_name(i8* %19), !dbg !16112
  store i8* %call13, i8** %dest_dirname, align 8, !dbg !16110, !tbaa !2648
  %20 = load i32, i32* %dest_dfd.addr, align 4, !dbg !16113, !tbaa !2635
  %21 = load i8*, i8** %dest_dirname, align 8, !dbg !16115, !tbaa !2648
  %22 = load i32, i32* %flags, align 4, !dbg !16116, !tbaa !2635
  %call14 = call i32 @fstatat(i32 %20, i8* %21, %struct.stat* %dest_dir_stats, i32 %22) #9, !dbg !16117
  %cmp15 = icmp ne i32 %call14, 0, !dbg !16118
  br i1 %cmp15, label %if.then16, label %if.end18, !dbg !16119

if.then16:                                        ; preds = %if.end
  %call17 = call i32* @__errno_location() #16, !dbg !16120
  %23 = load i32, i32* %call17, align 4, !dbg !16120, !tbaa !2635, !ctir !7
  %24 = load i8*, i8** %dest_dirname, align 8, !dbg !16122, !tbaa !2648
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.357, i64 0, i64 0), i8* %24), !dbg !16123
  br label %if.end18, !dbg !16124

if.end18:                                         ; preds = %if.then16, %if.end
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %source_dir_stats, i32 0, i32 1, !dbg !16125, !ctir !16019
  %25 = load i64, i64* %st_ino, align 8, !dbg !16125, !tbaa !4791, !ctir !276
  %st_ino19 = getelementptr inbounds %struct.stat, %struct.stat* %dest_dir_stats, i32 0, i32 1, !dbg !16125, !ctir !16019
  %26 = load i64, i64* %st_ino19, align 8, !dbg !16125, !tbaa !4791, !ctir !276
  %cmp20 = icmp eq i64 %25, %26, !dbg !16125
  br i1 %cmp20, label %land.rhs21, label %land.end24, !dbg !16125

land.rhs21:                                       ; preds = %if.end18
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %source_dir_stats, i32 0, i32 0, !dbg !16125, !ctir !16019
  %27 = load i64, i64* %st_dev, align 8, !dbg !16125, !tbaa !4770, !ctir !274
  %st_dev22 = getelementptr inbounds %struct.stat, %struct.stat* %dest_dir_stats, i32 0, i32 0, !dbg !16125, !ctir !16019
  %28 = load i64, i64* %st_dev22, align 8, !dbg !16125, !tbaa !4770, !ctir !274
  %cmp23 = icmp eq i64 %27, %28, !dbg !16125
  br label %land.end24

land.end24:                                       ; preds = %land.rhs21, %if.end18
  %29 = phi i1 [ false, %if.end18 ], [ %cmp23, %land.rhs21 ], !dbg !16126
  %frombool25 = zext i1 %29 to i8, !dbg !16127
  store i8 %frombool25, i8* %same, align 1, !dbg !16127, !tbaa !2742
  %30 = load i8*, i8** %dest_dirname, align 8, !dbg !16128, !tbaa !2648
  call void @free(i8* %30) #9, !dbg !16129
  br label %if.end26, !dbg !16130

if.end26:                                         ; preds = %land.end24, %land.end
  %31 = load i8, i8* %same, align 1, !dbg !16131, !tbaa !2742
  %tobool27 = trunc i8 %31 to i1, !dbg !16131
  ret i1 %tobool27, !dbg !16132
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @streamsavedir(%struct.__dirstream* %dirp, i32 %option) #4 !dbg !16133 !ctir !1162 {
entry:
  %retval = alloca i8*, align 8
  %dirp.addr = alloca %struct.__dirstream*, align 8
  %option.addr = alloca i32, align 4
  %name_space = alloca i8*, align 8, !ctir !9
  %allocated = alloca i64, align 8, !ctir !55
  %entries = alloca %struct.direntry_t*, align 8, !ctir !1164
  %entries_allocated = alloca i64, align 8, !ctir !55
  %entries_used = alloca i64, align 8, !ctir !55
  %used = alloca i64, align 8, !ctir !55
  %readdir_errno = alloca i32, align 4, !ctir !7
  %cmp = alloca i32 (i8*, i8*)*, align 8, !ctir !1172
  %dp = alloca %struct.dirent*, align 8, !ctir !1178
  %entry2 = alloca i8*, align 8, !ctir !180
  %entry_size = alloca i64, align 8, !ctir !55
  %n = alloca i64, align 8, !ctir !55
  %n36 = alloca i64, align 8, !ctir !55
  %i = alloca i64, align 8, !ctir !55
  %dest = alloca i8*, align 8, !ctir !9
  store %struct.__dirstream* %dirp, %struct.__dirstream** %dirp.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp.addr, metadata !16134, metadata !DIExpression()), !dbg !16135
  store i32 %option, i32* %option.addr, align 4, !tbaa !3295
  call void @llvm.dbg.declare(metadata i32* %option.addr, metadata !16136, metadata !DIExpression()), !dbg !16137
  call void @llvm.dbg.declare(metadata i8** %name_space, metadata !16138, metadata !DIExpression()), !dbg !16139
  store i8* null, i8** %name_space, align 8, !dbg !16139, !tbaa !2648
  call void @llvm.dbg.declare(metadata i64* %allocated, metadata !16140, metadata !DIExpression()), !dbg !16141
  store i64 0, i64* %allocated, align 8, !dbg !16141, !tbaa !3288
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %entries, metadata !16142, metadata !DIExpression()), !dbg !16143
  store %struct.direntry_t* null, %struct.direntry_t** %entries, align 8, !dbg !16143, !tbaa !2648
  call void @llvm.dbg.declare(metadata i64* %entries_allocated, metadata !16144, metadata !DIExpression()), !dbg !16145
  store i64 0, i64* %entries_allocated, align 8, !dbg !16145, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %entries_used, metadata !16146, metadata !DIExpression()), !dbg !16147
  store i64 0, i64* %entries_used, align 8, !dbg !16147, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %used, metadata !16148, metadata !DIExpression()), !dbg !16149
  store i64 0, i64* %used, align 8, !dbg !16149, !tbaa !3288
  call void @llvm.dbg.declare(metadata i32* %readdir_errno, metadata !16150, metadata !DIExpression()), !dbg !16151
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp, metadata !16152, metadata !DIExpression()), !dbg !16153
  %0 = load i32, i32* %option.addr, align 4, !dbg !16154, !tbaa !3295
  %idxprom = zext i32 %0 to i64, !dbg !16155
  %arrayidx = getelementptr inbounds [3 x i32 (i8*, i8*)*], [3 x i32 (i8*, i8*)*]* @comparison_function_table, i64 0, i64 %idxprom, !dbg !16155, !ctir !1176
  %1 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %arrayidx, align 8, !dbg !16155, !tbaa !2648
  store i32 (i8*, i8*)* %1, i32 (i8*, i8*)** %cmp, align 8, !dbg !16153, !tbaa !2648
  %2 = load %struct.__dirstream*, %struct.__dirstream** %dirp.addr, align 8, !dbg !16156, !tbaa !2648
  %cmp1 = icmp eq %struct.__dirstream* %2, null, !dbg !16158
  br i1 %cmp1, label %if.then, label %if.end, !dbg !16159

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !16160
  br label %return, !dbg !16160

if.end:                                           ; preds = %entry
  br label %for.cond, !dbg !16161

for.cond:                                         ; preds = %if.end46, %if.end
  call void @llvm.dbg.declare(metadata %struct.dirent** %dp, metadata !16162, metadata !DIExpression()), !dbg !16166
  call void @llvm.dbg.declare(metadata i8** %entry2, metadata !16167, metadata !DIExpression()), !dbg !16168
  %call = call i32* @__errno_location() #16, !dbg !16169
  store i32 0, i32* %call, align 4, !dbg !16170, !tbaa !2635, !ctir !7
  %3 = load %struct.__dirstream*, %struct.__dirstream** %dirp.addr, align 8, !dbg !16171, !tbaa !2648
  %call3 = call %struct.dirent* @readdir(%struct.__dirstream* %3), !dbg !16172
  store %struct.dirent* %call3, %struct.dirent** %dp, align 8, !dbg !16173, !tbaa !2648
  %4 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !16174, !tbaa !2648
  %tobool = icmp ne %struct.dirent* %4, null, !dbg !16174
  br i1 %tobool, label %if.end5, label %if.then4, !dbg !16176

if.then4:                                         ; preds = %for.cond
  br label %for.end, !dbg !16177

if.end5:                                          ; preds = %for.cond
  %5 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !16178, !tbaa !2648
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %5, i32 0, i32 4, !dbg !16179, !ctir !1179
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !16178
  store i8* %arraydecay, i8** %entry2, align 8, !dbg !16180, !tbaa !2648
  %6 = load i8*, i8** %entry2, align 8, !dbg !16181, !tbaa !2648
  %7 = load i8*, i8** %entry2, align 8, !dbg !16183, !tbaa !2648
  %arrayidx6 = getelementptr inbounds i8, i8* %7, i64 0, !dbg !16183, !ctir !180
  %8 = load i8, i8* %arrayidx6, align 1, !dbg !16183, !tbaa !3295
  %conv = sext i8 %8 to i32, !dbg !16183
  %cmp7 = icmp ne i32 %conv, 46, !dbg !16184
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !16183

cond.true:                                        ; preds = %if.end5
  br label %cond.end, !dbg !16183

cond.false:                                       ; preds = %if.end5
  %9 = load i8*, i8** %entry2, align 8, !dbg !16185, !tbaa !2648
  %arrayidx9 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !16185, !ctir !180
  %10 = load i8, i8* %arrayidx9, align 1, !dbg !16185, !tbaa !3295
  %conv10 = sext i8 %10 to i32, !dbg !16185
  %cmp11 = icmp ne i32 %conv10, 46, !dbg !16186
  %11 = zext i1 %cmp11 to i64, !dbg !16185
  %cond = select i1 %cmp11, i32 1, i32 2, !dbg !16185
  br label %cond.end, !dbg !16183

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond13 = phi i32 [ 0, %cond.true ], [ %cond, %cond.false ], !dbg !16183
  %idxprom14 = sext i32 %cond13 to i64, !dbg !16181
  %arrayidx15 = getelementptr inbounds i8, i8* %6, i64 %idxprom14, !dbg !16181, !ctir !180
  %12 = load i8, i8* %arrayidx15, align 1, !dbg !16181, !tbaa !3295
  %conv16 = sext i8 %12 to i32, !dbg !16181
  %cmp17 = icmp ne i32 %conv16, 0, !dbg !16187
  br i1 %cmp17, label %if.then19, label %if.end46, !dbg !16188

if.then19:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i64* %entry_size, metadata !16189, metadata !DIExpression()), !dbg !16191
  %13 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !16192, !tbaa !2648
  %d_name20 = getelementptr inbounds %struct.dirent, %struct.dirent* %13, i32 0, i32 4, !dbg !16192, !ctir !1179
  %arraydecay21 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name20, i64 0, i64 0, !dbg !16192
  %call22 = call i64 @strlen(i8* %arraydecay21) #14, !dbg !16192
  %add = add i64 %call22, 1, !dbg !16193
  store i64 %add, i64* %entry_size, align 8, !dbg !16191, !tbaa !3288
  %14 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp, align 8, !dbg !16194, !tbaa !2648
  %tobool23 = icmp ne i32 (i8*, i8*)* %14, null, !dbg !16194
  br i1 %tobool23, label %if.then24, label %if.else, !dbg !16196

if.then24:                                        ; preds = %if.then19
  %15 = load i64, i64* %entries_allocated, align 8, !dbg !16197, !tbaa !3288
  %16 = load i64, i64* %entries_used, align 8, !dbg !16200, !tbaa !3288
  %cmp25 = icmp eq i64 %15, %16, !dbg !16201
  br i1 %cmp25, label %if.then27, label %if.end29, !dbg !16202

if.then27:                                        ; preds = %if.then24
  call void @llvm.dbg.declare(metadata i64* %n, metadata !16203, metadata !DIExpression()), !dbg !16205
  %17 = load i64, i64* %entries_allocated, align 8, !dbg !16206, !tbaa !3288
  store i64 %17, i64* %n, align 8, !dbg !16205, !tbaa !3288
  %18 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !16207, !tbaa !2648
  %19 = bitcast %struct.direntry_t* %18 to i8*, !dbg !16207
  %call28 = call i8* @x2nrealloc(i8* %19, i64* %n, i64 16), !dbg !16208
  %20 = bitcast i8* %call28 to %struct.direntry_t*, !dbg !16208
  store %struct.direntry_t* %20, %struct.direntry_t** %entries, align 8, !dbg !16209, !tbaa !2648
  %21 = load i64, i64* %n, align 8, !dbg !16210, !tbaa !3288
  store i64 %21, i64* %entries_allocated, align 8, !dbg !16211, !tbaa !3288
  br label %if.end29, !dbg !16212

if.end29:                                         ; preds = %if.then27, %if.then24
  %22 = load i8*, i8** %entry2, align 8, !dbg !16213, !tbaa !2648
  %call30 = call noalias i8* @xstrdup(i8* %22), !dbg !16214
  %23 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !16215, !tbaa !2648
  %24 = load i64, i64* %entries_used, align 8, !dbg !16216, !tbaa !3288
  %arrayidx31 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %23, i64 %24, !dbg !16215, !ctir !1164
  %name = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx31, i32 0, i32 0, !dbg !16217, !ctir !1165
  store i8* %call30, i8** %name, align 8, !dbg !16218, !tbaa !16219, !ctir !9
  %25 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !16221, !tbaa !2648
  %d_ino = getelementptr inbounds %struct.dirent, %struct.dirent* %25, i32 0, i32 0, !dbg !16222, !ctir !1179
  %26 = load i64, i64* %d_ino, align 8, !dbg !16222, !tbaa !16223, !ctir !276
  %27 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !16225, !tbaa !2648
  %28 = load i64, i64* %entries_used, align 8, !dbg !16226, !tbaa !3288
  %arrayidx32 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %27, i64 %28, !dbg !16225, !ctir !1164
  %ino = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx32, i32 0, i32 1, !dbg !16227, !ctir !1165
  store i64 %26, i64* %ino, align 8, !dbg !16228, !tbaa !16229, !ctir !1171
  %29 = load i64, i64* %entries_used, align 8, !dbg !16230, !tbaa !3288
  %inc = add i64 %29, 1, !dbg !16230
  store i64 %inc, i64* %entries_used, align 8, !dbg !16230, !tbaa !3288
  br label %if.end44, !dbg !16231

if.else:                                          ; preds = %if.then19
  %30 = load i64, i64* %allocated, align 8, !dbg !16232, !tbaa !3288
  %31 = load i64, i64* %used, align 8, !dbg !16235, !tbaa !3288
  %sub = sub i64 %30, %31, !dbg !16236
  %32 = load i64, i64* %entry_size, align 8, !dbg !16237, !tbaa !3288
  %cmp33 = icmp ule i64 %sub, %32, !dbg !16238
  br i1 %cmp33, label %if.then35, label %if.end43, !dbg !16239

if.then35:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i64* %n36, metadata !16240, metadata !DIExpression()), !dbg !16242
  %33 = load i64, i64* %used, align 8, !dbg !16243, !tbaa !3288
  %34 = load i64, i64* %entry_size, align 8, !dbg !16244, !tbaa !3288
  %add37 = add i64 %33, %34, !dbg !16245
  store i64 %add37, i64* %n36, align 8, !dbg !16242, !tbaa !3288
  %35 = load i64, i64* %n36, align 8, !dbg !16246, !tbaa !3288
  %36 = load i64, i64* %used, align 8, !dbg !16248, !tbaa !3288
  %cmp38 = icmp ult i64 %35, %36, !dbg !16249
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !16250

if.then40:                                        ; preds = %if.then35
  call void @xalloc_die() #15, !dbg !16251
  unreachable, !dbg !16251

if.end41:                                         ; preds = %if.then35
  %37 = load i8*, i8** %name_space, align 8, !dbg !16252, !tbaa !2648
  %call42 = call i8* @x2nrealloc(i8* %37, i64* %n36, i64 1), !dbg !16253
  store i8* %call42, i8** %name_space, align 8, !dbg !16254, !tbaa !2648
  %38 = load i64, i64* %n36, align 8, !dbg !16255, !tbaa !3288
  store i64 %38, i64* %allocated, align 8, !dbg !16256, !tbaa !3288
  br label %if.end43, !dbg !16257

if.end43:                                         ; preds = %if.end41, %if.else
  %39 = load i8*, i8** %name_space, align 8, !dbg !16258, !tbaa !2648
  %40 = load i64, i64* %used, align 8, !dbg !16259, !tbaa !3288
  %add.ptr = getelementptr inbounds i8, i8* %39, i64 %40, !dbg !16260
  %41 = load i8*, i8** %entry2, align 8, !dbg !16261, !tbaa !2648
  %42 = load i64, i64* %entry_size, align 8, !dbg !16262, !tbaa !3288
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 1 %41, i64 %42, i1 false), !dbg !16263
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end29
  %43 = load i64, i64* %entry_size, align 8, !dbg !16264, !tbaa !3288
  %44 = load i64, i64* %used, align 8, !dbg !16265, !tbaa !3288
  %add45 = add i64 %44, %43, !dbg !16265
  store i64 %add45, i64* %used, align 8, !dbg !16265, !tbaa !3288
  br label %if.end46, !dbg !16266

if.end46:                                         ; preds = %if.end44, %cond.end
  br label %for.cond, !dbg !16267, !llvm.loop !16268

for.end:                                          ; preds = %if.then4
  %call47 = call i32* @__errno_location() #16, !dbg !16271
  %45 = load i32, i32* %call47, align 4, !dbg !16271, !tbaa !2635, !ctir !7
  store i32 %45, i32* %readdir_errno, align 4, !dbg !16272, !tbaa !2635
  %46 = load i32, i32* %readdir_errno, align 4, !dbg !16273, !tbaa !2635
  %cmp48 = icmp ne i32 %46, 0, !dbg !16275
  br i1 %cmp48, label %if.then50, label %if.end52, !dbg !16276

if.then50:                                        ; preds = %for.end
  %47 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !16277, !tbaa !2648
  %48 = bitcast %struct.direntry_t* %47 to i8*, !dbg !16277
  call void @free(i8* %48) #9, !dbg !16279
  %49 = load i8*, i8** %name_space, align 8, !dbg !16280, !tbaa !2648
  call void @free(i8* %49) #9, !dbg !16281
  %50 = load i32, i32* %readdir_errno, align 4, !dbg !16282, !tbaa !2635
  %call51 = call i32* @__errno_location() #16, !dbg !16283
  store i32 %50, i32* %call51, align 4, !dbg !16284, !tbaa !2635, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !16285
  br label %return, !dbg !16285

if.end52:                                         ; preds = %for.end
  %51 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp, align 8, !dbg !16286, !tbaa !2648
  %tobool53 = icmp ne i32 (i8*, i8*)* %51, null, !dbg !16286
  br i1 %tobool53, label %if.then54, label %if.else73, !dbg !16288

if.then54:                                        ; preds = %if.end52
  call void @llvm.dbg.declare(metadata i64* %i, metadata !16289, metadata !DIExpression()), !dbg !16291
  %52 = load i64, i64* %entries_used, align 8, !dbg !16292, !tbaa !3288
  %tobool55 = icmp ne i64 %52, 0, !dbg !16292
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !16294

if.then56:                                        ; preds = %if.then54
  %53 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !16295, !tbaa !2648
  %54 = bitcast %struct.direntry_t* %53 to i8*, !dbg !16295
  %55 = load i64, i64* %entries_used, align 8, !dbg !16296, !tbaa !3288
  %56 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp, align 8, !dbg !16297, !tbaa !2648
  call void @qsort(i8* %54, i64 %55, i64 16, i32 (i8*, i8*)* %56), !dbg !16298
  br label %if.end57, !dbg !16298

if.end57:                                         ; preds = %if.then56, %if.then54
  %57 = load i64, i64* %used, align 8, !dbg !16299, !tbaa !3288
  %add58 = add i64 %57, 1, !dbg !16300
  %call59 = call noalias i8* @xmalloc(i64 %add58), !dbg !16301
  store i8* %call59, i8** %name_space, align 8, !dbg !16302, !tbaa !2648
  store i64 0, i64* %used, align 8, !dbg !16303, !tbaa !3288
  store i64 0, i64* %i, align 8, !dbg !16304, !tbaa !3288
  br label %for.cond60, !dbg !16306

for.cond60:                                       ; preds = %for.inc, %if.end57
  %58 = load i64, i64* %i, align 8, !dbg !16307, !tbaa !3288
  %59 = load i64, i64* %entries_used, align 8, !dbg !16309, !tbaa !3288
  %cmp61 = icmp ult i64 %58, %59, !dbg !16310
  br i1 %cmp61, label %for.body, label %for.end72, !dbg !16311

for.body:                                         ; preds = %for.cond60
  call void @llvm.dbg.declare(metadata i8** %dest, metadata !16312, metadata !DIExpression()), !dbg !16314
  %60 = load i8*, i8** %name_space, align 8, !dbg !16315, !tbaa !2648
  %61 = load i64, i64* %used, align 8, !dbg !16316, !tbaa !3288
  %add.ptr63 = getelementptr inbounds i8, i8* %60, i64 %61, !dbg !16317
  store i8* %add.ptr63, i8** %dest, align 8, !dbg !16314, !tbaa !2648
  %62 = load i8*, i8** %dest, align 8, !dbg !16318, !tbaa !2648
  %63 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !16319, !tbaa !2648
  %64 = load i64, i64* %i, align 8, !dbg !16320, !tbaa !3288
  %arrayidx64 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %63, i64 %64, !dbg !16319, !ctir !1164
  %name65 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx64, i32 0, i32 0, !dbg !16321, !ctir !1165
  %65 = load i8*, i8** %name65, align 8, !dbg !16321, !tbaa !16219, !ctir !9
  %call66 = call i8* @stpcpy(i8* %62, i8* %65) #9, !dbg !16322
  %66 = load i8*, i8** %dest, align 8, !dbg !16323, !tbaa !2648
  %sub.ptr.lhs.cast = ptrtoint i8* %call66 to i64, !dbg !16324
  %sub.ptr.rhs.cast = ptrtoint i8* %66 to i64, !dbg !16324
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !16324
  %add67 = add nsw i64 %sub.ptr.sub, 1, !dbg !16325
  %67 = load i64, i64* %used, align 8, !dbg !16326, !tbaa !3288
  %add68 = add i64 %67, %add67, !dbg !16326
  store i64 %add68, i64* %used, align 8, !dbg !16326, !tbaa !3288
  %68 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !16327, !tbaa !2648
  %69 = load i64, i64* %i, align 8, !dbg !16328, !tbaa !3288
  %arrayidx69 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %68, i64 %69, !dbg !16327, !ctir !1164
  %name70 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx69, i32 0, i32 0, !dbg !16329, !ctir !1165
  %70 = load i8*, i8** %name70, align 8, !dbg !16329, !tbaa !16219, !ctir !9
  call void @free(i8* %70) #9, !dbg !16330
  br label %for.inc, !dbg !16331

for.inc:                                          ; preds = %for.body
  %71 = load i64, i64* %i, align 8, !dbg !16332, !tbaa !3288
  %inc71 = add i64 %71, 1, !dbg !16332
  store i64 %inc71, i64* %i, align 8, !dbg !16332, !tbaa !3288
  br label %for.cond60, !dbg !16333, !llvm.loop !16334

for.end72:                                        ; preds = %for.cond60
  %72 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !16336, !tbaa !2648
  %73 = bitcast %struct.direntry_t* %72 to i8*, !dbg !16336
  call void @free(i8* %73) #9, !dbg !16337
  br label %if.end80, !dbg !16338

if.else73:                                        ; preds = %if.end52
  %74 = load i64, i64* %used, align 8, !dbg !16339, !tbaa !3288
  %75 = load i64, i64* %allocated, align 8, !dbg !16341, !tbaa !3288
  %cmp74 = icmp eq i64 %74, %75, !dbg !16342
  br i1 %cmp74, label %if.then76, label %if.end79, !dbg !16343

if.then76:                                        ; preds = %if.else73
  %76 = load i8*, i8** %name_space, align 8, !dbg !16344, !tbaa !2648
  %77 = load i64, i64* %used, align 8, !dbg !16345, !tbaa !3288
  %add77 = add i64 %77, 1, !dbg !16346
  %call78 = call i8* @xrealloc(i8* %76, i64 %add77), !dbg !16347
  store i8* %call78, i8** %name_space, align 8, !dbg !16348, !tbaa !2648
  br label %if.end79, !dbg !16349

if.end79:                                         ; preds = %if.then76, %if.else73
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %for.end72
  %78 = load i8*, i8** %name_space, align 8, !dbg !16350, !tbaa !2648
  %79 = load i64, i64* %used, align 8, !dbg !16351, !tbaa !3288
  %arrayidx81 = getelementptr inbounds i8, i8* %78, i64 %79, !dbg !16350, !ctir !9
  store i8 0, i8* %arrayidx81, align 1, !dbg !16352, !tbaa !3295
  %80 = load i8*, i8** %name_space, align 8, !dbg !16353, !tbaa !2648
  store i8* %80, i8** %retval, align 8, !dbg !16354
  br label %return, !dbg !16354

return:                                           ; preds = %if.end80, %if.then50, %if.then
  %81 = load i8*, i8** %retval, align 8, !dbg !16355
  ret i8* %81, !dbg !16355
}

declare dso_local void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @direntry_cmp_name(i8* %a, i8* %b) #4 !dbg !16356 !ctir !1174 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %dea = alloca %struct.direntry_t*, align 8, !ctir !1189
  %deb = alloca %struct.direntry_t*, align 8, !ctir !1189
  store i8* %a, i8** %a.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !16357, metadata !DIExpression()), !dbg !16358
  store i8* %b, i8** %b.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !16359, metadata !DIExpression()), !dbg !16360
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %dea, metadata !16361, metadata !DIExpression()), !dbg !16362
  %0 = load i8*, i8** %a.addr, align 8, !dbg !16363, !tbaa !2648
  %1 = bitcast i8* %0 to %struct.direntry_t*, !dbg !16363
  store %struct.direntry_t* %1, %struct.direntry_t** %dea, align 8, !dbg !16362, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %deb, metadata !16364, metadata !DIExpression()), !dbg !16365
  %2 = load i8*, i8** %b.addr, align 8, !dbg !16366, !tbaa !2648
  %3 = bitcast i8* %2 to %struct.direntry_t*, !dbg !16366
  store %struct.direntry_t* %3, %struct.direntry_t** %deb, align 8, !dbg !16365, !tbaa !2648
  %4 = load %struct.direntry_t*, %struct.direntry_t** %dea, align 8, !dbg !16367, !tbaa !2648
  %name = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %4, i32 0, i32 0, !dbg !16368, !ctir !1190
  %5 = load i8*, i8** %name, align 8, !dbg !16368, !tbaa !16219, !ctir !9
  %6 = load %struct.direntry_t*, %struct.direntry_t** %deb, align 8, !dbg !16369, !tbaa !2648
  %name1 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %6, i32 0, i32 0, !dbg !16370, !ctir !1190
  %7 = load i8*, i8** %name1, align 8, !dbg !16370, !tbaa !16219, !ctir !9
  %call = call i32 @strcmp(i8* %5, i8* %7) #14, !dbg !16371
  ret i32 %call, !dbg !16372
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @direntry_cmp_inode(i8* %a, i8* %b) #4 !dbg !16373 !ctir !1174 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %dea = alloca %struct.direntry_t*, align 8, !ctir !1189
  %deb = alloca %struct.direntry_t*, align 8, !ctir !1189
  store i8* %a, i8** %a.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !16374, metadata !DIExpression()), !dbg !16375
  store i8* %b, i8** %b.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !16376, metadata !DIExpression()), !dbg !16377
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %dea, metadata !16378, metadata !DIExpression()), !dbg !16379
  %0 = load i8*, i8** %a.addr, align 8, !dbg !16380, !tbaa !2648
  %1 = bitcast i8* %0 to %struct.direntry_t*, !dbg !16380
  store %struct.direntry_t* %1, %struct.direntry_t** %dea, align 8, !dbg !16379, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %deb, metadata !16381, metadata !DIExpression()), !dbg !16382
  %2 = load i8*, i8** %b.addr, align 8, !dbg !16383, !tbaa !2648
  %3 = bitcast i8* %2 to %struct.direntry_t*, !dbg !16383
  store %struct.direntry_t* %3, %struct.direntry_t** %deb, align 8, !dbg !16382, !tbaa !2648
  %4 = load %struct.direntry_t*, %struct.direntry_t** %dea, align 8, !dbg !16384, !tbaa !2648
  %ino = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %4, i32 0, i32 1, !dbg !16385, !ctir !1190
  %5 = load i64, i64* %ino, align 8, !dbg !16385, !tbaa !16229, !ctir !1171
  %6 = load %struct.direntry_t*, %struct.direntry_t** %deb, align 8, !dbg !16386, !tbaa !2648
  %ino1 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %6, i32 0, i32 1, !dbg !16387, !ctir !1190
  %7 = load i64, i64* %ino1, align 8, !dbg !16387, !tbaa !16229, !ctir !1171
  %cmp = icmp ult i64 %5, %7, !dbg !16388
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !16384

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !16384

cond.false:                                       ; preds = %entry
  %8 = load %struct.direntry_t*, %struct.direntry_t** %dea, align 8, !dbg !16389, !tbaa !2648
  %ino2 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %8, i32 0, i32 1, !dbg !16390, !ctir !1190
  %9 = load i64, i64* %ino2, align 8, !dbg !16390, !tbaa !16229, !ctir !1171
  %10 = load %struct.direntry_t*, %struct.direntry_t** %deb, align 8, !dbg !16391, !tbaa !2648
  %ino3 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %10, i32 0, i32 1, !dbg !16392, !ctir !1190
  %11 = load i64, i64* %ino3, align 8, !dbg !16392, !tbaa !16229, !ctir !1171
  %cmp4 = icmp ugt i64 %9, %11, !dbg !16393
  %conv = zext i1 %cmp4 to i32, !dbg !16393
  br label %cond.end, !dbg !16384

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ -1, %cond.true ], [ %conv, %cond.false ], !dbg !16384
  ret i32 %cond, !dbg !16394
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @savedir(i8* %dir, i32 %option) #4 !dbg !16395 !ctir !1187 {
entry:
  %retval = alloca i8*, align 8
  %dir.addr = alloca i8*, align 8
  %option.addr = alloca i32, align 4
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !695
  %name_space = alloca i8*, align 8, !ctir !9
  %closedir_errno = alloca i32, align 4, !ctir !7
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !16396, metadata !DIExpression()), !dbg !16397
  store i32 %option, i32* %option.addr, align 4, !tbaa !3295
  call void @llvm.dbg.declare(metadata i32* %option.addr, metadata !16398, metadata !DIExpression()), !dbg !16399
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !16400, metadata !DIExpression()), !dbg !16401
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !16402, !tbaa !2648
  %call = call %struct.__dirstream* @opendir_safer(i8* %0), !dbg !16403
  store %struct.__dirstream* %call, %struct.__dirstream** %dirp, align 8, !dbg !16401, !tbaa !2648
  %1 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !16404, !tbaa !2648
  %tobool = icmp ne %struct.__dirstream* %1, null, !dbg !16404
  br i1 %tobool, label %if.else, label %if.then, !dbg !16406

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !16407
  br label %return, !dbg !16407

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %name_space, metadata !16408, metadata !DIExpression()), !dbg !16410
  %2 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !16411, !tbaa !2648
  %3 = load i32, i32* %option.addr, align 4, !dbg !16412, !tbaa !3295
  %call1 = call i8* @streamsavedir(%struct.__dirstream* %2, i32 %3), !dbg !16413
  store i8* %call1, i8** %name_space, align 8, !dbg !16410, !tbaa !2648
  %4 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !16414, !tbaa !2648
  %call2 = call i32 @closedir(%struct.__dirstream* %4), !dbg !16416
  %cmp = icmp ne i32 %call2, 0, !dbg !16417
  br i1 %cmp, label %if.then3, label %if.end, !dbg !16418

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %closedir_errno, metadata !16419, metadata !DIExpression()), !dbg !16421
  %call4 = call i32* @__errno_location() #16, !dbg !16422
  %5 = load i32, i32* %call4, align 4, !dbg !16422, !tbaa !2635, !ctir !7
  store i32 %5, i32* %closedir_errno, align 4, !dbg !16421, !tbaa !2635
  %6 = load i8*, i8** %name_space, align 8, !dbg !16423, !tbaa !2648
  call void @free(i8* %6) #9, !dbg !16424
  %7 = load i32, i32* %closedir_errno, align 4, !dbg !16425, !tbaa !2635
  %call5 = call i32* @__errno_location() #16, !dbg !16426
  store i32 %7, i32* %call5, align 4, !dbg !16427, !tbaa !2635, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !16428
  br label %return, !dbg !16428

if.end:                                           ; preds = %if.else
  %8 = load i8*, i8** %name_space, align 8, !dbg !16429, !tbaa !2648
  store i8* %8, i8** %retval, align 8, !dbg !16430
  br label %return, !dbg !16430

return:                                           ; preds = %if.end, %if.then3, %if.then
  %9 = load i8*, i8** %retval, align 8, !dbg !16431
  ret i8* %9, !dbg !16431
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @savewd_init(%struct.savewd* %wd) #4 !dbg !16432 !ctir !1818 {
entry:
  %wd.addr = alloca %struct.savewd*, align 8
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !16433, metadata !DIExpression()), !dbg !16434
  %0 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16435, !tbaa !2648
  %state = getelementptr inbounds %struct.savewd, %struct.savewd* %0, i32 0, i32 0, !dbg !16436, !ctir !1808
  store i32 0, i32* %state, align 4, !dbg !16437, !tbaa !16438, !ctir !1807
  ret void, !dbg !16440
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @savewd_errno(%struct.savewd* %wd) #10 !dbg !16441 !ctir !1821 {
entry:
  %wd.addr = alloca %struct.savewd*, align 8
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !16442, metadata !DIExpression()), !dbg !16443
  %0 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16444, !tbaa !2648
  %state = getelementptr inbounds %struct.savewd, %struct.savewd* %0, i32 0, i32 0, !dbg !16445, !ctir !1824
  %1 = load i32, i32* %state, align 4, !dbg !16445, !tbaa !16438, !ctir !1807
  %cmp = icmp eq i32 %1, 4, !dbg !16446
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !16444

cond.true:                                        ; preds = %entry
  %2 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16447, !tbaa !2648
  %val = getelementptr inbounds %struct.savewd, %struct.savewd* %2, i32 0, i32 1, !dbg !16448, !ctir !1824
  %errnum = bitcast %union.anon* %val to i32*, !dbg !16449
  %3 = load i32, i32* %errnum, align 4, !dbg !16449, !tbaa !3295, !ctir !1812
  br label %cond.end, !dbg !16444

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !16444

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %3, %cond.true ], [ 0, %cond.false ], !dbg !16444
  ret i32 %cond, !dbg !16450
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @savewd_chdir(%struct.savewd* %wd, i8* %dir, i32 %options, i32* %open_result) #4 !dbg !16451 !ctir !1825 {
entry:
  %wd.addr = alloca %struct.savewd*, align 8
  %dir.addr = alloca i8*, align 8
  %options.addr = alloca i32, align 4
  %open_result.addr = alloca i32*, align 8
  %fd = alloca i32, align 4, !ctir !7
  %result = alloca i32, align 4, !ctir !7
  %e = alloca i32, align 4, !ctir !7
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !16453, metadata !DIExpression()), !dbg !16454
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !16455, metadata !DIExpression()), !dbg !16456
  store i32 %options, i32* %options.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %options.addr, metadata !16457, metadata !DIExpression()), !dbg !16458
  store i32* %open_result, i32** %open_result.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i32** %open_result.addr, metadata !16459, metadata !DIExpression()), !dbg !16460
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !16461, metadata !DIExpression()), !dbg !16462
  store i32 -1, i32* %fd, align 4, !dbg !16462, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %result, metadata !16463, metadata !DIExpression()), !dbg !16464
  store i32 0, i32* %result, align 4, !dbg !16464, !tbaa !2635
  %0 = load i32*, i32** %open_result.addr, align 8, !dbg !16465, !tbaa !2648
  %tobool = icmp ne i32* %0, null, !dbg !16465
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !16467

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %options.addr, align 4, !dbg !16468, !tbaa !2635
  %and = and i32 %1, 1, !dbg !16469
  %tobool1 = icmp ne i32 %and, 0, !dbg !16469
  br i1 %tobool1, label %if.then, label %if.end12, !dbg !16470

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load i8*, i8** %dir.addr, align 8, !dbg !16471, !tbaa !2648
  %3 = load i32, i32* %options.addr, align 4, !dbg !16473, !tbaa !2635
  %and2 = and i32 %3, 1, !dbg !16474
  %tobool3 = icmp ne i32 %and2, 0, !dbg !16473
  %4 = zext i1 %tobool3 to i64, !dbg !16473
  %cond = select i1 %tobool3, i32 131072, i32 0, !dbg !16473
  %or = or i32 67840, %cond, !dbg !16475
  %call = call i32 (i8*, i32, ...) @open(i8* %2, i32 %or), !dbg !16476
  store i32 %call, i32* %fd, align 4, !dbg !16477, !tbaa !2635
  %5 = load i32*, i32** %open_result.addr, align 8, !dbg !16478, !tbaa !2648
  %tobool4 = icmp ne i32* %5, null, !dbg !16478
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !16480

if.then5:                                         ; preds = %if.then
  %6 = load i32, i32* %fd, align 4, !dbg !16481, !tbaa !2635
  %7 = load i32*, i32** %open_result.addr, align 8, !dbg !16483, !tbaa !2648
  %arrayidx = getelementptr inbounds i32, i32* %7, i64 0, !dbg !16483, !ctir !193
  store i32 %6, i32* %arrayidx, align 4, !dbg !16484, !tbaa !2635
  %call6 = call i32* @__errno_location() #16, !dbg !16485
  %8 = load i32, i32* %call6, align 4, !dbg !16485, !tbaa !2635, !ctir !7
  %9 = load i32*, i32** %open_result.addr, align 8, !dbg !16486, !tbaa !2648
  %arrayidx7 = getelementptr inbounds i32, i32* %9, i64 1, !dbg !16486, !ctir !193
  store i32 %8, i32* %arrayidx7, align 4, !dbg !16487, !tbaa !2635
  br label %if.end, !dbg !16488

if.end:                                           ; preds = %if.then5, %if.then
  %10 = load i32, i32* %fd, align 4, !dbg !16489, !tbaa !2635
  %cmp = icmp slt i32 %10, 0, !dbg !16491
  br i1 %cmp, label %land.lhs.true, label %if.end11, !dbg !16492

land.lhs.true:                                    ; preds = %if.end
  %call8 = call i32* @__errno_location() #16, !dbg !16493
  %11 = load i32, i32* %call8, align 4, !dbg !16493, !tbaa !2635, !ctir !7
  %cmp9 = icmp ne i32 %11, 13, !dbg !16494
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !16495

if.then10:                                        ; preds = %land.lhs.true
  store i32 -1, i32* %result, align 4, !dbg !16496, !tbaa !2635
  br label %if.end11, !dbg !16497

if.end11:                                         ; preds = %if.then10, %land.lhs.true, %if.end
  br label %if.end12, !dbg !16498

if.end12:                                         ; preds = %if.end11, %lor.lhs.false
  %12 = load i32, i32* %result, align 4, !dbg !16499, !tbaa !2635
  %cmp13 = icmp eq i32 %12, 0, !dbg !16501
  br i1 %cmp13, label %land.lhs.true14, label %if.end37, !dbg !16502

land.lhs.true14:                                  ; preds = %if.end12
  %13 = load i32, i32* %fd, align 4, !dbg !16503, !tbaa !2635
  %cmp15 = icmp sle i32 0, %13, !dbg !16504
  br i1 %cmp15, label %land.lhs.true16, label %if.then19, !dbg !16505

land.lhs.true16:                                  ; preds = %land.lhs.true14
  %14 = load i32, i32* %options.addr, align 4, !dbg !16506, !tbaa !2635
  %and17 = and i32 %14, 2, !dbg !16507
  %tobool18 = icmp ne i32 %and17, 0, !dbg !16507
  br i1 %tobool18, label %if.end37, label %if.then19, !dbg !16508

if.then19:                                        ; preds = %land.lhs.true16, %land.lhs.true14
  %15 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16509, !tbaa !2648
  %call20 = call zeroext i1 @savewd_save(%struct.savewd* %15), !dbg !16512
  br i1 %call20, label %if.then21, label %if.else, !dbg !16513

if.then21:                                        ; preds = %if.then19
  store i32* null, i32** %open_result.addr, align 8, !dbg !16514, !tbaa !2648
  store i32 -2, i32* %result, align 4, !dbg !16516, !tbaa !2635
  br label %if.end36, !dbg !16517

if.else:                                          ; preds = %if.then19
  %16 = load i32, i32* %fd, align 4, !dbg !16518, !tbaa !2635
  %cmp22 = icmp slt i32 %16, 0, !dbg !16520
  br i1 %cmp22, label %cond.true, label %cond.false, !dbg !16518

cond.true:                                        ; preds = %if.else
  %17 = load i8*, i8** %dir.addr, align 8, !dbg !16521, !tbaa !2648
  %call23 = call i32 @chdir(i8* %17) #9, !dbg !16522
  br label %cond.end, !dbg !16518

cond.false:                                       ; preds = %if.else
  %18 = load i32, i32* %fd, align 4, !dbg !16523, !tbaa !2635
  %call24 = call i32 @fchdir(i32 %18) #9, !dbg !16524
  br label %cond.end, !dbg !16518

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond25 = phi i32 [ %call23, %cond.true ], [ %call24, %cond.false ], !dbg !16518
  store i32 %cond25, i32* %result, align 4, !dbg !16525, !tbaa !2635
  %19 = load i32, i32* %result, align 4, !dbg !16526, !tbaa !2635
  %cmp26 = icmp eq i32 %19, 0, !dbg !16528
  br i1 %cmp26, label %if.then27, label %if.end35, !dbg !16529

if.then27:                                        ; preds = %cond.end
  %20 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16530, !tbaa !2648
  %state = getelementptr inbounds %struct.savewd, %struct.savewd* %20, i32 0, i32 0, !dbg !16531, !ctir !1808
  %21 = load i32, i32* %state, align 4, !dbg !16531, !tbaa !16438, !ctir !1807
  switch i32 %21, label %sw.default [
    i32 1, label %sw.bb
    i32 4, label %sw.bb29
    i32 2, label %sw.bb29
    i32 5, label %sw.bb29
    i32 3, label %sw.bb30
  ], !dbg !16532

sw.bb:                                            ; preds = %if.then27
  %22 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16533, !tbaa !2648
  %state28 = getelementptr inbounds %struct.savewd, %struct.savewd* %22, i32 0, i32 0, !dbg !16535, !ctir !1808
  store i32 2, i32* %state28, align 4, !dbg !16536, !tbaa !16438, !ctir !1807
  br label %sw.epilog, !dbg !16537

sw.bb29:                                          ; preds = %if.then27, %if.then27, %if.then27
  br label %sw.epilog, !dbg !16538

sw.bb30:                                          ; preds = %if.then27
  %23 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16539, !tbaa !2648
  %val = getelementptr inbounds %struct.savewd, %struct.savewd* %23, i32 0, i32 1, !dbg !16539, !ctir !1808
  %child = bitcast %union.anon* %val to i32*, !dbg !16539
  %24 = load i32, i32* %child, align 4, !dbg !16539, !tbaa !3295, !ctir !1812
  %cmp31 = icmp eq i32 %24, 0, !dbg !16539
  br i1 %cmp31, label %if.then32, label %if.else33, !dbg !16542

if.then32:                                        ; preds = %sw.bb30
  br label %if.end34, !dbg !16542

if.else33:                                        ; preds = %sw.bb30
  call void @__assert_fail(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.366, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.367, i64 0, i64 0), i32 155, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__.savewd_chdir, i64 0, i64 0)) #13, !dbg !16539
  unreachable, !dbg !16539

if.end34:                                         ; preds = %if.then32
  br label %sw.epilog, !dbg !16543

sw.default:                                       ; preds = %if.then27
  call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.368, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.367, i64 0, i64 0), i32 159, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__.savewd_chdir, i64 0, i64 0)) #13, !dbg !16544
  unreachable, !dbg !16544

sw.epilog:                                        ; preds = %if.end34, %sw.bb29, %sw.bb
  br label %if.end35, !dbg !16547

if.end35:                                         ; preds = %sw.epilog, %cond.end
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then21
  br label %if.end37, !dbg !16548

if.end37:                                         ; preds = %if.end36, %land.lhs.true16, %if.end12
  %25 = load i32, i32* %fd, align 4, !dbg !16549, !tbaa !2635
  %cmp38 = icmp sle i32 0, %25, !dbg !16551
  br i1 %cmp38, label %land.lhs.true39, label %if.end45, !dbg !16552

land.lhs.true39:                                  ; preds = %if.end37
  %26 = load i32*, i32** %open_result.addr, align 8, !dbg !16553, !tbaa !2648
  %tobool40 = icmp ne i32* %26, null, !dbg !16553
  br i1 %tobool40, label %if.end45, label %if.then41, !dbg !16554

if.then41:                                        ; preds = %land.lhs.true39
  call void @llvm.dbg.declare(metadata i32* %e, metadata !16555, metadata !DIExpression()), !dbg !16557
  %call42 = call i32* @__errno_location() #16, !dbg !16558
  %27 = load i32, i32* %call42, align 4, !dbg !16558, !tbaa !2635, !ctir !7
  store i32 %27, i32* %e, align 4, !dbg !16557, !tbaa !2635
  %28 = load i32, i32* %fd, align 4, !dbg !16559, !tbaa !2635
  %call43 = call i32 @close(i32 %28), !dbg !16560
  %29 = load i32, i32* %e, align 4, !dbg !16561, !tbaa !2635
  %call44 = call i32* @__errno_location() #16, !dbg !16562
  store i32 %29, i32* %call44, align 4, !dbg !16563, !tbaa !2635, !ctir !7
  br label %if.end45, !dbg !16564

if.end45:                                         ; preds = %if.then41, %land.lhs.true39, %if.end37
  %30 = load i32, i32* %result, align 4, !dbg !16565, !tbaa !2635
  ret i32 %30, !dbg !16566
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @savewd_save(%struct.savewd* %wd) #4 !dbg !16567 !ctir !1834 {
entry:
  %retval = alloca i1, align 1
  %wd.addr = alloca %struct.savewd*, align 8
  %fd = alloca i32, align 4, !ctir !7
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !16568, metadata !DIExpression()), !dbg !16569
  %0 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16570, !tbaa !2648
  %state = getelementptr inbounds %struct.savewd, %struct.savewd* %0, i32 0, i32 0, !dbg !16571, !ctir !1808
  %1 = load i32, i32* %state, align 4, !dbg !16571, !tbaa !16438, !ctir !1807
  switch i32 %1, label %sw.default [
    i32 0, label %sw.bb
    i32 3, label %sw.bb14
    i32 1, label %sw.bb37
    i32 2, label %sw.bb37
    i32 4, label %sw.bb37
    i32 5, label %sw.bb37
  ], !dbg !16572

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !16573, metadata !DIExpression()), !dbg !16576
  %call = call i32 (i8*, i32, ...) @open_safer(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.369, i64 0, i64 0), i32 0), !dbg !16577
  store i32 %call, i32* %fd, align 4, !dbg !16576, !tbaa !2635
  %2 = load i32, i32* %fd, align 4, !dbg !16578, !tbaa !2635
  %cmp = icmp sle i32 0, %2, !dbg !16580
  br i1 %cmp, label %if.then, label %if.end, !dbg !16581

if.then:                                          ; preds = %sw.bb
  %3 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16582, !tbaa !2648
  %state1 = getelementptr inbounds %struct.savewd, %struct.savewd* %3, i32 0, i32 0, !dbg !16584, !ctir !1808
  store i32 1, i32* %state1, align 4, !dbg !16585, !tbaa !16438, !ctir !1807
  %4 = load i32, i32* %fd, align 4, !dbg !16586, !tbaa !2635
  %5 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16587, !tbaa !2648
  %val = getelementptr inbounds %struct.savewd, %struct.savewd* %5, i32 0, i32 1, !dbg !16588, !ctir !1808
  %fd2 = bitcast %union.anon* %val to i32*, !dbg !16589
  store i32 %4, i32* %fd2, align 4, !dbg !16590, !tbaa !3295, !ctir !1812
  br label %sw.epilog, !dbg !16591

if.end:                                           ; preds = %sw.bb
  %call3 = call i32* @__errno_location() #16, !dbg !16592
  %6 = load i32, i32* %call3, align 4, !dbg !16592, !tbaa !2635, !ctir !7
  %cmp4 = icmp ne i32 %6, 13, !dbg !16594
  br i1 %cmp4, label %land.lhs.true, label %if.end11, !dbg !16595

land.lhs.true:                                    ; preds = %if.end
  %call5 = call i32* @__errno_location() #16, !dbg !16596
  %7 = load i32, i32* %call5, align 4, !dbg !16596, !tbaa !2635, !ctir !7
  %cmp6 = icmp ne i32 %7, 116, !dbg !16597
  br i1 %cmp6, label %if.then7, label %if.end11, !dbg !16598

if.then7:                                         ; preds = %land.lhs.true
  %8 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16599, !tbaa !2648
  %state8 = getelementptr inbounds %struct.savewd, %struct.savewd* %8, i32 0, i32 0, !dbg !16601, !ctir !1808
  store i32 4, i32* %state8, align 4, !dbg !16602, !tbaa !16438, !ctir !1807
  %call9 = call i32* @__errno_location() #16, !dbg !16603
  %9 = load i32, i32* %call9, align 4, !dbg !16603, !tbaa !2635, !ctir !7
  %10 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16604, !tbaa !2648
  %val10 = getelementptr inbounds %struct.savewd, %struct.savewd* %10, i32 0, i32 1, !dbg !16605, !ctir !1808
  %errnum = bitcast %union.anon* %val10 to i32*, !dbg !16606
  store i32 %9, i32* %errnum, align 4, !dbg !16607, !tbaa !3295, !ctir !1812
  br label %sw.epilog, !dbg !16608

if.end11:                                         ; preds = %land.lhs.true, %if.end
  %11 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16609, !tbaa !2648
  %state12 = getelementptr inbounds %struct.savewd, %struct.savewd* %11, i32 0, i32 0, !dbg !16610, !ctir !1808
  store i32 3, i32* %state12, align 4, !dbg !16611, !tbaa !16438, !ctir !1807
  %12 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16612, !tbaa !2648
  %val13 = getelementptr inbounds %struct.savewd, %struct.savewd* %12, i32 0, i32 1, !dbg !16613, !ctir !1808
  %child = bitcast %union.anon* %val13 to i32*, !dbg !16614
  store i32 -1, i32* %child, align 4, !dbg !16615, !tbaa !3295, !ctir !1812
  br label %sw.bb14, !dbg !16616

sw.bb14:                                          ; preds = %entry, %if.end11
  %13 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16617, !tbaa !2648
  %val15 = getelementptr inbounds %struct.savewd, %struct.savewd* %13, i32 0, i32 1, !dbg !16619, !ctir !1808
  %child16 = bitcast %union.anon* %val15 to i32*, !dbg !16620
  %14 = load i32, i32* %child16, align 4, !dbg !16620, !tbaa !3295, !ctir !1812
  %cmp17 = icmp slt i32 %14, 0, !dbg !16621
  br i1 %cmp17, label %if.then18, label %if.end36, !dbg !16622

if.then18:                                        ; preds = %sw.bb14
  %call19 = call i32 @fork() #9, !dbg !16623
  %15 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16625, !tbaa !2648
  %val20 = getelementptr inbounds %struct.savewd, %struct.savewd* %15, i32 0, i32 1, !dbg !16626, !ctir !1808
  %child21 = bitcast %union.anon* %val20 to i32*, !dbg !16627
  store i32 %call19, i32* %child21, align 4, !dbg !16628, !tbaa !3295, !ctir !1812
  %16 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16629, !tbaa !2648
  %val22 = getelementptr inbounds %struct.savewd, %struct.savewd* %16, i32 0, i32 1, !dbg !16631, !ctir !1808
  %child23 = bitcast %union.anon* %val22 to i32*, !dbg !16632
  %17 = load i32, i32* %child23, align 4, !dbg !16632, !tbaa !3295, !ctir !1812
  %cmp24 = icmp ne i32 %17, 0, !dbg !16633
  br i1 %cmp24, label %if.then25, label %if.end35, !dbg !16634

if.then25:                                        ; preds = %if.then18
  %18 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16635, !tbaa !2648
  %val26 = getelementptr inbounds %struct.savewd, %struct.savewd* %18, i32 0, i32 1, !dbg !16638, !ctir !1808
  %child27 = bitcast %union.anon* %val26 to i32*, !dbg !16639
  %19 = load i32, i32* %child27, align 4, !dbg !16639, !tbaa !3295, !ctir !1812
  %cmp28 = icmp slt i32 0, %19, !dbg !16640
  br i1 %cmp28, label %if.then29, label %if.end30, !dbg !16641

if.then29:                                        ; preds = %if.then25
  store i1 true, i1* %retval, align 1, !dbg !16642
  br label %return, !dbg !16642

if.end30:                                         ; preds = %if.then25
  %20 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16643, !tbaa !2648
  %state31 = getelementptr inbounds %struct.savewd, %struct.savewd* %20, i32 0, i32 0, !dbg !16644, !ctir !1808
  store i32 4, i32* %state31, align 4, !dbg !16645, !tbaa !16438, !ctir !1807
  %call32 = call i32* @__errno_location() #16, !dbg !16646
  %21 = load i32, i32* %call32, align 4, !dbg !16646, !tbaa !2635, !ctir !7
  %22 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16647, !tbaa !2648
  %val33 = getelementptr inbounds %struct.savewd, %struct.savewd* %22, i32 0, i32 1, !dbg !16648, !ctir !1808
  %errnum34 = bitcast %union.anon* %val33 to i32*, !dbg !16649
  store i32 %21, i32* %errnum34, align 4, !dbg !16650, !tbaa !3295, !ctir !1812
  br label %if.end35, !dbg !16651

if.end35:                                         ; preds = %if.end30, %if.then18
  br label %if.end36, !dbg !16652

if.end36:                                         ; preds = %if.end35, %sw.bb14
  br label %sw.epilog, !dbg !16653

sw.bb37:                                          ; preds = %entry, %entry, %entry, %entry
  br label %sw.epilog, !dbg !16654

sw.default:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.368, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.367, i64 0, i64 0), i32 99, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__PRETTY_FUNCTION__.savewd_save, i64 0, i64 0)) #13, !dbg !16655
  unreachable, !dbg !16655

sw.epilog:                                        ; preds = %sw.bb37, %if.end36, %if.then7, %if.then
  store i1 false, i1* %retval, align 1, !dbg !16658
  br label %return, !dbg !16658

return:                                           ; preds = %sw.epilog, %if.then29
  %23 = load i1, i1* %retval, align 1, !dbg !16659
  ret i1 %23, !dbg !16659
}

; Function Attrs: nounwind
declare dso_local i32 @chdir(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @fchdir(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @savewd_restore(%struct.savewd* %wd, i32 %status) #4 !dbg !16660 !ctir !1827 {
entry:
  %retval = alloca i32, align 4
  %wd.addr = alloca %struct.savewd*, align 8
  %status.addr = alloca i32, align 4
  %chdir_errno = alloca i32, align 4, !ctir !7
  %child = alloca i32, align 4, !ctir !111
  %child_status = alloca i32, align 4, !ctir !7
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !16661, metadata !DIExpression()), !dbg !16662
  store i32 %status, i32* %status.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !16663, metadata !DIExpression()), !dbg !16664
  %0 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16665, !tbaa !2648
  %state = getelementptr inbounds %struct.savewd, %struct.savewd* %0, i32 0, i32 0, !dbg !16666, !ctir !1808
  %1 = load i32, i32* %state, align 4, !dbg !16666, !tbaa !16438, !ctir !1807
  switch i32 %1, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 4, label %sw.bb9
    i32 3, label %sw.bb13
  ], !dbg !16667

sw.bb:                                            ; preds = %entry, %entry
  br label %sw.epilog, !dbg !16668

sw.bb1:                                           ; preds = %entry
  %2 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16670, !tbaa !2648
  %val = getelementptr inbounds %struct.savewd, %struct.savewd* %2, i32 0, i32 1, !dbg !16672, !ctir !1808
  %fd = bitcast %union.anon* %val to i32*, !dbg !16673
  %3 = load i32, i32* %fd, align 4, !dbg !16673, !tbaa !3295, !ctir !1812
  %call = call i32 @fchdir(i32 %3) #9, !dbg !16674
  %cmp = icmp eq i32 %call, 0, !dbg !16675
  br i1 %cmp, label %if.then, label %if.else, !dbg !16676

if.then:                                          ; preds = %sw.bb1
  %4 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16677, !tbaa !2648
  %state2 = getelementptr inbounds %struct.savewd, %struct.savewd* %4, i32 0, i32 0, !dbg !16679, !ctir !1808
  store i32 1, i32* %state2, align 4, !dbg !16680, !tbaa !16438, !ctir !1807
  br label %sw.epilog, !dbg !16681

if.else:                                          ; preds = %sw.bb1
  call void @llvm.dbg.declare(metadata i32* %chdir_errno, metadata !16682, metadata !DIExpression()), !dbg !16684
  %call3 = call i32* @__errno_location() #16, !dbg !16685
  %5 = load i32, i32* %call3, align 4, !dbg !16685, !tbaa !2635, !ctir !7
  store i32 %5, i32* %chdir_errno, align 4, !dbg !16684, !tbaa !2635
  %6 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16686, !tbaa !2648
  %val4 = getelementptr inbounds %struct.savewd, %struct.savewd* %6, i32 0, i32 1, !dbg !16687, !ctir !1808
  %fd5 = bitcast %union.anon* %val4 to i32*, !dbg !16688
  %7 = load i32, i32* %fd5, align 4, !dbg !16688, !tbaa !3295, !ctir !1812
  %call6 = call i32 @close(i32 %7), !dbg !16689
  %8 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16690, !tbaa !2648
  %state7 = getelementptr inbounds %struct.savewd, %struct.savewd* %8, i32 0, i32 0, !dbg !16691, !ctir !1808
  store i32 4, i32* %state7, align 4, !dbg !16692, !tbaa !16438, !ctir !1807
  %9 = load i32, i32* %chdir_errno, align 4, !dbg !16693, !tbaa !2635
  %10 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16694, !tbaa !2648
  %val8 = getelementptr inbounds %struct.savewd, %struct.savewd* %10, i32 0, i32 1, !dbg !16695, !ctir !1808
  %errnum = bitcast %union.anon* %val8 to i32*, !dbg !16696
  store i32 %9, i32* %errnum, align 4, !dbg !16697, !tbaa !3295, !ctir !1812
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %sw.bb9, !dbg !16698

sw.bb9:                                           ; preds = %entry, %if.end
  %11 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16699, !tbaa !2648
  %val10 = getelementptr inbounds %struct.savewd, %struct.savewd* %11, i32 0, i32 1, !dbg !16700, !ctir !1808
  %errnum11 = bitcast %union.anon* %val10 to i32*, !dbg !16701
  %12 = load i32, i32* %errnum11, align 4, !dbg !16701, !tbaa !3295, !ctir !1812
  %call12 = call i32* @__errno_location() #16, !dbg !16702
  store i32 %12, i32* %call12, align 4, !dbg !16703, !tbaa !2635, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !16704
  br label %return, !dbg !16704

sw.bb13:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %child, metadata !16705, metadata !DIExpression()), !dbg !16707
  %13 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16708, !tbaa !2648
  %val14 = getelementptr inbounds %struct.savewd, %struct.savewd* %13, i32 0, i32 1, !dbg !16709, !ctir !1808
  %child15 = bitcast %union.anon* %val14 to i32*, !dbg !16710
  %14 = load i32, i32* %child15, align 4, !dbg !16710, !tbaa !3295, !ctir !1812
  store i32 %14, i32* %child, align 4, !dbg !16707, !tbaa !2635
  %15 = load i32, i32* %child, align 4, !dbg !16711, !tbaa !2635
  %cmp16 = icmp eq i32 %15, 0, !dbg !16713
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !16714

if.then17:                                        ; preds = %sw.bb13
  %16 = load i32, i32* %status.addr, align 4, !dbg !16715, !tbaa !2635
  call void @_exit(i32 %16) #15, !dbg !16716
  unreachable, !dbg !16716

if.end18:                                         ; preds = %sw.bb13
  %17 = load i32, i32* %child, align 4, !dbg !16717, !tbaa !2635
  %cmp19 = icmp slt i32 0, %17, !dbg !16719
  br i1 %cmp19, label %if.then20, label %if.end36, !dbg !16720

if.then20:                                        ; preds = %if.end18
  call void @llvm.dbg.declare(metadata i32* %child_status, metadata !16721, metadata !DIExpression()), !dbg !16723
  br label %while.cond, !dbg !16724

while.cond:                                       ; preds = %if.end27, %if.then20
  %18 = load i32, i32* %child, align 4, !dbg !16725, !tbaa !2635
  %call21 = call i32 @waitpid(i32 %18, i32* %child_status, i32 0), !dbg !16726
  %cmp22 = icmp slt i32 %call21, 0, !dbg !16727
  br i1 %cmp22, label %while.body, label %while.end, !dbg !16724

while.body:                                       ; preds = %while.cond
  %call23 = call i32* @__errno_location() #16, !dbg !16728
  %19 = load i32, i32* %call23, align 4, !dbg !16728, !tbaa !2635, !ctir !7
  %cmp24 = icmp eq i32 %19, 4, !dbg !16728
  br i1 %cmp24, label %if.then25, label %if.else26, !dbg !16731

if.then25:                                        ; preds = %while.body
  br label %if.end27, !dbg !16731

if.else26:                                        ; preds = %while.body
  call void @__assert_fail(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3.372, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.367, i64 0, i64 0), i32 216, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__PRETTY_FUNCTION__.savewd_restore, i64 0, i64 0)) #13, !dbg !16728
  unreachable, !dbg !16728

if.end27:                                         ; preds = %if.then25
  br label %while.cond, !dbg !16724, !llvm.loop !16732

while.end:                                        ; preds = %while.cond
  %20 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16734, !tbaa !2648
  %val28 = getelementptr inbounds %struct.savewd, %struct.savewd* %20, i32 0, i32 1, !dbg !16735, !ctir !1808
  %child29 = bitcast %union.anon* %val28 to i32*, !dbg !16736
  store i32 -1, i32* %child29, align 4, !dbg !16737, !tbaa !3295, !ctir !1812
  %21 = load i32, i32* %child_status, align 4, !dbg !16738, !tbaa !2635
  %and = and i32 %21, 127, !dbg !16738
  %cmp30 = icmp eq i32 %and, 0, !dbg !16738
  br i1 %cmp30, label %if.end34, label %if.then31, !dbg !16740

if.then31:                                        ; preds = %while.end
  %22 = load i32, i32* %child_status, align 4, !dbg !16741, !tbaa !2635
  %and32 = and i32 %22, 127, !dbg !16741
  %call33 = call i32 @raise(i32 %and32) #9, !dbg !16742
  br label %if.end34, !dbg !16742

if.end34:                                         ; preds = %if.then31, %while.end
  %23 = load i32, i32* %child_status, align 4, !dbg !16743, !tbaa !2635
  %and35 = and i32 %23, 65280, !dbg !16743
  %shr = ashr i32 %and35, 8, !dbg !16743
  store i32 %shr, i32* %retval, align 4, !dbg !16744
  br label %return, !dbg !16744

if.end36:                                         ; preds = %if.end18
  br label %sw.epilog, !dbg !16745

sw.default:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.368, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.367, i64 0, i64 0), i32 226, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__PRETTY_FUNCTION__.savewd_restore, i64 0, i64 0)) #13, !dbg !16746
  unreachable, !dbg !16746

sw.epilog:                                        ; preds = %if.end36, %if.then, %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !16749
  br label %return, !dbg !16749

return:                                           ; preds = %sw.epilog, %if.end34, %sw.bb9
  %24 = load i32, i32* %retval, align 4, !dbg !16750
  ret i32 %24, !dbg !16750
}

; Function Attrs: nounwind
declare dso_local i32 @raise(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @savewd_finish(%struct.savewd* %wd) #4 !dbg !16751 !ctir !1818 {
entry:
  %wd.addr = alloca %struct.savewd*, align 8
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !16752, metadata !DIExpression()), !dbg !16753
  %0 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16754, !tbaa !2648
  %state = getelementptr inbounds %struct.savewd, %struct.savewd* %0, i32 0, i32 0, !dbg !16755, !ctir !1808
  %1 = load i32, i32* %state, align 4, !dbg !16755, !tbaa !16438, !ctir !1807
  switch i32 %1, label %sw.default [
    i32 0, label %sw.bb
    i32 4, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb1
    i32 3, label %sw.bb2
  ], !dbg !16756

sw.bb:                                            ; preds = %entry, %entry
  br label %sw.epilog, !dbg !16757

sw.bb1:                                           ; preds = %entry, %entry
  %2 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16759, !tbaa !2648
  %val = getelementptr inbounds %struct.savewd, %struct.savewd* %2, i32 0, i32 1, !dbg !16760, !ctir !1808
  %fd = bitcast %union.anon* %val to i32*, !dbg !16761
  %3 = load i32, i32* %fd, align 4, !dbg !16761, !tbaa !3295, !ctir !1812
  %call = call i32 @close(i32 %3), !dbg !16762
  br label %sw.epilog, !dbg !16763

sw.bb2:                                           ; preds = %entry
  %4 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16764, !tbaa !2648
  %val3 = getelementptr inbounds %struct.savewd, %struct.savewd* %4, i32 0, i32 1, !dbg !16764, !ctir !1808
  %child = bitcast %union.anon* %val3 to i32*, !dbg !16764
  %5 = load i32, i32* %child, align 4, !dbg !16764, !tbaa !3295, !ctir !1812
  %cmp = icmp slt i32 %5, 0, !dbg !16764
  br i1 %cmp, label %if.then, label %if.else, !dbg !16767

if.then:                                          ; preds = %sw.bb2
  br label %if.end, !dbg !16767

if.else:                                          ; preds = %sw.bb2
  call void @__assert_fail(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4.375, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.367, i64 0, i64 0), i32 247, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__.savewd_finish, i64 0, i64 0)) #13, !dbg !16764
  unreachable, !dbg !16764

if.end:                                           ; preds = %if.then
  br label %sw.epilog, !dbg !16768

sw.default:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.368, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.367, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__.savewd_finish, i64 0, i64 0)) #13, !dbg !16769
  unreachable, !dbg !16769

sw.epilog:                                        ; preds = %if.end, %sw.bb1, %sw.bb
  %6 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16772, !tbaa !2648
  %state4 = getelementptr inbounds %struct.savewd, %struct.savewd* %6, i32 0, i32 0, !dbg !16773, !ctir !1808
  store i32 5, i32* %state4, align 4, !dbg !16774, !tbaa !16438, !ctir !1807
  ret void, !dbg !16775
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @savewd_process_files(i32 %n_files, i8** %file, i32 (i8*, %struct.savewd*, i8*)* %act, i8* %options) #4 !dbg !16776 !ctir !1829 {
entry:
  %n_files.addr = alloca i32, align 4
  %file.addr = alloca i8**, align 8
  %act.addr = alloca i32 (i8*, %struct.savewd*, i8*)*, align 8
  %options.addr = alloca i8*, align 8
  %i = alloca i32, align 4, !ctir !7
  %last_relative = alloca i32, align 4, !ctir !7
  %exit_status = alloca i32, align 4, !ctir !7
  %wd = alloca %struct.savewd, align 4, !ctir !1808
  %s = alloca i32, align 4, !ctir !7
  %r = alloca i32, align 4, !ctir !7
  %s36 = alloca i32, align 4, !ctir !7
  store i32 %n_files, i32* %n_files.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %n_files.addr, metadata !16777, metadata !DIExpression()), !dbg !16778
  store i8** %file, i8*** %file.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8*** %file.addr, metadata !16779, metadata !DIExpression()), !dbg !16780
  store i32 (i8*, %struct.savewd*, i8*)* %act, i32 (i8*, %struct.savewd*, i8*)** %act.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i32 (i8*, %struct.savewd*, i8*)** %act.addr, metadata !16781, metadata !DIExpression()), !dbg !16782
  store i8* %options, i8** %options.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %options.addr, metadata !16783, metadata !DIExpression()), !dbg !16784
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16785, metadata !DIExpression()), !dbg !16786
  store i32 0, i32* %i, align 4, !dbg !16786, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %last_relative, metadata !16787, metadata !DIExpression()), !dbg !16788
  call void @llvm.dbg.declare(metadata i32* %exit_status, metadata !16789, metadata !DIExpression()), !dbg !16790
  store i32 0, i32* %exit_status, align 4, !dbg !16790, !tbaa !2635
  call void @llvm.dbg.declare(metadata %struct.savewd* %wd, metadata !16791, metadata !DIExpression()), !dbg !16792
  call void @savewd_init(%struct.savewd* %wd), !dbg !16793
  %0 = load i32, i32* %n_files.addr, align 4, !dbg !16794, !tbaa !2635
  %sub = sub nsw i32 %0, 1, !dbg !16796
  store i32 %sub, i32* %last_relative, align 4, !dbg !16797, !tbaa !2635
  br label %for.cond, !dbg !16798

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %last_relative, align 4, !dbg !16799, !tbaa !2635
  %cmp = icmp sle i32 0, %1, !dbg !16801
  br i1 %cmp, label %for.body, label %for.end, !dbg !16802

for.body:                                         ; preds = %for.cond
  %2 = load i8**, i8*** %file.addr, align 8, !dbg !16803, !tbaa !2648
  %3 = load i32, i32* %last_relative, align 4, !dbg !16803, !tbaa !2635
  %idxprom = sext i32 %3 to i64, !dbg !16803
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !16803, !ctir !184
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !16803, !tbaa !2648
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 0, !dbg !16803, !ctir !9
  %5 = load i8, i8* %arrayidx1, align 1, !dbg !16803, !tbaa !3295
  %conv = sext i8 %5 to i32, !dbg !16803
  %cmp2 = icmp eq i32 %conv, 47, !dbg !16803
  br i1 %cmp2, label %if.end, label %if.then, !dbg !16805

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !16806

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !16803

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %last_relative, align 4, !dbg !16807, !tbaa !2635
  %dec = add nsw i32 %6, -1, !dbg !16807
  store i32 %dec, i32* %last_relative, align 4, !dbg !16807, !tbaa !2635
  br label %for.cond, !dbg !16808, !llvm.loop !16809

for.end:                                          ; preds = %if.then, %for.cond
  br label %for.cond4, !dbg !16811

for.cond4:                                        ; preds = %for.inc30, %for.end
  %7 = load i32, i32* %i, align 4, !dbg !16812, !tbaa !2635
  %8 = load i32, i32* %last_relative, align 4, !dbg !16815, !tbaa !2635
  %cmp5 = icmp slt i32 %7, %8, !dbg !16816
  br i1 %cmp5, label %for.body7, label %for.end31, !dbg !16817

for.body7:                                        ; preds = %for.cond4
  %call = call zeroext i1 @savewd_delegating(%struct.savewd* %wd), !dbg !16818
  br i1 %call, label %if.end16, label %if.then8, !dbg !16821

if.then8:                                         ; preds = %for.body7
  call void @llvm.dbg.declare(metadata i32* %s, metadata !16822, metadata !DIExpression()), !dbg !16824
  %9 = load i32 (i8*, %struct.savewd*, i8*)*, i32 (i8*, %struct.savewd*, i8*)** %act.addr, align 8, !dbg !16825, !tbaa !2648
  %10 = load i8**, i8*** %file.addr, align 8, !dbg !16826, !tbaa !2648
  %11 = load i32, i32* %i, align 4, !dbg !16827, !tbaa !2635
  %idxprom9 = sext i32 %11 to i64, !dbg !16826
  %arrayidx10 = getelementptr inbounds i8*, i8** %10, i64 %idxprom9, !dbg !16826, !ctir !184
  %12 = load i8*, i8** %arrayidx10, align 8, !dbg !16826, !tbaa !2648
  %13 = load i8*, i8** %options.addr, align 8, !dbg !16828, !tbaa !2648
  %call11 = call i32 %9(i8* %12, %struct.savewd* %wd, i8* %13), !dbg !16825
  store i32 %call11, i32* %s, align 4, !dbg !16824, !tbaa !2635
  %14 = load i32, i32* %exit_status, align 4, !dbg !16829, !tbaa !2635
  %15 = load i32, i32* %s, align 4, !dbg !16831, !tbaa !2635
  %cmp12 = icmp slt i32 %14, %15, !dbg !16832
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !16833

if.then14:                                        ; preds = %if.then8
  %16 = load i32, i32* %s, align 4, !dbg !16834, !tbaa !2635
  store i32 %16, i32* %exit_status, align 4, !dbg !16835, !tbaa !2635
  br label %if.end15, !dbg !16836

if.end15:                                         ; preds = %if.then14, %if.then8
  br label %if.end16, !dbg !16837

if.end16:                                         ; preds = %if.end15, %for.body7
  %17 = load i8**, i8*** %file.addr, align 8, !dbg !16838, !tbaa !2648
  %18 = load i32, i32* %i, align 4, !dbg !16838, !tbaa !2635
  %add = add nsw i32 %18, 1, !dbg !16838
  %idxprom17 = sext i32 %add to i64, !dbg !16838
  %arrayidx18 = getelementptr inbounds i8*, i8** %17, i64 %idxprom17, !dbg !16838, !ctir !184
  %19 = load i8*, i8** %arrayidx18, align 8, !dbg !16838, !tbaa !2648
  %arrayidx19 = getelementptr inbounds i8, i8* %19, i64 0, !dbg !16838, !ctir !9
  %20 = load i8, i8* %arrayidx19, align 1, !dbg !16838, !tbaa !3295
  %conv20 = sext i8 %20 to i32, !dbg !16838
  %cmp21 = icmp eq i32 %conv20, 47, !dbg !16838
  br i1 %cmp21, label %if.end29, label %if.then23, !dbg !16840

if.then23:                                        ; preds = %if.end16
  call void @llvm.dbg.declare(metadata i32* %r, metadata !16841, metadata !DIExpression()), !dbg !16843
  %21 = load i32, i32* %exit_status, align 4, !dbg !16844, !tbaa !2635
  %call24 = call i32 @savewd_restore(%struct.savewd* %wd, i32 %21), !dbg !16845
  store i32 %call24, i32* %r, align 4, !dbg !16843, !tbaa !2635
  %22 = load i32, i32* %exit_status, align 4, !dbg !16846, !tbaa !2635
  %23 = load i32, i32* %r, align 4, !dbg !16848, !tbaa !2635
  %cmp25 = icmp slt i32 %22, %23, !dbg !16849
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !16850

if.then27:                                        ; preds = %if.then23
  %24 = load i32, i32* %r, align 4, !dbg !16851, !tbaa !2635
  store i32 %24, i32* %exit_status, align 4, !dbg !16852, !tbaa !2635
  br label %if.end28, !dbg !16853

if.end28:                                         ; preds = %if.then27, %if.then23
  br label %if.end29, !dbg !16854

if.end29:                                         ; preds = %if.end28, %if.end16
  br label %for.inc30, !dbg !16855

for.inc30:                                        ; preds = %if.end29
  %25 = load i32, i32* %i, align 4, !dbg !16856, !tbaa !2635
  %inc = add nsw i32 %25, 1, !dbg !16856
  store i32 %inc, i32* %i, align 4, !dbg !16856, !tbaa !2635
  br label %for.cond4, !dbg !16857, !llvm.loop !16858

for.end31:                                        ; preds = %for.cond4
  call void @savewd_finish(%struct.savewd* %wd), !dbg !16860
  br label %for.cond32, !dbg !16861

for.cond32:                                       ; preds = %for.inc44, %for.end31
  %26 = load i32, i32* %i, align 4, !dbg !16862, !tbaa !2635
  %27 = load i32, i32* %n_files.addr, align 4, !dbg !16865, !tbaa !2635
  %cmp33 = icmp slt i32 %26, %27, !dbg !16866
  br i1 %cmp33, label %for.body35, label %for.end46, !dbg !16867

for.body35:                                       ; preds = %for.cond32
  call void @llvm.dbg.declare(metadata i32* %s36, metadata !16868, metadata !DIExpression()), !dbg !16870
  %28 = load i32 (i8*, %struct.savewd*, i8*)*, i32 (i8*, %struct.savewd*, i8*)** %act.addr, align 8, !dbg !16871, !tbaa !2648
  %29 = load i8**, i8*** %file.addr, align 8, !dbg !16872, !tbaa !2648
  %30 = load i32, i32* %i, align 4, !dbg !16873, !tbaa !2635
  %idxprom37 = sext i32 %30 to i64, !dbg !16872
  %arrayidx38 = getelementptr inbounds i8*, i8** %29, i64 %idxprom37, !dbg !16872, !ctir !184
  %31 = load i8*, i8** %arrayidx38, align 8, !dbg !16872, !tbaa !2648
  %32 = load i8*, i8** %options.addr, align 8, !dbg !16874, !tbaa !2648
  %call39 = call i32 %28(i8* %31, %struct.savewd* %wd, i8* %32), !dbg !16871
  store i32 %call39, i32* %s36, align 4, !dbg !16870, !tbaa !2635
  %33 = load i32, i32* %exit_status, align 4, !dbg !16875, !tbaa !2635
  %34 = load i32, i32* %s36, align 4, !dbg !16877, !tbaa !2635
  %cmp40 = icmp slt i32 %33, %34, !dbg !16878
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !16879

if.then42:                                        ; preds = %for.body35
  %35 = load i32, i32* %s36, align 4, !dbg !16880, !tbaa !2635
  store i32 %35, i32* %exit_status, align 4, !dbg !16881, !tbaa !2635
  br label %if.end43, !dbg !16882

if.end43:                                         ; preds = %if.then42, %for.body35
  br label %for.inc44, !dbg !16883

for.inc44:                                        ; preds = %if.end43
  %36 = load i32, i32* %i, align 4, !dbg !16884, !tbaa !2635
  %inc45 = add nsw i32 %36, 1, !dbg !16884
  store i32 %inc45, i32* %i, align 4, !dbg !16884, !tbaa !2635
  br label %for.cond32, !dbg !16885, !llvm.loop !16886

for.end46:                                        ; preds = %for.cond32
  %37 = load i32, i32* %exit_status, align 4, !dbg !16888, !tbaa !2635
  ret i32 %37, !dbg !16889
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @savewd_delegating(%struct.savewd* %wd) #4 !dbg !16890 !ctir !1836 {
entry:
  %wd.addr = alloca %struct.savewd*, align 8
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !16891, metadata !DIExpression()), !dbg !16892
  %0 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16893, !tbaa !2648
  %state = getelementptr inbounds %struct.savewd, %struct.savewd* %0, i32 0, i32 0, !dbg !16894, !ctir !1824
  %1 = load i32, i32* %state, align 4, !dbg !16894, !tbaa !16438, !ctir !1807
  %cmp = icmp eq i32 %1, 3, !dbg !16895
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !16896

land.rhs:                                         ; preds = %entry
  %2 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16897, !tbaa !2648
  %val = getelementptr inbounds %struct.savewd, %struct.savewd* %2, i32 0, i32 1, !dbg !16898, !ctir !1824
  %child = bitcast %union.anon* %val to i32*, !dbg !16899
  %3 = load i32, i32* %child, align 4, !dbg !16899, !tbaa !3295, !ctir !1812
  %cmp1 = icmp slt i32 0, %3, !dbg !16900
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !16901
  ret i1 %4, !dbg !16902
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getcon(i8** %con) #4 !dbg !16903 !ctir !1841 {
entry:
  %con.addr = alloca i8**, align 8
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !16904, metadata !DIExpression()), !dbg !16905
  %call = call i32* @__errno_location() #16, !dbg !16906
  store i32 95, i32* %call, align 4, !dbg !16907, !tbaa !2635, !ctir !7
  ret i32 -1, !dbg !16908
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @freecon(i8* %con) #4 !dbg !16909 !ctir !1846 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16910, metadata !DIExpression()), !dbg !16911
  ret void, !dbg !16912
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getfscreatecon(i8** %con) #4 !dbg !16913 !ctir !1841 {
entry:
  %con.addr = alloca i8**, align 8
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !16914, metadata !DIExpression()), !dbg !16915
  %call = call i32* @__errno_location() #16, !dbg !16916
  store i32 95, i32* %call, align 4, !dbg !16917, !tbaa !2635, !ctir !7
  ret i32 -1, !dbg !16918
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setfscreatecon(i8* %con) #4 !dbg !16919 !ctir !1848 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16920, metadata !DIExpression()), !dbg !16921
  %call = call i32* @__errno_location() #16, !dbg !16922
  store i32 95, i32* %call, align 4, !dbg !16923, !tbaa !2635, !ctir !7
  ret i32 -1, !dbg !16924
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @matchpathcon(i8* %file, i32 %m, i8** %con) #4 !dbg !16925 !ctir !1850 {
entry:
  %file.addr = alloca i8*, align 8
  %m.addr = alloca i32, align 4
  %con.addr = alloca i8**, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16926, metadata !DIExpression()), !dbg !16927
  store i32 %m, i32* %m.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !16928, metadata !DIExpression()), !dbg !16929
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !16930, metadata !DIExpression()), !dbg !16931
  %call = call i32* @__errno_location() #16, !dbg !16932
  store i32 95, i32* %call, align 4, !dbg !16933, !tbaa !2635, !ctir !7
  ret i32 -1, !dbg !16934
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getfilecon(i8* %file, i8** %con) #4 !dbg !16935 !ctir !1852 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8**, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16936, metadata !DIExpression()), !dbg !16937
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !16938, metadata !DIExpression()), !dbg !16939
  %call = call i32* @__errno_location() #16, !dbg !16940
  store i32 95, i32* %call, align 4, !dbg !16941, !tbaa !2635, !ctir !7
  ret i32 -1, !dbg !16942
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lgetfilecon(i8* %file, i8** %con) #4 !dbg !16943 !ctir !1852 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8**, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16944, metadata !DIExpression()), !dbg !16945
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !16946, metadata !DIExpression()), !dbg !16947
  %call = call i32* @__errno_location() #16, !dbg !16948
  store i32 95, i32* %call, align 4, !dbg !16949, !tbaa !2635, !ctir !7
  ret i32 -1, !dbg !16950
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fgetfilecon(i32 %fd, i8** %con) #4 !dbg !16951 !ctir !1854 {
entry:
  %fd.addr = alloca i32, align 4
  %con.addr = alloca i8**, align 8
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !16952, metadata !DIExpression()), !dbg !16953
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !16954, metadata !DIExpression()), !dbg !16955
  %call = call i32* @__errno_location() #16, !dbg !16956
  store i32 95, i32* %call, align 4, !dbg !16957, !tbaa !2635, !ctir !7
  ret i32 -1, !dbg !16958
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setfilecon(i8* %file, i8* %con) #4 !dbg !16959 !ctir !1856 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16960, metadata !DIExpression()), !dbg !16961
  store i8* %con, i8** %con.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16962, metadata !DIExpression()), !dbg !16963
  %call = call i32* @__errno_location() #16, !dbg !16964
  store i32 95, i32* %call, align 4, !dbg !16965, !tbaa !2635, !ctir !7
  ret i32 -1, !dbg !16966
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lsetfilecon(i8* %file, i8* %con) #4 !dbg !16967 !ctir !1856 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16968, metadata !DIExpression()), !dbg !16969
  store i8* %con, i8** %con.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16970, metadata !DIExpression()), !dbg !16971
  %call = call i32* @__errno_location() #16, !dbg !16972
  store i32 95, i32* %call, align 4, !dbg !16973, !tbaa !2635, !ctir !7
  ret i32 -1, !dbg !16974
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fsetfilecon(i32 %fd, i8* %con) #4 !dbg !16975 !ctir !1858 {
entry:
  %fd.addr = alloca i32, align 4
  %con.addr = alloca i8*, align 8
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !16976, metadata !DIExpression()), !dbg !16977
  store i8* %con, i8** %con.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16978, metadata !DIExpression()), !dbg !16979
  %call = call i32* @__errno_location() #16, !dbg !16980
  store i32 95, i32* %call, align 4, !dbg !16981, !tbaa !2635, !ctir !7
  ret i32 -1, !dbg !16982
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_check_context(i8* %con) #4 !dbg !16983 !ctir !1848 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16984, metadata !DIExpression()), !dbg !16985
  %call = call i32* @__errno_location() #16, !dbg !16986
  store i32 95, i32* %call, align 4, !dbg !16987, !tbaa !2635, !ctir !7
  ret i32 -1, !dbg !16988
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_check_context_raw(i8* %con) #4 !dbg !16989 !ctir !1848 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16990, metadata !DIExpression()), !dbg !16991
  %call = call i32* @__errno_location() #16, !dbg !16992
  store i32 95, i32* %call, align 4, !dbg !16993, !tbaa !2635, !ctir !7
  ret i32 -1, !dbg !16994
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setexeccon(i8* %con) #4 !dbg !16995 !ctir !1848 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16996, metadata !DIExpression()), !dbg !16997
  %call = call i32* @__errno_location() #16, !dbg !16998
  store i32 95, i32* %call, align 4, !dbg !16999, !tbaa !2635, !ctir !7
  ret i32 -1, !dbg !17000
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_compute_create(i8* %scon, i8* %tcon, i16 zeroext %tclass, i8** %newcon) #4 !dbg !17001 !ctir !1860 {
entry:
  %scon.addr = alloca i8*, align 8
  %tcon.addr = alloca i8*, align 8
  %tclass.addr = alloca i16, align 2
  %newcon.addr = alloca i8**, align 8
  store i8* %scon, i8** %scon.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %scon.addr, metadata !17002, metadata !DIExpression()), !dbg !17003
  store i8* %tcon, i8** %tcon.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %tcon.addr, metadata !17004, metadata !DIExpression()), !dbg !17005
  store i16 %tclass, i16* %tclass.addr, align 2, !tbaa !14717
  call void @llvm.dbg.declare(metadata i16* %tclass.addr, metadata !17006, metadata !DIExpression()), !dbg !17007
  store i8** %newcon, i8*** %newcon.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8*** %newcon.addr, metadata !17008, metadata !DIExpression()), !dbg !17009
  %call = call i32* @__errno_location() #16, !dbg !17010
  store i32 95, i32* %call, align 4, !dbg !17011, !tbaa !2635, !ctir !7
  ret i32 -1, !dbg !17012
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @string_to_security_class(i8* %name) #4 !dbg !17013 !ctir !1863 {
entry:
  %name.addr = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !17014, metadata !DIExpression()), !dbg !17015
  %call = call i32* @__errno_location() #16, !dbg !17016
  store i32 95, i32* %call, align 4, !dbg !17017, !tbaa !2635, !ctir !7
  ret i16 0, !dbg !17018
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @matchpathcon_init_prefix(i8* %path, i8* %prefix) #4 !dbg !17019 !ctir !1865 {
entry:
  %path.addr = alloca i8*, align 8
  %prefix.addr = alloca i8*, align 8
  store i8* %path, i8** %path.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !17020, metadata !DIExpression()), !dbg !17021
  store i8* %prefix, i8** %prefix.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %prefix.addr, metadata !17022, metadata !DIExpression()), !dbg !17023
  %call = call i32* @__errno_location() #16, !dbg !17024
  store i32 95, i32* %call, align 4, !dbg !17025, !tbaa !2635, !ctir !7
  ret i32 -1, !dbg !17026
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_atime_ns(%struct.stat* %st) #10 !dbg !17027 !ctir !1870 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !17029, metadata !DIExpression()), !dbg !17030
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !17031, !tbaa !2648
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 11, !dbg !17031, !ctir !1873
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_atim, i32 0, i32 1, !dbg !17032, !ctir !1888
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !17032, !tbaa !17033, !ctir !296
  ret i64 %1, !dbg !17034
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_ctime_ns(%struct.stat* %st) #10 !dbg !17035 !ctir !1870 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !17036, metadata !DIExpression()), !dbg !17037
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !17038, !tbaa !2648
  %st_ctim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 13, !dbg !17038, !ctir !1873
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_ctim, i32 0, i32 1, !dbg !17039, !ctir !1888
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !17039, !tbaa !17040, !ctir !296
  ret i64 %1, !dbg !17041
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_mtime_ns(%struct.stat* %st) #10 !dbg !17042 !ctir !1870 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !17043, metadata !DIExpression()), !dbg !17044
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !17045, !tbaa !2648
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 12, !dbg !17045, !ctir !1873
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 1, !dbg !17046, !ctir !1888
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !17046, !tbaa !17047, !ctir !296
  ret i64 %1, !dbg !17048
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_birthtime_ns(%struct.stat* %st) #10 !dbg !17049 !ctir !1870 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !17050, metadata !DIExpression()), !dbg !17051
  ret i64 0, !dbg !17052
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_atime(%struct.stat* %st) #10 !dbg !17053 !ctir !1895 {
entry:
  %retval = alloca %struct.timespec, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !17054, metadata !DIExpression()), !dbg !17055
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !17056, !tbaa !2648
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 11, !dbg !17056, !ctir !1873
  %1 = bitcast %struct.timespec* %retval to i8*, !dbg !17056
  %2 = bitcast %struct.timespec* %st_atim to i8*, !dbg !17056
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !17056, !tbaa.struct !3798
  %3 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !17057
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !17057
  ret { i64, i64 } %4, !dbg !17057
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_ctime(%struct.stat* %st) #10 !dbg !17058 !ctir !1895 {
entry:
  %retval = alloca %struct.timespec, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !17059, metadata !DIExpression()), !dbg !17060
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !17061, !tbaa !2648
  %st_ctim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 13, !dbg !17061, !ctir !1873
  %1 = bitcast %struct.timespec* %retval to i8*, !dbg !17061
  %2 = bitcast %struct.timespec* %st_ctim to i8*, !dbg !17061
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !17061, !tbaa.struct !3798
  %3 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !17062
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !17062
  ret { i64, i64 } %4, !dbg !17062
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_mtime(%struct.stat* %st) #10 !dbg !17063 !ctir !1895 {
entry:
  %retval = alloca %struct.timespec, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !17064, metadata !DIExpression()), !dbg !17065
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !17066, !tbaa !2648
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 12, !dbg !17066, !ctir !1873
  %1 = bitcast %struct.timespec* %retval to i8*, !dbg !17066
  %2 = bitcast %struct.timespec* %st_mtim to i8*, !dbg !17066
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !17066, !tbaa.struct !3798
  %3 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !17067
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !17067
  ret { i64, i64 } %4, !dbg !17067
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_birthtime(%struct.stat* %st) #10 !dbg !17068 !ctir !1895 {
entry:
  %retval = alloca %struct.timespec, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !17069, metadata !DIExpression()), !dbg !17070
  call void @llvm.dbg.declare(metadata %struct.timespec* %retval, metadata !17071, metadata !DIExpression()), !dbg !17072
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %retval, i32 0, i32 0, !dbg !17073, !ctir !1888
  store i64 -1, i64* %tv_sec, align 8, !dbg !17074, !tbaa !17075, !ctir !294
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %retval, i32 0, i32 1, !dbg !17076, !ctir !1888
  store i64 -1, i64* %tv_nsec, align 8, !dbg !17077, !tbaa !17078, !ctir !296
  %0 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !17079
  %1 = load { i64, i64 }, { i64, i64 }* %0, align 8, !dbg !17079
  ret { i64, i64 } %1, !dbg !17079
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @stat_time_normalize(i32 %result, %struct.stat* %st) #4 !dbg !17080 !ctir !1897 {
entry:
  %result.addr = alloca i32, align 4
  %st.addr = alloca %struct.stat*, align 8
  store i32 %result, i32* %result.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %result.addr, metadata !17081, metadata !DIExpression()), !dbg !17082
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !17083, metadata !DIExpression()), !dbg !17084
  %0 = load i32, i32* %result.addr, align 4, !dbg !17085, !tbaa !2635
  ret i32 %0, !dbg !17086
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @statat(i32 %fd, i8* %name, %struct.stat* %st) #4 !dbg !17087 !ctir !1903 {
entry:
  %fd.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %st.addr = alloca %struct.stat*, align 8
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !17089, metadata !DIExpression()), !dbg !17090
  store i8* %name, i8** %name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !17091, metadata !DIExpression()), !dbg !17092
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !17093, metadata !DIExpression()), !dbg !17094
  %0 = load i32, i32* %fd.addr, align 4, !dbg !17095, !tbaa !2635
  %1 = load i8*, i8** %name.addr, align 8, !dbg !17096, !tbaa !2648
  %2 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !17097, !tbaa !2648
  %call = call i32 @fstatat(i32 %0, i8* %1, %struct.stat* %2, i32 0) #9, !dbg !17098
  ret i32 %call, !dbg !17099
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lstatat(i32 %fd, i8* %name, %struct.stat* %st) #4 !dbg !17100 !ctir !1903 {
entry:
  %fd.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %st.addr = alloca %struct.stat*, align 8
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !17101, metadata !DIExpression()), !dbg !17102
  store i8* %name, i8** %name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !17103, metadata !DIExpression()), !dbg !17104
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !17105, metadata !DIExpression()), !dbg !17106
  %0 = load i32, i32* %fd.addr, align 4, !dbg !17107, !tbaa !2635
  %1 = load i8*, i8** %name.addr, align 8, !dbg !17108, !tbaa !2648
  %2 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !17109, !tbaa !2648
  %call = call i32 @fstatat(i32 %0, i8* %1, %struct.stat* %2, i32 256) #9, !dbg !17110
  ret i32 %call, !dbg !17111
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @try_tempname_len(i8* %tmpl, i32 %suffixlen, i8* %args, i32 (i8*, i8*)* %tryfunc, i64 %x_suffix_len) #4 !dbg !17112 !ctir !1197 {
entry:
  %retval = alloca i32, align 4
  %tmpl.addr = alloca i8*, align 8
  %suffixlen.addr = alloca i32, align 4
  %args.addr = alloca i8*, align 8
  %tryfunc.addr = alloca i32 (i8*, i8*)*, align 8
  %x_suffix_len.addr = alloca i64, align 8
  %len = alloca i64, align 8, !ctir !55
  %XXXXXX = alloca i8*, align 8, !ctir !9
  %count = alloca i32, align 4, !ctir !70
  %fd = alloca i32, align 4, !ctir !7
  %save_errno = alloca i32, align 4, !ctir !7
  %rand_src = alloca %struct.randint_source*, align 8, !ctir !1200
  %attempts = alloca i32, align 4, !ctir !70
  %i = alloca i64, align 8, !ctir !55
  %saved_errno = alloca i32, align 4, !ctir !7
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !17113, metadata !DIExpression()), !dbg !17114
  store i32 %suffixlen, i32* %suffixlen.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !17115, metadata !DIExpression()), !dbg !17116
  store i8* %args, i8** %args.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %args.addr, metadata !17117, metadata !DIExpression()), !dbg !17118
  store i32 (i8*, i8*)* %tryfunc, i32 (i8*, i8*)** %tryfunc.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %tryfunc.addr, metadata !17119, metadata !DIExpression()), !dbg !17120
  store i64 %x_suffix_len, i64* %x_suffix_len.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %x_suffix_len.addr, metadata !17121, metadata !DIExpression()), !dbg !17122
  call void @llvm.dbg.declare(metadata i64* %len, metadata !17123, metadata !DIExpression()), !dbg !17124
  call void @llvm.dbg.declare(metadata i8** %XXXXXX, metadata !17125, metadata !DIExpression()), !dbg !17126
  call void @llvm.dbg.declare(metadata i32* %count, metadata !17127, metadata !DIExpression()), !dbg !17128
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !17129, metadata !DIExpression()), !dbg !17130
  store i32 -1, i32* %fd, align 4, !dbg !17130, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %save_errno, metadata !17131, metadata !DIExpression()), !dbg !17132
  %call = call i32* @__errno_location() #16, !dbg !17133
  %0 = load i32, i32* %call, align 4, !dbg !17133, !tbaa !2635, !ctir !7
  store i32 %0, i32* %save_errno, align 4, !dbg !17132, !tbaa !2635
  call void @llvm.dbg.declare(metadata %struct.randint_source** %rand_src, metadata !17134, metadata !DIExpression()), !dbg !17135
  call void @llvm.dbg.declare(metadata i32* %attempts, metadata !17136, metadata !DIExpression()), !dbg !17137
  store i32 238328, i32* %attempts, align 4, !dbg !17137, !tbaa !2635
  %1 = load i8*, i8** %tmpl.addr, align 8, !dbg !17138, !tbaa !2648
  %call1 = call i64 @strlen(i8* %1) #14, !dbg !17139
  store i64 %call1, i64* %len, align 8, !dbg !17140, !tbaa !3288
  %2 = load i64, i64* %len, align 8, !dbg !17141, !tbaa !3288
  %3 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !17143, !tbaa !3288
  %4 = load i32, i32* %suffixlen.addr, align 4, !dbg !17144, !tbaa !2635
  %conv = sext i32 %4 to i64, !dbg !17144
  %add = add i64 %3, %conv, !dbg !17145
  %cmp = icmp ult i64 %2, %add, !dbg !17146
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !17147

lor.lhs.false:                                    ; preds = %entry
  %5 = load i8*, i8** %tmpl.addr, align 8, !dbg !17148, !tbaa !2648
  %6 = load i64, i64* %len, align 8, !dbg !17149, !tbaa !3288
  %7 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !17150, !tbaa !3288
  %sub = sub i64 %6, %7, !dbg !17151
  %8 = load i32, i32* %suffixlen.addr, align 4, !dbg !17152, !tbaa !2635
  %conv3 = sext i32 %8 to i64, !dbg !17152
  %sub4 = sub i64 %sub, %conv3, !dbg !17153
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %sub4, !dbg !17148, !ctir !9
  %9 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !17154, !tbaa !3288
  %call5 = call zeroext i1 @check_x_suffix(i8* %arrayidx, i64 %9) #14, !dbg !17155
  br i1 %call5, label %if.end, label %if.then, !dbg !17156

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call6 = call i32* @__errno_location() #16, !dbg !17157
  store i32 22, i32* %call6, align 4, !dbg !17157, !tbaa !2635, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !17159
  br label %return, !dbg !17159

if.end:                                           ; preds = %lor.lhs.false
  %10 = load i8*, i8** %tmpl.addr, align 8, !dbg !17160, !tbaa !2648
  %11 = load i64, i64* %len, align 8, !dbg !17161, !tbaa !3288
  %12 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !17162, !tbaa !3288
  %sub7 = sub i64 %11, %12, !dbg !17163
  %13 = load i32, i32* %suffixlen.addr, align 4, !dbg !17164, !tbaa !2635
  %conv8 = sext i32 %13 to i64, !dbg !17164
  %sub9 = sub i64 %sub7, %conv8, !dbg !17165
  %arrayidx10 = getelementptr inbounds i8, i8* %10, i64 %sub9, !dbg !17160, !ctir !9
  store i8* %arrayidx10, i8** %XXXXXX, align 8, !dbg !17166, !tbaa !2648
  %14 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !17167, !tbaa !3288
  %call11 = call %struct.randint_source* @randint_all_new(i8* null, i64 %14), !dbg !17168
  store %struct.randint_source* %call11, %struct.randint_source** %rand_src, align 8, !dbg !17169, !tbaa !2648
  %15 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !17170, !tbaa !2648
  %tobool = icmp ne %struct.randint_source* %15, null, !dbg !17170
  br i1 %tobool, label %if.end13, label %if.then12, !dbg !17172

if.then12:                                        ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !17173
  br label %return, !dbg !17173

if.end13:                                         ; preds = %if.end
  store i32 0, i32* %count, align 4, !dbg !17174, !tbaa !2635
  br label %for.cond, !dbg !17176

for.cond:                                         ; preds = %for.inc34, %if.end13
  %16 = load i32, i32* %count, align 4, !dbg !17177, !tbaa !2635
  %17 = load i32, i32* %attempts, align 4, !dbg !17179, !tbaa !2635
  %cmp14 = icmp ult i32 %16, %17, !dbg !17180
  br i1 %cmp14, label %for.body, label %for.end36, !dbg !17181

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %i, metadata !17182, metadata !DIExpression()), !dbg !17184
  store i64 0, i64* %i, align 8, !dbg !17185, !tbaa !3288
  br label %for.cond16, !dbg !17187

for.cond16:                                       ; preds = %for.inc, %for.body
  %18 = load i64, i64* %i, align 8, !dbg !17188, !tbaa !3288
  %19 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !17190, !tbaa !3288
  %cmp17 = icmp ult i64 %18, %19, !dbg !17191
  br i1 %cmp17, label %for.body19, label %for.end, !dbg !17192

for.body19:                                       ; preds = %for.cond16
  %20 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !17193, !tbaa !2648
  %call20 = call i64 @randint_genmax(%struct.randint_source* %20, i64 61), !dbg !17194
  %arrayidx21 = getelementptr inbounds [63 x i8], [63 x i8]* @letters, i64 0, i64 %call20, !dbg !17195, !ctir !1203
  %21 = load i8, i8* %arrayidx21, align 1, !dbg !17195, !tbaa !3295
  %22 = load i8*, i8** %XXXXXX, align 8, !dbg !17196, !tbaa !2648
  %23 = load i64, i64* %i, align 8, !dbg !17197, !tbaa !3288
  %arrayidx22 = getelementptr inbounds i8, i8* %22, i64 %23, !dbg !17196, !ctir !9
  store i8 %21, i8* %arrayidx22, align 1, !dbg !17198, !tbaa !3295
  br label %for.inc, !dbg !17196

for.inc:                                          ; preds = %for.body19
  %24 = load i64, i64* %i, align 8, !dbg !17199, !tbaa !3288
  %inc = add i64 %24, 1, !dbg !17199
  store i64 %inc, i64* %i, align 8, !dbg !17199, !tbaa !3288
  br label %for.cond16, !dbg !17200, !llvm.loop !17201

for.end:                                          ; preds = %for.cond16
  %25 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %tryfunc.addr, align 8, !dbg !17203, !tbaa !2648
  %26 = load i8*, i8** %tmpl.addr, align 8, !dbg !17204, !tbaa !2648
  %27 = load i8*, i8** %args.addr, align 8, !dbg !17205, !tbaa !2648
  %call23 = call i32 %25(i8* %26, i8* %27), !dbg !17203
  store i32 %call23, i32* %fd, align 4, !dbg !17206, !tbaa !2635
  %28 = load i32, i32* %fd, align 4, !dbg !17207, !tbaa !2635
  %cmp24 = icmp sge i32 %28, 0, !dbg !17209
  br i1 %cmp24, label %if.then26, label %if.else, !dbg !17210

if.then26:                                        ; preds = %for.end
  %29 = load i32, i32* %save_errno, align 4, !dbg !17211, !tbaa !2635
  %call27 = call i32* @__errno_location() #16, !dbg !17211
  store i32 %29, i32* %call27, align 4, !dbg !17211, !tbaa !2635, !ctir !7
  br label %done, !dbg !17213

if.else:                                          ; preds = %for.end
  %call28 = call i32* @__errno_location() #16, !dbg !17214
  %30 = load i32, i32* %call28, align 4, !dbg !17214, !tbaa !2635, !ctir !7
  %cmp29 = icmp ne i32 %30, 17, !dbg !17216
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !17217

if.then31:                                        ; preds = %if.else
  store i32 -1, i32* %fd, align 4, !dbg !17218, !tbaa !2635
  br label %done, !dbg !17220

if.end32:                                         ; preds = %if.else
  br label %if.end33

if.end33:                                         ; preds = %if.end32
  br label %for.inc34, !dbg !17221

for.inc34:                                        ; preds = %if.end33
  %31 = load i32, i32* %count, align 4, !dbg !17222, !tbaa !2635
  %inc35 = add i32 %31, 1, !dbg !17222
  store i32 %inc35, i32* %count, align 4, !dbg !17222, !tbaa !2635
  br label %for.cond, !dbg !17223, !llvm.loop !17224

for.end36:                                        ; preds = %for.cond
  %32 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !17226, !tbaa !2648
  %call37 = call i32 @randint_all_free(%struct.randint_source* %32), !dbg !17227
  %call38 = call i32* @__errno_location() #16, !dbg !17228
  store i32 17, i32* %call38, align 4, !dbg !17228, !tbaa !2635, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !17229
  br label %return, !dbg !17229

done:                                             ; preds = %if.then31, %if.then26
  call void @llvm.dbg.label(metadata !17230), !dbg !17231
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !17232, metadata !DIExpression()), !dbg !17234
  %call39 = call i32* @__errno_location() #16, !dbg !17235
  %33 = load i32, i32* %call39, align 4, !dbg !17235, !tbaa !2635, !ctir !7
  store i32 %33, i32* %saved_errno, align 4, !dbg !17234, !tbaa !2635
  %34 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !17236, !tbaa !2648
  %call40 = call i32 @randint_all_free(%struct.randint_source* %34), !dbg !17237
  %35 = load i32, i32* %saved_errno, align 4, !dbg !17238, !tbaa !2635
  %call41 = call i32* @__errno_location() #16, !dbg !17238
  store i32 %35, i32* %call41, align 4, !dbg !17238, !tbaa !2635, !ctir !7
  %36 = load i32, i32* %fd, align 4, !dbg !17239, !tbaa !2635
  store i32 %36, i32* %retval, align 4, !dbg !17240
  br label %return, !dbg !17240

return:                                           ; preds = %done, %for.end36, %if.then12, %if.then
  %37 = load i32, i32* %retval, align 4, !dbg !17241
  ret i32 %37, !dbg !17241
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @check_x_suffix(i8* %s, i64 %len) #10 !dbg !17242 !ctir !1212 {
entry:
  %s.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store i8* %s, i8** %s.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !17243, metadata !DIExpression()), !dbg !17244
  store i64 %len, i64* %len.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !17245, metadata !DIExpression()), !dbg !17246
  %0 = load i64, i64* %len.addr, align 8, !dbg !17247, !tbaa !3288
  %1 = load i8*, i8** %s.addr, align 8, !dbg !17248, !tbaa !2648
  %call = call i64 @strspn(i8* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.398, i64 0, i64 0)) #14, !dbg !17249
  %cmp = icmp ule i64 %0, %call, !dbg !17250
  ret i1 %cmp, !dbg !17251
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strspn(i8*, i8*) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @gen_tempname_len(i8* %tmpl, i32 %suffixlen, i32 %flags, i32 %kind, i64 %x_suffix_len) #4 !dbg !17252 !ctir !1206 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %suffixlen.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %kind.addr = alloca i32, align 4
  %x_suffix_len.addr = alloca i64, align 8
  %tryfunc = alloca i32 (i8*, i8*)*, align 8, !ctir !1199
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !17253, metadata !DIExpression()), !dbg !17254
  store i32 %suffixlen, i32* %suffixlen.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !17255, metadata !DIExpression()), !dbg !17256
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !17257, metadata !DIExpression()), !dbg !17258
  store i32 %kind, i32* %kind.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %kind.addr, metadata !17259, metadata !DIExpression()), !dbg !17260
  store i64 %x_suffix_len, i64* %x_suffix_len.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %x_suffix_len.addr, metadata !17261, metadata !DIExpression()), !dbg !17262
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %tryfunc, metadata !17263, metadata !DIExpression()), !dbg !17264
  %0 = load i32, i32* %kind.addr, align 4, !dbg !17265, !tbaa !2635
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
  ], !dbg !17266

sw.bb:                                            ; preds = %entry
  store i32 (i8*, i8*)* @try_file, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !17267, !tbaa !2648
  br label %sw.epilog, !dbg !17269

sw.bb1:                                           ; preds = %entry
  store i32 (i8*, i8*)* @try_dir, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !17270, !tbaa !2648
  br label %sw.epilog, !dbg !17271

sw.bb2:                                           ; preds = %entry
  store i32 (i8*, i8*)* @try_nocreate, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !17272, !tbaa !2648
  br label %sw.epilog, !dbg !17273

sw.default:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.399, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1.400, i64 0, i64 0), i32 327, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__.gen_tempname_len, i64 0, i64 0)) #13, !dbg !17274
  unreachable, !dbg !17274

sw.epilog:                                        ; preds = %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i8*, i8** %tmpl.addr, align 8, !dbg !17277, !tbaa !2648
  %2 = load i32, i32* %suffixlen.addr, align 4, !dbg !17278, !tbaa !2635
  %3 = bitcast i32* %flags.addr to i8*, !dbg !17279
  %4 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !17280, !tbaa !2648
  %5 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !17281, !tbaa !3288
  %call = call i32 @try_tempname_len(i8* %1, i32 %2, i8* %3, i32 (i8*, i8*)* %4, i64 %5), !dbg !17282
  ret i32 %call, !dbg !17283
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_file(i8* %tmpl, i8* %flags) #4 !dbg !17284 !ctir !658 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %flags.addr = alloca i8*, align 8
  %openflags = alloca i32*, align 8, !ctir !193
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !17285, metadata !DIExpression()), !dbg !17286
  store i8* %flags, i8** %flags.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %flags.addr, metadata !17287, metadata !DIExpression()), !dbg !17288
  call void @llvm.dbg.declare(metadata i32** %openflags, metadata !17289, metadata !DIExpression()), !dbg !17290
  %0 = load i8*, i8** %flags.addr, align 8, !dbg !17291, !tbaa !2648
  %1 = bitcast i8* %0 to i32*, !dbg !17291
  store i32* %1, i32** %openflags, align 8, !dbg !17290, !tbaa !2648
  %2 = load i8*, i8** %tmpl.addr, align 8, !dbg !17292, !tbaa !2648
  %3 = load i32*, i32** %openflags, align 8, !dbg !17293, !tbaa !2648
  %4 = load i32, i32* %3, align 4, !dbg !17294, !tbaa !2635, !ctir !7
  %and = and i32 %4, -4, !dbg !17295
  %or = or i32 %and, 2, !dbg !17296
  %or1 = or i32 %or, 64, !dbg !17297
  %or2 = or i32 %or1, 128, !dbg !17298
  %call = call i32 (i8*, i32, ...) @open(i8* %2, i32 %or2, i32 384), !dbg !17299
  ret i32 %call, !dbg !17300
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_dir(i8* %tmpl, i8* %flags) #4 !dbg !17301 !ctir !658 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %flags.addr = alloca i8*, align 8
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !17302, metadata !DIExpression()), !dbg !17303
  store i8* %flags, i8** %flags.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %flags.addr, metadata !17304, metadata !DIExpression()), !dbg !17305
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !17306, !tbaa !2648
  %call = call i32 @mkdir(i8* %0, i32 448) #9, !dbg !17307
  ret i32 %call, !dbg !17308
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_nocreate(i8* %tmpl, i8* %flags) #4 !dbg !17309 !ctir !658 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %flags.addr = alloca i8*, align 8
  %st = alloca %struct.stat, align 8, !ctir !17310
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !17331, metadata !DIExpression()), !dbg !17332
  store i8* %flags, i8** %flags.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %flags.addr, metadata !17333, metadata !DIExpression()), !dbg !17334
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !17335, metadata !DIExpression()), !dbg !17336
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !17337, !tbaa !2648
  %call = call i32 @lstat(i8* %0, %struct.stat* %st) #9, !dbg !17337
  %cmp = icmp eq i32 %call, 0, !dbg !17339
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !17340

lor.lhs.false:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !17341
  %1 = load i32, i32* %call1, align 4, !dbg !17341, !tbaa !2635, !ctir !7
  %cmp2 = icmp eq i32 %1, 75, !dbg !17342
  br i1 %cmp2, label %if.then, label %if.end, !dbg !17343

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call3 = call i32* @__errno_location() #16, !dbg !17344
  store i32 17, i32* %call3, align 4, !dbg !17344, !tbaa !2635, !ctir !7
  br label %if.end, !dbg !17344

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %call4 = call i32* @__errno_location() #16, !dbg !17345
  %2 = load i32, i32* %call4, align 4, !dbg !17345, !tbaa !2635, !ctir !7
  %cmp5 = icmp eq i32 %2, 2, !dbg !17346
  %3 = zext i1 %cmp5 to i64, !dbg !17345
  %cond = select i1 %cmp5, i32 0, i32 -1, !dbg !17345
  ret i32 %cond, !dbg !17347
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @gen_tempname(i8* %tmpl, i32 %suffixlen, i32 %flags, i32 %kind) #4 !dbg !17348 !ctir !1208 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %suffixlen.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %kind.addr = alloca i32, align 4
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !17349, metadata !DIExpression()), !dbg !17350
  store i32 %suffixlen, i32* %suffixlen.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !17351, metadata !DIExpression()), !dbg !17352
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !17353, metadata !DIExpression()), !dbg !17354
  store i32 %kind, i32* %kind.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %kind.addr, metadata !17355, metadata !DIExpression()), !dbg !17356
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !17357, !tbaa !2648
  %1 = load i32, i32* %suffixlen.addr, align 4, !dbg !17358, !tbaa !2635
  %2 = load i32, i32* %flags.addr, align 4, !dbg !17359, !tbaa !2635
  %3 = load i32, i32* %kind.addr, align 4, !dbg !17360, !tbaa !2635
  %call = call i32 @gen_tempname_len(i8* %0, i32 %1, i32 %2, i32 %3, i64 6), !dbg !17361
  ret i32 %call, !dbg !17362
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @try_tempname(i8* %tmpl, i32 %suffixlen, i8* %args, i32 (i8*, i8*)* %tryfunc) #4 !dbg !17363 !ctir !1210 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %suffixlen.addr = alloca i32, align 4
  %args.addr = alloca i8*, align 8
  %tryfunc.addr = alloca i32 (i8*, i8*)*, align 8
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !17364, metadata !DIExpression()), !dbg !17365
  store i32 %suffixlen, i32* %suffixlen.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !17366, metadata !DIExpression()), !dbg !17367
  store i8* %args, i8** %args.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %args.addr, metadata !17368, metadata !DIExpression()), !dbg !17369
  store i32 (i8*, i8*)* %tryfunc, i32 (i8*, i8*)** %tryfunc.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %tryfunc.addr, metadata !17370, metadata !DIExpression()), !dbg !17371
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !17372, !tbaa !2648
  %1 = load i32, i32* %suffixlen.addr, align 4, !dbg !17373, !tbaa !2635
  %2 = load i8*, i8** %args.addr, align 8, !dbg !17374, !tbaa !2648
  %3 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %tryfunc.addr, align 8, !dbg !17375, !tbaa !2648
  %call = call i32 @try_tempname_len(i8* %0, i32 %1, i8* %2, i32 (i8*, i8*)* %3, i64 6), !dbg !17376
  ret i32 %call, !dbg !17377
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fd_safer(i32 %fd) #4 !dbg !17378 !ctir !1789 {
entry:
  %fd.addr = alloca i32, align 4
  %f = alloca i32, align 4, !ctir !7
  %e = alloca i32, align 4, !ctir !7
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !17380, metadata !DIExpression()), !dbg !17381
  %0 = load i32, i32* %fd.addr, align 4, !dbg !17382, !tbaa !2635
  %cmp = icmp sle i32 0, %0, !dbg !17384
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !17385

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %fd.addr, align 4, !dbg !17386, !tbaa !2635
  %cmp1 = icmp sle i32 %1, 2, !dbg !17387
  br i1 %cmp1, label %if.then, label %if.end, !dbg !17388

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %f, metadata !17389, metadata !DIExpression()), !dbg !17391
  %2 = load i32, i32* %fd.addr, align 4, !dbg !17392, !tbaa !2635
  %call = call i32 @dup_safer(i32 %2), !dbg !17393
  store i32 %call, i32* %f, align 4, !dbg !17391, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %e, metadata !17394, metadata !DIExpression()), !dbg !17395
  %call2 = call i32* @__errno_location() #16, !dbg !17396
  %3 = load i32, i32* %call2, align 4, !dbg !17396, !tbaa !2635, !ctir !7
  store i32 %3, i32* %e, align 4, !dbg !17395, !tbaa !2635
  %4 = load i32, i32* %fd.addr, align 4, !dbg !17397, !tbaa !2635
  %call3 = call i32 @close(i32 %4), !dbg !17398
  %5 = load i32, i32* %e, align 4, !dbg !17399, !tbaa !2635
  %call4 = call i32* @__errno_location() #16, !dbg !17400
  store i32 %5, i32* %call4, align 4, !dbg !17401, !tbaa !2635, !ctir !7
  %6 = load i32, i32* %f, align 4, !dbg !17402, !tbaa !2635
  store i32 %6, i32* %fd.addr, align 4, !dbg !17403, !tbaa !2635
  br label %if.end, !dbg !17404

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %7 = load i32, i32* %fd.addr, align 4, !dbg !17405, !tbaa !2635
  ret i32 %7, !dbg !17406
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @utimecmp(i8* %dst_name, %struct.stat* %dst_stat, %struct.stat* %src_stat, i32 %options) #4 !dbg !17407 !ctir !1248 {
entry:
  %dst_name.addr = alloca i8*, align 8
  %dst_stat.addr = alloca %struct.stat*, align 8
  %src_stat.addr = alloca %struct.stat*, align 8
  %options.addr = alloca i32, align 4
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !17408, metadata !DIExpression()), !dbg !17409
  store %struct.stat* %dst_stat, %struct.stat** %dst_stat.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_stat.addr, metadata !17410, metadata !DIExpression()), !dbg !17411
  store %struct.stat* %src_stat, %struct.stat** %src_stat.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.stat** %src_stat.addr, metadata !17412, metadata !DIExpression()), !dbg !17413
  store i32 %options, i32* %options.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %options.addr, metadata !17414, metadata !DIExpression()), !dbg !17415
  %0 = load i8*, i8** %dst_name.addr, align 8, !dbg !17416, !tbaa !2648
  %1 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17417, !tbaa !2648
  %2 = load %struct.stat*, %struct.stat** %src_stat.addr, align 8, !dbg !17418, !tbaa !2648
  %3 = load i32, i32* %options.addr, align 4, !dbg !17419, !tbaa !2635
  %call = call i32 @utimecmpat(i32 -100, i8* %0, %struct.stat* %1, %struct.stat* %2, i32 %3), !dbg !17420
  ret i32 %call, !dbg !17421
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @utimecmpat(i32 %dfd, i8* %dst_name, %struct.stat* %dst_stat, %struct.stat* %src_stat, i32 %options) #4 !dbg !1218 !ctir !1220 {
entry:
  %retval = alloca i32, align 4
  %dfd.addr = alloca i32, align 4
  %dst_name.addr = alloca i8*, align 8
  %dst_stat.addr = alloca %struct.stat*, align 8
  %src_stat.addr = alloca %struct.stat*, align 8
  %options.addr = alloca i32, align 4
  %dst_s = alloca i64, align 8, !ctir !1250
  %src_s = alloca i64, align 8, !ctir !1250
  %dst_ns = alloca i32, align 4, !ctir !7
  %src_ns = alloca i32, align 4, !ctir !7
  %dst_res = alloca %struct.fs_res*, align 8, !ctir !1252
  %tmp_dst_res = alloca %struct.fs_res, align 8, !ctir !1253
  %res = alloca i32, align 4, !ctir !7
  %dst_a_s = alloca i64, align 8, !ctir !1250
  %dst_c_s = alloca i64, align 8, !ctir !1250
  %dst_m_s = alloca i64, align 8, !ctir !1250
  %dst_a_ns = alloca i32, align 4, !ctir !7
  %dst_c_ns = alloca i32, align 4, !ctir !7
  %dst_m_ns = alloca i32, align 4, !ctir !7
  %odd_second = alloca i8, align 1, !ctir !142
  %a = alloca i32, align 4, !ctir !7
  %c = alloca i32, align 4, !ctir !7
  %m = alloca i32, align 4, !ctir !7
  %SR10 = alloca i32, align 4, !ctir !7
  %timespec = alloca [2 x %struct.timespec], align 16, !ctir !1258
  %dst_status = alloca %struct.stat, align 8, !ctir !1224
  %s = alloca i64, align 8, !ctir !1250
  %stat_result = alloca i32, align 4, !ctir !7
  %old_res = alloca i32, align 4, !ctir !7
  %a168 = alloca i32, align 4, !ctir !7
  store i32 %dfd, i32* %dfd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %dfd.addr, metadata !17422, metadata !DIExpression()), !dbg !17423
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !17424, metadata !DIExpression()), !dbg !17425
  store %struct.stat* %dst_stat, %struct.stat** %dst_stat.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_stat.addr, metadata !17426, metadata !DIExpression()), !dbg !17427
  store %struct.stat* %src_stat, %struct.stat** %src_stat.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.stat** %src_stat.addr, metadata !17428, metadata !DIExpression()), !dbg !17429
  store i32 %options, i32* %options.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %options.addr, metadata !17430, metadata !DIExpression()), !dbg !17431
  call void @llvm.dbg.declare(metadata i64* %dst_s, metadata !17432, metadata !DIExpression()), !dbg !17433
  %0 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17434, !tbaa !2648
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 12, !dbg !17435, !ctir !1223
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 0, !dbg !17435, !ctir !1238
  %1 = load i64, i64* %tv_sec, align 8, !dbg !17435, !tbaa !17436, !ctir !294
  store i64 %1, i64* %dst_s, align 8, !dbg !17433, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %src_s, metadata !17437, metadata !DIExpression()), !dbg !17438
  %2 = load %struct.stat*, %struct.stat** %src_stat.addr, align 8, !dbg !17439, !tbaa !2648
  %st_mtim1 = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 12, !dbg !17440, !ctir !1223
  %tv_sec2 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim1, i32 0, i32 0, !dbg !17440, !ctir !1238
  %3 = load i64, i64* %tv_sec2, align 8, !dbg !17440, !tbaa !17436, !ctir !294
  store i64 %3, i64* %src_s, align 8, !dbg !17438, !tbaa !3288
  call void @llvm.dbg.declare(metadata i32* %dst_ns, metadata !17441, metadata !DIExpression()), !dbg !17442
  %4 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17443, !tbaa !2648
  %call = call i64 @get_stat_mtime_ns(%struct.stat* %4) #14, !dbg !17444
  %conv = trunc i64 %call to i32, !dbg !17444
  store i32 %conv, i32* %dst_ns, align 4, !dbg !17442, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %src_ns, metadata !17445, metadata !DIExpression()), !dbg !17446
  %5 = load %struct.stat*, %struct.stat** %src_stat.addr, align 8, !dbg !17447, !tbaa !2648
  %call3 = call i64 @get_stat_mtime_ns(%struct.stat* %5) #14, !dbg !17448
  %conv4 = trunc i64 %call3 to i32, !dbg !17448
  store i32 %conv4, i32* %src_ns, align 4, !dbg !17446, !tbaa !2635
  %6 = load i32, i32* %options.addr, align 4, !dbg !17449, !tbaa !2635
  %and = and i32 %6, 1, !dbg !17451
  %tobool = icmp ne i32 %and, 0, !dbg !17451
  br i1 %tobool, label %if.then, label %if.end207, !dbg !17452

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.fs_res** %dst_res, metadata !17453, metadata !DIExpression()), !dbg !17455
  store %struct.fs_res* null, %struct.fs_res** %dst_res, align 8, !dbg !17455, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.fs_res* %tmp_dst_res, metadata !17456, metadata !DIExpression()), !dbg !17457
  call void @llvm.dbg.declare(metadata i32* %res, metadata !17458, metadata !DIExpression()), !dbg !17459
  %7 = load i64, i64* %dst_s, align 8, !dbg !17460, !tbaa !3288
  %8 = load i64, i64* %src_s, align 8, !dbg !17462, !tbaa !3288
  %cmp = icmp eq i64 %7, %8, !dbg !17463
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !17464

land.lhs.true:                                    ; preds = %if.then
  %9 = load i32, i32* %dst_ns, align 4, !dbg !17465, !tbaa !2635
  %10 = load i32, i32* %src_ns, align 4, !dbg !17466, !tbaa !2635
  %cmp6 = icmp eq i32 %9, %10, !dbg !17467
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !17468

if.then8:                                         ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !17469
  br label %return, !dbg !17469

if.end:                                           ; preds = %land.lhs.true, %if.then
  %11 = load i64, i64* %dst_s, align 8, !dbg !17470, !tbaa !3288
  %12 = load i64, i64* %src_s, align 8, !dbg !17472, !tbaa !3288
  %sub = sub nsw i64 %12, 2, !dbg !17473
  %cmp9 = icmp sle i64 %11, %sub, !dbg !17474
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !17475

if.then11:                                        ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !17476
  br label %return, !dbg !17476

if.end12:                                         ; preds = %if.end
  %13 = load i64, i64* %src_s, align 8, !dbg !17477, !tbaa !3288
  %14 = load i64, i64* %dst_s, align 8, !dbg !17479, !tbaa !3288
  %sub13 = sub nsw i64 %14, 2, !dbg !17480
  %cmp14 = icmp sle i64 %13, %sub13, !dbg !17481
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !17482

if.then16:                                        ; preds = %if.end12
  store i32 1, i32* %retval, align 4, !dbg !17483
  br label %return, !dbg !17483

if.end17:                                         ; preds = %if.end12
  %15 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !17484, !tbaa !2648
  %tobool18 = icmp ne %struct.hash_table* %15, null, !dbg !17484
  br i1 %tobool18, label %if.end21, label %if.then19, !dbg !17486

if.then19:                                        ; preds = %if.end17
  %call20 = call %struct.hash_table* @hash_initialize(i64 16, %struct.hash_tuning* null, i64 (i8*, i64)* @dev_info_hash, i1 (i8*, i8*)* @dev_info_compare, void (i8*)* @free), !dbg !17487
  store %struct.hash_table* %call20, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !17488, !tbaa !2648
  br label %if.end21, !dbg !17489

if.end21:                                         ; preds = %if.then19, %if.end17
  %16 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !17490, !tbaa !2648
  %tobool22 = icmp ne %struct.hash_table* %16, null, !dbg !17490
  br i1 %tobool22, label %if.then23, label %if.else, !dbg !17492

if.then23:                                        ; preds = %if.end21
  %17 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17493, !tbaa !2648
  %tobool24 = icmp ne %struct.fs_res* %17, null, !dbg !17493
  br i1 %tobool24, label %if.end30, label %if.then25, !dbg !17496

if.then25:                                        ; preds = %if.then23
  %call26 = call noalias i8* @malloc(i64 16) #9, !dbg !17497
  %18 = bitcast i8* %call26 to %struct.fs_res*, !dbg !17497
  store %struct.fs_res* %18, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17499, !tbaa !2648
  %19 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17500, !tbaa !2648
  %tobool27 = icmp ne %struct.fs_res* %19, null, !dbg !17500
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !17502

if.then28:                                        ; preds = %if.then25
  br label %low_memory, !dbg !17503

if.end29:                                         ; preds = %if.then25
  %20 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17504, !tbaa !2648
  %resolution = getelementptr inbounds %struct.fs_res, %struct.fs_res* %20, i32 0, i32 1, !dbg !17505, !ctir !1253
  store i32 2000000000, i32* %resolution, align 8, !dbg !17506, !tbaa !17507, !ctir !7
  %21 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17509, !tbaa !2648
  %exact = getelementptr inbounds %struct.fs_res, %struct.fs_res* %21, i32 0, i32 2, !dbg !17510, !ctir !1253
  store i8 0, i8* %exact, align 4, !dbg !17511, !tbaa !17512, !ctir !142
  br label %if.end30, !dbg !17513

if.end30:                                         ; preds = %if.end29, %if.then23
  %22 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17514, !tbaa !2648
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 0, !dbg !17515, !ctir !1223
  %23 = load i64, i64* %st_dev, align 8, !dbg !17515, !tbaa !4770, !ctir !274
  %24 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17516, !tbaa !2648
  %dev = getelementptr inbounds %struct.fs_res, %struct.fs_res* %24, i32 0, i32 0, !dbg !17517, !ctir !1253
  store i64 %23, i64* %dev, align 8, !dbg !17518, !tbaa !17519, !ctir !443
  %25 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !17520, !tbaa !2648
  %26 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17521, !tbaa !2648
  %27 = bitcast %struct.fs_res* %26 to i8*, !dbg !17521
  %call31 = call i8* @hash_insert(%struct.hash_table* %25, i8* %27), !dbg !17522
  %28 = bitcast i8* %call31 to %struct.fs_res*, !dbg !17522
  store %struct.fs_res* %28, %struct.fs_res** %dst_res, align 8, !dbg !17523, !tbaa !2648
  %29 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17524, !tbaa !2648
  %tobool32 = icmp ne %struct.fs_res* %29, null, !dbg !17524
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !17526

if.then33:                                        ; preds = %if.end30
  br label %low_memory, !dbg !17527

if.end34:                                         ; preds = %if.end30
  %30 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17528, !tbaa !2648
  %31 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17530, !tbaa !2648
  %cmp35 = icmp eq %struct.fs_res* %30, %31, !dbg !17531
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !17532

if.then37:                                        ; preds = %if.end34
  store %struct.fs_res* null, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17533, !tbaa !2648
  br label %if.end38, !dbg !17535

if.end38:                                         ; preds = %if.then37, %if.end34
  br label %if.end50, !dbg !17536

if.else:                                          ; preds = %if.end21
  br label %low_memory, !dbg !17537

low_memory:                                       ; preds = %if.else, %if.then33, %if.then28
  call void @llvm.dbg.label(metadata !17538), !dbg !17540
  %32 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !17541, !tbaa !2648
  %tobool39 = icmp ne %struct.hash_table* %32, null, !dbg !17541
  br i1 %tobool39, label %if.then40, label %if.end44, !dbg !17543

if.then40:                                        ; preds = %low_memory
  %33 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17544, !tbaa !2648
  %st_dev41 = getelementptr inbounds %struct.stat, %struct.stat* %33, i32 0, i32 0, !dbg !17546, !ctir !1223
  %34 = load i64, i64* %st_dev41, align 8, !dbg !17546, !tbaa !4770, !ctir !274
  %dev42 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %tmp_dst_res, i32 0, i32 0, !dbg !17547, !ctir !1253
  store i64 %34, i64* %dev42, align 8, !dbg !17548, !tbaa !17519, !ctir !443
  %35 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !17549, !tbaa !2648
  %36 = bitcast %struct.fs_res* %tmp_dst_res to i8*, !dbg !17550
  %call43 = call i8* @hash_lookup(%struct.hash_table* %35, i8* %36), !dbg !17551
  %37 = bitcast i8* %call43 to %struct.fs_res*, !dbg !17551
  store %struct.fs_res* %37, %struct.fs_res** %dst_res, align 8, !dbg !17552, !tbaa !2648
  br label %if.end44, !dbg !17553

if.end44:                                         ; preds = %if.then40, %low_memory
  %38 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17554, !tbaa !2648
  %tobool45 = icmp ne %struct.fs_res* %38, null, !dbg !17554
  br i1 %tobool45, label %if.end49, label %if.then46, !dbg !17556

if.then46:                                        ; preds = %if.end44
  store %struct.fs_res* %tmp_dst_res, %struct.fs_res** %dst_res, align 8, !dbg !17557, !tbaa !2648
  %39 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17559, !tbaa !2648
  %resolution47 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %39, i32 0, i32 1, !dbg !17560, !ctir !1253
  store i32 2000000000, i32* %resolution47, align 8, !dbg !17561, !tbaa !17507, !ctir !7
  %40 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17562, !tbaa !2648
  %exact48 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %40, i32 0, i32 2, !dbg !17563, !ctir !1253
  store i8 0, i8* %exact48, align 4, !dbg !17564, !tbaa !17512, !ctir !142
  br label %if.end49, !dbg !17565

if.end49:                                         ; preds = %if.then46, %if.end44
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.end38
  %41 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17566, !tbaa !2648
  %resolution51 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %41, i32 0, i32 1, !dbg !17567, !ctir !1253
  %42 = load i32, i32* %resolution51, align 8, !dbg !17567, !tbaa !17507, !ctir !7
  store i32 %42, i32* %res, align 4, !dbg !17568, !tbaa !2635
  %43 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17569, !tbaa !2648
  %exact52 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %43, i32 0, i32 2, !dbg !17571, !ctir !1253
  %44 = load i8, i8* %exact52, align 4, !dbg !17571, !tbaa !17512
  %tobool53 = trunc i8 %44 to i1, !dbg !17571, !ctir !142
  br i1 %tobool53, label %if.end198, label %if.then54, !dbg !17572

if.then54:                                        ; preds = %if.end50
  call void @llvm.dbg.declare(metadata i64* %dst_a_s, metadata !17573, metadata !DIExpression()), !dbg !17575
  %45 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17576, !tbaa !2648
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %45, i32 0, i32 11, !dbg !17577, !ctir !1223
  %tv_sec55 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_atim, i32 0, i32 0, !dbg !17577, !ctir !1238
  %46 = load i64, i64* %tv_sec55, align 8, !dbg !17577, !tbaa !17578, !ctir !294
  store i64 %46, i64* %dst_a_s, align 8, !dbg !17575, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %dst_c_s, metadata !17579, metadata !DIExpression()), !dbg !17580
  %47 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17581, !tbaa !2648
  %st_ctim = getelementptr inbounds %struct.stat, %struct.stat* %47, i32 0, i32 13, !dbg !17582, !ctir !1223
  %tv_sec56 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_ctim, i32 0, i32 0, !dbg !17582, !ctir !1238
  %48 = load i64, i64* %tv_sec56, align 8, !dbg !17582, !tbaa !17583, !ctir !294
  store i64 %48, i64* %dst_c_s, align 8, !dbg !17580, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %dst_m_s, metadata !17584, metadata !DIExpression()), !dbg !17585
  %49 = load i64, i64* %dst_s, align 8, !dbg !17586, !tbaa !3288
  store i64 %49, i64* %dst_m_s, align 8, !dbg !17585, !tbaa !3288
  call void @llvm.dbg.declare(metadata i32* %dst_a_ns, metadata !17587, metadata !DIExpression()), !dbg !17588
  %50 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17589, !tbaa !2648
  %call57 = call i64 @get_stat_atime_ns(%struct.stat* %50) #14, !dbg !17590
  %conv58 = trunc i64 %call57 to i32, !dbg !17590
  store i32 %conv58, i32* %dst_a_ns, align 4, !dbg !17588, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %dst_c_ns, metadata !17591, metadata !DIExpression()), !dbg !17592
  %51 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17593, !tbaa !2648
  %call59 = call i64 @get_stat_ctime_ns(%struct.stat* %51) #14, !dbg !17594
  %conv60 = trunc i64 %call59 to i32, !dbg !17594
  store i32 %conv60, i32* %dst_c_ns, align 4, !dbg !17592, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %dst_m_ns, metadata !17595, metadata !DIExpression()), !dbg !17596
  %52 = load i32, i32* %dst_ns, align 4, !dbg !17597, !tbaa !2635
  store i32 %52, i32* %dst_m_ns, align 4, !dbg !17596, !tbaa !2635
  call void @llvm.dbg.declare(metadata i8* %odd_second, metadata !17598, metadata !DIExpression()), !dbg !17600
  %53 = load i64, i64* %dst_a_s, align 8, !dbg !17601, !tbaa !3288
  %54 = load i64, i64* %dst_c_s, align 8, !dbg !17602, !tbaa !3288
  %or = or i64 %53, %54, !dbg !17603
  %55 = load i64, i64* %dst_m_s, align 8, !dbg !17604, !tbaa !3288
  %or61 = or i64 %or, %55, !dbg !17605
  %and62 = and i64 %or61, 1, !dbg !17606
  %tobool63 = icmp ne i64 %and62, 0, !dbg !17607
  %frombool = zext i1 %tobool63 to i8, !dbg !17600
  store i8 %frombool, i8* %odd_second, align 1, !dbg !17600, !tbaa !2742
  call void @llvm.dbg.declare(metadata i32* %a, metadata !17608, metadata !DIExpression()), !dbg !17611
  %56 = load i32, i32* %dst_a_ns, align 4, !dbg !17612, !tbaa !2635
  store i32 %56, i32* %a, align 4, !dbg !17611, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %c, metadata !17613, metadata !DIExpression()), !dbg !17614
  %57 = load i32, i32* %dst_c_ns, align 4, !dbg !17615, !tbaa !2635
  store i32 %57, i32* %c, align 4, !dbg !17614, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %m, metadata !17616, metadata !DIExpression()), !dbg !17617
  %58 = load i32, i32* %dst_m_ns, align 4, !dbg !17618, !tbaa !2635
  store i32 %58, i32* %m, align 4, !dbg !17617, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %SR10, metadata !17619, metadata !DIExpression()), !dbg !17620
  store i32 1, i32* %SR10, align 4, !dbg !17620, !tbaa !2635
  %59 = load i32, i32* %SR10, align 4, !dbg !17621, !tbaa !2635
  %mul = mul nsw i32 %59, 10, !dbg !17621
  store i32 %mul, i32* %SR10, align 4, !dbg !17621, !tbaa !2635
  %60 = load i32, i32* %a, align 4, !dbg !17622, !tbaa !2635
  %61 = load i32, i32* %SR10, align 4, !dbg !17624, !tbaa !2635
  %rem = srem i32 %60, %61, !dbg !17625
  %62 = load i32, i32* %c, align 4, !dbg !17626, !tbaa !2635
  %63 = load i32, i32* %SR10, align 4, !dbg !17627, !tbaa !2635
  %rem64 = srem i32 %62, %63, !dbg !17628
  %or65 = or i32 %rem, %rem64, !dbg !17629
  %64 = load i32, i32* %m, align 4, !dbg !17630, !tbaa !2635
  %65 = load i32, i32* %SR10, align 4, !dbg !17631, !tbaa !2635
  %rem66 = srem i32 %64, %65, !dbg !17632
  %or67 = or i32 %or65, %rem66, !dbg !17633
  %cmp68 = icmp ne i32 %or67, 0, !dbg !17634
  br i1 %cmp68, label %if.then70, label %if.else71, !dbg !17635

if.then70:                                        ; preds = %if.then54
  store i32 1, i32* %res, align 4, !dbg !17636, !tbaa !2635
  br label %if.end96, !dbg !17637

if.else71:                                        ; preds = %if.then54
  %66 = load i32, i32* %SR10, align 4, !dbg !17638, !tbaa !2635
  store i32 %66, i32* %res, align 4, !dbg !17640, !tbaa !2635
  %67 = load i32, i32* %SR10, align 4, !dbg !17641, !tbaa !2635
  %68 = load i32, i32* %a, align 4, !dbg !17642, !tbaa !2635
  %div = sdiv i32 %68, %67, !dbg !17642
  store i32 %div, i32* %a, align 4, !dbg !17642, !tbaa !2635
  %69 = load i32, i32* %SR10, align 4, !dbg !17643, !tbaa !2635
  %70 = load i32, i32* %c, align 4, !dbg !17644, !tbaa !2635
  %div72 = sdiv i32 %70, %69, !dbg !17644
  store i32 %div72, i32* %c, align 4, !dbg !17644, !tbaa !2635
  %71 = load i32, i32* %SR10, align 4, !dbg !17645, !tbaa !2635
  %72 = load i32, i32* %m, align 4, !dbg !17646, !tbaa !2635
  %div73 = sdiv i32 %72, %71, !dbg !17646
  store i32 %div73, i32* %m, align 4, !dbg !17646, !tbaa !2635
  br label %for.cond, !dbg !17647

for.cond:                                         ; preds = %for.inc, %if.else71
  %73 = load i32, i32* %res, align 4, !dbg !17648, !tbaa !2635
  %74 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17650, !tbaa !2648
  %resolution74 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %74, i32 0, i32 1, !dbg !17651, !ctir !1253
  %75 = load i32, i32* %resolution74, align 8, !dbg !17651, !tbaa !17507, !ctir !7
  %cmp75 = icmp slt i32 %73, %75, !dbg !17652
  br i1 %cmp75, label %land.rhs, label %land.end, !dbg !17653

land.rhs:                                         ; preds = %for.cond
  %76 = load i32, i32* %a, align 4, !dbg !17654, !tbaa !2635
  %rem77 = srem i32 %76, 10, !dbg !17655
  %77 = load i32, i32* %c, align 4, !dbg !17656, !tbaa !2635
  %rem78 = srem i32 %77, 10, !dbg !17657
  %or79 = or i32 %rem77, %rem78, !dbg !17658
  %78 = load i32, i32* %m, align 4, !dbg !17659, !tbaa !2635
  %rem80 = srem i32 %78, 10, !dbg !17660
  %or81 = or i32 %or79, %rem80, !dbg !17661
  %cmp82 = icmp eq i32 %or81, 0, !dbg !17662
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %79 = phi i1 [ false, %for.cond ], [ %cmp82, %land.rhs ], !dbg !17663
  br i1 %79, label %for.body, label %for.end, !dbg !17664

for.body:                                         ; preds = %land.end
  %80 = load i32, i32* %res, align 4, !dbg !17665, !tbaa !2635
  %cmp84 = icmp eq i32 %80, 1000000000, !dbg !17667
  br i1 %cmp84, label %if.then86, label %if.end91, !dbg !17668

if.then86:                                        ; preds = %for.body
  %81 = load i8, i8* %odd_second, align 1, !dbg !17669, !tbaa !2742
  %tobool87 = trunc i8 %81 to i1, !dbg !17669
  br i1 %tobool87, label %if.end90, label %if.then88, !dbg !17672

if.then88:                                        ; preds = %if.then86
  %82 = load i32, i32* %res, align 4, !dbg !17673, !tbaa !2635
  %mul89 = mul nsw i32 %82, 2, !dbg !17673
  store i32 %mul89, i32* %res, align 4, !dbg !17673, !tbaa !2635
  br label %if.end90, !dbg !17674

if.end90:                                         ; preds = %if.then88, %if.then86
  br label %for.end, !dbg !17675

if.end91:                                         ; preds = %for.body
  br label %for.inc, !dbg !17676

for.inc:                                          ; preds = %if.end91
  %83 = load i32, i32* %res, align 4, !dbg !17677, !tbaa !2635
  %mul92 = mul nsw i32 %83, 10, !dbg !17677
  store i32 %mul92, i32* %res, align 4, !dbg !17677, !tbaa !2635
  %84 = load i32, i32* %a, align 4, !dbg !17678, !tbaa !2635
  %div93 = sdiv i32 %84, 10, !dbg !17678
  store i32 %div93, i32* %a, align 4, !dbg !17678, !tbaa !2635
  %85 = load i32, i32* %c, align 4, !dbg !17679, !tbaa !2635
  %div94 = sdiv i32 %85, 10, !dbg !17679
  store i32 %div94, i32* %c, align 4, !dbg !17679, !tbaa !2635
  %86 = load i32, i32* %m, align 4, !dbg !17680, !tbaa !2635
  %div95 = sdiv i32 %86, 10, !dbg !17680
  store i32 %div95, i32* %m, align 4, !dbg !17680, !tbaa !2635
  br label %for.cond, !dbg !17681, !llvm.loop !17682

for.end:                                          ; preds = %if.end90, %land.end
  br label %if.end96

if.end96:                                         ; preds = %for.end, %if.then70
  %87 = load i32, i32* %res, align 4, !dbg !17684, !tbaa !2635
  %88 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17685, !tbaa !2648
  %resolution97 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %88, i32 0, i32 1, !dbg !17686, !ctir !1253
  store i32 %87, i32* %resolution97, align 8, !dbg !17687, !tbaa !17507, !ctir !7
  %89 = load i32, i32* %res, align 4, !dbg !17688, !tbaa !2635
  %cmp98 = icmp slt i32 1, %89, !dbg !17690
  br i1 %cmp98, label %if.then100, label %if.end195, !dbg !17691

if.then100:                                       ; preds = %if.end96
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timespec, metadata !17692, metadata !DIExpression()), !dbg !17694
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_status, metadata !17695, metadata !DIExpression()), !dbg !17696
  %90 = load i32, i32* %src_ns, align 4, !dbg !17697, !tbaa !2635
  %rem101 = srem i32 %90, 1, !dbg !17698
  %91 = load i32, i32* %src_ns, align 4, !dbg !17699, !tbaa !2635
  %sub102 = sub nsw i32 %91, %rem101, !dbg !17699
  store i32 %sub102, i32* %src_ns, align 4, !dbg !17699, !tbaa !2635
  call void @llvm.dbg.declare(metadata i64* %s, metadata !17700, metadata !DIExpression()), !dbg !17702
  %92 = load i64, i64* %src_s, align 8, !dbg !17703, !tbaa !3288
  %93 = load i32, i32* %res, align 4, !dbg !17704, !tbaa !2635
  %cmp103 = icmp eq i32 %93, 2000000000, !dbg !17705
  %94 = zext i1 %cmp103 to i64, !dbg !17704
  %cond = select i1 %cmp103, i32 1, i32 0, !dbg !17704
  %neg = xor i32 %cond, -1, !dbg !17706
  %conv105 = sext i32 %neg to i64, !dbg !17706
  %and106 = and i64 %92, %conv105, !dbg !17707
  store i64 %and106, i64* %s, align 8, !dbg !17702, !tbaa !3288
  %95 = load i64, i64* %src_s, align 8, !dbg !17708, !tbaa !3288
  %96 = load i64, i64* %dst_s, align 8, !dbg !17710, !tbaa !3288
  %cmp107 = icmp slt i64 %95, %96, !dbg !17711
  br i1 %cmp107, label %if.then114, label %lor.lhs.false, !dbg !17712

lor.lhs.false:                                    ; preds = %if.then100
  %97 = load i64, i64* %src_s, align 8, !dbg !17713, !tbaa !3288
  %98 = load i64, i64* %dst_s, align 8, !dbg !17714, !tbaa !3288
  %cmp109 = icmp eq i64 %97, %98, !dbg !17715
  br i1 %cmp109, label %land.lhs.true111, label %if.end115, !dbg !17716

land.lhs.true111:                                 ; preds = %lor.lhs.false
  %99 = load i32, i32* %src_ns, align 4, !dbg !17717, !tbaa !2635
  %100 = load i32, i32* %dst_ns, align 4, !dbg !17718, !tbaa !2635
  %cmp112 = icmp sle i32 %99, %100, !dbg !17719
  br i1 %cmp112, label %if.then114, label %if.end115, !dbg !17720

if.then114:                                       ; preds = %land.lhs.true111, %if.then100
  store i32 1, i32* %retval, align 4, !dbg !17721
  br label %return, !dbg !17721

if.end115:                                        ; preds = %land.lhs.true111, %lor.lhs.false
  %101 = load i64, i64* %dst_s, align 8, !dbg !17722, !tbaa !3288
  %102 = load i64, i64* %s, align 8, !dbg !17724, !tbaa !3288
  %cmp116 = icmp slt i64 %101, %102, !dbg !17725
  br i1 %cmp116, label %if.then126, label %lor.lhs.false118, !dbg !17726

lor.lhs.false118:                                 ; preds = %if.end115
  %103 = load i64, i64* %dst_s, align 8, !dbg !17727, !tbaa !3288
  %104 = load i64, i64* %s, align 8, !dbg !17728, !tbaa !3288
  %cmp119 = icmp eq i64 %103, %104, !dbg !17729
  br i1 %cmp119, label %land.lhs.true121, label %if.end127, !dbg !17730

land.lhs.true121:                                 ; preds = %lor.lhs.false118
  %105 = load i32, i32* %dst_ns, align 4, !dbg !17731, !tbaa !2635
  %106 = load i32, i32* %src_ns, align 4, !dbg !17732, !tbaa !2635
  %107 = load i32, i32* %src_ns, align 4, !dbg !17733, !tbaa !2635
  %108 = load i32, i32* %res, align 4, !dbg !17734, !tbaa !2635
  %rem122 = srem i32 %107, %108, !dbg !17735
  %sub123 = sub nsw i32 %106, %rem122, !dbg !17736
  %cmp124 = icmp slt i32 %105, %sub123, !dbg !17737
  br i1 %cmp124, label %if.then126, label %if.end127, !dbg !17738

if.then126:                                       ; preds = %land.lhs.true121, %if.end115
  store i32 -1, i32* %retval, align 4, !dbg !17739
  br label %return, !dbg !17739

if.end127:                                        ; preds = %land.lhs.true121, %lor.lhs.false118
  %109 = load i64, i64* %dst_a_s, align 8, !dbg !17740, !tbaa !3288
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !17741, !ctir !1258
  %tv_sec128 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx, i32 0, i32 0, !dbg !17742, !ctir !1238
  store i64 %109, i64* %tv_sec128, align 16, !dbg !17743, !tbaa !17075, !ctir !294
  %110 = load i32, i32* %dst_a_ns, align 4, !dbg !17744, !tbaa !2635
  %conv129 = sext i32 %110 to i64, !dbg !17744
  %arrayidx130 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !17745, !ctir !1258
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx130, i32 0, i32 1, !dbg !17746, !ctir !1238
  store i64 %conv129, i64* %tv_nsec, align 8, !dbg !17747, !tbaa !17078, !ctir !296
  %111 = load i64, i64* %dst_m_s, align 8, !dbg !17748, !tbaa !3288
  %112 = load i32, i32* %res, align 4, !dbg !17749, !tbaa !2635
  %cmp131 = icmp eq i32 %112, 2000000000, !dbg !17750
  %conv132 = zext i1 %cmp131 to i32, !dbg !17750
  %conv133 = sext i32 %conv132 to i64, !dbg !17751
  %or134 = or i64 %111, %conv133, !dbg !17752
  %arrayidx135 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !17753, !ctir !1258
  %tv_sec136 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx135, i32 0, i32 0, !dbg !17754, !ctir !1238
  store i64 %or134, i64* %tv_sec136, align 16, !dbg !17755, !tbaa !17075, !ctir !294
  %113 = load i32, i32* %dst_m_ns, align 4, !dbg !17756, !tbaa !2635
  %114 = load i32, i32* %res, align 4, !dbg !17757, !tbaa !2635
  %div137 = sdiv i32 %114, 9, !dbg !17758
  %add = add nsw i32 %113, %div137, !dbg !17759
  %conv138 = sext i32 %add to i64, !dbg !17756
  %arrayidx139 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !17760, !ctir !1258
  %tv_nsec140 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx139, i32 0, i32 1, !dbg !17761, !ctir !1238
  store i64 %conv138, i64* %tv_nsec140, align 8, !dbg !17762, !tbaa !17078, !ctir !296
  %115 = load i32, i32* %dfd.addr, align 4, !dbg !17763, !tbaa !2635
  %116 = load i8*, i8** %dst_name.addr, align 8, !dbg !17765, !tbaa !2648
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !17766
  %call141 = call i32 @utimensat(i32 %115, i8* %116, %struct.timespec* %arraydecay, i32 256) #9, !dbg !17767
  %tobool142 = icmp ne i32 %call141, 0, !dbg !17767
  br i1 %tobool142, label %if.then143, label %if.end144, !dbg !17768

if.then143:                                       ; preds = %if.end127
  store i32 -2, i32* %retval, align 4, !dbg !17769
  br label %return, !dbg !17769

if.end144:                                        ; preds = %if.end127
  call void @llvm.dbg.declare(metadata i32* %stat_result, metadata !17770, metadata !DIExpression()), !dbg !17772
  %117 = load i32, i32* %dfd.addr, align 4, !dbg !17773, !tbaa !2635
  %118 = load i8*, i8** %dst_name.addr, align 8, !dbg !17774, !tbaa !2648
  %call145 = call i32 @fstatat(i32 %117, i8* %118, %struct.stat* %dst_status, i32 256) #9, !dbg !17775
  store i32 %call145, i32* %stat_result, align 4, !dbg !17772, !tbaa !2635
  %119 = load i32, i32* %stat_result, align 4, !dbg !17776, !tbaa !2635
  %conv146 = sext i32 %119 to i64, !dbg !17776
  %st_mtim147 = getelementptr inbounds %struct.stat, %struct.stat* %dst_status, i32 0, i32 12, !dbg !17778, !ctir !1224
  %tv_sec148 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim147, i32 0, i32 0, !dbg !17778, !ctir !1238
  %120 = load i64, i64* %tv_sec148, align 8, !dbg !17778, !tbaa !17436, !ctir !294
  %121 = load i64, i64* %dst_m_s, align 8, !dbg !17779, !tbaa !3288
  %xor = xor i64 %120, %121, !dbg !17780
  %or149 = or i64 %conv146, %xor, !dbg !17781
  %call150 = call i64 @get_stat_mtime_ns(%struct.stat* %dst_status) #14, !dbg !17782
  %122 = load i32, i32* %dst_m_ns, align 4, !dbg !17783, !tbaa !2635
  %conv151 = sext i32 %122 to i64, !dbg !17783
  %xor152 = xor i64 %call150, %conv151, !dbg !17784
  %or153 = or i64 %or149, %xor152, !dbg !17785
  %tobool154 = icmp ne i64 %or153, 0, !dbg !17785
  br i1 %tobool154, label %if.then155, label %if.end163, !dbg !17786

if.then155:                                       ; preds = %if.end144
  %123 = load i64, i64* %dst_m_s, align 8, !dbg !17787, !tbaa !3288
  %arrayidx156 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !17789, !ctir !1258
  %tv_sec157 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx156, i32 0, i32 0, !dbg !17790, !ctir !1238
  store i64 %123, i64* %tv_sec157, align 16, !dbg !17791, !tbaa !17075, !ctir !294
  %124 = load i32, i32* %dst_m_ns, align 4, !dbg !17792, !tbaa !2635
  %conv158 = sext i32 %124 to i64, !dbg !17792
  %arrayidx159 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !17793, !ctir !1258
  %tv_nsec160 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx159, i32 0, i32 1, !dbg !17794, !ctir !1238
  store i64 %conv158, i64* %tv_nsec160, align 8, !dbg !17795, !tbaa !17078, !ctir !296
  %125 = load i32, i32* %dfd.addr, align 4, !dbg !17796, !tbaa !2635
  %126 = load i8*, i8** %dst_name.addr, align 8, !dbg !17797, !tbaa !2648
  %arraydecay161 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !17798
  %call162 = call i32 @utimensat(i32 %125, i8* %126, %struct.timespec* %arraydecay161, i32 256) #9, !dbg !17799
  br label %if.end163, !dbg !17800

if.end163:                                        ; preds = %if.then155, %if.end144
  %127 = load i32, i32* %stat_result, align 4, !dbg !17801, !tbaa !2635
  %cmp164 = icmp ne i32 %127, 0, !dbg !17803
  br i1 %cmp164, label %if.then166, label %if.end167, !dbg !17804

if.then166:                                       ; preds = %if.end163
  store i32 -2, i32* %retval, align 4, !dbg !17805
  br label %return, !dbg !17805

if.end167:                                        ; preds = %if.end163
  call void @llvm.dbg.declare(metadata i32* %old_res, metadata !17806, metadata !DIExpression()), !dbg !17808
  %128 = load i32, i32* %res, align 4, !dbg !17809, !tbaa !2635
  store i32 %128, i32* %old_res, align 4, !dbg !17808, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %a168, metadata !17810, metadata !DIExpression()), !dbg !17811
  %st_mtim169 = getelementptr inbounds %struct.stat, %struct.stat* %dst_status, i32 0, i32 12, !dbg !17812, !ctir !1224
  %tv_sec170 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim169, i32 0, i32 0, !dbg !17812, !ctir !1238
  %129 = load i64, i64* %tv_sec170, align 8, !dbg !17812, !tbaa !17436, !ctir !294
  %and171 = and i64 %129, 1, !dbg !17813
  %mul172 = mul nsw i64 1000000000, %and171, !dbg !17814
  %call173 = call i64 @get_stat_mtime_ns(%struct.stat* %dst_status) #14, !dbg !17815
  %add174 = add nsw i64 %mul172, %call173, !dbg !17816
  %conv175 = trunc i64 %add174 to i32, !dbg !17817
  store i32 %conv175, i32* %a168, align 4, !dbg !17811, !tbaa !2635
  store i32 1, i32* %res, align 4, !dbg !17818, !tbaa !2635
  %130 = load i32, i32* %res, align 4, !dbg !17819, !tbaa !2635
  %131 = load i32, i32* %a168, align 4, !dbg !17821, !tbaa !2635
  %div176 = sdiv i32 %131, %130, !dbg !17821
  store i32 %div176, i32* %a168, align 4, !dbg !17821, !tbaa !2635
  br label %for.cond177, !dbg !17822

for.cond177:                                      ; preds = %for.inc192, %if.end167
  %132 = load i32, i32* %a168, align 4, !dbg !17823, !tbaa !2635
  %rem178 = srem i32 %132, 10, !dbg !17825
  %cmp179 = icmp eq i32 %rem178, 0, !dbg !17826
  br i1 %cmp179, label %for.body181, label %for.end194, !dbg !17827

for.body181:                                      ; preds = %for.cond177
  %133 = load i32, i32* %res, align 4, !dbg !17828, !tbaa !2635
  %cmp182 = icmp eq i32 %133, 1000000000, !dbg !17831
  br i1 %cmp182, label %if.then184, label %if.end186, !dbg !17832

if.then184:                                       ; preds = %for.body181
  %134 = load i32, i32* %res, align 4, !dbg !17833, !tbaa !2635
  %mul185 = mul nsw i32 %134, 2, !dbg !17833
  store i32 %mul185, i32* %res, align 4, !dbg !17833, !tbaa !2635
  br label %for.end194, !dbg !17835

if.end186:                                        ; preds = %for.body181
  %135 = load i32, i32* %res, align 4, !dbg !17836, !tbaa !2635
  %mul187 = mul nsw i32 %135, 10, !dbg !17836
  store i32 %mul187, i32* %res, align 4, !dbg !17836, !tbaa !2635
  %136 = load i32, i32* %res, align 4, !dbg !17837, !tbaa !2635
  %137 = load i32, i32* %old_res, align 4, !dbg !17839, !tbaa !2635
  %cmp188 = icmp eq i32 %136, %137, !dbg !17840
  br i1 %cmp188, label %if.then190, label %if.end191, !dbg !17841

if.then190:                                       ; preds = %if.end186
  br label %for.end194, !dbg !17842

if.end191:                                        ; preds = %if.end186
  br label %for.inc192, !dbg !17843

for.inc192:                                       ; preds = %if.end191
  %138 = load i32, i32* %a168, align 4, !dbg !17844, !tbaa !2635
  %div193 = sdiv i32 %138, 10, !dbg !17844
  store i32 %div193, i32* %a168, align 4, !dbg !17844, !tbaa !2635
  br label %for.cond177, !dbg !17845, !llvm.loop !17846

for.end194:                                       ; preds = %if.then190, %if.then184, %for.cond177
  br label %if.end195, !dbg !17848

if.end195:                                        ; preds = %for.end194, %if.end96
  %139 = load i32, i32* %res, align 4, !dbg !17849, !tbaa !2635
  %140 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17850, !tbaa !2648
  %resolution196 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %140, i32 0, i32 1, !dbg !17851, !ctir !1253
  store i32 %139, i32* %resolution196, align 8, !dbg !17852, !tbaa !17507, !ctir !7
  %141 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17853, !tbaa !2648
  %exact197 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %141, i32 0, i32 2, !dbg !17854, !ctir !1253
  store i8 1, i8* %exact197, align 4, !dbg !17855, !tbaa !17512, !ctir !142
  br label %if.end198, !dbg !17856

if.end198:                                        ; preds = %if.end195, %if.end50
  %142 = load i32, i32* %res, align 4, !dbg !17857, !tbaa !2635
  %cmp199 = icmp eq i32 %142, 2000000000, !dbg !17858
  %143 = zext i1 %cmp199 to i64, !dbg !17857
  %cond201 = select i1 %cmp199, i32 1, i32 0, !dbg !17857
  %neg202 = xor i32 %cond201, -1, !dbg !17859
  %conv203 = sext i32 %neg202 to i64, !dbg !17859
  %144 = load i64, i64* %src_s, align 8, !dbg !17860, !tbaa !3288
  %and204 = and i64 %144, %conv203, !dbg !17860
  store i64 %and204, i64* %src_s, align 8, !dbg !17860, !tbaa !3288
  %145 = load i32, i32* %src_ns, align 4, !dbg !17861, !tbaa !2635
  %146 = load i32, i32* %res, align 4, !dbg !17862, !tbaa !2635
  %rem205 = srem i32 %145, %146, !dbg !17863
  %147 = load i32, i32* %src_ns, align 4, !dbg !17864, !tbaa !2635
  %sub206 = sub nsw i32 %147, %rem205, !dbg !17864
  store i32 %sub206, i32* %src_ns, align 4, !dbg !17864, !tbaa !2635
  br label %if.end207, !dbg !17865

if.end207:                                        ; preds = %if.end198, %entry
  %148 = load i64, i64* %dst_s, align 8, !dbg !17866, !tbaa !3288
  %149 = load i64, i64* %src_s, align 8, !dbg !17867, !tbaa !3288
  %cmp208 = icmp slt i64 %148, %149, !dbg !17868
  br i1 %cmp208, label %cond.true, label %cond.false, !dbg !17866

cond.true:                                        ; preds = %if.end207
  br label %cond.end223, !dbg !17866

cond.false:                                       ; preds = %if.end207
  %150 = load i64, i64* %dst_s, align 8, !dbg !17869, !tbaa !3288
  %151 = load i64, i64* %src_s, align 8, !dbg !17870, !tbaa !3288
  %cmp210 = icmp sgt i64 %150, %151, !dbg !17871
  br i1 %cmp210, label %cond.true212, label %cond.false213, !dbg !17869

cond.true212:                                     ; preds = %cond.false
  br label %cond.end221, !dbg !17869

cond.false213:                                    ; preds = %cond.false
  %152 = load i32, i32* %dst_ns, align 4, !dbg !17872, !tbaa !2635
  %153 = load i32, i32* %src_ns, align 4, !dbg !17873, !tbaa !2635
  %cmp214 = icmp slt i32 %152, %153, !dbg !17874
  br i1 %cmp214, label %cond.true216, label %cond.false217, !dbg !17872

cond.true216:                                     ; preds = %cond.false213
  br label %cond.end, !dbg !17872

cond.false217:                                    ; preds = %cond.false213
  %154 = load i32, i32* %dst_ns, align 4, !dbg !17875, !tbaa !2635
  %155 = load i32, i32* %src_ns, align 4, !dbg !17876, !tbaa !2635
  %cmp218 = icmp sgt i32 %154, %155, !dbg !17877
  %conv219 = zext i1 %cmp218 to i32, !dbg !17877
  br label %cond.end, !dbg !17872

cond.end:                                         ; preds = %cond.false217, %cond.true216
  %cond220 = phi i32 [ -1, %cond.true216 ], [ %conv219, %cond.false217 ], !dbg !17872
  br label %cond.end221, !dbg !17869

cond.end221:                                      ; preds = %cond.end, %cond.true212
  %cond222 = phi i32 [ 1, %cond.true212 ], [ %cond220, %cond.end ], !dbg !17869
  br label %cond.end223, !dbg !17866

cond.end223:                                      ; preds = %cond.end221, %cond.true
  %cond224 = phi i32 [ -1, %cond.true ], [ %cond222, %cond.end221 ], !dbg !17866
  store i32 %cond224, i32* %retval, align 4, !dbg !17878
  br label %return, !dbg !17878

return:                                           ; preds = %cond.end223, %if.then166, %if.then143, %if.then126, %if.then114, %if.then16, %if.then11, %if.then8
  %156 = load i32, i32* %retval, align 4, !dbg !17879
  ret i32 %156, !dbg !17879
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @dev_info_hash(i8* %x, i64 %table_size) #4 !dbg !17880 !ctir !635 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.fs_res*, align 8, !ctir !1259
  store i8* %x, i8** %x.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !17881, metadata !DIExpression()), !dbg !17882
  store i64 %table_size, i64* %table_size.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !17883, metadata !DIExpression()), !dbg !17884
  call void @llvm.dbg.declare(metadata %struct.fs_res** %p, metadata !17885, metadata !DIExpression()), !dbg !17886
  %0 = load i8*, i8** %x.addr, align 8, !dbg !17887, !tbaa !2648
  %1 = bitcast i8* %0 to %struct.fs_res*, !dbg !17887
  store %struct.fs_res* %1, %struct.fs_res** %p, align 8, !dbg !17886, !tbaa !2648
  %2 = load %struct.fs_res*, %struct.fs_res** %p, align 8, !dbg !17888, !tbaa !2648
  %dev = getelementptr inbounds %struct.fs_res, %struct.fs_res* %2, i32 0, i32 0, !dbg !17889, !ctir !1260
  %3 = load i64, i64* %dev, align 8, !dbg !17889, !tbaa !17519, !ctir !443
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !17890, !tbaa !3288
  %rem = urem i64 %3, %4, !dbg !17891
  ret i64 %rem, !dbg !17892
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dev_info_compare(i8* %x, i8* %y) #4 !dbg !17893 !ctir !637 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.fs_res*, align 8, !ctir !1259
  %b = alloca %struct.fs_res*, align 8, !ctir !1259
  store i8* %x, i8** %x.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !17894, metadata !DIExpression()), !dbg !17895
  store i8* %y, i8** %y.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !17896, metadata !DIExpression()), !dbg !17897
  call void @llvm.dbg.declare(metadata %struct.fs_res** %a, metadata !17898, metadata !DIExpression()), !dbg !17899
  %0 = load i8*, i8** %x.addr, align 8, !dbg !17900, !tbaa !2648
  %1 = bitcast i8* %0 to %struct.fs_res*, !dbg !17900
  store %struct.fs_res* %1, %struct.fs_res** %a, align 8, !dbg !17899, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.fs_res** %b, metadata !17901, metadata !DIExpression()), !dbg !17902
  %2 = load i8*, i8** %y.addr, align 8, !dbg !17903, !tbaa !2648
  %3 = bitcast i8* %2 to %struct.fs_res*, !dbg !17903
  store %struct.fs_res* %3, %struct.fs_res** %b, align 8, !dbg !17902, !tbaa !2648
  %4 = load %struct.fs_res*, %struct.fs_res** %a, align 8, !dbg !17904, !tbaa !2648
  %dev = getelementptr inbounds %struct.fs_res, %struct.fs_res* %4, i32 0, i32 0, !dbg !17905, !ctir !1260
  %5 = load i64, i64* %dev, align 8, !dbg !17905, !tbaa !17519, !ctir !443
  %6 = load %struct.fs_res*, %struct.fs_res** %b, align 8, !dbg !17906, !tbaa !2648
  %dev1 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %6, i32 0, i32 0, !dbg !17907, !ctir !1260
  %7 = load i64, i64* %dev1, align 8, !dbg !17907, !tbaa !17519, !ctir !443
  %cmp = icmp eq i64 %5, %7, !dbg !17908
  ret i1 %cmp, !dbg !17909
}

; Function Attrs: nounwind
declare dso_local i32 @utimensat(i32, i8*, %struct.timespec*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lutimensat(i32 %dir, i8* %file, %struct.timespec* %times) #4 !dbg !17910 !ctir !1269 {
entry:
  %dir.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %times.addr = alloca %struct.timespec*, align 8
  store i32 %dir, i32* %dir.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !17912, metadata !DIExpression()), !dbg !17913
  store i8* %file, i8** %file.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !17914, metadata !DIExpression()), !dbg !17915
  store %struct.timespec* %times, %struct.timespec** %times.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.timespec** %times.addr, metadata !17916, metadata !DIExpression()), !dbg !17917
  %0 = load i32, i32* %dir.addr, align 4, !dbg !17918, !tbaa !2635
  %1 = load i8*, i8** %file.addr, align 8, !dbg !17919, !tbaa !2648
  %2 = load %struct.timespec*, %struct.timespec** %times.addr, align 8, !dbg !17920, !tbaa !2648
  %call = call i32 @utimensat(i32 %0, i8* %1, %struct.timespec* %2, i32 256) #9, !dbg !17921
  ret i32 %call, !dbg !17922
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fdutimens(i32 %fd, i8* %file, %struct.timespec* %timespec) #4 !dbg !17923 !ctir !1269 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %timespec.addr = alloca %struct.timespec*, align 8
  %adjusted_timespec = alloca [2 x %struct.timespec], align 16, !ctir !1277
  %ts = alloca %struct.timespec*, align 8, !ctir !1278
  %adjustment_needed = alloca i32, align 4, !ctir !7
  %st = alloca %struct.stat, align 8, !ctir !1295
  %result = alloca i32, align 4, !ctir !7
  %tmp = alloca %struct.timespec, align 8
  %tmp35 = alloca %struct.timespec, align 8
  %timeval = alloca [2 x %struct.timespec], align 16, !ctir !1279
  %t = alloca %struct.timespec*, align 8, !ctir !1286
  %abig = alloca i8, align 1, !ctir !142
  %mbig = alloca i8, align 1, !ctir !142
  %adiff = alloca i64, align 8, !ctir !1250
  %mdiff = alloca i64, align 8, !ctir !1250
  %tt = alloca %struct.timespec*, align 8, !ctir !1286
  %truncated_timeval = alloca [2 x %struct.timespec], align 16, !ctir !1279
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !17924, metadata !DIExpression()), !dbg !17925
  store i8* %file, i8** %file.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !17926, metadata !DIExpression()), !dbg !17927
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !17928, metadata !DIExpression()), !dbg !17929
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %adjusted_timespec, metadata !17930, metadata !DIExpression()), !dbg !17931
  call void @llvm.dbg.declare(metadata %struct.timespec** %ts, metadata !17932, metadata !DIExpression()), !dbg !17933
  %0 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17934, !tbaa !2648
  %tobool = icmp ne %struct.timespec* %0, null, !dbg !17934
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !17934

cond.true:                                        ; preds = %entry
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !17935
  br label %cond.end, !dbg !17934

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !17934

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.timespec* [ %arraydecay, %cond.true ], [ null, %cond.false ], !dbg !17934
  store %struct.timespec* %cond, %struct.timespec** %ts, align 8, !dbg !17933, !tbaa !2648
  call void @llvm.dbg.declare(metadata i32* %adjustment_needed, metadata !17936, metadata !DIExpression()), !dbg !17937
  store i32 0, i32* %adjustment_needed, align 4, !dbg !17937, !tbaa !2635
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !17938, metadata !DIExpression()), !dbg !17939
  %1 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17940, !tbaa !2648
  %tobool1 = icmp ne %struct.timespec* %1, null, !dbg !17940
  br i1 %tobool1, label %if.then, label %if.end, !dbg !17942

if.then:                                          ; preds = %cond.end
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !17943, !ctir !1277
  %2 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17945, !tbaa !2648
  %arrayidx2 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !17945, !ctir !1271
  %3 = bitcast %struct.timespec* %arrayidx to i8*, !dbg !17945
  %4 = bitcast %struct.timespec* %arrayidx2 to i8*, !dbg !17945
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %3, i8* align 8 %4, i64 16, i1 false), !dbg !17945, !tbaa.struct !3798
  %arrayidx3 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 1, !dbg !17946, !ctir !1277
  %5 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17947, !tbaa !2648
  %arrayidx4 = getelementptr inbounds %struct.timespec, %struct.timespec* %5, i64 1, !dbg !17947, !ctir !1271
  %6 = bitcast %struct.timespec* %arrayidx3 to i8*, !dbg !17947
  %7 = bitcast %struct.timespec* %arrayidx4 to i8*, !dbg !17947
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %6, i8* align 8 %7, i64 16, i1 false), !dbg !17947, !tbaa.struct !3798
  %8 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17948, !tbaa !2648
  %call = call i32 @validate_timespec(%struct.timespec* %8), !dbg !17949
  store i32 %call, i32* %adjustment_needed, align 4, !dbg !17950, !tbaa !2635
  br label %if.end, !dbg !17951

if.end:                                           ; preds = %if.then, %cond.end
  %9 = load i32, i32* %adjustment_needed, align 4, !dbg !17952, !tbaa !2635
  %cmp = icmp slt i32 %9, 0, !dbg !17954
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !17955

if.then5:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !17956
  br label %return, !dbg !17956

if.end6:                                          ; preds = %if.end
  %10 = load i32, i32* %fd.addr, align 4, !dbg !17957, !tbaa !2635
  %cmp7 = icmp slt i32 %10, 0, !dbg !17959
  br i1 %cmp7, label %land.lhs.true, label %if.end11, !dbg !17960

land.lhs.true:                                    ; preds = %if.end6
  %11 = load i8*, i8** %file.addr, align 8, !dbg !17961, !tbaa !2648
  %tobool8 = icmp ne i8* %11, null, !dbg !17961
  br i1 %tobool8, label %if.end11, label %if.then9, !dbg !17962

if.then9:                                         ; preds = %land.lhs.true
  %call10 = call i32* @__errno_location() #16, !dbg !17963
  store i32 9, i32* %call10, align 4, !dbg !17965, !tbaa !2635, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !17966
  br label %return, !dbg !17966

if.end11:                                         ; preds = %land.lhs.true, %if.end6
  %12 = load i32, i32* @utimensat_works_really, align 4, !dbg !17967, !tbaa !2635
  %cmp12 = icmp sle i32 0, %12, !dbg !17969
  br i1 %cmp12, label %if.then13, label %if.end67, !dbg !17970

if.then13:                                        ; preds = %if.end11
  call void @llvm.dbg.declare(metadata i32* %result, metadata !17971, metadata !DIExpression()), !dbg !17973
  %13 = load i32, i32* %adjustment_needed, align 4, !dbg !17974, !tbaa !2635
  %cmp14 = icmp eq i32 %13, 2, !dbg !17976
  br i1 %cmp14, label %if.then15, label %if.end39, !dbg !17977

if.then15:                                        ; preds = %if.then13
  %14 = load i32, i32* %fd.addr, align 4, !dbg !17978, !tbaa !2635
  %cmp16 = icmp slt i32 %14, 0, !dbg !17981
  br i1 %cmp16, label %cond.true17, label %cond.false20, !dbg !17982

cond.true17:                                      ; preds = %if.then15
  %15 = load i8*, i8** %file.addr, align 8, !dbg !17983, !tbaa !2648
  %call18 = call i32 @stat(i8* %15, %struct.stat* %st) #9, !dbg !17984
  %tobool19 = icmp ne i32 %call18, 0, !dbg !17984
  br i1 %tobool19, label %if.then23, label %if.end24, !dbg !17978

cond.false20:                                     ; preds = %if.then15
  %16 = load i32, i32* %fd.addr, align 4, !dbg !17985, !tbaa !2635
  %call21 = call i32 @fstat(i32 %16, %struct.stat* %st) #9, !dbg !17986
  %tobool22 = icmp ne i32 %call21, 0, !dbg !17986
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !17982

if.then23:                                        ; preds = %cond.false20, %cond.true17
  store i32 -1, i32* %retval, align 4, !dbg !17987
  br label %return, !dbg !17987

if.end24:                                         ; preds = %cond.false20, %cond.true17
  %17 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17988, !tbaa !2648
  %arrayidx25 = getelementptr inbounds %struct.timespec, %struct.timespec* %17, i64 0, !dbg !17988, !ctir !1278
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx25, i32 0, i32 1, !dbg !17990, !ctir !1273
  %18 = load i64, i64* %tv_nsec, align 8, !dbg !17990, !tbaa !17078, !ctir !296
  %cmp26 = icmp eq i64 %18, 1073741822, !dbg !17991
  br i1 %cmp26, label %if.then27, label %if.else, !dbg !17992

if.then27:                                        ; preds = %if.end24
  %19 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17993, !tbaa !2648
  %arrayidx28 = getelementptr inbounds %struct.timespec, %struct.timespec* %19, i64 0, !dbg !17993, !ctir !1278
  %call29 = call { i64, i64 } @get_stat_atime(%struct.stat* %st) #14, !dbg !17994
  %20 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !17994
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !17994
  %22 = extractvalue { i64, i64 } %call29, 0, !dbg !17994
  store i64 %22, i64* %21, align 8, !dbg !17994
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !17994
  %24 = extractvalue { i64, i64 } %call29, 1, !dbg !17994
  store i64 %24, i64* %23, align 8, !dbg !17994
  %25 = bitcast %struct.timespec* %arrayidx28 to i8*, !dbg !17994
  %26 = bitcast %struct.timespec* %tmp to i8*, !dbg !17994
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 16, i1 false), !dbg !17994, !tbaa.struct !3798
  br label %if.end38, !dbg !17993

if.else:                                          ; preds = %if.end24
  %27 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17995, !tbaa !2648
  %arrayidx30 = getelementptr inbounds %struct.timespec, %struct.timespec* %27, i64 1, !dbg !17995, !ctir !1278
  %tv_nsec31 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx30, i32 0, i32 1, !dbg !17997, !ctir !1273
  %28 = load i64, i64* %tv_nsec31, align 8, !dbg !17997, !tbaa !17078, !ctir !296
  %cmp32 = icmp eq i64 %28, 1073741822, !dbg !17998
  br i1 %cmp32, label %if.then33, label %if.end37, !dbg !17999

if.then33:                                        ; preds = %if.else
  %29 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18000, !tbaa !2648
  %arrayidx34 = getelementptr inbounds %struct.timespec, %struct.timespec* %29, i64 1, !dbg !18000, !ctir !1278
  %call36 = call { i64, i64 } @get_stat_mtime(%struct.stat* %st) #14, !dbg !18001
  %30 = bitcast %struct.timespec* %tmp35 to { i64, i64 }*, !dbg !18001
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %30, i32 0, i32 0, !dbg !18001
  %32 = extractvalue { i64, i64 } %call36, 0, !dbg !18001
  store i64 %32, i64* %31, align 8, !dbg !18001
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %30, i32 0, i32 1, !dbg !18001
  %34 = extractvalue { i64, i64 } %call36, 1, !dbg !18001
  store i64 %34, i64* %33, align 8, !dbg !18001
  %35 = bitcast %struct.timespec* %arrayidx34 to i8*, !dbg !18001
  %36 = bitcast %struct.timespec* %tmp35 to i8*, !dbg !18001
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 16, i1 false), !dbg !18001, !tbaa.struct !3798
  br label %if.end37, !dbg !18000

if.end37:                                         ; preds = %if.then33, %if.else
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then27
  %37 = load i32, i32* %adjustment_needed, align 4, !dbg !18002, !tbaa !2635
  %inc = add nsw i32 %37, 1, !dbg !18002
  store i32 %inc, i32* %adjustment_needed, align 4, !dbg !18002, !tbaa !2635
  br label %if.end39, !dbg !18003

if.end39:                                         ; preds = %if.end38, %if.then13
  %38 = load i32, i32* %fd.addr, align 4, !dbg !18004, !tbaa !2635
  %cmp40 = icmp slt i32 %38, 0, !dbg !18006
  br i1 %cmp40, label %if.then41, label %if.end52, !dbg !18007

if.then41:                                        ; preds = %if.end39
  %39 = load i8*, i8** %file.addr, align 8, !dbg !18008, !tbaa !2648
  %40 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18010, !tbaa !2648
  %call42 = call i32 @utimensat(i32 -100, i8* %39, %struct.timespec* %40, i32 0) #9, !dbg !18011
  store i32 %call42, i32* %result, align 4, !dbg !18012, !tbaa !2635
  %41 = load i32, i32* %result, align 4, !dbg !18013, !tbaa !2635
  %cmp43 = icmp slt i32 0, %41, !dbg !18015
  br i1 %cmp43, label %if.then44, label %if.end46, !dbg !18016

if.then44:                                        ; preds = %if.then41
  %call45 = call i32* @__errno_location() #16, !dbg !18017
  store i32 38, i32* %call45, align 4, !dbg !18018, !tbaa !2635, !ctir !7
  br label %if.end46, !dbg !18017

if.end46:                                         ; preds = %if.then44, %if.then41
  %42 = load i32, i32* %result, align 4, !dbg !18019, !tbaa !2635
  %cmp47 = icmp eq i32 %42, 0, !dbg !18021
  br i1 %cmp47, label %if.then50, label %lor.lhs.false, !dbg !18022

lor.lhs.false:                                    ; preds = %if.end46
  %call48 = call i32* @__errno_location() #16, !dbg !18023
  %43 = load i32, i32* %call48, align 4, !dbg !18023, !tbaa !2635, !ctir !7
  %cmp49 = icmp ne i32 %43, 38, !dbg !18024
  br i1 %cmp49, label %if.then50, label %if.end51, !dbg !18025

if.then50:                                        ; preds = %lor.lhs.false, %if.end46
  store i32 1, i32* @utimensat_works_really, align 4, !dbg !18026, !tbaa !2635
  %44 = load i32, i32* %result, align 4, !dbg !18028, !tbaa !2635
  store i32 %44, i32* %retval, align 4, !dbg !18029
  br label %return, !dbg !18029

if.end51:                                         ; preds = %lor.lhs.false
  br label %if.end52, !dbg !18030

if.end52:                                         ; preds = %if.end51, %if.end39
  %45 = load i32, i32* %fd.addr, align 4, !dbg !18031, !tbaa !2635
  %cmp53 = icmp sle i32 0, %45, !dbg !18033
  br i1 %cmp53, label %if.then54, label %if.end66, !dbg !18034

if.then54:                                        ; preds = %if.end52
  %46 = load i32, i32* %fd.addr, align 4, !dbg !18035, !tbaa !2635
  %47 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18037, !tbaa !2648
  %call55 = call i32 @futimens(i32 %46, %struct.timespec* %47) #9, !dbg !18038
  store i32 %call55, i32* %result, align 4, !dbg !18039, !tbaa !2635
  %48 = load i32, i32* %result, align 4, !dbg !18040, !tbaa !2635
  %cmp56 = icmp slt i32 0, %48, !dbg !18042
  br i1 %cmp56, label %if.then57, label %if.end59, !dbg !18043

if.then57:                                        ; preds = %if.then54
  %call58 = call i32* @__errno_location() #16, !dbg !18044
  store i32 38, i32* %call58, align 4, !dbg !18045, !tbaa !2635, !ctir !7
  br label %if.end59, !dbg !18044

if.end59:                                         ; preds = %if.then57, %if.then54
  %49 = load i32, i32* %result, align 4, !dbg !18046, !tbaa !2635
  %cmp60 = icmp eq i32 %49, 0, !dbg !18048
  br i1 %cmp60, label %if.then64, label %lor.lhs.false61, !dbg !18049

lor.lhs.false61:                                  ; preds = %if.end59
  %call62 = call i32* @__errno_location() #16, !dbg !18050
  %50 = load i32, i32* %call62, align 4, !dbg !18050, !tbaa !2635, !ctir !7
  %cmp63 = icmp ne i32 %50, 38, !dbg !18051
  br i1 %cmp63, label %if.then64, label %if.end65, !dbg !18052

if.then64:                                        ; preds = %lor.lhs.false61, %if.end59
  store i32 1, i32* @utimensat_works_really, align 4, !dbg !18053, !tbaa !2635
  %51 = load i32, i32* %result, align 4, !dbg !18055, !tbaa !2635
  store i32 %51, i32* %retval, align 4, !dbg !18056
  br label %return, !dbg !18056

if.end65:                                         ; preds = %lor.lhs.false61
  br label %if.end66, !dbg !18057

if.end66:                                         ; preds = %if.end65, %if.end52
  br label %if.end67, !dbg !18058

if.end67:                                         ; preds = %if.end66, %if.end11
  store i32 -1, i32* @utimensat_works_really, align 4, !dbg !18059, !tbaa !2635
  store i32 -1, i32* @lutimensat_works_really, align 4, !dbg !18060, !tbaa !2635
  %52 = load i32, i32* %adjustment_needed, align 4, !dbg !18061, !tbaa !2635
  %tobool68 = icmp ne i32 %52, 0, !dbg !18061
  br i1 %tobool68, label %if.then69, label %if.end86, !dbg !18063

if.then69:                                        ; preds = %if.end67
  %53 = load i32, i32* %adjustment_needed, align 4, !dbg !18064, !tbaa !2635
  %cmp70 = icmp ne i32 %53, 3, !dbg !18067
  br i1 %cmp70, label %land.lhs.true71, label %if.end80, !dbg !18068

land.lhs.true71:                                  ; preds = %if.then69
  %54 = load i32, i32* %fd.addr, align 4, !dbg !18069, !tbaa !2635
  %cmp72 = icmp slt i32 %54, 0, !dbg !18070
  br i1 %cmp72, label %cond.true73, label %cond.false76, !dbg !18071

cond.true73:                                      ; preds = %land.lhs.true71
  %55 = load i8*, i8** %file.addr, align 8, !dbg !18072, !tbaa !2648
  %call74 = call i32 @stat(i8* %55, %struct.stat* %st) #9, !dbg !18073
  %tobool75 = icmp ne i32 %call74, 0, !dbg !18073
  br i1 %tobool75, label %if.then79, label %if.end80, !dbg !18069

cond.false76:                                     ; preds = %land.lhs.true71
  %56 = load i32, i32* %fd.addr, align 4, !dbg !18074, !tbaa !2635
  %call77 = call i32 @fstat(i32 %56, %struct.stat* %st) #9, !dbg !18075
  %tobool78 = icmp ne i32 %call77, 0, !dbg !18075
  br i1 %tobool78, label %if.then79, label %if.end80, !dbg !18071

if.then79:                                        ; preds = %cond.false76, %cond.true73
  store i32 -1, i32* %retval, align 4, !dbg !18076
  br label %return, !dbg !18076

if.end80:                                         ; preds = %cond.false76, %cond.true73, %if.then69
  %57 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18077, !tbaa !2648
  %tobool81 = icmp ne %struct.timespec* %57, null, !dbg !18077
  br i1 %tobool81, label %land.lhs.true82, label %if.end85, !dbg !18079

land.lhs.true82:                                  ; preds = %if.end80
  %call83 = call zeroext i1 @update_timespec(%struct.stat* %st, %struct.timespec** %ts), !dbg !18080
  br i1 %call83, label %if.then84, label %if.end85, !dbg !18081

if.then84:                                        ; preds = %land.lhs.true82
  store i32 0, i32* %retval, align 4, !dbg !18082
  br label %return, !dbg !18082

if.end85:                                         ; preds = %land.lhs.true82, %if.end80
  br label %if.end86, !dbg !18083

if.end86:                                         ; preds = %if.end85, %if.end67
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timeval, metadata !18084, metadata !DIExpression()), !dbg !18086
  call void @llvm.dbg.declare(metadata %struct.timespec** %t, metadata !18087, metadata !DIExpression()), !dbg !18088
  %58 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18089, !tbaa !2648
  %tobool87 = icmp ne %struct.timespec* %58, null, !dbg !18089
  br i1 %tobool87, label %if.then88, label %if.else105, !dbg !18091

if.then88:                                        ; preds = %if.end86
  %59 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18092, !tbaa !2648
  %arrayidx89 = getelementptr inbounds %struct.timespec, %struct.timespec* %59, i64 0, !dbg !18092, !ctir !1278
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx89, i32 0, i32 0, !dbg !18094, !ctir !1273
  %60 = load i64, i64* %tv_sec, align 8, !dbg !18094, !tbaa !17075, !ctir !294
  %arrayidx90 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 0, !dbg !18095, !ctir !1279
  %tv_sec91 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx90, i32 0, i32 0, !dbg !18096, !ctir !1280
  store i64 %60, i64* %tv_sec91, align 16, !dbg !18097, !tbaa !18098, !ctir !294
  %61 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18100, !tbaa !2648
  %arrayidx92 = getelementptr inbounds %struct.timespec, %struct.timespec* %61, i64 0, !dbg !18100, !ctir !1278
  %tv_nsec93 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx92, i32 0, i32 1, !dbg !18101, !ctir !1273
  %62 = load i64, i64* %tv_nsec93, align 8, !dbg !18101, !tbaa !17078, !ctir !296
  %div = sdiv i64 %62, 1000, !dbg !18102
  %arrayidx94 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 0, !dbg !18103, !ctir !1279
  %tv_usec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx94, i32 0, i32 1, !dbg !18104, !ctir !1280
  store i64 %div, i64* %tv_usec, align 8, !dbg !18105, !tbaa !18106, !ctir !1285
  %63 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18107, !tbaa !2648
  %arrayidx95 = getelementptr inbounds %struct.timespec, %struct.timespec* %63, i64 1, !dbg !18107, !ctir !1278
  %tv_sec96 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx95, i32 0, i32 0, !dbg !18108, !ctir !1273
  %64 = load i64, i64* %tv_sec96, align 8, !dbg !18108, !tbaa !17075, !ctir !294
  %arrayidx97 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 1, !dbg !18109, !ctir !1279
  %tv_sec98 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx97, i32 0, i32 0, !dbg !18110, !ctir !1280
  store i64 %64, i64* %tv_sec98, align 16, !dbg !18111, !tbaa !18098, !ctir !294
  %65 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18112, !tbaa !2648
  %arrayidx99 = getelementptr inbounds %struct.timespec, %struct.timespec* %65, i64 1, !dbg !18112, !ctir !1278
  %tv_nsec100 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx99, i32 0, i32 1, !dbg !18113, !ctir !1273
  %66 = load i64, i64* %tv_nsec100, align 8, !dbg !18113, !tbaa !17078, !ctir !296
  %div101 = sdiv i64 %66, 1000, !dbg !18114
  %arrayidx102 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 1, !dbg !18115, !ctir !1279
  %tv_usec103 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx102, i32 0, i32 1, !dbg !18116, !ctir !1280
  store i64 %div101, i64* %tv_usec103, align 8, !dbg !18117, !tbaa !18106, !ctir !1285
  %arraydecay104 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 0, !dbg !18118
  store %struct.timespec* %arraydecay104, %struct.timespec** %t, align 8, !dbg !18119, !tbaa !2648
  br label %if.end106, !dbg !18120

if.else105:                                       ; preds = %if.end86
  store %struct.timespec* null, %struct.timespec** %t, align 8, !dbg !18121, !tbaa !2648
  br label %if.end106

if.end106:                                        ; preds = %if.else105, %if.then88
  %67 = load i32, i32* %fd.addr, align 4, !dbg !18122, !tbaa !2635
  %cmp107 = icmp slt i32 %67, 0, !dbg !18124
  br i1 %cmp107, label %if.then108, label %if.else110, !dbg !18125

if.then108:                                       ; preds = %if.end106
  %68 = load i8*, i8** %file.addr, align 8, !dbg !18126, !tbaa !2648
  %69 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !18128, !tbaa !2648
  %call109 = call i32 @futimesat(i32 -100, i8* %68, %struct.timespec* %69) #9, !dbg !18129
  store i32 %call109, i32* %retval, align 4, !dbg !18130
  br label %return, !dbg !18130

if.else110:                                       ; preds = %if.end106
  %70 = load i32, i32* %fd.addr, align 4, !dbg !18131, !tbaa !2635
  %71 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !18131, !tbaa !2648
  %call111 = call i32 @futimesat(i32 %70, i8* null, %struct.timespec* %71) #9, !dbg !18131
  %cmp112 = icmp eq i32 %call111, 0, !dbg !18134
  br i1 %cmp112, label %if.then113, label %if.end177, !dbg !18135

if.then113:                                       ; preds = %if.else110
  %72 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !18136, !tbaa !2648
  %tobool114 = icmp ne %struct.timespec* %72, null, !dbg !18136
  br i1 %tobool114, label %if.then115, label %if.end176, !dbg !18139

if.then115:                                       ; preds = %if.then113
  call void @llvm.dbg.declare(metadata i8* %abig, metadata !18140, metadata !DIExpression()), !dbg !18142
  %73 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !18143, !tbaa !2648
  %arrayidx116 = getelementptr inbounds %struct.timespec, %struct.timespec* %73, i64 0, !dbg !18143, !ctir !1286
  %tv_usec117 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx116, i32 0, i32 1, !dbg !18144, !ctir !1280
  %74 = load i64, i64* %tv_usec117, align 8, !dbg !18144, !tbaa !18106, !ctir !1285
  %cmp118 = icmp sle i64 500000, %74, !dbg !18145
  %frombool = zext i1 %cmp118 to i8, !dbg !18142
  store i8 %frombool, i8* %abig, align 1, !dbg !18142, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %mbig, metadata !18146, metadata !DIExpression()), !dbg !18147
  %75 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !18148, !tbaa !2648
  %arrayidx119 = getelementptr inbounds %struct.timespec, %struct.timespec* %75, i64 1, !dbg !18148, !ctir !1286
  %tv_usec120 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx119, i32 0, i32 1, !dbg !18149, !ctir !1280
  %76 = load i64, i64* %tv_usec120, align 8, !dbg !18149, !tbaa !18106, !ctir !1285
  %cmp121 = icmp sle i64 500000, %76, !dbg !18150
  %frombool122 = zext i1 %cmp121 to i8, !dbg !18147
  store i8 %frombool122, i8* %mbig, align 1, !dbg !18147, !tbaa !2742
  %77 = load i8, i8* %abig, align 1, !dbg !18151, !tbaa !2742
  %tobool123 = trunc i8 %77 to i1, !dbg !18151
  %conv = zext i1 %tobool123 to i32, !dbg !18151
  %78 = load i8, i8* %mbig, align 1, !dbg !18153, !tbaa !2742
  %tobool124 = trunc i8 %78 to i1, !dbg !18153
  %conv125 = zext i1 %tobool124 to i32, !dbg !18153
  %or = or i32 %conv, %conv125, !dbg !18154
  %tobool126 = icmp ne i32 %or, 0, !dbg !18154
  br i1 %tobool126, label %land.lhs.true127, label %if.end175, !dbg !18155

land.lhs.true127:                                 ; preds = %if.then115
  %79 = load i32, i32* %fd.addr, align 4, !dbg !18156, !tbaa !2635
  %call128 = call i32 @fstat(i32 %79, %struct.stat* %st) #9, !dbg !18157
  %cmp129 = icmp eq i32 %call128, 0, !dbg !18158
  br i1 %cmp129, label %if.then131, label %if.end175, !dbg !18159

if.then131:                                       ; preds = %land.lhs.true127
  call void @llvm.dbg.declare(metadata i64* %adiff, metadata !18160, metadata !DIExpression()), !dbg !18162
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 11, !dbg !18163, !ctir !1295
  %tv_sec132 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_atim, i32 0, i32 0, !dbg !18163, !ctir !1273
  %80 = load i64, i64* %tv_sec132, align 8, !dbg !18163, !tbaa !17578, !ctir !294
  %81 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !18164, !tbaa !2648
  %arrayidx133 = getelementptr inbounds %struct.timespec, %struct.timespec* %81, i64 0, !dbg !18164, !ctir !1286
  %tv_sec134 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx133, i32 0, i32 0, !dbg !18165, !ctir !1280
  %82 = load i64, i64* %tv_sec134, align 8, !dbg !18165, !tbaa !18098, !ctir !294
  %sub = sub nsw i64 %80, %82, !dbg !18166
  store i64 %sub, i64* %adiff, align 8, !dbg !18162, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %mdiff, metadata !18167, metadata !DIExpression()), !dbg !18168
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 12, !dbg !18169, !ctir !1295
  %tv_sec135 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 0, !dbg !18169, !ctir !1273
  %83 = load i64, i64* %tv_sec135, align 8, !dbg !18169, !tbaa !17436, !ctir !294
  %84 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !18170, !tbaa !2648
  %arrayidx136 = getelementptr inbounds %struct.timespec, %struct.timespec* %84, i64 1, !dbg !18170, !ctir !1286
  %tv_sec137 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx136, i32 0, i32 0, !dbg !18171, !ctir !1280
  %85 = load i64, i64* %tv_sec137, align 8, !dbg !18171, !tbaa !18098, !ctir !294
  %sub138 = sub nsw i64 %83, %85, !dbg !18172
  store i64 %sub138, i64* %mdiff, align 8, !dbg !18168, !tbaa !3288
  call void @llvm.dbg.declare(metadata %struct.timespec** %tt, metadata !18173, metadata !DIExpression()), !dbg !18174
  store %struct.timespec* null, %struct.timespec** %tt, align 8, !dbg !18174, !tbaa !2648
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %truncated_timeval, metadata !18175, metadata !DIExpression()), !dbg !18176
  %arrayidx139 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 0, !dbg !18177, !ctir !1279
  %86 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !18178, !tbaa !2648
  %arrayidx140 = getelementptr inbounds %struct.timespec, %struct.timespec* %86, i64 0, !dbg !18178, !ctir !1286
  %87 = bitcast %struct.timespec* %arrayidx139 to i8*, !dbg !18178
  %88 = bitcast %struct.timespec* %arrayidx140 to i8*, !dbg !18178
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %87, i8* align 8 %88, i64 16, i1 false), !dbg !18178, !tbaa.struct !3798
  %arrayidx141 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 1, !dbg !18179, !ctir !1279
  %89 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !18180, !tbaa !2648
  %arrayidx142 = getelementptr inbounds %struct.timespec, %struct.timespec* %89, i64 1, !dbg !18180, !ctir !1286
  %90 = bitcast %struct.timespec* %arrayidx141 to i8*, !dbg !18180
  %91 = bitcast %struct.timespec* %arrayidx142 to i8*, !dbg !18180
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %90, i8* align 8 %91, i64 16, i1 false), !dbg !18180, !tbaa.struct !3798
  %92 = load i8, i8* %abig, align 1, !dbg !18181, !tbaa !2742
  %tobool143 = trunc i8 %92 to i1, !dbg !18181
  br i1 %tobool143, label %land.lhs.true145, label %if.end156, !dbg !18183

land.lhs.true145:                                 ; preds = %if.then131
  %93 = load i64, i64* %adiff, align 8, !dbg !18184, !tbaa !3288
  %cmp146 = icmp eq i64 %93, 1, !dbg !18185
  br i1 %cmp146, label %land.lhs.true148, label %if.end156, !dbg !18186

land.lhs.true148:                                 ; preds = %land.lhs.true145
  %call149 = call i64 @get_stat_atime_ns(%struct.stat* %st) #14, !dbg !18187
  %cmp150 = icmp eq i64 %call149, 0, !dbg !18188
  br i1 %cmp150, label %if.then152, label %if.end156, !dbg !18189

if.then152:                                       ; preds = %land.lhs.true148
  %arraydecay153 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 0, !dbg !18190
  store %struct.timespec* %arraydecay153, %struct.timespec** %tt, align 8, !dbg !18192, !tbaa !2648
  %94 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !18193, !tbaa !2648
  %arrayidx154 = getelementptr inbounds %struct.timespec, %struct.timespec* %94, i64 0, !dbg !18193, !ctir !1286
  %tv_usec155 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx154, i32 0, i32 1, !dbg !18194, !ctir !1280
  store i64 0, i64* %tv_usec155, align 8, !dbg !18195, !tbaa !18106, !ctir !1285
  br label %if.end156, !dbg !18196

if.end156:                                        ; preds = %if.then152, %land.lhs.true148, %land.lhs.true145, %if.then131
  %95 = load i8, i8* %mbig, align 1, !dbg !18197, !tbaa !2742
  %tobool157 = trunc i8 %95 to i1, !dbg !18197
  br i1 %tobool157, label %land.lhs.true159, label %if.end170, !dbg !18199

land.lhs.true159:                                 ; preds = %if.end156
  %96 = load i64, i64* %mdiff, align 8, !dbg !18200, !tbaa !3288
  %cmp160 = icmp eq i64 %96, 1, !dbg !18201
  br i1 %cmp160, label %land.lhs.true162, label %if.end170, !dbg !18202

land.lhs.true162:                                 ; preds = %land.lhs.true159
  %call163 = call i64 @get_stat_mtime_ns(%struct.stat* %st) #14, !dbg !18203
  %cmp164 = icmp eq i64 %call163, 0, !dbg !18204
  br i1 %cmp164, label %if.then166, label %if.end170, !dbg !18205

if.then166:                                       ; preds = %land.lhs.true162
  %arraydecay167 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 0, !dbg !18206
  store %struct.timespec* %arraydecay167, %struct.timespec** %tt, align 8, !dbg !18208, !tbaa !2648
  %97 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !18209, !tbaa !2648
  %arrayidx168 = getelementptr inbounds %struct.timespec, %struct.timespec* %97, i64 1, !dbg !18209, !ctir !1286
  %tv_usec169 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx168, i32 0, i32 1, !dbg !18210, !ctir !1280
  store i64 0, i64* %tv_usec169, align 8, !dbg !18211, !tbaa !18106, !ctir !1285
  br label %if.end170, !dbg !18212

if.end170:                                        ; preds = %if.then166, %land.lhs.true162, %land.lhs.true159, %if.end156
  %98 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !18213, !tbaa !2648
  %tobool171 = icmp ne %struct.timespec* %98, null, !dbg !18213
  br i1 %tobool171, label %if.then172, label %if.end174, !dbg !18215

if.then172:                                       ; preds = %if.end170
  %99 = load i32, i32* %fd.addr, align 4, !dbg !18216, !tbaa !2635
  %100 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !18216, !tbaa !2648
  %call173 = call i32 @futimesat(i32 %99, i8* null, %struct.timespec* %100) #9, !dbg !18216
  br label %if.end174, !dbg !18216

if.end174:                                        ; preds = %if.then172, %if.end170
  br label %if.end175, !dbg !18217

if.end175:                                        ; preds = %if.end174, %land.lhs.true127, %if.then115
  br label %if.end176, !dbg !18218

if.end176:                                        ; preds = %if.end175, %if.then113
  store i32 0, i32* %retval, align 4, !dbg !18219
  br label %return, !dbg !18219

if.end177:                                        ; preds = %if.else110
  br label %if.end178

if.end178:                                        ; preds = %if.end177
  %101 = load i8*, i8** %file.addr, align 8, !dbg !18220, !tbaa !2648
  %tobool179 = icmp ne i8* %101, null, !dbg !18220
  br i1 %tobool179, label %if.end181, label %if.then180, !dbg !18222

if.then180:                                       ; preds = %if.end178
  store i32 -1, i32* %retval, align 4, !dbg !18223
  br label %return, !dbg !18223

if.end181:                                        ; preds = %if.end178
  %102 = load i8*, i8** %file.addr, align 8, !dbg !18225, !tbaa !2648
  %103 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !18226, !tbaa !2648
  %call182 = call i32 @utimes(i8* %102, %struct.timespec* %103) #9, !dbg !18227
  store i32 %call182, i32* %retval, align 4, !dbg !18228
  br label %return, !dbg !18228

return:                                           ; preds = %if.end181, %if.then180, %if.end176, %if.then108, %if.then84, %if.then79, %if.then64, %if.then50, %if.then23, %if.then9, %if.then5
  %104 = load i32, i32* %retval, align 4, !dbg !18229
  ret i32 %104, !dbg !18229
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @validate_timespec(%struct.timespec* %timespec) #4 !dbg !18230 !ctir !1289 {
entry:
  %retval = alloca i32, align 4
  %timespec.addr = alloca %struct.timespec*, align 8
  %result = alloca i32, align 4, !ctir !7
  %utime_omit_count = alloca i32, align 4, !ctir !7
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !18231, metadata !DIExpression()), !dbg !18232
  call void @llvm.dbg.declare(metadata i32* %result, metadata !18233, metadata !DIExpression()), !dbg !18234
  store i32 0, i32* %result, align 4, !dbg !18234, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %utime_omit_count, metadata !18235, metadata !DIExpression()), !dbg !18236
  store i32 0, i32* %utime_omit_count, align 4, !dbg !18236, !tbaa !2635
  %0 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18237, !tbaa !2648
  %arrayidx = getelementptr inbounds %struct.timespec, %struct.timespec* %0, i64 0, !dbg !18237, !ctir !1278
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx, i32 0, i32 1, !dbg !18239, !ctir !1273
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !18239, !tbaa !17078, !ctir !296
  %cmp = icmp ne i64 %1, 1073741823, !dbg !18240
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !18241

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18242, !tbaa !2648
  %arrayidx1 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !18242, !ctir !1278
  %tv_nsec2 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx1, i32 0, i32 1, !dbg !18243, !ctir !1273
  %3 = load i64, i64* %tv_nsec2, align 8, !dbg !18243, !tbaa !17078, !ctir !296
  %cmp3 = icmp ne i64 %3, 1073741822, !dbg !18244
  br i1 %cmp3, label %land.lhs.true4, label %lor.lhs.false, !dbg !18245

land.lhs.true4:                                   ; preds = %land.lhs.true
  %4 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18246, !tbaa !2648
  %arrayidx5 = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i64 0, !dbg !18246, !ctir !1278
  %tv_nsec6 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx5, i32 0, i32 1, !dbg !18247, !ctir !1273
  %5 = load i64, i64* %tv_nsec6, align 8, !dbg !18247, !tbaa !17078, !ctir !296
  %cmp7 = icmp sle i64 0, %5, !dbg !18248
  br i1 %cmp7, label %land.lhs.true8, label %if.then, !dbg !18249

land.lhs.true8:                                   ; preds = %land.lhs.true4
  %6 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18250, !tbaa !2648
  %arrayidx9 = getelementptr inbounds %struct.timespec, %struct.timespec* %6, i64 0, !dbg !18250, !ctir !1278
  %tv_nsec10 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx9, i32 0, i32 1, !dbg !18251, !ctir !1273
  %7 = load i64, i64* %tv_nsec10, align 8, !dbg !18251, !tbaa !17078, !ctir !296
  %cmp11 = icmp slt i64 %7, 1000000000, !dbg !18252
  br i1 %cmp11, label %lor.lhs.false, label %if.then, !dbg !18253

lor.lhs.false:                                    ; preds = %land.lhs.true8, %land.lhs.true, %entry
  %8 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18254, !tbaa !2648
  %arrayidx12 = getelementptr inbounds %struct.timespec, %struct.timespec* %8, i64 1, !dbg !18254, !ctir !1278
  %tv_nsec13 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx12, i32 0, i32 1, !dbg !18255, !ctir !1273
  %9 = load i64, i64* %tv_nsec13, align 8, !dbg !18255, !tbaa !17078, !ctir !296
  %cmp14 = icmp ne i64 %9, 1073741823, !dbg !18256
  br i1 %cmp14, label %land.lhs.true15, label %if.end, !dbg !18257

land.lhs.true15:                                  ; preds = %lor.lhs.false
  %10 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18258, !tbaa !2648
  %arrayidx16 = getelementptr inbounds %struct.timespec, %struct.timespec* %10, i64 1, !dbg !18258, !ctir !1278
  %tv_nsec17 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx16, i32 0, i32 1, !dbg !18259, !ctir !1273
  %11 = load i64, i64* %tv_nsec17, align 8, !dbg !18259, !tbaa !17078, !ctir !296
  %cmp18 = icmp ne i64 %11, 1073741822, !dbg !18260
  br i1 %cmp18, label %land.lhs.true19, label %if.end, !dbg !18261

land.lhs.true19:                                  ; preds = %land.lhs.true15
  %12 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18262, !tbaa !2648
  %arrayidx20 = getelementptr inbounds %struct.timespec, %struct.timespec* %12, i64 1, !dbg !18262, !ctir !1278
  %tv_nsec21 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx20, i32 0, i32 1, !dbg !18263, !ctir !1273
  %13 = load i64, i64* %tv_nsec21, align 8, !dbg !18263, !tbaa !17078, !ctir !296
  %cmp22 = icmp sle i64 0, %13, !dbg !18264
  br i1 %cmp22, label %land.lhs.true23, label %if.then, !dbg !18265

land.lhs.true23:                                  ; preds = %land.lhs.true19
  %14 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18266, !tbaa !2648
  %arrayidx24 = getelementptr inbounds %struct.timespec, %struct.timespec* %14, i64 1, !dbg !18266, !ctir !1278
  %tv_nsec25 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx24, i32 0, i32 1, !dbg !18267, !ctir !1273
  %15 = load i64, i64* %tv_nsec25, align 8, !dbg !18267, !tbaa !17078, !ctir !296
  %cmp26 = icmp slt i64 %15, 1000000000, !dbg !18268
  br i1 %cmp26, label %if.end, label %if.then, !dbg !18269

if.then:                                          ; preds = %land.lhs.true23, %land.lhs.true19, %land.lhs.true8, %land.lhs.true4
  %call = call i32* @__errno_location() #16, !dbg !18270
  store i32 22, i32* %call, align 4, !dbg !18272, !tbaa !2635, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !18273
  br label %return, !dbg !18273

if.end:                                           ; preds = %land.lhs.true23, %land.lhs.true15, %lor.lhs.false
  %16 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18274, !tbaa !2648
  %arrayidx27 = getelementptr inbounds %struct.timespec, %struct.timespec* %16, i64 0, !dbg !18274, !ctir !1278
  %tv_nsec28 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx27, i32 0, i32 1, !dbg !18276, !ctir !1273
  %17 = load i64, i64* %tv_nsec28, align 8, !dbg !18276, !tbaa !17078, !ctir !296
  %cmp29 = icmp eq i64 %17, 1073741823, !dbg !18277
  br i1 %cmp29, label %if.then34, label %lor.lhs.false30, !dbg !18278

lor.lhs.false30:                                  ; preds = %if.end
  %18 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18279, !tbaa !2648
  %arrayidx31 = getelementptr inbounds %struct.timespec, %struct.timespec* %18, i64 0, !dbg !18279, !ctir !1278
  %tv_nsec32 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx31, i32 0, i32 1, !dbg !18280, !ctir !1273
  %19 = load i64, i64* %tv_nsec32, align 8, !dbg !18280, !tbaa !17078, !ctir !296
  %cmp33 = icmp eq i64 %19, 1073741822, !dbg !18281
  br i1 %cmp33, label %if.then34, label %if.end41, !dbg !18282

if.then34:                                        ; preds = %lor.lhs.false30, %if.end
  %20 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18283, !tbaa !2648
  %arrayidx35 = getelementptr inbounds %struct.timespec, %struct.timespec* %20, i64 0, !dbg !18283, !ctir !1278
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx35, i32 0, i32 0, !dbg !18285, !ctir !1273
  store i64 0, i64* %tv_sec, align 8, !dbg !18286, !tbaa !17075, !ctir !294
  store i32 1, i32* %result, align 4, !dbg !18287, !tbaa !2635
  %21 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18288, !tbaa !2648
  %arrayidx36 = getelementptr inbounds %struct.timespec, %struct.timespec* %21, i64 0, !dbg !18288, !ctir !1278
  %tv_nsec37 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx36, i32 0, i32 1, !dbg !18290, !ctir !1273
  %22 = load i64, i64* %tv_nsec37, align 8, !dbg !18290, !tbaa !17078, !ctir !296
  %cmp38 = icmp eq i64 %22, 1073741822, !dbg !18291
  br i1 %cmp38, label %if.then39, label %if.end40, !dbg !18292

if.then39:                                        ; preds = %if.then34
  %23 = load i32, i32* %utime_omit_count, align 4, !dbg !18293, !tbaa !2635
  %inc = add nsw i32 %23, 1, !dbg !18293
  store i32 %inc, i32* %utime_omit_count, align 4, !dbg !18293, !tbaa !2635
  br label %if.end40, !dbg !18294

if.end40:                                         ; preds = %if.then39, %if.then34
  br label %if.end41, !dbg !18295

if.end41:                                         ; preds = %if.end40, %lor.lhs.false30
  %24 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18296, !tbaa !2648
  %arrayidx42 = getelementptr inbounds %struct.timespec, %struct.timespec* %24, i64 1, !dbg !18296, !ctir !1278
  %tv_nsec43 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx42, i32 0, i32 1, !dbg !18298, !ctir !1273
  %25 = load i64, i64* %tv_nsec43, align 8, !dbg !18298, !tbaa !17078, !ctir !296
  %cmp44 = icmp eq i64 %25, 1073741823, !dbg !18299
  br i1 %cmp44, label %if.then49, label %lor.lhs.false45, !dbg !18300

lor.lhs.false45:                                  ; preds = %if.end41
  %26 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18301, !tbaa !2648
  %arrayidx46 = getelementptr inbounds %struct.timespec, %struct.timespec* %26, i64 1, !dbg !18301, !ctir !1278
  %tv_nsec47 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx46, i32 0, i32 1, !dbg !18302, !ctir !1273
  %27 = load i64, i64* %tv_nsec47, align 8, !dbg !18302, !tbaa !17078, !ctir !296
  %cmp48 = icmp eq i64 %27, 1073741822, !dbg !18303
  br i1 %cmp48, label %if.then49, label %if.end58, !dbg !18304

if.then49:                                        ; preds = %lor.lhs.false45, %if.end41
  %28 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18305, !tbaa !2648
  %arrayidx50 = getelementptr inbounds %struct.timespec, %struct.timespec* %28, i64 1, !dbg !18305, !ctir !1278
  %tv_sec51 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx50, i32 0, i32 0, !dbg !18307, !ctir !1273
  store i64 0, i64* %tv_sec51, align 8, !dbg !18308, !tbaa !17075, !ctir !294
  store i32 1, i32* %result, align 4, !dbg !18309, !tbaa !2635
  %29 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18310, !tbaa !2648
  %arrayidx52 = getelementptr inbounds %struct.timespec, %struct.timespec* %29, i64 1, !dbg !18310, !ctir !1278
  %tv_nsec53 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx52, i32 0, i32 1, !dbg !18312, !ctir !1273
  %30 = load i64, i64* %tv_nsec53, align 8, !dbg !18312, !tbaa !17078, !ctir !296
  %cmp54 = icmp eq i64 %30, 1073741822, !dbg !18313
  br i1 %cmp54, label %if.then55, label %if.end57, !dbg !18314

if.then55:                                        ; preds = %if.then49
  %31 = load i32, i32* %utime_omit_count, align 4, !dbg !18315, !tbaa !2635
  %inc56 = add nsw i32 %31, 1, !dbg !18315
  store i32 %inc56, i32* %utime_omit_count, align 4, !dbg !18315, !tbaa !2635
  br label %if.end57, !dbg !18316

if.end57:                                         ; preds = %if.then55, %if.then49
  br label %if.end58, !dbg !18317

if.end58:                                         ; preds = %if.end57, %lor.lhs.false45
  %32 = load i32, i32* %result, align 4, !dbg !18318, !tbaa !2635
  %33 = load i32, i32* %utime_omit_count, align 4, !dbg !18319, !tbaa !2635
  %cmp59 = icmp eq i32 %33, 1, !dbg !18320
  %conv = zext i1 %cmp59 to i32, !dbg !18320
  %add = add nsw i32 %32, %conv, !dbg !18321
  store i32 %add, i32* %retval, align 4, !dbg !18322
  br label %return, !dbg !18322

return:                                           ; preds = %if.end58, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !18323
  ret i32 %34, !dbg !18323
}

; Function Attrs: nounwind
declare dso_local i32 @futimens(i32, %struct.timespec*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @update_timespec(%struct.stat* %statbuf, %struct.timespec** %ts) #4 !dbg !18324 !ctir !1291 {
entry:
  %retval = alloca i1, align 1
  %statbuf.addr = alloca %struct.stat*, align 8
  %ts.addr = alloca %struct.timespec**, align 8
  %timespec = alloca %struct.timespec*, align 8, !ctir !1278
  %tmp = alloca %struct.timespec, align 8
  %tmp30 = alloca %struct.timespec, align 8
  store %struct.stat* %statbuf, %struct.stat** %statbuf.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.stat** %statbuf.addr, metadata !18325, metadata !DIExpression()), !dbg !18326
  store %struct.timespec** %ts, %struct.timespec*** %ts.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.timespec*** %ts.addr, metadata !18327, metadata !DIExpression()), !dbg !18328
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec, metadata !18329, metadata !DIExpression()), !dbg !18330
  %0 = load %struct.timespec**, %struct.timespec*** %ts.addr, align 8, !dbg !18331, !tbaa !2648
  %1 = load %struct.timespec*, %struct.timespec** %0, align 8, !dbg !18332, !tbaa !2648, !ctir !1278
  store %struct.timespec* %1, %struct.timespec** %timespec, align 8, !dbg !18330, !tbaa !2648
  %2 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18333, !tbaa !2648
  %arrayidx = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !18333, !ctir !1278
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx, i32 0, i32 1, !dbg !18335, !ctir !1273
  %3 = load i64, i64* %tv_nsec, align 8, !dbg !18335, !tbaa !17078, !ctir !296
  %cmp = icmp eq i64 %3, 1073741822, !dbg !18336
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !18337

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18338, !tbaa !2648
  %arrayidx1 = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i64 1, !dbg !18338, !ctir !1278
  %tv_nsec2 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx1, i32 0, i32 1, !dbg !18339, !ctir !1273
  %5 = load i64, i64* %tv_nsec2, align 8, !dbg !18339, !tbaa !17078, !ctir !296
  %cmp3 = icmp eq i64 %5, 1073741822, !dbg !18340
  br i1 %cmp3, label %if.then, label %if.end, !dbg !18341

if.then:                                          ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !18342
  br label %return, !dbg !18342

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18343, !tbaa !2648
  %arrayidx4 = getelementptr inbounds %struct.timespec, %struct.timespec* %6, i64 0, !dbg !18343, !ctir !1278
  %tv_nsec5 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx4, i32 0, i32 1, !dbg !18345, !ctir !1273
  %7 = load i64, i64* %tv_nsec5, align 8, !dbg !18345, !tbaa !17078, !ctir !296
  %cmp6 = icmp eq i64 %7, 1073741823, !dbg !18346
  br i1 %cmp6, label %land.lhs.true7, label %if.end12, !dbg !18347

land.lhs.true7:                                   ; preds = %if.end
  %8 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18348, !tbaa !2648
  %arrayidx8 = getelementptr inbounds %struct.timespec, %struct.timespec* %8, i64 1, !dbg !18348, !ctir !1278
  %tv_nsec9 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx8, i32 0, i32 1, !dbg !18349, !ctir !1273
  %9 = load i64, i64* %tv_nsec9, align 8, !dbg !18349, !tbaa !17078, !ctir !296
  %cmp10 = icmp eq i64 %9, 1073741823, !dbg !18350
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !18351

if.then11:                                        ; preds = %land.lhs.true7
  %10 = load %struct.timespec**, %struct.timespec*** %ts.addr, align 8, !dbg !18352, !tbaa !2648
  store %struct.timespec* null, %struct.timespec** %10, align 8, !dbg !18354, !tbaa !2648, !ctir !1278
  store i1 false, i1* %retval, align 1, !dbg !18355
  br label %return, !dbg !18355

if.end12:                                         ; preds = %land.lhs.true7, %if.end
  %11 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18356, !tbaa !2648
  %arrayidx13 = getelementptr inbounds %struct.timespec, %struct.timespec* %11, i64 0, !dbg !18356, !ctir !1278
  %tv_nsec14 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx13, i32 0, i32 1, !dbg !18358, !ctir !1273
  %12 = load i64, i64* %tv_nsec14, align 8, !dbg !18358, !tbaa !17078, !ctir !296
  %cmp15 = icmp eq i64 %12, 1073741822, !dbg !18359
  br i1 %cmp15, label %if.then16, label %if.else, !dbg !18360

if.then16:                                        ; preds = %if.end12
  %13 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18361, !tbaa !2648
  %arrayidx17 = getelementptr inbounds %struct.timespec, %struct.timespec* %13, i64 0, !dbg !18361, !ctir !1278
  %14 = load %struct.stat*, %struct.stat** %statbuf.addr, align 8, !dbg !18362, !tbaa !2648
  %call = call { i64, i64 } @get_stat_atime(%struct.stat* %14) #14, !dbg !18363
  %15 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !18363
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i32 0, i32 0, !dbg !18363
  %17 = extractvalue { i64, i64 } %call, 0, !dbg !18363
  store i64 %17, i64* %16, align 8, !dbg !18363
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i32 0, i32 1, !dbg !18363
  %19 = extractvalue { i64, i64 } %call, 1, !dbg !18363
  store i64 %19, i64* %18, align 8, !dbg !18363
  %20 = bitcast %struct.timespec* %arrayidx17 to i8*, !dbg !18363
  %21 = bitcast %struct.timespec* %tmp to i8*, !dbg !18363
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 16, i1 false), !dbg !18363, !tbaa.struct !3798
  br label %if.end24, !dbg !18361

if.else:                                          ; preds = %if.end12
  %22 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18364, !tbaa !2648
  %arrayidx18 = getelementptr inbounds %struct.timespec, %struct.timespec* %22, i64 0, !dbg !18364, !ctir !1278
  %tv_nsec19 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx18, i32 0, i32 1, !dbg !18366, !ctir !1273
  %23 = load i64, i64* %tv_nsec19, align 8, !dbg !18366, !tbaa !17078, !ctir !296
  %cmp20 = icmp eq i64 %23, 1073741823, !dbg !18367
  br i1 %cmp20, label %if.then21, label %if.end23, !dbg !18368

if.then21:                                        ; preds = %if.else
  %24 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18369, !tbaa !2648
  %arrayidx22 = getelementptr inbounds %struct.timespec, %struct.timespec* %24, i64 0, !dbg !18369, !ctir !1278
  call void @gettime(%struct.timespec* %arrayidx22), !dbg !18370
  br label %if.end23, !dbg !18370

if.end23:                                         ; preds = %if.then21, %if.else
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then16
  %25 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18371, !tbaa !2648
  %arrayidx25 = getelementptr inbounds %struct.timespec, %struct.timespec* %25, i64 1, !dbg !18371, !ctir !1278
  %tv_nsec26 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx25, i32 0, i32 1, !dbg !18373, !ctir !1273
  %26 = load i64, i64* %tv_nsec26, align 8, !dbg !18373, !tbaa !17078, !ctir !296
  %cmp27 = icmp eq i64 %26, 1073741822, !dbg !18374
  br i1 %cmp27, label %if.then28, label %if.else32, !dbg !18375

if.then28:                                        ; preds = %if.end24
  %27 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18376, !tbaa !2648
  %arrayidx29 = getelementptr inbounds %struct.timespec, %struct.timespec* %27, i64 1, !dbg !18376, !ctir !1278
  %28 = load %struct.stat*, %struct.stat** %statbuf.addr, align 8, !dbg !18377, !tbaa !2648
  %call31 = call { i64, i64 } @get_stat_mtime(%struct.stat* %28) #14, !dbg !18378
  %29 = bitcast %struct.timespec* %tmp30 to { i64, i64 }*, !dbg !18378
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 0, !dbg !18378
  %31 = extractvalue { i64, i64 } %call31, 0, !dbg !18378
  store i64 %31, i64* %30, align 8, !dbg !18378
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 1, !dbg !18378
  %33 = extractvalue { i64, i64 } %call31, 1, !dbg !18378
  store i64 %33, i64* %32, align 8, !dbg !18378
  %34 = bitcast %struct.timespec* %arrayidx29 to i8*, !dbg !18378
  %35 = bitcast %struct.timespec* %tmp30 to i8*, !dbg !18378
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 16, i1 false), !dbg !18378, !tbaa.struct !3798
  br label %if.end39, !dbg !18376

if.else32:                                        ; preds = %if.end24
  %36 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18379, !tbaa !2648
  %arrayidx33 = getelementptr inbounds %struct.timespec, %struct.timespec* %36, i64 1, !dbg !18379, !ctir !1278
  %tv_nsec34 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx33, i32 0, i32 1, !dbg !18381, !ctir !1273
  %37 = load i64, i64* %tv_nsec34, align 8, !dbg !18381, !tbaa !17078, !ctir !296
  %cmp35 = icmp eq i64 %37, 1073741823, !dbg !18382
  br i1 %cmp35, label %if.then36, label %if.end38, !dbg !18383

if.then36:                                        ; preds = %if.else32
  %38 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18384, !tbaa !2648
  %arrayidx37 = getelementptr inbounds %struct.timespec, %struct.timespec* %38, i64 1, !dbg !18384, !ctir !1278
  call void @gettime(%struct.timespec* %arrayidx37), !dbg !18385
  br label %if.end38, !dbg !18385

if.end38:                                         ; preds = %if.then36, %if.else32
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then28
  store i1 false, i1* %retval, align 1, !dbg !18386
  br label %return, !dbg !18386

return:                                           ; preds = %if.end39, %if.then11, %if.then
  %39 = load i1, i1* %retval, align 1, !dbg !18387
  ret i1 %39, !dbg !18387
}

; Function Attrs: nounwind
declare dso_local i32 @futimesat(i32, i8*, %struct.timespec*) #2

; Function Attrs: nounwind
declare dso_local i32 @utimes(i8*, %struct.timespec*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @utimens(i8* %file, %struct.timespec* %timespec) #4 !dbg !18388 !ctir !1287 {
entry:
  %file.addr = alloca i8*, align 8
  %timespec.addr = alloca %struct.timespec*, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !18389, metadata !DIExpression()), !dbg !18390
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !18391, metadata !DIExpression()), !dbg !18392
  %0 = load i8*, i8** %file.addr, align 8, !dbg !18393, !tbaa !2648
  %1 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18394, !tbaa !2648
  %call = call i32 @fdutimens(i32 -1, i8* %0, %struct.timespec* %1), !dbg !18395
  ret i32 %call, !dbg !18396
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lutimens(i8* %file, %struct.timespec* %timespec) #4 !dbg !18397 !ctir !1287 {
entry:
  %retval = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %timespec.addr = alloca %struct.timespec*, align 8
  %adjusted_timespec = alloca [2 x %struct.timespec], align 16, !ctir !1277
  %ts = alloca %struct.timespec*, align 8, !ctir !1278
  %adjustment_needed = alloca i32, align 4, !ctir !7
  %st = alloca %struct.stat, align 8, !ctir !1295
  %result = alloca i32, align 4, !ctir !7
  %tmp = alloca %struct.timespec, align 8
  %tmp25 = alloca %struct.timespec, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !18398, metadata !DIExpression()), !dbg !18399
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !18400, metadata !DIExpression()), !dbg !18401
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %adjusted_timespec, metadata !18402, metadata !DIExpression()), !dbg !18403
  call void @llvm.dbg.declare(metadata %struct.timespec** %ts, metadata !18404, metadata !DIExpression()), !dbg !18405
  %0 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18406, !tbaa !2648
  %tobool = icmp ne %struct.timespec* %0, null, !dbg !18406
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !18406

cond.true:                                        ; preds = %entry
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !18407
  br label %cond.end, !dbg !18406

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !18406

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.timespec* [ %arraydecay, %cond.true ], [ null, %cond.false ], !dbg !18406
  store %struct.timespec* %cond, %struct.timespec** %ts, align 8, !dbg !18405, !tbaa !2648
  call void @llvm.dbg.declare(metadata i32* %adjustment_needed, metadata !18408, metadata !DIExpression()), !dbg !18409
  store i32 0, i32* %adjustment_needed, align 4, !dbg !18409, !tbaa !2635
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !18410, metadata !DIExpression()), !dbg !18411
  %1 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18412, !tbaa !2648
  %tobool1 = icmp ne %struct.timespec* %1, null, !dbg !18412
  br i1 %tobool1, label %if.then, label %if.end, !dbg !18414

if.then:                                          ; preds = %cond.end
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !18415, !ctir !1277
  %2 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18417, !tbaa !2648
  %arrayidx2 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !18417, !ctir !1271
  %3 = bitcast %struct.timespec* %arrayidx to i8*, !dbg !18417
  %4 = bitcast %struct.timespec* %arrayidx2 to i8*, !dbg !18417
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %3, i8* align 8 %4, i64 16, i1 false), !dbg !18417, !tbaa.struct !3798
  %arrayidx3 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 1, !dbg !18418, !ctir !1277
  %5 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18419, !tbaa !2648
  %arrayidx4 = getelementptr inbounds %struct.timespec, %struct.timespec* %5, i64 1, !dbg !18419, !ctir !1271
  %6 = bitcast %struct.timespec* %arrayidx3 to i8*, !dbg !18419
  %7 = bitcast %struct.timespec* %arrayidx4 to i8*, !dbg !18419
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %6, i8* align 8 %7, i64 16, i1 false), !dbg !18419, !tbaa.struct !3798
  %8 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18420, !tbaa !2648
  %call = call i32 @validate_timespec(%struct.timespec* %8), !dbg !18421
  store i32 %call, i32* %adjustment_needed, align 4, !dbg !18422, !tbaa !2635
  br label %if.end, !dbg !18423

if.end:                                           ; preds = %if.then, %cond.end
  %9 = load i32, i32* %adjustment_needed, align 4, !dbg !18424, !tbaa !2635
  %cmp = icmp slt i32 %9, 0, !dbg !18426
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !18427

if.then5:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !18428
  br label %return, !dbg !18428

if.end6:                                          ; preds = %if.end
  %10 = load i32, i32* @lutimensat_works_really, align 4, !dbg !18429, !tbaa !2635
  %cmp7 = icmp sle i32 0, %10, !dbg !18431
  br i1 %cmp7, label %if.then8, label %if.end40, !dbg !18432

if.then8:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata i32* %result, metadata !18433, metadata !DIExpression()), !dbg !18435
  %11 = load i32, i32* %adjustment_needed, align 4, !dbg !18436, !tbaa !2635
  %cmp9 = icmp eq i32 %11, 2, !dbg !18438
  br i1 %cmp9, label %if.then10, label %if.end29, !dbg !18439

if.then10:                                        ; preds = %if.then8
  %12 = load i8*, i8** %file.addr, align 8, !dbg !18440, !tbaa !2648
  %call11 = call i32 @lstat(i8* %12, %struct.stat* %st) #9, !dbg !18443
  %tobool12 = icmp ne i32 %call11, 0, !dbg !18443
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !18444

if.then13:                                        ; preds = %if.then10
  store i32 -1, i32* %retval, align 4, !dbg !18445
  br label %return, !dbg !18445

if.end14:                                         ; preds = %if.then10
  %13 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18446, !tbaa !2648
  %arrayidx15 = getelementptr inbounds %struct.timespec, %struct.timespec* %13, i64 0, !dbg !18446, !ctir !1278
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx15, i32 0, i32 1, !dbg !18448, !ctir !1273
  %14 = load i64, i64* %tv_nsec, align 8, !dbg !18448, !tbaa !17078, !ctir !296
  %cmp16 = icmp eq i64 %14, 1073741822, !dbg !18449
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !18450

if.then17:                                        ; preds = %if.end14
  %15 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18451, !tbaa !2648
  %arrayidx18 = getelementptr inbounds %struct.timespec, %struct.timespec* %15, i64 0, !dbg !18451, !ctir !1278
  %call19 = call { i64, i64 } @get_stat_atime(%struct.stat* %st) #14, !dbg !18452
  %16 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !18452
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 0, !dbg !18452
  %18 = extractvalue { i64, i64 } %call19, 0, !dbg !18452
  store i64 %18, i64* %17, align 8, !dbg !18452
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 1, !dbg !18452
  %20 = extractvalue { i64, i64 } %call19, 1, !dbg !18452
  store i64 %20, i64* %19, align 8, !dbg !18452
  %21 = bitcast %struct.timespec* %arrayidx18 to i8*, !dbg !18452
  %22 = bitcast %struct.timespec* %tmp to i8*, !dbg !18452
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 16, i1 false), !dbg !18452, !tbaa.struct !3798
  br label %if.end28, !dbg !18451

if.else:                                          ; preds = %if.end14
  %23 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18453, !tbaa !2648
  %arrayidx20 = getelementptr inbounds %struct.timespec, %struct.timespec* %23, i64 1, !dbg !18453, !ctir !1278
  %tv_nsec21 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx20, i32 0, i32 1, !dbg !18455, !ctir !1273
  %24 = load i64, i64* %tv_nsec21, align 8, !dbg !18455, !tbaa !17078, !ctir !296
  %cmp22 = icmp eq i64 %24, 1073741822, !dbg !18456
  br i1 %cmp22, label %if.then23, label %if.end27, !dbg !18457

if.then23:                                        ; preds = %if.else
  %25 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18458, !tbaa !2648
  %arrayidx24 = getelementptr inbounds %struct.timespec, %struct.timespec* %25, i64 1, !dbg !18458, !ctir !1278
  %call26 = call { i64, i64 } @get_stat_mtime(%struct.stat* %st) #14, !dbg !18459
  %26 = bitcast %struct.timespec* %tmp25 to { i64, i64 }*, !dbg !18459
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i32 0, i32 0, !dbg !18459
  %28 = extractvalue { i64, i64 } %call26, 0, !dbg !18459
  store i64 %28, i64* %27, align 8, !dbg !18459
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i32 0, i32 1, !dbg !18459
  %30 = extractvalue { i64, i64 } %call26, 1, !dbg !18459
  store i64 %30, i64* %29, align 8, !dbg !18459
  %31 = bitcast %struct.timespec* %arrayidx24 to i8*, !dbg !18459
  %32 = bitcast %struct.timespec* %tmp25 to i8*, !dbg !18459
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 16, i1 false), !dbg !18459, !tbaa.struct !3798
  br label %if.end27, !dbg !18458

if.end27:                                         ; preds = %if.then23, %if.else
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then17
  %33 = load i32, i32* %adjustment_needed, align 4, !dbg !18460, !tbaa !2635
  %inc = add nsw i32 %33, 1, !dbg !18460
  store i32 %inc, i32* %adjustment_needed, align 4, !dbg !18460, !tbaa !2635
  br label %if.end29, !dbg !18461

if.end29:                                         ; preds = %if.end28, %if.then8
  %34 = load i8*, i8** %file.addr, align 8, !dbg !18462, !tbaa !2648
  %35 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18463, !tbaa !2648
  %call30 = call i32 @utimensat(i32 -100, i8* %34, %struct.timespec* %35, i32 256) #9, !dbg !18464
  store i32 %call30, i32* %result, align 4, !dbg !18465, !tbaa !2635
  %36 = load i32, i32* %result, align 4, !dbg !18466, !tbaa !2635
  %cmp31 = icmp slt i32 0, %36, !dbg !18468
  br i1 %cmp31, label %if.then32, label %if.end34, !dbg !18469

if.then32:                                        ; preds = %if.end29
  %call33 = call i32* @__errno_location() #16, !dbg !18470
  store i32 38, i32* %call33, align 4, !dbg !18471, !tbaa !2635, !ctir !7
  br label %if.end34, !dbg !18470

if.end34:                                         ; preds = %if.then32, %if.end29
  %37 = load i32, i32* %result, align 4, !dbg !18472, !tbaa !2635
  %cmp35 = icmp eq i32 %37, 0, !dbg !18474
  br i1 %cmp35, label %if.then38, label %lor.lhs.false, !dbg !18475

lor.lhs.false:                                    ; preds = %if.end34
  %call36 = call i32* @__errno_location() #16, !dbg !18476
  %38 = load i32, i32* %call36, align 4, !dbg !18476, !tbaa !2635, !ctir !7
  %cmp37 = icmp ne i32 %38, 38, !dbg !18477
  br i1 %cmp37, label %if.then38, label %if.end39, !dbg !18478

if.then38:                                        ; preds = %lor.lhs.false, %if.end34
  store i32 1, i32* @utimensat_works_really, align 4, !dbg !18479, !tbaa !2635
  store i32 1, i32* @lutimensat_works_really, align 4, !dbg !18481, !tbaa !2635
  %39 = load i32, i32* %result, align 4, !dbg !18482, !tbaa !2635
  store i32 %39, i32* %retval, align 4, !dbg !18483
  br label %return, !dbg !18483

if.end39:                                         ; preds = %lor.lhs.false
  br label %if.end40, !dbg !18484

if.end40:                                         ; preds = %if.end39, %if.end6
  store i32 -1, i32* @lutimensat_works_really, align 4, !dbg !18485, !tbaa !2635
  %40 = load i32, i32* %adjustment_needed, align 4, !dbg !18486, !tbaa !2635
  %tobool41 = icmp ne i32 %40, 0, !dbg !18486
  br i1 %tobool41, label %if.then42, label %if.end53, !dbg !18488

if.then42:                                        ; preds = %if.end40
  %41 = load i32, i32* %adjustment_needed, align 4, !dbg !18489, !tbaa !2635
  %cmp43 = icmp ne i32 %41, 3, !dbg !18492
  br i1 %cmp43, label %land.lhs.true, label %if.end47, !dbg !18493

land.lhs.true:                                    ; preds = %if.then42
  %42 = load i8*, i8** %file.addr, align 8, !dbg !18494, !tbaa !2648
  %call44 = call i32 @lstat(i8* %42, %struct.stat* %st) #9, !dbg !18495
  %tobool45 = icmp ne i32 %call44, 0, !dbg !18495
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !18496

if.then46:                                        ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !18497
  br label %return, !dbg !18497

if.end47:                                         ; preds = %land.lhs.true, %if.then42
  %43 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18498, !tbaa !2648
  %tobool48 = icmp ne %struct.timespec* %43, null, !dbg !18498
  br i1 %tobool48, label %land.lhs.true49, label %if.end52, !dbg !18500

land.lhs.true49:                                  ; preds = %if.end47
  %call50 = call zeroext i1 @update_timespec(%struct.stat* %st, %struct.timespec** %ts), !dbg !18501
  br i1 %call50, label %if.then51, label %if.end52, !dbg !18502

if.then51:                                        ; preds = %land.lhs.true49
  store i32 0, i32* %retval, align 4, !dbg !18503
  br label %return, !dbg !18503

if.end52:                                         ; preds = %land.lhs.true49, %if.end47
  br label %if.end53, !dbg !18504

if.end53:                                         ; preds = %if.end52, %if.end40
  %44 = load i32, i32* %adjustment_needed, align 4, !dbg !18505, !tbaa !2635
  %tobool54 = icmp ne i32 %44, 0, !dbg !18505
  br i1 %tobool54, label %if.end59, label %land.lhs.true55, !dbg !18507

land.lhs.true55:                                  ; preds = %if.end53
  %45 = load i8*, i8** %file.addr, align 8, !dbg !18508, !tbaa !2648
  %call56 = call i32 @lstat(i8* %45, %struct.stat* %st) #9, !dbg !18509
  %tobool57 = icmp ne i32 %call56, 0, !dbg !18509
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !18510

if.then58:                                        ; preds = %land.lhs.true55
  store i32 -1, i32* %retval, align 4, !dbg !18511
  br label %return, !dbg !18511

if.end59:                                         ; preds = %land.lhs.true55, %if.end53
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !18512, !ctir !1295
  %46 = load i32, i32* %st_mode, align 8, !dbg !18512, !tbaa !2914, !ctir !140
  %and = and i32 %46, 61440, !dbg !18512
  %cmp60 = icmp eq i32 %and, 40960, !dbg !18512
  br i1 %cmp60, label %if.end63, label %if.then61, !dbg !18514

if.then61:                                        ; preds = %if.end59
  %47 = load i8*, i8** %file.addr, align 8, !dbg !18515, !tbaa !2648
  %48 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18516, !tbaa !2648
  %call62 = call i32 @fdutimens(i32 -1, i8* %47, %struct.timespec* %48), !dbg !18517
  store i32 %call62, i32* %retval, align 4, !dbg !18518
  br label %return, !dbg !18518

if.end63:                                         ; preds = %if.end59
  %call64 = call i32* @__errno_location() #16, !dbg !18519
  store i32 38, i32* %call64, align 4, !dbg !18520, !tbaa !2635, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !18521
  br label %return, !dbg !18521

return:                                           ; preds = %if.end63, %if.then61, %if.then58, %if.then51, %if.then46, %if.then38, %if.then13, %if.then5
  %49 = load i32, i32* %retval, align 4, !dbg !18522
  ret i32 %49, !dbg !18522
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @verror(i32 %status, i32 %errnum, i8* %format, %struct.__va_list_tag* %args) #4 !dbg !18523 !ctir !1933 {
entry:
  %status.addr = alloca i32, align 4
  %errnum.addr = alloca i32, align 4
  %format.addr = alloca i8*, align 8
  %args.addr = alloca %struct.__va_list_tag*, align 8
  store i32 %status, i32* %status.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !18525, metadata !DIExpression()), !dbg !18526
  store i32 %errnum, i32* %errnum.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %errnum.addr, metadata !18527, metadata !DIExpression()), !dbg !18528
  store i8* %format, i8** %format.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !18529, metadata !DIExpression()), !dbg !18530
  store %struct.__va_list_tag* %args, %struct.__va_list_tag** %args.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %args.addr, metadata !18531, metadata !DIExpression()), !dbg !18532
  %0 = load i32, i32* %status.addr, align 4, !dbg !18533, !tbaa !2635
  %1 = load i32, i32* %errnum.addr, align 4, !dbg !18534, !tbaa !2635
  %2 = load i8*, i8** %format.addr, align 8, !dbg !18535, !tbaa !2648
  %3 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !18536, !tbaa !2648
  call void @verror_at_line(i32 %0, i32 %1, i8* null, i32 0, i8* %2, %struct.__va_list_tag* %3), !dbg !18537
  ret void, !dbg !18538
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @verror_at_line(i32 %status, i32 %errnum, i8* %file, i32 %line_number, i8* %format, %struct.__va_list_tag* %args) #4 !dbg !18539 !ctir !1942 {
entry:
  %status.addr = alloca i32, align 4
  %errnum.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %line_number.addr = alloca i32, align 4
  %format.addr = alloca i8*, align 8
  %args.addr = alloca %struct.__va_list_tag*, align 8
  %message = alloca i8*, align 8, !ctir !9
  store i32 %status, i32* %status.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !18540, metadata !DIExpression()), !dbg !18541
  store i32 %errnum, i32* %errnum.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %errnum.addr, metadata !18542, metadata !DIExpression()), !dbg !18543
  store i8* %file, i8** %file.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !18544, metadata !DIExpression()), !dbg !18545
  store i32 %line_number, i32* %line_number.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %line_number.addr, metadata !18546, metadata !DIExpression()), !dbg !18547
  store i8* %format, i8** %format.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !18548, metadata !DIExpression()), !dbg !18549
  store %struct.__va_list_tag* %args, %struct.__va_list_tag** %args.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %args.addr, metadata !18550, metadata !DIExpression()), !dbg !18551
  call void @llvm.dbg.declare(metadata i8** %message, metadata !18552, metadata !DIExpression()), !dbg !18553
  %0 = load i8*, i8** %format.addr, align 8, !dbg !18554, !tbaa !2648
  %1 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !18555, !tbaa !2648
  %call = call i8* @xvasprintf(i8* %0, %struct.__va_list_tag* %1), !dbg !18556
  store i8* %call, i8** %message, align 8, !dbg !18553, !tbaa !2648
  %2 = load i8*, i8** %message, align 8, !dbg !18557, !tbaa !2648
  %tobool = icmp ne i8* %2, null, !dbg !18557
  br i1 %tobool, label %if.then, label %if.else3, !dbg !18559

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %file.addr, align 8, !dbg !18560, !tbaa !2648
  %tobool1 = icmp ne i8* %3, null, !dbg !18560
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !18563

if.then2:                                         ; preds = %if.then
  %4 = load i32, i32* %status.addr, align 4, !dbg !18564, !tbaa !2635
  %5 = load i32, i32* %errnum.addr, align 4, !dbg !18565, !tbaa !2635
  %6 = load i8*, i8** %file.addr, align 8, !dbg !18566, !tbaa !2648
  %7 = load i32, i32* %line_number.addr, align 4, !dbg !18567, !tbaa !2635
  %8 = load i8*, i8** %message, align 8, !dbg !18568, !tbaa !2648
  call void (i32, i32, i8*, i32, i8*, ...) @error_at_line(i32 %4, i32 %5, i8* %6, i32 %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.413, i64 0, i64 0), i8* %8), !dbg !18569
  br label %if.end, !dbg !18569

if.else:                                          ; preds = %if.then
  %9 = load i32, i32* %status.addr, align 4, !dbg !18570, !tbaa !2635
  %10 = load i32, i32* %errnum.addr, align 4, !dbg !18571, !tbaa !2635
  %11 = load i8*, i8** %message, align 8, !dbg !18572, !tbaa !2648
  call void (i32, i32, i8*, ...) @error(i32 %9, i32 %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.413, i64 0, i64 0), i8* %11), !dbg !18573
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  br label %if.end6, !dbg !18574

if.else3:                                         ; preds = %entry
  %call4 = call i32* @__errno_location() #16, !dbg !18575
  %12 = load i32, i32* %call4, align 4, !dbg !18575, !tbaa !2635, !ctir !7
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.414, i64 0, i64 0)) #9, !dbg !18577
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %12, i8* %call5), !dbg !18578
  call void @abort() #13, !dbg !18579
  unreachable, !dbg !18579

if.end6:                                          ; preds = %if.end
  %13 = load i8*, i8** %message, align 8, !dbg !18580, !tbaa !2648
  call void @free(i8* %13) #9, !dbg !18581
  ret void, !dbg !18582
}

declare dso_local void @error_at_line(i32, i32, i8*, i32, i8*, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_arn(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors, i64 %n_authors) #4 !dbg !18583 !ctir !1947 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca i8**, align 8
  %n_authors.addr = alloca i64, align 8
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !18585, metadata !DIExpression()), !dbg !18586
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !18587, metadata !DIExpression()), !dbg !18588
  store i8* %package, i8** %package.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !18589, metadata !DIExpression()), !dbg !18590
  store i8* %version, i8** %version.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !18591, metadata !DIExpression()), !dbg !18592
  store i8** %authors, i8*** %authors.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8*** %authors.addr, metadata !18593, metadata !DIExpression()), !dbg !18594
  store i64 %n_authors, i64* %n_authors.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %n_authors.addr, metadata !18595, metadata !DIExpression()), !dbg !18596
  %0 = load i8*, i8** %command_name.addr, align 8, !dbg !18597, !tbaa !2648
  %tobool = icmp ne i8* %0, null, !dbg !18597
  br i1 %tobool, label %if.then, label %if.else, !dbg !18599

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18600, !tbaa !2648
  %2 = load i8*, i8** %command_name.addr, align 8, !dbg !18601, !tbaa !2648
  %3 = load i8*, i8** %package.addr, align 8, !dbg !18602, !tbaa !2648
  %4 = load i8*, i8** %version.addr, align 8, !dbg !18603, !tbaa !2648
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.415, i64 0, i64 0), i8* %2, i8* %3, i8* %4), !dbg !18604
  br label %if.end, !dbg !18604

if.else:                                          ; preds = %entry
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18605, !tbaa !2648
  %6 = load i8*, i8** %package.addr, align 8, !dbg !18606, !tbaa !2648
  %7 = load i8*, i8** %version.addr, align 8, !dbg !18607, !tbaa !2648
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.416, i64 0, i64 0), i8* %6, i8* %7), !dbg !18608
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18609, !tbaa !2648
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.417, i64 0, i64 0)) #9, !dbg !18610
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* %call2, i32 2019), !dbg !18611
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18612, !tbaa !2648
  %call4 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.418, i64 0, i64 0), %struct._IO_FILE* %9), !dbg !18612
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18613, !tbaa !2648
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([171 x i8], [171 x i8]* @.str.4.419, i64 0, i64 0)) #9, !dbg !18614
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* %call5, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5.420, i64 0, i64 0)), !dbg !18615
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18616, !tbaa !2648
  %call7 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.418, i64 0, i64 0), %struct._IO_FILE* %11), !dbg !18616
  %12 = load i64, i64* %n_authors.addr, align 8, !dbg !18617, !tbaa !3288
  switch i64 %12, label %sw.default [
    i64 0, label %sw.bb
    i64 1, label %sw.bb8
    i64 2, label %sw.bb11
    i64 3, label %sw.bb16
    i64 4, label %sw.bb22
    i64 5, label %sw.bb29
    i64 6, label %sw.bb37
    i64 7, label %sw.bb46
    i64 8, label %sw.bb56
    i64 9, label %sw.bb67
  ], !dbg !18618

sw.bb:                                            ; preds = %if.end
  br label %sw.epilog, !dbg !18619

sw.bb8:                                           ; preds = %if.end
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18621, !tbaa !2648
  %call9 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.421, i64 0, i64 0)) #9, !dbg !18622
  %14 = load i8**, i8*** %authors.addr, align 8, !dbg !18623, !tbaa !2648
  %arrayidx = getelementptr inbounds i8*, i8** %14, i64 0, !dbg !18623, !ctir !1346
  %15 = load i8*, i8** %arrayidx, align 8, !dbg !18623, !tbaa !2648
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %13, i8* %call9, i8* %15), !dbg !18624
  br label %sw.epilog, !dbg !18625

sw.bb11:                                          ; preds = %if.end
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18626, !tbaa !2648
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7.422, i64 0, i64 0)) #9, !dbg !18627
  %17 = load i8**, i8*** %authors.addr, align 8, !dbg !18628, !tbaa !2648
  %arrayidx13 = getelementptr inbounds i8*, i8** %17, i64 0, !dbg !18628, !ctir !1346
  %18 = load i8*, i8** %arrayidx13, align 8, !dbg !18628, !tbaa !2648
  %19 = load i8**, i8*** %authors.addr, align 8, !dbg !18629, !tbaa !2648
  %arrayidx14 = getelementptr inbounds i8*, i8** %19, i64 1, !dbg !18629, !ctir !1346
  %20 = load i8*, i8** %arrayidx14, align 8, !dbg !18629, !tbaa !2648
  %call15 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* %call12, i8* %18, i8* %20), !dbg !18630
  br label %sw.epilog, !dbg !18631

sw.bb16:                                          ; preds = %if.end
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18632, !tbaa !2648
  %call17 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8.423, i64 0, i64 0)) #9, !dbg !18633
  %22 = load i8**, i8*** %authors.addr, align 8, !dbg !18634, !tbaa !2648
  %arrayidx18 = getelementptr inbounds i8*, i8** %22, i64 0, !dbg !18634, !ctir !1346
  %23 = load i8*, i8** %arrayidx18, align 8, !dbg !18634, !tbaa !2648
  %24 = load i8**, i8*** %authors.addr, align 8, !dbg !18635, !tbaa !2648
  %arrayidx19 = getelementptr inbounds i8*, i8** %24, i64 1, !dbg !18635, !ctir !1346
  %25 = load i8*, i8** %arrayidx19, align 8, !dbg !18635, !tbaa !2648
  %26 = load i8**, i8*** %authors.addr, align 8, !dbg !18636, !tbaa !2648
  %arrayidx20 = getelementptr inbounds i8*, i8** %26, i64 2, !dbg !18636, !ctir !1346
  %27 = load i8*, i8** %arrayidx20, align 8, !dbg !18636, !tbaa !2648
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* %call17, i8* %23, i8* %25, i8* %27), !dbg !18637
  br label %sw.epilog, !dbg !18638

sw.bb22:                                          ; preds = %if.end
  %28 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18639, !tbaa !2648
  %call23 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9.424, i64 0, i64 0)) #9, !dbg !18640
  %29 = load i8**, i8*** %authors.addr, align 8, !dbg !18641, !tbaa !2648
  %arrayidx24 = getelementptr inbounds i8*, i8** %29, i64 0, !dbg !18641, !ctir !1346
  %30 = load i8*, i8** %arrayidx24, align 8, !dbg !18641, !tbaa !2648
  %31 = load i8**, i8*** %authors.addr, align 8, !dbg !18642, !tbaa !2648
  %arrayidx25 = getelementptr inbounds i8*, i8** %31, i64 1, !dbg !18642, !ctir !1346
  %32 = load i8*, i8** %arrayidx25, align 8, !dbg !18642, !tbaa !2648
  %33 = load i8**, i8*** %authors.addr, align 8, !dbg !18643, !tbaa !2648
  %arrayidx26 = getelementptr inbounds i8*, i8** %33, i64 2, !dbg !18643, !ctir !1346
  %34 = load i8*, i8** %arrayidx26, align 8, !dbg !18643, !tbaa !2648
  %35 = load i8**, i8*** %authors.addr, align 8, !dbg !18644, !tbaa !2648
  %arrayidx27 = getelementptr inbounds i8*, i8** %35, i64 3, !dbg !18644, !ctir !1346
  %36 = load i8*, i8** %arrayidx27, align 8, !dbg !18644, !tbaa !2648
  %call28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %28, i8* %call23, i8* %30, i8* %32, i8* %34, i8* %36), !dbg !18645
  br label %sw.epilog, !dbg !18646

sw.bb29:                                          ; preds = %if.end
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18647, !tbaa !2648
  %call30 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.425, i64 0, i64 0)) #9, !dbg !18648
  %38 = load i8**, i8*** %authors.addr, align 8, !dbg !18649, !tbaa !2648
  %arrayidx31 = getelementptr inbounds i8*, i8** %38, i64 0, !dbg !18649, !ctir !1346
  %39 = load i8*, i8** %arrayidx31, align 8, !dbg !18649, !tbaa !2648
  %40 = load i8**, i8*** %authors.addr, align 8, !dbg !18650, !tbaa !2648
  %arrayidx32 = getelementptr inbounds i8*, i8** %40, i64 1, !dbg !18650, !ctir !1346
  %41 = load i8*, i8** %arrayidx32, align 8, !dbg !18650, !tbaa !2648
  %42 = load i8**, i8*** %authors.addr, align 8, !dbg !18651, !tbaa !2648
  %arrayidx33 = getelementptr inbounds i8*, i8** %42, i64 2, !dbg !18651, !ctir !1346
  %43 = load i8*, i8** %arrayidx33, align 8, !dbg !18651, !tbaa !2648
  %44 = load i8**, i8*** %authors.addr, align 8, !dbg !18652, !tbaa !2648
  %arrayidx34 = getelementptr inbounds i8*, i8** %44, i64 3, !dbg !18652, !ctir !1346
  %45 = load i8*, i8** %arrayidx34, align 8, !dbg !18652, !tbaa !2648
  %46 = load i8**, i8*** %authors.addr, align 8, !dbg !18653, !tbaa !2648
  %arrayidx35 = getelementptr inbounds i8*, i8** %46, i64 4, !dbg !18653, !ctir !1346
  %47 = load i8*, i8** %arrayidx35, align 8, !dbg !18653, !tbaa !2648
  %call36 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %37, i8* %call30, i8* %39, i8* %41, i8* %43, i8* %45, i8* %47), !dbg !18654
  br label %sw.epilog, !dbg !18655

sw.bb37:                                          ; preds = %if.end
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18656, !tbaa !2648
  %call38 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11.426, i64 0, i64 0)) #9, !dbg !18657
  %49 = load i8**, i8*** %authors.addr, align 8, !dbg !18658, !tbaa !2648
  %arrayidx39 = getelementptr inbounds i8*, i8** %49, i64 0, !dbg !18658, !ctir !1346
  %50 = load i8*, i8** %arrayidx39, align 8, !dbg !18658, !tbaa !2648
  %51 = load i8**, i8*** %authors.addr, align 8, !dbg !18659, !tbaa !2648
  %arrayidx40 = getelementptr inbounds i8*, i8** %51, i64 1, !dbg !18659, !ctir !1346
  %52 = load i8*, i8** %arrayidx40, align 8, !dbg !18659, !tbaa !2648
  %53 = load i8**, i8*** %authors.addr, align 8, !dbg !18660, !tbaa !2648
  %arrayidx41 = getelementptr inbounds i8*, i8** %53, i64 2, !dbg !18660, !ctir !1346
  %54 = load i8*, i8** %arrayidx41, align 8, !dbg !18660, !tbaa !2648
  %55 = load i8**, i8*** %authors.addr, align 8, !dbg !18661, !tbaa !2648
  %arrayidx42 = getelementptr inbounds i8*, i8** %55, i64 3, !dbg !18661, !ctir !1346
  %56 = load i8*, i8** %arrayidx42, align 8, !dbg !18661, !tbaa !2648
  %57 = load i8**, i8*** %authors.addr, align 8, !dbg !18662, !tbaa !2648
  %arrayidx43 = getelementptr inbounds i8*, i8** %57, i64 4, !dbg !18662, !ctir !1346
  %58 = load i8*, i8** %arrayidx43, align 8, !dbg !18662, !tbaa !2648
  %59 = load i8**, i8*** %authors.addr, align 8, !dbg !18663, !tbaa !2648
  %arrayidx44 = getelementptr inbounds i8*, i8** %59, i64 5, !dbg !18663, !ctir !1346
  %60 = load i8*, i8** %arrayidx44, align 8, !dbg !18663, !tbaa !2648
  %call45 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %48, i8* %call38, i8* %50, i8* %52, i8* %54, i8* %56, i8* %58, i8* %60), !dbg !18664
  br label %sw.epilog, !dbg !18665

sw.bb46:                                          ; preds = %if.end
  %61 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18666, !tbaa !2648
  %call47 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12.427, i64 0, i64 0)) #9, !dbg !18667
  %62 = load i8**, i8*** %authors.addr, align 8, !dbg !18668, !tbaa !2648
  %arrayidx48 = getelementptr inbounds i8*, i8** %62, i64 0, !dbg !18668, !ctir !1346
  %63 = load i8*, i8** %arrayidx48, align 8, !dbg !18668, !tbaa !2648
  %64 = load i8**, i8*** %authors.addr, align 8, !dbg !18669, !tbaa !2648
  %arrayidx49 = getelementptr inbounds i8*, i8** %64, i64 1, !dbg !18669, !ctir !1346
  %65 = load i8*, i8** %arrayidx49, align 8, !dbg !18669, !tbaa !2648
  %66 = load i8**, i8*** %authors.addr, align 8, !dbg !18670, !tbaa !2648
  %arrayidx50 = getelementptr inbounds i8*, i8** %66, i64 2, !dbg !18670, !ctir !1346
  %67 = load i8*, i8** %arrayidx50, align 8, !dbg !18670, !tbaa !2648
  %68 = load i8**, i8*** %authors.addr, align 8, !dbg !18671, !tbaa !2648
  %arrayidx51 = getelementptr inbounds i8*, i8** %68, i64 3, !dbg !18671, !ctir !1346
  %69 = load i8*, i8** %arrayidx51, align 8, !dbg !18671, !tbaa !2648
  %70 = load i8**, i8*** %authors.addr, align 8, !dbg !18672, !tbaa !2648
  %arrayidx52 = getelementptr inbounds i8*, i8** %70, i64 4, !dbg !18672, !ctir !1346
  %71 = load i8*, i8** %arrayidx52, align 8, !dbg !18672, !tbaa !2648
  %72 = load i8**, i8*** %authors.addr, align 8, !dbg !18673, !tbaa !2648
  %arrayidx53 = getelementptr inbounds i8*, i8** %72, i64 5, !dbg !18673, !ctir !1346
  %73 = load i8*, i8** %arrayidx53, align 8, !dbg !18673, !tbaa !2648
  %74 = load i8**, i8*** %authors.addr, align 8, !dbg !18674, !tbaa !2648
  %arrayidx54 = getelementptr inbounds i8*, i8** %74, i64 6, !dbg !18674, !ctir !1346
  %75 = load i8*, i8** %arrayidx54, align 8, !dbg !18674, !tbaa !2648
  %call55 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %61, i8* %call47, i8* %63, i8* %65, i8* %67, i8* %69, i8* %71, i8* %73, i8* %75), !dbg !18675
  br label %sw.epilog, !dbg !18676

sw.bb56:                                          ; preds = %if.end
  %76 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18677, !tbaa !2648
  %call57 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.13.428, i64 0, i64 0)) #9, !dbg !18678
  %77 = load i8**, i8*** %authors.addr, align 8, !dbg !18679, !tbaa !2648
  %arrayidx58 = getelementptr inbounds i8*, i8** %77, i64 0, !dbg !18679, !ctir !1346
  %78 = load i8*, i8** %arrayidx58, align 8, !dbg !18679, !tbaa !2648
  %79 = load i8**, i8*** %authors.addr, align 8, !dbg !18680, !tbaa !2648
  %arrayidx59 = getelementptr inbounds i8*, i8** %79, i64 1, !dbg !18680, !ctir !1346
  %80 = load i8*, i8** %arrayidx59, align 8, !dbg !18680, !tbaa !2648
  %81 = load i8**, i8*** %authors.addr, align 8, !dbg !18681, !tbaa !2648
  %arrayidx60 = getelementptr inbounds i8*, i8** %81, i64 2, !dbg !18681, !ctir !1346
  %82 = load i8*, i8** %arrayidx60, align 8, !dbg !18681, !tbaa !2648
  %83 = load i8**, i8*** %authors.addr, align 8, !dbg !18682, !tbaa !2648
  %arrayidx61 = getelementptr inbounds i8*, i8** %83, i64 3, !dbg !18682, !ctir !1346
  %84 = load i8*, i8** %arrayidx61, align 8, !dbg !18682, !tbaa !2648
  %85 = load i8**, i8*** %authors.addr, align 8, !dbg !18683, !tbaa !2648
  %arrayidx62 = getelementptr inbounds i8*, i8** %85, i64 4, !dbg !18683, !ctir !1346
  %86 = load i8*, i8** %arrayidx62, align 8, !dbg !18683, !tbaa !2648
  %87 = load i8**, i8*** %authors.addr, align 8, !dbg !18684, !tbaa !2648
  %arrayidx63 = getelementptr inbounds i8*, i8** %87, i64 5, !dbg !18684, !ctir !1346
  %88 = load i8*, i8** %arrayidx63, align 8, !dbg !18684, !tbaa !2648
  %89 = load i8**, i8*** %authors.addr, align 8, !dbg !18685, !tbaa !2648
  %arrayidx64 = getelementptr inbounds i8*, i8** %89, i64 6, !dbg !18685, !ctir !1346
  %90 = load i8*, i8** %arrayidx64, align 8, !dbg !18685, !tbaa !2648
  %91 = load i8**, i8*** %authors.addr, align 8, !dbg !18686, !tbaa !2648
  %arrayidx65 = getelementptr inbounds i8*, i8** %91, i64 7, !dbg !18686, !ctir !1346
  %92 = load i8*, i8** %arrayidx65, align 8, !dbg !18686, !tbaa !2648
  %call66 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %76, i8* %call57, i8* %78, i8* %80, i8* %82, i8* %84, i8* %86, i8* %88, i8* %90, i8* %92), !dbg !18687
  br label %sw.epilog, !dbg !18688

sw.bb67:                                          ; preds = %if.end
  %93 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18689, !tbaa !2648
  %call68 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.14.429, i64 0, i64 0)) #9, !dbg !18690
  %94 = load i8**, i8*** %authors.addr, align 8, !dbg !18691, !tbaa !2648
  %arrayidx69 = getelementptr inbounds i8*, i8** %94, i64 0, !dbg !18691, !ctir !1346
  %95 = load i8*, i8** %arrayidx69, align 8, !dbg !18691, !tbaa !2648
  %96 = load i8**, i8*** %authors.addr, align 8, !dbg !18692, !tbaa !2648
  %arrayidx70 = getelementptr inbounds i8*, i8** %96, i64 1, !dbg !18692, !ctir !1346
  %97 = load i8*, i8** %arrayidx70, align 8, !dbg !18692, !tbaa !2648
  %98 = load i8**, i8*** %authors.addr, align 8, !dbg !18693, !tbaa !2648
  %arrayidx71 = getelementptr inbounds i8*, i8** %98, i64 2, !dbg !18693, !ctir !1346
  %99 = load i8*, i8** %arrayidx71, align 8, !dbg !18693, !tbaa !2648
  %100 = load i8**, i8*** %authors.addr, align 8, !dbg !18694, !tbaa !2648
  %arrayidx72 = getelementptr inbounds i8*, i8** %100, i64 3, !dbg !18694, !ctir !1346
  %101 = load i8*, i8** %arrayidx72, align 8, !dbg !18694, !tbaa !2648
  %102 = load i8**, i8*** %authors.addr, align 8, !dbg !18695, !tbaa !2648
  %arrayidx73 = getelementptr inbounds i8*, i8** %102, i64 4, !dbg !18695, !ctir !1346
  %103 = load i8*, i8** %arrayidx73, align 8, !dbg !18695, !tbaa !2648
  %104 = load i8**, i8*** %authors.addr, align 8, !dbg !18696, !tbaa !2648
  %arrayidx74 = getelementptr inbounds i8*, i8** %104, i64 5, !dbg !18696, !ctir !1346
  %105 = load i8*, i8** %arrayidx74, align 8, !dbg !18696, !tbaa !2648
  %106 = load i8**, i8*** %authors.addr, align 8, !dbg !18697, !tbaa !2648
  %arrayidx75 = getelementptr inbounds i8*, i8** %106, i64 6, !dbg !18697, !ctir !1346
  %107 = load i8*, i8** %arrayidx75, align 8, !dbg !18697, !tbaa !2648
  %108 = load i8**, i8*** %authors.addr, align 8, !dbg !18698, !tbaa !2648
  %arrayidx76 = getelementptr inbounds i8*, i8** %108, i64 7, !dbg !18698, !ctir !1346
  %109 = load i8*, i8** %arrayidx76, align 8, !dbg !18698, !tbaa !2648
  %110 = load i8**, i8*** %authors.addr, align 8, !dbg !18699, !tbaa !2648
  %arrayidx77 = getelementptr inbounds i8*, i8** %110, i64 8, !dbg !18699, !ctir !1346
  %111 = load i8*, i8** %arrayidx77, align 8, !dbg !18699, !tbaa !2648
  %call78 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %93, i8* %call68, i8* %95, i8* %97, i8* %99, i8* %101, i8* %103, i8* %105, i8* %107, i8* %109, i8* %111), !dbg !18700
  br label %sw.epilog, !dbg !18701

sw.default:                                       ; preds = %if.end
  %112 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18702, !tbaa !2648
  %call79 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.15.430, i64 0, i64 0)) #9, !dbg !18703
  %113 = load i8**, i8*** %authors.addr, align 8, !dbg !18704, !tbaa !2648
  %arrayidx80 = getelementptr inbounds i8*, i8** %113, i64 0, !dbg !18704, !ctir !1346
  %114 = load i8*, i8** %arrayidx80, align 8, !dbg !18704, !tbaa !2648
  %115 = load i8**, i8*** %authors.addr, align 8, !dbg !18705, !tbaa !2648
  %arrayidx81 = getelementptr inbounds i8*, i8** %115, i64 1, !dbg !18705, !ctir !1346
  %116 = load i8*, i8** %arrayidx81, align 8, !dbg !18705, !tbaa !2648
  %117 = load i8**, i8*** %authors.addr, align 8, !dbg !18706, !tbaa !2648
  %arrayidx82 = getelementptr inbounds i8*, i8** %117, i64 2, !dbg !18706, !ctir !1346
  %118 = load i8*, i8** %arrayidx82, align 8, !dbg !18706, !tbaa !2648
  %119 = load i8**, i8*** %authors.addr, align 8, !dbg !18707, !tbaa !2648
  %arrayidx83 = getelementptr inbounds i8*, i8** %119, i64 3, !dbg !18707, !ctir !1346
  %120 = load i8*, i8** %arrayidx83, align 8, !dbg !18707, !tbaa !2648
  %121 = load i8**, i8*** %authors.addr, align 8, !dbg !18708, !tbaa !2648
  %arrayidx84 = getelementptr inbounds i8*, i8** %121, i64 4, !dbg !18708, !ctir !1346
  %122 = load i8*, i8** %arrayidx84, align 8, !dbg !18708, !tbaa !2648
  %123 = load i8**, i8*** %authors.addr, align 8, !dbg !18709, !tbaa !2648
  %arrayidx85 = getelementptr inbounds i8*, i8** %123, i64 5, !dbg !18709, !ctir !1346
  %124 = load i8*, i8** %arrayidx85, align 8, !dbg !18709, !tbaa !2648
  %125 = load i8**, i8*** %authors.addr, align 8, !dbg !18710, !tbaa !2648
  %arrayidx86 = getelementptr inbounds i8*, i8** %125, i64 6, !dbg !18710, !ctir !1346
  %126 = load i8*, i8** %arrayidx86, align 8, !dbg !18710, !tbaa !2648
  %127 = load i8**, i8*** %authors.addr, align 8, !dbg !18711, !tbaa !2648
  %arrayidx87 = getelementptr inbounds i8*, i8** %127, i64 7, !dbg !18711, !ctir !1346
  %128 = load i8*, i8** %arrayidx87, align 8, !dbg !18711, !tbaa !2648
  %129 = load i8**, i8*** %authors.addr, align 8, !dbg !18712, !tbaa !2648
  %arrayidx88 = getelementptr inbounds i8*, i8** %129, i64 8, !dbg !18712, !ctir !1346
  %130 = load i8*, i8** %arrayidx88, align 8, !dbg !18712, !tbaa !2648
  %call89 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %112, i8* %call79, i8* %114, i8* %116, i8* %118, i8* %120, i8* %122, i8* %124, i8* %126, i8* %128, i8* %130), !dbg !18713
  br label %sw.epilog, !dbg !18714

sw.epilog:                                        ; preds = %sw.default, %sw.bb67, %sw.bb56, %sw.bb46, %sw.bb37, %sw.bb29, %sw.bb22, %sw.bb16, %sw.bb11, %sw.bb8, %sw.bb
  ret void, !dbg !18715
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_ar(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors) #4 !dbg !18716 !ctir !1984 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca i8**, align 8
  %n_authors = alloca i64, align 8, !ctir !55
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !18717, metadata !DIExpression()), !dbg !18718
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !18719, metadata !DIExpression()), !dbg !18720
  store i8* %package, i8** %package.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !18721, metadata !DIExpression()), !dbg !18722
  store i8* %version, i8** %version.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !18723, metadata !DIExpression()), !dbg !18724
  store i8** %authors, i8*** %authors.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8*** %authors.addr, metadata !18725, metadata !DIExpression()), !dbg !18726
  call void @llvm.dbg.declare(metadata i64* %n_authors, metadata !18727, metadata !DIExpression()), !dbg !18728
  store i64 0, i64* %n_authors, align 8, !dbg !18729, !tbaa !3288
  br label %for.cond, !dbg !18731

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8**, i8*** %authors.addr, align 8, !dbg !18732, !tbaa !2648
  %1 = load i64, i64* %n_authors, align 8, !dbg !18734, !tbaa !3288
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 %1, !dbg !18732, !ctir !1346
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !18732, !tbaa !2648
  %tobool = icmp ne i8* %2, null, !dbg !18735
  br i1 %tobool, label %for.body, label %for.end, !dbg !18735

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !18735

for.inc:                                          ; preds = %for.body
  %3 = load i64, i64* %n_authors, align 8, !dbg !18736, !tbaa !3288
  %inc = add i64 %3, 1, !dbg !18736
  store i64 %inc, i64* %n_authors, align 8, !dbg !18736, !tbaa !3288
  br label %for.cond, !dbg !18737, !llvm.loop !18738

for.end:                                          ; preds = %for.cond
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18740, !tbaa !2648
  %5 = load i8*, i8** %command_name.addr, align 8, !dbg !18741, !tbaa !2648
  %6 = load i8*, i8** %package.addr, align 8, !dbg !18742, !tbaa !2648
  %7 = load i8*, i8** %version.addr, align 8, !dbg !18743, !tbaa !2648
  %8 = load i8**, i8*** %authors.addr, align 8, !dbg !18744, !tbaa !2648
  %9 = load i64, i64* %n_authors, align 8, !dbg !18745, !tbaa !3288
  call void @version_etc_arn(%struct._IO_FILE* %4, i8* %5, i8* %6, i8* %7, i8** %8, i64 %9), !dbg !18746
  ret void, !dbg !18747
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_va(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, %struct.__va_list_tag* %authors) #4 !dbg !18748 !ctir !1986 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca %struct.__va_list_tag*, align 8
  %n_authors = alloca i64, align 8, !ctir !55
  %authtab = alloca [10 x i8*], align 16, !ctir !1995
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !18749, metadata !DIExpression()), !dbg !18750
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !18751, metadata !DIExpression()), !dbg !18752
  store i8* %package, i8** %package.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !18753, metadata !DIExpression()), !dbg !18754
  store i8* %version, i8** %version.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !18755, metadata !DIExpression()), !dbg !18756
  store %struct.__va_list_tag* %authors, %struct.__va_list_tag** %authors.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %authors.addr, metadata !18757, metadata !DIExpression()), !dbg !18758
  call void @llvm.dbg.declare(metadata i64* %n_authors, metadata !18759, metadata !DIExpression()), !dbg !18760
  call void @llvm.dbg.declare(metadata [10 x i8*]* %authtab, metadata !18761, metadata !DIExpression()), !dbg !18762
  store i64 0, i64* %n_authors, align 8, !dbg !18763, !tbaa !3288
  br label %for.cond, !dbg !18765

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %n_authors, align 8, !dbg !18766, !tbaa !3288
  %cmp = icmp ult i64 %0, 10, !dbg !18768
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !18769

land.rhs:                                         ; preds = %for.cond
  %1 = load %struct.__va_list_tag*, %struct.__va_list_tag** %authors.addr, align 8, !dbg !18770, !tbaa !2648
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 0, !dbg !18770
  %gp_offset = load i32, i32* %gp_offset_p, align 8, !dbg !18770
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !18770
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !18770

vaarg.in_reg:                                     ; preds = %land.rhs
  %2 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 3, !dbg !18770
  %reg_save_area = load i8*, i8** %2, align 8, !dbg !18770
  %3 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !18770
  %4 = bitcast i8* %3 to i8**, !dbg !18770
  %5 = add i32 %gp_offset, 8, !dbg !18770
  store i32 %5, i32* %gp_offset_p, align 8, !dbg !18770
  br label %vaarg.end, !dbg !18770

vaarg.in_mem:                                     ; preds = %land.rhs
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 2, !dbg !18770
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !18770
  %6 = bitcast i8* %overflow_arg_area to i8**, !dbg !18770
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !18770
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !18770
  br label %vaarg.end, !dbg !18770

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i8** [ %4, %vaarg.in_reg ], [ %6, %vaarg.in_mem ], !dbg !18770
  %7 = load i8*, i8** %vaarg.addr, align 8, !dbg !18770
  %8 = load i64, i64* %n_authors, align 8, !dbg !18771, !tbaa !3288
  %arrayidx = getelementptr inbounds [10 x i8*], [10 x i8*]* %authtab, i64 0, i64 %8, !dbg !18772, !ctir !1995
  store i8* %7, i8** %arrayidx, align 8, !dbg !18773, !tbaa !2648
  %cmp1 = icmp ne i8* %7, null, !dbg !18774
  br label %land.end

land.end:                                         ; preds = %vaarg.end, %for.cond
  %9 = phi i1 [ false, %for.cond ], [ %cmp1, %vaarg.end ], !dbg !18775
  br i1 %9, label %for.body, label %for.end, !dbg !18776

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !18776

for.inc:                                          ; preds = %for.body
  %10 = load i64, i64* %n_authors, align 8, !dbg !18777, !tbaa !3288
  %inc = add i64 %10, 1, !dbg !18777
  store i64 %inc, i64* %n_authors, align 8, !dbg !18777, !tbaa !3288
  br label %for.cond, !dbg !18778, !llvm.loop !18779

for.end:                                          ; preds = %land.end
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18781, !tbaa !2648
  %12 = load i8*, i8** %command_name.addr, align 8, !dbg !18782, !tbaa !2648
  %13 = load i8*, i8** %package.addr, align 8, !dbg !18783, !tbaa !2648
  %14 = load i8*, i8** %version.addr, align 8, !dbg !18784, !tbaa !2648
  %arraydecay = getelementptr inbounds [10 x i8*], [10 x i8*]* %authtab, i64 0, i64 0, !dbg !18785
  %15 = load i64, i64* %n_authors, align 8, !dbg !18786, !tbaa !3288
  call void @version_etc_arn(%struct._IO_FILE* %11, i8* %12, i8* %13, i8* %14, i8** %arraydecay, i64 %15), !dbg !18787
  ret void, !dbg !18788
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, ...) #4 !dbg !18789 !ctir !1996 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1998
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !18792, metadata !DIExpression()), !dbg !18793
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !18794, metadata !DIExpression()), !dbg !18795
  store i8* %package, i8** %package.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !18796, metadata !DIExpression()), !dbg !18797
  store i8* %version, i8** %version.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !18798, metadata !DIExpression()), !dbg !18799
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %authors, metadata !18800, metadata !DIExpression()), !dbg !18801
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !18802
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !18802
  call void @llvm.va_start(i8* %arraydecay1), !dbg !18802
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18803, !tbaa !2648
  %1 = load i8*, i8** %command_name.addr, align 8, !dbg !18804, !tbaa !2648
  %2 = load i8*, i8** %package.addr, align 8, !dbg !18805, !tbaa !2648
  %3 = load i8*, i8** %version.addr, align 8, !dbg !18806, !tbaa !2648
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !18807
  call void @version_etc_va(%struct._IO_FILE* %0, i8* %1, i8* %2, i8* %3, %struct.__va_list_tag* %arraydecay2), !dbg !18808
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !18809
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !18809
  call void @llvm.va_end(i8* %arraydecay34), !dbg !18809
  ret void, !dbg !18810
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @emit_bug_reporting_address() #4 !dbg !18811 !ctir !200 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !18812, !tbaa !2648
  %call = call i32 @fputs_unlocked(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3.418, i64 0, i64 0), %struct._IO_FILE* %0), !dbg !18812
  %call1 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16.433, i64 0, i64 0)) #9, !dbg !18813
  %call2 = call i32 (i8*, ...) @printf(i8* %call1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17.434, i64 0, i64 0)), !dbg !18814
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18.435, i64 0, i64 0)) #9, !dbg !18815
  %call4 = call i32 (i8*, ...) @printf(i8* %call3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19.436, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.20.437, i64 0, i64 0)), !dbg !18816
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.21.438, i64 0, i64 0)) #9, !dbg !18817
  %call6 = call i32 (i8*, ...) @printf(i8* %call5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22.439, i64 0, i64 0)), !dbg !18818
  ret void, !dbg !18819
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @can_write_any_file() #4 !dbg !1329 !ctir !1331 {
entry:
  %can = alloca i8, align 1, !ctir !142
  %0 = load i8, i8* @can_write_any_file.initialized, align 1, !dbg !18820, !tbaa !2742
  %tobool = trunc i8 %0 to i1, !dbg !18820
  br i1 %tobool, label %if.end, label %if.then, !dbg !18822

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %can, metadata !18823, metadata !DIExpression()), !dbg !18825
  store i8 0, i8* %can, align 1, !dbg !18825, !tbaa !2742
  %call = call i32 @geteuid() #9, !dbg !18826
  %cmp = icmp eq i32 %call, 0, !dbg !18827
  %frombool = zext i1 %cmp to i8, !dbg !18828
  store i8 %frombool, i8* %can, align 1, !dbg !18828, !tbaa !2742
  %1 = load i8, i8* %can, align 1, !dbg !18829, !tbaa !2742
  %tobool1 = trunc i8 %1 to i1, !dbg !18829
  %frombool2 = zext i1 %tobool1 to i8, !dbg !18830
  store i8 %frombool2, i8* @can_write_any_file.can_write, align 1, !dbg !18830, !tbaa !2742
  store i8 1, i8* @can_write_any_file.initialized, align 1, !dbg !18831, !tbaa !2742
  br label %if.end, !dbg !18832

if.end:                                           ; preds = %if.then, %entry
  %2 = load i8, i8* @can_write_any_file.can_write, align 1, !dbg !18833, !tbaa !2742
  %tobool3 = trunc i8 %2 to i1, !dbg !18833
  ret i1 %tobool3, !dbg !18834
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xnmalloc(i64 %n, i64 %s) #4 !dbg !18835 !ctir !2005 {
entry:
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18837, metadata !DIExpression()), !dbg !18838
  store i64 %s, i64* %s.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !18839, metadata !DIExpression()), !dbg !18840
  %0 = load i64, i64* %s.addr, align 8, !dbg !18841, !tbaa !3288
  %div = udiv i64 9223372036854775807, %0, !dbg !18841
  %1 = load i64, i64* %n.addr, align 8, !dbg !18841, !tbaa !3288
  %cmp = icmp ult i64 %div, %1, !dbg !18841
  br i1 %cmp, label %if.then, label %if.end, !dbg !18843

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !18844
  unreachable, !dbg !18844

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !18845, !tbaa !3288
  %3 = load i64, i64* %s.addr, align 8, !dbg !18846, !tbaa !3288
  %mul = mul i64 %2, %3, !dbg !18847
  %call = call noalias i8* @xmalloc(i64 %mul), !dbg !18848
  ret i8* %call, !dbg !18849
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xmalloc(i64 %n) #4 !dbg !18850 !ctir !2013 {
entry:
  %n.addr = alloca i64, align 8
  %p = alloca i8*, align 8, !ctir !53
  store i64 %n, i64* %n.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18852, metadata !DIExpression()), !dbg !18853
  call void @llvm.dbg.declare(metadata i8** %p, metadata !18854, metadata !DIExpression()), !dbg !18855
  %0 = load i64, i64* %n.addr, align 8, !dbg !18856, !tbaa !3288
  %call = call noalias i8* @malloc(i64 %0) #9, !dbg !18857
  store i8* %call, i8** %p, align 8, !dbg !18855, !tbaa !2648
  %1 = load i8*, i8** %p, align 8, !dbg !18858, !tbaa !2648
  %tobool = icmp ne i8* %1, null, !dbg !18858
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !18860

land.lhs.true:                                    ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !18861, !tbaa !3288
  %cmp = icmp ne i64 %2, 0, !dbg !18862
  br i1 %cmp, label %if.then, label %if.end, !dbg !18863

if.then:                                          ; preds = %land.lhs.true
  call void @xalloc_die() #15, !dbg !18864
  unreachable, !dbg !18864

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i8*, i8** %p, align 8, !dbg !18865, !tbaa !2648
  ret i8* %3, !dbg !18866
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xnrealloc(i8* %p, i64 %n, i64 %s) #4 !dbg !18867 !ctir !2007 {
entry:
  %p.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !18868, metadata !DIExpression()), !dbg !18869
  store i64 %n, i64* %n.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18870, metadata !DIExpression()), !dbg !18871
  store i64 %s, i64* %s.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !18872, metadata !DIExpression()), !dbg !18873
  %0 = load i64, i64* %s.addr, align 8, !dbg !18874, !tbaa !3288
  %div = udiv i64 9223372036854775807, %0, !dbg !18874
  %1 = load i64, i64* %n.addr, align 8, !dbg !18874, !tbaa !3288
  %cmp = icmp ult i64 %div, %1, !dbg !18874
  br i1 %cmp, label %if.then, label %if.end, !dbg !18876

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !18877
  unreachable, !dbg !18877

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %p.addr, align 8, !dbg !18878, !tbaa !2648
  %3 = load i64, i64* %n.addr, align 8, !dbg !18879, !tbaa !3288
  %4 = load i64, i64* %s.addr, align 8, !dbg !18880, !tbaa !3288
  %mul = mul i64 %3, %4, !dbg !18881
  %call = call i8* @xrealloc(i8* %2, i64 %mul), !dbg !18882
  ret i8* %call, !dbg !18883
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xrealloc(i8* %p, i64 %n) #4 !dbg !18884 !ctir !2015 {
entry:
  %retval = alloca i8*, align 8
  %p.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !18885, metadata !DIExpression()), !dbg !18886
  store i64 %n, i64* %n.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18887, metadata !DIExpression()), !dbg !18888
  %0 = load i64, i64* %n.addr, align 8, !dbg !18889, !tbaa !3288
  %tobool = icmp ne i64 %0, 0, !dbg !18889
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !18891

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %p.addr, align 8, !dbg !18892, !tbaa !2648
  %tobool1 = icmp ne i8* %1, null, !dbg !18892
  br i1 %tobool1, label %if.then, label %if.end, !dbg !18893

if.then:                                          ; preds = %land.lhs.true
  %2 = load i8*, i8** %p.addr, align 8, !dbg !18894, !tbaa !2648
  call void @free(i8* %2) #9, !dbg !18896
  store i8* null, i8** %retval, align 8, !dbg !18897
  br label %return, !dbg !18897

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i8*, i8** %p.addr, align 8, !dbg !18898, !tbaa !2648
  %4 = load i64, i64* %n.addr, align 8, !dbg !18899, !tbaa !3288
  %call = call i8* @realloc(i8* %3, i64 %4) #9, !dbg !18900
  store i8* %call, i8** %p.addr, align 8, !dbg !18901, !tbaa !2648
  %5 = load i8*, i8** %p.addr, align 8, !dbg !18902, !tbaa !2648
  %tobool2 = icmp ne i8* %5, null, !dbg !18902
  br i1 %tobool2, label %if.end6, label %land.lhs.true3, !dbg !18904

land.lhs.true3:                                   ; preds = %if.end
  %6 = load i64, i64* %n.addr, align 8, !dbg !18905, !tbaa !3288
  %tobool4 = icmp ne i64 %6, 0, !dbg !18905
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !18906

if.then5:                                         ; preds = %land.lhs.true3
  call void @xalloc_die() #15, !dbg !18907
  unreachable, !dbg !18907

if.end6:                                          ; preds = %land.lhs.true3, %if.end
  %7 = load i8*, i8** %p.addr, align 8, !dbg !18908, !tbaa !2648
  store i8* %7, i8** %retval, align 8, !dbg !18909
  br label %return, !dbg !18909

return:                                           ; preds = %if.end6, %if.then
  %8 = load i8*, i8** %retval, align 8, !dbg !18910
  ret i8* %8, !dbg !18910
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @x2nrealloc(i8* %p, i64* %pn, i64 %s) #4 !dbg !18911 !ctir !2009 {
entry:
  %p.addr = alloca i8*, align 8
  %pn.addr = alloca i64*, align 8
  %s.addr = alloca i64, align 8
  %n = alloca i64, align 8, !ctir !55
  store i8* %p, i8** %p.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !18912, metadata !DIExpression()), !dbg !18913
  store i64* %pn, i64** %pn.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i64** %pn.addr, metadata !18914, metadata !DIExpression()), !dbg !18915
  store i64 %s, i64* %s.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !18916, metadata !DIExpression()), !dbg !18917
  call void @llvm.dbg.declare(metadata i64* %n, metadata !18918, metadata !DIExpression()), !dbg !18919
  %0 = load i64*, i64** %pn.addr, align 8, !dbg !18920, !tbaa !2648
  %1 = load i64, i64* %0, align 8, !dbg !18921, !tbaa !3288, !ctir !55
  store i64 %1, i64* %n, align 8, !dbg !18919, !tbaa !3288
  %2 = load i8*, i8** %p.addr, align 8, !dbg !18922, !tbaa !2648
  %tobool = icmp ne i8* %2, null, !dbg !18922
  br i1 %tobool, label %if.else, label %if.then, !dbg !18924

if.then:                                          ; preds = %entry
  %3 = load i64, i64* %n, align 8, !dbg !18925, !tbaa !3288
  %tobool1 = icmp ne i64 %3, 0, !dbg !18925
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !18928

if.then2:                                         ; preds = %if.then
  %4 = load i64, i64* %s.addr, align 8, !dbg !18929, !tbaa !3288
  %div = udiv i64 128, %4, !dbg !18931
  store i64 %div, i64* %n, align 8, !dbg !18932, !tbaa !3288
  %5 = load i64, i64* %n, align 8, !dbg !18933, !tbaa !3288
  %tobool3 = icmp ne i64 %5, 0, !dbg !18934
  %lnot = xor i1 %tobool3, true, !dbg !18934
  %lnot.ext = zext i1 %lnot to i32, !dbg !18934
  %conv = sext i32 %lnot.ext to i64, !dbg !18934
  %6 = load i64, i64* %n, align 8, !dbg !18935, !tbaa !3288
  %add = add i64 %6, %conv, !dbg !18935
  store i64 %add, i64* %n, align 8, !dbg !18935, !tbaa !3288
  br label %if.end, !dbg !18936

if.end:                                           ; preds = %if.then2, %if.then
  %7 = load i64, i64* %s.addr, align 8, !dbg !18937, !tbaa !3288
  %div4 = udiv i64 9223372036854775807, %7, !dbg !18937
  %8 = load i64, i64* %n, align 8, !dbg !18937, !tbaa !3288
  %cmp = icmp ult i64 %div4, %8, !dbg !18937
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !18939

if.then6:                                         ; preds = %if.end
  call void @xalloc_die() #15, !dbg !18940
  unreachable, !dbg !18940

if.end7:                                          ; preds = %if.end
  br label %if.end16, !dbg !18941

if.else:                                          ; preds = %entry
  %9 = load i64, i64* %s.addr, align 8, !dbg !18942, !tbaa !3288
  %div8 = udiv i64 6148914691236517204, %9, !dbg !18945
  %10 = load i64, i64* %n, align 8, !dbg !18946, !tbaa !3288
  %cmp9 = icmp ule i64 %div8, %10, !dbg !18947
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !18948

if.then11:                                        ; preds = %if.else
  call void @xalloc_die() #15, !dbg !18949
  unreachable, !dbg !18949

if.end12:                                         ; preds = %if.else
  %11 = load i64, i64* %n, align 8, !dbg !18950, !tbaa !3288
  %div13 = udiv i64 %11, 2, !dbg !18951
  %add14 = add i64 %div13, 1, !dbg !18952
  %12 = load i64, i64* %n, align 8, !dbg !18953, !tbaa !3288
  %add15 = add i64 %12, %add14, !dbg !18953
  store i64 %add15, i64* %n, align 8, !dbg !18953, !tbaa !3288
  br label %if.end16

if.end16:                                         ; preds = %if.end12, %if.end7
  %13 = load i64, i64* %n, align 8, !dbg !18954, !tbaa !3288
  %14 = load i64*, i64** %pn.addr, align 8, !dbg !18955, !tbaa !2648
  store i64 %13, i64* %14, align 8, !dbg !18956, !tbaa !3288, !ctir !55
  %15 = load i8*, i8** %p.addr, align 8, !dbg !18957, !tbaa !2648
  %16 = load i64, i64* %n, align 8, !dbg !18958, !tbaa !3288
  %17 = load i64, i64* %s.addr, align 8, !dbg !18959, !tbaa !3288
  %mul = mul i64 %16, %17, !dbg !18960
  %call = call i8* @xrealloc(i8* %15, i64 %mul), !dbg !18961
  ret i8* %call, !dbg !18962
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xcharalloc(i64 %n) #4 !dbg !18963 !ctir !2011 {
entry:
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18964, metadata !DIExpression()), !dbg !18965
  %0 = load i64, i64* %n.addr, align 8, !dbg !18966, !tbaa !3288
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !18966
  ret i8* %call, !dbg !18967
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @x2realloc(i8* %p, i64* %pn) #4 !dbg !18968 !ctir !2017 {
entry:
  %p.addr = alloca i8*, align 8
  %pn.addr = alloca i64*, align 8
  store i8* %p, i8** %p.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !18969, metadata !DIExpression()), !dbg !18970
  store i64* %pn, i64** %pn.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i64** %pn.addr, metadata !18971, metadata !DIExpression()), !dbg !18972
  %0 = load i8*, i8** %p.addr, align 8, !dbg !18973, !tbaa !2648
  %1 = load i64*, i64** %pn.addr, align 8, !dbg !18974, !tbaa !2648
  %call = call i8* @x2nrealloc(i8* %0, i64* %1, i64 1), !dbg !18975
  ret i8* %call, !dbg !18976
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xzalloc(i64 %s) #4 !dbg !18977 !ctir !2013 {
entry:
  %s.addr = alloca i64, align 8
  store i64 %s, i64* %s.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !18978, metadata !DIExpression()), !dbg !18979
  %0 = load i64, i64* %s.addr, align 8, !dbg !18980, !tbaa !3288
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !18981
  %1 = load i64, i64* %s.addr, align 8, !dbg !18982, !tbaa !3288
  call void @llvm.memset.p0i8.i64(i8* align 1 %call, i8 0, i64 %1, i1 false), !dbg !18983
  ret i8* %call, !dbg !18984
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xcalloc(i64 %n, i64 %s) #4 !dbg !18985 !ctir !2005 {
entry:
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  %p = alloca i8*, align 8, !ctir !53
  store i64 %n, i64* %n.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18986, metadata !DIExpression()), !dbg !18987
  store i64 %s, i64* %s.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !18988, metadata !DIExpression()), !dbg !18989
  call void @llvm.dbg.declare(metadata i8** %p, metadata !18990, metadata !DIExpression()), !dbg !18991
  %0 = load i64, i64* %s.addr, align 8, !dbg !18992, !tbaa !3288
  %div = udiv i64 9223372036854775807, %0, !dbg !18992
  %1 = load i64, i64* %n.addr, align 8, !dbg !18992, !tbaa !3288
  %cmp = icmp ult i64 %div, %1, !dbg !18992
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !18994

lor.lhs.false:                                    ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !18995, !tbaa !3288
  %3 = load i64, i64* %s.addr, align 8, !dbg !18996, !tbaa !3288
  %call = call noalias i8* @calloc(i64 %2, i64 %3) #9, !dbg !18997
  store i8* %call, i8** %p, align 8, !dbg !18998, !tbaa !2648
  %tobool = icmp ne i8* %call, null, !dbg !18998
  br i1 %tobool, label %if.end, label %if.then, !dbg !18999

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @xalloc_die() #15, !dbg !19000
  unreachable, !dbg !19000

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i8*, i8** %p, align 8, !dbg !19001, !tbaa !2648
  ret i8* %4, !dbg !19002
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xmemdup(i8* %p, i64 %s) #4 !dbg !19003 !ctir !513 {
entry:
  %p.addr = alloca i8*, align 8
  %s.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !19004, metadata !DIExpression()), !dbg !19005
  store i64 %s, i64* %s.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !19006, metadata !DIExpression()), !dbg !19007
  %0 = load i64, i64* %s.addr, align 8, !dbg !19008, !tbaa !3288
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !19009
  %1 = load i8*, i8** %p.addr, align 8, !dbg !19010, !tbaa !2648
  %2 = load i64, i64* %s.addr, align 8, !dbg !19011, !tbaa !3288
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %call, i8* align 1 %1, i64 %2, i1 false), !dbg !19012
  ret i8* %call, !dbg !19013
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xstrdup(i8* %string) #4 !dbg !19014 !ctir !218 {
entry:
  %string.addr = alloca i8*, align 8
  store i8* %string, i8** %string.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !19015, metadata !DIExpression()), !dbg !19016
  %0 = load i8*, i8** %string.addr, align 8, !dbg !19017, !tbaa !2648
  %1 = load i8*, i8** %string.addr, align 8, !dbg !19018, !tbaa !2648
  %call = call i64 @strlen(i8* %1) #14, !dbg !19019
  %add = add i64 %call, 1, !dbg !19020
  %call1 = call i8* @xmemdup(i8* %0, i64 %add), !dbg !19021
  ret i8* %call1, !dbg !19022
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @xalloc_die() #0 !dbg !19023 !ctir !200 {
entry:
  %0 = load volatile i32, i32* @exit_failure, align 4, !dbg !19025, !tbaa !2635
  %call = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.462, i64 0, i64 0)) #9, !dbg !19026
  call void (i32, i32, i8*, ...) @error(i32 %0, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.463, i64 0, i64 0), i8* %call), !dbg !19027
  call void @abort() #13, !dbg !19028
  unreachable, !dbg !19028
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @xstrtoul(i8* %s, i8** %ptr, i32 %strtol_base, i64* %val, i8* %valid_suffixes) #4 !dbg !19029 !ctir !2034 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 8
  %ptr.addr = alloca i8**, align 8
  %strtol_base.addr = alloca i32, align 4
  %val.addr = alloca i64*, align 8
  %valid_suffixes.addr = alloca i8*, align 8
  %t_ptr = alloca i8*, align 8, !ctir !9
  %p = alloca i8**, align 8, !ctir !184
  %tmp = alloca i64, align 8, !ctir !57
  %err = alloca i32, align 4, !ctir !2036
  %q = alloca i8*, align 8, !ctir !180
  %ch = alloca i8, align 1, !ctir !556
  %base = alloca i32, align 4, !ctir !7
  %suffixes = alloca i32, align 4, !ctir !7
  %overflow = alloca i32, align 4, !ctir !2036
  store i8* %s, i8** %s.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !19031, metadata !DIExpression()), !dbg !19032
  store i8** %ptr, i8*** %ptr.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8*** %ptr.addr, metadata !19033, metadata !DIExpression()), !dbg !19034
  store i32 %strtol_base, i32* %strtol_base.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %strtol_base.addr, metadata !19035, metadata !DIExpression()), !dbg !19036
  store i64* %val, i64** %val.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i64** %val.addr, metadata !19037, metadata !DIExpression()), !dbg !19038
  store i8* %valid_suffixes, i8** %valid_suffixes.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %valid_suffixes.addr, metadata !19039, metadata !DIExpression()), !dbg !19040
  call void @llvm.dbg.declare(metadata i8** %t_ptr, metadata !19041, metadata !DIExpression()), !dbg !19042
  call void @llvm.dbg.declare(metadata i8*** %p, metadata !19043, metadata !DIExpression()), !dbg !19044
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !19045, metadata !DIExpression()), !dbg !19046
  call void @llvm.dbg.declare(metadata i32* %err, metadata !19047, metadata !DIExpression()), !dbg !19048
  store i32 0, i32* %err, align 4, !dbg !19048, !tbaa !3295
  %0 = load i32, i32* %strtol_base.addr, align 4, !dbg !19049, !tbaa !2635
  %cmp = icmp sle i32 0, %0, !dbg !19049
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !19049

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %strtol_base.addr, align 4, !dbg !19049, !tbaa !2635
  %cmp1 = icmp sle i32 %1, 36, !dbg !19049
  br i1 %cmp1, label %if.then, label %if.else, !dbg !19052

if.then:                                          ; preds = %land.lhs.true
  br label %if.end, !dbg !19052

if.else:                                          ; preds = %land.lhs.true, %entry
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.466, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.467, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__.xstrtoul, i64 0, i64 0)) #13, !dbg !19049
  unreachable, !dbg !19049

if.end:                                           ; preds = %if.then
  %2 = load i8**, i8*** %ptr.addr, align 8, !dbg !19053, !tbaa !2648
  %tobool = icmp ne i8** %2, null, !dbg !19053
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !19053

cond.true:                                        ; preds = %if.end
  %3 = load i8**, i8*** %ptr.addr, align 8, !dbg !19054, !tbaa !2648
  br label %cond.end, !dbg !19053

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !19053

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8** [ %3, %cond.true ], [ %t_ptr, %cond.false ], !dbg !19053
  store i8** %cond, i8*** %p, align 8, !dbg !19055, !tbaa !2648
  %call = call i32* @__errno_location() #16, !dbg !19056
  store i32 0, i32* %call, align 4, !dbg !19057, !tbaa !2635, !ctir !7
  call void @llvm.dbg.declare(metadata i8** %q, metadata !19058, metadata !DIExpression()), !dbg !19061
  %4 = load i8*, i8** %s.addr, align 8, !dbg !19062, !tbaa !2648
  store i8* %4, i8** %q, align 8, !dbg !19061, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !19063, metadata !DIExpression()), !dbg !19064
  %5 = load i8*, i8** %q, align 8, !dbg !19065, !tbaa !2648
  %6 = load i8, i8* %5, align 1, !dbg !19066, !tbaa !3295, !ctir !181
  store i8 %6, i8* %ch, align 1, !dbg !19064, !tbaa !3295
  br label %while.cond, !dbg !19067

while.cond:                                       ; preds = %while.body, %cond.end
  %call2 = call i16** @__ctype_b_loc() #16, !dbg !19068
  %7 = load i16*, i16** %call2, align 8, !dbg !19068, !tbaa !2648, !ctir !1110
  %8 = load i8, i8* %ch, align 1, !dbg !19068, !tbaa !3295
  %conv = zext i8 %8 to i32, !dbg !19068
  %idxprom = sext i32 %conv to i64, !dbg !19068
  %arrayidx = getelementptr inbounds i16, i16* %7, i64 %idxprom, !dbg !19068, !ctir !1110
  %9 = load i16, i16* %arrayidx, align 2, !dbg !19068, !tbaa !14717
  %conv3 = zext i16 %9 to i32, !dbg !19068
  %and = and i32 %conv3, 8192, !dbg !19068
  %tobool4 = icmp ne i32 %and, 0, !dbg !19067
  br i1 %tobool4, label %while.body, label %while.end, !dbg !19067

while.body:                                       ; preds = %while.cond
  %10 = load i8*, i8** %q, align 8, !dbg !19069, !tbaa !2648
  %incdec.ptr = getelementptr inbounds i8, i8* %10, i32 1, !dbg !19069
  store i8* %incdec.ptr, i8** %q, align 8, !dbg !19069, !tbaa !2648
  %11 = load i8, i8* %incdec.ptr, align 1, !dbg !19070, !tbaa !3295, !ctir !181
  store i8 %11, i8* %ch, align 1, !dbg !19071, !tbaa !3295
  br label %while.cond, !dbg !19067, !llvm.loop !19072

while.end:                                        ; preds = %while.cond
  %12 = load i8, i8* %ch, align 1, !dbg !19074, !tbaa !3295
  %conv5 = zext i8 %12 to i32, !dbg !19074
  %cmp6 = icmp eq i32 %conv5, 45, !dbg !19076
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !19077

if.then8:                                         ; preds = %while.end
  store i32 4, i32* %retval, align 4, !dbg !19078
  br label %return, !dbg !19078

if.end9:                                          ; preds = %while.end
  %13 = load i8*, i8** %s.addr, align 8, !dbg !19079, !tbaa !2648
  %14 = load i8**, i8*** %p, align 8, !dbg !19080, !tbaa !2648
  %15 = load i32, i32* %strtol_base.addr, align 4, !dbg !19081, !tbaa !2635
  %call10 = call i64 @strtoul(i8* %13, i8** %14, i32 %15) #9, !dbg !19082
  store i64 %call10, i64* %tmp, align 8, !dbg !19083, !tbaa !3288
  %16 = load i8**, i8*** %p, align 8, !dbg !19084, !tbaa !2648
  %17 = load i8*, i8** %16, align 8, !dbg !19086, !tbaa !2648, !ctir !9
  %18 = load i8*, i8** %s.addr, align 8, !dbg !19087, !tbaa !2648
  %cmp11 = icmp eq i8* %17, %18, !dbg !19088
  br i1 %cmp11, label %if.then13, label %if.else25, !dbg !19089

if.then13:                                        ; preds = %if.end9
  %19 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !19090, !tbaa !2648
  %tobool14 = icmp ne i8* %19, null, !dbg !19090
  br i1 %tobool14, label %land.lhs.true15, label %if.else23, !dbg !19093

land.lhs.true15:                                  ; preds = %if.then13
  %20 = load i8**, i8*** %p, align 8, !dbg !19094, !tbaa !2648
  %21 = load i8*, i8** %20, align 8, !dbg !19095, !tbaa !2648, !ctir !9
  %22 = load i8, i8* %21, align 1, !dbg !19096, !tbaa !3295, !ctir !10
  %conv16 = sext i8 %22 to i32, !dbg !19096
  %tobool17 = icmp ne i32 %conv16, 0, !dbg !19096
  br i1 %tobool17, label %land.lhs.true18, label %if.else23, !dbg !19097

land.lhs.true18:                                  ; preds = %land.lhs.true15
  %23 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !19098, !tbaa !2648
  %24 = load i8**, i8*** %p, align 8, !dbg !19099, !tbaa !2648
  %25 = load i8*, i8** %24, align 8, !dbg !19100, !tbaa !2648, !ctir !9
  %26 = load i8, i8* %25, align 1, !dbg !19101, !tbaa !3295, !ctir !10
  %conv19 = sext i8 %26 to i32, !dbg !19101
  %call20 = call i8* @strchr(i8* %23, i32 %conv19) #14, !dbg !19102
  %tobool21 = icmp ne i8* %call20, null, !dbg !19102
  br i1 %tobool21, label %if.then22, label %if.else23, !dbg !19103

if.then22:                                        ; preds = %land.lhs.true18
  store i64 1, i64* %tmp, align 8, !dbg !19104, !tbaa !3288
  br label %if.end24, !dbg !19105

if.else23:                                        ; preds = %land.lhs.true18, %land.lhs.true15, %if.then13
  store i32 4, i32* %retval, align 4, !dbg !19106
  br label %return, !dbg !19106

if.end24:                                         ; preds = %if.then22
  br label %if.end36, !dbg !19107

if.else25:                                        ; preds = %if.end9
  %call26 = call i32* @__errno_location() #16, !dbg !19108
  %27 = load i32, i32* %call26, align 4, !dbg !19108, !tbaa !2635, !ctir !7
  %cmp27 = icmp ne i32 %27, 0, !dbg !19110
  br i1 %cmp27, label %if.then29, label %if.end35, !dbg !19111

if.then29:                                        ; preds = %if.else25
  %call30 = call i32* @__errno_location() #16, !dbg !19112
  %28 = load i32, i32* %call30, align 4, !dbg !19112, !tbaa !2635, !ctir !7
  %cmp31 = icmp ne i32 %28, 34, !dbg !19115
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !19116

if.then33:                                        ; preds = %if.then29
  store i32 4, i32* %retval, align 4, !dbg !19117
  br label %return, !dbg !19117

if.end34:                                         ; preds = %if.then29
  store i32 1, i32* %err, align 4, !dbg !19118, !tbaa !3295
  br label %if.end35, !dbg !19119

if.end35:                                         ; preds = %if.end34, %if.else25
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.end24
  %29 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !19120, !tbaa !2648
  %tobool37 = icmp ne i8* %29, null, !dbg !19120
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !19122

if.then38:                                        ; preds = %if.end36
  %30 = load i64, i64* %tmp, align 8, !dbg !19123, !tbaa !3288
  %31 = load i64*, i64** %val.addr, align 8, !dbg !19125, !tbaa !2648
  store i64 %30, i64* %31, align 8, !dbg !19126, !tbaa !3288, !ctir !57
  %32 = load i32, i32* %err, align 4, !dbg !19127, !tbaa !3295
  store i32 %32, i32* %retval, align 4, !dbg !19128
  br label %return, !dbg !19128

if.end39:                                         ; preds = %if.end36
  %33 = load i8**, i8*** %p, align 8, !dbg !19129, !tbaa !2648
  %34 = load i8*, i8** %33, align 8, !dbg !19131, !tbaa !2648, !ctir !9
  %35 = load i8, i8* %34, align 1, !dbg !19132, !tbaa !3295, !ctir !10
  %conv40 = sext i8 %35 to i32, !dbg !19132
  %cmp41 = icmp ne i32 %conv40, 0, !dbg !19133
  br i1 %cmp41, label %if.then43, label %if.end98, !dbg !19134

if.then43:                                        ; preds = %if.end39
  call void @llvm.dbg.declare(metadata i32* %base, metadata !19135, metadata !DIExpression()), !dbg !19137
  store i32 1024, i32* %base, align 4, !dbg !19137, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %suffixes, metadata !19138, metadata !DIExpression()), !dbg !19139
  store i32 1, i32* %suffixes, align 4, !dbg !19139, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %overflow, metadata !19140, metadata !DIExpression()), !dbg !19141
  %36 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !19142, !tbaa !2648
  %37 = load i8**, i8*** %p, align 8, !dbg !19144, !tbaa !2648
  %38 = load i8*, i8** %37, align 8, !dbg !19145, !tbaa !2648, !ctir !9
  %39 = load i8, i8* %38, align 1, !dbg !19146, !tbaa !3295, !ctir !10
  %conv44 = sext i8 %39 to i32, !dbg !19146
  %call45 = call i8* @strchr(i8* %36, i32 %conv44) #14, !dbg !19147
  %tobool46 = icmp ne i8* %call45, null, !dbg !19147
  br i1 %tobool46, label %if.end48, label %if.then47, !dbg !19148

if.then47:                                        ; preds = %if.then43
  %40 = load i64, i64* %tmp, align 8, !dbg !19149, !tbaa !3288
  %41 = load i64*, i64** %val.addr, align 8, !dbg !19151, !tbaa !2648
  store i64 %40, i64* %41, align 8, !dbg !19152, !tbaa !3288, !ctir !57
  %42 = load i32, i32* %err, align 4, !dbg !19153, !tbaa !3295
  %or = or i32 %42, 2, !dbg !19154
  store i32 %or, i32* %retval, align 4, !dbg !19155
  br label %return, !dbg !19155

if.end48:                                         ; preds = %if.then43
  %43 = load i8**, i8*** %p, align 8, !dbg !19156, !tbaa !2648
  %44 = load i8*, i8** %43, align 8, !dbg !19157, !tbaa !2648, !ctir !9
  %45 = load i8, i8* %44, align 1, !dbg !19158, !tbaa !3295, !ctir !10
  %conv49 = sext i8 %45 to i32, !dbg !19158
  switch i32 %conv49, label %sw.epilog66 [
    i32 69, label %sw.bb
    i32 71, label %sw.bb
    i32 103, label %sw.bb
    i32 107, label %sw.bb
    i32 75, label %sw.bb
    i32 77, label %sw.bb
    i32 109, label %sw.bb
    i32 80, label %sw.bb
    i32 84, label %sw.bb
    i32 116, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !19159

sw.bb:                                            ; preds = %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48
  %46 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !19160, !tbaa !2648
  %call50 = call i8* @strchr(i8* %46, i32 48) #14, !dbg !19163
  %tobool51 = icmp ne i8* %call50, null, !dbg !19163
  br i1 %tobool51, label %if.then52, label %if.end65, !dbg !19164

if.then52:                                        ; preds = %sw.bb
  %47 = load i8**, i8*** %p, align 8, !dbg !19165, !tbaa !2648
  %arrayidx53 = getelementptr inbounds i8*, i8** %47, i64 0, !dbg !19165, !ctir !184
  %48 = load i8*, i8** %arrayidx53, align 8, !dbg !19165, !tbaa !2648
  %arrayidx54 = getelementptr inbounds i8, i8* %48, i64 1, !dbg !19165, !ctir !9
  %49 = load i8, i8* %arrayidx54, align 1, !dbg !19165, !tbaa !3295
  %conv55 = sext i8 %49 to i32, !dbg !19165
  switch i32 %conv55, label %sw.epilog [
    i32 105, label %sw.bb56
    i32 66, label %sw.bb64
    i32 68, label %sw.bb64
  ], !dbg !19166

sw.bb56:                                          ; preds = %if.then52
  %50 = load i8**, i8*** %p, align 8, !dbg !19167, !tbaa !2648
  %arrayidx57 = getelementptr inbounds i8*, i8** %50, i64 0, !dbg !19167, !ctir !184
  %51 = load i8*, i8** %arrayidx57, align 8, !dbg !19167, !tbaa !2648
  %arrayidx58 = getelementptr inbounds i8, i8* %51, i64 2, !dbg !19167, !ctir !9
  %52 = load i8, i8* %arrayidx58, align 1, !dbg !19167, !tbaa !3295
  %conv59 = sext i8 %52 to i32, !dbg !19167
  %cmp60 = icmp eq i32 %conv59, 66, !dbg !19170
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !19171

if.then62:                                        ; preds = %sw.bb56
  %53 = load i32, i32* %suffixes, align 4, !dbg !19172, !tbaa !2635
  %add = add nsw i32 %53, 2, !dbg !19172
  store i32 %add, i32* %suffixes, align 4, !dbg !19172, !tbaa !2635
  br label %if.end63, !dbg !19173

if.end63:                                         ; preds = %if.then62, %sw.bb56
  br label %sw.epilog, !dbg !19174

sw.bb64:                                          ; preds = %if.then52, %if.then52
  store i32 1000, i32* %base, align 4, !dbg !19175, !tbaa !2635
  %54 = load i32, i32* %suffixes, align 4, !dbg !19176, !tbaa !2635
  %inc = add nsw i32 %54, 1, !dbg !19176
  store i32 %inc, i32* %suffixes, align 4, !dbg !19176, !tbaa !2635
  br label %sw.epilog, !dbg !19177

sw.epilog:                                        ; preds = %if.then52, %sw.bb64, %if.end63
  br label %if.end65, !dbg !19178

if.end65:                                         ; preds = %sw.epilog, %sw.bb
  br label %sw.epilog66, !dbg !19179

sw.epilog66:                                      ; preds = %if.end65, %if.end48
  %55 = load i8**, i8*** %p, align 8, !dbg !19180, !tbaa !2648
  %56 = load i8*, i8** %55, align 8, !dbg !19181, !tbaa !2648, !ctir !9
  %57 = load i8, i8* %56, align 1, !dbg !19182, !tbaa !3295, !ctir !10
  %conv67 = sext i8 %57 to i32, !dbg !19182
  switch i32 %conv67, label %sw.default [
    i32 98, label %sw.bb68
    i32 66, label %sw.bb70
    i32 99, label %sw.bb72
    i32 69, label %sw.bb73
    i32 71, label %sw.bb75
    i32 103, label %sw.bb75
    i32 107, label %sw.bb77
    i32 75, label %sw.bb77
    i32 77, label %sw.bb79
    i32 109, label %sw.bb79
    i32 80, label %sw.bb81
    i32 84, label %sw.bb83
    i32 116, label %sw.bb83
    i32 119, label %sw.bb85
    i32 89, label %sw.bb87
    i32 90, label %sw.bb89
  ], !dbg !19183

sw.bb68:                                          ; preds = %sw.epilog66
  %call69 = call i32 @bkm_scale(i64* %tmp, i32 512), !dbg !19184
  store i32 %call69, i32* %overflow, align 4, !dbg !19186, !tbaa !3295
  br label %sw.epilog92, !dbg !19187

sw.bb70:                                          ; preds = %sw.epilog66
  %call71 = call i32 @bkm_scale(i64* %tmp, i32 1024), !dbg !19188
  store i32 %call71, i32* %overflow, align 4, !dbg !19189, !tbaa !3295
  br label %sw.epilog92, !dbg !19190

sw.bb72:                                          ; preds = %sw.epilog66
  store i32 0, i32* %overflow, align 4, !dbg !19191, !tbaa !3295
  br label %sw.epilog92, !dbg !19192

sw.bb73:                                          ; preds = %sw.epilog66
  %58 = load i32, i32* %base, align 4, !dbg !19193, !tbaa !2635
  %call74 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %58, i32 6), !dbg !19194
  store i32 %call74, i32* %overflow, align 4, !dbg !19195, !tbaa !3295
  br label %sw.epilog92, !dbg !19196

sw.bb75:                                          ; preds = %sw.epilog66, %sw.epilog66
  %59 = load i32, i32* %base, align 4, !dbg !19197, !tbaa !2635
  %call76 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %59, i32 3), !dbg !19198
  store i32 %call76, i32* %overflow, align 4, !dbg !19199, !tbaa !3295
  br label %sw.epilog92, !dbg !19200

sw.bb77:                                          ; preds = %sw.epilog66, %sw.epilog66
  %60 = load i32, i32* %base, align 4, !dbg !19201, !tbaa !2635
  %call78 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %60, i32 1), !dbg !19202
  store i32 %call78, i32* %overflow, align 4, !dbg !19203, !tbaa !3295
  br label %sw.epilog92, !dbg !19204

sw.bb79:                                          ; preds = %sw.epilog66, %sw.epilog66
  %61 = load i32, i32* %base, align 4, !dbg !19205, !tbaa !2635
  %call80 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %61, i32 2), !dbg !19206
  store i32 %call80, i32* %overflow, align 4, !dbg !19207, !tbaa !3295
  br label %sw.epilog92, !dbg !19208

sw.bb81:                                          ; preds = %sw.epilog66
  %62 = load i32, i32* %base, align 4, !dbg !19209, !tbaa !2635
  %call82 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %62, i32 5), !dbg !19210
  store i32 %call82, i32* %overflow, align 4, !dbg !19211, !tbaa !3295
  br label %sw.epilog92, !dbg !19212

sw.bb83:                                          ; preds = %sw.epilog66, %sw.epilog66
  %63 = load i32, i32* %base, align 4, !dbg !19213, !tbaa !2635
  %call84 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %63, i32 4), !dbg !19214
  store i32 %call84, i32* %overflow, align 4, !dbg !19215, !tbaa !3295
  br label %sw.epilog92, !dbg !19216

sw.bb85:                                          ; preds = %sw.epilog66
  %call86 = call i32 @bkm_scale(i64* %tmp, i32 2), !dbg !19217
  store i32 %call86, i32* %overflow, align 4, !dbg !19218, !tbaa !3295
  br label %sw.epilog92, !dbg !19219

sw.bb87:                                          ; preds = %sw.epilog66
  %64 = load i32, i32* %base, align 4, !dbg !19220, !tbaa !2635
  %call88 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %64, i32 8), !dbg !19221
  store i32 %call88, i32* %overflow, align 4, !dbg !19222, !tbaa !3295
  br label %sw.epilog92, !dbg !19223

sw.bb89:                                          ; preds = %sw.epilog66
  %65 = load i32, i32* %base, align 4, !dbg !19224, !tbaa !2635
  %call90 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %65, i32 7), !dbg !19225
  store i32 %call90, i32* %overflow, align 4, !dbg !19226, !tbaa !3295
  br label %sw.epilog92, !dbg !19227

sw.default:                                       ; preds = %sw.epilog66
  %66 = load i64, i64* %tmp, align 8, !dbg !19228, !tbaa !3288
  %67 = load i64*, i64** %val.addr, align 8, !dbg !19229, !tbaa !2648
  store i64 %66, i64* %67, align 8, !dbg !19230, !tbaa !3288, !ctir !57
  %68 = load i32, i32* %err, align 4, !dbg !19231, !tbaa !3295
  %or91 = or i32 %68, 2, !dbg !19232
  store i32 %or91, i32* %retval, align 4, !dbg !19233
  br label %return, !dbg !19233

sw.epilog92:                                      ; preds = %sw.bb89, %sw.bb87, %sw.bb85, %sw.bb83, %sw.bb81, %sw.bb79, %sw.bb77, %sw.bb75, %sw.bb73, %sw.bb72, %sw.bb70, %sw.bb68
  %69 = load i32, i32* %overflow, align 4, !dbg !19234, !tbaa !3295
  %70 = load i32, i32* %err, align 4, !dbg !19235, !tbaa !3295
  %or93 = or i32 %70, %69, !dbg !19235
  store i32 %or93, i32* %err, align 4, !dbg !19235, !tbaa !3295
  %71 = load i32, i32* %suffixes, align 4, !dbg !19236, !tbaa !2635
  %72 = load i8**, i8*** %p, align 8, !dbg !19237, !tbaa !2648
  %73 = load i8*, i8** %72, align 8, !dbg !19238, !tbaa !2648, !ctir !9
  %idx.ext = sext i32 %71 to i64, !dbg !19238
  %add.ptr = getelementptr inbounds i8, i8* %73, i64 %idx.ext, !dbg !19238
  store i8* %add.ptr, i8** %72, align 8, !dbg !19238, !tbaa !2648, !ctir !9
  %74 = load i8**, i8*** %p, align 8, !dbg !19239, !tbaa !2648
  %75 = load i8*, i8** %74, align 8, !dbg !19241, !tbaa !2648, !ctir !9
  %76 = load i8, i8* %75, align 1, !dbg !19242, !tbaa !3295, !ctir !10
  %tobool94 = icmp ne i8 %76, 0, !dbg !19242
  br i1 %tobool94, label %if.then95, label %if.end97, !dbg !19243

if.then95:                                        ; preds = %sw.epilog92
  %77 = load i32, i32* %err, align 4, !dbg !19244, !tbaa !3295
  %or96 = or i32 %77, 2, !dbg !19244
  store i32 %or96, i32* %err, align 4, !dbg !19244, !tbaa !3295
  br label %if.end97, !dbg !19245

if.end97:                                         ; preds = %if.then95, %sw.epilog92
  br label %if.end98, !dbg !19246

if.end98:                                         ; preds = %if.end97, %if.end39
  %78 = load i64, i64* %tmp, align 8, !dbg !19247, !tbaa !3288
  %79 = load i64*, i64** %val.addr, align 8, !dbg !19248, !tbaa !2648
  store i64 %78, i64* %79, align 8, !dbg !19249, !tbaa !3288, !ctir !57
  %80 = load i32, i32* %err, align 4, !dbg !19250, !tbaa !3295
  store i32 %80, i32* %retval, align 4, !dbg !19251
  br label %return, !dbg !19251

return:                                           ; preds = %if.end98, %sw.default, %if.then47, %if.then38, %if.then33, %if.else23, %if.then8
  %81 = load i32, i32* %retval, align 4, !dbg !19252
  ret i32 %81, !dbg !19252
}

; Function Attrs: nounwind
declare dso_local i64 @strtoul(i8*, i8**, i32) #2

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale(i64* %x, i32 %scale_factor) #4 !dbg !19253 !ctir !2038 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca i64*, align 8
  %scale_factor.addr = alloca i32, align 4
  store i64* %x, i64** %x.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i64** %x.addr, metadata !19254, metadata !DIExpression()), !dbg !19255
  store i32 %scale_factor, i32* %scale_factor.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %scale_factor.addr, metadata !19256, metadata !DIExpression()), !dbg !19257
  %0 = load i32, i32* %scale_factor.addr, align 4, !dbg !19258, !tbaa !2635
  %conv = sext i32 %0 to i64, !dbg !19258
  %div = udiv i64 -1, %conv, !dbg !19260
  %1 = load i64*, i64** %x.addr, align 8, !dbg !19261, !tbaa !2648
  %2 = load i64, i64* %1, align 8, !dbg !19262, !tbaa !3288, !ctir !57
  %cmp = icmp ult i64 %div, %2, !dbg !19263
  br i1 %cmp, label %if.then, label %if.end, !dbg !19264

if.then:                                          ; preds = %entry
  %3 = load i64*, i64** %x.addr, align 8, !dbg !19265, !tbaa !2648
  store i64 -1, i64* %3, align 8, !dbg !19267, !tbaa !3288, !ctir !57
  store i32 1, i32* %retval, align 4, !dbg !19268
  br label %return, !dbg !19268

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %scale_factor.addr, align 4, !dbg !19269, !tbaa !2635
  %conv2 = sext i32 %4 to i64, !dbg !19269
  %5 = load i64*, i64** %x.addr, align 8, !dbg !19270, !tbaa !2648
  %6 = load i64, i64* %5, align 8, !dbg !19271, !tbaa !3288, !ctir !57
  %mul = mul i64 %6, %conv2, !dbg !19271
  store i64 %mul, i64* %5, align 8, !dbg !19271, !tbaa !3288, !ctir !57
  store i32 0, i32* %retval, align 4, !dbg !19272
  br label %return, !dbg !19272

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !19273
  ret i32 %7, !dbg !19273
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale_by_power(i64* %x, i32 %base, i32 %power) #4 !dbg !19274 !ctir !2040 {
entry:
  %x.addr = alloca i64*, align 8
  %base.addr = alloca i32, align 4
  %power.addr = alloca i32, align 4
  %err = alloca i32, align 4, !ctir !2036
  store i64* %x, i64** %x.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i64** %x.addr, metadata !19275, metadata !DIExpression()), !dbg !19276
  store i32 %base, i32* %base.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %base.addr, metadata !19277, metadata !DIExpression()), !dbg !19278
  store i32 %power, i32* %power.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %power.addr, metadata !19279, metadata !DIExpression()), !dbg !19280
  call void @llvm.dbg.declare(metadata i32* %err, metadata !19281, metadata !DIExpression()), !dbg !19282
  store i32 0, i32* %err, align 4, !dbg !19282, !tbaa !3295
  br label %while.cond, !dbg !19283

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %power.addr, align 4, !dbg !19284, !tbaa !2635
  %dec = add nsw i32 %0, -1, !dbg !19284
  store i32 %dec, i32* %power.addr, align 4, !dbg !19284, !tbaa !2635
  %tobool = icmp ne i32 %0, 0, !dbg !19283
  br i1 %tobool, label %while.body, label %while.end, !dbg !19283

while.body:                                       ; preds = %while.cond
  %1 = load i64*, i64** %x.addr, align 8, !dbg !19285, !tbaa !2648
  %2 = load i32, i32* %base.addr, align 4, !dbg !19286, !tbaa !2635
  %call = call i32 @bkm_scale(i64* %1, i32 %2), !dbg !19287
  %3 = load i32, i32* %err, align 4, !dbg !19288, !tbaa !3295
  %or = or i32 %3, %call, !dbg !19288
  store i32 %or, i32* %err, align 4, !dbg !19288, !tbaa !3295
  br label %while.cond, !dbg !19283, !llvm.loop !19289

while.end:                                        ; preds = %while.cond
  %4 = load i32, i32* %err, align 4, !dbg !19291, !tbaa !3295
  ret i32 %4, !dbg !19292
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xvasprintf(i8* %format, %struct.__va_list_tag* %args) #4 !dbg !19293 !ctir !2045 {
entry:
  %retval = alloca i8*, align 8
  %format.addr = alloca i8*, align 8
  %args.addr = alloca %struct.__va_list_tag*, align 8
  %result = alloca i8*, align 8, !ctir !9
  %argcount = alloca i64, align 8, !ctir !55
  %f = alloca i8*, align 8, !ctir !180
  store i8* %format, i8** %format.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !19295, metadata !DIExpression()), !dbg !19296
  store %struct.__va_list_tag* %args, %struct.__va_list_tag** %args.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %args.addr, metadata !19297, metadata !DIExpression()), !dbg !19298
  call void @llvm.dbg.declare(metadata i8** %result, metadata !19299, metadata !DIExpression()), !dbg !19300
  call void @llvm.dbg.declare(metadata i64* %argcount, metadata !19301, metadata !DIExpression()), !dbg !19303
  store i64 0, i64* %argcount, align 8, !dbg !19303, !tbaa !3288
  call void @llvm.dbg.declare(metadata i8** %f, metadata !19304, metadata !DIExpression()), !dbg !19305
  %0 = load i8*, i8** %format.addr, align 8, !dbg !19306, !tbaa !2648
  store i8* %0, i8** %f, align 8, !dbg !19308, !tbaa !2648
  br label %for.cond, !dbg !19309

for.cond:                                         ; preds = %if.end11, %entry
  %1 = load i8*, i8** %f, align 8, !dbg !19310, !tbaa !2648
  %2 = load i8, i8* %1, align 1, !dbg !19314, !tbaa !3295, !ctir !181
  %conv = sext i8 %2 to i32, !dbg !19314
  %cmp = icmp eq i32 %conv, 0, !dbg !19315
  br i1 %cmp, label %if.then, label %if.end, !dbg !19316

if.then:                                          ; preds = %for.cond
  %3 = load i64, i64* %argcount, align 8, !dbg !19317, !tbaa !3288
  %4 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !19318, !tbaa !2648
  %call = call i8* @xstrcat(i64 %3, %struct.__va_list_tag* %4), !dbg !19319
  store i8* %call, i8** %retval, align 8, !dbg !19320
  br label %return, !dbg !19320

if.end:                                           ; preds = %for.cond
  %5 = load i8*, i8** %f, align 8, !dbg !19321, !tbaa !2648
  %6 = load i8, i8* %5, align 1, !dbg !19323, !tbaa !3295, !ctir !181
  %conv2 = sext i8 %6 to i32, !dbg !19323
  %cmp3 = icmp ne i32 %conv2, 37, !dbg !19324
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !19325

if.then5:                                         ; preds = %if.end
  br label %for.end, !dbg !19326

if.end6:                                          ; preds = %if.end
  %7 = load i8*, i8** %f, align 8, !dbg !19327, !tbaa !2648
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !19327
  store i8* %incdec.ptr, i8** %f, align 8, !dbg !19327, !tbaa !2648
  %8 = load i8*, i8** %f, align 8, !dbg !19328, !tbaa !2648
  %9 = load i8, i8* %8, align 1, !dbg !19330, !tbaa !3295, !ctir !181
  %conv7 = sext i8 %9 to i32, !dbg !19330
  %cmp8 = icmp ne i32 %conv7, 115, !dbg !19331
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !19332

if.then10:                                        ; preds = %if.end6
  br label %for.end, !dbg !19333

if.end11:                                         ; preds = %if.end6
  %10 = load i8*, i8** %f, align 8, !dbg !19334, !tbaa !2648
  %incdec.ptr12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !19334
  store i8* %incdec.ptr12, i8** %f, align 8, !dbg !19334, !tbaa !2648
  %11 = load i64, i64* %argcount, align 8, !dbg !19335, !tbaa !3288
  %inc = add i64 %11, 1, !dbg !19335
  store i64 %inc, i64* %argcount, align 8, !dbg !19335, !tbaa !3288
  br label %for.cond, !dbg !19336, !llvm.loop !19337

for.end:                                          ; preds = %if.then10, %if.then5
  %12 = load i8*, i8** %format.addr, align 8, !dbg !19340, !tbaa !2648
  %13 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !19342, !tbaa !2648
  %call13 = call i32 @vasprintf(i8** %result, i8* %12, %struct.__va_list_tag* %13) #9, !dbg !19343
  %cmp14 = icmp slt i32 %call13, 0, !dbg !19344
  br i1 %cmp14, label %if.then16, label %if.end22, !dbg !19345

if.then16:                                        ; preds = %for.end
  %call17 = call i32* @__errno_location() #16, !dbg !19346
  %14 = load i32, i32* %call17, align 4, !dbg !19346, !tbaa !2635, !ctir !7
  %cmp18 = icmp eq i32 %14, 12, !dbg !19349
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !19350

if.then20:                                        ; preds = %if.then16
  call void @xalloc_die() #15, !dbg !19351
  unreachable, !dbg !19351

if.end21:                                         ; preds = %if.then16
  store i8* null, i8** %retval, align 8, !dbg !19352
  br label %return, !dbg !19352

if.end22:                                         ; preds = %for.end
  %15 = load i8*, i8** %result, align 8, !dbg !19353, !tbaa !2648
  store i8* %15, i8** %retval, align 8, !dbg !19354
  br label %return, !dbg !19354

return:                                           ; preds = %if.end22, %if.end21, %if.then
  %16 = load i8*, i8** %retval, align 8, !dbg !19355
  ret i8* %16, !dbg !19355
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @xstrcat(i64 %argcount, %struct.__va_list_tag* %args) #4 !dbg !19356 !ctir !2054 {
entry:
  %retval = alloca i8*, align 8
  %argcount.addr = alloca i64, align 8
  %args.addr = alloca %struct.__va_list_tag*, align 8
  %result = alloca i8*, align 8, !ctir !9
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !2056
  %totalsize = alloca i64, align 8, !ctir !55
  %i = alloca i64, align 8, !ctir !55
  %p = alloca i8*, align 8, !ctir !9
  %next = alloca i8*, align 8, !ctir !180
  %next12 = alloca i8*, align 8, !ctir !180
  %len = alloca i64, align 8, !ctir !55
  store i64 %argcount, i64* %argcount.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %argcount.addr, metadata !19357, metadata !DIExpression()), !dbg !19358
  store %struct.__va_list_tag* %args, %struct.__va_list_tag** %args.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %args.addr, metadata !19359, metadata !DIExpression()), !dbg !19360
  call void @llvm.dbg.declare(metadata i8** %result, metadata !19361, metadata !DIExpression()), !dbg !19362
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !19363, metadata !DIExpression()), !dbg !19364
  call void @llvm.dbg.declare(metadata i64* %totalsize, metadata !19365, metadata !DIExpression()), !dbg !19366
  call void @llvm.dbg.declare(metadata i64* %i, metadata !19367, metadata !DIExpression()), !dbg !19368
  call void @llvm.dbg.declare(metadata i8** %p, metadata !19369, metadata !DIExpression()), !dbg !19370
  store i64 0, i64* %totalsize, align 8, !dbg !19371, !tbaa !3288
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !19372
  %0 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !19372, !tbaa !2648
  %1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !19372
  %2 = bitcast %struct.__va_list_tag* %0 to i8*, !dbg !19372
  call void @llvm.va_copy(i8* %1, i8* %2), !dbg !19372
  %3 = load i64, i64* %argcount.addr, align 8, !dbg !19373, !tbaa !3288
  store i64 %3, i64* %i, align 8, !dbg !19375, !tbaa !3288
  br label %for.cond, !dbg !19376

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i64, i64* %i, align 8, !dbg !19377, !tbaa !3288
  %cmp = icmp ugt i64 %4, 0, !dbg !19379
  br i1 %cmp, label %for.body, label %for.end, !dbg !19380

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %next, metadata !19381, metadata !DIExpression()), !dbg !19383
  %arraydecay1 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !19384
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay1, i32 0, i32 0, !dbg !19384
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !19384
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !19384
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !19384

vaarg.in_reg:                                     ; preds = %for.body
  %5 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay1, i32 0, i32 3, !dbg !19384
  %reg_save_area = load i8*, i8** %5, align 16, !dbg !19384
  %6 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !19384
  %7 = bitcast i8* %6 to i8**, !dbg !19384
  %8 = add i32 %gp_offset, 8, !dbg !19384
  store i32 %8, i32* %gp_offset_p, align 16, !dbg !19384
  br label %vaarg.end, !dbg !19384

vaarg.in_mem:                                     ; preds = %for.body
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay1, i32 0, i32 2, !dbg !19384
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !19384
  %9 = bitcast i8* %overflow_arg_area to i8**, !dbg !19384
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !19384
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !19384
  br label %vaarg.end, !dbg !19384

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i8** [ %7, %vaarg.in_reg ], [ %9, %vaarg.in_mem ], !dbg !19384
  %10 = load i8*, i8** %vaarg.addr, align 8, !dbg !19384
  store i8* %10, i8** %next, align 8, !dbg !19383, !tbaa !2648
  %11 = load i64, i64* %totalsize, align 8, !dbg !19385, !tbaa !3288
  %12 = load i8*, i8** %next, align 8, !dbg !19386, !tbaa !2648
  %call = call i64 @strlen(i8* %12) #14, !dbg !19387
  %call2 = call i64 @xsum(i64 %11, i64 %call) #14, !dbg !19388
  store i64 %call2, i64* %totalsize, align 8, !dbg !19389, !tbaa !3288
  br label %for.inc, !dbg !19390

for.inc:                                          ; preds = %vaarg.end
  %13 = load i64, i64* %i, align 8, !dbg !19391, !tbaa !3288
  %dec = add i64 %13, -1, !dbg !19391
  store i64 %dec, i64* %i, align 8, !dbg !19391, !tbaa !3288
  br label %for.cond, !dbg !19392, !llvm.loop !19393

for.end:                                          ; preds = %for.cond
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !19395
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !19395
  call void @llvm.va_end(i8* %arraydecay34), !dbg !19395
  %14 = load i64, i64* %totalsize, align 8, !dbg !19396, !tbaa !3288
  %cmp5 = icmp eq i64 %14, -1, !dbg !19398
  br i1 %cmp5, label %if.then, label %lor.lhs.false, !dbg !19399

lor.lhs.false:                                    ; preds = %for.end
  %15 = load i64, i64* %totalsize, align 8, !dbg !19400, !tbaa !3288
  %cmp6 = icmp ugt i64 %15, 2147483647, !dbg !19401
  br i1 %cmp6, label %if.then, label %if.end, !dbg !19402

if.then:                                          ; preds = %lor.lhs.false, %for.end
  %call7 = call i32* @__errno_location() #16, !dbg !19403
  store i32 75, i32* %call7, align 4, !dbg !19405, !tbaa !2635, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !19406
  br label %return, !dbg !19406

if.end:                                           ; preds = %lor.lhs.false
  %16 = load i64, i64* %totalsize, align 8, !dbg !19407, !tbaa !3288
  %add = add i64 %16, 1, !dbg !19407
  %call8 = call noalias i8* @xmalloc(i64 %add), !dbg !19407
  store i8* %call8, i8** %result, align 8, !dbg !19408, !tbaa !2648
  %17 = load i8*, i8** %result, align 8, !dbg !19409, !tbaa !2648
  store i8* %17, i8** %p, align 8, !dbg !19410, !tbaa !2648
  %18 = load i64, i64* %argcount.addr, align 8, !dbg !19411, !tbaa !3288
  store i64 %18, i64* %i, align 8, !dbg !19413, !tbaa !3288
  br label %for.cond9, !dbg !19414

for.cond9:                                        ; preds = %for.inc25, %if.end
  %19 = load i64, i64* %i, align 8, !dbg !19415, !tbaa !3288
  %cmp10 = icmp ugt i64 %19, 0, !dbg !19417
  br i1 %cmp10, label %for.body11, label %for.end27, !dbg !19418

for.body11:                                       ; preds = %for.cond9
  call void @llvm.dbg.declare(metadata i8** %next12, metadata !19419, metadata !DIExpression()), !dbg !19421
  %20 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !19422, !tbaa !2648
  %gp_offset_p13 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %20, i32 0, i32 0, !dbg !19422
  %gp_offset14 = load i32, i32* %gp_offset_p13, align 8, !dbg !19422
  %fits_in_gp15 = icmp ule i32 %gp_offset14, 40, !dbg !19422
  br i1 %fits_in_gp15, label %vaarg.in_reg16, label %vaarg.in_mem18, !dbg !19422

vaarg.in_reg16:                                   ; preds = %for.body11
  %21 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %20, i32 0, i32 3, !dbg !19422
  %reg_save_area17 = load i8*, i8** %21, align 8, !dbg !19422
  %22 = getelementptr i8, i8* %reg_save_area17, i32 %gp_offset14, !dbg !19422
  %23 = bitcast i8* %22 to i8**, !dbg !19422
  %24 = add i32 %gp_offset14, 8, !dbg !19422
  store i32 %24, i32* %gp_offset_p13, align 8, !dbg !19422
  br label %vaarg.end22, !dbg !19422

vaarg.in_mem18:                                   ; preds = %for.body11
  %overflow_arg_area_p19 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %20, i32 0, i32 2, !dbg !19422
  %overflow_arg_area20 = load i8*, i8** %overflow_arg_area_p19, align 8, !dbg !19422
  %25 = bitcast i8* %overflow_arg_area20 to i8**, !dbg !19422
  %overflow_arg_area.next21 = getelementptr i8, i8* %overflow_arg_area20, i32 8, !dbg !19422
  store i8* %overflow_arg_area.next21, i8** %overflow_arg_area_p19, align 8, !dbg !19422
  br label %vaarg.end22, !dbg !19422

vaarg.end22:                                      ; preds = %vaarg.in_mem18, %vaarg.in_reg16
  %vaarg.addr23 = phi i8** [ %23, %vaarg.in_reg16 ], [ %25, %vaarg.in_mem18 ], !dbg !19422
  %26 = load i8*, i8** %vaarg.addr23, align 8, !dbg !19422
  store i8* %26, i8** %next12, align 8, !dbg !19421, !tbaa !2648
  call void @llvm.dbg.declare(metadata i64* %len, metadata !19423, metadata !DIExpression()), !dbg !19424
  %27 = load i8*, i8** %next12, align 8, !dbg !19425, !tbaa !2648
  %call24 = call i64 @strlen(i8* %27) #14, !dbg !19426
  store i64 %call24, i64* %len, align 8, !dbg !19424, !tbaa !3288
  %28 = load i8*, i8** %p, align 8, !dbg !19427, !tbaa !2648
  %29 = load i8*, i8** %next12, align 8, !dbg !19428, !tbaa !2648
  %30 = load i64, i64* %len, align 8, !dbg !19429, !tbaa !3288
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %28, i8* align 1 %29, i64 %30, i1 false), !dbg !19430
  %31 = load i64, i64* %len, align 8, !dbg !19431, !tbaa !3288
  %32 = load i8*, i8** %p, align 8, !dbg !19432, !tbaa !2648
  %add.ptr = getelementptr inbounds i8, i8* %32, i64 %31, !dbg !19432
  store i8* %add.ptr, i8** %p, align 8, !dbg !19432, !tbaa !2648
  br label %for.inc25, !dbg !19433

for.inc25:                                        ; preds = %vaarg.end22
  %33 = load i64, i64* %i, align 8, !dbg !19434, !tbaa !3288
  %dec26 = add i64 %33, -1, !dbg !19434
  store i64 %dec26, i64* %i, align 8, !dbg !19434, !tbaa !3288
  br label %for.cond9, !dbg !19435, !llvm.loop !19436

for.end27:                                        ; preds = %for.cond9
  %34 = load i8*, i8** %p, align 8, !dbg !19438, !tbaa !2648
  store i8 0, i8* %34, align 1, !dbg !19439, !tbaa !3295, !ctir !10
  %35 = load i8*, i8** %result, align 8, !dbg !19440, !tbaa !2648
  store i8* %35, i8** %retval, align 8, !dbg !19441
  br label %return, !dbg !19441

return:                                           ; preds = %for.end27, %if.then
  %36 = load i8*, i8** %retval, align 8, !dbg !19442
  ret i8* %36, !dbg !19442
}

; Function Attrs: nounwind
declare dso_local i32 @vasprintf(i8**, i8*, %struct.__va_list_tag*) #2

; Function Attrs: nounwind
declare void @llvm.va_copy(i8*, i8*) #9

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @yesno() #4 !dbg !19443 !ctir !1331 {
entry:
  %yes = alloca i8, align 1, !ctir !142
  %response = alloca i8*, align 8, !ctir !9
  %response_size = alloca i64, align 8, !ctir !55
  %response_len = alloca i64, align 8, !ctir !694
  call void @llvm.dbg.declare(metadata i8* %yes, metadata !19445, metadata !DIExpression()), !dbg !19446
  call void @llvm.dbg.declare(metadata i8** %response, metadata !19447, metadata !DIExpression()), !dbg !19448
  store i8* null, i8** %response, align 8, !dbg !19448, !tbaa !2648
  call void @llvm.dbg.declare(metadata i64* %response_size, metadata !19449, metadata !DIExpression()), !dbg !19450
  store i64 0, i64* %response_size, align 8, !dbg !19450, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %response_len, metadata !19451, metadata !DIExpression()), !dbg !19452
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !19453, !tbaa !2648
  %call = call i64 @getline(i8** %response, i64* %response_size, %struct._IO_FILE* %0), !dbg !19454
  store i64 %call, i64* %response_len, align 8, !dbg !19452, !tbaa !3288
  %1 = load i64, i64* %response_len, align 8, !dbg !19455, !tbaa !3288
  %cmp = icmp sle i64 %1, 0, !dbg !19457
  br i1 %cmp, label %if.then, label %if.else, !dbg !19458

if.then:                                          ; preds = %entry
  store i8 0, i8* %yes, align 1, !dbg !19459, !tbaa !2742
  br label %if.end9, !dbg !19460

if.else:                                          ; preds = %entry
  %2 = load i8*, i8** %response, align 8, !dbg !19461, !tbaa !2648
  %3 = load i64, i64* %response_len, align 8, !dbg !19464, !tbaa !3288
  %sub = sub nsw i64 %3, 1, !dbg !19465
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %sub, !dbg !19461, !ctir !9
  %4 = load i8, i8* %arrayidx, align 1, !dbg !19461, !tbaa !3295
  %conv = sext i8 %4 to i32, !dbg !19461
  %cmp1 = icmp eq i32 %conv, 10, !dbg !19466
  br i1 %cmp1, label %if.then3, label %if.end, !dbg !19467

if.then3:                                         ; preds = %if.else
  %5 = load i8*, i8** %response, align 8, !dbg !19468, !tbaa !2648
  %6 = load i64, i64* %response_len, align 8, !dbg !19469, !tbaa !3288
  %sub4 = sub nsw i64 %6, 1, !dbg !19470
  %arrayidx5 = getelementptr inbounds i8, i8* %5, i64 %sub4, !dbg !19468, !ctir !9
  store i8 0, i8* %arrayidx5, align 1, !dbg !19471, !tbaa !3295
  br label %if.end, !dbg !19468

if.end:                                           ; preds = %if.then3, %if.else
  %7 = load i8*, i8** %response, align 8, !dbg !19472, !tbaa !2648
  %call6 = call i32 @rpmatch(i8* %7) #9, !dbg !19473
  %cmp7 = icmp slt i32 0, %call6, !dbg !19474
  %frombool = zext i1 %cmp7 to i8, !dbg !19475
  store i8 %frombool, i8* %yes, align 1, !dbg !19475, !tbaa !2742
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  %8 = load i8*, i8** %response, align 8, !dbg !19476, !tbaa !2648
  call void @free(i8* %8) #9, !dbg !19477
  %9 = load i8, i8* %yes, align 1, !dbg !19478, !tbaa !2742
  %tobool = trunc i8 %9 to i1, !dbg !19478
  ret i1 %tobool, !dbg !19479
}

declare dso_local i64 @getline(i8**, i64*, %struct._IO_FILE*) #3

; Function Attrs: nounwind
declare dso_local i32 @rpmatch(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fflush(%struct._IO_FILE* %stream) #4 !dbg !19480 !ctir !2100 {
entry:
  %retval = alloca i32, align 4
  %stream.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !19482, metadata !DIExpression()), !dbg !19483
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19484, !tbaa !2648
  %cmp = icmp eq %struct._IO_FILE* %0, null, !dbg !19486
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !19487

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19488, !tbaa !2648
  %call = call i32 @__freading(%struct._IO_FILE* %1) #9, !dbg !19488
  %cmp1 = icmp ne i32 %call, 0, !dbg !19488
  br i1 %cmp1, label %if.end, label %if.then, !dbg !19489

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19490, !tbaa !2648
  %call2 = call i32 @fflush(%struct._IO_FILE* %2), !dbg !19491
  store i32 %call2, i32* %retval, align 4, !dbg !19492
  br label %return, !dbg !19492

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19493, !tbaa !2648
  call void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %3), !dbg !19494
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19495, !tbaa !2648
  %call3 = call i32 @fflush(%struct._IO_FILE* %4), !dbg !19496
  store i32 %call3, i32* %retval, align 4, !dbg !19497
  br label %return, !dbg !19497

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !19498
  ret i32 %5, !dbg !19498
}

; Function Attrs: nounwind
declare dso_local i32 @__freading(%struct._IO_FILE*) #2

declare dso_local i32 @fflush(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %fp) #4 !dbg !19499 !ctir !2136 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !19500, metadata !DIExpression()), !dbg !19501
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19502, !tbaa !2648
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 0, !dbg !19504, !ctir !2103
  %1 = load i32, i32* %_flags, align 8, !dbg !19504, !tbaa !19505, !ctir !7
  %and = and i32 %1, 256, !dbg !19507
  %tobool = icmp ne i32 %and, 0, !dbg !19507
  br i1 %tobool, label %if.then, label %if.end, !dbg !19508

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19509, !tbaa !2648
  %call = call i32 @rpl_fseeko(%struct._IO_FILE* %2, i64 0, i32 1), !dbg !19510
  br label %if.end, !dbg !19510

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !19511
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @freadahead(%struct._IO_FILE* %fp) #10 !dbg !19512 !ctir !2141 {
entry:
  %retval = alloca i64, align 8
  %fp.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !19514, metadata !DIExpression()), !dbg !19515
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19516, !tbaa !2648
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 5, !dbg !19518, !ctir !2144
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !19518, !tbaa !19519, !ctir !9
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19520, !tbaa !2648
  %_IO_write_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %2, i32 0, i32 4, !dbg !19521, !ctir !2144
  %3 = load i8*, i8** %_IO_write_base, align 8, !dbg !19521, !tbaa !19522, !ctir !9
  %cmp = icmp ugt i8* %1, %3, !dbg !19523
  br i1 %cmp, label %if.then, label %if.end, !dbg !19524

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !19525
  br label %return, !dbg !19525

if.end:                                           ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19526, !tbaa !2648
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %4, i32 0, i32 2, !dbg !19527, !ctir !2144
  %5 = load i8*, i8** %_IO_read_end, align 8, !dbg !19527, !tbaa !19528, !ctir !9
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19529, !tbaa !2648
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %6, i32 0, i32 1, !dbg !19530, !ctir !2144
  %7 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !19530, !tbaa !19531, !ctir !9
  %sub.ptr.lhs.cast = ptrtoint i8* %5 to i64, !dbg !19532
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !19532
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !19532
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19533, !tbaa !2648
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %8, i32 0, i32 0, !dbg !19534, !ctir !2144
  %9 = load i32, i32* %_flags, align 8, !dbg !19534, !tbaa !19505, !ctir !7
  %and = and i32 %9, 256, !dbg !19535
  %tobool = icmp ne i32 %and, 0, !dbg !19535
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !19533

cond.true:                                        ; preds = %if.end
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19536, !tbaa !2648
  %_IO_save_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %10, i32 0, i32 11, !dbg !19537, !ctir !2144
  %11 = load i8*, i8** %_IO_save_end, align 8, !dbg !19537, !tbaa !19538, !ctir !9
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19539, !tbaa !2648
  %_IO_save_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %12, i32 0, i32 9, !dbg !19540, !ctir !2144
  %13 = load i8*, i8** %_IO_save_base, align 8, !dbg !19540, !tbaa !19541, !ctir !9
  %sub.ptr.lhs.cast1 = ptrtoint i8* %11 to i64, !dbg !19542
  %sub.ptr.rhs.cast2 = ptrtoint i8* %13 to i64, !dbg !19542
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.rhs.cast2, !dbg !19542
  br label %cond.end, !dbg !19533

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !19533

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub.ptr.sub3, %cond.true ], [ 0, %cond.false ], !dbg !19533
  %add = add nsw i64 %sub.ptr.sub, %cond, !dbg !19543
  store i64 %add, i64* %retval, align 8, !dbg !19544
  br label %return, !dbg !19544

return:                                           ; preds = %cond.end, %if.then
  %14 = load i64, i64* %retval, align 8, !dbg !19545
  ret i64 %14, !dbg !19545
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fseeko(%struct._IO_FILE* nonnull %fp, i64 %offset, i32 %whence) #4 !dbg !19546 !ctir !2180 {
entry:
  %retval = alloca i32, align 4
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %offset.addr = alloca i64, align 8
  %whence.addr = alloca i32, align 4
  %pos = alloca i64, align 8, !ctir !352
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !19548, metadata !DIExpression()), !dbg !19549
  store i64 %offset, i64* %offset.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !19550, metadata !DIExpression()), !dbg !19551
  store i32 %whence, i32* %whence.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %whence.addr, metadata !19552, metadata !DIExpression()), !dbg !19553
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19554, !tbaa !2648
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 2, !dbg !19556, !ctir !2183
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !19556, !tbaa !19528, !ctir !9
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19557, !tbaa !2648
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %2, i32 0, i32 1, !dbg !19558, !ctir !2183
  %3 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !19558, !tbaa !19531, !ctir !9
  %cmp = icmp eq i8* %1, %3, !dbg !19559
  br i1 %cmp, label %land.lhs.true, label %if.end7, !dbg !19560

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19561, !tbaa !2648
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %4, i32 0, i32 5, !dbg !19562, !ctir !2183
  %5 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !19562, !tbaa !19519, !ctir !9
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19563, !tbaa !2648
  %_IO_write_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %6, i32 0, i32 4, !dbg !19564, !ctir !2183
  %7 = load i8*, i8** %_IO_write_base, align 8, !dbg !19564, !tbaa !19522, !ctir !9
  %cmp1 = icmp eq i8* %5, %7, !dbg !19565
  br i1 %cmp1, label %land.lhs.true2, label %if.end7, !dbg !19566

land.lhs.true2:                                   ; preds = %land.lhs.true
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19567, !tbaa !2648
  %_IO_save_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %8, i32 0, i32 9, !dbg !19568, !ctir !2183
  %9 = load i8*, i8** %_IO_save_base, align 8, !dbg !19568, !tbaa !19541, !ctir !9
  %cmp3 = icmp eq i8* %9, null, !dbg !19569
  br i1 %cmp3, label %if.then, label %if.end7, !dbg !19570

if.then:                                          ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !19571, metadata !DIExpression()), !dbg !19573
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19574, !tbaa !2648
  %call = call i32 @fileno(%struct._IO_FILE* %10) #9, !dbg !19575
  %11 = load i64, i64* %offset.addr, align 8, !dbg !19576, !tbaa !3288
  %12 = load i32, i32* %whence.addr, align 4, !dbg !19577, !tbaa !2635
  %call4 = call i64 @lseek(i32 %call, i64 %11, i32 %12) #9, !dbg !19578
  store i64 %call4, i64* %pos, align 8, !dbg !19573, !tbaa !3288
  %13 = load i64, i64* %pos, align 8, !dbg !19579, !tbaa !3288
  %cmp5 = icmp eq i64 %13, -1, !dbg !19581
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !19582

if.then6:                                         ; preds = %if.then
  store i32 -1, i32* %retval, align 4, !dbg !19583
  br label %return, !dbg !19583

if.end:                                           ; preds = %if.then
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19585, !tbaa !2648
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %14, i32 0, i32 0, !dbg !19586, !ctir !2183
  %15 = load i32, i32* %_flags, align 8, !dbg !19587, !tbaa !19505, !ctir !7
  %and = and i32 %15, -17, !dbg !19587
  store i32 %and, i32* %_flags, align 8, !dbg !19587, !tbaa !19505, !ctir !7
  %16 = load i64, i64* %pos, align 8, !dbg !19588, !tbaa !3288
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19589, !tbaa !2648
  %_offset = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %17, i32 0, i32 21, !dbg !19590, !ctir !2183
  store i64 %16, i64* %_offset, align 8, !dbg !19591, !tbaa !19592, !ctir !44
  store i32 0, i32* %retval, align 4, !dbg !19593
  br label %return, !dbg !19593

if.end7:                                          ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19594, !tbaa !2648
  %19 = load i64, i64* %offset.addr, align 8, !dbg !19595, !tbaa !3288
  %20 = load i32, i32* %whence.addr, align 4, !dbg !19596, !tbaa !2635
  %call8 = call i32 @fseeko(%struct._IO_FILE* %18, i64 %19, i32 %20), !dbg !19597
  store i32 %call8, i32* %retval, align 4, !dbg !19598
  br label %return, !dbg !19598

return:                                           ; preds = %if.end7, %if.end, %if.then6
  %21 = load i32, i32* %retval, align 4, !dbg !19599
  ret i32 %21, !dbg !19599
}

declare dso_local i32 @fseeko(%struct._IO_FILE*, i64, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rpl_mbrtowc(i32* %pwc, i8* %s, i64 %n, %struct.savewd* %ps) #4 !dbg !19600 !ctir !2219 {
entry:
  %retval = alloca i64, align 8
  %pwc.addr = alloca i32*, align 8
  %s.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %ps.addr = alloca %struct.savewd*, align 8
  %ret = alloca i64, align 8, !ctir !55
  %wc = alloca i32, align 4, !ctir !1127
  %uc = alloca i8, align 1, !ctir !556
  store i32* %pwc, i32** %pwc.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i32** %pwc.addr, metadata !19602, metadata !DIExpression()), !dbg !19603
  store i8* %s, i8** %s.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !19604, metadata !DIExpression()), !dbg !19605
  store i64 %n, i64* %n.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !19606, metadata !DIExpression()), !dbg !19607
  store %struct.savewd* %ps, %struct.savewd** %ps.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.savewd** %ps.addr, metadata !19608, metadata !DIExpression()), !dbg !19609
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !19610, metadata !DIExpression()), !dbg !19611
  call void @llvm.dbg.declare(metadata i32* %wc, metadata !19612, metadata !DIExpression()), !dbg !19613
  %0 = load i32*, i32** %pwc.addr, align 8, !dbg !19614, !tbaa !2648
  %tobool = icmp ne i32* %0, null, !dbg !19614
  br i1 %tobool, label %if.end, label %if.then, !dbg !19616

if.then:                                          ; preds = %entry
  store i32* %wc, i32** %pwc.addr, align 8, !dbg !19617, !tbaa !2648
  br label %if.end, !dbg !19618

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32*, i32** %pwc.addr, align 8, !dbg !19619, !tbaa !2648
  %2 = load i8*, i8** %s.addr, align 8, !dbg !19620, !tbaa !2648
  %3 = load i64, i64* %n.addr, align 8, !dbg !19621, !tbaa !3288
  %4 = load %struct.savewd*, %struct.savewd** %ps.addr, align 8, !dbg !19622, !tbaa !2648
  %call = call i64 @mbrtowc(i32* %1, i8* %2, i64 %3, %struct.savewd* %4) #9, !dbg !19623
  store i64 %call, i64* %ret, align 8, !dbg !19624, !tbaa !3288
  %5 = load i64, i64* %ret, align 8, !dbg !19625, !tbaa !3288
  %cmp = icmp ule i64 -2, %5, !dbg !19627
  br i1 %cmp, label %land.lhs.true, label %if.end5, !dbg !19628

land.lhs.true:                                    ; preds = %if.end
  %6 = load i64, i64* %n.addr, align 8, !dbg !19629, !tbaa !3288
  %cmp1 = icmp ne i64 %6, 0, !dbg !19630
  br i1 %cmp1, label %land.lhs.true2, label %if.end5, !dbg !19631

land.lhs.true2:                                   ; preds = %land.lhs.true
  %call3 = call zeroext i1 @hard_locale(i32 0), !dbg !19632
  br i1 %call3, label %if.end5, label %if.then4, !dbg !19633

if.then4:                                         ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata i8* %uc, metadata !19634, metadata !DIExpression()), !dbg !19636
  %7 = load i8*, i8** %s.addr, align 8, !dbg !19637, !tbaa !2648
  %8 = load i8, i8* %7, align 1, !dbg !19638, !tbaa !3295, !ctir !181
  store i8 %8, i8* %uc, align 1, !dbg !19636, !tbaa !3295
  %9 = load i8, i8* %uc, align 1, !dbg !19639, !tbaa !3295
  %conv = zext i8 %9 to i32, !dbg !19639
  %10 = load i32*, i32** %pwc.addr, align 8, !dbg !19640, !tbaa !2648
  store i32 %conv, i32* %10, align 4, !dbg !19641, !tbaa !2635, !ctir !1127
  store i64 1, i64* %retval, align 8, !dbg !19642
  br label %return, !dbg !19642

if.end5:                                          ; preds = %land.lhs.true2, %land.lhs.true, %if.end
  %11 = load i64, i64* %ret, align 8, !dbg !19643, !tbaa !3288
  store i64 %11, i64* %retval, align 8, !dbg !19644
  br label %return, !dbg !19644

return:                                           ; preds = %if.end5, %if.then4
  %12 = load i64, i64* %retval, align 8, !dbg !19645
  ret i64 %12, !dbg !19645
}

; Function Attrs: nounwind
declare dso_local i64 @mbrtowc(i32*, i8*, i64, %struct.savewd*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @acl_access_nontrivial(%struct.__acl_ext* %acl) #4 !dbg !19646 !ctir !2236 {
entry:
  %retval = alloca i32, align 4
  %acl.addr = alloca %struct.__acl_ext*, align 8
  %ace = alloca %struct.__acl_entry_ext*, align 8, !ctir !2242
  %got_one = alloca i32, align 4, !ctir !7
  %tag = alloca i32, align 4, !ctir !2245
  store %struct.__acl_ext* %acl, %struct.__acl_ext** %acl.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.__acl_ext** %acl.addr, metadata !19648, metadata !DIExpression()), !dbg !19649
  call void @llvm.dbg.declare(metadata %struct.__acl_entry_ext** %ace, metadata !19650, metadata !DIExpression()), !dbg !19651
  call void @llvm.dbg.declare(metadata i32* %got_one, metadata !19652, metadata !DIExpression()), !dbg !19653
  %0 = load %struct.__acl_ext*, %struct.__acl_ext** %acl.addr, align 8, !dbg !19654, !tbaa !2648
  %call = call i32 @acl_get_entry(%struct.__acl_ext* %0, i32 0, %struct.__acl_entry_ext** %ace), !dbg !19656
  store i32 %call, i32* %got_one, align 4, !dbg !19657, !tbaa !2635
  br label %for.cond, !dbg !19658

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %got_one, align 4, !dbg !19659, !tbaa !2635
  %cmp = icmp sgt i32 %1, 0, !dbg !19661
  br i1 %cmp, label %for.body, label %for.end, !dbg !19662

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %tag, metadata !19663, metadata !DIExpression()), !dbg !19665
  %2 = load %struct.__acl_entry_ext*, %struct.__acl_entry_ext** %ace, align 8, !dbg !19666, !tbaa !2648
  %call1 = call i32 @acl_get_tag_type(%struct.__acl_entry_ext* %2, i32* %tag), !dbg !19668
  %cmp2 = icmp slt i32 %call1, 0, !dbg !19669
  br i1 %cmp2, label %if.then, label %if.end, !dbg !19670

if.then:                                          ; preds = %for.body
  store i32 -1, i32* %retval, align 4, !dbg !19671
  br label %return, !dbg !19671

if.end:                                           ; preds = %for.body
  %3 = load i32, i32* %tag, align 4, !dbg !19672, !tbaa !2635
  %cmp3 = icmp eq i32 %3, 1, !dbg !19674
  br i1 %cmp3, label %if.end8, label %lor.lhs.false, !dbg !19675

lor.lhs.false:                                    ; preds = %if.end
  %4 = load i32, i32* %tag, align 4, !dbg !19676, !tbaa !2635
  %cmp4 = icmp eq i32 %4, 4, !dbg !19677
  br i1 %cmp4, label %if.end8, label %lor.lhs.false5, !dbg !19678

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %5 = load i32, i32* %tag, align 4, !dbg !19679, !tbaa !2635
  %cmp6 = icmp eq i32 %5, 32, !dbg !19680
  br i1 %cmp6, label %if.end8, label %if.then7, !dbg !19681

if.then7:                                         ; preds = %lor.lhs.false5
  store i32 1, i32* %retval, align 4, !dbg !19682
  br label %return, !dbg !19682

if.end8:                                          ; preds = %lor.lhs.false5, %lor.lhs.false, %if.end
  br label %for.inc, !dbg !19683

for.inc:                                          ; preds = %if.end8
  %6 = load %struct.__acl_ext*, %struct.__acl_ext** %acl.addr, align 8, !dbg !19684, !tbaa !2648
  %call9 = call i32 @acl_get_entry(%struct.__acl_ext* %6, i32 1, %struct.__acl_entry_ext** %ace), !dbg !19685
  store i32 %call9, i32* %got_one, align 4, !dbg !19686, !tbaa !2635
  br label %for.cond, !dbg !19687, !llvm.loop !19688

for.end:                                          ; preds = %for.cond
  %7 = load i32, i32* %got_one, align 4, !dbg !19690, !tbaa !2635
  store i32 %7, i32* %retval, align 4, !dbg !19691
  br label %return, !dbg !19691

return:                                           ; preds = %for.end, %if.then7, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !19692
  ret i32 %8, !dbg !19692
}

declare dso_local i32 @acl_get_entry(%struct.__acl_ext*, i32, %struct.__acl_entry_ext**) #3

declare dso_local i32 @acl_get_tag_type(%struct.__acl_entry_ext*, i32*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @acl_default_nontrivial(%struct.__acl_ext* %acl) #4 !dbg !19693 !ctir !2236 {
entry:
  %acl.addr = alloca %struct.__acl_ext*, align 8
  store %struct.__acl_ext* %acl, %struct.__acl_ext** %acl.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.__acl_ext** %acl.addr, metadata !19694, metadata !DIExpression()), !dbg !19695
  %0 = load %struct.__acl_ext*, %struct.__acl_ext** %acl.addr, align 8, !dbg !19696, !tbaa !2648
  %call = call i32 @acl_entries(%struct.__acl_ext* %0), !dbg !19697
  %cmp = icmp sgt i32 %call, 0, !dbg !19698
  %conv = zext i1 %cmp to i32, !dbg !19698
  ret i32 %conv, !dbg !19699
}

declare dso_local i32 @acl_entries(%struct.__acl_ext*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @free_permission_context(%struct.permission_context* %ctx) #4 !dbg !19700 !ctir !2246 {
entry:
  %ctx.addr = alloca %struct.permission_context*, align 8
  store %struct.permission_context* %ctx, %struct.permission_context** %ctx.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.permission_context** %ctx.addr, metadata !19701, metadata !DIExpression()), !dbg !19702
  %0 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19703, !tbaa !2648
  %acl = getelementptr inbounds %struct.permission_context, %struct.permission_context* %0, i32 0, i32 1, !dbg !19705, !ctir !2249
  %1 = load %struct.__acl_ext*, %struct.__acl_ext** %acl, align 8, !dbg !19705, !tbaa !19706, !ctir !2238
  %tobool = icmp ne %struct.__acl_ext* %1, null, !dbg !19703
  br i1 %tobool, label %if.then, label %if.end, !dbg !19707

if.then:                                          ; preds = %entry
  %2 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19708, !tbaa !2648
  %acl1 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %2, i32 0, i32 1, !dbg !19709, !ctir !2249
  %3 = load %struct.__acl_ext*, %struct.__acl_ext** %acl1, align 8, !dbg !19709, !tbaa !19706, !ctir !2238
  %4 = bitcast %struct.__acl_ext* %3 to i8*, !dbg !19708
  %call = call i32 @acl_free(i8* %4), !dbg !19710
  br label %if.end, !dbg !19710

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19711, !tbaa !2648
  %default_acl = getelementptr inbounds %struct.permission_context, %struct.permission_context* %5, i32 0, i32 2, !dbg !19713, !ctir !2249
  %6 = load %struct.__acl_ext*, %struct.__acl_ext** %default_acl, align 8, !dbg !19713, !tbaa !19714, !ctir !2238
  %tobool2 = icmp ne %struct.__acl_ext* %6, null, !dbg !19711
  br i1 %tobool2, label %if.then3, label %if.end6, !dbg !19715

if.then3:                                         ; preds = %if.end
  %7 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19716, !tbaa !2648
  %default_acl4 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %7, i32 0, i32 2, !dbg !19717, !ctir !2249
  %8 = load %struct.__acl_ext*, %struct.__acl_ext** %default_acl4, align 8, !dbg !19717, !tbaa !19714, !ctir !2238
  %9 = bitcast %struct.__acl_ext* %8 to i8*, !dbg !19716
  %call5 = call i32 @acl_free(i8* %9), !dbg !19718
  br label %if.end6, !dbg !19718

if.end6:                                          ; preds = %if.then3, %if.end
  ret void, !dbg !19719
}

declare dso_local i32 @acl_free(i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_permissions(i8* %name, i32 %desc, i32 %mode, %struct.permission_context* %ctx) #4 !dbg !19720 !ctir !2259 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ctx.addr = alloca %struct.permission_context*, align 8
  store i8* %name, i8** %name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !19722, metadata !DIExpression()), !dbg !19723
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !19724, metadata !DIExpression()), !dbg !19725
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !19726, metadata !DIExpression()), !dbg !19727
  store %struct.permission_context* %ctx, %struct.permission_context** %ctx.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.permission_context** %ctx.addr, metadata !19728, metadata !DIExpression()), !dbg !19729
  %0 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19730, !tbaa !2648
  %1 = bitcast %struct.permission_context* %0 to i8*, !dbg !19731
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 32, i1 false), !dbg !19731
  %2 = load i32, i32* %mode.addr, align 4, !dbg !19732, !tbaa !2635
  %3 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19733, !tbaa !2648
  %mode1 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %3, i32 0, i32 0, !dbg !19734, !ctir !2262
  store i32 %2, i32* %mode1, align 8, !dbg !19735, !tbaa !14074, !ctir !139
  %4 = load i32, i32* %desc.addr, align 4, !dbg !19736, !tbaa !2635
  %cmp = icmp ne i32 %4, -1, !dbg !19738
  br i1 %cmp, label %if.then, label %if.else, !dbg !19739

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %desc.addr, align 4, !dbg !19740, !tbaa !2635
  %call = call %struct.__acl_ext* @acl_get_fd(i32 %5), !dbg !19741
  %6 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19742, !tbaa !2648
  %acl = getelementptr inbounds %struct.permission_context, %struct.permission_context* %6, i32 0, i32 1, !dbg !19743, !ctir !2262
  store %struct.__acl_ext* %call, %struct.__acl_ext** %acl, align 8, !dbg !19744, !tbaa !19706, !ctir !2238
  br label %if.end, !dbg !19742

if.else:                                          ; preds = %entry
  %7 = load i8*, i8** %name.addr, align 8, !dbg !19745, !tbaa !2648
  %call2 = call %struct.__acl_ext* @acl_get_file(i8* %7, i32 32768), !dbg !19746
  %8 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19747, !tbaa !2648
  %acl3 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %8, i32 0, i32 1, !dbg !19748, !ctir !2262
  store %struct.__acl_ext* %call2, %struct.__acl_ext** %acl3, align 8, !dbg !19749, !tbaa !19706, !ctir !2238
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19750, !tbaa !2648
  %acl4 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %9, i32 0, i32 1, !dbg !19752, !ctir !2262
  %10 = load %struct.__acl_ext*, %struct.__acl_ext** %acl4, align 8, !dbg !19752, !tbaa !19706, !ctir !2238
  %cmp5 = icmp eq %struct.__acl_ext* %10, null, !dbg !19753
  br i1 %cmp5, label %if.then6, label %if.end9, !dbg !19754

if.then6:                                         ; preds = %if.end
  %call7 = call i32* @__errno_location() #16, !dbg !19755
  %11 = load i32, i32* %call7, align 4, !dbg !19755, !tbaa !2635, !ctir !7
  %call8 = call zeroext i1 @acl_errno_valid(i32 %11) #16, !dbg !19756
  %12 = zext i1 %call8 to i64, !dbg !19756
  %cond = select i1 %call8, i32 -1, i32 0, !dbg !19756
  store i32 %cond, i32* %retval, align 4, !dbg !19757
  br label %return, !dbg !19757

if.end9:                                          ; preds = %if.end
  %13 = load i32, i32* %mode.addr, align 4, !dbg !19758, !tbaa !2635
  %and = and i32 %13, 61440, !dbg !19758
  %cmp10 = icmp eq i32 %and, 16384, !dbg !19758
  br i1 %cmp10, label %if.then11, label %if.end17, !dbg !19760

if.then11:                                        ; preds = %if.end9
  %14 = load i8*, i8** %name.addr, align 8, !dbg !19761, !tbaa !2648
  %call12 = call %struct.__acl_ext* @acl_get_file(i8* %14, i32 16384), !dbg !19763
  %15 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19764, !tbaa !2648
  %default_acl = getelementptr inbounds %struct.permission_context, %struct.permission_context* %15, i32 0, i32 2, !dbg !19765, !ctir !2262
  store %struct.__acl_ext* %call12, %struct.__acl_ext** %default_acl, align 8, !dbg !19766, !tbaa !19714, !ctir !2238
  %16 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19767, !tbaa !2648
  %default_acl13 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %16, i32 0, i32 2, !dbg !19769, !ctir !2262
  %17 = load %struct.__acl_ext*, %struct.__acl_ext** %default_acl13, align 8, !dbg !19769, !tbaa !19714, !ctir !2238
  %cmp14 = icmp eq %struct.__acl_ext* %17, null, !dbg !19770
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !19771

if.then15:                                        ; preds = %if.then11
  store i32 -1, i32* %retval, align 4, !dbg !19772
  br label %return, !dbg !19772

if.end16:                                         ; preds = %if.then11
  br label %if.end17, !dbg !19773

if.end17:                                         ; preds = %if.end16, %if.end9
  store i32 0, i32* %retval, align 4, !dbg !19774
  br label %return, !dbg !19774

return:                                           ; preds = %if.end17, %if.then15, %if.then6
  %18 = load i32, i32* %retval, align 4, !dbg !19775
  ret i32 %18, !dbg !19775
}

declare dso_local %struct.__acl_ext* @acl_get_fd(i32) #3

declare dso_local %struct.__acl_ext* @acl_get_file(i8*, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @chmod_or_fchmod(i8* %name, i32 %desc, i32 %mode) #4 !dbg !19776 !ctir !1521 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !19778, metadata !DIExpression()), !dbg !19779
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !19780, metadata !DIExpression()), !dbg !19781
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !19782, metadata !DIExpression()), !dbg !19783
  %0 = load i32, i32* %desc.addr, align 4, !dbg !19784, !tbaa !2635
  %cmp = icmp ne i32 %0, -1, !dbg !19786
  br i1 %cmp, label %if.then, label %if.else, !dbg !19787

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %desc.addr, align 4, !dbg !19788, !tbaa !2635
  %2 = load i32, i32* %mode.addr, align 4, !dbg !19789, !tbaa !2635
  %call = call i32 @fchmod(i32 %1, i32 %2) #9, !dbg !19790
  store i32 %call, i32* %retval, align 4, !dbg !19791
  br label %return, !dbg !19791

if.else:                                          ; preds = %entry
  %3 = load i8*, i8** %name.addr, align 8, !dbg !19792, !tbaa !2648
  %4 = load i32, i32* %mode.addr, align 4, !dbg !19793, !tbaa !2635
  %call1 = call i32 @chmod(i8* %3, i32 %4) #9, !dbg !19794
  store i32 %call1, i32* %retval, align 4, !dbg !19795
  br label %return, !dbg !19795

return:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !19796
  ret i32 %5, !dbg !19796
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_permissions(%struct.permission_context* %ctx, i8* %name, i32 %desc) #4 !dbg !19797 !ctir !2271 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.permission_context*, align 8
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %acls_set = alloca i8, align 1, !ctir !142
  %early_chmod = alloca i8, align 1, !ctir !142
  %must_chmod = alloca i8, align 1, !ctir !142
  %ret = alloca i32, align 4, !ctir !7
  %saved_errno = alloca i32, align 4, !ctir !7
  %saved_errno22 = alloca i32, align 4, !ctir !7
  store %struct.permission_context* %ctx, %struct.permission_context** %ctx.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.permission_context** %ctx.addr, metadata !19798, metadata !DIExpression()), !dbg !19799
  store i8* %name, i8** %name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !19800, metadata !DIExpression()), !dbg !19801
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !19802, metadata !DIExpression()), !dbg !19803
  call void @llvm.dbg.declare(metadata i8* %acls_set, metadata !19804, metadata !DIExpression()), !dbg !19805
  store i8 0, i8* %acls_set, align 1, !dbg !19805, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %early_chmod, metadata !19806, metadata !DIExpression()), !dbg !19807
  call void @llvm.dbg.declare(metadata i8* %must_chmod, metadata !19808, metadata !DIExpression()), !dbg !19809
  store i8 0, i8* %must_chmod, align 1, !dbg !19809, !tbaa !2742
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !19810, metadata !DIExpression()), !dbg !19811
  store i32 0, i32* %ret, align 4, !dbg !19811, !tbaa !2635
  %0 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19812, !tbaa !2648
  %mode = getelementptr inbounds %struct.permission_context, %struct.permission_context* %0, i32 0, i32 0, !dbg !19813, !ctir !2274
  %1 = load i32, i32* %mode, align 8, !dbg !19813, !tbaa !14074, !ctir !139
  %and = and i32 %1, 3584, !dbg !19814
  %tobool = icmp ne i32 %and, 0, !dbg !19815
  %frombool = zext i1 %tobool to i8, !dbg !19816
  store i8 %frombool, i8* %early_chmod, align 1, !dbg !19816, !tbaa !2742
  %2 = load i8, i8* %early_chmod, align 1, !dbg !19817, !tbaa !2742
  %tobool1 = trunc i8 %2 to i1, !dbg !19817
  br i1 %tobool1, label %if.then, label %if.end4, !dbg !19819

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %name.addr, align 8, !dbg !19820, !tbaa !2648
  %4 = load i32, i32* %desc.addr, align 4, !dbg !19822, !tbaa !2635
  %5 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19823, !tbaa !2648
  %mode2 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %5, i32 0, i32 0, !dbg !19824, !ctir !2274
  %6 = load i32, i32* %mode2, align 8, !dbg !19824, !tbaa !14074, !ctir !139
  %call = call i32 @chmod_or_fchmod(i8* %3, i32 %4, i32 %6), !dbg !19825
  store i32 %call, i32* %ret, align 4, !dbg !19826, !tbaa !2635
  %7 = load i32, i32* %ret, align 4, !dbg !19827, !tbaa !2635
  %cmp = icmp ne i32 %7, 0, !dbg !19829
  br i1 %cmp, label %if.then3, label %if.end, !dbg !19830

if.then3:                                         ; preds = %if.then
  store i32 -1, i32* %retval, align 4, !dbg !19831
  br label %return, !dbg !19831

if.end:                                           ; preds = %if.then
  br label %if.end4, !dbg !19832

if.end4:                                          ; preds = %if.end, %entry
  %8 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19833, !tbaa !2648
  %9 = load i8*, i8** %name.addr, align 8, !dbg !19834, !tbaa !2648
  %10 = load i32, i32* %desc.addr, align 4, !dbg !19835, !tbaa !2635
  %call5 = call i32 @set_acls(%struct.permission_context* %8, i8* %9, i32 %10, i32 0, i8* %must_chmod, i8* %acls_set), !dbg !19836
  store i32 %call5, i32* %ret, align 4, !dbg !19837, !tbaa !2635
  %11 = load i8, i8* %acls_set, align 1, !dbg !19838, !tbaa !2742
  %tobool6 = trunc i8 %11 to i1, !dbg !19838
  br i1 %tobool6, label %if.end18, label %if.then7, !dbg !19840

if.then7:                                         ; preds = %if.end4
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !19841, metadata !DIExpression()), !dbg !19843
  %12 = load i32, i32* %ret, align 4, !dbg !19844, !tbaa !2635
  %tobool8 = icmp ne i32 %12, 0, !dbg !19844
  br i1 %tobool8, label %cond.true, label %cond.false, !dbg !19844

cond.true:                                        ; preds = %if.then7
  %call9 = call i32* @__errno_location() #16, !dbg !19845
  %13 = load i32, i32* %call9, align 4, !dbg !19845, !tbaa !2635, !ctir !7
  br label %cond.end, !dbg !19844

cond.false:                                       ; preds = %if.then7
  br label %cond.end, !dbg !19844

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %13, %cond.true ], [ 0, %cond.false ], !dbg !19844
  store i32 %cond, i32* %saved_errno, align 4, !dbg !19843, !tbaa !2635
  %14 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19846, !tbaa !2648
  %15 = load i8*, i8** %name.addr, align 8, !dbg !19847, !tbaa !2648
  %16 = load i32, i32* %desc.addr, align 4, !dbg !19848, !tbaa !2635
  %call10 = call i32 @set_acls(%struct.permission_context* %14, i8* %15, i32 %16, i32 1, i8* %must_chmod, i8* %acls_set), !dbg !19849
  store i32 %call10, i32* %ret, align 4, !dbg !19850, !tbaa !2635
  %17 = load i8, i8* %acls_set, align 1, !dbg !19851, !tbaa !2742
  %tobool11 = trunc i8 %17 to i1, !dbg !19851
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !19853

if.then12:                                        ; preds = %cond.end
  store i8 1, i8* %must_chmod, align 1, !dbg !19854, !tbaa !2742
  br label %if.end13, !dbg !19855

if.end13:                                         ; preds = %if.then12, %cond.end
  %18 = load i32, i32* %saved_errno, align 4, !dbg !19856, !tbaa !2635
  %tobool14 = icmp ne i32 %18, 0, !dbg !19856
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !19858

if.then15:                                        ; preds = %if.end13
  %19 = load i32, i32* %saved_errno, align 4, !dbg !19859, !tbaa !2635
  %call16 = call i32* @__errno_location() #16, !dbg !19861
  store i32 %19, i32* %call16, align 4, !dbg !19862, !tbaa !2635, !ctir !7
  store i32 -1, i32* %ret, align 4, !dbg !19863, !tbaa !2635
  br label %if.end17, !dbg !19864

if.end17:                                         ; preds = %if.then15, %if.end13
  br label %if.end18, !dbg !19865

if.end18:                                         ; preds = %if.end17, %if.end4
  %20 = load i8, i8* %must_chmod, align 1, !dbg !19866, !tbaa !2742
  %tobool19 = trunc i8 %20 to i1, !dbg !19866
  br i1 %tobool19, label %land.lhs.true, label %if.end35, !dbg !19868

land.lhs.true:                                    ; preds = %if.end18
  %21 = load i8, i8* %early_chmod, align 1, !dbg !19869, !tbaa !2742
  %tobool20 = trunc i8 %21 to i1, !dbg !19869
  br i1 %tobool20, label %if.end35, label %if.then21, !dbg !19870

if.then21:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %saved_errno22, metadata !19871, metadata !DIExpression()), !dbg !19873
  %22 = load i32, i32* %ret, align 4, !dbg !19874, !tbaa !2635
  %tobool23 = icmp ne i32 %22, 0, !dbg !19874
  br i1 %tobool23, label %cond.true24, label %cond.false26, !dbg !19874

cond.true24:                                      ; preds = %if.then21
  %call25 = call i32* @__errno_location() #16, !dbg !19875
  %23 = load i32, i32* %call25, align 4, !dbg !19875, !tbaa !2635, !ctir !7
  br label %cond.end27, !dbg !19874

cond.false26:                                     ; preds = %if.then21
  br label %cond.end27, !dbg !19874

cond.end27:                                       ; preds = %cond.false26, %cond.true24
  %cond28 = phi i32 [ %23, %cond.true24 ], [ 0, %cond.false26 ], !dbg !19874
  store i32 %cond28, i32* %saved_errno22, align 4, !dbg !19873, !tbaa !2635
  %24 = load i8*, i8** %name.addr, align 8, !dbg !19876, !tbaa !2648
  %25 = load i32, i32* %desc.addr, align 4, !dbg !19877, !tbaa !2635
  %26 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19878, !tbaa !2648
  %mode29 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %26, i32 0, i32 0, !dbg !19879, !ctir !2274
  %27 = load i32, i32* %mode29, align 8, !dbg !19879, !tbaa !14074, !ctir !139
  %call30 = call i32 @chmod_or_fchmod(i8* %24, i32 %25, i32 %27), !dbg !19880
  store i32 %call30, i32* %ret, align 4, !dbg !19881, !tbaa !2635
  %28 = load i32, i32* %saved_errno22, align 4, !dbg !19882, !tbaa !2635
  %tobool31 = icmp ne i32 %28, 0, !dbg !19882
  br i1 %tobool31, label %if.then32, label %if.end34, !dbg !19884

if.then32:                                        ; preds = %cond.end27
  %29 = load i32, i32* %saved_errno22, align 4, !dbg !19885, !tbaa !2635
  %call33 = call i32* @__errno_location() #16, !dbg !19887
  store i32 %29, i32* %call33, align 4, !dbg !19888, !tbaa !2635, !ctir !7
  store i32 -1, i32* %ret, align 4, !dbg !19889, !tbaa !2635
  br label %if.end34, !dbg !19890

if.end34:                                         ; preds = %if.then32, %cond.end27
  br label %if.end35, !dbg !19891

if.end35:                                         ; preds = %if.end34, %land.lhs.true, %if.end18
  %30 = load i32, i32* %ret, align 4, !dbg !19892, !tbaa !2635
  store i32 %30, i32* %retval, align 4, !dbg !19893
  br label %return, !dbg !19893

return:                                           ; preds = %if.end35, %if.then3
  %31 = load i32, i32* %retval, align 4, !dbg !19894
  ret i32 %31, !dbg !19894
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @set_acls(%struct.permission_context* %ctx, i8* %name, i32 %desc, i32 %from_mode, i8* %must_chmod, i8* %acls_set) #4 !dbg !19895 !ctir !2280 {
entry:
  %ctx.addr = alloca %struct.permission_context*, align 8
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %from_mode.addr = alloca i32, align 4
  %must_chmod.addr = alloca i8*, align 8
  %acls_set.addr = alloca i8*, align 8
  %ret = alloca i32, align 4, !ctir !7
  store %struct.permission_context* %ctx, %struct.permission_context** %ctx.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.permission_context** %ctx.addr, metadata !19896, metadata !DIExpression()), !dbg !19897
  store i8* %name, i8** %name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !19898, metadata !DIExpression()), !dbg !19899
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !19900, metadata !DIExpression()), !dbg !19901
  store i32 %from_mode, i32* %from_mode.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %from_mode.addr, metadata !19902, metadata !DIExpression()), !dbg !19903
  store i8* %must_chmod, i8** %must_chmod.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %must_chmod.addr, metadata !19904, metadata !DIExpression()), !dbg !19905
  store i8* %acls_set, i8** %acls_set.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %acls_set.addr, metadata !19906, metadata !DIExpression()), !dbg !19907
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !19908, metadata !DIExpression()), !dbg !19909
  store i32 0, i32* %ret, align 4, !dbg !19909, !tbaa !2635
  %0 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19910, !tbaa !2648
  %acls_not_supported = getelementptr inbounds %struct.permission_context, %struct.permission_context* %0, i32 0, i32 3, !dbg !19912, !ctir !2274
  %1 = load i8, i8* %acls_not_supported, align 8, !dbg !19912, !tbaa !19913
  %tobool = trunc i8 %1 to i1, !dbg !19912, !ctir !142
  br i1 %tobool, label %if.end58, label %if.then, !dbg !19914

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ret, align 4, !dbg !19915, !tbaa !2635
  %cmp = icmp eq i32 %2, 0, !dbg !19918
  br i1 %cmp, label %land.lhs.true, label %if.end12, !dbg !19919

land.lhs.true:                                    ; preds = %if.then
  %3 = load i32, i32* %from_mode.addr, align 4, !dbg !19920, !tbaa !2635
  %tobool1 = icmp ne i32 %3, 0, !dbg !19920
  br i1 %tobool1, label %if.then2, label %if.end12, !dbg !19921

if.then2:                                         ; preds = %land.lhs.true
  %4 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19922, !tbaa !2648
  %acl = getelementptr inbounds %struct.permission_context, %struct.permission_context* %4, i32 0, i32 1, !dbg !19925, !ctir !2274
  %5 = load %struct.__acl_ext*, %struct.__acl_ext** %acl, align 8, !dbg !19925, !tbaa !19706, !ctir !2238
  %tobool3 = icmp ne %struct.__acl_ext* %5, null, !dbg !19922
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !19926

if.then4:                                         ; preds = %if.then2
  %6 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19927, !tbaa !2648
  %acl5 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %6, i32 0, i32 1, !dbg !19928, !ctir !2274
  %7 = load %struct.__acl_ext*, %struct.__acl_ext** %acl5, align 8, !dbg !19928, !tbaa !19706, !ctir !2238
  %8 = bitcast %struct.__acl_ext* %7 to i8*, !dbg !19927
  %call = call i32 @acl_free(i8* %8), !dbg !19929
  br label %if.end, !dbg !19929

if.end:                                           ; preds = %if.then4, %if.then2
  %9 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19930, !tbaa !2648
  %mode = getelementptr inbounds %struct.permission_context, %struct.permission_context* %9, i32 0, i32 0, !dbg !19931, !ctir !2274
  %10 = load i32, i32* %mode, align 8, !dbg !19931, !tbaa !14074, !ctir !139
  %call6 = call %struct.__acl_ext* @acl_from_mode(i32 %10), !dbg !19932
  %11 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19933, !tbaa !2648
  %acl7 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %11, i32 0, i32 1, !dbg !19934, !ctir !2274
  store %struct.__acl_ext* %call6, %struct.__acl_ext** %acl7, align 8, !dbg !19935, !tbaa !19706, !ctir !2238
  %12 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19936, !tbaa !2648
  %acl8 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %12, i32 0, i32 1, !dbg !19938, !ctir !2274
  %13 = load %struct.__acl_ext*, %struct.__acl_ext** %acl8, align 8, !dbg !19938, !tbaa !19706, !ctir !2238
  %cmp9 = icmp eq %struct.__acl_ext* %13, null, !dbg !19939
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !19940

if.then10:                                        ; preds = %if.end
  store i32 -1, i32* %ret, align 4, !dbg !19941, !tbaa !2635
  br label %if.end11, !dbg !19942

if.end11:                                         ; preds = %if.then10, %if.end
  br label %if.end12, !dbg !19943

if.end12:                                         ; preds = %if.end11, %land.lhs.true, %if.then
  %14 = load i32, i32* %ret, align 4, !dbg !19944, !tbaa !2635
  %cmp13 = icmp eq i32 %14, 0, !dbg !19946
  br i1 %cmp13, label %land.lhs.true14, label %if.end57, !dbg !19947

land.lhs.true14:                                  ; preds = %if.end12
  %15 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19948, !tbaa !2648
  %acl15 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %15, i32 0, i32 1, !dbg !19949, !ctir !2274
  %16 = load %struct.__acl_ext*, %struct.__acl_ext** %acl15, align 8, !dbg !19949, !tbaa !19706, !ctir !2238
  %tobool16 = icmp ne %struct.__acl_ext* %16, null, !dbg !19948
  br i1 %tobool16, label %if.then17, label %if.end57, !dbg !19950

if.then17:                                        ; preds = %land.lhs.true14
  %17 = load i32, i32* %desc.addr, align 4, !dbg !19951, !tbaa !2635
  %cmp18 = icmp ne i32 %17, -1, !dbg !19954
  br i1 %cmp18, label %if.then19, label %if.else, !dbg !19955

if.then19:                                        ; preds = %if.then17
  %18 = load i32, i32* %desc.addr, align 4, !dbg !19956, !tbaa !2635
  %19 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19957, !tbaa !2648
  %acl20 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %19, i32 0, i32 1, !dbg !19958, !ctir !2274
  %20 = load %struct.__acl_ext*, %struct.__acl_ext** %acl20, align 8, !dbg !19958, !tbaa !19706, !ctir !2238
  %call21 = call i32 @acl_set_fd(i32 %18, %struct.__acl_ext* %20), !dbg !19959
  store i32 %call21, i32* %ret, align 4, !dbg !19960, !tbaa !2635
  br label %if.end24, !dbg !19961

if.else:                                          ; preds = %if.then17
  %21 = load i8*, i8** %name.addr, align 8, !dbg !19962, !tbaa !2648
  %22 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19963, !tbaa !2648
  %acl22 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %22, i32 0, i32 1, !dbg !19964, !ctir !2274
  %23 = load %struct.__acl_ext*, %struct.__acl_ext** %acl22, align 8, !dbg !19964, !tbaa !19706, !ctir !2238
  %call23 = call i32 @acl_set_file(i8* %21, i32 32768, %struct.__acl_ext* %23), !dbg !19965
  store i32 %call23, i32* %ret, align 4, !dbg !19966, !tbaa !2635
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then19
  %24 = load i32, i32* %ret, align 4, !dbg !19967, !tbaa !2635
  %cmp25 = icmp ne i32 %24, 0, !dbg !19969
  br i1 %cmp25, label %if.then26, label %if.else38, !dbg !19970

if.then26:                                        ; preds = %if.end24
  %call27 = call i32* @__errno_location() #16, !dbg !19971
  %25 = load i32, i32* %call27, align 4, !dbg !19971, !tbaa !2635, !ctir !7
  %call28 = call zeroext i1 @acl_errno_valid(i32 %25) #16, !dbg !19974
  br i1 %call28, label %if.end37, label %if.then29, !dbg !19975

if.then29:                                        ; preds = %if.then26
  %26 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19976, !tbaa !2648
  %acls_not_supported30 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %26, i32 0, i32 3, !dbg !19978, !ctir !2274
  store i8 1, i8* %acls_not_supported30, align 8, !dbg !19979, !tbaa !19913, !ctir !142
  %27 = load i32, i32* %from_mode.addr, align 4, !dbg !19980, !tbaa !2635
  %tobool31 = icmp ne i32 %27, 0, !dbg !19980
  br i1 %tobool31, label %if.then35, label %lor.lhs.false, !dbg !19982

lor.lhs.false:                                    ; preds = %if.then29
  %28 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19983, !tbaa !2648
  %acl32 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %28, i32 0, i32 1, !dbg !19984, !ctir !2274
  %29 = load %struct.__acl_ext*, %struct.__acl_ext** %acl32, align 8, !dbg !19984, !tbaa !19706, !ctir !2238
  %call33 = call i32 @acl_access_nontrivial(%struct.__acl_ext* %29), !dbg !19985
  %cmp34 = icmp eq i32 %call33, 0, !dbg !19986
  br i1 %cmp34, label %if.then35, label %if.end36, !dbg !19987

if.then35:                                        ; preds = %lor.lhs.false, %if.then29
  store i32 0, i32* %ret, align 4, !dbg !19988, !tbaa !2635
  br label %if.end36, !dbg !19989

if.end36:                                         ; preds = %if.then35, %lor.lhs.false
  br label %if.end37, !dbg !19990

if.end37:                                         ; preds = %if.end36, %if.then26
  br label %if.end56, !dbg !19991

if.else38:                                        ; preds = %if.end24
  %30 = load i8*, i8** %acls_set.addr, align 8, !dbg !19992, !tbaa !2648
  store i8 1, i8* %30, align 1, !dbg !19994, !tbaa !2742, !ctir !142
  %31 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19995, !tbaa !2648
  %mode39 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %31, i32 0, i32 0, !dbg !19995, !ctir !2274
  %32 = load i32, i32* %mode39, align 8, !dbg !19995, !tbaa !14074, !ctir !139
  %and = and i32 %32, 61440, !dbg !19995
  %cmp40 = icmp eq i32 %and, 16384, !dbg !19995
  br i1 %cmp40, label %if.then41, label %if.end55, !dbg !19997

if.then41:                                        ; preds = %if.else38
  %33 = load i32, i32* %from_mode.addr, align 4, !dbg !19998, !tbaa !2635
  %tobool42 = icmp ne i32 %33, 0, !dbg !19998
  br i1 %tobool42, label %if.else52, label %land.lhs.true43, !dbg !20001

land.lhs.true43:                                  ; preds = %if.then41
  %34 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !20002, !tbaa !2648
  %default_acl = getelementptr inbounds %struct.permission_context, %struct.permission_context* %34, i32 0, i32 2, !dbg !20003, !ctir !2274
  %35 = load %struct.__acl_ext*, %struct.__acl_ext** %default_acl, align 8, !dbg !20003, !tbaa !19714, !ctir !2238
  %tobool44 = icmp ne %struct.__acl_ext* %35, null, !dbg !20002
  br i1 %tobool44, label %land.lhs.true45, label %if.else52, !dbg !20004

land.lhs.true45:                                  ; preds = %land.lhs.true43
  %36 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !20005, !tbaa !2648
  %default_acl46 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %36, i32 0, i32 2, !dbg !20006, !ctir !2274
  %37 = load %struct.__acl_ext*, %struct.__acl_ext** %default_acl46, align 8, !dbg !20006, !tbaa !19714, !ctir !2238
  %call47 = call i32 @acl_default_nontrivial(%struct.__acl_ext* %37), !dbg !20007
  %tobool48 = icmp ne i32 %call47, 0, !dbg !20007
  br i1 %tobool48, label %if.then49, label %if.else52, !dbg !20008

if.then49:                                        ; preds = %land.lhs.true45
  %38 = load i8*, i8** %name.addr, align 8, !dbg !20009, !tbaa !2648
  %39 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !20010, !tbaa !2648
  %default_acl50 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %39, i32 0, i32 2, !dbg !20011, !ctir !2274
  %40 = load %struct.__acl_ext*, %struct.__acl_ext** %default_acl50, align 8, !dbg !20011, !tbaa !19714, !ctir !2238
  %call51 = call i32 @acl_set_file(i8* %38, i32 16384, %struct.__acl_ext* %40), !dbg !20012
  store i32 %call51, i32* %ret, align 4, !dbg !20013, !tbaa !2635
  br label %if.end54, !dbg !20014

if.else52:                                        ; preds = %land.lhs.true45, %land.lhs.true43, %if.then41
  %41 = load i8*, i8** %name.addr, align 8, !dbg !20015, !tbaa !2648
  %call53 = call i32 @acl_delete_def_file(i8* %41), !dbg !20016
  store i32 %call53, i32* %ret, align 4, !dbg !20017, !tbaa !2635
  br label %if.end54

if.end54:                                         ; preds = %if.else52, %if.then49
  br label %if.end55, !dbg !20018

if.end55:                                         ; preds = %if.end54, %if.else38
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.end37
  br label %if.end57, !dbg !20019

if.end57:                                         ; preds = %if.end56, %land.lhs.true14, %if.end12
  br label %if.end58, !dbg !20020

if.end58:                                         ; preds = %if.end57, %entry
  %42 = load i32, i32* %ret, align 4, !dbg !20021, !tbaa !2635
  ret i32 %42, !dbg !20022
}

declare dso_local %struct.__acl_ext* @acl_from_mode(i32) #3

declare dso_local i32 @acl_set_fd(i32, %struct.__acl_ext*) #3

declare dso_local i32 @acl_set_file(i8*, i32, %struct.__acl_ext*) #3

declare dso_local i32 @acl_delete_def_file(i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @__argmatch_die() #4 !dbg !20023 !ctir !200 {
entry:
  call void @usage(i32 1), !dbg !20024
  ret void, !dbg !20025
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @argmatch(i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize) #10 !dbg !20026 !ctir !1344 {
entry:
  %retval = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8, !ctir !55
  %arglen = alloca i64, align 8, !ctir !55
  %matchind = alloca i64, align 8, !ctir !654
  %ambiguous = alloca i8, align 1, !ctir !142
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !20027, metadata !DIExpression()), !dbg !20028
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !20029, metadata !DIExpression()), !dbg !20030
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !20031, metadata !DIExpression()), !dbg !20032
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !20033, metadata !DIExpression()), !dbg !20034
  call void @llvm.dbg.declare(metadata i64* %i, metadata !20035, metadata !DIExpression()), !dbg !20036
  call void @llvm.dbg.declare(metadata i64* %arglen, metadata !20037, metadata !DIExpression()), !dbg !20038
  call void @llvm.dbg.declare(metadata i64* %matchind, metadata !20039, metadata !DIExpression()), !dbg !20040
  store i64 -1, i64* %matchind, align 8, !dbg !20040, !tbaa !3288
  call void @llvm.dbg.declare(metadata i8* %ambiguous, metadata !20041, metadata !DIExpression()), !dbg !20042
  store i8 0, i8* %ambiguous, align 1, !dbg !20042, !tbaa !2742
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !20043, !tbaa !2648
  %call = call i64 @strlen(i8* %0) #14, !dbg !20044
  store i64 %call, i64* %arglen, align 8, !dbg !20045, !tbaa !3288
  store i64 0, i64* %i, align 8, !dbg !20046, !tbaa !3288
  br label %for.cond, !dbg !20048

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !20049, !tbaa !2648
  %2 = load i64, i64* %i, align 8, !dbg !20051, !tbaa !3288
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %2, !dbg !20049, !ctir !1346
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !20049, !tbaa !2648
  %tobool = icmp ne i8* %3, null, !dbg !20052
  br i1 %tobool, label %for.body, label %for.end, !dbg !20052

for.body:                                         ; preds = %for.cond
  %4 = load i8**, i8*** %arglist.addr, align 8, !dbg !20053, !tbaa !2648
  %5 = load i64, i64* %i, align 8, !dbg !20056, !tbaa !3288
  %arrayidx1 = getelementptr inbounds i8*, i8** %4, i64 %5, !dbg !20053, !ctir !1346
  %6 = load i8*, i8** %arrayidx1, align 8, !dbg !20053, !tbaa !2648
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !20057, !tbaa !2648
  %8 = load i64, i64* %arglen, align 8, !dbg !20058, !tbaa !3288
  %call2 = call i32 @strncmp(i8* %6, i8* %7, i64 %8) #14, !dbg !20059
  %tobool3 = icmp ne i32 %call2, 0, !dbg !20059
  br i1 %tobool3, label %if.end18, label %if.then, !dbg !20060

if.then:                                          ; preds = %for.body
  %9 = load i8**, i8*** %arglist.addr, align 8, !dbg !20061, !tbaa !2648
  %10 = load i64, i64* %i, align 8, !dbg !20064, !tbaa !3288
  %arrayidx4 = getelementptr inbounds i8*, i8** %9, i64 %10, !dbg !20061, !ctir !1346
  %11 = load i8*, i8** %arrayidx4, align 8, !dbg !20061, !tbaa !2648
  %call5 = call i64 @strlen(i8* %11) #14, !dbg !20065
  %12 = load i64, i64* %arglen, align 8, !dbg !20066, !tbaa !3288
  %cmp = icmp eq i64 %call5, %12, !dbg !20067
  br i1 %cmp, label %if.then6, label %if.else, !dbg !20068

if.then6:                                         ; preds = %if.then
  %13 = load i64, i64* %i, align 8, !dbg !20069, !tbaa !3288
  store i64 %13, i64* %retval, align 8, !dbg !20070
  br label %return, !dbg !20070

if.else:                                          ; preds = %if.then
  %14 = load i64, i64* %matchind, align 8, !dbg !20071, !tbaa !3288
  %cmp7 = icmp eq i64 %14, -1, !dbg !20073
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !20074

if.then8:                                         ; preds = %if.else
  %15 = load i64, i64* %i, align 8, !dbg !20075, !tbaa !3288
  store i64 %15, i64* %matchind, align 8, !dbg !20076, !tbaa !3288
  br label %if.end16, !dbg !20077

if.else9:                                         ; preds = %if.else
  %16 = load i8*, i8** %vallist.addr, align 8, !dbg !20078, !tbaa !2648
  %cmp10 = icmp eq i8* %16, null, !dbg !20081
  br i1 %cmp10, label %if.then15, label %lor.lhs.false, !dbg !20082

lor.lhs.false:                                    ; preds = %if.else9
  %17 = load i8*, i8** %vallist.addr, align 8, !dbg !20083, !tbaa !2648
  %18 = load i64, i64* %valsize.addr, align 8, !dbg !20084, !tbaa !3288
  %19 = load i64, i64* %matchind, align 8, !dbg !20085, !tbaa !3288
  %mul = mul i64 %18, %19, !dbg !20086
  %add.ptr = getelementptr inbounds i8, i8* %17, i64 %mul, !dbg !20087
  %20 = load i8*, i8** %vallist.addr, align 8, !dbg !20088, !tbaa !2648
  %21 = load i64, i64* %valsize.addr, align 8, !dbg !20089, !tbaa !3288
  %22 = load i64, i64* %i, align 8, !dbg !20090, !tbaa !3288
  %mul11 = mul i64 %21, %22, !dbg !20091
  %add.ptr12 = getelementptr inbounds i8, i8* %20, i64 %mul11, !dbg !20092
  %23 = load i64, i64* %valsize.addr, align 8, !dbg !20093, !tbaa !3288
  %call13 = call i32 @memcmp(i8* %add.ptr, i8* %add.ptr12, i64 %23) #14, !dbg !20094
  %tobool14 = icmp ne i32 %call13, 0, !dbg !20094
  br i1 %tobool14, label %if.then15, label %if.end, !dbg !20095

if.then15:                                        ; preds = %lor.lhs.false, %if.else9
  store i8 1, i8* %ambiguous, align 1, !dbg !20096, !tbaa !2742
  br label %if.end, !dbg !20098

if.end:                                           ; preds = %if.then15, %lor.lhs.false
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then8
  br label %if.end17

if.end17:                                         ; preds = %if.end16
  br label %if.end18, !dbg !20099

if.end18:                                         ; preds = %if.end17, %for.body
  br label %for.inc, !dbg !20100

for.inc:                                          ; preds = %if.end18
  %24 = load i64, i64* %i, align 8, !dbg !20101, !tbaa !3288
  %inc = add i64 %24, 1, !dbg !20101
  store i64 %inc, i64* %i, align 8, !dbg !20101, !tbaa !3288
  br label %for.cond, !dbg !20102, !llvm.loop !20103

for.end:                                          ; preds = %for.cond
  %25 = load i8, i8* %ambiguous, align 1, !dbg !20105, !tbaa !2742
  %tobool19 = trunc i8 %25 to i1, !dbg !20105
  br i1 %tobool19, label %if.then20, label %if.else21, !dbg !20107

if.then20:                                        ; preds = %for.end
  store i64 -2, i64* %retval, align 8, !dbg !20108
  br label %return, !dbg !20108

if.else21:                                        ; preds = %for.end
  %26 = load i64, i64* %matchind, align 8, !dbg !20109, !tbaa !3288
  store i64 %26, i64* %retval, align 8, !dbg !20110
  br label %return, !dbg !20110

return:                                           ; preds = %if.else21, %if.then20, %if.then6
  %27 = load i64, i64* %retval, align 8, !dbg !20111
  ret i64 %27, !dbg !20111
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @argmatch_invalid(i8* %context, i8* %value, i64 %problem) #4 !dbg !20112 !ctir !1347 {
entry:
  %context.addr = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %problem.addr = alloca i64, align 8
  %format = alloca i8*, align 8, !ctir !180
  store i8* %context, i8** %context.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !20113, metadata !DIExpression()), !dbg !20114
  store i8* %value, i8** %value.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !20115, metadata !DIExpression()), !dbg !20116
  store i64 %problem, i64* %problem.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %problem.addr, metadata !20117, metadata !DIExpression()), !dbg !20118
  call void @llvm.dbg.declare(metadata i8** %format, metadata !20119, metadata !DIExpression()), !dbg !20120
  %0 = load i64, i64* %problem.addr, align 8, !dbg !20121, !tbaa !3288
  %cmp = icmp eq i64 %0, -1, !dbg !20122
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !20121

cond.true:                                        ; preds = %entry
  %call = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.488, i64 0, i64 0)) #9, !dbg !20123
  br label %cond.end, !dbg !20121

cond.false:                                       ; preds = %entry
  %call1 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.489, i64 0, i64 0)) #9, !dbg !20124
  br label %cond.end, !dbg !20121

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !20121
  store i8* %cond, i8** %format, align 8, !dbg !20120, !tbaa !2648
  %1 = load i8*, i8** %format, align 8, !dbg !20125, !tbaa !2648
  %2 = load i8*, i8** %value.addr, align 8, !dbg !20126, !tbaa !2648
  %call2 = call i8* @quotearg_n_style(i32 0, i32 8, i8* %2), !dbg !20127
  %3 = load i8*, i8** %context.addr, align 8, !dbg !20128, !tbaa !2648
  %call3 = call i8* @quote_n(i32 1, i8* %3), !dbg !20129
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %1, i8* %call2, i8* %call3), !dbg !20130
  ret void, !dbg !20131
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @argmatch_valid(i8** %arglist, i8* %vallist, i64 %valsize) #4 !dbg !20132 !ctir !1349 {
entry:
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8, !ctir !55
  %last_val = alloca i8*, align 8, !ctir !180
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !20133, metadata !DIExpression()), !dbg !20134
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !20135, metadata !DIExpression()), !dbg !20136
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !20137, metadata !DIExpression()), !dbg !20138
  call void @llvm.dbg.declare(metadata i64* %i, metadata !20139, metadata !DIExpression()), !dbg !20140
  call void @llvm.dbg.declare(metadata i8** %last_val, metadata !20141, metadata !DIExpression()), !dbg !20142
  store i8* null, i8** %last_val, align 8, !dbg !20142, !tbaa !2648
  %call = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2.490, i64 0, i64 0)) #9, !dbg !20143
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !20143, !tbaa !2648
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !20143
  store i64 0, i64* %i, align 8, !dbg !20144, !tbaa !3288
  br label %for.cond, !dbg !20146

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !20147, !tbaa !2648
  %2 = load i64, i64* %i, align 8, !dbg !20149, !tbaa !3288
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %2, !dbg !20147, !ctir !1346
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !20147, !tbaa !2648
  %tobool = icmp ne i8* %3, null, !dbg !20150
  br i1 %tobool, label %for.body, label %for.end, !dbg !20150

for.body:                                         ; preds = %for.cond
  %4 = load i64, i64* %i, align 8, !dbg !20151, !tbaa !3288
  %cmp = icmp eq i64 %4, 0, !dbg !20153
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !20154

lor.lhs.false:                                    ; preds = %for.body
  %5 = load i8*, i8** %last_val, align 8, !dbg !20155, !tbaa !2648
  %6 = load i8*, i8** %vallist.addr, align 8, !dbg !20156, !tbaa !2648
  %7 = load i64, i64* %valsize.addr, align 8, !dbg !20157, !tbaa !3288
  %8 = load i64, i64* %i, align 8, !dbg !20158, !tbaa !3288
  %mul = mul i64 %7, %8, !dbg !20159
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %mul, !dbg !20160
  %9 = load i64, i64* %valsize.addr, align 8, !dbg !20161, !tbaa !3288
  %call2 = call i32 @memcmp(i8* %5, i8* %add.ptr, i64 %9) #14, !dbg !20162
  %tobool3 = icmp ne i32 %call2, 0, !dbg !20162
  br i1 %tobool3, label %if.then, label %if.else, !dbg !20163

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !20164, !tbaa !2648
  %11 = load i8**, i8*** %arglist.addr, align 8, !dbg !20166, !tbaa !2648
  %12 = load i64, i64* %i, align 8, !dbg !20167, !tbaa !3288
  %arrayidx4 = getelementptr inbounds i8*, i8** %11, i64 %12, !dbg !20166, !ctir !1346
  %13 = load i8*, i8** %arrayidx4, align 8, !dbg !20166, !tbaa !2648
  %call5 = call i8* @quote(i8* %13), !dbg !20168
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3.491, i64 0, i64 0), i8* %call5), !dbg !20169
  %14 = load i8*, i8** %vallist.addr, align 8, !dbg !20170, !tbaa !2648
  %15 = load i64, i64* %valsize.addr, align 8, !dbg !20171, !tbaa !3288
  %16 = load i64, i64* %i, align 8, !dbg !20172, !tbaa !3288
  %mul7 = mul i64 %15, %16, !dbg !20173
  %add.ptr8 = getelementptr inbounds i8, i8* %14, i64 %mul7, !dbg !20174
  store i8* %add.ptr8, i8** %last_val, align 8, !dbg !20175, !tbaa !2648
  br label %if.end, !dbg !20176

if.else:                                          ; preds = %lor.lhs.false
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !20177, !tbaa !2648
  %18 = load i8**, i8*** %arglist.addr, align 8, !dbg !20179, !tbaa !2648
  %19 = load i64, i64* %i, align 8, !dbg !20180, !tbaa !3288
  %arrayidx9 = getelementptr inbounds i8*, i8** %18, i64 %19, !dbg !20179, !ctir !1346
  %20 = load i8*, i8** %arrayidx9, align 8, !dbg !20179, !tbaa !2648
  %call10 = call i8* @quote(i8* %20), !dbg !20181
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.492, i64 0, i64 0), i8* %call10), !dbg !20182
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !20183

for.inc:                                          ; preds = %if.end
  %21 = load i64, i64* %i, align 8, !dbg !20184, !tbaa !3288
  %inc = add i64 %21, 1, !dbg !20184
  store i64 %inc, i64* %i, align 8, !dbg !20184, !tbaa !3288
  br label %for.cond, !dbg !20185, !llvm.loop !20186

for.end:                                          ; preds = %for.cond
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !20188, !tbaa !2648
  %call12 = call i32 @putc_unlocked(i32 10, %struct._IO_FILE* %22), !dbg !20188
  ret void, !dbg !20189
}

declare dso_local i32 @putc_unlocked(i32, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @__xargmatch_internal(i8* %context, i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize, void ()* %exit_fn) #4 !dbg !20190 !ctir !1385 {
entry:
  %retval = alloca i64, align 8
  %context.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %exit_fn.addr = alloca void ()*, align 8
  %res = alloca i64, align 8, !ctir !654
  store i8* %context, i8** %context.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !20191, metadata !DIExpression()), !dbg !20192
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !20193, metadata !DIExpression()), !dbg !20194
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !20195, metadata !DIExpression()), !dbg !20196
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !20197, metadata !DIExpression()), !dbg !20198
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !20199, metadata !DIExpression()), !dbg !20200
  store void ()* %exit_fn, void ()** %exit_fn.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata void ()** %exit_fn.addr, metadata !20201, metadata !DIExpression()), !dbg !20202
  call void @llvm.dbg.declare(metadata i64* %res, metadata !20203, metadata !DIExpression()), !dbg !20204
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !20205, !tbaa !2648
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !20206, !tbaa !2648
  %2 = load i8*, i8** %vallist.addr, align 8, !dbg !20207, !tbaa !2648
  %3 = load i64, i64* %valsize.addr, align 8, !dbg !20208, !tbaa !3288
  %call = call i64 @argmatch(i8* %0, i8** %1, i8* %2, i64 %3) #14, !dbg !20209
  store i64 %call, i64* %res, align 8, !dbg !20204, !tbaa !3288
  %4 = load i64, i64* %res, align 8, !dbg !20210, !tbaa !3288
  %cmp = icmp sge i64 %4, 0, !dbg !20212
  br i1 %cmp, label %if.then, label %if.end, !dbg !20213

if.then:                                          ; preds = %entry
  %5 = load i64, i64* %res, align 8, !dbg !20214, !tbaa !3288
  store i64 %5, i64* %retval, align 8, !dbg !20215
  br label %return, !dbg !20215

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %context.addr, align 8, !dbg !20216, !tbaa !2648
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !20217, !tbaa !2648
  %8 = load i64, i64* %res, align 8, !dbg !20218, !tbaa !3288
  call void @argmatch_invalid(i8* %6, i8* %7, i64 %8), !dbg !20219
  %9 = load i8**, i8*** %arglist.addr, align 8, !dbg !20220, !tbaa !2648
  %10 = load i8*, i8** %vallist.addr, align 8, !dbg !20221, !tbaa !2648
  %11 = load i64, i64* %valsize.addr, align 8, !dbg !20222, !tbaa !3288
  call void @argmatch_valid(i8** %9, i8* %10, i64 %11), !dbg !20223
  %12 = load void ()*, void ()** %exit_fn.addr, align 8, !dbg !20224, !tbaa !2648
  call void %12(), !dbg !20225
  store i64 -1, i64* %retval, align 8, !dbg !20226
  br label %return, !dbg !20226

return:                                           ; preds = %if.end, %if.then
  %13 = load i64, i64* %retval, align 8, !dbg !20227
  ret i64 %13, !dbg !20227
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @argmatch_to_argument(i8* %value, i8** %arglist, i8* %vallist, i64 %valsize) #10 !dbg !20228 !ctir !1387 {
entry:
  %retval = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8, !ctir !55
  store i8* %value, i8** %value.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !20229, metadata !DIExpression()), !dbg !20230
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !20231, metadata !DIExpression()), !dbg !20232
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !20233, metadata !DIExpression()), !dbg !20234
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !20235, metadata !DIExpression()), !dbg !20236
  call void @llvm.dbg.declare(metadata i64* %i, metadata !20237, metadata !DIExpression()), !dbg !20238
  store i64 0, i64* %i, align 8, !dbg !20239, !tbaa !3288
  br label %for.cond, !dbg !20241

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8**, i8*** %arglist.addr, align 8, !dbg !20242, !tbaa !2648
  %1 = load i64, i64* %i, align 8, !dbg !20244, !tbaa !3288
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 %1, !dbg !20242, !ctir !1346
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !20242, !tbaa !2648
  %tobool = icmp ne i8* %2, null, !dbg !20245
  br i1 %tobool, label %for.body, label %for.end, !dbg !20245

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %value.addr, align 8, !dbg !20246, !tbaa !2648
  %4 = load i8*, i8** %vallist.addr, align 8, !dbg !20248, !tbaa !2648
  %5 = load i64, i64* %valsize.addr, align 8, !dbg !20249, !tbaa !3288
  %6 = load i64, i64* %i, align 8, !dbg !20250, !tbaa !3288
  %mul = mul i64 %5, %6, !dbg !20251
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %mul, !dbg !20252
  %7 = load i64, i64* %valsize.addr, align 8, !dbg !20253, !tbaa !3288
  %call = call i32 @memcmp(i8* %3, i8* %add.ptr, i64 %7) #14, !dbg !20254
  %tobool1 = icmp ne i32 %call, 0, !dbg !20254
  br i1 %tobool1, label %if.end, label %if.then, !dbg !20255

if.then:                                          ; preds = %for.body
  %8 = load i8**, i8*** %arglist.addr, align 8, !dbg !20256, !tbaa !2648
  %9 = load i64, i64* %i, align 8, !dbg !20257, !tbaa !3288
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %9, !dbg !20256, !ctir !1346
  %10 = load i8*, i8** %arrayidx2, align 8, !dbg !20256, !tbaa !2648
  store i8* %10, i8** %retval, align 8, !dbg !20258
  br label %return, !dbg !20258

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !20259

for.inc:                                          ; preds = %if.end
  %11 = load i64, i64* %i, align 8, !dbg !20260, !tbaa !3288
  %inc = add i64 %11, 1, !dbg !20260
  store i64 %inc, i64* %i, align 8, !dbg !20260, !tbaa !3288
  br label %for.cond, !dbg !20261, !llvm.loop !20262

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !20264
  br label %return, !dbg !20264

return:                                           ; preds = %for.end, %if.then
  %12 = load i8*, i8** %retval, align 8, !dbg !20265
  ret i8* %12, !dbg !20265
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotl64(i64 %x, i32 %n) #4 !dbg !20266 !ctir !2285 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !20268, metadata !DIExpression()), !dbg !20269
  store i32 %n, i32* %n.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !20270, metadata !DIExpression()), !dbg !20271
  %0 = load i64, i64* %x.addr, align 8, !dbg !20272, !tbaa !3288
  %1 = load i32, i32* %n.addr, align 4, !dbg !20273, !tbaa !2635
  %sh_prom = zext i32 %1 to i64, !dbg !20274
  %shl = shl i64 %0, %sh_prom, !dbg !20274
  %2 = load i64, i64* %x.addr, align 8, !dbg !20275, !tbaa !3288
  %3 = load i32, i32* %n.addr, align 4, !dbg !20276, !tbaa !2635
  %sub = sub nsw i32 64, %3, !dbg !20277
  %sh_prom1 = zext i32 %sub to i64, !dbg !20278
  %shr = lshr i64 %2, %sh_prom1, !dbg !20278
  %or = or i64 %shl, %shr, !dbg !20279
  ret i64 %or, !dbg !20280
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotr64(i64 %x, i32 %n) #4 !dbg !20281 !ctir !2285 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !20282, metadata !DIExpression()), !dbg !20283
  store i32 %n, i32* %n.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !20284, metadata !DIExpression()), !dbg !20285
  %0 = load i64, i64* %x.addr, align 8, !dbg !20286, !tbaa !3288
  %1 = load i32, i32* %n.addr, align 4, !dbg !20287, !tbaa !2635
  %sh_prom = zext i32 %1 to i64, !dbg !20288
  %shr = lshr i64 %0, %sh_prom, !dbg !20288
  %2 = load i64, i64* %x.addr, align 8, !dbg !20289, !tbaa !3288
  %3 = load i32, i32* %n.addr, align 4, !dbg !20290, !tbaa !2635
  %sub = sub nsw i32 64, %3, !dbg !20291
  %sh_prom1 = zext i32 %sub to i64, !dbg !20292
  %shl = shl i64 %2, %sh_prom1, !dbg !20292
  %or = or i64 %shr, %shl, !dbg !20293
  ret i64 %or, !dbg !20294
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rotl32(i32 %x, i32 %n) #4 !dbg !20295 !ctir !2287 {
entry:
  %x.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !20296, metadata !DIExpression()), !dbg !20297
  store i32 %n, i32* %n.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !20298, metadata !DIExpression()), !dbg !20299
  %0 = load i32, i32* %x.addr, align 4, !dbg !20300, !tbaa !2635
  %1 = load i32, i32* %n.addr, align 4, !dbg !20301, !tbaa !2635
  %shl = shl i32 %0, %1, !dbg !20302
  %2 = load i32, i32* %x.addr, align 4, !dbg !20303, !tbaa !2635
  %3 = load i32, i32* %n.addr, align 4, !dbg !20304, !tbaa !2635
  %sub = sub nsw i32 32, %3, !dbg !20305
  %shr = lshr i32 %2, %sub, !dbg !20306
  %or = or i32 %shl, %shr, !dbg !20307
  ret i32 %or, !dbg !20308
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rotr32(i32 %x, i32 %n) #4 !dbg !20309 !ctir !2287 {
entry:
  %x.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !20310, metadata !DIExpression()), !dbg !20311
  store i32 %n, i32* %n.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !20312, metadata !DIExpression()), !dbg !20313
  %0 = load i32, i32* %x.addr, align 4, !dbg !20314, !tbaa !2635
  %1 = load i32, i32* %n.addr, align 4, !dbg !20315, !tbaa !2635
  %shr = lshr i32 %0, %1, !dbg !20316
  %2 = load i32, i32* %x.addr, align 4, !dbg !20317, !tbaa !2635
  %3 = load i32, i32* %n.addr, align 4, !dbg !20318, !tbaa !2635
  %sub = sub nsw i32 32, %3, !dbg !20319
  %shl = shl i32 %2, %sub, !dbg !20320
  %or = or i32 %shr, %shl, !dbg !20321
  ret i32 %or, !dbg !20322
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotl_sz(i64 %x, i32 %n) #4 !dbg !20323 !ctir !2289 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !20324, metadata !DIExpression()), !dbg !20325
  store i32 %n, i32* %n.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !20326, metadata !DIExpression()), !dbg !20327
  %0 = load i64, i64* %x.addr, align 8, !dbg !20328, !tbaa !3288
  %1 = load i32, i32* %n.addr, align 4, !dbg !20329, !tbaa !2635
  %sh_prom = zext i32 %1 to i64, !dbg !20330
  %shl = shl i64 %0, %sh_prom, !dbg !20330
  %2 = load i64, i64* %x.addr, align 8, !dbg !20331, !tbaa !3288
  %3 = load i32, i32* %n.addr, align 4, !dbg !20332, !tbaa !2635
  %conv = sext i32 %3 to i64, !dbg !20332
  %sub = sub i64 64, %conv, !dbg !20333
  %shr = lshr i64 %2, %sub, !dbg !20334
  %or = or i64 %shl, %shr, !dbg !20335
  ret i64 %or, !dbg !20336
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotr_sz(i64 %x, i32 %n) #4 !dbg !20337 !ctir !2289 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !20338, metadata !DIExpression()), !dbg !20339
  store i32 %n, i32* %n.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !20340, metadata !DIExpression()), !dbg !20341
  %0 = load i64, i64* %x.addr, align 8, !dbg !20342, !tbaa !3288
  %1 = load i32, i32* %n.addr, align 4, !dbg !20343, !tbaa !2635
  %sh_prom = zext i32 %1 to i64, !dbg !20344
  %shr = lshr i64 %0, %sh_prom, !dbg !20344
  %2 = load i64, i64* %x.addr, align 8, !dbg !20345, !tbaa !3288
  %3 = load i32, i32* %n.addr, align 4, !dbg !20346, !tbaa !2635
  %conv = sext i32 %3 to i64, !dbg !20346
  %sub = sub i64 64, %conv, !dbg !20347
  %shl = shl i64 %2, %sub, !dbg !20348
  %or = or i64 %shr, %shl, !dbg !20349
  ret i64 %or, !dbg !20350
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @rotl16(i16 zeroext %x, i32 %n) #4 !dbg !20351 !ctir !2291 {
entry:
  %x.addr = alloca i16, align 2
  %n.addr = alloca i32, align 4
  store i16 %x, i16* %x.addr, align 2, !tbaa !14717
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !20352, metadata !DIExpression()), !dbg !20353
  store i32 %n, i32* %n.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !20354, metadata !DIExpression()), !dbg !20355
  %0 = load i16, i16* %x.addr, align 2, !dbg !20356, !tbaa !14717
  %conv = zext i16 %0 to i32, !dbg !20357
  %1 = load i32, i32* %n.addr, align 4, !dbg !20358, !tbaa !2635
  %shl = shl i32 %conv, %1, !dbg !20359
  %2 = load i16, i16* %x.addr, align 2, !dbg !20360, !tbaa !14717
  %conv1 = zext i16 %2 to i32, !dbg !20361
  %3 = load i32, i32* %n.addr, align 4, !dbg !20362, !tbaa !2635
  %sub = sub nsw i32 16, %3, !dbg !20363
  %shr = lshr i32 %conv1, %sub, !dbg !20364
  %or = or i32 %shl, %shr, !dbg !20365
  %and = and i32 %or, 65535, !dbg !20366
  %conv2 = trunc i32 %and to i16, !dbg !20367
  ret i16 %conv2, !dbg !20368
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @rotr16(i16 zeroext %x, i32 %n) #4 !dbg !20369 !ctir !2291 {
entry:
  %x.addr = alloca i16, align 2
  %n.addr = alloca i32, align 4
  store i16 %x, i16* %x.addr, align 2, !tbaa !14717
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !20370, metadata !DIExpression()), !dbg !20371
  store i32 %n, i32* %n.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !20372, metadata !DIExpression()), !dbg !20373
  %0 = load i16, i16* %x.addr, align 2, !dbg !20374, !tbaa !14717
  %conv = zext i16 %0 to i32, !dbg !20375
  %1 = load i32, i32* %n.addr, align 4, !dbg !20376, !tbaa !2635
  %shr = lshr i32 %conv, %1, !dbg !20377
  %2 = load i16, i16* %x.addr, align 2, !dbg !20378, !tbaa !14717
  %conv1 = zext i16 %2 to i32, !dbg !20379
  %3 = load i32, i32* %n.addr, align 4, !dbg !20380, !tbaa !2635
  %sub = sub nsw i32 16, %3, !dbg !20381
  %shl = shl i32 %conv1, %sub, !dbg !20382
  %or = or i32 %shr, %shl, !dbg !20383
  %and = and i32 %or, 65535, !dbg !20384
  %conv2 = trunc i32 %and to i16, !dbg !20385
  ret i16 %conv2, !dbg !20386
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i8 @rotl8(i8 zeroext %x, i32 %n) #4 !dbg !20387 !ctir !2295 {
entry:
  %x.addr = alloca i8, align 1
  %n.addr = alloca i32, align 4
  store i8 %x, i8* %x.addr, align 1, !tbaa !3295
  call void @llvm.dbg.declare(metadata i8* %x.addr, metadata !20388, metadata !DIExpression()), !dbg !20389
  store i32 %n, i32* %n.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !20390, metadata !DIExpression()), !dbg !20391
  %0 = load i8, i8* %x.addr, align 1, !dbg !20392, !tbaa !3295
  %conv = zext i8 %0 to i32, !dbg !20393
  %1 = load i32, i32* %n.addr, align 4, !dbg !20394, !tbaa !2635
  %shl = shl i32 %conv, %1, !dbg !20395
  %2 = load i8, i8* %x.addr, align 1, !dbg !20396, !tbaa !3295
  %conv1 = zext i8 %2 to i32, !dbg !20397
  %3 = load i32, i32* %n.addr, align 4, !dbg !20398, !tbaa !2635
  %sub = sub nsw i32 8, %3, !dbg !20399
  %shr = lshr i32 %conv1, %sub, !dbg !20400
  %or = or i32 %shl, %shr, !dbg !20401
  %and = and i32 %or, 255, !dbg !20402
  %conv2 = trunc i32 %and to i8, !dbg !20403
  ret i8 %conv2, !dbg !20404
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i8 @rotr8(i8 zeroext %x, i32 %n) #4 !dbg !20405 !ctir !2295 {
entry:
  %x.addr = alloca i8, align 1
  %n.addr = alloca i32, align 4
  store i8 %x, i8* %x.addr, align 1, !tbaa !3295
  call void @llvm.dbg.declare(metadata i8* %x.addr, metadata !20406, metadata !DIExpression()), !dbg !20407
  store i32 %n, i32* %n.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !20408, metadata !DIExpression()), !dbg !20409
  %0 = load i8, i8* %x.addr, align 1, !dbg !20410, !tbaa !3295
  %conv = zext i8 %0 to i32, !dbg !20411
  %1 = load i32, i32* %n.addr, align 4, !dbg !20412, !tbaa !2635
  %shr = lshr i32 %conv, %1, !dbg !20413
  %2 = load i8, i8* %x.addr, align 1, !dbg !20414, !tbaa !3295
  %conv1 = zext i8 %2 to i32, !dbg !20415
  %3 = load i32, i32* %n.addr, align 4, !dbg !20416, !tbaa !2635
  %sub = sub nsw i32 8, %3, !dbg !20417
  %shl = shl i32 %conv1, %sub, !dbg !20418
  %or = or i32 %shr, %shl, !dbg !20419
  %and = and i32 %or, 255, !dbg !20420
  %conv2 = trunc i32 %and to i8, !dbg !20421
  ret i8 %conv2, !dbg !20422
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @c_strcasecmp(i8* %s1, i8* %s2) #10 !dbg !20423 !ctir !1865 {
entry:
  %retval = alloca i32, align 4
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  %p1 = alloca i8*, align 8, !ctir !554
  %p2 = alloca i8*, align 8, !ctir !554
  %c1 = alloca i8, align 1, !ctir !556
  %c2 = alloca i8, align 1, !ctir !556
  store i8* %s1, i8** %s1.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !20425, metadata !DIExpression()), !dbg !20426
  store i8* %s2, i8** %s2.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !20427, metadata !DIExpression()), !dbg !20428
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !20429, metadata !DIExpression()), !dbg !20430
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !20431, !tbaa !2648
  store i8* %0, i8** %p1, align 8, !dbg !20430, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %p2, metadata !20432, metadata !DIExpression()), !dbg !20433
  %1 = load i8*, i8** %s2.addr, align 8, !dbg !20434, !tbaa !2648
  store i8* %1, i8** %p2, align 8, !dbg !20433, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8* %c1, metadata !20435, metadata !DIExpression()), !dbg !20436
  call void @llvm.dbg.declare(metadata i8* %c2, metadata !20437, metadata !DIExpression()), !dbg !20438
  %2 = load i8*, i8** %p1, align 8, !dbg !20439, !tbaa !2648
  %3 = load i8*, i8** %p2, align 8, !dbg !20441, !tbaa !2648
  %cmp = icmp eq i8* %2, %3, !dbg !20442
  br i1 %cmp, label %if.then, label %if.end, !dbg !20443

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !20444
  br label %return, !dbg !20444

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !20445

do.body:                                          ; preds = %do.cond, %if.end
  %4 = load i8*, i8** %p1, align 8, !dbg !20446, !tbaa !2648
  %5 = load i8, i8* %4, align 1, !dbg !20448, !tbaa !3295, !ctir !555
  %conv = zext i8 %5 to i32, !dbg !20448
  %call = call i32 @c_tolower(i32 %conv), !dbg !20449
  %conv1 = trunc i32 %call to i8, !dbg !20449
  store i8 %conv1, i8* %c1, align 1, !dbg !20450, !tbaa !3295
  %6 = load i8*, i8** %p2, align 8, !dbg !20451, !tbaa !2648
  %7 = load i8, i8* %6, align 1, !dbg !20452, !tbaa !3295, !ctir !555
  %conv2 = zext i8 %7 to i32, !dbg !20452
  %call3 = call i32 @c_tolower(i32 %conv2), !dbg !20453
  %conv4 = trunc i32 %call3 to i8, !dbg !20453
  store i8 %conv4, i8* %c2, align 1, !dbg !20454, !tbaa !3295
  %8 = load i8, i8* %c1, align 1, !dbg !20455, !tbaa !3295
  %conv5 = zext i8 %8 to i32, !dbg !20455
  %cmp6 = icmp eq i32 %conv5, 0, !dbg !20457
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !20458

if.then8:                                         ; preds = %do.body
  br label %do.end, !dbg !20459

if.end9:                                          ; preds = %do.body
  %9 = load i8*, i8** %p1, align 8, !dbg !20460, !tbaa !2648
  %incdec.ptr = getelementptr inbounds i8, i8* %9, i32 1, !dbg !20460
  store i8* %incdec.ptr, i8** %p1, align 8, !dbg !20460, !tbaa !2648
  %10 = load i8*, i8** %p2, align 8, !dbg !20461, !tbaa !2648
  %incdec.ptr10 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !20461
  store i8* %incdec.ptr10, i8** %p2, align 8, !dbg !20461, !tbaa !2648
  br label %do.cond, !dbg !20462

do.cond:                                          ; preds = %if.end9
  %11 = load i8, i8* %c1, align 1, !dbg !20463, !tbaa !3295
  %conv11 = zext i8 %11 to i32, !dbg !20463
  %12 = load i8, i8* %c2, align 1, !dbg !20464, !tbaa !3295
  %conv12 = zext i8 %12 to i32, !dbg !20464
  %cmp13 = icmp eq i32 %conv11, %conv12, !dbg !20465
  br i1 %cmp13, label %do.body, label %do.end, !dbg !20462, !llvm.loop !20466

do.end:                                           ; preds = %do.cond, %if.then8
  %13 = load i8, i8* %c1, align 1, !dbg !20468, !tbaa !3295
  %conv15 = zext i8 %13 to i32, !dbg !20468
  %14 = load i8, i8* %c2, align 1, !dbg !20470, !tbaa !3295
  %conv16 = zext i8 %14 to i32, !dbg !20470
  %sub = sub nsw i32 %conv15, %conv16, !dbg !20471
  store i32 %sub, i32* %retval, align 4, !dbg !20472
  br label %return, !dbg !20472

return:                                           ; preds = %do.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !20473
  ret i32 %15, !dbg !20473
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @close_stream(%struct._IO_FILE* %stream) #4 !dbg !20474 !ctir !2305 {
entry:
  %retval = alloca i32, align 4
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %some_pending = alloca i8, align 1, !ctir !2341
  %prev_fail = alloca i8, align 1, !ctir !2341
  %fclose_fail = alloca i8, align 1, !ctir !2341
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !20476, metadata !DIExpression()), !dbg !20477
  call void @llvm.dbg.declare(metadata i8* %some_pending, metadata !20478, metadata !DIExpression()), !dbg !20479
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !20480, !tbaa !2648
  %call = call i64 @__fpending(%struct._IO_FILE* %0) #9, !dbg !20481
  %cmp = icmp ne i64 %call, 0, !dbg !20482
  %frombool = zext i1 %cmp to i8, !dbg !20479
  store i8 %frombool, i8* %some_pending, align 1, !dbg !20479, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %prev_fail, metadata !20483, metadata !DIExpression()), !dbg !20484
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !20485, !tbaa !2648
  %call1 = call i32 @ferror_unlocked(%struct._IO_FILE* %1) #9, !dbg !20485
  %cmp2 = icmp ne i32 %call1, 0, !dbg !20486
  %frombool3 = zext i1 %cmp2 to i8, !dbg !20484
  store i8 %frombool3, i8* %prev_fail, align 1, !dbg !20484, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8* %fclose_fail, metadata !20487, metadata !DIExpression()), !dbg !20488
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !20489, !tbaa !2648
  %call4 = call i32 @rpl_fclose(%struct._IO_FILE* %2), !dbg !20490
  %cmp5 = icmp ne i32 %call4, 0, !dbg !20491
  %frombool6 = zext i1 %cmp5 to i8, !dbg !20488
  store i8 %frombool6, i8* %fclose_fail, align 1, !dbg !20488, !tbaa !2742
  %3 = load i8, i8* %prev_fail, align 1, !dbg !20492, !tbaa !2742
  %tobool = trunc i8 %3 to i1, !dbg !20492
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !20494

lor.lhs.false:                                    ; preds = %entry
  %4 = load i8, i8* %fclose_fail, align 1, !dbg !20495, !tbaa !2742
  %tobool7 = trunc i8 %4 to i1, !dbg !20495
  br i1 %tobool7, label %land.lhs.true, label %if.end15, !dbg !20496

land.lhs.true:                                    ; preds = %lor.lhs.false
  %5 = load i8, i8* %some_pending, align 1, !dbg !20497, !tbaa !2742
  %tobool8 = trunc i8 %5 to i1, !dbg !20497
  br i1 %tobool8, label %if.then, label %lor.lhs.false9, !dbg !20498

lor.lhs.false9:                                   ; preds = %land.lhs.true
  %call10 = call i32* @__errno_location() #16, !dbg !20499
  %6 = load i32, i32* %call10, align 4, !dbg !20499, !tbaa !2635, !ctir !7
  %cmp11 = icmp ne i32 %6, 9, !dbg !20500
  br i1 %cmp11, label %if.then, label %if.end15, !dbg !20501

if.then:                                          ; preds = %lor.lhs.false9, %land.lhs.true, %entry
  %7 = load i8, i8* %fclose_fail, align 1, !dbg !20502, !tbaa !2742
  %tobool12 = trunc i8 %7 to i1, !dbg !20502
  br i1 %tobool12, label %if.end, label %if.then13, !dbg !20505

if.then13:                                        ; preds = %if.then
  %call14 = call i32* @__errno_location() #16, !dbg !20506
  store i32 0, i32* %call14, align 4, !dbg !20507, !tbaa !2635, !ctir !7
  br label %if.end, !dbg !20506

if.end:                                           ; preds = %if.then13, %if.then
  store i32 -1, i32* %retval, align 4, !dbg !20508
  br label %return, !dbg !20508

if.end15:                                         ; preds = %lor.lhs.false9, %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !20509
  br label %return, !dbg !20509

return:                                           ; preds = %if.end15, %if.end
  %8 = load i32, i32* %retval, align 4, !dbg !20510
  ret i32 %8, !dbg !20510
}

; Function Attrs: nounwind
declare dso_local i64 @__fpending(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i32 @ferror_unlocked(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.__dirstream* @opendir_safer(i8* %name) #4 !dbg !20511 !ctir !2345 {
entry:
  %name.addr = alloca i8*, align 8
  %dp = alloca %struct.__dirstream*, align 8, !ctir !695
  %fd = alloca i32, align 4, !ctir !7
  %newdp = alloca %struct.__dirstream*, align 8, !ctir !695
  %e = alloca i32, align 4, !ctir !7
  %f = alloca i32, align 4, !ctir !7
  store i8* %name, i8** %name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !20513, metadata !DIExpression()), !dbg !20514
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dp, metadata !20515, metadata !DIExpression()), !dbg !20516
  %0 = load i8*, i8** %name.addr, align 8, !dbg !20517, !tbaa !2648
  %call = call %struct.__dirstream* @opendir(i8* %0), !dbg !20518
  store %struct.__dirstream* %call, %struct.__dirstream** %dp, align 8, !dbg !20516, !tbaa !2648
  %1 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !20519, !tbaa !2648
  %tobool = icmp ne %struct.__dirstream* %1, null, !dbg !20519
  br i1 %tobool, label %if.then, label %if.end17, !dbg !20521

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !20522, metadata !DIExpression()), !dbg !20524
  %2 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !20525, !tbaa !2648
  %call1 = call i32 @dirfd(%struct.__dirstream* %2) #9, !dbg !20526
  store i32 %call1, i32* %fd, align 4, !dbg !20524, !tbaa !2635
  %3 = load i32, i32* %fd, align 4, !dbg !20527, !tbaa !2635
  %cmp = icmp sle i32 0, %3, !dbg !20529
  br i1 %cmp, label %land.lhs.true, label %if.end16, !dbg !20530

land.lhs.true:                                    ; preds = %if.then
  %4 = load i32, i32* %fd, align 4, !dbg !20531, !tbaa !2635
  %cmp2 = icmp sle i32 %4, 2, !dbg !20532
  br i1 %cmp2, label %if.then3, label %if.end16, !dbg !20533

if.then3:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %newdp, metadata !20534, metadata !DIExpression()), !dbg !20536
  call void @llvm.dbg.declare(metadata i32* %e, metadata !20537, metadata !DIExpression()), !dbg !20538
  call void @llvm.dbg.declare(metadata i32* %f, metadata !20539, metadata !DIExpression()), !dbg !20540
  %5 = load i32, i32* %fd, align 4, !dbg !20541, !tbaa !2635
  %call4 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %5, i32 1030, i32 3), !dbg !20542
  store i32 %call4, i32* %f, align 4, !dbg !20540, !tbaa !2635
  %6 = load i32, i32* %f, align 4, !dbg !20543, !tbaa !2635
  %cmp5 = icmp slt i32 %6, 0, !dbg !20545
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !20546

if.then6:                                         ; preds = %if.then3
  %call7 = call i32* @__errno_location() #16, !dbg !20547
  %7 = load i32, i32* %call7, align 4, !dbg !20547, !tbaa !2635, !ctir !7
  store i32 %7, i32* %e, align 4, !dbg !20549, !tbaa !2635
  store %struct.__dirstream* null, %struct.__dirstream** %newdp, align 8, !dbg !20550, !tbaa !2648
  br label %if.end13, !dbg !20551

if.else:                                          ; preds = %if.then3
  %8 = load i32, i32* %f, align 4, !dbg !20552, !tbaa !2635
  %call8 = call %struct.__dirstream* @fdopendir(i32 %8), !dbg !20554
  store %struct.__dirstream* %call8, %struct.__dirstream** %newdp, align 8, !dbg !20555, !tbaa !2648
  %call9 = call i32* @__errno_location() #16, !dbg !20556
  %9 = load i32, i32* %call9, align 4, !dbg !20556, !tbaa !2635, !ctir !7
  store i32 %9, i32* %e, align 4, !dbg !20557, !tbaa !2635
  %10 = load %struct.__dirstream*, %struct.__dirstream** %newdp, align 8, !dbg !20558, !tbaa !2648
  %tobool10 = icmp ne %struct.__dirstream* %10, null, !dbg !20558
  br i1 %tobool10, label %if.end, label %if.then11, !dbg !20560

if.then11:                                        ; preds = %if.else
  %11 = load i32, i32* %f, align 4, !dbg !20561, !tbaa !2635
  %call12 = call i32 @close(i32 %11), !dbg !20562
  br label %if.end, !dbg !20562

if.end:                                           ; preds = %if.then11, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end, %if.then6
  %12 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !20563, !tbaa !2648
  %call14 = call i32 @closedir(%struct.__dirstream* %12), !dbg !20564
  %13 = load i32, i32* %e, align 4, !dbg !20565, !tbaa !2635
  %call15 = call i32* @__errno_location() #16, !dbg !20566
  store i32 %13, i32* %call15, align 4, !dbg !20567, !tbaa !2635, !ctir !7
  %14 = load %struct.__dirstream*, %struct.__dirstream** %newdp, align 8, !dbg !20568, !tbaa !2648
  store %struct.__dirstream* %14, %struct.__dirstream** %dp, align 8, !dbg !20569, !tbaa !2648
  br label %if.end16, !dbg !20570

if.end16:                                         ; preds = %if.end13, %land.lhs.true, %if.then
  br label %if.end17, !dbg !20571

if.end17:                                         ; preds = %if.end16, %entry
  %15 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !20572, !tbaa !2648
  ret %struct.__dirstream* %15, !dbg !20573
}

declare dso_local %struct.__dirstream* @opendir(i8*) #3

; Function Attrs: nounwind
declare dso_local i32 @dirfd(%struct.__dirstream*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @gettime(%struct.timespec* nonnull %ts) #4 !dbg !20574 !ctir !2350 {
entry:
  %ts.addr = alloca %struct.timespec*, align 8
  store %struct.timespec* %ts, %struct.timespec** %ts.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.timespec** %ts.addr, metadata !20576, metadata !DIExpression()), !dbg !20577
  %0 = load %struct.timespec*, %struct.timespec** %ts.addr, align 8, !dbg !20578, !tbaa !2648
  %call = call i32 @clock_gettime(i32 0, %struct.timespec* %0) #9, !dbg !20579
  ret void, !dbg !20580
}

; Function Attrs: nounwind
declare dso_local i32 @clock_gettime(i32, %struct.timespec*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local { i64, i64 } @current_timespec() #4 !dbg !20581 !ctir !2357 {
entry:
  %retval = alloca %struct.timespec, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec* %retval, metadata !20582, metadata !DIExpression()), !dbg !20583
  call void @gettime(%struct.timespec* %retval), !dbg !20584
  %0 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !20585
  %1 = load { i64, i64 }, { i64, i64 }* %0, align 8, !dbg !20585
  ret { i64, i64 } %1, !dbg !20585
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @hard_locale(i32 %category) #4 !dbg !20586 !ctir !256 {
entry:
  %category.addr = alloca i32, align 4
  %hard = alloca i8, align 1, !ctir !142
  %p = alloca i8*, align 8, !ctir !180
  store i32 %category, i32* %category.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %category.addr, metadata !20588, metadata !DIExpression()), !dbg !20589
  call void @llvm.dbg.declare(metadata i8* %hard, metadata !20590, metadata !DIExpression()), !dbg !20591
  store i8 1, i8* %hard, align 1, !dbg !20591, !tbaa !2742
  call void @llvm.dbg.declare(metadata i8** %p, metadata !20592, metadata !DIExpression()), !dbg !20593
  %0 = load i32, i32* %category.addr, align 4, !dbg !20594, !tbaa !2635
  %call = call i8* @setlocale(i32 %0, i8* null) #9, !dbg !20595
  store i8* %call, i8** %p, align 8, !dbg !20593, !tbaa !2648
  %1 = load i8*, i8** %p, align 8, !dbg !20596, !tbaa !2648
  %tobool = icmp ne i8* %1, null, !dbg !20596
  br i1 %tobool, label %if.then, label %if.end5, !dbg !20598

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %p, align 8, !dbg !20599, !tbaa !2648
  %call1 = call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.507, i64 0, i64 0)) #14, !dbg !20604
  %cmp = icmp eq i32 %call1, 0, !dbg !20605
  br i1 %cmp, label %if.then4, label %lor.lhs.false, !dbg !20606

lor.lhs.false:                                    ; preds = %if.then
  %3 = load i8*, i8** %p, align 8, !dbg !20607, !tbaa !2648
  %call2 = call i32 @strcmp(i8* %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.508, i64 0, i64 0)) #14, !dbg !20608
  %cmp3 = icmp eq i32 %call2, 0, !dbg !20609
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !20610

if.then4:                                         ; preds = %lor.lhs.false, %if.then
  store i8 0, i8* %hard, align 1, !dbg !20611, !tbaa !2742
  br label %if.end, !dbg !20612

if.end:                                           ; preds = %if.then4, %lor.lhs.false
  br label %if.end5, !dbg !20613

if.end5:                                          ; preds = %if.end, %entry
  %4 = load i8, i8* %hard, align 1, !dbg !20614, !tbaa !2742
  %tobool6 = trunc i8 %4 to i1, !dbg !20614
  ret i1 %tobool6, !dbg !20615
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_pjw(i8* %x, i64 %tablesize) #10 !dbg !20616 !ctir !635 {
entry:
  %x.addr = alloca i8*, align 8
  %tablesize.addr = alloca i64, align 8
  %s = alloca i8*, align 8, !ctir !180
  %h = alloca i64, align 8, !ctir !55
  store i8* %x, i8** %x.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !20618, metadata !DIExpression()), !dbg !20619
  store i64 %tablesize, i64* %tablesize.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %tablesize.addr, metadata !20620, metadata !DIExpression()), !dbg !20621
  call void @llvm.dbg.declare(metadata i8** %s, metadata !20622, metadata !DIExpression()), !dbg !20623
  call void @llvm.dbg.declare(metadata i64* %h, metadata !20624, metadata !DIExpression()), !dbg !20625
  store i64 0, i64* %h, align 8, !dbg !20625, !tbaa !3288
  %0 = load i8*, i8** %x.addr, align 8, !dbg !20626, !tbaa !2648
  store i8* %0, i8** %s, align 8, !dbg !20628, !tbaa !2648
  br label %for.cond, !dbg !20629

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8*, i8** %s, align 8, !dbg !20630, !tbaa !2648
  %2 = load i8, i8* %1, align 1, !dbg !20632, !tbaa !3295, !ctir !181
  %tobool = icmp ne i8 %2, 0, !dbg !20633
  br i1 %tobool, label %for.body, label %for.end, !dbg !20633

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %s, align 8, !dbg !20634, !tbaa !2648
  %4 = load i8, i8* %3, align 1, !dbg !20635, !tbaa !3295, !ctir !181
  %conv = sext i8 %4 to i64, !dbg !20635
  %5 = load i64, i64* %h, align 8, !dbg !20636, !tbaa !3288
  %shl = shl i64 %5, 9, !dbg !20637
  %6 = load i64, i64* %h, align 8, !dbg !20638, !tbaa !3288
  %shr = lshr i64 %6, 55, !dbg !20639
  %or = or i64 %shl, %shr, !dbg !20640
  %add = add i64 %conv, %or, !dbg !20641
  store i64 %add, i64* %h, align 8, !dbg !20642, !tbaa !3288
  br label %for.inc, !dbg !20643

for.inc:                                          ; preds = %for.body
  %7 = load i8*, i8** %s, align 8, !dbg !20644, !tbaa !2648
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !20644
  store i8* %incdec.ptr, i8** %s, align 8, !dbg !20644, !tbaa !2648
  br label %for.cond, !dbg !20645, !llvm.loop !20646

for.end:                                          ; preds = %for.cond
  %8 = load i64, i64* %h, align 8, !dbg !20648, !tbaa !3288
  %9 = load i64, i64* %tablesize.addr, align 8, !dbg !20649, !tbaa !3288
  %rem = urem i64 %8, %9, !dbg !20650
  ret i64 %rem, !dbg !20651
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @locale_charset() #4 !dbg !20652 !ctir !2368 {
entry:
  %codeset = alloca i8*, align 8, !ctir !180
  call void @llvm.dbg.declare(metadata i8** %codeset, metadata !20654, metadata !DIExpression()), !dbg !20655
  %call = call i8* @nl_langinfo(i32 14) #9, !dbg !20656
  store i8* %call, i8** %codeset, align 8, !dbg !20657, !tbaa !2648
  %0 = load i8*, i8** %codeset, align 8, !dbg !20658, !tbaa !2648
  %cmp = icmp eq i8* %0, null, !dbg !20660
  br i1 %cmp, label %if.then, label %if.end, !dbg !20661

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.513, i64 0, i64 0), i8** %codeset, align 8, !dbg !20662, !tbaa !2648
  br label %if.end, !dbg !20663

if.end:                                           ; preds = %if.then, %entry
  %1 = load i8*, i8** %codeset, align 8, !dbg !20664, !tbaa !2648
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !20664, !ctir !180
  %2 = load i8, i8* %arrayidx, align 1, !dbg !20664, !tbaa !3295
  %conv = sext i8 %2 to i32, !dbg !20664
  %cmp1 = icmp eq i32 %conv, 0, !dbg !20668
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !20669

if.then3:                                         ; preds = %if.end
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.514, i64 0, i64 0), i8** %codeset, align 8, !dbg !20670, !tbaa !2648
  br label %if.end4, !dbg !20671

if.end4:                                          ; preds = %if.then3, %if.end
  %3 = load i8*, i8** %codeset, align 8, !dbg !20672, !tbaa !2648
  ret i8* %3, !dbg !20673
}

; Function Attrs: nounwind
declare dso_local i8* @nl_langinfo(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @dirchownmod(i32 %fd, i8* %dir, i32 %mkdir_mode, i32 %owner, i32 %group, i32 %mode, i32 %mode_bits) #4 !dbg !20674 !ctir !2372 {
entry:
  %fd.addr = alloca i32, align 4
  %dir.addr = alloca i8*, align 8
  %mkdir_mode.addr = alloca i32, align 4
  %owner.addr = alloca i32, align 4
  %group.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %mode_bits.addr = alloca i32, align 4
  %st = alloca %struct.stat, align 8, !ctir !20676
  %result = alloca i32, align 4, !ctir !7
  %dir_mode = alloca i32, align 4, !ctir !139
  %indeterminate = alloca i32, align 4, !ctir !139
  %chmod_mode = alloca i32, align 4, !ctir !139
  %e = alloca i32, align 4, !ctir !7
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !20697, metadata !DIExpression()), !dbg !20698
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !20699, metadata !DIExpression()), !dbg !20700
  store i32 %mkdir_mode, i32* %mkdir_mode.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %mkdir_mode.addr, metadata !20701, metadata !DIExpression()), !dbg !20702
  store i32 %owner, i32* %owner.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %owner.addr, metadata !20703, metadata !DIExpression()), !dbg !20704
  store i32 %group, i32* %group.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %group.addr, metadata !20705, metadata !DIExpression()), !dbg !20706
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !20707, metadata !DIExpression()), !dbg !20708
  store i32 %mode_bits, i32* %mode_bits.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %mode_bits.addr, metadata !20709, metadata !DIExpression()), !dbg !20710
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !20711, metadata !DIExpression()), !dbg !20712
  call void @llvm.dbg.declare(metadata i32* %result, metadata !20713, metadata !DIExpression()), !dbg !20714
  %0 = load i32, i32* %fd.addr, align 4, !dbg !20715, !tbaa !2635
  %cmp = icmp slt i32 %0, 0, !dbg !20716
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !20715

cond.true:                                        ; preds = %entry
  %1 = load i8*, i8** %dir.addr, align 8, !dbg !20717, !tbaa !2648
  %call = call i32 @stat(i8* %1, %struct.stat* %st) #9, !dbg !20718
  br label %cond.end, !dbg !20715

cond.false:                                       ; preds = %entry
  %2 = load i32, i32* %fd.addr, align 4, !dbg !20719, !tbaa !2635
  %call1 = call i32 @fstat(i32 %2, %struct.stat* %st) #9, !dbg !20720
  br label %cond.end, !dbg !20715

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !20715
  store i32 %cond, i32* %result, align 4, !dbg !20714, !tbaa !2635
  %3 = load i32, i32* %result, align 4, !dbg !20721, !tbaa !2635
  %cmp2 = icmp eq i32 %3, 0, !dbg !20723
  br i1 %cmp2, label %if.then, label %if.end54, !dbg !20724

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i32* %dir_mode, metadata !20725, metadata !DIExpression()), !dbg !20727
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !20728, !ctir !20676
  %4 = load i32, i32* %st_mode, align 8, !dbg !20728, !tbaa !2914, !ctir !140
  store i32 %4, i32* %dir_mode, align 4, !dbg !20727, !tbaa !2635
  %5 = load i32, i32* %dir_mode, align 4, !dbg !20729, !tbaa !2635
  %and = and i32 %5, 61440, !dbg !20729
  %cmp3 = icmp eq i32 %and, 16384, !dbg !20729
  br i1 %cmp3, label %if.else, label %if.then4, !dbg !20731

if.then4:                                         ; preds = %if.then
  %call5 = call i32* @__errno_location() #16, !dbg !20732
  store i32 20, i32* %call5, align 4, !dbg !20734, !tbaa !2635, !ctir !7
  store i32 -1, i32* %result, align 4, !dbg !20735, !tbaa !2635
  br label %if.end53, !dbg !20736

if.else:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %indeterminate, metadata !20737, metadata !DIExpression()), !dbg !20739
  store i32 0, i32* %indeterminate, align 4, !dbg !20739, !tbaa !2635
  %6 = load i32, i32* %owner.addr, align 4, !dbg !20740, !tbaa !2635
  %cmp6 = icmp ne i32 %6, -1, !dbg !20742
  br i1 %cmp6, label %land.lhs.true, label %lor.lhs.false, !dbg !20743

land.lhs.true:                                    ; preds = %if.else
  %7 = load i32, i32* %owner.addr, align 4, !dbg !20744, !tbaa !2635
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 4, !dbg !20745, !ctir !20676
  %8 = load i32, i32* %st_uid, align 4, !dbg !20745, !tbaa !4045, !ctir !128
  %cmp7 = icmp ne i32 %7, %8, !dbg !20746
  br i1 %cmp7, label %if.then11, label %lor.lhs.false, !dbg !20747

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.else
  %9 = load i32, i32* %group.addr, align 4, !dbg !20748, !tbaa !2635
  %cmp8 = icmp ne i32 %9, -1, !dbg !20749
  br i1 %cmp8, label %land.lhs.true9, label %if.end30, !dbg !20750

land.lhs.true9:                                   ; preds = %lor.lhs.false
  %10 = load i32, i32* %group.addr, align 4, !dbg !20751, !tbaa !2635
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 5, !dbg !20752, !ctir !20676
  %11 = load i32, i32* %st_gid, align 8, !dbg !20752, !tbaa !4074, !ctir !130
  %cmp10 = icmp ne i32 %10, %11, !dbg !20753
  br i1 %cmp10, label %if.then11, label %if.end30, !dbg !20754

if.then11:                                        ; preds = %land.lhs.true9, %land.lhs.true
  %12 = load i32, i32* %fd.addr, align 4, !dbg !20755, !tbaa !2635
  %cmp12 = icmp sle i32 0, %12, !dbg !20757
  br i1 %cmp12, label %cond.true13, label %cond.false15, !dbg !20758

cond.true13:                                      ; preds = %if.then11
  %13 = load i32, i32* %fd.addr, align 4, !dbg !20759, !tbaa !2635
  %14 = load i32, i32* %owner.addr, align 4, !dbg !20760, !tbaa !2635
  %15 = load i32, i32* %group.addr, align 4, !dbg !20761, !tbaa !2635
  %call14 = call i32 @fchown(i32 %13, i32 %14, i32 %15) #9, !dbg !20762
  br label %cond.end23, !dbg !20758

cond.false15:                                     ; preds = %if.then11
  %16 = load i32, i32* %mkdir_mode.addr, align 4, !dbg !20763, !tbaa !2635
  %cmp16 = icmp ne i32 %16, -1, !dbg !20764
  br i1 %cmp16, label %cond.true17, label %cond.false19, !dbg !20763

cond.true17:                                      ; preds = %cond.false15
  %17 = load i8*, i8** %dir.addr, align 8, !dbg !20765, !tbaa !2648
  %18 = load i32, i32* %owner.addr, align 4, !dbg !20766, !tbaa !2635
  %19 = load i32, i32* %group.addr, align 4, !dbg !20767, !tbaa !2635
  %call18 = call i32 @lchown(i8* %17, i32 %18, i32 %19) #9, !dbg !20768
  br label %cond.end21, !dbg !20763

cond.false19:                                     ; preds = %cond.false15
  %20 = load i8*, i8** %dir.addr, align 8, !dbg !20769, !tbaa !2648
  %21 = load i32, i32* %owner.addr, align 4, !dbg !20770, !tbaa !2635
  %22 = load i32, i32* %group.addr, align 4, !dbg !20771, !tbaa !2635
  %call20 = call i32 @chown(i8* %20, i32 %21, i32 %22) #9, !dbg !20772
  br label %cond.end21, !dbg !20763

cond.end21:                                       ; preds = %cond.false19, %cond.true17
  %cond22 = phi i32 [ %call18, %cond.true17 ], [ %call20, %cond.false19 ], !dbg !20763
  br label %cond.end23, !dbg !20758

cond.end23:                                       ; preds = %cond.end21, %cond.true13
  %cond24 = phi i32 [ %call14, %cond.true13 ], [ %cond22, %cond.end21 ], !dbg !20758
  store i32 %cond24, i32* %result, align 4, !dbg !20773, !tbaa !2635
  %23 = load i32, i32* %result, align 4, !dbg !20774, !tbaa !2635
  %cmp25 = icmp eq i32 %23, 0, !dbg !20776
  br i1 %cmp25, label %land.lhs.true26, label %if.end, !dbg !20777

land.lhs.true26:                                  ; preds = %cond.end23
  %24 = load i32, i32* %dir_mode, align 4, !dbg !20778, !tbaa !2635
  %and27 = and i32 %24, 73, !dbg !20779
  %tobool = icmp ne i32 %and27, 0, !dbg !20779
  br i1 %tobool, label %if.then28, label %if.end, !dbg !20780

if.then28:                                        ; preds = %land.lhs.true26
  %25 = load i32, i32* %dir_mode, align 4, !dbg !20781, !tbaa !2635
  %and29 = and i32 %25, 3072, !dbg !20782
  store i32 %and29, i32* %indeterminate, align 4, !dbg !20783, !tbaa !2635
  br label %if.end, !dbg !20784

if.end:                                           ; preds = %if.then28, %land.lhs.true26, %cond.end23
  br label %if.end30, !dbg !20785

if.end30:                                         ; preds = %if.end, %land.lhs.true9, %lor.lhs.false
  %26 = load i32, i32* %result, align 4, !dbg !20786, !tbaa !2635
  %cmp31 = icmp eq i32 %26, 0, !dbg !20788
  br i1 %cmp31, label %land.lhs.true32, label %if.end52, !dbg !20789

land.lhs.true32:                                  ; preds = %if.end30
  %27 = load i32, i32* %dir_mode, align 4, !dbg !20790, !tbaa !2635
  %28 = load i32, i32* %mode.addr, align 4, !dbg !20791, !tbaa !2635
  %xor = xor i32 %27, %28, !dbg !20792
  %29 = load i32, i32* %indeterminate, align 4, !dbg !20793, !tbaa !2635
  %or = or i32 %xor, %29, !dbg !20794
  %30 = load i32, i32* %mode_bits.addr, align 4, !dbg !20795, !tbaa !2635
  %and33 = and i32 %or, %30, !dbg !20796
  %tobool34 = icmp ne i32 %and33, 0, !dbg !20796
  br i1 %tobool34, label %if.then35, label %if.end52, !dbg !20797

if.then35:                                        ; preds = %land.lhs.true32
  call void @llvm.dbg.declare(metadata i32* %chmod_mode, metadata !20798, metadata !DIExpression()), !dbg !20800
  %31 = load i32, i32* %mode.addr, align 4, !dbg !20801, !tbaa !2635
  %32 = load i32, i32* %dir_mode, align 4, !dbg !20802, !tbaa !2635
  %and36 = and i32 %32, 4095, !dbg !20803
  %33 = load i32, i32* %mode_bits.addr, align 4, !dbg !20804, !tbaa !2635
  %neg = xor i32 %33, -1, !dbg !20805
  %and37 = and i32 %and36, %neg, !dbg !20806
  %or38 = or i32 %31, %and37, !dbg !20807
  store i32 %or38, i32* %chmod_mode, align 4, !dbg !20800, !tbaa !2635
  %34 = load i32, i32* %fd.addr, align 4, !dbg !20808, !tbaa !2635
  %cmp39 = icmp sle i32 0, %34, !dbg !20809
  br i1 %cmp39, label %cond.true40, label %cond.false42, !dbg !20810

cond.true40:                                      ; preds = %if.then35
  %35 = load i32, i32* %fd.addr, align 4, !dbg !20811, !tbaa !2635
  %36 = load i32, i32* %chmod_mode, align 4, !dbg !20812, !tbaa !2635
  %call41 = call i32 @fchmod(i32 %35, i32 %36) #9, !dbg !20813
  br label %cond.end50, !dbg !20810

cond.false42:                                     ; preds = %if.then35
  %37 = load i32, i32* %mkdir_mode.addr, align 4, !dbg !20814, !tbaa !2635
  %cmp43 = icmp ne i32 %37, -1, !dbg !20815
  br i1 %cmp43, label %cond.true44, label %cond.false46, !dbg !20814

cond.true44:                                      ; preds = %cond.false42
  %38 = load i8*, i8** %dir.addr, align 8, !dbg !20816, !tbaa !2648
  %39 = load i32, i32* %chmod_mode, align 4, !dbg !20817, !tbaa !2635
  %call45 = call i32 @chmod(i8* %38, i32 %39) #9, !dbg !20818
  br label %cond.end48, !dbg !20814

cond.false46:                                     ; preds = %cond.false42
  %40 = load i8*, i8** %dir.addr, align 8, !dbg !20819, !tbaa !2648
  %41 = load i32, i32* %chmod_mode, align 4, !dbg !20820, !tbaa !2635
  %call47 = call i32 @chmod(i8* %40, i32 %41) #9, !dbg !20821
  br label %cond.end48, !dbg !20814

cond.end48:                                       ; preds = %cond.false46, %cond.true44
  %cond49 = phi i32 [ %call45, %cond.true44 ], [ %call47, %cond.false46 ], !dbg !20814
  br label %cond.end50, !dbg !20810

cond.end50:                                       ; preds = %cond.end48, %cond.true40
  %cond51 = phi i32 [ %call41, %cond.true40 ], [ %cond49, %cond.end48 ], !dbg !20810
  store i32 %cond51, i32* %result, align 4, !dbg !20822, !tbaa !2635
  br label %if.end52, !dbg !20823

if.end52:                                         ; preds = %cond.end50, %land.lhs.true32, %if.end30
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.then4
  br label %if.end54, !dbg !20824

if.end54:                                         ; preds = %if.end53, %cond.end
  %42 = load i32, i32* %fd.addr, align 4, !dbg !20825, !tbaa !2635
  %cmp55 = icmp sle i32 0, %42, !dbg !20827
  br i1 %cmp55, label %if.then56, label %if.end65, !dbg !20828

if.then56:                                        ; preds = %if.end54
  %43 = load i32, i32* %result, align 4, !dbg !20829, !tbaa !2635
  %cmp57 = icmp eq i32 %43, 0, !dbg !20832
  br i1 %cmp57, label %if.then58, label %if.else60, !dbg !20833

if.then58:                                        ; preds = %if.then56
  %44 = load i32, i32* %fd.addr, align 4, !dbg !20834, !tbaa !2635
  %call59 = call i32 @close(i32 %44), !dbg !20835
  store i32 %call59, i32* %result, align 4, !dbg !20836, !tbaa !2635
  br label %if.end64, !dbg !20837

if.else60:                                        ; preds = %if.then56
  call void @llvm.dbg.declare(metadata i32* %e, metadata !20838, metadata !DIExpression()), !dbg !20840
  %call61 = call i32* @__errno_location() #16, !dbg !20841
  %45 = load i32, i32* %call61, align 4, !dbg !20841, !tbaa !2635, !ctir !7
  store i32 %45, i32* %e, align 4, !dbg !20840, !tbaa !2635
  %46 = load i32, i32* %fd.addr, align 4, !dbg !20842, !tbaa !2635
  %call62 = call i32 @close(i32 %46), !dbg !20843
  %47 = load i32, i32* %e, align 4, !dbg !20844, !tbaa !2635
  %call63 = call i32* @__errno_location() #16, !dbg !20845
  store i32 %47, i32* %call63, align 4, !dbg !20846, !tbaa !2635, !ctir !7
  br label %if.end64

if.end64:                                         ; preds = %if.else60, %if.then58
  br label %if.end65, !dbg !20847

if.end65:                                         ; preds = %if.end64, %if.end54
  %48 = load i32, i32* %result, align 4, !dbg !20848, !tbaa !2635
  ret i32 %48, !dbg !20849
}

; Function Attrs: nounwind
declare dso_local i32 @chown(i8*, i32, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @openat_safer(i32 %fd, i8* %file, i32 %flags, ...) #4 !dbg !20850 !ctir !2377 {
entry:
  %fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %mode = alloca i32, align 4, !ctir !139
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !2379
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !20854, metadata !DIExpression()), !dbg !20855
  store i8* %file, i8** %file.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !20856, metadata !DIExpression()), !dbg !20857
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !20858, metadata !DIExpression()), !dbg !20859
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !20860, metadata !DIExpression()), !dbg !20861
  store i32 0, i32* %mode, align 4, !dbg !20861, !tbaa !2635
  %0 = load i32, i32* %flags.addr, align 4, !dbg !20862, !tbaa !2635
  %and = and i32 %0, 64, !dbg !20864
  %tobool = icmp ne i32 %and, 0, !dbg !20864
  br i1 %tobool, label %if.then, label %if.end, !dbg !20865

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !20866, metadata !DIExpression()), !dbg !20868
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !20869
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !20869
  call void @llvm.va_start(i8* %arraydecay1), !dbg !20869
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !20870
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0, !dbg !20870
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !20870
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !20870
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !20870

vaarg.in_reg:                                     ; preds = %if.then
  %1 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3, !dbg !20870
  %reg_save_area = load i8*, i8** %1, align 16, !dbg !20870
  %2 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !20870
  %3 = bitcast i8* %2 to i32*, !dbg !20870
  %4 = add i32 %gp_offset, 8, !dbg !20870
  store i32 %4, i32* %gp_offset_p, align 16, !dbg !20870
  br label %vaarg.end, !dbg !20870

vaarg.in_mem:                                     ; preds = %if.then
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !20870
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !20870
  %5 = bitcast i8* %overflow_arg_area to i32*, !dbg !20870
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !20870
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !20870
  br label %vaarg.end, !dbg !20870

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %3, %vaarg.in_reg ], [ %5, %vaarg.in_mem ], !dbg !20870
  %6 = load i32, i32* %vaarg.addr, align 4, !dbg !20870
  store i32 %6, i32* %mode, align 4, !dbg !20871, !tbaa !2635
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !20872
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !20872
  call void @llvm.va_end(i8* %arraydecay34), !dbg !20872
  br label %if.end, !dbg !20873

if.end:                                           ; preds = %vaarg.end, %entry
  %7 = load i32, i32* %fd.addr, align 4, !dbg !20874, !tbaa !2635
  %8 = load i8*, i8** %file.addr, align 8, !dbg !20875, !tbaa !2648
  %9 = load i32, i32* %flags.addr, align 4, !dbg !20876, !tbaa !2635
  %10 = load i32, i32* %mode, align 4, !dbg !20877, !tbaa !2635
  %call = call i32 (i32, i8*, i32, ...) @openat(i32 %7, i8* %8, i32 %9, i32 %10), !dbg !20878
  %call5 = call i32 @fd_safer(i32 %call), !dbg !20879
  ret i32 %call5, !dbg !20880
}

declare dso_local i32 @openat(i32, i8*, i32, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.randint_source* @randint_new(%struct.randread_source* %source) #4 !dbg !20881 !ctir !2391 {
entry:
  %source.addr = alloca %struct.randread_source*, align 8
  %s = alloca %struct.randint_source*, align 8, !ctir !2393
  store %struct.randread_source* %source, %struct.randread_source** %source.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.randread_source** %source.addr, metadata !20882, metadata !DIExpression()), !dbg !20883
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s, metadata !20884, metadata !DIExpression()), !dbg !20885
  %call = call noalias i8* @xmalloc(i64 24), !dbg !20886
  %0 = bitcast i8* %call to %struct.randint_source*, !dbg !20886
  store %struct.randint_source* %0, %struct.randint_source** %s, align 8, !dbg !20885, !tbaa !2648
  %1 = load %struct.randread_source*, %struct.randread_source** %source.addr, align 8, !dbg !20887, !tbaa !2648
  %2 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !20888, !tbaa !2648
  %source1 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %2, i32 0, i32 0, !dbg !20889, !ctir !2394
  store %struct.randread_source* %1, %struct.randread_source** %source1, align 8, !dbg !20890, !tbaa !20891, !ctir !2398
  %3 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !20893, !tbaa !2648
  %randmax = getelementptr inbounds %struct.randint_source, %struct.randint_source* %3, i32 0, i32 2, !dbg !20894, !ctir !2394
  store i64 0, i64* %randmax, align 8, !dbg !20895, !tbaa !20896, !ctir !2402
  %4 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !20897, !tbaa !2648
  %randnum = getelementptr inbounds %struct.randint_source, %struct.randint_source* %4, i32 0, i32 1, !dbg !20898, !ctir !2394
  store i64 0, i64* %randnum, align 8, !dbg !20899, !tbaa !20900, !ctir !2402
  %5 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !20901, !tbaa !2648
  ret %struct.randint_source* %5, !dbg !20902
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.randint_source* @randint_all_new(i8* %name, i64 %bytes_bound) #4 !dbg !20903 !ctir !2404 {
entry:
  %name.addr = alloca i8*, align 8
  %bytes_bound.addr = alloca i64, align 8
  %source = alloca %struct.randread_source*, align 8, !ctir !2398
  store i8* %name, i8** %name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !20904, metadata !DIExpression()), !dbg !20905
  store i64 %bytes_bound, i64* %bytes_bound.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %bytes_bound.addr, metadata !20906, metadata !DIExpression()), !dbg !20907
  call void @llvm.dbg.declare(metadata %struct.randread_source** %source, metadata !20908, metadata !DIExpression()), !dbg !20909
  %0 = load i8*, i8** %name.addr, align 8, !dbg !20910, !tbaa !2648
  %1 = load i64, i64* %bytes_bound.addr, align 8, !dbg !20911, !tbaa !3288
  %call = call %struct.randread_source* @randread_new(i8* %0, i64 %1), !dbg !20912
  store %struct.randread_source* %call, %struct.randread_source** %source, align 8, !dbg !20909, !tbaa !2648
  %2 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !20913, !tbaa !2648
  %tobool = icmp ne %struct.randread_source* %2, null, !dbg !20913
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !20913

cond.true:                                        ; preds = %entry
  %3 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !20914, !tbaa !2648
  %call1 = call %struct.randint_source* @randint_new(%struct.randread_source* %3), !dbg !20915
  br label %cond.end, !dbg !20913

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !20913

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.randint_source* [ %call1, %cond.true ], [ null, %cond.false ], !dbg !20913
  ret %struct.randint_source* %cond, !dbg !20916
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local %struct.randread_source* @randint_get_source(%struct.randint_source* %s) #10 !dbg !20917 !ctir !2406 {
entry:
  %s.addr = alloca %struct.randint_source*, align 8
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !20918, metadata !DIExpression()), !dbg !20919
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20920, !tbaa !2648
  %source = getelementptr inbounds %struct.randint_source, %struct.randint_source* %0, i32 0, i32 0, !dbg !20921, !ctir !2409
  %1 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !20921, !tbaa !20891, !ctir !2398
  ret %struct.randread_source* %1, !dbg !20922
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @randint_genmax(%struct.randint_source* %s, i64 %genmax) #4 !dbg !20923 !ctir !2410 {
entry:
  %retval = alloca i64, align 8
  %s.addr = alloca %struct.randint_source*, align 8
  %genmax.addr = alloca i64, align 8
  %source = alloca %struct.randread_source*, align 8, !ctir !2398
  %randnum = alloca i64, align 8, !ctir !2402
  %randmax = alloca i64, align 8, !ctir !2402
  %choices = alloca i64, align 8, !ctir !2402
  %i = alloca i64, align 8, !ctir !55
  %rmax = alloca i64, align 8, !ctir !2402
  %buf = alloca [8 x i8], align 1, !ctir !2412
  %excess_choices = alloca i64, align 8, !ctir !2402
  %unusable_choices = alloca i64, align 8, !ctir !2402
  %last_usable_choice = alloca i64, align 8, !ctir !2402
  %reduced_randnum = alloca i64, align 8, !ctir !2402
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !20924, metadata !DIExpression()), !dbg !20925
  store i64 %genmax, i64* %genmax.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %genmax.addr, metadata !20926, metadata !DIExpression()), !dbg !20927
  call void @llvm.dbg.declare(metadata %struct.randread_source** %source, metadata !20928, metadata !DIExpression()), !dbg !20929
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20930, !tbaa !2648
  %source1 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %0, i32 0, i32 0, !dbg !20931, !ctir !2394
  %1 = load %struct.randread_source*, %struct.randread_source** %source1, align 8, !dbg !20931, !tbaa !20891, !ctir !2398
  store %struct.randread_source* %1, %struct.randread_source** %source, align 8, !dbg !20929, !tbaa !2648
  call void @llvm.dbg.declare(metadata i64* %randnum, metadata !20932, metadata !DIExpression()), !dbg !20933
  %2 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20934, !tbaa !2648
  %randnum2 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %2, i32 0, i32 1, !dbg !20935, !ctir !2394
  %3 = load i64, i64* %randnum2, align 8, !dbg !20935, !tbaa !20900, !ctir !2402
  store i64 %3, i64* %randnum, align 8, !dbg !20933, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %randmax, metadata !20936, metadata !DIExpression()), !dbg !20937
  %4 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20938, !tbaa !2648
  %randmax3 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %4, i32 0, i32 2, !dbg !20939, !ctir !2394
  %5 = load i64, i64* %randmax3, align 8, !dbg !20939, !tbaa !20896, !ctir !2402
  store i64 %5, i64* %randmax, align 8, !dbg !20937, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %choices, metadata !20940, metadata !DIExpression()), !dbg !20941
  %6 = load i64, i64* %genmax.addr, align 8, !dbg !20942, !tbaa !3288
  %add = add i64 %6, 1, !dbg !20943
  store i64 %add, i64* %choices, align 8, !dbg !20941, !tbaa !3288
  br label %while.body, !dbg !20944

while.body:                                       ; preds = %entry, %if.end31
  %7 = load i64, i64* %randmax, align 8, !dbg !20945, !tbaa !3288
  %8 = load i64, i64* %genmax.addr, align 8, !dbg !20948, !tbaa !3288
  %cmp = icmp ult i64 %7, %8, !dbg !20949
  br i1 %cmp, label %if.then, label %if.end, !dbg !20950

if.then:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata i64* %i, metadata !20951, metadata !DIExpression()), !dbg !20953
  store i64 0, i64* %i, align 8, !dbg !20953, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %rmax, metadata !20954, metadata !DIExpression()), !dbg !20955
  %9 = load i64, i64* %randmax, align 8, !dbg !20956, !tbaa !3288
  store i64 %9, i64* %rmax, align 8, !dbg !20955, !tbaa !3288
  call void @llvm.dbg.declare(metadata [8 x i8]* %buf, metadata !20957, metadata !DIExpression()), !dbg !20958
  br label %do.body, !dbg !20959

do.body:                                          ; preds = %do.cond, %if.then
  %10 = load i64, i64* %rmax, align 8, !dbg !20960, !tbaa !3288
  %call = call i64 @shift_left(i64 %10), !dbg !20962
  %add4 = add i64 %call, 255, !dbg !20963
  store i64 %add4, i64* %rmax, align 8, !dbg !20964, !tbaa !3288
  %11 = load i64, i64* %i, align 8, !dbg !20965, !tbaa !3288
  %inc = add i64 %11, 1, !dbg !20965
  store i64 %inc, i64* %i, align 8, !dbg !20965, !tbaa !3288
  br label %do.cond, !dbg !20966

do.cond:                                          ; preds = %do.body
  %12 = load i64, i64* %rmax, align 8, !dbg !20967, !tbaa !3288
  %13 = load i64, i64* %genmax.addr, align 8, !dbg !20968, !tbaa !3288
  %cmp5 = icmp ult i64 %12, %13, !dbg !20969
  br i1 %cmp5, label %do.body, label %do.end, !dbg !20966, !llvm.loop !20970

do.end:                                           ; preds = %do.cond
  %14 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !20972, !tbaa !2648
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %buf, i64 0, i64 0, !dbg !20973
  %15 = load i64, i64* %i, align 8, !dbg !20974, !tbaa !3288
  call void @randread(%struct.randread_source* %14, i8* %arraydecay, i64 %15), !dbg !20975
  store i64 0, i64* %i, align 8, !dbg !20976, !tbaa !3288
  br label %do.body6, !dbg !20977

do.body6:                                         ; preds = %do.cond12, %do.end
  %16 = load i64, i64* %randnum, align 8, !dbg !20978, !tbaa !3288
  %call7 = call i64 @shift_left(i64 %16), !dbg !20980
  %17 = load i64, i64* %i, align 8, !dbg !20981, !tbaa !3288
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %buf, i64 0, i64 %17, !dbg !20982, !ctir !2412
  %18 = load i8, i8* %arrayidx, align 1, !dbg !20982, !tbaa !3295
  %conv = zext i8 %18 to i64, !dbg !20982
  %add8 = add i64 %call7, %conv, !dbg !20983
  store i64 %add8, i64* %randnum, align 8, !dbg !20984, !tbaa !3288
  %19 = load i64, i64* %randmax, align 8, !dbg !20985, !tbaa !3288
  %call9 = call i64 @shift_left(i64 %19), !dbg !20986
  %add10 = add i64 %call9, 255, !dbg !20987
  store i64 %add10, i64* %randmax, align 8, !dbg !20988, !tbaa !3288
  %20 = load i64, i64* %i, align 8, !dbg !20989, !tbaa !3288
  %inc11 = add i64 %20, 1, !dbg !20989
  store i64 %inc11, i64* %i, align 8, !dbg !20989, !tbaa !3288
  br label %do.cond12, !dbg !20990

do.cond12:                                        ; preds = %do.body6
  %21 = load i64, i64* %randmax, align 8, !dbg !20991, !tbaa !3288
  %22 = load i64, i64* %genmax.addr, align 8, !dbg !20992, !tbaa !3288
  %cmp13 = icmp ult i64 %21, %22, !dbg !20993
  br i1 %cmp13, label %do.body6, label %do.end15, !dbg !20990, !llvm.loop !20994

do.end15:                                         ; preds = %do.cond12
  br label %if.end, !dbg !20996

if.end:                                           ; preds = %do.end15, %while.body
  %23 = load i64, i64* %randmax, align 8, !dbg !20997, !tbaa !3288
  %24 = load i64, i64* %genmax.addr, align 8, !dbg !20999, !tbaa !3288
  %cmp16 = icmp eq i64 %23, %24, !dbg !21000
  br i1 %cmp16, label %if.then18, label %if.else, !dbg !21001

if.then18:                                        ; preds = %if.end
  %25 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !21002, !tbaa !2648
  %randmax19 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %25, i32 0, i32 2, !dbg !21004, !ctir !2394
  store i64 0, i64* %randmax19, align 8, !dbg !21005, !tbaa !20896, !ctir !2402
  %26 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !21006, !tbaa !2648
  %randnum20 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %26, i32 0, i32 1, !dbg !21007, !ctir !2394
  store i64 0, i64* %randnum20, align 8, !dbg !21008, !tbaa !20900, !ctir !2402
  %27 = load i64, i64* %randnum, align 8, !dbg !21009, !tbaa !3288
  store i64 %27, i64* %retval, align 8, !dbg !21010
  br label %return, !dbg !21010

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %excess_choices, metadata !21011, metadata !DIExpression()), !dbg !21013
  %28 = load i64, i64* %randmax, align 8, !dbg !21014, !tbaa !3288
  %29 = load i64, i64* %genmax.addr, align 8, !dbg !21015, !tbaa !3288
  %sub = sub i64 %28, %29, !dbg !21016
  store i64 %sub, i64* %excess_choices, align 8, !dbg !21013, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %unusable_choices, metadata !21017, metadata !DIExpression()), !dbg !21018
  %30 = load i64, i64* %excess_choices, align 8, !dbg !21019, !tbaa !3288
  %31 = load i64, i64* %choices, align 8, !dbg !21020, !tbaa !3288
  %rem = urem i64 %30, %31, !dbg !21021
  store i64 %rem, i64* %unusable_choices, align 8, !dbg !21018, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %last_usable_choice, metadata !21022, metadata !DIExpression()), !dbg !21023
  %32 = load i64, i64* %randmax, align 8, !dbg !21024, !tbaa !3288
  %33 = load i64, i64* %unusable_choices, align 8, !dbg !21025, !tbaa !3288
  %sub21 = sub i64 %32, %33, !dbg !21026
  store i64 %sub21, i64* %last_usable_choice, align 8, !dbg !21023, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %reduced_randnum, metadata !21027, metadata !DIExpression()), !dbg !21028
  %34 = load i64, i64* %randnum, align 8, !dbg !21029, !tbaa !3288
  %35 = load i64, i64* %choices, align 8, !dbg !21030, !tbaa !3288
  %rem22 = urem i64 %34, %35, !dbg !21031
  store i64 %rem22, i64* %reduced_randnum, align 8, !dbg !21028, !tbaa !3288
  %36 = load i64, i64* %randnum, align 8, !dbg !21032, !tbaa !3288
  %37 = load i64, i64* %last_usable_choice, align 8, !dbg !21034, !tbaa !3288
  %cmp23 = icmp ule i64 %36, %37, !dbg !21035
  br i1 %cmp23, label %if.then25, label %if.end29, !dbg !21036

if.then25:                                        ; preds = %if.else
  %38 = load i64, i64* %randnum, align 8, !dbg !21037, !tbaa !3288
  %39 = load i64, i64* %choices, align 8, !dbg !21039, !tbaa !3288
  %div = udiv i64 %38, %39, !dbg !21040
  %40 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !21041, !tbaa !2648
  %randnum26 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %40, i32 0, i32 1, !dbg !21042, !ctir !2394
  store i64 %div, i64* %randnum26, align 8, !dbg !21043, !tbaa !20900, !ctir !2402
  %41 = load i64, i64* %excess_choices, align 8, !dbg !21044, !tbaa !3288
  %42 = load i64, i64* %choices, align 8, !dbg !21045, !tbaa !3288
  %div27 = udiv i64 %41, %42, !dbg !21046
  %43 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !21047, !tbaa !2648
  %randmax28 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %43, i32 0, i32 2, !dbg !21048, !ctir !2394
  store i64 %div27, i64* %randmax28, align 8, !dbg !21049, !tbaa !20896, !ctir !2402
  %44 = load i64, i64* %reduced_randnum, align 8, !dbg !21050, !tbaa !3288
  store i64 %44, i64* %retval, align 8, !dbg !21051
  br label %return, !dbg !21051

if.end29:                                         ; preds = %if.else
  %45 = load i64, i64* %reduced_randnum, align 8, !dbg !21052, !tbaa !3288
  store i64 %45, i64* %randnum, align 8, !dbg !21053, !tbaa !3288
  %46 = load i64, i64* %unusable_choices, align 8, !dbg !21054, !tbaa !3288
  %sub30 = sub i64 %46, 1, !dbg !21055
  store i64 %sub30, i64* %randmax, align 8, !dbg !21056, !tbaa !3288
  br label %if.end31

if.end31:                                         ; preds = %if.end29
  br label %while.body, !dbg !20944, !llvm.loop !21057

return:                                           ; preds = %if.then25, %if.then18
  %47 = load i64, i64* %retval, align 8, !dbg !21059
  ret i64 %47, !dbg !21059
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @shift_left(i64 %x) #4 !dbg !21060 !ctir !2417 {
entry:
  %x.addr = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !21061, metadata !DIExpression()), !dbg !21062
  %0 = load i64, i64* %x.addr, align 8, !dbg !21063, !tbaa !3288
  %shl = shl i64 %0, 8, !dbg !21064
  ret i64 %shl, !dbg !21065
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randint_free(%struct.randint_source* %s) #4 !dbg !21066 !ctir !2413 {
entry:
  %s.addr = alloca %struct.randint_source*, align 8
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !21067, metadata !DIExpression()), !dbg !21068
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !21069, !tbaa !2648
  %1 = bitcast %struct.randint_source* %0 to i8*, !dbg !21069
  call void @explicit_bzero(i8* %1, i64 24) #9, !dbg !21070
  %2 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !21071, !tbaa !2648
  %3 = bitcast %struct.randint_source* %2 to i8*, !dbg !21071
  call void @free(i8* %3) #9, !dbg !21072
  ret void, !dbg !21073
}

; Function Attrs: nounwind
declare dso_local void @explicit_bzero(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @randint_all_free(%struct.randint_source* %s) #4 !dbg !21074 !ctir !2415 {
entry:
  %s.addr = alloca %struct.randint_source*, align 8
  %r = alloca i32, align 4, !ctir !7
  %e = alloca i32, align 4, !ctir !7
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !21075, metadata !DIExpression()), !dbg !21076
  call void @llvm.dbg.declare(metadata i32* %r, metadata !21077, metadata !DIExpression()), !dbg !21078
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !21079, !tbaa !2648
  %source = getelementptr inbounds %struct.randint_source, %struct.randint_source* %0, i32 0, i32 0, !dbg !21080, !ctir !2394
  %1 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !21080, !tbaa !20891, !ctir !2398
  %call = call i32 @randread_free(%struct.randread_source* %1), !dbg !21081
  store i32 %call, i32* %r, align 4, !dbg !21078, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %e, metadata !21082, metadata !DIExpression()), !dbg !21083
  %call1 = call i32* @__errno_location() #16, !dbg !21084
  %2 = load i32, i32* %call1, align 4, !dbg !21084, !tbaa !2635, !ctir !7
  store i32 %2, i32* %e, align 4, !dbg !21083, !tbaa !2635
  %3 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !21085, !tbaa !2648
  call void @randint_free(%struct.randint_source* %3), !dbg !21086
  %4 = load i32, i32* %e, align 4, !dbg !21087, !tbaa !2635
  %call2 = call i32* @__errno_location() #16, !dbg !21088
  store i32 %4, i32* %call2, align 4, !dbg !21089, !tbaa !2635, !ctir !7
  %5 = load i32, i32* %r, align 4, !dbg !21090, !tbaa !2635
  ret i32 %5, !dbg !21091
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.randread_source* @randread_new(i8* %name, i64 %bytes_bound) #4 !dbg !21092 !ctir !2422 {
entry:
  %retval = alloca %struct.randread_source*, align 8
  %name.addr = alloca i8*, align 8
  %bytes_bound.addr = alloca i64, align 8
  %source = alloca %struct._IO_FILE*, align 8, !ctir !2429
  %s = alloca %struct.randread_source*, align 8, !ctir !2424
  store i8* %name, i8** %name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !21093, metadata !DIExpression()), !dbg !21094
  store i64 %bytes_bound, i64* %bytes_bound.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %bytes_bound.addr, metadata !21095, metadata !DIExpression()), !dbg !21096
  %0 = load i64, i64* %bytes_bound.addr, align 8, !dbg !21097, !tbaa !3288
  %cmp = icmp eq i64 %0, 0, !dbg !21099
  br i1 %cmp, label %if.then, label %if.else, !dbg !21100

if.then:                                          ; preds = %entry
  %call = call %struct.randread_source* @simple_new(%struct._IO_FILE* null, i8* null), !dbg !21101
  store %struct.randread_source* %call, %struct.randread_source** %retval, align 8, !dbg !21102
  br label %return, !dbg !21102

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %source, metadata !21103, metadata !DIExpression()), !dbg !21105
  store %struct._IO_FILE* null, %struct._IO_FILE** %source, align 8, !dbg !21105, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s, metadata !21106, metadata !DIExpression()), !dbg !21107
  %1 = load i8*, i8** %name.addr, align 8, !dbg !21108, !tbaa !2648
  %tobool = icmp ne i8* %1, null, !dbg !21108
  br i1 %tobool, label %if.then1, label %if.end5, !dbg !21110

if.then1:                                         ; preds = %if.else
  %2 = load i8*, i8** %name.addr, align 8, !dbg !21111, !tbaa !2648
  %call2 = call %struct._IO_FILE* @fopen_safer(i8* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.527, i64 0, i64 0)), !dbg !21113
  store %struct._IO_FILE* %call2, %struct._IO_FILE** %source, align 8, !dbg !21114, !tbaa !2648
  %tobool3 = icmp ne %struct._IO_FILE* %call2, null, !dbg !21114
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !21115

if.then4:                                         ; preds = %if.then1
  store %struct.randread_source* null, %struct.randread_source** %retval, align 8, !dbg !21116
  br label %return, !dbg !21116

if.end:                                           ; preds = %if.then1
  br label %if.end5, !dbg !21117

if.end5:                                          ; preds = %if.end, %if.else
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !21118, !tbaa !2648
  %4 = load i8*, i8** %name.addr, align 8, !dbg !21119, !tbaa !2648
  %call6 = call %struct.randread_source* @simple_new(%struct._IO_FILE* %3, i8* %4), !dbg !21120
  store %struct.randread_source* %call6, %struct.randread_source** %s, align 8, !dbg !21121, !tbaa !2648
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !21122, !tbaa !2648
  %tobool7 = icmp ne %struct._IO_FILE* %5, null, !dbg !21122
  br i1 %tobool7, label %if.then8, label %if.else11, !dbg !21124

if.then8:                                         ; preds = %if.end5
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !21125, !tbaa !2648
  %7 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !21126, !tbaa !2648
  %buf = getelementptr inbounds %struct.randread_source, %struct.randread_source* %7, i32 0, i32 3, !dbg !21127, !ctir !2425
  %c = bitcast %union.anon.128* %buf to [4096 x i8]*, !dbg !21128
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %c, i64 0, i64 0, !dbg !21126
  %8 = load i64, i64* %bytes_bound.addr, align 8, !dbg !21129, !tbaa !3288
  %cmp9 = icmp ult i64 4096, %8, !dbg !21129
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !21129

cond.true:                                        ; preds = %if.then8
  br label %cond.end, !dbg !21129

cond.false:                                       ; preds = %if.then8
  %9 = load i64, i64* %bytes_bound.addr, align 8, !dbg !21129, !tbaa !3288
  br label %cond.end, !dbg !21129

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 4096, %cond.true ], [ %9, %cond.false ], !dbg !21129
  %call10 = call i32 @setvbuf(%struct._IO_FILE* %6, i8* %arraydecay, i32 0, i64 %cond) #9, !dbg !21130
  br label %if.end19, !dbg !21130

if.else11:                                        ; preds = %if.end5
  %10 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !21131, !tbaa !2648
  %buf12 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %10, i32 0, i32 3, !dbg !21133, !ctir !2425
  %isaac = bitcast %union.anon.128* %buf12 to %struct.isaac*, !dbg !21134
  %buffered = getelementptr inbounds %struct.isaac, %struct.isaac* %isaac, i32 0, i32 0, !dbg !21135, !ctir !2473
  store i64 0, i64* %buffered, align 8, !dbg !21136, !tbaa !3295, !ctir !55
  %11 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !21137, !tbaa !2648
  %buf13 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %11, i32 0, i32 3, !dbg !21138, !ctir !2425
  %isaac14 = bitcast %union.anon.128* %buf13 to %struct.isaac*, !dbg !21139
  %state = getelementptr inbounds %struct.isaac, %struct.isaac* %isaac14, i32 0, i32 1, !dbg !21140, !ctir !2473
  %m = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %state, i32 0, i32 0, !dbg !21141, !ctir !2477
  %arraydecay15 = getelementptr inbounds [256 x i64], [256 x i64]* %m, i64 0, i64 0, !dbg !21137
  %12 = bitcast i64* %arraydecay15 to i8*, !dbg !21137
  %13 = load i64, i64* %bytes_bound.addr, align 8, !dbg !21142, !tbaa !3288
  call void @get_nonce(i8* %12, i64 2048, i64 %13), !dbg !21143
  %14 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !21144, !tbaa !2648
  %buf16 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %14, i32 0, i32 3, !dbg !21145, !ctir !2425
  %isaac17 = bitcast %union.anon.128* %buf16 to %struct.isaac*, !dbg !21146
  %state18 = getelementptr inbounds %struct.isaac, %struct.isaac* %isaac17, i32 0, i32 1, !dbg !21147, !ctir !2473
  call void @isaac_seed(%struct.isaac_state* %state18), !dbg !21148
  br label %if.end19

if.end19:                                         ; preds = %if.else11, %cond.end
  %15 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !21149, !tbaa !2648
  store %struct.randread_source* %15, %struct.randread_source** %retval, align 8, !dbg !21150
  br label %return, !dbg !21150

return:                                           ; preds = %if.end19, %if.then4, %if.then
  %16 = load %struct.randread_source*, %struct.randread_source** %retval, align 8, !dbg !21151
  ret %struct.randread_source* %16, !dbg !21151
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.randread_source* @simple_new(%struct._IO_FILE* %source, i8* %handler_arg) #4 !dbg !21152 !ctir !2504 {
entry:
  %source.addr = alloca %struct._IO_FILE*, align 8
  %handler_arg.addr = alloca i8*, align 8
  %s = alloca %struct.randread_source*, align 8, !ctir !2424
  store %struct._IO_FILE* %source, %struct._IO_FILE** %source.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %source.addr, metadata !21153, metadata !DIExpression()), !dbg !21154
  store i8* %handler_arg, i8** %handler_arg.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %handler_arg.addr, metadata !21155, metadata !DIExpression()), !dbg !21156
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s, metadata !21157, metadata !DIExpression()), !dbg !21158
  %call = call noalias i8* @xmalloc(i64 4152), !dbg !21159
  %0 = bitcast i8* %call to %struct.randread_source*, !dbg !21159
  store %struct.randread_source* %0, %struct.randread_source** %s, align 8, !dbg !21158, !tbaa !2648
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %source.addr, align 8, !dbg !21160, !tbaa !2648
  %2 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !21161, !tbaa !2648
  %source1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %2, i32 0, i32 0, !dbg !21162, !ctir !2425
  store %struct._IO_FILE* %1, %struct._IO_FILE** %source1, align 8, !dbg !21163, !tbaa !21164, !ctir !2429
  %3 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !21166, !tbaa !2648
  %handler = getelementptr inbounds %struct.randread_source, %struct.randread_source* %3, i32 0, i32 1, !dbg !21167, !ctir !2425
  store void (i8*)* @randread_error, void (i8*)** %handler, align 8, !dbg !21168, !tbaa !21169, !ctir !2464
  %4 = load i8*, i8** %handler_arg.addr, align 8, !dbg !21170, !tbaa !2648
  %5 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !21171, !tbaa !2648
  %handler_arg2 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %5, i32 0, i32 2, !dbg !21172, !ctir !2425
  store i8* %4, i8** %handler_arg2, align 8, !dbg !21173, !tbaa !21174, !ctir !515
  %6 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !21175, !tbaa !2648
  ret %struct.randread_source* %6, !dbg !21176
}

; Function Attrs: nounwind
declare dso_local i32 @setvbuf(%struct._IO_FILE*, i8*, i32, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @get_nonce(i8* %buffer, i64 %bufsize, i64 %bytes_bound) #4 !dbg !21177 !ctir !2506 {
entry:
  %buffer.addr = alloca i8*, align 8
  %bufsize.addr = alloca i64, align 8
  %bytes_bound.addr = alloca i64, align 8
  %buf = alloca i8*, align 8, !ctir !9
  %seeded = alloca i64, align 8, !ctir !694
  %fd = alloca i32, align 4, !ctir !7
  %v = alloca %struct.timespec, align 8, !ctir !21178
  %nbytes = alloca i64, align 8, !ctir !55
  %v19 = alloca i32, align 4, !ctir !111
  %nbytes20 = alloca i64, align 8, !ctir !55
  %v34 = alloca i32, align 4, !ctir !111
  %nbytes35 = alloca i64, align 8, !ctir !55
  %v49 = alloca i32, align 4, !ctir !127
  %nbytes50 = alloca i64, align 8, !ctir !55
  %v64 = alloca i32, align 4, !ctir !127
  %nbytes65 = alloca i64, align 8, !ctir !55
  store i8* %buffer, i8** %buffer.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !21182, metadata !DIExpression()), !dbg !21183
  store i64 %bufsize, i64* %bufsize.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %bufsize.addr, metadata !21184, metadata !DIExpression()), !dbg !21185
  store i64 %bytes_bound, i64* %bytes_bound.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %bytes_bound.addr, metadata !21186, metadata !DIExpression()), !dbg !21187
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !21188, metadata !DIExpression()), !dbg !21189
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !21190, !tbaa !2648
  store i8* %0, i8** %buf, align 8, !dbg !21189, !tbaa !2648
  call void @llvm.dbg.declare(metadata i64* %seeded, metadata !21191, metadata !DIExpression()), !dbg !21192
  store i64 0, i64* %seeded, align 8, !dbg !21192, !tbaa !3288
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !21193, metadata !DIExpression()), !dbg !21194
  %call = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.528, i64 0, i64 0), i32 0), !dbg !21195
  store i32 %call, i32* %fd, align 4, !dbg !21194, !tbaa !2635
  %1 = load i32, i32* %fd, align 4, !dbg !21196, !tbaa !2635
  %cmp = icmp sle i32 0, %1, !dbg !21198
  br i1 %cmp, label %if.then, label %if.end6, !dbg !21199

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %fd, align 4, !dbg !21200, !tbaa !2635
  %3 = load i8*, i8** %buf, align 8, !dbg !21202, !tbaa !2648
  %4 = load i64, i64* %bufsize.addr, align 8, !dbg !21203, !tbaa !3288
  %5 = load i64, i64* %bytes_bound.addr, align 8, !dbg !21203, !tbaa !3288
  %cmp1 = icmp ult i64 %4, %5, !dbg !21203
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !21203

cond.true:                                        ; preds = %if.then
  %6 = load i64, i64* %bufsize.addr, align 8, !dbg !21203, !tbaa !3288
  br label %cond.end, !dbg !21203

cond.false:                                       ; preds = %if.then
  %7 = load i64, i64* %bytes_bound.addr, align 8, !dbg !21203, !tbaa !3288
  br label %cond.end, !dbg !21203

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %6, %cond.true ], [ %7, %cond.false ], !dbg !21203
  %call2 = call i64 @read(i32 %2, i8* %3, i64 %cond), !dbg !21204
  store i64 %call2, i64* %seeded, align 8, !dbg !21205, !tbaa !3288
  %8 = load i64, i64* %seeded, align 8, !dbg !21206, !tbaa !3288
  %cmp3 = icmp slt i64 %8, 0, !dbg !21208
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !21209

if.then4:                                         ; preds = %cond.end
  store i64 0, i64* %seeded, align 8, !dbg !21210, !tbaa !3288
  br label %if.end, !dbg !21211

if.end:                                           ; preds = %if.then4, %cond.end
  %9 = load i32, i32* %fd, align 4, !dbg !21212, !tbaa !2635
  %call5 = call i32 @close(i32 %9), !dbg !21213
  br label %if.end6, !dbg !21214

if.end6:                                          ; preds = %if.end, %entry
  %10 = load i64, i64* %seeded, align 8, !dbg !21215, !tbaa !3288
  %11 = load i64, i64* %bufsize.addr, align 8, !dbg !21215, !tbaa !3288
  %cmp7 = icmp ult i64 %10, %11, !dbg !21215
  br i1 %cmp7, label %if.then8, label %if.end16, !dbg !21217

if.then8:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata %struct.timespec* %v, metadata !21218, metadata !DIExpression()), !dbg !21220
  call void @llvm.dbg.declare(metadata i64* %nbytes, metadata !21221, metadata !DIExpression()), !dbg !21220
  %12 = load i64, i64* %bufsize.addr, align 8, !dbg !21220, !tbaa !3288
  %13 = load i64, i64* %seeded, align 8, !dbg !21220, !tbaa !3288
  %sub = sub i64 %12, %13, !dbg !21220
  %cmp9 = icmp ult i64 16, %sub, !dbg !21220
  br i1 %cmp9, label %cond.true10, label %cond.false11, !dbg !21220

cond.true10:                                      ; preds = %if.then8
  br label %cond.end13, !dbg !21220

cond.false11:                                     ; preds = %if.then8
  %14 = load i64, i64* %bufsize.addr, align 8, !dbg !21220, !tbaa !3288
  %15 = load i64, i64* %seeded, align 8, !dbg !21220, !tbaa !3288
  %sub12 = sub i64 %14, %15, !dbg !21220
  br label %cond.end13, !dbg !21220

cond.end13:                                       ; preds = %cond.false11, %cond.true10
  %cond14 = phi i64 [ 16, %cond.true10 ], [ %sub12, %cond.false11 ], !dbg !21220
  store i64 %cond14, i64* %nbytes, align 8, !dbg !21220, !tbaa !3288
  %call15 = call i32 @gettimeofday(%struct.timespec* %v, %struct.timezone* null) #9, !dbg !21220
  %16 = load i8*, i8** %buf, align 8, !dbg !21220, !tbaa !2648
  %17 = load i64, i64* %seeded, align 8, !dbg !21220, !tbaa !3288
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 %17, !dbg !21220
  %18 = bitcast %struct.timespec* %v to i8*, !dbg !21220
  %19 = load i64, i64* %nbytes, align 8, !dbg !21220, !tbaa !3288
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 8 %18, i64 %19, i1 false), !dbg !21220
  %20 = load i64, i64* %nbytes, align 8, !dbg !21220, !tbaa !3288
  %21 = load i64, i64* %seeded, align 8, !dbg !21220, !tbaa !3288
  %add = add i64 %21, %20, !dbg !21220
  store i64 %add, i64* %seeded, align 8, !dbg !21220, !tbaa !3288
  br label %if.end16, !dbg !21220

if.end16:                                         ; preds = %cond.end13, %if.end6
  %22 = load i64, i64* %seeded, align 8, !dbg !21222, !tbaa !3288
  %23 = load i64, i64* %bufsize.addr, align 8, !dbg !21222, !tbaa !3288
  %cmp17 = icmp ult i64 %22, %23, !dbg !21222
  br i1 %cmp17, label %if.then18, label %if.end31, !dbg !21224

if.then18:                                        ; preds = %if.end16
  call void @llvm.dbg.declare(metadata i32* %v19, metadata !21225, metadata !DIExpression()), !dbg !21227
  call void @llvm.dbg.declare(metadata i64* %nbytes20, metadata !21228, metadata !DIExpression()), !dbg !21227
  %24 = load i64, i64* %bufsize.addr, align 8, !dbg !21227, !tbaa !3288
  %25 = load i64, i64* %seeded, align 8, !dbg !21227, !tbaa !3288
  %sub21 = sub i64 %24, %25, !dbg !21227
  %cmp22 = icmp ult i64 4, %sub21, !dbg !21227
  br i1 %cmp22, label %cond.true23, label %cond.false24, !dbg !21227

cond.true23:                                      ; preds = %if.then18
  br label %cond.end26, !dbg !21227

cond.false24:                                     ; preds = %if.then18
  %26 = load i64, i64* %bufsize.addr, align 8, !dbg !21227, !tbaa !3288
  %27 = load i64, i64* %seeded, align 8, !dbg !21227, !tbaa !3288
  %sub25 = sub i64 %26, %27, !dbg !21227
  br label %cond.end26, !dbg !21227

cond.end26:                                       ; preds = %cond.false24, %cond.true23
  %cond27 = phi i64 [ 4, %cond.true23 ], [ %sub25, %cond.false24 ], !dbg !21227
  store i64 %cond27, i64* %nbytes20, align 8, !dbg !21227, !tbaa !3288
  %call28 = call i32 @getpid() #9, !dbg !21227
  store i32 %call28, i32* %v19, align 4, !dbg !21227, !tbaa !2635
  %28 = load i8*, i8** %buf, align 8, !dbg !21227, !tbaa !2648
  %29 = load i64, i64* %seeded, align 8, !dbg !21227, !tbaa !3288
  %add.ptr29 = getelementptr inbounds i8, i8* %28, i64 %29, !dbg !21227
  %30 = bitcast i32* %v19 to i8*, !dbg !21227
  %31 = load i64, i64* %nbytes20, align 8, !dbg !21227, !tbaa !3288
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr29, i8* align 4 %30, i64 %31, i1 false), !dbg !21227
  %32 = load i64, i64* %nbytes20, align 8, !dbg !21227, !tbaa !3288
  %33 = load i64, i64* %seeded, align 8, !dbg !21227, !tbaa !3288
  %add30 = add i64 %33, %32, !dbg !21227
  store i64 %add30, i64* %seeded, align 8, !dbg !21227, !tbaa !3288
  br label %if.end31, !dbg !21227

if.end31:                                         ; preds = %cond.end26, %if.end16
  %34 = load i64, i64* %seeded, align 8, !dbg !21229, !tbaa !3288
  %35 = load i64, i64* %bufsize.addr, align 8, !dbg !21229, !tbaa !3288
  %cmp32 = icmp ult i64 %34, %35, !dbg !21229
  br i1 %cmp32, label %if.then33, label %if.end46, !dbg !21231

if.then33:                                        ; preds = %if.end31
  call void @llvm.dbg.declare(metadata i32* %v34, metadata !21232, metadata !DIExpression()), !dbg !21234
  call void @llvm.dbg.declare(metadata i64* %nbytes35, metadata !21235, metadata !DIExpression()), !dbg !21234
  %36 = load i64, i64* %bufsize.addr, align 8, !dbg !21234, !tbaa !3288
  %37 = load i64, i64* %seeded, align 8, !dbg !21234, !tbaa !3288
  %sub36 = sub i64 %36, %37, !dbg !21234
  %cmp37 = icmp ult i64 4, %sub36, !dbg !21234
  br i1 %cmp37, label %cond.true38, label %cond.false39, !dbg !21234

cond.true38:                                      ; preds = %if.then33
  br label %cond.end41, !dbg !21234

cond.false39:                                     ; preds = %if.then33
  %38 = load i64, i64* %bufsize.addr, align 8, !dbg !21234, !tbaa !3288
  %39 = load i64, i64* %seeded, align 8, !dbg !21234, !tbaa !3288
  %sub40 = sub i64 %38, %39, !dbg !21234
  br label %cond.end41, !dbg !21234

cond.end41:                                       ; preds = %cond.false39, %cond.true38
  %cond42 = phi i64 [ 4, %cond.true38 ], [ %sub40, %cond.false39 ], !dbg !21234
  store i64 %cond42, i64* %nbytes35, align 8, !dbg !21234, !tbaa !3288
  %call43 = call i32 @getppid() #9, !dbg !21234
  store i32 %call43, i32* %v34, align 4, !dbg !21234, !tbaa !2635
  %40 = load i8*, i8** %buf, align 8, !dbg !21234, !tbaa !2648
  %41 = load i64, i64* %seeded, align 8, !dbg !21234, !tbaa !3288
  %add.ptr44 = getelementptr inbounds i8, i8* %40, i64 %41, !dbg !21234
  %42 = bitcast i32* %v34 to i8*, !dbg !21234
  %43 = load i64, i64* %nbytes35, align 8, !dbg !21234, !tbaa !3288
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr44, i8* align 4 %42, i64 %43, i1 false), !dbg !21234
  %44 = load i64, i64* %nbytes35, align 8, !dbg !21234, !tbaa !3288
  %45 = load i64, i64* %seeded, align 8, !dbg !21234, !tbaa !3288
  %add45 = add i64 %45, %44, !dbg !21234
  store i64 %add45, i64* %seeded, align 8, !dbg !21234, !tbaa !3288
  br label %if.end46, !dbg !21234

if.end46:                                         ; preds = %cond.end41, %if.end31
  %46 = load i64, i64* %seeded, align 8, !dbg !21236, !tbaa !3288
  %47 = load i64, i64* %bufsize.addr, align 8, !dbg !21236, !tbaa !3288
  %cmp47 = icmp ult i64 %46, %47, !dbg !21236
  br i1 %cmp47, label %if.then48, label %if.end61, !dbg !21238

if.then48:                                        ; preds = %if.end46
  call void @llvm.dbg.declare(metadata i32* %v49, metadata !21239, metadata !DIExpression()), !dbg !21241
  call void @llvm.dbg.declare(metadata i64* %nbytes50, metadata !21242, metadata !DIExpression()), !dbg !21241
  %48 = load i64, i64* %bufsize.addr, align 8, !dbg !21241, !tbaa !3288
  %49 = load i64, i64* %seeded, align 8, !dbg !21241, !tbaa !3288
  %sub51 = sub i64 %48, %49, !dbg !21241
  %cmp52 = icmp ult i64 4, %sub51, !dbg !21241
  br i1 %cmp52, label %cond.true53, label %cond.false54, !dbg !21241

cond.true53:                                      ; preds = %if.then48
  br label %cond.end56, !dbg !21241

cond.false54:                                     ; preds = %if.then48
  %50 = load i64, i64* %bufsize.addr, align 8, !dbg !21241, !tbaa !3288
  %51 = load i64, i64* %seeded, align 8, !dbg !21241, !tbaa !3288
  %sub55 = sub i64 %50, %51, !dbg !21241
  br label %cond.end56, !dbg !21241

cond.end56:                                       ; preds = %cond.false54, %cond.true53
  %cond57 = phi i64 [ 4, %cond.true53 ], [ %sub55, %cond.false54 ], !dbg !21241
  store i64 %cond57, i64* %nbytes50, align 8, !dbg !21241, !tbaa !3288
  %call58 = call i32 @getuid() #9, !dbg !21241
  store i32 %call58, i32* %v49, align 4, !dbg !21241, !tbaa !2635
  %52 = load i8*, i8** %buf, align 8, !dbg !21241, !tbaa !2648
  %53 = load i64, i64* %seeded, align 8, !dbg !21241, !tbaa !3288
  %add.ptr59 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !21241
  %54 = bitcast i32* %v49 to i8*, !dbg !21241
  %55 = load i64, i64* %nbytes50, align 8, !dbg !21241, !tbaa !3288
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr59, i8* align 4 %54, i64 %55, i1 false), !dbg !21241
  %56 = load i64, i64* %nbytes50, align 8, !dbg !21241, !tbaa !3288
  %57 = load i64, i64* %seeded, align 8, !dbg !21241, !tbaa !3288
  %add60 = add i64 %57, %56, !dbg !21241
  store i64 %add60, i64* %seeded, align 8, !dbg !21241, !tbaa !3288
  br label %if.end61, !dbg !21241

if.end61:                                         ; preds = %cond.end56, %if.end46
  %58 = load i64, i64* %seeded, align 8, !dbg !21243, !tbaa !3288
  %59 = load i64, i64* %bufsize.addr, align 8, !dbg !21243, !tbaa !3288
  %cmp62 = icmp ult i64 %58, %59, !dbg !21243
  br i1 %cmp62, label %if.then63, label %if.end76, !dbg !21245

if.then63:                                        ; preds = %if.end61
  call void @llvm.dbg.declare(metadata i32* %v64, metadata !21246, metadata !DIExpression()), !dbg !21248
  call void @llvm.dbg.declare(metadata i64* %nbytes65, metadata !21249, metadata !DIExpression()), !dbg !21248
  %60 = load i64, i64* %bufsize.addr, align 8, !dbg !21248, !tbaa !3288
  %61 = load i64, i64* %seeded, align 8, !dbg !21248, !tbaa !3288
  %sub66 = sub i64 %60, %61, !dbg !21248
  %cmp67 = icmp ult i64 4, %sub66, !dbg !21248
  br i1 %cmp67, label %cond.true68, label %cond.false69, !dbg !21248

cond.true68:                                      ; preds = %if.then63
  br label %cond.end71, !dbg !21248

cond.false69:                                     ; preds = %if.then63
  %62 = load i64, i64* %bufsize.addr, align 8, !dbg !21248, !tbaa !3288
  %63 = load i64, i64* %seeded, align 8, !dbg !21248, !tbaa !3288
  %sub70 = sub i64 %62, %63, !dbg !21248
  br label %cond.end71, !dbg !21248

cond.end71:                                       ; preds = %cond.false69, %cond.true68
  %cond72 = phi i64 [ 4, %cond.true68 ], [ %sub70, %cond.false69 ], !dbg !21248
  store i64 %cond72, i64* %nbytes65, align 8, !dbg !21248, !tbaa !3288
  %call73 = call i32 @getgid() #9, !dbg !21248
  store i32 %call73, i32* %v64, align 4, !dbg !21248, !tbaa !2635
  %64 = load i8*, i8** %buf, align 8, !dbg !21248, !tbaa !2648
  %65 = load i64, i64* %seeded, align 8, !dbg !21248, !tbaa !3288
  %add.ptr74 = getelementptr inbounds i8, i8* %64, i64 %65, !dbg !21248
  %66 = bitcast i32* %v64 to i8*, !dbg !21248
  %67 = load i64, i64* %nbytes65, align 8, !dbg !21248, !tbaa !3288
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr74, i8* align 4 %66, i64 %67, i1 false), !dbg !21248
  %68 = load i64, i64* %nbytes65, align 8, !dbg !21248, !tbaa !3288
  %69 = load i64, i64* %seeded, align 8, !dbg !21248, !tbaa !3288
  %add75 = add i64 %69, %68, !dbg !21248
  store i64 %add75, i64* %seeded, align 8, !dbg !21248, !tbaa !3288
  br label %if.end76, !dbg !21248

if.end76:                                         ; preds = %cond.end71, %if.end61
  ret void, !dbg !21250
}

; Function Attrs: nounwind
declare dso_local i32 @gettimeofday(%struct.timespec*, %struct.timezone*) #2

; Function Attrs: nounwind
declare dso_local i32 @getpid() #2

; Function Attrs: nounwind
declare dso_local i32 @getppid() #2

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @randread_error(i8* %file_name) #0 !dbg !21251 !ctir !2465 {
entry:
  %file_name.addr = alloca i8*, align 8
  store i8* %file_name, i8** %file_name.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %file_name.addr, metadata !21252, metadata !DIExpression()), !dbg !21253
  %0 = load i8*, i8** %file_name.addr, align 8, !dbg !21254, !tbaa !2648
  %tobool = icmp ne i8* %0, null, !dbg !21254
  br i1 %tobool, label %if.then, label %if.end, !dbg !21256

if.then:                                          ; preds = %entry
  %1 = load volatile i32, i32* @exit_failure, align 4, !dbg !21257, !tbaa !2635
  %call = call i32* @__errno_location() #16, !dbg !21258
  %2 = load i32, i32* %call, align 4, !dbg !21258, !tbaa !2635, !ctir !7
  %call1 = call i32* @__errno_location() #16, !dbg !21259
  %3 = load i32, i32* %call1, align 4, !dbg !21259, !tbaa !2635, !ctir !7
  %cmp = icmp eq i32 %3, 0, !dbg !21260
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !21259

cond.true:                                        ; preds = %if.then
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.529, i64 0, i64 0)) #9, !dbg !21261
  br label %cond.end, !dbg !21259

cond.false:                                       ; preds = %if.then
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.530, i64 0, i64 0)) #9, !dbg !21262
  br label %cond.end, !dbg !21259

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call2, %cond.true ], [ %call3, %cond.false ], !dbg !21259
  %4 = load i8*, i8** %file_name.addr, align 8, !dbg !21263, !tbaa !2648
  %call4 = call i8* @quote(i8* %4), !dbg !21264
  call void (i32, i32, i8*, ...) @error(i32 %1, i32 %2, i8* %cond, i8* %call4), !dbg !21265
  br label %if.end, !dbg !21265

if.end:                                           ; preds = %cond.end, %entry
  call void @abort() #13, !dbg !21266
  unreachable, !dbg !21266
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randread_set_handler(%struct.randread_source* %s, void (i8*)* %handler) #4 !dbg !21267 !ctir !2496 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %handler.addr = alloca void (i8*)*, align 8
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !21268, metadata !DIExpression()), !dbg !21269
  store void (i8*)* %handler, void (i8*)** %handler.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata void (i8*)** %handler.addr, metadata !21270, metadata !DIExpression()), !dbg !21271
  %0 = load void (i8*)*, void (i8*)** %handler.addr, align 8, !dbg !21272, !tbaa !2648
  %1 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !21273, !tbaa !2648
  %handler1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %1, i32 0, i32 1, !dbg !21274, !ctir !2425
  store void (i8*)* %0, void (i8*)** %handler1, align 8, !dbg !21275, !tbaa !21169, !ctir !2464
  ret void, !dbg !21276
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randread_set_handler_arg(%struct.randread_source* %s, i8* %handler_arg) #4 !dbg !21277 !ctir !2498 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %handler_arg.addr = alloca i8*, align 8
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !21278, metadata !DIExpression()), !dbg !21279
  store i8* %handler_arg, i8** %handler_arg.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %handler_arg.addr, metadata !21280, metadata !DIExpression()), !dbg !21281
  %0 = load i8*, i8** %handler_arg.addr, align 8, !dbg !21282, !tbaa !2648
  %1 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !21283, !tbaa !2648
  %handler_arg1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %1, i32 0, i32 2, !dbg !21284, !ctir !2425
  store i8* %0, i8** %handler_arg1, align 8, !dbg !21285, !tbaa !21174, !ctir !515
  ret void, !dbg !21286
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randread(%struct.randread_source* %s, i8* %buf, i64 %size) #4 !dbg !21287 !ctir !2500 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !21288, metadata !DIExpression()), !dbg !21289
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !21290, metadata !DIExpression()), !dbg !21291
  store i64 %size, i64* %size.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !21292, metadata !DIExpression()), !dbg !21293
  %0 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !21294, !tbaa !2648
  %source = getelementptr inbounds %struct.randread_source, %struct.randread_source* %0, i32 0, i32 0, !dbg !21296, !ctir !2425
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !21296, !tbaa !21164, !ctir !2429
  %tobool = icmp ne %struct._IO_FILE* %1, null, !dbg !21294
  br i1 %tobool, label %if.then, label %if.else, !dbg !21297

if.then:                                          ; preds = %entry
  %2 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !21298, !tbaa !2648
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !21299, !tbaa !2648
  %4 = load i64, i64* %size.addr, align 8, !dbg !21300, !tbaa !3288
  call void @readsource(%struct.randread_source* %2, i8* %3, i64 %4), !dbg !21301
  br label %if.end, !dbg !21301

if.else:                                          ; preds = %entry
  %5 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !21302, !tbaa !2648
  %buf1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %5, i32 0, i32 3, !dbg !21303, !ctir !2425
  %isaac = bitcast %union.anon.128* %buf1 to %struct.isaac*, !dbg !21304
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !21305, !tbaa !2648
  %7 = load i64, i64* %size.addr, align 8, !dbg !21306, !tbaa !3288
  call void @readisaac(%struct.isaac* %isaac, i8* %6, i64 %7), !dbg !21307
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !21308
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @readsource(%struct.randread_source* %s, i8* %p, i64 %size) #4 !dbg !21309 !ctir !2508 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %inbytes = alloca i64, align 8, !ctir !55
  %fread_errno = alloca i32, align 4, !ctir !7
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !21310, metadata !DIExpression()), !dbg !21311
  store i8* %p, i8** %p.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !21312, metadata !DIExpression()), !dbg !21313
  store i64 %size, i64* %size.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !21314, metadata !DIExpression()), !dbg !21315
  br label %while.body, !dbg !21316

while.body:                                       ; preds = %entry, %cond.end
  call void @llvm.dbg.declare(metadata i64* %inbytes, metadata !21317, metadata !DIExpression()), !dbg !21319
  %0 = load i8*, i8** %p.addr, align 8, !dbg !21320, !tbaa !2648
  %1 = load i64, i64* %size.addr, align 8, !dbg !21320, !tbaa !3288
  %2 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !21320, !tbaa !2648
  %source = getelementptr inbounds %struct.randread_source, %struct.randread_source* %2, i32 0, i32 0, !dbg !21320, !ctir !2425
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !21320, !tbaa !21164, !ctir !2429
  %call = call i64 @fread_unlocked(i8* %0, i64 1, i64 %1, %struct._IO_FILE* %3), !dbg !21320
  store i64 %call, i64* %inbytes, align 8, !dbg !21319, !tbaa !3288
  call void @llvm.dbg.declare(metadata i32* %fread_errno, metadata !21321, metadata !DIExpression()), !dbg !21322
  %call1 = call i32* @__errno_location() #16, !dbg !21323
  %4 = load i32, i32* %call1, align 4, !dbg !21323, !tbaa !2635, !ctir !7
  store i32 %4, i32* %fread_errno, align 4, !dbg !21322, !tbaa !2635
  %5 = load i64, i64* %inbytes, align 8, !dbg !21324, !tbaa !3288
  %6 = load i8*, i8** %p.addr, align 8, !dbg !21325, !tbaa !2648
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %5, !dbg !21325
  store i8* %add.ptr, i8** %p.addr, align 8, !dbg !21325, !tbaa !2648
  %7 = load i64, i64* %inbytes, align 8, !dbg !21326, !tbaa !3288
  %8 = load i64, i64* %size.addr, align 8, !dbg !21327, !tbaa !3288
  %sub = sub i64 %8, %7, !dbg !21327
  store i64 %sub, i64* %size.addr, align 8, !dbg !21327, !tbaa !3288
  %9 = load i64, i64* %size.addr, align 8, !dbg !21328, !tbaa !3288
  %cmp = icmp eq i64 %9, 0, !dbg !21330
  br i1 %cmp, label %if.then, label %if.end, !dbg !21331

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !21332

if.end:                                           ; preds = %while.body
  %10 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !21333, !tbaa !2648
  %source2 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %10, i32 0, i32 0, !dbg !21333, !ctir !2425
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %source2, align 8, !dbg !21333, !tbaa !21164, !ctir !2429
  %call3 = call i32 @ferror_unlocked(%struct._IO_FILE* %11) #9, !dbg !21333
  %tobool = icmp ne i32 %call3, 0, !dbg !21333
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !21333

cond.true:                                        ; preds = %if.end
  %12 = load i32, i32* %fread_errno, align 4, !dbg !21334, !tbaa !2635
  br label %cond.end, !dbg !21333

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !21333

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %12, %cond.true ], [ 0, %cond.false ], !dbg !21333
  %call4 = call i32* @__errno_location() #16, !dbg !21335
  store i32 %cond, i32* %call4, align 4, !dbg !21336, !tbaa !2635, !ctir !7
  %13 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !21337, !tbaa !2648
  %handler = getelementptr inbounds %struct.randread_source, %struct.randread_source* %13, i32 0, i32 1, !dbg !21338, !ctir !2425
  %14 = load void (i8*)*, void (i8*)** %handler, align 8, !dbg !21338, !tbaa !21169, !ctir !2464
  %15 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !21339, !tbaa !2648
  %handler_arg = getelementptr inbounds %struct.randread_source, %struct.randread_source* %15, i32 0, i32 2, !dbg !21340, !ctir !2425
  %16 = load i8*, i8** %handler_arg, align 8, !dbg !21340, !tbaa !21174, !ctir !515
  call void %14(i8* %16), !dbg !21337
  br label %while.body, !dbg !21316, !llvm.loop !21341

while.end:                                        ; preds = %if.then
  ret void, !dbg !21343
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @readisaac(%struct.isaac* %isaac, i8* %p, i64 %size) #4 !dbg !21344 !ctir !2511 {
entry:
  %isaac.addr = alloca %struct.isaac*, align 8
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %inbytes = alloca i64, align 8, !ctir !55
  %char_p = alloca i8*, align 8, !ctir !9
  %wp = alloca i64*, align 8, !ctir !2514
  store %struct.isaac* %isaac, %struct.isaac** %isaac.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.isaac** %isaac.addr, metadata !21345, metadata !DIExpression()), !dbg !21346
  store i8* %p, i8** %p.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !21347, metadata !DIExpression()), !dbg !21348
  store i64 %size, i64* %size.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !21349, metadata !DIExpression()), !dbg !21350
  call void @llvm.dbg.declare(metadata i64* %inbytes, metadata !21351, metadata !DIExpression()), !dbg !21352
  %0 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !21353, !tbaa !2648
  %buffered = getelementptr inbounds %struct.isaac, %struct.isaac* %0, i32 0, i32 0, !dbg !21354, !ctir !2473
  %1 = load i64, i64* %buffered, align 8, !dbg !21354, !tbaa !21355, !ctir !55
  store i64 %1, i64* %inbytes, align 8, !dbg !21352, !tbaa !3288
  br label %while.body, !dbg !21358

while.body:                                       ; preds = %entry, %if.end22
  call void @llvm.dbg.declare(metadata i8** %char_p, metadata !21359, metadata !DIExpression()), !dbg !21361
  %2 = load i8*, i8** %p.addr, align 8, !dbg !21362, !tbaa !2648
  store i8* %2, i8** %char_p, align 8, !dbg !21361, !tbaa !2648
  %3 = load i64, i64* %size.addr, align 8, !dbg !21363, !tbaa !3288
  %4 = load i64, i64* %inbytes, align 8, !dbg !21365, !tbaa !3288
  %cmp = icmp ule i64 %3, %4, !dbg !21366
  br i1 %cmp, label %if.then, label %if.end, !dbg !21367

if.then:                                          ; preds = %while.body
  %5 = load i8*, i8** %p.addr, align 8, !dbg !21368, !tbaa !2648
  %6 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !21370, !tbaa !2648
  %data = getelementptr inbounds %struct.isaac, %struct.isaac* %6, i32 0, i32 2, !dbg !21371, !ctir !2473
  %b = bitcast %union.anon.0* %data to [2048 x i8]*, !dbg !21372
  %arraydecay = getelementptr inbounds [2048 x i8], [2048 x i8]* %b, i64 0, i64 0, !dbg !21370
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 2048, !dbg !21373
  %7 = load i64, i64* %inbytes, align 8, !dbg !21374, !tbaa !3288
  %idx.neg = sub i64 0, %7, !dbg !21375
  %add.ptr1 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.neg, !dbg !21375
  %8 = load i64, i64* %size.addr, align 8, !dbg !21376, !tbaa !3288
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %add.ptr1, i64 %8, i1 false), !dbg !21377
  %9 = load i64, i64* %inbytes, align 8, !dbg !21378, !tbaa !3288
  %10 = load i64, i64* %size.addr, align 8, !dbg !21379, !tbaa !3288
  %sub = sub i64 %9, %10, !dbg !21380
  %11 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !21381, !tbaa !2648
  %buffered2 = getelementptr inbounds %struct.isaac, %struct.isaac* %11, i32 0, i32 0, !dbg !21382, !ctir !2473
  store i64 %sub, i64* %buffered2, align 8, !dbg !21383, !tbaa !21355, !ctir !55
  br label %return, !dbg !21384

if.end:                                           ; preds = %while.body
  %12 = load i8*, i8** %p.addr, align 8, !dbg !21385, !tbaa !2648
  %13 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !21386, !tbaa !2648
  %data3 = getelementptr inbounds %struct.isaac, %struct.isaac* %13, i32 0, i32 2, !dbg !21387, !ctir !2473
  %b4 = bitcast %union.anon.0* %data3 to [2048 x i8]*, !dbg !21388
  %arraydecay5 = getelementptr inbounds [2048 x i8], [2048 x i8]* %b4, i64 0, i64 0, !dbg !21386
  %add.ptr6 = getelementptr inbounds i8, i8* %arraydecay5, i64 2048, !dbg !21389
  %14 = load i64, i64* %inbytes, align 8, !dbg !21390, !tbaa !3288
  %idx.neg7 = sub i64 0, %14, !dbg !21391
  %add.ptr8 = getelementptr inbounds i8, i8* %add.ptr6, i64 %idx.neg7, !dbg !21391
  %15 = load i64, i64* %inbytes, align 8, !dbg !21392, !tbaa !3288
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 1 %add.ptr8, i64 %15, i1 false), !dbg !21393
  %16 = load i8*, i8** %char_p, align 8, !dbg !21394, !tbaa !2648
  %17 = load i64, i64* %inbytes, align 8, !dbg !21395, !tbaa !3288
  %add.ptr9 = getelementptr inbounds i8, i8* %16, i64 %17, !dbg !21396
  store i8* %add.ptr9, i8** %p.addr, align 8, !dbg !21397, !tbaa !2648
  %18 = load i64, i64* %inbytes, align 8, !dbg !21398, !tbaa !3288
  %19 = load i64, i64* %size.addr, align 8, !dbg !21399, !tbaa !3288
  %sub10 = sub i64 %19, %18, !dbg !21399
  store i64 %sub10, i64* %size.addr, align 8, !dbg !21399, !tbaa !3288
  %20 = load i8*, i8** %p.addr, align 8, !dbg !21400, !tbaa !2648
  %21 = ptrtoint i8* %20 to i64, !dbg !21400
  %rem = urem i64 %21, 8, !dbg !21400
  %cmp11 = icmp eq i64 %rem, 0, !dbg !21400
  br i1 %cmp11, label %if.then12, label %if.end22, !dbg !21402

if.then12:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64** %wp, metadata !21403, metadata !DIExpression()), !dbg !21405
  %22 = load i8*, i8** %p.addr, align 8, !dbg !21406, !tbaa !2648
  %23 = bitcast i8* %22 to i64*, !dbg !21406
  store i64* %23, i64** %wp, align 8, !dbg !21405, !tbaa !2648
  br label %while.cond13, !dbg !21407

while.cond13:                                     ; preds = %if.end21, %if.then12
  %24 = load i64, i64* %size.addr, align 8, !dbg !21408, !tbaa !3288
  %cmp14 = icmp ule i64 2048, %24, !dbg !21409
  br i1 %cmp14, label %while.body15, label %while.end, !dbg !21407

while.body15:                                     ; preds = %while.cond13
  %25 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !21410, !tbaa !2648
  %state = getelementptr inbounds %struct.isaac, %struct.isaac* %25, i32 0, i32 1, !dbg !21412, !ctir !2473
  %26 = load i64*, i64** %wp, align 8, !dbg !21413, !tbaa !2648
  call void @isaac_refill(%struct.isaac_state* %state, i64* %26), !dbg !21414
  %27 = load i64*, i64** %wp, align 8, !dbg !21415, !tbaa !2648
  %add.ptr16 = getelementptr inbounds i64, i64* %27, i64 256, !dbg !21415
  store i64* %add.ptr16, i64** %wp, align 8, !dbg !21415, !tbaa !2648
  %28 = load i64, i64* %size.addr, align 8, !dbg !21416, !tbaa !3288
  %sub17 = sub i64 %28, 2048, !dbg !21416
  store i64 %sub17, i64* %size.addr, align 8, !dbg !21416, !tbaa !3288
  %29 = load i64, i64* %size.addr, align 8, !dbg !21417, !tbaa !3288
  %cmp18 = icmp eq i64 %29, 0, !dbg !21419
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !21420

if.then19:                                        ; preds = %while.body15
  %30 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !21421, !tbaa !2648
  %buffered20 = getelementptr inbounds %struct.isaac, %struct.isaac* %30, i32 0, i32 0, !dbg !21423, !ctir !2473
  store i64 0, i64* %buffered20, align 8, !dbg !21424, !tbaa !21355, !ctir !55
  br label %return, !dbg !21425

if.end21:                                         ; preds = %while.body15
  br label %while.cond13, !dbg !21407, !llvm.loop !21426

while.end:                                        ; preds = %while.cond13
  %31 = load i64*, i64** %wp, align 8, !dbg !21428, !tbaa !2648
  %32 = bitcast i64* %31 to i8*, !dbg !21428
  store i8* %32, i8** %p.addr, align 8, !dbg !21429, !tbaa !2648
  br label %if.end22, !dbg !21430

if.end22:                                         ; preds = %while.end, %if.end
  %33 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !21431, !tbaa !2648
  %state23 = getelementptr inbounds %struct.isaac, %struct.isaac* %33, i32 0, i32 1, !dbg !21432, !ctir !2473
  %34 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !21433, !tbaa !2648
  %data24 = getelementptr inbounds %struct.isaac, %struct.isaac* %34, i32 0, i32 2, !dbg !21434, !ctir !2473
  %w = bitcast %union.anon.0* %data24 to [256 x i64]*, !dbg !21435
  %arraydecay25 = getelementptr inbounds [256 x i64], [256 x i64]* %w, i64 0, i64 0, !dbg !21433
  call void @isaac_refill(%struct.isaac_state* %state23, i64* %arraydecay25), !dbg !21436
  store i64 2048, i64* %inbytes, align 8, !dbg !21437, !tbaa !3288
  br label %while.body, !dbg !21358, !llvm.loop !21438

return:                                           ; preds = %if.then19, %if.then
  ret void, !dbg !21440
}

declare dso_local i64 @fread_unlocked(i8*, i64, i64, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @randread_free(%struct.randread_source* %s) #4 !dbg !21441 !ctir !2502 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %source = alloca %struct._IO_FILE*, align 8, !ctir !2429
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !21442, metadata !DIExpression()), !dbg !21443
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %source, metadata !21444, metadata !DIExpression()), !dbg !21445
  %0 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !21446, !tbaa !2648
  %source1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %0, i32 0, i32 0, !dbg !21447, !ctir !2425
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %source1, align 8, !dbg !21447, !tbaa !21164, !ctir !2429
  store %struct._IO_FILE* %1, %struct._IO_FILE** %source, align 8, !dbg !21445, !tbaa !2648
  %2 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !21448, !tbaa !2648
  %3 = bitcast %struct.randread_source* %2 to i8*, !dbg !21448
  call void @explicit_bzero(i8* %3, i64 4152) #9, !dbg !21449
  %4 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !21450, !tbaa !2648
  %5 = bitcast %struct.randread_source* %4 to i8*, !dbg !21450
  call void @free(i8* %5) #9, !dbg !21451
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !21452, !tbaa !2648
  %tobool = icmp ne %struct._IO_FILE* %6, null, !dbg !21452
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !21452

cond.true:                                        ; preds = %entry
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !21453, !tbaa !2648
  %call = call i32 @rpl_fclose(%struct._IO_FILE* %7), !dbg !21454
  br label %cond.end, !dbg !21452

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !21452

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ 0, %cond.false ], !dbg !21452
  ret i32 %cond, !dbg !21455
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @isaac_refill(%struct.isaac_state* %s, i64* %result) #4 !dbg !21456 !ctir !2518 {
entry:
  %s.addr = alloca %struct.isaac_state*, align 8
  %result.addr = alloca i64*, align 8
  %a = alloca i64, align 8, !ctir !2482
  %b = alloca i64, align 8, !ctir !2482
  %m = alloca i64*, align 8, !ctir !2514
  %r = alloca i64*, align 8, !ctir !2514
  %x = alloca i64, align 8, !ctir !2482
  %y = alloca i64, align 8, !ctir !2482
  %x18 = alloca i64, align 8, !ctir !2482
  %y19 = alloca i64, align 8, !ctir !2482
  %x40 = alloca i64, align 8, !ctir !2482
  %y41 = alloca i64, align 8, !ctir !2482
  %x61 = alloca i64, align 8, !ctir !2482
  %y62 = alloca i64, align 8, !ctir !2482
  %x88 = alloca i64, align 8, !ctir !2482
  %y89 = alloca i64, align 8, !ctir !2482
  %x110 = alloca i64, align 8, !ctir !2482
  %y111 = alloca i64, align 8, !ctir !2482
  %x132 = alloca i64, align 8, !ctir !2482
  %y133 = alloca i64, align 8, !ctir !2482
  %x153 = alloca i64, align 8, !ctir !2482
  %y154 = alloca i64, align 8, !ctir !2482
  store %struct.isaac_state* %s, %struct.isaac_state** %s.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.isaac_state** %s.addr, metadata !21458, metadata !DIExpression()), !dbg !21459
  store i64* %result, i64** %result.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i64** %result.addr, metadata !21460, metadata !DIExpression()), !dbg !21461
  call void @llvm.dbg.declare(metadata i64* %a, metadata !21462, metadata !DIExpression()), !dbg !21463
  %0 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21464, !tbaa !2648
  %a1 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %0, i32 0, i32 1, !dbg !21465, !ctir !2521
  %1 = load i64, i64* %a1, align 8, !dbg !21465, !tbaa !21466, !ctir !2482
  store i64 %1, i64* %a, align 8, !dbg !21463, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %b, metadata !21467, metadata !DIExpression()), !dbg !21468
  %2 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21469, !tbaa !2648
  %b2 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %2, i32 0, i32 2, !dbg !21470, !ctir !2521
  %3 = load i64, i64* %b2, align 8, !dbg !21470, !tbaa !21471, !ctir !2482
  %4 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21472, !tbaa !2648
  %c = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %4, i32 0, i32 3, !dbg !21473, !ctir !2521
  %5 = load i64, i64* %c, align 8, !dbg !21474, !tbaa !21475, !ctir !2482
  %inc = add i64 %5, 1, !dbg !21474
  store i64 %inc, i64* %c, align 8, !dbg !21474, !tbaa !21475, !ctir !2482
  %add = add i64 %3, %inc, !dbg !21476
  store i64 %add, i64* %b, align 8, !dbg !21468, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64** %m, metadata !21477, metadata !DIExpression()), !dbg !21478
  %6 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21479, !tbaa !2648
  %m3 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %6, i32 0, i32 0, !dbg !21480, !ctir !2521
  %arraydecay = getelementptr inbounds [256 x i64], [256 x i64]* %m3, i64 0, i64 0, !dbg !21479
  store i64* %arraydecay, i64** %m, align 8, !dbg !21478, !tbaa !2648
  call void @llvm.dbg.declare(metadata i64** %r, metadata !21481, metadata !DIExpression()), !dbg !21482
  %7 = load i64*, i64** %result.addr, align 8, !dbg !21483, !tbaa !2648
  store i64* %7, i64** %r, align 8, !dbg !21482, !tbaa !2648
  br label %do.body, !dbg !21484

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.dbg.declare(metadata i64* %x, metadata !21485, metadata !DIExpression()), !dbg !21488
  call void @llvm.dbg.declare(metadata i64* %y, metadata !21489, metadata !DIExpression()), !dbg !21488
  %8 = load i64, i64* %a, align 8, !dbg !21488, !tbaa !3288
  %9 = load i64, i64* %a, align 8, !dbg !21488, !tbaa !3288
  %shl = shl i64 %9, 21, !dbg !21488
  %xor = xor i64 %8, %shl, !dbg !21488
  %neg = xor i64 %xor, -1, !dbg !21488
  %xor4 = xor i64 0, %neg, !dbg !21488
  %10 = load i64*, i64** %m, align 8, !dbg !21488, !tbaa !2648
  %arrayidx = getelementptr inbounds i64, i64* %10, i64 128, !dbg !21488, !ctir !2514
  %11 = load i64, i64* %arrayidx, align 8, !dbg !21488, !tbaa !3288
  %add5 = add i64 %xor4, %11, !dbg !21488
  store i64 %add5, i64* %a, align 8, !dbg !21488, !tbaa !3288
  %12 = load i64*, i64** %m, align 8, !dbg !21488, !tbaa !2648
  %arrayidx6 = getelementptr inbounds i64, i64* %12, i64 0, !dbg !21488, !ctir !2514
  %13 = load i64, i64* %arrayidx6, align 8, !dbg !21488, !tbaa !3288
  store i64 %13, i64* %x, align 8, !dbg !21488, !tbaa !3288
  %14 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21488, !tbaa !2648
  %m7 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %14, i32 0, i32 0, !dbg !21488, !ctir !2521
  %arraydecay8 = getelementptr inbounds [256 x i64], [256 x i64]* %m7, i64 0, i64 0, !dbg !21488
  %15 = load i64, i64* %x, align 8, !dbg !21488, !tbaa !3288
  %call = call i64 @ind(i64* %arraydecay8, i64 %15), !dbg !21488
  %16 = load i64, i64* %a, align 8, !dbg !21488, !tbaa !3288
  %add9 = add i64 %call, %16, !dbg !21488
  %17 = load i64, i64* %b, align 8, !dbg !21488, !tbaa !3288
  %add10 = add i64 %add9, %17, !dbg !21488
  store i64 %add10, i64* %y, align 8, !dbg !21488, !tbaa !3288
  %18 = load i64*, i64** %m, align 8, !dbg !21488, !tbaa !2648
  %arrayidx11 = getelementptr inbounds i64, i64* %18, i64 0, !dbg !21488, !ctir !2514
  store i64 %add10, i64* %arrayidx11, align 8, !dbg !21488, !tbaa !3288
  %19 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21488, !tbaa !2648
  %m12 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %19, i32 0, i32 0, !dbg !21488, !ctir !2521
  %arraydecay13 = getelementptr inbounds [256 x i64], [256 x i64]* %m12, i64 0, i64 0, !dbg !21488
  %20 = load i64, i64* %y, align 8, !dbg !21488, !tbaa !3288
  %shr = lshr i64 %20, 8, !dbg !21488
  %call14 = call i64 @ind(i64* %arraydecay13, i64 %shr), !dbg !21488
  %21 = load i64, i64* %x, align 8, !dbg !21488, !tbaa !3288
  %add15 = add i64 %call14, %21, !dbg !21488
  %call16 = call i64 @just(i64 %add15), !dbg !21488
  store i64 %call16, i64* %b, align 8, !dbg !21488, !tbaa !3288
  %22 = load i64*, i64** %r, align 8, !dbg !21488, !tbaa !2648
  %arrayidx17 = getelementptr inbounds i64, i64* %22, i64 0, !dbg !21488, !ctir !2514
  store i64 %call16, i64* %arrayidx17, align 8, !dbg !21488, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %x18, metadata !21490, metadata !DIExpression()), !dbg !21492
  call void @llvm.dbg.declare(metadata i64* %y19, metadata !21493, metadata !DIExpression()), !dbg !21492
  %23 = load i64, i64* %a, align 8, !dbg !21492, !tbaa !3288
  %24 = load i64, i64* %a, align 8, !dbg !21492, !tbaa !3288
  %call20 = call i64 @just(i64 %24), !dbg !21492
  %shr21 = lshr i64 %call20, 5, !dbg !21492
  %xor22 = xor i64 %23, %shr21, !dbg !21492
  %xor23 = xor i64 0, %xor22, !dbg !21492
  %25 = load i64*, i64** %m, align 8, !dbg !21492, !tbaa !2648
  %arrayidx24 = getelementptr inbounds i64, i64* %25, i64 129, !dbg !21492, !ctir !2514
  %26 = load i64, i64* %arrayidx24, align 8, !dbg !21492, !tbaa !3288
  %add25 = add i64 %xor23, %26, !dbg !21492
  store i64 %add25, i64* %a, align 8, !dbg !21492, !tbaa !3288
  %27 = load i64*, i64** %m, align 8, !dbg !21492, !tbaa !2648
  %arrayidx26 = getelementptr inbounds i64, i64* %27, i64 1, !dbg !21492, !ctir !2514
  %28 = load i64, i64* %arrayidx26, align 8, !dbg !21492, !tbaa !3288
  store i64 %28, i64* %x18, align 8, !dbg !21492, !tbaa !3288
  %29 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21492, !tbaa !2648
  %m27 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %29, i32 0, i32 0, !dbg !21492, !ctir !2521
  %arraydecay28 = getelementptr inbounds [256 x i64], [256 x i64]* %m27, i64 0, i64 0, !dbg !21492
  %30 = load i64, i64* %x18, align 8, !dbg !21492, !tbaa !3288
  %call29 = call i64 @ind(i64* %arraydecay28, i64 %30), !dbg !21492
  %31 = load i64, i64* %a, align 8, !dbg !21492, !tbaa !3288
  %add30 = add i64 %call29, %31, !dbg !21492
  %32 = load i64, i64* %b, align 8, !dbg !21492, !tbaa !3288
  %add31 = add i64 %add30, %32, !dbg !21492
  store i64 %add31, i64* %y19, align 8, !dbg !21492, !tbaa !3288
  %33 = load i64*, i64** %m, align 8, !dbg !21492, !tbaa !2648
  %arrayidx32 = getelementptr inbounds i64, i64* %33, i64 1, !dbg !21492, !ctir !2514
  store i64 %add31, i64* %arrayidx32, align 8, !dbg !21492, !tbaa !3288
  %34 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21492, !tbaa !2648
  %m33 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %34, i32 0, i32 0, !dbg !21492, !ctir !2521
  %arraydecay34 = getelementptr inbounds [256 x i64], [256 x i64]* %m33, i64 0, i64 0, !dbg !21492
  %35 = load i64, i64* %y19, align 8, !dbg !21492, !tbaa !3288
  %shr35 = lshr i64 %35, 8, !dbg !21492
  %call36 = call i64 @ind(i64* %arraydecay34, i64 %shr35), !dbg !21492
  %36 = load i64, i64* %x18, align 8, !dbg !21492, !tbaa !3288
  %add37 = add i64 %call36, %36, !dbg !21492
  %call38 = call i64 @just(i64 %add37), !dbg !21492
  store i64 %call38, i64* %b, align 8, !dbg !21492, !tbaa !3288
  %37 = load i64*, i64** %r, align 8, !dbg !21492, !tbaa !2648
  %arrayidx39 = getelementptr inbounds i64, i64* %37, i64 1, !dbg !21492, !ctir !2514
  store i64 %call38, i64* %arrayidx39, align 8, !dbg !21492, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %x40, metadata !21494, metadata !DIExpression()), !dbg !21496
  call void @llvm.dbg.declare(metadata i64* %y41, metadata !21497, metadata !DIExpression()), !dbg !21496
  %38 = load i64, i64* %a, align 8, !dbg !21496, !tbaa !3288
  %39 = load i64, i64* %a, align 8, !dbg !21496, !tbaa !3288
  %shl42 = shl i64 %39, 12, !dbg !21496
  %xor43 = xor i64 %38, %shl42, !dbg !21496
  %xor44 = xor i64 0, %xor43, !dbg !21496
  %40 = load i64*, i64** %m, align 8, !dbg !21496, !tbaa !2648
  %arrayidx45 = getelementptr inbounds i64, i64* %40, i64 130, !dbg !21496, !ctir !2514
  %41 = load i64, i64* %arrayidx45, align 8, !dbg !21496, !tbaa !3288
  %add46 = add i64 %xor44, %41, !dbg !21496
  store i64 %add46, i64* %a, align 8, !dbg !21496, !tbaa !3288
  %42 = load i64*, i64** %m, align 8, !dbg !21496, !tbaa !2648
  %arrayidx47 = getelementptr inbounds i64, i64* %42, i64 2, !dbg !21496, !ctir !2514
  %43 = load i64, i64* %arrayidx47, align 8, !dbg !21496, !tbaa !3288
  store i64 %43, i64* %x40, align 8, !dbg !21496, !tbaa !3288
  %44 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21496, !tbaa !2648
  %m48 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %44, i32 0, i32 0, !dbg !21496, !ctir !2521
  %arraydecay49 = getelementptr inbounds [256 x i64], [256 x i64]* %m48, i64 0, i64 0, !dbg !21496
  %45 = load i64, i64* %x40, align 8, !dbg !21496, !tbaa !3288
  %call50 = call i64 @ind(i64* %arraydecay49, i64 %45), !dbg !21496
  %46 = load i64, i64* %a, align 8, !dbg !21496, !tbaa !3288
  %add51 = add i64 %call50, %46, !dbg !21496
  %47 = load i64, i64* %b, align 8, !dbg !21496, !tbaa !3288
  %add52 = add i64 %add51, %47, !dbg !21496
  store i64 %add52, i64* %y41, align 8, !dbg !21496, !tbaa !3288
  %48 = load i64*, i64** %m, align 8, !dbg !21496, !tbaa !2648
  %arrayidx53 = getelementptr inbounds i64, i64* %48, i64 2, !dbg !21496, !ctir !2514
  store i64 %add52, i64* %arrayidx53, align 8, !dbg !21496, !tbaa !3288
  %49 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21496, !tbaa !2648
  %m54 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %49, i32 0, i32 0, !dbg !21496, !ctir !2521
  %arraydecay55 = getelementptr inbounds [256 x i64], [256 x i64]* %m54, i64 0, i64 0, !dbg !21496
  %50 = load i64, i64* %y41, align 8, !dbg !21496, !tbaa !3288
  %shr56 = lshr i64 %50, 8, !dbg !21496
  %call57 = call i64 @ind(i64* %arraydecay55, i64 %shr56), !dbg !21496
  %51 = load i64, i64* %x40, align 8, !dbg !21496, !tbaa !3288
  %add58 = add i64 %call57, %51, !dbg !21496
  %call59 = call i64 @just(i64 %add58), !dbg !21496
  store i64 %call59, i64* %b, align 8, !dbg !21496, !tbaa !3288
  %52 = load i64*, i64** %r, align 8, !dbg !21496, !tbaa !2648
  %arrayidx60 = getelementptr inbounds i64, i64* %52, i64 2, !dbg !21496, !ctir !2514
  store i64 %call59, i64* %arrayidx60, align 8, !dbg !21496, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %x61, metadata !21498, metadata !DIExpression()), !dbg !21500
  call void @llvm.dbg.declare(metadata i64* %y62, metadata !21501, metadata !DIExpression()), !dbg !21500
  %53 = load i64, i64* %a, align 8, !dbg !21500, !tbaa !3288
  %54 = load i64, i64* %a, align 8, !dbg !21500, !tbaa !3288
  %call63 = call i64 @just(i64 %54), !dbg !21500
  %shr64 = lshr i64 %call63, 33, !dbg !21500
  %xor65 = xor i64 %53, %shr64, !dbg !21500
  %xor66 = xor i64 0, %xor65, !dbg !21500
  %55 = load i64*, i64** %m, align 8, !dbg !21500, !tbaa !2648
  %arrayidx67 = getelementptr inbounds i64, i64* %55, i64 131, !dbg !21500, !ctir !2514
  %56 = load i64, i64* %arrayidx67, align 8, !dbg !21500, !tbaa !3288
  %add68 = add i64 %xor66, %56, !dbg !21500
  store i64 %add68, i64* %a, align 8, !dbg !21500, !tbaa !3288
  %57 = load i64*, i64** %m, align 8, !dbg !21500, !tbaa !2648
  %arrayidx69 = getelementptr inbounds i64, i64* %57, i64 3, !dbg !21500, !ctir !2514
  %58 = load i64, i64* %arrayidx69, align 8, !dbg !21500, !tbaa !3288
  store i64 %58, i64* %x61, align 8, !dbg !21500, !tbaa !3288
  %59 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21500, !tbaa !2648
  %m70 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %59, i32 0, i32 0, !dbg !21500, !ctir !2521
  %arraydecay71 = getelementptr inbounds [256 x i64], [256 x i64]* %m70, i64 0, i64 0, !dbg !21500
  %60 = load i64, i64* %x61, align 8, !dbg !21500, !tbaa !3288
  %call72 = call i64 @ind(i64* %arraydecay71, i64 %60), !dbg !21500
  %61 = load i64, i64* %a, align 8, !dbg !21500, !tbaa !3288
  %add73 = add i64 %call72, %61, !dbg !21500
  %62 = load i64, i64* %b, align 8, !dbg !21500, !tbaa !3288
  %add74 = add i64 %add73, %62, !dbg !21500
  store i64 %add74, i64* %y62, align 8, !dbg !21500, !tbaa !3288
  %63 = load i64*, i64** %m, align 8, !dbg !21500, !tbaa !2648
  %arrayidx75 = getelementptr inbounds i64, i64* %63, i64 3, !dbg !21500, !ctir !2514
  store i64 %add74, i64* %arrayidx75, align 8, !dbg !21500, !tbaa !3288
  %64 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21500, !tbaa !2648
  %m76 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %64, i32 0, i32 0, !dbg !21500, !ctir !2521
  %arraydecay77 = getelementptr inbounds [256 x i64], [256 x i64]* %m76, i64 0, i64 0, !dbg !21500
  %65 = load i64, i64* %y62, align 8, !dbg !21500, !tbaa !3288
  %shr78 = lshr i64 %65, 8, !dbg !21500
  %call79 = call i64 @ind(i64* %arraydecay77, i64 %shr78), !dbg !21500
  %66 = load i64, i64* %x61, align 8, !dbg !21500, !tbaa !3288
  %add80 = add i64 %call79, %66, !dbg !21500
  %call81 = call i64 @just(i64 %add80), !dbg !21500
  store i64 %call81, i64* %b, align 8, !dbg !21500, !tbaa !3288
  %67 = load i64*, i64** %r, align 8, !dbg !21500, !tbaa !2648
  %arrayidx82 = getelementptr inbounds i64, i64* %67, i64 3, !dbg !21500, !ctir !2514
  store i64 %call81, i64* %arrayidx82, align 8, !dbg !21500, !tbaa !3288
  %68 = load i64*, i64** %r, align 8, !dbg !21502, !tbaa !2648
  %add.ptr = getelementptr inbounds i64, i64* %68, i64 4, !dbg !21502
  store i64* %add.ptr, i64** %r, align 8, !dbg !21502, !tbaa !2648
  br label %do.cond, !dbg !21503

do.cond:                                          ; preds = %do.body
  %69 = load i64*, i64** %m, align 8, !dbg !21504, !tbaa !2648
  %add.ptr83 = getelementptr inbounds i64, i64* %69, i64 4, !dbg !21504
  store i64* %add.ptr83, i64** %m, align 8, !dbg !21504, !tbaa !2648
  %70 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21505, !tbaa !2648
  %m84 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %70, i32 0, i32 0, !dbg !21506, !ctir !2521
  %arraydecay85 = getelementptr inbounds [256 x i64], [256 x i64]* %m84, i64 0, i64 0, !dbg !21505
  %add.ptr86 = getelementptr inbounds i64, i64* %arraydecay85, i64 128, !dbg !21507
  %cmp = icmp ult i64* %add.ptr83, %add.ptr86, !dbg !21508
  br i1 %cmp, label %do.body, label %do.end, !dbg !21503, !llvm.loop !21509

do.end:                                           ; preds = %do.cond
  br label %do.body87, !dbg !21511

do.body87:                                        ; preds = %do.cond176, %do.end
  call void @llvm.dbg.declare(metadata i64* %x88, metadata !21512, metadata !DIExpression()), !dbg !21515
  call void @llvm.dbg.declare(metadata i64* %y89, metadata !21516, metadata !DIExpression()), !dbg !21515
  %71 = load i64, i64* %a, align 8, !dbg !21515, !tbaa !3288
  %72 = load i64, i64* %a, align 8, !dbg !21515, !tbaa !3288
  %shl90 = shl i64 %72, 21, !dbg !21515
  %xor91 = xor i64 %71, %shl90, !dbg !21515
  %neg92 = xor i64 %xor91, -1, !dbg !21515
  %xor93 = xor i64 0, %neg92, !dbg !21515
  %73 = load i64*, i64** %m, align 8, !dbg !21515, !tbaa !2648
  %arrayidx94 = getelementptr inbounds i64, i64* %73, i64 -128, !dbg !21515, !ctir !2514
  %74 = load i64, i64* %arrayidx94, align 8, !dbg !21515, !tbaa !3288
  %add95 = add i64 %xor93, %74, !dbg !21515
  store i64 %add95, i64* %a, align 8, !dbg !21515, !tbaa !3288
  %75 = load i64*, i64** %m, align 8, !dbg !21515, !tbaa !2648
  %arrayidx96 = getelementptr inbounds i64, i64* %75, i64 0, !dbg !21515, !ctir !2514
  %76 = load i64, i64* %arrayidx96, align 8, !dbg !21515, !tbaa !3288
  store i64 %76, i64* %x88, align 8, !dbg !21515, !tbaa !3288
  %77 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21515, !tbaa !2648
  %m97 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %77, i32 0, i32 0, !dbg !21515, !ctir !2521
  %arraydecay98 = getelementptr inbounds [256 x i64], [256 x i64]* %m97, i64 0, i64 0, !dbg !21515
  %78 = load i64, i64* %x88, align 8, !dbg !21515, !tbaa !3288
  %call99 = call i64 @ind(i64* %arraydecay98, i64 %78), !dbg !21515
  %79 = load i64, i64* %a, align 8, !dbg !21515, !tbaa !3288
  %add100 = add i64 %call99, %79, !dbg !21515
  %80 = load i64, i64* %b, align 8, !dbg !21515, !tbaa !3288
  %add101 = add i64 %add100, %80, !dbg !21515
  store i64 %add101, i64* %y89, align 8, !dbg !21515, !tbaa !3288
  %81 = load i64*, i64** %m, align 8, !dbg !21515, !tbaa !2648
  %arrayidx102 = getelementptr inbounds i64, i64* %81, i64 0, !dbg !21515, !ctir !2514
  store i64 %add101, i64* %arrayidx102, align 8, !dbg !21515, !tbaa !3288
  %82 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21515, !tbaa !2648
  %m103 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %82, i32 0, i32 0, !dbg !21515, !ctir !2521
  %arraydecay104 = getelementptr inbounds [256 x i64], [256 x i64]* %m103, i64 0, i64 0, !dbg !21515
  %83 = load i64, i64* %y89, align 8, !dbg !21515, !tbaa !3288
  %shr105 = lshr i64 %83, 8, !dbg !21515
  %call106 = call i64 @ind(i64* %arraydecay104, i64 %shr105), !dbg !21515
  %84 = load i64, i64* %x88, align 8, !dbg !21515, !tbaa !3288
  %add107 = add i64 %call106, %84, !dbg !21515
  %call108 = call i64 @just(i64 %add107), !dbg !21515
  store i64 %call108, i64* %b, align 8, !dbg !21515, !tbaa !3288
  %85 = load i64*, i64** %r, align 8, !dbg !21515, !tbaa !2648
  %arrayidx109 = getelementptr inbounds i64, i64* %85, i64 0, !dbg !21515, !ctir !2514
  store i64 %call108, i64* %arrayidx109, align 8, !dbg !21515, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %x110, metadata !21517, metadata !DIExpression()), !dbg !21519
  call void @llvm.dbg.declare(metadata i64* %y111, metadata !21520, metadata !DIExpression()), !dbg !21519
  %86 = load i64, i64* %a, align 8, !dbg !21519, !tbaa !3288
  %87 = load i64, i64* %a, align 8, !dbg !21519, !tbaa !3288
  %call112 = call i64 @just(i64 %87), !dbg !21519
  %shr113 = lshr i64 %call112, 5, !dbg !21519
  %xor114 = xor i64 %86, %shr113, !dbg !21519
  %xor115 = xor i64 0, %xor114, !dbg !21519
  %88 = load i64*, i64** %m, align 8, !dbg !21519, !tbaa !2648
  %arrayidx116 = getelementptr inbounds i64, i64* %88, i64 -127, !dbg !21519, !ctir !2514
  %89 = load i64, i64* %arrayidx116, align 8, !dbg !21519, !tbaa !3288
  %add117 = add i64 %xor115, %89, !dbg !21519
  store i64 %add117, i64* %a, align 8, !dbg !21519, !tbaa !3288
  %90 = load i64*, i64** %m, align 8, !dbg !21519, !tbaa !2648
  %arrayidx118 = getelementptr inbounds i64, i64* %90, i64 1, !dbg !21519, !ctir !2514
  %91 = load i64, i64* %arrayidx118, align 8, !dbg !21519, !tbaa !3288
  store i64 %91, i64* %x110, align 8, !dbg !21519, !tbaa !3288
  %92 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21519, !tbaa !2648
  %m119 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %92, i32 0, i32 0, !dbg !21519, !ctir !2521
  %arraydecay120 = getelementptr inbounds [256 x i64], [256 x i64]* %m119, i64 0, i64 0, !dbg !21519
  %93 = load i64, i64* %x110, align 8, !dbg !21519, !tbaa !3288
  %call121 = call i64 @ind(i64* %arraydecay120, i64 %93), !dbg !21519
  %94 = load i64, i64* %a, align 8, !dbg !21519, !tbaa !3288
  %add122 = add i64 %call121, %94, !dbg !21519
  %95 = load i64, i64* %b, align 8, !dbg !21519, !tbaa !3288
  %add123 = add i64 %add122, %95, !dbg !21519
  store i64 %add123, i64* %y111, align 8, !dbg !21519, !tbaa !3288
  %96 = load i64*, i64** %m, align 8, !dbg !21519, !tbaa !2648
  %arrayidx124 = getelementptr inbounds i64, i64* %96, i64 1, !dbg !21519, !ctir !2514
  store i64 %add123, i64* %arrayidx124, align 8, !dbg !21519, !tbaa !3288
  %97 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21519, !tbaa !2648
  %m125 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %97, i32 0, i32 0, !dbg !21519, !ctir !2521
  %arraydecay126 = getelementptr inbounds [256 x i64], [256 x i64]* %m125, i64 0, i64 0, !dbg !21519
  %98 = load i64, i64* %y111, align 8, !dbg !21519, !tbaa !3288
  %shr127 = lshr i64 %98, 8, !dbg !21519
  %call128 = call i64 @ind(i64* %arraydecay126, i64 %shr127), !dbg !21519
  %99 = load i64, i64* %x110, align 8, !dbg !21519, !tbaa !3288
  %add129 = add i64 %call128, %99, !dbg !21519
  %call130 = call i64 @just(i64 %add129), !dbg !21519
  store i64 %call130, i64* %b, align 8, !dbg !21519, !tbaa !3288
  %100 = load i64*, i64** %r, align 8, !dbg !21519, !tbaa !2648
  %arrayidx131 = getelementptr inbounds i64, i64* %100, i64 1, !dbg !21519, !ctir !2514
  store i64 %call130, i64* %arrayidx131, align 8, !dbg !21519, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %x132, metadata !21521, metadata !DIExpression()), !dbg !21523
  call void @llvm.dbg.declare(metadata i64* %y133, metadata !21524, metadata !DIExpression()), !dbg !21523
  %101 = load i64, i64* %a, align 8, !dbg !21523, !tbaa !3288
  %102 = load i64, i64* %a, align 8, !dbg !21523, !tbaa !3288
  %shl134 = shl i64 %102, 12, !dbg !21523
  %xor135 = xor i64 %101, %shl134, !dbg !21523
  %xor136 = xor i64 0, %xor135, !dbg !21523
  %103 = load i64*, i64** %m, align 8, !dbg !21523, !tbaa !2648
  %arrayidx137 = getelementptr inbounds i64, i64* %103, i64 -126, !dbg !21523, !ctir !2514
  %104 = load i64, i64* %arrayidx137, align 8, !dbg !21523, !tbaa !3288
  %add138 = add i64 %xor136, %104, !dbg !21523
  store i64 %add138, i64* %a, align 8, !dbg !21523, !tbaa !3288
  %105 = load i64*, i64** %m, align 8, !dbg !21523, !tbaa !2648
  %arrayidx139 = getelementptr inbounds i64, i64* %105, i64 2, !dbg !21523, !ctir !2514
  %106 = load i64, i64* %arrayidx139, align 8, !dbg !21523, !tbaa !3288
  store i64 %106, i64* %x132, align 8, !dbg !21523, !tbaa !3288
  %107 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21523, !tbaa !2648
  %m140 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %107, i32 0, i32 0, !dbg !21523, !ctir !2521
  %arraydecay141 = getelementptr inbounds [256 x i64], [256 x i64]* %m140, i64 0, i64 0, !dbg !21523
  %108 = load i64, i64* %x132, align 8, !dbg !21523, !tbaa !3288
  %call142 = call i64 @ind(i64* %arraydecay141, i64 %108), !dbg !21523
  %109 = load i64, i64* %a, align 8, !dbg !21523, !tbaa !3288
  %add143 = add i64 %call142, %109, !dbg !21523
  %110 = load i64, i64* %b, align 8, !dbg !21523, !tbaa !3288
  %add144 = add i64 %add143, %110, !dbg !21523
  store i64 %add144, i64* %y133, align 8, !dbg !21523, !tbaa !3288
  %111 = load i64*, i64** %m, align 8, !dbg !21523, !tbaa !2648
  %arrayidx145 = getelementptr inbounds i64, i64* %111, i64 2, !dbg !21523, !ctir !2514
  store i64 %add144, i64* %arrayidx145, align 8, !dbg !21523, !tbaa !3288
  %112 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21523, !tbaa !2648
  %m146 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %112, i32 0, i32 0, !dbg !21523, !ctir !2521
  %arraydecay147 = getelementptr inbounds [256 x i64], [256 x i64]* %m146, i64 0, i64 0, !dbg !21523
  %113 = load i64, i64* %y133, align 8, !dbg !21523, !tbaa !3288
  %shr148 = lshr i64 %113, 8, !dbg !21523
  %call149 = call i64 @ind(i64* %arraydecay147, i64 %shr148), !dbg !21523
  %114 = load i64, i64* %x132, align 8, !dbg !21523, !tbaa !3288
  %add150 = add i64 %call149, %114, !dbg !21523
  %call151 = call i64 @just(i64 %add150), !dbg !21523
  store i64 %call151, i64* %b, align 8, !dbg !21523, !tbaa !3288
  %115 = load i64*, i64** %r, align 8, !dbg !21523, !tbaa !2648
  %arrayidx152 = getelementptr inbounds i64, i64* %115, i64 2, !dbg !21523, !ctir !2514
  store i64 %call151, i64* %arrayidx152, align 8, !dbg !21523, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %x153, metadata !21525, metadata !DIExpression()), !dbg !21527
  call void @llvm.dbg.declare(metadata i64* %y154, metadata !21528, metadata !DIExpression()), !dbg !21527
  %116 = load i64, i64* %a, align 8, !dbg !21527, !tbaa !3288
  %117 = load i64, i64* %a, align 8, !dbg !21527, !tbaa !3288
  %call155 = call i64 @just(i64 %117), !dbg !21527
  %shr156 = lshr i64 %call155, 33, !dbg !21527
  %xor157 = xor i64 %116, %shr156, !dbg !21527
  %xor158 = xor i64 0, %xor157, !dbg !21527
  %118 = load i64*, i64** %m, align 8, !dbg !21527, !tbaa !2648
  %arrayidx159 = getelementptr inbounds i64, i64* %118, i64 -125, !dbg !21527, !ctir !2514
  %119 = load i64, i64* %arrayidx159, align 8, !dbg !21527, !tbaa !3288
  %add160 = add i64 %xor158, %119, !dbg !21527
  store i64 %add160, i64* %a, align 8, !dbg !21527, !tbaa !3288
  %120 = load i64*, i64** %m, align 8, !dbg !21527, !tbaa !2648
  %arrayidx161 = getelementptr inbounds i64, i64* %120, i64 3, !dbg !21527, !ctir !2514
  %121 = load i64, i64* %arrayidx161, align 8, !dbg !21527, !tbaa !3288
  store i64 %121, i64* %x153, align 8, !dbg !21527, !tbaa !3288
  %122 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21527, !tbaa !2648
  %m162 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %122, i32 0, i32 0, !dbg !21527, !ctir !2521
  %arraydecay163 = getelementptr inbounds [256 x i64], [256 x i64]* %m162, i64 0, i64 0, !dbg !21527
  %123 = load i64, i64* %x153, align 8, !dbg !21527, !tbaa !3288
  %call164 = call i64 @ind(i64* %arraydecay163, i64 %123), !dbg !21527
  %124 = load i64, i64* %a, align 8, !dbg !21527, !tbaa !3288
  %add165 = add i64 %call164, %124, !dbg !21527
  %125 = load i64, i64* %b, align 8, !dbg !21527, !tbaa !3288
  %add166 = add i64 %add165, %125, !dbg !21527
  store i64 %add166, i64* %y154, align 8, !dbg !21527, !tbaa !3288
  %126 = load i64*, i64** %m, align 8, !dbg !21527, !tbaa !2648
  %arrayidx167 = getelementptr inbounds i64, i64* %126, i64 3, !dbg !21527, !ctir !2514
  store i64 %add166, i64* %arrayidx167, align 8, !dbg !21527, !tbaa !3288
  %127 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21527, !tbaa !2648
  %m168 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %127, i32 0, i32 0, !dbg !21527, !ctir !2521
  %arraydecay169 = getelementptr inbounds [256 x i64], [256 x i64]* %m168, i64 0, i64 0, !dbg !21527
  %128 = load i64, i64* %y154, align 8, !dbg !21527, !tbaa !3288
  %shr170 = lshr i64 %128, 8, !dbg !21527
  %call171 = call i64 @ind(i64* %arraydecay169, i64 %shr170), !dbg !21527
  %129 = load i64, i64* %x153, align 8, !dbg !21527, !tbaa !3288
  %add172 = add i64 %call171, %129, !dbg !21527
  %call173 = call i64 @just(i64 %add172), !dbg !21527
  store i64 %call173, i64* %b, align 8, !dbg !21527, !tbaa !3288
  %130 = load i64*, i64** %r, align 8, !dbg !21527, !tbaa !2648
  %arrayidx174 = getelementptr inbounds i64, i64* %130, i64 3, !dbg !21527, !ctir !2514
  store i64 %call173, i64* %arrayidx174, align 8, !dbg !21527, !tbaa !3288
  %131 = load i64*, i64** %r, align 8, !dbg !21529, !tbaa !2648
  %add.ptr175 = getelementptr inbounds i64, i64* %131, i64 4, !dbg !21529
  store i64* %add.ptr175, i64** %r, align 8, !dbg !21529, !tbaa !2648
  br label %do.cond176, !dbg !21530

do.cond176:                                       ; preds = %do.body87
  %132 = load i64*, i64** %m, align 8, !dbg !21531, !tbaa !2648
  %add.ptr177 = getelementptr inbounds i64, i64* %132, i64 4, !dbg !21531
  store i64* %add.ptr177, i64** %m, align 8, !dbg !21531, !tbaa !2648
  %133 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21532, !tbaa !2648
  %m178 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %133, i32 0, i32 0, !dbg !21533, !ctir !2521
  %arraydecay179 = getelementptr inbounds [256 x i64], [256 x i64]* %m178, i64 0, i64 0, !dbg !21532
  %add.ptr180 = getelementptr inbounds i64, i64* %arraydecay179, i64 256, !dbg !21534
  %cmp181 = icmp ult i64* %add.ptr177, %add.ptr180, !dbg !21535
  br i1 %cmp181, label %do.body87, label %do.end182, !dbg !21530, !llvm.loop !21536

do.end182:                                        ; preds = %do.cond176
  %134 = load i64, i64* %a, align 8, !dbg !21538, !tbaa !3288
  %135 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21539, !tbaa !2648
  %a183 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %135, i32 0, i32 1, !dbg !21540, !ctir !2521
  store i64 %134, i64* %a183, align 8, !dbg !21541, !tbaa !21466, !ctir !2482
  %136 = load i64, i64* %b, align 8, !dbg !21542, !tbaa !3288
  %137 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21543, !tbaa !2648
  %b184 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %137, i32 0, i32 2, !dbg !21544, !ctir !2521
  store i64 %136, i64* %b184, align 8, !dbg !21545, !tbaa !21471, !ctir !2482
  ret void, !dbg !21546
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @ind(i64* %m, i64 %x) #4 !dbg !21547 !ctir !2529 {
entry:
  %m.addr = alloca i64*, align 8
  %x.addr = alloca i64, align 8
  %void_m = alloca i8*, align 8, !ctir !515
  %base_p = alloca i8*, align 8, !ctir !180
  %word_p = alloca i8*, align 8, !ctir !515
  %p = alloca i64*, align 8, !ctir !2531
  store i64* %m, i64** %m.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i64** %m.addr, metadata !21548, metadata !DIExpression()), !dbg !21549
  store i64 %x, i64* %x.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !21550, metadata !DIExpression()), !dbg !21551
  call void @llvm.dbg.declare(metadata i8** %void_m, metadata !21552, metadata !DIExpression()), !dbg !21555
  %0 = load i64*, i64** %m.addr, align 8, !dbg !21556, !tbaa !2648
  %1 = bitcast i64* %0 to i8*, !dbg !21556
  store i8* %1, i8** %void_m, align 8, !dbg !21555, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %base_p, metadata !21557, metadata !DIExpression()), !dbg !21558
  %2 = load i8*, i8** %void_m, align 8, !dbg !21559, !tbaa !2648
  store i8* %2, i8** %base_p, align 8, !dbg !21558, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %word_p, metadata !21560, metadata !DIExpression()), !dbg !21561
  %3 = load i8*, i8** %base_p, align 8, !dbg !21562, !tbaa !2648
  %4 = load i64, i64* %x.addr, align 8, !dbg !21563, !tbaa !3288
  %and = and i64 %4, 2040, !dbg !21564
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %and, !dbg !21565
  store i8* %add.ptr, i8** %word_p, align 8, !dbg !21561, !tbaa !2648
  call void @llvm.dbg.declare(metadata i64** %p, metadata !21566, metadata !DIExpression()), !dbg !21567
  %5 = load i8*, i8** %word_p, align 8, !dbg !21568, !tbaa !2648
  %6 = bitcast i8* %5 to i64*, !dbg !21568
  store i64* %6, i64** %p, align 8, !dbg !21567, !tbaa !2648
  %7 = load i64*, i64** %p, align 8, !dbg !21569, !tbaa !2648
  %8 = load i64, i64* %7, align 8, !dbg !21570, !tbaa !3288, !ctir !2532
  ret i64 %8, !dbg !21571
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @just(i64 %a) #4 !dbg !21572 !ctir !2533 {
entry:
  %a.addr = alloca i64, align 8
  %desired_bits = alloca i64, align 8, !ctir !2482
  store i64 %a, i64* %a.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !21573, metadata !DIExpression()), !dbg !21574
  call void @llvm.dbg.declare(metadata i64* %desired_bits, metadata !21575, metadata !DIExpression()), !dbg !21576
  store i64 -1, i64* %desired_bits, align 8, !dbg !21576, !tbaa !3288
  %0 = load i64, i64* %a.addr, align 8, !dbg !21577, !tbaa !3288
  %1 = load i64, i64* %desired_bits, align 8, !dbg !21578, !tbaa !3288
  %and = and i64 %0, %1, !dbg !21579
  ret i64 %and, !dbg !21580
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @isaac_seed(%struct.isaac_state* %s) #4 !dbg !21581 !ctir !2527 {
entry:
  %s.addr = alloca %struct.isaac_state*, align 8
  %a = alloca i64, align 8, !ctir !2482
  %b = alloca i64, align 8, !ctir !2482
  %c = alloca i64, align 8, !ctir !2482
  %d = alloca i64, align 8, !ctir !2482
  %e = alloca i64, align 8, !ctir !2482
  %f = alloca i64, align 8, !ctir !2482
  %g = alloca i64, align 8, !ctir !2482
  %h = alloca i64, align 8, !ctir !2482
  %i = alloca i32, align 4, !ctir !7
  %i99 = alloca i32, align 4, !ctir !7
  store %struct.isaac_state* %s, %struct.isaac_state** %s.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct.isaac_state** %s.addr, metadata !21582, metadata !DIExpression()), !dbg !21583
  call void @llvm.dbg.declare(metadata i64* %a, metadata !21584, metadata !DIExpression()), !dbg !21585
  store i64 7240739780546808700, i64* %a, align 8, !dbg !21585, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %b, metadata !21586, metadata !DIExpression()), !dbg !21587
  store i64 -5046086420515862430, i64* %b, align 8, !dbg !21587, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %c, metadata !21588, metadata !DIExpression()), !dbg !21589
  store i64 -8354558816804203872, i64* %c, align 8, !dbg !21589, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %d, metadata !21590, metadata !DIExpression()), !dbg !21591
  store i64 -5576812576440232668, i64* %d, align 8, !dbg !21591, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %e, metadata !21592, metadata !DIExpression()), !dbg !21593
  store i64 -9011610652101975858, i64* %e, align 8, !dbg !21593, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %f, metadata !21594, metadata !DIExpression()), !dbg !21595
  store i64 5259722845879046933, i64* %f, align 8, !dbg !21595, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %g, metadata !21596, metadata !DIExpression()), !dbg !21597
  store i64 -5865837416287532563, i64* %g, align 8, !dbg !21597, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %h, metadata !21598, metadata !DIExpression()), !dbg !21599
  store i64 -7424904924229222229, i64* %h, align 8, !dbg !21599, !tbaa !3288
  call void @llvm.dbg.declare(metadata i32* %i, metadata !21600, metadata !DIExpression()), !dbg !21602
  store i32 0, i32* %i, align 4, !dbg !21603, !tbaa !2635
  br label %for.cond, !dbg !21603

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !21605, !tbaa !2635
  %cmp = icmp slt i32 %0, 256, !dbg !21605
  br i1 %cmp, label %for.body, label %for.end, !dbg !21603

for.body:                                         ; preds = %for.cond
  %1 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21607, !tbaa !2648
  %m = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %1, i32 0, i32 0, !dbg !21607, !ctir !2521
  %2 = load i32, i32* %i, align 4, !dbg !21607, !tbaa !2635
  %idxprom = sext i32 %2 to i64, !dbg !21607
  %arrayidx = getelementptr inbounds [256 x i64], [256 x i64]* %m, i64 0, i64 %idxprom, !dbg !21607, !ctir !2481
  %3 = load i64, i64* %arrayidx, align 8, !dbg !21607, !tbaa !3288
  %4 = load i64, i64* %a, align 8, !dbg !21607, !tbaa !3288
  %add = add i64 %4, %3, !dbg !21607
  store i64 %add, i64* %a, align 8, !dbg !21607, !tbaa !3288
  %5 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21607, !tbaa !2648
  %m1 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %5, i32 0, i32 0, !dbg !21607, !ctir !2521
  %6 = load i32, i32* %i, align 4, !dbg !21607, !tbaa !2635
  %add2 = add nsw i32 %6, 1, !dbg !21607
  %idxprom3 = sext i32 %add2 to i64, !dbg !21607
  %arrayidx4 = getelementptr inbounds [256 x i64], [256 x i64]* %m1, i64 0, i64 %idxprom3, !dbg !21607, !ctir !2481
  %7 = load i64, i64* %arrayidx4, align 8, !dbg !21607, !tbaa !3288
  %8 = load i64, i64* %b, align 8, !dbg !21607, !tbaa !3288
  %add5 = add i64 %8, %7, !dbg !21607
  store i64 %add5, i64* %b, align 8, !dbg !21607, !tbaa !3288
  %9 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21607, !tbaa !2648
  %m6 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %9, i32 0, i32 0, !dbg !21607, !ctir !2521
  %10 = load i32, i32* %i, align 4, !dbg !21607, !tbaa !2635
  %add7 = add nsw i32 %10, 2, !dbg !21607
  %idxprom8 = sext i32 %add7 to i64, !dbg !21607
  %arrayidx9 = getelementptr inbounds [256 x i64], [256 x i64]* %m6, i64 0, i64 %idxprom8, !dbg !21607, !ctir !2481
  %11 = load i64, i64* %arrayidx9, align 8, !dbg !21607, !tbaa !3288
  %12 = load i64, i64* %c, align 8, !dbg !21607, !tbaa !3288
  %add10 = add i64 %12, %11, !dbg !21607
  store i64 %add10, i64* %c, align 8, !dbg !21607, !tbaa !3288
  %13 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21607, !tbaa !2648
  %m11 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %13, i32 0, i32 0, !dbg !21607, !ctir !2521
  %14 = load i32, i32* %i, align 4, !dbg !21607, !tbaa !2635
  %add12 = add nsw i32 %14, 3, !dbg !21607
  %idxprom13 = sext i32 %add12 to i64, !dbg !21607
  %arrayidx14 = getelementptr inbounds [256 x i64], [256 x i64]* %m11, i64 0, i64 %idxprom13, !dbg !21607, !ctir !2481
  %15 = load i64, i64* %arrayidx14, align 8, !dbg !21607, !tbaa !3288
  %16 = load i64, i64* %d, align 8, !dbg !21607, !tbaa !3288
  %add15 = add i64 %16, %15, !dbg !21607
  store i64 %add15, i64* %d, align 8, !dbg !21607, !tbaa !3288
  %17 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21607, !tbaa !2648
  %m16 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %17, i32 0, i32 0, !dbg !21607, !ctir !2521
  %18 = load i32, i32* %i, align 4, !dbg !21607, !tbaa !2635
  %add17 = add nsw i32 %18, 4, !dbg !21607
  %idxprom18 = sext i32 %add17 to i64, !dbg !21607
  %arrayidx19 = getelementptr inbounds [256 x i64], [256 x i64]* %m16, i64 0, i64 %idxprom18, !dbg !21607, !ctir !2481
  %19 = load i64, i64* %arrayidx19, align 8, !dbg !21607, !tbaa !3288
  %20 = load i64, i64* %e, align 8, !dbg !21607, !tbaa !3288
  %add20 = add i64 %20, %19, !dbg !21607
  store i64 %add20, i64* %e, align 8, !dbg !21607, !tbaa !3288
  %21 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21607, !tbaa !2648
  %m21 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %21, i32 0, i32 0, !dbg !21607, !ctir !2521
  %22 = load i32, i32* %i, align 4, !dbg !21607, !tbaa !2635
  %add22 = add nsw i32 %22, 5, !dbg !21607
  %idxprom23 = sext i32 %add22 to i64, !dbg !21607
  %arrayidx24 = getelementptr inbounds [256 x i64], [256 x i64]* %m21, i64 0, i64 %idxprom23, !dbg !21607, !ctir !2481
  %23 = load i64, i64* %arrayidx24, align 8, !dbg !21607, !tbaa !3288
  %24 = load i64, i64* %f, align 8, !dbg !21607, !tbaa !3288
  %add25 = add i64 %24, %23, !dbg !21607
  store i64 %add25, i64* %f, align 8, !dbg !21607, !tbaa !3288
  %25 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21607, !tbaa !2648
  %m26 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %25, i32 0, i32 0, !dbg !21607, !ctir !2521
  %26 = load i32, i32* %i, align 4, !dbg !21607, !tbaa !2635
  %add27 = add nsw i32 %26, 6, !dbg !21607
  %idxprom28 = sext i32 %add27 to i64, !dbg !21607
  %arrayidx29 = getelementptr inbounds [256 x i64], [256 x i64]* %m26, i64 0, i64 %idxprom28, !dbg !21607, !ctir !2481
  %27 = load i64, i64* %arrayidx29, align 8, !dbg !21607, !tbaa !3288
  %28 = load i64, i64* %g, align 8, !dbg !21607, !tbaa !3288
  %add30 = add i64 %28, %27, !dbg !21607
  store i64 %add30, i64* %g, align 8, !dbg !21607, !tbaa !3288
  %29 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21607, !tbaa !2648
  %m31 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %29, i32 0, i32 0, !dbg !21607, !ctir !2521
  %30 = load i32, i32* %i, align 4, !dbg !21607, !tbaa !2635
  %add32 = add nsw i32 %30, 7, !dbg !21607
  %idxprom33 = sext i32 %add32 to i64, !dbg !21607
  %arrayidx34 = getelementptr inbounds [256 x i64], [256 x i64]* %m31, i64 0, i64 %idxprom33, !dbg !21607, !ctir !2481
  %31 = load i64, i64* %arrayidx34, align 8, !dbg !21607, !tbaa !3288
  %32 = load i64, i64* %h, align 8, !dbg !21607, !tbaa !3288
  %add35 = add i64 %32, %31, !dbg !21607
  store i64 %add35, i64* %h, align 8, !dbg !21607, !tbaa !3288
  %33 = load i64, i64* %e, align 8, !dbg !21609, !tbaa !3288
  %34 = load i64, i64* %a, align 8, !dbg !21609, !tbaa !3288
  %sub = sub i64 %34, %33, !dbg !21609
  store i64 %sub, i64* %a, align 8, !dbg !21609, !tbaa !3288
  %35 = load i64, i64* %h, align 8, !dbg !21609, !tbaa !3288
  %call = call i64 @just(i64 %35), !dbg !21609
  %shr = lshr i64 %call, 9, !dbg !21609
  %36 = load i64, i64* %f, align 8, !dbg !21609, !tbaa !3288
  %xor = xor i64 %36, %shr, !dbg !21609
  store i64 %xor, i64* %f, align 8, !dbg !21609, !tbaa !3288
  %37 = load i64, i64* %a, align 8, !dbg !21609, !tbaa !3288
  %38 = load i64, i64* %h, align 8, !dbg !21609, !tbaa !3288
  %add36 = add i64 %38, %37, !dbg !21609
  store i64 %add36, i64* %h, align 8, !dbg !21609, !tbaa !3288
  %39 = load i64, i64* %f, align 8, !dbg !21609, !tbaa !3288
  %40 = load i64, i64* %b, align 8, !dbg !21609, !tbaa !3288
  %sub37 = sub i64 %40, %39, !dbg !21609
  store i64 %sub37, i64* %b, align 8, !dbg !21609, !tbaa !3288
  %41 = load i64, i64* %a, align 8, !dbg !21609, !tbaa !3288
  %shl = shl i64 %41, 9, !dbg !21609
  %42 = load i64, i64* %g, align 8, !dbg !21609, !tbaa !3288
  %xor38 = xor i64 %42, %shl, !dbg !21609
  store i64 %xor38, i64* %g, align 8, !dbg !21609, !tbaa !3288
  %43 = load i64, i64* %b, align 8, !dbg !21609, !tbaa !3288
  %44 = load i64, i64* %a, align 8, !dbg !21609, !tbaa !3288
  %add39 = add i64 %44, %43, !dbg !21609
  store i64 %add39, i64* %a, align 8, !dbg !21609, !tbaa !3288
  %45 = load i64, i64* %g, align 8, !dbg !21609, !tbaa !3288
  %46 = load i64, i64* %c, align 8, !dbg !21609, !tbaa !3288
  %sub40 = sub i64 %46, %45, !dbg !21609
  store i64 %sub40, i64* %c, align 8, !dbg !21609, !tbaa !3288
  %47 = load i64, i64* %b, align 8, !dbg !21609, !tbaa !3288
  %call41 = call i64 @just(i64 %47), !dbg !21609
  %shr42 = lshr i64 %call41, 23, !dbg !21609
  %48 = load i64, i64* %h, align 8, !dbg !21609, !tbaa !3288
  %xor43 = xor i64 %48, %shr42, !dbg !21609
  store i64 %xor43, i64* %h, align 8, !dbg !21609, !tbaa !3288
  %49 = load i64, i64* %c, align 8, !dbg !21609, !tbaa !3288
  %50 = load i64, i64* %b, align 8, !dbg !21609, !tbaa !3288
  %add44 = add i64 %50, %49, !dbg !21609
  store i64 %add44, i64* %b, align 8, !dbg !21609, !tbaa !3288
  %51 = load i64, i64* %h, align 8, !dbg !21609, !tbaa !3288
  %52 = load i64, i64* %d, align 8, !dbg !21609, !tbaa !3288
  %sub45 = sub i64 %52, %51, !dbg !21609
  store i64 %sub45, i64* %d, align 8, !dbg !21609, !tbaa !3288
  %53 = load i64, i64* %c, align 8, !dbg !21609, !tbaa !3288
  %shl46 = shl i64 %53, 15, !dbg !21609
  %54 = load i64, i64* %a, align 8, !dbg !21609, !tbaa !3288
  %xor47 = xor i64 %54, %shl46, !dbg !21609
  store i64 %xor47, i64* %a, align 8, !dbg !21609, !tbaa !3288
  %55 = load i64, i64* %d, align 8, !dbg !21609, !tbaa !3288
  %56 = load i64, i64* %c, align 8, !dbg !21609, !tbaa !3288
  %add48 = add i64 %56, %55, !dbg !21609
  store i64 %add48, i64* %c, align 8, !dbg !21609, !tbaa !3288
  %57 = load i64, i64* %a, align 8, !dbg !21609, !tbaa !3288
  %58 = load i64, i64* %e, align 8, !dbg !21609, !tbaa !3288
  %sub49 = sub i64 %58, %57, !dbg !21609
  store i64 %sub49, i64* %e, align 8, !dbg !21609, !tbaa !3288
  %59 = load i64, i64* %d, align 8, !dbg !21609, !tbaa !3288
  %call50 = call i64 @just(i64 %59), !dbg !21609
  %shr51 = lshr i64 %call50, 14, !dbg !21609
  %60 = load i64, i64* %b, align 8, !dbg !21609, !tbaa !3288
  %xor52 = xor i64 %60, %shr51, !dbg !21609
  store i64 %xor52, i64* %b, align 8, !dbg !21609, !tbaa !3288
  %61 = load i64, i64* %e, align 8, !dbg !21609, !tbaa !3288
  %62 = load i64, i64* %d, align 8, !dbg !21609, !tbaa !3288
  %add53 = add i64 %62, %61, !dbg !21609
  store i64 %add53, i64* %d, align 8, !dbg !21609, !tbaa !3288
  %63 = load i64, i64* %b, align 8, !dbg !21609, !tbaa !3288
  %64 = load i64, i64* %f, align 8, !dbg !21609, !tbaa !3288
  %sub54 = sub i64 %64, %63, !dbg !21609
  store i64 %sub54, i64* %f, align 8, !dbg !21609, !tbaa !3288
  %65 = load i64, i64* %e, align 8, !dbg !21609, !tbaa !3288
  %shl55 = shl i64 %65, 20, !dbg !21609
  %66 = load i64, i64* %c, align 8, !dbg !21609, !tbaa !3288
  %xor56 = xor i64 %66, %shl55, !dbg !21609
  store i64 %xor56, i64* %c, align 8, !dbg !21609, !tbaa !3288
  %67 = load i64, i64* %f, align 8, !dbg !21609, !tbaa !3288
  %68 = load i64, i64* %e, align 8, !dbg !21609, !tbaa !3288
  %add57 = add i64 %68, %67, !dbg !21609
  store i64 %add57, i64* %e, align 8, !dbg !21609, !tbaa !3288
  %69 = load i64, i64* %c, align 8, !dbg !21609, !tbaa !3288
  %70 = load i64, i64* %g, align 8, !dbg !21609, !tbaa !3288
  %sub58 = sub i64 %70, %69, !dbg !21609
  store i64 %sub58, i64* %g, align 8, !dbg !21609, !tbaa !3288
  %71 = load i64, i64* %f, align 8, !dbg !21609, !tbaa !3288
  %call59 = call i64 @just(i64 %71), !dbg !21609
  %shr60 = lshr i64 %call59, 17, !dbg !21609
  %72 = load i64, i64* %d, align 8, !dbg !21609, !tbaa !3288
  %xor61 = xor i64 %72, %shr60, !dbg !21609
  store i64 %xor61, i64* %d, align 8, !dbg !21609, !tbaa !3288
  %73 = load i64, i64* %g, align 8, !dbg !21609, !tbaa !3288
  %74 = load i64, i64* %f, align 8, !dbg !21609, !tbaa !3288
  %add62 = add i64 %74, %73, !dbg !21609
  store i64 %add62, i64* %f, align 8, !dbg !21609, !tbaa !3288
  %75 = load i64, i64* %d, align 8, !dbg !21609, !tbaa !3288
  %76 = load i64, i64* %h, align 8, !dbg !21609, !tbaa !3288
  %sub63 = sub i64 %76, %75, !dbg !21609
  store i64 %sub63, i64* %h, align 8, !dbg !21609, !tbaa !3288
  %77 = load i64, i64* %g, align 8, !dbg !21609, !tbaa !3288
  %shl64 = shl i64 %77, 14, !dbg !21609
  %78 = load i64, i64* %e, align 8, !dbg !21609, !tbaa !3288
  %xor65 = xor i64 %78, %shl64, !dbg !21609
  store i64 %xor65, i64* %e, align 8, !dbg !21609, !tbaa !3288
  %79 = load i64, i64* %h, align 8, !dbg !21609, !tbaa !3288
  %80 = load i64, i64* %g, align 8, !dbg !21609, !tbaa !3288
  %add66 = add i64 %80, %79, !dbg !21609
  store i64 %add66, i64* %g, align 8, !dbg !21609, !tbaa !3288
  %81 = load i64, i64* %a, align 8, !dbg !21607, !tbaa !3288
  %82 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21607, !tbaa !2648
  %m67 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %82, i32 0, i32 0, !dbg !21607, !ctir !2521
  %83 = load i32, i32* %i, align 4, !dbg !21607, !tbaa !2635
  %idxprom68 = sext i32 %83 to i64, !dbg !21607
  %arrayidx69 = getelementptr inbounds [256 x i64], [256 x i64]* %m67, i64 0, i64 %idxprom68, !dbg !21607, !ctir !2481
  store i64 %81, i64* %arrayidx69, align 8, !dbg !21607, !tbaa !3288
  %84 = load i64, i64* %b, align 8, !dbg !21607, !tbaa !3288
  %85 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21607, !tbaa !2648
  %m70 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %85, i32 0, i32 0, !dbg !21607, !ctir !2521
  %86 = load i32, i32* %i, align 4, !dbg !21607, !tbaa !2635
  %add71 = add nsw i32 %86, 1, !dbg !21607
  %idxprom72 = sext i32 %add71 to i64, !dbg !21607
  %arrayidx73 = getelementptr inbounds [256 x i64], [256 x i64]* %m70, i64 0, i64 %idxprom72, !dbg !21607, !ctir !2481
  store i64 %84, i64* %arrayidx73, align 8, !dbg !21607, !tbaa !3288
  %87 = load i64, i64* %c, align 8, !dbg !21607, !tbaa !3288
  %88 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21607, !tbaa !2648
  %m74 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %88, i32 0, i32 0, !dbg !21607, !ctir !2521
  %89 = load i32, i32* %i, align 4, !dbg !21607, !tbaa !2635
  %add75 = add nsw i32 %89, 2, !dbg !21607
  %idxprom76 = sext i32 %add75 to i64, !dbg !21607
  %arrayidx77 = getelementptr inbounds [256 x i64], [256 x i64]* %m74, i64 0, i64 %idxprom76, !dbg !21607, !ctir !2481
  store i64 %87, i64* %arrayidx77, align 8, !dbg !21607, !tbaa !3288
  %90 = load i64, i64* %d, align 8, !dbg !21607, !tbaa !3288
  %91 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21607, !tbaa !2648
  %m78 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %91, i32 0, i32 0, !dbg !21607, !ctir !2521
  %92 = load i32, i32* %i, align 4, !dbg !21607, !tbaa !2635
  %add79 = add nsw i32 %92, 3, !dbg !21607
  %idxprom80 = sext i32 %add79 to i64, !dbg !21607
  %arrayidx81 = getelementptr inbounds [256 x i64], [256 x i64]* %m78, i64 0, i64 %idxprom80, !dbg !21607, !ctir !2481
  store i64 %90, i64* %arrayidx81, align 8, !dbg !21607, !tbaa !3288
  %93 = load i64, i64* %e, align 8, !dbg !21607, !tbaa !3288
  %94 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21607, !tbaa !2648
  %m82 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %94, i32 0, i32 0, !dbg !21607, !ctir !2521
  %95 = load i32, i32* %i, align 4, !dbg !21607, !tbaa !2635
  %add83 = add nsw i32 %95, 4, !dbg !21607
  %idxprom84 = sext i32 %add83 to i64, !dbg !21607
  %arrayidx85 = getelementptr inbounds [256 x i64], [256 x i64]* %m82, i64 0, i64 %idxprom84, !dbg !21607, !ctir !2481
  store i64 %93, i64* %arrayidx85, align 8, !dbg !21607, !tbaa !3288
  %96 = load i64, i64* %f, align 8, !dbg !21607, !tbaa !3288
  %97 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21607, !tbaa !2648
  %m86 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %97, i32 0, i32 0, !dbg !21607, !ctir !2521
  %98 = load i32, i32* %i, align 4, !dbg !21607, !tbaa !2635
  %add87 = add nsw i32 %98, 5, !dbg !21607
  %idxprom88 = sext i32 %add87 to i64, !dbg !21607
  %arrayidx89 = getelementptr inbounds [256 x i64], [256 x i64]* %m86, i64 0, i64 %idxprom88, !dbg !21607, !ctir !2481
  store i64 %96, i64* %arrayidx89, align 8, !dbg !21607, !tbaa !3288
  %99 = load i64, i64* %g, align 8, !dbg !21607, !tbaa !3288
  %100 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21607, !tbaa !2648
  %m90 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %100, i32 0, i32 0, !dbg !21607, !ctir !2521
  %101 = load i32, i32* %i, align 4, !dbg !21607, !tbaa !2635
  %add91 = add nsw i32 %101, 6, !dbg !21607
  %idxprom92 = sext i32 %add91 to i64, !dbg !21607
  %arrayidx93 = getelementptr inbounds [256 x i64], [256 x i64]* %m90, i64 0, i64 %idxprom92, !dbg !21607, !ctir !2481
  store i64 %99, i64* %arrayidx93, align 8, !dbg !21607, !tbaa !3288
  %102 = load i64, i64* %h, align 8, !dbg !21607, !tbaa !3288
  %103 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21607, !tbaa !2648
  %m94 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %103, i32 0, i32 0, !dbg !21607, !ctir !2521
  %104 = load i32, i32* %i, align 4, !dbg !21607, !tbaa !2635
  %add95 = add nsw i32 %104, 7, !dbg !21607
  %idxprom96 = sext i32 %add95 to i64, !dbg !21607
  %arrayidx97 = getelementptr inbounds [256 x i64], [256 x i64]* %m94, i64 0, i64 %idxprom96, !dbg !21607, !ctir !2481
  store i64 %102, i64* %arrayidx97, align 8, !dbg !21607, !tbaa !3288
  br label %for.inc, !dbg !21607

for.inc:                                          ; preds = %for.body
  %105 = load i32, i32* %i, align 4, !dbg !21605, !tbaa !2635
  %add98 = add nsw i32 %105, 8, !dbg !21605
  store i32 %add98, i32* %i, align 4, !dbg !21605, !tbaa !2635
  br label %for.cond, !dbg !21605, !llvm.loop !21611

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i99, metadata !21612, metadata !DIExpression()), !dbg !21614
  store i32 0, i32* %i99, align 4, !dbg !21615, !tbaa !2635
  br label %for.cond100, !dbg !21615

for.cond100:                                      ; preds = %for.inc209, %for.end
  %106 = load i32, i32* %i99, align 4, !dbg !21617, !tbaa !2635
  %cmp101 = icmp slt i32 %106, 256, !dbg !21617
  br i1 %cmp101, label %for.body102, label %for.end211, !dbg !21615

for.body102:                                      ; preds = %for.cond100
  %107 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21619, !tbaa !2648
  %m103 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %107, i32 0, i32 0, !dbg !21619, !ctir !2521
  %108 = load i32, i32* %i99, align 4, !dbg !21619, !tbaa !2635
  %idxprom104 = sext i32 %108 to i64, !dbg !21619
  %arrayidx105 = getelementptr inbounds [256 x i64], [256 x i64]* %m103, i64 0, i64 %idxprom104, !dbg !21619, !ctir !2481
  %109 = load i64, i64* %arrayidx105, align 8, !dbg !21619, !tbaa !3288
  %110 = load i64, i64* %a, align 8, !dbg !21619, !tbaa !3288
  %add106 = add i64 %110, %109, !dbg !21619
  store i64 %add106, i64* %a, align 8, !dbg !21619, !tbaa !3288
  %111 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21619, !tbaa !2648
  %m107 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %111, i32 0, i32 0, !dbg !21619, !ctir !2521
  %112 = load i32, i32* %i99, align 4, !dbg !21619, !tbaa !2635
  %add108 = add nsw i32 %112, 1, !dbg !21619
  %idxprom109 = sext i32 %add108 to i64, !dbg !21619
  %arrayidx110 = getelementptr inbounds [256 x i64], [256 x i64]* %m107, i64 0, i64 %idxprom109, !dbg !21619, !ctir !2481
  %113 = load i64, i64* %arrayidx110, align 8, !dbg !21619, !tbaa !3288
  %114 = load i64, i64* %b, align 8, !dbg !21619, !tbaa !3288
  %add111 = add i64 %114, %113, !dbg !21619
  store i64 %add111, i64* %b, align 8, !dbg !21619, !tbaa !3288
  %115 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21619, !tbaa !2648
  %m112 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %115, i32 0, i32 0, !dbg !21619, !ctir !2521
  %116 = load i32, i32* %i99, align 4, !dbg !21619, !tbaa !2635
  %add113 = add nsw i32 %116, 2, !dbg !21619
  %idxprom114 = sext i32 %add113 to i64, !dbg !21619
  %arrayidx115 = getelementptr inbounds [256 x i64], [256 x i64]* %m112, i64 0, i64 %idxprom114, !dbg !21619, !ctir !2481
  %117 = load i64, i64* %arrayidx115, align 8, !dbg !21619, !tbaa !3288
  %118 = load i64, i64* %c, align 8, !dbg !21619, !tbaa !3288
  %add116 = add i64 %118, %117, !dbg !21619
  store i64 %add116, i64* %c, align 8, !dbg !21619, !tbaa !3288
  %119 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21619, !tbaa !2648
  %m117 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %119, i32 0, i32 0, !dbg !21619, !ctir !2521
  %120 = load i32, i32* %i99, align 4, !dbg !21619, !tbaa !2635
  %add118 = add nsw i32 %120, 3, !dbg !21619
  %idxprom119 = sext i32 %add118 to i64, !dbg !21619
  %arrayidx120 = getelementptr inbounds [256 x i64], [256 x i64]* %m117, i64 0, i64 %idxprom119, !dbg !21619, !ctir !2481
  %121 = load i64, i64* %arrayidx120, align 8, !dbg !21619, !tbaa !3288
  %122 = load i64, i64* %d, align 8, !dbg !21619, !tbaa !3288
  %add121 = add i64 %122, %121, !dbg !21619
  store i64 %add121, i64* %d, align 8, !dbg !21619, !tbaa !3288
  %123 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21619, !tbaa !2648
  %m122 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %123, i32 0, i32 0, !dbg !21619, !ctir !2521
  %124 = load i32, i32* %i99, align 4, !dbg !21619, !tbaa !2635
  %add123 = add nsw i32 %124, 4, !dbg !21619
  %idxprom124 = sext i32 %add123 to i64, !dbg !21619
  %arrayidx125 = getelementptr inbounds [256 x i64], [256 x i64]* %m122, i64 0, i64 %idxprom124, !dbg !21619, !ctir !2481
  %125 = load i64, i64* %arrayidx125, align 8, !dbg !21619, !tbaa !3288
  %126 = load i64, i64* %e, align 8, !dbg !21619, !tbaa !3288
  %add126 = add i64 %126, %125, !dbg !21619
  store i64 %add126, i64* %e, align 8, !dbg !21619, !tbaa !3288
  %127 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21619, !tbaa !2648
  %m127 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %127, i32 0, i32 0, !dbg !21619, !ctir !2521
  %128 = load i32, i32* %i99, align 4, !dbg !21619, !tbaa !2635
  %add128 = add nsw i32 %128, 5, !dbg !21619
  %idxprom129 = sext i32 %add128 to i64, !dbg !21619
  %arrayidx130 = getelementptr inbounds [256 x i64], [256 x i64]* %m127, i64 0, i64 %idxprom129, !dbg !21619, !ctir !2481
  %129 = load i64, i64* %arrayidx130, align 8, !dbg !21619, !tbaa !3288
  %130 = load i64, i64* %f, align 8, !dbg !21619, !tbaa !3288
  %add131 = add i64 %130, %129, !dbg !21619
  store i64 %add131, i64* %f, align 8, !dbg !21619, !tbaa !3288
  %131 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21619, !tbaa !2648
  %m132 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %131, i32 0, i32 0, !dbg !21619, !ctir !2521
  %132 = load i32, i32* %i99, align 4, !dbg !21619, !tbaa !2635
  %add133 = add nsw i32 %132, 6, !dbg !21619
  %idxprom134 = sext i32 %add133 to i64, !dbg !21619
  %arrayidx135 = getelementptr inbounds [256 x i64], [256 x i64]* %m132, i64 0, i64 %idxprom134, !dbg !21619, !ctir !2481
  %133 = load i64, i64* %arrayidx135, align 8, !dbg !21619, !tbaa !3288
  %134 = load i64, i64* %g, align 8, !dbg !21619, !tbaa !3288
  %add136 = add i64 %134, %133, !dbg !21619
  store i64 %add136, i64* %g, align 8, !dbg !21619, !tbaa !3288
  %135 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21619, !tbaa !2648
  %m137 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %135, i32 0, i32 0, !dbg !21619, !ctir !2521
  %136 = load i32, i32* %i99, align 4, !dbg !21619, !tbaa !2635
  %add138 = add nsw i32 %136, 7, !dbg !21619
  %idxprom139 = sext i32 %add138 to i64, !dbg !21619
  %arrayidx140 = getelementptr inbounds [256 x i64], [256 x i64]* %m137, i64 0, i64 %idxprom139, !dbg !21619, !ctir !2481
  %137 = load i64, i64* %arrayidx140, align 8, !dbg !21619, !tbaa !3288
  %138 = load i64, i64* %h, align 8, !dbg !21619, !tbaa !3288
  %add141 = add i64 %138, %137, !dbg !21619
  store i64 %add141, i64* %h, align 8, !dbg !21619, !tbaa !3288
  %139 = load i64, i64* %e, align 8, !dbg !21621, !tbaa !3288
  %140 = load i64, i64* %a, align 8, !dbg !21621, !tbaa !3288
  %sub142 = sub i64 %140, %139, !dbg !21621
  store i64 %sub142, i64* %a, align 8, !dbg !21621, !tbaa !3288
  %141 = load i64, i64* %h, align 8, !dbg !21621, !tbaa !3288
  %call143 = call i64 @just(i64 %141), !dbg !21621
  %shr144 = lshr i64 %call143, 9, !dbg !21621
  %142 = load i64, i64* %f, align 8, !dbg !21621, !tbaa !3288
  %xor145 = xor i64 %142, %shr144, !dbg !21621
  store i64 %xor145, i64* %f, align 8, !dbg !21621, !tbaa !3288
  %143 = load i64, i64* %a, align 8, !dbg !21621, !tbaa !3288
  %144 = load i64, i64* %h, align 8, !dbg !21621, !tbaa !3288
  %add146 = add i64 %144, %143, !dbg !21621
  store i64 %add146, i64* %h, align 8, !dbg !21621, !tbaa !3288
  %145 = load i64, i64* %f, align 8, !dbg !21621, !tbaa !3288
  %146 = load i64, i64* %b, align 8, !dbg !21621, !tbaa !3288
  %sub147 = sub i64 %146, %145, !dbg !21621
  store i64 %sub147, i64* %b, align 8, !dbg !21621, !tbaa !3288
  %147 = load i64, i64* %a, align 8, !dbg !21621, !tbaa !3288
  %shl148 = shl i64 %147, 9, !dbg !21621
  %148 = load i64, i64* %g, align 8, !dbg !21621, !tbaa !3288
  %xor149 = xor i64 %148, %shl148, !dbg !21621
  store i64 %xor149, i64* %g, align 8, !dbg !21621, !tbaa !3288
  %149 = load i64, i64* %b, align 8, !dbg !21621, !tbaa !3288
  %150 = load i64, i64* %a, align 8, !dbg !21621, !tbaa !3288
  %add150 = add i64 %150, %149, !dbg !21621
  store i64 %add150, i64* %a, align 8, !dbg !21621, !tbaa !3288
  %151 = load i64, i64* %g, align 8, !dbg !21621, !tbaa !3288
  %152 = load i64, i64* %c, align 8, !dbg !21621, !tbaa !3288
  %sub151 = sub i64 %152, %151, !dbg !21621
  store i64 %sub151, i64* %c, align 8, !dbg !21621, !tbaa !3288
  %153 = load i64, i64* %b, align 8, !dbg !21621, !tbaa !3288
  %call152 = call i64 @just(i64 %153), !dbg !21621
  %shr153 = lshr i64 %call152, 23, !dbg !21621
  %154 = load i64, i64* %h, align 8, !dbg !21621, !tbaa !3288
  %xor154 = xor i64 %154, %shr153, !dbg !21621
  store i64 %xor154, i64* %h, align 8, !dbg !21621, !tbaa !3288
  %155 = load i64, i64* %c, align 8, !dbg !21621, !tbaa !3288
  %156 = load i64, i64* %b, align 8, !dbg !21621, !tbaa !3288
  %add155 = add i64 %156, %155, !dbg !21621
  store i64 %add155, i64* %b, align 8, !dbg !21621, !tbaa !3288
  %157 = load i64, i64* %h, align 8, !dbg !21621, !tbaa !3288
  %158 = load i64, i64* %d, align 8, !dbg !21621, !tbaa !3288
  %sub156 = sub i64 %158, %157, !dbg !21621
  store i64 %sub156, i64* %d, align 8, !dbg !21621, !tbaa !3288
  %159 = load i64, i64* %c, align 8, !dbg !21621, !tbaa !3288
  %shl157 = shl i64 %159, 15, !dbg !21621
  %160 = load i64, i64* %a, align 8, !dbg !21621, !tbaa !3288
  %xor158 = xor i64 %160, %shl157, !dbg !21621
  store i64 %xor158, i64* %a, align 8, !dbg !21621, !tbaa !3288
  %161 = load i64, i64* %d, align 8, !dbg !21621, !tbaa !3288
  %162 = load i64, i64* %c, align 8, !dbg !21621, !tbaa !3288
  %add159 = add i64 %162, %161, !dbg !21621
  store i64 %add159, i64* %c, align 8, !dbg !21621, !tbaa !3288
  %163 = load i64, i64* %a, align 8, !dbg !21621, !tbaa !3288
  %164 = load i64, i64* %e, align 8, !dbg !21621, !tbaa !3288
  %sub160 = sub i64 %164, %163, !dbg !21621
  store i64 %sub160, i64* %e, align 8, !dbg !21621, !tbaa !3288
  %165 = load i64, i64* %d, align 8, !dbg !21621, !tbaa !3288
  %call161 = call i64 @just(i64 %165), !dbg !21621
  %shr162 = lshr i64 %call161, 14, !dbg !21621
  %166 = load i64, i64* %b, align 8, !dbg !21621, !tbaa !3288
  %xor163 = xor i64 %166, %shr162, !dbg !21621
  store i64 %xor163, i64* %b, align 8, !dbg !21621, !tbaa !3288
  %167 = load i64, i64* %e, align 8, !dbg !21621, !tbaa !3288
  %168 = load i64, i64* %d, align 8, !dbg !21621, !tbaa !3288
  %add164 = add i64 %168, %167, !dbg !21621
  store i64 %add164, i64* %d, align 8, !dbg !21621, !tbaa !3288
  %169 = load i64, i64* %b, align 8, !dbg !21621, !tbaa !3288
  %170 = load i64, i64* %f, align 8, !dbg !21621, !tbaa !3288
  %sub165 = sub i64 %170, %169, !dbg !21621
  store i64 %sub165, i64* %f, align 8, !dbg !21621, !tbaa !3288
  %171 = load i64, i64* %e, align 8, !dbg !21621, !tbaa !3288
  %shl166 = shl i64 %171, 20, !dbg !21621
  %172 = load i64, i64* %c, align 8, !dbg !21621, !tbaa !3288
  %xor167 = xor i64 %172, %shl166, !dbg !21621
  store i64 %xor167, i64* %c, align 8, !dbg !21621, !tbaa !3288
  %173 = load i64, i64* %f, align 8, !dbg !21621, !tbaa !3288
  %174 = load i64, i64* %e, align 8, !dbg !21621, !tbaa !3288
  %add168 = add i64 %174, %173, !dbg !21621
  store i64 %add168, i64* %e, align 8, !dbg !21621, !tbaa !3288
  %175 = load i64, i64* %c, align 8, !dbg !21621, !tbaa !3288
  %176 = load i64, i64* %g, align 8, !dbg !21621, !tbaa !3288
  %sub169 = sub i64 %176, %175, !dbg !21621
  store i64 %sub169, i64* %g, align 8, !dbg !21621, !tbaa !3288
  %177 = load i64, i64* %f, align 8, !dbg !21621, !tbaa !3288
  %call170 = call i64 @just(i64 %177), !dbg !21621
  %shr171 = lshr i64 %call170, 17, !dbg !21621
  %178 = load i64, i64* %d, align 8, !dbg !21621, !tbaa !3288
  %xor172 = xor i64 %178, %shr171, !dbg !21621
  store i64 %xor172, i64* %d, align 8, !dbg !21621, !tbaa !3288
  %179 = load i64, i64* %g, align 8, !dbg !21621, !tbaa !3288
  %180 = load i64, i64* %f, align 8, !dbg !21621, !tbaa !3288
  %add173 = add i64 %180, %179, !dbg !21621
  store i64 %add173, i64* %f, align 8, !dbg !21621, !tbaa !3288
  %181 = load i64, i64* %d, align 8, !dbg !21621, !tbaa !3288
  %182 = load i64, i64* %h, align 8, !dbg !21621, !tbaa !3288
  %sub174 = sub i64 %182, %181, !dbg !21621
  store i64 %sub174, i64* %h, align 8, !dbg !21621, !tbaa !3288
  %183 = load i64, i64* %g, align 8, !dbg !21621, !tbaa !3288
  %shl175 = shl i64 %183, 14, !dbg !21621
  %184 = load i64, i64* %e, align 8, !dbg !21621, !tbaa !3288
  %xor176 = xor i64 %184, %shl175, !dbg !21621
  store i64 %xor176, i64* %e, align 8, !dbg !21621, !tbaa !3288
  %185 = load i64, i64* %h, align 8, !dbg !21621, !tbaa !3288
  %186 = load i64, i64* %g, align 8, !dbg !21621, !tbaa !3288
  %add177 = add i64 %186, %185, !dbg !21621
  store i64 %add177, i64* %g, align 8, !dbg !21621, !tbaa !3288
  %187 = load i64, i64* %a, align 8, !dbg !21619, !tbaa !3288
  %188 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21619, !tbaa !2648
  %m178 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %188, i32 0, i32 0, !dbg !21619, !ctir !2521
  %189 = load i32, i32* %i99, align 4, !dbg !21619, !tbaa !2635
  %idxprom179 = sext i32 %189 to i64, !dbg !21619
  %arrayidx180 = getelementptr inbounds [256 x i64], [256 x i64]* %m178, i64 0, i64 %idxprom179, !dbg !21619, !ctir !2481
  store i64 %187, i64* %arrayidx180, align 8, !dbg !21619, !tbaa !3288
  %190 = load i64, i64* %b, align 8, !dbg !21619, !tbaa !3288
  %191 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21619, !tbaa !2648
  %m181 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %191, i32 0, i32 0, !dbg !21619, !ctir !2521
  %192 = load i32, i32* %i99, align 4, !dbg !21619, !tbaa !2635
  %add182 = add nsw i32 %192, 1, !dbg !21619
  %idxprom183 = sext i32 %add182 to i64, !dbg !21619
  %arrayidx184 = getelementptr inbounds [256 x i64], [256 x i64]* %m181, i64 0, i64 %idxprom183, !dbg !21619, !ctir !2481
  store i64 %190, i64* %arrayidx184, align 8, !dbg !21619, !tbaa !3288
  %193 = load i64, i64* %c, align 8, !dbg !21619, !tbaa !3288
  %194 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21619, !tbaa !2648
  %m185 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %194, i32 0, i32 0, !dbg !21619, !ctir !2521
  %195 = load i32, i32* %i99, align 4, !dbg !21619, !tbaa !2635
  %add186 = add nsw i32 %195, 2, !dbg !21619
  %idxprom187 = sext i32 %add186 to i64, !dbg !21619
  %arrayidx188 = getelementptr inbounds [256 x i64], [256 x i64]* %m185, i64 0, i64 %idxprom187, !dbg !21619, !ctir !2481
  store i64 %193, i64* %arrayidx188, align 8, !dbg !21619, !tbaa !3288
  %196 = load i64, i64* %d, align 8, !dbg !21619, !tbaa !3288
  %197 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21619, !tbaa !2648
  %m189 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %197, i32 0, i32 0, !dbg !21619, !ctir !2521
  %198 = load i32, i32* %i99, align 4, !dbg !21619, !tbaa !2635
  %add190 = add nsw i32 %198, 3, !dbg !21619
  %idxprom191 = sext i32 %add190 to i64, !dbg !21619
  %arrayidx192 = getelementptr inbounds [256 x i64], [256 x i64]* %m189, i64 0, i64 %idxprom191, !dbg !21619, !ctir !2481
  store i64 %196, i64* %arrayidx192, align 8, !dbg !21619, !tbaa !3288
  %199 = load i64, i64* %e, align 8, !dbg !21619, !tbaa !3288
  %200 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21619, !tbaa !2648
  %m193 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %200, i32 0, i32 0, !dbg !21619, !ctir !2521
  %201 = load i32, i32* %i99, align 4, !dbg !21619, !tbaa !2635
  %add194 = add nsw i32 %201, 4, !dbg !21619
  %idxprom195 = sext i32 %add194 to i64, !dbg !21619
  %arrayidx196 = getelementptr inbounds [256 x i64], [256 x i64]* %m193, i64 0, i64 %idxprom195, !dbg !21619, !ctir !2481
  store i64 %199, i64* %arrayidx196, align 8, !dbg !21619, !tbaa !3288
  %202 = load i64, i64* %f, align 8, !dbg !21619, !tbaa !3288
  %203 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21619, !tbaa !2648
  %m197 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %203, i32 0, i32 0, !dbg !21619, !ctir !2521
  %204 = load i32, i32* %i99, align 4, !dbg !21619, !tbaa !2635
  %add198 = add nsw i32 %204, 5, !dbg !21619
  %idxprom199 = sext i32 %add198 to i64, !dbg !21619
  %arrayidx200 = getelementptr inbounds [256 x i64], [256 x i64]* %m197, i64 0, i64 %idxprom199, !dbg !21619, !ctir !2481
  store i64 %202, i64* %arrayidx200, align 8, !dbg !21619, !tbaa !3288
  %205 = load i64, i64* %g, align 8, !dbg !21619, !tbaa !3288
  %206 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21619, !tbaa !2648
  %m201 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %206, i32 0, i32 0, !dbg !21619, !ctir !2521
  %207 = load i32, i32* %i99, align 4, !dbg !21619, !tbaa !2635
  %add202 = add nsw i32 %207, 6, !dbg !21619
  %idxprom203 = sext i32 %add202 to i64, !dbg !21619
  %arrayidx204 = getelementptr inbounds [256 x i64], [256 x i64]* %m201, i64 0, i64 %idxprom203, !dbg !21619, !ctir !2481
  store i64 %205, i64* %arrayidx204, align 8, !dbg !21619, !tbaa !3288
  %208 = load i64, i64* %h, align 8, !dbg !21619, !tbaa !3288
  %209 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21619, !tbaa !2648
  %m205 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %209, i32 0, i32 0, !dbg !21619, !ctir !2521
  %210 = load i32, i32* %i99, align 4, !dbg !21619, !tbaa !2635
  %add206 = add nsw i32 %210, 7, !dbg !21619
  %idxprom207 = sext i32 %add206 to i64, !dbg !21619
  %arrayidx208 = getelementptr inbounds [256 x i64], [256 x i64]* %m205, i64 0, i64 %idxprom207, !dbg !21619, !ctir !2481
  store i64 %208, i64* %arrayidx208, align 8, !dbg !21619, !tbaa !3288
  br label %for.inc209, !dbg !21619

for.inc209:                                       ; preds = %for.body102
  %211 = load i32, i32* %i99, align 4, !dbg !21617, !tbaa !2635
  %add210 = add nsw i32 %211, 8, !dbg !21617
  store i32 %add210, i32* %i99, align 4, !dbg !21617, !tbaa !2635
  br label %for.cond100, !dbg !21617, !llvm.loop !21623

for.end211:                                       ; preds = %for.cond100
  %212 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21624, !tbaa !2648
  %c212 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %212, i32 0, i32 3, !dbg !21625, !ctir !2521
  store i64 0, i64* %c212, align 8, !dbg !21626, !tbaa !21475, !ctir !2482
  %213 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21627, !tbaa !2648
  %b213 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %213, i32 0, i32 2, !dbg !21628, !ctir !2521
  store i64 0, i64* %b213, align 8, !dbg !21629, !tbaa !21471, !ctir !2482
  %214 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21630, !tbaa !2648
  %a214 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %214, i32 0, i32 1, !dbg !21631, !ctir !2521
  store i64 0, i64* %a214, align 8, !dbg !21632, !tbaa !21466, !ctir !2482
  ret void, !dbg !21633
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @dup_safer(i32 %fd) #4 !dbg !21634 !ctir !1789 {
entry:
  %fd.addr = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !21636, metadata !DIExpression()), !dbg !21637
  %0 = load i32, i32* %fd.addr, align 4, !dbg !21638, !tbaa !2635
  %call = call i32 (i32, i32, ...) @rpl_fcntl(i32 %0, i32 0, i32 3), !dbg !21639
  ret i32 %call, !dbg !21640
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @xsum(i64 %size1, i64 %size2) #10 !dbg !21641 !ctir !2541 {
entry:
  %size1.addr = alloca i64, align 8
  %size2.addr = alloca i64, align 8
  %sum = alloca i64, align 8, !ctir !55
  store i64 %size1, i64* %size1.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %size1.addr, metadata !21643, metadata !DIExpression()), !dbg !21644
  store i64 %size2, i64* %size2.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %size2.addr, metadata !21645, metadata !DIExpression()), !dbg !21646
  call void @llvm.dbg.declare(metadata i64* %sum, metadata !21647, metadata !DIExpression()), !dbg !21648
  %0 = load i64, i64* %size1.addr, align 8, !dbg !21649, !tbaa !3288
  %1 = load i64, i64* %size2.addr, align 8, !dbg !21650, !tbaa !3288
  %add = add i64 %0, %1, !dbg !21651
  store i64 %add, i64* %sum, align 8, !dbg !21648, !tbaa !3288
  %2 = load i64, i64* %sum, align 8, !dbg !21652, !tbaa !3288
  %3 = load i64, i64* %size1.addr, align 8, !dbg !21653, !tbaa !3288
  %cmp = icmp uge i64 %2, %3, !dbg !21654
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !21652

cond.true:                                        ; preds = %entry
  %4 = load i64, i64* %sum, align 8, !dbg !21655, !tbaa !3288
  br label %cond.end, !dbg !21652

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !21652

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ -1, %cond.false ], !dbg !21652
  ret i64 %cond, !dbg !21656
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @xsum3(i64 %size1, i64 %size2, i64 %size3) #10 !dbg !21657 !ctir !1535 {
entry:
  %size1.addr = alloca i64, align 8
  %size2.addr = alloca i64, align 8
  %size3.addr = alloca i64, align 8
  store i64 %size1, i64* %size1.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %size1.addr, metadata !21658, metadata !DIExpression()), !dbg !21659
  store i64 %size2, i64* %size2.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %size2.addr, metadata !21660, metadata !DIExpression()), !dbg !21661
  store i64 %size3, i64* %size3.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %size3.addr, metadata !21662, metadata !DIExpression()), !dbg !21663
  %0 = load i64, i64* %size1.addr, align 8, !dbg !21664, !tbaa !3288
  %1 = load i64, i64* %size2.addr, align 8, !dbg !21665, !tbaa !3288
  %call = call i64 @xsum(i64 %0, i64 %1) #14, !dbg !21666
  %2 = load i64, i64* %size3.addr, align 8, !dbg !21667, !tbaa !3288
  %call1 = call i64 @xsum(i64 %call, i64 %2) #14, !dbg !21668
  ret i64 %call1, !dbg !21669
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @xsum4(i64 %size1, i64 %size2, i64 %size3, i64 %size4) #10 !dbg !21670 !ctir !2543 {
entry:
  %size1.addr = alloca i64, align 8
  %size2.addr = alloca i64, align 8
  %size3.addr = alloca i64, align 8
  %size4.addr = alloca i64, align 8
  store i64 %size1, i64* %size1.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %size1.addr, metadata !21671, metadata !DIExpression()), !dbg !21672
  store i64 %size2, i64* %size2.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %size2.addr, metadata !21673, metadata !DIExpression()), !dbg !21674
  store i64 %size3, i64* %size3.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %size3.addr, metadata !21675, metadata !DIExpression()), !dbg !21676
  store i64 %size4, i64* %size4.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %size4.addr, metadata !21677, metadata !DIExpression()), !dbg !21678
  %0 = load i64, i64* %size1.addr, align 8, !dbg !21679, !tbaa !3288
  %1 = load i64, i64* %size2.addr, align 8, !dbg !21680, !tbaa !3288
  %call = call i64 @xsum(i64 %0, i64 %1) #14, !dbg !21681
  %2 = load i64, i64* %size3.addr, align 8, !dbg !21682, !tbaa !3288
  %call1 = call i64 @xsum(i64 %call, i64 %2) #14, !dbg !21683
  %3 = load i64, i64* %size4.addr, align 8, !dbg !21684, !tbaa !3288
  %call2 = call i64 @xsum(i64 %call1, i64 %3) #14, !dbg !21685
  ret i64 %call2, !dbg !21686
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @xmax(i64 %size1, i64 %size2) #10 !dbg !21687 !ctir !2541 {
entry:
  %size1.addr = alloca i64, align 8
  %size2.addr = alloca i64, align 8
  store i64 %size1, i64* %size1.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %size1.addr, metadata !21688, metadata !DIExpression()), !dbg !21689
  store i64 %size2, i64* %size2.addr, align 8, !tbaa !3288
  call void @llvm.dbg.declare(metadata i64* %size2.addr, metadata !21690, metadata !DIExpression()), !dbg !21691
  %0 = load i64, i64* %size1.addr, align 8, !dbg !21692, !tbaa !3288
  %1 = load i64, i64* %size2.addr, align 8, !dbg !21693, !tbaa !3288
  %cmp = icmp uge i64 %0, %1, !dbg !21694
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !21692

cond.true:                                        ; preds = %entry
  %2 = load i64, i64* %size1.addr, align 8, !dbg !21695, !tbaa !3288
  br label %cond.end, !dbg !21692

cond.false:                                       ; preds = %entry
  %3 = load i64, i64* %size2.addr, align 8, !dbg !21696, !tbaa !3288
  br label %cond.end, !dbg !21692

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !21692
  ret i64 %cond, !dbg !21697
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fclose(%struct._IO_FILE* nonnull %fp) #4 !dbg !21698 !ctir !2548 {
entry:
  %retval = alloca i32, align 4
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %saved_errno = alloca i32, align 4, !ctir !7
  %fd = alloca i32, align 4, !ctir !7
  %result = alloca i32, align 4, !ctir !7
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !21700, metadata !DIExpression()), !dbg !21701
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !21702, metadata !DIExpression()), !dbg !21703
  store i32 0, i32* %saved_errno, align 4, !dbg !21703, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !21704, metadata !DIExpression()), !dbg !21705
  call void @llvm.dbg.declare(metadata i32* %result, metadata !21706, metadata !DIExpression()), !dbg !21707
  store i32 0, i32* %result, align 4, !dbg !21707, !tbaa !2635
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21708, !tbaa !2648
  %call = call i32 @fileno(%struct._IO_FILE* %0) #9, !dbg !21709
  store i32 %call, i32* %fd, align 4, !dbg !21710, !tbaa !2635
  %1 = load i32, i32* %fd, align 4, !dbg !21711, !tbaa !2635
  %cmp = icmp slt i32 %1, 0, !dbg !21713
  br i1 %cmp, label %if.then, label %if.end, !dbg !21714

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21715, !tbaa !2648
  %call1 = call i32 @fclose(%struct._IO_FILE* %2), !dbg !21716
  store i32 %call1, i32* %retval, align 4, !dbg !21717
  br label %return, !dbg !21717

if.end:                                           ; preds = %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21718, !tbaa !2648
  %call2 = call i32 @__freading(%struct._IO_FILE* %3) #9, !dbg !21718
  %cmp3 = icmp ne i32 %call2, 0, !dbg !21718
  br i1 %cmp3, label %lor.lhs.false, label %land.lhs.true, !dbg !21720

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21721, !tbaa !2648
  %call4 = call i32 @fileno(%struct._IO_FILE* %4) #9, !dbg !21722
  %call5 = call i64 @lseek(i32 %call4, i64 0, i32 1) #9, !dbg !21723
  %cmp6 = icmp ne i64 %call5, -1, !dbg !21724
  br i1 %cmp6, label %land.lhs.true, label %if.end10, !dbg !21725

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21726, !tbaa !2648
  %call7 = call i32 @rpl_fflush(%struct._IO_FILE* %5), !dbg !21727
  %tobool = icmp ne i32 %call7, 0, !dbg !21727
  br i1 %tobool, label %if.then8, label %if.end10, !dbg !21728

if.then8:                                         ; preds = %land.lhs.true
  %call9 = call i32* @__errno_location() #16, !dbg !21729
  %6 = load i32, i32* %call9, align 4, !dbg !21729, !tbaa !2635, !ctir !7
  store i32 %6, i32* %saved_errno, align 4, !dbg !21730, !tbaa !2635
  br label %if.end10, !dbg !21731

if.end10:                                         ; preds = %if.then8, %land.lhs.true, %lor.lhs.false
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21732, !tbaa !2648
  %call11 = call i32 @fclose(%struct._IO_FILE* %7), !dbg !21733
  store i32 %call11, i32* %result, align 4, !dbg !21734, !tbaa !2635
  %8 = load i32, i32* %saved_errno, align 4, !dbg !21735, !tbaa !2635
  %cmp12 = icmp ne i32 %8, 0, !dbg !21737
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !21738

if.then13:                                        ; preds = %if.end10
  %9 = load i32, i32* %saved_errno, align 4, !dbg !21739, !tbaa !2635
  %call14 = call i32* @__errno_location() #16, !dbg !21741
  store i32 %9, i32* %call14, align 4, !dbg !21742, !tbaa !2635, !ctir !7
  store i32 -1, i32* %result, align 4, !dbg !21743, !tbaa !2635
  br label %if.end15, !dbg !21744

if.end15:                                         ; preds = %if.then13, %if.end10
  %10 = load i32, i32* %result, align 4, !dbg !21745, !tbaa !2635
  store i32 %10, i32* %retval, align 4, !dbg !21746
  br label %return, !dbg !21746

return:                                           ; preds = %if.end15, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !21747
  ret i32 %11, !dbg !21747
}

declare dso_local i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fcntl(i32 %fd, i32 %action, ...) #4 !dbg !21748 !ctir !507 {
entry:
  %fd.addr = alloca i32, align 4
  %action.addr = alloca i32, align 4
  %arg = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1398
  %result = alloca i32, align 4, !ctir !7
  %target = alloca i32, align 4, !ctir !7
  %target4 = alloca i32, align 4, !ctir !7
  %x = alloca i32, align 4, !ctir !7
  %p = alloca i8*, align 8, !ctir !53
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !21751, metadata !DIExpression()), !dbg !21752
  store i32 %action, i32* %action.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %action.addr, metadata !21753, metadata !DIExpression()), !dbg !21754
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %arg, metadata !21755, metadata !DIExpression()), !dbg !21756
  call void @llvm.dbg.declare(metadata i32* %result, metadata !21757, metadata !DIExpression()), !dbg !21758
  store i32 -1, i32* %result, align 4, !dbg !21758, !tbaa !2635
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !21759
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !21759
  call void @llvm.va_start(i8* %arraydecay1), !dbg !21759
  %0 = load i32, i32* %action.addr, align 4, !dbg !21760, !tbaa !2635
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1030, label %sw.bb3
  ], !dbg !21761

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %target, metadata !21762, metadata !DIExpression()), !dbg !21765
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !21766
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0, !dbg !21766
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !21766
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !21766
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !21766

vaarg.in_reg:                                     ; preds = %sw.bb
  %1 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3, !dbg !21766
  %reg_save_area = load i8*, i8** %1, align 16, !dbg !21766
  %2 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !21766
  %3 = bitcast i8* %2 to i32*, !dbg !21766
  %4 = add i32 %gp_offset, 8, !dbg !21766
  store i32 %4, i32* %gp_offset_p, align 16, !dbg !21766
  br label %vaarg.end, !dbg !21766

vaarg.in_mem:                                     ; preds = %sw.bb
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !21766
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !21766
  %5 = bitcast i8* %overflow_arg_area to i32*, !dbg !21766
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !21766
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !21766
  br label %vaarg.end, !dbg !21766

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %3, %vaarg.in_reg ], [ %5, %vaarg.in_mem ], !dbg !21766
  %6 = load i32, i32* %vaarg.addr, align 4, !dbg !21766
  store i32 %6, i32* %target, align 4, !dbg !21765, !tbaa !2635
  %7 = load i32, i32* %fd.addr, align 4, !dbg !21767, !tbaa !2635
  %8 = load i32, i32* %target, align 4, !dbg !21768, !tbaa !2635
  %call = call i32 @rpl_fcntl_DUPFD(i32 %7, i32 %8), !dbg !21769
  store i32 %call, i32* %result, align 4, !dbg !21770, !tbaa !2635
  br label %sw.epilog48, !dbg !21771

sw.bb3:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %target4, metadata !21772, metadata !DIExpression()), !dbg !21774
  %arraydecay5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !21775
  %gp_offset_p6 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay5, i32 0, i32 0, !dbg !21775
  %gp_offset7 = load i32, i32* %gp_offset_p6, align 16, !dbg !21775
  %fits_in_gp8 = icmp ule i32 %gp_offset7, 40, !dbg !21775
  br i1 %fits_in_gp8, label %vaarg.in_reg9, label %vaarg.in_mem11, !dbg !21775

vaarg.in_reg9:                                    ; preds = %sw.bb3
  %9 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay5, i32 0, i32 3, !dbg !21775
  %reg_save_area10 = load i8*, i8** %9, align 16, !dbg !21775
  %10 = getelementptr i8, i8* %reg_save_area10, i32 %gp_offset7, !dbg !21775
  %11 = bitcast i8* %10 to i32*, !dbg !21775
  %12 = add i32 %gp_offset7, 8, !dbg !21775
  store i32 %12, i32* %gp_offset_p6, align 16, !dbg !21775
  br label %vaarg.end15, !dbg !21775

vaarg.in_mem11:                                   ; preds = %sw.bb3
  %overflow_arg_area_p12 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay5, i32 0, i32 2, !dbg !21775
  %overflow_arg_area13 = load i8*, i8** %overflow_arg_area_p12, align 8, !dbg !21775
  %13 = bitcast i8* %overflow_arg_area13 to i32*, !dbg !21775
  %overflow_arg_area.next14 = getelementptr i8, i8* %overflow_arg_area13, i32 8, !dbg !21775
  store i8* %overflow_arg_area.next14, i8** %overflow_arg_area_p12, align 8, !dbg !21775
  br label %vaarg.end15, !dbg !21775

vaarg.end15:                                      ; preds = %vaarg.in_mem11, %vaarg.in_reg9
  %vaarg.addr16 = phi i32* [ %11, %vaarg.in_reg9 ], [ %13, %vaarg.in_mem11 ], !dbg !21775
  %14 = load i32, i32* %vaarg.addr16, align 4, !dbg !21775
  store i32 %14, i32* %target4, align 4, !dbg !21774, !tbaa !2635
  %15 = load i32, i32* %fd.addr, align 4, !dbg !21776, !tbaa !2635
  %16 = load i32, i32* %target4, align 4, !dbg !21777, !tbaa !2635
  %call17 = call i32 @rpl_fcntl_DUPFD_CLOEXEC(i32 %15, i32 %16), !dbg !21778
  store i32 %call17, i32* %result, align 4, !dbg !21779, !tbaa !2635
  br label %sw.epilog48, !dbg !21780

sw.default:                                       ; preds = %entry
  %17 = load i32, i32* %action.addr, align 4, !dbg !21781, !tbaa !2635
  switch i32 %17, label %sw.default34 [
    i32 1, label %sw.bb18
    i32 3, label %sw.bb18
    i32 1025, label %sw.bb18
    i32 9, label %sw.bb18
    i32 1032, label %sw.bb18
    i32 1034, label %sw.bb18
    i32 11, label %sw.bb18
    i32 1033, label %sw.bb20
    i32 0, label %sw.bb20
    i32 1030, label %sw.bb20
    i32 1026, label %sw.bb20
    i32 2, label %sw.bb20
    i32 4, label %sw.bb20
    i32 1024, label %sw.bb20
    i32 8, label %sw.bb20
    i32 1031, label %sw.bb20
    i32 10, label %sw.bb20
  ], !dbg !21783

sw.bb18:                                          ; preds = %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default
  %18 = load i32, i32* %fd.addr, align 4, !dbg !21784, !tbaa !2635
  %19 = load i32, i32* %action.addr, align 4, !dbg !21786, !tbaa !2635
  %call19 = call i32 (i32, i32, ...) @fcntl(i32 %18, i32 %19), !dbg !21787
  store i32 %call19, i32* %result, align 4, !dbg !21788, !tbaa !2635
  br label %sw.epilog, !dbg !21789

sw.bb20:                                          ; preds = %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default
  call void @llvm.dbg.declare(metadata i32* %x, metadata !21790, metadata !DIExpression()), !dbg !21792
  %arraydecay21 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !21793
  %gp_offset_p22 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay21, i32 0, i32 0, !dbg !21793
  %gp_offset23 = load i32, i32* %gp_offset_p22, align 16, !dbg !21793
  %fits_in_gp24 = icmp ule i32 %gp_offset23, 40, !dbg !21793
  br i1 %fits_in_gp24, label %vaarg.in_reg25, label %vaarg.in_mem27, !dbg !21793

vaarg.in_reg25:                                   ; preds = %sw.bb20
  %20 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay21, i32 0, i32 3, !dbg !21793
  %reg_save_area26 = load i8*, i8** %20, align 16, !dbg !21793
  %21 = getelementptr i8, i8* %reg_save_area26, i32 %gp_offset23, !dbg !21793
  %22 = bitcast i8* %21 to i32*, !dbg !21793
  %23 = add i32 %gp_offset23, 8, !dbg !21793
  store i32 %23, i32* %gp_offset_p22, align 16, !dbg !21793
  br label %vaarg.end31, !dbg !21793

vaarg.in_mem27:                                   ; preds = %sw.bb20
  %overflow_arg_area_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay21, i32 0, i32 2, !dbg !21793
  %overflow_arg_area29 = load i8*, i8** %overflow_arg_area_p28, align 8, !dbg !21793
  %24 = bitcast i8* %overflow_arg_area29 to i32*, !dbg !21793
  %overflow_arg_area.next30 = getelementptr i8, i8* %overflow_arg_area29, i32 8, !dbg !21793
  store i8* %overflow_arg_area.next30, i8** %overflow_arg_area_p28, align 8, !dbg !21793
  br label %vaarg.end31, !dbg !21793

vaarg.end31:                                      ; preds = %vaarg.in_mem27, %vaarg.in_reg25
  %vaarg.addr32 = phi i32* [ %22, %vaarg.in_reg25 ], [ %24, %vaarg.in_mem27 ], !dbg !21793
  %25 = load i32, i32* %vaarg.addr32, align 4, !dbg !21793
  store i32 %25, i32* %x, align 4, !dbg !21792, !tbaa !2635
  %26 = load i32, i32* %fd.addr, align 4, !dbg !21794, !tbaa !2635
  %27 = load i32, i32* %action.addr, align 4, !dbg !21795, !tbaa !2635
  %28 = load i32, i32* %x, align 4, !dbg !21796, !tbaa !2635
  %call33 = call i32 (i32, i32, ...) @fcntl(i32 %26, i32 %27, i32 %28), !dbg !21797
  store i32 %call33, i32* %result, align 4, !dbg !21798, !tbaa !2635
  br label %sw.epilog, !dbg !21799

sw.default34:                                     ; preds = %sw.default
  call void @llvm.dbg.declare(metadata i8** %p, metadata !21800, metadata !DIExpression()), !dbg !21802
  %arraydecay35 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !21803
  %gp_offset_p36 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay35, i32 0, i32 0, !dbg !21803
  %gp_offset37 = load i32, i32* %gp_offset_p36, align 16, !dbg !21803
  %fits_in_gp38 = icmp ule i32 %gp_offset37, 40, !dbg !21803
  br i1 %fits_in_gp38, label %vaarg.in_reg39, label %vaarg.in_mem41, !dbg !21803

vaarg.in_reg39:                                   ; preds = %sw.default34
  %29 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay35, i32 0, i32 3, !dbg !21803
  %reg_save_area40 = load i8*, i8** %29, align 16, !dbg !21803
  %30 = getelementptr i8, i8* %reg_save_area40, i32 %gp_offset37, !dbg !21803
  %31 = bitcast i8* %30 to i8**, !dbg !21803
  %32 = add i32 %gp_offset37, 8, !dbg !21803
  store i32 %32, i32* %gp_offset_p36, align 16, !dbg !21803
  br label %vaarg.end45, !dbg !21803

vaarg.in_mem41:                                   ; preds = %sw.default34
  %overflow_arg_area_p42 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay35, i32 0, i32 2, !dbg !21803
  %overflow_arg_area43 = load i8*, i8** %overflow_arg_area_p42, align 8, !dbg !21803
  %33 = bitcast i8* %overflow_arg_area43 to i8**, !dbg !21803
  %overflow_arg_area.next44 = getelementptr i8, i8* %overflow_arg_area43, i32 8, !dbg !21803
  store i8* %overflow_arg_area.next44, i8** %overflow_arg_area_p42, align 8, !dbg !21803
  br label %vaarg.end45, !dbg !21803

vaarg.end45:                                      ; preds = %vaarg.in_mem41, %vaarg.in_reg39
  %vaarg.addr46 = phi i8** [ %31, %vaarg.in_reg39 ], [ %33, %vaarg.in_mem41 ], !dbg !21803
  %34 = load i8*, i8** %vaarg.addr46, align 8, !dbg !21803
  store i8* %34, i8** %p, align 8, !dbg !21802, !tbaa !2648
  %35 = load i32, i32* %fd.addr, align 4, !dbg !21804, !tbaa !2635
  %36 = load i32, i32* %action.addr, align 4, !dbg !21805, !tbaa !2635
  %37 = load i8*, i8** %p, align 8, !dbg !21806, !tbaa !2648
  %call47 = call i32 (i32, i32, ...) @fcntl(i32 %35, i32 %36, i8* %37), !dbg !21807
  store i32 %call47, i32* %result, align 4, !dbg !21808, !tbaa !2635
  br label %sw.epilog, !dbg !21809

sw.epilog:                                        ; preds = %vaarg.end45, %vaarg.end31, %sw.bb18
  br label %sw.epilog48, !dbg !21810

sw.epilog48:                                      ; preds = %sw.epilog, %vaarg.end15, %vaarg.end
  %arraydecay49 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !21811
  %arraydecay4950 = bitcast %struct.__va_list_tag* %arraydecay49 to i8*, !dbg !21811
  call void @llvm.va_end(i8* %arraydecay4950), !dbg !21811
  %38 = load i32, i32* %result, align 4, !dbg !21812, !tbaa !2635
  ret i32 %38, !dbg !21813
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fcntl_DUPFD(i32 %fd, i32 %target) #4 !dbg !21814 !ctir !507 {
entry:
  %fd.addr = alloca i32, align 4
  %target.addr = alloca i32, align 4
  %result = alloca i32, align 4, !ctir !7
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !21815, metadata !DIExpression()), !dbg !21816
  store i32 %target, i32* %target.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %target.addr, metadata !21817, metadata !DIExpression()), !dbg !21818
  call void @llvm.dbg.declare(metadata i32* %result, metadata !21819, metadata !DIExpression()), !dbg !21820
  %0 = load i32, i32* %fd.addr, align 4, !dbg !21821, !tbaa !2635
  %1 = load i32, i32* %target.addr, align 4, !dbg !21822, !tbaa !2635
  %call = call i32 (i32, i32, ...) @fcntl(i32 %0, i32 0, i32 %1), !dbg !21823
  store i32 %call, i32* %result, align 4, !dbg !21824, !tbaa !2635
  %2 = load i32, i32* %result, align 4, !dbg !21825, !tbaa !2635
  ret i32 %2, !dbg !21826
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fcntl_DUPFD_CLOEXEC(i32 %fd, i32 %target) #4 !dbg !1393 !ctir !507 {
entry:
  %fd.addr = alloca i32, align 4
  %target.addr = alloca i32, align 4
  %result = alloca i32, align 4, !ctir !7
  %flags = alloca i32, align 4, !ctir !7
  %saved_errno = alloca i32, align 4, !ctir !7
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !21827, metadata !DIExpression()), !dbg !21828
  store i32 %target, i32* %target.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %target.addr, metadata !21829, metadata !DIExpression()), !dbg !21830
  call void @llvm.dbg.declare(metadata i32* %result, metadata !21831, metadata !DIExpression()), !dbg !21832
  %0 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !21833, !tbaa !2635
  %cmp = icmp sle i32 0, %0, !dbg !21835
  br i1 %cmp, label %if.then, label %if.else9, !dbg !21836

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %fd.addr, align 4, !dbg !21837, !tbaa !2635
  %2 = load i32, i32* %target.addr, align 4, !dbg !21839, !tbaa !2635
  %call = call i32 (i32, i32, ...) @fcntl(i32 %1, i32 1030, i32 %2), !dbg !21840
  store i32 %call, i32* %result, align 4, !dbg !21841, !tbaa !2635
  %3 = load i32, i32* %result, align 4, !dbg !21842, !tbaa !2635
  %cmp1 = icmp sle i32 0, %3, !dbg !21844
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !21845

lor.lhs.false:                                    ; preds = %if.then
  %call2 = call i32* @__errno_location() #16, !dbg !21846
  %4 = load i32, i32* %call2, align 4, !dbg !21846, !tbaa !2635, !ctir !7
  %cmp3 = icmp ne i32 %4, 22, !dbg !21847
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !21848

if.then4:                                         ; preds = %lor.lhs.false, %if.then
  store i32 1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !21849, !tbaa !2635
  br label %if.end8, !dbg !21851

if.else:                                          ; preds = %lor.lhs.false
  %5 = load i32, i32* %fd.addr, align 4, !dbg !21852, !tbaa !2635
  %6 = load i32, i32* %target.addr, align 4, !dbg !21854, !tbaa !2635
  %call5 = call i32 @rpl_fcntl_DUPFD(i32 %5, i32 %6), !dbg !21855
  store i32 %call5, i32* %result, align 4, !dbg !21856, !tbaa !2635
  %7 = load i32, i32* %result, align 4, !dbg !21857, !tbaa !2635
  %cmp6 = icmp sge i32 %7, 0, !dbg !21859
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !21860

if.then7:                                         ; preds = %if.else
  store i32 -1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !21861, !tbaa !2635
  br label %if.end, !dbg !21862

if.end:                                           ; preds = %if.then7, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then4
  br label %if.end11, !dbg !21863

if.else9:                                         ; preds = %entry
  %8 = load i32, i32* %fd.addr, align 4, !dbg !21864, !tbaa !2635
  %9 = load i32, i32* %target.addr, align 4, !dbg !21865, !tbaa !2635
  %call10 = call i32 @rpl_fcntl_DUPFD(i32 %8, i32 %9), !dbg !21866
  store i32 %call10, i32* %result, align 4, !dbg !21867, !tbaa !2635
  br label %if.end11

if.end11:                                         ; preds = %if.else9, %if.end8
  %10 = load i32, i32* %result, align 4, !dbg !21868, !tbaa !2635
  %cmp12 = icmp sle i32 0, %10, !dbg !21870
  br i1 %cmp12, label %land.lhs.true, label %if.end25, !dbg !21871

land.lhs.true:                                    ; preds = %if.end11
  %11 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !21872, !tbaa !2635
  %cmp13 = icmp eq i32 %11, -1, !dbg !21873
  br i1 %cmp13, label %if.then14, label %if.end25, !dbg !21874

if.then14:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !21875, metadata !DIExpression()), !dbg !21877
  %12 = load i32, i32* %result, align 4, !dbg !21878, !tbaa !2635
  %call15 = call i32 (i32, i32, ...) @fcntl(i32 %12, i32 1), !dbg !21879
  store i32 %call15, i32* %flags, align 4, !dbg !21877, !tbaa !2635
  %13 = load i32, i32* %flags, align 4, !dbg !21880, !tbaa !2635
  %cmp16 = icmp slt i32 %13, 0, !dbg !21882
  br i1 %cmp16, label %if.then20, label %lor.lhs.false17, !dbg !21883

lor.lhs.false17:                                  ; preds = %if.then14
  %14 = load i32, i32* %result, align 4, !dbg !21884, !tbaa !2635
  %15 = load i32, i32* %flags, align 4, !dbg !21885, !tbaa !2635
  %or = or i32 %15, 1, !dbg !21886
  %call18 = call i32 (i32, i32, ...) @fcntl(i32 %14, i32 2, i32 %or), !dbg !21887
  %cmp19 = icmp eq i32 %call18, -1, !dbg !21888
  br i1 %cmp19, label %if.then20, label %if.end24, !dbg !21889

if.then20:                                        ; preds = %lor.lhs.false17, %if.then14
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !21890, metadata !DIExpression()), !dbg !21892
  %call21 = call i32* @__errno_location() #16, !dbg !21893
  %16 = load i32, i32* %call21, align 4, !dbg !21893, !tbaa !2635, !ctir !7
  store i32 %16, i32* %saved_errno, align 4, !dbg !21892, !tbaa !2635
  %17 = load i32, i32* %result, align 4, !dbg !21894, !tbaa !2635
  %call22 = call i32 @close(i32 %17), !dbg !21895
  %18 = load i32, i32* %saved_errno, align 4, !dbg !21896, !tbaa !2635
  %call23 = call i32* @__errno_location() #16, !dbg !21897
  store i32 %18, i32* %call23, align 4, !dbg !21898, !tbaa !2635, !ctir !7
  store i32 -1, i32* %result, align 4, !dbg !21899, !tbaa !2635
  br label %if.end24, !dbg !21900

if.end24:                                         ; preds = %if.then20, %lor.lhs.false17
  br label %if.end25, !dbg !21901

if.end25:                                         ; preds = %if.end24, %land.lhs.true, %if.end11
  %19 = load i32, i32* %result, align 4, !dbg !21902, !tbaa !2635
  ret i32 %19, !dbg !21903
}

declare dso_local i32 @fcntl(i32, i32, ...) #3

; Function Attrs: noinline nounwind optnone readnone uwtable
define dso_local zeroext i1 @acl_errno_valid(i32 %errnum) #11 !dbg !21904 !ctir !256 {
entry:
  %retval = alloca i1, align 1
  %errnum.addr = alloca i32, align 4
  store i32 %errnum, i32* %errnum.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %errnum.addr, metadata !21906, metadata !DIExpression()), !dbg !21907
  %0 = load i32, i32* %errnum.addr, align 4, !dbg !21908, !tbaa !2635
  switch i32 %0, label %sw.default [
    i32 16, label %sw.bb
    i32 22, label %sw.bb1
    i32 38, label %sw.bb2
    i32 95, label %sw.bb3
  ], !dbg !21909

sw.bb:                                            ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21910
  br label %return, !dbg !21910

sw.bb1:                                           ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21912
  br label %return, !dbg !21912

sw.bb2:                                           ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21913
  br label %return, !dbg !21913

sw.bb3:                                           ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21914
  br label %return, !dbg !21914

sw.default:                                       ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !21915
  br label %return, !dbg !21915

return:                                           ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21916
  ret i1 %1, !dbg !21916
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isalnum(i32 %c) #4 !dbg !21917 !ctir !256 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21919, metadata !DIExpression()), !dbg !21920
  %0 = load i32, i32* %c.addr, align 4, !dbg !21921, !tbaa !2635
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !21922

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21923
  br label %return, !dbg !21923

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21925
  br label %return, !dbg !21925

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21926
  ret i1 %1, !dbg !21926
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isalpha(i32 %c) #4 !dbg !21927 !ctir !256 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21928, metadata !DIExpression()), !dbg !21929
  %0 = load i32, i32* %c.addr, align 4, !dbg !21930, !tbaa !2635
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !21931

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21932
  br label %return, !dbg !21932

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21934
  br label %return, !dbg !21934

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21935
  ret i1 %1, !dbg !21935
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isascii(i32 %c) #4 !dbg !21936 !ctir !256 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21937, metadata !DIExpression()), !dbg !21938
  %0 = load i32, i32* %c.addr, align 4, !dbg !21939, !tbaa !2635
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 7, label %sw.bb
    i32 8, label %sw.bb
    i32 12, label %sw.bb
    i32 10, label %sw.bb
    i32 13, label %sw.bb
    i32 9, label %sw.bb
    i32 11, label %sw.bb
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb
    i32 16, label %sw.bb
    i32 17, label %sw.bb
    i32 18, label %sw.bb
    i32 19, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 22, label %sw.bb
    i32 23, label %sw.bb
    i32 24, label %sw.bb
    i32 25, label %sw.bb
    i32 26, label %sw.bb
    i32 27, label %sw.bb
    i32 28, label %sw.bb
    i32 29, label %sw.bb
    i32 30, label %sw.bb
    i32 31, label %sw.bb
    i32 127, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !21940

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21941
  br label %return, !dbg !21941

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21943
  br label %return, !dbg !21943

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21944
  ret i1 %1, !dbg !21944
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isblank(i32 %c) #4 !dbg !21945 !ctir !256 {
entry:
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21946, metadata !DIExpression()), !dbg !21947
  %0 = load i32, i32* %c.addr, align 4, !dbg !21948, !tbaa !2635
  %cmp = icmp eq i32 %0, 32, !dbg !21949
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !21950

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !21951, !tbaa !2635
  %cmp1 = icmp eq i32 %1, 9, !dbg !21952
  br label %lor.end, !dbg !21950

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !21953
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_iscntrl(i32 %c) #4 !dbg !21954 !ctir !256 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21955, metadata !DIExpression()), !dbg !21956
  %0 = load i32, i32* %c.addr, align 4, !dbg !21957, !tbaa !2635
  switch i32 %0, label %sw.default [
    i32 7, label %sw.bb
    i32 8, label %sw.bb
    i32 12, label %sw.bb
    i32 10, label %sw.bb
    i32 13, label %sw.bb
    i32 9, label %sw.bb
    i32 11, label %sw.bb
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb
    i32 16, label %sw.bb
    i32 17, label %sw.bb
    i32 18, label %sw.bb
    i32 19, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 22, label %sw.bb
    i32 23, label %sw.bb
    i32 24, label %sw.bb
    i32 25, label %sw.bb
    i32 26, label %sw.bb
    i32 27, label %sw.bb
    i32 28, label %sw.bb
    i32 29, label %sw.bb
    i32 30, label %sw.bb
    i32 31, label %sw.bb
    i32 127, label %sw.bb
  ], !dbg !21958

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21959
  br label %return, !dbg !21959

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21961
  br label %return, !dbg !21961

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21962
  ret i1 %1, !dbg !21962
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isdigit(i32 %c) #4 !dbg !21963 !ctir !256 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21964, metadata !DIExpression()), !dbg !21965
  %0 = load i32, i32* %c.addr, align 4, !dbg !21966, !tbaa !2635
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
  ], !dbg !21967

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21968
  br label %return, !dbg !21968

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21970
  br label %return, !dbg !21970

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21971
  ret i1 %1, !dbg !21971
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isgraph(i32 %c) #4 !dbg !21972 !ctir !256 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21973, metadata !DIExpression()), !dbg !21974
  %0 = load i32, i32* %c.addr, align 4, !dbg !21975, !tbaa !2635
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !21976

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21977
  br label %return, !dbg !21977

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21979
  br label %return, !dbg !21979

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21980
  ret i1 %1, !dbg !21980
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_islower(i32 %c) #4 !dbg !21981 !ctir !256 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21982, metadata !DIExpression()), !dbg !21983
  %0 = load i32, i32* %c.addr, align 4, !dbg !21984, !tbaa !2635
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
  ], !dbg !21985

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21986
  br label %return, !dbg !21986

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21988
  br label %return, !dbg !21988

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21989
  ret i1 %1, !dbg !21989
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isprint(i32 %c) #4 !dbg !21990 !ctir !256 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21991, metadata !DIExpression()), !dbg !21992
  %0 = load i32, i32* %c.addr, align 4, !dbg !21993, !tbaa !2635
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !21994

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21995
  br label %return, !dbg !21995

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21997
  br label %return, !dbg !21997

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21998
  ret i1 %1, !dbg !21998
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_ispunct(i32 %c) #4 !dbg !21999 !ctir !256 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !22000, metadata !DIExpression()), !dbg !22001
  %0 = load i32, i32* %c.addr, align 4, !dbg !22002, !tbaa !2635
  switch i32 %0, label %sw.default [
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
  ], !dbg !22003

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !22004
  br label %return, !dbg !22004

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !22006
  br label %return, !dbg !22006

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !22007
  ret i1 %1, !dbg !22007
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isspace(i32 %c) #4 !dbg !22008 !ctir !256 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !22009, metadata !DIExpression()), !dbg !22010
  %0 = load i32, i32* %c.addr, align 4, !dbg !22011, !tbaa !2635
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 9, label %sw.bb
    i32 10, label %sw.bb
    i32 11, label %sw.bb
    i32 12, label %sw.bb
    i32 13, label %sw.bb
  ], !dbg !22012

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !22013
  br label %return, !dbg !22013

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !22015
  br label %return, !dbg !22015

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !22016
  ret i1 %1, !dbg !22016
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isupper(i32 %c) #4 !dbg !22017 !ctir !256 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !22018, metadata !DIExpression()), !dbg !22019
  %0 = load i32, i32* %c.addr, align 4, !dbg !22020, !tbaa !2635
  switch i32 %0, label %sw.default [
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !22021

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !22022
  br label %return, !dbg !22022

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !22024
  br label %return, !dbg !22024

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !22025
  ret i1 %1, !dbg !22025
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isxdigit(i32 %c) #4 !dbg !22026 !ctir !256 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !22027, metadata !DIExpression()), !dbg !22028
  %0 = load i32, i32* %c.addr, align 4, !dbg !22029, !tbaa !2635
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
  ], !dbg !22030

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !22031
  br label %return, !dbg !22031

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !22033
  br label %return, !dbg !22033

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !22034
  ret i1 %1, !dbg !22034
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @c_tolower(i32 %c) #4 !dbg !22035 !ctir !1789 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !22036, metadata !DIExpression()), !dbg !22037
  %0 = load i32, i32* %c.addr, align 4, !dbg !22038, !tbaa !2635
  switch i32 %0, label %sw.default [
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !22039

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !22040, !tbaa !2635
  %sub = sub nsw i32 %1, 65, !dbg !22042
  %add = add nsw i32 %sub, 97, !dbg !22043
  store i32 %add, i32* %retval, align 4, !dbg !22044
  br label %return, !dbg !22044

sw.default:                                       ; preds = %entry
  %2 = load i32, i32* %c.addr, align 4, !dbg !22045, !tbaa !2635
  store i32 %2, i32* %retval, align 4, !dbg !22046
  br label %return, !dbg !22046

return:                                           ; preds = %sw.default, %sw.bb
  %3 = load i32, i32* %retval, align 4, !dbg !22047
  ret i32 %3, !dbg !22047
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @c_toupper(i32 %c) #4 !dbg !22048 !ctir !1789 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2635
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !22049, metadata !DIExpression()), !dbg !22050
  %0 = load i32, i32* %c.addr, align 4, !dbg !22051, !tbaa !2635
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
  ], !dbg !22052

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !22053, !tbaa !2635
  %sub = sub nsw i32 %1, 97, !dbg !22055
  %add = add nsw i32 %sub, 65, !dbg !22056
  store i32 %add, i32* %retval, align 4, !dbg !22057
  br label %return, !dbg !22057

sw.default:                                       ; preds = %entry
  %2 = load i32, i32* %c.addr, align 4, !dbg !22058, !tbaa !2635
  store i32 %2, i32* %retval, align 4, !dbg !22059
  br label %return, !dbg !22059

return:                                           ; preds = %sw.default, %sw.bb
  %3 = load i32, i32* %retval, align 4, !dbg !22060
  ret i32 %3, !dbg !22060
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._IO_FILE* @fopen_safer(i8* %file, i8* %mode) #4 !dbg !22061 !ctir !2593 {
entry:
  %retval = alloca %struct._IO_FILE*, align 8
  %file.addr = alloca i8*, align 8
  %mode.addr = alloca i8*, align 8
  %fp = alloca %struct._IO_FILE*, align 8, !ctir !2595
  %fd = alloca i32, align 4, !ctir !7
  %f = alloca i32, align 4, !ctir !7
  %e = alloca i32, align 4, !ctir !7
  %e15 = alloca i32, align 4, !ctir !7
  store i8* %file, i8** %file.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !22063, metadata !DIExpression()), !dbg !22064
  store i8* %mode, i8** %mode.addr, align 8, !tbaa !2648
  call void @llvm.dbg.declare(metadata i8** %mode.addr, metadata !22065, metadata !DIExpression()), !dbg !22066
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp, metadata !22067, metadata !DIExpression()), !dbg !22068
  %0 = load i8*, i8** %file.addr, align 8, !dbg !22069, !tbaa !2648
  %1 = load i8*, i8** %mode.addr, align 8, !dbg !22070, !tbaa !2648
  %call = call %struct._IO_FILE* @fopen(i8* %0, i8* %1), !dbg !22071
  store %struct._IO_FILE* %call, %struct._IO_FILE** %fp, align 8, !dbg !22068, !tbaa !2648
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !22072, !tbaa !2648
  %tobool = icmp ne %struct._IO_FILE* %2, null, !dbg !22072
  br i1 %tobool, label %if.then, label %if.end21, !dbg !22074

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !22075, metadata !DIExpression()), !dbg !22077
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !22078, !tbaa !2648
  %call1 = call i32 @fileno(%struct._IO_FILE* %3) #9, !dbg !22079
  store i32 %call1, i32* %fd, align 4, !dbg !22077, !tbaa !2635
  %4 = load i32, i32* %fd, align 4, !dbg !22080, !tbaa !2635
  %cmp = icmp sle i32 0, %4, !dbg !22082
  br i1 %cmp, label %land.lhs.true, label %if.end20, !dbg !22083

land.lhs.true:                                    ; preds = %if.then
  %5 = load i32, i32* %fd, align 4, !dbg !22084, !tbaa !2635
  %cmp2 = icmp sle i32 %5, 2, !dbg !22085
  br i1 %cmp2, label %if.then3, label %if.end20, !dbg !22086

if.then3:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %f, metadata !22087, metadata !DIExpression()), !dbg !22089
  %6 = load i32, i32* %fd, align 4, !dbg !22090, !tbaa !2635
  %call4 = call i32 @dup_safer(i32 %6), !dbg !22091
  store i32 %call4, i32* %f, align 4, !dbg !22089, !tbaa !2635
  %7 = load i32, i32* %f, align 4, !dbg !22092, !tbaa !2635
  %cmp5 = icmp slt i32 %7, 0, !dbg !22094
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !22095

if.then6:                                         ; preds = %if.then3
  call void @llvm.dbg.declare(metadata i32* %e, metadata !22096, metadata !DIExpression()), !dbg !22098
  %call7 = call i32* @__errno_location() #16, !dbg !22099
  %8 = load i32, i32* %call7, align 4, !dbg !22099, !tbaa !2635, !ctir !7
  store i32 %8, i32* %e, align 4, !dbg !22098, !tbaa !2635
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !22100, !tbaa !2648
  %call8 = call i32 @rpl_fclose(%struct._IO_FILE* %9), !dbg !22101
  %10 = load i32, i32* %e, align 4, !dbg !22102, !tbaa !2635
  %call9 = call i32* @__errno_location() #16, !dbg !22103
  store i32 %10, i32* %call9, align 4, !dbg !22104, !tbaa !2635, !ctir !7
  store %struct._IO_FILE* null, %struct._IO_FILE** %retval, align 8, !dbg !22105
  br label %return, !dbg !22105

if.end:                                           ; preds = %if.then3
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !22106, !tbaa !2648
  %call10 = call i32 @rpl_fclose(%struct._IO_FILE* %11), !dbg !22108
  %cmp11 = icmp ne i32 %call10, 0, !dbg !22109
  br i1 %cmp11, label %if.then14, label %lor.lhs.false, !dbg !22110

lor.lhs.false:                                    ; preds = %if.end
  %12 = load i32, i32* %f, align 4, !dbg !22111, !tbaa !2635
  %13 = load i8*, i8** %mode.addr, align 8, !dbg !22112, !tbaa !2648
  %call12 = call %struct._IO_FILE* @fdopen(i32 %12, i8* %13) #9, !dbg !22113
  store %struct._IO_FILE* %call12, %struct._IO_FILE** %fp, align 8, !dbg !22114, !tbaa !2648
  %tobool13 = icmp ne %struct._IO_FILE* %call12, null, !dbg !22114
  br i1 %tobool13, label %if.end19, label %if.then14, !dbg !22115

if.then14:                                        ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata i32* %e15, metadata !22116, metadata !DIExpression()), !dbg !22118
  %call16 = call i32* @__errno_location() #16, !dbg !22119
  %14 = load i32, i32* %call16, align 4, !dbg !22119, !tbaa !2635, !ctir !7
  store i32 %14, i32* %e15, align 4, !dbg !22118, !tbaa !2635
  %15 = load i32, i32* %f, align 4, !dbg !22120, !tbaa !2635
  %call17 = call i32 @close(i32 %15), !dbg !22121
  %16 = load i32, i32* %e15, align 4, !dbg !22122, !tbaa !2635
  %call18 = call i32* @__errno_location() #16, !dbg !22123
  store i32 %16, i32* %call18, align 4, !dbg !22124, !tbaa !2635, !ctir !7
  store %struct._IO_FILE* null, %struct._IO_FILE** %retval, align 8, !dbg !22125
  br label %return, !dbg !22125

if.end19:                                         ; preds = %lor.lhs.false
  br label %if.end20, !dbg !22126

if.end20:                                         ; preds = %if.end19, %land.lhs.true, %if.then
  br label %if.end21, !dbg !22127

if.end21:                                         ; preds = %if.end20, %entry
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !22128, !tbaa !2648
  store %struct._IO_FILE* %17, %struct._IO_FILE** %retval, align 8, !dbg !22129
  br label %return, !dbg !22129

return:                                           ; preds = %if.end21, %if.then14, %if.then6
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %retval, align 8, !dbg !22130
  ret %struct._IO_FILE* %18, !dbg !22130
}

declare dso_local %struct._IO_FILE* @fopen(i8*, i8*) #3

; Function Attrs: nounwind
declare dso_local %struct._IO_FILE* @fdopen(i32, i8*) #2

attributes #0 = { noinline noreturn nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noinline nounwind optnone readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noinline nounwind optnone readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind }
attributes #14 = { nounwind readonly }
attributes #15 = { noreturn }
attributes #16 = { nounwind readnone }

!llvm.dbg.cu = !{!65, !1408, !348, !616, !1457, !642, !1511, !675, !1513, !1518, !1523, !681, !1529, !718, !1532, !741, !783, !1537, !1540, !1545, !828, !1548, !1600, !1614, !1653, !1685, !1690, !1693, !1698, !835, !1703, !1714, !1732, !1751, !1774, !970, !1779, !1781, !1011, !1784, !1791, !1794, !1797, !1151, !1804, !1838, !1867, !1900, !1194, !1927, !1245, !1266, !1930, !1944, !1319, !1333, !2002, !2019, !2022, !2042, !2060, !2097, !2138, !2177, !2216, !2233, !2256, !2268, !1341, !2282, !2299, !2302, !2342, !2347, !2359, !2362, !2365, !2369, !2374, !2388, !2419, !2515, !2535, !2538, !2545, !1395, !2584, !2587, !2590}
!llvm.ident = !{}
!llvm.module.flags = !{!2630, !2631, !2632, !2633}

!0 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1, size: 64)
!1 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !3)
!2 = !DIFile(filename: "/usr/include/bits/types/FILE.h", directory: "")
!3 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !5)
!4 = !DIFile(filename: "/usr/include/bits/types/struct_FILE.h", directory: "")
!5 = !{!6, !8, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !24, !26, !27, !28, !32, !34, !36, !40, !43, !45, !48, !51, !52, !54, !58, !59}
!6 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3, file: !4, line: 51, baseType: !7, size: 32)
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !3, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!9 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64)
!10 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !3, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!12 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !3, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!13 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !3, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!14 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !3, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !3, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !3, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !3, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !3, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !3, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!20 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !3, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !3, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!22 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 64)
!23 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !4, line: 36, flags: DIFlagFwdDecl)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !3, file: !4, line: 70, baseType: !25, size: 64, offset: 832)
!25 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3, size: 64)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !3, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !3, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !3, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!29 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !30, line: 152, baseType: !31)
!30 = !DIFile(filename: "/usr/include/bits/types.h", directory: "")
!31 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !3, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!33 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!34 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !3, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!35 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !3, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!37 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 8, elements: !38)
!38 = !{!39}
!39 = !DISubrange(count: 1)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !3, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!41 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !42, size: 64)
!42 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !4, line: 43, baseType: null)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !3, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!44 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !30, line: 153, baseType: !31)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !3, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!46 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !47, size: 64)
!47 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !4, line: 37, flags: DIFlagFwdDecl)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !3, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!49 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !50, size: 64)
!50 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !4, line: 38, flags: DIFlagFwdDecl)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !3, file: !4, line: 93, baseType: !25, size: 64, offset: 1344)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !3, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!53 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !3, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !56, line: 46, baseType: !57)
!56 = !DIFile(filename: "software/llvm9/build/lib/clang/9.0.0/include/stddef.h", directory: "/home/mbarbar")
!57 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !3, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !3, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!60 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 160, elements: !61)
!61 = !{!62}
!62 = !DISubrange(count: 20)
!63 = !DIGlobalVariableExpression(var: !64, expr: !DIExpression())
!64 = distinct !DIGlobalVariable(name: "selinux_enabled", scope: !65, file: !66, line: 53, type: !7, isLocal: true, isDefinition: true)
!65 = distinct !DICompileUnit(language: DW_LANG_C99, file: !66, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !67, retainedTypes: !121, globals: !308, nameTableKind: None)
!66 = !DIFile(filename: "src/install.c", directory: "/home/mbarbar/clone/coreutils")
!67 = !{!68, !76, !83, !89, !95, !100}
!68 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "backup_type", file: !69, line: 30, baseType: !70, size: 32, elements: !71)
!69 = !DIFile(filename: "./lib/backupfile.h", directory: "/home/mbarbar/clone/coreutils")
!70 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!71 = !{!72, !73, !74, !75}
!72 = !DIEnumerator(name: "no_backups", value: 0, isUnsigned: true)
!73 = !DIEnumerator(name: "simple_backups", value: 1, isUnsigned: true)
!74 = !DIEnumerator(name: "numbered_existing_backups", value: 2, isUnsigned: true)
!75 = !DIEnumerator(name: "numbered_backups", value: 3, isUnsigned: true)
!76 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Dereference_symlink", file: !77, line: 69, baseType: !70, size: 32, elements: !78)
!77 = !DIFile(filename: "src/copy.h", directory: "/home/mbarbar/clone/coreutils")
!78 = !{!79, !80, !81, !82}
!79 = !DIEnumerator(name: "DEREF_UNDEFINED", value: 1, isUnsigned: true)
!80 = !DIEnumerator(name: "DEREF_NEVER", value: 2, isUnsigned: true)
!81 = !DIEnumerator(name: "DEREF_COMMAND_LINE_ARGUMENTS", value: 3, isUnsigned: true)
!82 = !DIEnumerator(name: "DEREF_ALWAYS", value: 4, isUnsigned: true)
!83 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Interactive", file: !77, line: 60, baseType: !70, size: 32, elements: !84)
!84 = !{!85, !86, !87, !88}
!85 = !DIEnumerator(name: "I_ALWAYS_YES", value: 1, isUnsigned: true)
!86 = !DIEnumerator(name: "I_ALWAYS_NO", value: 2, isUnsigned: true)
!87 = !DIEnumerator(name: "I_ASK_USER", value: 3, isUnsigned: true)
!88 = !DIEnumerator(name: "I_UNSPECIFIED", value: 4, isUnsigned: true)
!89 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Sparse_type", file: !77, line: 26, baseType: !70, size: 32, elements: !90)
!90 = !{!91, !92, !93, !94}
!91 = !DIEnumerator(name: "SPARSE_UNUSED", value: 0, isUnsigned: true)
!92 = !DIEnumerator(name: "SPARSE_NEVER", value: 1, isUnsigned: true)
!93 = !DIEnumerator(name: "SPARSE_AUTO", value: 2, isUnsigned: true)
!94 = !DIEnumerator(name: "SPARSE_ALWAYS", value: 3, isUnsigned: true)
!95 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Reflink_type", file: !77, line: 47, baseType: !70, size: 32, elements: !96)
!96 = !{!97, !98, !99}
!97 = !DIEnumerator(name: "REFLINK_NEVER", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "REFLINK_AUTO", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "REFLINK_ALWAYS", value: 2, isUnsigned: true)
!100 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !102, file: !101, line: 39, baseType: !70, size: 32, elements: !114)
!101 = !DIFile(filename: "./lib/savewd.h", directory: "/home/mbarbar/clone/coreutils")
!102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "savewd", file: !101, line: 36, size: 64, elements: !103)
!103 = !{!104, !105}
!104 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !102, file: !101, line: 66, baseType: !100, size: 32)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !102, file: !101, line: 74, baseType: !106, size: 32, offset: 32)
!106 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !102, file: !101, line: 69, size: 32, elements: !107)
!107 = !{!108, !109, !110}
!108 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !106, file: !101, line: 71, baseType: !7, size: 32)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "errnum", scope: !106, file: !101, line: 72, baseType: !7, size: 32)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !106, file: !101, line: 73, baseType: !111, size: 32)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !112, line: 97, baseType: !113)
!112 = !DIFile(filename: "/usr/include/sys/types.h", directory: "")
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !30, line: 154, baseType: !7)
!114 = !{!115, !116, !117, !118, !119, !120}
!115 = !DIEnumerator(name: "INITIAL_STATE", value: 0, isUnsigned: true)
!116 = !DIEnumerator(name: "FD_STATE", value: 1, isUnsigned: true)
!117 = !DIEnumerator(name: "FD_POST_CHDIR_STATE", value: 2, isUnsigned: true)
!118 = !DIEnumerator(name: "FORKING_STATE", value: 3, isUnsigned: true)
!119 = !DIEnumerator(name: "ERROR_STATE", value: 4, isUnsigned: true)
!120 = !DIEnumerator(name: "FINAL_STATE", value: 5, isUnsigned: true)
!121 = !{!122, !9, !53, !127, !129, !131, !125, !0, !180, !182, !7, !142, !184, !185, !140, !197, !139, !200, !202, !204, !215, !216, !175, !218, !220, !55, !222, !224, !235, !57, !128, !130, !243, !246, !248, !250, !252, !254, !256, !258, !260, !262, !29, !264, !111, !266, !303, !181, !306}
!122 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !123, line: 72, baseType: !124)
!123 = !DIFile(filename: "/usr/include/signal.h", directory: "")
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 64)
!125 = !DISubroutineType(types: !126)
!126 = !{null, !7}
!127 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !112, line: 79, baseType: !128)
!128 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !30, line: 146, baseType: !70)
!129 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !112, line: 64, baseType: !130)
!130 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !30, line: 147, baseType: !70)
!131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 64)
!132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cp_options", file: !77, line: 98, size: 640, elements: !133)
!133 = !{!134, !135, !136, !137, !138, !141, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !179}
!134 = !DIDerivedType(tag: DW_TAG_member, name: "backup_type", scope: !132, file: !77, line: 100, baseType: !68, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "dereference", scope: !132, file: !77, line: 103, baseType: !76, size: 32, offset: 32)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "interactive", scope: !132, file: !77, line: 108, baseType: !83, size: 32, offset: 64)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "sparse_mode", scope: !132, file: !77, line: 111, baseType: !89, size: 32, offset: 96)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !132, file: !77, line: 115, baseType: !139, size: 32, offset: 128)
!139 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !112, line: 69, baseType: !140)
!140 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !30, line: 150, baseType: !70)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "copy_as_regular", scope: !132, file: !77, line: 119, baseType: !142, size: 8, offset: 160)
!142 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_before_opening", scope: !132, file: !77, line: 123, baseType: !142, size: 8, offset: 168)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_after_failed_open", scope: !132, file: !77, line: 130, baseType: !142, size: 8, offset: 176)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "hard_link", scope: !132, file: !77, line: 134, baseType: !142, size: 8, offset: 184)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "move_mode", scope: !132, file: !77, line: 138, baseType: !142, size: 8, offset: 192)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "install_mode", scope: !132, file: !77, line: 141, baseType: !142, size: 8, offset: 200)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "chown_privileges", scope: !132, file: !77, line: 145, baseType: !142, size: 8, offset: 208)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "owner_privileges", scope: !132, file: !77, line: 152, baseType: !142, size: 8, offset: 216)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "one_file_system", scope: !132, file: !77, line: 156, baseType: !142, size: 8, offset: 224)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_ownership", scope: !132, file: !77, line: 160, baseType: !142, size: 8, offset: 232)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_mode", scope: !132, file: !77, line: 161, baseType: !142, size: 8, offset: 240)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_timestamps", scope: !132, file: !77, line: 162, baseType: !142, size: 8, offset: 248)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_no_preserve_mode", scope: !132, file: !77, line: 163, baseType: !142, size: 8, offset: 256)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "set_security_context", scope: !132, file: !77, line: 166, baseType: !142, size: 8, offset: 264)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_links", scope: !132, file: !77, line: 178, baseType: !142, size: 8, offset: 272)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "data_copy_required", scope: !132, file: !77, line: 182, baseType: !142, size: 8, offset: 280)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve", scope: !132, file: !77, line: 188, baseType: !142, size: 8, offset: 288)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_security_context", scope: !132, file: !77, line: 192, baseType: !142, size: 8, offset: 296)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_context", scope: !132, file: !77, line: 201, baseType: !142, size: 8, offset: 304)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_xattr", scope: !132, file: !77, line: 205, baseType: !142, size: 8, offset: 312)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_xattr", scope: !132, file: !77, line: 214, baseType: !142, size: 8, offset: 320)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "reduce_diagnostics", scope: !132, file: !77, line: 223, baseType: !142, size: 8, offset: 328)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "recursive", scope: !132, file: !77, line: 227, baseType: !142, size: 8, offset: 336)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "set_mode", scope: !132, file: !77, line: 231, baseType: !142, size: 8, offset: 344)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "symbolic_link", scope: !132, file: !77, line: 235, baseType: !142, size: 8, offset: 352)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !132, file: !77, line: 239, baseType: !142, size: 8, offset: 360)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !132, file: !77, line: 242, baseType: !142, size: 8, offset: 368)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "stdin_tty", scope: !132, file: !77, line: 245, baseType: !142, size: 8, offset: 376)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "open_dangling_dest_symlink", scope: !132, file: !77, line: 250, baseType: !142, size: 8, offset: 384)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "last_file", scope: !132, file: !77, line: 254, baseType: !142, size: 8, offset: 392)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "rename_errno", scope: !132, file: !77, line: 259, baseType: !7, size: 32, offset: 416)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "reflink_mode", scope: !132, file: !77, line: 262, baseType: !95, size: 32, offset: 448)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "dest_info", scope: !132, file: !77, line: 273, baseType: !175, size: 64, offset: 512)
!175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 64)
!176 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !177, line: 69, baseType: !178)
!177 = !DIFile(filename: "./lib/hash.h", directory: "/home/mbarbar/clone/coreutils")
!178 = !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !177, line: 67, flags: DIFlagFwdDecl)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "src_info", scope: !132, file: !77, line: 276, baseType: !175, size: 64, offset: 576)
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 64)
!181 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10)
!182 = !DISubroutineType(types: !183)
!183 = !{!7, !7, !184}
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64)
!185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !186, size: 4608, elements: !195)
!186 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !187)
!187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !188, line: 50, size: 256, elements: !189)
!188 = !DIFile(filename: "/usr/include/bits/getopt_ext.h", directory: "")
!189 = !{!190, !191, !192, !194}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !187, file: !188, line: 52, baseType: !180, size: 64)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !187, file: !188, line: 55, baseType: !7, size: 32, offset: 64)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !187, file: !188, line: 56, baseType: !193, size: 64, offset: 128)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !187, file: !188, line: 57, baseType: !7, size: 32, offset: 192)
!195 = !{!196}
!196 = !DISubrange(count: 18)
!197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !198, size: 64)
!198 = !DICompositeType(tag: DW_TAG_structure_type, name: "mode_change", file: !199, line: 25, flags: DIFlagFwdDecl)
!199 = !DIFile(filename: "./lib/modechange.h", directory: "/home/mbarbar/clone/coreutils")
!200 = !DISubroutineType(types: !201)
!201 = !{null}
!202 = !DISubroutineType(types: !203)
!203 = !{null, !180}
!204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !205, size: 896, elements: !213)
!205 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !206)
!206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "infomap", scope: !208, file: !207, line: 633, size: 128, elements: !210)
!207 = !DIFile(filename: "src/system.h", directory: "/home/mbarbar/clone/coreutils")
!208 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !207, file: !207, line: 631, type: !202, scopeLine: 632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!209 = !{}
!210 = !{!211, !212}
!211 = !DIDerivedType(tag: DW_TAG_member, name: "program", scope: !206, file: !207, line: 633, baseType: !180, size: 64)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !206, file: !207, line: 633, baseType: !180, size: 64, offset: 64)
!213 = !{!214}
!214 = !DISubrange(count: 7)
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !205, size: 64)
!216 = !DISubroutineType(types: !217)
!217 = !{null, !131}
!218 = !DISubroutineType(types: !219)
!219 = !{!9, !180}
!220 = !DISubroutineType(types: !221)
!221 = !{!142, !180}
!222 = !DISubroutineType(types: !223)
!223 = !{!142, !139}
!224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !225, size: 64)
!225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !226, line: 49, size: 384, elements: !227)
!226 = !DIFile(filename: "/usr/include/pwd.h", directory: "")
!227 = !{!228, !229, !230, !231, !232, !233, !234}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !225, file: !226, line: 51, baseType: !9, size: 64)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !225, file: !226, line: 52, baseType: !9, size: 64, offset: 64)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !225, file: !226, line: 54, baseType: !128, size: 32, offset: 128)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !225, file: !226, line: 55, baseType: !130, size: 32, offset: 160)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !225, file: !226, line: 56, baseType: !9, size: 64, offset: 192)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !225, file: !226, line: 57, baseType: !9, size: 64, offset: 256)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !225, file: !226, line: 58, baseType: !9, size: 64, offset: 320)
!235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 64)
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !237, line: 42, size: 256, elements: !238)
!237 = !DIFile(filename: "/usr/include/grp.h", directory: "")
!238 = !{!239, !240, !241, !242}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !236, file: !237, line: 44, baseType: !9, size: 64)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !236, file: !237, line: 45, baseType: !9, size: 64, offset: 64)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !236, file: !237, line: 46, baseType: !130, size: 32, offset: 128)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !236, file: !237, line: 47, baseType: !184, size: 64, offset: 192)
!243 = !DISubroutineType(types: !244)
!244 = !{!7, !9, !245, !53}
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 64)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 64)
!247 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !132)
!248 = !DISubroutineType(types: !249)
!249 = !{!7, !180, !180, !53}
!250 = !DISubroutineType(types: !251)
!251 = !{!7, !180, !139}
!252 = !DISubroutineType(types: !253)
!253 = !{null, !180, !53}
!254 = !DISubroutineType(types: !255)
!255 = !{!142, !180, !142, !142}
!256 = !DISubroutineType(types: !257)
!257 = !{!142, !7}
!258 = !DISubroutineType(types: !259)
!259 = !{!142, !180, !9, !246}
!260 = !DISubroutineType(types: !261)
!261 = !{!142, !180, !9, !131, !142}
!262 = !DISubroutineType(types: !263)
!263 = !{!142, !180, !180, !246}
!264 = !DISubroutineType(types: !265)
!265 = !{!142, !7, !7}
!266 = !DISubroutineType(types: !267)
!267 = !{!142, !268, !180}
!268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 64)
!269 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !270)
!270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !271, line: 46, size: 1152, elements: !272)
!271 = !DIFile(filename: "/usr/include/bits/stat.h", directory: "")
!272 = !{!273, !275, !277, !279, !280, !281, !282, !283, !284, !285, !287, !289, !297, !298, !299}
!273 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !270, file: !271, line: 48, baseType: !274, size: 64)
!274 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !30, line: 145, baseType: !57)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !270, file: !271, line: 53, baseType: !276, size: 64, offset: 64)
!276 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !30, line: 148, baseType: !57)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !270, file: !271, line: 61, baseType: !278, size: 64, offset: 128)
!278 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !30, line: 151, baseType: !57)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !270, file: !271, line: 62, baseType: !140, size: 32, offset: 192)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !270, file: !271, line: 64, baseType: !128, size: 32, offset: 224)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !270, file: !271, line: 65, baseType: !130, size: 32, offset: 256)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !270, file: !271, line: 67, baseType: !7, size: 32, offset: 288)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !270, file: !271, line: 69, baseType: !274, size: 64, offset: 320)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !270, file: !271, line: 74, baseType: !29, size: 64, offset: 384)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !270, file: !271, line: 78, baseType: !286, size: 64, offset: 448)
!286 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !30, line: 174, baseType: !31)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !270, file: !271, line: 80, baseType: !288, size: 64, offset: 512)
!288 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !30, line: 179, baseType: !31)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !270, file: !271, line: 91, baseType: !290, size: 128, offset: 576)
!290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !291, line: 9, size: 128, elements: !292)
!291 = !DIFile(filename: "/usr/include/bits/types/struct_timespec.h", directory: "")
!292 = !{!293, !295}
!293 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !290, file: !291, line: 11, baseType: !294, size: 64)
!294 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !30, line: 160, baseType: !31)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !290, file: !291, line: 12, baseType: !296, size: 64, offset: 64)
!296 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !30, line: 196, baseType: !31)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !270, file: !271, line: 92, baseType: !290, size: 128, offset: 704)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !270, file: !271, line: 93, baseType: !290, size: 128, offset: 832)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !270, file: !271, line: 106, baseType: !300, size: 192, offset: 960)
!300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 192, elements: !301)
!301 = !{!302}
!302 = !DISubrange(count: 3)
!303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !290, size: 256, elements: !304)
!304 = !{!305}
!305 = !DISubrange(count: 2)
!306 = !DISubroutineType(types: !307)
!307 = !{!142, !180, !180, !246, !142}
!308 = !{!309, !311, !313, !315, !317, !63, !319, !321, !323, !325, !327, !329, !331, !333, !335, !341, !343}
!309 = !DIGlobalVariableExpression(var: !310, expr: !DIExpression())
!310 = distinct !DIGlobalVariable(name: "owner_name", scope: !65, file: !66, line: 74, type: !9, isLocal: true, isDefinition: true)
!311 = !DIGlobalVariableExpression(var: !312, expr: !DIExpression())
!312 = distinct !DIGlobalVariable(name: "group_name", scope: !65, file: !66, line: 81, type: !9, isLocal: true, isDefinition: true)
!313 = !DIGlobalVariableExpression(var: !314, expr: !DIExpression())
!314 = distinct !DIGlobalVariable(name: "copy_only_if_needed", scope: !65, file: !66, line: 102, type: !142, isLocal: true, isDefinition: true)
!315 = !DIGlobalVariableExpression(var: !316, expr: !DIExpression())
!316 = distinct !DIGlobalVariable(name: "strip_files", scope: !65, file: !66, line: 105, type: !142, isLocal: true, isDefinition: true)
!317 = !DIGlobalVariableExpression(var: !318, expr: !DIExpression())
!318 = distinct !DIGlobalVariable(name: "dir_arg", scope: !65, file: !66, line: 108, type: !142, isLocal: true, isDefinition: true)
!319 = !DIGlobalVariableExpression(var: !320, expr: !DIExpression())
!320 = distinct !DIGlobalVariable(name: "long_options", scope: !65, file: !66, line: 121, type: !185, isLocal: true, isDefinition: true)
!321 = !DIGlobalVariableExpression(var: !322, expr: !DIExpression())
!322 = distinct !DIGlobalVariable(name: "strip_program", scope: !65, file: !66, line: 111, type: !180, isLocal: true, isDefinition: true)
!323 = !DIGlobalVariableExpression(var: !324, expr: !DIExpression())
!324 = distinct !DIGlobalVariable(name: "use_default_selinux_context", scope: !65, file: !66, line: 54, type: !142, isLocal: true, isDefinition: true)
!325 = !DIGlobalVariableExpression(var: !326, expr: !DIExpression())
!326 = distinct !DIGlobalVariable(name: "mode", scope: !65, file: !66, line: 90, type: !139, isLocal: true, isDefinition: true)
!327 = !DIGlobalVariableExpression(var: !328, expr: !DIExpression())
!328 = distinct !DIGlobalVariable(name: "dir_mode_bits", scope: !65, file: !66, line: 99, type: !139, isLocal: true, isDefinition: true)
!329 = !DIGlobalVariableExpression(var: !330, expr: !DIExpression())
!330 = distinct !DIGlobalVariable(name: "dir_mode", scope: !65, file: !66, line: 93, type: !139, isLocal: true, isDefinition: true)
!331 = !DIGlobalVariableExpression(var: !332, expr: !DIExpression())
!332 = distinct !DIGlobalVariable(name: "owner_id", scope: !65, file: !66, line: 77, type: !127, isLocal: true, isDefinition: true)
!333 = !DIGlobalVariableExpression(var: !334, expr: !DIExpression())
!334 = distinct !DIGlobalVariable(name: "group_id", scope: !65, file: !66, line: 84, type: !129, isLocal: true, isDefinition: true)
!335 = !DIGlobalVariableExpression(var: !336, expr: !DIExpression())
!336 = distinct !DIGlobalVariable(name: "a_buff", scope: !337, file: !66, line: 149, type: !338, isLocal: true, isDefinition: true)
!337 = distinct !DISubprogram(name: "have_same_content", scope: !66, file: !66, line: 146, type: !264, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 32768, elements: !339)
!339 = !{!340}
!340 = !DISubrange(count: 4096)
!341 = !DIGlobalVariableExpression(var: !342, expr: !DIExpression())
!342 = distinct !DIGlobalVariable(name: "b_buff", scope: !337, file: !66, line: 150, type: !338, isLocal: true, isDefinition: true)
!343 = !DIGlobalVariableExpression(var: !344, expr: !DIExpression())
!344 = distinct !DIGlobalVariable(name: "first_call", scope: !345, file: !66, line: 318, type: !142, isLocal: true, isDefinition: true)
!345 = distinct !DISubprogram(name: "setdefaultfilecon", scope: !66, file: !66, line: 314, type: !202, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!346 = !DIGlobalVariableExpression(var: !347, expr: !DIExpression())
!347 = distinct !DIGlobalVariable(name: "top_level_src_name", scope: !348, file: !349, line: 147, type: !180, isLocal: true, isDefinition: true)
!348 = distinct !DICompileUnit(language: DW_LANG_C99, file: !349, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !350, retainedTypes: !351, globals: !598, nameTableKind: None)
!349 = !DIFile(filename: "src/copy.c", directory: "/home/mbarbar/clone/coreutils")
!350 = !{!68, !76, !83, !89, !95}
!351 = !{!139, !53, !70, !9, !57, !55, !352, !354, !142, !7, !399, !401, !175, !404, !180, !407, !409, !256, !250, !254, !411, !140, !274, !276, !278, !444, !436, !441, !443, !181, !29, !128, !130, !445, !446, !448, !450, !413, !452, !454, !456, !458, !461, !220, !10, !495, !497, !499, !503, !505, !286, !507, !509, !511, !288, !513, !517, !519, !526, !538, !540, !542, !544, !550, !552, !554, !556, !555, !557, !200, !559, !563, !127, !129, !565, !567, !583, !579, !594, !596}
!352 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !353, line: 63, baseType: !29)
!353 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!354 = !DISubroutineType(types: !355)
!355 = !{!142, !180, !180, !139, !142, !356}
!356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !357, size: 64)
!357 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !358)
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cp_options", file: !77, line: 98, size: 640, elements: !359)
!359 = !{!360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398}
!360 = !DIDerivedType(tag: DW_TAG_member, name: "backup_type", scope: !358, file: !77, line: 100, baseType: !68, size: 32)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "dereference", scope: !358, file: !77, line: 103, baseType: !76, size: 32, offset: 32)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "interactive", scope: !358, file: !77, line: 108, baseType: !83, size: 32, offset: 64)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "sparse_mode", scope: !358, file: !77, line: 111, baseType: !89, size: 32, offset: 96)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !358, file: !77, line: 115, baseType: !139, size: 32, offset: 128)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "copy_as_regular", scope: !358, file: !77, line: 119, baseType: !142, size: 8, offset: 160)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_before_opening", scope: !358, file: !77, line: 123, baseType: !142, size: 8, offset: 168)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_after_failed_open", scope: !358, file: !77, line: 130, baseType: !142, size: 8, offset: 176)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "hard_link", scope: !358, file: !77, line: 134, baseType: !142, size: 8, offset: 184)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "move_mode", scope: !358, file: !77, line: 138, baseType: !142, size: 8, offset: 192)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "install_mode", scope: !358, file: !77, line: 141, baseType: !142, size: 8, offset: 200)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "chown_privileges", scope: !358, file: !77, line: 145, baseType: !142, size: 8, offset: 208)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "owner_privileges", scope: !358, file: !77, line: 152, baseType: !142, size: 8, offset: 216)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "one_file_system", scope: !358, file: !77, line: 156, baseType: !142, size: 8, offset: 224)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_ownership", scope: !358, file: !77, line: 160, baseType: !142, size: 8, offset: 232)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_mode", scope: !358, file: !77, line: 161, baseType: !142, size: 8, offset: 240)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_timestamps", scope: !358, file: !77, line: 162, baseType: !142, size: 8, offset: 248)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_no_preserve_mode", scope: !358, file: !77, line: 163, baseType: !142, size: 8, offset: 256)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "set_security_context", scope: !358, file: !77, line: 166, baseType: !142, size: 8, offset: 264)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_links", scope: !358, file: !77, line: 178, baseType: !142, size: 8, offset: 272)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "data_copy_required", scope: !358, file: !77, line: 182, baseType: !142, size: 8, offset: 280)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve", scope: !358, file: !77, line: 188, baseType: !142, size: 8, offset: 288)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_security_context", scope: !358, file: !77, line: 192, baseType: !142, size: 8, offset: 296)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_context", scope: !358, file: !77, line: 201, baseType: !142, size: 8, offset: 304)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_xattr", scope: !358, file: !77, line: 205, baseType: !142, size: 8, offset: 312)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_xattr", scope: !358, file: !77, line: 214, baseType: !142, size: 8, offset: 320)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "reduce_diagnostics", scope: !358, file: !77, line: 223, baseType: !142, size: 8, offset: 328)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "recursive", scope: !358, file: !77, line: 227, baseType: !142, size: 8, offset: 336)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "set_mode", scope: !358, file: !77, line: 231, baseType: !142, size: 8, offset: 344)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "symbolic_link", scope: !358, file: !77, line: 235, baseType: !142, size: 8, offset: 352)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !358, file: !77, line: 239, baseType: !142, size: 8, offset: 360)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !358, file: !77, line: 242, baseType: !142, size: 8, offset: 368)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "stdin_tty", scope: !358, file: !77, line: 245, baseType: !142, size: 8, offset: 376)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "open_dangling_dest_symlink", scope: !358, file: !77, line: 250, baseType: !142, size: 8, offset: 384)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "last_file", scope: !358, file: !77, line: 254, baseType: !142, size: 8, offset: 392)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "rename_errno", scope: !358, file: !77, line: 259, baseType: !7, size: 32, offset: 416)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "reflink_mode", scope: !358, file: !77, line: 262, baseType: !95, size: 32, offset: 448)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "dest_info", scope: !358, file: !77, line: 273, baseType: !175, size: 64, offset: 512)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "src_info", scope: !358, file: !77, line: 276, baseType: !175, size: 64, offset: 576)
!399 = !DISubroutineType(types: !400)
!400 = !{!142, !180, !142, !142, !356}
!401 = !DISubroutineType(types: !402)
!402 = !{null, !403}
!403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 64)
!404 = !DISubroutineType(types: !405)
!405 = !{!142, !180, !180, !142, !356, !406, !406}
!406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 64)
!407 = !DISubroutineType(types: !408)
!408 = !{!142, !356}
!409 = !DISubroutineType(types: !410)
!410 = !{!139}
!411 = !DISubroutineType(types: !412)
!412 = !{!142, !180, !180, !142, !413, !436, !356, !142, !406, !406, !406}
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 64)
!414 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !415)
!415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !271, line: 46, size: 1152, elements: !416)
!416 = !{!417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !433, !434, !435}
!417 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !415, file: !271, line: 48, baseType: !274, size: 64)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !415, file: !271, line: 53, baseType: !276, size: 64, offset: 64)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !415, file: !271, line: 61, baseType: !278, size: 64, offset: 128)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !415, file: !271, line: 62, baseType: !140, size: 32, offset: 192)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !415, file: !271, line: 64, baseType: !128, size: 32, offset: 224)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !415, file: !271, line: 65, baseType: !130, size: 32, offset: 256)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !415, file: !271, line: 67, baseType: !7, size: 32, offset: 288)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !415, file: !271, line: 69, baseType: !274, size: 64, offset: 320)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !415, file: !271, line: 74, baseType: !29, size: 64, offset: 384)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !415, file: !271, line: 78, baseType: !286, size: 64, offset: 448)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !415, file: !271, line: 80, baseType: !288, size: 64, offset: 512)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !415, file: !271, line: 91, baseType: !429, size: 128, offset: 576)
!429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !291, line: 9, size: 128, elements: !430)
!430 = !{!431, !432}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !429, file: !291, line: 11, baseType: !294, size: 64)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !429, file: !291, line: 12, baseType: !296, size: 64, offset: 64)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !415, file: !271, line: 92, baseType: !429, size: 128, offset: 704)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !415, file: !271, line: 93, baseType: !429, size: 128, offset: 832)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !415, file: !271, line: 106, baseType: !300, size: 192, offset: 960)
!436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 64)
!437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_list", file: !349, line: 125, size: 192, elements: !438)
!438 = !{!439, !440, !442}
!439 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !437, file: !349, line: 127, baseType: !436, size: 64)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !437, file: !349, line: 128, baseType: !441, size: 64, offset: 64)
!441 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !112, line: 47, baseType: !276)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !437, file: !349, line: 129, baseType: !443, size: 64, offset: 128)
!443 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !112, line: 59, baseType: !274)
!444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64)
!445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, size: 256, elements: !304)
!446 = !DISubroutineType(types: !447)
!447 = !{!7, !7, !180, !444, !7}
!448 = !DISubroutineType(types: !449)
!449 = !{!142, !356, !142}
!450 = !DISubroutineType(types: !451)
!451 = !{!142, !180, !413, !180, !413, !356, !406}
!452 = !DISubroutineType(types: !453)
!453 = !{!142, !180, !180, !142, !142, !142}
!454 = !DISubroutineType(types: !455)
!455 = !{!142, !356, !180, !413}
!456 = !DISubroutineType(types: !457)
!457 = !{!142, !180, !139}
!458 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 96, elements: !459)
!459 = !{!460}
!460 = !DISubrange(count: 12)
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 64)
!462 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !463)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !464)
!464 = !{!465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !463, file: !4, line: 51, baseType: !7, size: 32)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !463, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !463, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !463, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !463, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !463, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !463, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !463, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !463, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !463, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !463, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !463, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !463, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !463, file: !4, line: 70, baseType: !479, size: 64, offset: 832)
!479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !463, size: 64)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !463, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !463, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !463, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !463, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !463, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !463, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !463, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !463, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !463, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !463, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !463, file: !4, line: 93, baseType: !479, size: 64, offset: 1344)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !463, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !463, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !463, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !463, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!495 = !DISubroutineType(types: !496)
!496 = !{!142, !180, !413, !180}
!497 = !DISubroutineType(types: !498)
!498 = !{null, !180, !180, !180}
!499 = !DISubroutineType(types: !500)
!500 = !{!142, !413, !501}
!501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !502, size: 64)
!502 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !437)
!503 = !DISubroutineType(types: !504)
!504 = !{!142, !180, !180, !142, !413, !436, !356, !406, !406}
!505 = !DISubroutineType(types: !506)
!506 = !{!142, !180, !180, !356, !139, !139, !406, !413}
!507 = !DISubroutineType(types: !508)
!508 = !{!7, !7, !7}
!509 = !DISubroutineType(types: !510)
!510 = !{!55, !415}
!511 = !DISubroutineType(types: !512)
!512 = !{!142, !413}
!513 = !DISubroutineType(types: !514)
!514 = !{!53, !515, !55}
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 64)
!516 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!517 = !DISubroutineType(types: !518)
!518 = !{!142, !7, !7, !9, !55, !55, !352, !89, !180, !180, !406}
!519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 64)
!520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_info", file: !521, line: 23, size: 192, elements: !522)
!521 = !DIFile(filename: "src/extent-scan.h", directory: "/home/mbarbar/clone/coreutils")
!522 = !{!523, !524, !525}
!523 = !DIDerivedType(tag: DW_TAG_member, name: "ext_logical", scope: !520, file: !521, line: 26, baseType: !352, size: 64)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "ext_length", scope: !520, file: !521, line: 29, baseType: !352, size: 64, offset: 64)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "ext_flags", scope: !520, file: !521, line: 32, baseType: !70, size: 32, offset: 128)
!526 = !DISubroutineType(types: !527)
!527 = !{null, !528}
!528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !529, size: 64)
!529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_scan", file: !521, line: 36, size: 384, elements: !530)
!530 = !{!531, !532, !533, !534, !535, !536, !537}
!531 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !529, file: !521, line: 39, baseType: !7, size: 32)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "scan_start", scope: !529, file: !521, line: 42, baseType: !352, size: 64, offset: 64)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "fm_flags", scope: !529, file: !521, line: 45, baseType: !70, size: 32, offset: 128)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "ei_count", scope: !529, file: !521, line: 48, baseType: !55, size: 64, offset: 192)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "initial_scan_failed", scope: !529, file: !521, line: 52, baseType: !142, size: 8, offset: 256)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "hit_final_extent", scope: !529, file: !521, line: 55, baseType: !142, size: 8, offset: 264)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "ext_info", scope: !529, file: !521, line: 58, baseType: !519, size: 64, offset: 320)
!538 = !DISubroutineType(types: !539)
!539 = !{!142, !7, !180, !142, !352}
!540 = !DISubroutineType(types: !541)
!541 = !{!142, !7, !352}
!542 = !DISubroutineType(types: !543)
!543 = !{!7, !7, !352, !352}
!544 = !DISubroutineType(types: !545)
!545 = !{!142, !7, !7, !9, !55, !55, !142, !180, !180, !546, !549, !406}
!546 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !547, line: 102, baseType: !548)
!547 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!548 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !30, line: 73, baseType: !57)
!549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 64)
!550 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !353, line: 77, baseType: !551)
!551 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !30, line: 193, baseType: !31)
!552 = !DISubroutineType(types: !553)
!553 = !{!142, !515, !55}
!554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !555, size: 64)
!555 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !556)
!556 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!557 = !DISubroutineType(types: !558)
!558 = !{!7, !7, !180, !139}
!559 = !DISubroutineType(types: !560)
!560 = !{!7, !180, !561}
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 64)
!562 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !429)
!563 = !DISubroutineType(types: !564)
!564 = !{!7, !356, !180, !7, !413, !142, !413}
!565 = !DISubroutineType(types: !566)
!566 = !{!142, !180, !7, !180, !7, !356}
!567 = !DISubroutineType(types: !568)
!568 = !{null, !569, !180}
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 64)
!570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "error_context", file: !571, line: 25, size: 192, elements: !572)
!571 = !DIFile(filename: "/usr/include/attr/error_context.h", directory: "")
!572 = !{!573, !577, !581}
!573 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !570, file: !571, line: 27, baseType: !574, size: 64)
!574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !575, size: 64)
!575 = !DISubroutineType(types: !576)
!576 = !{null, !569, !180, null}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "quote", scope: !570, file: !571, line: 30, baseType: !578, size: 64, offset: 64)
!578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 64)
!579 = !DISubroutineType(types: !580)
!580 = !{!180, !569, !180}
!581 = !DIDerivedType(tag: DW_TAG_member, name: "quote_free", scope: !570, file: !571, line: 33, baseType: !582, size: 64, offset: 128)
!582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 64)
!583 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !353, line: 52, baseType: !584)
!584 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !585, line: 32, baseType: !586)
!585 = !DIFile(filename: "software/llvm9/build/lib/clang/9.0.0/include/stdarg.h", directory: "/home/mbarbar")
!586 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !349, line: 659, baseType: !587)
!587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !588, size: 192, elements: !38)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !349, line: 659, size: 192, elements: !589)
!589 = !{!590, !591, !592, !593}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !588, file: !349, line: 659, baseType: !70, size: 32)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !588, file: !349, line: 659, baseType: !70, size: 32, offset: 32)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !588, file: !349, line: 659, baseType: !53, size: 64, offset: 64)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !588, file: !349, line: 659, baseType: !53, size: 64, offset: 128)
!594 = !DISubroutineType(types: !595)
!595 = !{!7, !180, !569}
!596 = !DISubroutineType(types: !597)
!597 = !{null, !180, !7, !413}
!598 = !{!599, !346, !602, !604, !607, !609}
!599 = !DIGlobalVariableExpression(var: !600, expr: !DIExpression())
!600 = distinct !DIGlobalVariable(name: "mask", scope: !601, file: !349, line: 3089, type: !139, isLocal: true, isDefinition: true)
!601 = distinct !DISubprogram(name: "cached_umask", scope: !349, file: !349, line: 3087, type: !409, scopeLine: 3088, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !348, retainedNodes: !209)
!602 = !DIGlobalVariableExpression(var: !603, expr: !DIExpression())
!603 = distinct !DIGlobalVariable(name: "top_level_dst_name", scope: !348, file: !349, line: 148, type: !180, isLocal: true, isDefinition: true)
!604 = !DIGlobalVariableExpression(var: !605, expr: !DIExpression())
!605 = distinct !DIGlobalVariable(name: "zeros", scope: !606, file: !349, line: 387, type: !9, isLocal: true, isDefinition: true)
!606 = distinct !DISubprogram(name: "write_zeros", scope: !349, file: !349, line: 385, type: !540, scopeLine: 386, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!607 = !DIGlobalVariableExpression(var: !608, expr: !DIExpression())
!608 = distinct !DIGlobalVariable(name: "nz", scope: !606, file: !349, line: 388, type: !55, isLocal: true, isDefinition: true)
!609 = !DIGlobalVariableExpression(var: !610, expr: !DIExpression())
!610 = distinct !DIGlobalVariable(name: "fallback", scope: !606, file: !349, line: 395, type: !611, isLocal: true, isDefinition: true)
!611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 8192, elements: !612)
!612 = !{!613}
!613 = !DISubrange(count: 1024)
!614 = !DIGlobalVariableExpression(var: !615, expr: !DIExpression())
!615 = distinct !DIGlobalVariable(name: "src_to_dest", scope: !616, file: !617, line: 45, type: !175, isLocal: true, isDefinition: true)
!616 = distinct !DICompileUnit(language: DW_LANG_C99, file: !617, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !618, globals: !639, nameTableKind: None)
!617 = !DIFile(filename: "src/cp-hash.c", directory: "/home/mbarbar/clone/coreutils")
!618 = !{!53, !9, !546, !619, !621, !441, !443, !175, !627, !629, !631, !200, !633, !635, !637}
!619 = !DISubroutineType(types: !620)
!620 = !{null, !441, !443}
!621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !622, size: 64)
!622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Src_to_dest", file: !617, line: 33, size: 192, elements: !623)
!623 = !{!624, !625, !626}
!624 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !622, file: !617, line: 35, baseType: !441, size: 64)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !622, file: !617, line: 36, baseType: !443, size: 64, offset: 64)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !622, file: !617, line: 40, baseType: !9, size: 64, offset: 128)
!627 = !DISubroutineType(types: !628)
!628 = !{!9, !441, !443}
!629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 64)
!630 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !622)
!631 = !DISubroutineType(types: !632)
!632 = !{!9, !180, !441, !443}
!633 = !DISubroutineType(types: !634)
!634 = !{null, !53}
!635 = !DISubroutineType(types: !636)
!636 = !{!55, !515, !55}
!637 = !DISubroutineType(types: !638)
!638 = !{!142, !515, !515}
!639 = !{!614}
!640 = !DIGlobalVariableExpression(var: !641, expr: !DIExpression())
!641 = distinct !DIGlobalVariable(name: "simple_pattern", scope: !642, file: !643, line: 38, type: !655, isLocal: true, isDefinition: true)
!642 = distinct !DICompileUnit(language: DW_LANG_C99, file: !643, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !644, globals: !672, nameTableKind: None)
!643 = !DIFile(filename: "src/force-link.c", directory: "/home/mbarbar/clone/coreutils")
!644 = !{!645, !7, !647, !9, !650, !652, !654, !55, !655, !658, !660, !180, !667}
!645 = !DISubroutineType(types: !646)
!646 = !{!7, !7, !180, !7, !180, !7, !142, !7}
!647 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 2048, elements: !648)
!648 = !{!649}
!649 = !DISubrange(count: 256)
!650 = !DISubroutineType(types: !651)
!651 = !{!7, !180, !7, !180, !142, !7}
!652 = !DISubroutineType(types: !653)
!653 = !{!9, !180, !9}
!654 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !56, line: 35, baseType: !31)
!655 = !DICompositeType(tag: DW_TAG_array_type, baseType: !181, size: 72, elements: !656)
!656 = !{!657}
!657 = !DISubrange(count: 9)
!658 = !DISubroutineType(types: !659)
!659 = !{!7, !9, !53}
!660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 64)
!661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "link_arg", file: !643, line: 71, size: 192, elements: !662)
!662 = !{!663, !664, !665, !666}
!663 = !DIDerivedType(tag: DW_TAG_member, name: "srcdir", scope: !661, file: !643, line: 73, baseType: !7, size: 32)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "srcname", scope: !661, file: !643, line: 74, baseType: !180, size: 64, offset: 64)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "dstdir", scope: !661, file: !643, line: 75, baseType: !7, size: 32, offset: 128)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !661, file: !643, line: 76, baseType: !7, size: 32, offset: 160)
!667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !668, size: 64)
!668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "symlink_arg", file: !643, line: 131, size: 128, elements: !669)
!669 = !{!670, !671}
!670 = !DIDerivedType(tag: DW_TAG_member, name: "srcname", scope: !668, file: !643, line: 133, baseType: !180, size: 64)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "dstdir", scope: !668, file: !643, line: 134, baseType: !7, size: 32, offset: 64)
!672 = !{!640}
!673 = !DIGlobalVariableExpression(var: !674, expr: !DIExpression())
!674 = distinct !DIGlobalVariable(name: "Version", scope: !675, file: !676, line: 2, type: !180, isLocal: false, isDefinition: true)
!675 = distinct !DICompileUnit(language: DW_LANG_C99, file: !676, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !677, globals: !678, nameTableKind: None)
!676 = !DIFile(filename: "src/version.c", directory: "/home/mbarbar/clone/coreutils")
!677 = !{!180}
!678 = !{!673}
!679 = !DIGlobalVariableExpression(var: !680, expr: !DIExpression())
!680 = distinct !DIGlobalVariable(name: "simple_backup_suffix", scope: !681, file: !685, line: 82, type: !180, isLocal: false, isDefinition: true)
!681 = distinct !DICompileUnit(language: DW_LANG_C99, file: !682, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !683, retainedTypes: !691, globals: !715, nameTableKind: None)
!682 = !DIFile(filename: "./lib/backupfile.c", directory: "/home/mbarbar/clone/coreutils")
!683 = !{!68, !684}
!684 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "numbered_backup_result", file: !685, line: 172, baseType: !70, size: 32, elements: !686)
!685 = !DIFile(filename: "lib/backupfile.c", directory: "/home/mbarbar/clone/coreutils")
!686 = !{!687, !688, !689, !690}
!687 = !DIEnumerator(name: "BACKUP_IS_SAME_LENGTH", value: 0, isUnsigned: true)
!688 = !DIEnumerator(name: "BACKUP_IS_LONGER", value: 1, isUnsigned: true)
!689 = !DIEnumerator(name: "BACKUP_IS_NEW", value: 2, isUnsigned: true)
!690 = !DIEnumerator(name: "BACKUP_NOMEM", value: 3, isUnsigned: true)
!691 = !{!53, !70, !55, !180, !202, !181, !692, !654, !694, !9, !695, !7, !699, !702, !711, !142, !10, !712, !31}
!692 = !DISubroutineType(types: !693)
!693 = !{!9, !7, !180, !68, !142}
!694 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !112, line: 108, baseType: !551)
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 64)
!696 = !DIDerivedType(tag: DW_TAG_typedef, name: "DIR", file: !697, line: 127, baseType: !698)
!697 = !DIFile(filename: "/usr/include/dirent.h", directory: "")
!698 = !DICompositeType(tag: DW_TAG_structure_type, name: "__dirstream", file: !697, line: 127, flags: DIFlagFwdDecl)
!699 = !DISubroutineType(types: !700)
!700 = !{!684, !7, !184, !55, !55, !654, !701, !193}
!701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 64)
!702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !703, size: 64)
!703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !704, line: 22, size: 2240, elements: !705)
!704 = !DIFile(filename: "/usr/include/bits/dirent.h", directory: "")
!705 = !{!706, !707, !708, !709, !710}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !703, file: !704, line: 25, baseType: !276, size: 64)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !703, file: !704, line: 26, baseType: !29, size: 64, offset: 64)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !703, file: !704, line: 31, baseType: !33, size: 16, offset: 128)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !703, file: !704, line: 32, baseType: !556, size: 8, offset: 144)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !703, file: !704, line: 33, baseType: !647, size: 2048, offset: 152)
!711 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 16, elements: !304)
!712 = !DISubroutineType(types: !713)
!713 = !{null, !9, !55, !10, !7, !714}
!714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 64)
!715 = !{!679}
!716 = !DIGlobalVariableExpression(var: !717, expr: !DIExpression())
!717 = distinct !DIGlobalVariable(name: "backup_args", scope: !718, file: !738, line: 42, type: !730, isLocal: true, isDefinition: true)
!718 = distinct !DICompileUnit(language: DW_LANG_C99, file: !719, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !720, retainedTypes: !721, globals: !735, nameTableKind: None)
!719 = !DIFile(filename: "./lib/backup-find.c", directory: "/home/mbarbar/clone/coreutils")
!720 = !{!68}
!721 = !{!515, !722, !9, !724, !181, !726, !730, !732}
!722 = !DISubroutineType(types: !723)
!723 = !{!9, !7, !180, !68}
!724 = !DISubroutineType(types: !725)
!725 = !{!68, !180, !180}
!726 = !DICompositeType(tag: DW_TAG_array_type, baseType: !727, size: 256, elements: !728)
!727 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !68)
!728 = !{!729}
!729 = !DISubrange(count: 8)
!730 = !DICompositeType(tag: DW_TAG_array_type, baseType: !731, size: 576, elements: !656)
!731 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !180)
!732 = !DIDerivedType(tag: DW_TAG_typedef, name: "argmatch_exit_fn", file: !733, line: 61, baseType: !734)
!733 = !DIFile(filename: "./lib/argmatch.h", directory: "/home/mbarbar/clone/coreutils")
!734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 64)
!735 = !{!736, !716}
!736 = !DIGlobalVariableExpression(var: !737, expr: !DIExpression())
!737 = distinct !DIGlobalVariable(name: "backup_types", scope: !718, file: !738, line: 53, type: !726, isLocal: true, isDefinition: true)
!738 = !DIFile(filename: "lib/backup-find.c", directory: "/home/mbarbar/clone/coreutils")
!739 = !DIGlobalVariableExpression(var: !740, expr: !DIExpression())
!740 = distinct !DIGlobalVariable(name: "file_name", scope: !741, file: !780, line: 37, type: !180, isLocal: true, isDefinition: true)
!741 = distinct !DICompileUnit(language: DW_LANG_C99, file: !742, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !743, globals: !779, nameTableKind: None)
!742 = !DIFile(filename: "./lib/closein.c", directory: "/home/mbarbar/clone/coreutils")
!743 = !{!202, !180, !200, !142, !744, !7, !778}
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 64)
!745 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !746)
!746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !747)
!747 = !{!748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777}
!748 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !746, file: !4, line: 51, baseType: !7, size: 32)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !746, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !746, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !746, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !746, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !746, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !746, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !746, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !746, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !746, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !746, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !746, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !746, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !746, file: !4, line: 70, baseType: !762, size: 64, offset: 832)
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 64)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !746, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !746, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !746, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !746, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !746, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !746, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !746, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !746, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !746, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !746, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !746, file: !4, line: 93, baseType: !762, size: 64, offset: 1344)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !746, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !746, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !746, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !746, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!778 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!779 = !{!739}
!780 = !DIFile(filename: "lib/closein.c", directory: "/home/mbarbar/clone/coreutils")
!781 = !DIGlobalVariableExpression(var: !782, expr: !DIExpression())
!782 = distinct !DIGlobalVariable(name: "file_name", scope: !783, file: !825, line: 46, type: !180, isLocal: true, isDefinition: true)
!783 = distinct !DICompileUnit(language: DW_LANG_C99, file: !784, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !785, globals: !822, nameTableKind: None)
!784 = !DIFile(filename: "./lib/closeout.c", directory: "/home/mbarbar/clone/coreutils")
!785 = !{!202, !180, !786, !142, !200, !788, !7, !778}
!786 = !DISubroutineType(types: !787)
!787 = !{null, !142}
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !789, size: 64)
!789 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !790)
!790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !791)
!791 = !{!792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821}
!792 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !790, file: !4, line: 51, baseType: !7, size: 32)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !790, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !790, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !790, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !790, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !790, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !790, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !790, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !790, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !790, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !790, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !790, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !790, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !790, file: !4, line: 70, baseType: !806, size: 64, offset: 832)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !790, size: 64)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !790, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !790, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !790, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !790, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !790, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !790, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !790, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !790, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !790, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !790, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !790, file: !4, line: 93, baseType: !806, size: 64, offset: 1344)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !790, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !790, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !790, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !790, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!822 = !{!781, !823}
!823 = !DIGlobalVariableExpression(var: !824, expr: !DIExpression())
!824 = distinct !DIGlobalVariable(name: "ignore_EPIPE", scope: !783, file: !825, line: 56, type: !142, isLocal: true, isDefinition: true)
!825 = !DIFile(filename: "lib/closeout.c", directory: "/home/mbarbar/clone/coreutils")
!826 = !DIGlobalVariableExpression(var: !827, expr: !DIExpression())
!827 = distinct !DIGlobalVariable(name: "exit_failure", scope: !828, file: !832, line: 24, type: !778, isLocal: false, isDefinition: true)
!828 = distinct !DICompileUnit(language: DW_LANG_C99, file: !829, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !830, globals: !831, nameTableKind: None)
!829 = !DIFile(filename: "./lib/exitfail.c", directory: "/home/mbarbar/clone/coreutils")
!830 = !{!778}
!831 = !{!826}
!832 = !DIFile(filename: "lib/exitfail.c", directory: "/home/mbarbar/clone/coreutils")
!833 = !DIGlobalVariableExpression(var: !834, expr: !DIExpression())
!834 = distinct !DIGlobalVariable(name: "default_tuning", scope: !835, file: !844, line: 130, type: !860, isLocal: true, isDefinition: true)
!835 = distinct !DICompileUnit(language: DW_LANG_C99, file: !836, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !837, globals: !967, nameTableKind: None)
!836 = !DIFile(filename: "./lib/hash.c", directory: "/home/mbarbar/clone/coreutils")
!837 = !{!57, !53, !55, !838, !841, !853, !847, !880, !882, !918, !874, !920, !922, !924, !925, !931, !556, !181, !933, !860, !936, !938, !842, !859, !871, !877, !939, !941, !943, !515, !865, !142, !946, !7, !948, !635, !637, !950, !952, !954, !956, !958, !960, !962, !965}
!838 = !DISubroutineType(types: !839)
!839 = !{!55, !840}
!840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !841, size: 64)
!841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !842)
!842 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !177, line: 69, baseType: !843)
!843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !844, line: 52, size: 640, elements: !845)
!844 = !DIFile(filename: "lib/hash.c", directory: "/home/mbarbar/clone/coreutils")
!845 = !{!846, !852, !855, !856, !857, !858, !870, !873, !876, !879}
!846 = !DIDerivedType(tag: DW_TAG_member, name: "bucket", scope: !843, file: !844, line: 57, baseType: !847, size: 64)
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 64)
!848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_entry", file: !844, line: 46, size: 128, elements: !849)
!849 = !{!850, !851}
!850 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !848, file: !844, line: 48, baseType: !53, size: 64)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !848, file: !844, line: 49, baseType: !847, size: 64, offset: 64)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "bucket_limit", scope: !843, file: !844, line: 58, baseType: !853, size: 64, offset: 64)
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 64)
!854 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !848)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "n_buckets", scope: !843, file: !844, line: 59, baseType: !55, size: 64, offset: 128)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "n_buckets_used", scope: !843, file: !844, line: 60, baseType: !55, size: 64, offset: 192)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "n_entries", scope: !843, file: !844, line: 61, baseType: !55, size: 64, offset: 256)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "tuning", scope: !843, file: !844, line: 64, baseType: !859, size: 64, offset: 320)
!859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !860, size: 64)
!860 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !861)
!861 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_tuning", file: !177, line: 65, baseType: !862)
!862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_tuning", file: !177, line: 53, size: 160, elements: !863)
!863 = !{!864, !866, !867, !868, !869}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_threshold", scope: !862, file: !177, line: 58, baseType: !865, size: 32)
!865 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_factor", scope: !862, file: !177, line: 59, baseType: !865, size: 32, offset: 32)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "growth_threshold", scope: !862, file: !177, line: 60, baseType: !865, size: 32, offset: 64)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "growth_factor", scope: !862, file: !177, line: 61, baseType: !865, size: 32, offset: 96)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "is_n_buckets", scope: !862, file: !177, line: 62, baseType: !142, size: 8, offset: 128)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "hasher", scope: !843, file: !844, line: 71, baseType: !871, size: 64, offset: 384)
!871 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_hasher", file: !177, line: 48, baseType: !872)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !635, size: 64)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "comparator", scope: !843, file: !844, line: 72, baseType: !874, size: 64, offset: 448)
!874 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_comparator", file: !177, line: 49, baseType: !875)
!875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !637, size: 64)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "data_freer", scope: !843, file: !844, line: 73, baseType: !877, size: 64, offset: 512)
!877 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_data_freer", file: !177, line: 50, baseType: !878)
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !633, size: 64)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "free_entry_list", scope: !843, file: !844, line: 76, baseType: !847, size: 64, offset: 576)
!880 = !DISubroutineType(types: !881)
!881 = !{!142, !840}
!882 = !DISubroutineType(types: !883)
!883 = !{null, !840, !884}
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 64)
!885 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !886)
!886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !887)
!887 = !{!888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917}
!888 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !886, file: !4, line: 51, baseType: !7, size: 32)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !886, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !886, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !886, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !886, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !886, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !886, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !886, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !886, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !886, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !886, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !886, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !886, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !886, file: !4, line: 70, baseType: !902, size: 64, offset: 832)
!902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 64)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !886, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !886, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !886, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !886, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !886, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !886, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !886, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !886, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !886, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !886, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !886, file: !4, line: 93, baseType: !902, size: 64, offset: 1344)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !886, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !886, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !886, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !886, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!918 = !DISubroutineType(types: !919)
!919 = !{!53, !840, !515}
!920 = !DISubroutineType(types: !921)
!921 = !{!53, !840}
!922 = !DISubroutineType(types: !923)
!923 = !{!55, !840, !924, !55}
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !53, size: 64)
!925 = !DISubroutineType(types: !926)
!926 = !{!55, !840, !927, !53}
!927 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_processor", file: !177, line: 51, baseType: !928)
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 64)
!929 = !DISubroutineType(types: !930)
!930 = !{!142, !53, !53}
!931 = !DISubroutineType(types: !932)
!932 = !{!55, !180, !55}
!933 = !DISubroutineType(types: !934)
!934 = !{null, !935}
!935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 64)
!936 = !DISubroutineType(types: !937)
!937 = !{!938, !55, !859, !871, !874, !877}
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 64)
!939 = !DISubroutineType(types: !940)
!940 = !{null, !938}
!941 = !DISubroutineType(types: !942)
!942 = !{!142, !938, !55}
!943 = !DISubroutineType(types: !944)
!944 = !{!7, !938, !515, !945}
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !515, size: 64)
!946 = !DISubroutineType(types: !947)
!947 = !{!53, !938, !515}
!948 = !DISubroutineType(types: !949)
!949 = !{!847, !840, !515}
!950 = !DISubroutineType(types: !951)
!951 = !{!142, !938}
!952 = !DISubroutineType(types: !953)
!953 = !{!55, !55, !859}
!954 = !DISubroutineType(types: !955)
!955 = !{!55, !55}
!956 = !DISubroutineType(types: !957)
!957 = !{!142, !55}
!958 = !DISubroutineType(types: !959)
!959 = !{!142, !938, !938, !142}
!960 = !DISubroutineType(types: !961)
!961 = !{null, !938, !847}
!962 = !DISubroutineType(types: !963)
!963 = !{!53, !938, !515, !964, !142}
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !847, size: 64)
!965 = !DISubroutineType(types: !966)
!966 = !{!847, !938}
!967 = !{!833}
!968 = !DIGlobalVariableExpression(var: !969, expr: !DIExpression())
!969 = distinct !DIGlobalVariable(name: "program_name", scope: !970, file: !1008, line: 33, type: !180, isLocal: false, isDefinition: true)
!970 = distinct !DICompileUnit(language: DW_LANG_C99, file: !971, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !972, globals: !1007, nameTableKind: None)
!971 = !DIFile(filename: "./lib/progname.c", directory: "/home/mbarbar/clone/coreutils")
!972 = !{!53, !9, !180, !202, !973}
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 64)
!974 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !975)
!975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !976)
!976 = !{!977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006}
!977 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !975, file: !4, line: 51, baseType: !7, size: 32)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !975, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !975, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !975, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !975, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !975, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !975, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !975, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !975, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !975, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !975, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !975, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !975, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !975, file: !4, line: 70, baseType: !991, size: 64, offset: 832)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !975, size: 64)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !975, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !975, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !975, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !975, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !975, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !975, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !975, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !975, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !975, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !975, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !975, file: !4, line: 93, baseType: !991, size: 64, offset: 1344)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !975, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !975, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !975, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !975, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1007 = !{!968}
!1008 = !DIFile(filename: "lib/progname.c", directory: "/home/mbarbar/clone/coreutils")
!1009 = !DIGlobalVariableExpression(var: !1010, expr: !DIExpression())
!1010 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !1011, file: !1040, line: 85, type: !1029, isLocal: false, isDefinition: true)
!1011 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1012, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1013, retainedTypes: !1028, globals: !1134, nameTableKind: None)
!1012 = !DIFile(filename: "./lib/quotearg.c", directory: "/home/mbarbar/clone/coreutils")
!1013 = !{!1014}
!1014 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_style", file: !1015, line: 32, baseType: !70, size: 32, elements: !1016)
!1015 = !DIFile(filename: "./lib/quotearg.h", directory: "/home/mbarbar/clone/coreutils")
!1016 = !{!1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027}
!1017 = !DIEnumerator(name: "literal_quoting_style", value: 0, isUnsigned: true)
!1018 = !DIEnumerator(name: "shell_quoting_style", value: 1, isUnsigned: true)
!1019 = !DIEnumerator(name: "shell_always_quoting_style", value: 2, isUnsigned: true)
!1020 = !DIEnumerator(name: "shell_escape_quoting_style", value: 3, isUnsigned: true)
!1021 = !DIEnumerator(name: "shell_escape_always_quoting_style", value: 4, isUnsigned: true)
!1022 = !DIEnumerator(name: "c_quoting_style", value: 5, isUnsigned: true)
!1023 = !DIEnumerator(name: "c_maybe_quoting_style", value: 6, isUnsigned: true)
!1024 = !DIEnumerator(name: "escape_quoting_style", value: 7, isUnsigned: true)
!1025 = !DIEnumerator(name: "locale_quoting_style", value: 8, isUnsigned: true)
!1026 = !DIEnumerator(name: "clocale_quoting_style", value: 9, isUnsigned: true)
!1027 = !DIEnumerator(name: "custom_quoting_style", value: 10, isUnsigned: true)
!1028 = !{!7, !33, !55, !1029, !1032, !1036, !1038, !1048, !1052, !1054, !556, !1056, !70, !1057, !1059, !180, !1061, !1050, !1063, !1065, !9, !200, !1067, !647, !1072, !1074, !218, !1076, !1078, !1080, !1082, !1084, !1086, !1088, !1090, !1092, !1094, !1096, !1098, !1100, !1102, !1104, !1106, !142, !181, !1110, !1112, !1127, !1108, !1128, !1130, !1132}
!1029 = !DICompositeType(tag: DW_TAG_array_type, baseType: !731, size: 704, elements: !1030)
!1030 = !{!1031}
!1031 = !DISubrange(count: 11)
!1032 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1033, size: 320, elements: !1034)
!1033 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1014)
!1034 = !{!1035}
!1035 = !DISubrange(count: 10)
!1036 = !DISubroutineType(types: !1037)
!1037 = !{!1038, !1038}
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64)
!1039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !1040, line: 65, size: 448, elements: !1041)
!1040 = !DIFile(filename: "lib/quotearg.c", directory: "/home/mbarbar/clone/coreutils")
!1041 = !{!1042, !1043, !1044, !1046, !1047}
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !1039, file: !1040, line: 68, baseType: !1014, size: 32)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1039, file: !1040, line: 71, baseType: !7, size: 32, offset: 32)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !1039, file: !1040, line: 75, baseType: !1045, size: 256, offset: 64)
!1045 = !DICompositeType(tag: DW_TAG_array_type, baseType: !70, size: 256, elements: !728)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !1039, file: !1040, line: 78, baseType: !180, size: 64, offset: 320)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !1039, file: !1040, line: 81, baseType: !180, size: 64, offset: 384)
!1048 = !DISubroutineType(types: !1049)
!1049 = !{!1014, !1050}
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 64)
!1051 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1039)
!1052 = !DISubroutineType(types: !1053)
!1053 = !{null, !1038, !1014}
!1054 = !DISubroutineType(types: !1055)
!1055 = !{!7, !1038, !10, !7}
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !70, size: 64)
!1057 = !DISubroutineType(types: !1058)
!1058 = !{!7, !1038, !7}
!1059 = !DISubroutineType(types: !1060)
!1060 = !{null, !1038, !180, !180}
!1061 = !DISubroutineType(types: !1062)
!1062 = !{!55, !9, !55, !180, !55, !1050}
!1063 = !DISubroutineType(types: !1064)
!1064 = !{!9, !180, !55, !1050}
!1065 = !DISubroutineType(types: !1066)
!1066 = !{!9, !180, !55, !714, !1050}
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 64)
!1068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !1040, line: 834, size: 128, elements: !1069)
!1069 = !{!1070, !1071}
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1068, file: !1040, line: 836, baseType: !55, size: 64)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1068, file: !1040, line: 837, baseType: !9, size: 64, offset: 64)
!1072 = !DISubroutineType(types: !1073)
!1073 = !{!9, !7, !180}
!1074 = !DISubroutineType(types: !1075)
!1075 = !{!9, !7, !180, !55}
!1076 = !DISubroutineType(types: !1077)
!1077 = !{!9, !180, !55}
!1078 = !DISubroutineType(types: !1079)
!1079 = !{!9, !7, !1014, !180}
!1080 = !DISubroutineType(types: !1081)
!1081 = !{!9, !7, !1014, !180, !55}
!1082 = !DISubroutineType(types: !1083)
!1083 = !{!9, !1014, !180}
!1084 = !DISubroutineType(types: !1085)
!1085 = !{!9, !1014, !180, !55}
!1086 = !DISubroutineType(types: !1087)
!1087 = !{!9, !180, !55, !10}
!1088 = !DISubroutineType(types: !1089)
!1089 = !{!9, !180, !10}
!1090 = !DISubroutineType(types: !1091)
!1091 = !{!9, !7, !180, !180, !180}
!1092 = !DISubroutineType(types: !1093)
!1093 = !{!9, !7, !180, !180, !180, !55}
!1094 = !DISubroutineType(types: !1095)
!1095 = !{!9, !180, !180, !180}
!1096 = !DISubroutineType(types: !1097)
!1097 = !{!9, !180, !180, !180, !55}
!1098 = !DISubroutineType(types: !1099)
!1099 = !{!180, !7, !180, !55}
!1100 = !DISubroutineType(types: !1101)
!1101 = !{!180, !180, !55}
!1102 = !DISubroutineType(types: !1103)
!1103 = !{!180, !7, !180}
!1104 = !DISubroutineType(types: !1105)
!1105 = !{!180, !180}
!1106 = !DISubroutineType(types: !1107)
!1107 = !{!55, !9, !55, !180, !55, !1014, !7, !1108, !180, !180}
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 64)
!1109 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !70)
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 64)
!1111 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !33)
!1112 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !1113, line: 6, baseType: !1114)
!1113 = !DIFile(filename: "/usr/include/bits/types/mbstate_t.h", directory: "")
!1114 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !1115, line: 21, baseType: !1116)
!1115 = !DIFile(filename: "/usr/include/bits/types/__mbstate_t.h", directory: "")
!1116 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1115, line: 13, size: 64, elements: !1117)
!1117 = !{!1118, !1119}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1116, file: !1115, line: 15, baseType: !7, size: 32)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !1116, file: !1115, line: 20, baseType: !1120, size: 32, offset: 32)
!1120 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1116, file: !1115, line: 16, size: 32, elements: !1121)
!1121 = !{!1122, !1123}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !1120, file: !1115, line: 18, baseType: !70, size: 32)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !1120, file: !1115, line: 19, baseType: !1124, size: 32)
!1124 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 32, elements: !1125)
!1125 = !{!1126}
!1126 = !DISubrange(count: 4)
!1127 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !56, line: 74, baseType: !7)
!1128 = !DISubroutineType(types: !1129)
!1129 = !{!180, !180, !1014}
!1130 = !DISubroutineType(types: !1131)
!1131 = !{!9, !7, !180, !55, !1050}
!1132 = !DISubroutineType(types: !1133)
!1133 = !{!1039, !1014}
!1134 = !{!1009, !1135, !1137, !1139, !1141, !1143, !1145, !1147}
!1135 = !DIGlobalVariableExpression(var: !1136, expr: !DIExpression())
!1136 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !1011, file: !1040, line: 101, type: !1032, isLocal: false, isDefinition: true)
!1137 = !DIGlobalVariableExpression(var: !1138, expr: !DIExpression())
!1138 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !1011, file: !1040, line: 1052, type: !1039, isLocal: false, isDefinition: true)
!1139 = !DIGlobalVariableExpression(var: !1140, expr: !DIExpression())
!1140 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !1011, file: !1040, line: 116, type: !1039, isLocal: true, isDefinition: true)
!1141 = !DIGlobalVariableExpression(var: !1142, expr: !DIExpression())
!1142 = distinct !DIGlobalVariable(name: "slot0", scope: !1011, file: !1040, line: 842, type: !647, isLocal: true, isDefinition: true)
!1143 = !DIGlobalVariableExpression(var: !1144, expr: !DIExpression())
!1144 = distinct !DIGlobalVariable(name: "slotvec", scope: !1011, file: !1040, line: 845, type: !1067, isLocal: true, isDefinition: true)
!1145 = !DIGlobalVariableExpression(var: !1146, expr: !DIExpression())
!1146 = distinct !DIGlobalVariable(name: "nslots", scope: !1011, file: !1040, line: 843, type: !7, isLocal: true, isDefinition: true)
!1147 = !DIGlobalVariableExpression(var: !1148, expr: !DIExpression())
!1148 = distinct !DIGlobalVariable(name: "slotvec0", scope: !1011, file: !1040, line: 844, type: !1068, isLocal: true, isDefinition: true)
!1149 = !DIGlobalVariableExpression(var: !1150, expr: !DIExpression())
!1150 = distinct !DIGlobalVariable(name: "comparison_function_table", scope: !1151, file: !1166, line: 74, type: !1176, isLocal: true, isDefinition: true)
!1151 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1152, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1153, retainedTypes: !1161, globals: !1191, nameTableKind: None)
!1152 = !DIFile(filename: "./lib/savedir.c", directory: "/home/mbarbar/clone/coreutils")
!1153 = !{!1154}
!1154 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "savedir_option", file: !1155, line: 26, baseType: !70, size: 32, elements: !1156)
!1155 = !DIFile(filename: "./lib/savedir.h", directory: "/home/mbarbar/clone/coreutils")
!1156 = !{!1157, !1158, !1159, !1160}
!1157 = !DIEnumerator(name: "SAVEDIR_SORT_NONE", value: 0, isUnsigned: true)
!1158 = !DIEnumerator(name: "SAVEDIR_SORT_NAME", value: 1, isUnsigned: true)
!1159 = !DIEnumerator(name: "SAVEDIR_SORT_INODE", value: 2, isUnsigned: true)
!1160 = !DIEnumerator(name: "SAVEDIR_SORT_FASTREAD", value: 2, isUnsigned: true)
!1161 = !{!53, !1162, !9, !55, !1164, !7, !1172, !1176, !1178, !180, !1165, !276, !1171, !1187, !695, !1174, !1189, !1190}
!1162 = !DISubroutineType(types: !1163)
!1163 = !{!9, !695, !1154}
!1164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1165, size: 64)
!1165 = !DIDerivedType(tag: DW_TAG_typedef, name: "direntry_t", file: !1166, line: 46, baseType: !1167)
!1166 = !DIFile(filename: "lib/savedir.c", directory: "/home/mbarbar/clone/coreutils")
!1167 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1166, line: 40, size: 128, elements: !1168)
!1168 = !{!1169, !1170}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1167, file: !1166, line: 42, baseType: !9, size: 64)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1167, file: !1166, line: 44, baseType: !1171, size: 64, offset: 64)
!1171 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !697, line: 34, baseType: !276)
!1172 = !DIDerivedType(tag: DW_TAG_typedef, name: "comparison_function", file: !1166, line: 72, baseType: !1173)
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 64)
!1174 = !DISubroutineType(types: !1175)
!1175 = !{!7, !515, !515}
!1176 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1177, size: 192, elements: !301)
!1177 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1172)
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1179, size: 64)
!1179 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1180)
!1180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !704, line: 22, size: 2240, elements: !1181)
!1181 = !{!1182, !1183, !1184, !1185, !1186}
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !1180, file: !704, line: 25, baseType: !276, size: 64)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !1180, file: !704, line: 26, baseType: !29, size: 64, offset: 64)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !1180, file: !704, line: 31, baseType: !33, size: 16, offset: 128)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !1180, file: !704, line: 32, baseType: !556, size: 8, offset: 144)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !1180, file: !704, line: 33, baseType: !647, size: 2048, offset: 152)
!1187 = !DISubroutineType(types: !1188)
!1188 = !{!9, !180, !1154}
!1189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1190, size: 64)
!1190 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1165)
!1191 = !{!1149}
!1192 = !DIGlobalVariableExpression(var: !1193, expr: !DIExpression())
!1193 = distinct !DIGlobalVariable(name: "letters", scope: !1194, file: !1215, line: 184, type: !1203, isLocal: true, isDefinition: true)
!1194 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1195, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1196, globals: !1214, nameTableKind: None)
!1195 = !DIFile(filename: "./lib/tempname.c", directory: "/home/mbarbar/clone/coreutils")
!1196 = !{!1197, !55, !9, !70, !7, !1200, !1203, !1206, !1199, !1208, !1210, !1212, !658, !193}
!1197 = !DISubroutineType(types: !1198)
!1198 = !{!7, !9, !7, !53, !1199, !55}
!1199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 64)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64)
!1201 = !DICompositeType(tag: DW_TAG_structure_type, name: "randint_source", file: !1202, line: 33, flags: DIFlagFwdDecl)
!1202 = !DIFile(filename: "./lib/randint.h", directory: "/home/mbarbar/clone/coreutils")
!1203 = !DICompositeType(tag: DW_TAG_array_type, baseType: !181, size: 504, elements: !1204)
!1204 = !{!1205}
!1205 = !DISubrange(count: 63)
!1206 = !DISubroutineType(types: !1207)
!1207 = !{!7, !9, !7, !7, !7, !55}
!1208 = !DISubroutineType(types: !1209)
!1209 = !{!7, !9, !7, !7, !7}
!1210 = !DISubroutineType(types: !1211)
!1211 = !{!7, !9, !7, !53, !1199}
!1212 = !DISubroutineType(types: !1213)
!1213 = !{!142, !180, !55}
!1214 = !{!1192}
!1215 = !DIFile(filename: "lib/tempname.c", directory: "/home/mbarbar/clone/coreutils")
!1216 = !DIGlobalVariableExpression(var: !1217, expr: !DIExpression())
!1217 = distinct !DIGlobalVariable(name: "ht", scope: !1218, file: !1219, line: 163, type: !175, isLocal: true, isDefinition: true)
!1218 = distinct !DISubprogram(name: "utimecmpat", scope: !1219, file: !1219, line: 132, type: !1220, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1245, retainedNodes: !209)
!1219 = !DIFile(filename: "lib/utimecmp.c", directory: "/home/mbarbar/clone/coreutils")
!1220 = !DISubroutineType(types: !1221)
!1221 = !{!7, !7, !180, !1222, !1222, !7}
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64)
!1223 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1224)
!1224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !271, line: 46, size: 1152, elements: !1225)
!1225 = !{!1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1242, !1243, !1244}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1224, file: !271, line: 48, baseType: !274, size: 64)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1224, file: !271, line: 53, baseType: !276, size: 64, offset: 64)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1224, file: !271, line: 61, baseType: !278, size: 64, offset: 128)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1224, file: !271, line: 62, baseType: !140, size: 32, offset: 192)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1224, file: !271, line: 64, baseType: !128, size: 32, offset: 224)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1224, file: !271, line: 65, baseType: !130, size: 32, offset: 256)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1224, file: !271, line: 67, baseType: !7, size: 32, offset: 288)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1224, file: !271, line: 69, baseType: !274, size: 64, offset: 320)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1224, file: !271, line: 74, baseType: !29, size: 64, offset: 384)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1224, file: !271, line: 78, baseType: !286, size: 64, offset: 448)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1224, file: !271, line: 80, baseType: !288, size: 64, offset: 512)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1224, file: !271, line: 91, baseType: !1238, size: 128, offset: 576)
!1238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !291, line: 9, size: 128, elements: !1239)
!1239 = !{!1240, !1241}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1238, file: !291, line: 11, baseType: !294, size: 64)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1238, file: !291, line: 12, baseType: !296, size: 64, offset: 64)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1224, file: !271, line: 92, baseType: !1238, size: 128, offset: 704)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1224, file: !271, line: 93, baseType: !1238, size: 128, offset: 832)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1224, file: !271, line: 106, baseType: !300, size: 192, offset: 960)
!1245 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1246, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1247, globals: !1261, nameTableKind: None)
!1246 = !DIFile(filename: "./lib/utimecmp.c", directory: "/home/mbarbar/clone/coreutils")
!1247 = !{!1248, !1220, !1250, !294, !7, !1252, !142, !274, !443, !1258, !296, !635, !1259, !637}
!1248 = !DISubroutineType(types: !1249)
!1249 = !{!7, !180, !1222, !1222, !7}
!1250 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !1251, line: 7, baseType: !294)
!1251 = !DIFile(filename: "/usr/include/bits/types/time_t.h", directory: "")
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 64)
!1253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fs_res", file: !1219, line: 66, size: 128, elements: !1254)
!1254 = !{!1255, !1256, !1257}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1253, file: !1219, line: 69, baseType: !443, size: 64)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "resolution", scope: !1253, file: !1219, line: 76, baseType: !7, size: 32, offset: 64)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "exact", scope: !1253, file: !1219, line: 80, baseType: !142, size: 8, offset: 96)
!1258 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1238, size: 256, elements: !304)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 64)
!1260 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1253)
!1261 = !{!1216, !1262}
!1262 = !DIGlobalVariableExpression(var: !1263, expr: !DIExpression())
!1263 = distinct !DIGlobalVariable(name: "new_dst_res", scope: !1218, file: !1219, line: 166, type: !1252, isLocal: true, isDefinition: true)
!1264 = !DIGlobalVariableExpression(var: !1265, expr: !DIExpression())
!1265 = distinct !DIGlobalVariable(name: "utimensat_works_really", scope: !1266, file: !1316, line: 75, type: !7, isLocal: true, isDefinition: true)
!1266 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1267, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1268, globals: !1313, nameTableKind: None)
!1267 = !DIFile(filename: "./lib/utimens.c", directory: "/home/mbarbar/clone/coreutils")
!1268 = !{!1269, !1277, !1278, !7, !296, !1279, !1286, !294, !1285, !142, !1250, !1287, !140, !1289, !1291}
!1269 = !DISubroutineType(types: !1270)
!1270 = !{!7, !7, !180, !1271}
!1271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1272, size: 64)
!1272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1273)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !291, line: 9, size: 128, elements: !1274)
!1274 = !{!1275, !1276}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1273, file: !291, line: 11, baseType: !294, size: 64)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1273, file: !291, line: 12, baseType: !296, size: 64, offset: 64)
!1277 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1273, size: 256, elements: !304)
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1273, size: 64)
!1279 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1280, size: 256, elements: !304)
!1280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !1281, line: 8, size: 128, elements: !1282)
!1281 = !DIFile(filename: "/usr/include/bits/types/struct_timeval.h", directory: "")
!1282 = !{!1283, !1284}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1280, file: !1281, line: 10, baseType: !294, size: 64)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1280, file: !1281, line: 11, baseType: !1285, size: 64, offset: 64)
!1285 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !30, line: 162, baseType: !31)
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 64)
!1287 = !DISubroutineType(types: !1288)
!1288 = !{!7, !180, !1271}
!1289 = !DISubroutineType(types: !1290)
!1290 = !{!7, !1278}
!1291 = !DISubroutineType(types: !1292)
!1292 = !{!142, !1293, !1312}
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 64)
!1294 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1295)
!1295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !271, line: 46, size: 1152, elements: !1296)
!1296 = !{!1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1295, file: !271, line: 48, baseType: !274, size: 64)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1295, file: !271, line: 53, baseType: !276, size: 64, offset: 64)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1295, file: !271, line: 61, baseType: !278, size: 64, offset: 128)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1295, file: !271, line: 62, baseType: !140, size: 32, offset: 192)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1295, file: !271, line: 64, baseType: !128, size: 32, offset: 224)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1295, file: !271, line: 65, baseType: !130, size: 32, offset: 256)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1295, file: !271, line: 67, baseType: !7, size: 32, offset: 288)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1295, file: !271, line: 69, baseType: !274, size: 64, offset: 320)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1295, file: !271, line: 74, baseType: !29, size: 64, offset: 384)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1295, file: !271, line: 78, baseType: !286, size: 64, offset: 448)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1295, file: !271, line: 80, baseType: !288, size: 64, offset: 512)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1295, file: !271, line: 91, baseType: !1273, size: 128, offset: 576)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1295, file: !271, line: 92, baseType: !1273, size: 128, offset: 704)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1295, file: !271, line: 93, baseType: !1273, size: 128, offset: 832)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1295, file: !271, line: 106, baseType: !300, size: 192, offset: 960)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 64)
!1313 = !{!1264, !1314}
!1314 = !DIGlobalVariableExpression(var: !1315, expr: !DIExpression())
!1315 = distinct !DIGlobalVariable(name: "lutimensat_works_really", scope: !1266, file: !1316, line: 76, type: !7, isLocal: true, isDefinition: true)
!1316 = !DIFile(filename: "lib/utimens.c", directory: "/home/mbarbar/clone/coreutils")
!1317 = !DIGlobalVariableExpression(var: !1318, expr: !DIExpression())
!1318 = distinct !DIGlobalVariable(name: "version_etc_copyright", scope: !1319, file: !1326, line: 26, type: !1322, isLocal: false, isDefinition: true)
!1319 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1320, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1321, globals: !1325, nameTableKind: None)
!1320 = !DIFile(filename: "./lib/version-etc-fsf.c", directory: "/home/mbarbar/clone/coreutils")
!1321 = !{!1322}
!1322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !181, size: 376, elements: !1323)
!1323 = !{!1324}
!1324 = !DISubrange(count: 47)
!1325 = !{!1317}
!1326 = !DIFile(filename: "lib/version-etc-fsf.c", directory: "/home/mbarbar/clone/coreutils")
!1327 = !DIGlobalVariableExpression(var: !1328, expr: !DIExpression())
!1328 = distinct !DIGlobalVariable(name: "initialized", scope: !1329, file: !1330, line: 34, type: !142, isLocal: true, isDefinition: true)
!1329 = distinct !DISubprogram(name: "can_write_any_file", scope: !1330, file: !1330, line: 32, type: !1331, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1333, retainedNodes: !209)
!1330 = !DIFile(filename: "lib/write-any-file.c", directory: "/home/mbarbar/clone/coreutils")
!1331 = !DISubroutineType(types: !1332)
!1332 = !{!142}
!1333 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1334, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1335, globals: !1336, nameTableKind: None)
!1334 = !DIFile(filename: "./lib/write-any-file.c", directory: "/home/mbarbar/clone/coreutils")
!1335 = !{!1331, !142}
!1336 = !{!1327, !1337}
!1337 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression())
!1338 = distinct !DIGlobalVariable(name: "can_write", scope: !1329, file: !1330, line: 35, type: !142, isLocal: true, isDefinition: true)
!1339 = !DIGlobalVariableExpression(var: !1340, expr: !DIExpression())
!1340 = distinct !DIGlobalVariable(name: "argmatch_die", scope: !1341, file: !1390, line: 67, type: !732, isLocal: false, isDefinition: true)
!1341 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1342, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1343, globals: !1389, nameTableKind: None)
!1342 = !DIFile(filename: "./lib/argmatch.c", directory: "/home/mbarbar/clone/coreutils")
!1343 = !{!53, !180, !732, !1344, !55, !654, !142, !1346, !1347, !1349, !1351, !1385, !1387, !200}
!1344 = !DISubroutineType(types: !1345)
!1345 = !{!654, !180, !1346, !515, !55}
!1346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 64)
!1347 = !DISubroutineType(types: !1348)
!1348 = !{null, !180, !180, !654}
!1349 = !DISubroutineType(types: !1350)
!1350 = !{null, !1346, !515, !55}
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 64)
!1352 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !1353)
!1353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !1354)
!1354 = !{!1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384}
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1353, file: !4, line: 51, baseType: !7, size: 32)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1353, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1353, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1353, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1353, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1353, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1353, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1353, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1353, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1353, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1353, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1353, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1353, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1353, file: !4, line: 70, baseType: !1369, size: 64, offset: 832)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1353, size: 64)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1353, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1353, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1353, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1353, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1353, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1353, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1353, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1353, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1353, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1353, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1353, file: !4, line: 93, baseType: !1369, size: 64, offset: 1344)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1353, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1353, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1353, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1353, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1385 = !DISubroutineType(types: !1386)
!1386 = !{!654, !180, !180, !1346, !515, !55, !732}
!1387 = !DISubroutineType(types: !1388)
!1388 = !{!180, !515, !1346, !515, !55}
!1389 = !{!1339}
!1390 = !DIFile(filename: "lib/argmatch.c", directory: "/home/mbarbar/clone/coreutils")
!1391 = !DIGlobalVariableExpression(var: !1392, expr: !DIExpression())
!1392 = distinct !DIGlobalVariable(name: "have_dupfd_cloexec", scope: !1393, file: !1394, line: 507, type: !7, isLocal: true, isDefinition: true)
!1393 = distinct !DISubprogram(name: "rpl_fcntl_DUPFD_CLOEXEC", scope: !1394, file: !1394, line: 488, type: !507, scopeLine: 489, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1395, retainedNodes: !209)
!1394 = !DIFile(filename: "lib/fcntl.c", directory: "/home/mbarbar/clone/coreutils")
!1395 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1396, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1397, globals: !1407, nameTableKind: None)
!1396 = !DIFile(filename: "./lib/fcntl.c", directory: "/home/mbarbar/clone/coreutils")
!1397 = !{!507, !1398, !7, !53}
!1398 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !585, line: 14, baseType: !1399)
!1399 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1396, line: 208, baseType: !1400)
!1400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1401, size: 192, elements: !38)
!1401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1396, line: 208, size: 192, elements: !1402)
!1402 = !{!1403, !1404, !1405, !1406}
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1401, file: !1396, line: 208, baseType: !70, size: 32)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1401, file: !1396, line: 208, baseType: !70, size: 32, offset: 32)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1401, file: !1396, line: 208, baseType: !53, size: 64, offset: 64)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1401, file: !1396, line: 208, baseType: !53, size: 64, offset: 128)
!1407 = !{!1391}
!1408 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1409, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1410, nameTableKind: None)
!1409 = !DIFile(filename: "src/prog-fprintf.c", directory: "/home/mbarbar/clone/coreutils")
!1410 = !{!1411, !1447, !180}
!1411 = !DISubroutineType(types: !1412)
!1412 = !{null, !1413, !180}
!1413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1414, size: 64)
!1414 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !1415)
!1415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !1416)
!1416 = !{!1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446}
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1415, file: !4, line: 51, baseType: !7, size: 32)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1415, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1415, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1415, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1415, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1415, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1415, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1415, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1415, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1415, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1415, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1415, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1415, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1415, file: !4, line: 70, baseType: !1431, size: 64, offset: 832)
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 64)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1415, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1415, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1415, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1415, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1415, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1415, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1415, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1415, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1415, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1415, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1415, file: !4, line: 93, baseType: !1431, size: 64, offset: 1344)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1415, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1415, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1415, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1415, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1447 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !353, line: 52, baseType: !1448)
!1448 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !585, line: 32, baseType: !1449)
!1449 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1409, line: 30, baseType: !1450)
!1450 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 192, elements: !38)
!1451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1409, line: 30, size: 192, elements: !1452)
!1452 = !{!1453, !1454, !1455, !1456}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1451, file: !1409, line: 30, baseType: !70, size: 32)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1451, file: !1409, line: 30, baseType: !70, size: 32, offset: 32)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1451, file: !1409, line: 30, baseType: !53, size: 64, offset: 64)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1451, file: !1409, line: 30, baseType: !53, size: 64, offset: 128)
!1457 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1458, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1459, nameTableKind: None)
!1458 = !DIFile(filename: "src/extent-scan.c", directory: "/home/mbarbar/clone/coreutils")
!1459 = !{!1460, !1461, !7, !55, !1473, !142, !70, !1479, !1481, !1510, !1497, !1486, !1491, !1331}
!1460 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !112, line: 85, baseType: !29)
!1461 = !DISubroutineType(types: !1462)
!1462 = !{null, !7, !1463}
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 64)
!1464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_scan", file: !521, line: 36, size: 384, elements: !1465)
!1465 = !{!1466, !1467, !1468, !1469, !1470, !1471, !1472}
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1464, file: !521, line: 39, baseType: !7, size: 32)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "scan_start", scope: !1464, file: !521, line: 42, baseType: !1460, size: 64, offset: 64)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "fm_flags", scope: !1464, file: !521, line: 45, baseType: !70, size: 32, offset: 128)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "ei_count", scope: !1464, file: !521, line: 48, baseType: !55, size: 64, offset: 192)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "initial_scan_failed", scope: !1464, file: !521, line: 52, baseType: !142, size: 8, offset: 256)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "hit_final_extent", scope: !1464, file: !521, line: 55, baseType: !142, size: 8, offset: 264)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "ext_info", scope: !1464, file: !521, line: 58, baseType: !1473, size: 64, offset: 320)
!1473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1474, size: 64)
!1474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_info", file: !521, line: 23, size: 192, elements: !1475)
!1475 = !{!1476, !1477, !1478}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "ext_logical", scope: !1474, file: !521, line: 26, baseType: !1460, size: 64)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "ext_length", scope: !1474, file: !521, line: 29, baseType: !1460, size: 64, offset: 64)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "ext_flags", scope: !1474, file: !521, line: 32, baseType: !70, size: 32, offset: 128)
!1479 = !DISubroutineType(types: !1480)
!1480 = !{!142, !1463}
!1481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1482, size: 64)
!1482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap", file: !1483, line: 35, size: 256, elements: !1484)
!1483 = !DIFile(filename: "src/fiemap.h", directory: "/home/mbarbar/clone/coreutils")
!1484 = !{!1485, !1489, !1490, !1493, !1494, !1495, !1496}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "fm_start", scope: !1482, file: !1483, line: 38, baseType: !1486, size: 64)
!1486 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1487, line: 27, baseType: !1488)
!1487 = !DIFile(filename: "/usr/include/bits/stdint-uintn.h", directory: "")
!1488 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !30, line: 45, baseType: !57)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "fm_length", scope: !1482, file: !1483, line: 41, baseType: !1486, size: 64, offset: 64)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "fm_flags", scope: !1482, file: !1483, line: 44, baseType: !1491, size: 32, offset: 128)
!1491 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !1487, line: 26, baseType: !1492)
!1492 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !30, line: 42, baseType: !70)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "fm_mapped_extents", scope: !1482, file: !1483, line: 47, baseType: !1491, size: 32, offset: 160)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "fm_extent_count", scope: !1482, file: !1483, line: 50, baseType: !1491, size: 32, offset: 192)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "fm_reserved", scope: !1482, file: !1483, line: 52, baseType: !1491, size: 32, offset: 224)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "fm_extents", scope: !1482, file: !1483, line: 55, baseType: !1497, offset: 256)
!1497 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1498, elements: !1508)
!1498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent", file: !1483, line: 14, size: 448, elements: !1499)
!1499 = !{!1500, !1501, !1502, !1503, !1505, !1506}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "fe_logical", scope: !1498, file: !1483, line: 18, baseType: !1486, size: 64)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "fe_physical", scope: !1498, file: !1483, line: 22, baseType: !1486, size: 64, offset: 64)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "fe_length", scope: !1498, file: !1483, line: 25, baseType: !1486, size: 64, offset: 128)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "fe_reserved64", scope: !1498, file: !1483, line: 27, baseType: !1504, size: 128, offset: 192)
!1504 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1486, size: 128, elements: !304)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "fe_flags", scope: !1498, file: !1483, line: 30, baseType: !1491, size: 32, offset: 320)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "fe_reserved", scope: !1498, file: !1483, line: 32, baseType: !1507, size: 96, offset: 352)
!1507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1491, size: 96, elements: !301)
!1508 = !{!1509}
!1509 = !DISubrange(count: -1)
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1498, size: 64)
!1511 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1512, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, nameTableKind: None)
!1512 = !DIFile(filename: "src/selinux.c", directory: "/home/mbarbar/clone/coreutils")
!1513 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1514, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1515, nameTableKind: None)
!1514 = !DIFile(filename: "./lib/copy-acl.c", directory: "/home/mbarbar/clone/coreutils")
!1515 = !{!1516, !7}
!1516 = !DISubroutineType(types: !1517)
!1517 = !{!7, !180, !7, !180, !7, !139}
!1518 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1519, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1520, nameTableKind: None)
!1519 = !DIFile(filename: "./lib/set-acl.c", directory: "/home/mbarbar/clone/coreutils")
!1520 = !{!1521, !7}
!1521 = !DISubroutineType(types: !1522)
!1522 = !{!7, !180, !7, !139}
!1523 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1524, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1525, nameTableKind: None)
!1524 = !DIFile(filename: "./lib/areadlink-with-size.c", directory: "/home/mbarbar/clone/coreutils")
!1525 = !{!53, !1076, !55, !694, !1526, !9, !7}
!1526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 1024, elements: !1527)
!1527 = !{!1528}
!1528 = !DISubrange(count: 128)
!1529 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1530, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !720, retainedTypes: !1531, nameTableKind: None)
!1530 = !DIFile(filename: "./lib/backup-rename.c", directory: "/home/mbarbar/clone/coreutils")
!1531 = !{!722}
!1532 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1533, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1534, nameTableKind: None)
!1533 = !DIFile(filename: "./lib/buffer-lcm.c", directory: "/home/mbarbar/clone/coreutils")
!1534 = !{!1535, !55}
!1535 = !DISubroutineType(types: !1536)
!1536 = !{!55, !55, !55, !55}
!1537 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1538, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1539, nameTableKind: None)
!1538 = !DIFile(filename: "./lib/dirname.c", directory: "/home/mbarbar/clone/coreutils")
!1539 = !{!218, !9}
!1540 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1541, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1542, nameTableKind: None)
!1541 = !DIFile(filename: "./lib/dirname-lgpl.c", directory: "/home/mbarbar/clone/coreutils")
!1542 = !{!1543, !55, !180, !218, !142, !9}
!1543 = !DISubroutineType(types: !1544)
!1544 = !{!55, !180}
!1545 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1546, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1547, nameTableKind: None)
!1546 = !DIFile(filename: "./lib/basename-lgpl.c", directory: "/home/mbarbar/clone/coreutils")
!1547 = !{!9, !218, !180, !142, !181, !1543, !55}
!1548 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1549, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1550, retainedTypes: !1560, nameTableKind: None)
!1549 = !DIFile(filename: "./lib/fadvise.c", directory: "/home/mbarbar/clone/coreutils")
!1550 = !{!1551}
!1551 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1552, line: 45, baseType: !70, size: 32, elements: !1553)
!1552 = !DIFile(filename: "./lib/fadvise.h", directory: "/home/mbarbar/clone/coreutils")
!1553 = !{!1554, !1555, !1556, !1557, !1558, !1559}
!1554 = !DIEnumerator(name: "FADVISE_NORMAL", value: 0, isUnsigned: true)
!1555 = !DIEnumerator(name: "FADVISE_SEQUENTIAL", value: 2, isUnsigned: true)
!1556 = !DIEnumerator(name: "FADVISE_NOREUSE", value: 5, isUnsigned: true)
!1557 = !DIEnumerator(name: "FADVISE_DONTNEED", value: 4, isUnsigned: true)
!1558 = !DIEnumerator(name: "FADVISE_WILLNEED", value: 3, isUnsigned: true)
!1559 = !DIEnumerator(name: "FADVISE_RANDOM", value: 1, isUnsigned: true)
!1560 = !{!1561, !1564}
!1561 = !DISubroutineType(types: !1562)
!1562 = !{null, !7, !352, !352, !1563}
!1563 = !DIDerivedType(tag: DW_TAG_typedef, name: "fadvice_t", file: !1552, line: 52, baseType: !1551)
!1564 = !DISubroutineType(types: !1565)
!1565 = !{null, !1566, !1563}
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1567, size: 64)
!1567 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !1568)
!1568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !1569)
!1569 = !{!1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1568, file: !4, line: 51, baseType: !7, size: 32)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1568, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1568, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1568, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1568, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1568, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1568, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1568, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1568, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1568, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1568, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1568, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1568, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1568, file: !4, line: 70, baseType: !1584, size: 64, offset: 832)
!1584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 64)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1568, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1568, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1568, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1568, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1568, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1568, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1568, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1568, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1568, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1568, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1568, file: !4, line: 93, baseType: !1584, size: 64, offset: 1344)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1568, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1568, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1568, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1568, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1600 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1601, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1602, nameTableKind: None)
!1601 = !DIFile(filename: "./lib/open-safer.c", directory: "/home/mbarbar/clone/coreutils")
!1602 = !{!1603, !139, !1605}
!1603 = !DISubroutineType(types: !1604)
!1604 = !{!7, !180, !7}
!1605 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !585, line: 14, baseType: !1606)
!1606 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1601, line: 35, baseType: !1607)
!1607 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1608, size: 192, elements: !38)
!1608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1601, line: 35, size: 192, elements: !1609)
!1609 = !{!1610, !1611, !1612, !1613}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1608, file: !1601, line: 35, baseType: !70, size: 32)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1608, file: !1601, line: 35, baseType: !70, size: 32, offset: 32)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1608, file: !1601, line: 35, baseType: !53, size: 64, offset: 64)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1608, file: !1601, line: 35, baseType: !53, size: 64, offset: 128)
!1614 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1615, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1616, nameTableKind: None)
!1615 = !DIFile(filename: "./lib/file-set.c", directory: "/home/mbarbar/clone/coreutils")
!1616 = !{!53, !9, !1617, !1642, !276, !441, !274, !443, !1649}
!1617 = !DISubroutineType(types: !1618)
!1618 = !{null, !175, !180, !1619}
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 64)
!1620 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1621)
!1621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !271, line: 46, size: 1152, elements: !1622)
!1622 = !{!1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1639, !1640, !1641}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1621, file: !271, line: 48, baseType: !274, size: 64)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1621, file: !271, line: 53, baseType: !276, size: 64, offset: 64)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1621, file: !271, line: 61, baseType: !278, size: 64, offset: 128)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1621, file: !271, line: 62, baseType: !140, size: 32, offset: 192)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1621, file: !271, line: 64, baseType: !128, size: 32, offset: 224)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1621, file: !271, line: 65, baseType: !130, size: 32, offset: 256)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1621, file: !271, line: 67, baseType: !7, size: 32, offset: 288)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1621, file: !271, line: 69, baseType: !274, size: 64, offset: 320)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1621, file: !271, line: 74, baseType: !29, size: 64, offset: 384)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1621, file: !271, line: 78, baseType: !286, size: 64, offset: 448)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1621, file: !271, line: 80, baseType: !288, size: 64, offset: 512)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1621, file: !271, line: 91, baseType: !1635, size: 128, offset: 576)
!1635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !291, line: 9, size: 128, elements: !1636)
!1636 = !{!1637, !1638}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1635, file: !291, line: 11, baseType: !294, size: 64)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1635, file: !291, line: 12, baseType: !296, size: 64, offset: 64)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1621, file: !271, line: 92, baseType: !1635, size: 128, offset: 704)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1621, file: !271, line: 93, baseType: !1635, size: 128, offset: 832)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1621, file: !271, line: 106, baseType: !300, size: 192, offset: 960)
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 64)
!1643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "F_triple", file: !1644, line: 9, size: 192, elements: !1645)
!1644 = !DIFile(filename: "./lib/hash-triple.h", directory: "/home/mbarbar/clone/coreutils")
!1645 = !{!1646, !1647, !1648}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1643, file: !1644, line: 11, baseType: !9, size: 64)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1643, file: !1644, line: 12, baseType: !441, size: 64, offset: 64)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1643, file: !1644, line: 13, baseType: !443, size: 64, offset: 128)
!1649 = !DISubroutineType(types: !1650)
!1650 = !{!142, !1651, !180, !1619}
!1651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 64)
!1652 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !176)
!1653 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1654, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1655, nameTableKind: None)
!1654 = !DIFile(filename: "./lib/filemode.c", directory: "/home/mbarbar/clone/coreutils")
!1655 = !{!1656, !9, !1658, !140, !1683}
!1656 = !DISubroutineType(types: !1657)
!1657 = !{null, !139, !9}
!1658 = !DISubroutineType(types: !1659)
!1659 = !{null, !1660, !9}
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 64)
!1661 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1662)
!1662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !271, line: 46, size: 1152, elements: !1663)
!1663 = !{!1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1680, !1681, !1682}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1662, file: !271, line: 48, baseType: !274, size: 64)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1662, file: !271, line: 53, baseType: !276, size: 64, offset: 64)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1662, file: !271, line: 61, baseType: !278, size: 64, offset: 128)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1662, file: !271, line: 62, baseType: !140, size: 32, offset: 192)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1662, file: !271, line: 64, baseType: !128, size: 32, offset: 224)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1662, file: !271, line: 65, baseType: !130, size: 32, offset: 256)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1662, file: !271, line: 67, baseType: !7, size: 32, offset: 288)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1662, file: !271, line: 69, baseType: !274, size: 64, offset: 320)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1662, file: !271, line: 74, baseType: !29, size: 64, offset: 384)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1662, file: !271, line: 78, baseType: !286, size: 64, offset: 448)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1662, file: !271, line: 80, baseType: !288, size: 64, offset: 512)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1662, file: !271, line: 91, baseType: !1676, size: 128, offset: 576)
!1676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !291, line: 9, size: 128, elements: !1677)
!1677 = !{!1678, !1679}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1676, file: !291, line: 11, baseType: !294, size: 64)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1676, file: !291, line: 12, baseType: !296, size: 64, offset: 64)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1662, file: !271, line: 92, baseType: !1676, size: 128, offset: 704)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1662, file: !271, line: 93, baseType: !1676, size: 128, offset: 832)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1662, file: !271, line: 106, baseType: !300, size: 192, offset: 960)
!1683 = !DISubroutineType(types: !1684)
!1684 = !{!10, !139}
!1685 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1686, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1687, nameTableKind: None)
!1686 = !DIFile(filename: "./lib/filenamecat.c", directory: "/home/mbarbar/clone/coreutils")
!1687 = !{!53, !1688, !9}
!1688 = !DISubroutineType(types: !1689)
!1689 = !{!9, !180, !180, !184}
!1690 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1691, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1692, nameTableKind: None)
!1691 = !DIFile(filename: "./lib/filenamecat-lgpl.c", directory: "/home/mbarbar/clone/coreutils")
!1692 = !{!53, !1688, !180, !55, !10, !181, !9}
!1693 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1694, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1695, nameTableKind: None)
!1694 = !DIFile(filename: "./lib/full-read.c", directory: "/home/mbarbar/clone/coreutils")
!1695 = !{!9, !55, !1696, !7}
!1696 = !DISubroutineType(types: !1697)
!1697 = !{!55, !7, !53, !55}
!1698 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1699, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1700, nameTableKind: None)
!1699 = !DIFile(filename: "./lib/full-write.c", directory: "/home/mbarbar/clone/coreutils")
!1700 = !{!180, !55, !1701, !7}
!1701 = !DISubroutineType(types: !1702)
!1702 = !{!55, !7, !515, !55}
!1703 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1704, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1705, nameTableKind: None)
!1704 = !DIFile(filename: "./lib/hash-triple.c", directory: "/home/mbarbar/clone/coreutils")
!1705 = !{!635, !1706, !55, !9, !441, !637, !443, !633, !1713}
!1706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1707, size: 64)
!1707 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1708)
!1708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "F_triple", file: !1644, line: 9, size: 192, elements: !1709)
!1709 = !{!1710, !1711, !1712}
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1708, file: !1644, line: 11, baseType: !9, size: 64)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1708, file: !1644, line: 12, baseType: !441, size: 64, offset: 64)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1708, file: !1644, line: 13, baseType: !443, size: 64, offset: 128)
!1713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1708, size: 64)
!1714 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1715, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1716, retainedTypes: !1727, nameTableKind: None)
!1715 = !DIFile(filename: "./lib/mkancesdirs.c", directory: "/home/mbarbar/clone/coreutils")
!1716 = !{!1717}
!1717 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !1718, file: !101, line: 39, baseType: !70, size: 32, elements: !114)
!1718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "savewd", file: !101, line: 36, size: 64, elements: !1719)
!1719 = !{!1720, !1721}
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1718, file: !101, line: 66, baseType: !1717, size: 32)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1718, file: !101, line: 74, baseType: !1722, size: 32, offset: 32)
!1722 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1718, file: !101, line: 69, size: 32, elements: !1723)
!1723 = !{!1724, !1725, !1726}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1722, file: !101, line: 71, baseType: !7, size: 32)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "errnum", scope: !1722, file: !101, line: 72, baseType: !7, size: 32)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1722, file: !101, line: 73, baseType: !111, size: 32)
!1727 = !{!1728, !9, !10, !142, !7}
!1728 = !DISubroutineType(types: !1729)
!1729 = !{!654, !9, !1730, !1731, !53}
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 64)
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 64)
!1732 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1733, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1734, retainedTypes: !1745, nameTableKind: None)
!1733 = !DIFile(filename: "./lib/mkdir-p.c", directory: "/home/mbarbar/clone/coreutils")
!1734 = !{!1735}
!1735 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !1736, file: !101, line: 39, baseType: !70, size: 32, elements: !114)
!1736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "savewd", file: !101, line: 36, size: 64, elements: !1737)
!1737 = !{!1738, !1739}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1736, file: !101, line: 66, baseType: !1735, size: 32)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1736, file: !101, line: 74, baseType: !1740, size: 32, offset: 32)
!1740 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1736, file: !101, line: 69, size: 32, elements: !1741)
!1741 = !{!1742, !1743, !1744}
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1740, file: !101, line: 71, baseType: !7, size: 32)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "errnum", scope: !1740, file: !101, line: 72, baseType: !7, size: 32)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1740, file: !101, line: 73, baseType: !111, size: 32)
!1745 = !{!127, !129, !1746, !7, !9, !654, !142, !139, !140, !1750, !180}
!1746 = !DISubroutineType(types: !1747)
!1747 = !{!142, !9, !1748, !1731, !53, !139, !1749, !139, !127, !129, !142}
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 64)
!1749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 64)
!1750 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !304)
!1751 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1752, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1753, nameTableKind: None)
!1752 = !DIFile(filename: "./lib/modechange.c", directory: "/home/mbarbar/clone/coreutils")
!1753 = !{!1754, !1756, !55, !180, !181, !70, !139, !10, !140, !1765, !1770, !1772}
!1754 = !DISubroutineType(types: !1755)
!1755 = !{!1756, !180}
!1756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1757, size: 64)
!1757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mode_change", file: !1758, line: 98, size: 128, elements: !1759)
!1758 = !DIFile(filename: "lib/modechange.c", directory: "/home/mbarbar/clone/coreutils")
!1759 = !{!1760, !1761, !1762, !1763, !1764}
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1757, file: !1758, line: 100, baseType: !10, size: 8)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1757, file: !1758, line: 101, baseType: !10, size: 8, offset: 8)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "affected", scope: !1757, file: !1758, line: 102, baseType: !139, size: 32, offset: 32)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1757, file: !1758, line: 103, baseType: !139, size: 32, offset: 64)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "mentioned", scope: !1757, file: !1758, line: 104, baseType: !139, size: 32, offset: 96)
!1765 = !DISubroutineType(types: !1766)
!1766 = !{!139, !139, !142, !139, !1767, !1769}
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 64)
!1768 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1757)
!1769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 64)
!1770 = !DISubroutineType(types: !1771)
!1771 = !{!139, !70}
!1772 = !DISubroutineType(types: !1773)
!1773 = !{!1756, !139, !139}
!1774 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1775, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1776, nameTableKind: None)
!1775 = !DIFile(filename: "./lib/opendirat.c", directory: "/home/mbarbar/clone/coreutils")
!1776 = !{!1777, !7, !695}
!1777 = !DISubroutineType(types: !1778)
!1778 = !{!695, !7, !180, !7, !193}
!1779 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1780, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1515, nameTableKind: None)
!1780 = !DIFile(filename: "./lib/qcopy-acl.c", directory: "/home/mbarbar/clone/coreutils")
!1781 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1782, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1783, nameTableKind: None)
!1782 = !DIFile(filename: "./lib/qset-acl.c", directory: "/home/mbarbar/clone/coreutils")
!1783 = !{!1521, !7, !139}
!1784 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1785, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1786, nameTableKind: None)
!1785 = !DIFile(filename: "./lib/renameatu.c", directory: "/home/mbarbar/clone/coreutils")
!1786 = !{!9, !1787, !7, !55, !142, !180, !140, !1789}
!1787 = !DISubroutineType(types: !1788)
!1788 = !{!7, !7, !180, !7, !180, !70}
!1789 = !DISubroutineType(types: !1790)
!1790 = !{!7, !7}
!1791 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1792, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1793, nameTableKind: None)
!1792 = !DIFile(filename: "./lib/safe-read.c", directory: "/home/mbarbar/clone/coreutils")
!1793 = !{!1696, !694, !7}
!1794 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1795, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1796, nameTableKind: None)
!1795 = !DIFile(filename: "./lib/safe-write.c", directory: "/home/mbarbar/clone/coreutils")
!1796 = !{!1701, !694, !7}
!1797 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1798, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1799, nameTableKind: None)
!1798 = !DIFile(filename: "./lib/same.c", directory: "/home/mbarbar/clone/coreutils")
!1799 = !{!1800, !1802, !180, !55, !142, !9, !7, !276, !274}
!1800 = !DISubroutineType(types: !1801)
!1801 = !{!142, !180, !180}
!1802 = !DISubroutineType(types: !1803)
!1803 = !{!142, !7, !180, !7, !180}
!1804 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1805, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1806, retainedTypes: !1817, nameTableKind: None)
!1805 = !DIFile(filename: "./lib/savewd.c", directory: "/home/mbarbar/clone/coreutils")
!1806 = !{!1807}
!1807 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !1808, file: !101, line: 39, baseType: !70, size: 32, elements: !114)
!1808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "savewd", file: !101, line: 36, size: 64, elements: !1809)
!1809 = !{!1810, !1811}
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1808, file: !101, line: 66, baseType: !1807, size: 32)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1808, file: !101, line: 74, baseType: !1812, size: 32, offset: 32)
!1812 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1808, file: !101, line: 69, size: 32, elements: !1813)
!1813 = !{!1814, !1815, !1816}
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1812, file: !101, line: 71, baseType: !7, size: 32)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "errnum", scope: !1812, file: !101, line: 72, baseType: !7, size: 32)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1812, file: !101, line: 73, baseType: !111, size: 32)
!1817 = !{!1818, !1821, !1812, !1825, !7, !1827, !111, !1829, !184, !9, !1834, !1836}
!1818 = !DISubroutineType(types: !1819)
!1819 = !{null, !1820}
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1808, size: 64)
!1821 = !DISubroutineType(types: !1822)
!1822 = !{!7, !1823}
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 64)
!1824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1808)
!1825 = !DISubroutineType(types: !1826)
!1826 = !{!7, !1820, !180, !7, !193}
!1827 = !DISubroutineType(types: !1828)
!1828 = !{!7, !1820, !7}
!1829 = !DISubroutineType(types: !1830)
!1830 = !{!7, !7, !184, !1831, !53}
!1831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1832, size: 64)
!1832 = !DISubroutineType(types: !1833)
!1833 = !{!7, !9, !1820, !53}
!1834 = !DISubroutineType(types: !1835)
!1835 = !{!142, !1820}
!1836 = !DISubroutineType(types: !1837)
!1837 = !{!142, !1823}
!1838 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1839, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1840, nameTableKind: None)
!1839 = !DIFile(filename: "./lib/se-selinux.c", directory: "/home/mbarbar/clone/coreutils")
!1840 = !{!1841, !7, !1846, !1848, !1850, !1852, !1854, !1856, !1858, !1860, !1863, !1865}
!1841 = !DISubroutineType(types: !1842)
!1842 = !{!7, !1843}
!1843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1844, size: 64)
!1844 = !DIDerivedType(tag: DW_TAG_typedef, name: "security_context_t", file: !1845, line: 83, baseType: !9)
!1845 = !DIFile(filename: "./lib/selinux/selinux.h", directory: "/home/mbarbar/clone/coreutils")
!1846 = !DISubroutineType(types: !1847)
!1847 = !{null, !1844}
!1848 = !DISubroutineType(types: !1849)
!1849 = !{!7, !1844}
!1850 = !DISubroutineType(types: !1851)
!1851 = !{!7, !180, !139, !1843}
!1852 = !DISubroutineType(types: !1853)
!1853 = !{!7, !180, !1843}
!1854 = !DISubroutineType(types: !1855)
!1855 = !{!7, !7, !1843}
!1856 = !DISubroutineType(types: !1857)
!1857 = !{!7, !180, !1844}
!1858 = !DISubroutineType(types: !1859)
!1859 = !{!7, !7, !1844}
!1860 = !DISubroutineType(types: !1861)
!1861 = !{!7, !1844, !1844, !1862, !1843}
!1862 = !DIDerivedType(tag: DW_TAG_typedef, name: "security_class_t", file: !1845, line: 82, baseType: !33)
!1863 = !DISubroutineType(types: !1864)
!1864 = !{!1862, !180}
!1865 = !DISubroutineType(types: !1866)
!1866 = !{!7, !180, !180}
!1867 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1868, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1869, nameTableKind: None)
!1868 = !DIFile(filename: "./lib/stat-time.c", directory: "/home/mbarbar/clone/coreutils")
!1869 = !{!1870, !296, !1895, !294, !1897}
!1870 = !DISubroutineType(types: !1871)
!1871 = !{!31, !1872}
!1872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1873, size: 64)
!1873 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1874)
!1874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !271, line: 46, size: 1152, elements: !1875)
!1875 = !{!1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1892, !1893, !1894}
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1874, file: !271, line: 48, baseType: !274, size: 64)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1874, file: !271, line: 53, baseType: !276, size: 64, offset: 64)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1874, file: !271, line: 61, baseType: !278, size: 64, offset: 128)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1874, file: !271, line: 62, baseType: !140, size: 32, offset: 192)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1874, file: !271, line: 64, baseType: !128, size: 32, offset: 224)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1874, file: !271, line: 65, baseType: !130, size: 32, offset: 256)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1874, file: !271, line: 67, baseType: !7, size: 32, offset: 288)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1874, file: !271, line: 69, baseType: !274, size: 64, offset: 320)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1874, file: !271, line: 74, baseType: !29, size: 64, offset: 384)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1874, file: !271, line: 78, baseType: !286, size: 64, offset: 448)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1874, file: !271, line: 80, baseType: !288, size: 64, offset: 512)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1874, file: !271, line: 91, baseType: !1888, size: 128, offset: 576)
!1888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !291, line: 9, size: 128, elements: !1889)
!1889 = !{!1890, !1891}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1888, file: !291, line: 11, baseType: !294, size: 64)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1888, file: !291, line: 12, baseType: !296, size: 64, offset: 64)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1874, file: !271, line: 92, baseType: !1888, size: 128, offset: 704)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1874, file: !271, line: 93, baseType: !1888, size: 128, offset: 832)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1874, file: !271, line: 106, baseType: !300, size: 192, offset: 960)
!1895 = !DISubroutineType(types: !1896)
!1896 = !{!1888, !1872}
!1897 = !DISubroutineType(types: !1898)
!1898 = !{!7, !7, !1899}
!1899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 64)
!1900 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1901, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1902, nameTableKind: None)
!1901 = !DIFile(filename: "./lib/statat.c", directory: "/home/mbarbar/clone/coreutils")
!1902 = !{!1903}
!1903 = !DISubroutineType(types: !1904)
!1904 = !{!7, !7, !180, !1905}
!1905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 64)
!1906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !271, line: 46, size: 1152, elements: !1907)
!1907 = !{!1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1924, !1925, !1926}
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1906, file: !271, line: 48, baseType: !274, size: 64)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1906, file: !271, line: 53, baseType: !276, size: 64, offset: 64)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1906, file: !271, line: 61, baseType: !278, size: 64, offset: 128)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1906, file: !271, line: 62, baseType: !140, size: 32, offset: 192)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1906, file: !271, line: 64, baseType: !128, size: 32, offset: 224)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1906, file: !271, line: 65, baseType: !130, size: 32, offset: 256)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1906, file: !271, line: 67, baseType: !7, size: 32, offset: 288)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1906, file: !271, line: 69, baseType: !274, size: 64, offset: 320)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1906, file: !271, line: 74, baseType: !29, size: 64, offset: 384)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1906, file: !271, line: 78, baseType: !286, size: 64, offset: 448)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1906, file: !271, line: 80, baseType: !288, size: 64, offset: 512)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1906, file: !271, line: 91, baseType: !1920, size: 128, offset: 576)
!1920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !291, line: 9, size: 128, elements: !1921)
!1921 = !{!1922, !1923}
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1920, file: !291, line: 11, baseType: !294, size: 64)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1920, file: !291, line: 12, baseType: !296, size: 64, offset: 64)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1906, file: !271, line: 92, baseType: !1920, size: 128, offset: 704)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1906, file: !271, line: 93, baseType: !1920, size: 128, offset: 832)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1906, file: !271, line: 106, baseType: !300, size: 192, offset: 960)
!1927 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1928, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1929, nameTableKind: None)
!1928 = !DIFile(filename: "./lib/fd-safer.c", directory: "/home/mbarbar/clone/coreutils")
!1929 = !{!1789, !7}
!1930 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1931, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1932, nameTableKind: None)
!1931 = !DIFile(filename: "./lib/verror.c", directory: "/home/mbarbar/clone/coreutils")
!1932 = !{!1933, !1942, !9, !7}
!1933 = !DISubroutineType(types: !1934)
!1934 = !{null, !7, !7, !180, !1935}
!1935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1936, size: 64)
!1936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1931, size: 192, elements: !1937)
!1937 = !{!1938, !1939, !1940, !1941}
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1936, file: !1931, baseType: !70, size: 32)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1936, file: !1931, baseType: !70, size: 32, offset: 32)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1936, file: !1931, baseType: !53, size: 64, offset: 64)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1936, file: !1931, baseType: !53, size: 64, offset: 128)
!1942 = !DISubroutineType(types: !1943)
!1943 = !{null, !7, !7, !180, !70, !180, !1935}
!1944 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1945, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1946, nameTableKind: None)
!1945 = !DIFile(filename: "./lib/version-etc.c", directory: "/home/mbarbar/clone/coreutils")
!1946 = !{!53, !1947, !1983, !1346, !1984, !55, !1986, !1995, !1996, !1998, !200, !1949}
!1947 = !DISubroutineType(types: !1948)
!1948 = !{null, !1949, !180, !180, !180, !1346, !55}
!1949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1950, size: 64)
!1950 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !1951)
!1951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !1952)
!1952 = !{!1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982}
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1951, file: !4, line: 51, baseType: !7, size: 32)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1951, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1951, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1951, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1951, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1951, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1951, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1951, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1951, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1951, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1951, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1951, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1951, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1951, file: !4, line: 70, baseType: !1967, size: 64, offset: 832)
!1967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1951, size: 64)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1951, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1951, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1951, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1951, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1951, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1951, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1951, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1951, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1951, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1951, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1951, file: !4, line: 93, baseType: !1967, size: 64, offset: 1344)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1951, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1951, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1951, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1951, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1983 = !DICompositeType(tag: DW_TAG_array_type, baseType: !181, elements: !1508)
!1984 = !DISubroutineType(types: !1985)
!1985 = !{null, !1949, !180, !180, !180, !1346}
!1986 = !DISubroutineType(types: !1987)
!1987 = !{null, !1949, !180, !180, !180, !1988}
!1988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1989, size: 64)
!1989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1945, line: 192, size: 192, elements: !1990)
!1990 = !{!1991, !1992, !1993, !1994}
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1989, file: !1945, line: 192, baseType: !70, size: 32)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1989, file: !1945, line: 192, baseType: !70, size: 32, offset: 32)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1989, file: !1945, line: 192, baseType: !53, size: 64, offset: 64)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1989, file: !1945, line: 192, baseType: !53, size: 64, offset: 128)
!1995 = !DICompositeType(tag: DW_TAG_array_type, baseType: !180, size: 640, elements: !1034)
!1996 = !DISubroutineType(types: !1997)
!1997 = !{null, !1949, !180, !180, !180}
!1998 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !353, line: 52, baseType: !1999)
!1999 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !585, line: 32, baseType: !2000)
!2000 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1945, line: 234, baseType: !2001)
!2001 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1989, size: 192, elements: !38)
!2002 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2003, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2004, nameTableKind: None)
!2003 = !DIFile(filename: "./lib/xmalloc.c", directory: "/home/mbarbar/clone/coreutils")
!2004 = !{!55, !9, !53, !2005, !2007, !2009, !2011, !2013, !2015, !2017, !513, !218}
!2005 = !DISubroutineType(types: !2006)
!2006 = !{!53, !55, !55}
!2007 = !DISubroutineType(types: !2008)
!2008 = !{!53, !53, !55, !55}
!2009 = !DISubroutineType(types: !2010)
!2010 = !{!53, !53, !714, !55}
!2011 = !DISubroutineType(types: !2012)
!2012 = !{!9, !55}
!2013 = !DISubroutineType(types: !2014)
!2014 = !{!53, !55}
!2015 = !DISubroutineType(types: !2016)
!2016 = !{!53, !53, !55}
!2017 = !DISubroutineType(types: !2018)
!2018 = !{!53, !53, !714}
!2019 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2020, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2021, nameTableKind: None)
!2020 = !DIFile(filename: "./lib/xalloc-die.c", directory: "/home/mbarbar/clone/coreutils")
!2021 = !{!200, !778}
!2022 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2023, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2024, retainedTypes: !2033, nameTableKind: None)
!2023 = !DIFile(filename: "./lib/xstrtoul.c", directory: "/home/mbarbar/clone/coreutils")
!2024 = !{!2025}
!2025 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "strtol_error", file: !2026, line: 26, baseType: !70, size: 32, elements: !2027)
!2026 = !DIFile(filename: "./lib/xstrtol.h", directory: "/home/mbarbar/clone/coreutils")
!2027 = !{!2028, !2029, !2030, !2031, !2032}
!2028 = !DIEnumerator(name: "LONGINT_OK", value: 0, isUnsigned: true)
!2029 = !DIEnumerator(name: "LONGINT_OVERFLOW", value: 1, isUnsigned: true)
!2030 = !DIEnumerator(name: "LONGINT_INVALID_SUFFIX_CHAR", value: 2, isUnsigned: true)
!2031 = !DIEnumerator(name: "LONGINT_INVALID_SUFFIX_CHAR_WITH_OVERFLOW", value: 3, isUnsigned: true)
!2032 = !DIEnumerator(name: "LONGINT_INVALID", value: 4, isUnsigned: true)
!2033 = !{!7, !33, !2034, !9, !184, !57, !2036, !180, !556, !181, !1110, !10, !2038, !2040}
!2034 = !DISubroutineType(types: !2035)
!2035 = !{!2036, !180, !184, !7, !2037, !180}
!2036 = !DIDerivedType(tag: DW_TAG_typedef, name: "strtol_error", file: !2026, line: 39, baseType: !2025)
!2037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !57, size: 64)
!2038 = !DISubroutineType(types: !2039)
!2039 = !{!2036, !2037, !7}
!2040 = !DISubroutineType(types: !2041)
!2041 = !{!2036, !2037, !7, !7}
!2042 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2043, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2044, nameTableKind: None)
!2043 = !DIFile(filename: "./lib/xvasprintf.c", directory: "/home/mbarbar/clone/coreutils")
!2044 = !{!9, !2045, !55, !180, !181, !7, !2054, !2056, !10}
!2045 = !DISubroutineType(types: !2046)
!2046 = !{!9, !180, !2047}
!2047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2048, size: 64)
!2048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !2043, size: 192, elements: !2049)
!2049 = !{!2050, !2051, !2052, !2053}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2048, file: !2043, baseType: !70, size: 32)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2048, file: !2043, baseType: !70, size: 32, offset: 32)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2048, file: !2043, baseType: !53, size: 64, offset: 64)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2048, file: !2043, baseType: !53, size: 64, offset: 128)
!2054 = !DISubroutineType(types: !2055)
!2055 = !{!9, !55, !2047}
!2056 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !353, line: 52, baseType: !2057)
!2057 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !585, line: 32, baseType: !2058)
!2058 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2043, line: 36, baseType: !2059)
!2059 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2048, size: 192, elements: !38)
!2060 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2061, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2062, nameTableKind: None)
!2061 = !DIFile(filename: "./lib/yesno.c", directory: "/home/mbarbar/clone/coreutils")
!2062 = !{!1331, !142, !9, !55, !694, !2063}
!2063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2064, size: 64)
!2064 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !2065)
!2065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !2066)
!2066 = !{!2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096}
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2065, file: !4, line: 51, baseType: !7, size: 32)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2065, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2065, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2065, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2065, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2065, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2065, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2065, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2065, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2065, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2065, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2065, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2065, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2065, file: !4, line: 70, baseType: !2081, size: 64, offset: 832)
!2081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 64)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2065, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2065, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2065, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2065, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2065, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2065, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2065, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2065, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2065, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2065, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2065, file: !4, line: 93, baseType: !2081, size: 64, offset: 1344)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2065, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2065, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2065, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2065, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!2097 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2098, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2099, nameTableKind: None)
!2098 = !DIFile(filename: "./lib/fflush.c", directory: "/home/mbarbar/clone/coreutils")
!2099 = !{!53, !2100, !2136, !2103, !7}
!2100 = !DISubroutineType(types: !2101)
!2101 = !{!7, !2102}
!2102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 64)
!2103 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !2104)
!2104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !2105)
!2105 = !{!2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135}
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2104, file: !4, line: 51, baseType: !7, size: 32)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2104, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2104, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2104, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2104, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2104, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2104, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2104, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2104, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2104, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2104, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2104, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2104, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2104, file: !4, line: 70, baseType: !2120, size: 64, offset: 832)
!2120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 64)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2104, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2104, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2104, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2104, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2104, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2104, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2104, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2104, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2104, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2104, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2104, file: !4, line: 93, baseType: !2120, size: 64, offset: 1344)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2104, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2104, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2104, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2104, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!2136 = !DISubroutineType(types: !2137)
!2137 = !{null, !2102}
!2138 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2139, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2140, nameTableKind: None)
!2139 = !DIFile(filename: "./lib/freadahead.c", directory: "/home/mbarbar/clone/coreutils")
!2140 = !{!2141, !2144, !9, !7}
!2141 = !DISubroutineType(types: !2142)
!2142 = !{!55, !2143}
!2143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2144, size: 64)
!2144 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !2145)
!2145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !2146)
!2146 = !{!2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176}
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2145, file: !4, line: 51, baseType: !7, size: 32)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2145, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2145, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2145, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2145, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2145, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2145, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2145, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2145, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2145, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2145, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2145, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2145, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2145, file: !4, line: 70, baseType: !2161, size: 64, offset: 832)
!2161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 64)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2145, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2145, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2145, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2145, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2145, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2145, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2145, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2145, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2145, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2145, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2145, file: !4, line: 93, baseType: !2161, size: 64, offset: 1344)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2145, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2145, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2145, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2145, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!2177 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2178, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2179, nameTableKind: None)
!2178 = !DIFile(filename: "./lib/fseeko.c", directory: "/home/mbarbar/clone/coreutils")
!2179 = !{!53, !2180, !2183, !9, !352, !7, !44}
!2180 = !DISubroutineType(types: !2181)
!2181 = !{!7, !2182, !352, !7}
!2182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2183, size: 64)
!2183 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !2184)
!2184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !2185)
!2185 = !{!2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2184, file: !4, line: 51, baseType: !7, size: 32)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2184, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2184, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2184, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2184, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2184, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2184, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2184, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2184, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2184, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2184, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2184, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2184, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2184, file: !4, line: 70, baseType: !2200, size: 64, offset: 832)
!2200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 64)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2184, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2184, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2184, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2184, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2184, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2184, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2184, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2184, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2184, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2184, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2184, file: !4, line: 93, baseType: !2200, size: 64, offset: 1344)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2184, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2184, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2184, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2184, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!2216 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2217, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2218, nameTableKind: None)
!2217 = !DIFile(filename: "./lib/mbrtowc.c", directory: "/home/mbarbar/clone/coreutils")
!2218 = !{!55, !2219, !1127, !556, !181}
!2219 = !DISubroutineType(types: !2220)
!2220 = !{!55, !2221, !180, !55, !2222}
!2221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64)
!2222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2223, size: 64)
!2223 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !1113, line: 6, baseType: !2224)
!2224 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !1115, line: 21, baseType: !2225)
!2225 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1115, line: 13, size: 64, elements: !2226)
!2226 = !{!2227, !2228}
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2225, file: !1115, line: 15, baseType: !7, size: 32)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !2225, file: !1115, line: 20, baseType: !2229, size: 32, offset: 32)
!2229 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2225, file: !1115, line: 16, size: 32, elements: !2230)
!2230 = !{!2231, !2232}
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !2229, file: !1115, line: 18, baseType: !70, size: 32)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !2229, file: !1115, line: 19, baseType: !1124, size: 32)
!2233 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2234, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2235, nameTableKind: None)
!2234 = !DIFile(filename: "./lib/acl-internal.c", directory: "/home/mbarbar/clone/coreutils")
!2235 = !{!2236, !2242, !7, !2245, !2246, !2238}
!2236 = !DISubroutineType(types: !2237)
!2237 = !{!7, !2238}
!2238 = !DIDerivedType(tag: DW_TAG_typedef, name: "acl_t", file: !2239, line: 40, baseType: !2240)
!2239 = !DIFile(filename: "/usr/include/sys/acl.h", directory: "")
!2240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2241, size: 64)
!2241 = !DICompositeType(tag: DW_TAG_structure_type, name: "__acl_ext", file: !2239, line: 32, flags: DIFlagFwdDecl)
!2242 = !DIDerivedType(tag: DW_TAG_typedef, name: "acl_entry_t", file: !2239, line: 41, baseType: !2243)
!2243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2244, size: 64)
!2244 = !DICompositeType(tag: DW_TAG_structure_type, name: "__acl_entry_ext", file: !2239, line: 33, flags: DIFlagFwdDecl)
!2245 = !DIDerivedType(tag: DW_TAG_typedef, name: "acl_tag_t", file: !2239, line: 37, baseType: !7)
!2246 = !DISubroutineType(types: !2247)
!2247 = !{null, !2248}
!2248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2249, size: 64)
!2249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !2250, line: 260, size: 256, elements: !2251)
!2250 = !DIFile(filename: "./lib/acl-internal.h", directory: "/home/mbarbar/clone/coreutils")
!2251 = !{!2252, !2253, !2254, !2255}
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2249, file: !2250, line: 261, baseType: !139, size: 32)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "acl", scope: !2249, file: !2250, line: 264, baseType: !2238, size: 64, offset: 64)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "default_acl", scope: !2249, file: !2250, line: 266, baseType: !2238, size: 64, offset: 128)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "acls_not_supported", scope: !2249, file: !2250, line: 268, baseType: !142, size: 8, offset: 192)
!2256 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2257, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2258, nameTableKind: None)
!2257 = !DIFile(filename: "./lib/get-permissions.c", directory: "/home/mbarbar/clone/coreutils")
!2258 = !{!53, !2259, !139, !2238, !7}
!2259 = !DISubroutineType(types: !2260)
!2260 = !{!7, !180, !7, !139, !2261}
!2261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2262, size: 64)
!2262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !2250, line: 260, size: 256, elements: !2263)
!2263 = !{!2264, !2265, !2266, !2267}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2262, file: !2250, line: 261, baseType: !139, size: 32)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "acl", scope: !2262, file: !2250, line: 264, baseType: !2238, size: 64, offset: 64)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "default_acl", scope: !2262, file: !2250, line: 266, baseType: !2238, size: 64, offset: 128)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "acls_not_supported", scope: !2262, file: !2250, line: 268, baseType: !142, size: 8, offset: 192)
!2268 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2269, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2270, nameTableKind: None)
!2269 = !DIFile(filename: "./lib/set-permissions.c", directory: "/home/mbarbar/clone/coreutils")
!2270 = !{!53, !1521, !2271, !142, !7, !139, !2280, !2238}
!2271 = !DISubroutineType(types: !2272)
!2272 = !{!7, !2273, !180, !7}
!2273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2274, size: 64)
!2274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !2250, line: 260, size: 256, elements: !2275)
!2275 = !{!2276, !2277, !2278, !2279}
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2274, file: !2250, line: 261, baseType: !139, size: 32)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "acl", scope: !2274, file: !2250, line: 264, baseType: !2238, size: 64, offset: 64)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "default_acl", scope: !2274, file: !2250, line: 266, baseType: !2238, size: 64, offset: 128)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "acls_not_supported", scope: !2274, file: !2250, line: 268, baseType: !142, size: 8, offset: 192)
!2280 = !DISubroutineType(types: !2281)
!2281 = !{!7, !2273, !180, !7, !7, !406, !406}
!2282 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2283, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2284, nameTableKind: None)
!2283 = !DIFile(filename: "./lib/bitrotate.c", directory: "/home/mbarbar/clone/coreutils")
!2284 = !{!70, !2285, !2287, !2289, !2291, !2295}
!2285 = !DISubroutineType(types: !2286)
!2286 = !{!1486, !1486, !7}
!2287 = !DISubroutineType(types: !2288)
!2288 = !{!1491, !1491, !7}
!2289 = !DISubroutineType(types: !2290)
!2290 = !{!55, !55, !7}
!2291 = !DISubroutineType(types: !2292)
!2292 = !{!2293, !2293, !7}
!2293 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !1487, line: 25, baseType: !2294)
!2294 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !30, line: 40, baseType: !33)
!2295 = !DISubroutineType(types: !2296)
!2296 = !{!2297, !2297, !7}
!2297 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !1487, line: 24, baseType: !2298)
!2298 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !30, line: 38, baseType: !556)
!2299 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2300, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2301, nameTableKind: None)
!2300 = !DIFile(filename: "./lib/c-strcasecmp.c", directory: "/home/mbarbar/clone/coreutils")
!2301 = !{!554, !1865, !556, !555}
!2302 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2303, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2304, nameTableKind: None)
!2303 = !DIFile(filename: "./lib/close-stream.c", directory: "/home/mbarbar/clone/coreutils")
!2304 = !{!2305, !2341, !7}
!2305 = !DISubroutineType(types: !2306)
!2306 = !{!7, !2307}
!2307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2308, size: 64)
!2308 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !2309)
!2309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !2310)
!2310 = !{!2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340}
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2309, file: !4, line: 51, baseType: !7, size: 32)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2309, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2309, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2309, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2309, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2309, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2309, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2309, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2309, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2309, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2309, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2309, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2309, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2309, file: !4, line: 70, baseType: !2325, size: 64, offset: 832)
!2325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2309, size: 64)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2309, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2309, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2309, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2309, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2309, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2309, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2309, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2309, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2309, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2309, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2309, file: !4, line: 93, baseType: !2325, size: 64, offset: 1344)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2309, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2309, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2309, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2309, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!2341 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !142)
!2342 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2343, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2344, nameTableKind: None)
!2343 = !DIFile(filename: "./lib/opendir-safer.c", directory: "/home/mbarbar/clone/coreutils")
!2344 = !{!2345, !695, !7}
!2345 = !DISubroutineType(types: !2346)
!2346 = !{!695, !180}
!2347 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2348, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2349, nameTableKind: None)
!2348 = !DIFile(filename: "./lib/gettime.c", directory: "/home/mbarbar/clone/coreutils")
!2349 = !{!2350, !2357}
!2350 = !DISubroutineType(types: !2351)
!2351 = !{null, !2352}
!2352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2353, size: 64)
!2353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !291, line: 9, size: 128, elements: !2354)
!2354 = !{!2355, !2356}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2353, file: !291, line: 11, baseType: !294, size: 64)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2353, file: !291, line: 12, baseType: !296, size: 64, offset: 64)
!2357 = !DISubroutineType(types: !2358)
!2358 = !{!2353}
!2359 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2360, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2361, nameTableKind: None)
!2360 = !DIFile(filename: "./lib/hard-locale.c", directory: "/home/mbarbar/clone/coreutils")
!2361 = !{!256, !142, !180}
!2362 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2363, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2364, nameTableKind: None)
!2363 = !DIFile(filename: "./lib/hash-pjw.c", directory: "/home/mbarbar/clone/coreutils")
!2364 = !{!635, !180, !55, !181}
!2365 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2366, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2367, nameTableKind: None)
!2366 = !DIFile(filename: "./lib/localcharset.c", directory: "/home/mbarbar/clone/coreutils")
!2367 = !{!53, !2368, !180}
!2368 = !DISubroutineType(types: !677)
!2369 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2370, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2371, nameTableKind: None)
!2370 = !DIFile(filename: "./lib/dirchownmod.c", directory: "/home/mbarbar/clone/coreutils")
!2371 = !{!127, !129, !139, !2372, !7, !140, !128, !130}
!2372 = !DISubroutineType(types: !2373)
!2373 = !{!7, !7, !180, !139, !127, !129, !139, !139}
!2374 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2375, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2376, nameTableKind: None)
!2375 = !DIFile(filename: "./lib/openat-safer.c", directory: "/home/mbarbar/clone/coreutils")
!2376 = !{!2377, !139, !2379}
!2377 = !DISubroutineType(types: !2378)
!2378 = !{!7, !7, !180, !7}
!2379 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !585, line: 14, baseType: !2380)
!2380 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2375, line: 35, baseType: !2381)
!2381 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2382, size: 192, elements: !38)
!2382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !2375, line: 35, size: 192, elements: !2383)
!2383 = !{!2384, !2385, !2386, !2387}
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2382, file: !2375, line: 35, baseType: !70, size: 32)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2382, file: !2375, line: 35, baseType: !70, size: 32, offset: 32)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2382, file: !2375, line: 35, baseType: !53, size: 64, offset: 64)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2382, file: !2375, line: 35, baseType: !53, size: 64, offset: 128)
!2388 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2389, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2390, nameTableKind: None)
!2389 = !DIFile(filename: "./lib/randint.c", directory: "/home/mbarbar/clone/coreutils")
!2390 = !{!2391, !2393, !2398, !2402, !2404, !2406, !2410, !55, !2412, !2413, !2415, !7, !2417}
!2391 = !DISubroutineType(types: !2392)
!2392 = !{!2393, !2398}
!2393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2394, size: 64)
!2394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "randint_source", file: !2395, line: 54, size: 192, elements: !2396)
!2395 = !DIFile(filename: "lib/randint.c", directory: "/home/mbarbar/clone/coreutils")
!2396 = !{!2397, !2401, !2403}
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2394, file: !2395, line: 57, baseType: !2398, size: 64)
!2398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2399, size: 64)
!2399 = !DICompositeType(tag: DW_TAG_structure_type, name: "randread_source", file: !2400, line: 25, flags: DIFlagFwdDecl)
!2400 = !DIFile(filename: "./lib/randread.h", directory: "/home/mbarbar/clone/coreutils")
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "randnum", scope: !2394, file: !2395, line: 64, baseType: !2402, size: 64, offset: 64)
!2402 = !DIDerivedType(tag: DW_TAG_typedef, name: "randint", file: !1202, line: 30, baseType: !546)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "randmax", scope: !2394, file: !2395, line: 65, baseType: !2402, size: 64, offset: 128)
!2404 = !DISubroutineType(types: !2405)
!2405 = !{!2393, !180, !55}
!2406 = !DISubroutineType(types: !2407)
!2407 = !{!2398, !2408}
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2409, size: 64)
!2409 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2394)
!2410 = !DISubroutineType(types: !2411)
!2411 = !{!2402, !2393, !2402}
!2412 = !DICompositeType(tag: DW_TAG_array_type, baseType: !556, size: 64, elements: !728)
!2413 = !DISubroutineType(types: !2414)
!2414 = !{null, !2393}
!2415 = !DISubroutineType(types: !2416)
!2416 = !{!7, !2393}
!2417 = !DISubroutineType(types: !2418)
!2418 = !{!2402, !2402}
!2419 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2420, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2421, nameTableKind: None)
!2420 = !DIFile(filename: "./lib/randread.c", directory: "/home/mbarbar/clone/coreutils")
!2421 = !{!55, !2422, !2429, !2424, !2496, !2464, !2498, !515, !2500, !2502, !2504, !2465, !778, !7, !2506, !9, !694, !111, !127, !2508, !2511, !2514}
!2422 = !DISubroutineType(types: !2423)
!2423 = !{!2424, !180, !55}
!2424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2425, size: 64)
!2425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "randread_source", file: !2426, line: 79, size: 33216, elements: !2427)
!2426 = !DIFile(filename: "lib/randread.c", directory: "/home/mbarbar/clone/coreutils")
!2427 = !{!2428, !2463, !2467, !2468}
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2425, file: !2426, line: 83, baseType: !2429, size: 64)
!2429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2430, size: 64)
!2430 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !2431)
!2431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !2432)
!2432 = !{!2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462}
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2431, file: !4, line: 51, baseType: !7, size: 32)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2431, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2431, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2431, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2431, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2431, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2431, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2431, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2431, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2431, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2431, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2431, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2431, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2431, file: !4, line: 70, baseType: !2447, size: 64, offset: 832)
!2447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2431, size: 64)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2431, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2431, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2431, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2431, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2431, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2431, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2431, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2431, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2431, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2431, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2431, file: !4, line: 93, baseType: !2447, size: 64, offset: 1344)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2431, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2431, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2431, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2431, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !2425, file: !2426, line: 90, baseType: !2464, size: 64, offset: 64)
!2464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2465, size: 64)
!2465 = !DISubroutineType(types: !2466)
!2466 = !{null, !515}
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "handler_arg", scope: !2425, file: !2426, line: 91, baseType: !515, size: 64, offset: 128)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2425, file: !2426, line: 117, baseType: !2469, size: 33024, offset: 192)
!2469 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2425, file: !2426, line: 96, size: 33024, elements: !2470)
!2470 = !{!2471, !2472}
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !2469, file: !2426, line: 99, baseType: !338, size: 32768)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "isaac", scope: !2469, file: !2426, line: 116, baseType: !2473, size: 33024)
!2473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isaac", file: !2426, line: 102, size: 33024, elements: !2474)
!2474 = !{!2475, !2476, !2488}
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "buffered", scope: !2473, file: !2426, line: 105, baseType: !55, size: 64)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2473, file: !2426, line: 108, baseType: !2477, size: 16576, offset: 64)
!2477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isaac_state", file: !2478, line: 56, size: 16576, elements: !2479)
!2478 = !DIFile(filename: "./lib/rand-isaac.h", directory: "/home/mbarbar/clone/coreutils")
!2479 = !{!2480, !2485, !2486, !2487}
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !2477, file: !2478, line: 58, baseType: !2481, size: 16384)
!2481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2482, size: 16384, elements: !648)
!2482 = !DIDerivedType(tag: DW_TAG_typedef, name: "isaac_word", file: !2478, line: 44, baseType: !2483)
!2483 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least64_t", file: !547, line: 52, baseType: !2484)
!2484 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint_least64_t", file: !30, line: 59, baseType: !1488)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2477, file: !2478, line: 59, baseType: !2482, size: 64, offset: 16384)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2477, file: !2478, line: 59, baseType: !2482, size: 64, offset: 16448)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !2477, file: !2478, line: 59, baseType: !2482, size: 64, offset: 16512)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2473, file: !2426, line: 115, baseType: !2489, size: 16384, offset: 16640)
!2489 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2473, file: !2426, line: 111, size: 16384, elements: !2490)
!2490 = !{!2491, !2492}
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !2489, file: !2426, line: 113, baseType: !2481, size: 16384)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2489, file: !2426, line: 114, baseType: !2493, size: 16384)
!2493 = !DICompositeType(tag: DW_TAG_array_type, baseType: !556, size: 16384, elements: !2494)
!2494 = !{!2495}
!2495 = !DISubrange(count: 2048)
!2496 = !DISubroutineType(types: !2497)
!2497 = !{null, !2424, !2464}
!2498 = !DISubroutineType(types: !2499)
!2499 = !{null, !2424, !515}
!2500 = !DISubroutineType(types: !2501)
!2501 = !{null, !2424, !53, !55}
!2502 = !DISubroutineType(types: !2503)
!2503 = !{!7, !2424}
!2504 = !DISubroutineType(types: !2505)
!2505 = !{!2424, !2429, !515}
!2506 = !DISubroutineType(types: !2507)
!2507 = !{null, !53, !55, !55}
!2508 = !DISubroutineType(types: !2509)
!2509 = !{null, !2424, !2510, !55}
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 64)
!2511 = !DISubroutineType(types: !2512)
!2512 = !{null, !2513, !53, !55}
!2513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2473, size: 64)
!2514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2482, size: 64)
!2515 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2516, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2517, nameTableKind: None)
!2516 = !DIFile(filename: "./lib/rand-isaac.c", directory: "/home/mbarbar/clone/coreutils")
!2517 = !{!2482, !2518, !2514, !2527, !7, !2481, !2529, !515, !180, !2531, !2532, !2533}
!2518 = !DISubroutineType(types: !2519)
!2519 = !{null, !2520, !2514}
!2520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2521, size: 64)
!2521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isaac_state", file: !2478, line: 56, size: 16576, elements: !2522)
!2522 = !{!2523, !2524, !2525, !2526}
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !2521, file: !2478, line: 58, baseType: !2481, size: 16384)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2521, file: !2478, line: 59, baseType: !2482, size: 64, offset: 16384)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2521, file: !2478, line: 59, baseType: !2482, size: 64, offset: 16448)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !2521, file: !2478, line: 59, baseType: !2482, size: 64, offset: 16512)
!2527 = !DISubroutineType(types: !2528)
!2528 = !{null, !2520}
!2529 = !DISubroutineType(types: !2530)
!2530 = !{!2482, !2531, !2482}
!2531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2532, size: 64)
!2532 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2482)
!2533 = !DISubroutineType(types: !2534)
!2534 = !{!2482, !2482}
!2535 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2536, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2537, nameTableKind: None)
!2536 = !DIFile(filename: "./lib/dup-safer.c", directory: "/home/mbarbar/clone/coreutils")
!2537 = !{!1789}
!2538 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2539, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2540, nameTableKind: None)
!2539 = !DIFile(filename: "./lib/xsize.c", directory: "/home/mbarbar/clone/coreutils")
!2540 = !{!2541, !55, !1535, !2543}
!2541 = !DISubroutineType(types: !2542)
!2542 = !{!55, !55, !55}
!2543 = !DISubroutineType(types: !2544)
!2544 = !{!55, !55, !55, !55, !55}
!2545 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2546, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2547, nameTableKind: None)
!2546 = !DIFile(filename: "./lib/fclose.c", directory: "/home/mbarbar/clone/coreutils")
!2547 = !{!2548, !7}
!2548 = !DISubroutineType(types: !2549)
!2549 = !{!7, !2550}
!2550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2551, size: 64)
!2551 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !2552)
!2552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !2553)
!2553 = !{!2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583}
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2552, file: !4, line: 51, baseType: !7, size: 32)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2552, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2552, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2552, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2552, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2552, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2552, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2552, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2552, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2552, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2552, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2552, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2552, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2552, file: !4, line: 70, baseType: !2568, size: 64, offset: 832)
!2568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2552, size: 64)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2552, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2552, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2552, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2552, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2552, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2552, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2552, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2552, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2552, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2552, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2552, file: !4, line: 93, baseType: !2568, size: 64, offset: 1344)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2552, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2552, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2552, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2552, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!2584 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2585, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2586, nameTableKind: None)
!2585 = !DIFile(filename: "./lib/acl-errno-valid.c", directory: "/home/mbarbar/clone/coreutils")
!2586 = !{!256}
!2587 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2588, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2589, nameTableKind: None)
!2588 = !DIFile(filename: "./lib/c-ctype.c", directory: "/home/mbarbar/clone/coreutils")
!2589 = !{!256, !1789}
!2590 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2591, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2592, nameTableKind: None)
!2591 = !DIFile(filename: "./lib/fopen-safer.c", directory: "/home/mbarbar/clone/coreutils")
!2592 = !{!2593, !2595, !7}
!2593 = !DISubroutineType(types: !2594)
!2594 = !{!2595, !180, !180}
!2595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2596, size: 64)
!2596 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !2597)
!2597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !2598)
!2598 = !{!2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628}
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2597, file: !4, line: 51, baseType: !7, size: 32)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2597, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2597, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2597, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2597, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2597, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2597, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2597, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2597, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2597, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2597, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2597, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2597, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2597, file: !4, line: 70, baseType: !2613, size: 64, offset: 832)
!2613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2597, size: 64)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2597, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2597, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2597, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2597, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2597, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2597, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2597, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2597, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2597, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2597, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2597, file: !4, line: 93, baseType: !2613, size: 64, offset: 1344)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2597, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2597, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2597, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2597, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!2629 = !{!"clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)"}
!2630 = !{i32 2, !"ctir", i32 1}
!2631 = !{i32 2, !"Dwarf Version", i32 4}
!2632 = !{i32 2, !"Debug Info Version", i32 3}
!2633 = !{i32 1, !"wchar_size", i32 4}
!2634 = distinct !DISubprogram(name: "usage", scope: !66, file: !66, line: 621, type: !125, scopeLine: 622, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !209)
!2635 = !{!2636, !2636, i64 0}
!2636 = !{!"int", !2637, i64 0}
!2637 = !{!"omnipotent char", !2638, i64 0}
!2638 = !{!"Simple C/C++ TBAA"}
!2639 = !DILocalVariable(name: "status", arg: 1, scope: !2634, file: !66, line: 621, type: !7)
!2640 = !DILocation(line: 621, column: 12, scope: !2634)
!2641 = !DILocation(line: 623, column: 7, scope: !2642)
!2642 = distinct !DILexicalBlock(scope: !2634, file: !66, line: 623, column: 7)
!2643 = !DILocation(line: 623, column: 14, scope: !2642)
!2644 = !DILocation(line: 623, column: 7, scope: !2634)
!2645 = !DILocation(line: 624, column: 5, scope: !2642)
!2646 = !DILocation(line: 624, column: 5, scope: !2647)
!2647 = distinct !DILexicalBlock(scope: !2642, file: !66, line: 624, column: 5)
!2648 = !{!2649, !2649, i64 0}
!2649 = !{!"any pointer", !2637, i64 0}
!2650 = !DILocation(line: 627, column: 15, scope: !2651)
!2651 = distinct !DILexicalBlock(scope: !2642, file: !66, line: 626, column: 5)
!2652 = !DILocation(line: 633, column: 15, scope: !2651)
!2653 = !DILocation(line: 633, column: 29, scope: !2651)
!2654 = !DILocation(line: 633, column: 43, scope: !2651)
!2655 = !DILocation(line: 633, column: 57, scope: !2651)
!2656 = !DILocation(line: 627, column: 7, scope: !2651)
!2657 = !DILocation(line: 634, column: 7, scope: !2651)
!2658 = !DILocation(line: 646, column: 7, scope: !2651)
!2659 = !DILocation(line: 648, column: 7, scope: !2651)
!2660 = !DILocation(line: 657, column: 7, scope: !2651)
!2661 = !DILocation(line: 665, column: 7, scope: !2651)
!2662 = !DILocation(line: 675, column: 7, scope: !2651)
!2663 = !DILocation(line: 683, column: 7, scope: !2651)
!2664 = !DILocation(line: 684, column: 7, scope: !2651)
!2665 = !DILocation(line: 685, column: 7, scope: !2651)
!2666 = !DILocation(line: 686, column: 7, scope: !2651)
!2667 = !DILocation(line: 688, column: 9, scope: !2634)
!2668 = !DILocation(line: 688, column: 3, scope: !2634)
!2669 = distinct !DISubprogram(name: "emit_mandatory_arg_note", scope: !207, file: !207, line: 585, type: !200, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!2670 = !DILocation(line: 587, column: 3, scope: !2669)
!2671 = !DILocation(line: 590, column: 1, scope: !2669)
!2672 = distinct !DISubprogram(name: "emit_backup_suffix_note", scope: !207, file: !207, line: 613, type: !200, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!2673 = !DILocation(line: 615, column: 3, scope: !2672)
!2674 = !DILocation(line: 622, column: 3, scope: !2672)
!2675 = !DILocation(line: 628, column: 1, scope: !2672)
!2676 = !DILocalVariable(name: "program", arg: 1, scope: !208, file: !207, line: 631, type: !180)
!2677 = !DILocation(line: 631, column: 34, scope: !208)
!2678 = !DILocalVariable(name: "infomap", scope: !208, file: !207, line: 633, type: !204)
!2679 = !DILocation(line: 633, column: 67, scope: !208)
!2680 = !DILocalVariable(name: "node", scope: !208, file: !207, line: 643, type: !180)
!2681 = !DILocation(line: 643, column: 15, scope: !208)
!2682 = !DILocation(line: 643, column: 22, scope: !208)
!2683 = !DILocalVariable(name: "map_prog", scope: !208, file: !207, line: 644, type: !215)
!2684 = !DILocation(line: 644, column: 25, scope: !208)
!2685 = !DILocation(line: 644, column: 36, scope: !208)
!2686 = !DILocation(line: 646, column: 3, scope: !208)
!2687 = !DILocation(line: 646, column: 10, scope: !208)
!2688 = !DILocation(line: 646, column: 20, scope: !208)
!2689 = !{!2690, !2649, i64 0}
!2690 = !{!"infomap", !2649, i64 0, !2649, i64 8}
!2691 = !DILocation(line: 646, column: 28, scope: !208)
!2692 = !DILocation(line: 646, column: 33, scope: !208)
!2693 = !DILocation(line: 646, column: 31, scope: !208)
!2694 = !DILocation(line: 0, scope: !208)
!2695 = !DILocation(line: 647, column: 13, scope: !208)
!2696 = distinct !{!2696, !2686, !2695}
!2697 = !DILocation(line: 649, column: 7, scope: !2698)
!2698 = distinct !DILexicalBlock(scope: !208, file: !207, line: 649, column: 7)
!2699 = !DILocation(line: 649, column: 17, scope: !2698)
!2700 = !{!2690, !2649, i64 8}
!2701 = !DILocation(line: 649, column: 7, scope: !208)
!2702 = !DILocation(line: 650, column: 12, scope: !2698)
!2703 = !DILocation(line: 650, column: 22, scope: !2698)
!2704 = !DILocation(line: 650, column: 10, scope: !2698)
!2705 = !DILocation(line: 650, column: 5, scope: !2698)
!2706 = !DILocation(line: 652, column: 11, scope: !208)
!2707 = !DILocation(line: 652, column: 3, scope: !208)
!2708 = !DILocalVariable(name: "lc_messages", scope: !208, file: !207, line: 656, type: !180)
!2709 = !DILocation(line: 656, column: 15, scope: !208)
!2710 = !DILocation(line: 656, column: 29, scope: !208)
!2711 = !DILocation(line: 657, column: 7, scope: !2712)
!2712 = distinct !DILexicalBlock(scope: !208, file: !207, line: 657, column: 7)
!2713 = !DILocation(line: 657, column: 19, scope: !2712)
!2714 = !DILocation(line: 657, column: 22, scope: !2712)
!2715 = !DILocation(line: 657, column: 7, scope: !208)
!2716 = !DILocation(line: 663, column: 7, scope: !2717)
!2717 = distinct !DILexicalBlock(scope: !2712, file: !207, line: 658, column: 5)
!2718 = !DILocation(line: 665, column: 5, scope: !2717)
!2719 = !DILocation(line: 666, column: 11, scope: !208)
!2720 = !DILocation(line: 667, column: 24, scope: !208)
!2721 = !DILocation(line: 666, column: 3, scope: !208)
!2722 = !DILocation(line: 668, column: 11, scope: !208)
!2723 = !DILocation(line: 669, column: 11, scope: !208)
!2724 = !DILocation(line: 669, column: 17, scope: !208)
!2725 = !DILocation(line: 669, column: 25, scope: !208)
!2726 = !DILocation(line: 669, column: 22, scope: !208)
!2727 = !DILocation(line: 668, column: 3, scope: !208)
!2728 = !DILocation(line: 670, column: 1, scope: !208)
!2729 = distinct !DISubprogram(name: "main", scope: !66, file: !66, line: 793, type: !182, scopeLine: 794, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !209)
!2730 = !DILocalVariable(name: "argc", arg: 1, scope: !2729, file: !66, line: 793, type: !7)
!2731 = !DILocation(line: 793, column: 11, scope: !2729)
!2732 = !DILocalVariable(name: "argv", arg: 2, scope: !2729, file: !66, line: 793, type: !184)
!2733 = !DILocation(line: 793, column: 24, scope: !2729)
!2734 = !DILocalVariable(name: "optc", scope: !2729, file: !66, line: 795, type: !7)
!2735 = !DILocation(line: 795, column: 7, scope: !2729)
!2736 = !DILocalVariable(name: "exit_status", scope: !2729, file: !66, line: 796, type: !7)
!2737 = !DILocation(line: 796, column: 7, scope: !2729)
!2738 = !DILocalVariable(name: "specified_mode", scope: !2729, file: !66, line: 797, type: !180)
!2739 = !DILocation(line: 797, column: 15, scope: !2729)
!2740 = !DILocalVariable(name: "make_backups", scope: !2729, file: !66, line: 798, type: !142)
!2741 = !DILocation(line: 798, column: 8, scope: !2729)
!2742 = !{!2743, !2743, i64 0}
!2743 = !{!"_Bool", !2637, i64 0}
!2744 = !DILocalVariable(name: "backup_suffix", scope: !2729, file: !66, line: 799, type: !180)
!2745 = !DILocation(line: 799, column: 15, scope: !2729)
!2746 = !DILocalVariable(name: "version_control_string", scope: !2729, file: !66, line: 800, type: !9)
!2747 = !DILocation(line: 800, column: 9, scope: !2729)
!2748 = !DILocalVariable(name: "mkdir_and_install", scope: !2729, file: !66, line: 801, type: !142)
!2749 = !DILocation(line: 801, column: 8, scope: !2729)
!2750 = !DILocalVariable(name: "x", scope: !2729, file: !66, line: 802, type: !132)
!2751 = !DILocation(line: 802, column: 21, scope: !2729)
!2752 = !DILocalVariable(name: "target_directory", scope: !2729, file: !66, line: 803, type: !180)
!2753 = !DILocation(line: 803, column: 15, scope: !2729)
!2754 = !DILocalVariable(name: "no_target_directory", scope: !2729, file: !66, line: 804, type: !142)
!2755 = !DILocation(line: 804, column: 8, scope: !2729)
!2756 = !DILocalVariable(name: "n_files", scope: !2729, file: !66, line: 805, type: !7)
!2757 = !DILocation(line: 805, column: 7, scope: !2729)
!2758 = !DILocalVariable(name: "file", scope: !2729, file: !66, line: 806, type: !184)
!2759 = !DILocation(line: 806, column: 10, scope: !2729)
!2760 = !DILocalVariable(name: "strip_program_specified", scope: !2729, file: !66, line: 807, type: !142)
!2761 = !DILocation(line: 807, column: 8, scope: !2729)
!2762 = !DILocalVariable(name: "scontext", scope: !2729, file: !66, line: 808, type: !180)
!2763 = !DILocation(line: 808, column: 15, scope: !2729)
!2764 = !DILocation(line: 810, column: 19, scope: !2729)
!2765 = !DILocation(line: 813, column: 21, scope: !2729)
!2766 = !DILocation(line: 813, column: 3, scope: !2729)
!2767 = !DILocation(line: 814, column: 3, scope: !2729)
!2768 = !DILocation(line: 815, column: 3, scope: !2729)
!2769 = !DILocation(line: 816, column: 3, scope: !2729)
!2770 = !DILocation(line: 818, column: 3, scope: !2729)
!2771 = !DILocation(line: 820, column: 3, scope: !2729)
!2772 = !DILocation(line: 822, column: 14, scope: !2729)
!2773 = !DILocation(line: 823, column: 14, scope: !2729)
!2774 = !DILocation(line: 824, column: 15, scope: !2729)
!2775 = !DILocation(line: 825, column: 11, scope: !2729)
!2776 = !DILocation(line: 826, column: 3, scope: !2729)
!2777 = !DILocation(line: 828, column: 3, scope: !2729)
!2778 = !DILocation(line: 828, column: 31, scope: !2729)
!2779 = !DILocation(line: 828, column: 37, scope: !2729)
!2780 = !DILocation(line: 828, column: 18, scope: !2729)
!2781 = !DILocation(line: 828, column: 16, scope: !2729)
!2782 = !DILocation(line: 829, column: 38, scope: !2729)
!2783 = !DILocation(line: 831, column: 15, scope: !2784)
!2784 = distinct !DILexicalBlock(scope: !2729, file: !66, line: 830, column: 5)
!2785 = !DILocation(line: 831, column: 7, scope: !2784)
!2786 = !DILocation(line: 834, column: 24, scope: !2787)
!2787 = distinct !DILexicalBlock(scope: !2784, file: !66, line: 832, column: 9)
!2788 = !DILocation(line: 835, column: 15, scope: !2789)
!2789 = distinct !DILexicalBlock(scope: !2787, file: !66, line: 835, column: 15)
!2790 = !DILocation(line: 835, column: 15, scope: !2787)
!2791 = !DILocation(line: 836, column: 38, scope: !2789)
!2792 = !DILocation(line: 836, column: 36, scope: !2789)
!2793 = !DILocation(line: 836, column: 13, scope: !2789)
!2794 = !DILocation(line: 837, column: 11, scope: !2787)
!2795 = !DILocation(line: 839, column: 11, scope: !2787)
!2796 = !DILocation(line: 841, column: 31, scope: !2787)
!2797 = !DILocation(line: 842, column: 11, scope: !2787)
!2798 = !DILocation(line: 844, column: 23, scope: !2787)
!2799 = !DILocation(line: 847, column: 11, scope: !2787)
!2800 = !DILocation(line: 849, column: 11, scope: !2787)
!2801 = !DILocation(line: 851, column: 36, scope: !2787)
!2802 = !DILocation(line: 851, column: 27, scope: !2787)
!2803 = !DILocation(line: 851, column: 25, scope: !2787)
!2804 = !DILocation(line: 852, column: 35, scope: !2787)
!2805 = !DILocation(line: 853, column: 11, scope: !2787)
!2806 = !DILocation(line: 855, column: 19, scope: !2787)
!2807 = !DILocation(line: 856, column: 11, scope: !2787)
!2808 = !DILocation(line: 858, column: 29, scope: !2787)
!2809 = !DILocation(line: 859, column: 11, scope: !2787)
!2810 = !DILocation(line: 861, column: 13, scope: !2787)
!2811 = !DILocation(line: 861, column: 21, scope: !2787)
!2812 = !{!2813, !2743, i64 46}
!2813 = !{!"cp_options", !2637, i64 0, !2637, i64 4, !2637, i64 8, !2637, i64 12, !2636, i64 16, !2743, i64 20, !2743, i64 21, !2743, i64 22, !2743, i64 23, !2743, i64 24, !2743, i64 25, !2743, i64 26, !2743, i64 27, !2743, i64 28, !2743, i64 29, !2743, i64 30, !2743, i64 31, !2743, i64 32, !2743, i64 33, !2743, i64 34, !2743, i64 35, !2743, i64 36, !2743, i64 37, !2743, i64 38, !2743, i64 39, !2743, i64 40, !2743, i64 41, !2743, i64 42, !2743, i64 43, !2743, i64 44, !2743, i64 45, !2743, i64 46, !2743, i64 47, !2743, i64 48, !2743, i64 49, !2636, i64 52, !2637, i64 56, !2649, i64 64, !2649, i64 72}
!2814 = !DILocation(line: 862, column: 11, scope: !2787)
!2815 = !DILocation(line: 864, column: 24, scope: !2787)
!2816 = !DILocation(line: 864, column: 22, scope: !2787)
!2817 = !DILocation(line: 865, column: 11, scope: !2787)
!2818 = !DILocation(line: 867, column: 28, scope: !2787)
!2819 = !DILocation(line: 867, column: 26, scope: !2787)
!2820 = !DILocation(line: 868, column: 11, scope: !2787)
!2821 = !DILocation(line: 870, column: 24, scope: !2787)
!2822 = !DILocation(line: 870, column: 22, scope: !2787)
!2823 = !DILocation(line: 871, column: 11, scope: !2787)
!2824 = !DILocation(line: 873, column: 13, scope: !2787)
!2825 = !DILocation(line: 873, column: 33, scope: !2787)
!2826 = !{!2813, !2743, i64 31}
!2827 = !DILocation(line: 874, column: 11, scope: !2787)
!2828 = !DILocation(line: 876, column: 24, scope: !2787)
!2829 = !DILocation(line: 877, column: 27, scope: !2787)
!2830 = !DILocation(line: 877, column: 25, scope: !2787)
!2831 = !DILocation(line: 878, column: 11, scope: !2787)
!2832 = !DILocation(line: 880, column: 15, scope: !2833)
!2833 = distinct !DILexicalBlock(scope: !2787, file: !66, line: 880, column: 15)
!2834 = !DILocation(line: 880, column: 15, scope: !2787)
!2835 = !DILocation(line: 881, column: 13, scope: !2833)
!2836 = !DILocation(line: 883, column: 30, scope: !2787)
!2837 = !DILocation(line: 883, column: 28, scope: !2787)
!2838 = !DILocation(line: 884, column: 11, scope: !2787)
!2839 = !DILocation(line: 886, column: 31, scope: !2787)
!2840 = !DILocation(line: 887, column: 11, scope: !2787)
!2841 = !DILocation(line: 890, column: 17, scope: !2842)
!2842 = distinct !DILexicalBlock(scope: !2787, file: !66, line: 890, column: 15)
!2843 = !DILocation(line: 890, column: 15, scope: !2787)
!2844 = !DILocation(line: 892, column: 28, scope: !2845)
!2845 = distinct !DILexicalBlock(scope: !2842, file: !66, line: 891, column: 13)
!2846 = !DILocation(line: 892, column: 15, scope: !2845)
!2847 = !DILocation(line: 894, column: 15, scope: !2845)
!2848 = !DILocation(line: 896, column: 13, scope: !2787)
!2849 = !DILocation(line: 896, column: 39, scope: !2787)
!2850 = !{!2813, !2743, i64 37}
!2851 = !DILocation(line: 897, column: 39, scope: !2787)
!2852 = !DILocation(line: 898, column: 11, scope: !2787)
!2853 = !DILocation(line: 900, column: 15, scope: !2854)
!2854 = distinct !DILexicalBlock(scope: !2787, file: !66, line: 900, column: 15)
!2855 = !DILocation(line: 900, column: 15, scope: !2787)
!2856 = !DILocation(line: 908, column: 43, scope: !2857)
!2857 = distinct !DILexicalBlock(scope: !2854, file: !66, line: 901, column: 13)
!2858 = !DILocation(line: 910, column: 19, scope: !2859)
!2859 = distinct !DILexicalBlock(scope: !2857, file: !66, line: 910, column: 19)
!2860 = !DILocation(line: 910, column: 19, scope: !2857)
!2861 = !DILocation(line: 911, column: 28, scope: !2859)
!2862 = !DILocation(line: 911, column: 26, scope: !2859)
!2863 = !DILocation(line: 911, column: 17, scope: !2859)
!2864 = !DILocation(line: 913, column: 19, scope: !2859)
!2865 = !DILocation(line: 913, column: 40, scope: !2859)
!2866 = !{!2813, !2743, i64 33}
!2867 = !DILocation(line: 914, column: 13, scope: !2857)
!2868 = !DILocation(line: 915, column: 20, scope: !2869)
!2869 = distinct !DILexicalBlock(scope: !2854, file: !66, line: 915, column: 20)
!2870 = !DILocation(line: 915, column: 20, scope: !2854)
!2871 = !DILocation(line: 918, column: 22, scope: !2872)
!2872 = distinct !DILexicalBlock(scope: !2869, file: !66, line: 916, column: 13)
!2873 = !DILocation(line: 917, column: 15, scope: !2872)
!2874 = !DILocation(line: 920, column: 13, scope: !2872)
!2875 = !DILocation(line: 921, column: 11, scope: !2787)
!2876 = !DILocation(line: 922, column: 9, scope: !2787)
!2877 = !DILocation(line: 923, column: 9, scope: !2787)
!2878 = !DILocation(line: 925, column: 11, scope: !2787)
!2879 = distinct !{!2879, !2777, !2880}
!2880 = !DILocation(line: 927, column: 5, scope: !2729)
!2881 = !DILocation(line: 930, column: 7, scope: !2882)
!2882 = distinct !DILexicalBlock(scope: !2729, file: !66, line: 930, column: 7)
!2883 = !DILocation(line: 930, column: 15, scope: !2882)
!2884 = !DILocation(line: 930, column: 18, scope: !2882)
!2885 = !DILocation(line: 930, column: 7, scope: !2729)
!2886 = !DILocation(line: 931, column: 5, scope: !2882)
!2887 = !DILocation(line: 933, column: 7, scope: !2888)
!2888 = distinct !DILexicalBlock(scope: !2729, file: !66, line: 933, column: 7)
!2889 = !DILocation(line: 933, column: 15, scope: !2888)
!2890 = !DILocation(line: 933, column: 18, scope: !2888)
!2891 = !DILocation(line: 933, column: 7, scope: !2729)
!2892 = !DILocation(line: 934, column: 5, scope: !2888)
!2893 = !DILocation(line: 937, column: 7, scope: !2894)
!2894 = distinct !DILexicalBlock(scope: !2729, file: !66, line: 937, column: 7)
!2895 = !DILocation(line: 937, column: 7, scope: !2729)
!2896 = !DILocalVariable(name: "st", scope: !2897, file: !66, line: 939, type: !270)
!2897 = distinct !DILexicalBlock(scope: !2894, file: !66, line: 938, column: 5)
!2898 = !DILocation(line: 939, column: 19, scope: !2897)
!2899 = !DILocalVariable(name: "stat_success", scope: !2897, file: !66, line: 940, type: !142)
!2900 = !DILocation(line: 940, column: 12, scope: !2897)
!2901 = !DILocation(line: 940, column: 33, scope: !2897)
!2902 = !DILocation(line: 940, column: 27, scope: !2897)
!2903 = !DILocation(line: 940, column: 56, scope: !2897)
!2904 = !DILocation(line: 941, column: 13, scope: !2905)
!2905 = distinct !DILexicalBlock(scope: !2897, file: !66, line: 941, column: 11)
!2906 = !DILocation(line: 941, column: 31, scope: !2905)
!2907 = !DILocation(line: 941, column: 36, scope: !2905)
!2908 = !DILocation(line: 941, column: 11, scope: !2897)
!2909 = !DILocation(line: 942, column: 9, scope: !2905)
!2910 = !DILocation(line: 944, column: 11, scope: !2911)
!2911 = distinct !DILexicalBlock(scope: !2897, file: !66, line: 944, column: 11)
!2912 = !DILocation(line: 944, column: 24, scope: !2911)
!2913 = !DILocation(line: 944, column: 29, scope: !2911)
!2914 = !{!2915, !2636, i64 24}
!2915 = !{!"stat", !2916, i64 0, !2916, i64 8, !2916, i64 16, !2636, i64 24, !2636, i64 28, !2636, i64 32, !2636, i64 36, !2916, i64 40, !2916, i64 48, !2916, i64 56, !2916, i64 64, !2917, i64 72, !2917, i64 88, !2917, i64 104, !2637, i64 120}
!2916 = !{!"long", !2637, i64 0}
!2917 = !{!"timespec", !2916, i64 0, !2916, i64 8}
!2918 = !DILocation(line: 944, column: 11, scope: !2897)
!2919 = !DILocation(line: 945, column: 9, scope: !2911)
!2920 = !DILocation(line: 947, column: 5, scope: !2897)
!2921 = !DILocation(line: 949, column: 20, scope: !2729)
!2922 = !DILocation(line: 950, column: 36, scope: !2729)
!2923 = !DILocation(line: 951, column: 36, scope: !2729)
!2924 = !DILocation(line: 950, column: 22, scope: !2729)
!2925 = !DILocation(line: 949, column: 5, scope: !2729)
!2926 = !DILocation(line: 949, column: 17, scope: !2729)
!2927 = !{!2813, !2637, i64 0}
!2928 = !DILocation(line: 953, column: 29, scope: !2729)
!2929 = !DILocation(line: 953, column: 3, scope: !2729)
!2930 = !DILocation(line: 955, column: 9, scope: !2931)
!2931 = distinct !DILexicalBlock(scope: !2729, file: !66, line: 955, column: 7)
!2932 = !DILocation(line: 955, column: 35, scope: !2931)
!2933 = !DILocation(line: 955, column: 41, scope: !2931)
!2934 = !DILocation(line: 955, column: 62, scope: !2931)
!2935 = !DILocation(line: 955, column: 65, scope: !2931)
!2936 = !DILocation(line: 955, column: 7, scope: !2729)
!2937 = !DILocation(line: 956, column: 5, scope: !2931)
!2938 = !DILocation(line: 959, column: 7, scope: !2939)
!2939 = distinct !DILexicalBlock(scope: !2729, file: !66, line: 959, column: 7)
!2940 = !DILocation(line: 959, column: 16, scope: !2939)
!2941 = !DILocation(line: 959, column: 45, scope: !2939)
!2942 = !DILocation(line: 959, column: 35, scope: !2939)
!2943 = !DILocation(line: 959, column: 19, scope: !2939)
!2944 = !DILocation(line: 959, column: 56, scope: !2939)
!2945 = !DILocation(line: 959, column: 7, scope: !2729)
!2946 = !DILocation(line: 960, column: 5, scope: !2939)
!2947 = !DILocation(line: 964, column: 13, scope: !2729)
!2948 = !DILocation(line: 964, column: 20, scope: !2729)
!2949 = !DILocation(line: 964, column: 18, scope: !2729)
!2950 = !DILocation(line: 964, column: 11, scope: !2729)
!2951 = !DILocation(line: 965, column: 10, scope: !2729)
!2952 = !DILocation(line: 965, column: 17, scope: !2729)
!2953 = !DILocation(line: 965, column: 15, scope: !2729)
!2954 = !DILocation(line: 965, column: 8, scope: !2729)
!2955 = !DILocation(line: 967, column: 7, scope: !2956)
!2956 = distinct !DILexicalBlock(scope: !2729, file: !66, line: 967, column: 7)
!2957 = !DILocation(line: 967, column: 21, scope: !2956)
!2958 = !DILocation(line: 967, column: 29, scope: !2956)
!2959 = !DILocation(line: 967, column: 32, scope: !2956)
!2960 = !DILocation(line: 967, column: 18, scope: !2956)
!2961 = !DILocation(line: 967, column: 15, scope: !2956)
!2962 = !DILocation(line: 967, column: 7, scope: !2729)
!2963 = !DILocation(line: 969, column: 11, scope: !2964)
!2964 = distinct !DILexicalBlock(scope: !2965, file: !66, line: 969, column: 11)
!2965 = distinct !DILexicalBlock(scope: !2956, file: !66, line: 968, column: 5)
!2966 = !DILocation(line: 969, column: 19, scope: !2964)
!2967 = !DILocation(line: 969, column: 11, scope: !2965)
!2968 = !DILocation(line: 970, column: 22, scope: !2964)
!2969 = !DILocation(line: 970, column: 9, scope: !2964)
!2970 = !DILocation(line: 972, column: 22, scope: !2964)
!2971 = !DILocation(line: 973, column: 16, scope: !2964)
!2972 = !DILocation(line: 972, column: 9, scope: !2964)
!2973 = !DILocation(line: 974, column: 7, scope: !2965)
!2974 = !DILocation(line: 977, column: 7, scope: !2975)
!2975 = distinct !DILexicalBlock(scope: !2729, file: !66, line: 977, column: 7)
!2976 = !DILocation(line: 977, column: 7, scope: !2729)
!2977 = !DILocation(line: 979, column: 11, scope: !2978)
!2978 = distinct !DILexicalBlock(scope: !2979, file: !66, line: 979, column: 11)
!2979 = distinct !DILexicalBlock(scope: !2975, file: !66, line: 978, column: 5)
!2980 = !DILocation(line: 979, column: 11, scope: !2979)
!2981 = !DILocation(line: 980, column: 9, scope: !2978)
!2982 = !DILocation(line: 983, column: 15, scope: !2983)
!2983 = distinct !DILexicalBlock(scope: !2979, file: !66, line: 983, column: 11)
!2984 = !DILocation(line: 983, column: 13, scope: !2983)
!2985 = !DILocation(line: 983, column: 11, scope: !2979)
!2986 = !DILocation(line: 985, column: 24, scope: !2987)
!2987 = distinct !DILexicalBlock(scope: !2983, file: !66, line: 984, column: 9)
!2988 = !DILocation(line: 985, column: 47, scope: !2987)
!2989 = !DILocation(line: 985, column: 11, scope: !2987)
!2990 = !DILocation(line: 986, column: 11, scope: !2987)
!2991 = !DILocation(line: 988, column: 5, scope: !2979)
!2992 = !DILocation(line: 989, column: 15, scope: !2993)
!2993 = distinct !DILexicalBlock(scope: !2975, file: !66, line: 989, column: 12)
!2994 = !DILocation(line: 989, column: 23, scope: !2993)
!2995 = !DILocation(line: 989, column: 26, scope: !2993)
!2996 = !DILocation(line: 989, column: 12, scope: !2975)
!2997 = !DILocation(line: 991, column: 16, scope: !2998)
!2998 = distinct !DILexicalBlock(scope: !2999, file: !66, line: 991, column: 11)
!2999 = distinct !DILexicalBlock(scope: !2993, file: !66, line: 990, column: 5)
!3000 = !DILocation(line: 991, column: 13, scope: !2998)
!3001 = !DILocation(line: 991, column: 24, scope: !2998)
!3002 = !DILocation(line: 991, column: 53, scope: !2998)
!3003 = !DILocation(line: 991, column: 58, scope: !2998)
!3004 = !DILocation(line: 991, column: 66, scope: !2998)
!3005 = !DILocation(line: 991, column: 27, scope: !2998)
!3006 = !DILocation(line: 991, column: 11, scope: !2999)
!3007 = !DILocation(line: 992, column: 28, scope: !2998)
!3008 = !DILocation(line: 992, column: 33, scope: !2998)
!3009 = !DILocation(line: 992, column: 26, scope: !2998)
!3010 = !DILocation(line: 992, column: 9, scope: !2998)
!3011 = !DILocation(line: 993, column: 20, scope: !3012)
!3012 = distinct !DILexicalBlock(scope: !2998, file: !66, line: 993, column: 16)
!3013 = !DILocation(line: 993, column: 18, scope: !3012)
!3014 = !DILocation(line: 993, column: 16, scope: !2998)
!3015 = !DILocation(line: 994, column: 9, scope: !3012)
!3016 = !DILocation(line: 996, column: 5, scope: !2999)
!3017 = !DILocation(line: 998, column: 7, scope: !3018)
!3018 = distinct !DILexicalBlock(scope: !2729, file: !66, line: 998, column: 7)
!3019 = !DILocation(line: 998, column: 7, scope: !2729)
!3020 = !DILocalVariable(name: "change", scope: !3021, file: !66, line: 1000, type: !197)
!3021 = distinct !DILexicalBlock(scope: !3018, file: !66, line: 999, column: 5)
!3022 = !DILocation(line: 1000, column: 27, scope: !3021)
!3023 = !DILocation(line: 1000, column: 50, scope: !3021)
!3024 = !DILocation(line: 1000, column: 36, scope: !3021)
!3025 = !DILocation(line: 1001, column: 12, scope: !3026)
!3026 = distinct !DILexicalBlock(scope: !3021, file: !66, line: 1001, column: 11)
!3027 = !DILocation(line: 1001, column: 11, scope: !3021)
!3028 = !DILocation(line: 1002, column: 9, scope: !3026)
!3029 = !DILocation(line: 1003, column: 40, scope: !3021)
!3030 = !DILocation(line: 1003, column: 14, scope: !3021)
!3031 = !DILocation(line: 1003, column: 12, scope: !3021)
!3032 = !DILocation(line: 1004, column: 43, scope: !3021)
!3033 = !DILocation(line: 1004, column: 18, scope: !3021)
!3034 = !DILocation(line: 1004, column: 16, scope: !3021)
!3035 = !DILocation(line: 1005, column: 13, scope: !3021)
!3036 = !DILocation(line: 1005, column: 7, scope: !3021)
!3037 = !DILocation(line: 1006, column: 5, scope: !3021)
!3038 = !DILocation(line: 1008, column: 7, scope: !3039)
!3039 = distinct !DILexicalBlock(scope: !2729, file: !66, line: 1008, column: 7)
!3040 = !DILocation(line: 1008, column: 31, scope: !3039)
!3041 = !DILocation(line: 1008, column: 35, scope: !3039)
!3042 = !DILocation(line: 1008, column: 7, scope: !2729)
!3043 = !DILocation(line: 1009, column: 18, scope: !3039)
!3044 = !DILocation(line: 1009, column: 5, scope: !3039)
!3045 = !DILocation(line: 1012, column: 7, scope: !3046)
!3046 = distinct !DILexicalBlock(scope: !2729, file: !66, line: 1012, column: 7)
!3047 = !DILocation(line: 1012, column: 27, scope: !3046)
!3048 = !DILocation(line: 1012, column: 32, scope: !3046)
!3049 = !DILocation(line: 1012, column: 7, scope: !2729)
!3050 = !DILocation(line: 1014, column: 20, scope: !3051)
!3051 = distinct !DILexicalBlock(scope: !3046, file: !66, line: 1013, column: 5)
!3052 = !DILocation(line: 1014, column: 7, scope: !3051)
!3053 = !DILocation(line: 1016, column: 7, scope: !3051)
!3054 = !DILocation(line: 1019, column: 7, scope: !3055)
!3055 = distinct !DILexicalBlock(scope: !2729, file: !66, line: 1019, column: 7)
!3056 = !DILocation(line: 1019, column: 27, scope: !3055)
!3057 = !DILocation(line: 1019, column: 30, scope: !3055)
!3058 = !DILocation(line: 1019, column: 7, scope: !2729)
!3059 = !DILocation(line: 1021, column: 20, scope: !3060)
!3060 = distinct !DILexicalBlock(scope: !3055, file: !66, line: 1020, column: 5)
!3061 = !DILocation(line: 1021, column: 7, scope: !3060)
!3062 = !DILocation(line: 1023, column: 7, scope: !3060)
!3063 = !DILocation(line: 1026, column: 7, scope: !3064)
!3064 = distinct !DILexicalBlock(scope: !2729, file: !66, line: 1026, column: 7)
!3065 = !DILocation(line: 1026, column: 27, scope: !3064)
!3066 = !DILocation(line: 1026, column: 42, scope: !3064)
!3067 = !DILocation(line: 1026, column: 30, scope: !3064)
!3068 = !DILocation(line: 1026, column: 7, scope: !2729)
!3069 = !DILocation(line: 1027, column: 18, scope: !3064)
!3070 = !DILocation(line: 1027, column: 5, scope: !3064)
!3071 = !DILocation(line: 1030, column: 3, scope: !2729)
!3072 = !DILocation(line: 1032, column: 7, scope: !3073)
!3073 = distinct !DILexicalBlock(scope: !2729, file: !66, line: 1032, column: 7)
!3074 = !DILocation(line: 1032, column: 7, scope: !2729)
!3075 = !DILocation(line: 1033, column: 41, scope: !3073)
!3076 = !DILocation(line: 1033, column: 50, scope: !3073)
!3077 = !DILocation(line: 1033, column: 69, scope: !3073)
!3078 = !DILocation(line: 1033, column: 19, scope: !3073)
!3079 = !DILocation(line: 1033, column: 17, scope: !3073)
!3080 = !DILocation(line: 1033, column: 5, scope: !3073)
!3081 = !DILocation(line: 1038, column: 7, scope: !3082)
!3082 = distinct !DILexicalBlock(scope: !3073, file: !66, line: 1035, column: 5)
!3083 = !DILocation(line: 1040, column: 12, scope: !3084)
!3084 = distinct !DILexicalBlock(scope: !3082, file: !66, line: 1040, column: 11)
!3085 = !DILocation(line: 1040, column: 11, scope: !3082)
!3086 = !DILocation(line: 1042, column: 18, scope: !3087)
!3087 = distinct !DILexicalBlock(scope: !3088, file: !66, line: 1042, column: 15)
!3088 = distinct !DILexicalBlock(scope: !3084, file: !66, line: 1041, column: 9)
!3089 = !DILocation(line: 1042, column: 15, scope: !3088)
!3090 = !DILocation(line: 1043, column: 50, scope: !3087)
!3091 = !DILocation(line: 1043, column: 59, scope: !3087)
!3092 = !DILocation(line: 1043, column: 20, scope: !3087)
!3093 = !DILocation(line: 1044, column: 42, scope: !3087)
!3094 = !DILocation(line: 1044, column: 51, scope: !3087)
!3095 = !DILocation(line: 1044, column: 20, scope: !3087)
!3096 = !DILocation(line: 1045, column: 25, scope: !3087)
!3097 = !DILocation(line: 1045, column: 13, scope: !3087)
!3098 = !DILocation(line: 1046, column: 9, scope: !3088)
!3099 = !DILocalVariable(name: "i", scope: !3100, file: !66, line: 1049, type: !7)
!3100 = distinct !DILexicalBlock(scope: !3084, file: !66, line: 1048, column: 9)
!3101 = !DILocation(line: 1049, column: 15, scope: !3100)
!3102 = !DILocation(line: 1050, column: 11, scope: !3100)
!3103 = !DILocation(line: 1051, column: 18, scope: !3104)
!3104 = distinct !DILexicalBlock(scope: !3100, file: !66, line: 1051, column: 11)
!3105 = !DILocation(line: 1051, column: 16, scope: !3104)
!3106 = !DILocation(line: 1051, column: 23, scope: !3107)
!3107 = distinct !DILexicalBlock(scope: !3104, file: !66, line: 1051, column: 11)
!3108 = !DILocation(line: 1051, column: 27, scope: !3107)
!3109 = !DILocation(line: 1051, column: 25, scope: !3107)
!3110 = !DILocation(line: 1051, column: 11, scope: !3104)
!3111 = !DILocation(line: 1052, column: 40, scope: !3112)
!3112 = distinct !DILexicalBlock(scope: !3107, file: !66, line: 1052, column: 17)
!3113 = !DILocation(line: 1052, column: 45, scope: !3112)
!3114 = !DILocation(line: 1052, column: 49, scope: !3112)
!3115 = !DILocation(line: 1053, column: 40, scope: !3112)
!3116 = !DILocation(line: 1053, column: 42, scope: !3112)
!3117 = !DILocation(line: 1053, column: 47, scope: !3112)
!3118 = !DILocation(line: 1053, column: 50, scope: !3112)
!3119 = !DILocation(line: 0, scope: !3112)
!3120 = !DILocation(line: 1052, column: 19, scope: !3112)
!3121 = !DILocation(line: 1052, column: 17, scope: !3107)
!3122 = !DILocation(line: 1054, column: 27, scope: !3112)
!3123 = !DILocation(line: 1054, column: 15, scope: !3112)
!3124 = !DILocation(line: 1053, column: 67, scope: !3112)
!3125 = !DILocation(line: 1051, column: 37, scope: !3107)
!3126 = !DILocation(line: 1051, column: 11, scope: !3107)
!3127 = distinct !{!3127, !3110, !3128}
!3128 = !DILocation(line: 1054, column: 29, scope: !3104)
!3129 = !DILocation(line: 1058, column: 10, scope: !2729)
!3130 = !DILocation(line: 1058, column: 3, scope: !2729)
!3131 = distinct !DISubprogram(name: "cp_option_init", scope: !66, file: !66, line: 263, type: !216, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!3132 = !DILocalVariable(name: "x", arg: 1, scope: !3131, file: !66, line: 263, type: !131)
!3133 = !DILocation(line: 263, column: 36, scope: !3131)
!3134 = !DILocation(line: 265, column: 23, scope: !3131)
!3135 = !DILocation(line: 265, column: 3, scope: !3131)
!3136 = !DILocation(line: 266, column: 3, scope: !3131)
!3137 = !DILocation(line: 266, column: 6, scope: !3131)
!3138 = !DILocation(line: 266, column: 22, scope: !3131)
!3139 = !{!2813, !2743, i64 20}
!3140 = !DILocation(line: 267, column: 3, scope: !3131)
!3141 = !DILocation(line: 267, column: 6, scope: !3131)
!3142 = !DILocation(line: 267, column: 19, scope: !3131)
!3143 = !{!2813, !2637, i64 56}
!3144 = !DILocation(line: 268, column: 3, scope: !3131)
!3145 = !DILocation(line: 268, column: 6, scope: !3131)
!3146 = !DILocation(line: 268, column: 18, scope: !3131)
!3147 = !{!2813, !2637, i64 4}
!3148 = !DILocation(line: 269, column: 3, scope: !3131)
!3149 = !DILocation(line: 269, column: 6, scope: !3131)
!3150 = !DILocation(line: 269, column: 33, scope: !3131)
!3151 = !{!2813, !2743, i64 21}
!3152 = !DILocation(line: 270, column: 3, scope: !3131)
!3153 = !DILocation(line: 270, column: 6, scope: !3131)
!3154 = !DILocation(line: 270, column: 36, scope: !3131)
!3155 = !{!2813, !2743, i64 22}
!3156 = !DILocation(line: 271, column: 3, scope: !3131)
!3157 = !DILocation(line: 271, column: 6, scope: !3131)
!3158 = !DILocation(line: 271, column: 16, scope: !3131)
!3159 = !{!2813, !2743, i64 23}
!3160 = !DILocation(line: 272, column: 3, scope: !3131)
!3161 = !DILocation(line: 272, column: 6, scope: !3131)
!3162 = !DILocation(line: 272, column: 18, scope: !3131)
!3163 = !{!2813, !2637, i64 8}
!3164 = !DILocation(line: 273, column: 3, scope: !3131)
!3165 = !DILocation(line: 273, column: 6, scope: !3131)
!3166 = !DILocation(line: 273, column: 16, scope: !3131)
!3167 = !{!2813, !2743, i64 24}
!3168 = !DILocation(line: 274, column: 3, scope: !3131)
!3169 = !DILocation(line: 274, column: 6, scope: !3131)
!3170 = !DILocation(line: 274, column: 19, scope: !3131)
!3171 = !{!2813, !2743, i64 25}
!3172 = !DILocation(line: 275, column: 3, scope: !3131)
!3173 = !DILocation(line: 275, column: 6, scope: !3131)
!3174 = !DILocation(line: 275, column: 22, scope: !3131)
!3175 = !{!2813, !2743, i64 28}
!3176 = !DILocation(line: 276, column: 3, scope: !3131)
!3177 = !DILocation(line: 276, column: 6, scope: !3131)
!3178 = !DILocation(line: 276, column: 25, scope: !3131)
!3179 = !{!2813, !2743, i64 29}
!3180 = !DILocation(line: 277, column: 3, scope: !3131)
!3181 = !DILocation(line: 277, column: 6, scope: !3131)
!3182 = !DILocation(line: 277, column: 21, scope: !3131)
!3183 = !{!2813, !2743, i64 34}
!3184 = !DILocation(line: 278, column: 3, scope: !3131)
!3185 = !DILocation(line: 278, column: 6, scope: !3131)
!3186 = !DILocation(line: 278, column: 20, scope: !3131)
!3187 = !{!2813, !2743, i64 30}
!3188 = !DILocation(line: 279, column: 3, scope: !3131)
!3189 = !DILocation(line: 279, column: 6, scope: !3131)
!3190 = !DILocation(line: 279, column: 26, scope: !3131)
!3191 = !DILocation(line: 280, column: 3, scope: !3131)
!3192 = !DILocation(line: 280, column: 6, scope: !3131)
!3193 = !DILocation(line: 280, column: 32, scope: !3131)
!3194 = !{!2813, !2743, i64 32}
!3195 = !DILocation(line: 281, column: 3, scope: !3131)
!3196 = !DILocation(line: 281, column: 6, scope: !3131)
!3197 = !DILocation(line: 281, column: 24, scope: !3131)
!3198 = !{!2813, !2743, i64 41}
!3199 = !DILocation(line: 282, column: 3, scope: !3131)
!3200 = !DILocation(line: 282, column: 6, scope: !3131)
!3201 = !DILocation(line: 282, column: 25, scope: !3131)
!3202 = !{!2813, !2743, i64 35}
!3203 = !DILocation(line: 283, column: 3, scope: !3131)
!3204 = !DILocation(line: 283, column: 6, scope: !3131)
!3205 = !DILocation(line: 283, column: 23, scope: !3131)
!3206 = !{!2813, !2743, i64 36}
!3207 = !DILocation(line: 284, column: 3, scope: !3131)
!3208 = !DILocation(line: 284, column: 6, scope: !3131)
!3209 = !DILocation(line: 284, column: 29, scope: !3131)
!3210 = !{!2813, !2743, i64 40}
!3211 = !DILocation(line: 285, column: 3, scope: !3131)
!3212 = !DILocation(line: 285, column: 6, scope: !3131)
!3213 = !DILocation(line: 285, column: 16, scope: !3131)
!3214 = !{!2813, !2743, i64 42}
!3215 = !DILocation(line: 286, column: 3, scope: !3131)
!3216 = !DILocation(line: 286, column: 6, scope: !3131)
!3217 = !DILocation(line: 286, column: 18, scope: !3131)
!3218 = !{!2813, !2637, i64 12}
!3219 = !DILocation(line: 287, column: 3, scope: !3131)
!3220 = !DILocation(line: 287, column: 6, scope: !3131)
!3221 = !DILocation(line: 287, column: 20, scope: !3131)
!3222 = !{!2813, !2743, i64 44}
!3223 = !DILocation(line: 288, column: 3, scope: !3131)
!3224 = !DILocation(line: 288, column: 6, scope: !3131)
!3225 = !DILocation(line: 288, column: 18, scope: !3131)
!3226 = !DILocation(line: 293, column: 3, scope: !3131)
!3227 = !DILocation(line: 293, column: 6, scope: !3131)
!3228 = !DILocation(line: 293, column: 15, scope: !3131)
!3229 = !{!2813, !2743, i64 43}
!3230 = !DILocation(line: 294, column: 3, scope: !3131)
!3231 = !DILocation(line: 294, column: 6, scope: !3131)
!3232 = !DILocation(line: 294, column: 11, scope: !3131)
!3233 = !{!2813, !2636, i64 16}
!3234 = !DILocation(line: 295, column: 3, scope: !3131)
!3235 = !DILocation(line: 295, column: 6, scope: !3131)
!3236 = !DILocation(line: 295, column: 16, scope: !3131)
!3237 = !{!2813, !2743, i64 47}
!3238 = !DILocation(line: 297, column: 3, scope: !3131)
!3239 = !DILocation(line: 297, column: 6, scope: !3131)
!3240 = !DILocation(line: 297, column: 33, scope: !3131)
!3241 = !{!2813, !2743, i64 48}
!3242 = !DILocation(line: 298, column: 3, scope: !3131)
!3243 = !DILocation(line: 298, column: 6, scope: !3131)
!3244 = !DILocation(line: 298, column: 13, scope: !3131)
!3245 = !{!2813, !2743, i64 45}
!3246 = !DILocation(line: 299, column: 3, scope: !3131)
!3247 = !DILocation(line: 299, column: 6, scope: !3131)
!3248 = !DILocation(line: 299, column: 31, scope: !3131)
!3249 = !{!2813, !2743, i64 38}
!3250 = !DILocation(line: 300, column: 3, scope: !3131)
!3251 = !DILocation(line: 300, column: 6, scope: !3131)
!3252 = !DILocation(line: 300, column: 32, scope: !3131)
!3253 = !DILocation(line: 301, column: 3, scope: !3131)
!3254 = !DILocation(line: 301, column: 6, scope: !3131)
!3255 = !DILocation(line: 301, column: 27, scope: !3131)
!3256 = !DILocation(line: 302, column: 3, scope: !3131)
!3257 = !DILocation(line: 302, column: 6, scope: !3131)
!3258 = !DILocation(line: 302, column: 21, scope: !3131)
!3259 = !{!2813, !2743, i64 39}
!3260 = !DILocation(line: 303, column: 3, scope: !3131)
!3261 = !DILocation(line: 303, column: 6, scope: !3131)
!3262 = !DILocation(line: 303, column: 14, scope: !3131)
!3263 = !DILocation(line: 304, column: 3, scope: !3131)
!3264 = !DILocation(line: 304, column: 6, scope: !3131)
!3265 = !DILocation(line: 304, column: 16, scope: !3131)
!3266 = !{!2813, !2649, i64 64}
!3267 = !DILocation(line: 305, column: 3, scope: !3131)
!3268 = !DILocation(line: 305, column: 6, scope: !3131)
!3269 = !DILocation(line: 305, column: 15, scope: !3131)
!3270 = !{!2813, !2649, i64 72}
!3271 = !DILocation(line: 306, column: 1, scope: !3131)
!3272 = distinct !DISubprogram(name: "se_const", scope: !207, file: !207, line: 755, type: !218, scopeLine: 755, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!3273 = !DILocalVariable(name: "sctx", arg: 1, scope: !3272, file: !207, line: 755, type: !180)
!3274 = !DILocation(line: 755, column: 45, scope: !3272)
!3275 = !DILocation(line: 755, column: 69, scope: !3272)
!3276 = !DILocation(line: 755, column: 53, scope: !3272)
!3277 = distinct !DISubprogram(name: "target_directory_operand", scope: !66, file: !66, line: 398, type: !220, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!3278 = !DILocalVariable(name: "file", arg: 1, scope: !3277, file: !66, line: 398, type: !180)
!3279 = !DILocation(line: 398, column: 39, scope: !3277)
!3280 = !DILocalVariable(name: "b", scope: !3277, file: !66, line: 400, type: !180)
!3281 = !DILocation(line: 400, column: 15, scope: !3277)
!3282 = !DILocation(line: 400, column: 35, scope: !3277)
!3283 = !DILocation(line: 400, column: 19, scope: !3277)
!3284 = !DILocalVariable(name: "blen", scope: !3277, file: !66, line: 401, type: !55)
!3285 = !DILocation(line: 401, column: 10, scope: !3277)
!3286 = !DILocation(line: 401, column: 25, scope: !3277)
!3287 = !DILocation(line: 401, column: 17, scope: !3277)
!3288 = !{!2916, !2916, i64 0}
!3289 = !DILocalVariable(name: "looks_like_a_dir", scope: !3277, file: !66, line: 402, type: !142)
!3290 = !DILocation(line: 402, column: 8, scope: !3277)
!3291 = !DILocation(line: 402, column: 28, scope: !3277)
!3292 = !DILocation(line: 402, column: 33, scope: !3277)
!3293 = !DILocation(line: 402, column: 38, scope: !3277)
!3294 = !DILocation(line: 402, column: 41, scope: !3277)
!3295 = !{!2637, !2637, i64 0}
!3296 = !DILocalVariable(name: "st", scope: !3277, file: !66, line: 403, type: !270)
!3297 = !DILocation(line: 403, column: 15, scope: !3277)
!3298 = !DILocalVariable(name: "err", scope: !3277, file: !66, line: 404, type: !7)
!3299 = !DILocation(line: 404, column: 7, scope: !3277)
!3300 = !DILocation(line: 404, column: 20, scope: !3277)
!3301 = !DILocation(line: 404, column: 14, scope: !3277)
!3302 = !DILocation(line: 404, column: 31, scope: !3277)
!3303 = !DILocation(line: 404, column: 42, scope: !3277)
!3304 = !DILocalVariable(name: "is_a_dir", scope: !3277, file: !66, line: 405, type: !142)
!3305 = !DILocation(line: 405, column: 8, scope: !3277)
!3306 = !DILocation(line: 405, column: 20, scope: !3277)
!3307 = !DILocation(line: 405, column: 24, scope: !3277)
!3308 = !DILocation(line: 405, column: 27, scope: !3277)
!3309 = !DILocation(line: 0, scope: !3277)
!3310 = !DILocation(line: 406, column: 7, scope: !3311)
!3311 = distinct !DILexicalBlock(scope: !3277, file: !66, line: 406, column: 7)
!3312 = !DILocation(line: 406, column: 11, scope: !3311)
!3313 = !DILocation(line: 406, column: 14, scope: !3311)
!3314 = !DILocation(line: 406, column: 18, scope: !3311)
!3315 = !DILocation(line: 406, column: 7, scope: !3277)
!3316 = !DILocation(line: 407, column: 5, scope: !3311)
!3317 = !DILocation(line: 408, column: 7, scope: !3318)
!3318 = distinct !DILexicalBlock(scope: !3277, file: !66, line: 408, column: 7)
!3319 = !DILocation(line: 408, column: 18, scope: !3318)
!3320 = !DILocation(line: 408, column: 16, scope: !3318)
!3321 = !DILocation(line: 408, column: 7, scope: !3277)
!3322 = !DILocation(line: 409, column: 5, scope: !3318)
!3323 = !DILocation(line: 411, column: 10, scope: !3277)
!3324 = !DILocation(line: 411, column: 3, scope: !3277)
!3325 = distinct !DISubprogram(name: "extra_mode", scope: !66, file: !66, line: 166, type: !222, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!3326 = !DILocalVariable(name: "input", arg: 1, scope: !3325, file: !66, line: 166, type: !139)
!3327 = !DILocation(line: 166, column: 20, scope: !3325)
!3328 = !DILocalVariable(name: "mask", scope: !3325, file: !66, line: 168, type: !139)
!3329 = !DILocation(line: 168, column: 10, scope: !3325)
!3330 = !DILocation(line: 169, column: 14, scope: !3325)
!3331 = !DILocation(line: 169, column: 24, scope: !3325)
!3332 = !DILocation(line: 169, column: 22, scope: !3325)
!3333 = !DILocation(line: 169, column: 20, scope: !3325)
!3334 = !DILocation(line: 169, column: 11, scope: !3325)
!3335 = !DILocation(line: 169, column: 10, scope: !3325)
!3336 = !DILocation(line: 169, column: 3, scope: !3325)
!3337 = distinct !DISubprogram(name: "get_ids", scope: !66, file: !66, line: 576, type: !200, scopeLine: 577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!3338 = !DILocalVariable(name: "pw", scope: !3337, file: !66, line: 578, type: !224)
!3339 = !DILocation(line: 578, column: 18, scope: !3337)
!3340 = !DILocalVariable(name: "gr", scope: !3337, file: !66, line: 579, type: !235)
!3341 = !DILocation(line: 579, column: 17, scope: !3337)
!3342 = !DILocation(line: 581, column: 7, scope: !3343)
!3343 = distinct !DILexicalBlock(scope: !3337, file: !66, line: 581, column: 7)
!3344 = !DILocation(line: 581, column: 7, scope: !3337)
!3345 = !DILocation(line: 583, column: 22, scope: !3346)
!3346 = distinct !DILexicalBlock(scope: !3343, file: !66, line: 582, column: 5)
!3347 = !DILocation(line: 583, column: 12, scope: !3346)
!3348 = !DILocation(line: 583, column: 10, scope: !3346)
!3349 = !DILocation(line: 584, column: 11, scope: !3350)
!3350 = distinct !DILexicalBlock(scope: !3346, file: !66, line: 584, column: 11)
!3351 = !DILocation(line: 584, column: 14, scope: !3350)
!3352 = !DILocation(line: 584, column: 11, scope: !3346)
!3353 = !DILocalVariable(name: "tmp", scope: !3354, file: !66, line: 586, type: !57)
!3354 = distinct !DILexicalBlock(scope: !3350, file: !66, line: 585, column: 9)
!3355 = !DILocation(line: 586, column: 29, scope: !3354)
!3356 = !DILocation(line: 587, column: 25, scope: !3357)
!3357 = distinct !DILexicalBlock(scope: !3354, file: !66, line: 587, column: 15)
!3358 = !DILocation(line: 587, column: 15, scope: !3357)
!3359 = !DILocation(line: 587, column: 58, scope: !3357)
!3360 = !DILocation(line: 588, column: 15, scope: !3357)
!3361 = !DILocation(line: 588, column: 30, scope: !3357)
!3362 = !DILocation(line: 588, column: 28, scope: !3357)
!3363 = !DILocation(line: 587, column: 15, scope: !3354)
!3364 = !DILocation(line: 589, column: 13, scope: !3357)
!3365 = !DILocation(line: 591, column: 22, scope: !3354)
!3366 = !DILocation(line: 591, column: 20, scope: !3354)
!3367 = !DILocation(line: 592, column: 9, scope: !3354)
!3368 = !DILocation(line: 594, column: 20, scope: !3350)
!3369 = !DILocation(line: 594, column: 24, scope: !3350)
!3370 = !{!3371, !2636, i64 16}
!3371 = !{!"passwd", !2649, i64 0, !2649, i64 8, !2636, i64 16, !2636, i64 20, !2649, i64 24, !2649, i64 32, !2649, i64 40}
!3372 = !DILocation(line: 594, column: 18, scope: !3350)
!3373 = !DILocation(line: 595, column: 7, scope: !3346)
!3374 = !DILocation(line: 596, column: 5, scope: !3346)
!3375 = !DILocation(line: 598, column: 14, scope: !3343)
!3376 = !DILocation(line: 600, column: 7, scope: !3377)
!3377 = distinct !DILexicalBlock(scope: !3337, file: !66, line: 600, column: 7)
!3378 = !DILocation(line: 600, column: 7, scope: !3337)
!3379 = !DILocation(line: 602, column: 22, scope: !3380)
!3380 = distinct !DILexicalBlock(scope: !3377, file: !66, line: 601, column: 5)
!3381 = !DILocation(line: 602, column: 12, scope: !3380)
!3382 = !DILocation(line: 602, column: 10, scope: !3380)
!3383 = !DILocation(line: 603, column: 11, scope: !3384)
!3384 = distinct !DILexicalBlock(scope: !3380, file: !66, line: 603, column: 11)
!3385 = !DILocation(line: 603, column: 14, scope: !3384)
!3386 = !DILocation(line: 603, column: 11, scope: !3380)
!3387 = !DILocalVariable(name: "tmp", scope: !3388, file: !66, line: 605, type: !57)
!3388 = distinct !DILexicalBlock(scope: !3384, file: !66, line: 604, column: 9)
!3389 = !DILocation(line: 605, column: 29, scope: !3388)
!3390 = !DILocation(line: 606, column: 25, scope: !3391)
!3391 = distinct !DILexicalBlock(scope: !3388, file: !66, line: 606, column: 15)
!3392 = !DILocation(line: 606, column: 15, scope: !3391)
!3393 = !DILocation(line: 606, column: 58, scope: !3391)
!3394 = !DILocation(line: 607, column: 15, scope: !3391)
!3395 = !DILocation(line: 607, column: 30, scope: !3391)
!3396 = !DILocation(line: 607, column: 28, scope: !3391)
!3397 = !DILocation(line: 606, column: 15, scope: !3388)
!3398 = !DILocation(line: 608, column: 13, scope: !3391)
!3399 = !DILocation(line: 610, column: 22, scope: !3388)
!3400 = !DILocation(line: 610, column: 20, scope: !3388)
!3401 = !DILocation(line: 611, column: 9, scope: !3388)
!3402 = !DILocation(line: 613, column: 20, scope: !3384)
!3403 = !DILocation(line: 613, column: 24, scope: !3384)
!3404 = !{!3405, !2636, i64 16}
!3405 = !{!"group", !2649, i64 0, !2649, i64 8, !2636, i64 16, !2649, i64 24}
!3406 = !DILocation(line: 613, column: 18, scope: !3384)
!3407 = !DILocation(line: 614, column: 7, scope: !3380)
!3408 = !DILocation(line: 615, column: 5, scope: !3380)
!3409 = !DILocation(line: 617, column: 14, scope: !3377)
!3410 = !DILocation(line: 618, column: 1, scope: !3337)
!3411 = distinct !DISubprogram(name: "process_dir", scope: !66, file: !66, line: 443, type: !243, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!3412 = !DILocalVariable(name: "dir", arg: 1, scope: !3411, file: !66, line: 443, type: !9)
!3413 = !DILocation(line: 443, column: 20, scope: !3411)
!3414 = !DILocalVariable(name: "wd", arg: 2, scope: !3411, file: !66, line: 443, type: !245)
!3415 = !DILocation(line: 443, column: 40, scope: !3411)
!3416 = !DILocalVariable(name: "options", arg: 3, scope: !3411, file: !66, line: 443, type: !53)
!3417 = !DILocation(line: 443, column: 50, scope: !3411)
!3418 = !DILocalVariable(name: "x", scope: !3411, file: !66, line: 445, type: !246)
!3419 = !DILocation(line: 445, column: 28, scope: !3411)
!3420 = !DILocation(line: 445, column: 32, scope: !3411)
!3421 = !DILocalVariable(name: "ret", scope: !3411, file: !66, line: 447, type: !7)
!3422 = !DILocation(line: 447, column: 7, scope: !3411)
!3423 = !DILocation(line: 447, column: 32, scope: !3411)
!3424 = !DILocation(line: 447, column: 37, scope: !3411)
!3425 = !DILocation(line: 447, column: 56, scope: !3411)
!3426 = !DILocation(line: 448, column: 32, scope: !3411)
!3427 = !DILocation(line: 449, column: 32, scope: !3411)
!3428 = !DILocation(line: 449, column: 47, scope: !3411)
!3429 = !DILocation(line: 449, column: 57, scope: !3411)
!3430 = !DILocation(line: 447, column: 14, scope: !3411)
!3431 = !DILocation(line: 458, column: 7, scope: !3432)
!3432 = distinct !DILexicalBlock(scope: !3411, file: !66, line: 458, column: 7)
!3433 = !DILocation(line: 458, column: 11, scope: !3432)
!3434 = !DILocation(line: 458, column: 27, scope: !3432)
!3435 = !DILocation(line: 458, column: 30, scope: !3432)
!3436 = !DILocation(line: 458, column: 33, scope: !3432)
!3437 = !DILocation(line: 458, column: 7, scope: !3411)
!3438 = !DILocation(line: 460, column: 41, scope: !3439)
!3439 = distinct !DILexicalBlock(scope: !3440, file: !66, line: 460, column: 11)
!3440 = distinct !DILexicalBlock(scope: !3432, file: !66, line: 459, column: 5)
!3441 = !DILocation(line: 460, column: 25, scope: !3439)
!3442 = !DILocation(line: 460, column: 13, scope: !3439)
!3443 = !DILocation(line: 461, column: 11, scope: !3439)
!3444 = !DILocation(line: 461, column: 35, scope: !3439)
!3445 = !DILocation(line: 461, column: 16, scope: !3439)
!3446 = !DILocation(line: 460, column: 11, scope: !3440)
!3447 = !DILocation(line: 462, column: 19, scope: !3439)
!3448 = !DILocation(line: 462, column: 26, scope: !3439)
!3449 = !DILocation(line: 463, column: 16, scope: !3439)
!3450 = !DILocation(line: 462, column: 9, scope: !3439)
!3451 = !DILocation(line: 464, column: 5, scope: !3440)
!3452 = !DILocation(line: 466, column: 10, scope: !3411)
!3453 = !DILocation(line: 466, column: 3, scope: !3411)
!3454 = distinct !DISubprogram(name: "install_file_in_file_parents", scope: !66, file: !66, line: 765, type: !258, scopeLine: 767, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!3455 = !DILocalVariable(name: "from", arg: 1, scope: !3454, file: !66, line: 765, type: !180)
!3456 = !DILocation(line: 765, column: 43, scope: !3454)
!3457 = !DILocalVariable(name: "to", arg: 2, scope: !3454, file: !66, line: 765, type: !9)
!3458 = !DILocation(line: 765, column: 55, scope: !3454)
!3459 = !DILocalVariable(name: "x", arg: 3, scope: !3454, file: !66, line: 766, type: !246)
!3460 = !DILocation(line: 766, column: 56, scope: !3454)
!3461 = !DILocation(line: 768, column: 32, scope: !3454)
!3462 = !DILocation(line: 768, column: 38, scope: !3454)
!3463 = !DILocation(line: 768, column: 63, scope: !3454)
!3464 = !DILocation(line: 768, column: 11, scope: !3454)
!3465 = !DILocation(line: 769, column: 11, scope: !3454)
!3466 = !DILocation(line: 769, column: 36, scope: !3454)
!3467 = !DILocation(line: 769, column: 42, scope: !3454)
!3468 = !DILocation(line: 769, column: 46, scope: !3454)
!3469 = !DILocation(line: 769, column: 14, scope: !3454)
!3470 = !DILocation(line: 0, scope: !3454)
!3471 = !DILocation(line: 768, column: 3, scope: !3454)
!3472 = distinct !DISubprogram(name: "install_file_in_file", scope: !66, file: !66, line: 696, type: !262, scopeLine: 698, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!3473 = !DILocalVariable(name: "from", arg: 1, scope: !3472, file: !66, line: 696, type: !180)
!3474 = !DILocation(line: 696, column: 35, scope: !3472)
!3475 = !DILocalVariable(name: "to", arg: 2, scope: !3472, file: !66, line: 696, type: !180)
!3476 = !DILocation(line: 696, column: 53, scope: !3472)
!3477 = !DILocalVariable(name: "x", arg: 3, scope: !3472, file: !66, line: 697, type: !246)
!3478 = !DILocation(line: 697, column: 48, scope: !3472)
!3479 = !DILocalVariable(name: "from_sb", scope: !3472, file: !66, line: 699, type: !270)
!3480 = !DILocation(line: 699, column: 15, scope: !3472)
!3481 = !DILocation(line: 700, column: 7, scope: !3482)
!3482 = distinct !DILexicalBlock(scope: !3472, file: !66, line: 700, column: 7)
!3483 = !DILocation(line: 700, column: 10, scope: !3482)
!3484 = !DILocation(line: 700, column: 30, scope: !3482)
!3485 = !DILocation(line: 700, column: 39, scope: !3482)
!3486 = !DILocation(line: 700, column: 33, scope: !3482)
!3487 = !DILocation(line: 700, column: 55, scope: !3482)
!3488 = !DILocation(line: 700, column: 7, scope: !3472)
!3489 = !DILocation(line: 702, column: 17, scope: !3490)
!3490 = distinct !DILexicalBlock(scope: !3482, file: !66, line: 701, column: 5)
!3491 = !DILocation(line: 702, column: 24, scope: !3490)
!3492 = !DILocation(line: 702, column: 45, scope: !3490)
!3493 = !DILocation(line: 702, column: 7, scope: !3490)
!3494 = !DILocation(line: 703, column: 7, scope: !3490)
!3495 = !DILocation(line: 705, column: 20, scope: !3496)
!3496 = distinct !DILexicalBlock(scope: !3472, file: !66, line: 705, column: 7)
!3497 = !DILocation(line: 705, column: 26, scope: !3496)
!3498 = !DILocation(line: 705, column: 30, scope: !3496)
!3499 = !DILocation(line: 705, column: 9, scope: !3496)
!3500 = !DILocation(line: 705, column: 7, scope: !3472)
!3501 = !DILocation(line: 706, column: 5, scope: !3496)
!3502 = !DILocation(line: 707, column: 7, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3472, file: !66, line: 707, column: 7)
!3504 = !DILocation(line: 707, column: 7, scope: !3472)
!3505 = !DILocation(line: 708, column: 18, scope: !3506)
!3506 = distinct !DILexicalBlock(scope: !3503, file: !66, line: 708, column: 9)
!3507 = !DILocation(line: 708, column: 11, scope: !3506)
!3508 = !DILocation(line: 708, column: 9, scope: !3503)
!3509 = !DILocation(line: 710, column: 21, scope: !3510)
!3510 = distinct !DILexicalBlock(scope: !3511, file: !66, line: 710, column: 13)
!3511 = distinct !DILexicalBlock(scope: !3506, file: !66, line: 709, column: 7)
!3512 = !DILocation(line: 710, column: 13, scope: !3510)
!3513 = !DILocation(line: 710, column: 25, scope: !3510)
!3514 = !DILocation(line: 710, column: 13, scope: !3511)
!3515 = !DILocation(line: 711, column: 11, scope: !3510)
!3516 = !DILocation(line: 712, column: 9, scope: !3511)
!3517 = !DILocation(line: 708, column: 20, scope: !3506)
!3518 = !DILocation(line: 714, column: 7, scope: !3519)
!3519 = distinct !DILexicalBlock(scope: !3472, file: !66, line: 714, column: 7)
!3520 = !DILocation(line: 714, column: 10, scope: !3519)
!3521 = !DILocation(line: 714, column: 30, scope: !3519)
!3522 = !DILocation(line: 714, column: 34, scope: !3519)
!3523 = !DILocation(line: 714, column: 46, scope: !3519)
!3524 = !DILocation(line: 714, column: 51, scope: !3519)
!3525 = !DILocation(line: 715, column: 7, scope: !3519)
!3526 = !DILocation(line: 715, column: 41, scope: !3519)
!3527 = !DILocation(line: 715, column: 12, scope: !3519)
!3528 = !DILocation(line: 714, column: 7, scope: !3472)
!3529 = !DILocation(line: 716, column: 5, scope: !3519)
!3530 = !DILocation(line: 717, column: 29, scope: !3472)
!3531 = !DILocation(line: 717, column: 10, scope: !3472)
!3532 = !DILocation(line: 717, column: 3, scope: !3472)
!3533 = !DILocation(line: 718, column: 1, scope: !3472)
!3534 = distinct !DISubprogram(name: "install_file_in_dir", scope: !66, file: !66, line: 777, type: !306, scopeLine: 779, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!3535 = !DILocalVariable(name: "from", arg: 1, scope: !3534, file: !66, line: 777, type: !180)
!3536 = !DILocation(line: 777, column: 34, scope: !3534)
!3537 = !DILocalVariable(name: "to_dir", arg: 2, scope: !3534, file: !66, line: 777, type: !180)
!3538 = !DILocation(line: 777, column: 52, scope: !3534)
!3539 = !DILocalVariable(name: "x", arg: 3, scope: !3534, file: !66, line: 778, type: !246)
!3540 = !DILocation(line: 778, column: 47, scope: !3534)
!3541 = !DILocalVariable(name: "mkdir_and_install", arg: 4, scope: !3534, file: !66, line: 778, type: !142)
!3542 = !DILocation(line: 778, column: 55, scope: !3534)
!3543 = !DILocalVariable(name: "from_base", scope: !3534, file: !66, line: 780, type: !180)
!3544 = !DILocation(line: 780, column: 15, scope: !3534)
!3545 = !DILocation(line: 780, column: 43, scope: !3534)
!3546 = !DILocation(line: 780, column: 27, scope: !3534)
!3547 = !DILocalVariable(name: "to", scope: !3534, file: !66, line: 781, type: !9)
!3548 = !DILocation(line: 781, column: 9, scope: !3534)
!3549 = !DILocation(line: 781, column: 32, scope: !3534)
!3550 = !DILocation(line: 781, column: 40, scope: !3534)
!3551 = !DILocation(line: 781, column: 14, scope: !3534)
!3552 = !DILocalVariable(name: "ret", scope: !3534, file: !66, line: 782, type: !142)
!3553 = !DILocation(line: 782, column: 8, scope: !3534)
!3554 = !DILocation(line: 784, column: 7, scope: !3555)
!3555 = distinct !DILexicalBlock(scope: !3534, file: !66, line: 784, column: 7)
!3556 = !DILocation(line: 784, column: 7, scope: !3534)
!3557 = !DILocation(line: 785, column: 32, scope: !3555)
!3558 = !DILocation(line: 785, column: 38, scope: !3555)
!3559 = !DILocation(line: 785, column: 63, scope: !3555)
!3560 = !DILocation(line: 785, column: 11, scope: !3555)
!3561 = !DILocation(line: 785, column: 9, scope: !3555)
!3562 = !DILocation(line: 785, column: 5, scope: !3555)
!3563 = !DILocation(line: 787, column: 9, scope: !3534)
!3564 = !DILocation(line: 787, column: 13, scope: !3534)
!3565 = !DILocation(line: 787, column: 38, scope: !3534)
!3566 = !DILocation(line: 787, column: 44, scope: !3534)
!3567 = !DILocation(line: 787, column: 48, scope: !3534)
!3568 = !DILocation(line: 787, column: 16, scope: !3534)
!3569 = !DILocation(line: 0, scope: !3534)
!3570 = !DILocation(line: 787, column: 7, scope: !3534)
!3571 = !DILocation(line: 788, column: 9, scope: !3534)
!3572 = !DILocation(line: 788, column: 3, scope: !3534)
!3573 = !DILocation(line: 789, column: 10, scope: !3534)
!3574 = !DILocation(line: 789, column: 3, scope: !3534)
!3575 = distinct !DISubprogram(name: "mkancesdirs_safe_wd", scope: !66, file: !66, line: 725, type: !260, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!3576 = !DILocalVariable(name: "from", arg: 1, scope: !3575, file: !66, line: 725, type: !180)
!3577 = !DILocation(line: 725, column: 34, scope: !3575)
!3578 = !DILocalVariable(name: "to", arg: 2, scope: !3575, file: !66, line: 725, type: !9)
!3579 = !DILocation(line: 725, column: 46, scope: !3575)
!3580 = !DILocalVariable(name: "x", arg: 3, scope: !3575, file: !66, line: 725, type: !131)
!3581 = !DILocation(line: 725, column: 69, scope: !3575)
!3582 = !DILocalVariable(name: "save_always", arg: 4, scope: !3575, file: !66, line: 726, type: !142)
!3583 = !DILocation(line: 726, column: 27, scope: !3575)
!3584 = !DILocalVariable(name: "save_working_directory", scope: !3575, file: !66, line: 728, type: !142)
!3585 = !DILocation(line: 728, column: 8, scope: !3575)
!3586 = !DILocation(line: 729, column: 5, scope: !3575)
!3587 = !DILocation(line: 730, column: 5, scope: !3575)
!3588 = !DILocation(line: 730, column: 11, scope: !3575)
!3589 = !DILocation(line: 730, column: 40, scope: !3575)
!3590 = !DILocation(line: 730, column: 43, scope: !3575)
!3591 = !DILocation(line: 0, scope: !3575)
!3592 = !DILocation(line: 730, column: 8, scope: !3575)
!3593 = !DILocalVariable(name: "status", scope: !3575, file: !66, line: 731, type: !7)
!3594 = !DILocation(line: 731, column: 7, scope: !3575)
!3595 = !DILocalVariable(name: "wd", scope: !3575, file: !66, line: 733, type: !102)
!3596 = !DILocation(line: 733, column: 17, scope: !3575)
!3597 = !DILocation(line: 734, column: 3, scope: !3575)
!3598 = !DILocation(line: 735, column: 9, scope: !3599)
!3599 = distinct !DILexicalBlock(scope: !3575, file: !66, line: 735, column: 7)
!3600 = !DILocation(line: 735, column: 7, scope: !3575)
!3601 = !DILocation(line: 736, column: 5, scope: !3599)
!3602 = !DILocation(line: 738, column: 20, scope: !3603)
!3603 = distinct !DILexicalBlock(scope: !3575, file: !66, line: 738, column: 7)
!3604 = !DILocation(line: 738, column: 44, scope: !3603)
!3605 = !DILocation(line: 738, column: 7, scope: !3603)
!3606 = !DILocation(line: 738, column: 47, scope: !3603)
!3607 = !DILocation(line: 738, column: 7, scope: !3575)
!3608 = !DILocation(line: 740, column: 17, scope: !3609)
!3609 = distinct !DILexicalBlock(scope: !3603, file: !66, line: 739, column: 5)
!3610 = !DILocation(line: 740, column: 24, scope: !3609)
!3611 = !DILocation(line: 740, column: 57, scope: !3609)
!3612 = !DILocation(line: 740, column: 7, scope: !3609)
!3613 = !DILocation(line: 741, column: 14, scope: !3609)
!3614 = !DILocation(line: 742, column: 5, scope: !3609)
!3615 = !DILocation(line: 744, column: 7, scope: !3616)
!3616 = distinct !DILexicalBlock(scope: !3575, file: !66, line: 744, column: 7)
!3617 = !DILocation(line: 744, column: 7, scope: !3575)
!3618 = !DILocalVariable(name: "restore_result", scope: !3619, file: !66, line: 746, type: !7)
!3619 = distinct !DILexicalBlock(scope: !3616, file: !66, line: 745, column: 5)
!3620 = !DILocation(line: 746, column: 11, scope: !3619)
!3621 = !DILocation(line: 746, column: 49, scope: !3619)
!3622 = !DILocation(line: 746, column: 28, scope: !3619)
!3623 = !DILocalVariable(name: "restore_errno", scope: !3619, file: !66, line: 747, type: !7)
!3624 = !DILocation(line: 747, column: 11, scope: !3619)
!3625 = !DILocation(line: 747, column: 27, scope: !3619)
!3626 = !DILocation(line: 748, column: 7, scope: !3619)
!3627 = !DILocation(line: 749, column: 26, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3619, file: !66, line: 749, column: 11)
!3629 = !DILocation(line: 749, column: 24, scope: !3628)
!3630 = !DILocation(line: 749, column: 11, scope: !3619)
!3631 = !DILocation(line: 750, column: 9, scope: !3628)
!3632 = !DILocation(line: 751, column: 11, scope: !3633)
!3633 = distinct !DILexicalBlock(scope: !3619, file: !66, line: 751, column: 11)
!3634 = !DILocation(line: 751, column: 26, scope: !3633)
!3635 = !DILocation(line: 751, column: 30, scope: !3633)
!3636 = !DILocation(line: 751, column: 33, scope: !3633)
!3637 = !DILocation(line: 751, column: 40, scope: !3633)
!3638 = !DILocation(line: 751, column: 11, scope: !3619)
!3639 = !DILocation(line: 753, column: 21, scope: !3640)
!3640 = distinct !DILexicalBlock(scope: !3633, file: !66, line: 752, column: 9)
!3641 = !DILocation(line: 753, column: 36, scope: !3640)
!3642 = !DILocation(line: 754, column: 18, scope: !3640)
!3643 = !DILocation(line: 753, column: 11, scope: !3640)
!3644 = !DILocation(line: 755, column: 11, scope: !3640)
!3645 = !DILocation(line: 757, column: 5, scope: !3619)
!3646 = !DILocation(line: 758, column: 10, scope: !3575)
!3647 = !DILocation(line: 758, column: 17, scope: !3575)
!3648 = !DILocation(line: 758, column: 3, scope: !3575)
!3649 = !DILocation(line: 759, column: 1, scope: !3575)
!3650 = distinct !DISubprogram(name: "make_ancestor", scope: !66, file: !66, line: 427, type: !248, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!3651 = !DILocalVariable(name: "dir", arg: 1, scope: !3650, file: !66, line: 427, type: !180)
!3652 = !DILocation(line: 427, column: 28, scope: !3650)
!3653 = !DILocalVariable(name: "component", arg: 2, scope: !3650, file: !66, line: 427, type: !180)
!3654 = !DILocation(line: 427, column: 45, scope: !3650)
!3655 = !DILocalVariable(name: "options", arg: 3, scope: !3650, file: !66, line: 427, type: !53)
!3656 = !DILocation(line: 427, column: 62, scope: !3650)
!3657 = !DILocalVariable(name: "x", scope: !3650, file: !66, line: 429, type: !246)
!3658 = !DILocation(line: 429, column: 28, scope: !3650)
!3659 = !DILocation(line: 429, column: 32, scope: !3650)
!3660 = !DILocation(line: 430, column: 7, scope: !3661)
!3661 = distinct !DILexicalBlock(scope: !3650, file: !66, line: 430, column: 7)
!3662 = !DILocation(line: 430, column: 10, scope: !3661)
!3663 = !DILocation(line: 430, column: 31, scope: !3661)
!3664 = !DILocation(line: 430, column: 46, scope: !3661)
!3665 = !DILocation(line: 430, column: 34, scope: !3661)
!3666 = !DILocation(line: 430, column: 66, scope: !3661)
!3667 = !DILocation(line: 431, column: 7, scope: !3661)
!3668 = !DILocation(line: 431, column: 31, scope: !3661)
!3669 = !DILocation(line: 431, column: 12, scope: !3661)
!3670 = !DILocation(line: 430, column: 7, scope: !3650)
!3671 = !DILocation(line: 432, column: 15, scope: !3661)
!3672 = !DILocation(line: 432, column: 22, scope: !3661)
!3673 = !DILocation(line: 433, column: 12, scope: !3661)
!3674 = !DILocation(line: 432, column: 5, scope: !3661)
!3675 = !DILocalVariable(name: "r", scope: !3650, file: !66, line: 435, type: !7)
!3676 = !DILocation(line: 435, column: 7, scope: !3650)
!3677 = !DILocation(line: 435, column: 18, scope: !3650)
!3678 = !DILocation(line: 435, column: 11, scope: !3650)
!3679 = !DILocation(line: 436, column: 7, scope: !3680)
!3680 = distinct !DILexicalBlock(scope: !3650, file: !66, line: 436, column: 7)
!3681 = !DILocation(line: 436, column: 9, scope: !3680)
!3682 = !DILocation(line: 436, column: 7, scope: !3650)
!3683 = !DILocation(line: 437, column: 21, scope: !3680)
!3684 = !DILocation(line: 437, column: 26, scope: !3680)
!3685 = !DILocation(line: 437, column: 5, scope: !3680)
!3686 = !DILocation(line: 438, column: 10, scope: !3650)
!3687 = !DILocation(line: 438, column: 3, scope: !3650)
!3688 = distinct !DISubprogram(name: "defaultcon", scope: !3689, file: !3689, line: 44, type: !250, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!3689 = !DIFile(filename: "src/selinux.h", directory: "/home/mbarbar/clone/coreutils")
!3690 = !DILocalVariable(name: "path", arg: 1, scope: !3688, file: !3689, line: 44, type: !180)
!3691 = !DILocation(line: 44, column: 25, scope: !3688)
!3692 = !DILocalVariable(name: "mode", arg: 2, scope: !3688, file: !3689, line: 44, type: !139)
!3693 = !DILocation(line: 44, column: 38, scope: !3688)
!3694 = !DILocation(line: 45, column: 3, scope: !3688)
!3695 = !DILocation(line: 45, column: 9, scope: !3688)
!3696 = !DILocation(line: 45, column: 20, scope: !3688)
!3697 = distinct !DISubprogram(name: "ignorable_ctx_err", scope: !3689, file: !3689, line: 25, type: !256, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!3698 = !DILocalVariable(name: "err", arg: 1, scope: !3697, file: !3689, line: 25, type: !7)
!3699 = !DILocation(line: 25, column: 24, scope: !3697)
!3700 = !DILocation(line: 27, column: 10, scope: !3697)
!3701 = !DILocation(line: 27, column: 14, scope: !3697)
!3702 = !DILocation(line: 27, column: 25, scope: !3697)
!3703 = !DILocation(line: 27, column: 28, scope: !3697)
!3704 = !DILocation(line: 27, column: 32, scope: !3697)
!3705 = !DILocation(line: 27, column: 3, scope: !3697)
!3706 = distinct !DISubprogram(name: "announce_mkdir", scope: !66, file: !66, line: 416, type: !252, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!3707 = !DILocalVariable(name: "dir", arg: 1, scope: !3706, file: !66, line: 416, type: !180)
!3708 = !DILocation(line: 416, column: 29, scope: !3706)
!3709 = !DILocalVariable(name: "options", arg: 2, scope: !3706, file: !66, line: 416, type: !53)
!3710 = !DILocation(line: 416, column: 40, scope: !3706)
!3711 = !DILocalVariable(name: "x", scope: !3706, file: !66, line: 418, type: !246)
!3712 = !DILocation(line: 418, column: 28, scope: !3706)
!3713 = !DILocation(line: 418, column: 32, scope: !3706)
!3714 = !DILocation(line: 419, column: 7, scope: !3715)
!3715 = distinct !DILexicalBlock(scope: !3706, file: !66, line: 419, column: 7)
!3716 = !DILocation(line: 419, column: 10, scope: !3715)
!3717 = !DILocation(line: 419, column: 7, scope: !3706)
!3718 = !DILocation(line: 420, column: 19, scope: !3715)
!3719 = !DILocation(line: 420, column: 27, scope: !3715)
!3720 = !DILocation(line: 420, column: 55, scope: !3715)
!3721 = !DILocation(line: 420, column: 5, scope: !3715)
!3722 = !DILocation(line: 421, column: 1, scope: !3706)
!3723 = distinct !DISubprogram(name: "copy_file", scope: !66, file: !66, line: 473, type: !262, scopeLine: 474, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!3724 = !DILocalVariable(name: "from", arg: 1, scope: !3723, file: !66, line: 473, type: !180)
!3725 = !DILocation(line: 473, column: 24, scope: !3723)
!3726 = !DILocalVariable(name: "to", arg: 2, scope: !3723, file: !66, line: 473, type: !180)
!3727 = !DILocation(line: 473, column: 42, scope: !3723)
!3728 = !DILocalVariable(name: "x", arg: 3, scope: !3723, file: !66, line: 473, type: !246)
!3729 = !DILocation(line: 473, column: 71, scope: !3723)
!3730 = !DILocalVariable(name: "copy_into_self", scope: !3723, file: !66, line: 475, type: !142)
!3731 = !DILocation(line: 475, column: 8, scope: !3723)
!3732 = !DILocation(line: 477, column: 7, scope: !3733)
!3733 = distinct !DILexicalBlock(scope: !3723, file: !66, line: 477, column: 7)
!3734 = !DILocation(line: 477, column: 27, scope: !3733)
!3735 = !DILocation(line: 477, column: 42, scope: !3733)
!3736 = !DILocation(line: 477, column: 48, scope: !3733)
!3737 = !DILocation(line: 477, column: 52, scope: !3733)
!3738 = !DILocation(line: 477, column: 31, scope: !3733)
!3739 = !DILocation(line: 477, column: 7, scope: !3723)
!3740 = !DILocation(line: 478, column: 5, scope: !3733)
!3741 = !DILocation(line: 486, column: 16, scope: !3723)
!3742 = !DILocation(line: 486, column: 22, scope: !3723)
!3743 = !DILocation(line: 486, column: 33, scope: !3723)
!3744 = !DILocation(line: 486, column: 10, scope: !3723)
!3745 = !DILocation(line: 486, column: 3, scope: !3723)
!3746 = !DILocation(line: 487, column: 1, scope: !3723)
!3747 = distinct !DISubprogram(name: "strip", scope: !66, file: !66, line: 547, type: !220, scopeLine: 548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!3748 = !DILocalVariable(name: "name", arg: 1, scope: !3747, file: !66, line: 547, type: !180)
!3749 = !DILocation(line: 547, column: 20, scope: !3747)
!3750 = !DILocalVariable(name: "status", scope: !3747, file: !66, line: 549, type: !7)
!3751 = !DILocation(line: 549, column: 7, scope: !3747)
!3752 = !DILocalVariable(name: "ok", scope: !3747, file: !66, line: 550, type: !142)
!3753 = !DILocation(line: 550, column: 8, scope: !3747)
!3754 = !DILocalVariable(name: "pid", scope: !3747, file: !66, line: 551, type: !111)
!3755 = !DILocation(line: 551, column: 9, scope: !3747)
!3756 = !DILocation(line: 551, column: 15, scope: !3747)
!3757 = !DILocation(line: 553, column: 11, scope: !3747)
!3758 = !DILocation(line: 553, column: 3, scope: !3747)
!3759 = !DILocation(line: 556, column: 17, scope: !3760)
!3760 = distinct !DILexicalBlock(scope: !3747, file: !66, line: 554, column: 5)
!3761 = !DILocation(line: 556, column: 24, scope: !3760)
!3762 = !DILocation(line: 556, column: 7, scope: !3760)
!3763 = !DILocation(line: 557, column: 7, scope: !3760)
!3764 = !DILocation(line: 559, column: 15, scope: !3760)
!3765 = !DILocation(line: 559, column: 30, scope: !3760)
!3766 = !DILocation(line: 559, column: 45, scope: !3760)
!3767 = !DILocation(line: 559, column: 7, scope: !3760)
!3768 = !DILocation(line: 560, column: 7, scope: !3760)
!3769 = !DILocation(line: 562, column: 20, scope: !3770)
!3770 = distinct !DILexicalBlock(scope: !3760, file: !66, line: 562, column: 11)
!3771 = !DILocation(line: 562, column: 11, scope: !3770)
!3772 = !DILocation(line: 562, column: 37, scope: !3770)
!3773 = !DILocation(line: 562, column: 11, scope: !3760)
!3774 = !DILocation(line: 563, column: 19, scope: !3770)
!3775 = !DILocation(line: 563, column: 26, scope: !3770)
!3776 = !DILocation(line: 563, column: 9, scope: !3770)
!3777 = !DILocation(line: 564, column: 18, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3770, file: !66, line: 564, column: 16)
!3779 = !DILocation(line: 564, column: 37, scope: !3778)
!3780 = !DILocation(line: 564, column: 40, scope: !3778)
!3781 = !DILocation(line: 564, column: 16, scope: !3770)
!3782 = !DILocation(line: 565, column: 22, scope: !3778)
!3783 = !DILocation(line: 565, column: 9, scope: !3778)
!3784 = !DILocation(line: 567, column: 12, scope: !3778)
!3785 = !DILocation(line: 568, column: 7, scope: !3760)
!3786 = !DILocation(line: 570, column: 10, scope: !3747)
!3787 = !DILocation(line: 570, column: 3, scope: !3747)
!3788 = distinct !DISubprogram(name: "change_timestamps", scope: !66, file: !66, line: 526, type: !266, scopeLine: 527, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!3789 = !DILocalVariable(name: "src_sb", arg: 1, scope: !3788, file: !66, line: 526, type: !268)
!3790 = !DILocation(line: 526, column: 39, scope: !3788)
!3791 = !DILocalVariable(name: "dest", arg: 2, scope: !3788, file: !66, line: 526, type: !180)
!3792 = !DILocation(line: 526, column: 59, scope: !3788)
!3793 = !DILocalVariable(name: "timespec", scope: !3788, file: !66, line: 528, type: !303)
!3794 = !DILocation(line: 528, column: 19, scope: !3788)
!3795 = !DILocation(line: 529, column: 3, scope: !3788)
!3796 = !DILocation(line: 529, column: 33, scope: !3788)
!3797 = !DILocation(line: 529, column: 17, scope: !3788)
!3798 = !{i64 0, i64 8, !3288, i64 8, i64 8, !3288}
!3799 = !DILocation(line: 530, column: 3, scope: !3788)
!3800 = !DILocation(line: 530, column: 33, scope: !3788)
!3801 = !DILocation(line: 530, column: 17, scope: !3788)
!3802 = !DILocation(line: 532, column: 16, scope: !3803)
!3803 = distinct !DILexicalBlock(scope: !3788, file: !66, line: 532, column: 7)
!3804 = !DILocation(line: 532, column: 22, scope: !3803)
!3805 = !DILocation(line: 532, column: 7, scope: !3803)
!3806 = !DILocation(line: 532, column: 7, scope: !3788)
!3807 = !DILocation(line: 534, column: 17, scope: !3808)
!3808 = distinct !DILexicalBlock(scope: !3803, file: !66, line: 533, column: 5)
!3809 = !DILocation(line: 534, column: 24, scope: !3808)
!3810 = !DILocation(line: 534, column: 59, scope: !3808)
!3811 = !DILocation(line: 534, column: 7, scope: !3808)
!3812 = !DILocation(line: 535, column: 7, scope: !3808)
!3813 = !DILocation(line: 537, column: 3, scope: !3788)
!3814 = !DILocation(line: 538, column: 1, scope: !3788)
!3815 = distinct !DISubprogram(name: "change_attributes", scope: !66, file: !66, line: 493, type: !220, scopeLine: 494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!3816 = !DILocalVariable(name: "name", arg: 1, scope: !3815, file: !66, line: 493, type: !180)
!3817 = !DILocation(line: 493, column: 32, scope: !3815)
!3818 = !DILocalVariable(name: "ok", scope: !3815, file: !66, line: 495, type: !142)
!3819 = !DILocation(line: 495, column: 8, scope: !3815)
!3820 = !DILocation(line: 508, column: 10, scope: !3821)
!3821 = distinct !DILexicalBlock(scope: !3815, file: !66, line: 508, column: 7)
!3822 = !DILocation(line: 508, column: 19, scope: !3821)
!3823 = !DILocation(line: 508, column: 33, scope: !3821)
!3824 = !DILocation(line: 508, column: 36, scope: !3821)
!3825 = !DILocation(line: 508, column: 45, scope: !3821)
!3826 = !DILocation(line: 509, column: 7, scope: !3821)
!3827 = !DILocation(line: 509, column: 18, scope: !3821)
!3828 = !DILocation(line: 509, column: 24, scope: !3821)
!3829 = !DILocation(line: 509, column: 34, scope: !3821)
!3830 = !DILocation(line: 509, column: 10, scope: !3821)
!3831 = !DILocation(line: 509, column: 44, scope: !3821)
!3832 = !DILocation(line: 508, column: 7, scope: !3815)
!3833 = !DILocation(line: 510, column: 15, scope: !3821)
!3834 = !DILocation(line: 510, column: 22, scope: !3821)
!3835 = !DILocation(line: 510, column: 58, scope: !3821)
!3836 = !DILocation(line: 510, column: 5, scope: !3821)
!3837 = !DILocation(line: 511, column: 19, scope: !3838)
!3838 = distinct !DILexicalBlock(scope: !3821, file: !66, line: 511, column: 12)
!3839 = !DILocation(line: 511, column: 25, scope: !3838)
!3840 = !DILocation(line: 511, column: 12, scope: !3838)
!3841 = !DILocation(line: 511, column: 31, scope: !3838)
!3842 = !DILocation(line: 511, column: 12, scope: !3821)
!3843 = !DILocation(line: 512, column: 15, scope: !3838)
!3844 = !DILocation(line: 512, column: 22, scope: !3838)
!3845 = !DILocation(line: 512, column: 60, scope: !3838)
!3846 = !DILocation(line: 512, column: 5, scope: !3838)
!3847 = !DILocation(line: 514, column: 8, scope: !3838)
!3848 = !DILocation(line: 516, column: 7, scope: !3849)
!3849 = distinct !DILexicalBlock(scope: !3815, file: !66, line: 516, column: 7)
!3850 = !DILocation(line: 516, column: 7, scope: !3815)
!3851 = !DILocation(line: 517, column: 24, scope: !3849)
!3852 = !DILocation(line: 517, column: 5, scope: !3849)
!3853 = !DILocation(line: 519, column: 10, scope: !3815)
!3854 = !DILocation(line: 519, column: 3, scope: !3815)
!3855 = !DILocalVariable(name: "file", arg: 1, scope: !345, file: !66, line: 314, type: !180)
!3856 = !DILocation(line: 314, column: 32, scope: !345)
!3857 = !DILocalVariable(name: "st", scope: !345, file: !66, line: 316, type: !270)
!3858 = !DILocation(line: 316, column: 15, scope: !345)
!3859 = !DILocalVariable(name: "scontext", scope: !345, file: !66, line: 317, type: !9)
!3860 = !DILocation(line: 317, column: 9, scope: !345)
!3861 = !DILocation(line: 320, column: 7, scope: !3862)
!3862 = distinct !DILexicalBlock(scope: !345, file: !66, line: 320, column: 7)
!3863 = !DILocation(line: 320, column: 23, scope: !3862)
!3864 = !DILocation(line: 320, column: 7, scope: !345)
!3865 = !DILocation(line: 323, column: 7, scope: !3866)
!3866 = distinct !DILexicalBlock(scope: !3862, file: !66, line: 321, column: 5)
!3867 = !DILocation(line: 325, column: 14, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !345, file: !66, line: 325, column: 7)
!3869 = !DILocation(line: 325, column: 7, scope: !3868)
!3870 = !DILocation(line: 325, column: 25, scope: !3868)
!3871 = !DILocation(line: 325, column: 7, scope: !345)
!3872 = !DILocation(line: 326, column: 5, scope: !3868)
!3873 = !DILocation(line: 328, column: 7, scope: !3874)
!3874 = distinct !DILexicalBlock(scope: !345, file: !66, line: 328, column: 7)
!3875 = !DILocation(line: 328, column: 18, scope: !3874)
!3876 = !DILocation(line: 328, column: 21, scope: !3874)
!3877 = !DILocation(line: 328, column: 7, scope: !345)
!3878 = !DILocalVariable(name: "p0", scope: !3879, file: !66, line: 337, type: !180)
!3879 = distinct !DILexicalBlock(scope: !3874, file: !66, line: 329, column: 5)
!3880 = !DILocation(line: 337, column: 19, scope: !3879)
!3881 = !DILocalVariable(name: "p", scope: !3879, file: !66, line: 338, type: !180)
!3882 = !DILocation(line: 338, column: 19, scope: !3879)
!3883 = !DILocation(line: 338, column: 23, scope: !3879)
!3884 = !DILocation(line: 338, column: 28, scope: !3879)
!3885 = !DILocation(line: 339, column: 7, scope: !3879)
!3886 = !DILocation(line: 339, column: 14, scope: !3879)
!3887 = !DILocation(line: 340, column: 9, scope: !3879)
!3888 = distinct !{!3888, !3885, !3889}
!3889 = !DILocation(line: 340, column: 11, scope: !3879)
!3890 = !DILocation(line: 343, column: 12, scope: !3879)
!3891 = !DILocation(line: 343, column: 14, scope: !3879)
!3892 = !DILocation(line: 343, column: 10, scope: !3879)
!3893 = !DILocation(line: 345, column: 12, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !3879, file: !66, line: 345, column: 11)
!3895 = !DILocation(line: 345, column: 11, scope: !3894)
!3896 = !DILocation(line: 345, column: 11, scope: !3879)
!3897 = !DILocalVariable(name: "prefix", scope: !3898, file: !66, line: 347, type: !9)
!3898 = distinct !DILexicalBlock(scope: !3894, file: !66, line: 346, column: 9)
!3899 = !DILocation(line: 347, column: 17, scope: !3898)
!3900 = !DILocation(line: 348, column: 11, scope: !3898)
!3901 = !DILocation(line: 350, column: 15, scope: !3902)
!3902 = distinct !DILexicalBlock(scope: !3898, file: !66, line: 349, column: 13)
!3903 = !DILocation(line: 351, column: 13, scope: !3902)
!3904 = !DILocation(line: 352, column: 19, scope: !3898)
!3905 = !DILocation(line: 352, column: 18, scope: !3898)
!3906 = !DILocation(line: 352, column: 21, scope: !3898)
!3907 = !DILocation(line: 352, column: 25, scope: !3898)
!3908 = !DILocation(line: 352, column: 24, scope: !3898)
!3909 = !DILocation(line: 0, scope: !3898)
!3910 = distinct !{!3910, !3900, !3911}
!3911 = !DILocation(line: 352, column: 37, scope: !3898)
!3912 = !DILocation(line: 354, column: 28, scope: !3898)
!3913 = !DILocation(line: 354, column: 32, scope: !3898)
!3914 = !DILocation(line: 354, column: 30, scope: !3898)
!3915 = !DILocation(line: 354, column: 35, scope: !3898)
!3916 = !DILocation(line: 354, column: 20, scope: !3898)
!3917 = !DILocation(line: 354, column: 18, scope: !3898)
!3918 = !DILocation(line: 355, column: 15, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3898, file: !66, line: 355, column: 15)
!3920 = !DILocation(line: 355, column: 15, scope: !3898)
!3921 = !DILocation(line: 357, column: 32, scope: !3922)
!3922 = distinct !DILexicalBlock(scope: !3919, file: !66, line: 356, column: 13)
!3923 = !DILocation(line: 357, column: 40, scope: !3922)
!3924 = !DILocation(line: 357, column: 44, scope: !3922)
!3925 = !DILocation(line: 357, column: 48, scope: !3922)
!3926 = !DILocation(line: 357, column: 46, scope: !3922)
!3927 = !DILocation(line: 357, column: 23, scope: !3922)
!3928 = !DILocation(line: 357, column: 15, scope: !3922)
!3929 = !DILocation(line: 359, column: 21, scope: !3922)
!3930 = !DILocation(line: 359, column: 15, scope: !3922)
!3931 = !DILocation(line: 360, column: 13, scope: !3922)
!3932 = !DILocation(line: 361, column: 9, scope: !3898)
!3933 = !DILocation(line: 362, column: 5, scope: !3879)
!3934 = !DILocation(line: 363, column: 14, scope: !345)
!3935 = !DILocation(line: 368, column: 22, scope: !3936)
!3936 = distinct !DILexicalBlock(scope: !345, file: !66, line: 368, column: 7)
!3937 = !DILocation(line: 368, column: 31, scope: !3936)
!3938 = !DILocation(line: 368, column: 8, scope: !3936)
!3939 = !DILocation(line: 368, column: 51, scope: !3936)
!3940 = !DILocation(line: 369, column: 7, scope: !3936)
!3941 = !DILocation(line: 369, column: 10, scope: !3936)
!3942 = !DILocation(line: 368, column: 7, scope: !345)
!3943 = !DILocation(line: 371, column: 11, scope: !3944)
!3944 = distinct !DILexicalBlock(scope: !3945, file: !66, line: 371, column: 11)
!3945 = distinct !DILexicalBlock(scope: !3936, file: !66, line: 370, column: 5)
!3946 = !DILocation(line: 371, column: 20, scope: !3944)
!3947 = !DILocation(line: 371, column: 11, scope: !3945)
!3948 = !DILocation(line: 372, column: 18, scope: !3944)
!3949 = !DILocation(line: 372, column: 9, scope: !3944)
!3950 = !DILocation(line: 373, column: 7, scope: !3945)
!3951 = !DILocation(line: 376, column: 20, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !345, file: !66, line: 376, column: 7)
!3953 = !DILocation(line: 376, column: 26, scope: !3952)
!3954 = !DILocation(line: 376, column: 7, scope: !3952)
!3955 = !DILocation(line: 376, column: 36, scope: !3952)
!3956 = !DILocation(line: 376, column: 40, scope: !3952)
!3957 = !DILocation(line: 376, column: 43, scope: !3952)
!3958 = !DILocation(line: 376, column: 49, scope: !3952)
!3959 = !DILocation(line: 376, column: 7, scope: !345)
!3960 = !DILocation(line: 377, column: 15, scope: !3952)
!3961 = !DILocation(line: 378, column: 12, scope: !3952)
!3962 = !DILocation(line: 379, column: 12, scope: !3952)
!3963 = !DILocation(line: 379, column: 44, scope: !3952)
!3964 = !DILocation(line: 379, column: 32, scope: !3952)
!3965 = !DILocation(line: 377, column: 5, scope: !3952)
!3966 = !DILocation(line: 381, column: 12, scope: !345)
!3967 = !DILocation(line: 381, column: 3, scope: !345)
!3968 = !DILocation(line: 382, column: 3, scope: !345)
!3969 = !DILocation(line: 383, column: 1, scope: !345)
!3970 = distinct !DISubprogram(name: "need_copy", scope: !66, file: !66, line: 174, type: !262, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!3971 = !DILocalVariable(name: "src_name", arg: 1, scope: !3970, file: !66, line: 174, type: !180)
!3972 = !DILocation(line: 174, column: 24, scope: !3970)
!3973 = !DILocalVariable(name: "dest_name", arg: 2, scope: !3970, file: !66, line: 174, type: !180)
!3974 = !DILocation(line: 174, column: 46, scope: !3970)
!3975 = !DILocalVariable(name: "x", arg: 3, scope: !3970, file: !66, line: 175, type: !246)
!3976 = !DILocation(line: 175, column: 37, scope: !3970)
!3977 = !DILocalVariable(name: "src_sb", scope: !3970, file: !66, line: 177, type: !270)
!3978 = !DILocation(line: 177, column: 15, scope: !3970)
!3979 = !DILocalVariable(name: "dest_sb", scope: !3970, file: !66, line: 177, type: !270)
!3980 = !DILocation(line: 177, column: 23, scope: !3970)
!3981 = !DILocalVariable(name: "src_fd", scope: !3970, file: !66, line: 178, type: !7)
!3982 = !DILocation(line: 178, column: 7, scope: !3970)
!3983 = !DILocalVariable(name: "dest_fd", scope: !3970, file: !66, line: 178, type: !7)
!3984 = !DILocation(line: 178, column: 15, scope: !3970)
!3985 = !DILocalVariable(name: "content_match", scope: !3970, file: !66, line: 179, type: !142)
!3986 = !DILocation(line: 179, column: 8, scope: !3970)
!3987 = !DILocation(line: 181, column: 19, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3970, file: !66, line: 181, column: 7)
!3989 = !DILocation(line: 181, column: 7, scope: !3988)
!3990 = !DILocation(line: 181, column: 7, scope: !3970)
!3991 = !DILocation(line: 182, column: 5, scope: !3988)
!3992 = !DILocation(line: 185, column: 14, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3970, file: !66, line: 185, column: 7)
!3994 = !DILocation(line: 185, column: 7, scope: !3993)
!3995 = !DILocation(line: 185, column: 33, scope: !3993)
!3996 = !DILocation(line: 185, column: 7, scope: !3970)
!3997 = !DILocation(line: 186, column: 5, scope: !3993)
!3998 = !DILocation(line: 188, column: 14, scope: !3999)
!3999 = distinct !DILexicalBlock(scope: !3970, file: !66, line: 188, column: 7)
!4000 = !DILocation(line: 188, column: 7, scope: !3999)
!4001 = !DILocation(line: 188, column: 35, scope: !3999)
!4002 = !DILocation(line: 188, column: 7, scope: !3970)
!4003 = !DILocation(line: 189, column: 5, scope: !3999)
!4004 = !DILocation(line: 191, column: 8, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !3970, file: !66, line: 191, column: 7)
!4006 = !DILocation(line: 191, column: 33, scope: !4005)
!4007 = !DILocation(line: 191, column: 37, scope: !4005)
!4008 = !DILocation(line: 192, column: 7, scope: !4005)
!4009 = !DILocation(line: 192, column: 29, scope: !4005)
!4010 = !DILocation(line: 192, column: 10, scope: !4005)
!4011 = !DILocation(line: 192, column: 38, scope: !4005)
!4012 = !DILocation(line: 192, column: 61, scope: !4005)
!4013 = !DILocation(line: 192, column: 41, scope: !4005)
!4014 = !DILocation(line: 191, column: 7, scope: !3970)
!4015 = !DILocation(line: 193, column: 5, scope: !4005)
!4016 = !DILocation(line: 195, column: 14, scope: !4017)
!4017 = distinct !DILexicalBlock(scope: !3970, file: !66, line: 195, column: 7)
!4018 = !{!2915, !2916, i64 48}
!4019 = !DILocation(line: 195, column: 33, scope: !4017)
!4020 = !DILocation(line: 195, column: 22, scope: !4017)
!4021 = !DILocation(line: 196, column: 7, scope: !4017)
!4022 = !DILocation(line: 196, column: 19, scope: !4017)
!4023 = !DILocation(line: 196, column: 27, scope: !4017)
!4024 = !DILocation(line: 196, column: 49, scope: !4017)
!4025 = !DILocation(line: 196, column: 46, scope: !4017)
!4026 = !DILocation(line: 195, column: 7, scope: !3970)
!4027 = !DILocation(line: 197, column: 5, scope: !4017)
!4028 = !DILocation(line: 199, column: 7, scope: !4029)
!4029 = distinct !DILexicalBlock(scope: !3970, file: !66, line: 199, column: 7)
!4030 = !DILocation(line: 199, column: 16, scope: !4029)
!4031 = !DILocation(line: 199, column: 7, scope: !3970)
!4032 = !DILocation(line: 201, column: 7, scope: !4033)
!4033 = distinct !DILexicalBlock(scope: !4029, file: !66, line: 200, column: 5)
!4034 = !DILocation(line: 201, column: 13, scope: !4033)
!4035 = !DILocalVariable(name: "ruid", scope: !4033, file: !66, line: 202, type: !127)
!4036 = !DILocation(line: 202, column: 13, scope: !4033)
!4037 = !DILocation(line: 202, column: 20, scope: !4033)
!4038 = !DILocation(line: 203, column: 12, scope: !4039)
!4039 = distinct !DILexicalBlock(scope: !4033, file: !66, line: 203, column: 11)
!4040 = !DILocation(line: 203, column: 17, scope: !4039)
!4041 = !DILocation(line: 203, column: 31, scope: !4039)
!4042 = !DILocation(line: 203, column: 34, scope: !4039)
!4043 = !DILocation(line: 203, column: 41, scope: !4039)
!4044 = !DILocation(line: 203, column: 52, scope: !4039)
!4045 = !{!2915, !2636, i64 28}
!4046 = !DILocation(line: 203, column: 62, scope: !4039)
!4047 = !DILocation(line: 203, column: 59, scope: !4039)
!4048 = !DILocation(line: 203, column: 11, scope: !4033)
!4049 = !DILocation(line: 204, column: 9, scope: !4039)
!4050 = !DILocation(line: 205, column: 5, scope: !4033)
!4051 = !DILocation(line: 206, column: 20, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !4029, file: !66, line: 206, column: 12)
!4053 = !DILocation(line: 206, column: 30, scope: !4052)
!4054 = !DILocation(line: 206, column: 27, scope: !4052)
!4055 = !DILocation(line: 206, column: 12, scope: !4029)
!4056 = !DILocation(line: 207, column: 5, scope: !4052)
!4057 = !DILocation(line: 209, column: 7, scope: !4058)
!4058 = distinct !DILexicalBlock(scope: !3970, file: !66, line: 209, column: 7)
!4059 = !DILocation(line: 209, column: 16, scope: !4058)
!4060 = !DILocation(line: 209, column: 7, scope: !3970)
!4061 = !DILocation(line: 211, column: 7, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !4058, file: !66, line: 210, column: 5)
!4063 = !DILocation(line: 211, column: 13, scope: !4062)
!4064 = !DILocalVariable(name: "rgid", scope: !4062, file: !66, line: 212, type: !129)
!4065 = !DILocation(line: 212, column: 13, scope: !4062)
!4066 = !DILocation(line: 212, column: 20, scope: !4062)
!4067 = !DILocation(line: 213, column: 12, scope: !4068)
!4068 = distinct !DILexicalBlock(scope: !4062, file: !66, line: 213, column: 11)
!4069 = !DILocation(line: 213, column: 17, scope: !4068)
!4070 = !DILocation(line: 213, column: 31, scope: !4068)
!4071 = !DILocation(line: 213, column: 34, scope: !4068)
!4072 = !DILocation(line: 213, column: 41, scope: !4068)
!4073 = !DILocation(line: 213, column: 52, scope: !4068)
!4074 = !{!2915, !2636, i64 32}
!4075 = !DILocation(line: 213, column: 62, scope: !4068)
!4076 = !DILocation(line: 213, column: 59, scope: !4068)
!4077 = !DILocation(line: 213, column: 11, scope: !4062)
!4078 = !DILocation(line: 214, column: 9, scope: !4068)
!4079 = !DILocation(line: 215, column: 5, scope: !4062)
!4080 = !DILocation(line: 216, column: 20, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !4058, file: !66, line: 216, column: 12)
!4082 = !DILocation(line: 216, column: 30, scope: !4081)
!4083 = !DILocation(line: 216, column: 27, scope: !4081)
!4084 = !DILocation(line: 216, column: 12, scope: !4058)
!4085 = !DILocation(line: 217, column: 5, scope: !4081)
!4086 = !DILocation(line: 220, column: 7, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !3970, file: !66, line: 220, column: 7)
!4088 = !DILocation(line: 220, column: 23, scope: !4087)
!4089 = !DILocation(line: 220, column: 26, scope: !4087)
!4090 = !DILocation(line: 220, column: 29, scope: !4087)
!4091 = !DILocation(line: 220, column: 7, scope: !3970)
!4092 = !DILocalVariable(name: "file_scontext", scope: !4093, file: !66, line: 222, type: !9)
!4093 = distinct !DILexicalBlock(scope: !4087, file: !66, line: 221, column: 5)
!4094 = !DILocation(line: 222, column: 13, scope: !4093)
!4095 = !DILocalVariable(name: "to_scontext", scope: !4093, file: !66, line: 223, type: !9)
!4096 = !DILocation(line: 223, column: 13, scope: !4093)
!4097 = !DILocalVariable(name: "scontext_match", scope: !4093, file: !66, line: 224, type: !142)
!4098 = !DILocation(line: 224, column: 12, scope: !4093)
!4099 = !DILocation(line: 226, column: 23, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !4093, file: !66, line: 226, column: 11)
!4101 = !DILocation(line: 226, column: 11, scope: !4100)
!4102 = !DILocation(line: 226, column: 49, scope: !4100)
!4103 = !DILocation(line: 226, column: 11, scope: !4093)
!4104 = !DILocation(line: 227, column: 9, scope: !4100)
!4105 = !DILocation(line: 229, column: 23, scope: !4106)
!4106 = distinct !DILexicalBlock(scope: !4093, file: !66, line: 229, column: 11)
!4107 = !DILocation(line: 229, column: 11, scope: !4106)
!4108 = !DILocation(line: 229, column: 48, scope: !4106)
!4109 = !DILocation(line: 229, column: 11, scope: !4093)
!4110 = !DILocation(line: 231, column: 20, scope: !4111)
!4111 = distinct !DILexicalBlock(scope: !4106, file: !66, line: 230, column: 9)
!4112 = !DILocation(line: 231, column: 11, scope: !4111)
!4113 = !DILocation(line: 232, column: 11, scope: !4111)
!4114 = !DILocation(line: 235, column: 24, scope: !4093)
!4115 = !DILocation(line: 235, column: 22, scope: !4093)
!4116 = !DILocation(line: 237, column: 16, scope: !4093)
!4117 = !DILocation(line: 237, column: 7, scope: !4093)
!4118 = !DILocation(line: 238, column: 16, scope: !4093)
!4119 = !DILocation(line: 238, column: 7, scope: !4093)
!4120 = !DILocation(line: 239, column: 12, scope: !4121)
!4121 = distinct !DILexicalBlock(scope: !4093, file: !66, line: 239, column: 11)
!4122 = !DILocation(line: 239, column: 11, scope: !4093)
!4123 = !DILocation(line: 240, column: 9, scope: !4121)
!4124 = !DILocation(line: 241, column: 5, scope: !4093)
!4125 = !DILocation(line: 244, column: 18, scope: !3970)
!4126 = !DILocation(line: 244, column: 12, scope: !3970)
!4127 = !DILocation(line: 244, column: 10, scope: !3970)
!4128 = !DILocation(line: 245, column: 7, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !3970, file: !66, line: 245, column: 7)
!4130 = !DILocation(line: 245, column: 14, scope: !4129)
!4131 = !DILocation(line: 245, column: 7, scope: !3970)
!4132 = !DILocation(line: 246, column: 5, scope: !4129)
!4133 = !DILocation(line: 248, column: 19, scope: !3970)
!4134 = !DILocation(line: 248, column: 13, scope: !3970)
!4135 = !DILocation(line: 248, column: 11, scope: !3970)
!4136 = !DILocation(line: 249, column: 7, scope: !4137)
!4137 = distinct !DILexicalBlock(scope: !3970, file: !66, line: 249, column: 7)
!4138 = !DILocation(line: 249, column: 15, scope: !4137)
!4139 = !DILocation(line: 249, column: 7, scope: !3970)
!4140 = !DILocation(line: 251, column: 14, scope: !4141)
!4141 = distinct !DILexicalBlock(scope: !4137, file: !66, line: 250, column: 5)
!4142 = !DILocation(line: 251, column: 7, scope: !4141)
!4143 = !DILocation(line: 252, column: 7, scope: !4141)
!4144 = !DILocation(line: 255, column: 38, scope: !3970)
!4145 = !DILocation(line: 255, column: 46, scope: !3970)
!4146 = !DILocation(line: 255, column: 19, scope: !3970)
!4147 = !DILocation(line: 255, column: 17, scope: !3970)
!4148 = !DILocation(line: 257, column: 10, scope: !3970)
!4149 = !DILocation(line: 257, column: 3, scope: !3970)
!4150 = !DILocation(line: 258, column: 10, scope: !3970)
!4151 = !DILocation(line: 258, column: 3, scope: !3970)
!4152 = !DILocation(line: 259, column: 11, scope: !3970)
!4153 = !DILocation(line: 259, column: 10, scope: !3970)
!4154 = !DILocation(line: 259, column: 3, scope: !3970)
!4155 = !DILocation(line: 260, column: 1, scope: !3970)
!4156 = !DILocalVariable(name: "a_fd", arg: 1, scope: !337, file: !66, line: 146, type: !7)
!4157 = !DILocation(line: 146, column: 24, scope: !337)
!4158 = !DILocalVariable(name: "b_fd", arg: 2, scope: !337, file: !66, line: 146, type: !7)
!4159 = !DILocation(line: 146, column: 34, scope: !337)
!4160 = !DILocalVariable(name: "size", scope: !337, file: !66, line: 152, type: !55)
!4161 = !DILocation(line: 152, column: 10, scope: !337)
!4162 = !DILocation(line: 153, column: 3, scope: !337)
!4163 = !DILocation(line: 153, column: 33, scope: !337)
!4164 = !DILocation(line: 153, column: 22, scope: !337)
!4165 = !DILocation(line: 153, column: 20, scope: !337)
!4166 = !DILocation(line: 153, column: 12, scope: !337)
!4167 = !DILocation(line: 154, column: 9, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4169, file: !66, line: 154, column: 9)
!4169 = distinct !DILexicalBlock(scope: !337, file: !66, line: 153, column: 64)
!4170 = !DILocation(line: 154, column: 28, scope: !4168)
!4171 = !DILocation(line: 154, column: 17, scope: !4168)
!4172 = !DILocation(line: 154, column: 14, scope: !4168)
!4173 = !DILocation(line: 154, column: 9, scope: !4169)
!4174 = !DILocation(line: 155, column: 7, scope: !4168)
!4175 = !DILocation(line: 157, column: 33, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !4169, file: !66, line: 157, column: 9)
!4177 = !DILocation(line: 157, column: 9, scope: !4176)
!4178 = !DILocation(line: 157, column: 39, scope: !4176)
!4179 = !DILocation(line: 157, column: 9, scope: !4169)
!4180 = !DILocation(line: 158, column: 7, scope: !4176)
!4181 = distinct !{!4181, !4162, !4182}
!4182 = !DILocation(line: 159, column: 3, scope: !337)
!4183 = !DILocation(line: 161, column: 10, scope: !337)
!4184 = !DILocation(line: 161, column: 15, scope: !337)
!4185 = !DILocation(line: 161, column: 3, scope: !337)
!4186 = !DILocation(line: 162, column: 1, scope: !337)
!4187 = distinct !DISubprogram(name: "restorecon", scope: !3689, file: !3689, line: 40, type: !254, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!4188 = !DILocalVariable(name: "path", arg: 1, scope: !4187, file: !3689, line: 40, type: !180)
!4189 = !DILocation(line: 40, column: 25, scope: !4187)
!4190 = !DILocalVariable(name: "recurse", arg: 2, scope: !4187, file: !3689, line: 40, type: !142)
!4191 = !DILocation(line: 40, column: 36, scope: !4187)
!4192 = !DILocalVariable(name: "preserve", arg: 3, scope: !4187, file: !3689, line: 40, type: !142)
!4193 = !DILocation(line: 40, column: 50, scope: !4187)
!4194 = !DILocation(line: 41, column: 3, scope: !4187)
!4195 = !DILocation(line: 41, column: 9, scope: !4187)
!4196 = !DILocation(line: 41, column: 20, scope: !4187)
!4197 = distinct !DISubprogram(name: "prog_fprintf", scope: !1409, file: !1409, line: 28, type: !4198, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1408, retainedNodes: !209)
!4198 = !DISubroutineType(types: !4199)
!4199 = !{null, !1413, !180, null}
!4200 = !DILocalVariable(name: "fp", arg: 1, scope: !4197, file: !1409, line: 28, type: !1413)
!4201 = !DILocation(line: 28, column: 21, scope: !4197)
!4202 = !DILocalVariable(name: "fmt", arg: 2, scope: !4197, file: !1409, line: 28, type: !180)
!4203 = !DILocation(line: 28, column: 37, scope: !4197)
!4204 = !DILocalVariable(name: "ap", scope: !4197, file: !1409, line: 30, type: !1447)
!4205 = !DILocation(line: 30, column: 11, scope: !4197)
!4206 = !DILocation(line: 31, column: 3, scope: !4197)
!4207 = !DILocation(line: 32, column: 3, scope: !4197)
!4208 = !DILocation(line: 33, column: 3, scope: !4197)
!4209 = !DILocation(line: 34, column: 13, scope: !4197)
!4210 = !DILocation(line: 34, column: 17, scope: !4197)
!4211 = !DILocation(line: 34, column: 22, scope: !4197)
!4212 = !DILocation(line: 34, column: 3, scope: !4197)
!4213 = !DILocation(line: 35, column: 3, scope: !4197)
!4214 = !DILocation(line: 36, column: 3, scope: !4197)
!4215 = !DILocation(line: 37, column: 1, scope: !4197)
!4216 = distinct !DISubprogram(name: "set_process_security_ctx", scope: !349, file: !349, line: 929, type: !354, scopeLine: 931, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !348, retainedNodes: !209)
!4217 = !DILocalVariable(name: "src_name", arg: 1, scope: !4216, file: !349, line: 929, type: !180)
!4218 = !DILocation(line: 929, column: 39, scope: !4216)
!4219 = !DILocalVariable(name: "dst_name", arg: 2, scope: !4216, file: !349, line: 929, type: !180)
!4220 = !DILocation(line: 929, column: 61, scope: !4216)
!4221 = !DILocalVariable(name: "mode", arg: 3, scope: !4216, file: !349, line: 930, type: !139)
!4222 = !DILocation(line: 930, column: 34, scope: !4216)
!4223 = !DILocalVariable(name: "new_dst", arg: 4, scope: !4216, file: !349, line: 930, type: !142)
!4224 = !DILocation(line: 930, column: 45, scope: !4216)
!4225 = !DILocalVariable(name: "x", arg: 5, scope: !4216, file: !349, line: 930, type: !356)
!4226 = !DILocation(line: 930, column: 79, scope: !4216)
!4227 = !DILocation(line: 932, column: 7, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !4216, file: !349, line: 932, column: 7)
!4229 = !DILocation(line: 932, column: 10, scope: !4228)
!4230 = !DILocation(line: 932, column: 7, scope: !4216)
!4231 = !DILocalVariable(name: "all_errors", scope: !4232, file: !349, line: 935, type: !142)
!4232 = distinct !DILexicalBlock(scope: !4228, file: !349, line: 933, column: 5)
!4233 = !DILocation(line: 935, column: 12, scope: !4232)
!4234 = !DILocation(line: 935, column: 26, scope: !4232)
!4235 = !DILocation(line: 935, column: 29, scope: !4232)
!4236 = !DILocation(line: 935, column: 48, scope: !4232)
!4237 = !DILocation(line: 935, column: 51, scope: !4232)
!4238 = !DILocation(line: 935, column: 54, scope: !4232)
!4239 = !DILocalVariable(name: "some_errors", scope: !4232, file: !349, line: 936, type: !142)
!4240 = !DILocation(line: 936, column: 12, scope: !4232)
!4241 = !DILocation(line: 936, column: 27, scope: !4232)
!4242 = !DILocation(line: 936, column: 38, scope: !4232)
!4243 = !DILocation(line: 936, column: 42, scope: !4232)
!4244 = !DILocation(line: 936, column: 45, scope: !4232)
!4245 = !DILocation(line: 936, column: 41, scope: !4232)
!4246 = !DILocation(line: 0, scope: !4232)
!4247 = !DILocalVariable(name: "con", scope: !4232, file: !349, line: 937, type: !9)
!4248 = !DILocation(line: 937, column: 13, scope: !4232)
!4249 = !DILocation(line: 939, column: 29, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4232, file: !349, line: 939, column: 11)
!4251 = !DILocation(line: 939, column: 16, scope: !4250)
!4252 = !DILocation(line: 939, column: 13, scope: !4250)
!4253 = !DILocation(line: 939, column: 11, scope: !4232)
!4254 = !DILocation(line: 941, column: 31, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4256, file: !349, line: 941, column: 15)
!4256 = distinct !DILexicalBlock(scope: !4250, file: !349, line: 940, column: 9)
!4257 = !DILocation(line: 941, column: 15, scope: !4255)
!4258 = !DILocation(line: 941, column: 36, scope: !4255)
!4259 = !DILocation(line: 941, column: 15, scope: !4256)
!4260 = !DILocation(line: 943, column: 19, scope: !4261)
!4261 = distinct !DILexicalBlock(scope: !4262, file: !349, line: 943, column: 19)
!4262 = distinct !DILexicalBlock(scope: !4255, file: !349, line: 942, column: 13)
!4263 = !DILocation(line: 943, column: 30, scope: !4261)
!4264 = !DILocation(line: 943, column: 34, scope: !4261)
!4265 = !DILocation(line: 943, column: 46, scope: !4261)
!4266 = !DILocation(line: 943, column: 69, scope: !4261)
!4267 = !DILocation(line: 943, column: 50, scope: !4261)
!4268 = !DILocation(line: 943, column: 19, scope: !4262)
!4269 = !DILocation(line: 944, column: 27, scope: !4261)
!4270 = !DILocation(line: 945, column: 24, scope: !4261)
!4271 = !DILocation(line: 946, column: 31, scope: !4261)
!4272 = !DILocation(line: 946, column: 24, scope: !4261)
!4273 = !DILocation(line: 944, column: 17, scope: !4261)
!4274 = !DILocation(line: 947, column: 19, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !4262, file: !349, line: 947, column: 19)
!4276 = !DILocation(line: 947, column: 22, scope: !4275)
!4277 = !DILocation(line: 947, column: 19, scope: !4262)
!4278 = !DILocation(line: 949, column: 28, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4275, file: !349, line: 948, column: 17)
!4280 = !DILocation(line: 949, column: 19, scope: !4279)
!4281 = !DILocation(line: 950, column: 19, scope: !4279)
!4282 = !DILocation(line: 952, column: 13, scope: !4262)
!4283 = !DILocation(line: 953, column: 20, scope: !4256)
!4284 = !DILocation(line: 953, column: 11, scope: !4256)
!4285 = !DILocation(line: 954, column: 9, scope: !4256)
!4286 = !DILocation(line: 957, column: 15, scope: !4287)
!4287 = distinct !DILexicalBlock(scope: !4288, file: !349, line: 957, column: 15)
!4288 = distinct !DILexicalBlock(scope: !4250, file: !349, line: 956, column: 9)
!4289 = !DILocation(line: 957, column: 26, scope: !4287)
!4290 = !DILocation(line: 957, column: 30, scope: !4287)
!4291 = !DILocation(line: 957, column: 42, scope: !4287)
!4292 = !DILocation(line: 957, column: 65, scope: !4287)
!4293 = !DILocation(line: 957, column: 46, scope: !4287)
!4294 = !DILocation(line: 957, column: 15, scope: !4288)
!4295 = !DILocation(line: 959, column: 25, scope: !4296)
!4296 = distinct !DILexicalBlock(scope: !4287, file: !349, line: 958, column: 13)
!4297 = !DILocation(line: 960, column: 22, scope: !4296)
!4298 = !DILocation(line: 961, column: 22, scope: !4296)
!4299 = !DILocation(line: 959, column: 15, scope: !4296)
!4300 = !DILocation(line: 962, column: 13, scope: !4296)
!4301 = !DILocation(line: 963, column: 15, scope: !4302)
!4302 = distinct !DILexicalBlock(scope: !4288, file: !349, line: 963, column: 15)
!4303 = !DILocation(line: 963, column: 18, scope: !4302)
!4304 = !DILocation(line: 963, column: 15, scope: !4288)
!4305 = !DILocation(line: 964, column: 13, scope: !4302)
!4306 = !DILocation(line: 966, column: 5, scope: !4232)
!4307 = !DILocation(line: 967, column: 12, scope: !4308)
!4308 = distinct !DILexicalBlock(scope: !4228, file: !349, line: 967, column: 12)
!4309 = !DILocation(line: 967, column: 15, scope: !4308)
!4310 = !DILocation(line: 967, column: 12, scope: !4228)
!4311 = !DILocation(line: 971, column: 11, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4313, file: !349, line: 971, column: 11)
!4313 = distinct !DILexicalBlock(scope: !4308, file: !349, line: 968, column: 5)
!4314 = !DILocation(line: 971, column: 19, scope: !4312)
!4315 = !DILocation(line: 971, column: 34, scope: !4312)
!4316 = !DILocation(line: 971, column: 44, scope: !4312)
!4317 = !DILocation(line: 971, column: 22, scope: !4312)
!4318 = !DILocation(line: 971, column: 50, scope: !4312)
!4319 = !DILocation(line: 972, column: 11, scope: !4312)
!4320 = !DILocation(line: 972, column: 35, scope: !4312)
!4321 = !DILocation(line: 972, column: 16, scope: !4312)
!4322 = !DILocation(line: 971, column: 11, scope: !4313)
!4323 = !DILocation(line: 974, column: 21, scope: !4324)
!4324 = distinct !DILexicalBlock(scope: !4312, file: !349, line: 973, column: 9)
!4325 = !DILocation(line: 975, column: 18, scope: !4324)
!4326 = !DILocation(line: 976, column: 18, scope: !4324)
!4327 = !DILocation(line: 974, column: 11, scope: !4324)
!4328 = !DILocation(line: 977, column: 9, scope: !4324)
!4329 = !DILocation(line: 978, column: 5, scope: !4313)
!4330 = !DILocation(line: 980, column: 3, scope: !4216)
!4331 = !DILocation(line: 981, column: 1, scope: !4216)
!4332 = distinct !DISubprogram(name: "errno_unsupported", scope: !349, file: !349, line: 632, type: !256, scopeLine: 633, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!4333 = !DILocalVariable(name: "err", arg: 1, scope: !4332, file: !349, line: 632, type: !7)
!4334 = !DILocation(line: 632, column: 24, scope: !4332)
!4335 = !DILocation(line: 634, column: 10, scope: !4332)
!4336 = !DILocation(line: 634, column: 14, scope: !4332)
!4337 = !DILocation(line: 634, column: 25, scope: !4332)
!4338 = !DILocation(line: 634, column: 28, scope: !4332)
!4339 = !DILocation(line: 634, column: 32, scope: !4332)
!4340 = !DILocation(line: 634, column: 3, scope: !4332)
!4341 = distinct !DISubprogram(name: "defaultcon", scope: !3689, file: !3689, line: 44, type: !250, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!4342 = !DILocalVariable(name: "path", arg: 1, scope: !4341, file: !3689, line: 44, type: !180)
!4343 = !DILocation(line: 44, column: 25, scope: !4341)
!4344 = !DILocalVariable(name: "mode", arg: 2, scope: !4341, file: !3689, line: 44, type: !139)
!4345 = !DILocation(line: 44, column: 38, scope: !4341)
!4346 = !DILocation(line: 45, column: 3, scope: !4341)
!4347 = !DILocation(line: 45, column: 9, scope: !4341)
!4348 = !DILocation(line: 45, column: 20, scope: !4341)
!4349 = distinct !DISubprogram(name: "ignorable_ctx_err", scope: !3689, file: !3689, line: 25, type: !256, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!4350 = !DILocalVariable(name: "err", arg: 1, scope: !4349, file: !3689, line: 25, type: !7)
!4351 = !DILocation(line: 25, column: 24, scope: !4349)
!4352 = !DILocation(line: 27, column: 10, scope: !4349)
!4353 = !DILocation(line: 27, column: 14, scope: !4349)
!4354 = !DILocation(line: 27, column: 25, scope: !4349)
!4355 = !DILocation(line: 27, column: 28, scope: !4349)
!4356 = !DILocation(line: 27, column: 32, scope: !4349)
!4357 = !DILocation(line: 27, column: 3, scope: !4349)
!4358 = distinct !DISubprogram(name: "set_file_security_ctx", scope: !349, file: !349, line: 991, type: !399, scopeLine: 993, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !348, retainedNodes: !209)
!4359 = !DILocalVariable(name: "dst_name", arg: 1, scope: !4358, file: !349, line: 991, type: !180)
!4360 = !DILocation(line: 991, column: 36, scope: !4358)
!4361 = !DILocalVariable(name: "process_local", arg: 2, scope: !4358, file: !349, line: 991, type: !142)
!4362 = !DILocation(line: 991, column: 51, scope: !4358)
!4363 = !DILocalVariable(name: "recurse", arg: 3, scope: !4358, file: !349, line: 992, type: !142)
!4364 = !DILocation(line: 992, column: 29, scope: !4358)
!4365 = !DILocalVariable(name: "x", arg: 4, scope: !4358, file: !349, line: 992, type: !356)
!4366 = !DILocation(line: 992, column: 63, scope: !4358)
!4367 = !DILocalVariable(name: "all_errors", scope: !4358, file: !349, line: 994, type: !142)
!4368 = !DILocation(line: 994, column: 8, scope: !4358)
!4369 = !DILocation(line: 994, column: 23, scope: !4358)
!4370 = !DILocation(line: 994, column: 26, scope: !4358)
!4371 = !DILocation(line: 995, column: 22, scope: !4358)
!4372 = !DILocation(line: 995, column: 25, scope: !4358)
!4373 = !DILocation(line: 995, column: 28, scope: !4358)
!4374 = !DILocalVariable(name: "some_errors", scope: !4358, file: !349, line: 996, type: !142)
!4375 = !DILocation(line: 996, column: 8, scope: !4358)
!4376 = !DILocation(line: 996, column: 23, scope: !4358)
!4377 = !DILocation(line: 996, column: 34, scope: !4358)
!4378 = !DILocation(line: 996, column: 38, scope: !4358)
!4379 = !DILocation(line: 996, column: 41, scope: !4358)
!4380 = !DILocation(line: 996, column: 37, scope: !4358)
!4381 = !DILocation(line: 0, scope: !4358)
!4382 = !DILocation(line: 998, column: 21, scope: !4383)
!4383 = distinct !DILexicalBlock(scope: !4358, file: !349, line: 998, column: 7)
!4384 = !DILocation(line: 998, column: 31, scope: !4383)
!4385 = !DILocation(line: 998, column: 40, scope: !4383)
!4386 = !DILocation(line: 998, column: 9, scope: !4383)
!4387 = !DILocation(line: 998, column: 7, scope: !4358)
!4388 = !DILocation(line: 1000, column: 11, scope: !4389)
!4389 = distinct !DILexicalBlock(scope: !4390, file: !349, line: 1000, column: 11)
!4390 = distinct !DILexicalBlock(scope: !4383, file: !349, line: 999, column: 5)
!4391 = !DILocation(line: 1000, column: 22, scope: !4389)
!4392 = !DILocation(line: 1000, column: 26, scope: !4389)
!4393 = !DILocation(line: 1000, column: 38, scope: !4389)
!4394 = !DILocation(line: 1000, column: 61, scope: !4389)
!4395 = !DILocation(line: 1000, column: 42, scope: !4389)
!4396 = !DILocation(line: 1000, column: 11, scope: !4390)
!4397 = !DILocation(line: 1001, column: 19, scope: !4389)
!4398 = !DILocation(line: 1001, column: 26, scope: !4389)
!4399 = !DILocation(line: 1002, column: 16, scope: !4389)
!4400 = !DILocation(line: 1001, column: 9, scope: !4389)
!4401 = !DILocation(line: 1003, column: 7, scope: !4390)
!4402 = !DILocation(line: 1006, column: 3, scope: !4358)
!4403 = !DILocation(line: 1007, column: 1, scope: !4358)
!4404 = distinct !DISubprogram(name: "restorecon", scope: !3689, file: !3689, line: 40, type: !254, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!4405 = !DILocalVariable(name: "path", arg: 1, scope: !4404, file: !3689, line: 40, type: !180)
!4406 = !DILocation(line: 40, column: 25, scope: !4404)
!4407 = !DILocalVariable(name: "recurse", arg: 2, scope: !4404, file: !3689, line: 40, type: !142)
!4408 = !DILocation(line: 40, column: 36, scope: !4404)
!4409 = !DILocalVariable(name: "preserve", arg: 3, scope: !4404, file: !3689, line: 40, type: !142)
!4410 = !DILocation(line: 40, column: 50, scope: !4404)
!4411 = !DILocation(line: 41, column: 3, scope: !4404)
!4412 = !DILocation(line: 41, column: 9, scope: !4404)
!4413 = !DILocation(line: 41, column: 20, scope: !4404)
!4414 = distinct !DISubprogram(name: "dest_info_init", scope: !349, file: !349, line: 1739, type: !401, scopeLine: 1740, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !348, retainedNodes: !209)
!4415 = !DILocalVariable(name: "x", arg: 1, scope: !4414, file: !349, line: 1739, type: !403)
!4416 = !DILocation(line: 1739, column: 36, scope: !4414)
!4417 = !DILocation(line: 1742, column: 7, scope: !4414)
!4418 = !DILocation(line: 1741, column: 3, scope: !4414)
!4419 = !DILocation(line: 1741, column: 6, scope: !4414)
!4420 = !DILocation(line: 1742, column: 5, scope: !4414)
!4421 = !DILocation(line: 1747, column: 1, scope: !4414)
!4422 = distinct !DISubprogram(name: "src_info_init", scope: !349, file: !349, line: 1752, type: !401, scopeLine: 1753, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !348, retainedNodes: !209)
!4423 = !DILocalVariable(name: "x", arg: 1, scope: !4422, file: !349, line: 1752, type: !403)
!4424 = !DILocation(line: 1752, column: 35, scope: !4422)
!4425 = !DILocation(line: 1764, column: 7, scope: !4422)
!4426 = !DILocation(line: 1763, column: 3, scope: !4422)
!4427 = !DILocation(line: 1763, column: 6, scope: !4422)
!4428 = !DILocation(line: 1764, column: 5, scope: !4422)
!4429 = !DILocation(line: 1769, column: 1, scope: !4422)
!4430 = distinct !DISubprogram(name: "copy", scope: !349, file: !349, line: 3009, type: !404, scopeLine: 3012, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !348, retainedNodes: !209)
!4431 = !DILocalVariable(name: "src_name", arg: 1, scope: !4430, file: !349, line: 3009, type: !180)
!4432 = !DILocation(line: 3009, column: 19, scope: !4430)
!4433 = !DILocalVariable(name: "dst_name", arg: 2, scope: !4430, file: !349, line: 3009, type: !180)
!4434 = !DILocation(line: 3009, column: 41, scope: !4430)
!4435 = !DILocalVariable(name: "nonexistent_dst", arg: 3, scope: !4430, file: !349, line: 3010, type: !142)
!4436 = !DILocation(line: 3010, column: 12, scope: !4430)
!4437 = !DILocalVariable(name: "options", arg: 4, scope: !4430, file: !349, line: 3010, type: !356)
!4438 = !DILocation(line: 3010, column: 54, scope: !4430)
!4439 = !DILocalVariable(name: "copy_into_self", arg: 5, scope: !4430, file: !349, line: 3011, type: !406)
!4440 = !DILocation(line: 3011, column: 13, scope: !4430)
!4441 = !DILocalVariable(name: "rename_succeeded", arg: 6, scope: !4430, file: !349, line: 3011, type: !406)
!4442 = !DILocation(line: 3011, column: 35, scope: !4430)
!4443 = !DILocation(line: 3013, column: 3, scope: !4444)
!4444 = distinct !DILexicalBlock(scope: !4445, file: !349, line: 3013, column: 3)
!4445 = distinct !DILexicalBlock(scope: !4430, file: !349, line: 3013, column: 3)
!4446 = !DILocation(line: 3013, column: 3, scope: !4445)
!4447 = !DILocation(line: 3022, column: 24, scope: !4430)
!4448 = !DILocation(line: 3022, column: 22, scope: !4430)
!4449 = !DILocation(line: 3023, column: 24, scope: !4430)
!4450 = !DILocation(line: 3023, column: 22, scope: !4430)
!4451 = !DILocalVariable(name: "first_dir_created_per_command_line_arg", scope: !4430, file: !349, line: 3025, type: !142)
!4452 = !DILocation(line: 3025, column: 8, scope: !4430)
!4453 = !DILocation(line: 3026, column: 25, scope: !4430)
!4454 = !DILocation(line: 3026, column: 35, scope: !4430)
!4455 = !DILocation(line: 3026, column: 45, scope: !4430)
!4456 = !DILocation(line: 3027, column: 25, scope: !4430)
!4457 = !DILocation(line: 3029, column: 25, scope: !4430)
!4458 = !DILocation(line: 3029, column: 41, scope: !4430)
!4459 = !DILocation(line: 3026, column: 10, scope: !4430)
!4460 = !DILocation(line: 3026, column: 3, scope: !4430)
!4461 = distinct !DISubprogram(name: "valid_options", scope: !349, file: !349, line: 2986, type: !407, scopeLine: 2987, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!4462 = !DILocalVariable(name: "co", arg: 1, scope: !4461, file: !349, line: 2986, type: !356)
!4463 = !DILocation(line: 2986, column: 41, scope: !4461)
!4464 = !DILocation(line: 2988, column: 3, scope: !4465)
!4465 = distinct !DILexicalBlock(scope: !4466, file: !349, line: 2988, column: 3)
!4466 = distinct !DILexicalBlock(scope: !4461, file: !349, line: 2988, column: 3)
!4467 = !DILocation(line: 2988, column: 3, scope: !4466)
!4468 = !DILocation(line: 2989, column: 3, scope: !4469)
!4469 = distinct !DILexicalBlock(scope: !4470, file: !349, line: 2989, column: 3)
!4470 = distinct !DILexicalBlock(scope: !4461, file: !349, line: 2989, column: 3)
!4471 = !DILocation(line: 2989, column: 3, scope: !4470)
!4472 = !DILocation(line: 2990, column: 3, scope: !4473)
!4473 = distinct !DILexicalBlock(scope: !4474, file: !349, line: 2990, column: 3)
!4474 = distinct !DILexicalBlock(scope: !4461, file: !349, line: 2990, column: 3)
!4475 = !DILocation(line: 2990, column: 3, scope: !4474)
!4476 = !DILocation(line: 2991, column: 3, scope: !4477)
!4477 = distinct !DILexicalBlock(scope: !4478, file: !349, line: 2991, column: 3)
!4478 = distinct !DILexicalBlock(scope: !4461, file: !349, line: 2991, column: 3)
!4479 = !DILocation(line: 2991, column: 3, scope: !4478)
!4480 = !DILocation(line: 2992, column: 3, scope: !4481)
!4481 = distinct !DILexicalBlock(scope: !4482, file: !349, line: 2992, column: 3)
!4482 = distinct !DILexicalBlock(scope: !4461, file: !349, line: 2992, column: 3)
!4483 = !DILocation(line: 2992, column: 3, scope: !4482)
!4484 = !DILocation(line: 2993, column: 3, scope: !4485)
!4485 = distinct !DILexicalBlock(scope: !4486, file: !349, line: 2993, column: 3)
!4486 = distinct !DILexicalBlock(scope: !4461, file: !349, line: 2993, column: 3)
!4487 = !DILocation(line: 2993, column: 3, scope: !4486)
!4488 = !DILocation(line: 2996, column: 3, scope: !4461)
!4489 = distinct !DISubprogram(name: "copy_internal", scope: !349, file: !349, line: 1882, type: !411, scopeLine: 1891, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!4490 = !DILocalVariable(name: "src_name", arg: 1, scope: !4489, file: !349, line: 1882, type: !180)
!4491 = !DILocation(line: 1882, column: 28, scope: !4489)
!4492 = !DILocalVariable(name: "dst_name", arg: 2, scope: !4489, file: !349, line: 1882, type: !180)
!4493 = !DILocation(line: 1882, column: 50, scope: !4489)
!4494 = !DILocalVariable(name: "new_dst", arg: 3, scope: !4489, file: !349, line: 1883, type: !142)
!4495 = !DILocation(line: 1883, column: 21, scope: !4489)
!4496 = !DILocalVariable(name: "parent", arg: 4, scope: !4489, file: !349, line: 1884, type: !413)
!4497 = !DILocation(line: 1884, column: 35, scope: !4489)
!4498 = !DILocalVariable(name: "ancestors", arg: 5, scope: !4489, file: !349, line: 1885, type: !436)
!4499 = !DILocation(line: 1885, column: 33, scope: !4489)
!4500 = !DILocalVariable(name: "x", arg: 6, scope: !4489, file: !349, line: 1886, type: !356)
!4501 = !DILocation(line: 1886, column: 41, scope: !4489)
!4502 = !DILocalVariable(name: "command_line_arg", arg: 7, scope: !4489, file: !349, line: 1887, type: !142)
!4503 = !DILocation(line: 1887, column: 21, scope: !4489)
!4504 = !DILocalVariable(name: "first_dir_created_per_command_line_arg", arg: 8, scope: !4489, file: !349, line: 1888, type: !406)
!4505 = !DILocation(line: 1888, column: 22, scope: !4489)
!4506 = !DILocalVariable(name: "copy_into_self", arg: 9, scope: !4489, file: !349, line: 1889, type: !406)
!4507 = !DILocation(line: 1889, column: 22, scope: !4489)
!4508 = !DILocalVariable(name: "rename_succeeded", arg: 10, scope: !4489, file: !349, line: 1890, type: !406)
!4509 = !DILocation(line: 1890, column: 22, scope: !4489)
!4510 = !DILocalVariable(name: "src_sb", scope: !4489, file: !349, line: 1892, type: !415)
!4511 = !DILocation(line: 1892, column: 15, scope: !4489)
!4512 = !DILocalVariable(name: "dst_sb", scope: !4489, file: !349, line: 1893, type: !415)
!4513 = !DILocation(line: 1893, column: 15, scope: !4489)
!4514 = !DILocalVariable(name: "src_mode", scope: !4489, file: !349, line: 1894, type: !139)
!4515 = !DILocation(line: 1894, column: 10, scope: !4489)
!4516 = !DILocalVariable(name: "dst_mode", scope: !4489, file: !349, line: 1895, type: !139)
!4517 = !DILocation(line: 1895, column: 10, scope: !4489)
!4518 = !DILocalVariable(name: "dst_mode_bits", scope: !4489, file: !349, line: 1896, type: !139)
!4519 = !DILocation(line: 1896, column: 10, scope: !4489)
!4520 = !DILocalVariable(name: "omitted_permissions", scope: !4489, file: !349, line: 1897, type: !139)
!4521 = !DILocation(line: 1897, column: 10, scope: !4489)
!4522 = !DILocalVariable(name: "restore_dst_mode", scope: !4489, file: !349, line: 1898, type: !142)
!4523 = !DILocation(line: 1898, column: 8, scope: !4489)
!4524 = !DILocalVariable(name: "earlier_file", scope: !4489, file: !349, line: 1899, type: !9)
!4525 = !DILocation(line: 1899, column: 9, scope: !4489)
!4526 = !DILocalVariable(name: "dst_backup", scope: !4489, file: !349, line: 1900, type: !9)
!4527 = !DILocation(line: 1900, column: 9, scope: !4489)
!4528 = !DILocalVariable(name: "delayed_ok", scope: !4489, file: !349, line: 1901, type: !142)
!4529 = !DILocation(line: 1901, column: 8, scope: !4489)
!4530 = !DILocalVariable(name: "copied_as_regular", scope: !4489, file: !349, line: 1902, type: !142)
!4531 = !DILocation(line: 1902, column: 8, scope: !4489)
!4532 = !DILocalVariable(name: "dest_is_symlink", scope: !4489, file: !349, line: 1903, type: !142)
!4533 = !DILocation(line: 1903, column: 8, scope: !4489)
!4534 = !DILocalVariable(name: "have_dst_lstat", scope: !4489, file: !349, line: 1904, type: !142)
!4535 = !DILocation(line: 1904, column: 8, scope: !4489)
!4536 = !DILocation(line: 1906, column: 4, scope: !4489)
!4537 = !DILocation(line: 1906, column: 19, scope: !4489)
!4538 = !DILocalVariable(name: "rename_errno", scope: !4489, file: !349, line: 1908, type: !7)
!4539 = !DILocation(line: 1908, column: 7, scope: !4489)
!4540 = !DILocation(line: 1908, column: 22, scope: !4489)
!4541 = !DILocation(line: 1908, column: 25, scope: !4489)
!4542 = !{!2813, !2636, i64 52}
!4543 = !DILocation(line: 1909, column: 7, scope: !4544)
!4544 = distinct !DILexicalBlock(scope: !4489, file: !349, line: 1909, column: 7)
!4545 = !DILocation(line: 1909, column: 10, scope: !4544)
!4546 = !DILocation(line: 1909, column: 7, scope: !4489)
!4547 = !DILocation(line: 1911, column: 11, scope: !4548)
!4548 = distinct !DILexicalBlock(scope: !4549, file: !349, line: 1911, column: 11)
!4549 = distinct !DILexicalBlock(scope: !4544, file: !349, line: 1910, column: 5)
!4550 = !DILocation(line: 1911, column: 24, scope: !4548)
!4551 = !DILocation(line: 1911, column: 11, scope: !4549)
!4552 = !DILocation(line: 1912, column: 46, scope: !4548)
!4553 = !DILocation(line: 1912, column: 66, scope: !4548)
!4554 = !DILocation(line: 1912, column: 25, scope: !4548)
!4555 = !DILocation(line: 1914, column: 27, scope: !4548)
!4556 = !DILocation(line: 1912, column: 22, scope: !4548)
!4557 = !DILocation(line: 1912, column: 9, scope: !4548)
!4558 = !DILocation(line: 1915, column: 17, scope: !4549)
!4559 = !DILocation(line: 1915, column: 30, scope: !4549)
!4560 = !DILocation(line: 1915, column: 15, scope: !4549)
!4561 = !DILocation(line: 1916, column: 11, scope: !4562)
!4562 = distinct !DILexicalBlock(scope: !4549, file: !349, line: 1916, column: 11)
!4563 = !DILocation(line: 1916, column: 11, scope: !4549)
!4564 = !DILocation(line: 1917, column: 29, scope: !4562)
!4565 = !DILocation(line: 1917, column: 10, scope: !4562)
!4566 = !DILocation(line: 1917, column: 27, scope: !4562)
!4567 = !DILocation(line: 1917, column: 9, scope: !4562)
!4568 = !DILocation(line: 1918, column: 5, scope: !4549)
!4569 = !DILocation(line: 1920, column: 7, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4489, file: !349, line: 1920, column: 7)
!4571 = !DILocation(line: 1920, column: 20, scope: !4570)
!4572 = !DILocation(line: 1920, column: 7, scope: !4489)
!4573 = !DILocation(line: 1921, column: 10, scope: !4570)
!4574 = !DILocation(line: 1921, column: 13, scope: !4570)
!4575 = !{!2813, !2743, i64 49}
!4576 = !DILocation(line: 1922, column: 9, scope: !4570)
!4577 = !DILocation(line: 1922, column: 22, scope: !4570)
!4578 = !DILocation(line: 1922, column: 32, scope: !4570)
!4579 = !DILocation(line: 1922, column: 35, scope: !4570)
!4580 = !DILocation(line: 1922, column: 38, scope: !4570)
!4581 = !DILocation(line: 1922, column: 50, scope: !4570)
!4582 = !DILocalVariable(name: "name", scope: !4583, file: !349, line: 1924, type: !180)
!4583 = distinct !DILexicalBlock(scope: !4570, file: !349, line: 1923, column: 5)
!4584 = !DILocation(line: 1924, column: 19, scope: !4583)
!4585 = !DILocation(line: 1924, column: 26, scope: !4583)
!4586 = !DILocation(line: 1924, column: 39, scope: !4583)
!4587 = !DILocation(line: 1924, column: 46, scope: !4583)
!4588 = !DILocation(line: 1924, column: 57, scope: !4583)
!4589 = !DILocalVariable(name: "fstatat_flags", scope: !4583, file: !349, line: 1925, type: !7)
!4590 = !DILocation(line: 1925, column: 11, scope: !4583)
!4591 = !DILocation(line: 1926, column: 11, scope: !4583)
!4592 = !DILocation(line: 1926, column: 14, scope: !4583)
!4593 = !DILocation(line: 1926, column: 26, scope: !4583)
!4594 = !DILocation(line: 1927, column: 37, scope: !4595)
!4595 = distinct !DILexicalBlock(scope: !4583, file: !349, line: 1927, column: 11)
!4596 = !DILocation(line: 1927, column: 52, scope: !4595)
!4597 = !DILocation(line: 1927, column: 11, scope: !4595)
!4598 = !DILocation(line: 1927, column: 67, scope: !4595)
!4599 = !DILocation(line: 1927, column: 11, scope: !4583)
!4600 = !DILocation(line: 1929, column: 21, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4595, file: !349, line: 1928, column: 9)
!4602 = !DILocation(line: 1929, column: 28, scope: !4601)
!4603 = !DILocation(line: 1929, column: 49, scope: !4601)
!4604 = !DILocation(line: 1929, column: 11, scope: !4601)
!4605 = !DILocation(line: 1930, column: 11, scope: !4601)
!4606 = !DILocation(line: 1933, column: 25, scope: !4583)
!4607 = !DILocation(line: 1933, column: 16, scope: !4583)
!4608 = !DILocation(line: 1935, column: 11, scope: !4609)
!4609 = distinct !DILexicalBlock(scope: !4583, file: !349, line: 1935, column: 11)
!4610 = !DILocation(line: 1935, column: 30, scope: !4609)
!4611 = !DILocation(line: 1935, column: 34, scope: !4609)
!4612 = !DILocation(line: 1935, column: 37, scope: !4609)
!4613 = !DILocation(line: 1935, column: 11, scope: !4583)
!4614 = !DILocation(line: 1937, column: 26, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4609, file: !349, line: 1936, column: 9)
!4616 = !DILocation(line: 1937, column: 29, scope: !4615)
!4617 = !DILocation(line: 1937, column: 24, scope: !4615)
!4618 = !DILocation(line: 1938, column: 20, scope: !4615)
!4619 = !DILocation(line: 1939, column: 20, scope: !4615)
!4620 = !DILocation(line: 1940, column: 18, scope: !4615)
!4621 = !DILocation(line: 1937, column: 11, scope: !4615)
!4622 = !DILocation(line: 1941, column: 11, scope: !4615)
!4623 = !DILocation(line: 1943, column: 5, scope: !4583)
!4624 = !DILocation(line: 1956, column: 7, scope: !4625)
!4625 = distinct !DILexicalBlock(scope: !4489, file: !349, line: 1956, column: 7)
!4626 = !DILocation(line: 1956, column: 24, scope: !4625)
!4627 = !DILocation(line: 1956, column: 27, scope: !4625)
!4628 = !DILocation(line: 1956, column: 30, scope: !4625)
!4629 = !DILocation(line: 1956, column: 7, scope: !4489)
!4630 = !DILocation(line: 1958, column: 14, scope: !4631)
!4631 = distinct !DILexicalBlock(scope: !4632, file: !349, line: 1958, column: 12)
!4632 = distinct !DILexicalBlock(scope: !4625, file: !349, line: 1957, column: 5)
!4633 = !DILocation(line: 1959, column: 12, scope: !4631)
!4634 = !DILocation(line: 1959, column: 15, scope: !4631)
!4635 = !DILocation(line: 1959, column: 18, scope: !4631)
!4636 = !DILocation(line: 1959, column: 30, scope: !4631)
!4637 = !DILocation(line: 1960, column: 12, scope: !4631)
!4638 = !DILocation(line: 1960, column: 26, scope: !4631)
!4639 = !DILocation(line: 1960, column: 29, scope: !4631)
!4640 = !DILocation(line: 1960, column: 39, scope: !4631)
!4641 = !DILocation(line: 1960, column: 15, scope: !4631)
!4642 = !DILocation(line: 1958, column: 12, scope: !4632)
!4643 = !DILocation(line: 1962, column: 24, scope: !4644)
!4644 = distinct !DILexicalBlock(scope: !4631, file: !349, line: 1961, column: 9)
!4645 = !DILocation(line: 1963, column: 18, scope: !4644)
!4646 = !DILocation(line: 1962, column: 11, scope: !4644)
!4647 = !DILocation(line: 1964, column: 11, scope: !4644)
!4648 = !DILocation(line: 1967, column: 20, scope: !4632)
!4649 = !DILocation(line: 1967, column: 23, scope: !4632)
!4650 = !DILocation(line: 1967, column: 33, scope: !4632)
!4651 = !DILocation(line: 1967, column: 7, scope: !4632)
!4652 = !DILocation(line: 1968, column: 5, scope: !4632)
!4653 = !DILocalVariable(name: "dereference", scope: !4489, file: !349, line: 1970, type: !142)
!4654 = !DILocation(line: 1970, column: 8, scope: !4489)
!4655 = !DILocation(line: 1970, column: 42, scope: !4489)
!4656 = !DILocation(line: 1970, column: 45, scope: !4489)
!4657 = !DILocation(line: 1970, column: 22, scope: !4489)
!4658 = !DILocation(line: 1972, column: 8, scope: !4659)
!4659 = distinct !DILexicalBlock(scope: !4489, file: !349, line: 1972, column: 7)
!4660 = !DILocation(line: 1972, column: 7, scope: !4489)
!4661 = !DILocation(line: 1974, column: 14, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4663, file: !349, line: 1974, column: 11)
!4663 = distinct !DILexicalBlock(scope: !4659, file: !349, line: 1973, column: 5)
!4664 = !DILocation(line: 1974, column: 27, scope: !4662)
!4665 = !DILocation(line: 1974, column: 37, scope: !4662)
!4666 = !DILocation(line: 1974, column: 40, scope: !4662)
!4667 = !DILocation(line: 1974, column: 43, scope: !4662)
!4668 = !DILocation(line: 1974, column: 55, scope: !4662)
!4669 = !DILocation(line: 1974, column: 11, scope: !4663)
!4670 = !DILocalVariable(name: "use_lstat", scope: !4671, file: !349, line: 1982, type: !142)
!4671 = distinct !DILexicalBlock(scope: !4662, file: !349, line: 1975, column: 9)
!4672 = !DILocation(line: 1982, column: 16, scope: !4671)
!4673 = !DILocation(line: 1983, column: 19, scope: !4671)
!4674 = !DILocation(line: 1984, column: 17, scope: !4671)
!4675 = !DILocation(line: 1984, column: 23, scope: !4671)
!4676 = !DILocation(line: 1984, column: 26, scope: !4671)
!4677 = !DILocation(line: 1985, column: 21, scope: !4671)
!4678 = !DILocation(line: 1985, column: 24, scope: !4671)
!4679 = !DILocation(line: 1985, column: 43, scope: !4671)
!4680 = !DILocation(line: 1985, column: 46, scope: !4671)
!4681 = !DILocation(line: 1986, column: 16, scope: !4671)
!4682 = !DILocation(line: 1986, column: 19, scope: !4671)
!4683 = !DILocation(line: 1986, column: 22, scope: !4671)
!4684 = !DILocation(line: 1986, column: 32, scope: !4671)
!4685 = !DILocation(line: 1986, column: 35, scope: !4671)
!4686 = !DILocation(line: 1986, column: 38, scope: !4671)
!4687 = !DILocation(line: 1986, column: 52, scope: !4671)
!4688 = !DILocation(line: 1986, column: 55, scope: !4671)
!4689 = !DILocation(line: 1986, column: 58, scope: !4671)
!4690 = !DILocation(line: 1987, column: 16, scope: !4671)
!4691 = !DILocation(line: 1987, column: 19, scope: !4671)
!4692 = !DILocation(line: 1987, column: 22, scope: !4671)
!4693 = !DILocation(line: 1987, column: 34, scope: !4671)
!4694 = !DILocation(line: 1988, column: 16, scope: !4671)
!4695 = !DILocation(line: 1988, column: 19, scope: !4671)
!4696 = !DILocation(line: 1988, column: 22, scope: !4671)
!4697 = !DILocalVariable(name: "fstatat_flags", scope: !4671, file: !349, line: 1989, type: !7)
!4698 = !DILocation(line: 1989, column: 15, scope: !4671)
!4699 = !DILocation(line: 1989, column: 31, scope: !4671)
!4700 = !DILocation(line: 1990, column: 41, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4671, file: !349, line: 1990, column: 15)
!4702 = !DILocation(line: 1990, column: 60, scope: !4701)
!4703 = !DILocation(line: 1990, column: 15, scope: !4701)
!4704 = !DILocation(line: 1990, column: 75, scope: !4701)
!4705 = !DILocation(line: 1990, column: 15, scope: !4671)
!4706 = !DILocation(line: 1992, column: 32, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !4701, file: !349, line: 1991, column: 13)
!4708 = !DILocation(line: 1992, column: 30, scope: !4707)
!4709 = !DILocation(line: 1993, column: 28, scope: !4707)
!4710 = !DILocation(line: 1994, column: 13, scope: !4707)
!4711 = !DILocation(line: 1997, column: 19, scope: !4712)
!4712 = distinct !DILexicalBlock(scope: !4713, file: !349, line: 1997, column: 19)
!4713 = distinct !DILexicalBlock(scope: !4701, file: !349, line: 1996, column: 13)
!4714 = !DILocation(line: 1997, column: 25, scope: !4712)
!4715 = !DILocation(line: 1997, column: 34, scope: !4712)
!4716 = !DILocation(line: 1997, column: 37, scope: !4712)
!4717 = !DILocation(line: 1997, column: 40, scope: !4712)
!4718 = !DILocation(line: 1997, column: 19, scope: !4713)
!4719 = !DILocation(line: 1999, column: 24, scope: !4720)
!4720 = distinct !DILexicalBlock(scope: !4712, file: !349, line: 1999, column: 24)
!4721 = !DILocation(line: 1999, column: 30, scope: !4720)
!4722 = !DILocation(line: 1999, column: 24, scope: !4712)
!4723 = !DILocation(line: 2001, column: 29, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4720, file: !349, line: 2000, column: 17)
!4725 = !DILocation(line: 2001, column: 36, scope: !4724)
!4726 = !DILocation(line: 2001, column: 57, scope: !4724)
!4727 = !DILocation(line: 2001, column: 19, scope: !4724)
!4728 = !DILocation(line: 2002, column: 19, scope: !4724)
!4729 = !DILocation(line: 2005, column: 25, scope: !4720)
!4730 = !DILocation(line: 2007, column: 9, scope: !4671)
!4731 = !DILocation(line: 2009, column: 11, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4663, file: !349, line: 2009, column: 11)
!4733 = !DILocation(line: 2009, column: 24, scope: !4732)
!4734 = !DILocation(line: 2009, column: 11, scope: !4663)
!4735 = !DILocalVariable(name: "return_now", scope: !4736, file: !349, line: 2011, type: !142)
!4736 = distinct !DILexicalBlock(scope: !4732, file: !349, line: 2010, column: 9)
!4737 = !DILocation(line: 2011, column: 16, scope: !4736)
!4738 = !DILocation(line: 2013, column: 15, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4736, file: !349, line: 2013, column: 15)
!4740 = !DILocation(line: 2013, column: 18, scope: !4739)
!4741 = !DILocation(line: 2013, column: 30, scope: !4739)
!4742 = !DILocation(line: 2014, column: 15, scope: !4739)
!4743 = !DILocation(line: 2014, column: 34, scope: !4739)
!4744 = !DILocation(line: 2014, column: 53, scope: !4739)
!4745 = !DILocation(line: 2015, column: 34, scope: !4739)
!4746 = !DILocation(line: 2014, column: 20, scope: !4739)
!4747 = !DILocation(line: 2013, column: 15, scope: !4736)
!4748 = !DILocation(line: 2017, column: 28, scope: !4749)
!4749 = distinct !DILexicalBlock(scope: !4739, file: !349, line: 2016, column: 13)
!4750 = !DILocation(line: 2018, column: 22, scope: !4749)
!4751 = !DILocation(line: 2018, column: 47, scope: !4749)
!4752 = !DILocation(line: 2017, column: 15, scope: !4749)
!4753 = !DILocation(line: 2019, column: 15, scope: !4749)
!4754 = !DILocation(line: 2022, column: 15, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4736, file: !349, line: 2022, column: 15)
!4756 = !DILocation(line: 2022, column: 18, scope: !4755)
!4757 = !DILocation(line: 2022, column: 25, scope: !4755)
!4758 = !DILocation(line: 2022, column: 29, scope: !4755)
!4759 = !DILocation(line: 2022, column: 15, scope: !4736)
!4760 = !DILocalVariable(name: "options", scope: !4761, file: !349, line: 2028, type: !7)
!4761 = distinct !DILexicalBlock(scope: !4755, file: !349, line: 2023, column: 13)
!4762 = !DILocation(line: 2028, column: 19, scope: !4761)
!4763 = !DILocation(line: 2028, column: 31, scope: !4761)
!4764 = !DILocation(line: 2028, column: 34, scope: !4761)
!4765 = !DILocation(line: 2029, column: 31, scope: !4761)
!4766 = !DILocation(line: 2029, column: 37, scope: !4761)
!4767 = !DILocation(line: 2029, column: 40, scope: !4761)
!4768 = !DILocation(line: 2030, column: 37, scope: !4761)
!4769 = !DILocation(line: 2030, column: 47, scope: !4761)
!4770 = !{!2915, !2916, i64 0}
!4771 = !DILocation(line: 2030, column: 64, scope: !4761)
!4772 = !DILocation(line: 2030, column: 54, scope: !4761)
!4773 = !DILocation(line: 0, scope: !4761)
!4774 = !DILocation(line: 2029, column: 34, scope: !4761)
!4775 = !DILocation(line: 2028, column: 30, scope: !4761)
!4776 = !DILocation(line: 2034, column: 34, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4761, file: !349, line: 2034, column: 19)
!4778 = !DILocation(line: 2034, column: 62, scope: !4777)
!4779 = !DILocation(line: 2034, column: 24, scope: !4777)
!4780 = !DILocation(line: 2034, column: 21, scope: !4777)
!4781 = !DILocation(line: 2034, column: 19, scope: !4761)
!4782 = !DILocation(line: 2040, column: 23, scope: !4783)
!4783 = distinct !DILexicalBlock(scope: !4784, file: !349, line: 2040, column: 23)
!4784 = distinct !DILexicalBlock(scope: !4777, file: !349, line: 2035, column: 17)
!4785 = !DILocation(line: 2040, column: 23, scope: !4784)
!4786 = !DILocation(line: 2041, column: 22, scope: !4783)
!4787 = !DILocation(line: 2041, column: 39, scope: !4783)
!4788 = !DILocation(line: 2041, column: 21, scope: !4783)
!4789 = !DILocation(line: 2048, column: 51, scope: !4784)
!4790 = !DILocation(line: 2048, column: 68, scope: !4784)
!4791 = !{!2915, !2916, i64 8}
!4792 = !DILocation(line: 2049, column: 58, scope: !4784)
!4793 = !DILocation(line: 2048, column: 34, scope: !4784)
!4794 = !DILocation(line: 2048, column: 32, scope: !4784)
!4795 = !DILocation(line: 2050, column: 23, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4784, file: !349, line: 2050, column: 23)
!4797 = !DILocation(line: 2050, column: 23, scope: !4784)
!4798 = !DILocation(line: 2054, column: 47, scope: !4799)
!4799 = distinct !DILexicalBlock(scope: !4800, file: !349, line: 2054, column: 27)
!4800 = distinct !DILexicalBlock(scope: !4796, file: !349, line: 2051, column: 21)
!4801 = !DILocation(line: 2054, column: 61, scope: !4799)
!4802 = !DILocation(line: 2055, column: 47, scope: !4799)
!4803 = !DILocation(line: 2055, column: 50, scope: !4799)
!4804 = !DILocation(line: 2055, column: 59, scope: !4799)
!4805 = !DILocation(line: 2054, column: 29, scope: !4799)
!4806 = !DILocation(line: 2054, column: 27, scope: !4800)
!4807 = !DILocation(line: 2057, column: 27, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4799, file: !349, line: 2056, column: 25)
!4809 = !DILocation(line: 2059, column: 21, scope: !4800)
!4810 = !DILocation(line: 2061, column: 19, scope: !4784)
!4811 = !DILocation(line: 2063, column: 13, scope: !4761)
!4812 = !DILocation(line: 2072, column: 15, scope: !4813)
!4813 = distinct !DILexicalBlock(scope: !4736, file: !349, line: 2072, column: 15)
!4814 = !DILocation(line: 2072, column: 18, scope: !4813)
!4815 = !DILocation(line: 2072, column: 15, scope: !4736)
!4816 = !DILocation(line: 2074, column: 33, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4818, file: !349, line: 2074, column: 19)
!4818 = distinct !DILexicalBlock(scope: !4813, file: !349, line: 2073, column: 13)
!4819 = !DILocation(line: 2074, column: 36, scope: !4817)
!4820 = !DILocation(line: 2074, column: 19, scope: !4817)
!4821 = !DILocation(line: 2074, column: 19, scope: !4818)
!4822 = !DILocation(line: 2078, column: 23, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4824, file: !349, line: 2078, column: 23)
!4824 = distinct !DILexicalBlock(scope: !4817, file: !349, line: 2075, column: 17)
!4825 = !DILocation(line: 2078, column: 23, scope: !4824)
!4826 = !DILocation(line: 2079, column: 22, scope: !4823)
!4827 = !DILocation(line: 2079, column: 39, scope: !4823)
!4828 = !DILocation(line: 2079, column: 21, scope: !4823)
!4829 = !DILocation(line: 2080, column: 19, scope: !4824)
!4830 = !DILocation(line: 2082, column: 13, scope: !4818)
!4831 = !DILocation(line: 2085, column: 21, scope: !4832)
!4832 = distinct !DILexicalBlock(scope: !4833, file: !349, line: 2085, column: 19)
!4833 = distinct !DILexicalBlock(scope: !4813, file: !349, line: 2084, column: 13)
!4834 = !DILocation(line: 2086, column: 19, scope: !4832)
!4835 = !DILocation(line: 2086, column: 23, scope: !4832)
!4836 = !DILocation(line: 2086, column: 26, scope: !4832)
!4837 = !DILocation(line: 2086, column: 38, scope: !4832)
!4838 = !DILocation(line: 2087, column: 23, scope: !4832)
!4839 = !DILocation(line: 2087, column: 27, scope: !4832)
!4840 = !DILocation(line: 2087, column: 30, scope: !4832)
!4841 = !DILocation(line: 2087, column: 42, scope: !4832)
!4842 = !DILocation(line: 2088, column: 27, scope: !4832)
!4843 = !DILocation(line: 2088, column: 46, scope: !4832)
!4844 = !DILocation(line: 2088, column: 49, scope: !4832)
!4845 = !DILocation(line: 2088, column: 32, scope: !4832)
!4846 = !DILocation(line: 2085, column: 19, scope: !4833)
!4847 = !DILocation(line: 2089, column: 17, scope: !4832)
!4848 = !DILocation(line: 2092, column: 15, scope: !4849)
!4849 = distinct !DILexicalBlock(scope: !4736, file: !349, line: 2092, column: 15)
!4850 = !DILocation(line: 2092, column: 15, scope: !4736)
!4851 = !DILocation(line: 2093, column: 13, scope: !4849)
!4852 = !DILocation(line: 2095, column: 16, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4736, file: !349, line: 2095, column: 15)
!4854 = !DILocation(line: 2095, column: 15, scope: !4736)
!4855 = !DILocation(line: 2097, column: 19, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4857, file: !349, line: 2097, column: 19)
!4857 = distinct !DILexicalBlock(scope: !4853, file: !349, line: 2096, column: 13)
!4858 = !DILocation(line: 2097, column: 19, scope: !4857)
!4859 = !DILocation(line: 2099, column: 23, scope: !4860)
!4860 = distinct !DILexicalBlock(scope: !4861, file: !349, line: 2099, column: 23)
!4861 = distinct !DILexicalBlock(scope: !4856, file: !349, line: 2098, column: 17)
!4862 = !DILocation(line: 2099, column: 26, scope: !4860)
!4863 = !DILocation(line: 2099, column: 36, scope: !4860)
!4864 = !DILocation(line: 2099, column: 39, scope: !4860)
!4865 = !DILocation(line: 2099, column: 42, scope: !4860)
!4866 = !DILocation(line: 2099, column: 54, scope: !4860)
!4867 = !DILocation(line: 2099, column: 23, scope: !4861)
!4868 = !DILocation(line: 2103, column: 21, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4860, file: !349, line: 2100, column: 21)
!4870 = !DILocation(line: 2107, column: 24, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4860, file: !349, line: 2105, column: 21)
!4872 = !DILocation(line: 2108, column: 30, scope: !4871)
!4873 = !DILocation(line: 2108, column: 55, scope: !4871)
!4874 = !DILocation(line: 2106, column: 23, scope: !4871)
!4875 = !DILocation(line: 2109, column: 23, scope: !4871)
!4876 = !DILocation(line: 2111, column: 17, scope: !4861)
!4877 = !DILocation(line: 2120, column: 19, scope: !4878)
!4878 = distinct !DILexicalBlock(scope: !4857, file: !349, line: 2120, column: 19)
!4879 = !DILocation(line: 2121, column: 19, scope: !4878)
!4880 = !DILocation(line: 2121, column: 22, scope: !4878)
!4881 = !DILocation(line: 2121, column: 25, scope: !4878)
!4882 = !DILocation(line: 2121, column: 37, scope: !4878)
!4883 = !DILocation(line: 2122, column: 19, scope: !4878)
!4884 = !DILocation(line: 2122, column: 33, scope: !4878)
!4885 = !DILocation(line: 2122, column: 36, scope: !4878)
!4886 = !DILocation(line: 2122, column: 47, scope: !4878)
!4887 = !DILocation(line: 2122, column: 22, scope: !4878)
!4888 = !DILocation(line: 2120, column: 19, scope: !4857)
!4889 = !DILocation(line: 2125, column: 26, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4878, file: !349, line: 2123, column: 17)
!4891 = !DILocation(line: 2126, column: 26, scope: !4890)
!4892 = !DILocation(line: 2126, column: 51, scope: !4890)
!4893 = !DILocation(line: 2124, column: 19, scope: !4890)
!4894 = !DILocation(line: 2127, column: 19, scope: !4890)
!4895 = !DILocation(line: 2129, column: 13, scope: !4857)
!4896 = !DILocation(line: 2131, column: 16, scope: !4897)
!4897 = distinct !DILexicalBlock(scope: !4736, file: !349, line: 2131, column: 15)
!4898 = !DILocation(line: 2131, column: 15, scope: !4736)
!4899 = !DILocation(line: 2133, column: 19, scope: !4900)
!4900 = distinct !DILexicalBlock(scope: !4901, file: !349, line: 2133, column: 19)
!4901 = distinct !DILexicalBlock(scope: !4897, file: !349, line: 2132, column: 13)
!4902 = !DILocation(line: 2133, column: 19, scope: !4901)
!4903 = !DILocation(line: 2135, column: 23, scope: !4904)
!4904 = distinct !DILexicalBlock(scope: !4905, file: !349, line: 2135, column: 23)
!4905 = distinct !DILexicalBlock(scope: !4900, file: !349, line: 2134, column: 17)
!4906 = !DILocation(line: 2135, column: 26, scope: !4904)
!4907 = !DILocation(line: 2135, column: 36, scope: !4904)
!4908 = !DILocation(line: 2135, column: 39, scope: !4904)
!4909 = !DILocation(line: 2135, column: 42, scope: !4904)
!4910 = !DILocation(line: 2135, column: 54, scope: !4904)
!4911 = !DILocation(line: 2135, column: 23, scope: !4905)
!4912 = !DILocation(line: 2139, column: 21, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4904, file: !349, line: 2136, column: 21)
!4914 = !DILocation(line: 2143, column: 26, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4904, file: !349, line: 2141, column: 21)
!4916 = !DILocation(line: 2144, column: 30, scope: !4915)
!4917 = !DILocation(line: 2142, column: 23, scope: !4915)
!4918 = !DILocation(line: 2145, column: 23, scope: !4915)
!4919 = !DILocation(line: 2147, column: 17, scope: !4905)
!4920 = !DILocation(line: 2148, column: 13, scope: !4901)
!4921 = !DILocation(line: 2150, column: 15, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4736, file: !349, line: 2150, column: 15)
!4923 = !DILocation(line: 2150, column: 18, scope: !4922)
!4924 = !DILocation(line: 2150, column: 15, scope: !4736)
!4925 = !DILocation(line: 2153, column: 19, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4927, file: !349, line: 2153, column: 19)
!4927 = distinct !DILexicalBlock(scope: !4922, file: !349, line: 2151, column: 13)
!4928 = !DILocation(line: 2153, column: 44, scope: !4926)
!4929 = !DILocation(line: 2153, column: 48, scope: !4926)
!4930 = !DILocation(line: 2154, column: 19, scope: !4926)
!4931 = !DILocation(line: 2154, column: 22, scope: !4926)
!4932 = !DILocation(line: 2154, column: 25, scope: !4926)
!4933 = !DILocation(line: 2154, column: 37, scope: !4926)
!4934 = !DILocation(line: 2153, column: 19, scope: !4927)
!4935 = !DILocation(line: 2157, column: 24, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4926, file: !349, line: 2155, column: 17)
!4937 = !DILocation(line: 2158, column: 26, scope: !4936)
!4938 = !DILocation(line: 2158, column: 50, scope: !4936)
!4939 = !DILocation(line: 2156, column: 19, scope: !4936)
!4940 = !DILocation(line: 2159, column: 19, scope: !4936)
!4941 = !DILocation(line: 2161, column: 13, scope: !4927)
!4942 = !DILocalVariable(name: "srcbase", scope: !4736, file: !349, line: 2163, type: !180)
!4943 = !DILocation(line: 2163, column: 23, scope: !4736)
!4944 = !DILocation(line: 2164, column: 15, scope: !4945)
!4945 = distinct !DILexicalBlock(scope: !4736, file: !349, line: 2164, column: 15)
!4946 = !DILocation(line: 2164, column: 18, scope: !4945)
!4947 = !DILocation(line: 2164, column: 30, scope: !4945)
!4948 = !DILocation(line: 2167, column: 15, scope: !4945)
!4949 = !DILocation(line: 2167, column: 61, scope: !4945)
!4950 = !DILocation(line: 2167, column: 45, scope: !4945)
!4951 = !DILocation(line: 2167, column: 43, scope: !4945)
!4952 = !DILocation(line: 2167, column: 20, scope: !4945)
!4953 = !DILocation(line: 2173, column: 15, scope: !4945)
!4954 = !DILocation(line: 2173, column: 19, scope: !4945)
!4955 = !DILocation(line: 2173, column: 22, scope: !4945)
!4956 = !DILocation(line: 2173, column: 32, scope: !4945)
!4957 = !DILocation(line: 2173, column: 37, scope: !4945)
!4958 = !DILocation(line: 2164, column: 15, scope: !4736)
!4959 = !DILocation(line: 2179, column: 19, scope: !4960)
!4960 = distinct !DILexicalBlock(scope: !4961, file: !349, line: 2179, column: 19)
!4961 = distinct !DILexicalBlock(scope: !4945, file: !349, line: 2174, column: 13)
!4962 = !DILocation(line: 2179, column: 22, scope: !4960)
!4963 = !DILocation(line: 2179, column: 34, scope: !4960)
!4964 = !DILocation(line: 2180, column: 19, scope: !4960)
!4965 = !DILocation(line: 2180, column: 44, scope: !4960)
!4966 = !DILocation(line: 2180, column: 62, scope: !4960)
!4967 = !DILocation(line: 2180, column: 22, scope: !4960)
!4968 = !DILocation(line: 2179, column: 19, scope: !4961)
!4969 = !DILocalVariable(name: "fmt", scope: !4970, file: !349, line: 2182, type: !180)
!4970 = distinct !DILexicalBlock(scope: !4960, file: !349, line: 2181, column: 17)
!4971 = !DILocation(line: 2182, column: 31, scope: !4970)
!4972 = !DILocation(line: 2183, column: 26, scope: !4970)
!4973 = !DILocation(line: 2183, column: 29, scope: !4970)
!4974 = !DILocation(line: 2184, column: 20, scope: !4970)
!4975 = !DILocation(line: 2185, column: 20, scope: !4970)
!4976 = !DILocation(line: 2183, column: 23, scope: !4970)
!4977 = !DILocation(line: 2186, column: 32, scope: !4970)
!4978 = !DILocation(line: 2187, column: 26, scope: !4970)
!4979 = !DILocation(line: 2188, column: 26, scope: !4970)
!4980 = !DILocation(line: 2186, column: 19, scope: !4970)
!4981 = !DILocation(line: 2189, column: 19, scope: !4970)
!4982 = !DILocalVariable(name: "tmp_backup", scope: !4961, file: !349, line: 2192, type: !9)
!4983 = !DILocation(line: 2192, column: 21, scope: !4961)
!4984 = !DILocation(line: 2192, column: 64, scope: !4961)
!4985 = !DILocation(line: 2193, column: 54, scope: !4961)
!4986 = !DILocation(line: 2193, column: 57, scope: !4961)
!4987 = !DILocation(line: 2192, column: 34, scope: !4961)
!4988 = !DILocation(line: 2200, column: 19, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4961, file: !349, line: 2200, column: 19)
!4990 = !DILocation(line: 2200, column: 19, scope: !4961)
!4991 = !DILocation(line: 2202, column: 19, scope: !4992)
!4992 = distinct !DILexicalBlock(scope: !4989, file: !349, line: 2201, column: 17)
!4993 = !DILocalVariable(name: "__old", scope: !4994, file: !349, line: 2202, type: !180)
!4994 = distinct !DILexicalBlock(scope: !4995, file: !349, line: 2202, column: 19)
!4995 = distinct !DILexicalBlock(scope: !4992, file: !349, line: 2202, column: 19)
!4996 = !DILocation(line: 2202, column: 19, scope: !4994)
!4997 = !DILocalVariable(name: "__len", scope: !4994, file: !349, line: 2202, type: !55)
!4998 = !DILocalVariable(name: "__new", scope: !4994, file: !349, line: 2202, type: !9)
!4999 = !DILocation(line: 2202, column: 19, scope: !4995)
!5000 = !DILocation(line: 2203, column: 25, scope: !4992)
!5001 = !DILocation(line: 2203, column: 19, scope: !4992)
!5002 = !DILocation(line: 2204, column: 17, scope: !4992)
!5003 = !DILocation(line: 2205, column: 24, scope: !5004)
!5004 = distinct !DILexicalBlock(scope: !4989, file: !349, line: 2205, column: 24)
!5005 = !DILocation(line: 2205, column: 30, scope: !5004)
!5006 = !DILocation(line: 2205, column: 24, scope: !4989)
!5007 = !DILocation(line: 2207, column: 29, scope: !5008)
!5008 = distinct !DILexicalBlock(scope: !5004, file: !349, line: 2206, column: 17)
!5009 = !DILocation(line: 2207, column: 36, scope: !5008)
!5010 = !DILocation(line: 2207, column: 59, scope: !5008)
!5011 = !DILocation(line: 2207, column: 19, scope: !5008)
!5012 = !DILocation(line: 2208, column: 19, scope: !5008)
!5013 = !DILocation(line: 2210, column: 23, scope: !4961)
!5014 = !DILocation(line: 2211, column: 13, scope: !4961)
!5015 = !DILocation(line: 2212, column: 22, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !4945, file: !349, line: 2212, column: 20)
!5017 = !DILocation(line: 2214, column: 20, scope: !5016)
!5018 = !DILocation(line: 2214, column: 25, scope: !5016)
!5019 = !DILocation(line: 2214, column: 28, scope: !5016)
!5020 = !DILocation(line: 2215, column: 20, scope: !5016)
!5021 = !DILocation(line: 2215, column: 24, scope: !5016)
!5022 = !DILocation(line: 2215, column: 27, scope: !5016)
!5023 = !DILocation(line: 2216, column: 24, scope: !5016)
!5024 = !DILocation(line: 2216, column: 28, scope: !5016)
!5025 = !DILocation(line: 2216, column: 31, scope: !5016)
!5026 = !DILocation(line: 2216, column: 46, scope: !5016)
!5027 = !DILocation(line: 2216, column: 60, scope: !5016)
!5028 = !{!2915, !2916, i64 16}
!5029 = !DILocation(line: 2216, column: 51, scope: !5016)
!5030 = !DILocation(line: 2217, column: 24, scope: !5016)
!5031 = !DILocation(line: 2217, column: 28, scope: !5016)
!5032 = !DILocation(line: 2217, column: 31, scope: !5016)
!5033 = !DILocation(line: 2217, column: 43, scope: !5016)
!5034 = !DILocation(line: 2218, column: 28, scope: !5016)
!5035 = !DILocation(line: 2218, column: 33, scope: !5016)
!5036 = !DILocation(line: 2212, column: 20, scope: !4945)
!5037 = !DILocation(line: 2221, column: 27, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !5039, file: !349, line: 2221, column: 19)
!5039 = distinct !DILexicalBlock(scope: !5016, file: !349, line: 2220, column: 13)
!5040 = !DILocation(line: 2221, column: 19, scope: !5038)
!5041 = !DILocation(line: 2221, column: 37, scope: !5038)
!5042 = !DILocation(line: 2221, column: 42, scope: !5038)
!5043 = !DILocation(line: 2221, column: 45, scope: !5038)
!5044 = !DILocation(line: 2221, column: 51, scope: !5038)
!5045 = !DILocation(line: 2221, column: 19, scope: !5039)
!5046 = !DILocation(line: 2223, column: 29, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5038, file: !349, line: 2222, column: 17)
!5048 = !DILocation(line: 2223, column: 36, scope: !5047)
!5049 = !DILocation(line: 2223, column: 59, scope: !5047)
!5050 = !DILocation(line: 2223, column: 19, scope: !5047)
!5051 = !DILocation(line: 2224, column: 19, scope: !5047)
!5052 = !DILocation(line: 2226, column: 23, scope: !5039)
!5053 = !DILocation(line: 2227, column: 19, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !5039, file: !349, line: 2227, column: 19)
!5055 = !DILocation(line: 2227, column: 22, scope: !5054)
!5056 = !DILocation(line: 2227, column: 19, scope: !5039)
!5057 = !DILocation(line: 2228, column: 25, scope: !5054)
!5058 = !DILocation(line: 2228, column: 44, scope: !5054)
!5059 = !DILocation(line: 2228, column: 17, scope: !5054)
!5060 = !DILocation(line: 2229, column: 13, scope: !5039)
!5061 = !DILocation(line: 2230, column: 9, scope: !4736)
!5062 = !DILocation(line: 2231, column: 5, scope: !4663)
!5063 = !DILocation(line: 2235, column: 7, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !4489, file: !349, line: 2235, column: 7)
!5065 = !DILocation(line: 2236, column: 7, scope: !5064)
!5066 = !DILocation(line: 2236, column: 10, scope: !5064)
!5067 = !DILocation(line: 2236, column: 13, scope: !5064)
!5068 = !DILocation(line: 2237, column: 7, scope: !5064)
!5069 = !DILocation(line: 2237, column: 12, scope: !5064)
!5070 = !DILocation(line: 2237, column: 15, scope: !5064)
!5071 = !DILocation(line: 2238, column: 7, scope: !5064)
!5072 = !DILocation(line: 2238, column: 10, scope: !5064)
!5073 = !DILocation(line: 2238, column: 13, scope: !5064)
!5074 = !DILocation(line: 2238, column: 25, scope: !5064)
!5075 = !DILocation(line: 2235, column: 7, scope: !4489)
!5076 = !DILocalVariable(name: "lstat_ok", scope: !5077, file: !349, line: 2240, type: !142)
!5077 = distinct !DILexicalBlock(scope: !5064, file: !349, line: 2239, column: 5)
!5078 = !DILocation(line: 2240, column: 12, scope: !5077)
!5079 = !DILocalVariable(name: "tmp_buf", scope: !5077, file: !349, line: 2241, type: !415)
!5080 = !DILocation(line: 2241, column: 19, scope: !5077)
!5081 = !DILocalVariable(name: "dst_lstat_sb", scope: !5077, file: !349, line: 2242, type: !444)
!5082 = !DILocation(line: 2242, column: 20, scope: !5077)
!5083 = !DILocation(line: 2246, column: 11, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !5077, file: !349, line: 2246, column: 11)
!5085 = !DILocation(line: 2246, column: 11, scope: !5077)
!5086 = !DILocation(line: 2247, column: 22, scope: !5084)
!5087 = !DILocation(line: 2247, column: 9, scope: !5084)
!5088 = !DILocation(line: 2250, column: 22, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5090, file: !349, line: 2250, column: 15)
!5090 = distinct !DILexicalBlock(scope: !5084, file: !349, line: 2249, column: 9)
!5091 = !DILocation(line: 2250, column: 15, scope: !5089)
!5092 = !DILocation(line: 2250, column: 42, scope: !5089)
!5093 = !DILocation(line: 2250, column: 15, scope: !5090)
!5094 = !DILocation(line: 2251, column: 26, scope: !5089)
!5095 = !DILocation(line: 2251, column: 13, scope: !5089)
!5096 = !DILocation(line: 2253, column: 22, scope: !5089)
!5097 = !DILocation(line: 2257, column: 11, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !5077, file: !349, line: 2257, column: 11)
!5099 = !DILocation(line: 2258, column: 11, scope: !5098)
!5100 = !DILocation(line: 2258, column: 14, scope: !5098)
!5101 = !DILocation(line: 2259, column: 11, scope: !5098)
!5102 = !DILocation(line: 2259, column: 25, scope: !5098)
!5103 = !DILocation(line: 2259, column: 28, scope: !5098)
!5104 = !DILocation(line: 2259, column: 39, scope: !5098)
!5105 = !DILocation(line: 2259, column: 49, scope: !5098)
!5106 = !DILocation(line: 2259, column: 14, scope: !5098)
!5107 = !DILocation(line: 2257, column: 11, scope: !5077)
!5108 = !DILocation(line: 2262, column: 18, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !5098, file: !349, line: 2260, column: 9)
!5110 = !DILocation(line: 2263, column: 18, scope: !5109)
!5111 = !DILocation(line: 2263, column: 43, scope: !5109)
!5112 = !DILocation(line: 2261, column: 11, scope: !5109)
!5113 = !DILocation(line: 2264, column: 11, scope: !5109)
!5114 = !DILocation(line: 2266, column: 5, scope: !5077)
!5115 = !DILocation(line: 2272, column: 7, scope: !5116)
!5116 = distinct !DILexicalBlock(scope: !4489, file: !349, line: 2272, column: 7)
!5117 = !DILocation(line: 2272, column: 10, scope: !5116)
!5118 = !DILocation(line: 2272, column: 18, scope: !5116)
!5119 = !DILocation(line: 2272, column: 22, scope: !5116)
!5120 = !DILocation(line: 2272, column: 25, scope: !5116)
!5121 = !DILocation(line: 2272, column: 35, scope: !5116)
!5122 = !DILocation(line: 2272, column: 39, scope: !5116)
!5123 = !DILocation(line: 2272, column: 7, scope: !4489)
!5124 = !DILocation(line: 2273, column: 19, scope: !5116)
!5125 = !DILocation(line: 2273, column: 29, scope: !5116)
!5126 = !DILocation(line: 2273, column: 39, scope: !5116)
!5127 = !DILocation(line: 2273, column: 5, scope: !5116)
!5128 = !DILocation(line: 2305, column: 7, scope: !5129)
!5129 = distinct !DILexicalBlock(scope: !4489, file: !349, line: 2305, column: 7)
!5130 = !DILocation(line: 2305, column: 20, scope: !5129)
!5131 = !DILocation(line: 2305, column: 7, scope: !4489)
!5132 = !DILocation(line: 2306, column: 18, scope: !5129)
!5133 = !DILocation(line: 2306, column: 5, scope: !5129)
!5134 = !DILocation(line: 2307, column: 12, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5129, file: !349, line: 2307, column: 12)
!5136 = !DILocation(line: 2307, column: 15, scope: !5135)
!5137 = !DILocation(line: 2307, column: 25, scope: !5135)
!5138 = !DILocation(line: 2307, column: 28, scope: !5135)
!5139 = !DILocation(line: 2307, column: 12, scope: !5129)
!5140 = !DILocation(line: 2309, column: 11, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5142, file: !349, line: 2309, column: 11)
!5142 = distinct !DILexicalBlock(scope: !5135, file: !349, line: 2308, column: 5)
!5143 = !DILocation(line: 2309, column: 11, scope: !5142)
!5144 = !DILocation(line: 2310, column: 41, scope: !5141)
!5145 = !DILocation(line: 2310, column: 58, scope: !5141)
!5146 = !DILocation(line: 2310, column: 73, scope: !5141)
!5147 = !DILocation(line: 2310, column: 24, scope: !5141)
!5148 = !DILocation(line: 2310, column: 22, scope: !5141)
!5149 = !DILocation(line: 2310, column: 9, scope: !5141)
!5150 = !DILocation(line: 2312, column: 51, scope: !5141)
!5151 = !DILocation(line: 2312, column: 66, scope: !5141)
!5152 = !DILocation(line: 2312, column: 24, scope: !5141)
!5153 = !DILocation(line: 2312, column: 22, scope: !5141)
!5154 = !DILocation(line: 2313, column: 5, scope: !5142)
!5155 = !DILocation(line: 2314, column: 12, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5135, file: !349, line: 2314, column: 12)
!5157 = !DILocation(line: 2314, column: 15, scope: !5156)
!5158 = !DILocation(line: 2314, column: 25, scope: !5156)
!5159 = !DILocation(line: 2314, column: 35, scope: !5156)
!5160 = !DILocation(line: 2314, column: 44, scope: !5156)
!5161 = !DILocation(line: 2314, column: 12, scope: !5135)
!5162 = !DILocation(line: 2316, column: 49, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5156, file: !349, line: 2315, column: 5)
!5164 = !DILocation(line: 2316, column: 64, scope: !5163)
!5165 = !DILocation(line: 2316, column: 22, scope: !5163)
!5166 = !DILocation(line: 2316, column: 20, scope: !5163)
!5167 = !DILocation(line: 2317, column: 5, scope: !5163)
!5168 = !DILocation(line: 2318, column: 12, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5156, file: !349, line: 2318, column: 12)
!5170 = !DILocation(line: 2318, column: 15, scope: !5169)
!5171 = !DILocation(line: 2319, column: 12, scope: !5169)
!5172 = !DILocation(line: 2319, column: 16, scope: !5169)
!5173 = !DILocation(line: 2319, column: 19, scope: !5169)
!5174 = !DILocation(line: 2320, column: 12, scope: !5169)
!5175 = !DILocation(line: 2320, column: 27, scope: !5169)
!5176 = !DILocation(line: 2320, column: 18, scope: !5169)
!5177 = !DILocation(line: 2321, column: 16, scope: !5169)
!5178 = !DILocation(line: 2321, column: 20, scope: !5169)
!5179 = !DILocation(line: 2322, column: 20, scope: !5169)
!5180 = !DILocation(line: 2322, column: 23, scope: !5169)
!5181 = !DILocation(line: 2322, column: 26, scope: !5169)
!5182 = !DILocation(line: 2322, column: 38, scope: !5169)
!5183 = !DILocation(line: 2323, column: 16, scope: !5169)
!5184 = !DILocation(line: 2323, column: 19, scope: !5169)
!5185 = !DILocation(line: 2323, column: 22, scope: !5169)
!5186 = !DILocation(line: 2323, column: 34, scope: !5169)
!5187 = !DILocation(line: 2318, column: 12, scope: !5156)
!5188 = !DILocation(line: 2325, column: 39, scope: !5189)
!5189 = distinct !DILexicalBlock(scope: !5169, file: !349, line: 2324, column: 5)
!5190 = !DILocation(line: 2325, column: 56, scope: !5189)
!5191 = !DILocation(line: 2325, column: 71, scope: !5189)
!5192 = !DILocation(line: 2325, column: 22, scope: !5189)
!5193 = !DILocation(line: 2325, column: 20, scope: !5189)
!5194 = !DILocation(line: 2326, column: 5, scope: !5189)
!5195 = !DILocation(line: 2331, column: 7, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !4489, file: !349, line: 2331, column: 7)
!5197 = !DILocation(line: 2331, column: 7, scope: !4489)
!5198 = !DILocation(line: 2336, column: 11, scope: !5199)
!5199 = distinct !DILexicalBlock(scope: !5200, file: !349, line: 2336, column: 11)
!5200 = distinct !DILexicalBlock(scope: !5196, file: !349, line: 2332, column: 5)
!5201 = !DILocation(line: 2336, column: 11, scope: !5200)
!5202 = !DILocation(line: 2340, column: 26, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5204, file: !349, line: 2340, column: 15)
!5204 = distinct !DILexicalBlock(scope: !5199, file: !349, line: 2337, column: 9)
!5205 = !DILocation(line: 2340, column: 36, scope: !5203)
!5206 = !DILocation(line: 2340, column: 15, scope: !5203)
!5207 = !DILocation(line: 2340, column: 15, scope: !5204)
!5208 = !DILocation(line: 2342, column: 28, scope: !5209)
!5209 = distinct !DILexicalBlock(scope: !5203, file: !349, line: 2341, column: 13)
!5210 = !DILocation(line: 2343, column: 22, scope: !5209)
!5211 = !DILocation(line: 2344, column: 22, scope: !5209)
!5212 = !DILocation(line: 2342, column: 15, scope: !5209)
!5213 = !DILocation(line: 2345, column: 16, scope: !5209)
!5214 = !DILocation(line: 2345, column: 31, scope: !5209)
!5215 = !DILocation(line: 2346, column: 15, scope: !5209)
!5216 = !DILocation(line: 2348, column: 31, scope: !5217)
!5217 = distinct !DILexicalBlock(scope: !5203, file: !349, line: 2348, column: 20)
!5218 = !DILocation(line: 2348, column: 41, scope: !5217)
!5219 = !DILocation(line: 2348, column: 20, scope: !5217)
!5220 = !DILocation(line: 2348, column: 20, scope: !5203)
!5221 = !DILocation(line: 2350, column: 28, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5217, file: !349, line: 2349, column: 13)
!5223 = !DILocation(line: 2352, column: 22, scope: !5222)
!5224 = !DILocation(line: 2350, column: 15, scope: !5222)
!5225 = !DILocation(line: 2357, column: 19, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !5222, file: !349, line: 2357, column: 19)
!5227 = !DILocation(line: 2357, column: 22, scope: !5226)
!5228 = !DILocation(line: 2357, column: 32, scope: !5226)
!5229 = !DILocation(line: 2357, column: 35, scope: !5226)
!5230 = !DILocation(line: 2357, column: 19, scope: !5222)
!5231 = !DILocation(line: 2358, column: 18, scope: !5226)
!5232 = !DILocation(line: 2358, column: 35, scope: !5226)
!5233 = !DILocation(line: 2358, column: 17, scope: !5226)
!5234 = !DILocation(line: 2361, column: 15, scope: !5222)
!5235 = !DILocation(line: 2363, column: 20, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5217, file: !349, line: 2363, column: 20)
!5237 = !DILocation(line: 2363, column: 23, scope: !5236)
!5238 = !DILocation(line: 2363, column: 35, scope: !5236)
!5239 = !DILocation(line: 2364, column: 20, scope: !5236)
!5240 = !DILocation(line: 2364, column: 24, scope: !5236)
!5241 = !DILocation(line: 2365, column: 24, scope: !5236)
!5242 = !DILocation(line: 2365, column: 27, scope: !5236)
!5243 = !DILocation(line: 2365, column: 30, scope: !5236)
!5244 = !DILocation(line: 2365, column: 42, scope: !5236)
!5245 = !DILocation(line: 2363, column: 20, scope: !5217)
!5246 = !DILocation(line: 2373, column: 13, scope: !5247)
!5247 = distinct !DILexicalBlock(scope: !5236, file: !349, line: 2366, column: 13)
!5248 = !DILocation(line: 2376, column: 28, scope: !5249)
!5249 = distinct !DILexicalBlock(scope: !5236, file: !349, line: 2375, column: 13)
!5250 = !DILocation(line: 2377, column: 22, scope: !5249)
!5251 = !DILocation(line: 2377, column: 47, scope: !5249)
!5252 = !DILocation(line: 2376, column: 15, scope: !5249)
!5253 = !DILocation(line: 2378, column: 15, scope: !5249)
!5254 = !DILocation(line: 2380, column: 9, scope: !5204)
!5255 = !DILocation(line: 2383, column: 35, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !5257, file: !349, line: 2383, column: 15)
!5257 = distinct !DILexicalBlock(scope: !5199, file: !349, line: 2382, column: 9)
!5258 = !DILocation(line: 2383, column: 49, scope: !5256)
!5259 = !DILocation(line: 2383, column: 65, scope: !5256)
!5260 = !DILocation(line: 2383, column: 68, scope: !5256)
!5261 = !DILocation(line: 2384, column: 35, scope: !5256)
!5262 = !DILocation(line: 2383, column: 17, scope: !5256)
!5263 = !DILocation(line: 2383, column: 15, scope: !5257)
!5264 = !DILocation(line: 2385, column: 13, scope: !5256)
!5265 = !DILocation(line: 2387, column: 11, scope: !5257)
!5266 = !DILocation(line: 2389, column: 5, scope: !5200)
!5267 = !DILocation(line: 2391, column: 7, scope: !5268)
!5268 = distinct !DILexicalBlock(scope: !4489, file: !349, line: 2391, column: 7)
!5269 = !DILocation(line: 2391, column: 10, scope: !5268)
!5270 = !DILocation(line: 2391, column: 7, scope: !4489)
!5271 = !DILocation(line: 2393, column: 11, scope: !5272)
!5272 = distinct !DILexicalBlock(scope: !5273, file: !349, line: 2393, column: 11)
!5273 = distinct !DILexicalBlock(scope: !5268, file: !349, line: 2392, column: 5)
!5274 = !DILocation(line: 2393, column: 24, scope: !5272)
!5275 = !DILocation(line: 2393, column: 11, scope: !5273)
!5276 = !DILocation(line: 2394, column: 32, scope: !5272)
!5277 = !DILocation(line: 2394, column: 42, scope: !5272)
!5278 = !DILocation(line: 2394, column: 24, scope: !5272)
!5279 = !DILocation(line: 2394, column: 52, scope: !5272)
!5280 = !DILocation(line: 2394, column: 63, scope: !5272)
!5281 = !DILocation(line: 2394, column: 22, scope: !5272)
!5282 = !DILocation(line: 2394, column: 9, scope: !5272)
!5283 = !DILocation(line: 2396, column: 11, scope: !5284)
!5284 = distinct !DILexicalBlock(scope: !5273, file: !349, line: 2396, column: 11)
!5285 = !DILocation(line: 2396, column: 24, scope: !5284)
!5286 = !DILocation(line: 2396, column: 11, scope: !5273)
!5287 = !DILocation(line: 2398, column: 15, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5289, file: !349, line: 2398, column: 15)
!5289 = distinct !DILexicalBlock(scope: !5284, file: !349, line: 2397, column: 9)
!5290 = !DILocation(line: 2398, column: 18, scope: !5288)
!5291 = !DILocation(line: 2398, column: 15, scope: !5289)
!5292 = !DILocation(line: 2400, column: 23, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5288, file: !349, line: 2399, column: 13)
!5294 = !DILocation(line: 2400, column: 15, scope: !5293)
!5295 = !DILocation(line: 2401, column: 29, scope: !5293)
!5296 = !DILocation(line: 2401, column: 39, scope: !5293)
!5297 = !DILocation(line: 2401, column: 49, scope: !5293)
!5298 = !DILocation(line: 2401, column: 15, scope: !5293)
!5299 = !DILocation(line: 2402, column: 13, scope: !5293)
!5300 = !DILocation(line: 2404, column: 15, scope: !5301)
!5301 = distinct !DILexicalBlock(scope: !5289, file: !349, line: 2404, column: 15)
!5302 = !DILocation(line: 2404, column: 18, scope: !5301)
!5303 = !DILocation(line: 2404, column: 15, scope: !5289)
!5304 = !DILocation(line: 2407, column: 45, scope: !5305)
!5305 = distinct !DILexicalBlock(scope: !5301, file: !349, line: 2405, column: 13)
!5306 = !DILocation(line: 2407, column: 68, scope: !5305)
!5307 = !DILocation(line: 2407, column: 22, scope: !5305)
!5308 = !DILocation(line: 2408, column: 13, scope: !5305)
!5309 = !DILocation(line: 2410, column: 15, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5289, file: !349, line: 2410, column: 15)
!5311 = !DILocation(line: 2410, column: 15, scope: !5289)
!5312 = !DILocation(line: 2411, column: 14, scope: !5310)
!5313 = !DILocation(line: 2411, column: 31, scope: !5310)
!5314 = !DILocation(line: 2411, column: 13, scope: !5310)
!5315 = !DILocation(line: 2413, column: 15, scope: !5316)
!5316 = distinct !DILexicalBlock(scope: !5289, file: !349, line: 2413, column: 15)
!5317 = !DILocation(line: 2413, column: 32, scope: !5316)
!5318 = !DILocation(line: 2413, column: 36, scope: !5316)
!5319 = !DILocation(line: 2413, column: 39, scope: !5316)
!5320 = !DILocation(line: 2413, column: 15, scope: !5289)
!5321 = !DILocation(line: 2422, column: 28, scope: !5322)
!5322 = distinct !DILexicalBlock(scope: !5316, file: !349, line: 2414, column: 13)
!5323 = !DILocation(line: 2422, column: 31, scope: !5322)
!5324 = !DILocation(line: 2422, column: 42, scope: !5322)
!5325 = !DILocation(line: 2422, column: 15, scope: !5322)
!5326 = !DILocation(line: 2423, column: 13, scope: !5322)
!5327 = !DILocation(line: 2425, column: 11, scope: !5289)
!5328 = !DILocation(line: 2433, column: 11, scope: !5329)
!5329 = distinct !DILexicalBlock(scope: !5273, file: !349, line: 2433, column: 11)
!5330 = !DILocation(line: 2433, column: 24, scope: !5329)
!5331 = !DILocation(line: 2433, column: 11, scope: !5273)
!5332 = !DILocation(line: 2438, column: 24, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5329, file: !349, line: 2434, column: 9)
!5334 = !DILocation(line: 2439, column: 18, scope: !5333)
!5335 = !DILocation(line: 2440, column: 18, scope: !5333)
!5336 = !DILocation(line: 2438, column: 11, scope: !5333)
!5337 = !DILocation(line: 2446, column: 12, scope: !5333)
!5338 = !DILocation(line: 2446, column: 27, scope: !5333)
!5339 = !DILocation(line: 2450, column: 11, scope: !5333)
!5340 = !DILocation(line: 2468, column: 11, scope: !5341)
!5341 = distinct !DILexicalBlock(scope: !5273, file: !349, line: 2468, column: 11)
!5342 = !DILocation(line: 2468, column: 24, scope: !5341)
!5343 = !DILocation(line: 2468, column: 11, scope: !5273)
!5344 = !DILocation(line: 2480, column: 21, scope: !5345)
!5345 = distinct !DILexicalBlock(scope: !5341, file: !349, line: 2469, column: 9)
!5346 = !DILocation(line: 2481, column: 18, scope: !5345)
!5347 = !DILocation(line: 2482, column: 18, scope: !5345)
!5348 = !DILocation(line: 2482, column: 43, scope: !5345)
!5349 = !DILocation(line: 2480, column: 11, scope: !5345)
!5350 = !DILocation(line: 2483, column: 34, scope: !5345)
!5351 = !DILocation(line: 2483, column: 49, scope: !5345)
!5352 = !DILocation(line: 2483, column: 11, scope: !5345)
!5353 = !DILocation(line: 2484, column: 11, scope: !5345)
!5354 = !DILocation(line: 2493, column: 12, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5273, file: !349, line: 2493, column: 11)
!5356 = !DILocation(line: 2493, column: 40, scope: !5355)
!5357 = !DILocation(line: 2493, column: 33, scope: !5355)
!5358 = !DILocation(line: 2493, column: 60, scope: !5355)
!5359 = !DILocation(line: 2493, column: 52, scope: !5355)
!5360 = !DILocation(line: 2493, column: 71, scope: !5355)
!5361 = !DILocation(line: 2494, column: 11, scope: !5355)
!5362 = !DILocation(line: 2494, column: 14, scope: !5355)
!5363 = !DILocation(line: 2494, column: 20, scope: !5355)
!5364 = !DILocation(line: 2493, column: 11, scope: !5273)
!5365 = !DILocation(line: 2496, column: 21, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !5355, file: !349, line: 2495, column: 9)
!5367 = !DILocation(line: 2497, column: 14, scope: !5366)
!5368 = !DILocation(line: 2498, column: 18, scope: !5366)
!5369 = !DILocation(line: 2498, column: 43, scope: !5366)
!5370 = !DILocation(line: 2496, column: 11, scope: !5366)
!5371 = !DILocation(line: 2499, column: 34, scope: !5366)
!5372 = !DILocation(line: 2499, column: 49, scope: !5366)
!5373 = !DILocation(line: 2499, column: 11, scope: !5366)
!5374 = !DILocation(line: 2500, column: 11, scope: !5366)
!5375 = !DILocation(line: 2503, column: 11, scope: !5376)
!5376 = distinct !DILexicalBlock(scope: !5273, file: !349, line: 2503, column: 11)
!5377 = !DILocation(line: 2503, column: 14, scope: !5376)
!5378 = !DILocation(line: 2503, column: 22, scope: !5376)
!5379 = !DILocation(line: 2503, column: 26, scope: !5376)
!5380 = !DILocation(line: 2503, column: 11, scope: !5273)
!5381 = !DILocation(line: 2505, column: 19, scope: !5382)
!5382 = distinct !DILexicalBlock(scope: !5376, file: !349, line: 2504, column: 9)
!5383 = !DILocation(line: 2505, column: 11, scope: !5382)
!5384 = !DILocation(line: 2506, column: 25, scope: !5382)
!5385 = !DILocation(line: 2506, column: 35, scope: !5382)
!5386 = !DILocation(line: 2506, column: 45, scope: !5382)
!5387 = !DILocation(line: 2506, column: 11, scope: !5382)
!5388 = !DILocation(line: 2507, column: 9, scope: !5382)
!5389 = !DILocation(line: 2508, column: 15, scope: !5273)
!5390 = !DILocation(line: 2509, column: 5, scope: !5273)
!5391 = !DILocation(line: 2515, column: 20, scope: !4489)
!5392 = !DILocation(line: 2515, column: 23, scope: !4489)
!5393 = !DILocation(line: 2515, column: 34, scope: !4489)
!5394 = !DILocation(line: 2515, column: 37, scope: !4489)
!5395 = !DILocation(line: 2515, column: 44, scope: !4489)
!5396 = !DILocation(line: 2515, column: 54, scope: !4489)
!5397 = !DILocation(line: 2515, column: 17, scope: !4489)
!5398 = !DILocation(line: 2517, column: 6, scope: !4489)
!5399 = !DILocation(line: 2518, column: 9, scope: !4489)
!5400 = !DILocation(line: 2518, column: 12, scope: !4489)
!5401 = !DILocation(line: 2519, column: 11, scope: !4489)
!5402 = !DILocation(line: 2518, column: 6, scope: !4489)
!5403 = !DILocation(line: 2516, column: 23, scope: !4489)
!5404 = !DILocation(line: 2522, column: 14, scope: !4489)
!5405 = !DILocation(line: 2528, column: 35, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !4489, file: !349, line: 2528, column: 7)
!5407 = !DILocation(line: 2528, column: 45, scope: !5406)
!5408 = !DILocation(line: 2528, column: 55, scope: !5406)
!5409 = !DILocation(line: 2528, column: 65, scope: !5406)
!5410 = !DILocation(line: 2528, column: 74, scope: !5406)
!5411 = !DILocation(line: 2528, column: 9, scope: !5406)
!5412 = !DILocation(line: 2528, column: 7, scope: !4489)
!5413 = !DILocation(line: 2529, column: 5, scope: !5406)
!5414 = !DILocation(line: 2531, column: 7, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !4489, file: !349, line: 2531, column: 7)
!5416 = !DILocation(line: 2531, column: 7, scope: !4489)
!5417 = !DILocalVariable(name: "dir", scope: !5418, file: !349, line: 2533, type: !436)
!5418 = distinct !DILexicalBlock(scope: !5415, file: !349, line: 2532, column: 5)
!5419 = !DILocation(line: 2533, column: 24, scope: !5418)
!5420 = !DILocation(line: 2540, column: 33, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !5418, file: !349, line: 2540, column: 11)
!5422 = !DILocation(line: 2540, column: 11, scope: !5421)
!5423 = !DILocation(line: 2540, column: 11, scope: !5418)
!5424 = !DILocation(line: 2542, column: 24, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !5421, file: !349, line: 2541, column: 9)
!5426 = !DILocation(line: 2543, column: 18, scope: !5425)
!5427 = !DILocation(line: 2542, column: 11, scope: !5425)
!5428 = !DILocation(line: 2544, column: 11, scope: !5425)
!5429 = !DILocation(line: 2549, column: 13, scope: !5418)
!5430 = !DILocation(line: 2549, column: 11, scope: !5418)
!5431 = !DILocation(line: 2550, column: 21, scope: !5418)
!5432 = !DILocation(line: 2550, column: 7, scope: !5418)
!5433 = !DILocation(line: 2550, column: 12, scope: !5418)
!5434 = !DILocation(line: 2550, column: 19, scope: !5418)
!5435 = !{!5436, !2649, i64 0}
!5436 = !{!"dir_list", !2649, i64 0, !2916, i64 8, !2916, i64 16}
!5437 = !DILocation(line: 2551, column: 25, scope: !5418)
!5438 = !DILocation(line: 2551, column: 7, scope: !5418)
!5439 = !DILocation(line: 2551, column: 12, scope: !5418)
!5440 = !DILocation(line: 2551, column: 16, scope: !5418)
!5441 = !{!5436, !2916, i64 8}
!5442 = !DILocation(line: 2552, column: 25, scope: !5418)
!5443 = !DILocation(line: 2552, column: 7, scope: !5418)
!5444 = !DILocation(line: 2552, column: 12, scope: !5418)
!5445 = !DILocation(line: 2552, column: 16, scope: !5418)
!5446 = !{!5436, !2916, i64 16}
!5447 = !DILocation(line: 2554, column: 11, scope: !5448)
!5448 = distinct !DILexicalBlock(scope: !5418, file: !349, line: 2554, column: 11)
!5449 = !DILocation(line: 2554, column: 19, scope: !5448)
!5450 = !DILocation(line: 2554, column: 23, scope: !5448)
!5451 = !DILocation(line: 2554, column: 11, scope: !5418)
!5452 = !DILocation(line: 2560, column: 22, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5454, file: !349, line: 2560, column: 15)
!5454 = distinct !DILexicalBlock(scope: !5448, file: !349, line: 2555, column: 9)
!5455 = !DILocation(line: 2560, column: 32, scope: !5453)
!5456 = !DILocation(line: 2560, column: 49, scope: !5453)
!5457 = !DILocation(line: 2560, column: 48, scope: !5453)
!5458 = !DILocation(line: 2560, column: 46, scope: !5453)
!5459 = !DILocation(line: 2560, column: 15, scope: !5453)
!5460 = !DILocation(line: 2560, column: 70, scope: !5453)
!5461 = !DILocation(line: 2560, column: 15, scope: !5454)
!5462 = !DILocation(line: 2562, column: 25, scope: !5463)
!5463 = distinct !DILexicalBlock(scope: !5453, file: !349, line: 2561, column: 13)
!5464 = !DILocation(line: 2562, column: 32, scope: !5463)
!5465 = !DILocation(line: 2563, column: 22, scope: !5463)
!5466 = !DILocation(line: 2562, column: 15, scope: !5463)
!5467 = !DILocation(line: 2564, column: 15, scope: !5463)
!5468 = !DILocation(line: 2571, column: 22, scope: !5469)
!5469 = distinct !DILexicalBlock(scope: !5454, file: !349, line: 2571, column: 15)
!5470 = !DILocation(line: 2571, column: 15, scope: !5469)
!5471 = !DILocation(line: 2571, column: 41, scope: !5469)
!5472 = !DILocation(line: 2571, column: 15, scope: !5454)
!5473 = !DILocation(line: 2573, column: 25, scope: !5474)
!5474 = distinct !DILexicalBlock(scope: !5469, file: !349, line: 2572, column: 13)
!5475 = !DILocation(line: 2573, column: 32, scope: !5474)
!5476 = !DILocation(line: 2573, column: 53, scope: !5474)
!5477 = !DILocation(line: 2573, column: 15, scope: !5474)
!5478 = !DILocation(line: 2574, column: 15, scope: !5474)
!5479 = !DILocation(line: 2576, column: 28, scope: !5480)
!5480 = distinct !DILexicalBlock(scope: !5469, file: !349, line: 2576, column: 20)
!5481 = !DILocation(line: 2576, column: 36, scope: !5480)
!5482 = !DILocation(line: 2576, column: 47, scope: !5480)
!5483 = !DILocation(line: 2576, column: 20, scope: !5469)
!5484 = !DILocation(line: 2580, column: 33, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5480, file: !349, line: 2577, column: 13)
!5486 = !DILocation(line: 2580, column: 24, scope: !5485)
!5487 = !DILocation(line: 2581, column: 32, scope: !5485)
!5488 = !DILocation(line: 2583, column: 27, scope: !5489)
!5489 = distinct !DILexicalBlock(scope: !5485, file: !349, line: 2583, column: 19)
!5490 = !DILocation(line: 2583, column: 37, scope: !5489)
!5491 = !DILocation(line: 2583, column: 46, scope: !5489)
!5492 = !DILocation(line: 2583, column: 19, scope: !5489)
!5493 = !DILocation(line: 2583, column: 57, scope: !5489)
!5494 = !DILocation(line: 2583, column: 19, scope: !5485)
!5495 = !DILocation(line: 2585, column: 29, scope: !5496)
!5496 = distinct !DILexicalBlock(scope: !5489, file: !349, line: 2584, column: 17)
!5497 = !DILocation(line: 2585, column: 36, scope: !5496)
!5498 = !DILocation(line: 2586, column: 26, scope: !5496)
!5499 = !DILocation(line: 2585, column: 19, scope: !5496)
!5500 = !DILocation(line: 2587, column: 19, scope: !5496)
!5501 = !DILocation(line: 2589, column: 13, scope: !5485)
!5502 = !DILocation(line: 2595, column: 17, scope: !5503)
!5503 = distinct !DILexicalBlock(scope: !5454, file: !349, line: 2595, column: 15)
!5504 = !DILocation(line: 2595, column: 16, scope: !5503)
!5505 = !DILocation(line: 2595, column: 15, scope: !5454)
!5506 = !DILocation(line: 2597, column: 32, scope: !5507)
!5507 = distinct !DILexicalBlock(scope: !5503, file: !349, line: 2596, column: 13)
!5508 = !DILocation(line: 2597, column: 49, scope: !5507)
!5509 = !DILocation(line: 2597, column: 64, scope: !5507)
!5510 = !DILocation(line: 2597, column: 15, scope: !5507)
!5511 = !DILocation(line: 2598, column: 16, scope: !5507)
!5512 = !DILocation(line: 2598, column: 55, scope: !5507)
!5513 = !DILocation(line: 2599, column: 13, scope: !5507)
!5514 = !DILocation(line: 2601, column: 15, scope: !5515)
!5515 = distinct !DILexicalBlock(scope: !5454, file: !349, line: 2601, column: 15)
!5516 = !DILocation(line: 2601, column: 18, scope: !5515)
!5517 = !DILocation(line: 2601, column: 15, scope: !5454)
!5518 = !DILocation(line: 2603, column: 19, scope: !5519)
!5519 = distinct !DILexicalBlock(scope: !5520, file: !349, line: 2603, column: 19)
!5520 = distinct !DILexicalBlock(scope: !5515, file: !349, line: 2602, column: 13)
!5521 = !DILocation(line: 2603, column: 22, scope: !5519)
!5522 = !DILocation(line: 2603, column: 19, scope: !5520)
!5523 = !DILocation(line: 2604, column: 25, scope: !5519)
!5524 = !DILocation(line: 2604, column: 54, scope: !5519)
!5525 = !DILocation(line: 2604, column: 17, scope: !5519)
!5526 = !DILocation(line: 2606, column: 31, scope: !5519)
!5527 = !DILocation(line: 2606, column: 41, scope: !5519)
!5528 = !DILocation(line: 2606, column: 17, scope: !5519)
!5529 = !DILocation(line: 2607, column: 13, scope: !5520)
!5530 = !DILocation(line: 2608, column: 9, scope: !5454)
!5531 = !DILocation(line: 2611, column: 31, scope: !5532)
!5532 = distinct !DILexicalBlock(scope: !5448, file: !349, line: 2610, column: 9)
!5533 = !DILocation(line: 2616, column: 15, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5532, file: !349, line: 2616, column: 15)
!5535 = !DILocation(line: 2616, column: 18, scope: !5534)
!5536 = !DILocation(line: 2616, column: 39, scope: !5534)
!5537 = !DILocation(line: 2616, column: 42, scope: !5534)
!5538 = !DILocation(line: 2616, column: 45, scope: !5534)
!5539 = !DILocation(line: 2616, column: 15, scope: !5532)
!5540 = !DILocation(line: 2617, column: 42, scope: !5541)
!5541 = distinct !DILexicalBlock(scope: !5534, file: !349, line: 2617, column: 17)
!5542 = !DILocation(line: 2617, column: 52, scope: !5541)
!5543 = !DILocation(line: 2617, column: 55, scope: !5541)
!5544 = !DILocation(line: 2618, column: 49, scope: !5541)
!5545 = !DILocation(line: 2617, column: 19, scope: !5541)
!5546 = !DILocation(line: 2617, column: 17, scope: !5534)
!5547 = !DILocation(line: 2620, column: 21, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !5549, file: !349, line: 2620, column: 21)
!5549 = distinct !DILexicalBlock(scope: !5541, file: !349, line: 2619, column: 15)
!5550 = !DILocation(line: 2620, column: 24, scope: !5548)
!5551 = !DILocation(line: 2620, column: 21, scope: !5549)
!5552 = !DILocation(line: 2621, column: 19, scope: !5548)
!5553 = !DILocation(line: 2622, column: 15, scope: !5549)
!5554 = !DILocation(line: 2618, column: 50, scope: !5541)
!5555 = !DILocation(line: 2626, column: 11, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !5418, file: !349, line: 2626, column: 11)
!5557 = !DILocation(line: 2626, column: 14, scope: !5556)
!5558 = !DILocation(line: 2626, column: 30, scope: !5556)
!5559 = !DILocation(line: 2626, column: 33, scope: !5556)
!5560 = !DILocation(line: 2626, column: 40, scope: !5556)
!5561 = !DILocation(line: 2626, column: 43, scope: !5556)
!5562 = !DILocation(line: 2626, column: 51, scope: !5556)
!5563 = !DILocation(line: 2626, column: 68, scope: !5556)
!5564 = !DILocation(line: 2626, column: 58, scope: !5556)
!5565 = !DILocation(line: 2626, column: 11, scope: !5418)
!5566 = !DILocation(line: 2630, column: 9, scope: !5567)
!5567 = distinct !DILexicalBlock(scope: !5556, file: !349, line: 2627, column: 9)
!5568 = !DILocation(line: 2637, column: 34, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5556, file: !349, line: 2632, column: 9)
!5570 = !DILocation(line: 2637, column: 44, scope: !5569)
!5571 = !DILocation(line: 2637, column: 54, scope: !5569)
!5572 = !DILocation(line: 2637, column: 72, scope: !5569)
!5573 = !DILocation(line: 2637, column: 77, scope: !5569)
!5574 = !DILocation(line: 2638, column: 34, scope: !5569)
!5575 = !DILocation(line: 2639, column: 34, scope: !5569)
!5576 = !DILocation(line: 2637, column: 24, scope: !5569)
!5577 = !DILocation(line: 2637, column: 22, scope: !5569)
!5578 = !DILocation(line: 2641, column: 5, scope: !5418)
!5579 = !DILocation(line: 2642, column: 12, scope: !5580)
!5580 = distinct !DILexicalBlock(scope: !5415, file: !349, line: 2642, column: 12)
!5581 = !DILocation(line: 2642, column: 15, scope: !5580)
!5582 = !DILocation(line: 2642, column: 12, scope: !5415)
!5583 = !DILocation(line: 2644, column: 23, scope: !5584)
!5584 = distinct !DILexicalBlock(scope: !5580, file: !349, line: 2643, column: 5)
!5585 = !DILocation(line: 2645, column: 12, scope: !5586)
!5586 = distinct !DILexicalBlock(scope: !5584, file: !349, line: 2645, column: 11)
!5587 = !DILocation(line: 2645, column: 11, scope: !5586)
!5588 = !DILocation(line: 2645, column: 21, scope: !5586)
!5589 = !DILocation(line: 2645, column: 11, scope: !5584)
!5590 = !DILocalVariable(name: "dot_sb", scope: !5591, file: !349, line: 2648, type: !415)
!5591 = distinct !DILexicalBlock(scope: !5586, file: !349, line: 2646, column: 9)
!5592 = !DILocation(line: 2648, column: 23, scope: !5591)
!5593 = !DILocalVariable(name: "dst_parent_sb", scope: !5591, file: !349, line: 2649, type: !415)
!5594 = !DILocation(line: 2649, column: 23, scope: !5591)
!5595 = !DILocalVariable(name: "dst_parent", scope: !5591, file: !349, line: 2650, type: !9)
!5596 = !DILocation(line: 2650, column: 17, scope: !5591)
!5597 = !DILocalVariable(name: "in_current_dir", scope: !5591, file: !349, line: 2651, type: !142)
!5598 = !DILocation(line: 2651, column: 16, scope: !5591)
!5599 = !DILocation(line: 2653, column: 34, scope: !5591)
!5600 = !DILocation(line: 2653, column: 24, scope: !5591)
!5601 = !DILocation(line: 2653, column: 22, scope: !5591)
!5602 = !DILocation(line: 2655, column: 29, scope: !5591)
!5603 = !DILocation(line: 2659, column: 29, scope: !5591)
!5604 = !DILocation(line: 2659, column: 32, scope: !5591)
!5605 = !DILocation(line: 2659, column: 52, scope: !5591)
!5606 = !DILocation(line: 2660, column: 29, scope: !5591)
!5607 = !DILocation(line: 2660, column: 38, scope: !5591)
!5608 = !DILocation(line: 2660, column: 32, scope: !5591)
!5609 = !DILocation(line: 2660, column: 66, scope: !5591)
!5610 = !DILocation(line: 2661, column: 29, scope: !5591)
!5611 = !DILocation(line: 2661, column: 32, scope: !5591)
!5612 = !DILocation(line: 0, scope: !5591)
!5613 = !DILocation(line: 2655, column: 26, scope: !5591)
!5614 = !DILocation(line: 2662, column: 17, scope: !5591)
!5615 = !DILocation(line: 2662, column: 11, scope: !5591)
!5616 = !DILocation(line: 2664, column: 17, scope: !5617)
!5617 = distinct !DILexicalBlock(scope: !5591, file: !349, line: 2664, column: 15)
!5618 = !DILocation(line: 2664, column: 15, scope: !5591)
!5619 = !DILocation(line: 2667, column: 12, scope: !5620)
!5620 = distinct !DILexicalBlock(scope: !5617, file: !349, line: 2665, column: 13)
!5621 = !DILocation(line: 2668, column: 22, scope: !5620)
!5622 = !DILocation(line: 2666, column: 15, scope: !5620)
!5623 = !DILocation(line: 2669, column: 15, scope: !5620)
!5624 = !DILocation(line: 2671, column: 9, scope: !5591)
!5625 = !DILocalVariable(name: "err", scope: !5584, file: !349, line: 2673, type: !7)
!5626 = !DILocation(line: 2673, column: 11, scope: !5584)
!5627 = !DILocation(line: 2673, column: 34, scope: !5584)
!5628 = !DILocation(line: 2673, column: 54, scope: !5584)
!5629 = !DILocation(line: 2674, column: 34, scope: !5584)
!5630 = !DILocation(line: 2674, column: 37, scope: !5584)
!5631 = !DILocation(line: 2673, column: 17, scope: !5584)
!5632 = !DILocation(line: 2675, column: 15, scope: !5633)
!5633 = distinct !DILexicalBlock(scope: !5584, file: !349, line: 2675, column: 11)
!5634 = !DILocation(line: 2675, column: 13, scope: !5633)
!5635 = !DILocation(line: 2675, column: 11, scope: !5584)
!5636 = !DILocation(line: 2677, column: 21, scope: !5637)
!5637 = distinct !DILexicalBlock(scope: !5633, file: !349, line: 2676, column: 9)
!5638 = !DILocation(line: 2677, column: 26, scope: !5637)
!5639 = !DILocation(line: 2678, column: 18, scope: !5637)
!5640 = !DILocation(line: 2678, column: 43, scope: !5637)
!5641 = !DILocation(line: 2677, column: 11, scope: !5637)
!5642 = !DILocation(line: 2679, column: 11, scope: !5637)
!5643 = !DILocation(line: 2681, column: 5, scope: !5584)
!5644 = !DILocation(line: 2696, column: 12, scope: !5645)
!5645 = distinct !DILexicalBlock(scope: !5580, file: !349, line: 2696, column: 12)
!5646 = !DILocation(line: 2696, column: 15, scope: !5645)
!5647 = !DILocation(line: 2696, column: 12, scope: !5580)
!5648 = !DILocalVariable(name: "replace", scope: !5649, file: !349, line: 2700, type: !142)
!5649 = distinct !DILexicalBlock(scope: !5645, file: !349, line: 2699, column: 5)
!5650 = !DILocation(line: 2700, column: 12, scope: !5649)
!5651 = !DILocation(line: 2700, column: 23, scope: !5649)
!5652 = !DILocation(line: 2700, column: 26, scope: !5649)
!5653 = !DILocation(line: 2701, column: 23, scope: !5649)
!5654 = !DILocation(line: 2701, column: 26, scope: !5649)
!5655 = !DILocation(line: 2701, column: 29, scope: !5649)
!5656 = !DILocation(line: 2701, column: 41, scope: !5649)
!5657 = !DILocation(line: 2702, column: 31, scope: !5658)
!5658 = distinct !DILexicalBlock(scope: !5649, file: !349, line: 2702, column: 11)
!5659 = !DILocation(line: 2702, column: 41, scope: !5658)
!5660 = !DILocation(line: 2702, column: 51, scope: !5658)
!5661 = !DILocation(line: 2702, column: 67, scope: !5658)
!5662 = !DILocation(line: 2702, column: 13, scope: !5658)
!5663 = !DILocation(line: 2702, column: 11, scope: !5649)
!5664 = !DILocation(line: 2703, column: 9, scope: !5658)
!5665 = !DILocation(line: 2704, column: 5, scope: !5649)
!5666 = !DILocation(line: 2705, column: 12, scope: !5667)
!5667 = distinct !DILexicalBlock(scope: !5645, file: !349, line: 2705, column: 12)
!5668 = !DILocation(line: 2706, column: 12, scope: !5667)
!5669 = !DILocation(line: 2706, column: 16, scope: !5667)
!5670 = !DILocation(line: 2706, column: 19, scope: !5667)
!5671 = !DILocation(line: 2706, column: 35, scope: !5667)
!5672 = !DILocation(line: 2706, column: 39, scope: !5667)
!5673 = !DILocation(line: 2705, column: 12, scope: !5645)
!5674 = !DILocation(line: 2708, column: 25, scope: !5675)
!5675 = distinct !DILexicalBlock(scope: !5667, file: !349, line: 2707, column: 5)
!5676 = !DILocation(line: 2718, column: 23, scope: !5677)
!5677 = distinct !DILexicalBlock(scope: !5675, file: !349, line: 2718, column: 11)
!5678 = !DILocation(line: 2718, column: 33, scope: !5677)
!5679 = !DILocation(line: 2718, column: 43, scope: !5677)
!5680 = !DILocation(line: 2718, column: 46, scope: !5677)
!5681 = !DILocation(line: 2718, column: 60, scope: !5677)
!5682 = !DILocation(line: 2719, column: 23, scope: !5677)
!5683 = !DILocation(line: 2718, column: 13, scope: !5677)
!5684 = !DILocation(line: 2718, column: 11, scope: !5675)
!5685 = !DILocation(line: 2720, column: 9, scope: !5677)
!5686 = !DILocation(line: 2721, column: 5, scope: !5675)
!5687 = !DILocation(line: 2722, column: 12, scope: !5688)
!5688 = distinct !DILexicalBlock(scope: !5667, file: !349, line: 2722, column: 12)
!5689 = !DILocation(line: 2722, column: 12, scope: !5667)
!5690 = !DILocation(line: 2728, column: 18, scope: !5691)
!5691 = distinct !DILexicalBlock(scope: !5692, file: !349, line: 2728, column: 11)
!5692 = distinct !DILexicalBlock(scope: !5688, file: !349, line: 2723, column: 5)
!5693 = !DILocation(line: 2728, column: 28, scope: !5691)
!5694 = !DILocation(line: 2728, column: 40, scope: !5691)
!5695 = !DILocation(line: 2728, column: 39, scope: !5691)
!5696 = !DILocation(line: 2728, column: 37, scope: !5691)
!5697 = !DILocation(line: 2728, column: 11, scope: !5691)
!5698 = !DILocation(line: 2728, column: 64, scope: !5691)
!5699 = !DILocation(line: 2728, column: 11, scope: !5692)
!5700 = !DILocation(line: 2729, column: 21, scope: !5701)
!5701 = distinct !DILexicalBlock(scope: !5691, file: !349, line: 2729, column: 13)
!5702 = !DILocation(line: 2729, column: 31, scope: !5701)
!5703 = !DILocation(line: 2729, column: 40, scope: !5701)
!5704 = !DILocation(line: 2729, column: 54, scope: !5701)
!5705 = !DILocation(line: 2729, column: 53, scope: !5701)
!5706 = !DILocation(line: 2729, column: 51, scope: !5701)
!5707 = !DILocation(line: 2729, column: 13, scope: !5701)
!5708 = !DILocation(line: 2729, column: 75, scope: !5701)
!5709 = !DILocation(line: 2729, column: 13, scope: !5691)
!5710 = !DILocation(line: 2731, column: 23, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5701, file: !349, line: 2730, column: 11)
!5712 = !DILocation(line: 2731, column: 30, scope: !5711)
!5713 = !DILocation(line: 2731, column: 58, scope: !5711)
!5714 = !DILocation(line: 2731, column: 13, scope: !5711)
!5715 = !DILocation(line: 2732, column: 13, scope: !5711)
!5716 = !DILocation(line: 2729, column: 78, scope: !5701)
!5717 = !DILocation(line: 2734, column: 5, scope: !5692)
!5718 = !DILocation(line: 2735, column: 12, scope: !5719)
!5719 = distinct !DILexicalBlock(scope: !5688, file: !349, line: 2735, column: 12)
!5720 = !DILocation(line: 2735, column: 31, scope: !5719)
!5721 = !DILocation(line: 2735, column: 34, scope: !5719)
!5722 = !DILocation(line: 2735, column: 53, scope: !5719)
!5723 = !DILocation(line: 2735, column: 56, scope: !5719)
!5724 = !DILocation(line: 2735, column: 12, scope: !5688)
!5725 = !DILocation(line: 2737, column: 18, scope: !5726)
!5726 = distinct !DILexicalBlock(scope: !5727, file: !349, line: 2737, column: 11)
!5727 = distinct !DILexicalBlock(scope: !5719, file: !349, line: 2736, column: 5)
!5728 = !DILocation(line: 2737, column: 28, scope: !5726)
!5729 = !DILocation(line: 2737, column: 40, scope: !5726)
!5730 = !DILocation(line: 2737, column: 39, scope: !5726)
!5731 = !DILocation(line: 2737, column: 37, scope: !5726)
!5732 = !DILocation(line: 2737, column: 68, scope: !5726)
!5733 = !{!2915, !2916, i64 40}
!5734 = !DILocation(line: 2737, column: 11, scope: !5726)
!5735 = !DILocation(line: 2738, column: 11, scope: !5726)
!5736 = !DILocation(line: 2737, column: 11, scope: !5727)
!5737 = !DILocation(line: 2740, column: 21, scope: !5738)
!5738 = distinct !DILexicalBlock(scope: !5726, file: !349, line: 2739, column: 9)
!5739 = !DILocation(line: 2740, column: 28, scope: !5738)
!5740 = !DILocation(line: 2741, column: 18, scope: !5738)
!5741 = !DILocation(line: 2740, column: 11, scope: !5738)
!5742 = !DILocation(line: 2742, column: 11, scope: !5738)
!5743 = !DILocation(line: 2744, column: 5, scope: !5727)
!5744 = !DILocation(line: 2745, column: 12, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5719, file: !349, line: 2745, column: 12)
!5746 = !DILocation(line: 2745, column: 12, scope: !5719)
!5747 = !DILocalVariable(name: "src_link_val", scope: !5748, file: !349, line: 2747, type: !9)
!5748 = distinct !DILexicalBlock(scope: !5745, file: !349, line: 2746, column: 5)
!5749 = !DILocation(line: 2747, column: 13, scope: !5748)
!5750 = !DILocation(line: 2747, column: 49, scope: !5748)
!5751 = !DILocation(line: 2747, column: 66, scope: !5748)
!5752 = !DILocation(line: 2747, column: 28, scope: !5748)
!5753 = !DILocation(line: 2748, column: 23, scope: !5748)
!5754 = !DILocation(line: 2749, column: 11, scope: !5755)
!5755 = distinct !DILexicalBlock(scope: !5748, file: !349, line: 2749, column: 11)
!5756 = !DILocation(line: 2749, column: 24, scope: !5755)
!5757 = !DILocation(line: 2749, column: 11, scope: !5748)
!5758 = !DILocation(line: 2751, column: 21, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !5755, file: !349, line: 2750, column: 9)
!5760 = !DILocation(line: 2751, column: 28, scope: !5759)
!5761 = !DILocation(line: 2752, column: 18, scope: !5759)
!5762 = !DILocation(line: 2751, column: 11, scope: !5759)
!5763 = !DILocation(line: 2753, column: 11, scope: !5759)
!5764 = !DILocalVariable(name: "symlink_err", scope: !5748, file: !349, line: 2756, type: !7)
!5765 = !DILocation(line: 2756, column: 11, scope: !5748)
!5766 = !DILocation(line: 2756, column: 42, scope: !5748)
!5767 = !DILocation(line: 2756, column: 66, scope: !5748)
!5768 = !DILocation(line: 2757, column: 42, scope: !5748)
!5769 = !DILocation(line: 2757, column: 45, scope: !5748)
!5770 = !DILocation(line: 2756, column: 25, scope: !5748)
!5771 = !DILocation(line: 2758, column: 15, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !5748, file: !349, line: 2758, column: 11)
!5773 = !DILocation(line: 2758, column: 13, scope: !5772)
!5774 = !DILocation(line: 2758, column: 27, scope: !5772)
!5775 = !DILocation(line: 2758, column: 30, scope: !5772)
!5776 = !DILocation(line: 2758, column: 33, scope: !5772)
!5777 = !DILocation(line: 2758, column: 40, scope: !5772)
!5778 = !DILocation(line: 2758, column: 44, scope: !5772)
!5779 = !DILocation(line: 2758, column: 52, scope: !5772)
!5780 = !DILocation(line: 2758, column: 55, scope: !5772)
!5781 = !DILocation(line: 2759, column: 11, scope: !5772)
!5782 = !DILocation(line: 2759, column: 21, scope: !5772)
!5783 = !DILocation(line: 2759, column: 40, scope: !5772)
!5784 = !DILocation(line: 2759, column: 32, scope: !5772)
!5785 = !DILocation(line: 2759, column: 29, scope: !5772)
!5786 = !DILocation(line: 2758, column: 11, scope: !5748)
!5787 = !DILocalVariable(name: "dest_link_val", scope: !5788, file: !349, line: 2765, type: !9)
!5788 = distinct !DILexicalBlock(scope: !5772, file: !349, line: 2760, column: 9)
!5789 = !DILocation(line: 2765, column: 17, scope: !5788)
!5790 = !DILocation(line: 2766, column: 34, scope: !5788)
!5791 = !DILocation(line: 2766, column: 51, scope: !5788)
!5792 = !DILocation(line: 2766, column: 13, scope: !5788)
!5793 = !DILocation(line: 2767, column: 15, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5788, file: !349, line: 2767, column: 15)
!5795 = !DILocation(line: 2767, column: 15, scope: !5788)
!5796 = !DILocation(line: 2769, column: 19, scope: !5797)
!5797 = distinct !DILexicalBlock(scope: !5798, file: !349, line: 2769, column: 19)
!5798 = distinct !DILexicalBlock(scope: !5794, file: !349, line: 2768, column: 13)
!5799 = !DILocation(line: 2769, column: 19, scope: !5798)
!5800 = !DILocation(line: 2770, column: 29, scope: !5797)
!5801 = !DILocation(line: 2770, column: 17, scope: !5797)
!5802 = !DILocation(line: 2771, column: 21, scope: !5798)
!5803 = !DILocation(line: 2771, column: 15, scope: !5798)
!5804 = !DILocation(line: 2772, column: 13, scope: !5798)
!5805 = !DILocation(line: 2773, column: 9, scope: !5788)
!5806 = !DILocation(line: 2774, column: 13, scope: !5748)
!5807 = !DILocation(line: 2774, column: 7, scope: !5748)
!5808 = !DILocation(line: 2775, column: 15, scope: !5809)
!5809 = distinct !DILexicalBlock(scope: !5748, file: !349, line: 2775, column: 11)
!5810 = !DILocation(line: 2775, column: 13, scope: !5809)
!5811 = !DILocation(line: 2775, column: 11, scope: !5748)
!5812 = !DILocation(line: 2777, column: 21, scope: !5813)
!5813 = distinct !DILexicalBlock(scope: !5809, file: !349, line: 2776, column: 9)
!5814 = !DILocation(line: 2777, column: 34, scope: !5813)
!5815 = !DILocation(line: 2778, column: 18, scope: !5813)
!5816 = !DILocation(line: 2777, column: 11, scope: !5813)
!5817 = !DILocation(line: 2779, column: 11, scope: !5813)
!5818 = !DILocation(line: 2782, column: 11, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5748, file: !349, line: 2782, column: 11)
!5820 = !DILocation(line: 2782, column: 14, scope: !5819)
!5821 = !DILocation(line: 2782, column: 11, scope: !5748)
!5822 = !DILocation(line: 2783, column: 9, scope: !5819)
!5823 = !DILocation(line: 2785, column: 11, scope: !5824)
!5824 = distinct !DILexicalBlock(scope: !5748, file: !349, line: 2785, column: 11)
!5825 = !DILocation(line: 2785, column: 14, scope: !5824)
!5826 = !DILocation(line: 2785, column: 11, scope: !5748)
!5827 = !DILocation(line: 2790, column: 26, scope: !5828)
!5828 = distinct !DILexicalBlock(scope: !5829, file: !349, line: 2789, column: 15)
!5829 = distinct !DILexicalBlock(scope: !5824, file: !349, line: 2786, column: 9)
!5830 = !DILocation(line: 2790, column: 43, scope: !5828)
!5831 = !DILocation(line: 2790, column: 58, scope: !5828)
!5832 = !DILocation(line: 2790, column: 18, scope: !5828)
!5833 = !DILocation(line: 2790, column: 66, scope: !5828)
!5834 = !DILocation(line: 2791, column: 15, scope: !5828)
!5835 = !DILocation(line: 2791, column: 38, scope: !5828)
!5836 = !DILocation(line: 2791, column: 20, scope: !5828)
!5837 = !DILocation(line: 2789, column: 15, scope: !5829)
!5838 = !DILocation(line: 2793, column: 25, scope: !5839)
!5839 = distinct !DILexicalBlock(scope: !5828, file: !349, line: 2792, column: 13)
!5840 = !DILocation(line: 2793, column: 32, scope: !5839)
!5841 = !DILocation(line: 2794, column: 22, scope: !5839)
!5842 = !DILocation(line: 2793, column: 15, scope: !5839)
!5843 = !DILocation(line: 2795, column: 19, scope: !5844)
!5844 = distinct !DILexicalBlock(scope: !5839, file: !349, line: 2795, column: 19)
!5845 = !DILocation(line: 2795, column: 22, scope: !5844)
!5846 = !DILocation(line: 2795, column: 19, scope: !5839)
!5847 = !DILocation(line: 2796, column: 17, scope: !5844)
!5848 = !DILocation(line: 2797, column: 13, scope: !5839)
!5849 = !DILocation(line: 2805, column: 9, scope: !5829)
!5850 = !DILocation(line: 2806, column: 5, scope: !5748)
!5851 = !DILocation(line: 2809, column: 20, scope: !5852)
!5852 = distinct !DILexicalBlock(scope: !5745, file: !349, line: 2808, column: 5)
!5853 = !DILocation(line: 2809, column: 51, scope: !5852)
!5854 = !DILocation(line: 2809, column: 7, scope: !5852)
!5855 = !DILocation(line: 2810, column: 7, scope: !5852)
!5856 = !DILocation(line: 2815, column: 8, scope: !5857)
!5857 = distinct !DILexicalBlock(scope: !4489, file: !349, line: 2815, column: 7)
!5858 = !DILocation(line: 2815, column: 16, scope: !5857)
!5859 = !DILocation(line: 2815, column: 20, scope: !5857)
!5860 = !DILocation(line: 2815, column: 23, scope: !5857)
!5861 = !DILocation(line: 2815, column: 39, scope: !5857)
!5862 = !DILocation(line: 2815, column: 43, scope: !5857)
!5863 = !DILocation(line: 2816, column: 7, scope: !5857)
!5864 = !DILocation(line: 2816, column: 11, scope: !5857)
!5865 = !DILocation(line: 2816, column: 14, scope: !5857)
!5866 = !DILocation(line: 2816, column: 35, scope: !5857)
!5867 = !DILocation(line: 2816, column: 38, scope: !5857)
!5868 = !DILocation(line: 2816, column: 41, scope: !5857)
!5869 = !DILocation(line: 2815, column: 7, scope: !4489)
!5870 = !DILocation(line: 2818, column: 36, scope: !5871)
!5871 = distinct !DILexicalBlock(scope: !5872, file: !349, line: 2818, column: 11)
!5872 = distinct !DILexicalBlock(scope: !5857, file: !349, line: 2817, column: 5)
!5873 = !DILocation(line: 2818, column: 46, scope: !5871)
!5874 = !DILocation(line: 2818, column: 49, scope: !5871)
!5875 = !DILocation(line: 2819, column: 43, scope: !5871)
!5876 = !DILocation(line: 2818, column: 13, scope: !5871)
!5877 = !DILocation(line: 2818, column: 11, scope: !5872)
!5878 = !DILocation(line: 2821, column: 16, scope: !5879)
!5879 = distinct !DILexicalBlock(scope: !5880, file: !349, line: 2821, column: 16)
!5880 = distinct !DILexicalBlock(scope: !5871, file: !349, line: 2820, column: 9)
!5881 = !DILocation(line: 2821, column: 19, scope: !5879)
!5882 = !DILocation(line: 2821, column: 16, scope: !5880)
!5883 = !DILocation(line: 2822, column: 14, scope: !5879)
!5884 = !DILocation(line: 2823, column: 9, scope: !5880)
!5885 = !DILocation(line: 2824, column: 5, scope: !5872)
!5886 = !DILocation(line: 2826, column: 7, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !4489, file: !349, line: 2826, column: 7)
!5888 = !DILocation(line: 2826, column: 24, scope: !5887)
!5889 = !DILocation(line: 2826, column: 27, scope: !5887)
!5890 = !DILocation(line: 2826, column: 30, scope: !5887)
!5891 = !DILocation(line: 2826, column: 7, scope: !4489)
!5892 = !DILocalVariable(name: "sb", scope: !5893, file: !349, line: 2830, type: !415)
!5893 = distinct !DILexicalBlock(scope: !5887, file: !349, line: 2827, column: 5)
!5894 = !DILocation(line: 2830, column: 19, scope: !5893)
!5895 = !DILocation(line: 2831, column: 18, scope: !5896)
!5896 = distinct !DILexicalBlock(scope: !5893, file: !349, line: 2831, column: 11)
!5897 = !DILocation(line: 2831, column: 11, scope: !5896)
!5898 = !DILocation(line: 2831, column: 33, scope: !5896)
!5899 = !DILocation(line: 2831, column: 11, scope: !5893)
!5900 = !DILocation(line: 2832, column: 22, scope: !5896)
!5901 = !DILocation(line: 2832, column: 25, scope: !5896)
!5902 = !DILocation(line: 2832, column: 36, scope: !5896)
!5903 = !DILocation(line: 2832, column: 9, scope: !5896)
!5904 = !DILocation(line: 2833, column: 5, scope: !5893)
!5905 = !DILocation(line: 2837, column: 7, scope: !5906)
!5906 = distinct !DILexicalBlock(scope: !4489, file: !349, line: 2837, column: 7)
!5907 = !DILocation(line: 2837, column: 10, scope: !5906)
!5908 = !DILocation(line: 2837, column: 20, scope: !5906)
!5909 = !DILocation(line: 2837, column: 25, scope: !5906)
!5910 = !DILocation(line: 2837, column: 7, scope: !4489)
!5911 = !DILocation(line: 2840, column: 12, scope: !5906)
!5912 = !DILocation(line: 2840, column: 5, scope: !5906)
!5913 = !DILocation(line: 2842, column: 7, scope: !5914)
!5914 = distinct !DILexicalBlock(scope: !4489, file: !349, line: 2842, column: 7)
!5915 = !DILocation(line: 2842, column: 7, scope: !4489)
!5916 = !DILocation(line: 2843, column: 12, scope: !5914)
!5917 = !DILocation(line: 2843, column: 5, scope: !5914)
!5918 = !DILocation(line: 2857, column: 7, scope: !5919)
!5919 = distinct !DILexicalBlock(scope: !4489, file: !349, line: 2857, column: 7)
!5920 = !DILocation(line: 2857, column: 10, scope: !5919)
!5921 = !DILocation(line: 2857, column: 7, scope: !4489)
!5922 = !DILocalVariable(name: "timespec", scope: !5923, file: !349, line: 2859, type: !445)
!5923 = distinct !DILexicalBlock(scope: !5919, file: !349, line: 2858, column: 5)
!5924 = !DILocation(line: 2859, column: 23, scope: !5923)
!5925 = !DILocation(line: 2860, column: 7, scope: !5923)
!5926 = !DILocation(line: 2860, column: 21, scope: !5923)
!5927 = !DILocation(line: 2861, column: 7, scope: !5923)
!5928 = !DILocation(line: 2861, column: 21, scope: !5923)
!5929 = !DILocation(line: 2863, column: 12, scope: !5930)
!5930 = distinct !DILexicalBlock(scope: !5923, file: !349, line: 2863, column: 11)
!5931 = !DILocation(line: 2864, column: 31, scope: !5930)
!5932 = !DILocation(line: 2864, column: 41, scope: !5930)
!5933 = !DILocation(line: 2864, column: 14, scope: !5930)
!5934 = !DILocation(line: 2865, column: 23, scope: !5930)
!5935 = !DILocation(line: 2865, column: 33, scope: !5930)
!5936 = !DILocation(line: 2865, column: 14, scope: !5930)
!5937 = !DILocation(line: 2866, column: 11, scope: !5930)
!5938 = !DILocation(line: 2863, column: 11, scope: !5923)
!5939 = !DILocation(line: 2868, column: 21, scope: !5940)
!5940 = distinct !DILexicalBlock(scope: !5930, file: !349, line: 2867, column: 9)
!5941 = !DILocation(line: 2868, column: 28, scope: !5940)
!5942 = !DILocation(line: 2868, column: 58, scope: !5940)
!5943 = !DILocation(line: 2868, column: 11, scope: !5940)
!5944 = !DILocation(line: 2869, column: 15, scope: !5945)
!5945 = distinct !DILexicalBlock(scope: !5940, file: !349, line: 2869, column: 15)
!5946 = !DILocation(line: 2869, column: 18, scope: !5945)
!5947 = !DILocation(line: 2869, column: 15, scope: !5940)
!5948 = !DILocation(line: 2870, column: 13, scope: !5945)
!5949 = !DILocation(line: 2871, column: 9, scope: !5940)
!5950 = !DILocation(line: 2872, column: 5, scope: !5923)
!5951 = !DILocation(line: 2875, column: 8, scope: !5952)
!5952 = distinct !DILexicalBlock(scope: !4489, file: !349, line: 2875, column: 7)
!5953 = !DILocation(line: 2875, column: 24, scope: !5952)
!5954 = !DILocation(line: 2875, column: 27, scope: !5952)
!5955 = !DILocation(line: 2875, column: 30, scope: !5952)
!5956 = !DILocation(line: 2876, column: 7, scope: !5952)
!5957 = !DILocation(line: 2876, column: 11, scope: !5952)
!5958 = !DILocation(line: 2876, column: 19, scope: !5952)
!5959 = !DILocation(line: 2876, column: 23, scope: !5952)
!5960 = !DILocation(line: 2875, column: 7, scope: !4489)
!5961 = !DILocation(line: 2878, column: 26, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5952, file: !349, line: 2877, column: 5)
!5963 = !DILocation(line: 2878, column: 29, scope: !5962)
!5964 = !DILocation(line: 2878, column: 52, scope: !5962)
!5965 = !DILocation(line: 2878, column: 15, scope: !5962)
!5966 = !DILocation(line: 2878, column: 7, scope: !5962)
!5967 = !DILocation(line: 2881, column: 11, scope: !5968)
!5968 = distinct !DILexicalBlock(scope: !5962, file: !349, line: 2879, column: 9)
!5969 = !DILocation(line: 2884, column: 20, scope: !5968)
!5970 = !DILocation(line: 2885, column: 11, scope: !5968)
!5971 = !DILocation(line: 2887, column: 5, scope: !5962)
!5972 = !DILocation(line: 2890, column: 7, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !4489, file: !349, line: 2890, column: 7)
!5974 = !DILocation(line: 2890, column: 10, scope: !5973)
!5975 = !DILocation(line: 2890, column: 25, scope: !5973)
!5976 = !DILocation(line: 2890, column: 41, scope: !5973)
!5977 = !DILocation(line: 2890, column: 55, scope: !5973)
!5978 = !DILocation(line: 2890, column: 69, scope: !5973)
!5979 = !DILocation(line: 2890, column: 30, scope: !5973)
!5980 = !DILocation(line: 2891, column: 7, scope: !5973)
!5981 = !DILocation(line: 2891, column: 10, scope: !5973)
!5982 = !DILocation(line: 2891, column: 13, scope: !5973)
!5983 = !DILocation(line: 2890, column: 7, scope: !4489)
!5984 = !DILocation(line: 2892, column: 5, scope: !5973)
!5985 = !DILocation(line: 2895, column: 7, scope: !5986)
!5986 = distinct !DILexicalBlock(scope: !4489, file: !349, line: 2895, column: 7)
!5987 = !DILocation(line: 2895, column: 7, scope: !4489)
!5988 = !DILocation(line: 2896, column: 12, scope: !5986)
!5989 = !DILocation(line: 2896, column: 5, scope: !5986)
!5990 = !DILocation(line: 2898, column: 15, scope: !4489)
!5991 = !DILocation(line: 2898, column: 3, scope: !4489)
!5992 = !DILocation(line: 2900, column: 7, scope: !5993)
!5993 = distinct !DILexicalBlock(scope: !4489, file: !349, line: 2900, column: 7)
!5994 = !DILocation(line: 2900, column: 10, scope: !5993)
!5995 = !DILocation(line: 2900, column: 24, scope: !5993)
!5996 = !DILocation(line: 2900, column: 27, scope: !5993)
!5997 = !DILocation(line: 2900, column: 30, scope: !5993)
!5998 = !DILocation(line: 2900, column: 7, scope: !4489)
!5999 = !DILocation(line: 2902, column: 21, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !6001, file: !349, line: 2902, column: 11)
!6001 = distinct !DILexicalBlock(scope: !5993, file: !349, line: 2901, column: 5)
!6002 = !DILocation(line: 2902, column: 35, scope: !6000)
!6003 = !DILocation(line: 2902, column: 49, scope: !6000)
!6004 = !DILocation(line: 2902, column: 11, scope: !6000)
!6005 = !DILocation(line: 2902, column: 59, scope: !6000)
!6006 = !DILocation(line: 2903, column: 11, scope: !6000)
!6007 = !DILocation(line: 2903, column: 14, scope: !6000)
!6008 = !DILocation(line: 2903, column: 17, scope: !6000)
!6009 = !DILocation(line: 2902, column: 11, scope: !6001)
!6010 = !DILocation(line: 2904, column: 9, scope: !6000)
!6011 = !DILocation(line: 2905, column: 5, scope: !6001)
!6012 = !DILocation(line: 2906, column: 12, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !5993, file: !349, line: 2906, column: 12)
!6014 = !DILocation(line: 2906, column: 15, scope: !6013)
!6015 = !DILocation(line: 2906, column: 12, scope: !5993)
!6016 = !DILocation(line: 2908, column: 20, scope: !6017)
!6017 = distinct !DILexicalBlock(scope: !6018, file: !349, line: 2908, column: 11)
!6018 = distinct !DILexicalBlock(scope: !6013, file: !349, line: 2907, column: 5)
!6019 = !DILocation(line: 2908, column: 34, scope: !6017)
!6020 = !DILocation(line: 2908, column: 37, scope: !6017)
!6021 = !DILocation(line: 2908, column: 11, scope: !6017)
!6022 = !DILocation(line: 2908, column: 43, scope: !6017)
!6023 = !DILocation(line: 2908, column: 11, scope: !6018)
!6024 = !DILocation(line: 2909, column: 9, scope: !6017)
!6025 = !DILocation(line: 2910, column: 5, scope: !6018)
!6026 = !DILocation(line: 2911, column: 12, scope: !6027)
!6027 = distinct !DILexicalBlock(scope: !6013, file: !349, line: 2911, column: 12)
!6028 = !DILocation(line: 2911, column: 15, scope: !6027)
!6029 = !DILocation(line: 2911, column: 41, scope: !6027)
!6030 = !DILocation(line: 2911, column: 44, scope: !6027)
!6031 = !DILocation(line: 2911, column: 12, scope: !6013)
!6032 = !DILocalVariable(name: "default_permissions", scope: !6033, file: !349, line: 2913, type: !7)
!6033 = distinct !DILexicalBlock(scope: !6027, file: !349, line: 2912, column: 5)
!6034 = !DILocation(line: 2913, column: 11, scope: !6033)
!6035 = !DILocation(line: 2913, column: 33, scope: !6033)
!6036 = !DILocation(line: 2913, column: 52, scope: !6033)
!6037 = !DILocation(line: 2913, column: 55, scope: !6033)
!6038 = !DILocation(line: 2915, column: 20, scope: !6039)
!6039 = distinct !DILexicalBlock(scope: !6033, file: !349, line: 2915, column: 11)
!6040 = !DILocation(line: 2915, column: 34, scope: !6039)
!6041 = !DILocation(line: 2915, column: 57, scope: !6039)
!6042 = !DILocation(line: 2915, column: 56, scope: !6039)
!6043 = !DILocation(line: 2915, column: 54, scope: !6039)
!6044 = !DILocation(line: 2915, column: 11, scope: !6039)
!6045 = !DILocation(line: 2915, column: 74, scope: !6039)
!6046 = !DILocation(line: 2915, column: 11, scope: !6033)
!6047 = !DILocation(line: 2916, column: 9, scope: !6039)
!6048 = !DILocation(line: 2917, column: 5, scope: !6033)
!6049 = !DILocation(line: 2920, column: 11, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !6051, file: !349, line: 2920, column: 11)
!6051 = distinct !DILexicalBlock(scope: !6027, file: !349, line: 2919, column: 5)
!6052 = !DILocation(line: 2920, column: 11, scope: !6051)
!6053 = !DILocation(line: 2922, column: 36, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !6050, file: !349, line: 2921, column: 9)
!6055 = !DILocation(line: 2922, column: 34, scope: !6054)
!6056 = !DILocation(line: 2922, column: 31, scope: !6054)
!6057 = !DILocation(line: 2924, column: 15, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6054, file: !349, line: 2924, column: 15)
!6059 = !DILocation(line: 2924, column: 35, scope: !6058)
!6060 = !DILocation(line: 2924, column: 39, scope: !6058)
!6061 = !DILocation(line: 2924, column: 15, scope: !6054)
!6062 = !DILocation(line: 2932, column: 19, scope: !6063)
!6063 = distinct !DILexicalBlock(scope: !6064, file: !349, line: 2932, column: 19)
!6064 = distinct !DILexicalBlock(scope: !6058, file: !349, line: 2925, column: 13)
!6065 = !DILocation(line: 2932, column: 27, scope: !6063)
!6066 = !DILocation(line: 2932, column: 37, scope: !6063)
!6067 = !DILocation(line: 2932, column: 30, scope: !6063)
!6068 = !DILocation(line: 2932, column: 56, scope: !6063)
!6069 = !DILocation(line: 2932, column: 19, scope: !6064)
!6070 = !DILocation(line: 2934, column: 29, scope: !6071)
!6071 = distinct !DILexicalBlock(scope: !6063, file: !349, line: 2933, column: 17)
!6072 = !DILocation(line: 2934, column: 36, scope: !6071)
!6073 = !DILocation(line: 2934, column: 57, scope: !6071)
!6074 = !DILocation(line: 2934, column: 19, scope: !6071)
!6075 = !DILocation(line: 2935, column: 19, scope: !6071)
!6076 = !DILocation(line: 2937, column: 33, scope: !6064)
!6077 = !DILocation(line: 2937, column: 24, scope: !6064)
!6078 = !DILocation(line: 2938, column: 19, scope: !6079)
!6079 = distinct !DILexicalBlock(scope: !6064, file: !349, line: 2938, column: 19)
!6080 = !DILocation(line: 2938, column: 42, scope: !6079)
!6081 = !DILocation(line: 2938, column: 41, scope: !6079)
!6082 = !DILocation(line: 2938, column: 39, scope: !6079)
!6083 = !DILocation(line: 2938, column: 19, scope: !6064)
!6084 = !DILocation(line: 2939, column: 34, scope: !6079)
!6085 = !DILocation(line: 2939, column: 17, scope: !6079)
!6086 = !DILocation(line: 2940, column: 13, scope: !6064)
!6087 = !DILocation(line: 2941, column: 9, scope: !6054)
!6088 = !DILocation(line: 2943, column: 11, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !6051, file: !349, line: 2943, column: 11)
!6090 = !DILocation(line: 2943, column: 11, scope: !6051)
!6091 = !DILocation(line: 2945, column: 23, scope: !6092)
!6092 = distinct !DILexicalBlock(scope: !6093, file: !349, line: 2945, column: 15)
!6093 = distinct !DILexicalBlock(scope: !6089, file: !349, line: 2944, column: 9)
!6094 = !DILocation(line: 2945, column: 33, scope: !6092)
!6095 = !DILocation(line: 2945, column: 44, scope: !6092)
!6096 = !DILocation(line: 2945, column: 42, scope: !6092)
!6097 = !DILocation(line: 2945, column: 15, scope: !6092)
!6098 = !DILocation(line: 2945, column: 65, scope: !6092)
!6099 = !DILocation(line: 2945, column: 15, scope: !6093)
!6100 = !DILocation(line: 2947, column: 25, scope: !6101)
!6101 = distinct !DILexicalBlock(scope: !6092, file: !349, line: 2946, column: 13)
!6102 = !DILocation(line: 2947, column: 32, scope: !6101)
!6103 = !DILocation(line: 2948, column: 22, scope: !6101)
!6104 = !DILocation(line: 2947, column: 15, scope: !6101)
!6105 = !DILocation(line: 2949, column: 19, scope: !6106)
!6106 = distinct !DILexicalBlock(scope: !6101, file: !349, line: 2949, column: 19)
!6107 = !DILocation(line: 2949, column: 22, scope: !6106)
!6108 = !DILocation(line: 2949, column: 19, scope: !6101)
!6109 = !DILocation(line: 2950, column: 17, scope: !6106)
!6110 = !DILocation(line: 2951, column: 13, scope: !6101)
!6111 = !DILocation(line: 2952, column: 9, scope: !6093)
!6112 = !DILocation(line: 2955, column: 10, scope: !4489)
!6113 = !DILocation(line: 2955, column: 3, scope: !4489)
!6114 = !DILabel(scope: !4489, name: "un_backup", file: !349, line: 2957)
!6115 = !DILocation(line: 2957, column: 1, scope: !4489)
!6116 = !DILocation(line: 2959, column: 7, scope: !6117)
!6117 = distinct !DILexicalBlock(scope: !4489, file: !349, line: 2959, column: 7)
!6118 = !DILocation(line: 2959, column: 10, scope: !6117)
!6119 = !DILocation(line: 2959, column: 7, scope: !4489)
!6120 = !DILocation(line: 2960, column: 5, scope: !6117)
!6121 = !DILocation(line: 2968, column: 7, scope: !6122)
!6122 = distinct !DILexicalBlock(scope: !4489, file: !349, line: 2968, column: 7)
!6123 = !DILocation(line: 2968, column: 20, scope: !6122)
!6124 = !DILocation(line: 2968, column: 7, scope: !4489)
!6125 = !DILocation(line: 2969, column: 28, scope: !6122)
!6126 = !DILocation(line: 2969, column: 43, scope: !6122)
!6127 = !DILocation(line: 2969, column: 5, scope: !6122)
!6128 = !DILocation(line: 2971, column: 7, scope: !6129)
!6129 = distinct !DILexicalBlock(scope: !4489, file: !349, line: 2971, column: 7)
!6130 = !DILocation(line: 2971, column: 7, scope: !4489)
!6131 = !DILocation(line: 2973, column: 19, scope: !6132)
!6132 = distinct !DILexicalBlock(scope: !6133, file: !349, line: 2973, column: 11)
!6133 = distinct !DILexicalBlock(scope: !6129, file: !349, line: 2972, column: 5)
!6134 = !DILocation(line: 2973, column: 31, scope: !6132)
!6135 = !DILocation(line: 2973, column: 11, scope: !6132)
!6136 = !DILocation(line: 2973, column: 41, scope: !6132)
!6137 = !DILocation(line: 2973, column: 11, scope: !6133)
!6138 = !DILocation(line: 2974, column: 19, scope: !6132)
!6139 = !DILocation(line: 2974, column: 26, scope: !6132)
!6140 = !DILocation(line: 2974, column: 52, scope: !6132)
!6141 = !DILocation(line: 2974, column: 9, scope: !6132)
!6142 = !DILocation(line: 2977, column: 15, scope: !6143)
!6143 = distinct !DILexicalBlock(scope: !6144, file: !349, line: 2977, column: 15)
!6144 = distinct !DILexicalBlock(scope: !6132, file: !349, line: 2976, column: 9)
!6145 = !DILocation(line: 2977, column: 18, scope: !6143)
!6146 = !DILocation(line: 2977, column: 15, scope: !6144)
!6147 = !DILocation(line: 2978, column: 21, scope: !6143)
!6148 = !DILocation(line: 2979, column: 21, scope: !6143)
!6149 = !DILocation(line: 2979, column: 48, scope: !6143)
!6150 = !DILocation(line: 2978, column: 13, scope: !6143)
!6151 = !DILocation(line: 2981, column: 5, scope: !6133)
!6152 = !DILocation(line: 2982, column: 3, scope: !4489)
!6153 = !DILocation(line: 2983, column: 1, scope: !4489)
!6154 = distinct !DISubprogram(name: "follow_fstatat", scope: !349, file: !349, line: 158, type: !446, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!6155 = !DILocalVariable(name: "dirfd", arg: 1, scope: !6154, file: !349, line: 158, type: !7)
!6156 = !DILocation(line: 158, column: 21, scope: !6154)
!6157 = !DILocalVariable(name: "filename", arg: 2, scope: !6154, file: !349, line: 158, type: !180)
!6158 = !DILocation(line: 158, column: 40, scope: !6154)
!6159 = !DILocalVariable(name: "st", arg: 3, scope: !6154, file: !349, line: 158, type: !444)
!6160 = !DILocation(line: 158, column: 63, scope: !6154)
!6161 = !DILocalVariable(name: "flags", arg: 4, scope: !6154, file: !349, line: 158, type: !7)
!6162 = !DILocation(line: 158, column: 71, scope: !6154)
!6163 = !DILocalVariable(name: "result", scope: !6154, file: !349, line: 160, type: !7)
!6164 = !DILocation(line: 160, column: 7, scope: !6154)
!6165 = !DILocation(line: 160, column: 25, scope: !6154)
!6166 = !DILocation(line: 160, column: 32, scope: !6154)
!6167 = !DILocation(line: 160, column: 42, scope: !6154)
!6168 = !DILocation(line: 160, column: 46, scope: !6154)
!6169 = !DILocation(line: 160, column: 16, scope: !6154)
!6170 = !DILocation(line: 183, column: 10, scope: !6154)
!6171 = !DILocation(line: 183, column: 3, scope: !6154)
!6172 = distinct !DISubprogram(name: "should_dereference", scope: !349, file: !349, line: 1840, type: !448, scopeLine: 1841, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!6173 = !DILocalVariable(name: "x", arg: 1, scope: !6172, file: !349, line: 1840, type: !356)
!6174 = !DILocation(line: 1840, column: 46, scope: !6172)
!6175 = !DILocalVariable(name: "command_line_arg", arg: 2, scope: !6172, file: !349, line: 1840, type: !142)
!6176 = !DILocation(line: 1840, column: 54, scope: !6172)
!6177 = !DILocation(line: 1842, column: 10, scope: !6172)
!6178 = !DILocation(line: 1842, column: 13, scope: !6172)
!6179 = !DILocation(line: 1842, column: 25, scope: !6172)
!6180 = !DILocation(line: 1843, column: 10, scope: !6172)
!6181 = !DILocation(line: 1843, column: 14, scope: !6172)
!6182 = !DILocation(line: 1843, column: 17, scope: !6172)
!6183 = !DILocation(line: 1843, column: 29, scope: !6172)
!6184 = !DILocation(line: 1844, column: 14, scope: !6172)
!6185 = !DILocation(line: 1844, column: 17, scope: !6172)
!6186 = !DILocation(line: 0, scope: !6172)
!6187 = !DILocation(line: 1842, column: 3, scope: !6172)
!6188 = distinct !DISubprogram(name: "same_file_ok", scope: !349, file: !349, line: 1464, type: !450, scopeLine: 1467, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!6189 = !DILocalVariable(name: "src_name", arg: 1, scope: !6188, file: !349, line: 1464, type: !180)
!6190 = !DILocation(line: 1464, column: 27, scope: !6188)
!6191 = !DILocalVariable(name: "src_sb", arg: 2, scope: !6188, file: !349, line: 1464, type: !413)
!6192 = !DILocation(line: 1464, column: 56, scope: !6188)
!6193 = !DILocalVariable(name: "dst_name", arg: 3, scope: !6188, file: !349, line: 1465, type: !180)
!6194 = !DILocation(line: 1465, column: 27, scope: !6188)
!6195 = !DILocalVariable(name: "dst_sb", arg: 4, scope: !6188, file: !349, line: 1465, type: !413)
!6196 = !DILocation(line: 1465, column: 56, scope: !6188)
!6197 = !DILocalVariable(name: "x", arg: 5, scope: !6188, file: !349, line: 1466, type: !356)
!6198 = !DILocation(line: 1466, column: 40, scope: !6188)
!6199 = !DILocalVariable(name: "return_now", arg: 6, scope: !6188, file: !349, line: 1466, type: !406)
!6200 = !DILocation(line: 1466, column: 49, scope: !6188)
!6201 = !DILocalVariable(name: "src_sb_link", scope: !6188, file: !349, line: 1468, type: !413)
!6202 = !DILocation(line: 1468, column: 22, scope: !6188)
!6203 = !DILocalVariable(name: "dst_sb_link", scope: !6188, file: !349, line: 1469, type: !413)
!6204 = !DILocation(line: 1469, column: 22, scope: !6188)
!6205 = !DILocalVariable(name: "tmp_dst_sb", scope: !6188, file: !349, line: 1470, type: !415)
!6206 = !DILocation(line: 1470, column: 15, scope: !6188)
!6207 = !DILocalVariable(name: "tmp_src_sb", scope: !6188, file: !349, line: 1471, type: !415)
!6208 = !DILocation(line: 1471, column: 15, scope: !6188)
!6209 = !DILocalVariable(name: "same_link", scope: !6188, file: !349, line: 1473, type: !142)
!6210 = !DILocation(line: 1473, column: 8, scope: !6188)
!6211 = !DILocalVariable(name: "same", scope: !6188, file: !349, line: 1474, type: !142)
!6212 = !DILocation(line: 1474, column: 8, scope: !6188)
!6213 = !DILocation(line: 1474, column: 15, scope: !6188)
!6214 = !DILocation(line: 0, scope: !6188)
!6215 = !DILocation(line: 1476, column: 4, scope: !6188)
!6216 = !DILocation(line: 1476, column: 15, scope: !6188)
!6217 = !DILocation(line: 1483, column: 7, scope: !6218)
!6218 = distinct !DILexicalBlock(scope: !6188, file: !349, line: 1483, column: 7)
!6219 = !DILocation(line: 1483, column: 12, scope: !6218)
!6220 = !DILocation(line: 1483, column: 15, scope: !6218)
!6221 = !DILocation(line: 1483, column: 18, scope: !6218)
!6222 = !DILocation(line: 1483, column: 7, scope: !6188)
!6223 = !DILocation(line: 1485, column: 8, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6218, file: !349, line: 1484, column: 5)
!6225 = !DILocation(line: 1485, column: 19, scope: !6224)
!6226 = !DILocation(line: 1486, column: 7, scope: !6224)
!6227 = !DILocation(line: 1489, column: 7, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !6188, file: !349, line: 1489, column: 7)
!6229 = !DILocation(line: 1489, column: 10, scope: !6228)
!6230 = !DILocation(line: 1489, column: 22, scope: !6228)
!6231 = !DILocation(line: 1489, column: 7, scope: !6188)
!6232 = !DILocation(line: 1491, column: 19, scope: !6233)
!6233 = distinct !DILexicalBlock(scope: !6228, file: !349, line: 1490, column: 5)
!6234 = !DILocation(line: 1491, column: 17, scope: !6233)
!6235 = !DILocation(line: 1496, column: 11, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !6233, file: !349, line: 1496, column: 11)
!6237 = !DILocation(line: 1496, column: 37, scope: !6236)
!6238 = !DILocation(line: 1496, column: 40, scope: !6236)
!6239 = !DILocation(line: 1496, column: 11, scope: !6233)
!6240 = !DILocalVariable(name: "sn", scope: !6241, file: !349, line: 1498, type: !142)
!6241 = distinct !DILexicalBlock(scope: !6236, file: !349, line: 1497, column: 9)
!6242 = !DILocation(line: 1498, column: 16, scope: !6241)
!6243 = !DILocation(line: 1498, column: 32, scope: !6241)
!6244 = !DILocation(line: 1498, column: 42, scope: !6241)
!6245 = !DILocation(line: 1498, column: 21, scope: !6241)
!6246 = !DILocation(line: 1499, column: 18, scope: !6247)
!6247 = distinct !DILexicalBlock(scope: !6241, file: !349, line: 1499, column: 16)
!6248 = !DILocation(line: 1499, column: 16, scope: !6241)
!6249 = !DILocation(line: 1502, column: 19, scope: !6250)
!6250 = distinct !DILexicalBlock(scope: !6251, file: !349, line: 1502, column: 19)
!6251 = distinct !DILexicalBlock(scope: !6247, file: !349, line: 1500, column: 13)
!6252 = !DILocation(line: 1502, column: 22, scope: !6250)
!6253 = !DILocation(line: 1502, column: 34, scope: !6250)
!6254 = !DILocation(line: 1502, column: 19, scope: !6251)
!6255 = !DILocation(line: 1503, column: 17, scope: !6250)
!6256 = !DILocation(line: 1509, column: 19, scope: !6257)
!6257 = distinct !DILexicalBlock(scope: !6251, file: !349, line: 1509, column: 19)
!6258 = !DILocation(line: 1509, column: 19, scope: !6251)
!6259 = !DILocation(line: 1511, column: 20, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6257, file: !349, line: 1510, column: 17)
!6261 = !DILocation(line: 1511, column: 31, scope: !6260)
!6262 = !DILocation(line: 1512, column: 28, scope: !6260)
!6263 = !DILocation(line: 1512, column: 31, scope: !6260)
!6264 = !DILocation(line: 1512, column: 26, scope: !6260)
!6265 = !DILocation(line: 1512, column: 19, scope: !6260)
!6266 = !DILocation(line: 1514, column: 13, scope: !6251)
!6267 = !DILocation(line: 1516, column: 20, scope: !6241)
!6268 = !DILocation(line: 1516, column: 18, scope: !6241)
!6269 = !DILocation(line: 1516, column: 11, scope: !6241)
!6270 = !DILocation(line: 1519, column: 21, scope: !6233)
!6271 = !DILocation(line: 1519, column: 19, scope: !6233)
!6272 = !DILocation(line: 1520, column: 21, scope: !6233)
!6273 = !DILocation(line: 1520, column: 19, scope: !6233)
!6274 = !DILocation(line: 1521, column: 5, scope: !6233)
!6275 = !DILocation(line: 1524, column: 12, scope: !6276)
!6276 = distinct !DILexicalBlock(scope: !6277, file: !349, line: 1524, column: 11)
!6277 = distinct !DILexicalBlock(scope: !6228, file: !349, line: 1523, column: 5)
!6278 = !DILocation(line: 1524, column: 11, scope: !6277)
!6279 = !DILocation(line: 1525, column: 9, scope: !6276)
!6280 = !DILocation(line: 1527, column: 18, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !6277, file: !349, line: 1527, column: 11)
!6282 = !DILocation(line: 1527, column: 11, scope: !6281)
!6283 = !DILocation(line: 1527, column: 41, scope: !6281)
!6284 = !DILocation(line: 1528, column: 11, scope: !6281)
!6285 = !DILocation(line: 1528, column: 21, scope: !6281)
!6286 = !DILocation(line: 1528, column: 14, scope: !6281)
!6287 = !DILocation(line: 1528, column: 44, scope: !6281)
!6288 = !DILocation(line: 1527, column: 11, scope: !6277)
!6289 = !DILocation(line: 1529, column: 9, scope: !6281)
!6290 = !DILocation(line: 1531, column: 19, scope: !6277)
!6291 = !DILocation(line: 1532, column: 19, scope: !6277)
!6292 = !DILocation(line: 1534, column: 19, scope: !6277)
!6293 = !DILocation(line: 0, scope: !6277)
!6294 = !DILocation(line: 1534, column: 17, scope: !6277)
!6295 = !DILocation(line: 1541, column: 11, scope: !6296)
!6296 = distinct !DILexicalBlock(scope: !6277, file: !349, line: 1541, column: 11)
!6297 = !DILocation(line: 1541, column: 42, scope: !6296)
!6298 = !DILocation(line: 1541, column: 45, scope: !6296)
!6299 = !DILocation(line: 1542, column: 11, scope: !6296)
!6300 = !DILocation(line: 1542, column: 14, scope: !6296)
!6301 = !DILocation(line: 1542, column: 17, scope: !6296)
!6302 = !DILocation(line: 1541, column: 11, scope: !6277)
!6303 = !DILocation(line: 1543, column: 9, scope: !6296)
!6304 = !DILocation(line: 1551, column: 7, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !6188, file: !349, line: 1551, column: 7)
!6306 = !DILocation(line: 1551, column: 10, scope: !6305)
!6307 = !DILocation(line: 1551, column: 22, scope: !6305)
!6308 = !DILocation(line: 1551, column: 7, scope: !6188)
!6309 = !DILocation(line: 1553, column: 12, scope: !6310)
!6310 = distinct !DILexicalBlock(scope: !6311, file: !349, line: 1553, column: 11)
!6311 = distinct !DILexicalBlock(scope: !6305, file: !349, line: 1552, column: 5)
!6312 = !DILocation(line: 1553, column: 11, scope: !6311)
!6313 = !DILocation(line: 1571, column: 18, scope: !6314)
!6314 = distinct !DILexicalBlock(scope: !6315, file: !349, line: 1571, column: 16)
!6315 = distinct !DILexicalBlock(scope: !6310, file: !349, line: 1554, column: 9)
!6316 = !DILocation(line: 1571, column: 21, scope: !6314)
!6317 = !DILocation(line: 1572, column: 16, scope: !6314)
!6318 = !DILocation(line: 1572, column: 19, scope: !6314)
!6319 = !DILocation(line: 1572, column: 22, scope: !6314)
!6320 = !DILocation(line: 1572, column: 34, scope: !6314)
!6321 = !DILocation(line: 1573, column: 16, scope: !6314)
!6322 = !DILocation(line: 1573, column: 19, scope: !6314)
!6323 = !DILocation(line: 1574, column: 16, scope: !6314)
!6324 = !DILocation(line: 1574, column: 21, scope: !6314)
!6325 = !DILocation(line: 1571, column: 16, scope: !6315)
!6326 = !DILocation(line: 1575, column: 13, scope: !6314)
!6327 = !DILocation(line: 1577, column: 11, scope: !6315)
!6328 = !DILocation(line: 1581, column: 27, scope: !6311)
!6329 = !DILocation(line: 1581, column: 37, scope: !6311)
!6330 = !DILocation(line: 1581, column: 16, scope: !6311)
!6331 = !DILocation(line: 1581, column: 14, scope: !6311)
!6332 = !DILocation(line: 1581, column: 7, scope: !6311)
!6333 = !DILocation(line: 1601, column: 7, scope: !6334)
!6334 = distinct !DILexicalBlock(scope: !6188, file: !349, line: 1601, column: 7)
!6335 = !DILocation(line: 1601, column: 10, scope: !6334)
!6336 = !DILocation(line: 1601, column: 20, scope: !6334)
!6337 = !DILocation(line: 1601, column: 23, scope: !6334)
!6338 = !DILocation(line: 1601, column: 26, scope: !6334)
!6339 = !DILocation(line: 1601, column: 7, scope: !6188)
!6340 = !DILocation(line: 1607, column: 11, scope: !6341)
!6341 = distinct !DILexicalBlock(scope: !6342, file: !349, line: 1607, column: 11)
!6342 = distinct !DILexicalBlock(scope: !6334, file: !349, line: 1602, column: 5)
!6343 = !DILocation(line: 1607, column: 11, scope: !6342)
!6344 = !DILocation(line: 1608, column: 9, scope: !6341)
!6345 = !DILocation(line: 1612, column: 11, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !6342, file: !349, line: 1612, column: 11)
!6347 = !DILocation(line: 1613, column: 11, scope: !6346)
!6348 = !DILocation(line: 1613, column: 18, scope: !6346)
!6349 = !DILocation(line: 1613, column: 31, scope: !6346)
!6350 = !DILocation(line: 1613, column: 16, scope: !6346)
!6351 = !DILocation(line: 1614, column: 11, scope: !6346)
!6352 = !DILocation(line: 1614, column: 27, scope: !6346)
!6353 = !DILocation(line: 1614, column: 37, scope: !6346)
!6354 = !DILocation(line: 1614, column: 16, scope: !6346)
!6355 = !DILocation(line: 1612, column: 11, scope: !6342)
!6356 = !DILocation(line: 1615, column: 18, scope: !6346)
!6357 = !DILocation(line: 1615, column: 21, scope: !6346)
!6358 = !DILocation(line: 1615, column: 16, scope: !6346)
!6359 = !DILocation(line: 1615, column: 9, scope: !6346)
!6360 = !DILocation(line: 1616, column: 5, scope: !6342)
!6361 = !DILocation(line: 1620, column: 8, scope: !6362)
!6362 = distinct !DILexicalBlock(scope: !6188, file: !349, line: 1620, column: 7)
!6363 = !DILocation(line: 1620, column: 39, scope: !6362)
!6364 = !DILocation(line: 1620, column: 43, scope: !6362)
!6365 = !DILocation(line: 1620, column: 7, scope: !6188)
!6366 = !DILocation(line: 1622, column: 12, scope: !6367)
!6367 = distinct !DILexicalBlock(scope: !6368, file: !349, line: 1622, column: 11)
!6368 = distinct !DILexicalBlock(scope: !6362, file: !349, line: 1621, column: 5)
!6369 = !DILocation(line: 1622, column: 11, scope: !6368)
!6370 = !DILocation(line: 1623, column: 9, scope: !6367)
!6371 = !DILocation(line: 1626, column: 11, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6368, file: !349, line: 1626, column: 11)
!6373 = !DILocation(line: 1626, column: 14, scope: !6372)
!6374 = !DILocation(line: 1626, column: 11, scope: !6368)
!6375 = !DILocation(line: 1628, column: 12, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !6372, file: !349, line: 1627, column: 9)
!6377 = !DILocation(line: 1628, column: 23, scope: !6376)
!6378 = !DILocation(line: 1629, column: 11, scope: !6376)
!6379 = !DILocation(line: 1631, column: 5, scope: !6368)
!6380 = !DILocation(line: 1653, column: 7, scope: !6381)
!6381 = distinct !DILexicalBlock(scope: !6188, file: !349, line: 1653, column: 7)
!6382 = !DILocation(line: 1653, column: 10, scope: !6381)
!6383 = !DILocation(line: 1654, column: 7, scope: !6381)
!6384 = !DILocation(line: 1654, column: 10, scope: !6381)
!6385 = !DILocation(line: 1655, column: 7, scope: !6381)
!6386 = !DILocation(line: 1655, column: 14, scope: !6381)
!6387 = !DILocation(line: 1655, column: 27, scope: !6381)
!6388 = !DILocation(line: 1655, column: 12, scope: !6381)
!6389 = !DILocation(line: 1653, column: 7, scope: !6188)
!6390 = !DILocalVariable(name: "abs_src", scope: !6391, file: !349, line: 1657, type: !9)
!6391 = distinct !DILexicalBlock(scope: !6381, file: !349, line: 1656, column: 5)
!6392 = !DILocation(line: 1657, column: 13, scope: !6391)
!6393 = !DILocation(line: 1657, column: 47, scope: !6391)
!6394 = !DILocation(line: 1657, column: 23, scope: !6391)
!6395 = !DILocation(line: 1658, column: 11, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6391, file: !349, line: 1658, column: 11)
!6397 = !DILocation(line: 1658, column: 11, scope: !6391)
!6398 = !DILocalVariable(name: "result", scope: !6399, file: !349, line: 1660, type: !142)
!6399 = distinct !DILexicalBlock(scope: !6396, file: !349, line: 1659, column: 9)
!6400 = !DILocation(line: 1660, column: 16, scope: !6399)
!6401 = !DILocation(line: 1660, column: 38, scope: !6399)
!6402 = !DILocation(line: 1660, column: 47, scope: !6399)
!6403 = !DILocation(line: 1660, column: 27, scope: !6399)
!6404 = !DILocation(line: 1660, column: 25, scope: !6399)
!6405 = !DILocation(line: 1661, column: 17, scope: !6399)
!6406 = !DILocation(line: 1661, column: 11, scope: !6399)
!6407 = !DILocation(line: 1662, column: 18, scope: !6399)
!6408 = !DILocation(line: 1662, column: 11, scope: !6399)
!6409 = !DILocation(line: 1664, column: 5, scope: !6391)
!6410 = !DILocation(line: 1667, column: 7, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6188, file: !349, line: 1667, column: 7)
!6412 = !DILocation(line: 1667, column: 10, scope: !6411)
!6413 = !DILocation(line: 1667, column: 24, scope: !6411)
!6414 = !DILocation(line: 1667, column: 27, scope: !6411)
!6415 = !DILocation(line: 1667, column: 7, scope: !6188)
!6416 = !DILocation(line: 1668, column: 5, scope: !6411)
!6417 = !DILocation(line: 1670, column: 7, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6188, file: !349, line: 1670, column: 7)
!6419 = !DILocation(line: 1670, column: 10, scope: !6418)
!6420 = !DILocation(line: 1670, column: 22, scope: !6418)
!6421 = !DILocation(line: 1670, column: 7, scope: !6188)
!6422 = !DILocation(line: 1672, column: 14, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6424, file: !349, line: 1672, column: 12)
!6424 = distinct !DILexicalBlock(scope: !6418, file: !349, line: 1671, column: 5)
!6425 = !DILocation(line: 1672, column: 12, scope: !6424)
!6426 = !DILocation(line: 1673, column: 23, scope: !6423)
!6427 = !DILocation(line: 1673, column: 22, scope: !6423)
!6428 = !{i64 0, i64 8, !3288, i64 8, i64 8, !3288, i64 16, i64 8, !3288, i64 24, i64 4, !2635, i64 28, i64 4, !2635, i64 32, i64 4, !2635, i64 36, i64 4, !2635, i64 40, i64 8, !3288, i64 48, i64 8, !3288, i64 56, i64 8, !3288, i64 64, i64 8, !3288, i64 72, i64 8, !3288, i64 80, i64 8, !3288, i64 88, i64 8, !3288, i64 96, i64 8, !3288, i64 104, i64 8, !3288, i64 112, i64 8, !3288, i64 120, i64 24, !3295}
!6429 = !DILocation(line: 1673, column: 9, scope: !6423)
!6430 = !DILocation(line: 1674, column: 22, scope: !6431)
!6431 = distinct !DILexicalBlock(scope: !6423, file: !349, line: 1674, column: 16)
!6432 = !DILocation(line: 1674, column: 16, scope: !6431)
!6433 = !DILocation(line: 1674, column: 45, scope: !6431)
!6434 = !DILocation(line: 1674, column: 16, scope: !6423)
!6435 = !DILocation(line: 1675, column: 9, scope: !6431)
!6436 = !DILocation(line: 1677, column: 14, scope: !6437)
!6437 = distinct !DILexicalBlock(scope: !6424, file: !349, line: 1677, column: 12)
!6438 = !DILocation(line: 1677, column: 12, scope: !6424)
!6439 = !DILocation(line: 1678, column: 23, scope: !6437)
!6440 = !DILocation(line: 1678, column: 22, scope: !6437)
!6441 = !DILocation(line: 1678, column: 9, scope: !6437)
!6442 = !DILocation(line: 1679, column: 22, scope: !6443)
!6443 = distinct !DILexicalBlock(scope: !6437, file: !349, line: 1679, column: 16)
!6444 = !DILocation(line: 1679, column: 16, scope: !6443)
!6445 = !DILocation(line: 1679, column: 45, scope: !6443)
!6446 = !DILocation(line: 1679, column: 16, scope: !6437)
!6447 = !DILocation(line: 1680, column: 9, scope: !6443)
!6448 = !DILocation(line: 1682, column: 14, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6424, file: !349, line: 1682, column: 12)
!6450 = !DILocation(line: 1682, column: 12, scope: !6424)
!6451 = !DILocation(line: 1683, column: 9, scope: !6449)
!6452 = !DILocation(line: 1685, column: 11, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !6424, file: !349, line: 1685, column: 11)
!6454 = !DILocation(line: 1685, column: 14, scope: !6453)
!6455 = !DILocation(line: 1685, column: 11, scope: !6424)
!6456 = !DILocation(line: 1691, column: 27, scope: !6457)
!6457 = distinct !DILexicalBlock(scope: !6453, file: !349, line: 1686, column: 9)
!6458 = !DILocation(line: 1691, column: 25, scope: !6457)
!6459 = !DILocation(line: 1691, column: 12, scope: !6457)
!6460 = !DILocation(line: 1691, column: 23, scope: !6457)
!6461 = !DILocation(line: 1692, column: 11, scope: !6457)
!6462 = !DILocation(line: 1694, column: 5, scope: !6424)
!6463 = !DILocation(line: 1696, column: 3, scope: !6188)
!6464 = !DILocation(line: 1697, column: 1, scope: !6188)
!6465 = distinct !DISubprogram(name: "create_hard_link", scope: !349, file: !349, line: 1819, type: !452, scopeLine: 1821, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!6466 = !DILocalVariable(name: "src_name", arg: 1, scope: !6465, file: !349, line: 1819, type: !180)
!6467 = !DILocation(line: 1819, column: 31, scope: !6465)
!6468 = !DILocalVariable(name: "dst_name", arg: 2, scope: !6465, file: !349, line: 1819, type: !180)
!6469 = !DILocation(line: 1819, column: 53, scope: !6465)
!6470 = !DILocalVariable(name: "replace", arg: 3, scope: !6465, file: !349, line: 1820, type: !142)
!6471 = !DILocation(line: 1820, column: 24, scope: !6465)
!6472 = !DILocalVariable(name: "verbose", arg: 4, scope: !6465, file: !349, line: 1820, type: !142)
!6473 = !DILocation(line: 1820, column: 38, scope: !6465)
!6474 = !DILocalVariable(name: "dereference", arg: 5, scope: !6465, file: !349, line: 1820, type: !142)
!6475 = !DILocation(line: 1820, column: 52, scope: !6465)
!6476 = !DILocalVariable(name: "err", scope: !6465, file: !349, line: 1822, type: !7)
!6477 = !DILocation(line: 1822, column: 7, scope: !6465)
!6478 = !DILocation(line: 1822, column: 37, scope: !6465)
!6479 = !DILocation(line: 1822, column: 57, scope: !6465)
!6480 = !DILocation(line: 1823, column: 27, scope: !6465)
!6481 = !DILocation(line: 1824, column: 27, scope: !6465)
!6482 = !DILocation(line: 1822, column: 13, scope: !6465)
!6483 = !DILocation(line: 1825, column: 11, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !6465, file: !349, line: 1825, column: 7)
!6485 = !DILocation(line: 1825, column: 9, scope: !6484)
!6486 = !DILocation(line: 1825, column: 7, scope: !6465)
!6487 = !DILocation(line: 1827, column: 17, scope: !6488)
!6488 = distinct !DILexicalBlock(scope: !6484, file: !349, line: 1826, column: 5)
!6489 = !DILocation(line: 1827, column: 22, scope: !6488)
!6490 = !DILocation(line: 1828, column: 14, scope: !6488)
!6491 = !DILocation(line: 1828, column: 39, scope: !6488)
!6492 = !DILocation(line: 1827, column: 7, scope: !6488)
!6493 = !DILocation(line: 1829, column: 7, scope: !6488)
!6494 = !DILocation(line: 1831, column: 7, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6465, file: !349, line: 1831, column: 7)
!6496 = !DILocation(line: 1831, column: 11, scope: !6495)
!6497 = !DILocation(line: 1831, column: 15, scope: !6495)
!6498 = !DILocation(line: 1831, column: 18, scope: !6495)
!6499 = !DILocation(line: 1831, column: 7, scope: !6465)
!6500 = !DILocation(line: 1832, column: 13, scope: !6495)
!6501 = !DILocation(line: 1832, column: 32, scope: !6495)
!6502 = !DILocation(line: 1832, column: 5, scope: !6495)
!6503 = !DILocation(line: 1833, column: 3, scope: !6465)
!6504 = !DILocation(line: 1834, column: 1, scope: !6465)
!6505 = distinct !DISubprogram(name: "abandon_move", scope: !349, file: !349, line: 1778, type: !454, scopeLine: 1781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!6506 = !DILocalVariable(name: "x", arg: 1, scope: !6505, file: !349, line: 1778, type: !356)
!6507 = !DILocation(line: 1778, column: 40, scope: !6505)
!6508 = !DILocalVariable(name: "dst_name", arg: 2, scope: !6505, file: !349, line: 1779, type: !180)
!6509 = !DILocation(line: 1779, column: 27, scope: !6505)
!6510 = !DILocalVariable(name: "dst_sb", arg: 3, scope: !6505, file: !349, line: 1780, type: !413)
!6511 = !DILocation(line: 1780, column: 34, scope: !6505)
!6512 = !DILocation(line: 1782, column: 3, scope: !6513)
!6513 = distinct !DILexicalBlock(scope: !6514, file: !349, line: 1782, column: 3)
!6514 = distinct !DILexicalBlock(scope: !6505, file: !349, line: 1782, column: 3)
!6515 = !DILocation(line: 1782, column: 3, scope: !6514)
!6516 = !DILocation(line: 1783, column: 11, scope: !6505)
!6517 = !DILocation(line: 1783, column: 14, scope: !6505)
!6518 = !DILocation(line: 1783, column: 26, scope: !6505)
!6519 = !DILocation(line: 1784, column: 11, scope: !6505)
!6520 = !DILocation(line: 1784, column: 16, scope: !6505)
!6521 = !DILocation(line: 1784, column: 19, scope: !6505)
!6522 = !DILocation(line: 1784, column: 31, scope: !6505)
!6523 = !DILocation(line: 1785, column: 16, scope: !6505)
!6524 = !DILocation(line: 1785, column: 20, scope: !6505)
!6525 = !DILocation(line: 1785, column: 23, scope: !6505)
!6526 = !DILocation(line: 1785, column: 35, scope: !6505)
!6527 = !DILocation(line: 1786, column: 20, scope: !6505)
!6528 = !DILocation(line: 1786, column: 23, scope: !6505)
!6529 = !DILocation(line: 1786, column: 26, scope: !6505)
!6530 = !DILocation(line: 1787, column: 20, scope: !6505)
!6531 = !DILocation(line: 1787, column: 47, scope: !6505)
!6532 = !DILocation(line: 1787, column: 57, scope: !6505)
!6533 = !DILocation(line: 1787, column: 65, scope: !6505)
!6534 = !DILocation(line: 1787, column: 25, scope: !6505)
!6535 = !DILocation(line: 1788, column: 15, scope: !6505)
!6536 = !DILocation(line: 1788, column: 34, scope: !6505)
!6537 = !DILocation(line: 1788, column: 37, scope: !6505)
!6538 = !DILocation(line: 1788, column: 47, scope: !6505)
!6539 = !DILocation(line: 1788, column: 20, scope: !6505)
!6540 = !DILocation(line: 1788, column: 18, scope: !6505)
!6541 = !DILocation(line: 0, scope: !6505)
!6542 = !DILocation(line: 1783, column: 3, scope: !6505)
!6543 = distinct !DISubprogram(name: "overwrite_ok", scope: !349, file: !349, line: 1710, type: !454, scopeLine: 1712, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!6544 = !DILocalVariable(name: "x", arg: 1, scope: !6543, file: !349, line: 1710, type: !356)
!6545 = !DILocation(line: 1710, column: 40, scope: !6543)
!6546 = !DILocalVariable(name: "dst_name", arg: 2, scope: !6543, file: !349, line: 1710, type: !180)
!6547 = !DILocation(line: 1710, column: 55, scope: !6543)
!6548 = !DILocalVariable(name: "dst_sb", arg: 3, scope: !6543, file: !349, line: 1711, type: !413)
!6549 = !DILocation(line: 1711, column: 34, scope: !6543)
!6550 = !DILocation(line: 1713, column: 31, scope: !6551)
!6551 = distinct !DILexicalBlock(scope: !6543, file: !349, line: 1713, column: 7)
!6552 = !DILocation(line: 1713, column: 41, scope: !6551)
!6553 = !DILocation(line: 1713, column: 49, scope: !6551)
!6554 = !DILocation(line: 1713, column: 9, scope: !6551)
!6555 = !DILocation(line: 1713, column: 7, scope: !6543)
!6556 = !DILocalVariable(name: "perms", scope: !6557, file: !349, line: 1715, type: !458)
!6557 = distinct !DILexicalBlock(scope: !6551, file: !349, line: 1714, column: 5)
!6558 = !DILocation(line: 1715, column: 12, scope: !6557)
!6559 = !DILocation(line: 1716, column: 16, scope: !6557)
!6560 = !DILocation(line: 1716, column: 24, scope: !6557)
!6561 = !DILocation(line: 1716, column: 33, scope: !6557)
!6562 = !DILocation(line: 1716, column: 7, scope: !6557)
!6563 = !DILocation(line: 1717, column: 7, scope: !6557)
!6564 = !DILocation(line: 1717, column: 17, scope: !6557)
!6565 = !DILocation(line: 1718, column: 16, scope: !6557)
!6566 = !DILocation(line: 1719, column: 17, scope: !6557)
!6567 = !DILocation(line: 1719, column: 20, scope: !6557)
!6568 = !DILocation(line: 1719, column: 30, scope: !6557)
!6569 = !DILocation(line: 1719, column: 33, scope: !6557)
!6570 = !DILocation(line: 1719, column: 36, scope: !6557)
!6571 = !DILocation(line: 1720, column: 17, scope: !6557)
!6572 = !DILocation(line: 1720, column: 20, scope: !6557)
!6573 = !DILocation(line: 1720, column: 23, scope: !6557)
!6574 = !DILocation(line: 1719, column: 16, scope: !6557)
!6575 = !DILocation(line: 1721, column: 18, scope: !6557)
!6576 = !DILocation(line: 1722, column: 18, scope: !6557)
!6577 = !DILocation(line: 1723, column: 16, scope: !6557)
!6578 = !DILocation(line: 1723, column: 30, scope: !6557)
!6579 = !DILocation(line: 1724, column: 37, scope: !6557)
!6580 = !DILocation(line: 1724, column: 45, scope: !6557)
!6581 = !DILocation(line: 1724, column: 53, scope: !6557)
!6582 = !DILocation(line: 1724, column: 16, scope: !6557)
!6583 = !DILocation(line: 1725, column: 17, scope: !6557)
!6584 = !DILocation(line: 1718, column: 7, scope: !6557)
!6585 = !DILocation(line: 1726, column: 5, scope: !6557)
!6586 = !DILocation(line: 1729, column: 16, scope: !6587)
!6587 = distinct !DILexicalBlock(scope: !6551, file: !349, line: 1728, column: 5)
!6588 = !DILocation(line: 1729, column: 24, scope: !6587)
!6589 = !DILocation(line: 1730, column: 16, scope: !6587)
!6590 = !DILocation(line: 1730, column: 30, scope: !6587)
!6591 = !DILocation(line: 1729, column: 7, scope: !6587)
!6592 = !DILocation(line: 1733, column: 10, scope: !6543)
!6593 = !DILocation(line: 1733, column: 3, scope: !6543)
!6594 = distinct !DISubprogram(name: "dot_or_dotdot", scope: !207, file: !207, line: 265, type: !220, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!6595 = !DILocalVariable(name: "file_name", arg: 1, scope: !6594, file: !207, line: 265, type: !180)
!6596 = !DILocation(line: 265, column: 28, scope: !6594)
!6597 = !DILocation(line: 267, column: 7, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6594, file: !207, line: 267, column: 7)
!6599 = !DILocation(line: 267, column: 20, scope: !6598)
!6600 = !DILocation(line: 267, column: 7, scope: !6594)
!6601 = !DILocalVariable(name: "sep", scope: !6602, file: !207, line: 269, type: !10)
!6602 = distinct !DILexicalBlock(scope: !6598, file: !207, line: 268, column: 5)
!6603 = !DILocation(line: 269, column: 12, scope: !6602)
!6604 = !DILocation(line: 269, column: 18, scope: !6602)
!6605 = !DILocation(line: 269, column: 29, scope: !6602)
!6606 = !DILocation(line: 269, column: 42, scope: !6602)
!6607 = !DILocation(line: 269, column: 50, scope: !6602)
!6608 = !DILocation(line: 270, column: 17, scope: !6602)
!6609 = !DILocation(line: 270, column: 21, scope: !6602)
!6610 = !DILocation(line: 270, column: 24, scope: !6602)
!6611 = !DILocation(line: 270, column: 7, scope: !6602)
!6612 = !DILocation(line: 273, column: 5, scope: !6598)
!6613 = !DILocation(line: 274, column: 1, scope: !6594)
!6614 = distinct !DISubprogram(name: "source_is_dst_backup", scope: !349, file: !349, line: 1850, type: !495, scopeLine: 1852, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!6615 = !DILocalVariable(name: "srcbase", arg: 1, scope: !6614, file: !349, line: 1850, type: !180)
!6616 = !DILocation(line: 1850, column: 35, scope: !6614)
!6617 = !DILocalVariable(name: "src_st", arg: 2, scope: !6614, file: !349, line: 1850, type: !413)
!6618 = !DILocation(line: 1850, column: 63, scope: !6614)
!6619 = !DILocalVariable(name: "dst_name", arg: 3, scope: !6614, file: !349, line: 1851, type: !180)
!6620 = !DILocation(line: 1851, column: 35, scope: !6614)
!6621 = !DILocalVariable(name: "srcbaselen", scope: !6614, file: !349, line: 1853, type: !55)
!6622 = !DILocation(line: 1853, column: 10, scope: !6614)
!6623 = !DILocation(line: 1853, column: 31, scope: !6614)
!6624 = !DILocation(line: 1853, column: 23, scope: !6614)
!6625 = !DILocalVariable(name: "dstbase", scope: !6614, file: !349, line: 1854, type: !180)
!6626 = !DILocation(line: 1854, column: 15, scope: !6614)
!6627 = !DILocation(line: 1854, column: 41, scope: !6614)
!6628 = !DILocation(line: 1854, column: 25, scope: !6614)
!6629 = !DILocalVariable(name: "dstbaselen", scope: !6614, file: !349, line: 1855, type: !55)
!6630 = !DILocation(line: 1855, column: 10, scope: !6614)
!6631 = !DILocation(line: 1855, column: 31, scope: !6614)
!6632 = !DILocation(line: 1855, column: 23, scope: !6614)
!6633 = !DILocalVariable(name: "suffixlen", scope: !6614, file: !349, line: 1856, type: !55)
!6634 = !DILocation(line: 1856, column: 10, scope: !6614)
!6635 = !DILocation(line: 1856, column: 30, scope: !6614)
!6636 = !DILocation(line: 1856, column: 22, scope: !6614)
!6637 = !DILocation(line: 1857, column: 10, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !6614, file: !349, line: 1857, column: 7)
!6639 = !DILocation(line: 1857, column: 24, scope: !6638)
!6640 = !DILocation(line: 1857, column: 37, scope: !6638)
!6641 = !DILocation(line: 1857, column: 35, scope: !6638)
!6642 = !DILocation(line: 1857, column: 21, scope: !6638)
!6643 = !DILocation(line: 1858, column: 10, scope: !6638)
!6644 = !DILocation(line: 1858, column: 21, scope: !6638)
!6645 = !DILocation(line: 1858, column: 30, scope: !6638)
!6646 = !DILocation(line: 1858, column: 39, scope: !6638)
!6647 = !DILocation(line: 1858, column: 13, scope: !6638)
!6648 = !DILocation(line: 1858, column: 51, scope: !6638)
!6649 = !DILocation(line: 1859, column: 10, scope: !6638)
!6650 = !DILocation(line: 1859, column: 13, scope: !6638)
!6651 = !DILocation(line: 1857, column: 7, scope: !6614)
!6652 = !DILocation(line: 1860, column: 5, scope: !6638)
!6653 = !DILocalVariable(name: "dstlen", scope: !6614, file: !349, line: 1861, type: !55)
!6654 = !DILocation(line: 1861, column: 10, scope: !6614)
!6655 = !DILocation(line: 1861, column: 27, scope: !6614)
!6656 = !DILocation(line: 1861, column: 19, scope: !6614)
!6657 = !DILocalVariable(name: "dst_back", scope: !6614, file: !349, line: 1862, type: !9)
!6658 = !DILocation(line: 1862, column: 9, scope: !6614)
!6659 = !DILocation(line: 1862, column: 29, scope: !6614)
!6660 = !DILocation(line: 1862, column: 38, scope: !6614)
!6661 = !DILocation(line: 1862, column: 36, scope: !6614)
!6662 = !DILocation(line: 1862, column: 48, scope: !6614)
!6663 = !DILocation(line: 1862, column: 20, scope: !6614)
!6664 = !DILocation(line: 1863, column: 20, scope: !6614)
!6665 = !DILocation(line: 1863, column: 30, scope: !6614)
!6666 = !DILocation(line: 1863, column: 40, scope: !6614)
!6667 = !DILocation(line: 1863, column: 11, scope: !6614)
!6668 = !DILocation(line: 1863, column: 49, scope: !6614)
!6669 = !DILocation(line: 1863, column: 3, scope: !6614)
!6670 = !DILocalVariable(name: "dst_back_sb", scope: !6614, file: !349, line: 1864, type: !415)
!6671 = !DILocation(line: 1864, column: 15, scope: !6614)
!6672 = !DILocalVariable(name: "dst_back_status", scope: !6614, file: !349, line: 1865, type: !7)
!6673 = !DILocation(line: 1865, column: 7, scope: !6614)
!6674 = !DILocation(line: 1865, column: 31, scope: !6614)
!6675 = !DILocation(line: 1865, column: 25, scope: !6614)
!6676 = !DILocation(line: 1866, column: 9, scope: !6614)
!6677 = !DILocation(line: 1866, column: 3, scope: !6614)
!6678 = !DILocation(line: 1867, column: 10, scope: !6614)
!6679 = !DILocation(line: 1867, column: 26, scope: !6614)
!6680 = !DILocation(line: 1867, column: 31, scope: !6614)
!6681 = !DILocation(line: 1867, column: 34, scope: !6614)
!6682 = !DILocation(line: 0, scope: !6614)
!6683 = !DILocation(line: 1867, column: 3, scope: !6614)
!6684 = !DILocation(line: 1868, column: 1, scope: !6614)
!6685 = distinct !DISubprogram(name: "emit_verbose", scope: !349, file: !349, line: 1795, type: !497, scopeLine: 1796, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!6686 = !DILocalVariable(name: "src", arg: 1, scope: !6685, file: !349, line: 1795, type: !180)
!6687 = !DILocation(line: 1795, column: 27, scope: !6685)
!6688 = !DILocalVariable(name: "dst", arg: 2, scope: !6685, file: !349, line: 1795, type: !180)
!6689 = !DILocation(line: 1795, column: 44, scope: !6685)
!6690 = !DILocalVariable(name: "backup_dst_name", arg: 3, scope: !6685, file: !349, line: 1795, type: !180)
!6691 = !DILocation(line: 1795, column: 61, scope: !6685)
!6692 = !DILocation(line: 1797, column: 23, scope: !6685)
!6693 = !DILocation(line: 1797, column: 43, scope: !6685)
!6694 = !DILocation(line: 1797, column: 3, scope: !6685)
!6695 = !DILocation(line: 1798, column: 7, scope: !6696)
!6696 = distinct !DILexicalBlock(scope: !6685, file: !349, line: 1798, column: 7)
!6697 = !DILocation(line: 1798, column: 7, scope: !6685)
!6698 = !DILocation(line: 1799, column: 13, scope: !6696)
!6699 = !DILocation(line: 1799, column: 33, scope: !6696)
!6700 = !DILocation(line: 1799, column: 5, scope: !6696)
!6701 = !DILocation(line: 1800, column: 3, scope: !6685)
!6702 = !DILocation(line: 1801, column: 1, scope: !6685)
!6703 = distinct !DISubprogram(name: "is_ancestor", scope: !349, file: !349, line: 620, type: !499, scopeLine: 621, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!6704 = !DILocalVariable(name: "sb", arg: 1, scope: !6703, file: !349, line: 620, type: !413)
!6705 = !DILocation(line: 620, column: 33, scope: !6703)
!6706 = !DILocalVariable(name: "ancestors", arg: 2, scope: !6703, file: !349, line: 620, type: !501)
!6707 = !DILocation(line: 620, column: 60, scope: !6703)
!6708 = !DILocation(line: 622, column: 3, scope: !6703)
!6709 = !DILocation(line: 622, column: 10, scope: !6703)
!6710 = !DILocation(line: 622, column: 20, scope: !6703)
!6711 = !DILocation(line: 624, column: 11, scope: !6712)
!6712 = distinct !DILexicalBlock(scope: !6713, file: !349, line: 624, column: 11)
!6713 = distinct !DILexicalBlock(scope: !6703, file: !349, line: 623, column: 5)
!6714 = !DILocation(line: 624, column: 22, scope: !6712)
!6715 = !DILocation(line: 624, column: 29, scope: !6712)
!6716 = !DILocation(line: 624, column: 33, scope: !6712)
!6717 = !DILocation(line: 624, column: 26, scope: !6712)
!6718 = !DILocation(line: 624, column: 40, scope: !6712)
!6719 = !DILocation(line: 624, column: 43, scope: !6712)
!6720 = !DILocation(line: 624, column: 54, scope: !6712)
!6721 = !DILocation(line: 624, column: 61, scope: !6712)
!6722 = !DILocation(line: 624, column: 65, scope: !6712)
!6723 = !DILocation(line: 624, column: 58, scope: !6712)
!6724 = !DILocation(line: 624, column: 11, scope: !6713)
!6725 = !DILocation(line: 625, column: 9, scope: !6712)
!6726 = !DILocation(line: 626, column: 19, scope: !6713)
!6727 = !DILocation(line: 626, column: 30, scope: !6713)
!6728 = !DILocation(line: 626, column: 17, scope: !6713)
!6729 = distinct !{!6729, !6708, !6730}
!6730 = !DILocation(line: 627, column: 5, scope: !6703)
!6731 = !DILocation(line: 628, column: 3, scope: !6703)
!6732 = !DILocation(line: 629, column: 1, scope: !6703)
!6733 = distinct !DISubprogram(name: "copy_dir", scope: !349, file: !349, line: 745, type: !503, scopeLine: 750, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!6734 = !DILocalVariable(name: "src_name_in", arg: 1, scope: !6733, file: !349, line: 745, type: !180)
!6735 = !DILocation(line: 745, column: 23, scope: !6733)
!6736 = !DILocalVariable(name: "dst_name_in", arg: 2, scope: !6733, file: !349, line: 745, type: !180)
!6737 = !DILocation(line: 745, column: 48, scope: !6733)
!6738 = !DILocalVariable(name: "new_dst", arg: 3, scope: !6733, file: !349, line: 745, type: !142)
!6739 = !DILocation(line: 745, column: 66, scope: !6733)
!6740 = !DILocalVariable(name: "src_sb", arg: 4, scope: !6733, file: !349, line: 746, type: !413)
!6741 = !DILocation(line: 746, column: 30, scope: !6733)
!6742 = !DILocalVariable(name: "ancestors", arg: 5, scope: !6733, file: !349, line: 746, type: !436)
!6743 = !DILocation(line: 746, column: 55, scope: !6733)
!6744 = !DILocalVariable(name: "x", arg: 6, scope: !6733, file: !349, line: 747, type: !356)
!6745 = !DILocation(line: 747, column: 36, scope: !6733)
!6746 = !DILocalVariable(name: "first_dir_created_per_command_line_arg", arg: 7, scope: !6733, file: !349, line: 748, type: !406)
!6747 = !DILocation(line: 748, column: 17, scope: !6733)
!6748 = !DILocalVariable(name: "copy_into_self", arg: 8, scope: !6733, file: !349, line: 749, type: !406)
!6749 = !DILocation(line: 749, column: 17, scope: !6733)
!6750 = !DILocalVariable(name: "name_space", scope: !6733, file: !349, line: 751, type: !9)
!6751 = !DILocation(line: 751, column: 9, scope: !6733)
!6752 = !DILocalVariable(name: "namep", scope: !6733, file: !349, line: 752, type: !9)
!6753 = !DILocation(line: 752, column: 9, scope: !6733)
!6754 = !DILocalVariable(name: "non_command_line_options", scope: !6733, file: !349, line: 753, type: !358)
!6755 = !DILocation(line: 753, column: 21, scope: !6733)
!6756 = !DILocation(line: 753, column: 49, scope: !6733)
!6757 = !DILocation(line: 753, column: 48, scope: !6733)
!6758 = !{i64 0, i64 4, !3295, i64 4, i64 4, !3295, i64 8, i64 4, !3295, i64 12, i64 4, !3295, i64 16, i64 4, !2635, i64 20, i64 1, !2742, i64 21, i64 1, !2742, i64 22, i64 1, !2742, i64 23, i64 1, !2742, i64 24, i64 1, !2742, i64 25, i64 1, !2742, i64 26, i64 1, !2742, i64 27, i64 1, !2742, i64 28, i64 1, !2742, i64 29, i64 1, !2742, i64 30, i64 1, !2742, i64 31, i64 1, !2742, i64 32, i64 1, !2742, i64 33, i64 1, !2742, i64 34, i64 1, !2742, i64 35, i64 1, !2742, i64 36, i64 1, !2742, i64 37, i64 1, !2742, i64 38, i64 1, !2742, i64 39, i64 1, !2742, i64 40, i64 1, !2742, i64 41, i64 1, !2742, i64 42, i64 1, !2742, i64 43, i64 1, !2742, i64 44, i64 1, !2742, i64 45, i64 1, !2742, i64 46, i64 1, !2742, i64 47, i64 1, !2742, i64 48, i64 1, !2742, i64 49, i64 1, !2742, i64 52, i64 4, !2635, i64 56, i64 4, !3295, i64 64, i64 8, !2648, i64 72, i64 8, !2648}
!6759 = !DILocalVariable(name: "ok", scope: !6733, file: !349, line: 754, type: !142)
!6760 = !DILocation(line: 754, column: 8, scope: !6733)
!6761 = !DILocation(line: 756, column: 25, scope: !6733)
!6762 = !DILocation(line: 756, column: 16, scope: !6733)
!6763 = !DILocation(line: 756, column: 14, scope: !6733)
!6764 = !DILocation(line: 757, column: 7, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6733, file: !349, line: 757, column: 7)
!6766 = !DILocation(line: 757, column: 18, scope: !6765)
!6767 = !DILocation(line: 757, column: 7, scope: !6733)
!6768 = !DILocation(line: 761, column: 17, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6765, file: !349, line: 758, column: 5)
!6770 = !DILocation(line: 761, column: 24, scope: !6769)
!6771 = !DILocation(line: 761, column: 47, scope: !6769)
!6772 = !DILocation(line: 761, column: 7, scope: !6769)
!6773 = !DILocation(line: 762, column: 7, scope: !6769)
!6774 = !DILocation(line: 767, column: 7, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6733, file: !349, line: 767, column: 7)
!6776 = !DILocation(line: 767, column: 10, scope: !6775)
!6777 = !DILocation(line: 767, column: 22, scope: !6775)
!6778 = !DILocation(line: 767, column: 7, scope: !6733)
!6779 = !DILocation(line: 768, column: 30, scope: !6775)
!6780 = !DILocation(line: 768, column: 42, scope: !6775)
!6781 = !DILocation(line: 768, column: 5, scope: !6775)
!6782 = !DILocalVariable(name: "new_first_dir_created", scope: !6733, file: !349, line: 770, type: !142)
!6783 = !DILocation(line: 770, column: 8, scope: !6733)
!6784 = !DILocation(line: 771, column: 11, scope: !6733)
!6785 = !DILocation(line: 771, column: 9, scope: !6733)
!6786 = !DILocation(line: 772, column: 3, scope: !6733)
!6787 = !DILocation(line: 772, column: 11, scope: !6733)
!6788 = !DILocation(line: 772, column: 10, scope: !6733)
!6789 = !DILocation(line: 772, column: 17, scope: !6733)
!6790 = !DILocalVariable(name: "local_copy_into_self", scope: !6791, file: !349, line: 774, type: !142)
!6791 = distinct !DILexicalBlock(scope: !6733, file: !349, line: 773, column: 5)
!6792 = !DILocation(line: 774, column: 12, scope: !6791)
!6793 = !DILocalVariable(name: "src_name", scope: !6791, file: !349, line: 775, type: !9)
!6794 = !DILocation(line: 775, column: 13, scope: !6791)
!6795 = !DILocation(line: 775, column: 42, scope: !6791)
!6796 = !DILocation(line: 775, column: 55, scope: !6791)
!6797 = !DILocation(line: 775, column: 24, scope: !6791)
!6798 = !DILocalVariable(name: "dst_name", scope: !6791, file: !349, line: 776, type: !9)
!6799 = !DILocation(line: 776, column: 13, scope: !6791)
!6800 = !DILocation(line: 776, column: 42, scope: !6791)
!6801 = !DILocation(line: 776, column: 55, scope: !6791)
!6802 = !DILocation(line: 776, column: 24, scope: !6791)
!6803 = !DILocalVariable(name: "first_dir_created", scope: !6791, file: !349, line: 777, type: !142)
!6804 = !DILocation(line: 777, column: 12, scope: !6791)
!6805 = !DILocation(line: 777, column: 33, scope: !6791)
!6806 = !DILocation(line: 777, column: 32, scope: !6791)
!6807 = !DILocation(line: 779, column: 28, scope: !6791)
!6808 = !DILocation(line: 779, column: 38, scope: !6791)
!6809 = !DILocation(line: 779, column: 48, scope: !6791)
!6810 = !DILocation(line: 779, column: 57, scope: !6791)
!6811 = !DILocation(line: 780, column: 28, scope: !6791)
!6812 = !DILocation(line: 779, column: 13, scope: !6791)
!6813 = !DILocation(line: 779, column: 10, scope: !6791)
!6814 = !DILocation(line: 783, column: 26, scope: !6791)
!6815 = !DILocation(line: 783, column: 8, scope: !6791)
!6816 = !DILocation(line: 783, column: 23, scope: !6791)
!6817 = !DILocation(line: 785, column: 13, scope: !6791)
!6818 = !DILocation(line: 785, column: 7, scope: !6791)
!6819 = !DILocation(line: 786, column: 13, scope: !6791)
!6820 = !DILocation(line: 786, column: 7, scope: !6791)
!6821 = !DILocation(line: 791, column: 11, scope: !6822)
!6822 = distinct !DILexicalBlock(scope: !6791, file: !349, line: 791, column: 11)
!6823 = !DILocation(line: 791, column: 11, scope: !6791)
!6824 = !DILocation(line: 792, column: 9, scope: !6822)
!6825 = !DILocation(line: 794, column: 32, scope: !6791)
!6826 = !DILocation(line: 794, column: 29, scope: !6791)
!6827 = !DILocation(line: 795, column: 24, scope: !6791)
!6828 = !DILocation(line: 795, column: 16, scope: !6791)
!6829 = !DILocation(line: 795, column: 31, scope: !6791)
!6830 = !DILocation(line: 795, column: 13, scope: !6791)
!6831 = distinct !{!6831, !6786, !6832}
!6832 = !DILocation(line: 796, column: 5, scope: !6733)
!6833 = !DILocation(line: 797, column: 9, scope: !6733)
!6834 = !DILocation(line: 797, column: 3, scope: !6733)
!6835 = !DILocation(line: 798, column: 45, scope: !6733)
!6836 = !DILocation(line: 798, column: 4, scope: !6733)
!6837 = !DILocation(line: 798, column: 43, scope: !6733)
!6838 = !DILocation(line: 800, column: 10, scope: !6733)
!6839 = !DILocation(line: 800, column: 3, scope: !6733)
!6840 = !DILocation(line: 801, column: 1, scope: !6733)
!6841 = distinct !DISubprogram(name: "copy_reg", scope: !349, file: !349, line: 1052, type: !505, scopeLine: 1056, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!6842 = !DILocalVariable(name: "src_name", arg: 1, scope: !6841, file: !349, line: 1052, type: !180)
!6843 = !DILocation(line: 1052, column: 23, scope: !6841)
!6844 = !DILocalVariable(name: "dst_name", arg: 2, scope: !6841, file: !349, line: 1052, type: !180)
!6845 = !DILocation(line: 1052, column: 45, scope: !6841)
!6846 = !DILocalVariable(name: "x", arg: 3, scope: !6841, file: !349, line: 1053, type: !356)
!6847 = !DILocation(line: 1053, column: 36, scope: !6841)
!6848 = !DILocalVariable(name: "dst_mode", arg: 4, scope: !6841, file: !349, line: 1054, type: !139)
!6849 = !DILocation(line: 1054, column: 18, scope: !6841)
!6850 = !DILocalVariable(name: "omitted_permissions", arg: 5, scope: !6841, file: !349, line: 1054, type: !139)
!6851 = !DILocation(line: 1054, column: 35, scope: !6841)
!6852 = !DILocalVariable(name: "new_dst", arg: 6, scope: !6841, file: !349, line: 1054, type: !406)
!6853 = !DILocation(line: 1054, column: 62, scope: !6841)
!6854 = !DILocalVariable(name: "src_sb", arg: 7, scope: !6841, file: !349, line: 1055, type: !413)
!6855 = !DILocation(line: 1055, column: 30, scope: !6841)
!6856 = !DILocalVariable(name: "buf", scope: !6841, file: !349, line: 1057, type: !9)
!6857 = !DILocation(line: 1057, column: 9, scope: !6841)
!6858 = !DILocalVariable(name: "buf_alloc", scope: !6841, file: !349, line: 1058, type: !9)
!6859 = !DILocation(line: 1058, column: 9, scope: !6841)
!6860 = !DILocalVariable(name: "name_alloc", scope: !6841, file: !349, line: 1059, type: !9)
!6861 = !DILocation(line: 1059, column: 9, scope: !6841)
!6862 = !DILocalVariable(name: "dest_desc", scope: !6841, file: !349, line: 1060, type: !7)
!6863 = !DILocation(line: 1060, column: 7, scope: !6841)
!6864 = !DILocalVariable(name: "dest_errno", scope: !6841, file: !349, line: 1061, type: !7)
!6865 = !DILocation(line: 1061, column: 7, scope: !6841)
!6866 = !DILocalVariable(name: "source_desc", scope: !6841, file: !349, line: 1062, type: !7)
!6867 = !DILocation(line: 1062, column: 7, scope: !6841)
!6868 = !DILocalVariable(name: "src_mode", scope: !6841, file: !349, line: 1063, type: !139)
!6869 = !DILocation(line: 1063, column: 10, scope: !6841)
!6870 = !DILocation(line: 1063, column: 21, scope: !6841)
!6871 = !DILocation(line: 1063, column: 29, scope: !6841)
!6872 = !DILocalVariable(name: "sb", scope: !6841, file: !349, line: 1064, type: !415)
!6873 = !DILocation(line: 1064, column: 15, scope: !6841)
!6874 = !DILocalVariable(name: "src_open_sb", scope: !6841, file: !349, line: 1065, type: !415)
!6875 = !DILocation(line: 1065, column: 15, scope: !6841)
!6876 = !DILocalVariable(name: "return_val", scope: !6841, file: !349, line: 1066, type: !142)
!6877 = !DILocation(line: 1066, column: 8, scope: !6841)
!6878 = !DILocalVariable(name: "data_copy_required", scope: !6841, file: !349, line: 1067, type: !142)
!6879 = !DILocation(line: 1067, column: 8, scope: !6841)
!6880 = !DILocation(line: 1067, column: 29, scope: !6841)
!6881 = !DILocation(line: 1067, column: 32, scope: !6841)
!6882 = !DILocation(line: 1069, column: 23, scope: !6841)
!6883 = !DILocation(line: 1071, column: 27, scope: !6841)
!6884 = !DILocation(line: 1071, column: 30, scope: !6841)
!6885 = !DILocation(line: 1071, column: 42, scope: !6841)
!6886 = !DILocation(line: 1071, column: 24, scope: !6841)
!6887 = !DILocation(line: 1069, column: 17, scope: !6841)
!6888 = !DILocation(line: 1069, column: 15, scope: !6841)
!6889 = !DILocation(line: 1072, column: 7, scope: !6890)
!6890 = distinct !DILexicalBlock(scope: !6841, file: !349, line: 1072, column: 7)
!6891 = !DILocation(line: 1072, column: 19, scope: !6890)
!6892 = !DILocation(line: 1072, column: 7, scope: !6841)
!6893 = !DILocation(line: 1074, column: 17, scope: !6894)
!6894 = distinct !DILexicalBlock(scope: !6890, file: !349, line: 1073, column: 5)
!6895 = !DILocation(line: 1074, column: 24, scope: !6894)
!6896 = !DILocation(line: 1074, column: 57, scope: !6894)
!6897 = !DILocation(line: 1074, column: 7, scope: !6894)
!6898 = !DILocation(line: 1075, column: 7, scope: !6894)
!6899 = !DILocation(line: 1078, column: 14, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6841, file: !349, line: 1078, column: 7)
!6901 = !DILocation(line: 1078, column: 7, scope: !6900)
!6902 = !DILocation(line: 1078, column: 41, scope: !6900)
!6903 = !DILocation(line: 1078, column: 7, scope: !6841)
!6904 = !DILocation(line: 1080, column: 17, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !6900, file: !349, line: 1079, column: 5)
!6906 = !DILocation(line: 1080, column: 24, scope: !6905)
!6907 = !DILocation(line: 1080, column: 46, scope: !6905)
!6908 = !DILocation(line: 1080, column: 7, scope: !6905)
!6909 = !DILocation(line: 1081, column: 18, scope: !6905)
!6910 = !DILocation(line: 1082, column: 7, scope: !6905)
!6911 = !DILocation(line: 1087, column: 9, scope: !6912)
!6912 = distinct !DILexicalBlock(scope: !6841, file: !349, line: 1087, column: 7)
!6913 = !DILocation(line: 1087, column: 7, scope: !6841)
!6914 = !DILocation(line: 1090, column: 14, scope: !6915)
!6915 = distinct !DILexicalBlock(scope: !6912, file: !349, line: 1088, column: 5)
!6916 = !DILocation(line: 1091, column: 14, scope: !6915)
!6917 = !DILocation(line: 1089, column: 7, scope: !6915)
!6918 = !DILocation(line: 1092, column: 18, scope: !6915)
!6919 = !DILocation(line: 1093, column: 7, scope: !6915)
!6920 = !DILocation(line: 1098, column: 10, scope: !6921)
!6921 = distinct !DILexicalBlock(scope: !6841, file: !349, line: 1098, column: 7)
!6922 = !DILocation(line: 1098, column: 9, scope: !6921)
!6923 = !DILocation(line: 1098, column: 7, scope: !6841)
!6924 = !DILocalVariable(name: "open_flags", scope: !6925, file: !349, line: 1100, type: !7)
!6925 = distinct !DILexicalBlock(scope: !6921, file: !349, line: 1099, column: 5)
!6926 = !DILocation(line: 1100, column: 11, scope: !6925)
!6927 = !DILocation(line: 1101, column: 32, scope: !6925)
!6928 = !DILocation(line: 1101, column: 35, scope: !6925)
!6929 = !DILocation(line: 1101, column: 29, scope: !6925)
!6930 = !DILocation(line: 1102, column: 25, scope: !6925)
!6931 = !DILocation(line: 1102, column: 35, scope: !6925)
!6932 = !DILocation(line: 1102, column: 19, scope: !6925)
!6933 = !DILocation(line: 1102, column: 17, scope: !6925)
!6934 = !DILocation(line: 1103, column: 20, scope: !6925)
!6935 = !DILocation(line: 1103, column: 18, scope: !6925)
!6936 = !DILocation(line: 1112, column: 12, scope: !6937)
!6937 = distinct !DILexicalBlock(scope: !6925, file: !349, line: 1112, column: 11)
!6938 = !DILocation(line: 1112, column: 15, scope: !6937)
!6939 = !DILocation(line: 1112, column: 36, scope: !6937)
!6940 = !DILocation(line: 1112, column: 39, scope: !6937)
!6941 = !DILocation(line: 1112, column: 42, scope: !6937)
!6942 = !DILocation(line: 1113, column: 11, scope: !6937)
!6943 = !DILocation(line: 1113, column: 19, scope: !6937)
!6944 = !DILocation(line: 1113, column: 16, scope: !6937)
!6945 = !DILocation(line: 1112, column: 11, scope: !6925)
!6946 = !DILocation(line: 1115, column: 40, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6948, file: !349, line: 1115, column: 15)
!6948 = distinct !DILexicalBlock(scope: !6937, file: !349, line: 1114, column: 9)
!6949 = !DILocation(line: 1115, column: 50, scope: !6947)
!6950 = !DILocation(line: 1115, column: 53, scope: !6947)
!6951 = !DILocation(line: 1116, column: 47, scope: !6947)
!6952 = !DILocation(line: 1115, column: 17, scope: !6947)
!6953 = !DILocation(line: 1115, column: 15, scope: !6948)
!6954 = !DILocation(line: 1118, column: 19, scope: !6955)
!6955 = distinct !DILexicalBlock(scope: !6956, file: !349, line: 1118, column: 19)
!6956 = distinct !DILexicalBlock(scope: !6947, file: !349, line: 1117, column: 13)
!6957 = !DILocation(line: 1118, column: 22, scope: !6955)
!6958 = !DILocation(line: 1118, column: 19, scope: !6956)
!6959 = !DILocation(line: 1120, column: 30, scope: !6960)
!6960 = distinct !DILexicalBlock(scope: !6955, file: !349, line: 1119, column: 17)
!6961 = !DILocation(line: 1121, column: 19, scope: !6960)
!6962 = !DILocation(line: 1123, column: 13, scope: !6956)
!6963 = !DILocation(line: 1124, column: 9, scope: !6948)
!6964 = !DILocation(line: 1126, column: 11, scope: !6965)
!6965 = distinct !DILexicalBlock(scope: !6925, file: !349, line: 1126, column: 11)
!6966 = !DILocation(line: 1126, column: 21, scope: !6965)
!6967 = !DILocation(line: 1126, column: 25, scope: !6965)
!6968 = !DILocation(line: 1126, column: 28, scope: !6965)
!6969 = !DILocation(line: 1126, column: 31, scope: !6965)
!6970 = !DILocation(line: 1126, column: 11, scope: !6925)
!6971 = !DILocation(line: 1128, column: 23, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6973, file: !349, line: 1128, column: 15)
!6973 = distinct !DILexicalBlock(scope: !6965, file: !349, line: 1127, column: 9)
!6974 = !DILocation(line: 1128, column: 15, scope: !6972)
!6975 = !DILocation(line: 1128, column: 33, scope: !6972)
!6976 = !DILocation(line: 1128, column: 15, scope: !6973)
!6977 = !DILocation(line: 1130, column: 25, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6972, file: !349, line: 1129, column: 13)
!6979 = !DILocation(line: 1130, column: 32, scope: !6978)
!6980 = !DILocation(line: 1130, column: 55, scope: !6978)
!6981 = !DILocation(line: 1130, column: 15, scope: !6978)
!6982 = !DILocation(line: 1131, column: 26, scope: !6978)
!6983 = !DILocation(line: 1132, column: 15, scope: !6978)
!6984 = !DILocation(line: 1134, column: 15, scope: !6985)
!6985 = distinct !DILexicalBlock(scope: !6973, file: !349, line: 1134, column: 15)
!6986 = !DILocation(line: 1134, column: 18, scope: !6985)
!6987 = !DILocation(line: 1134, column: 15, scope: !6973)
!6988 = !DILocation(line: 1135, column: 21, scope: !6985)
!6989 = !DILocation(line: 1135, column: 40, scope: !6985)
!6990 = !DILocation(line: 1135, column: 13, scope: !6985)
!6991 = !DILocation(line: 1138, column: 12, scope: !6973)
!6992 = !DILocation(line: 1138, column: 20, scope: !6973)
!6993 = !DILocation(line: 1142, column: 15, scope: !6994)
!6994 = distinct !DILexicalBlock(scope: !6973, file: !349, line: 1142, column: 15)
!6995 = !DILocation(line: 1142, column: 18, scope: !6994)
!6996 = !DILocation(line: 1142, column: 15, scope: !6973)
!6997 = !DILocation(line: 1144, column: 47, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6999, file: !349, line: 1144, column: 19)
!6999 = distinct !DILexicalBlock(scope: !6994, file: !349, line: 1143, column: 13)
!7000 = !DILocation(line: 1144, column: 57, scope: !6998)
!7001 = !DILocation(line: 1144, column: 67, scope: !6998)
!7002 = !DILocation(line: 1145, column: 48, scope: !6998)
!7003 = !DILocation(line: 1145, column: 47, scope: !6998)
!7004 = !DILocation(line: 1145, column: 57, scope: !6998)
!7005 = !DILocation(line: 1144, column: 21, scope: !6998)
!7006 = !DILocation(line: 1144, column: 19, scope: !6999)
!7007 = !DILocation(line: 1147, column: 30, scope: !7008)
!7008 = distinct !DILexicalBlock(scope: !6998, file: !349, line: 1146, column: 17)
!7009 = !DILocation(line: 1148, column: 19, scope: !7008)
!7010 = !DILocation(line: 1150, column: 13, scope: !6999)
!7011 = !DILocation(line: 1151, column: 9, scope: !6973)
!7012 = !DILocation(line: 1152, column: 5, scope: !6925)
!7013 = !DILocation(line: 1154, column: 8, scope: !7014)
!7014 = distinct !DILexicalBlock(scope: !6841, file: !349, line: 1154, column: 7)
!7015 = !DILocation(line: 1154, column: 7, scope: !7014)
!7016 = !DILocation(line: 1154, column: 7, scope: !6841)
!7017 = !DILocation(line: 1155, column: 5, scope: !7014)
!7018 = !DILabel(scope: !7019, name: "open_with_O_CREAT", file: !349, line: 1156)
!7019 = distinct !DILexicalBlock(scope: !7014, file: !349, line: 1155, column: 5)
!7020 = !DILocation(line: 1156, column: 5, scope: !7019)
!7021 = !DILocalVariable(name: "open_flags", scope: !7019, file: !349, line: 1158, type: !7)
!7022 = !DILocation(line: 1158, column: 11, scope: !7019)
!7023 = !DILocation(line: 1159, column: 25, scope: !7019)
!7024 = !DILocation(line: 1159, column: 35, scope: !7019)
!7025 = !DILocation(line: 1159, column: 46, scope: !7019)
!7026 = !DILocation(line: 1160, column: 25, scope: !7019)
!7027 = !DILocation(line: 1160, column: 37, scope: !7019)
!7028 = !DILocation(line: 1160, column: 36, scope: !7019)
!7029 = !DILocation(line: 1160, column: 34, scope: !7019)
!7030 = !DILocation(line: 1159, column: 19, scope: !7019)
!7031 = !DILocation(line: 1159, column: 17, scope: !7019)
!7032 = !DILocation(line: 1161, column: 20, scope: !7019)
!7033 = !DILocation(line: 1161, column: 18, scope: !7019)
!7034 = !DILocation(line: 1173, column: 11, scope: !7035)
!7035 = distinct !DILexicalBlock(scope: !7019, file: !349, line: 1173, column: 11)
!7036 = !DILocation(line: 1173, column: 21, scope: !7035)
!7037 = !DILocation(line: 1173, column: 25, scope: !7035)
!7038 = !DILocation(line: 1173, column: 28, scope: !7035)
!7039 = !DILocation(line: 1173, column: 39, scope: !7035)
!7040 = !DILocation(line: 1173, column: 49, scope: !7035)
!7041 = !DILocation(line: 1173, column: 54, scope: !7035)
!7042 = !DILocation(line: 1173, column: 57, scope: !7035)
!7043 = !DILocation(line: 1173, column: 11, scope: !7019)
!7044 = !DILocalVariable(name: "dangling_link_sb", scope: !7045, file: !349, line: 1175, type: !415)
!7045 = distinct !DILexicalBlock(scope: !7035, file: !349, line: 1174, column: 9)
!7046 = !DILocation(line: 1175, column: 23, scope: !7045)
!7047 = !DILocation(line: 1176, column: 22, scope: !7048)
!7048 = distinct !DILexicalBlock(scope: !7045, file: !349, line: 1176, column: 15)
!7049 = !DILocation(line: 1176, column: 15, scope: !7048)
!7050 = !DILocation(line: 1176, column: 51, scope: !7048)
!7051 = !DILocation(line: 1177, column: 15, scope: !7048)
!7052 = !DILocation(line: 1177, column: 18, scope: !7048)
!7053 = !DILocation(line: 1176, column: 15, scope: !7045)
!7054 = !DILocation(line: 1179, column: 19, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !7056, file: !349, line: 1179, column: 19)
!7056 = distinct !DILexicalBlock(scope: !7048, file: !349, line: 1178, column: 13)
!7057 = !DILocation(line: 1179, column: 22, scope: !7055)
!7058 = !DILocation(line: 1179, column: 19, scope: !7056)
!7059 = !DILocation(line: 1181, column: 37, scope: !7060)
!7060 = distinct !DILexicalBlock(scope: !7055, file: !349, line: 1180, column: 17)
!7061 = !DILocation(line: 1181, column: 47, scope: !7060)
!7062 = !DILocation(line: 1182, column: 37, scope: !7060)
!7063 = !DILocation(line: 1182, column: 49, scope: !7060)
!7064 = !DILocation(line: 1182, column: 48, scope: !7060)
!7065 = !DILocation(line: 1182, column: 46, scope: !7060)
!7066 = !DILocation(line: 1181, column: 31, scope: !7060)
!7067 = !DILocation(line: 1181, column: 29, scope: !7060)
!7068 = !DILocation(line: 1183, column: 32, scope: !7060)
!7069 = !DILocation(line: 1183, column: 30, scope: !7060)
!7070 = !DILocation(line: 1184, column: 17, scope: !7060)
!7071 = !DILocation(line: 1187, column: 32, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !7055, file: !349, line: 1186, column: 17)
!7073 = !DILocation(line: 1188, column: 26, scope: !7072)
!7074 = !DILocation(line: 1187, column: 19, scope: !7072)
!7075 = !DILocation(line: 1189, column: 30, scope: !7072)
!7076 = !DILocation(line: 1190, column: 19, scope: !7072)
!7077 = !DILocation(line: 1192, column: 13, scope: !7056)
!7078 = !DILocation(line: 1193, column: 9, scope: !7045)
!7079 = !DILocation(line: 1197, column: 11, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7019, file: !349, line: 1197, column: 11)
!7081 = !DILocation(line: 1197, column: 21, scope: !7080)
!7082 = !DILocation(line: 1197, column: 25, scope: !7080)
!7083 = !DILocation(line: 1197, column: 28, scope: !7080)
!7084 = !DILocation(line: 1197, column: 39, scope: !7080)
!7085 = !DILocation(line: 1198, column: 11, scope: !7080)
!7086 = !DILocation(line: 1198, column: 15, scope: !7080)
!7087 = !DILocation(line: 1198, column: 14, scope: !7080)
!7088 = !DILocation(line: 1198, column: 24, scope: !7080)
!7089 = !DILocation(line: 1198, column: 27, scope: !7080)
!7090 = !DILocation(line: 1198, column: 44, scope: !7080)
!7091 = !DILocation(line: 1198, column: 36, scope: !7080)
!7092 = !DILocation(line: 1198, column: 54, scope: !7080)
!7093 = !DILocation(line: 1198, column: 59, scope: !7080)
!7094 = !DILocation(line: 1197, column: 11, scope: !7019)
!7095 = !DILocation(line: 1199, column: 20, scope: !7080)
!7096 = !DILocation(line: 1199, column: 9, scope: !7080)
!7097 = !DILocation(line: 1200, column: 5, scope: !7019)
!7098 = !DILocation(line: 1203, column: 27, scope: !7099)
!7099 = distinct !DILexicalBlock(scope: !7014, file: !349, line: 1202, column: 5)
!7100 = !DILocation(line: 1206, column: 7, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !6841, file: !349, line: 1206, column: 7)
!7102 = !DILocation(line: 1206, column: 17, scope: !7101)
!7103 = !DILocation(line: 1206, column: 7, scope: !6841)
!7104 = !DILocation(line: 1218, column: 11, scope: !7105)
!7105 = distinct !DILexicalBlock(scope: !7106, file: !349, line: 1218, column: 11)
!7106 = distinct !DILexicalBlock(scope: !7101, file: !349, line: 1207, column: 5)
!7107 = !DILocation(line: 1218, column: 22, scope: !7105)
!7108 = !DILocation(line: 1218, column: 32, scope: !7105)
!7109 = !DILocation(line: 1218, column: 38, scope: !7105)
!7110 = !DILocation(line: 1218, column: 37, scope: !7105)
!7111 = !DILocation(line: 1218, column: 46, scope: !7105)
!7112 = !DILocation(line: 1218, column: 51, scope: !7105)
!7113 = !DILocation(line: 1218, column: 54, scope: !7105)
!7114 = !DILocation(line: 1218, column: 11, scope: !7106)
!7115 = !DILocation(line: 1220, column: 12, scope: !7116)
!7116 = distinct !DILexicalBlock(scope: !7105, file: !349, line: 1219, column: 9)
!7117 = !DILocation(line: 1220, column: 20, scope: !7116)
!7118 = !DILocation(line: 1221, column: 11, scope: !7116)
!7119 = !DILocation(line: 1225, column: 17, scope: !7106)
!7120 = !DILocation(line: 1225, column: 29, scope: !7106)
!7121 = !DILocation(line: 1226, column: 14, scope: !7106)
!7122 = !DILocation(line: 1225, column: 7, scope: !7106)
!7123 = !DILocation(line: 1227, column: 18, scope: !7106)
!7124 = !DILocation(line: 1228, column: 7, scope: !7106)
!7125 = !DILocation(line: 1231, column: 14, scope: !7126)
!7126 = distinct !DILexicalBlock(scope: !6841, file: !349, line: 1231, column: 7)
!7127 = !DILocation(line: 1231, column: 7, scope: !7126)
!7128 = !DILocation(line: 1231, column: 30, scope: !7126)
!7129 = !DILocation(line: 1231, column: 7, scope: !6841)
!7130 = !DILocation(line: 1233, column: 17, scope: !7131)
!7131 = distinct !DILexicalBlock(scope: !7126, file: !349, line: 1232, column: 5)
!7132 = !DILocation(line: 1233, column: 24, scope: !7131)
!7133 = !DILocation(line: 1233, column: 46, scope: !7131)
!7134 = !DILocation(line: 1233, column: 7, scope: !7131)
!7135 = !DILocation(line: 1234, column: 18, scope: !7131)
!7136 = !DILocation(line: 1235, column: 7, scope: !7131)
!7137 = !DILocation(line: 1239, column: 7, scope: !7138)
!7138 = distinct !DILexicalBlock(scope: !6841, file: !349, line: 1239, column: 7)
!7139 = !DILocation(line: 1239, column: 26, scope: !7138)
!7140 = !DILocation(line: 1239, column: 29, scope: !7138)
!7141 = !DILocation(line: 1239, column: 32, scope: !7138)
!7142 = !DILocation(line: 1239, column: 7, scope: !6841)
!7143 = !DILocalVariable(name: "clone_ok", scope: !7144, file: !349, line: 1241, type: !142)
!7144 = distinct !DILexicalBlock(scope: !7138, file: !349, line: 1240, column: 5)
!7145 = !DILocation(line: 1241, column: 12, scope: !7144)
!7146 = !DILocation(line: 1241, column: 35, scope: !7144)
!7147 = !DILocation(line: 1241, column: 46, scope: !7144)
!7148 = !DILocation(line: 1241, column: 23, scope: !7144)
!7149 = !DILocation(line: 1241, column: 59, scope: !7144)
!7150 = !DILocation(line: 1242, column: 11, scope: !7151)
!7151 = distinct !DILexicalBlock(scope: !7144, file: !349, line: 1242, column: 11)
!7152 = !DILocation(line: 1242, column: 20, scope: !7151)
!7153 = !DILocation(line: 1242, column: 23, scope: !7151)
!7154 = !DILocation(line: 1242, column: 26, scope: !7151)
!7155 = !DILocation(line: 1242, column: 39, scope: !7151)
!7156 = !DILocation(line: 1242, column: 11, scope: !7144)
!7157 = !DILocation(line: 1244, column: 16, scope: !7158)
!7158 = distinct !DILexicalBlock(scope: !7159, file: !349, line: 1244, column: 15)
!7159 = distinct !DILexicalBlock(scope: !7151, file: !349, line: 1243, column: 9)
!7160 = !DILocation(line: 1244, column: 15, scope: !7159)
!7161 = !DILocation(line: 1246, column: 25, scope: !7162)
!7162 = distinct !DILexicalBlock(scope: !7158, file: !349, line: 1245, column: 13)
!7163 = !DILocation(line: 1246, column: 32, scope: !7162)
!7164 = !DILocation(line: 1247, column: 22, scope: !7162)
!7165 = !DILocation(line: 1247, column: 47, scope: !7162)
!7166 = !DILocation(line: 1246, column: 15, scope: !7162)
!7167 = !DILocation(line: 1248, column: 26, scope: !7162)
!7168 = !DILocation(line: 1249, column: 15, scope: !7162)
!7169 = !DILocation(line: 1251, column: 30, scope: !7159)
!7170 = !DILocation(line: 1252, column: 9, scope: !7159)
!7171 = !DILocation(line: 1253, column: 5, scope: !7144)
!7172 = !DILocation(line: 1255, column: 7, scope: !7173)
!7173 = distinct !DILexicalBlock(scope: !6841, file: !349, line: 1255, column: 7)
!7174 = !DILocation(line: 1255, column: 7, scope: !6841)
!7175 = !DILocalVariable(name: "buf_alignment", scope: !7176, file: !349, line: 1258, type: !55)
!7176 = distinct !DILexicalBlock(scope: !7173, file: !349, line: 1256, column: 5)
!7177 = !DILocation(line: 1258, column: 14, scope: !7176)
!7178 = !DILocation(line: 1258, column: 30, scope: !7176)
!7179 = !DILocalVariable(name: "buf_size", scope: !7176, file: !349, line: 1259, type: !55)
!7180 = !DILocation(line: 1259, column: 14, scope: !7176)
!7181 = !DILocation(line: 1259, column: 25, scope: !7176)
!7182 = !DILocalVariable(name: "hole_size", scope: !7176, file: !349, line: 1260, type: !55)
!7183 = !DILocation(line: 1260, column: 14, scope: !7176)
!7184 = !DILocation(line: 1260, column: 26, scope: !7176)
!7185 = !{!2915, !2916, i64 56}
!7186 = !DILocation(line: 1262, column: 17, scope: !7176)
!7187 = !DILocation(line: 1262, column: 7, scope: !7176)
!7188 = !DILocalVariable(name: "make_holes", scope: !7176, file: !349, line: 1265, type: !142)
!7189 = !DILocation(line: 1265, column: 12, scope: !7176)
!7190 = !DILocalVariable(name: "sparse_src", scope: !7176, file: !349, line: 1266, type: !142)
!7191 = !DILocation(line: 1266, column: 12, scope: !7176)
!7192 = !DILocation(line: 1266, column: 25, scope: !7176)
!7193 = !DILocation(line: 1268, column: 11, scope: !7194)
!7194 = distinct !DILexicalBlock(scope: !7176, file: !349, line: 1268, column: 11)
!7195 = !DILocation(line: 1268, column: 11, scope: !7176)
!7196 = !DILocation(line: 1272, column: 15, scope: !7197)
!7197 = distinct !DILexicalBlock(scope: !7198, file: !349, line: 1272, column: 15)
!7198 = distinct !DILexicalBlock(scope: !7194, file: !349, line: 1269, column: 9)
!7199 = !DILocation(line: 1272, column: 18, scope: !7197)
!7200 = !DILocation(line: 1272, column: 30, scope: !7197)
!7201 = !DILocation(line: 1272, column: 15, scope: !7198)
!7202 = !DILocation(line: 1273, column: 24, scope: !7197)
!7203 = !DILocation(line: 1273, column: 13, scope: !7197)
!7204 = !DILocation(line: 1279, column: 15, scope: !7205)
!7205 = distinct !DILexicalBlock(scope: !7198, file: !349, line: 1279, column: 15)
!7206 = !DILocation(line: 1279, column: 18, scope: !7205)
!7207 = !DILocation(line: 1279, column: 30, scope: !7205)
!7208 = !DILocation(line: 1279, column: 45, scope: !7205)
!7209 = !DILocation(line: 1279, column: 48, scope: !7205)
!7210 = !DILocation(line: 1279, column: 15, scope: !7198)
!7211 = !DILocation(line: 1280, column: 24, scope: !7205)
!7212 = !DILocation(line: 1280, column: 13, scope: !7205)
!7213 = !DILocation(line: 1281, column: 9, scope: !7198)
!7214 = !DILocation(line: 1285, column: 13, scope: !7215)
!7215 = distinct !DILexicalBlock(scope: !7176, file: !349, line: 1285, column: 11)
!7216 = !DILocation(line: 1285, column: 11, scope: !7176)
!7217 = !DILocalVariable(name: "blcm_max", scope: !7218, file: !349, line: 1289, type: !55)
!7218 = distinct !DILexicalBlock(scope: !7215, file: !349, line: 1286, column: 9)
!7219 = !DILocation(line: 1289, column: 18, scope: !7218)
!7220 = !DILocation(line: 1289, column: 57, scope: !7218)
!7221 = !DILocation(line: 1289, column: 55, scope: !7218)
!7222 = !DILocalVariable(name: "blcm", scope: !7218, file: !349, line: 1290, type: !55)
!7223 = !DILocation(line: 1290, column: 18, scope: !7218)
!7224 = !DILocation(line: 1290, column: 37, scope: !7218)
!7225 = !DILocation(line: 1290, column: 63, scope: !7218)
!7226 = !DILocation(line: 1291, column: 37, scope: !7218)
!7227 = !DILocation(line: 1290, column: 25, scope: !7218)
!7228 = !DILocation(line: 1295, column: 15, scope: !7229)
!7229 = distinct !DILexicalBlock(scope: !7218, file: !349, line: 1295, column: 15)
!7230 = !DILocation(line: 1295, column: 45, scope: !7229)
!7231 = !DILocation(line: 1295, column: 60, scope: !7229)
!7232 = !DILocation(line: 1295, column: 70, scope: !7229)
!7233 = !DILocation(line: 1295, column: 68, scope: !7229)
!7234 = !DILocation(line: 1295, column: 15, scope: !7218)
!7235 = !DILocation(line: 1296, column: 36, scope: !7229)
!7236 = !DILocation(line: 1296, column: 44, scope: !7229)
!7237 = !DILocation(line: 1296, column: 22, scope: !7229)
!7238 = !DILocation(line: 1296, column: 13, scope: !7229)
!7239 = !DILocation(line: 1301, column: 23, scope: !7218)
!7240 = !DILocation(line: 1301, column: 28, scope: !7218)
!7241 = !DILocation(line: 1301, column: 20, scope: !7218)
!7242 = !DILocation(line: 1302, column: 23, scope: !7218)
!7243 = !DILocation(line: 1302, column: 34, scope: !7218)
!7244 = !DILocation(line: 1302, column: 32, scope: !7218)
!7245 = !DILocation(line: 1302, column: 20, scope: !7218)
!7246 = !DILocation(line: 1303, column: 15, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7218, file: !349, line: 1303, column: 15)
!7248 = !DILocation(line: 1303, column: 24, scope: !7247)
!7249 = !DILocation(line: 1303, column: 29, scope: !7247)
!7250 = !DILocation(line: 1303, column: 32, scope: !7247)
!7251 = !DILocation(line: 1303, column: 43, scope: !7247)
!7252 = !DILocation(line: 1303, column: 41, scope: !7247)
!7253 = !DILocation(line: 1303, column: 15, scope: !7218)
!7254 = !DILocation(line: 1304, column: 24, scope: !7247)
!7255 = !DILocation(line: 1304, column: 22, scope: !7247)
!7256 = !DILocation(line: 1304, column: 13, scope: !7247)
!7257 = !DILocation(line: 1305, column: 9, scope: !7218)
!7258 = !DILocation(line: 1307, column: 28, scope: !7176)
!7259 = !DILocation(line: 1307, column: 39, scope: !7176)
!7260 = !DILocation(line: 1307, column: 37, scope: !7176)
!7261 = !DILocation(line: 1307, column: 19, scope: !7176)
!7262 = !DILocation(line: 1307, column: 17, scope: !7176)
!7263 = !DILocation(line: 1308, column: 24, scope: !7176)
!7264 = !DILocation(line: 1308, column: 35, scope: !7176)
!7265 = !DILocation(line: 1308, column: 13, scope: !7176)
!7266 = !DILocation(line: 1308, column: 11, scope: !7176)
!7267 = !DILocation(line: 1310, column: 11, scope: !7268)
!7268 = distinct !DILexicalBlock(scope: !7176, file: !349, line: 1310, column: 11)
!7269 = !DILocation(line: 1310, column: 11, scope: !7176)
!7270 = !DILocalVariable(name: "normal_copy_required", scope: !7271, file: !349, line: 1312, type: !142)
!7271 = distinct !DILexicalBlock(scope: !7268, file: !349, line: 1311, column: 9)
!7272 = !DILocation(line: 1312, column: 16, scope: !7271)
!7273 = !DILocation(line: 1318, column: 28, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !7271, file: !349, line: 1318, column: 15)
!7275 = !DILocation(line: 1318, column: 41, scope: !7274)
!7276 = !DILocation(line: 1318, column: 52, scope: !7274)
!7277 = !DILocation(line: 1318, column: 57, scope: !7274)
!7278 = !DILocation(line: 1318, column: 67, scope: !7274)
!7279 = !DILocation(line: 1319, column: 40, scope: !7274)
!7280 = !DILocation(line: 1320, column: 28, scope: !7274)
!7281 = !DILocation(line: 1320, column: 41, scope: !7274)
!7282 = !DILocation(line: 1320, column: 44, scope: !7274)
!7283 = !DILocation(line: 1321, column: 28, scope: !7274)
!7284 = !DILocation(line: 1321, column: 38, scope: !7274)
!7285 = !DILocation(line: 1318, column: 15, scope: !7274)
!7286 = !DILocation(line: 1318, column: 15, scope: !7271)
!7287 = !DILocation(line: 1322, column: 13, scope: !7274)
!7288 = !DILocation(line: 1324, column: 17, scope: !7289)
!7289 = distinct !DILexicalBlock(scope: !7271, file: !349, line: 1324, column: 15)
!7290 = !DILocation(line: 1324, column: 15, scope: !7271)
!7291 = !DILocation(line: 1326, column: 26, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !7289, file: !349, line: 1325, column: 13)
!7293 = !DILocation(line: 1327, column: 15, scope: !7292)
!7294 = !DILocation(line: 1329, column: 9, scope: !7271)
!7295 = !DILocalVariable(name: "n_read", scope: !7176, file: !349, line: 1331, type: !352)
!7296 = !DILocation(line: 1331, column: 13, scope: !7176)
!7297 = !DILocalVariable(name: "wrote_hole_at_eof", scope: !7176, file: !349, line: 1332, type: !142)
!7298 = !DILocation(line: 1332, column: 12, scope: !7176)
!7299 = !DILocation(line: 1333, column: 26, scope: !7300)
!7300 = distinct !DILexicalBlock(scope: !7176, file: !349, line: 1333, column: 11)
!7301 = !DILocation(line: 1333, column: 39, scope: !7300)
!7302 = !DILocation(line: 1333, column: 50, scope: !7300)
!7303 = !DILocation(line: 1333, column: 55, scope: !7300)
!7304 = !DILocation(line: 1334, column: 26, scope: !7300)
!7305 = !DILocation(line: 1334, column: 39, scope: !7300)
!7306 = !DILocation(line: 1335, column: 26, scope: !7300)
!7307 = !DILocation(line: 1335, column: 29, scope: !7300)
!7308 = !DILocation(line: 1335, column: 41, scope: !7300)
!7309 = !DILocation(line: 1335, column: 59, scope: !7300)
!7310 = !DILocation(line: 1335, column: 69, scope: !7300)
!7311 = !DILocation(line: 1333, column: 13, scope: !7300)
!7312 = !DILocation(line: 1333, column: 11, scope: !7176)
!7313 = !DILocation(line: 1339, column: 22, scope: !7314)
!7314 = distinct !DILexicalBlock(scope: !7300, file: !349, line: 1338, column: 9)
!7315 = !DILocation(line: 1340, column: 11, scope: !7314)
!7316 = !DILocation(line: 1342, column: 16, scope: !7317)
!7317 = distinct !DILexicalBlock(scope: !7300, file: !349, line: 1342, column: 16)
!7318 = !DILocation(line: 1342, column: 34, scope: !7317)
!7319 = !DILocation(line: 1342, column: 48, scope: !7317)
!7320 = !DILocation(line: 1342, column: 59, scope: !7317)
!7321 = !DILocation(line: 1342, column: 37, scope: !7317)
!7322 = !DILocation(line: 1342, column: 67, scope: !7317)
!7323 = !DILocation(line: 1342, column: 16, scope: !7300)
!7324 = !DILocation(line: 1344, column: 21, scope: !7325)
!7325 = distinct !DILexicalBlock(scope: !7317, file: !349, line: 1343, column: 9)
!7326 = !DILocation(line: 1344, column: 28, scope: !7325)
!7327 = !DILocation(line: 1344, column: 54, scope: !7325)
!7328 = !DILocation(line: 1344, column: 11, scope: !7325)
!7329 = !DILocation(line: 1345, column: 22, scope: !7325)
!7330 = !DILocation(line: 1346, column: 11, scope: !7325)
!7331 = !DILocation(line: 1348, column: 5, scope: !7176)
!7332 = !DILabel(scope: !6841, name: "preserve_metadata", file: !349, line: 1350)
!7333 = !DILocation(line: 1350, column: 1, scope: !6841)
!7334 = !DILocation(line: 1351, column: 7, scope: !7335)
!7335 = distinct !DILexicalBlock(scope: !6841, file: !349, line: 1351, column: 7)
!7336 = !DILocation(line: 1351, column: 10, scope: !7335)
!7337 = !DILocation(line: 1351, column: 7, scope: !6841)
!7338 = !DILocalVariable(name: "timespec", scope: !7339, file: !349, line: 1353, type: !445)
!7339 = distinct !DILexicalBlock(scope: !7335, file: !349, line: 1352, column: 5)
!7340 = !DILocation(line: 1353, column: 23, scope: !7339)
!7341 = !DILocation(line: 1354, column: 7, scope: !7339)
!7342 = !DILocation(line: 1354, column: 37, scope: !7339)
!7343 = !DILocation(line: 1354, column: 21, scope: !7339)
!7344 = !DILocation(line: 1355, column: 7, scope: !7339)
!7345 = !DILocation(line: 1355, column: 37, scope: !7339)
!7346 = !DILocation(line: 1355, column: 21, scope: !7339)
!7347 = !DILocation(line: 1357, column: 22, scope: !7348)
!7348 = distinct !DILexicalBlock(scope: !7339, file: !349, line: 1357, column: 11)
!7349 = !DILocation(line: 1357, column: 33, scope: !7348)
!7350 = !DILocation(line: 1357, column: 43, scope: !7348)
!7351 = !DILocation(line: 1357, column: 11, scope: !7348)
!7352 = !DILocation(line: 1357, column: 53, scope: !7348)
!7353 = !DILocation(line: 1357, column: 11, scope: !7339)
!7354 = !DILocation(line: 1359, column: 21, scope: !7355)
!7355 = distinct !DILexicalBlock(scope: !7348, file: !349, line: 1358, column: 9)
!7356 = !DILocation(line: 1359, column: 28, scope: !7355)
!7357 = !DILocation(line: 1359, column: 58, scope: !7355)
!7358 = !DILocation(line: 1359, column: 11, scope: !7355)
!7359 = !DILocation(line: 1360, column: 15, scope: !7360)
!7360 = distinct !DILexicalBlock(scope: !7355, file: !349, line: 1360, column: 15)
!7361 = !DILocation(line: 1360, column: 18, scope: !7360)
!7362 = !DILocation(line: 1360, column: 15, scope: !7355)
!7363 = !DILocation(line: 1362, column: 26, scope: !7364)
!7364 = distinct !DILexicalBlock(scope: !7360, file: !349, line: 1361, column: 13)
!7365 = !DILocation(line: 1363, column: 15, scope: !7364)
!7366 = !DILocation(line: 1365, column: 9, scope: !7355)
!7367 = !DILocation(line: 1366, column: 5, scope: !7339)
!7368 = !DILocation(line: 1370, column: 7, scope: !7369)
!7369 = distinct !DILexicalBlock(scope: !6841, file: !349, line: 1370, column: 7)
!7370 = !DILocation(line: 1370, column: 10, scope: !7369)
!7371 = !DILocation(line: 1370, column: 29, scope: !7369)
!7372 = !DILocation(line: 1370, column: 34, scope: !7369)
!7373 = !DILocation(line: 1370, column: 7, scope: !6841)
!7374 = !DILocation(line: 1372, column: 26, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7369, file: !349, line: 1371, column: 5)
!7376 = !DILocation(line: 1372, column: 29, scope: !7375)
!7377 = !DILocation(line: 1372, column: 39, scope: !7375)
!7378 = !DILocation(line: 1372, column: 50, scope: !7375)
!7379 = !DILocation(line: 1372, column: 59, scope: !7375)
!7380 = !DILocation(line: 1372, column: 58, scope: !7375)
!7381 = !DILocation(line: 1372, column: 15, scope: !7375)
!7382 = !DILocation(line: 1372, column: 7, scope: !7375)
!7383 = !DILocation(line: 1375, column: 22, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !7375, file: !349, line: 1373, column: 9)
!7385 = !DILocation(line: 1376, column: 11, scope: !7384)
!7386 = !DILocation(line: 1379, column: 20, scope: !7384)
!7387 = !DILocation(line: 1380, column: 11, scope: !7384)
!7388 = !DILocation(line: 1382, column: 5, scope: !7375)
!7389 = !DILocation(line: 1387, column: 7, scope: !7390)
!7390 = distinct !DILexicalBlock(scope: !6841, file: !349, line: 1387, column: 7)
!7391 = !DILocation(line: 1387, column: 10, scope: !7390)
!7392 = !DILocation(line: 1387, column: 7, scope: !6841)
!7393 = !DILocalVariable(name: "access_changed", scope: !7394, file: !349, line: 1389, type: !142)
!7394 = distinct !DILexicalBlock(scope: !7390, file: !349, line: 1388, column: 5)
!7395 = !DILocation(line: 1389, column: 12, scope: !7394)
!7396 = !DILocation(line: 1391, column: 16, scope: !7397)
!7397 = distinct !DILexicalBlock(scope: !7394, file: !349, line: 1391, column: 11)
!7398 = !DILocation(line: 1391, column: 24, scope: !7397)
!7399 = !DILocation(line: 1391, column: 35, scope: !7397)
!7400 = !DILocation(line: 1391, column: 38, scope: !7397)
!7401 = !DILocation(line: 1391, column: 49, scope: !7397)
!7402 = !DILocation(line: 1391, column: 11, scope: !7394)
!7403 = !DILocation(line: 1393, column: 46, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7397, file: !349, line: 1392, column: 9)
!7405 = !DILocation(line: 1393, column: 57, scope: !7404)
!7406 = !DILocation(line: 1393, column: 28, scope: !7404)
!7407 = !DILocation(line: 1394, column: 65, scope: !7404)
!7408 = !DILocation(line: 1393, column: 26, scope: !7404)
!7409 = !DILocation(line: 1395, column: 9, scope: !7404)
!7410 = !DILocation(line: 1397, column: 23, scope: !7411)
!7411 = distinct !DILexicalBlock(scope: !7394, file: !349, line: 1397, column: 11)
!7412 = !DILocation(line: 1397, column: 33, scope: !7411)
!7413 = !DILocation(line: 1397, column: 46, scope: !7411)
!7414 = !DILocation(line: 1397, column: 56, scope: !7411)
!7415 = !DILocation(line: 1397, column: 67, scope: !7411)
!7416 = !DILocation(line: 1397, column: 12, scope: !7411)
!7417 = !DILocation(line: 1398, column: 11, scope: !7411)
!7418 = !DILocation(line: 1398, column: 14, scope: !7411)
!7419 = !DILocation(line: 1398, column: 17, scope: !7411)
!7420 = !DILocation(line: 1397, column: 11, scope: !7394)
!7421 = !DILocation(line: 1399, column: 20, scope: !7411)
!7422 = !DILocation(line: 1399, column: 9, scope: !7411)
!7423 = !DILocation(line: 1401, column: 11, scope: !7424)
!7424 = distinct !DILexicalBlock(scope: !7394, file: !349, line: 1401, column: 11)
!7425 = !DILocation(line: 1401, column: 11, scope: !7394)
!7426 = !DILocation(line: 1402, column: 27, scope: !7424)
!7427 = !DILocation(line: 1402, column: 38, scope: !7424)
!7428 = !DILocation(line: 1402, column: 48, scope: !7424)
!7429 = !DILocation(line: 1402, column: 60, scope: !7424)
!7430 = !DILocation(line: 1402, column: 59, scope: !7424)
!7431 = !DILocation(line: 1402, column: 57, scope: !7424)
!7432 = !DILocation(line: 1402, column: 9, scope: !7424)
!7433 = !DILocation(line: 1403, column: 5, scope: !7394)
!7434 = !DILocation(line: 1405, column: 15, scope: !6841)
!7435 = !DILocation(line: 1405, column: 25, scope: !6841)
!7436 = !DILocation(line: 1405, column: 36, scope: !6841)
!7437 = !DILocation(line: 1405, column: 3, scope: !6841)
!7438 = !DILocation(line: 1407, column: 7, scope: !7439)
!7439 = distinct !DILexicalBlock(scope: !6841, file: !349, line: 1407, column: 7)
!7440 = !DILocation(line: 1407, column: 10, scope: !7439)
!7441 = !DILocation(line: 1407, column: 24, scope: !7439)
!7442 = !DILocation(line: 1407, column: 27, scope: !7439)
!7443 = !DILocation(line: 1407, column: 30, scope: !7439)
!7444 = !DILocation(line: 1407, column: 7, scope: !6841)
!7445 = !DILocation(line: 1409, column: 21, scope: !7446)
!7446 = distinct !DILexicalBlock(scope: !7447, file: !349, line: 1409, column: 11)
!7447 = distinct !DILexicalBlock(scope: !7439, file: !349, line: 1408, column: 5)
!7448 = !DILocation(line: 1409, column: 31, scope: !7446)
!7449 = !DILocation(line: 1409, column: 44, scope: !7446)
!7450 = !DILocation(line: 1409, column: 54, scope: !7446)
!7451 = !DILocation(line: 1409, column: 65, scope: !7446)
!7452 = !DILocation(line: 1409, column: 11, scope: !7446)
!7453 = !DILocation(line: 1409, column: 75, scope: !7446)
!7454 = !DILocation(line: 1410, column: 11, scope: !7446)
!7455 = !DILocation(line: 1410, column: 14, scope: !7446)
!7456 = !DILocation(line: 1410, column: 17, scope: !7446)
!7457 = !DILocation(line: 1409, column: 11, scope: !7447)
!7458 = !DILocation(line: 1411, column: 20, scope: !7446)
!7459 = !DILocation(line: 1411, column: 9, scope: !7446)
!7460 = !DILocation(line: 1412, column: 5, scope: !7447)
!7461 = !DILocation(line: 1413, column: 12, scope: !7462)
!7462 = distinct !DILexicalBlock(scope: !7439, file: !349, line: 1413, column: 12)
!7463 = !DILocation(line: 1413, column: 15, scope: !7462)
!7464 = !DILocation(line: 1413, column: 12, scope: !7439)
!7465 = !DILocation(line: 1415, column: 20, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !7467, file: !349, line: 1415, column: 11)
!7467 = distinct !DILexicalBlock(scope: !7462, file: !349, line: 1414, column: 5)
!7468 = !DILocation(line: 1415, column: 30, scope: !7466)
!7469 = !DILocation(line: 1415, column: 41, scope: !7466)
!7470 = !DILocation(line: 1415, column: 44, scope: !7466)
!7471 = !DILocation(line: 1415, column: 11, scope: !7466)
!7472 = !DILocation(line: 1415, column: 50, scope: !7466)
!7473 = !DILocation(line: 1415, column: 11, scope: !7467)
!7474 = !DILocation(line: 1416, column: 20, scope: !7466)
!7475 = !DILocation(line: 1416, column: 9, scope: !7466)
!7476 = !DILocation(line: 1417, column: 5, scope: !7467)
!7477 = !DILocation(line: 1418, column: 12, scope: !7478)
!7478 = distinct !DILexicalBlock(scope: !7462, file: !349, line: 1418, column: 12)
!7479 = !DILocation(line: 1418, column: 15, scope: !7478)
!7480 = !DILocation(line: 1418, column: 41, scope: !7478)
!7481 = !DILocation(line: 1418, column: 45, scope: !7478)
!7482 = !DILocation(line: 1418, column: 44, scope: !7478)
!7483 = !DILocation(line: 1418, column: 12, scope: !7462)
!7484 = !DILocation(line: 1420, column: 20, scope: !7485)
!7485 = distinct !DILexicalBlock(scope: !7486, file: !349, line: 1420, column: 11)
!7486 = distinct !DILexicalBlock(scope: !7478, file: !349, line: 1419, column: 5)
!7487 = !DILocation(line: 1420, column: 30, scope: !7485)
!7488 = !DILocation(line: 1420, column: 56, scope: !7485)
!7489 = !DILocation(line: 1420, column: 55, scope: !7485)
!7490 = !DILocation(line: 1420, column: 53, scope: !7485)
!7491 = !DILocation(line: 1420, column: 11, scope: !7485)
!7492 = !DILocation(line: 1420, column: 73, scope: !7485)
!7493 = !DILocation(line: 1420, column: 11, scope: !7486)
!7494 = !DILocation(line: 1421, column: 20, scope: !7485)
!7495 = !DILocation(line: 1421, column: 9, scope: !7485)
!7496 = !DILocation(line: 1422, column: 5, scope: !7486)
!7497 = !DILocation(line: 1423, column: 12, scope: !7498)
!7498 = distinct !DILexicalBlock(scope: !7478, file: !349, line: 1423, column: 12)
!7499 = !DILocation(line: 1423, column: 12, scope: !7478)
!7500 = !DILocation(line: 1425, column: 32, scope: !7501)
!7501 = distinct !DILexicalBlock(scope: !7498, file: !349, line: 1424, column: 5)
!7502 = !DILocation(line: 1425, column: 30, scope: !7501)
!7503 = !DILocation(line: 1425, column: 27, scope: !7501)
!7504 = !DILocation(line: 1426, column: 11, scope: !7505)
!7505 = distinct !DILexicalBlock(scope: !7501, file: !349, line: 1426, column: 11)
!7506 = !DILocation(line: 1427, column: 11, scope: !7505)
!7507 = !DILocation(line: 1427, column: 32, scope: !7505)
!7508 = !DILocation(line: 1427, column: 43, scope: !7505)
!7509 = !DILocation(line: 1427, column: 53, scope: !7505)
!7510 = !DILocation(line: 1427, column: 14, scope: !7505)
!7511 = !DILocation(line: 1427, column: 63, scope: !7505)
!7512 = !DILocation(line: 1426, column: 11, scope: !7501)
!7513 = !DILocation(line: 1429, column: 21, scope: !7514)
!7514 = distinct !DILexicalBlock(scope: !7505, file: !349, line: 1428, column: 9)
!7515 = !DILocation(line: 1429, column: 28, scope: !7514)
!7516 = !DILocation(line: 1430, column: 18, scope: !7514)
!7517 = !DILocation(line: 1429, column: 11, scope: !7514)
!7518 = !DILocation(line: 1431, column: 15, scope: !7519)
!7519 = distinct !DILexicalBlock(scope: !7514, file: !349, line: 1431, column: 15)
!7520 = !DILocation(line: 1431, column: 18, scope: !7519)
!7521 = !DILocation(line: 1431, column: 15, scope: !7514)
!7522 = !DILocation(line: 1432, column: 24, scope: !7519)
!7523 = !DILocation(line: 1432, column: 13, scope: !7519)
!7524 = !DILocation(line: 1433, column: 9, scope: !7514)
!7525 = !DILocation(line: 1434, column: 5, scope: !7501)
!7526 = !DILabel(scope: !6841, name: "close_src_and_dst_desc", file: !349, line: 1436)
!7527 = !DILocation(line: 1436, column: 1, scope: !6841)
!7528 = !DILocation(line: 1437, column: 14, scope: !7529)
!7529 = distinct !DILexicalBlock(scope: !6841, file: !349, line: 1437, column: 7)
!7530 = !DILocation(line: 1437, column: 7, scope: !7529)
!7531 = !DILocation(line: 1437, column: 25, scope: !7529)
!7532 = !DILocation(line: 1437, column: 7, scope: !6841)
!7533 = !DILocation(line: 1439, column: 17, scope: !7534)
!7534 = distinct !DILexicalBlock(scope: !7529, file: !349, line: 1438, column: 5)
!7535 = !DILocation(line: 1439, column: 24, scope: !7534)
!7536 = !DILocation(line: 1439, column: 49, scope: !7534)
!7537 = !DILocation(line: 1439, column: 7, scope: !7534)
!7538 = !DILocation(line: 1440, column: 18, scope: !7534)
!7539 = !DILocation(line: 1441, column: 5, scope: !7534)
!7540 = !DILocation(line: 1437, column: 27, scope: !7529)
!7541 = !DILabel(scope: !6841, name: "close_src_desc", file: !349, line: 1442)
!7542 = !DILocation(line: 1442, column: 1, scope: !6841)
!7543 = !DILocation(line: 1443, column: 14, scope: !7544)
!7544 = distinct !DILexicalBlock(scope: !6841, file: !349, line: 1443, column: 7)
!7545 = !DILocation(line: 1443, column: 7, scope: !7544)
!7546 = !DILocation(line: 1443, column: 27, scope: !7544)
!7547 = !DILocation(line: 1443, column: 7, scope: !6841)
!7548 = !DILocation(line: 1445, column: 17, scope: !7549)
!7549 = distinct !DILexicalBlock(scope: !7544, file: !349, line: 1444, column: 5)
!7550 = !DILocation(line: 1445, column: 24, scope: !7549)
!7551 = !DILocation(line: 1445, column: 49, scope: !7549)
!7552 = !DILocation(line: 1445, column: 7, scope: !7549)
!7553 = !DILocation(line: 1446, column: 18, scope: !7549)
!7554 = !DILocation(line: 1447, column: 5, scope: !7549)
!7555 = !DILocation(line: 1449, column: 9, scope: !6841)
!7556 = !DILocation(line: 1449, column: 3, scope: !6841)
!7557 = !DILocation(line: 1450, column: 9, scope: !6841)
!7558 = !DILocation(line: 1450, column: 3, scope: !6841)
!7559 = !DILocation(line: 1451, column: 10, scope: !6841)
!7560 = !DILocation(line: 1451, column: 3, scope: !6841)
!7561 = !DILocation(line: 1452, column: 1, scope: !6841)
!7562 = distinct !DISubprogram(name: "restore_default_fscreatecon_or_die", scope: !349, file: !349, line: 1805, type: !200, scopeLine: 1806, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!7563 = !DILocation(line: 1807, column: 7, scope: !7564)
!7564 = distinct !DILexicalBlock(scope: !7562, file: !349, line: 1807, column: 7)
!7565 = !DILocation(line: 1807, column: 29, scope: !7564)
!7566 = !DILocation(line: 1807, column: 7, scope: !7562)
!7567 = !DILocation(line: 1808, column: 5, scope: !7564)
!7568 = !DILocation(line: 1810, column: 1, scope: !7562)
!7569 = distinct !DISubprogram(name: "chown_failure_ok", scope: !349, file: !349, line: 3061, type: !407, scopeLine: 3062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !348, retainedNodes: !209)
!7570 = !DILocalVariable(name: "x", arg: 1, scope: !7569, file: !349, line: 3061, type: !356)
!7571 = !DILocation(line: 3061, column: 44, scope: !7569)
!7572 = !DILocation(line: 3067, column: 12, scope: !7569)
!7573 = !DILocation(line: 3067, column: 18, scope: !7569)
!7574 = !DILocation(line: 3067, column: 27, scope: !7569)
!7575 = !DILocation(line: 3067, column: 30, scope: !7569)
!7576 = !DILocation(line: 3067, column: 36, scope: !7569)
!7577 = !DILocation(line: 3067, column: 47, scope: !7569)
!7578 = !DILocation(line: 3067, column: 51, scope: !7569)
!7579 = !DILocation(line: 3067, column: 54, scope: !7569)
!7580 = !{!2813, !2743, i64 26}
!7581 = !DILocation(line: 3067, column: 50, scope: !7569)
!7582 = !DILocation(line: 0, scope: !7569)
!7583 = !DILocation(line: 3067, column: 3, scope: !7569)
!7584 = distinct !DISubprogram(name: "utimens_symlink", scope: !349, file: !349, line: 189, type: !559, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!7585 = !DILocalVariable(name: "file", arg: 1, scope: !7584, file: !349, line: 189, type: !180)
!7586 = !DILocation(line: 189, column: 30, scope: !7584)
!7587 = !DILocalVariable(name: "timespec", arg: 2, scope: !7584, file: !349, line: 189, type: !561)
!7588 = !DILocation(line: 189, column: 59, scope: !7584)
!7589 = !DILocalVariable(name: "err", scope: !7584, file: !349, line: 191, type: !7)
!7590 = !DILocation(line: 191, column: 7, scope: !7584)
!7591 = !DILocation(line: 191, column: 23, scope: !7584)
!7592 = !DILocation(line: 191, column: 29, scope: !7584)
!7593 = !DILocation(line: 191, column: 13, scope: !7584)
!7594 = !DILocation(line: 195, column: 7, scope: !7595)
!7595 = distinct !DILexicalBlock(scope: !7584, file: !349, line: 195, column: 7)
!7596 = !DILocation(line: 195, column: 11, scope: !7595)
!7597 = !DILocation(line: 195, column: 14, scope: !7595)
!7598 = !DILocation(line: 195, column: 20, scope: !7595)
!7599 = !DILocation(line: 195, column: 7, scope: !7584)
!7600 = !DILocation(line: 196, column: 9, scope: !7595)
!7601 = !DILocation(line: 196, column: 5, scope: !7595)
!7602 = !DILocation(line: 197, column: 10, scope: !7584)
!7603 = !DILocation(line: 197, column: 3, scope: !7584)
!7604 = distinct !DISubprogram(name: "set_owner", scope: !349, file: !349, line: 816, type: !563, scopeLine: 819, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!7605 = !DILocalVariable(name: "x", arg: 1, scope: !7604, file: !349, line: 816, type: !356)
!7606 = !DILocation(line: 816, column: 37, scope: !7604)
!7607 = !DILocalVariable(name: "dst_name", arg: 2, scope: !7604, file: !349, line: 816, type: !180)
!7608 = !DILocation(line: 816, column: 52, scope: !7604)
!7609 = !DILocalVariable(name: "dest_desc", arg: 3, scope: !7604, file: !349, line: 816, type: !7)
!7610 = !DILocation(line: 816, column: 66, scope: !7604)
!7611 = !DILocalVariable(name: "src_sb", arg: 4, scope: !7604, file: !349, line: 817, type: !413)
!7612 = !DILocation(line: 817, column: 31, scope: !7604)
!7613 = !DILocalVariable(name: "new_dst", arg: 5, scope: !7604, file: !349, line: 817, type: !142)
!7614 = !DILocation(line: 817, column: 44, scope: !7604)
!7615 = !DILocalVariable(name: "dst_sb", arg: 6, scope: !7604, file: !349, line: 818, type: !413)
!7616 = !DILocation(line: 818, column: 31, scope: !7604)
!7617 = !DILocalVariable(name: "uid", scope: !7604, file: !349, line: 820, type: !127)
!7618 = !DILocation(line: 820, column: 9, scope: !7604)
!7619 = !DILocation(line: 820, column: 15, scope: !7604)
!7620 = !DILocation(line: 820, column: 23, scope: !7604)
!7621 = !DILocalVariable(name: "gid", scope: !7604, file: !349, line: 821, type: !129)
!7622 = !DILocation(line: 821, column: 9, scope: !7604)
!7623 = !DILocation(line: 821, column: 15, scope: !7604)
!7624 = !DILocation(line: 821, column: 23, scope: !7604)
!7625 = !DILocation(line: 829, column: 8, scope: !7626)
!7626 = distinct !DILexicalBlock(scope: !7604, file: !349, line: 829, column: 7)
!7627 = !DILocation(line: 829, column: 16, scope: !7626)
!7628 = !DILocation(line: 829, column: 20, scope: !7626)
!7629 = !DILocation(line: 829, column: 23, scope: !7626)
!7630 = !DILocation(line: 829, column: 37, scope: !7626)
!7631 = !DILocation(line: 829, column: 40, scope: !7626)
!7632 = !DILocation(line: 829, column: 43, scope: !7626)
!7633 = !DILocation(line: 829, column: 53, scope: !7626)
!7634 = !DILocation(line: 829, column: 56, scope: !7626)
!7635 = !DILocation(line: 829, column: 59, scope: !7626)
!7636 = !DILocation(line: 829, column: 7, scope: !7604)
!7637 = !DILocalVariable(name: "old_mode", scope: !7638, file: !349, line: 831, type: !139)
!7638 = distinct !DILexicalBlock(scope: !7626, file: !349, line: 830, column: 5)
!7639 = !DILocation(line: 831, column: 14, scope: !7638)
!7640 = !DILocation(line: 831, column: 25, scope: !7638)
!7641 = !DILocation(line: 831, column: 33, scope: !7638)
!7642 = !DILocalVariable(name: "new_mode", scope: !7638, file: !349, line: 832, type: !139)
!7643 = !DILocation(line: 832, column: 14, scope: !7638)
!7644 = !DILocation(line: 833, column: 10, scope: !7638)
!7645 = !DILocation(line: 833, column: 13, scope: !7638)
!7646 = !DILocation(line: 833, column: 27, scope: !7638)
!7647 = !DILocation(line: 833, column: 30, scope: !7638)
!7648 = !DILocation(line: 833, column: 33, scope: !7638)
!7649 = !DILocation(line: 833, column: 45, scope: !7638)
!7650 = !DILocation(line: 833, column: 53, scope: !7638)
!7651 = !DILocation(line: 833, column: 63, scope: !7638)
!7652 = !DILocation(line: 833, column: 66, scope: !7638)
!7653 = !DILocalVariable(name: "restrictive_temp_mode", scope: !7638, file: !349, line: 834, type: !139)
!7654 = !DILocation(line: 834, column: 14, scope: !7638)
!7655 = !DILocation(line: 834, column: 38, scope: !7638)
!7656 = !DILocation(line: 834, column: 49, scope: !7638)
!7657 = !DILocation(line: 834, column: 47, scope: !7638)
!7658 = !DILocation(line: 834, column: 58, scope: !7638)
!7659 = !DILocation(line: 839, column: 24, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7638, file: !349, line: 836, column: 11)
!7661 = !DILocation(line: 839, column: 34, scope: !7660)
!7662 = !DILocation(line: 839, column: 45, scope: !7660)
!7663 = !DILocation(line: 839, column: 14, scope: !7660)
!7664 = !DILocation(line: 839, column: 68, scope: !7660)
!7665 = !DILocation(line: 836, column: 11, scope: !7638)
!7666 = !DILocation(line: 841, column: 35, scope: !7667)
!7667 = distinct !DILexicalBlock(scope: !7668, file: !349, line: 841, column: 15)
!7668 = distinct !DILexicalBlock(scope: !7660, file: !349, line: 840, column: 9)
!7669 = !DILocation(line: 841, column: 17, scope: !7667)
!7670 = !DILocation(line: 841, column: 15, scope: !7668)
!7671 = !DILocation(line: 842, column: 23, scope: !7667)
!7672 = !DILocation(line: 842, column: 30, scope: !7667)
!7673 = !DILocation(line: 843, column: 20, scope: !7667)
!7674 = !DILocation(line: 842, column: 13, scope: !7667)
!7675 = !DILocation(line: 844, column: 19, scope: !7668)
!7676 = !DILocation(line: 844, column: 22, scope: !7668)
!7677 = !DILocation(line: 844, column: 18, scope: !7668)
!7678 = !DILocation(line: 844, column: 11, scope: !7668)
!7679 = !DILocation(line: 846, column: 5, scope: !7638)
!7680 = !DILocation(line: 848, column: 22, scope: !7681)
!7681 = distinct !DILexicalBlock(scope: !7604, file: !349, line: 848, column: 7)
!7682 = !DILocation(line: 848, column: 32, scope: !7681)
!7683 = !DILocation(line: 848, column: 7, scope: !7604)
!7684 = !DILocation(line: 850, column: 19, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7686, file: !349, line: 850, column: 11)
!7686 = distinct !DILexicalBlock(scope: !7681, file: !349, line: 849, column: 5)
!7687 = !DILocation(line: 850, column: 30, scope: !7685)
!7688 = !DILocation(line: 850, column: 35, scope: !7685)
!7689 = !DILocation(line: 850, column: 11, scope: !7685)
!7690 = !DILocation(line: 850, column: 40, scope: !7685)
!7691 = !DILocation(line: 850, column: 11, scope: !7686)
!7692 = !DILocation(line: 851, column: 9, scope: !7685)
!7693 = !DILocation(line: 852, column: 11, scope: !7694)
!7694 = distinct !DILexicalBlock(scope: !7686, file: !349, line: 852, column: 11)
!7695 = !DILocation(line: 852, column: 17, scope: !7694)
!7696 = !DILocation(line: 852, column: 26, scope: !7694)
!7697 = !DILocation(line: 852, column: 29, scope: !7694)
!7698 = !DILocation(line: 852, column: 35, scope: !7694)
!7699 = !DILocation(line: 852, column: 11, scope: !7686)
!7700 = !DILocalVariable(name: "saved_errno", scope: !7701, file: !349, line: 856, type: !7)
!7701 = distinct !DILexicalBlock(scope: !7694, file: !349, line: 853, column: 9)
!7702 = !DILocation(line: 856, column: 15, scope: !7701)
!7703 = !DILocation(line: 856, column: 29, scope: !7701)
!7704 = !DILocalVariable(name: "__x", scope: !7705, file: !349, line: 857, type: !7)
!7705 = distinct !DILexicalBlock(scope: !7701, file: !349, line: 857, column: 11)
!7706 = !DILocation(line: 857, column: 11, scope: !7705)
!7707 = !DILocation(line: 858, column: 19, scope: !7701)
!7708 = !DILocation(line: 858, column: 11, scope: !7701)
!7709 = !DILocation(line: 858, column: 17, scope: !7701)
!7710 = !DILocation(line: 859, column: 9, scope: !7701)
!7711 = !DILocation(line: 860, column: 5, scope: !7686)
!7712 = !DILocation(line: 863, column: 19, scope: !7713)
!7713 = distinct !DILexicalBlock(scope: !7714, file: !349, line: 863, column: 11)
!7714 = distinct !DILexicalBlock(scope: !7681, file: !349, line: 862, column: 5)
!7715 = !DILocation(line: 863, column: 29, scope: !7713)
!7716 = !DILocation(line: 863, column: 34, scope: !7713)
!7717 = !DILocation(line: 863, column: 11, scope: !7713)
!7718 = !DILocation(line: 863, column: 39, scope: !7713)
!7719 = !DILocation(line: 863, column: 11, scope: !7714)
!7720 = !DILocation(line: 864, column: 9, scope: !7713)
!7721 = !DILocation(line: 865, column: 11, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7714, file: !349, line: 865, column: 11)
!7723 = !DILocation(line: 865, column: 17, scope: !7722)
!7724 = !DILocation(line: 865, column: 26, scope: !7722)
!7725 = !DILocation(line: 865, column: 29, scope: !7722)
!7726 = !DILocation(line: 865, column: 35, scope: !7722)
!7727 = !DILocation(line: 865, column: 11, scope: !7714)
!7728 = !DILocalVariable(name: "saved_errno", scope: !7729, file: !349, line: 869, type: !7)
!7729 = distinct !DILexicalBlock(scope: !7722, file: !349, line: 866, column: 9)
!7730 = !DILocation(line: 869, column: 15, scope: !7729)
!7731 = !DILocation(line: 869, column: 29, scope: !7729)
!7732 = !DILocalVariable(name: "__x", scope: !7733, file: !349, line: 870, type: !7)
!7733 = distinct !DILexicalBlock(scope: !7729, file: !349, line: 870, column: 11)
!7734 = !DILocation(line: 870, column: 11, scope: !7733)
!7735 = !DILocation(line: 871, column: 19, scope: !7729)
!7736 = !DILocation(line: 871, column: 11, scope: !7729)
!7737 = !DILocation(line: 871, column: 17, scope: !7729)
!7738 = !DILocation(line: 872, column: 9, scope: !7729)
!7739 = !DILocation(line: 875, column: 27, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7604, file: !349, line: 875, column: 7)
!7741 = !DILocation(line: 875, column: 9, scope: !7740)
!7742 = !DILocation(line: 875, column: 7, scope: !7604)
!7743 = !DILocation(line: 877, column: 17, scope: !7744)
!7744 = distinct !DILexicalBlock(scope: !7740, file: !349, line: 876, column: 5)
!7745 = !DILocation(line: 877, column: 24, scope: !7744)
!7746 = !DILocation(line: 878, column: 14, scope: !7744)
!7747 = !DILocation(line: 877, column: 7, scope: !7744)
!7748 = !DILocation(line: 879, column: 11, scope: !7749)
!7749 = distinct !DILexicalBlock(scope: !7744, file: !349, line: 879, column: 11)
!7750 = !DILocation(line: 879, column: 14, scope: !7749)
!7751 = !DILocation(line: 879, column: 11, scope: !7744)
!7752 = !DILocation(line: 880, column: 9, scope: !7749)
!7753 = !DILocation(line: 881, column: 5, scope: !7744)
!7754 = !DILocation(line: 883, column: 3, scope: !7604)
!7755 = !DILocation(line: 884, column: 1, scope: !7604)
!7756 = distinct !DISubprogram(name: "copy_attr", scope: !349, file: !349, line: 695, type: !565, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!7757 = !DILocalVariable(name: "src_path", arg: 1, scope: !7756, file: !349, line: 695, type: !180)
!7758 = !DILocation(line: 695, column: 24, scope: !7756)
!7759 = !DILocalVariable(name: "src_fd", arg: 2, scope: !7756, file: !349, line: 695, type: !7)
!7760 = !DILocation(line: 695, column: 38, scope: !7756)
!7761 = !DILocalVariable(name: "dst_path", arg: 3, scope: !7756, file: !349, line: 696, type: !180)
!7762 = !DILocation(line: 696, column: 24, scope: !7756)
!7763 = !DILocalVariable(name: "dst_fd", arg: 4, scope: !7756, file: !349, line: 696, type: !7)
!7764 = !DILocation(line: 696, column: 38, scope: !7756)
!7765 = !DILocalVariable(name: "x", arg: 5, scope: !7756, file: !349, line: 696, type: !356)
!7766 = !DILocation(line: 696, column: 71, scope: !7756)
!7767 = !DILocalVariable(name: "ret", scope: !7756, file: !349, line: 698, type: !7)
!7768 = !DILocation(line: 698, column: 7, scope: !7756)
!7769 = !DILocalVariable(name: "all_errors", scope: !7756, file: !349, line: 699, type: !142)
!7770 = !DILocation(line: 699, column: 8, scope: !7756)
!7771 = !DILocation(line: 699, column: 23, scope: !7756)
!7772 = !DILocation(line: 699, column: 26, scope: !7756)
!7773 = !DILocation(line: 699, column: 45, scope: !7756)
!7774 = !DILocation(line: 699, column: 48, scope: !7756)
!7775 = !DILocation(line: 699, column: 51, scope: !7756)
!7776 = !DILocalVariable(name: "some_errors", scope: !7756, file: !349, line: 700, type: !142)
!7777 = !DILocation(line: 700, column: 8, scope: !7756)
!7778 = !DILocation(line: 700, column: 24, scope: !7756)
!7779 = !DILocation(line: 700, column: 35, scope: !7756)
!7780 = !DILocation(line: 700, column: 39, scope: !7756)
!7781 = !DILocation(line: 700, column: 42, scope: !7756)
!7782 = !DILocation(line: 700, column: 38, scope: !7756)
!7783 = !DILocation(line: 0, scope: !7756)
!7784 = !DILocalVariable(name: "selinux_done", scope: !7756, file: !349, line: 701, type: !142)
!7785 = !DILocation(line: 701, column: 8, scope: !7756)
!7786 = !DILocation(line: 701, column: 24, scope: !7756)
!7787 = !DILocation(line: 701, column: 27, scope: !7756)
!7788 = !DILocation(line: 701, column: 53, scope: !7756)
!7789 = !DILocation(line: 701, column: 56, scope: !7756)
!7790 = !DILocation(line: 701, column: 59, scope: !7756)
!7791 = !DILocalVariable(name: "ctx", scope: !7756, file: !349, line: 702, type: !570)
!7792 = !DILocation(line: 702, column: 24, scope: !7756)
!7793 = !DILocation(line: 703, column: 3, scope: !7756)
!7794 = !DILocation(line: 704, column: 14, scope: !7756)
!7795 = !{!7796, !2649, i64 0}
!7796 = !{!"error_context", !2649, i64 0, !2649, i64 8, !2649, i64 16}
!7797 = !{!7796, !2649, i64 8}
!7798 = !{!7796, !2649, i64 16}
!7799 = !DILocation(line: 708, column: 12, scope: !7800)
!7800 = distinct !DILexicalBlock(scope: !7756, file: !349, line: 708, column: 7)
!7801 = !DILocation(line: 708, column: 9, scope: !7800)
!7802 = !DILocation(line: 708, column: 19, scope: !7800)
!7803 = !DILocation(line: 708, column: 27, scope: !7800)
!7804 = !DILocation(line: 708, column: 24, scope: !7800)
!7805 = !DILocation(line: 708, column: 7, scope: !7756)
!7806 = !DILocation(line: 709, column: 25, scope: !7800)
!7807 = !DILocation(line: 709, column: 35, scope: !7800)
!7808 = !DILocation(line: 709, column: 43, scope: !7800)
!7809 = !DILocation(line: 709, column: 53, scope: !7800)
!7810 = !DILocation(line: 710, column: 25, scope: !7800)
!7811 = !DILocation(line: 711, column: 26, scope: !7800)
!7812 = !DILocation(line: 711, column: 37, scope: !7800)
!7813 = !DILocation(line: 711, column: 40, scope: !7800)
!7814 = !DILocation(line: 709, column: 11, scope: !7800)
!7815 = !DILocation(line: 709, column: 9, scope: !7800)
!7816 = !DILocation(line: 709, column: 5, scope: !7800)
!7817 = !DILocation(line: 713, column: 27, scope: !7800)
!7818 = !DILocation(line: 713, column: 37, scope: !7800)
!7819 = !DILocation(line: 714, column: 27, scope: !7800)
!7820 = !DILocation(line: 715, column: 28, scope: !7800)
!7821 = !DILocation(line: 715, column: 39, scope: !7800)
!7822 = !DILocation(line: 715, column: 42, scope: !7800)
!7823 = !DILocation(line: 713, column: 11, scope: !7800)
!7824 = !DILocation(line: 713, column: 9, scope: !7800)
!7825 = !DILocation(line: 717, column: 10, scope: !7756)
!7826 = !DILocation(line: 717, column: 14, scope: !7756)
!7827 = !DILocation(line: 717, column: 3, scope: !7756)
!7828 = distinct !DISubprogram(name: "set_author", scope: !349, file: !349, line: 892, type: !596, scopeLine: 893, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!7829 = !DILocalVariable(name: "dst_name", arg: 1, scope: !7828, file: !349, line: 892, type: !180)
!7830 = !DILocation(line: 892, column: 25, scope: !7828)
!7831 = !DILocalVariable(name: "dest_desc", arg: 2, scope: !7828, file: !349, line: 892, type: !7)
!7832 = !DILocation(line: 892, column: 39, scope: !7828)
!7833 = !DILocalVariable(name: "src_sb", arg: 3, scope: !7828, file: !349, line: 892, type: !413)
!7834 = !DILocation(line: 892, column: 69, scope: !7828)
!7835 = !DILocation(line: 913, column: 10, scope: !7828)
!7836 = !DILocation(line: 914, column: 10, scope: !7828)
!7837 = !DILocation(line: 915, column: 10, scope: !7828)
!7838 = !DILocation(line: 917, column: 1, scope: !7828)
!7839 = !DILocation(line: 3090, column: 7, scope: !7840)
!7840 = distinct !DILexicalBlock(scope: !601, file: !349, line: 3090, column: 7)
!7841 = !DILocation(line: 3090, column: 12, scope: !7840)
!7842 = !DILocation(line: 3090, column: 7, scope: !601)
!7843 = !DILocation(line: 3092, column: 14, scope: !7844)
!7844 = distinct !DILexicalBlock(scope: !7840, file: !349, line: 3091, column: 5)
!7845 = !DILocation(line: 3092, column: 12, scope: !7844)
!7846 = !DILocation(line: 3093, column: 14, scope: !7844)
!7847 = !DILocation(line: 3093, column: 7, scope: !7844)
!7848 = !DILocation(line: 3094, column: 5, scope: !7844)
!7849 = !DILocation(line: 3095, column: 10, scope: !601)
!7850 = !DILocation(line: 3095, column: 3, scope: !601)
!7851 = distinct !DISubprogram(name: "copy_attr_allerror", scope: !349, file: !349, line: 655, type: !575, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!7852 = !DILocalVariable(name: "ctx", arg: 1, scope: !7851, file: !349, line: 655, type: !569)
!7853 = !DILocation(line: 655, column: 43, scope: !7851)
!7854 = !DILocalVariable(name: "fmt", arg: 2, scope: !7851, file: !349, line: 656, type: !180)
!7855 = !DILocation(line: 656, column: 30, scope: !7851)
!7856 = !DILocalVariable(name: "err", scope: !7851, file: !349, line: 658, type: !7)
!7857 = !DILocation(line: 658, column: 7, scope: !7851)
!7858 = !DILocation(line: 658, column: 13, scope: !7851)
!7859 = !DILocalVariable(name: "ap", scope: !7851, file: !349, line: 659, type: !583)
!7860 = !DILocation(line: 659, column: 11, scope: !7851)
!7861 = !DILocation(line: 662, column: 3, scope: !7851)
!7862 = !DILocation(line: 663, column: 14, scope: !7851)
!7863 = !DILocation(line: 663, column: 19, scope: !7851)
!7864 = !DILocation(line: 663, column: 24, scope: !7851)
!7865 = !DILocation(line: 663, column: 3, scope: !7851)
!7866 = !DILocation(line: 664, column: 3, scope: !7851)
!7867 = !DILocation(line: 665, column: 1, scope: !7851)
!7868 = distinct !DISubprogram(name: "copy_attr_error", scope: !349, file: !349, line: 639, type: !575, scopeLine: 641, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!7869 = !DILocalVariable(name: "ctx", arg: 1, scope: !7868, file: !349, line: 639, type: !569)
!7870 = !DILocation(line: 639, column: 40, scope: !7868)
!7871 = !DILocalVariable(name: "fmt", arg: 2, scope: !7868, file: !349, line: 640, type: !180)
!7872 = !DILocation(line: 640, column: 30, scope: !7868)
!7873 = !DILocation(line: 642, column: 27, scope: !7874)
!7874 = distinct !DILexicalBlock(scope: !7868, file: !349, line: 642, column: 7)
!7875 = !DILocation(line: 642, column: 8, scope: !7874)
!7876 = !DILocation(line: 642, column: 7, scope: !7868)
!7877 = !DILocalVariable(name: "err", scope: !7878, file: !349, line: 644, type: !7)
!7878 = distinct !DILexicalBlock(scope: !7874, file: !349, line: 643, column: 5)
!7879 = !DILocation(line: 644, column: 11, scope: !7878)
!7880 = !DILocation(line: 644, column: 17, scope: !7878)
!7881 = !DILocalVariable(name: "ap", scope: !7878, file: !349, line: 645, type: !583)
!7882 = !DILocation(line: 645, column: 15, scope: !7878)
!7883 = !DILocation(line: 648, column: 7, scope: !7878)
!7884 = !DILocation(line: 649, column: 18, scope: !7878)
!7885 = !DILocation(line: 649, column: 23, scope: !7878)
!7886 = !DILocation(line: 649, column: 28, scope: !7878)
!7887 = !DILocation(line: 649, column: 7, scope: !7878)
!7888 = !DILocation(line: 650, column: 7, scope: !7878)
!7889 = !DILocation(line: 651, column: 5, scope: !7878)
!7890 = !DILocation(line: 652, column: 1, scope: !7868)
!7891 = distinct !DISubprogram(name: "copy_attr_quote", scope: !349, file: !349, line: 668, type: !579, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!7892 = !DILocalVariable(name: "ctx", arg: 1, scope: !7891, file: !349, line: 668, type: !569)
!7893 = !DILocation(line: 668, column: 40, scope: !7891)
!7894 = !DILocalVariable(name: "str", arg: 2, scope: !7891, file: !349, line: 668, type: !180)
!7895 = !DILocation(line: 668, column: 68, scope: !7891)
!7896 = !DILocation(line: 670, column: 10, scope: !7891)
!7897 = !DILocation(line: 670, column: 3, scope: !7891)
!7898 = distinct !DISubprogram(name: "copy_attr_free", scope: !349, file: !349, line: 674, type: !567, scopeLine: 676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!7899 = !DILocalVariable(name: "ctx", arg: 1, scope: !7898, file: !349, line: 674, type: !569)
!7900 = !DILocation(line: 674, column: 39, scope: !7898)
!7901 = !DILocalVariable(name: "str", arg: 2, scope: !7898, file: !349, line: 675, type: !180)
!7902 = !DILocation(line: 675, column: 29, scope: !7898)
!7903 = !DILocation(line: 677, column: 1, scope: !7898)
!7904 = distinct !DISubprogram(name: "check_selinux_attr", scope: !349, file: !349, line: 685, type: !594, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!7905 = !DILocalVariable(name: "name", arg: 1, scope: !7904, file: !349, line: 685, type: !180)
!7906 = !DILocation(line: 685, column: 33, scope: !7904)
!7907 = !DILocalVariable(name: "ctx", arg: 2, scope: !7904, file: !349, line: 685, type: !569)
!7908 = !DILocation(line: 685, column: 61, scope: !7904)
!7909 = !DILocation(line: 687, column: 10, scope: !7904)
!7910 = !DILocation(line: 688, column: 10, scope: !7904)
!7911 = !DILocation(line: 688, column: 42, scope: !7904)
!7912 = !DILocation(line: 688, column: 48, scope: !7904)
!7913 = !DILocation(line: 688, column: 13, scope: !7904)
!7914 = !DILocation(line: 0, scope: !7904)
!7915 = !DILocation(line: 687, column: 3, scope: !7904)
!7916 = distinct !DISubprogram(name: "owner_failure_ok", scope: !349, file: !349, line: 3075, type: !407, scopeLine: 3076, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!7917 = !DILocalVariable(name: "x", arg: 1, scope: !7916, file: !349, line: 3075, type: !356)
!7918 = !DILocation(line: 3075, column: 44, scope: !7916)
!7919 = !DILocation(line: 3077, column: 12, scope: !7916)
!7920 = !DILocation(line: 3077, column: 18, scope: !7916)
!7921 = !DILocation(line: 3077, column: 27, scope: !7916)
!7922 = !DILocation(line: 3077, column: 30, scope: !7916)
!7923 = !DILocation(line: 3077, column: 36, scope: !7916)
!7924 = !DILocation(line: 3077, column: 47, scope: !7916)
!7925 = !DILocation(line: 3077, column: 51, scope: !7916)
!7926 = !DILocation(line: 3077, column: 54, scope: !7916)
!7927 = !{!2813, !2743, i64 27}
!7928 = !DILocation(line: 3077, column: 50, scope: !7916)
!7929 = !DILocation(line: 0, scope: !7916)
!7930 = !DILocation(line: 3077, column: 3, scope: !7916)
!7931 = distinct !DISubprogram(name: "clone_file", scope: !349, file: !349, line: 370, type: !507, scopeLine: 371, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!7932 = !DILocalVariable(name: "dest_fd", arg: 1, scope: !7931, file: !349, line: 370, type: !7)
!7933 = !DILocation(line: 370, column: 17, scope: !7931)
!7934 = !DILocalVariable(name: "src_fd", arg: 2, scope: !7931, file: !349, line: 370, type: !7)
!7935 = !DILocation(line: 370, column: 30, scope: !7931)
!7936 = !DILocation(line: 373, column: 17, scope: !7931)
!7937 = !DILocation(line: 373, column: 35, scope: !7931)
!7938 = !DILocation(line: 373, column: 10, scope: !7931)
!7939 = !DILocation(line: 373, column: 3, scope: !7931)
!7940 = distinct !DISubprogram(name: "io_blksize", scope: !7941, file: !7941, line: 75, type: !509, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!7941 = !DIFile(filename: "src/ioblksize.h", directory: "/home/mbarbar/clone/coreutils")
!7942 = !DILocalVariable(name: "sb", arg: 1, scope: !7940, file: !7941, line: 75, type: !415)
!7943 = !DILocation(line: 75, column: 25, scope: !7940)
!7944 = !DILocation(line: 77, column: 10, scope: !7940)
!7945 = !DILocation(line: 77, column: 3, scope: !7940)
!7946 = distinct !DISubprogram(name: "is_probably_sparse", scope: !349, file: !349, line: 1031, type: !511, scopeLine: 1032, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!7947 = !DILocalVariable(name: "sb", arg: 1, scope: !7946, file: !349, line: 1031, type: !413)
!7948 = !DILocation(line: 1031, column: 40, scope: !7946)
!7949 = !DILocation(line: 1034, column: 14, scope: !7946)
!7950 = !DILocation(line: 1035, column: 11, scope: !7946)
!7951 = !DILocation(line: 1035, column: 14, scope: !7946)
!7952 = !{!2915, !2916, i64 64}
!7953 = !DILocation(line: 1035, column: 33, scope: !7946)
!7954 = !DILocation(line: 1035, column: 37, scope: !7946)
!7955 = !DILocation(line: 1035, column: 45, scope: !7946)
!7956 = !DILocation(line: 1035, column: 31, scope: !7946)
!7957 = !DILocation(line: 0, scope: !7946)
!7958 = !DILocation(line: 1033, column: 3, scope: !7946)
!7959 = distinct !DISubprogram(name: "ptr_align", scope: !207, file: !207, line: 498, type: !513, scopeLine: 499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!7960 = !DILocalVariable(name: "ptr", arg: 1, scope: !7959, file: !207, line: 498, type: !515)
!7961 = !DILocation(line: 498, column: 24, scope: !7959)
!7962 = !DILocalVariable(name: "alignment", arg: 2, scope: !7959, file: !207, line: 498, type: !55)
!7963 = !DILocation(line: 498, column: 36, scope: !7959)
!7964 = !DILocalVariable(name: "p0", scope: !7959, file: !207, line: 500, type: !180)
!7965 = !DILocation(line: 500, column: 15, scope: !7959)
!7966 = !DILocation(line: 500, column: 20, scope: !7959)
!7967 = !DILocalVariable(name: "p1", scope: !7959, file: !207, line: 501, type: !180)
!7968 = !DILocation(line: 501, column: 15, scope: !7959)
!7969 = !DILocation(line: 501, column: 20, scope: !7959)
!7970 = !DILocation(line: 501, column: 25, scope: !7959)
!7971 = !DILocation(line: 501, column: 23, scope: !7959)
!7972 = !DILocation(line: 501, column: 35, scope: !7959)
!7973 = !DILocation(line: 502, column: 20, scope: !7959)
!7974 = !DILocation(line: 502, column: 34, scope: !7959)
!7975 = !DILocation(line: 502, column: 25, scope: !7959)
!7976 = !DILocation(line: 502, column: 39, scope: !7959)
!7977 = !DILocation(line: 502, column: 37, scope: !7959)
!7978 = !DILocation(line: 502, column: 23, scope: !7959)
!7979 = !DILocation(line: 502, column: 3, scope: !7959)
!7980 = distinct !DISubprogram(name: "extent_copy", scope: !349, file: !349, line: 423, type: !517, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!7981 = !DILocalVariable(name: "src_fd", arg: 1, scope: !7980, file: !349, line: 423, type: !7)
!7982 = !DILocation(line: 423, column: 18, scope: !7980)
!7983 = !DILocalVariable(name: "dest_fd", arg: 2, scope: !7980, file: !349, line: 423, type: !7)
!7984 = !DILocation(line: 423, column: 30, scope: !7980)
!7985 = !DILocalVariable(name: "buf", arg: 3, scope: !7980, file: !349, line: 423, type: !9)
!7986 = !DILocation(line: 423, column: 45, scope: !7980)
!7987 = !DILocalVariable(name: "buf_size", arg: 4, scope: !7980, file: !349, line: 423, type: !55)
!7988 = !DILocation(line: 423, column: 57, scope: !7980)
!7989 = !DILocalVariable(name: "hole_size", arg: 5, scope: !7980, file: !349, line: 424, type: !55)
!7990 = !DILocation(line: 424, column: 21, scope: !7980)
!7991 = !DILocalVariable(name: "src_total_size", arg: 6, scope: !7980, file: !349, line: 424, type: !352)
!7992 = !DILocation(line: 424, column: 38, scope: !7980)
!7993 = !DILocalVariable(name: "sparse_mode", arg: 7, scope: !7980, file: !349, line: 425, type: !89)
!7994 = !DILocation(line: 425, column: 31, scope: !7980)
!7995 = !DILocalVariable(name: "src_name", arg: 8, scope: !7980, file: !349, line: 426, type: !180)
!7996 = !DILocation(line: 426, column: 26, scope: !7980)
!7997 = !DILocalVariable(name: "dst_name", arg: 9, scope: !7980, file: !349, line: 426, type: !180)
!7998 = !DILocation(line: 426, column: 48, scope: !7980)
!7999 = !DILocalVariable(name: "require_normal_copy", arg: 10, scope: !7980, file: !349, line: 427, type: !406)
!8000 = !DILocation(line: 427, column: 20, scope: !7980)
!8001 = !DILocalVariable(name: "scan", scope: !7980, file: !349, line: 429, type: !529)
!8002 = !DILocation(line: 429, column: 22, scope: !7980)
!8003 = !DILocalVariable(name: "last_ext_start", scope: !7980, file: !349, line: 430, type: !352)
!8004 = !DILocation(line: 430, column: 9, scope: !7980)
!8005 = !DILocalVariable(name: "last_ext_len", scope: !7980, file: !349, line: 431, type: !352)
!8006 = !DILocation(line: 431, column: 9, scope: !7980)
!8007 = !DILocalVariable(name: "dest_pos", scope: !7980, file: !349, line: 435, type: !352)
!8008 = !DILocation(line: 435, column: 9, scope: !7980)
!8009 = !DILocation(line: 437, column: 21, scope: !7980)
!8010 = !DILocation(line: 437, column: 3, scope: !7980)
!8011 = !DILocation(line: 439, column: 4, scope: !7980)
!8012 = !DILocation(line: 439, column: 24, scope: !7980)
!8013 = !DILocalVariable(name: "wrote_hole_at_eof", scope: !7980, file: !349, line: 440, type: !142)
!8014 = !DILocation(line: 440, column: 8, scope: !7980)
!8015 = !DILocation(line: 441, column: 3, scope: !7980)
!8016 = !DILocalVariable(name: "ok", scope: !8017, file: !349, line: 443, type: !142)
!8017 = distinct !DILexicalBlock(scope: !7980, file: !349, line: 442, column: 5)
!8018 = !DILocation(line: 443, column: 12, scope: !8017)
!8019 = !DILocation(line: 443, column: 17, scope: !8017)
!8020 = !DILocation(line: 444, column: 13, scope: !8021)
!8021 = distinct !DILexicalBlock(scope: !8017, file: !349, line: 444, column: 11)
!8022 = !DILocation(line: 444, column: 11, scope: !8017)
!8023 = !DILocation(line: 446, column: 20, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !8025, file: !349, line: 446, column: 15)
!8025 = distinct !DILexicalBlock(scope: !8021, file: !349, line: 445, column: 9)
!8026 = !{!8027, !2743, i64 33}
!8027 = !{!"extent_scan", !2636, i64 0, !2916, i64 8, !2636, i64 16, !2916, i64 24, !2743, i64 32, !2743, i64 33, !2649, i64 40}
!8028 = !DILocation(line: 446, column: 15, scope: !8025)
!8029 = !DILocation(line: 447, column: 13, scope: !8024)
!8030 = !DILocation(line: 449, column: 20, scope: !8031)
!8031 = distinct !DILexicalBlock(scope: !8025, file: !349, line: 449, column: 15)
!8032 = !{!8027, !2743, i64 32}
!8033 = !DILocation(line: 449, column: 15, scope: !8025)
!8034 = !DILocation(line: 451, column: 16, scope: !8035)
!8035 = distinct !DILexicalBlock(scope: !8031, file: !349, line: 450, column: 13)
!8036 = !DILocation(line: 451, column: 36, scope: !8035)
!8037 = !DILocation(line: 452, column: 15, scope: !8035)
!8038 = !DILocation(line: 455, column: 21, scope: !8025)
!8039 = !DILocation(line: 455, column: 28, scope: !8025)
!8040 = !DILocation(line: 456, column: 18, scope: !8025)
!8041 = !DILocation(line: 455, column: 11, scope: !8025)
!8042 = !DILocation(line: 457, column: 11, scope: !8025)
!8043 = !DILocalVariable(name: "empty_extent", scope: !8017, file: !349, line: 460, type: !142)
!8044 = !DILocation(line: 460, column: 12, scope: !8017)
!8045 = !DILocalVariable(name: "i", scope: !8046, file: !349, line: 461, type: !70)
!8046 = distinct !DILexicalBlock(scope: !8017, file: !349, line: 461, column: 7)
!8047 = !DILocation(line: 461, column: 25, scope: !8046)
!8048 = !DILocation(line: 461, column: 12, scope: !8046)
!8049 = !DILocation(line: 461, column: 32, scope: !8050)
!8050 = distinct !DILexicalBlock(scope: !8046, file: !349, line: 461, column: 7)
!8051 = !DILocation(line: 461, column: 41, scope: !8050)
!8052 = !{!8027, !2916, i64 24}
!8053 = !DILocation(line: 461, column: 34, scope: !8050)
!8054 = !DILocation(line: 461, column: 50, scope: !8050)
!8055 = !DILocation(line: 461, column: 53, scope: !8050)
!8056 = !DILocation(line: 461, column: 7, scope: !8046)
!8057 = !DILocalVariable(name: "ext_start", scope: !8058, file: !349, line: 463, type: !352)
!8058 = distinct !DILexicalBlock(scope: !8050, file: !349, line: 462, column: 9)
!8059 = !DILocation(line: 463, column: 17, scope: !8058)
!8060 = !DILocalVariable(name: "ext_len", scope: !8058, file: !349, line: 464, type: !352)
!8061 = !DILocation(line: 464, column: 17, scope: !8058)
!8062 = !DILocalVariable(name: "ext_hole_size", scope: !8058, file: !349, line: 465, type: !352)
!8063 = !DILocation(line: 465, column: 17, scope: !8058)
!8064 = !DILocation(line: 467, column: 15, scope: !8065)
!8065 = distinct !DILexicalBlock(scope: !8058, file: !349, line: 467, column: 15)
!8066 = !DILocation(line: 467, column: 24, scope: !8065)
!8067 = !DILocation(line: 467, column: 17, scope: !8065)
!8068 = !DILocation(line: 467, column: 15, scope: !8058)
!8069 = !DILocation(line: 469, column: 32, scope: !8070)
!8070 = distinct !DILexicalBlock(scope: !8065, file: !349, line: 468, column: 13)
!8071 = !{!8027, !2649, i64 40}
!8072 = !DILocation(line: 469, column: 41, scope: !8070)
!8073 = !DILocation(line: 469, column: 27, scope: !8070)
!8074 = !DILocation(line: 469, column: 44, scope: !8070)
!8075 = !{!8076, !2916, i64 0}
!8076 = !{!"extent_info", !2916, i64 0, !2916, i64 8, !2636, i64 16}
!8077 = !DILocation(line: 469, column: 25, scope: !8070)
!8078 = !DILocation(line: 470, column: 30, scope: !8070)
!8079 = !DILocation(line: 470, column: 39, scope: !8070)
!8080 = !DILocation(line: 470, column: 25, scope: !8070)
!8081 = !DILocation(line: 470, column: 42, scope: !8070)
!8082 = !{!8076, !2916, i64 8}
!8083 = !DILocation(line: 470, column: 23, scope: !8070)
!8084 = !DILocation(line: 471, column: 13, scope: !8070)
!8085 = !DILocation(line: 474, column: 16, scope: !8086)
!8086 = distinct !DILexicalBlock(scope: !8065, file: !349, line: 473, column: 13)
!8087 = !DILocation(line: 475, column: 27, scope: !8086)
!8088 = !DILocation(line: 475, column: 49, scope: !8086)
!8089 = !DILocation(line: 475, column: 58, scope: !8086)
!8090 = !DILocation(line: 475, column: 44, scope: !8086)
!8091 = !DILocation(line: 475, column: 61, scope: !8086)
!8092 = !DILocation(line: 475, column: 42, scope: !8086)
!8093 = !DILocation(line: 475, column: 25, scope: !8086)
!8094 = !DILocation(line: 476, column: 23, scope: !8086)
!8095 = !DILocation(line: 486, column: 15, scope: !8096)
!8096 = distinct !DILexicalBlock(scope: !8058, file: !349, line: 486, column: 15)
!8097 = !DILocation(line: 486, column: 32, scope: !8096)
!8098 = !DILocation(line: 486, column: 44, scope: !8096)
!8099 = !DILocation(line: 486, column: 42, scope: !8096)
!8100 = !DILocation(line: 486, column: 30, scope: !8096)
!8101 = !DILocation(line: 486, column: 15, scope: !8058)
!8102 = !DILocation(line: 488, column: 19, scope: !8103)
!8103 = distinct !DILexicalBlock(scope: !8104, file: !349, line: 488, column: 19)
!8104 = distinct !DILexicalBlock(scope: !8096, file: !349, line: 487, column: 13)
!8105 = !DILocation(line: 488, column: 36, scope: !8103)
!8106 = !DILocation(line: 488, column: 34, scope: !8103)
!8107 = !DILocation(line: 488, column: 19, scope: !8104)
!8108 = !DILocation(line: 489, column: 29, scope: !8103)
!8109 = !DILocation(line: 489, column: 27, scope: !8103)
!8110 = !DILocation(line: 489, column: 17, scope: !8103)
!8111 = !DILocation(line: 490, column: 25, scope: !8104)
!8112 = !DILocation(line: 490, column: 42, scope: !8104)
!8113 = !DILocation(line: 490, column: 40, scope: !8104)
!8114 = !DILocation(line: 490, column: 23, scope: !8104)
!8115 = !DILocation(line: 491, column: 13, scope: !8104)
!8116 = !DILocation(line: 493, column: 27, scope: !8058)
!8117 = !DILocation(line: 493, column: 39, scope: !8058)
!8118 = !DILocation(line: 493, column: 37, scope: !8058)
!8119 = !DILocation(line: 493, column: 56, scope: !8058)
!8120 = !DILocation(line: 493, column: 54, scope: !8058)
!8121 = !DILocation(line: 493, column: 25, scope: !8058)
!8122 = !DILocation(line: 495, column: 29, scope: !8058)
!8123 = !DILocation(line: 497, column: 15, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !8058, file: !349, line: 497, column: 15)
!8125 = !DILocation(line: 497, column: 15, scope: !8058)
!8126 = !DILocation(line: 499, column: 26, scope: !8127)
!8127 = distinct !DILexicalBlock(scope: !8128, file: !349, line: 499, column: 19)
!8128 = distinct !DILexicalBlock(scope: !8124, file: !349, line: 498, column: 13)
!8129 = !DILocation(line: 499, column: 34, scope: !8127)
!8130 = !DILocation(line: 499, column: 19, scope: !8127)
!8131 = !DILocation(line: 499, column: 55, scope: !8127)
!8132 = !DILocation(line: 499, column: 19, scope: !8128)
!8133 = !DILocation(line: 501, column: 29, scope: !8134)
!8134 = distinct !DILexicalBlock(scope: !8127, file: !349, line: 500, column: 17)
!8135 = !DILocation(line: 501, column: 36, scope: !8134)
!8136 = !DILocation(line: 501, column: 58, scope: !8134)
!8137 = !DILocation(line: 501, column: 19, scope: !8134)
!8138 = !DILabel(scope: !8134, name: "fail", file: !349, line: 502)
!8139 = !DILocation(line: 502, column: 17, scope: !8134)
!8140 = !DILocation(line: 503, column: 19, scope: !8134)
!8141 = !DILocation(line: 504, column: 19, scope: !8134)
!8142 = !DILocation(line: 507, column: 20, scope: !8143)
!8143 = distinct !DILexicalBlock(scope: !8128, file: !349, line: 507, column: 19)
!8144 = !DILocation(line: 507, column: 33, scope: !8143)
!8145 = !DILocation(line: 507, column: 36, scope: !8143)
!8146 = !DILocation(line: 507, column: 48, scope: !8143)
!8147 = !DILocation(line: 508, column: 19, scope: !8143)
!8148 = !DILocation(line: 508, column: 24, scope: !8143)
!8149 = !DILocation(line: 508, column: 37, scope: !8143)
!8150 = !DILocation(line: 508, column: 40, scope: !8143)
!8151 = !DILocation(line: 508, column: 52, scope: !8143)
!8152 = !DILocation(line: 507, column: 19, scope: !8128)
!8153 = !DILocation(line: 510, column: 38, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !8155, file: !349, line: 510, column: 23)
!8155 = distinct !DILexicalBlock(scope: !8143, file: !349, line: 509, column: 17)
!8156 = !DILocation(line: 510, column: 47, scope: !8154)
!8157 = !DILocation(line: 511, column: 38, scope: !8154)
!8158 = !DILocation(line: 511, column: 50, scope: !8154)
!8159 = !DILocation(line: 512, column: 38, scope: !8154)
!8160 = !DILocation(line: 510, column: 25, scope: !8154)
!8161 = !DILocation(line: 510, column: 23, scope: !8155)
!8162 = !DILocation(line: 513, column: 21, scope: !8154)
!8163 = !DILocation(line: 514, column: 37, scope: !8155)
!8164 = !DILocation(line: 515, column: 17, scope: !8155)
!8165 = !DILocalVariable(name: "nzeros", scope: !8166, file: !349, line: 521, type: !352)
!8166 = distinct !DILexicalBlock(scope: !8143, file: !349, line: 517, column: 17)
!8167 = !DILocation(line: 521, column: 25, scope: !8166)
!8168 = !DILocation(line: 521, column: 34, scope: !8166)
!8169 = !DILocation(line: 522, column: 23, scope: !8170)
!8170 = distinct !DILexicalBlock(scope: !8166, file: !349, line: 522, column: 23)
!8171 = !DILocation(line: 522, column: 23, scope: !8166)
!8172 = !DILocation(line: 523, column: 30, scope: !8170)
!8173 = !DILocation(line: 523, column: 28, scope: !8170)
!8174 = !DILocation(line: 523, column: 21, scope: !8170)
!8175 = !DILocation(line: 525, column: 38, scope: !8176)
!8176 = distinct !DILexicalBlock(scope: !8166, file: !349, line: 525, column: 23)
!8177 = !DILocation(line: 525, column: 47, scope: !8176)
!8178 = !DILocation(line: 525, column: 25, scope: !8176)
!8179 = !DILocation(line: 525, column: 23, scope: !8166)
!8180 = !DILocation(line: 527, column: 33, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8176, file: !349, line: 526, column: 21)
!8182 = !DILocation(line: 527, column: 40, scope: !8181)
!8183 = !DILocation(line: 528, column: 30, scope: !8181)
!8184 = !DILocation(line: 527, column: 23, scope: !8181)
!8185 = !DILocation(line: 529, column: 23, scope: !8181)
!8186 = !DILocation(line: 532, column: 30, scope: !8166)
!8187 = !DILocation(line: 532, column: 28, scope: !8166)
!8188 = !DILocation(line: 534, column: 13, scope: !8128)
!8189 = !DILocation(line: 536, column: 28, scope: !8058)
!8190 = !DILocation(line: 536, column: 26, scope: !8058)
!8191 = !DILocalVariable(name: "n_read", scope: !8192, file: !349, line: 553, type: !352)
!8192 = distinct !DILexicalBlock(scope: !8193, file: !349, line: 552, column: 13)
!8193 = distinct !DILexicalBlock(scope: !8058, file: !349, line: 544, column: 15)
!8194 = !DILocation(line: 553, column: 21, scope: !8192)
!8195 = !DILocation(line: 554, column: 28, scope: !8192)
!8196 = !DILocation(line: 555, column: 30, scope: !8192)
!8197 = !DILocation(line: 555, column: 28, scope: !8192)
!8198 = !DILocalVariable(name: "read_hole", scope: !8192, file: !349, line: 556, type: !142)
!8199 = !DILocation(line: 556, column: 20, scope: !8192)
!8200 = !DILocation(line: 558, column: 35, scope: !8201)
!8201 = distinct !DILexicalBlock(scope: !8192, file: !349, line: 558, column: 20)
!8202 = !DILocation(line: 558, column: 43, scope: !8201)
!8203 = !DILocation(line: 558, column: 52, scope: !8201)
!8204 = !DILocation(line: 558, column: 57, scope: !8201)
!8205 = !DILocation(line: 559, column: 35, scope: !8201)
!8206 = !DILocation(line: 559, column: 47, scope: !8201)
!8207 = !DILocation(line: 559, column: 66, scope: !8201)
!8208 = !DILocation(line: 560, column: 41, scope: !8201)
!8209 = !DILocation(line: 560, column: 51, scope: !8201)
!8210 = !DILocation(line: 560, column: 61, scope: !8201)
!8211 = !DILocation(line: 558, column: 22, scope: !8201)
!8212 = !DILocation(line: 558, column: 20, scope: !8192)
!8213 = !DILocation(line: 562, column: 17, scope: !8201)
!8214 = !DILocation(line: 564, column: 26, scope: !8192)
!8215 = !DILocation(line: 564, column: 38, scope: !8192)
!8216 = !DILocation(line: 564, column: 36, scope: !8192)
!8217 = !DILocation(line: 564, column: 24, scope: !8192)
!8218 = !DILocation(line: 565, column: 19, scope: !8219)
!8219 = distinct !DILexicalBlock(scope: !8192, file: !349, line: 565, column: 19)
!8220 = !DILocation(line: 565, column: 19, scope: !8192)
!8221 = !DILocation(line: 566, column: 37, scope: !8219)
!8222 = !DILocation(line: 566, column: 35, scope: !8219)
!8223 = !DILocation(line: 566, column: 17, scope: !8219)
!8224 = !DILocation(line: 574, column: 15, scope: !8225)
!8225 = distinct !DILexicalBlock(scope: !8058, file: !349, line: 574, column: 15)
!8226 = !DILocation(line: 574, column: 27, scope: !8225)
!8227 = !DILocation(line: 574, column: 24, scope: !8225)
!8228 = !DILocation(line: 574, column: 15, scope: !8058)
!8229 = !DILocation(line: 576, column: 20, scope: !8230)
!8230 = distinct !DILexicalBlock(scope: !8225, file: !349, line: 575, column: 13)
!8231 = !DILocation(line: 576, column: 37, scope: !8230)
!8232 = !DILocation(line: 577, column: 15, scope: !8230)
!8233 = !DILocation(line: 579, column: 9, scope: !8058)
!8234 = !DILocation(line: 461, column: 68, scope: !8050)
!8235 = !DILocation(line: 461, column: 7, scope: !8050)
!8236 = distinct !{!8236, !8056, !8237}
!8237 = !DILocation(line: 579, column: 9, scope: !8046)
!8238 = !DILocation(line: 582, column: 7, scope: !8017)
!8239 = !DILocation(line: 584, column: 5, scope: !8017)
!8240 = !DILocation(line: 585, column: 17, scope: !7980)
!8241 = !DILocation(line: 585, column: 10, scope: !7980)
!8242 = distinct !{!8242, !8015, !8243}
!8243 = !DILocation(line: 585, column: 33, scope: !7980)
!8244 = !DILocation(line: 595, column: 8, scope: !8245)
!8245 = distinct !DILexicalBlock(scope: !7980, file: !349, line: 595, column: 7)
!8246 = !DILocation(line: 595, column: 19, scope: !8245)
!8247 = !DILocation(line: 595, column: 17, scope: !8245)
!8248 = !DILocation(line: 595, column: 34, scope: !8245)
!8249 = !DILocation(line: 595, column: 37, scope: !8245)
!8250 = !DILocation(line: 596, column: 7, scope: !8245)
!8251 = !DILocation(line: 596, column: 11, scope: !8245)
!8252 = !DILocation(line: 596, column: 23, scope: !8245)
!8253 = !DILocation(line: 595, column: 7, scope: !7980)
!8254 = !DILocation(line: 597, column: 24, scope: !8245)
!8255 = !DILocation(line: 597, column: 33, scope: !8245)
!8256 = !DILocation(line: 597, column: 13, scope: !8245)
!8257 = !DILocation(line: 598, column: 28, scope: !8245)
!8258 = !DILocation(line: 598, column: 37, scope: !8245)
!8259 = !DILocation(line: 598, column: 54, scope: !8245)
!8260 = !DILocation(line: 598, column: 52, scope: !8245)
!8261 = !DILocation(line: 598, column: 15, scope: !8245)
!8262 = !DILocation(line: 600, column: 17, scope: !8263)
!8263 = distinct !DILexicalBlock(scope: !8245, file: !349, line: 599, column: 5)
!8264 = !DILocation(line: 600, column: 24, scope: !8263)
!8265 = !DILocation(line: 600, column: 50, scope: !8263)
!8266 = !DILocation(line: 600, column: 7, scope: !8263)
!8267 = !DILocation(line: 601, column: 7, scope: !8263)
!8268 = !DILocation(line: 604, column: 7, scope: !8269)
!8269 = distinct !DILexicalBlock(scope: !7980, file: !349, line: 604, column: 7)
!8270 = !DILocation(line: 604, column: 19, scope: !8269)
!8271 = !DILocation(line: 604, column: 36, scope: !8269)
!8272 = !DILocation(line: 604, column: 39, scope: !8269)
!8273 = !DILocation(line: 604, column: 50, scope: !8269)
!8274 = !DILocation(line: 604, column: 48, scope: !8269)
!8275 = !DILocation(line: 605, column: 7, scope: !8269)
!8276 = !DILocation(line: 605, column: 22, scope: !8269)
!8277 = !DILocation(line: 605, column: 31, scope: !8269)
!8278 = !DILocation(line: 605, column: 41, scope: !8269)
!8279 = !DILocation(line: 605, column: 58, scope: !8269)
!8280 = !DILocation(line: 605, column: 56, scope: !8269)
!8281 = !DILocation(line: 605, column: 10, scope: !8269)
!8282 = !DILocation(line: 605, column: 68, scope: !8269)
!8283 = !DILocation(line: 604, column: 7, scope: !7980)
!8284 = !DILocation(line: 607, column: 17, scope: !8285)
!8285 = distinct !DILexicalBlock(scope: !8269, file: !349, line: 606, column: 5)
!8286 = !DILocation(line: 607, column: 24, scope: !8285)
!8287 = !DILocation(line: 607, column: 52, scope: !8285)
!8288 = !DILocation(line: 607, column: 7, scope: !8285)
!8289 = !DILocation(line: 608, column: 7, scope: !8285)
!8290 = !DILocation(line: 611, column: 3, scope: !7980)
!8291 = !DILocation(line: 612, column: 1, scope: !7980)
!8292 = distinct !DISubprogram(name: "sparse_copy", scope: !349, file: !349, line: 260, type: !544, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!8293 = !DILocalVariable(name: "src_fd", arg: 1, scope: !8292, file: !349, line: 260, type: !7)
!8294 = !DILocation(line: 260, column: 18, scope: !8292)
!8295 = !DILocalVariable(name: "dest_fd", arg: 2, scope: !8292, file: !349, line: 260, type: !7)
!8296 = !DILocation(line: 260, column: 30, scope: !8292)
!8297 = !DILocalVariable(name: "buf", arg: 3, scope: !8292, file: !349, line: 260, type: !9)
!8298 = !DILocation(line: 260, column: 45, scope: !8292)
!8299 = !DILocalVariable(name: "buf_size", arg: 4, scope: !8292, file: !349, line: 260, type: !55)
!8300 = !DILocation(line: 260, column: 57, scope: !8292)
!8301 = !DILocalVariable(name: "hole_size", arg: 5, scope: !8292, file: !349, line: 261, type: !55)
!8302 = !DILocation(line: 261, column: 21, scope: !8292)
!8303 = !DILocalVariable(name: "punch_holes", arg: 6, scope: !8292, file: !349, line: 261, type: !142)
!8304 = !DILocation(line: 261, column: 37, scope: !8292)
!8305 = !DILocalVariable(name: "src_name", arg: 7, scope: !8292, file: !349, line: 262, type: !180)
!8306 = !DILocation(line: 262, column: 26, scope: !8292)
!8307 = !DILocalVariable(name: "dst_name", arg: 8, scope: !8292, file: !349, line: 262, type: !180)
!8308 = !DILocation(line: 262, column: 48, scope: !8292)
!8309 = !DILocalVariable(name: "max_n_read", arg: 9, scope: !8292, file: !349, line: 263, type: !546)
!8310 = !DILocation(line: 263, column: 24, scope: !8292)
!8311 = !DILocalVariable(name: "total_n_read", arg: 10, scope: !8292, file: !349, line: 263, type: !549)
!8312 = !DILocation(line: 263, column: 43, scope: !8292)
!8313 = !DILocalVariable(name: "last_write_made_hole", arg: 11, scope: !8292, file: !349, line: 264, type: !406)
!8314 = !DILocation(line: 264, column: 20, scope: !8292)
!8315 = !DILocation(line: 266, column: 4, scope: !8292)
!8316 = !DILocation(line: 266, column: 25, scope: !8292)
!8317 = !DILocation(line: 267, column: 4, scope: !8292)
!8318 = !DILocation(line: 267, column: 17, scope: !8292)
!8319 = !DILocalVariable(name: "make_hole", scope: !8292, file: !349, line: 268, type: !142)
!8320 = !DILocation(line: 268, column: 8, scope: !8292)
!8321 = !DILocalVariable(name: "psize", scope: !8292, file: !349, line: 269, type: !352)
!8322 = !DILocation(line: 269, column: 9, scope: !8292)
!8323 = !DILocation(line: 271, column: 3, scope: !8292)
!8324 = !DILocation(line: 271, column: 10, scope: !8292)
!8325 = !DILocalVariable(name: "n_read", scope: !8326, file: !349, line: 273, type: !550)
!8326 = distinct !DILexicalBlock(scope: !8292, file: !349, line: 272, column: 5)
!8327 = !DILocation(line: 273, column: 15, scope: !8326)
!8328 = !DILocation(line: 273, column: 30, scope: !8326)
!8329 = !DILocation(line: 273, column: 38, scope: !8326)
!8330 = !DILocation(line: 273, column: 43, scope: !8326)
!8331 = !DILocation(line: 273, column: 24, scope: !8326)
!8332 = !DILocation(line: 274, column: 11, scope: !8333)
!8333 = distinct !DILexicalBlock(scope: !8326, file: !349, line: 274, column: 11)
!8334 = !DILocation(line: 274, column: 18, scope: !8333)
!8335 = !DILocation(line: 274, column: 11, scope: !8326)
!8336 = !DILocation(line: 276, column: 15, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8338, file: !349, line: 276, column: 15)
!8338 = distinct !DILexicalBlock(scope: !8333, file: !349, line: 275, column: 9)
!8339 = !DILocation(line: 276, column: 21, scope: !8337)
!8340 = !DILocation(line: 276, column: 15, scope: !8338)
!8341 = !DILocation(line: 277, column: 13, scope: !8337)
!8342 = distinct !{!8342, !8323, !8343}
!8343 = !DILocation(line: 357, column: 5, scope: !8292)
!8344 = !DILocation(line: 278, column: 21, scope: !8338)
!8345 = !DILocation(line: 278, column: 28, scope: !8338)
!8346 = !DILocation(line: 278, column: 51, scope: !8338)
!8347 = !DILocation(line: 278, column: 11, scope: !8338)
!8348 = !DILocation(line: 279, column: 11, scope: !8338)
!8349 = !DILocation(line: 281, column: 11, scope: !8350)
!8350 = distinct !DILexicalBlock(scope: !8326, file: !349, line: 281, column: 11)
!8351 = !DILocation(line: 281, column: 18, scope: !8350)
!8352 = !DILocation(line: 281, column: 11, scope: !8326)
!8353 = !DILocation(line: 282, column: 9, scope: !8350)
!8354 = !DILocation(line: 283, column: 21, scope: !8326)
!8355 = !DILocation(line: 283, column: 18, scope: !8326)
!8356 = !DILocation(line: 284, column: 24, scope: !8326)
!8357 = !DILocation(line: 284, column: 8, scope: !8326)
!8358 = !DILocation(line: 284, column: 21, scope: !8326)
!8359 = !DILocalVariable(name: "csize", scope: !8326, file: !349, line: 287, type: !55)
!8360 = !DILocation(line: 287, column: 14, scope: !8326)
!8361 = !DILocation(line: 287, column: 22, scope: !8326)
!8362 = !DILocation(line: 287, column: 34, scope: !8326)
!8363 = !DILocation(line: 287, column: 46, scope: !8326)
!8364 = !DILocalVariable(name: "cbuf", scope: !8326, file: !349, line: 288, type: !9)
!8365 = !DILocation(line: 288, column: 13, scope: !8326)
!8366 = !DILocation(line: 288, column: 20, scope: !8326)
!8367 = !DILocalVariable(name: "pbuf", scope: !8326, file: !349, line: 289, type: !9)
!8368 = !DILocation(line: 289, column: 13, scope: !8326)
!8369 = !DILocation(line: 289, column: 20, scope: !8326)
!8370 = !DILocation(line: 291, column: 7, scope: !8326)
!8371 = !DILocation(line: 291, column: 14, scope: !8326)
!8372 = !DILocalVariable(name: "prev_hole", scope: !8373, file: !349, line: 293, type: !142)
!8373 = distinct !DILexicalBlock(scope: !8326, file: !349, line: 292, column: 9)
!8374 = !DILocation(line: 293, column: 16, scope: !8373)
!8375 = !DILocation(line: 293, column: 28, scope: !8373)
!8376 = !DILocation(line: 294, column: 19, scope: !8373)
!8377 = !DILocation(line: 294, column: 17, scope: !8373)
!8378 = !DILocation(line: 296, column: 15, scope: !8379)
!8379 = distinct !DILexicalBlock(scope: !8373, file: !349, line: 296, column: 15)
!8380 = !DILocation(line: 296, column: 25, scope: !8379)
!8381 = !DILocation(line: 296, column: 28, scope: !8379)
!8382 = !DILocation(line: 296, column: 15, scope: !8373)
!8383 = !DILocation(line: 297, column: 33, scope: !8379)
!8384 = !DILocation(line: 297, column: 39, scope: !8379)
!8385 = !DILocation(line: 297, column: 25, scope: !8379)
!8386 = !DILocation(line: 297, column: 23, scope: !8379)
!8387 = !DILocation(line: 297, column: 13, scope: !8379)
!8388 = !DILocalVariable(name: "transition", scope: !8373, file: !349, line: 299, type: !142)
!8389 = !DILocation(line: 299, column: 16, scope: !8373)
!8390 = !DILocation(line: 299, column: 30, scope: !8373)
!8391 = !DILocation(line: 299, column: 43, scope: !8373)
!8392 = !DILocation(line: 299, column: 40, scope: !8373)
!8393 = !DILocation(line: 299, column: 54, scope: !8373)
!8394 = !DILocation(line: 299, column: 57, scope: !8373)
!8395 = !DILocation(line: 0, scope: !8373)
!8396 = !DILocalVariable(name: "last_chunk", scope: !8373, file: !349, line: 300, type: !142)
!8397 = !DILocation(line: 300, column: 16, scope: !8373)
!8398 = !DILocation(line: 300, column: 30, scope: !8373)
!8399 = !DILocation(line: 300, column: 40, scope: !8373)
!8400 = !DILocation(line: 300, column: 37, scope: !8373)
!8401 = !DILocation(line: 300, column: 46, scope: !8373)
!8402 = !DILocation(line: 300, column: 51, scope: !8373)
!8403 = !DILocation(line: 300, column: 62, scope: !8373)
!8404 = !DILocation(line: 300, column: 67, scope: !8373)
!8405 = !DILocation(line: 300, column: 65, scope: !8373)
!8406 = !DILocation(line: 302, column: 15, scope: !8407)
!8407 = distinct !DILexicalBlock(scope: !8373, file: !349, line: 302, column: 15)
!8408 = !DILocation(line: 302, column: 26, scope: !8407)
!8409 = !DILocation(line: 302, column: 29, scope: !8407)
!8410 = !DILocation(line: 302, column: 15, scope: !8373)
!8411 = !DILocation(line: 304, column: 21, scope: !8412)
!8412 = distinct !DILexicalBlock(scope: !8413, file: !349, line: 304, column: 19)
!8413 = distinct !DILexicalBlock(scope: !8407, file: !349, line: 303, column: 13)
!8414 = !DILocation(line: 304, column: 19, scope: !8413)
!8415 = !DILocation(line: 305, column: 26, scope: !8412)
!8416 = !DILocation(line: 305, column: 23, scope: !8412)
!8417 = !DILocation(line: 305, column: 17, scope: !8412)
!8418 = !DILocation(line: 307, column: 21, scope: !8419)
!8419 = distinct !DILexicalBlock(scope: !8413, file: !349, line: 307, column: 19)
!8420 = !DILocation(line: 307, column: 19, scope: !8413)
!8421 = !DILocation(line: 309, column: 35, scope: !8422)
!8422 = distinct !DILexicalBlock(scope: !8423, file: !349, line: 309, column: 23)
!8423 = distinct !DILexicalBlock(scope: !8419, file: !349, line: 308, column: 17)
!8424 = !DILocation(line: 309, column: 44, scope: !8422)
!8425 = !DILocation(line: 309, column: 50, scope: !8422)
!8426 = !DILocation(line: 309, column: 23, scope: !8422)
!8427 = !DILocation(line: 309, column: 60, scope: !8422)
!8428 = !DILocation(line: 309, column: 57, scope: !8422)
!8429 = !DILocation(line: 309, column: 23, scope: !8423)
!8430 = !DILocation(line: 311, column: 33, scope: !8431)
!8431 = distinct !DILexicalBlock(scope: !8422, file: !349, line: 310, column: 21)
!8432 = !DILocation(line: 311, column: 40, scope: !8431)
!8433 = !DILocation(line: 312, column: 30, scope: !8431)
!8434 = !DILocation(line: 311, column: 23, scope: !8431)
!8435 = !DILocation(line: 313, column: 23, scope: !8431)
!8436 = !DILocation(line: 315, column: 17, scope: !8423)
!8437 = !DILocation(line: 318, column: 38, scope: !8438)
!8438 = distinct !DILexicalBlock(scope: !8439, file: !349, line: 318, column: 23)
!8439 = distinct !DILexicalBlock(scope: !8419, file: !349, line: 317, column: 17)
!8440 = !DILocation(line: 318, column: 47, scope: !8438)
!8441 = !DILocation(line: 318, column: 57, scope: !8438)
!8442 = !DILocation(line: 318, column: 70, scope: !8438)
!8443 = !DILocation(line: 318, column: 25, scope: !8438)
!8444 = !DILocation(line: 318, column: 23, scope: !8439)
!8445 = !DILocation(line: 319, column: 21, scope: !8438)
!8446 = !DILocation(line: 322, column: 22, scope: !8413)
!8447 = !DILocation(line: 322, column: 20, scope: !8413)
!8448 = !DILocation(line: 323, column: 23, scope: !8413)
!8449 = !DILocation(line: 323, column: 21, scope: !8413)
!8450 = !DILocation(line: 325, column: 19, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8413, file: !349, line: 325, column: 19)
!8452 = !DILocation(line: 325, column: 19, scope: !8413)
!8453 = !DILocation(line: 327, column: 25, scope: !8454)
!8454 = distinct !DILexicalBlock(scope: !8455, file: !349, line: 327, column: 23)
!8455 = distinct !DILexicalBlock(scope: !8451, file: !349, line: 326, column: 17)
!8456 = !DILocation(line: 327, column: 23, scope: !8455)
!8457 = !DILocation(line: 328, column: 28, scope: !8454)
!8458 = !DILocation(line: 328, column: 21, scope: !8454)
!8459 = !DILocation(line: 330, column: 23, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !8455, file: !349, line: 330, column: 23)
!8461 = !DILocation(line: 330, column: 23, scope: !8455)
!8462 = !DILocation(line: 331, column: 27, scope: !8460)
!8463 = !DILocation(line: 331, column: 21, scope: !8460)
!8464 = !DILocation(line: 333, column: 27, scope: !8460)
!8465 = !DILocation(line: 334, column: 17, scope: !8455)
!8466 = !DILocation(line: 335, column: 13, scope: !8413)
!8467 = !DILocation(line: 338, column: 19, scope: !8468)
!8468 = distinct !DILexicalBlock(scope: !8469, file: !349, line: 338, column: 19)
!8469 = distinct !DILexicalBlock(scope: !8407, file: !349, line: 337, column: 13)
!8470 = !DILocation(line: 338, column: 40, scope: !8468)
!8471 = !DILocation(line: 338, column: 38, scope: !8468)
!8472 = !DILocation(line: 338, column: 25, scope: !8468)
!8473 = !DILocation(line: 338, column: 19, scope: !8469)
!8474 = !DILocation(line: 339, column: 26, scope: !8468)
!8475 = !DILocation(line: 339, column: 23, scope: !8468)
!8476 = !DILocation(line: 339, column: 17, scope: !8468)
!8477 = !DILocation(line: 342, column: 32, scope: !8478)
!8478 = distinct !DILexicalBlock(scope: !8468, file: !349, line: 341, column: 17)
!8479 = !DILocation(line: 342, column: 58, scope: !8478)
!8480 = !DILocation(line: 342, column: 19, scope: !8478)
!8481 = !DILocation(line: 343, column: 19, scope: !8478)
!8482 = !DILocation(line: 347, column: 21, scope: !8373)
!8483 = !DILocation(line: 347, column: 18, scope: !8373)
!8484 = !DILocation(line: 348, column: 19, scope: !8373)
!8485 = !DILocation(line: 348, column: 16, scope: !8373)
!8486 = distinct !{!8486, !8370, !8487}
!8487 = !DILocation(line: 349, column: 9, scope: !8326)
!8488 = !DILocation(line: 351, column: 31, scope: !8326)
!8489 = !DILocation(line: 351, column: 8, scope: !8326)
!8490 = !DILocation(line: 351, column: 29, scope: !8326)
!8491 = !DILocation(line: 361, column: 7, scope: !8492)
!8492 = distinct !DILexicalBlock(scope: !8292, file: !349, line: 361, column: 7)
!8493 = !DILocation(line: 361, column: 17, scope: !8492)
!8494 = !DILocation(line: 361, column: 35, scope: !8492)
!8495 = !DILocation(line: 361, column: 44, scope: !8492)
!8496 = !DILocation(line: 361, column: 54, scope: !8492)
!8497 = !DILocation(line: 361, column: 67, scope: !8492)
!8498 = !DILocation(line: 361, column: 22, scope: !8492)
!8499 = !DILocation(line: 361, column: 7, scope: !8292)
!8500 = !DILocation(line: 362, column: 5, scope: !8492)
!8501 = !DILocation(line: 364, column: 5, scope: !8492)
!8502 = !DILocation(line: 365, column: 1, scope: !8292)
!8503 = distinct !DISubprogram(name: "fchmod_or_lchmod", scope: !349, file: !349, line: 1013, type: !557, scopeLine: 1014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!8504 = !DILocalVariable(name: "desc", arg: 1, scope: !8503, file: !349, line: 1013, type: !7)
!8505 = !DILocation(line: 1013, column: 23, scope: !8503)
!8506 = !DILocalVariable(name: "name", arg: 2, scope: !8503, file: !349, line: 1013, type: !180)
!8507 = !DILocation(line: 1013, column: 41, scope: !8503)
!8508 = !DILocalVariable(name: "mode", arg: 3, scope: !8503, file: !349, line: 1013, type: !139)
!8509 = !DILocation(line: 1013, column: 54, scope: !8503)
!8510 = !DILocation(line: 1016, column: 12, scope: !8511)
!8511 = distinct !DILexicalBlock(scope: !8503, file: !349, line: 1016, column: 7)
!8512 = !DILocation(line: 1016, column: 9, scope: !8511)
!8513 = !DILocation(line: 1016, column: 7, scope: !8503)
!8514 = !DILocation(line: 1017, column: 20, scope: !8511)
!8515 = !DILocation(line: 1017, column: 26, scope: !8511)
!8516 = !DILocation(line: 1017, column: 12, scope: !8511)
!8517 = !DILocation(line: 1017, column: 5, scope: !8511)
!8518 = !DILocation(line: 1019, column: 18, scope: !8503)
!8519 = !DILocation(line: 1019, column: 24, scope: !8503)
!8520 = !DILocation(line: 1019, column: 10, scope: !8503)
!8521 = !DILocation(line: 1019, column: 3, scope: !8503)
!8522 = !DILocation(line: 1020, column: 1, scope: !8503)
!8523 = distinct !DISubprogram(name: "is_nul", scope: !207, file: !207, line: 509, type: !552, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!8524 = !DILocalVariable(name: "buf", arg: 1, scope: !8523, file: !207, line: 509, type: !515)
!8525 = !DILocation(line: 509, column: 21, scope: !8523)
!8526 = !DILocalVariable(name: "length", arg: 2, scope: !8523, file: !207, line: 509, type: !55)
!8527 = !DILocation(line: 509, column: 33, scope: !8523)
!8528 = !DILocalVariable(name: "p", scope: !8523, file: !207, line: 511, type: !554)
!8529 = !DILocation(line: 511, column: 24, scope: !8523)
!8530 = !DILocation(line: 511, column: 28, scope: !8523)
!8531 = !DILocalVariable(name: "word", scope: !8523, file: !207, line: 521, type: !556)
!8532 = !DILocation(line: 521, column: 17, scope: !8523)
!8533 = !DILocation(line: 524, column: 9, scope: !8534)
!8534 = distinct !DILexicalBlock(scope: !8523, file: !207, line: 524, column: 7)
!8535 = !DILocation(line: 524, column: 7, scope: !8523)
!8536 = !DILocation(line: 525, column: 7, scope: !8534)
!8537 = !DILocation(line: 528, column: 3, scope: !8523)
!8538 = !DILocation(line: 528, column: 10, scope: !8523)
!8539 = !DILocation(line: 530, column: 12, scope: !8540)
!8540 = distinct !DILexicalBlock(scope: !8541, file: !207, line: 530, column: 11)
!8541 = distinct !DILexicalBlock(scope: !8523, file: !207, line: 529, column: 5)
!8542 = !DILocation(line: 530, column: 11, scope: !8540)
!8543 = !DILocation(line: 530, column: 11, scope: !8541)
!8544 = !DILocation(line: 531, column: 9, scope: !8540)
!8545 = !DILocation(line: 532, column: 8, scope: !8541)
!8546 = !DILocation(line: 533, column: 13, scope: !8541)
!8547 = !DILocation(line: 534, column: 13, scope: !8548)
!8548 = distinct !DILexicalBlock(scope: !8541, file: !207, line: 534, column: 11)
!8549 = !DILocation(line: 534, column: 11, scope: !8541)
!8550 = !DILocation(line: 535, column: 9, scope: !8548)
!8551 = distinct !{!8551, !8537, !8552}
!8552 = !DILocation(line: 536, column: 4, scope: !8523)
!8553 = !DILocation(line: 539, column: 3, scope: !8523)
!8554 = !DILocation(line: 541, column: 22, scope: !8555)
!8555 = distinct !DILexicalBlock(scope: !8556, file: !207, line: 540, column: 5)
!8556 = distinct !DILexicalBlock(scope: !8557, file: !207, line: 539, column: 3)
!8557 = distinct !DILexicalBlock(scope: !8523, file: !207, line: 539, column: 3)
!8558 = !DILocation(line: 541, column: 7, scope: !8555)
!8559 = !DILocation(line: 542, column: 11, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8555, file: !207, line: 542, column: 11)
!8561 = !DILocation(line: 542, column: 11, scope: !8555)
!8562 = !DILocation(line: 543, column: 9, scope: !8560)
!8563 = !DILocation(line: 544, column: 9, scope: !8555)
!8564 = !DILocation(line: 545, column: 14, scope: !8555)
!8565 = !DILocation(line: 546, column: 13, scope: !8566)
!8566 = distinct !DILexicalBlock(scope: !8555, file: !207, line: 546, column: 11)
!8567 = !DILocation(line: 546, column: 11, scope: !8555)
!8568 = !DILocation(line: 547, column: 9, scope: !8566)
!8569 = !DILocation(line: 548, column: 11, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !8555, file: !207, line: 548, column: 11)
!8571 = !DILocation(line: 548, column: 34, scope: !8570)
!8572 = !DILocation(line: 548, column: 11, scope: !8555)
!8573 = !DILocation(line: 549, column: 9, scope: !8570)
!8574 = !DILocation(line: 539, column: 3, scope: !8556)
!8575 = distinct !{!8575, !8576, !8577}
!8576 = !DILocation(line: 539, column: 3, scope: !8557)
!8577 = !DILocation(line: 550, column: 4, scope: !8557)
!8578 = !DILocation(line: 553, column: 19, scope: !8523)
!8579 = !DILocation(line: 553, column: 24, scope: !8523)
!8580 = !DILocation(line: 553, column: 27, scope: !8523)
!8581 = !DILocation(line: 553, column: 11, scope: !8523)
!8582 = !DILocation(line: 553, column: 35, scope: !8523)
!8583 = !DILocation(line: 553, column: 4, scope: !8523)
!8584 = !DILocation(line: 554, column: 1, scope: !8523)
!8585 = distinct !DISubprogram(name: "create_hole", scope: !349, file: !349, line: 224, type: !538, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!8586 = !DILocalVariable(name: "fd", arg: 1, scope: !8585, file: !349, line: 224, type: !7)
!8587 = !DILocation(line: 224, column: 18, scope: !8585)
!8588 = !DILocalVariable(name: "name", arg: 2, scope: !8585, file: !349, line: 224, type: !180)
!8589 = !DILocation(line: 224, column: 34, scope: !8585)
!8590 = !DILocalVariable(name: "punch_holes", arg: 3, scope: !8585, file: !349, line: 224, type: !142)
!8591 = !DILocation(line: 224, column: 45, scope: !8585)
!8592 = !DILocalVariable(name: "size", arg: 4, scope: !8585, file: !349, line: 224, type: !352)
!8593 = !DILocation(line: 224, column: 64, scope: !8585)
!8594 = !DILocalVariable(name: "file_end", scope: !8585, file: !349, line: 226, type: !352)
!8595 = !DILocation(line: 226, column: 9, scope: !8585)
!8596 = !DILocation(line: 226, column: 27, scope: !8585)
!8597 = !DILocation(line: 226, column: 31, scope: !8585)
!8598 = !DILocation(line: 226, column: 20, scope: !8585)
!8599 = !DILocation(line: 228, column: 7, scope: !8600)
!8600 = distinct !DILexicalBlock(scope: !8585, file: !349, line: 228, column: 7)
!8601 = !DILocation(line: 228, column: 16, scope: !8600)
!8602 = !DILocation(line: 228, column: 7, scope: !8585)
!8603 = !DILocation(line: 230, column: 17, scope: !8604)
!8604 = distinct !DILexicalBlock(scope: !8600, file: !349, line: 229, column: 5)
!8605 = !DILocation(line: 230, column: 24, scope: !8604)
!8606 = !DILocation(line: 230, column: 46, scope: !8604)
!8607 = !DILocation(line: 230, column: 7, scope: !8604)
!8608 = !DILocation(line: 231, column: 7, scope: !8604)
!8609 = !DILocation(line: 238, column: 7, scope: !8610)
!8610 = distinct !DILexicalBlock(scope: !8585, file: !349, line: 238, column: 7)
!8611 = !DILocation(line: 238, column: 19, scope: !8610)
!8612 = !DILocation(line: 238, column: 34, scope: !8610)
!8613 = !DILocation(line: 238, column: 38, scope: !8610)
!8614 = !DILocation(line: 238, column: 49, scope: !8610)
!8615 = !DILocation(line: 238, column: 47, scope: !8610)
!8616 = !DILocation(line: 238, column: 55, scope: !8610)
!8617 = !DILocation(line: 238, column: 22, scope: !8610)
!8618 = !DILocation(line: 238, column: 61, scope: !8610)
!8619 = !DILocation(line: 238, column: 7, scope: !8585)
!8620 = !DILocation(line: 240, column: 17, scope: !8621)
!8621 = distinct !DILexicalBlock(scope: !8610, file: !349, line: 239, column: 5)
!8622 = !DILocation(line: 240, column: 24, scope: !8621)
!8623 = !DILocation(line: 240, column: 52, scope: !8621)
!8624 = !DILocation(line: 240, column: 7, scope: !8621)
!8625 = !DILocation(line: 241, column: 7, scope: !8621)
!8626 = !DILocation(line: 244, column: 3, scope: !8585)
!8627 = !DILocation(line: 245, column: 1, scope: !8585)
!8628 = distinct !DISubprogram(name: "punch_hole", scope: !349, file: !349, line: 205, type: !542, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!8629 = !DILocalVariable(name: "fd", arg: 1, scope: !8628, file: !349, line: 205, type: !7)
!8630 = !DILocation(line: 205, column: 17, scope: !8628)
!8631 = !DILocalVariable(name: "offset", arg: 2, scope: !8628, file: !349, line: 205, type: !352)
!8632 = !DILocation(line: 205, column: 27, scope: !8628)
!8633 = !DILocalVariable(name: "length", arg: 3, scope: !8628, file: !349, line: 205, type: !352)
!8634 = !DILocation(line: 205, column: 41, scope: !8628)
!8635 = !DILocalVariable(name: "ret", scope: !8628, file: !349, line: 207, type: !7)
!8636 = !DILocation(line: 207, column: 7, scope: !8628)
!8637 = !DILocation(line: 211, column: 20, scope: !8628)
!8638 = !DILocation(line: 212, column: 20, scope: !8628)
!8639 = !DILocation(line: 212, column: 28, scope: !8628)
!8640 = !DILocation(line: 211, column: 9, scope: !8628)
!8641 = !DILocation(line: 211, column: 7, scope: !8628)
!8642 = !DILocation(line: 213, column: 7, scope: !8643)
!8643 = distinct !DILexicalBlock(scope: !8628, file: !349, line: 213, column: 7)
!8644 = !DILocation(line: 213, column: 11, scope: !8643)
!8645 = !DILocation(line: 213, column: 15, scope: !8643)
!8646 = !DILocation(line: 213, column: 31, scope: !8643)
!8647 = !DILocation(line: 213, column: 19, scope: !8643)
!8648 = !DILocation(line: 213, column: 38, scope: !8643)
!8649 = !DILocation(line: 213, column: 41, scope: !8643)
!8650 = !DILocation(line: 213, column: 47, scope: !8643)
!8651 = !DILocation(line: 213, column: 7, scope: !8628)
!8652 = !DILocation(line: 214, column: 9, scope: !8643)
!8653 = !DILocation(line: 214, column: 5, scope: !8643)
!8654 = !DILocation(line: 217, column: 10, scope: !8628)
!8655 = !DILocation(line: 217, column: 3, scope: !8628)
!8656 = distinct !DISubprogram(name: "is_ENOTSUP", scope: !207, file: !207, line: 762, type: !256, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!8657 = !DILocalVariable(name: "err", arg: 1, scope: !8656, file: !207, line: 762, type: !7)
!8658 = !DILocation(line: 762, column: 17, scope: !8656)
!8659 = !DILocation(line: 764, column: 10, scope: !8656)
!8660 = !DILocation(line: 764, column: 14, scope: !8656)
!8661 = !DILocation(line: 764, column: 28, scope: !8656)
!8662 = !DILocation(line: 764, column: 3, scope: !8656)
!8663 = distinct !DISubprogram(name: "extent_scan_free", scope: !521, file: !521, line: 66, type: !526, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!8664 = !DILocalVariable(name: "scan", arg: 1, scope: !8663, file: !521, line: 66, type: !528)
!8665 = !DILocation(line: 66, column: 39, scope: !8663)
!8666 = !DILocation(line: 68, column: 9, scope: !8663)
!8667 = !DILocation(line: 68, column: 15, scope: !8663)
!8668 = !DILocation(line: 68, column: 3, scope: !8663)
!8669 = !DILocation(line: 69, column: 3, scope: !8663)
!8670 = !DILocation(line: 69, column: 9, scope: !8663)
!8671 = !DILocation(line: 69, column: 18, scope: !8663)
!8672 = !DILocation(line: 70, column: 3, scope: !8663)
!8673 = !DILocation(line: 70, column: 9, scope: !8663)
!8674 = !DILocation(line: 70, column: 18, scope: !8663)
!8675 = !DILocation(line: 71, column: 1, scope: !8663)
!8676 = !DILocalVariable(name: "fd", arg: 1, scope: !606, file: !349, line: 385, type: !7)
!8677 = !DILocation(line: 385, column: 18, scope: !606)
!8678 = !DILocalVariable(name: "n_bytes", arg: 2, scope: !606, file: !349, line: 385, type: !352)
!8679 = !DILocation(line: 385, column: 28, scope: !606)
!8680 = !DILocation(line: 393, column: 7, scope: !8681)
!8681 = distinct !DILexicalBlock(scope: !606, file: !349, line: 393, column: 7)
!8682 = !DILocation(line: 393, column: 13, scope: !8681)
!8683 = !DILocation(line: 393, column: 7, scope: !606)
!8684 = !DILocation(line: 396, column: 23, scope: !8685)
!8685 = distinct !DILexicalBlock(scope: !8681, file: !349, line: 394, column: 5)
!8686 = !DILocation(line: 396, column: 15, scope: !8685)
!8687 = !DILocation(line: 396, column: 13, scope: !8685)
!8688 = !DILocation(line: 397, column: 11, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8685, file: !349, line: 397, column: 11)
!8690 = !DILocation(line: 397, column: 17, scope: !8689)
!8691 = !DILocation(line: 397, column: 11, scope: !8685)
!8692 = !DILocation(line: 399, column: 17, scope: !8693)
!8693 = distinct !DILexicalBlock(scope: !8689, file: !349, line: 398, column: 9)
!8694 = !DILocation(line: 400, column: 14, scope: !8693)
!8695 = !DILocation(line: 401, column: 9, scope: !8693)
!8696 = !DILocation(line: 402, column: 5, scope: !8685)
!8697 = !DILocation(line: 404, column: 3, scope: !606)
!8698 = !DILocation(line: 404, column: 10, scope: !606)
!8699 = !DILocalVariable(name: "n", scope: !8700, file: !349, line: 406, type: !55)
!8700 = distinct !DILexicalBlock(scope: !606, file: !349, line: 405, column: 5)
!8701 = !DILocation(line: 406, column: 14, scope: !8700)
!8702 = !DILocation(line: 406, column: 18, scope: !8700)
!8703 = !DILocation(line: 407, column: 24, scope: !8704)
!8704 = distinct !DILexicalBlock(scope: !8700, file: !349, line: 407, column: 11)
!8705 = !DILocation(line: 407, column: 28, scope: !8704)
!8706 = !DILocation(line: 407, column: 35, scope: !8704)
!8707 = !DILocation(line: 407, column: 12, scope: !8704)
!8708 = !DILocation(line: 407, column: 42, scope: !8704)
!8709 = !DILocation(line: 407, column: 39, scope: !8704)
!8710 = !DILocation(line: 407, column: 11, scope: !8700)
!8711 = !DILocation(line: 408, column: 9, scope: !8704)
!8712 = !DILocation(line: 409, column: 18, scope: !8700)
!8713 = !DILocation(line: 409, column: 15, scope: !8700)
!8714 = distinct !{!8714, !8697, !8715}
!8715 = !DILocation(line: 410, column: 5, scope: !606)
!8716 = !DILocation(line: 412, column: 3, scope: !606)
!8717 = !DILocation(line: 413, column: 1, scope: !606)
!8718 = distinct !DISubprogram(name: "writable_destination", scope: !349, file: !349, line: 1702, type: !456, scopeLine: 1703, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!8719 = !DILocalVariable(name: "file", arg: 1, scope: !8718, file: !349, line: 1702, type: !180)
!8720 = !DILocation(line: 1702, column: 35, scope: !8718)
!8721 = !DILocalVariable(name: "mode", arg: 2, scope: !8718, file: !349, line: 1702, type: !139)
!8722 = !DILocation(line: 1702, column: 48, scope: !8718)
!8723 = !DILocation(line: 1704, column: 11, scope: !8718)
!8724 = !DILocation(line: 1705, column: 11, scope: !8718)
!8725 = !DILocation(line: 1705, column: 14, scope: !8718)
!8726 = !DILocation(line: 1706, column: 11, scope: !8718)
!8727 = !DILocation(line: 1706, column: 26, scope: !8718)
!8728 = !DILocation(line: 1706, column: 14, scope: !8718)
!8729 = !DILocation(line: 1706, column: 38, scope: !8718)
!8730 = !DILocation(line: 1704, column: 3, scope: !8718)
!8731 = distinct !DISubprogram(name: "cp_options_default", scope: !349, file: !349, line: 3035, type: !401, scopeLine: 3036, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !348, retainedNodes: !209)
!8732 = !DILocalVariable(name: "x", arg: 1, scope: !8731, file: !349, line: 3035, type: !403)
!8733 = !DILocation(line: 3035, column: 40, scope: !8731)
!8734 = !DILocation(line: 3037, column: 11, scope: !8731)
!8735 = !DILocation(line: 3037, column: 3, scope: !8731)
!8736 = !DILocation(line: 3051, column: 48, scope: !8731)
!8737 = !DILocation(line: 3051, column: 59, scope: !8731)
!8738 = !DILocation(line: 3051, column: 25, scope: !8731)
!8739 = !DILocation(line: 3051, column: 28, scope: !8731)
!8740 = !DILocation(line: 3051, column: 45, scope: !8731)
!8741 = !DILocation(line: 3051, column: 3, scope: !8731)
!8742 = !DILocation(line: 3051, column: 6, scope: !8731)
!8743 = !DILocation(line: 3051, column: 23, scope: !8731)
!8744 = !DILocation(line: 3053, column: 3, scope: !8731)
!8745 = !DILocation(line: 3053, column: 6, scope: !8731)
!8746 = !DILocation(line: 3053, column: 19, scope: !8731)
!8747 = !DILocation(line: 3054, column: 1, scope: !8731)
!8748 = distinct !DISubprogram(name: "forget_created", scope: !617, file: !617, line: 82, type: !619, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !616, retainedNodes: !209)
!8749 = !DILocalVariable(name: "ino", arg: 1, scope: !8748, file: !617, line: 82, type: !441)
!8750 = !DILocation(line: 82, column: 23, scope: !8748)
!8751 = !DILocalVariable(name: "dev", arg: 2, scope: !8748, file: !617, line: 82, type: !443)
!8752 = !DILocation(line: 82, column: 34, scope: !8748)
!8753 = !DILocalVariable(name: "probe", scope: !8748, file: !617, line: 84, type: !622)
!8754 = !DILocation(line: 84, column: 22, scope: !8748)
!8755 = !DILocalVariable(name: "ent", scope: !8748, file: !617, line: 85, type: !621)
!8756 = !DILocation(line: 85, column: 23, scope: !8748)
!8757 = !DILocation(line: 87, column: 18, scope: !8748)
!8758 = !DILocation(line: 87, column: 9, scope: !8748)
!8759 = !DILocation(line: 87, column: 16, scope: !8748)
!8760 = !{!8761, !2916, i64 0}
!8761 = !{!"Src_to_dest", !2916, i64 0, !2916, i64 8, !2649, i64 16}
!8762 = !DILocation(line: 88, column: 18, scope: !8748)
!8763 = !DILocation(line: 88, column: 9, scope: !8748)
!8764 = !DILocation(line: 88, column: 16, scope: !8748)
!8765 = !{!8761, !2916, i64 8}
!8766 = !DILocation(line: 89, column: 9, scope: !8748)
!8767 = !DILocation(line: 89, column: 14, scope: !8748)
!8768 = !{!8761, !2649, i64 16}
!8769 = !DILocation(line: 91, column: 22, scope: !8748)
!8770 = !DILocation(line: 91, column: 35, scope: !8748)
!8771 = !DILocation(line: 91, column: 9, scope: !8748)
!8772 = !DILocation(line: 91, column: 7, scope: !8748)
!8773 = !DILocation(line: 92, column: 7, scope: !8774)
!8774 = distinct !DILexicalBlock(scope: !8748, file: !617, line: 92, column: 7)
!8775 = !DILocation(line: 92, column: 7, scope: !8748)
!8776 = !DILocation(line: 93, column: 23, scope: !8774)
!8777 = !DILocation(line: 93, column: 5, scope: !8774)
!8778 = !DILocation(line: 94, column: 1, scope: !8748)
!8779 = distinct !DISubprogram(name: "src_to_dest_free", scope: !617, file: !617, line: 72, type: !633, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !616, retainedNodes: !209)
!8780 = !DILocalVariable(name: "x", arg: 1, scope: !8779, file: !617, line: 72, type: !53)
!8781 = !DILocation(line: 72, column: 25, scope: !8779)
!8782 = !DILocalVariable(name: "a", scope: !8779, file: !617, line: 74, type: !621)
!8783 = !DILocation(line: 74, column: 23, scope: !8779)
!8784 = !DILocation(line: 74, column: 27, scope: !8779)
!8785 = !DILocation(line: 75, column: 9, scope: !8779)
!8786 = !DILocation(line: 75, column: 12, scope: !8779)
!8787 = !DILocation(line: 75, column: 3, scope: !8779)
!8788 = !DILocation(line: 76, column: 9, scope: !8779)
!8789 = !DILocation(line: 76, column: 3, scope: !8779)
!8790 = !DILocation(line: 77, column: 1, scope: !8779)
!8791 = distinct !DISubprogram(name: "src_to_dest_lookup", scope: !617, file: !617, line: 100, type: !627, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !616, retainedNodes: !209)
!8792 = !DILocalVariable(name: "ino", arg: 1, scope: !8791, file: !617, line: 100, type: !441)
!8793 = !DILocation(line: 100, column: 27, scope: !8791)
!8794 = !DILocalVariable(name: "dev", arg: 2, scope: !8791, file: !617, line: 100, type: !443)
!8795 = !DILocation(line: 100, column: 38, scope: !8791)
!8796 = !DILocalVariable(name: "ent", scope: !8791, file: !617, line: 102, type: !622)
!8797 = !DILocation(line: 102, column: 22, scope: !8791)
!8798 = !DILocalVariable(name: "e", scope: !8791, file: !617, line: 103, type: !629)
!8799 = !DILocation(line: 103, column: 29, scope: !8791)
!8800 = !DILocation(line: 104, column: 16, scope: !8791)
!8801 = !DILocation(line: 104, column: 7, scope: !8791)
!8802 = !DILocation(line: 104, column: 14, scope: !8791)
!8803 = !DILocation(line: 105, column: 16, scope: !8791)
!8804 = !DILocation(line: 105, column: 7, scope: !8791)
!8805 = !DILocation(line: 105, column: 14, scope: !8791)
!8806 = !DILocation(line: 106, column: 20, scope: !8791)
!8807 = !DILocation(line: 106, column: 33, scope: !8791)
!8808 = !DILocation(line: 106, column: 7, scope: !8791)
!8809 = !DILocation(line: 106, column: 5, scope: !8791)
!8810 = !DILocation(line: 107, column: 10, scope: !8791)
!8811 = !DILocation(line: 107, column: 14, scope: !8791)
!8812 = !DILocation(line: 107, column: 17, scope: !8791)
!8813 = !DILocation(line: 107, column: 3, scope: !8791)
!8814 = distinct !DISubprogram(name: "remember_copied", scope: !617, file: !617, line: 115, type: !631, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !616, retainedNodes: !209)
!8815 = !DILocalVariable(name: "name", arg: 1, scope: !8814, file: !617, line: 115, type: !180)
!8816 = !DILocation(line: 115, column: 30, scope: !8814)
!8817 = !DILocalVariable(name: "ino", arg: 2, scope: !8814, file: !617, line: 115, type: !441)
!8818 = !DILocation(line: 115, column: 42, scope: !8814)
!8819 = !DILocalVariable(name: "dev", arg: 3, scope: !8814, file: !617, line: 115, type: !443)
!8820 = !DILocation(line: 115, column: 53, scope: !8814)
!8821 = !DILocalVariable(name: "ent", scope: !8814, file: !617, line: 117, type: !621)
!8822 = !DILocation(line: 117, column: 23, scope: !8814)
!8823 = !DILocalVariable(name: "ent_from_table", scope: !8814, file: !617, line: 118, type: !621)
!8824 = !DILocation(line: 118, column: 23, scope: !8814)
!8825 = !DILocation(line: 120, column: 9, scope: !8814)
!8826 = !DILocation(line: 120, column: 7, scope: !8814)
!8827 = !DILocation(line: 121, column: 24, scope: !8814)
!8828 = !DILocation(line: 121, column: 15, scope: !8814)
!8829 = !DILocation(line: 121, column: 3, scope: !8814)
!8830 = !DILocation(line: 121, column: 8, scope: !8814)
!8831 = !DILocation(line: 121, column: 13, scope: !8814)
!8832 = !DILocation(line: 122, column: 17, scope: !8814)
!8833 = !DILocation(line: 122, column: 3, scope: !8814)
!8834 = !DILocation(line: 122, column: 8, scope: !8814)
!8835 = !DILocation(line: 122, column: 15, scope: !8814)
!8836 = !DILocation(line: 123, column: 17, scope: !8814)
!8837 = !DILocation(line: 123, column: 3, scope: !8814)
!8838 = !DILocation(line: 123, column: 8, scope: !8814)
!8839 = !DILocation(line: 123, column: 15, scope: !8814)
!8840 = !DILocation(line: 125, column: 33, scope: !8814)
!8841 = !DILocation(line: 125, column: 46, scope: !8814)
!8842 = !DILocation(line: 125, column: 20, scope: !8814)
!8843 = !DILocation(line: 125, column: 18, scope: !8814)
!8844 = !DILocation(line: 126, column: 7, scope: !8845)
!8845 = distinct !DILexicalBlock(scope: !8814, file: !617, line: 126, column: 7)
!8846 = !DILocation(line: 126, column: 22, scope: !8845)
!8847 = !DILocation(line: 126, column: 7, scope: !8814)
!8848 = !DILocation(line: 129, column: 7, scope: !8849)
!8849 = distinct !DILexicalBlock(scope: !8845, file: !617, line: 127, column: 5)
!8850 = !DILocation(line: 135, column: 7, scope: !8851)
!8851 = distinct !DILexicalBlock(scope: !8814, file: !617, line: 135, column: 7)
!8852 = !DILocation(line: 135, column: 25, scope: !8851)
!8853 = !DILocation(line: 135, column: 22, scope: !8851)
!8854 = !DILocation(line: 135, column: 7, scope: !8814)
!8855 = !DILocation(line: 137, column: 25, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8851, file: !617, line: 136, column: 5)
!8857 = !DILocation(line: 137, column: 7, scope: !8856)
!8858 = !DILocation(line: 138, column: 23, scope: !8856)
!8859 = !DILocation(line: 138, column: 39, scope: !8856)
!8860 = !DILocation(line: 138, column: 7, scope: !8856)
!8861 = !DILocation(line: 142, column: 3, scope: !8814)
!8862 = !DILocation(line: 143, column: 1, scope: !8814)
!8863 = distinct !DISubprogram(name: "hash_init", scope: !617, file: !617, line: 147, type: !200, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !616, retainedNodes: !209)
!8864 = !DILocation(line: 149, column: 17, scope: !8863)
!8865 = !DILocation(line: 149, column: 15, scope: !8863)
!8866 = !DILocation(line: 153, column: 7, scope: !8867)
!8867 = distinct !DILexicalBlock(scope: !8863, file: !617, line: 153, column: 7)
!8868 = !DILocation(line: 153, column: 19, scope: !8867)
!8869 = !DILocation(line: 153, column: 7, scope: !8863)
!8870 = !DILocation(line: 154, column: 5, scope: !8867)
!8871 = !DILocation(line: 155, column: 1, scope: !8863)
!8872 = distinct !DISubprogram(name: "src_to_dest_hash", scope: !617, file: !617, line: 51, type: !635, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !616, retainedNodes: !209)
!8873 = !DILocalVariable(name: "x", arg: 1, scope: !8872, file: !617, line: 51, type: !515)
!8874 = !DILocation(line: 51, column: 31, scope: !8872)
!8875 = !DILocalVariable(name: "table_size", arg: 2, scope: !8872, file: !617, line: 51, type: !55)
!8876 = !DILocation(line: 51, column: 41, scope: !8872)
!8877 = !DILocalVariable(name: "p", scope: !8872, file: !617, line: 53, type: !629)
!8878 = !DILocation(line: 53, column: 29, scope: !8872)
!8879 = !DILocation(line: 53, column: 33, scope: !8872)
!8880 = !DILocation(line: 58, column: 22, scope: !8872)
!8881 = !DILocation(line: 58, column: 25, scope: !8872)
!8882 = !DILocation(line: 58, column: 34, scope: !8872)
!8883 = !DILocation(line: 58, column: 32, scope: !8872)
!8884 = !DILocation(line: 58, column: 3, scope: !8872)
!8885 = distinct !DISubprogram(name: "src_to_dest_compare", scope: !617, file: !617, line: 64, type: !637, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !616, retainedNodes: !209)
!8886 = !DILocalVariable(name: "x", arg: 1, scope: !8885, file: !617, line: 64, type: !515)
!8887 = !DILocation(line: 64, column: 34, scope: !8885)
!8888 = !DILocalVariable(name: "y", arg: 2, scope: !8885, file: !617, line: 64, type: !515)
!8889 = !DILocation(line: 64, column: 49, scope: !8885)
!8890 = !DILocalVariable(name: "a", scope: !8885, file: !617, line: 66, type: !629)
!8891 = !DILocation(line: 66, column: 29, scope: !8885)
!8892 = !DILocation(line: 66, column: 33, scope: !8885)
!8893 = !DILocalVariable(name: "b", scope: !8885, file: !617, line: 67, type: !629)
!8894 = !DILocation(line: 67, column: 29, scope: !8885)
!8895 = !DILocation(line: 67, column: 33, scope: !8885)
!8896 = !DILocation(line: 68, column: 10, scope: !8885)
!8897 = !DILocation(line: 0, scope: !8885)
!8898 = !DILocation(line: 68, column: 3, scope: !8885)
!8899 = distinct !DISubprogram(name: "forget_all", scope: !617, file: !617, line: 161, type: !200, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !616, retainedNodes: !209)
!8900 = !DILocation(line: 163, column: 14, scope: !8899)
!8901 = !DILocation(line: 163, column: 3, scope: !8899)
!8902 = !DILocation(line: 164, column: 1, scope: !8899)
!8903 = distinct !DISubprogram(name: "extent_scan_init", scope: !1458, file: !1458, line: 69, type: !1461, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1457, retainedNodes: !209)
!8904 = !DILocalVariable(name: "src_fd", arg: 1, scope: !8903, file: !1458, line: 69, type: !7)
!8905 = !DILocation(line: 69, column: 23, scope: !8903)
!8906 = !DILocalVariable(name: "scan", arg: 2, scope: !8903, file: !1458, line: 69, type: !1463)
!8907 = !DILocation(line: 69, column: 51, scope: !8903)
!8908 = !DILocation(line: 71, column: 14, scope: !8903)
!8909 = !DILocation(line: 71, column: 3, scope: !8903)
!8910 = !DILocation(line: 71, column: 9, scope: !8903)
!8911 = !DILocation(line: 71, column: 12, scope: !8903)
!8912 = !{!8027, !2636, i64 0}
!8913 = !DILocation(line: 72, column: 3, scope: !8903)
!8914 = !DILocation(line: 72, column: 9, scope: !8903)
!8915 = !DILocation(line: 72, column: 18, scope: !8903)
!8916 = !DILocation(line: 73, column: 3, scope: !8903)
!8917 = !DILocation(line: 73, column: 9, scope: !8903)
!8918 = !DILocation(line: 73, column: 18, scope: !8903)
!8919 = !DILocation(line: 74, column: 3, scope: !8903)
!8920 = !DILocation(line: 74, column: 9, scope: !8903)
!8921 = !DILocation(line: 74, column: 20, scope: !8903)
!8922 = !{!8027, !2916, i64 8}
!8923 = !DILocation(line: 75, column: 3, scope: !8903)
!8924 = !DILocation(line: 75, column: 9, scope: !8903)
!8925 = !DILocation(line: 75, column: 29, scope: !8903)
!8926 = !DILocation(line: 76, column: 3, scope: !8903)
!8927 = !DILocation(line: 76, column: 9, scope: !8903)
!8928 = !DILocation(line: 76, column: 26, scope: !8903)
!8929 = !DILocation(line: 77, column: 20, scope: !8903)
!8930 = !DILocation(line: 77, column: 3, scope: !8903)
!8931 = !DILocation(line: 77, column: 9, scope: !8903)
!8932 = !DILocation(line: 77, column: 18, scope: !8903)
!8933 = !{!8027, !2636, i64 16}
!8934 = !DILocation(line: 78, column: 1, scope: !8903)
!8935 = distinct !DISubprogram(name: "extent_need_sync", scope: !1458, file: !1458, line: 33, type: !1331, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1457, retainedNodes: !209)
!8936 = !DILocation(line: 39, column: 3, scope: !8935)
!8937 = distinct !DISubprogram(name: "extent_scan_read", scope: !1458, file: !1458, line: 87, type: !1479, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1457, retainedNodes: !209)
!8938 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8937, file: !1458, line: 94, size: 32768, elements: !8939)
!8939 = !{!8940, !8941}
!8940 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !8938, file: !1458, line: 94, baseType: !1482, size: 256)
!8941 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !8938, file: !1458, line: 94, baseType: !338, size: 32768)
!8942 = !DILocalVariable(name: "scan", arg: 1, scope: !8937, file: !1458, line: 87, type: !1463)
!8943 = !DILocation(line: 87, column: 39, scope: !8937)
!8944 = !DILocalVariable(name: "si", scope: !8937, file: !1458, line: 89, type: !70)
!8945 = !DILocation(line: 89, column: 16, scope: !8937)
!8946 = !DILocalVariable(name: "last_ei", scope: !8937, file: !1458, line: 90, type: !1473)
!8947 = !DILocation(line: 90, column: 23, scope: !8937)
!8948 = !DILocation(line: 90, column: 33, scope: !8937)
!8949 = !DILocation(line: 90, column: 39, scope: !8937)
!8950 = !DILocation(line: 92, column: 3, scope: !8937)
!8951 = !DILocalVariable(name: "fiemap_buf", scope: !8952, file: !1458, line: 94, type: !8938)
!8952 = distinct !DILexicalBlock(scope: !8937, file: !1458, line: 93, column: 5)
!8953 = !DILocation(line: 94, column: 48, scope: !8952)
!8954 = !DILocalVariable(name: "fiemap", scope: !8952, file: !1458, line: 95, type: !1481)
!8955 = !DILocation(line: 95, column: 22, scope: !8952)
!8956 = !DILocation(line: 95, column: 43, scope: !8952)
!8957 = !DILocalVariable(name: "fm_extents", scope: !8952, file: !1458, line: 96, type: !1510)
!8958 = !DILocation(line: 96, column: 29, scope: !8952)
!8959 = !DILocation(line: 96, column: 43, scope: !8952)
!8960 = !DILocation(line: 96, column: 51, scope: !8952)
!8961 = !DILocation(line: 104, column: 7, scope: !8952)
!8962 = !DILocation(line: 106, column: 26, scope: !8952)
!8963 = !DILocation(line: 106, column: 32, scope: !8952)
!8964 = !DILocation(line: 106, column: 7, scope: !8952)
!8965 = !DILocation(line: 106, column: 15, scope: !8952)
!8966 = !DILocation(line: 106, column: 24, scope: !8952)
!8967 = !DILocation(line: 107, column: 26, scope: !8952)
!8968 = !DILocation(line: 107, column: 32, scope: !8952)
!8969 = !DILocation(line: 107, column: 7, scope: !8952)
!8970 = !DILocation(line: 107, column: 15, scope: !8952)
!8971 = !DILocation(line: 107, column: 24, scope: !8952)
!8972 = !DILocation(line: 108, column: 7, scope: !8952)
!8973 = !DILocation(line: 108, column: 15, scope: !8952)
!8974 = !DILocation(line: 108, column: 31, scope: !8952)
!8975 = !DILocation(line: 109, column: 47, scope: !8952)
!8976 = !DILocation(line: 109, column: 53, scope: !8952)
!8977 = !DILocation(line: 109, column: 45, scope: !8952)
!8978 = !DILocation(line: 109, column: 7, scope: !8952)
!8979 = !DILocation(line: 109, column: 15, scope: !8952)
!8980 = !DILocation(line: 109, column: 25, scope: !8952)
!8981 = !DILocation(line: 113, column: 18, scope: !8982)
!8982 = distinct !DILexicalBlock(scope: !8952, file: !1458, line: 113, column: 11)
!8983 = !DILocation(line: 113, column: 24, scope: !8982)
!8984 = !DILocation(line: 113, column: 43, scope: !8982)
!8985 = !DILocation(line: 113, column: 11, scope: !8982)
!8986 = !DILocation(line: 113, column: 51, scope: !8982)
!8987 = !DILocation(line: 113, column: 11, scope: !8952)
!8988 = !DILocation(line: 115, column: 15, scope: !8989)
!8989 = distinct !DILexicalBlock(scope: !8990, file: !1458, line: 115, column: 15)
!8990 = distinct !DILexicalBlock(scope: !8982, file: !1458, line: 114, column: 9)
!8991 = !DILocation(line: 115, column: 21, scope: !8989)
!8992 = !DILocation(line: 115, column: 32, scope: !8989)
!8993 = !DILocation(line: 115, column: 15, scope: !8990)
!8994 = !DILocation(line: 116, column: 13, scope: !8989)
!8995 = !DILocation(line: 116, column: 19, scope: !8989)
!8996 = !DILocation(line: 116, column: 39, scope: !8989)
!8997 = !DILocation(line: 117, column: 11, scope: !8990)
!8998 = !DILocation(line: 121, column: 11, scope: !8999)
!8999 = distinct !DILexicalBlock(scope: !8952, file: !1458, line: 121, column: 11)
!9000 = !DILocation(line: 121, column: 19, scope: !8999)
!9001 = !DILocation(line: 121, column: 37, scope: !8999)
!9002 = !DILocation(line: 121, column: 11, scope: !8952)
!9003 = !DILocation(line: 123, column: 11, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !8999, file: !1458, line: 122, column: 9)
!9005 = !DILocation(line: 123, column: 17, scope: !9004)
!9006 = !DILocation(line: 123, column: 34, scope: !9004)
!9007 = !DILocation(line: 124, column: 18, scope: !9004)
!9008 = !DILocation(line: 124, column: 24, scope: !9004)
!9009 = !DILocation(line: 124, column: 35, scope: !9004)
!9010 = !DILocation(line: 124, column: 11, scope: !9004)
!9011 = !DILocation(line: 127, column: 7, scope: !9012)
!9012 = distinct !DILexicalBlock(scope: !9013, file: !1458, line: 127, column: 7)
!9013 = distinct !DILexicalBlock(scope: !8952, file: !1458, line: 127, column: 7)
!9014 = !DILocation(line: 127, column: 7, scope: !9013)
!9015 = !DILocation(line: 128, column: 25, scope: !8952)
!9016 = !DILocation(line: 128, column: 33, scope: !8952)
!9017 = !DILocation(line: 128, column: 7, scope: !8952)
!9018 = !DILocation(line: 128, column: 13, scope: !8952)
!9019 = !DILocation(line: 128, column: 22, scope: !8952)
!9020 = !DILocalVariable(name: "prev_idx", scope: !9021, file: !1458, line: 132, type: !55)
!9021 = distinct !DILexicalBlock(scope: !8952, file: !1458, line: 129, column: 7)
!9022 = !DILocation(line: 132, column: 16, scope: !9021)
!9023 = !DILocation(line: 132, column: 27, scope: !9021)
!9024 = !DILocation(line: 132, column: 37, scope: !9021)
!9025 = !DILocation(line: 132, column: 43, scope: !9021)
!9026 = !DILocation(line: 132, column: 35, scope: !9021)
!9027 = !DILocation(line: 133, column: 37, scope: !9021)
!9028 = !DILocation(line: 133, column: 43, scope: !9021)
!9029 = !DILocation(line: 133, column: 53, scope: !9021)
!9030 = !DILocation(line: 133, column: 59, scope: !9021)
!9031 = !DILocation(line: 133, column: 26, scope: !9021)
!9032 = !DILocation(line: 133, column: 9, scope: !9021)
!9033 = !DILocation(line: 133, column: 15, scope: !9021)
!9034 = !DILocation(line: 133, column: 24, scope: !9021)
!9035 = !DILocation(line: 135, column: 19, scope: !9021)
!9036 = !DILocation(line: 135, column: 25, scope: !9021)
!9037 = !DILocation(line: 135, column: 36, scope: !9021)
!9038 = !DILocation(line: 135, column: 34, scope: !9021)
!9039 = !DILocation(line: 135, column: 17, scope: !9021)
!9040 = !DILocalVariable(name: "i", scope: !8952, file: !1458, line: 138, type: !70)
!9041 = !DILocation(line: 138, column: 20, scope: !8952)
!9042 = !DILocation(line: 139, column: 14, scope: !9043)
!9043 = distinct !DILexicalBlock(scope: !8952, file: !1458, line: 139, column: 7)
!9044 = !DILocation(line: 139, column: 12, scope: !9043)
!9045 = !DILocation(line: 139, column: 19, scope: !9046)
!9046 = distinct !DILexicalBlock(scope: !9043, file: !1458, line: 139, column: 7)
!9047 = !DILocation(line: 139, column: 23, scope: !9046)
!9048 = !DILocation(line: 139, column: 31, scope: !9046)
!9049 = !DILocation(line: 139, column: 21, scope: !9046)
!9050 = !DILocation(line: 139, column: 7, scope: !9043)
!9051 = !DILocation(line: 141, column: 11, scope: !9052)
!9052 = distinct !DILexicalBlock(scope: !9053, file: !1458, line: 141, column: 11)
!9053 = distinct !DILexicalBlock(scope: !9054, file: !1458, line: 141, column: 11)
!9054 = distinct !DILexicalBlock(scope: !9046, file: !1458, line: 140, column: 9)
!9055 = !{!9056, !2916, i64 0}
!9056 = !{!"fiemap_extent", !2916, i64 0, !2916, i64 8, !2916, i64 16, !2637, i64 24, !2636, i64 40, !2637, i64 44}
!9057 = !{!9056, !2916, i64 16}
!9058 = !DILocation(line: 141, column: 11, scope: !9053)
!9059 = !DILocation(line: 146, column: 15, scope: !9060)
!9060 = distinct !DILexicalBlock(scope: !9054, file: !1458, line: 146, column: 15)
!9061 = !DILocation(line: 146, column: 18, scope: !9060)
!9062 = !DILocation(line: 146, column: 21, scope: !9060)
!9063 = !DILocation(line: 146, column: 30, scope: !9060)
!9064 = !{!8076, !2636, i64 16}
!9065 = !DILocation(line: 147, column: 19, scope: !9060)
!9066 = !DILocation(line: 147, column: 30, scope: !9060)
!9067 = !DILocation(line: 147, column: 33, scope: !9060)
!9068 = !{!9056, !2636, i64 40}
!9069 = !DILocation(line: 147, column: 42, scope: !9060)
!9070 = !DILocation(line: 147, column: 15, scope: !9060)
!9071 = !DILocation(line: 148, column: 15, scope: !9060)
!9072 = !DILocation(line: 148, column: 19, scope: !9060)
!9073 = !DILocation(line: 148, column: 28, scope: !9060)
!9074 = !DILocation(line: 148, column: 42, scope: !9060)
!9075 = !DILocation(line: 148, column: 51, scope: !9060)
!9076 = !DILocation(line: 148, column: 40, scope: !9060)
!9077 = !DILocation(line: 149, column: 22, scope: !9060)
!9078 = !DILocation(line: 149, column: 33, scope: !9060)
!9079 = !DILocation(line: 149, column: 36, scope: !9060)
!9080 = !DILocation(line: 149, column: 19, scope: !9060)
!9081 = !DILocation(line: 146, column: 15, scope: !9054)
!9082 = !DILocation(line: 152, column: 38, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !9060, file: !1458, line: 150, column: 13)
!9084 = !DILocation(line: 152, column: 49, scope: !9083)
!9085 = !DILocation(line: 152, column: 52, scope: !9083)
!9086 = !DILocation(line: 152, column: 15, scope: !9083)
!9087 = !DILocation(line: 152, column: 24, scope: !9083)
!9088 = !DILocation(line: 152, column: 35, scope: !9083)
!9089 = !DILocation(line: 154, column: 36, scope: !9083)
!9090 = !DILocation(line: 154, column: 47, scope: !9083)
!9091 = !DILocation(line: 154, column: 50, scope: !9083)
!9092 = !DILocation(line: 154, column: 15, scope: !9083)
!9093 = !DILocation(line: 154, column: 24, scope: !9083)
!9094 = !DILocation(line: 154, column: 34, scope: !9083)
!9095 = !DILocation(line: 155, column: 13, scope: !9083)
!9096 = !DILocation(line: 156, column: 21, scope: !9097)
!9097 = distinct !DILexicalBlock(scope: !9060, file: !1458, line: 156, column: 20)
!9098 = !DILocation(line: 156, column: 24, scope: !9097)
!9099 = !DILocation(line: 156, column: 29, scope: !9097)
!9100 = !DILocation(line: 156, column: 32, scope: !9097)
!9101 = !DILocation(line: 156, column: 38, scope: !9097)
!9102 = !DILocation(line: 156, column: 51, scope: !9097)
!9103 = !DILocation(line: 156, column: 62, scope: !9097)
!9104 = !DILocation(line: 156, column: 65, scope: !9097)
!9105 = !DILocation(line: 156, column: 49, scope: !9097)
!9106 = !DILocation(line: 157, column: 20, scope: !9097)
!9107 = !DILocation(line: 157, column: 24, scope: !9097)
!9108 = !DILocation(line: 157, column: 27, scope: !9097)
!9109 = !DILocation(line: 157, column: 31, scope: !9097)
!9110 = !DILocation(line: 157, column: 40, scope: !9097)
!9111 = !DILocation(line: 157, column: 54, scope: !9097)
!9112 = !DILocation(line: 157, column: 63, scope: !9097)
!9113 = !DILocation(line: 157, column: 52, scope: !9097)
!9114 = !DILocation(line: 158, column: 33, scope: !9097)
!9115 = !DILocation(line: 158, column: 44, scope: !9097)
!9116 = !DILocation(line: 158, column: 47, scope: !9097)
!9117 = !DILocation(line: 158, column: 31, scope: !9097)
!9118 = !DILocation(line: 156, column: 20, scope: !9060)
!9119 = !DILocalVariable(name: "new_logical", scope: !9120, file: !1458, line: 164, type: !1486)
!9120 = distinct !DILexicalBlock(scope: !9097, file: !1458, line: 159, column: 13)
!9121 = !DILocation(line: 164, column: 24, scope: !9120)
!9122 = !DILocalVariable(name: "length_adjust", scope: !9120, file: !1458, line: 165, type: !1486)
!9123 = !DILocation(line: 165, column: 24, scope: !9120)
!9124 = !DILocation(line: 166, column: 19, scope: !9125)
!9125 = distinct !DILexicalBlock(scope: !9120, file: !1458, line: 166, column: 19)
!9126 = !DILocation(line: 166, column: 22, scope: !9125)
!9127 = !DILocation(line: 166, column: 19, scope: !9120)
!9128 = !DILocation(line: 167, column: 31, scope: !9125)
!9129 = !DILocation(line: 167, column: 37, scope: !9125)
!9130 = !DILocation(line: 167, column: 29, scope: !9125)
!9131 = !DILocation(line: 167, column: 17, scope: !9125)
!9132 = !DILocation(line: 172, column: 33, scope: !9133)
!9133 = distinct !DILexicalBlock(scope: !9125, file: !1458, line: 169, column: 17)
!9134 = !DILocation(line: 172, column: 42, scope: !9133)
!9135 = !DILocation(line: 172, column: 56, scope: !9133)
!9136 = !DILocation(line: 172, column: 65, scope: !9133)
!9137 = !DILocation(line: 172, column: 54, scope: !9133)
!9138 = !DILocation(line: 172, column: 31, scope: !9133)
!9139 = !DILocation(line: 174, column: 31, scope: !9120)
!9140 = !DILocation(line: 174, column: 45, scope: !9120)
!9141 = !DILocation(line: 174, column: 56, scope: !9120)
!9142 = !DILocation(line: 174, column: 59, scope: !9120)
!9143 = !DILocation(line: 174, column: 43, scope: !9120)
!9144 = !DILocation(line: 174, column: 29, scope: !9120)
!9145 = !DILocation(line: 176, column: 19, scope: !9146)
!9146 = distinct !DILexicalBlock(scope: !9120, file: !1458, line: 176, column: 19)
!9147 = !DILocation(line: 176, column: 35, scope: !9146)
!9148 = !DILocation(line: 176, column: 46, scope: !9146)
!9149 = !DILocation(line: 176, column: 49, scope: !9146)
!9150 = !DILocation(line: 176, column: 33, scope: !9146)
!9151 = !DILocation(line: 176, column: 19, scope: !9120)
!9152 = !DILocation(line: 178, column: 23, scope: !9153)
!9153 = distinct !DILexicalBlock(scope: !9154, file: !1458, line: 178, column: 23)
!9154 = distinct !DILexicalBlock(scope: !9146, file: !1458, line: 177, column: 17)
!9155 = !DILocation(line: 178, column: 29, scope: !9153)
!9156 = !DILocation(line: 178, column: 40, scope: !9153)
!9157 = !DILocation(line: 178, column: 23, scope: !9154)
!9158 = !DILocation(line: 179, column: 21, scope: !9153)
!9159 = !DILocation(line: 179, column: 27, scope: !9153)
!9160 = !DILocation(line: 179, column: 47, scope: !9153)
!9161 = !DILocation(line: 180, column: 19, scope: !9154)
!9162 = !DILocation(line: 182, column: 42, scope: !9120)
!9163 = !DILocation(line: 182, column: 15, scope: !9120)
!9164 = !DILocation(line: 182, column: 26, scope: !9120)
!9165 = !DILocation(line: 182, column: 29, scope: !9120)
!9166 = !DILocation(line: 182, column: 40, scope: !9120)
!9167 = !DILocation(line: 183, column: 42, scope: !9120)
!9168 = !DILocation(line: 183, column: 15, scope: !9120)
!9169 = !DILocation(line: 183, column: 26, scope: !9120)
!9170 = !DILocation(line: 183, column: 29, scope: !9120)
!9171 = !DILocation(line: 183, column: 39, scope: !9120)
!9172 = !DILocation(line: 185, column: 16, scope: !9120)
!9173 = !DILocation(line: 186, column: 15, scope: !9120)
!9174 = !DILocation(line: 190, column: 25, scope: !9175)
!9175 = distinct !DILexicalBlock(scope: !9097, file: !1458, line: 189, column: 13)
!9176 = !DILocation(line: 190, column: 31, scope: !9175)
!9177 = !DILocation(line: 190, column: 42, scope: !9175)
!9178 = !DILocation(line: 190, column: 40, scope: !9175)
!9179 = !DILocation(line: 190, column: 23, scope: !9175)
!9180 = !DILocation(line: 191, column: 38, scope: !9175)
!9181 = !DILocation(line: 191, column: 49, scope: !9175)
!9182 = !DILocation(line: 191, column: 52, scope: !9175)
!9183 = !DILocation(line: 191, column: 15, scope: !9175)
!9184 = !DILocation(line: 191, column: 24, scope: !9175)
!9185 = !DILocation(line: 191, column: 36, scope: !9175)
!9186 = !DILocation(line: 192, column: 37, scope: !9175)
!9187 = !DILocation(line: 192, column: 48, scope: !9175)
!9188 = !DILocation(line: 192, column: 51, scope: !9175)
!9189 = !DILocation(line: 192, column: 15, scope: !9175)
!9190 = !DILocation(line: 192, column: 24, scope: !9175)
!9191 = !DILocation(line: 192, column: 35, scope: !9175)
!9192 = !DILocation(line: 193, column: 36, scope: !9175)
!9193 = !DILocation(line: 193, column: 47, scope: !9175)
!9194 = !DILocation(line: 193, column: 50, scope: !9175)
!9195 = !DILocation(line: 193, column: 15, scope: !9175)
!9196 = !DILocation(line: 193, column: 24, scope: !9175)
!9197 = !DILocation(line: 193, column: 34, scope: !9175)
!9198 = !DILocation(line: 194, column: 17, scope: !9175)
!9199 = !DILocation(line: 196, column: 9, scope: !9054)
!9200 = !DILocation(line: 139, column: 51, scope: !9046)
!9201 = !DILocation(line: 139, column: 7, scope: !9046)
!9202 = distinct !{!9202, !9050, !9203}
!9203 = !DILocation(line: 196, column: 9, scope: !9043)
!9204 = !DILocation(line: 198, column: 11, scope: !9205)
!9205 = distinct !DILexicalBlock(scope: !8952, file: !1458, line: 198, column: 11)
!9206 = !DILocation(line: 198, column: 20, scope: !9205)
!9207 = !DILocation(line: 198, column: 30, scope: !9205)
!9208 = !DILocation(line: 198, column: 11, scope: !8952)
!9209 = !DILocation(line: 199, column: 9, scope: !9205)
!9210 = !DILocation(line: 199, column: 15, scope: !9205)
!9211 = !DILocation(line: 199, column: 32, scope: !9205)
!9212 = !DILocation(line: 203, column: 11, scope: !9213)
!9213 = distinct !DILexicalBlock(scope: !8952, file: !1458, line: 203, column: 11)
!9214 = !DILocation(line: 203, column: 14, scope: !9213)
!9215 = !DILocation(line: 203, column: 22, scope: !9213)
!9216 = !DILocation(line: 203, column: 26, scope: !9213)
!9217 = !DILocation(line: 203, column: 32, scope: !9213)
!9218 = !DILocation(line: 203, column: 11, scope: !8952)
!9219 = !DILocation(line: 204, column: 19, scope: !9213)
!9220 = !DILocation(line: 204, column: 25, scope: !9213)
!9221 = !DILocation(line: 204, column: 36, scope: !9213)
!9222 = !DILocation(line: 204, column: 34, scope: !9213)
!9223 = !DILocation(line: 204, column: 41, scope: !9213)
!9224 = !DILocation(line: 204, column: 17, scope: !9213)
!9225 = !DILocation(line: 204, column: 9, scope: !9213)
!9226 = !DILocation(line: 207, column: 24, scope: !8952)
!9227 = !DILocation(line: 207, column: 7, scope: !8952)
!9228 = !DILocation(line: 207, column: 13, scope: !8952)
!9229 = !DILocation(line: 207, column: 22, scope: !8952)
!9230 = !DILocation(line: 209, column: 11, scope: !9231)
!9231 = distinct !DILexicalBlock(scope: !8952, file: !1458, line: 209, column: 11)
!9232 = !DILocation(line: 209, column: 17, scope: !9231)
!9233 = !DILocation(line: 209, column: 11, scope: !8952)
!9234 = !DILocation(line: 210, column: 9, scope: !9231)
!9235 = !DILocation(line: 212, column: 28, scope: !9231)
!9236 = !DILocation(line: 212, column: 37, scope: !9231)
!9237 = !DILocation(line: 212, column: 51, scope: !9231)
!9238 = !DILocation(line: 212, column: 60, scope: !9231)
!9239 = !DILocation(line: 212, column: 49, scope: !9231)
!9240 = !DILocation(line: 212, column: 9, scope: !9231)
!9241 = !DILocation(line: 212, column: 15, scope: !9231)
!9242 = !DILocation(line: 212, column: 26, scope: !9231)
!9243 = !DILocation(line: 214, column: 11, scope: !9244)
!9244 = distinct !DILexicalBlock(scope: !8952, file: !1458, line: 214, column: 11)
!9245 = !DILocation(line: 214, column: 14, scope: !9244)
!9246 = !DILocation(line: 214, column: 11, scope: !8952)
!9247 = !DILocation(line: 215, column: 9, scope: !9244)
!9248 = distinct !{!9248, !8950, !9249}
!9249 = !DILocation(line: 216, column: 5, scope: !8937)
!9250 = !DILocation(line: 218, column: 3, scope: !8937)
!9251 = !DILocation(line: 219, column: 1, scope: !8937)
!9252 = distinct !DISubprogram(name: "force_linkat", scope: !643, file: !643, line: 95, type: !645, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !642, retainedNodes: !209)
!9253 = !DILocalVariable(name: "srcdir", arg: 1, scope: !9252, file: !643, line: 95, type: !7)
!9254 = !DILocation(line: 95, column: 19, scope: !9252)
!9255 = !DILocalVariable(name: "srcname", arg: 2, scope: !9252, file: !643, line: 95, type: !180)
!9256 = !DILocation(line: 95, column: 39, scope: !9252)
!9257 = !DILocalVariable(name: "dstdir", arg: 3, scope: !9252, file: !643, line: 96, type: !7)
!9258 = !DILocation(line: 96, column: 19, scope: !9252)
!9259 = !DILocalVariable(name: "dstname", arg: 4, scope: !9252, file: !643, line: 96, type: !180)
!9260 = !DILocation(line: 96, column: 39, scope: !9252)
!9261 = !DILocalVariable(name: "flags", arg: 5, scope: !9252, file: !643, line: 96, type: !7)
!9262 = !DILocation(line: 96, column: 52, scope: !9252)
!9263 = !DILocalVariable(name: "force", arg: 6, scope: !9252, file: !643, line: 96, type: !142)
!9264 = !DILocation(line: 96, column: 64, scope: !9252)
!9265 = !DILocalVariable(name: "linkat_errno", arg: 7, scope: !9252, file: !643, line: 97, type: !7)
!9266 = !DILocation(line: 97, column: 19, scope: !9252)
!9267 = !DILocation(line: 99, column: 7, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9252, file: !643, line: 99, column: 7)
!9269 = !DILocation(line: 99, column: 20, scope: !9268)
!9270 = !DILocation(line: 99, column: 7, scope: !9252)
!9271 = !DILocation(line: 100, column: 29, scope: !9268)
!9272 = !DILocation(line: 100, column: 37, scope: !9268)
!9273 = !DILocation(line: 100, column: 46, scope: !9268)
!9274 = !DILocation(line: 100, column: 54, scope: !9268)
!9275 = !DILocation(line: 100, column: 63, scope: !9268)
!9276 = !DILocation(line: 100, column: 21, scope: !9268)
!9277 = !DILocation(line: 100, column: 70, scope: !9268)
!9278 = !DILocation(line: 101, column: 27, scope: !9268)
!9279 = !DILocation(line: 100, column: 18, scope: !9268)
!9280 = !DILocation(line: 100, column: 5, scope: !9268)
!9281 = !DILocation(line: 102, column: 8, scope: !9282)
!9282 = distinct !DILexicalBlock(scope: !9252, file: !643, line: 102, column: 7)
!9283 = !DILocation(line: 102, column: 14, scope: !9282)
!9284 = !DILocation(line: 102, column: 17, scope: !9282)
!9285 = !DILocation(line: 102, column: 30, scope: !9282)
!9286 = !DILocation(line: 102, column: 7, scope: !9252)
!9287 = !DILocation(line: 103, column: 12, scope: !9282)
!9288 = !DILocation(line: 103, column: 5, scope: !9282)
!9289 = !DILocalVariable(name: "buf", scope: !9252, file: !643, line: 105, type: !647)
!9290 = !DILocation(line: 105, column: 8, scope: !9252)
!9291 = !DILocalVariable(name: "dsttmp", scope: !9252, file: !643, line: 106, type: !9)
!9292 = !DILocation(line: 106, column: 9, scope: !9252)
!9293 = !DILocation(line: 106, column: 36, scope: !9252)
!9294 = !DILocation(line: 106, column: 45, scope: !9252)
!9295 = !DILocation(line: 106, column: 18, scope: !9252)
!9296 = !DILocation(line: 107, column: 9, scope: !9297)
!9297 = distinct !DILexicalBlock(scope: !9252, file: !643, line: 107, column: 7)
!9298 = !DILocation(line: 107, column: 7, scope: !9252)
!9299 = !DILocation(line: 108, column: 12, scope: !9297)
!9300 = !DILocation(line: 108, column: 5, scope: !9297)
!9301 = !DILocalVariable(name: "arg", scope: !9252, file: !643, line: 109, type: !661)
!9302 = !DILocation(line: 109, column: 19, scope: !9252)
!9303 = !DILocation(line: 109, column: 25, scope: !9252)
!9304 = !DILocation(line: 109, column: 27, scope: !9252)
!9305 = !{!9306, !2636, i64 0}
!9306 = !{!"link_arg", !2636, i64 0, !2649, i64 8, !2636, i64 16, !2636, i64 20}
!9307 = !DILocation(line: 109, column: 35, scope: !9252)
!9308 = !{!9306, !2649, i64 8}
!9309 = !DILocation(line: 109, column: 44, scope: !9252)
!9310 = !{!9306, !2636, i64 16}
!9311 = !DILocation(line: 109, column: 52, scope: !9252)
!9312 = !{!9306, !2636, i64 20}
!9313 = !DILocalVariable(name: "err", scope: !9252, file: !643, line: 110, type: !7)
!9314 = !DILocation(line: 110, column: 7, scope: !9252)
!9315 = !DILocation(line: 112, column: 25, scope: !9316)
!9316 = distinct !DILexicalBlock(scope: !9252, file: !643, line: 112, column: 7)
!9317 = !DILocation(line: 112, column: 36, scope: !9316)
!9318 = !DILocation(line: 112, column: 7, scope: !9316)
!9319 = !DILocation(line: 112, column: 66, scope: !9316)
!9320 = !DILocation(line: 112, column: 7, scope: !9252)
!9321 = !DILocation(line: 113, column: 11, scope: !9316)
!9322 = !DILocation(line: 113, column: 9, scope: !9316)
!9323 = !DILocation(line: 113, column: 5, scope: !9316)
!9324 = !DILocation(line: 116, column: 23, scope: !9325)
!9325 = distinct !DILexicalBlock(scope: !9316, file: !643, line: 115, column: 5)
!9326 = !DILocation(line: 116, column: 31, scope: !9325)
!9327 = !DILocation(line: 116, column: 39, scope: !9325)
!9328 = !DILocation(line: 116, column: 47, scope: !9325)
!9329 = !DILocation(line: 116, column: 13, scope: !9325)
!9330 = !DILocation(line: 116, column: 56, scope: !9325)
!9331 = !DILocation(line: 116, column: 68, scope: !9325)
!9332 = !DILocation(line: 116, column: 11, scope: !9325)
!9333 = !DILocation(line: 120, column: 17, scope: !9325)
!9334 = !DILocation(line: 120, column: 25, scope: !9325)
!9335 = !DILocation(line: 120, column: 7, scope: !9325)
!9336 = !DILocation(line: 123, column: 7, scope: !9337)
!9337 = distinct !DILexicalBlock(scope: !9252, file: !643, line: 123, column: 7)
!9338 = !DILocation(line: 123, column: 17, scope: !9337)
!9339 = !DILocation(line: 123, column: 14, scope: !9337)
!9340 = !DILocation(line: 123, column: 7, scope: !9252)
!9341 = !DILocation(line: 124, column: 11, scope: !9337)
!9342 = !DILocation(line: 124, column: 5, scope: !9337)
!9343 = !DILocation(line: 125, column: 10, scope: !9252)
!9344 = !DILocation(line: 125, column: 3, scope: !9252)
!9345 = !DILocation(line: 126, column: 1, scope: !9252)
!9346 = distinct !DISubprogram(name: "samedir_template", scope: !643, file: !643, line: 51, type: !652, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !642, retainedNodes: !209)
!9347 = !DILocalVariable(name: "dstname", arg: 1, scope: !9346, file: !643, line: 51, type: !180)
!9348 = !DILocation(line: 51, column: 31, scope: !9346)
!9349 = !DILocalVariable(name: "buf", arg: 2, scope: !9346, file: !643, line: 51, type: !9)
!9350 = !DILocation(line: 51, column: 45, scope: !9346)
!9351 = !DILocalVariable(name: "dstdirlen", scope: !9346, file: !643, line: 53, type: !654)
!9352 = !DILocation(line: 53, column: 13, scope: !9346)
!9353 = !DILocation(line: 53, column: 41, scope: !9346)
!9354 = !DILocation(line: 53, column: 25, scope: !9346)
!9355 = !DILocation(line: 53, column: 52, scope: !9346)
!9356 = !DILocation(line: 53, column: 50, scope: !9346)
!9357 = !DILocalVariable(name: "dsttmpsize", scope: !9346, file: !643, line: 54, type: !55)
!9358 = !DILocation(line: 54, column: 10, scope: !9346)
!9359 = !DILocation(line: 54, column: 23, scope: !9346)
!9360 = !DILocation(line: 54, column: 33, scope: !9346)
!9361 = !DILocalVariable(name: "dsttmp", scope: !9346, file: !643, line: 55, type: !9)
!9362 = !DILocation(line: 55, column: 9, scope: !9346)
!9363 = !DILocation(line: 56, column: 7, scope: !9364)
!9364 = distinct !DILexicalBlock(scope: !9346, file: !643, line: 56, column: 7)
!9365 = !DILocation(line: 56, column: 18, scope: !9364)
!9366 = !DILocation(line: 56, column: 7, scope: !9346)
!9367 = !DILocation(line: 57, column: 14, scope: !9364)
!9368 = !DILocation(line: 57, column: 12, scope: !9364)
!9369 = !DILocation(line: 57, column: 5, scope: !9364)
!9370 = !DILocation(line: 60, column: 24, scope: !9371)
!9371 = distinct !DILexicalBlock(scope: !9364, file: !643, line: 59, column: 5)
!9372 = !DILocation(line: 60, column: 16, scope: !9371)
!9373 = !DILocation(line: 60, column: 14, scope: !9371)
!9374 = !DILocation(line: 61, column: 12, scope: !9375)
!9375 = distinct !DILexicalBlock(scope: !9371, file: !643, line: 61, column: 11)
!9376 = !DILocation(line: 61, column: 11, scope: !9371)
!9377 = !DILocation(line: 62, column: 16, scope: !9375)
!9378 = !DILocation(line: 62, column: 9, scope: !9375)
!9379 = !DILocation(line: 64, column: 20, scope: !9346)
!9380 = !DILocation(line: 64, column: 28, scope: !9346)
!9381 = !DILocation(line: 64, column: 37, scope: !9346)
!9382 = !DILocation(line: 64, column: 11, scope: !9346)
!9383 = !DILocation(line: 64, column: 3, scope: !9346)
!9384 = !DILocation(line: 65, column: 10, scope: !9346)
!9385 = !DILocation(line: 65, column: 3, scope: !9346)
!9386 = !DILocation(line: 66, column: 1, scope: !9346)
!9387 = distinct !DISubprogram(name: "try_link", scope: !643, file: !643, line: 80, type: !658, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !642, retainedNodes: !209)
!9388 = !DILocalVariable(name: "dest", arg: 1, scope: !9387, file: !643, line: 80, type: !9)
!9389 = !DILocation(line: 80, column: 17, scope: !9387)
!9390 = !DILocalVariable(name: "arg", arg: 2, scope: !9387, file: !643, line: 80, type: !53)
!9391 = !DILocation(line: 80, column: 29, scope: !9387)
!9392 = !DILocalVariable(name: "a", scope: !9387, file: !643, line: 82, type: !660)
!9393 = !DILocation(line: 82, column: 20, scope: !9387)
!9394 = !DILocation(line: 82, column: 24, scope: !9387)
!9395 = !DILocation(line: 83, column: 18, scope: !9387)
!9396 = !DILocation(line: 83, column: 21, scope: !9387)
!9397 = !DILocation(line: 83, column: 29, scope: !9387)
!9398 = !DILocation(line: 83, column: 32, scope: !9387)
!9399 = !DILocation(line: 83, column: 41, scope: !9387)
!9400 = !DILocation(line: 83, column: 44, scope: !9387)
!9401 = !DILocation(line: 83, column: 52, scope: !9387)
!9402 = !DILocation(line: 83, column: 58, scope: !9387)
!9403 = !DILocation(line: 83, column: 61, scope: !9387)
!9404 = !DILocation(line: 83, column: 10, scope: !9387)
!9405 = !DILocation(line: 83, column: 3, scope: !9387)
!9406 = distinct !DISubprogram(name: "force_symlinkat", scope: !643, file: !643, line: 152, type: !650, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !642, retainedNodes: !209)
!9407 = !DILocalVariable(name: "srcname", arg: 1, scope: !9406, file: !643, line: 152, type: !180)
!9408 = !DILocation(line: 152, column: 30, scope: !9406)
!9409 = !DILocalVariable(name: "dstdir", arg: 2, scope: !9406, file: !643, line: 152, type: !7)
!9410 = !DILocation(line: 152, column: 43, scope: !9406)
!9411 = !DILocalVariable(name: "dstname", arg: 3, scope: !9406, file: !643, line: 152, type: !180)
!9412 = !DILocation(line: 152, column: 63, scope: !9406)
!9413 = !DILocalVariable(name: "force", arg: 4, scope: !9406, file: !643, line: 153, type: !142)
!9414 = !DILocation(line: 153, column: 23, scope: !9406)
!9415 = !DILocalVariable(name: "symlinkat_errno", arg: 5, scope: !9406, file: !643, line: 153, type: !7)
!9416 = !DILocation(line: 153, column: 34, scope: !9406)
!9417 = !DILocation(line: 155, column: 7, scope: !9418)
!9418 = distinct !DILexicalBlock(scope: !9406, file: !643, line: 155, column: 7)
!9419 = !DILocation(line: 155, column: 23, scope: !9418)
!9420 = !DILocation(line: 155, column: 7, scope: !9406)
!9421 = !DILocation(line: 156, column: 34, scope: !9418)
!9422 = !DILocation(line: 156, column: 43, scope: !9418)
!9423 = !DILocation(line: 156, column: 51, scope: !9418)
!9424 = !DILocation(line: 156, column: 23, scope: !9418)
!9425 = !DILocation(line: 156, column: 60, scope: !9418)
!9426 = !DILocation(line: 156, column: 71, scope: !9418)
!9427 = !DILocation(line: 156, column: 21, scope: !9418)
!9428 = !DILocation(line: 156, column: 5, scope: !9418)
!9429 = !DILocation(line: 157, column: 8, scope: !9430)
!9430 = distinct !DILexicalBlock(scope: !9406, file: !643, line: 157, column: 7)
!9431 = !DILocation(line: 157, column: 14, scope: !9430)
!9432 = !DILocation(line: 157, column: 17, scope: !9430)
!9433 = !DILocation(line: 157, column: 33, scope: !9430)
!9434 = !DILocation(line: 157, column: 7, scope: !9406)
!9435 = !DILocation(line: 158, column: 12, scope: !9430)
!9436 = !DILocation(line: 158, column: 5, scope: !9430)
!9437 = !DILocalVariable(name: "buf", scope: !9406, file: !643, line: 160, type: !647)
!9438 = !DILocation(line: 160, column: 8, scope: !9406)
!9439 = !DILocalVariable(name: "dsttmp", scope: !9406, file: !643, line: 161, type: !9)
!9440 = !DILocation(line: 161, column: 9, scope: !9406)
!9441 = !DILocation(line: 161, column: 36, scope: !9406)
!9442 = !DILocation(line: 161, column: 45, scope: !9406)
!9443 = !DILocation(line: 161, column: 18, scope: !9406)
!9444 = !DILocation(line: 162, column: 8, scope: !9445)
!9445 = distinct !DILexicalBlock(scope: !9406, file: !643, line: 162, column: 7)
!9446 = !DILocation(line: 162, column: 7, scope: !9406)
!9447 = !DILocation(line: 163, column: 12, scope: !9445)
!9448 = !DILocation(line: 163, column: 5, scope: !9445)
!9449 = !DILocalVariable(name: "arg", scope: !9406, file: !643, line: 164, type: !668)
!9450 = !DILocation(line: 164, column: 22, scope: !9406)
!9451 = !DILocation(line: 164, column: 28, scope: !9406)
!9452 = !DILocation(line: 164, column: 30, scope: !9406)
!9453 = !{!9454, !2649, i64 0}
!9454 = !{!"symlink_arg", !2649, i64 0, !2636, i64 8}
!9455 = !DILocation(line: 164, column: 39, scope: !9406)
!9456 = !{!9454, !2636, i64 8}
!9457 = !DILocalVariable(name: "err", scope: !9406, file: !643, line: 165, type: !7)
!9458 = !DILocation(line: 165, column: 7, scope: !9406)
!9459 = !DILocation(line: 167, column: 25, scope: !9460)
!9460 = distinct !DILexicalBlock(scope: !9406, file: !643, line: 167, column: 7)
!9461 = !DILocation(line: 167, column: 36, scope: !9460)
!9462 = !DILocation(line: 167, column: 7, scope: !9460)
!9463 = !DILocation(line: 167, column: 69, scope: !9460)
!9464 = !DILocation(line: 167, column: 7, scope: !9406)
!9465 = !DILocation(line: 168, column: 11, scope: !9460)
!9466 = !DILocation(line: 168, column: 9, scope: !9460)
!9467 = !DILocation(line: 168, column: 5, scope: !9460)
!9468 = !DILocation(line: 169, column: 22, scope: !9469)
!9469 = distinct !DILexicalBlock(scope: !9460, file: !643, line: 169, column: 12)
!9470 = !DILocation(line: 169, column: 30, scope: !9469)
!9471 = !DILocation(line: 169, column: 38, scope: !9469)
!9472 = !DILocation(line: 169, column: 46, scope: !9469)
!9473 = !DILocation(line: 169, column: 12, scope: !9469)
!9474 = !DILocation(line: 169, column: 55, scope: !9469)
!9475 = !DILocation(line: 169, column: 12, scope: !9460)
!9476 = !DILocation(line: 171, column: 13, scope: !9477)
!9477 = distinct !DILexicalBlock(scope: !9469, file: !643, line: 170, column: 5)
!9478 = !DILocation(line: 171, column: 11, scope: !9477)
!9479 = !DILocation(line: 172, column: 17, scope: !9477)
!9480 = !DILocation(line: 172, column: 25, scope: !9477)
!9481 = !DILocation(line: 172, column: 7, scope: !9477)
!9482 = !DILocation(line: 173, column: 5, scope: !9477)
!9483 = !DILocation(line: 178, column: 11, scope: !9484)
!9484 = distinct !DILexicalBlock(scope: !9469, file: !643, line: 175, column: 5)
!9485 = !DILocation(line: 181, column: 7, scope: !9486)
!9486 = distinct !DILexicalBlock(scope: !9406, file: !643, line: 181, column: 7)
!9487 = !DILocation(line: 181, column: 17, scope: !9486)
!9488 = !DILocation(line: 181, column: 14, scope: !9486)
!9489 = !DILocation(line: 181, column: 7, scope: !9406)
!9490 = !DILocation(line: 182, column: 11, scope: !9486)
!9491 = !DILocation(line: 182, column: 5, scope: !9486)
!9492 = !DILocation(line: 183, column: 10, scope: !9406)
!9493 = !DILocation(line: 183, column: 3, scope: !9406)
!9494 = !DILocation(line: 184, column: 1, scope: !9406)
!9495 = distinct !DISubprogram(name: "try_symlink", scope: !643, file: !643, line: 138, type: !658, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !642, retainedNodes: !209)
!9496 = !DILocalVariable(name: "dest", arg: 1, scope: !9495, file: !643, line: 138, type: !9)
!9497 = !DILocation(line: 138, column: 20, scope: !9495)
!9498 = !DILocalVariable(name: "arg", arg: 2, scope: !9495, file: !643, line: 138, type: !53)
!9499 = !DILocation(line: 138, column: 32, scope: !9495)
!9500 = !DILocalVariable(name: "a", scope: !9495, file: !643, line: 140, type: !667)
!9501 = !DILocation(line: 140, column: 23, scope: !9495)
!9502 = !DILocation(line: 140, column: 27, scope: !9495)
!9503 = !DILocation(line: 141, column: 21, scope: !9495)
!9504 = !DILocation(line: 141, column: 24, scope: !9495)
!9505 = !DILocation(line: 141, column: 33, scope: !9495)
!9506 = !DILocation(line: 141, column: 36, scope: !9495)
!9507 = !DILocation(line: 141, column: 44, scope: !9495)
!9508 = !DILocation(line: 141, column: 10, scope: !9495)
!9509 = !DILocation(line: 141, column: 3, scope: !9495)
!9510 = distinct !DISubprogram(name: "copy_acl", scope: !9511, file: !9511, line: 43, type: !1516, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1513, retainedNodes: !209)
!9511 = !DIFile(filename: "lib/copy-acl.c", directory: "/home/mbarbar/clone/coreutils")
!9512 = !DILocalVariable(name: "src_name", arg: 1, scope: !9510, file: !9511, line: 43, type: !180)
!9513 = !DILocation(line: 43, column: 23, scope: !9510)
!9514 = !DILocalVariable(name: "source_desc", arg: 2, scope: !9510, file: !9511, line: 43, type: !7)
!9515 = !DILocation(line: 43, column: 37, scope: !9510)
!9516 = !DILocalVariable(name: "dst_name", arg: 3, scope: !9510, file: !9511, line: 43, type: !180)
!9517 = !DILocation(line: 43, column: 62, scope: !9510)
!9518 = !DILocalVariable(name: "dest_desc", arg: 4, scope: !9510, file: !9511, line: 44, type: !7)
!9519 = !DILocation(line: 44, column: 15, scope: !9510)
!9520 = !DILocalVariable(name: "mode", arg: 5, scope: !9510, file: !9511, line: 44, type: !139)
!9521 = !DILocation(line: 44, column: 33, scope: !9510)
!9522 = !DILocalVariable(name: "ret", scope: !9510, file: !9511, line: 46, type: !7)
!9523 = !DILocation(line: 46, column: 7, scope: !9510)
!9524 = !DILocation(line: 46, column: 24, scope: !9510)
!9525 = !DILocation(line: 46, column: 34, scope: !9510)
!9526 = !DILocation(line: 46, column: 47, scope: !9510)
!9527 = !DILocation(line: 46, column: 57, scope: !9510)
!9528 = !DILocation(line: 46, column: 68, scope: !9510)
!9529 = !DILocation(line: 46, column: 13, scope: !9510)
!9530 = !DILocation(line: 47, column: 11, scope: !9510)
!9531 = !DILocation(line: 47, column: 3, scope: !9510)
!9532 = !DILocation(line: 50, column: 17, scope: !9533)
!9533 = distinct !DILexicalBlock(scope: !9510, file: !9511, line: 48, column: 5)
!9534 = !DILocation(line: 50, column: 37, scope: !9533)
!9535 = !DILocation(line: 50, column: 30, scope: !9533)
!9536 = !DILocation(line: 50, column: 7, scope: !9533)
!9537 = !DILocation(line: 51, column: 7, scope: !9533)
!9538 = !DILocation(line: 54, column: 17, scope: !9533)
!9539 = !DILocation(line: 54, column: 24, scope: !9533)
!9540 = !DILocation(line: 54, column: 67, scope: !9533)
!9541 = !DILocation(line: 54, column: 60, scope: !9533)
!9542 = !DILocation(line: 54, column: 7, scope: !9533)
!9543 = !DILocation(line: 55, column: 7, scope: !9533)
!9544 = !DILocation(line: 58, column: 7, scope: !9533)
!9545 = !DILocation(line: 60, column: 10, scope: !9510)
!9546 = !DILocation(line: 60, column: 3, scope: !9510)
!9547 = distinct !DISubprogram(name: "set_acl", scope: !9548, file: !9548, line: 42, type: !1521, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1518, retainedNodes: !209)
!9548 = !DIFile(filename: "lib/set-acl.c", directory: "/home/mbarbar/clone/coreutils")
!9549 = !DILocalVariable(name: "name", arg: 1, scope: !9547, file: !9548, line: 42, type: !180)
!9550 = !DILocation(line: 42, column: 22, scope: !9547)
!9551 = !DILocalVariable(name: "desc", arg: 2, scope: !9547, file: !9548, line: 42, type: !7)
!9552 = !DILocation(line: 42, column: 32, scope: !9547)
!9553 = !DILocalVariable(name: "mode", arg: 3, scope: !9547, file: !9548, line: 42, type: !139)
!9554 = !DILocation(line: 42, column: 45, scope: !9547)
!9555 = !DILocalVariable(name: "ret", scope: !9547, file: !9548, line: 44, type: !7)
!9556 = !DILocation(line: 44, column: 7, scope: !9547)
!9557 = !DILocation(line: 44, column: 23, scope: !9547)
!9558 = !DILocation(line: 44, column: 29, scope: !9547)
!9559 = !DILocation(line: 44, column: 35, scope: !9547)
!9560 = !DILocation(line: 44, column: 13, scope: !9547)
!9561 = !DILocation(line: 45, column: 7, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9547, file: !9548, line: 45, column: 7)
!9563 = !DILocation(line: 45, column: 11, scope: !9562)
!9564 = !DILocation(line: 45, column: 7, scope: !9547)
!9565 = !DILocation(line: 46, column: 15, scope: !9562)
!9566 = !DILocation(line: 46, column: 22, scope: !9562)
!9567 = !DILocation(line: 46, column: 62, scope: !9562)
!9568 = !DILocation(line: 46, column: 55, scope: !9562)
!9569 = !DILocation(line: 46, column: 5, scope: !9562)
!9570 = !DILocation(line: 47, column: 10, scope: !9547)
!9571 = !DILocation(line: 47, column: 3, scope: !9547)
!9572 = distinct !DISubprogram(name: "areadlink_with_size", scope: !9573, file: !9573, line: 53, type: !1076, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1523, retainedNodes: !209)
!9573 = !DIFile(filename: "lib/areadlink-with-size.c", directory: "/home/mbarbar/clone/coreutils")
!9574 = !DILocalVariable(name: "file", arg: 1, scope: !9572, file: !9573, line: 53, type: !180)
!9575 = !DILocation(line: 53, column: 34, scope: !9572)
!9576 = !DILocalVariable(name: "size", arg: 2, scope: !9572, file: !9573, line: 53, type: !55)
!9577 = !DILocation(line: 53, column: 47, scope: !9572)
!9578 = !DILocalVariable(name: "symlink_max", scope: !9572, file: !9573, line: 58, type: !55)
!9579 = !DILocation(line: 58, column: 10, scope: !9572)
!9580 = !DILocalVariable(name: "INITIAL_LIMIT_BOUND", scope: !9572, file: !9573, line: 59, type: !55)
!9581 = !DILocation(line: 59, column: 10, scope: !9572)
!9582 = !DILocalVariable(name: "initial_limit", scope: !9572, file: !9573, line: 60, type: !55)
!9583 = !DILocation(line: 60, column: 10, scope: !9572)
!9584 = !DILocation(line: 60, column: 27, scope: !9572)
!9585 = !DILocation(line: 60, column: 41, scope: !9572)
!9586 = !DILocation(line: 60, column: 39, scope: !9572)
!9587 = !DILocation(line: 61, column: 29, scope: !9572)
!9588 = !DILocation(line: 61, column: 41, scope: !9572)
!9589 = !DILocation(line: 62, column: 29, scope: !9572)
!9590 = !DILocalVariable(name: "buf_size", scope: !9572, file: !9573, line: 67, type: !55)
!9591 = !DILocation(line: 67, column: 10, scope: !9572)
!9592 = !DILocation(line: 67, column: 22, scope: !9572)
!9593 = !DILocation(line: 67, column: 27, scope: !9572)
!9594 = !DILocation(line: 68, column: 24, scope: !9572)
!9595 = !DILocation(line: 68, column: 31, scope: !9572)
!9596 = !DILocation(line: 68, column: 29, scope: !9572)
!9597 = !DILocation(line: 68, column: 47, scope: !9572)
!9598 = !DILocation(line: 68, column: 52, scope: !9572)
!9599 = !DILocation(line: 68, column: 58, scope: !9572)
!9600 = !DILocation(line: 70, column: 3, scope: !9572)
!9601 = !DILocalVariable(name: "r", scope: !9602, file: !9573, line: 72, type: !694)
!9602 = distinct !DILexicalBlock(scope: !9572, file: !9573, line: 71, column: 5)
!9603 = !DILocation(line: 72, column: 15, scope: !9602)
!9604 = !DILocalVariable(name: "link_length", scope: !9602, file: !9573, line: 73, type: !55)
!9605 = !DILocation(line: 73, column: 14, scope: !9602)
!9606 = !DILocalVariable(name: "stackbuf", scope: !9602, file: !9573, line: 74, type: !1526)
!9607 = !DILocation(line: 74, column: 12, scope: !9602)
!9608 = !DILocalVariable(name: "buf", scope: !9602, file: !9573, line: 75, type: !9)
!9609 = !DILocation(line: 75, column: 13, scope: !9602)
!9610 = !DILocation(line: 75, column: 19, scope: !9602)
!9611 = !DILocalVariable(name: "buffer", scope: !9602, file: !9573, line: 76, type: !9)
!9612 = !DILocation(line: 76, column: 13, scope: !9602)
!9613 = !DILocation(line: 78, column: 14, scope: !9614)
!9614 = distinct !DILexicalBlock(scope: !9602, file: !9573, line: 78, column: 11)
!9615 = !DILocation(line: 78, column: 19, scope: !9614)
!9616 = !DILocation(line: 78, column: 24, scope: !9614)
!9617 = !DILocation(line: 78, column: 27, scope: !9614)
!9618 = !DILocation(line: 78, column: 36, scope: !9614)
!9619 = !DILocation(line: 78, column: 11, scope: !9602)
!9620 = !DILocation(line: 80, column: 34, scope: !9621)
!9621 = distinct !DILexicalBlock(scope: !9614, file: !9573, line: 79, column: 9)
!9622 = !DILocation(line: 80, column: 26, scope: !9621)
!9623 = !DILocation(line: 80, column: 24, scope: !9621)
!9624 = !DILocation(line: 80, column: 15, scope: !9621)
!9625 = !DILocation(line: 81, column: 16, scope: !9626)
!9626 = distinct !DILexicalBlock(scope: !9621, file: !9573, line: 81, column: 15)
!9627 = !DILocation(line: 81, column: 15, scope: !9621)
!9628 = !DILocation(line: 82, column: 13, scope: !9626)
!9629 = !DILocation(line: 83, column: 9, scope: !9621)
!9630 = !DILocation(line: 85, column: 21, scope: !9602)
!9631 = !DILocation(line: 85, column: 27, scope: !9602)
!9632 = !DILocation(line: 85, column: 32, scope: !9602)
!9633 = !DILocation(line: 85, column: 11, scope: !9602)
!9634 = !DILocation(line: 85, column: 9, scope: !9602)
!9635 = !DILocation(line: 86, column: 21, scope: !9602)
!9636 = !DILocation(line: 86, column: 19, scope: !9602)
!9637 = !DILocation(line: 90, column: 11, scope: !9638)
!9638 = distinct !DILexicalBlock(scope: !9602, file: !9573, line: 90, column: 11)
!9639 = !DILocation(line: 90, column: 13, scope: !9638)
!9640 = !DILocation(line: 90, column: 17, scope: !9638)
!9641 = !DILocation(line: 90, column: 20, scope: !9638)
!9642 = !DILocation(line: 90, column: 26, scope: !9638)
!9643 = !DILocation(line: 90, column: 11, scope: !9602)
!9644 = !DILocalVariable(name: "saved_errno", scope: !9645, file: !9573, line: 92, type: !7)
!9645 = distinct !DILexicalBlock(scope: !9638, file: !9573, line: 91, column: 9)
!9646 = !DILocation(line: 92, column: 15, scope: !9645)
!9647 = !DILocation(line: 92, column: 29, scope: !9645)
!9648 = !DILocation(line: 93, column: 17, scope: !9645)
!9649 = !DILocation(line: 93, column: 11, scope: !9645)
!9650 = !DILocation(line: 94, column: 19, scope: !9645)
!9651 = !DILocation(line: 94, column: 11, scope: !9645)
!9652 = !DILocation(line: 94, column: 17, scope: !9645)
!9653 = !DILocation(line: 95, column: 11, scope: !9645)
!9654 = !DILocation(line: 98, column: 11, scope: !9655)
!9655 = distinct !DILexicalBlock(scope: !9602, file: !9573, line: 98, column: 11)
!9656 = !DILocation(line: 98, column: 25, scope: !9655)
!9657 = !DILocation(line: 98, column: 23, scope: !9655)
!9658 = !DILocation(line: 98, column: 11, scope: !9602)
!9659 = !DILocation(line: 100, column: 11, scope: !9660)
!9660 = distinct !DILexicalBlock(scope: !9655, file: !9573, line: 99, column: 9)
!9661 = !DILocation(line: 100, column: 15, scope: !9660)
!9662 = !DILocation(line: 100, column: 28, scope: !9660)
!9663 = !DILocation(line: 101, column: 16, scope: !9664)
!9664 = distinct !DILexicalBlock(scope: !9660, file: !9573, line: 101, column: 15)
!9665 = !DILocation(line: 101, column: 15, scope: !9660)
!9666 = !DILocation(line: 103, column: 32, scope: !9667)
!9667 = distinct !DILexicalBlock(scope: !9664, file: !9573, line: 102, column: 13)
!9668 = !DILocation(line: 103, column: 44, scope: !9667)
!9669 = !DILocation(line: 103, column: 24, scope: !9667)
!9670 = !DILocation(line: 103, column: 22, scope: !9667)
!9671 = !DILocation(line: 104, column: 19, scope: !9672)
!9672 = distinct !DILexicalBlock(scope: !9667, file: !9573, line: 104, column: 19)
!9673 = !DILocation(line: 104, column: 19, scope: !9667)
!9674 = !DILocation(line: 105, column: 32, scope: !9672)
!9675 = !DILocation(line: 105, column: 40, scope: !9672)
!9676 = !DILocation(line: 105, column: 45, scope: !9672)
!9677 = !DILocation(line: 105, column: 57, scope: !9672)
!9678 = !DILocation(line: 105, column: 24, scope: !9672)
!9679 = !DILocation(line: 105, column: 17, scope: !9672)
!9680 = !DILocation(line: 106, column: 13, scope: !9667)
!9681 = !DILocation(line: 107, column: 20, scope: !9682)
!9682 = distinct !DILexicalBlock(scope: !9664, file: !9573, line: 107, column: 20)
!9683 = !DILocation(line: 107, column: 32, scope: !9682)
!9684 = !DILocation(line: 107, column: 38, scope: !9682)
!9685 = !DILocation(line: 107, column: 36, scope: !9682)
!9686 = !DILocation(line: 107, column: 20, scope: !9664)
!9687 = !DILocalVariable(name: "shrinked_buffer", scope: !9688, file: !9573, line: 110, type: !9)
!9688 = distinct !DILexicalBlock(scope: !9682, file: !9573, line: 108, column: 13)
!9689 = !DILocation(line: 110, column: 21, scope: !9688)
!9690 = !DILocation(line: 110, column: 48, scope: !9688)
!9691 = !DILocation(line: 110, column: 56, scope: !9688)
!9692 = !DILocation(line: 110, column: 68, scope: !9688)
!9693 = !DILocation(line: 110, column: 39, scope: !9688)
!9694 = !DILocation(line: 111, column: 19, scope: !9695)
!9695 = distinct !DILexicalBlock(scope: !9688, file: !9573, line: 111, column: 19)
!9696 = !DILocation(line: 111, column: 35, scope: !9695)
!9697 = !DILocation(line: 111, column: 19, scope: !9688)
!9698 = !DILocation(line: 112, column: 26, scope: !9695)
!9699 = !DILocation(line: 112, column: 24, scope: !9695)
!9700 = !DILocation(line: 112, column: 17, scope: !9695)
!9701 = !DILocation(line: 113, column: 13, scope: !9688)
!9702 = !DILocation(line: 114, column: 18, scope: !9660)
!9703 = !DILocation(line: 114, column: 11, scope: !9660)
!9704 = !DILocation(line: 117, column: 13, scope: !9602)
!9705 = !DILocation(line: 117, column: 7, scope: !9602)
!9706 = !DILocation(line: 118, column: 11, scope: !9707)
!9707 = distinct !DILexicalBlock(scope: !9602, file: !9573, line: 118, column: 11)
!9708 = !DILocation(line: 118, column: 20, scope: !9707)
!9709 = !DILocation(line: 118, column: 11, scope: !9602)
!9710 = !DILocation(line: 119, column: 18, scope: !9707)
!9711 = !DILocation(line: 119, column: 9, scope: !9707)
!9712 = !DILocation(line: 120, column: 16, scope: !9713)
!9713 = distinct !DILexicalBlock(scope: !9707, file: !9573, line: 120, column: 16)
!9714 = !DILocation(line: 120, column: 25, scope: !9713)
!9715 = !DILocation(line: 120, column: 16, scope: !9707)
!9716 = !DILocation(line: 121, column: 18, scope: !9713)
!9717 = !DILocation(line: 121, column: 9, scope: !9713)
!9718 = !DILocation(line: 124, column: 11, scope: !9719)
!9719 = distinct !DILexicalBlock(scope: !9713, file: !9573, line: 123, column: 9)
!9720 = !DILocation(line: 124, column: 17, scope: !9719)
!9721 = !DILocation(line: 125, column: 11, scope: !9719)
!9722 = distinct !{!9722, !9600, !9723}
!9723 = !DILocation(line: 127, column: 5, scope: !9572)
!9724 = !DILocation(line: 128, column: 1, scope: !9572)
!9725 = distinct !DISubprogram(name: "set_simple_backup_suffix", scope: !685, file: !685, line: 88, type: !202, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !681, retainedNodes: !209)
!9726 = !DILocalVariable(name: "s", arg: 1, scope: !9725, file: !685, line: 88, type: !180)
!9727 = !DILocation(line: 88, column: 39, scope: !9725)
!9728 = !DILocation(line: 90, column: 8, scope: !9729)
!9729 = distinct !DILexicalBlock(scope: !9725, file: !685, line: 90, column: 7)
!9730 = !DILocation(line: 90, column: 7, scope: !9725)
!9731 = !DILocation(line: 91, column: 9, scope: !9729)
!9732 = !DILocation(line: 91, column: 7, scope: !9729)
!9733 = !DILocation(line: 91, column: 5, scope: !9729)
!9734 = !DILocation(line: 92, column: 26, scope: !9725)
!9735 = !DILocation(line: 92, column: 28, scope: !9725)
!9736 = !DILocation(line: 92, column: 32, scope: !9725)
!9737 = !DILocation(line: 92, column: 31, scope: !9725)
!9738 = !DILocation(line: 92, column: 34, scope: !9725)
!9739 = !DILocation(line: 92, column: 37, scope: !9725)
!9740 = !DILocation(line: 92, column: 58, scope: !9725)
!9741 = !DILocation(line: 92, column: 42, scope: !9725)
!9742 = !DILocation(line: 92, column: 39, scope: !9725)
!9743 = !DILocation(line: 92, column: 63, scope: !9725)
!9744 = !DILocation(line: 92, column: 24, scope: !9725)
!9745 = !DILocation(line: 93, column: 1, scope: !9725)
!9746 = distinct !DISubprogram(name: "backupfile_internal", scope: !685, file: !685, line: 314, type: !692, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !681, retainedNodes: !209)
!9747 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !9746, file: !685, line: 314, type: !7)
!9748 = !DILocation(line: 314, column: 26, scope: !9746)
!9749 = !DILocalVariable(name: "file", arg: 2, scope: !9746, file: !685, line: 314, type: !180)
!9750 = !DILocation(line: 314, column: 46, scope: !9746)
!9751 = !DILocalVariable(name: "backup_type", arg: 3, scope: !9746, file: !685, line: 315, type: !68)
!9752 = !DILocation(line: 315, column: 39, scope: !9746)
!9753 = !DILocalVariable(name: "rename", arg: 4, scope: !9746, file: !685, line: 315, type: !142)
!9754 = !DILocation(line: 315, column: 57, scope: !9746)
!9755 = !DILocalVariable(name: "base_offset", scope: !9746, file: !685, line: 317, type: !654)
!9756 = !DILocation(line: 317, column: 13, scope: !9746)
!9757 = !DILocation(line: 317, column: 43, scope: !9746)
!9758 = !DILocation(line: 317, column: 27, scope: !9746)
!9759 = !DILocation(line: 317, column: 51, scope: !9746)
!9760 = !DILocation(line: 317, column: 49, scope: !9746)
!9761 = !DILocalVariable(name: "filelen", scope: !9746, file: !685, line: 318, type: !55)
!9762 = !DILocation(line: 318, column: 10, scope: !9746)
!9763 = !DILocation(line: 318, column: 20, scope: !9746)
!9764 = !DILocation(line: 318, column: 42, scope: !9746)
!9765 = !DILocation(line: 318, column: 49, scope: !9746)
!9766 = !DILocation(line: 318, column: 47, scope: !9746)
!9767 = !DILocation(line: 318, column: 34, scope: !9746)
!9768 = !DILocation(line: 318, column: 32, scope: !9746)
!9769 = !DILocation(line: 320, column: 9, scope: !9770)
!9770 = distinct !DILexicalBlock(scope: !9746, file: !685, line: 320, column: 7)
!9771 = !DILocation(line: 320, column: 7, scope: !9746)
!9772 = !DILocation(line: 321, column: 5, scope: !9770)
!9773 = !DILocalVariable(name: "simple_backup_suffix_size", scope: !9746, file: !685, line: 325, type: !55)
!9774 = !DILocation(line: 325, column: 10, scope: !9746)
!9775 = !DILocation(line: 325, column: 46, scope: !9746)
!9776 = !DILocation(line: 325, column: 38, scope: !9746)
!9777 = !DILocation(line: 325, column: 68, scope: !9746)
!9778 = !DILocalVariable(name: "backup_suffix_size_guess", scope: !9746, file: !685, line: 326, type: !55)
!9779 = !DILocation(line: 326, column: 10, scope: !9746)
!9780 = !DILocation(line: 326, column: 37, scope: !9746)
!9781 = !DILocation(line: 328, column: 7, scope: !9782)
!9782 = distinct !DILexicalBlock(scope: !9746, file: !685, line: 328, column: 7)
!9783 = !DILocation(line: 328, column: 32, scope: !9782)
!9784 = !DILocation(line: 328, column: 7, scope: !9746)
!9785 = !DILocation(line: 329, column: 30, scope: !9782)
!9786 = !DILocation(line: 329, column: 5, scope: !9782)
!9787 = !DILocalVariable(name: "ssize", scope: !9746, file: !685, line: 331, type: !694)
!9788 = !DILocation(line: 331, column: 11, scope: !9746)
!9789 = !DILocation(line: 331, column: 19, scope: !9746)
!9790 = !DILocation(line: 331, column: 29, scope: !9746)
!9791 = !DILocation(line: 331, column: 27, scope: !9746)
!9792 = !DILocation(line: 331, column: 54, scope: !9746)
!9793 = !DILocalVariable(name: "s", scope: !9746, file: !685, line: 332, type: !9)
!9794 = !DILocation(line: 332, column: 9, scope: !9746)
!9795 = !DILocation(line: 332, column: 21, scope: !9746)
!9796 = !DILocation(line: 332, column: 13, scope: !9746)
!9797 = !DILocation(line: 333, column: 8, scope: !9798)
!9798 = distinct !DILexicalBlock(scope: !9746, file: !685, line: 333, column: 7)
!9799 = !DILocation(line: 333, column: 7, scope: !9746)
!9800 = !DILocation(line: 334, column: 12, scope: !9798)
!9801 = !DILocation(line: 334, column: 5, scope: !9798)
!9802 = !DILocalVariable(name: "dirp", scope: !9746, file: !685, line: 336, type: !695)
!9803 = !DILocation(line: 336, column: 8, scope: !9746)
!9804 = !DILocalVariable(name: "sdir", scope: !9746, file: !685, line: 337, type: !7)
!9805 = !DILocation(line: 337, column: 7, scope: !9746)
!9806 = !DILocalVariable(name: "base_max", scope: !9746, file: !685, line: 338, type: !55)
!9807 = !DILocation(line: 338, column: 10, scope: !9746)
!9808 = !DILocation(line: 339, column: 3, scope: !9746)
!9809 = !DILocation(line: 341, column: 15, scope: !9810)
!9810 = distinct !DILexicalBlock(scope: !9746, file: !685, line: 340, column: 5)
!9811 = !DILocation(line: 341, column: 18, scope: !9810)
!9812 = !DILocation(line: 341, column: 24, scope: !9810)
!9813 = !DILocation(line: 341, column: 32, scope: !9810)
!9814 = !DILocation(line: 341, column: 7, scope: !9810)
!9815 = !DILocation(line: 343, column: 11, scope: !9816)
!9816 = distinct !DILexicalBlock(scope: !9810, file: !685, line: 343, column: 11)
!9817 = !DILocation(line: 343, column: 23, scope: !9816)
!9818 = !DILocation(line: 343, column: 11, scope: !9810)
!9819 = !DILocation(line: 344, column: 17, scope: !9816)
!9820 = !DILocation(line: 344, column: 21, scope: !9816)
!9821 = !DILocation(line: 344, column: 19, scope: !9816)
!9822 = !DILocation(line: 344, column: 30, scope: !9816)
!9823 = !DILocation(line: 344, column: 52, scope: !9816)
!9824 = !DILocation(line: 344, column: 9, scope: !9816)
!9825 = !DILocation(line: 346, column: 34, scope: !9816)
!9826 = !DILocation(line: 346, column: 46, scope: !9816)
!9827 = !DILocation(line: 346, column: 53, scope: !9816)
!9828 = !DILocation(line: 346, column: 62, scope: !9816)
!9829 = !DILocation(line: 346, column: 17, scope: !9816)
!9830 = !DILocation(line: 346, column: 9, scope: !9816)
!9831 = !DILocation(line: 350, column: 13, scope: !9832)
!9832 = distinct !DILexicalBlock(scope: !9816, file: !685, line: 348, column: 11)
!9833 = !DILocation(line: 353, column: 17, scope: !9834)
!9834 = distinct !DILexicalBlock(scope: !9832, file: !685, line: 353, column: 17)
!9835 = !DILocation(line: 353, column: 29, scope: !9834)
!9836 = !DILocation(line: 353, column: 17, scope: !9832)
!9837 = !DILocation(line: 355, column: 29, scope: !9838)
!9838 = distinct !DILexicalBlock(scope: !9834, file: !685, line: 354, column: 15)
!9839 = !DILocation(line: 356, column: 25, scope: !9838)
!9840 = !DILocation(line: 356, column: 29, scope: !9838)
!9841 = !DILocation(line: 356, column: 27, scope: !9838)
!9842 = !DILocation(line: 356, column: 38, scope: !9838)
!9843 = !DILocation(line: 357, column: 25, scope: !9838)
!9844 = !DILocation(line: 356, column: 17, scope: !9838)
!9845 = !DILocation(line: 358, column: 15, scope: !9838)
!9846 = !DILocation(line: 359, column: 13, scope: !9832)
!9847 = !DILocation(line: 361, column: 30, scope: !9832)
!9848 = !DILocation(line: 361, column: 33, scope: !9832)
!9849 = !DILocation(line: 361, column: 47, scope: !9832)
!9850 = !DILocation(line: 361, column: 13, scope: !9832)
!9851 = !DILocation(line: 362, column: 13, scope: !9832)
!9852 = !DILocation(line: 365, column: 17, scope: !9853)
!9853 = distinct !DILexicalBlock(scope: !9832, file: !685, line: 365, column: 17)
!9854 = !DILocation(line: 365, column: 17, scope: !9832)
!9855 = !DILocation(line: 366, column: 25, scope: !9853)
!9856 = !DILocation(line: 366, column: 15, scope: !9853)
!9857 = !DILocation(line: 367, column: 19, scope: !9832)
!9858 = !DILocation(line: 367, column: 13, scope: !9832)
!9859 = !DILocation(line: 368, column: 13, scope: !9832)
!9860 = !DILocation(line: 368, column: 19, scope: !9832)
!9861 = !DILocation(line: 369, column: 13, scope: !9832)
!9862 = !DILocation(line: 372, column: 13, scope: !9863)
!9863 = distinct !DILexicalBlock(scope: !9810, file: !685, line: 372, column: 11)
!9864 = !DILocation(line: 372, column: 11, scope: !9810)
!9865 = !DILocation(line: 373, column: 9, scope: !9863)
!9866 = !DILocation(line: 375, column: 11, scope: !9867)
!9867 = distinct !DILexicalBlock(scope: !9810, file: !685, line: 375, column: 11)
!9868 = !DILocation(line: 375, column: 16, scope: !9867)
!9869 = !DILocation(line: 375, column: 11, scope: !9810)
!9870 = !DILocation(line: 377, column: 16, scope: !9871)
!9871 = distinct !DILexicalBlock(scope: !9867, file: !685, line: 376, column: 9)
!9872 = !DILocation(line: 378, column: 23, scope: !9871)
!9873 = !DILocation(line: 379, column: 9, scope: !9871)
!9874 = !DILocalVariable(name: "flags", scope: !9810, file: !685, line: 380, type: !70)
!9875 = !DILocation(line: 380, column: 16, scope: !9810)
!9876 = !DILocation(line: 380, column: 24, scope: !9810)
!9877 = !DILocation(line: 380, column: 36, scope: !9810)
!9878 = !DILocation(line: 381, column: 32, scope: !9879)
!9879 = distinct !DILexicalBlock(scope: !9810, file: !685, line: 381, column: 11)
!9880 = !DILocation(line: 381, column: 38, scope: !9879)
!9881 = !DILocation(line: 381, column: 44, scope: !9879)
!9882 = !DILocation(line: 381, column: 48, scope: !9879)
!9883 = !DILocation(line: 381, column: 46, scope: !9879)
!9884 = !DILocation(line: 381, column: 61, scope: !9879)
!9885 = !DILocation(line: 381, column: 11, scope: !9879)
!9886 = !DILocation(line: 381, column: 68, scope: !9879)
!9887 = !DILocation(line: 381, column: 11, scope: !9810)
!9888 = !DILocation(line: 382, column: 9, scope: !9879)
!9889 = !DILocalVariable(name: "e", scope: !9810, file: !685, line: 383, type: !7)
!9890 = !DILocation(line: 383, column: 11, scope: !9810)
!9891 = !DILocation(line: 383, column: 15, scope: !9810)
!9892 = !DILocation(line: 384, column: 11, scope: !9893)
!9893 = distinct !DILexicalBlock(scope: !9810, file: !685, line: 384, column: 11)
!9894 = !DILocation(line: 384, column: 13, scope: !9893)
!9895 = !DILocation(line: 384, column: 11, scope: !9810)
!9896 = !DILocation(line: 386, column: 15, scope: !9897)
!9897 = distinct !DILexicalBlock(scope: !9898, file: !685, line: 386, column: 15)
!9898 = distinct !DILexicalBlock(scope: !9893, file: !685, line: 385, column: 9)
!9899 = !DILocation(line: 386, column: 15, scope: !9898)
!9900 = !DILocation(line: 387, column: 23, scope: !9897)
!9901 = !DILocation(line: 387, column: 13, scope: !9897)
!9902 = !DILocation(line: 388, column: 17, scope: !9898)
!9903 = !DILocation(line: 388, column: 11, scope: !9898)
!9904 = !DILocation(line: 389, column: 19, scope: !9898)
!9905 = !DILocation(line: 389, column: 11, scope: !9898)
!9906 = !DILocation(line: 389, column: 17, scope: !9898)
!9907 = !DILocation(line: 390, column: 11, scope: !9898)
!9908 = distinct !{!9908, !9808, !9909}
!9909 = !DILocation(line: 392, column: 5, scope: !9746)
!9910 = !DILocation(line: 394, column: 7, scope: !9911)
!9911 = distinct !DILexicalBlock(scope: !9746, file: !685, line: 394, column: 7)
!9912 = !DILocation(line: 394, column: 7, scope: !9746)
!9913 = !DILocation(line: 395, column: 15, scope: !9911)
!9914 = !DILocation(line: 395, column: 5, scope: !9911)
!9915 = !DILocation(line: 396, column: 10, scope: !9746)
!9916 = !DILocation(line: 396, column: 3, scope: !9746)
!9917 = !DILocation(line: 397, column: 1, scope: !9746)
!9918 = distinct !DISubprogram(name: "numbered_backup", scope: !685, file: !685, line: 207, type: !699, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !681, retainedNodes: !209)
!9919 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !9918, file: !685, line: 207, type: !7)
!9920 = !DILocation(line: 207, column: 22, scope: !9918)
!9921 = !DILocalVariable(name: "buffer", arg: 2, scope: !9918, file: !685, line: 207, type: !184)
!9922 = !DILocation(line: 207, column: 37, scope: !9918)
!9923 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !9918, file: !685, line: 207, type: !55)
!9924 = !DILocation(line: 207, column: 52, scope: !9918)
!9925 = !DILocalVariable(name: "filelen", arg: 4, scope: !9918, file: !685, line: 207, type: !55)
!9926 = !DILocation(line: 207, column: 72, scope: !9918)
!9927 = !DILocalVariable(name: "base_offset", arg: 5, scope: !9918, file: !685, line: 208, type: !654)
!9928 = !DILocation(line: 208, column: 28, scope: !9918)
!9929 = !DILocalVariable(name: "dirpp", arg: 6, scope: !9918, file: !685, line: 208, type: !701)
!9930 = !DILocation(line: 208, column: 47, scope: !9918)
!9931 = !DILocalVariable(name: "pnew_fd", arg: 7, scope: !9918, file: !685, line: 208, type: !193)
!9932 = !DILocation(line: 208, column: 59, scope: !9918)
!9933 = !DILocalVariable(name: "result", scope: !9918, file: !685, line: 210, type: !684)
!9934 = !DILocation(line: 210, column: 31, scope: !9918)
!9935 = !DILocalVariable(name: "dirp", scope: !9918, file: !685, line: 211, type: !695)
!9936 = !DILocation(line: 211, column: 8, scope: !9918)
!9937 = !DILocation(line: 211, column: 16, scope: !9918)
!9938 = !DILocation(line: 211, column: 15, scope: !9918)
!9939 = !DILocalVariable(name: "dp", scope: !9918, file: !685, line: 212, type: !702)
!9940 = !DILocation(line: 212, column: 18, scope: !9918)
!9941 = !DILocalVariable(name: "buf", scope: !9918, file: !685, line: 213, type: !9)
!9942 = !DILocation(line: 213, column: 9, scope: !9918)
!9943 = !DILocation(line: 213, column: 16, scope: !9918)
!9944 = !DILocation(line: 213, column: 15, scope: !9918)
!9945 = !DILocalVariable(name: "versionlenmax", scope: !9918, file: !685, line: 214, type: !55)
!9946 = !DILocation(line: 214, column: 10, scope: !9918)
!9947 = !DILocalVariable(name: "base", scope: !9918, file: !685, line: 215, type: !9)
!9948 = !DILocation(line: 215, column: 9, scope: !9918)
!9949 = !DILocation(line: 215, column: 16, scope: !9918)
!9950 = !DILocation(line: 215, column: 22, scope: !9918)
!9951 = !DILocation(line: 215, column: 20, scope: !9918)
!9952 = !DILocalVariable(name: "baselen", scope: !9918, file: !685, line: 216, type: !55)
!9953 = !DILocation(line: 216, column: 10, scope: !9918)
!9954 = !DILocation(line: 216, column: 30, scope: !9918)
!9955 = !DILocation(line: 216, column: 20, scope: !9918)
!9956 = !DILocation(line: 218, column: 7, scope: !9957)
!9957 = distinct !DILexicalBlock(scope: !9918, file: !685, line: 218, column: 7)
!9958 = !DILocation(line: 218, column: 7, scope: !9918)
!9959 = !DILocation(line: 219, column: 16, scope: !9957)
!9960 = !DILocation(line: 219, column: 5, scope: !9957)
!9961 = !DILocalVariable(name: "tmp", scope: !9962, file: !685, line: 224, type: !711)
!9962 = distinct !DILexicalBlock(scope: !9957, file: !685, line: 221, column: 5)
!9963 = !DILocation(line: 224, column: 12, scope: !9962)
!9964 = !DILocation(line: 225, column: 7, scope: !9962)
!9965 = !DILocation(line: 225, column: 20, scope: !9962)
!9966 = !DILocation(line: 226, column: 15, scope: !9962)
!9967 = !DILocation(line: 226, column: 7, scope: !9962)
!9968 = !DILocation(line: 227, column: 25, scope: !9962)
!9969 = !DILocation(line: 227, column: 33, scope: !9962)
!9970 = !DILocation(line: 227, column: 41, scope: !9962)
!9971 = !DILocation(line: 227, column: 14, scope: !9962)
!9972 = !DILocation(line: 227, column: 12, scope: !9962)
!9973 = !DILocation(line: 228, column: 12, scope: !9974)
!9974 = distinct !DILexicalBlock(scope: !9962, file: !685, line: 228, column: 11)
!9975 = !DILocation(line: 228, column: 17, scope: !9974)
!9976 = !DILocation(line: 228, column: 20, scope: !9974)
!9977 = !DILocation(line: 228, column: 26, scope: !9974)
!9978 = !DILocation(line: 228, column: 11, scope: !9962)
!9979 = !DILocation(line: 229, column: 16, scope: !9974)
!9980 = !DILocation(line: 229, column: 9, scope: !9974)
!9981 = !DILocation(line: 230, column: 15, scope: !9962)
!9982 = !DILocation(line: 230, column: 7, scope: !9962)
!9983 = !DILocation(line: 231, column: 15, scope: !9962)
!9984 = !DILocation(line: 231, column: 22, scope: !9962)
!9985 = !DILocation(line: 231, column: 20, scope: !9962)
!9986 = !DILocation(line: 231, column: 7, scope: !9962)
!9987 = !DILocation(line: 232, column: 12, scope: !9988)
!9988 = distinct !DILexicalBlock(scope: !9962, file: !685, line: 232, column: 11)
!9989 = !DILocation(line: 232, column: 11, scope: !9962)
!9990 = !DILocation(line: 233, column: 16, scope: !9988)
!9991 = !DILocation(line: 233, column: 9, scope: !9988)
!9992 = !DILocation(line: 234, column: 16, scope: !9962)
!9993 = !DILocation(line: 234, column: 8, scope: !9962)
!9994 = !DILocation(line: 234, column: 14, scope: !9962)
!9995 = !DILocation(line: 237, column: 3, scope: !9918)
!9996 = !DILocation(line: 237, column: 25, scope: !9918)
!9997 = !DILocation(line: 237, column: 16, scope: !9918)
!9998 = !DILocation(line: 237, column: 14, scope: !9918)
!9999 = !DILocation(line: 237, column: 32, scope: !9918)
!10000 = !DILocalVariable(name: "p", scope: !10001, file: !685, line: 239, type: !180)
!10001 = distinct !DILexicalBlock(scope: !9918, file: !685, line: 238, column: 5)
!10002 = !DILocation(line: 239, column: 19, scope: !10001)
!10003 = !DILocalVariable(name: "q", scope: !10001, file: !685, line: 240, type: !9)
!10004 = !DILocation(line: 240, column: 13, scope: !10001)
!10005 = !DILocalVariable(name: "all_9s", scope: !10001, file: !685, line: 241, type: !142)
!10006 = !DILocation(line: 241, column: 12, scope: !10001)
!10007 = !DILocalVariable(name: "versionlen", scope: !10001, file: !685, line: 242, type: !55)
!10008 = !DILocation(line: 242, column: 14, scope: !10001)
!10009 = !DILocation(line: 244, column: 11, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !10001, file: !685, line: 244, column: 11)
!10011 = !DILocation(line: 244, column: 34, scope: !10010)
!10012 = !DILocation(line: 244, column: 42, scope: !10010)
!10013 = !DILocation(line: 244, column: 32, scope: !10010)
!10014 = !DILocation(line: 244, column: 11, scope: !10001)
!10015 = !DILocation(line: 245, column: 9, scope: !10010)
!10016 = distinct !{!10016, !9995, !10017}
!10017 = !DILocation(line: 301, column: 5, scope: !9918)
!10018 = !DILocation(line: 247, column: 19, scope: !10019)
!10019 = distinct !DILexicalBlock(scope: !10001, file: !685, line: 247, column: 11)
!10020 = !DILocation(line: 247, column: 25, scope: !10019)
!10021 = !DILocation(line: 247, column: 23, scope: !10019)
!10022 = !DILocation(line: 247, column: 38, scope: !10019)
!10023 = !DILocation(line: 247, column: 42, scope: !10019)
!10024 = !DILocation(line: 247, column: 50, scope: !10019)
!10025 = !DILocation(line: 247, column: 58, scope: !10019)
!10026 = !DILocation(line: 247, column: 11, scope: !10019)
!10027 = !DILocation(line: 247, column: 63, scope: !10019)
!10028 = !DILocation(line: 247, column: 11, scope: !10001)
!10029 = !DILocation(line: 248, column: 9, scope: !10019)
!10030 = !DILocation(line: 250, column: 11, scope: !10001)
!10031 = !DILocation(line: 250, column: 15, scope: !10001)
!10032 = !DILocation(line: 250, column: 24, scope: !10001)
!10033 = !DILocation(line: 250, column: 22, scope: !10001)
!10034 = !DILocation(line: 250, column: 32, scope: !10001)
!10035 = !DILocation(line: 250, column: 9, scope: !10001)
!10036 = !DILocation(line: 256, column: 22, scope: !10037)
!10037 = distinct !DILexicalBlock(scope: !10001, file: !685, line: 256, column: 11)
!10038 = !DILocation(line: 256, column: 21, scope: !10037)
!10039 = !DILocation(line: 256, column: 18, scope: !10037)
!10040 = !DILocation(line: 256, column: 24, scope: !10037)
!10041 = !DILocation(line: 256, column: 28, scope: !10037)
!10042 = !DILocation(line: 256, column: 27, scope: !10037)
!10043 = !DILocation(line: 256, column: 30, scope: !10037)
!10044 = !DILocation(line: 256, column: 11, scope: !10001)
!10045 = !DILocation(line: 257, column: 9, scope: !10037)
!10046 = !DILocation(line: 258, column: 18, scope: !10001)
!10047 = !DILocation(line: 258, column: 17, scope: !10001)
!10048 = !DILocation(line: 258, column: 20, scope: !10001)
!10049 = !DILocation(line: 258, column: 14, scope: !10001)
!10050 = !DILocation(line: 259, column: 23, scope: !10051)
!10051 = distinct !DILexicalBlock(scope: !10001, file: !685, line: 259, column: 7)
!10052 = !DILocation(line: 259, column: 12, scope: !10051)
!10053 = !DILocation(line: 259, column: 28, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !10051, file: !685, line: 259, column: 7)
!10055 = !DILocation(line: 259, column: 7, scope: !10051)
!10056 = !DILocation(line: 260, column: 20, scope: !10054)
!10057 = !DILocation(line: 260, column: 22, scope: !10054)
!10058 = !DILocation(line: 260, column: 34, scope: !10054)
!10059 = !DILocation(line: 260, column: 16, scope: !10054)
!10060 = !DILocation(line: 260, column: 9, scope: !10054)
!10061 = !DILocation(line: 259, column: 63, scope: !10054)
!10062 = !DILocation(line: 259, column: 7, scope: !10054)
!10063 = distinct !{!10063, !10055, !10064}
!10064 = !DILocation(line: 260, column: 40, scope: !10051)
!10065 = !DILocation(line: 262, column: 14, scope: !10066)
!10066 = distinct !DILexicalBlock(scope: !10001, file: !685, line: 262, column: 11)
!10067 = !DILocation(line: 262, column: 16, scope: !10066)
!10068 = !DILocation(line: 262, column: 28, scope: !10066)
!10069 = !DILocation(line: 262, column: 35, scope: !10066)
!10070 = !DILocation(line: 262, column: 39, scope: !10066)
!10071 = !DILocation(line: 262, column: 41, scope: !10066)
!10072 = !DILocation(line: 262, column: 52, scope: !10066)
!10073 = !DILocation(line: 263, column: 14, scope: !10066)
!10074 = !DILocation(line: 263, column: 18, scope: !10066)
!10075 = !DILocation(line: 263, column: 34, scope: !10066)
!10076 = !DILocation(line: 263, column: 32, scope: !10066)
!10077 = !DILocation(line: 264, column: 18, scope: !10066)
!10078 = !DILocation(line: 264, column: 22, scope: !10066)
!10079 = !DILocation(line: 264, column: 39, scope: !10066)
!10080 = !DILocation(line: 264, column: 36, scope: !10066)
!10081 = !DILocation(line: 265, column: 22, scope: !10066)
!10082 = !DILocation(line: 265, column: 33, scope: !10066)
!10083 = !DILocation(line: 265, column: 39, scope: !10066)
!10084 = !DILocation(line: 265, column: 37, scope: !10066)
!10085 = !DILocation(line: 265, column: 47, scope: !10066)
!10086 = !DILocation(line: 265, column: 52, scope: !10066)
!10087 = !DILocation(line: 265, column: 55, scope: !10066)
!10088 = !DILocation(line: 265, column: 25, scope: !10066)
!10089 = !DILocation(line: 265, column: 67, scope: !10066)
!10090 = !DILocation(line: 262, column: 11, scope: !10001)
!10091 = !DILocation(line: 266, column: 9, scope: !10066)
!10092 = !DILocation(line: 272, column: 23, scope: !10001)
!10093 = !DILocation(line: 272, column: 32, scope: !10001)
!10094 = !DILocation(line: 272, column: 30, scope: !10001)
!10095 = !DILocation(line: 272, column: 21, scope: !10001)
!10096 = !DILocation(line: 273, column: 17, scope: !10001)
!10097 = !DILocation(line: 273, column: 14, scope: !10001)
!10098 = !DILocalVariable(name: "new_buffer_size", scope: !10001, file: !685, line: 274, type: !55)
!10099 = !DILocation(line: 274, column: 14, scope: !10001)
!10100 = !DILocation(line: 274, column: 32, scope: !10001)
!10101 = !DILocation(line: 274, column: 40, scope: !10001)
!10102 = !DILocation(line: 274, column: 46, scope: !10001)
!10103 = !DILocation(line: 274, column: 44, scope: !10001)
!10104 = !DILocation(line: 274, column: 60, scope: !10001)
!10105 = !DILocation(line: 275, column: 11, scope: !10106)
!10106 = distinct !DILexicalBlock(scope: !10001, file: !685, line: 275, column: 11)
!10107 = !DILocation(line: 275, column: 25, scope: !10106)
!10108 = !DILocation(line: 275, column: 23, scope: !10106)
!10109 = !DILocation(line: 275, column: 11, scope: !10001)
!10110 = !DILocation(line: 277, column: 17, scope: !10111)
!10111 = distinct !DILexicalBlock(scope: !10112, file: !685, line: 277, column: 15)
!10112 = distinct !DILexicalBlock(scope: !10106, file: !685, line: 276, column: 9)
!10113 = !DILocation(line: 277, column: 15, scope: !10112)
!10114 = !DILocation(line: 278, column: 29, scope: !10111)
!10115 = !DILocation(line: 278, column: 13, scope: !10111)
!10116 = !DILocalVariable(name: "new_buf", scope: !10112, file: !685, line: 279, type: !9)
!10117 = !DILocation(line: 279, column: 17, scope: !10112)
!10118 = !DILocation(line: 279, column: 36, scope: !10112)
!10119 = !DILocation(line: 279, column: 41, scope: !10112)
!10120 = !DILocation(line: 279, column: 27, scope: !10112)
!10121 = !DILocation(line: 280, column: 16, scope: !10122)
!10122 = distinct !DILexicalBlock(scope: !10112, file: !685, line: 280, column: 15)
!10123 = !DILocation(line: 280, column: 15, scope: !10112)
!10124 = !DILocation(line: 282, column: 25, scope: !10125)
!10125 = distinct !DILexicalBlock(scope: !10122, file: !685, line: 281, column: 13)
!10126 = !DILocation(line: 282, column: 16, scope: !10125)
!10127 = !DILocation(line: 282, column: 23, scope: !10125)
!10128 = !DILocation(line: 283, column: 15, scope: !10125)
!10129 = !DILocation(line: 285, column: 17, scope: !10112)
!10130 = !DILocation(line: 285, column: 15, scope: !10112)
!10131 = !DILocation(line: 286, column: 25, scope: !10112)
!10132 = !DILocation(line: 286, column: 23, scope: !10112)
!10133 = !DILocation(line: 287, column: 9, scope: !10112)
!10134 = !DILocation(line: 288, column: 11, scope: !10001)
!10135 = !DILocation(line: 288, column: 17, scope: !10001)
!10136 = !DILocation(line: 288, column: 15, scope: !10001)
!10137 = !DILocation(line: 288, column: 9, scope: !10001)
!10138 = !DILocation(line: 289, column: 9, scope: !10001)
!10139 = !DILocation(line: 289, column: 12, scope: !10001)
!10140 = !DILocation(line: 290, column: 9, scope: !10001)
!10141 = !DILocation(line: 290, column: 12, scope: !10001)
!10142 = !DILocation(line: 291, column: 8, scope: !10001)
!10143 = !DILocation(line: 291, column: 10, scope: !10001)
!10144 = !DILocation(line: 292, column: 12, scope: !10001)
!10145 = !DILocation(line: 292, column: 9, scope: !10001)
!10146 = !DILocation(line: 293, column: 15, scope: !10001)
!10147 = !DILocation(line: 293, column: 18, scope: !10001)
!10148 = !DILocation(line: 293, column: 21, scope: !10001)
!10149 = !DILocation(line: 293, column: 32, scope: !10001)
!10150 = !DILocation(line: 293, column: 7, scope: !10001)
!10151 = !DILocation(line: 297, column: 12, scope: !10001)
!10152 = !DILocation(line: 297, column: 9, scope: !10001)
!10153 = !DILocation(line: 298, column: 7, scope: !10001)
!10154 = !DILocation(line: 298, column: 15, scope: !10001)
!10155 = !DILocation(line: 298, column: 14, scope: !10001)
!10156 = !DILocation(line: 298, column: 19, scope: !10001)
!10157 = !DILocation(line: 299, column: 10, scope: !10001)
!10158 = !DILocation(line: 299, column: 12, scope: !10001)
!10159 = distinct !{!10159, !10153, !10160}
!10160 = !DILocation(line: 299, column: 14, scope: !10001)
!10161 = !DILocation(line: 300, column: 10, scope: !10001)
!10162 = !DILocation(line: 300, column: 7, scope: !10001)
!10163 = !DILocation(line: 303, column: 13, scope: !9918)
!10164 = !DILocation(line: 303, column: 4, scope: !9918)
!10165 = !DILocation(line: 303, column: 11, scope: !9918)
!10166 = !DILocation(line: 304, column: 10, scope: !9918)
!10167 = !DILocation(line: 304, column: 3, scope: !9918)
!10168 = !DILocation(line: 305, column: 1, scope: !9918)
!10169 = distinct !DISubprogram(name: "check_extension", scope: !685, file: !685, line: 105, type: !712, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !681, retainedNodes: !209)
!10170 = !DILocalVariable(name: "file", arg: 1, scope: !10169, file: !685, line: 105, type: !9)
!10171 = !DILocation(line: 105, column: 24, scope: !10169)
!10172 = !DILocalVariable(name: "filelen", arg: 2, scope: !10169, file: !685, line: 105, type: !55)
!10173 = !DILocation(line: 105, column: 37, scope: !10169)
!10174 = !DILocalVariable(name: "e", arg: 3, scope: !10169, file: !685, line: 105, type: !10)
!10175 = !DILocation(line: 105, column: 51, scope: !10169)
!10176 = !DILocalVariable(name: "dir_fd", arg: 4, scope: !10169, file: !685, line: 106, type: !7)
!10177 = !DILocation(line: 106, column: 22, scope: !10169)
!10178 = !DILocalVariable(name: "base_max", arg: 5, scope: !10169, file: !685, line: 106, type: !714)
!10179 = !DILocation(line: 106, column: 38, scope: !10169)
!10180 = !DILocalVariable(name: "base", scope: !10169, file: !685, line: 108, type: !9)
!10181 = !DILocation(line: 108, column: 9, scope: !10169)
!10182 = !DILocation(line: 108, column: 32, scope: !10169)
!10183 = !DILocation(line: 108, column: 16, scope: !10169)
!10184 = !DILocalVariable(name: "baselen", scope: !10169, file: !685, line: 109, type: !55)
!10185 = !DILocation(line: 109, column: 10, scope: !10169)
!10186 = !DILocation(line: 109, column: 30, scope: !10169)
!10187 = !DILocation(line: 109, column: 20, scope: !10169)
!10188 = !DILocalVariable(name: "baselen_max", scope: !10169, file: !685, line: 110, type: !55)
!10189 = !DILocation(line: 110, column: 10, scope: !10169)
!10190 = !DILocation(line: 112, column: 49, scope: !10191)
!10191 = distinct !DILexicalBlock(scope: !10169, file: !685, line: 112, column: 7)
!10192 = !DILocation(line: 112, column: 47, scope: !10191)
!10193 = !DILocation(line: 112, column: 7, scope: !10169)
!10194 = !DILocation(line: 115, column: 12, scope: !10195)
!10195 = distinct !DILexicalBlock(scope: !10196, file: !685, line: 115, column: 11)
!10196 = distinct !DILexicalBlock(scope: !10191, file: !685, line: 113, column: 5)
!10197 = !DILocation(line: 115, column: 11, scope: !10195)
!10198 = !DILocation(line: 115, column: 21, scope: !10195)
!10199 = !DILocation(line: 115, column: 11, scope: !10196)
!10200 = !DILocalVariable(name: "name_max", scope: !10201, file: !685, line: 117, type: !31)
!10201 = distinct !DILexicalBlock(scope: !10195, file: !685, line: 116, column: 9)
!10202 = !DILocation(line: 117, column: 16, scope: !10201)
!10203 = !DILocation(line: 118, column: 15, scope: !10204)
!10204 = distinct !DILexicalBlock(scope: !10201, file: !685, line: 118, column: 15)
!10205 = !DILocation(line: 118, column: 22, scope: !10204)
!10206 = !DILocation(line: 118, column: 15, scope: !10201)
!10207 = !DILocalVariable(name: "tmp", scope: !10208, file: !685, line: 123, type: !711)
!10208 = distinct !DILexicalBlock(scope: !10204, file: !685, line: 119, column: 13)
!10209 = !DILocation(line: 123, column: 20, scope: !10208)
!10210 = !DILocation(line: 124, column: 15, scope: !10208)
!10211 = !DILocation(line: 124, column: 28, scope: !10208)
!10212 = !DILocation(line: 125, column: 23, scope: !10208)
!10213 = !DILocation(line: 125, column: 15, scope: !10208)
!10214 = !DILocation(line: 126, column: 15, scope: !10208)
!10215 = !DILocation(line: 126, column: 21, scope: !10208)
!10216 = !DILocation(line: 127, column: 36, scope: !10208)
!10217 = !DILocation(line: 127, column: 26, scope: !10208)
!10218 = !DILocation(line: 127, column: 24, scope: !10208)
!10219 = !DILocation(line: 128, column: 28, scope: !10208)
!10220 = !DILocation(line: 128, column: 27, scope: !10208)
!10221 = !DILocation(line: 128, column: 24, scope: !10208)
!10222 = !DILocation(line: 129, column: 23, scope: !10208)
!10223 = !DILocation(line: 129, column: 15, scope: !10208)
!10224 = !DILocation(line: 130, column: 13, scope: !10208)
!10225 = !DILocation(line: 133, column: 15, scope: !10226)
!10226 = distinct !DILexicalBlock(scope: !10204, file: !685, line: 132, column: 13)
!10227 = !DILocation(line: 133, column: 21, scope: !10226)
!10228 = !DILocation(line: 134, column: 37, scope: !10226)
!10229 = !DILocation(line: 134, column: 26, scope: !10226)
!10230 = !DILocation(line: 134, column: 24, scope: !10226)
!10231 = !DILocation(line: 135, column: 28, scope: !10226)
!10232 = !DILocation(line: 135, column: 27, scope: !10226)
!10233 = !DILocation(line: 135, column: 24, scope: !10226)
!10234 = !DILocation(line: 138, column: 29, scope: !10201)
!10235 = !DILocation(line: 138, column: 26, scope: !10201)
!10236 = !DILocation(line: 138, column: 38, scope: !10201)
!10237 = !DILocation(line: 138, column: 41, scope: !10201)
!10238 = !DILocation(line: 138, column: 50, scope: !10201)
!10239 = !DILocation(line: 138, column: 24, scope: !10201)
!10240 = !DILocation(line: 138, column: 64, scope: !10201)
!10241 = !DILocation(line: 139, column: 26, scope: !10201)
!10242 = !DILocation(line: 139, column: 35, scope: !10201)
!10243 = !DILocation(line: 138, column: 12, scope: !10201)
!10244 = !DILocation(line: 138, column: 21, scope: !10201)
!10245 = !DILocation(line: 140, column: 9, scope: !10201)
!10246 = !DILocation(line: 142, column: 22, scope: !10196)
!10247 = !DILocation(line: 142, column: 21, scope: !10196)
!10248 = !DILocation(line: 142, column: 19, scope: !10196)
!10249 = !DILocation(line: 143, column: 5, scope: !10196)
!10250 = !DILocation(line: 160, column: 7, scope: !10251)
!10251 = distinct !DILexicalBlock(scope: !10169, file: !685, line: 160, column: 7)
!10252 = !DILocation(line: 160, column: 21, scope: !10251)
!10253 = !DILocation(line: 160, column: 19, scope: !10251)
!10254 = !DILocation(line: 160, column: 7, scope: !10169)
!10255 = !DILocation(line: 162, column: 17, scope: !10256)
!10256 = distinct !DILexicalBlock(scope: !10251, file: !685, line: 161, column: 5)
!10257 = !DILocation(line: 162, column: 24, scope: !10256)
!10258 = !DILocation(line: 162, column: 22, scope: !10256)
!10259 = !DILocation(line: 162, column: 34, scope: !10256)
!10260 = !DILocation(line: 162, column: 32, scope: !10256)
!10261 = !DILocation(line: 162, column: 15, scope: !10256)
!10262 = !DILocation(line: 163, column: 11, scope: !10263)
!10263 = distinct !DILexicalBlock(scope: !10256, file: !685, line: 163, column: 11)
!10264 = !DILocation(line: 163, column: 26, scope: !10263)
!10265 = !DILocation(line: 163, column: 23, scope: !10263)
!10266 = !DILocation(line: 163, column: 11, scope: !10256)
!10267 = !DILocation(line: 164, column: 19, scope: !10263)
!10268 = !DILocation(line: 164, column: 31, scope: !10263)
!10269 = !DILocation(line: 164, column: 17, scope: !10263)
!10270 = !DILocation(line: 164, column: 9, scope: !10263)
!10271 = !DILocation(line: 165, column: 23, scope: !10256)
!10272 = !DILocation(line: 165, column: 7, scope: !10256)
!10273 = !DILocation(line: 165, column: 12, scope: !10256)
!10274 = !DILocation(line: 165, column: 21, scope: !10256)
!10275 = !DILocation(line: 166, column: 7, scope: !10256)
!10276 = !DILocation(line: 166, column: 12, scope: !10256)
!10277 = !DILocation(line: 166, column: 20, scope: !10256)
!10278 = !DILocation(line: 166, column: 25, scope: !10256)
!10279 = !DILocation(line: 167, column: 5, scope: !10256)
!10280 = !DILocation(line: 168, column: 1, scope: !10169)
!10281 = distinct !DISubprogram(name: "backup_file_rename", scope: !10282, file: !10282, line: 28, type: !722, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1529, retainedNodes: !209)
!10282 = !DIFile(filename: "lib/backup-rename.c", directory: "/home/mbarbar/clone/coreutils")
!10283 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !10281, file: !10282, line: 28, type: !7)
!10284 = !DILocation(line: 28, column: 25, scope: !10281)
!10285 = !DILocalVariable(name: "file", arg: 2, scope: !10281, file: !10282, line: 28, type: !180)
!10286 = !DILocation(line: 28, column: 45, scope: !10281)
!10287 = !DILocalVariable(name: "backup_type", arg: 3, scope: !10281, file: !10282, line: 28, type: !68)
!10288 = !DILocation(line: 28, column: 68, scope: !10281)
!10289 = !DILocation(line: 30, column: 31, scope: !10281)
!10290 = !DILocation(line: 30, column: 39, scope: !10281)
!10291 = !DILocation(line: 30, column: 45, scope: !10281)
!10292 = !DILocation(line: 30, column: 10, scope: !10281)
!10293 = !DILocation(line: 30, column: 3, scope: !10281)
!10294 = distinct !DISubprogram(name: "find_backup_file_name", scope: !738, file: !738, line: 33, type: !722, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !718, retainedNodes: !209)
!10295 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !10294, file: !738, line: 33, type: !7)
!10296 = !DILocation(line: 33, column: 28, scope: !10294)
!10297 = !DILocalVariable(name: "file", arg: 2, scope: !10294, file: !738, line: 33, type: !180)
!10298 = !DILocation(line: 33, column: 48, scope: !10294)
!10299 = !DILocalVariable(name: "backup_type", arg: 3, scope: !10294, file: !738, line: 34, type: !68)
!10300 = !DILocation(line: 34, column: 41, scope: !10294)
!10301 = !DILocalVariable(name: "result", scope: !10294, file: !738, line: 36, type: !9)
!10302 = !DILocation(line: 36, column: 9, scope: !10294)
!10303 = !DILocation(line: 36, column: 39, scope: !10294)
!10304 = !DILocation(line: 36, column: 47, scope: !10294)
!10305 = !DILocation(line: 36, column: 53, scope: !10294)
!10306 = !DILocation(line: 36, column: 18, scope: !10294)
!10307 = !DILocation(line: 37, column: 8, scope: !10308)
!10308 = distinct !DILexicalBlock(scope: !10294, file: !738, line: 37, column: 7)
!10309 = !DILocation(line: 37, column: 7, scope: !10294)
!10310 = !DILocation(line: 38, column: 5, scope: !10308)
!10311 = !DILocation(line: 39, column: 10, scope: !10294)
!10312 = !DILocation(line: 39, column: 3, scope: !10294)
!10313 = distinct !DISubprogram(name: "get_version", scope: !738, file: !738, line: 71, type: !724, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !718, retainedNodes: !209)
!10314 = !DILocalVariable(name: "context", arg: 1, scope: !10313, file: !738, line: 71, type: !180)
!10315 = !DILocation(line: 71, column: 26, scope: !10313)
!10316 = !DILocalVariable(name: "version", arg: 2, scope: !10313, file: !738, line: 71, type: !180)
!10317 = !DILocation(line: 71, column: 47, scope: !10313)
!10318 = !DILocation(line: 73, column: 7, scope: !10319)
!10319 = distinct !DILexicalBlock(scope: !10313, file: !738, line: 73, column: 7)
!10320 = !DILocation(line: 73, column: 15, scope: !10319)
!10321 = !DILocation(line: 73, column: 20, scope: !10319)
!10322 = !DILocation(line: 73, column: 24, scope: !10319)
!10323 = !DILocation(line: 73, column: 23, scope: !10319)
!10324 = !DILocation(line: 73, column: 32, scope: !10319)
!10325 = !DILocation(line: 73, column: 7, scope: !10313)
!10326 = !DILocation(line: 74, column: 5, scope: !10319)
!10327 = !DILocation(line: 76, column: 12, scope: !10319)
!10328 = !DILocation(line: 76, column: 5, scope: !10319)
!10329 = !DILocation(line: 77, column: 1, scope: !10313)
!10330 = distinct !DISubprogram(name: "xget_version", scope: !738, file: !738, line: 87, type: !724, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !718, retainedNodes: !209)
!10331 = !DILocalVariable(name: "context", arg: 1, scope: !10330, file: !738, line: 87, type: !180)
!10332 = !DILocation(line: 87, column: 27, scope: !10330)
!10333 = !DILocalVariable(name: "version", arg: 2, scope: !10330, file: !738, line: 87, type: !180)
!10334 = !DILocation(line: 87, column: 48, scope: !10330)
!10335 = !DILocation(line: 89, column: 7, scope: !10336)
!10336 = distinct !DILexicalBlock(scope: !10330, file: !738, line: 89, column: 7)
!10337 = !DILocation(line: 89, column: 15, scope: !10336)
!10338 = !DILocation(line: 89, column: 19, scope: !10336)
!10339 = !DILocation(line: 89, column: 18, scope: !10336)
!10340 = !DILocation(line: 89, column: 7, scope: !10330)
!10341 = !DILocation(line: 90, column: 25, scope: !10336)
!10342 = !DILocation(line: 90, column: 34, scope: !10336)
!10343 = !DILocation(line: 90, column: 12, scope: !10336)
!10344 = !DILocation(line: 90, column: 5, scope: !10336)
!10345 = !DILocation(line: 92, column: 45, scope: !10336)
!10346 = !DILocation(line: 92, column: 12, scope: !10336)
!10347 = !DILocation(line: 92, column: 5, scope: !10336)
!10348 = !DILocation(line: 93, column: 1, scope: !10330)
!10349 = distinct !DISubprogram(name: "buffer_lcm", scope: !10350, file: !10350, line: 28, type: !1535, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1532, retainedNodes: !209)
!10350 = !DIFile(filename: "lib/buffer-lcm.c", directory: "/home/mbarbar/clone/coreutils")
!10351 = !DILocalVariable(name: "a", arg: 1, scope: !10349, file: !10350, line: 28, type: !55)
!10352 = !DILocation(line: 28, column: 20, scope: !10349)
!10353 = !DILocalVariable(name: "b", arg: 2, scope: !10349, file: !10350, line: 28, type: !55)
!10354 = !DILocation(line: 28, column: 30, scope: !10349)
!10355 = !DILocalVariable(name: "lcm_max", arg: 3, scope: !10349, file: !10350, line: 28, type: !55)
!10356 = !DILocation(line: 28, column: 40, scope: !10349)
!10357 = !DILocalVariable(name: "size", scope: !10349, file: !10350, line: 30, type: !55)
!10358 = !DILocation(line: 30, column: 10, scope: !10349)
!10359 = !DILocation(line: 33, column: 8, scope: !10360)
!10360 = distinct !DILexicalBlock(scope: !10349, file: !10350, line: 33, column: 7)
!10361 = !DILocation(line: 33, column: 7, scope: !10349)
!10362 = !DILocation(line: 34, column: 12, scope: !10360)
!10363 = !DILocation(line: 34, column: 16, scope: !10360)
!10364 = !DILocation(line: 34, column: 10, scope: !10360)
!10365 = !DILocation(line: 34, column: 5, scope: !10360)
!10366 = !DILocation(line: 37, column: 11, scope: !10367)
!10367 = distinct !DILexicalBlock(scope: !10368, file: !10350, line: 37, column: 11)
!10368 = distinct !DILexicalBlock(scope: !10360, file: !10350, line: 36, column: 5)
!10369 = !DILocation(line: 37, column: 11, scope: !10368)
!10370 = !DILocalVariable(name: "lcm", scope: !10371, file: !10350, line: 42, type: !55)
!10371 = distinct !DILexicalBlock(scope: !10367, file: !10350, line: 38, column: 9)
!10372 = !DILocation(line: 42, column: 18, scope: !10371)
!10373 = !DILocalVariable(name: "m", scope: !10371, file: !10350, line: 42, type: !55)
!10374 = !DILocation(line: 42, column: 23, scope: !10371)
!10375 = !DILocalVariable(name: "n", scope: !10371, file: !10350, line: 42, type: !55)
!10376 = !DILocation(line: 42, column: 26, scope: !10371)
!10377 = !DILocalVariable(name: "q", scope: !10371, file: !10350, line: 42, type: !55)
!10378 = !DILocation(line: 42, column: 29, scope: !10371)
!10379 = !DILocalVariable(name: "r", scope: !10371, file: !10350, line: 42, type: !55)
!10380 = !DILocation(line: 42, column: 32, scope: !10371)
!10381 = !DILocation(line: 45, column: 20, scope: !10382)
!10382 = distinct !DILexicalBlock(scope: !10371, file: !10350, line: 45, column: 11)
!10383 = !DILocation(line: 45, column: 18, scope: !10382)
!10384 = !DILocation(line: 45, column: 27, scope: !10382)
!10385 = !DILocation(line: 45, column: 25, scope: !10382)
!10386 = !DILocation(line: 45, column: 16, scope: !10382)
!10387 = !DILocation(line: 45, column: 36, scope: !10388)
!10388 = distinct !DILexicalBlock(scope: !10382, file: !10350, line: 45, column: 11)
!10389 = !DILocation(line: 45, column: 40, scope: !10388)
!10390 = !DILocation(line: 45, column: 38, scope: !10388)
!10391 = !DILocation(line: 45, column: 34, scope: !10388)
!10392 = !DILocation(line: 45, column: 43, scope: !10388)
!10393 = !DILocation(line: 45, column: 11, scope: !10382)
!10394 = !DILocation(line: 46, column: 13, scope: !10388)
!10395 = !DILocation(line: 45, column: 54, scope: !10388)
!10396 = !DILocation(line: 45, column: 52, scope: !10388)
!10397 = !DILocation(line: 45, column: 61, scope: !10388)
!10398 = !DILocation(line: 45, column: 59, scope: !10388)
!10399 = !DILocation(line: 45, column: 11, scope: !10388)
!10400 = distinct !{!10400, !10393, !10401}
!10401 = !DILocation(line: 46, column: 13, scope: !10382)
!10402 = !DILocation(line: 49, column: 15, scope: !10371)
!10403 = !DILocation(line: 49, column: 19, scope: !10371)
!10404 = !DILocation(line: 49, column: 17, scope: !10371)
!10405 = !DILocation(line: 49, column: 13, scope: !10371)
!10406 = !DILocation(line: 50, column: 17, scope: !10371)
!10407 = !DILocation(line: 50, column: 21, scope: !10371)
!10408 = !DILocation(line: 50, column: 19, scope: !10371)
!10409 = !DILocation(line: 50, column: 15, scope: !10371)
!10410 = !DILocation(line: 51, column: 15, scope: !10411)
!10411 = distinct !DILexicalBlock(scope: !10371, file: !10350, line: 51, column: 15)
!10412 = !DILocation(line: 51, column: 22, scope: !10411)
!10413 = !DILocation(line: 51, column: 19, scope: !10411)
!10414 = !DILocation(line: 51, column: 30, scope: !10411)
!10415 = !DILocation(line: 51, column: 33, scope: !10411)
!10416 = !DILocation(line: 51, column: 39, scope: !10411)
!10417 = !DILocation(line: 51, column: 37, scope: !10411)
!10418 = !DILocation(line: 51, column: 44, scope: !10411)
!10419 = !DILocation(line: 51, column: 41, scope: !10411)
!10420 = !DILocation(line: 51, column: 15, scope: !10371)
!10421 = !DILocation(line: 52, column: 20, scope: !10411)
!10422 = !DILocation(line: 52, column: 13, scope: !10411)
!10423 = !DILocation(line: 53, column: 9, scope: !10371)
!10424 = !DILocation(line: 55, column: 14, scope: !10368)
!10425 = !DILocation(line: 55, column: 12, scope: !10368)
!10426 = !DILocation(line: 58, column: 10, scope: !10349)
!10427 = !DILocation(line: 58, column: 18, scope: !10349)
!10428 = !DILocation(line: 58, column: 15, scope: !10349)
!10429 = !DILocation(line: 58, column: 28, scope: !10349)
!10430 = !DILocation(line: 58, column: 35, scope: !10349)
!10431 = !DILocation(line: 58, column: 3, scope: !10349)
!10432 = !DILocation(line: 59, column: 1, scope: !10349)
!10433 = distinct !DISubprogram(name: "close_stdin_set_file_name", scope: !780, file: !780, line: 43, type: !202, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !741, retainedNodes: !209)
!10434 = !DILocalVariable(name: "file", arg: 1, scope: !10433, file: !780, line: 43, type: !180)
!10435 = !DILocation(line: 43, column: 40, scope: !10433)
!10436 = !DILocation(line: 45, column: 15, scope: !10433)
!10437 = !DILocation(line: 45, column: 13, scope: !10433)
!10438 = !DILocation(line: 46, column: 1, scope: !10433)
!10439 = distinct !DISubprogram(name: "close_stdin", scope: !780, file: !780, line: 79, type: !200, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !741, retainedNodes: !209)
!10440 = !DILocalVariable(name: "fail", scope: !10439, file: !780, line: 81, type: !142)
!10441 = !DILocation(line: 81, column: 8, scope: !10439)
!10442 = !DILocation(line: 87, column: 19, scope: !10443)
!10443 = distinct !DILexicalBlock(scope: !10439, file: !780, line: 87, column: 7)
!10444 = !DILocation(line: 87, column: 7, scope: !10443)
!10445 = !DILocation(line: 87, column: 26, scope: !10443)
!10446 = !DILocation(line: 87, column: 7, scope: !10439)
!10447 = !DILocation(line: 91, column: 19, scope: !10448)
!10448 = distinct !DILexicalBlock(scope: !10449, file: !780, line: 91, column: 11)
!10449 = distinct !DILexicalBlock(scope: !10443, file: !780, line: 88, column: 5)
!10450 = !DILocation(line: 91, column: 11, scope: !10448)
!10451 = !DILocation(line: 91, column: 39, scope: !10448)
!10452 = !DILocation(line: 91, column: 44, scope: !10448)
!10453 = !DILocation(line: 91, column: 55, scope: !10448)
!10454 = !DILocation(line: 91, column: 47, scope: !10448)
!10455 = !DILocation(line: 91, column: 62, scope: !10448)
!10456 = !DILocation(line: 91, column: 11, scope: !10449)
!10457 = !DILocation(line: 92, column: 14, scope: !10448)
!10458 = !DILocation(line: 92, column: 9, scope: !10448)
!10459 = !DILocation(line: 93, column: 5, scope: !10449)
!10460 = !DILocation(line: 94, column: 21, scope: !10461)
!10461 = distinct !DILexicalBlock(scope: !10439, file: !780, line: 94, column: 7)
!10462 = !DILocation(line: 94, column: 7, scope: !10461)
!10463 = !DILocation(line: 94, column: 28, scope: !10461)
!10464 = !DILocation(line: 94, column: 7, scope: !10439)
!10465 = !DILocation(line: 95, column: 10, scope: !10461)
!10466 = !DILocation(line: 95, column: 5, scope: !10461)
!10467 = !DILocation(line: 96, column: 7, scope: !10468)
!10468 = distinct !DILexicalBlock(scope: !10439, file: !780, line: 96, column: 7)
!10469 = !DILocation(line: 96, column: 7, scope: !10439)
!10470 = !DILocalVariable(name: "close_error", scope: !10471, file: !780, line: 100, type: !180)
!10471 = distinct !DILexicalBlock(scope: !10468, file: !780, line: 97, column: 5)
!10472 = !DILocation(line: 100, column: 19, scope: !10471)
!10473 = !DILocation(line: 100, column: 33, scope: !10471)
!10474 = !DILocation(line: 101, column: 11, scope: !10475)
!10475 = distinct !DILexicalBlock(scope: !10471, file: !780, line: 101, column: 11)
!10476 = !DILocation(line: 101, column: 11, scope: !10471)
!10477 = !DILocation(line: 102, column: 19, scope: !10475)
!10478 = !DILocation(line: 102, column: 52, scope: !10475)
!10479 = !DILocation(line: 102, column: 36, scope: !10475)
!10480 = !DILocation(line: 103, column: 16, scope: !10475)
!10481 = !DILocation(line: 102, column: 9, scope: !10475)
!10482 = !DILocation(line: 105, column: 19, scope: !10475)
!10483 = !DILocation(line: 105, column: 32, scope: !10475)
!10484 = !DILocation(line: 105, column: 9, scope: !10475)
!10485 = !DILocation(line: 106, column: 5, scope: !10471)
!10486 = !DILocation(line: 108, column: 3, scope: !10439)
!10487 = !DILocation(line: 110, column: 7, scope: !10488)
!10488 = distinct !DILexicalBlock(scope: !10439, file: !780, line: 110, column: 7)
!10489 = !DILocation(line: 110, column: 7, scope: !10439)
!10490 = !DILocation(line: 111, column: 12, scope: !10488)
!10491 = !DILocation(line: 111, column: 5, scope: !10488)
!10492 = !DILocation(line: 112, column: 1, scope: !10439)
!10493 = distinct !DISubprogram(name: "close_stdout_set_file_name", scope: !825, file: !825, line: 51, type: !202, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !783, retainedNodes: !209)
!10494 = !DILocalVariable(name: "file", arg: 1, scope: !10493, file: !825, line: 51, type: !180)
!10495 = !DILocation(line: 51, column: 41, scope: !10493)
!10496 = !DILocation(line: 53, column: 15, scope: !10493)
!10497 = !DILocation(line: 53, column: 13, scope: !10493)
!10498 = !DILocation(line: 54, column: 1, scope: !10493)
!10499 = distinct !DISubprogram(name: "close_stdout_set_ignore_EPIPE", scope: !825, file: !825, line: 88, type: !786, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !783, retainedNodes: !209)
!10500 = !DILocalVariable(name: "ignore", arg: 1, scope: !10499, file: !825, line: 88, type: !142)
!10501 = !DILocation(line: 88, column: 37, scope: !10499)
!10502 = !DILocation(line: 90, column: 18, scope: !10499)
!10503 = !DILocation(line: 90, column: 16, scope: !10499)
!10504 = !DILocation(line: 91, column: 1, scope: !10499)
!10505 = distinct !DISubprogram(name: "close_stdout", scope: !825, file: !825, line: 117, type: !200, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !783, retainedNodes: !209)
!10506 = !DILocation(line: 119, column: 21, scope: !10507)
!10507 = distinct !DILexicalBlock(scope: !10505, file: !825, line: 119, column: 7)
!10508 = !DILocation(line: 119, column: 7, scope: !10507)
!10509 = !DILocation(line: 119, column: 29, scope: !10507)
!10510 = !DILocation(line: 120, column: 7, scope: !10507)
!10511 = !DILocation(line: 120, column: 12, scope: !10507)
!10512 = !DILocation(line: 120, column: 25, scope: !10507)
!10513 = !DILocation(line: 120, column: 28, scope: !10507)
!10514 = !DILocation(line: 120, column: 34, scope: !10507)
!10515 = !DILocation(line: 119, column: 7, scope: !10505)
!10516 = !DILocalVariable(name: "write_error", scope: !10517, file: !825, line: 122, type: !180)
!10517 = distinct !DILexicalBlock(scope: !10507, file: !825, line: 121, column: 5)
!10518 = !DILocation(line: 122, column: 19, scope: !10517)
!10519 = !DILocation(line: 122, column: 33, scope: !10517)
!10520 = !DILocation(line: 123, column: 11, scope: !10521)
!10521 = distinct !DILexicalBlock(scope: !10517, file: !825, line: 123, column: 11)
!10522 = !DILocation(line: 123, column: 11, scope: !10517)
!10523 = !DILocation(line: 124, column: 19, scope: !10521)
!10524 = !DILocation(line: 124, column: 52, scope: !10521)
!10525 = !DILocation(line: 124, column: 36, scope: !10521)
!10526 = !DILocation(line: 125, column: 16, scope: !10521)
!10527 = !DILocation(line: 124, column: 9, scope: !10521)
!10528 = !DILocation(line: 127, column: 19, scope: !10521)
!10529 = !DILocation(line: 127, column: 32, scope: !10521)
!10530 = !DILocation(line: 127, column: 9, scope: !10521)
!10531 = !DILocation(line: 129, column: 14, scope: !10517)
!10532 = !DILocation(line: 129, column: 7, scope: !10517)
!10533 = !DILocation(line: 134, column: 42, scope: !10534)
!10534 = distinct !DILexicalBlock(scope: !10505, file: !825, line: 134, column: 7)
!10535 = !DILocation(line: 134, column: 28, scope: !10534)
!10536 = !DILocation(line: 134, column: 50, scope: !10534)
!10537 = !DILocation(line: 134, column: 7, scope: !10505)
!10538 = !DILocation(line: 135, column: 12, scope: !10534)
!10539 = !DILocation(line: 135, column: 5, scope: !10534)
!10540 = !DILocation(line: 136, column: 1, scope: !10505)
!10541 = distinct !DISubprogram(name: "dir_name", scope: !10542, file: !10542, line: 32, type: !218, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1537, retainedNodes: !209)
!10542 = !DIFile(filename: "lib/dirname.c", directory: "/home/mbarbar/clone/coreutils")
!10543 = !DILocalVariable(name: "file", arg: 1, scope: !10541, file: !10542, line: 32, type: !180)
!10544 = !DILocation(line: 32, column: 23, scope: !10541)
!10545 = !DILocalVariable(name: "result", scope: !10541, file: !10542, line: 34, type: !9)
!10546 = !DILocation(line: 34, column: 9, scope: !10541)
!10547 = !DILocation(line: 34, column: 29, scope: !10541)
!10548 = !DILocation(line: 34, column: 18, scope: !10541)
!10549 = !DILocation(line: 35, column: 8, scope: !10550)
!10550 = distinct !DILexicalBlock(scope: !10541, file: !10542, line: 35, column: 7)
!10551 = !DILocation(line: 35, column: 7, scope: !10541)
!10552 = !DILocation(line: 36, column: 5, scope: !10550)
!10553 = !DILocation(line: 37, column: 10, scope: !10541)
!10554 = !DILocation(line: 37, column: 3, scope: !10541)
!10555 = distinct !DISubprogram(name: "dir_len", scope: !10556, file: !10556, line: 32, type: !1543, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1540, retainedNodes: !209)
!10556 = !DIFile(filename: "lib/dirname-lgpl.c", directory: "/home/mbarbar/clone/coreutils")
!10557 = !DILocalVariable(name: "file", arg: 1, scope: !10555, file: !10556, line: 32, type: !180)
!10558 = !DILocation(line: 32, column: 22, scope: !10555)
!10559 = !DILocalVariable(name: "prefix_length", scope: !10555, file: !10556, line: 34, type: !55)
!10560 = !DILocation(line: 34, column: 10, scope: !10555)
!10561 = !DILocalVariable(name: "length", scope: !10555, file: !10556, line: 35, type: !55)
!10562 = !DILocation(line: 35, column: 10, scope: !10555)
!10563 = !DILocation(line: 38, column: 21, scope: !10555)
!10564 = !DILocation(line: 38, column: 35, scope: !10555)
!10565 = !DILocation(line: 41, column: 24, scope: !10555)
!10566 = !DILocation(line: 38, column: 20, scope: !10555)
!10567 = !DILocation(line: 38, column: 17, scope: !10555)
!10568 = !DILocation(line: 48, column: 33, scope: !10569)
!10569 = distinct !DILexicalBlock(scope: !10555, file: !10556, line: 48, column: 3)
!10570 = !DILocation(line: 48, column: 17, scope: !10569)
!10571 = !DILocation(line: 48, column: 41, scope: !10569)
!10572 = !DILocation(line: 48, column: 39, scope: !10569)
!10573 = !DILocation(line: 48, column: 15, scope: !10569)
!10574 = !DILocation(line: 48, column: 8, scope: !10569)
!10575 = !DILocation(line: 49, column: 8, scope: !10576)
!10576 = distinct !DILexicalBlock(scope: !10569, file: !10556, line: 48, column: 3)
!10577 = !DILocation(line: 49, column: 24, scope: !10576)
!10578 = !DILocation(line: 49, column: 22, scope: !10576)
!10579 = !DILocation(line: 48, column: 3, scope: !10569)
!10580 = !DILocation(line: 50, column: 11, scope: !10581)
!10581 = distinct !DILexicalBlock(scope: !10576, file: !10556, line: 50, column: 9)
!10582 = !DILocation(line: 50, column: 9, scope: !10576)
!10583 = !DILocation(line: 51, column: 7, scope: !10581)
!10584 = !DILocation(line: 49, column: 38, scope: !10576)
!10585 = !DILocation(line: 48, column: 3, scope: !10576)
!10586 = distinct !{!10586, !10579, !10587}
!10587 = !DILocation(line: 51, column: 7, scope: !10569)
!10588 = !DILocation(line: 52, column: 10, scope: !10555)
!10589 = !DILocation(line: 52, column: 3, scope: !10555)
!10590 = distinct !DISubprogram(name: "mdir_name", scope: !10556, file: !10556, line: 71, type: !218, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1540, retainedNodes: !209)
!10591 = !DILocalVariable(name: "file", arg: 1, scope: !10590, file: !10556, line: 71, type: !180)
!10592 = !DILocation(line: 71, column: 24, scope: !10590)
!10593 = !DILocalVariable(name: "length", scope: !10590, file: !10556, line: 73, type: !55)
!10594 = !DILocation(line: 73, column: 10, scope: !10590)
!10595 = !DILocation(line: 73, column: 28, scope: !10590)
!10596 = !DILocation(line: 73, column: 19, scope: !10590)
!10597 = !DILocalVariable(name: "append_dot", scope: !10590, file: !10556, line: 74, type: !142)
!10598 = !DILocation(line: 74, column: 8, scope: !10590)
!10599 = !DILocation(line: 74, column: 22, scope: !10590)
!10600 = !DILocation(line: 74, column: 29, scope: !10590)
!10601 = !DILocation(line: 75, column: 22, scope: !10590)
!10602 = !DILocalVariable(name: "dir", scope: !10590, file: !10556, line: 78, type: !9)
!10603 = !DILocation(line: 78, column: 9, scope: !10590)
!10604 = !DILocation(line: 78, column: 23, scope: !10590)
!10605 = !DILocation(line: 78, column: 32, scope: !10590)
!10606 = !DILocation(line: 78, column: 30, scope: !10590)
!10607 = !DILocation(line: 78, column: 43, scope: !10590)
!10608 = !DILocation(line: 78, column: 15, scope: !10590)
!10609 = !DILocation(line: 79, column: 8, scope: !10610)
!10610 = distinct !DILexicalBlock(scope: !10590, file: !10556, line: 79, column: 7)
!10611 = !DILocation(line: 79, column: 7, scope: !10590)
!10612 = !DILocation(line: 80, column: 5, scope: !10610)
!10613 = !DILocation(line: 81, column: 11, scope: !10590)
!10614 = !DILocation(line: 81, column: 16, scope: !10590)
!10615 = !DILocation(line: 81, column: 22, scope: !10590)
!10616 = !DILocation(line: 81, column: 3, scope: !10590)
!10617 = !DILocation(line: 82, column: 7, scope: !10618)
!10618 = distinct !DILexicalBlock(scope: !10590, file: !10556, line: 82, column: 7)
!10619 = !DILocation(line: 82, column: 7, scope: !10590)
!10620 = !DILocation(line: 83, column: 5, scope: !10618)
!10621 = !DILocation(line: 83, column: 15, scope: !10618)
!10622 = !DILocation(line: 83, column: 19, scope: !10618)
!10623 = !DILocation(line: 84, column: 3, scope: !10590)
!10624 = !DILocation(line: 84, column: 7, scope: !10590)
!10625 = !DILocation(line: 84, column: 15, scope: !10590)
!10626 = !DILocation(line: 85, column: 10, scope: !10590)
!10627 = !DILocation(line: 85, column: 3, scope: !10590)
!10628 = !DILocation(line: 86, column: 1, scope: !10590)
!10629 = distinct !DISubprogram(name: "last_component", scope: !10630, file: !10630, line: 30, type: !218, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1545, retainedNodes: !209)
!10630 = !DIFile(filename: "lib/basename-lgpl.c", directory: "/home/mbarbar/clone/coreutils")
!10631 = !DILocalVariable(name: "name", arg: 1, scope: !10629, file: !10630, line: 30, type: !180)
!10632 = !DILocation(line: 30, column: 29, scope: !10629)
!10633 = !DILocalVariable(name: "base", scope: !10629, file: !10630, line: 32, type: !180)
!10634 = !DILocation(line: 32, column: 15, scope: !10629)
!10635 = !DILocation(line: 32, column: 22, scope: !10629)
!10636 = !DILocation(line: 32, column: 27, scope: !10629)
!10637 = !DILocalVariable(name: "p", scope: !10629, file: !10630, line: 33, type: !180)
!10638 = !DILocation(line: 33, column: 15, scope: !10629)
!10639 = !DILocalVariable(name: "saw_slash", scope: !10629, file: !10630, line: 34, type: !142)
!10640 = !DILocation(line: 34, column: 8, scope: !10629)
!10641 = !DILocation(line: 36, column: 3, scope: !10629)
!10642 = !DILocation(line: 36, column: 10, scope: !10629)
!10643 = !DILocation(line: 37, column: 9, scope: !10629)
!10644 = distinct !{!10644, !10641, !10643}
!10645 = !DILocation(line: 39, column: 12, scope: !10646)
!10646 = distinct !DILexicalBlock(scope: !10629, file: !10630, line: 39, column: 3)
!10647 = !DILocation(line: 39, column: 10, scope: !10646)
!10648 = !DILocation(line: 39, column: 8, scope: !10646)
!10649 = !DILocation(line: 39, column: 19, scope: !10650)
!10650 = distinct !DILexicalBlock(scope: !10646, file: !10630, line: 39, column: 3)
!10651 = !DILocation(line: 39, column: 18, scope: !10650)
!10652 = !DILocation(line: 39, column: 3, scope: !10646)
!10653 = !DILocation(line: 41, column: 11, scope: !10654)
!10654 = distinct !DILexicalBlock(scope: !10655, file: !10630, line: 41, column: 11)
!10655 = distinct !DILexicalBlock(scope: !10650, file: !10630, line: 40, column: 5)
!10656 = !DILocation(line: 41, column: 11, scope: !10655)
!10657 = !DILocation(line: 42, column: 19, scope: !10654)
!10658 = !DILocation(line: 42, column: 9, scope: !10654)
!10659 = !DILocation(line: 43, column: 16, scope: !10660)
!10660 = distinct !DILexicalBlock(scope: !10654, file: !10630, line: 43, column: 16)
!10661 = !DILocation(line: 43, column: 16, scope: !10654)
!10662 = !DILocation(line: 45, column: 18, scope: !10663)
!10663 = distinct !DILexicalBlock(scope: !10660, file: !10630, line: 44, column: 9)
!10664 = !DILocation(line: 45, column: 16, scope: !10663)
!10665 = !DILocation(line: 46, column: 21, scope: !10663)
!10666 = !DILocation(line: 47, column: 9, scope: !10663)
!10667 = !DILocation(line: 48, column: 5, scope: !10655)
!10668 = !DILocation(line: 39, column: 23, scope: !10650)
!10669 = !DILocation(line: 39, column: 3, scope: !10650)
!10670 = distinct !{!10670, !10652, !10671}
!10671 = !DILocation(line: 48, column: 5, scope: !10646)
!10672 = !DILocation(line: 50, column: 19, scope: !10629)
!10673 = !DILocation(line: 50, column: 3, scope: !10629)
!10674 = distinct !DISubprogram(name: "base_len", scope: !10630, file: !10630, line: 58, type: !1543, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1545, retainedNodes: !209)
!10675 = !DILocalVariable(name: "name", arg: 1, scope: !10674, file: !10630, line: 58, type: !180)
!10676 = !DILocation(line: 58, column: 23, scope: !10674)
!10677 = !DILocalVariable(name: "len", scope: !10674, file: !10630, line: 60, type: !55)
!10678 = !DILocation(line: 60, column: 10, scope: !10674)
!10679 = !DILocalVariable(name: "prefix_len", scope: !10674, file: !10630, line: 61, type: !55)
!10680 = !DILocation(line: 61, column: 10, scope: !10674)
!10681 = !DILocation(line: 63, column: 22, scope: !10682)
!10682 = distinct !DILexicalBlock(scope: !10674, file: !10630, line: 63, column: 3)
!10683 = !DILocation(line: 63, column: 14, scope: !10682)
!10684 = !DILocation(line: 63, column: 12, scope: !10682)
!10685 = !DILocation(line: 63, column: 8, scope: !10682)
!10686 = !DILocation(line: 63, column: 34, scope: !10687)
!10687 = distinct !DILexicalBlock(scope: !10682, file: !10630, line: 63, column: 3)
!10688 = !DILocation(line: 63, column: 32, scope: !10687)
!10689 = !DILocation(line: 63, column: 38, scope: !10687)
!10690 = !DILocation(line: 63, column: 41, scope: !10687)
!10691 = !DILocation(line: 0, scope: !10687)
!10692 = !DILocation(line: 63, column: 3, scope: !10682)
!10693 = !DILocation(line: 64, column: 5, scope: !10687)
!10694 = !DILocation(line: 63, column: 70, scope: !10687)
!10695 = !DILocation(line: 63, column: 3, scope: !10687)
!10696 = distinct !{!10696, !10692, !10697}
!10697 = !DILocation(line: 64, column: 5, scope: !10682)
!10698 = !DILocation(line: 74, column: 10, scope: !10674)
!10699 = !DILocation(line: 74, column: 3, scope: !10674)
!10700 = distinct !DISubprogram(name: "fdadvise", scope: !10701, file: !10701, line: 31, type: !1561, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1548, retainedNodes: !209)
!10701 = !DIFile(filename: "lib/fadvise.c", directory: "/home/mbarbar/clone/coreutils")
!10702 = !DILocalVariable(name: "fd", arg: 1, scope: !10700, file: !10701, line: 31, type: !7)
!10703 = !DILocation(line: 31, column: 15, scope: !10700)
!10704 = !DILocalVariable(name: "offset", arg: 2, scope: !10700, file: !10701, line: 31, type: !352)
!10705 = !DILocation(line: 31, column: 25, scope: !10700)
!10706 = !DILocalVariable(name: "len", arg: 3, scope: !10700, file: !10701, line: 31, type: !352)
!10707 = !DILocation(line: 31, column: 39, scope: !10700)
!10708 = !DILocalVariable(name: "advice", arg: 4, scope: !10700, file: !10701, line: 31, type: !1563)
!10709 = !DILocation(line: 31, column: 54, scope: !10700)
!10710 = !DILocalVariable(name: "__x", scope: !10711, file: !10701, line: 34, type: !7)
!10711 = distinct !DILexicalBlock(scope: !10700, file: !10701, line: 34, column: 3)
!10712 = !DILocation(line: 34, column: 3, scope: !10711)
!10713 = !DILocation(line: 36, column: 1, scope: !10700)
!10714 = distinct !DISubprogram(name: "fadvise", scope: !10701, file: !10701, line: 39, type: !1564, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1548, retainedNodes: !209)
!10715 = !DILocalVariable(name: "fp", arg: 1, scope: !10714, file: !10701, line: 39, type: !1566)
!10716 = !DILocation(line: 39, column: 16, scope: !10714)
!10717 = !DILocalVariable(name: "advice", arg: 2, scope: !10714, file: !10701, line: 39, type: !1563)
!10718 = !DILocation(line: 39, column: 30, scope: !10714)
!10719 = !DILocation(line: 41, column: 7, scope: !10720)
!10720 = distinct !DILexicalBlock(scope: !10714, file: !10701, line: 41, column: 7)
!10721 = !DILocation(line: 41, column: 7, scope: !10714)
!10722 = !DILocation(line: 42, column: 23, scope: !10720)
!10723 = !DILocation(line: 42, column: 15, scope: !10720)
!10724 = !DILocation(line: 42, column: 34, scope: !10720)
!10725 = !DILocation(line: 42, column: 5, scope: !10720)
!10726 = !DILocation(line: 43, column: 1, scope: !10714)
!10727 = distinct !DISubprogram(name: "open_safer", scope: !10728, file: !10728, line: 29, type: !10729, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1600, retainedNodes: !209)
!10728 = !DIFile(filename: "lib/open-safer.c", directory: "/home/mbarbar/clone/coreutils")
!10729 = !DISubroutineType(types: !10730)
!10730 = !{!7, !180, !7, null}
!10731 = !DILocalVariable(name: "file", arg: 1, scope: !10727, file: !10728, line: 29, type: !180)
!10732 = !DILocation(line: 29, column: 25, scope: !10727)
!10733 = !DILocalVariable(name: "flags", arg: 2, scope: !10727, file: !10728, line: 29, type: !7)
!10734 = !DILocation(line: 29, column: 35, scope: !10727)
!10735 = !DILocalVariable(name: "mode", scope: !10727, file: !10728, line: 31, type: !139)
!10736 = !DILocation(line: 31, column: 10, scope: !10727)
!10737 = !DILocation(line: 33, column: 7, scope: !10738)
!10738 = distinct !DILexicalBlock(scope: !10727, file: !10728, line: 33, column: 7)
!10739 = !DILocation(line: 33, column: 13, scope: !10738)
!10740 = !DILocation(line: 33, column: 7, scope: !10727)
!10741 = !DILocalVariable(name: "ap", scope: !10742, file: !10728, line: 35, type: !1605)
!10742 = distinct !DILexicalBlock(scope: !10738, file: !10728, line: 34, column: 5)
!10743 = !DILocation(line: 35, column: 15, scope: !10742)
!10744 = !DILocation(line: 36, column: 7, scope: !10742)
!10745 = !DILocation(line: 40, column: 14, scope: !10742)
!10746 = !DILocation(line: 40, column: 12, scope: !10742)
!10747 = !DILocation(line: 42, column: 7, scope: !10742)
!10748 = !DILocation(line: 43, column: 5, scope: !10742)
!10749 = !DILocation(line: 45, column: 26, scope: !10727)
!10750 = !DILocation(line: 45, column: 32, scope: !10727)
!10751 = !DILocation(line: 45, column: 39, scope: !10727)
!10752 = !DILocation(line: 45, column: 20, scope: !10727)
!10753 = !DILocation(line: 45, column: 10, scope: !10727)
!10754 = !DILocation(line: 45, column: 3, scope: !10727)
!10755 = distinct !DISubprogram(name: "record_file", scope: !10756, file: !10756, line: 29, type: !1617, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1614, retainedNodes: !209)
!10756 = !DIFile(filename: "lib/file-set.c", directory: "/home/mbarbar/clone/coreutils")
!10757 = !DILocalVariable(name: "ht", arg: 1, scope: !10755, file: !10756, line: 29, type: !175)
!10758 = !DILocation(line: 29, column: 26, scope: !10755)
!10759 = !DILocalVariable(name: "file", arg: 2, scope: !10755, file: !10756, line: 29, type: !180)
!10760 = !DILocation(line: 29, column: 42, scope: !10755)
!10761 = !DILocalVariable(name: "stats", arg: 3, scope: !10755, file: !10756, line: 29, type: !1619)
!10762 = !DILocation(line: 29, column: 67, scope: !10755)
!10763 = !DILocalVariable(name: "ent", scope: !10755, file: !10756, line: 31, type: !1642)
!10764 = !DILocation(line: 31, column: 20, scope: !10755)
!10765 = !DILocation(line: 33, column: 7, scope: !10766)
!10766 = distinct !DILexicalBlock(scope: !10755, file: !10756, line: 33, column: 7)
!10767 = !DILocation(line: 33, column: 10, scope: !10766)
!10768 = !DILocation(line: 33, column: 7, scope: !10755)
!10769 = !DILocation(line: 34, column: 5, scope: !10766)
!10770 = !DILocation(line: 36, column: 9, scope: !10755)
!10771 = !DILocation(line: 36, column: 7, scope: !10755)
!10772 = !DILocation(line: 37, column: 24, scope: !10755)
!10773 = !DILocation(line: 37, column: 15, scope: !10755)
!10774 = !DILocation(line: 37, column: 3, scope: !10755)
!10775 = !DILocation(line: 37, column: 8, scope: !10755)
!10776 = !DILocation(line: 37, column: 13, scope: !10755)
!10777 = !{!10778, !2649, i64 0}
!10778 = !{!"F_triple", !2649, i64 0, !2916, i64 8, !2916, i64 16}
!10779 = !DILocation(line: 38, column: 17, scope: !10755)
!10780 = !DILocation(line: 38, column: 24, scope: !10755)
!10781 = !DILocation(line: 38, column: 3, scope: !10755)
!10782 = !DILocation(line: 38, column: 8, scope: !10755)
!10783 = !DILocation(line: 38, column: 15, scope: !10755)
!10784 = !{!10778, !2916, i64 8}
!10785 = !DILocation(line: 39, column: 17, scope: !10755)
!10786 = !DILocation(line: 39, column: 24, scope: !10755)
!10787 = !DILocation(line: 39, column: 3, scope: !10755)
!10788 = !DILocation(line: 39, column: 8, scope: !10755)
!10789 = !DILocation(line: 39, column: 15, scope: !10755)
!10790 = !{!10778, !2916, i64 16}
!10791 = !DILocalVariable(name: "ent_from_table", scope: !10792, file: !10756, line: 42, type: !1642)
!10792 = distinct !DILexicalBlock(scope: !10755, file: !10756, line: 41, column: 3)
!10793 = !DILocation(line: 42, column: 22, scope: !10792)
!10794 = !DILocation(line: 42, column: 52, scope: !10792)
!10795 = !DILocation(line: 42, column: 56, scope: !10792)
!10796 = !DILocation(line: 42, column: 39, scope: !10792)
!10797 = !DILocation(line: 43, column: 9, scope: !10798)
!10798 = distinct !DILexicalBlock(scope: !10792, file: !10756, line: 43, column: 9)
!10799 = !DILocation(line: 43, column: 24, scope: !10798)
!10800 = !DILocation(line: 43, column: 9, scope: !10792)
!10801 = !DILocation(line: 46, column: 9, scope: !10802)
!10802 = distinct !DILexicalBlock(scope: !10798, file: !10756, line: 44, column: 7)
!10803 = !DILocation(line: 49, column: 9, scope: !10804)
!10804 = distinct !DILexicalBlock(scope: !10792, file: !10756, line: 49, column: 9)
!10805 = !DILocation(line: 49, column: 27, scope: !10804)
!10806 = !DILocation(line: 49, column: 24, scope: !10804)
!10807 = !DILocation(line: 49, column: 9, scope: !10792)
!10808 = !DILocation(line: 53, column: 22, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10804, file: !10756, line: 50, column: 7)
!10810 = !DILocation(line: 53, column: 9, scope: !10809)
!10811 = !DILocation(line: 54, column: 7, scope: !10809)
!10812 = !DILocation(line: 56, column: 1, scope: !10755)
!10813 = distinct !DISubprogram(name: "seen_file", scope: !10756, file: !10756, line: 61, type: !1649, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1614, retainedNodes: !209)
!10814 = !DILocalVariable(name: "ht", arg: 1, scope: !10813, file: !10756, line: 61, type: !1651)
!10815 = !DILocation(line: 61, column: 30, scope: !10813)
!10816 = !DILocalVariable(name: "file", arg: 2, scope: !10813, file: !10756, line: 61, type: !180)
!10817 = !DILocation(line: 61, column: 46, scope: !10813)
!10818 = !DILocalVariable(name: "stats", arg: 3, scope: !10813, file: !10756, line: 62, type: !1619)
!10819 = !DILocation(line: 62, column: 31, scope: !10813)
!10820 = !DILocalVariable(name: "new_ent", scope: !10813, file: !10756, line: 64, type: !1643)
!10821 = !DILocation(line: 64, column: 19, scope: !10813)
!10822 = !DILocation(line: 66, column: 7, scope: !10823)
!10823 = distinct !DILexicalBlock(scope: !10813, file: !10756, line: 66, column: 7)
!10824 = !DILocation(line: 66, column: 10, scope: !10823)
!10825 = !DILocation(line: 66, column: 7, scope: !10813)
!10826 = !DILocation(line: 67, column: 5, scope: !10823)
!10827 = !DILocation(line: 69, column: 27, scope: !10813)
!10828 = !DILocation(line: 69, column: 11, scope: !10813)
!10829 = !DILocation(line: 69, column: 16, scope: !10813)
!10830 = !DILocation(line: 70, column: 20, scope: !10813)
!10831 = !DILocation(line: 70, column: 27, scope: !10813)
!10832 = !DILocation(line: 70, column: 11, scope: !10813)
!10833 = !DILocation(line: 70, column: 18, scope: !10813)
!10834 = !DILocation(line: 71, column: 20, scope: !10813)
!10835 = !DILocation(line: 71, column: 27, scope: !10813)
!10836 = !DILocation(line: 71, column: 11, scope: !10813)
!10837 = !DILocation(line: 71, column: 18, scope: !10813)
!10838 = !DILocation(line: 73, column: 25, scope: !10813)
!10839 = !DILocation(line: 73, column: 29, scope: !10813)
!10840 = !DILocation(line: 73, column: 12, scope: !10813)
!10841 = !DILocation(line: 73, column: 11, scope: !10813)
!10842 = !DILocation(line: 73, column: 10, scope: !10813)
!10843 = !DILocation(line: 73, column: 3, scope: !10813)
!10844 = !DILocation(line: 74, column: 1, scope: !10813)
!10845 = distinct !DISubprogram(name: "strmode", scope: !10846, file: !10846, line: 96, type: !1656, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1653, retainedNodes: !209)
!10846 = !DIFile(filename: "lib/filemode.c", directory: "/home/mbarbar/clone/coreutils")
!10847 = !DILocalVariable(name: "mode", arg: 1, scope: !10845, file: !10846, line: 96, type: !139)
!10848 = !DILocation(line: 96, column: 17, scope: !10845)
!10849 = !DILocalVariable(name: "str", arg: 2, scope: !10845, file: !10846, line: 96, type: !9)
!10850 = !DILocation(line: 96, column: 29, scope: !10845)
!10851 = !DILocation(line: 98, column: 22, scope: !10845)
!10852 = !DILocation(line: 98, column: 12, scope: !10845)
!10853 = !DILocation(line: 98, column: 3, scope: !10845)
!10854 = !DILocation(line: 98, column: 10, scope: !10845)
!10855 = !DILocation(line: 99, column: 12, scope: !10845)
!10856 = !DILocation(line: 99, column: 17, scope: !10845)
!10857 = !DILocation(line: 99, column: 3, scope: !10845)
!10858 = !DILocation(line: 99, column: 10, scope: !10845)
!10859 = !DILocation(line: 100, column: 12, scope: !10845)
!10860 = !DILocation(line: 100, column: 17, scope: !10845)
!10861 = !DILocation(line: 100, column: 3, scope: !10845)
!10862 = !DILocation(line: 100, column: 10, scope: !10845)
!10863 = !DILocation(line: 101, column: 13, scope: !10845)
!10864 = !DILocation(line: 101, column: 18, scope: !10845)
!10865 = !DILocation(line: 102, column: 16, scope: !10845)
!10866 = !DILocation(line: 102, column: 21, scope: !10845)
!10867 = !DILocation(line: 103, column: 16, scope: !10845)
!10868 = !DILocation(line: 103, column: 21, scope: !10845)
!10869 = !DILocation(line: 101, column: 12, scope: !10845)
!10870 = !DILocation(line: 101, column: 3, scope: !10845)
!10871 = !DILocation(line: 101, column: 10, scope: !10845)
!10872 = !DILocation(line: 104, column: 12, scope: !10845)
!10873 = !DILocation(line: 104, column: 17, scope: !10845)
!10874 = !DILocation(line: 104, column: 3, scope: !10845)
!10875 = !DILocation(line: 104, column: 10, scope: !10845)
!10876 = !DILocation(line: 105, column: 12, scope: !10845)
!10877 = !DILocation(line: 105, column: 17, scope: !10845)
!10878 = !DILocation(line: 105, column: 3, scope: !10845)
!10879 = !DILocation(line: 105, column: 10, scope: !10845)
!10880 = !DILocation(line: 106, column: 13, scope: !10845)
!10881 = !DILocation(line: 106, column: 18, scope: !10845)
!10882 = !DILocation(line: 107, column: 16, scope: !10845)
!10883 = !DILocation(line: 107, column: 21, scope: !10845)
!10884 = !DILocation(line: 108, column: 16, scope: !10845)
!10885 = !DILocation(line: 108, column: 21, scope: !10845)
!10886 = !DILocation(line: 106, column: 12, scope: !10845)
!10887 = !DILocation(line: 106, column: 3, scope: !10845)
!10888 = !DILocation(line: 106, column: 10, scope: !10845)
!10889 = !DILocation(line: 109, column: 12, scope: !10845)
!10890 = !DILocation(line: 109, column: 17, scope: !10845)
!10891 = !DILocation(line: 109, column: 3, scope: !10845)
!10892 = !DILocation(line: 109, column: 10, scope: !10845)
!10893 = !DILocation(line: 110, column: 12, scope: !10845)
!10894 = !DILocation(line: 110, column: 17, scope: !10845)
!10895 = !DILocation(line: 110, column: 3, scope: !10845)
!10896 = !DILocation(line: 110, column: 10, scope: !10845)
!10897 = !DILocation(line: 111, column: 13, scope: !10845)
!10898 = !DILocation(line: 111, column: 18, scope: !10845)
!10899 = !DILocation(line: 112, column: 16, scope: !10845)
!10900 = !DILocation(line: 112, column: 21, scope: !10845)
!10901 = !DILocation(line: 113, column: 16, scope: !10845)
!10902 = !DILocation(line: 113, column: 21, scope: !10845)
!10903 = !DILocation(line: 111, column: 12, scope: !10845)
!10904 = !DILocation(line: 111, column: 3, scope: !10845)
!10905 = !DILocation(line: 111, column: 10, scope: !10845)
!10906 = !DILocation(line: 114, column: 3, scope: !10845)
!10907 = !DILocation(line: 114, column: 11, scope: !10845)
!10908 = !DILocation(line: 115, column: 3, scope: !10845)
!10909 = !DILocation(line: 115, column: 11, scope: !10845)
!10910 = !DILocation(line: 116, column: 1, scope: !10845)
!10911 = distinct !DISubprogram(name: "ftypelet", scope: !10846, file: !10846, line: 54, type: !1683, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1653, retainedNodes: !209)
!10912 = !DILocalVariable(name: "bits", arg: 1, scope: !10911, file: !10846, line: 54, type: !139)
!10913 = !DILocation(line: 54, column: 18, scope: !10911)
!10914 = !DILocation(line: 57, column: 7, scope: !10915)
!10915 = distinct !DILexicalBlock(scope: !10911, file: !10846, line: 57, column: 7)
!10916 = !DILocation(line: 57, column: 7, scope: !10911)
!10917 = !DILocation(line: 58, column: 5, scope: !10915)
!10918 = !DILocation(line: 59, column: 7, scope: !10919)
!10919 = distinct !DILexicalBlock(scope: !10911, file: !10846, line: 59, column: 7)
!10920 = !DILocation(line: 59, column: 7, scope: !10911)
!10921 = !DILocation(line: 60, column: 5, scope: !10919)
!10922 = !DILocation(line: 63, column: 7, scope: !10923)
!10923 = distinct !DILexicalBlock(scope: !10911, file: !10846, line: 63, column: 7)
!10924 = !DILocation(line: 63, column: 7, scope: !10911)
!10925 = !DILocation(line: 64, column: 5, scope: !10923)
!10926 = !DILocation(line: 65, column: 7, scope: !10927)
!10927 = distinct !DILexicalBlock(scope: !10911, file: !10846, line: 65, column: 7)
!10928 = !DILocation(line: 65, column: 7, scope: !10911)
!10929 = !DILocation(line: 66, column: 5, scope: !10927)
!10930 = !DILocation(line: 67, column: 7, scope: !10931)
!10931 = distinct !DILexicalBlock(scope: !10911, file: !10846, line: 67, column: 7)
!10932 = !DILocation(line: 67, column: 7, scope: !10911)
!10933 = !DILocation(line: 68, column: 5, scope: !10931)
!10934 = !DILocation(line: 69, column: 7, scope: !10935)
!10935 = distinct !DILexicalBlock(scope: !10911, file: !10846, line: 69, column: 7)
!10936 = !DILocation(line: 69, column: 7, scope: !10911)
!10937 = !DILocation(line: 70, column: 5, scope: !10935)
!10938 = !DILocation(line: 73, column: 7, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10911, file: !10846, line: 73, column: 7)
!10940 = !DILocation(line: 73, column: 7, scope: !10911)
!10941 = !DILocation(line: 74, column: 5, scope: !10939)
!10942 = !DILocation(line: 90, column: 3, scope: !10911)
!10943 = !DILocation(line: 91, column: 1, scope: !10911)
!10944 = distinct !DISubprogram(name: "filemodestring", scope: !10846, file: !10846, line: 166, type: !1658, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1653, retainedNodes: !209)
!10945 = !DILocalVariable(name: "statp", arg: 1, scope: !10944, file: !10846, line: 166, type: !1660)
!10946 = !DILocation(line: 166, column: 36, scope: !10944)
!10947 = !DILocalVariable(name: "str", arg: 2, scope: !10944, file: !10846, line: 166, type: !9)
!10948 = !DILocation(line: 166, column: 49, scope: !10944)
!10949 = !DILocation(line: 168, column: 12, scope: !10944)
!10950 = !DILocation(line: 168, column: 19, scope: !10944)
!10951 = !DILocation(line: 168, column: 28, scope: !10944)
!10952 = !DILocation(line: 168, column: 3, scope: !10944)
!10953 = !DILocation(line: 170, column: 7, scope: !10954)
!10954 = distinct !DILexicalBlock(scope: !10944, file: !10846, line: 170, column: 7)
!10955 = !DILocation(line: 170, column: 7, scope: !10944)
!10956 = !DILocation(line: 171, column: 5, scope: !10954)
!10957 = !DILocation(line: 171, column: 12, scope: !10954)
!10958 = !DILocation(line: 174, column: 12, scope: !10959)
!10959 = distinct !DILexicalBlock(scope: !10960, file: !10846, line: 174, column: 12)
!10960 = distinct !DILexicalBlock(scope: !10954, file: !10846, line: 172, column: 12)
!10961 = !DILocation(line: 174, column: 12, scope: !10960)
!10962 = !DILocation(line: 175, column: 5, scope: !10959)
!10963 = !DILocation(line: 175, column: 12, scope: !10959)
!10964 = !DILocation(line: 176, column: 12, scope: !10965)
!10965 = distinct !DILexicalBlock(scope: !10959, file: !10846, line: 176, column: 12)
!10966 = !DILocation(line: 176, column: 12, scope: !10959)
!10967 = !DILocation(line: 177, column: 5, scope: !10965)
!10968 = !DILocation(line: 177, column: 12, scope: !10965)
!10969 = !DILocation(line: 180, column: 1, scope: !10944)
!10970 = distinct !DISubprogram(name: "file_name_concat", scope: !10971, file: !10971, line: 35, type: !1688, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1685, retainedNodes: !209)
!10971 = !DIFile(filename: "lib/filenamecat.c", directory: "/home/mbarbar/clone/coreutils")
!10972 = !DILocalVariable(name: "dir", arg: 1, scope: !10970, file: !10971, line: 35, type: !180)
!10973 = !DILocation(line: 35, column: 31, scope: !10970)
!10974 = !DILocalVariable(name: "base", arg: 2, scope: !10970, file: !10971, line: 35, type: !180)
!10975 = !DILocation(line: 35, column: 48, scope: !10970)
!10976 = !DILocalVariable(name: "base_in_result", arg: 3, scope: !10970, file: !10971, line: 35, type: !184)
!10977 = !DILocation(line: 35, column: 61, scope: !10970)
!10978 = !DILocalVariable(name: "p", scope: !10970, file: !10971, line: 37, type: !9)
!10979 = !DILocation(line: 37, column: 9, scope: !10970)
!10980 = !DILocation(line: 37, column: 32, scope: !10970)
!10981 = !DILocation(line: 37, column: 37, scope: !10970)
!10982 = !DILocation(line: 37, column: 43, scope: !10970)
!10983 = !DILocation(line: 37, column: 13, scope: !10970)
!10984 = !DILocation(line: 38, column: 7, scope: !10985)
!10985 = distinct !DILexicalBlock(scope: !10970, file: !10971, line: 38, column: 7)
!10986 = !DILocation(line: 38, column: 9, scope: !10985)
!10987 = !DILocation(line: 38, column: 7, scope: !10970)
!10988 = !DILocation(line: 39, column: 5, scope: !10985)
!10989 = !DILocation(line: 40, column: 10, scope: !10970)
!10990 = !DILocation(line: 40, column: 3, scope: !10970)
!10991 = distinct !DISubprogram(name: "mfile_name_concat", scope: !10992, file: !10992, line: 47, type: !1688, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1690, retainedNodes: !209)
!10992 = !DIFile(filename: "lib/filenamecat-lgpl.c", directory: "/home/mbarbar/clone/coreutils")
!10993 = !DILocalVariable(name: "dir", arg: 1, scope: !10991, file: !10992, line: 47, type: !180)
!10994 = !DILocation(line: 47, column: 32, scope: !10991)
!10995 = !DILocalVariable(name: "base", arg: 2, scope: !10991, file: !10992, line: 47, type: !180)
!10996 = !DILocation(line: 47, column: 49, scope: !10991)
!10997 = !DILocalVariable(name: "base_in_result", arg: 3, scope: !10991, file: !10992, line: 47, type: !184)
!10998 = !DILocation(line: 47, column: 62, scope: !10991)
!10999 = !DILocalVariable(name: "dirbase", scope: !10991, file: !10992, line: 49, type: !180)
!11000 = !DILocation(line: 49, column: 15, scope: !10991)
!11001 = !DILocation(line: 49, column: 41, scope: !10991)
!11002 = !DILocation(line: 49, column: 25, scope: !10991)
!11003 = !DILocalVariable(name: "dirbaselen", scope: !10991, file: !10992, line: 50, type: !55)
!11004 = !DILocation(line: 50, column: 10, scope: !10991)
!11005 = !DILocation(line: 50, column: 33, scope: !10991)
!11006 = !DILocation(line: 50, column: 23, scope: !10991)
!11007 = !DILocalVariable(name: "dirlen", scope: !10991, file: !10992, line: 51, type: !55)
!11008 = !DILocation(line: 51, column: 10, scope: !10991)
!11009 = !DILocation(line: 51, column: 19, scope: !10991)
!11010 = !DILocation(line: 51, column: 29, scope: !10991)
!11011 = !DILocation(line: 51, column: 27, scope: !10991)
!11012 = !DILocation(line: 51, column: 35, scope: !10991)
!11013 = !DILocation(line: 51, column: 33, scope: !10991)
!11014 = !DILocalVariable(name: "baselen", scope: !10991, file: !10992, line: 52, type: !55)
!11015 = !DILocation(line: 52, column: 10, scope: !10991)
!11016 = !DILocation(line: 52, column: 28, scope: !10991)
!11017 = !DILocation(line: 52, column: 20, scope: !10991)
!11018 = !DILocalVariable(name: "sep", scope: !10991, file: !10992, line: 53, type: !10)
!11019 = !DILocation(line: 53, column: 8, scope: !10991)
!11020 = !DILocation(line: 54, column: 7, scope: !11021)
!11021 = distinct !DILexicalBlock(scope: !10991, file: !10992, line: 54, column: 7)
!11022 = !DILocation(line: 54, column: 7, scope: !10991)
!11023 = !DILocation(line: 57, column: 13, scope: !11024)
!11024 = distinct !DILexicalBlock(scope: !11025, file: !10992, line: 57, column: 11)
!11025 = distinct !DILexicalBlock(scope: !11021, file: !10992, line: 55, column: 5)
!11026 = !DILocation(line: 57, column: 39, scope: !11024)
!11027 = !DILocation(line: 57, column: 44, scope: !11024)
!11028 = !DILocation(line: 57, column: 11, scope: !11025)
!11029 = !DILocation(line: 58, column: 13, scope: !11024)
!11030 = !DILocation(line: 58, column: 9, scope: !11024)
!11031 = !DILocation(line: 59, column: 5, scope: !11025)
!11032 = !DILocation(line: 60, column: 12, scope: !11033)
!11033 = distinct !DILexicalBlock(scope: !11021, file: !10992, line: 60, column: 12)
!11034 = !DILocation(line: 60, column: 12, scope: !11021)
!11035 = !DILocation(line: 67, column: 11, scope: !11036)
!11036 = distinct !DILexicalBlock(scope: !11033, file: !10992, line: 61, column: 5)
!11037 = !DILocation(line: 68, column: 5, scope: !11036)
!11038 = !DILocalVariable(name: "p_concat", scope: !10991, file: !10992, line: 70, type: !9)
!11039 = !DILocation(line: 70, column: 9, scope: !10991)
!11040 = !DILocation(line: 70, column: 28, scope: !10991)
!11041 = !DILocation(line: 70, column: 38, scope: !10991)
!11042 = !DILocation(line: 70, column: 42, scope: !10991)
!11043 = !DILocation(line: 70, column: 37, scope: !10991)
!11044 = !DILocation(line: 70, column: 35, scope: !10991)
!11045 = !DILocation(line: 70, column: 54, scope: !10991)
!11046 = !DILocation(line: 70, column: 52, scope: !10991)
!11047 = !DILocation(line: 70, column: 62, scope: !10991)
!11048 = !DILocation(line: 70, column: 20, scope: !10991)
!11049 = !DILocalVariable(name: "p", scope: !10991, file: !10992, line: 71, type: !9)
!11050 = !DILocation(line: 71, column: 9, scope: !10991)
!11051 = !DILocation(line: 73, column: 7, scope: !11052)
!11052 = distinct !DILexicalBlock(scope: !10991, file: !10992, line: 73, column: 7)
!11053 = !DILocation(line: 73, column: 16, scope: !11052)
!11054 = !DILocation(line: 73, column: 7, scope: !10991)
!11055 = !DILocation(line: 74, column: 5, scope: !11052)
!11056 = !DILocation(line: 76, column: 16, scope: !10991)
!11057 = !DILocation(line: 76, column: 26, scope: !10991)
!11058 = !DILocation(line: 76, column: 31, scope: !10991)
!11059 = !DILocation(line: 76, column: 7, scope: !10991)
!11060 = !DILocation(line: 76, column: 5, scope: !10991)
!11061 = !DILocation(line: 77, column: 8, scope: !10991)
!11062 = !DILocation(line: 77, column: 4, scope: !10991)
!11063 = !DILocation(line: 77, column: 6, scope: !10991)
!11064 = !DILocation(line: 78, column: 8, scope: !10991)
!11065 = !DILocation(line: 78, column: 12, scope: !10991)
!11066 = !DILocation(line: 78, column: 5, scope: !10991)
!11067 = !DILocation(line: 80, column: 7, scope: !11068)
!11068 = distinct !DILexicalBlock(scope: !10991, file: !10992, line: 80, column: 7)
!11069 = !DILocation(line: 80, column: 7, scope: !10991)
!11070 = !DILocation(line: 81, column: 23, scope: !11068)
!11071 = !DILocation(line: 81, column: 6, scope: !11068)
!11072 = !DILocation(line: 81, column: 21, scope: !11068)
!11073 = !DILocation(line: 81, column: 5, scope: !11068)
!11074 = !DILocation(line: 83, column: 16, scope: !10991)
!11075 = !DILocation(line: 83, column: 19, scope: !10991)
!11076 = !DILocation(line: 83, column: 25, scope: !10991)
!11077 = !DILocation(line: 83, column: 7, scope: !10991)
!11078 = !DILocation(line: 83, column: 5, scope: !10991)
!11079 = !DILocation(line: 84, column: 4, scope: !10991)
!11080 = !DILocation(line: 84, column: 6, scope: !10991)
!11081 = !DILocation(line: 86, column: 10, scope: !10991)
!11082 = !DILocation(line: 86, column: 3, scope: !10991)
!11083 = !DILocation(line: 87, column: 1, scope: !10991)
!11084 = distinct !DISubprogram(name: "full_read", scope: !1699, file: !1699, line: 58, type: !1696, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1693, retainedNodes: !209)
!11085 = !DILocalVariable(name: "fd", arg: 1, scope: !11084, file: !1699, line: 58, type: !7)
!11086 = !DILocation(line: 58, column: 14, scope: !11084)
!11087 = !DILocalVariable(name: "buf", arg: 2, scope: !11084, file: !1699, line: 58, type: !53)
!11088 = !DILocation(line: 58, column: 30, scope: !11084)
!11089 = !DILocalVariable(name: "count", arg: 3, scope: !11084, file: !1699, line: 58, type: !55)
!11090 = !DILocation(line: 58, column: 42, scope: !11084)
!11091 = !DILocalVariable(name: "total", scope: !11084, file: !1699, line: 60, type: !55)
!11092 = !DILocation(line: 60, column: 10, scope: !11084)
!11093 = !DILocalVariable(name: "ptr", scope: !11084, file: !1699, line: 61, type: !9)
!11094 = !DILocation(line: 61, column: 15, scope: !11084)
!11095 = !DILocation(line: 61, column: 36, scope: !11084)
!11096 = !DILocation(line: 63, column: 3, scope: !11084)
!11097 = !DILocation(line: 63, column: 10, scope: !11084)
!11098 = !DILocation(line: 63, column: 16, scope: !11084)
!11099 = !DILocalVariable(name: "n_rw", scope: !11100, file: !1699, line: 65, type: !55)
!11100 = distinct !DILexicalBlock(scope: !11084, file: !1699, line: 64, column: 5)
!11101 = !DILocation(line: 65, column: 14, scope: !11100)
!11102 = !DILocation(line: 65, column: 30, scope: !11100)
!11103 = !DILocation(line: 65, column: 34, scope: !11100)
!11104 = !DILocation(line: 65, column: 39, scope: !11100)
!11105 = !DILocation(line: 65, column: 21, scope: !11100)
!11106 = !DILocation(line: 66, column: 11, scope: !11107)
!11107 = distinct !DILexicalBlock(scope: !11100, file: !1699, line: 66, column: 11)
!11108 = !DILocation(line: 66, column: 16, scope: !11107)
!11109 = !DILocation(line: 66, column: 11, scope: !11100)
!11110 = !DILocation(line: 67, column: 9, scope: !11107)
!11111 = !DILocation(line: 68, column: 11, scope: !11112)
!11112 = distinct !DILexicalBlock(scope: !11100, file: !1699, line: 68, column: 11)
!11113 = !DILocation(line: 68, column: 16, scope: !11112)
!11114 = !DILocation(line: 68, column: 11, scope: !11100)
!11115 = !DILocation(line: 70, column: 11, scope: !11116)
!11116 = distinct !DILexicalBlock(scope: !11112, file: !1699, line: 69, column: 9)
!11117 = !DILocation(line: 70, column: 17, scope: !11116)
!11118 = !DILocation(line: 71, column: 11, scope: !11116)
!11119 = !DILocation(line: 73, column: 16, scope: !11100)
!11120 = !DILocation(line: 73, column: 13, scope: !11100)
!11121 = !DILocation(line: 74, column: 14, scope: !11100)
!11122 = !DILocation(line: 74, column: 11, scope: !11100)
!11123 = !DILocation(line: 75, column: 16, scope: !11100)
!11124 = !DILocation(line: 75, column: 13, scope: !11100)
!11125 = distinct !{!11125, !11096, !11126}
!11126 = !DILocation(line: 76, column: 5, scope: !11084)
!11127 = !DILocation(line: 78, column: 10, scope: !11084)
!11128 = !DILocation(line: 78, column: 3, scope: !11084)
!11129 = distinct !DISubprogram(name: "full_write", scope: !11130, file: !11130, line: 58, type: !1701, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1698, retainedNodes: !209)
!11130 = !DIFile(filename: "lib/full-write.c", directory: "/home/mbarbar/clone/coreutils")
!11131 = !DILocalVariable(name: "fd", arg: 1, scope: !11129, file: !11130, line: 58, type: !7)
!11132 = !DILocation(line: 58, column: 14, scope: !11129)
!11133 = !DILocalVariable(name: "buf", arg: 2, scope: !11129, file: !11130, line: 58, type: !515)
!11134 = !DILocation(line: 58, column: 30, scope: !11129)
!11135 = !DILocalVariable(name: "count", arg: 3, scope: !11129, file: !11130, line: 58, type: !55)
!11136 = !DILocation(line: 58, column: 42, scope: !11129)
!11137 = !DILocalVariable(name: "total", scope: !11129, file: !11130, line: 60, type: !55)
!11138 = !DILocation(line: 60, column: 10, scope: !11129)
!11139 = !DILocalVariable(name: "ptr", scope: !11129, file: !11130, line: 61, type: !180)
!11140 = !DILocation(line: 61, column: 15, scope: !11129)
!11141 = !DILocation(line: 61, column: 36, scope: !11129)
!11142 = !DILocation(line: 63, column: 3, scope: !11129)
!11143 = !DILocation(line: 63, column: 10, scope: !11129)
!11144 = !DILocation(line: 63, column: 16, scope: !11129)
!11145 = !DILocalVariable(name: "n_rw", scope: !11146, file: !11130, line: 65, type: !55)
!11146 = distinct !DILexicalBlock(scope: !11129, file: !11130, line: 64, column: 5)
!11147 = !DILocation(line: 65, column: 14, scope: !11146)
!11148 = !DILocation(line: 65, column: 30, scope: !11146)
!11149 = !DILocation(line: 65, column: 34, scope: !11146)
!11150 = !DILocation(line: 65, column: 39, scope: !11146)
!11151 = !DILocation(line: 65, column: 21, scope: !11146)
!11152 = !DILocation(line: 66, column: 11, scope: !11153)
!11153 = distinct !DILexicalBlock(scope: !11146, file: !11130, line: 66, column: 11)
!11154 = !DILocation(line: 66, column: 16, scope: !11153)
!11155 = !DILocation(line: 66, column: 11, scope: !11146)
!11156 = !DILocation(line: 67, column: 9, scope: !11153)
!11157 = !DILocation(line: 68, column: 11, scope: !11158)
!11158 = distinct !DILexicalBlock(scope: !11146, file: !11130, line: 68, column: 11)
!11159 = !DILocation(line: 68, column: 16, scope: !11158)
!11160 = !DILocation(line: 68, column: 11, scope: !11146)
!11161 = !DILocation(line: 70, column: 11, scope: !11162)
!11162 = distinct !DILexicalBlock(scope: !11158, file: !11130, line: 69, column: 9)
!11163 = !DILocation(line: 70, column: 17, scope: !11162)
!11164 = !DILocation(line: 71, column: 11, scope: !11162)
!11165 = !DILocation(line: 73, column: 16, scope: !11146)
!11166 = !DILocation(line: 73, column: 13, scope: !11146)
!11167 = !DILocation(line: 74, column: 14, scope: !11146)
!11168 = !DILocation(line: 74, column: 11, scope: !11146)
!11169 = !DILocation(line: 75, column: 16, scope: !11146)
!11170 = !DILocation(line: 75, column: 13, scope: !11146)
!11171 = distinct !{!11171, !11142, !11172}
!11172 = !DILocation(line: 76, column: 5, scope: !11129)
!11173 = !DILocation(line: 78, column: 10, scope: !11129)
!11174 = !DILocation(line: 78, column: 3, scope: !11129)
!11175 = distinct !DISubprogram(name: "hash_get_n_buckets", scope: !844, file: !844, line: 150, type: !838, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !835, retainedNodes: !209)
!11176 = !DILocalVariable(name: "table", arg: 1, scope: !11175, file: !844, line: 150, type: !840)
!11177 = !DILocation(line: 150, column: 39, scope: !11175)
!11178 = !DILocation(line: 152, column: 10, scope: !11175)
!11179 = !DILocation(line: 152, column: 17, scope: !11175)
!11180 = !{!11181, !2916, i64 16}
!11181 = !{!"hash_table", !2649, i64 0, !2649, i64 8, !2916, i64 16, !2916, i64 24, !2916, i64 32, !2649, i64 40, !2649, i64 48, !2649, i64 56, !2649, i64 64, !2649, i64 72}
!11182 = !DILocation(line: 152, column: 3, scope: !11175)
!11183 = distinct !DISubprogram(name: "hash_get_n_buckets_used", scope: !844, file: !844, line: 158, type: !838, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !835, retainedNodes: !209)
!11184 = !DILocalVariable(name: "table", arg: 1, scope: !11183, file: !844, line: 158, type: !840)
!11185 = !DILocation(line: 158, column: 44, scope: !11183)
!11186 = !DILocation(line: 160, column: 10, scope: !11183)
!11187 = !DILocation(line: 160, column: 17, scope: !11183)
!11188 = !{!11181, !2916, i64 24}
!11189 = !DILocation(line: 160, column: 3, scope: !11183)
!11190 = distinct !DISubprogram(name: "hash_get_n_entries", scope: !844, file: !844, line: 166, type: !838, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !835, retainedNodes: !209)
!11191 = !DILocalVariable(name: "table", arg: 1, scope: !11190, file: !844, line: 166, type: !840)
!11192 = !DILocation(line: 166, column: 39, scope: !11190)
!11193 = !DILocation(line: 168, column: 10, scope: !11190)
!11194 = !DILocation(line: 168, column: 17, scope: !11190)
!11195 = !{!11181, !2916, i64 32}
!11196 = !DILocation(line: 168, column: 3, scope: !11190)
!11197 = distinct !DISubprogram(name: "hash_get_max_bucket_length", scope: !844, file: !844, line: 174, type: !838, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !835, retainedNodes: !209)
!11198 = !DILocalVariable(name: "table", arg: 1, scope: !11197, file: !844, line: 174, type: !840)
!11199 = !DILocation(line: 174, column: 47, scope: !11197)
!11200 = !DILocalVariable(name: "bucket", scope: !11197, file: !844, line: 176, type: !853)
!11201 = !DILocation(line: 176, column: 28, scope: !11197)
!11202 = !DILocalVariable(name: "max_bucket_length", scope: !11197, file: !844, line: 177, type: !55)
!11203 = !DILocation(line: 177, column: 10, scope: !11197)
!11204 = !DILocation(line: 179, column: 17, scope: !11205)
!11205 = distinct !DILexicalBlock(scope: !11197, file: !844, line: 179, column: 3)
!11206 = !DILocation(line: 179, column: 24, scope: !11205)
!11207 = !{!11181, !2649, i64 0}
!11208 = !DILocation(line: 179, column: 15, scope: !11205)
!11209 = !DILocation(line: 179, column: 8, scope: !11205)
!11210 = !DILocation(line: 179, column: 32, scope: !11211)
!11211 = distinct !DILexicalBlock(scope: !11205, file: !844, line: 179, column: 3)
!11212 = !DILocation(line: 179, column: 41, scope: !11211)
!11213 = !DILocation(line: 179, column: 48, scope: !11211)
!11214 = !{!11181, !2649, i64 8}
!11215 = !DILocation(line: 179, column: 39, scope: !11211)
!11216 = !DILocation(line: 179, column: 3, scope: !11205)
!11217 = !DILocation(line: 181, column: 11, scope: !11218)
!11218 = distinct !DILexicalBlock(scope: !11219, file: !844, line: 181, column: 11)
!11219 = distinct !DILexicalBlock(scope: !11211, file: !844, line: 180, column: 5)
!11220 = !DILocation(line: 181, column: 19, scope: !11218)
!11221 = !{!11222, !2649, i64 0}
!11222 = !{!"hash_entry", !2649, i64 0, !2649, i64 8}
!11223 = !DILocation(line: 181, column: 11, scope: !11219)
!11224 = !DILocalVariable(name: "cursor", scope: !11225, file: !844, line: 183, type: !853)
!11225 = distinct !DILexicalBlock(scope: !11218, file: !844, line: 182, column: 9)
!11226 = !DILocation(line: 183, column: 36, scope: !11225)
!11227 = !DILocation(line: 183, column: 45, scope: !11225)
!11228 = !DILocalVariable(name: "bucket_length", scope: !11225, file: !844, line: 184, type: !55)
!11229 = !DILocation(line: 184, column: 18, scope: !11225)
!11230 = !DILocation(line: 186, column: 11, scope: !11225)
!11231 = !DILocation(line: 186, column: 27, scope: !11225)
!11232 = !DILocation(line: 186, column: 35, scope: !11225)
!11233 = !{!11222, !2649, i64 8}
!11234 = !DILocation(line: 186, column: 25, scope: !11225)
!11235 = !DILocation(line: 186, column: 41, scope: !11225)
!11236 = !DILocation(line: 187, column: 26, scope: !11225)
!11237 = distinct !{!11237, !11230, !11236}
!11238 = !DILocation(line: 189, column: 15, scope: !11239)
!11239 = distinct !DILexicalBlock(scope: !11225, file: !844, line: 189, column: 15)
!11240 = !DILocation(line: 189, column: 31, scope: !11239)
!11241 = !DILocation(line: 189, column: 29, scope: !11239)
!11242 = !DILocation(line: 189, column: 15, scope: !11225)
!11243 = !DILocation(line: 190, column: 33, scope: !11239)
!11244 = !DILocation(line: 190, column: 31, scope: !11239)
!11245 = !DILocation(line: 190, column: 13, scope: !11239)
!11246 = !DILocation(line: 191, column: 9, scope: !11225)
!11247 = !DILocation(line: 192, column: 5, scope: !11219)
!11248 = !DILocation(line: 179, column: 68, scope: !11211)
!11249 = !DILocation(line: 179, column: 3, scope: !11211)
!11250 = distinct !{!11250, !11216, !11251}
!11251 = !DILocation(line: 192, column: 5, scope: !11205)
!11252 = !DILocation(line: 194, column: 10, scope: !11197)
!11253 = !DILocation(line: 194, column: 3, scope: !11197)
!11254 = distinct !DISubprogram(name: "hash_table_ok", scope: !844, file: !844, line: 201, type: !880, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !835, retainedNodes: !209)
!11255 = !DILocalVariable(name: "table", arg: 1, scope: !11254, file: !844, line: 201, type: !840)
!11256 = !DILocation(line: 201, column: 34, scope: !11254)
!11257 = !DILocalVariable(name: "bucket", scope: !11254, file: !844, line: 203, type: !853)
!11258 = !DILocation(line: 203, column: 28, scope: !11254)
!11259 = !DILocalVariable(name: "n_buckets_used", scope: !11254, file: !844, line: 204, type: !55)
!11260 = !DILocation(line: 204, column: 10, scope: !11254)
!11261 = !DILocalVariable(name: "n_entries", scope: !11254, file: !844, line: 205, type: !55)
!11262 = !DILocation(line: 205, column: 10, scope: !11254)
!11263 = !DILocation(line: 207, column: 17, scope: !11264)
!11264 = distinct !DILexicalBlock(scope: !11254, file: !844, line: 207, column: 3)
!11265 = !DILocation(line: 207, column: 24, scope: !11264)
!11266 = !DILocation(line: 207, column: 15, scope: !11264)
!11267 = !DILocation(line: 207, column: 8, scope: !11264)
!11268 = !DILocation(line: 207, column: 32, scope: !11269)
!11269 = distinct !DILexicalBlock(scope: !11264, file: !844, line: 207, column: 3)
!11270 = !DILocation(line: 207, column: 41, scope: !11269)
!11271 = !DILocation(line: 207, column: 48, scope: !11269)
!11272 = !DILocation(line: 207, column: 39, scope: !11269)
!11273 = !DILocation(line: 207, column: 3, scope: !11264)
!11274 = !DILocation(line: 209, column: 11, scope: !11275)
!11275 = distinct !DILexicalBlock(scope: !11276, file: !844, line: 209, column: 11)
!11276 = distinct !DILexicalBlock(scope: !11269, file: !844, line: 208, column: 5)
!11277 = !DILocation(line: 209, column: 19, scope: !11275)
!11278 = !DILocation(line: 209, column: 11, scope: !11276)
!11279 = !DILocalVariable(name: "cursor", scope: !11280, file: !844, line: 211, type: !853)
!11280 = distinct !DILexicalBlock(scope: !11275, file: !844, line: 210, column: 9)
!11281 = !DILocation(line: 211, column: 36, scope: !11280)
!11282 = !DILocation(line: 211, column: 45, scope: !11280)
!11283 = !DILocation(line: 214, column: 25, scope: !11280)
!11284 = !DILocation(line: 215, column: 20, scope: !11280)
!11285 = !DILocation(line: 218, column: 11, scope: !11280)
!11286 = !DILocation(line: 218, column: 27, scope: !11280)
!11287 = !DILocation(line: 218, column: 35, scope: !11280)
!11288 = !DILocation(line: 218, column: 25, scope: !11280)
!11289 = !DILocation(line: 218, column: 41, scope: !11280)
!11290 = !DILocation(line: 219, column: 22, scope: !11280)
!11291 = distinct !{!11291, !11285, !11290}
!11292 = !DILocation(line: 220, column: 9, scope: !11280)
!11293 = !DILocation(line: 221, column: 5, scope: !11276)
!11294 = !DILocation(line: 207, column: 68, scope: !11269)
!11295 = !DILocation(line: 207, column: 3, scope: !11269)
!11296 = distinct !{!11296, !11273, !11297}
!11297 = !DILocation(line: 221, column: 5, scope: !11264)
!11298 = !DILocation(line: 223, column: 7, scope: !11299)
!11299 = distinct !DILexicalBlock(scope: !11254, file: !844, line: 223, column: 7)
!11300 = !DILocation(line: 223, column: 25, scope: !11299)
!11301 = !DILocation(line: 223, column: 32, scope: !11299)
!11302 = !DILocation(line: 223, column: 22, scope: !11299)
!11303 = !DILocation(line: 223, column: 47, scope: !11299)
!11304 = !DILocation(line: 223, column: 50, scope: !11299)
!11305 = !DILocation(line: 223, column: 63, scope: !11299)
!11306 = !DILocation(line: 223, column: 70, scope: !11299)
!11307 = !DILocation(line: 223, column: 60, scope: !11299)
!11308 = !DILocation(line: 223, column: 7, scope: !11254)
!11309 = !DILocation(line: 224, column: 5, scope: !11299)
!11310 = !DILocation(line: 226, column: 3, scope: !11254)
!11311 = !DILocation(line: 227, column: 1, scope: !11254)
!11312 = distinct !DISubprogram(name: "hash_print_statistics", scope: !844, file: !844, line: 230, type: !882, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !835, retainedNodes: !209)
!11313 = !DILocalVariable(name: "table", arg: 1, scope: !11312, file: !844, line: 230, type: !840)
!11314 = !DILocation(line: 230, column: 42, scope: !11312)
!11315 = !DILocalVariable(name: "stream", arg: 2, scope: !11312, file: !844, line: 230, type: !884)
!11316 = !DILocation(line: 230, column: 55, scope: !11312)
!11317 = !DILocalVariable(name: "n_entries", scope: !11312, file: !844, line: 232, type: !55)
!11318 = !DILocation(line: 232, column: 10, scope: !11312)
!11319 = !DILocation(line: 232, column: 42, scope: !11312)
!11320 = !DILocation(line: 232, column: 22, scope: !11312)
!11321 = !DILocalVariable(name: "n_buckets", scope: !11312, file: !844, line: 233, type: !55)
!11322 = !DILocation(line: 233, column: 10, scope: !11312)
!11323 = !DILocation(line: 233, column: 42, scope: !11312)
!11324 = !DILocation(line: 233, column: 22, scope: !11312)
!11325 = !DILocalVariable(name: "n_buckets_used", scope: !11312, file: !844, line: 234, type: !55)
!11326 = !DILocation(line: 234, column: 10, scope: !11312)
!11327 = !DILocation(line: 234, column: 52, scope: !11312)
!11328 = !DILocation(line: 234, column: 27, scope: !11312)
!11329 = !DILocalVariable(name: "max_bucket_length", scope: !11312, file: !844, line: 235, type: !55)
!11330 = !DILocation(line: 235, column: 10, scope: !11312)
!11331 = !DILocation(line: 235, column: 58, scope: !11312)
!11332 = !DILocation(line: 235, column: 30, scope: !11312)
!11333 = !DILocation(line: 237, column: 12, scope: !11312)
!11334 = !DILocation(line: 237, column: 68, scope: !11312)
!11335 = !DILocation(line: 237, column: 3, scope: !11312)
!11336 = !DILocation(line: 238, column: 12, scope: !11312)
!11337 = !DILocation(line: 238, column: 68, scope: !11312)
!11338 = !DILocation(line: 238, column: 3, scope: !11312)
!11339 = !DILocation(line: 239, column: 12, scope: !11312)
!11340 = !DILocation(line: 240, column: 32, scope: !11312)
!11341 = !DILocation(line: 241, column: 21, scope: !11312)
!11342 = !DILocation(line: 241, column: 19, scope: !11312)
!11343 = !DILocation(line: 241, column: 39, scope: !11312)
!11344 = !DILocation(line: 241, column: 37, scope: !11312)
!11345 = !DILocation(line: 239, column: 3, scope: !11312)
!11346 = !DILocation(line: 242, column: 12, scope: !11312)
!11347 = !DILocation(line: 243, column: 32, scope: !11312)
!11348 = !DILocation(line: 242, column: 3, scope: !11312)
!11349 = !DILocation(line: 244, column: 1, scope: !11312)
!11350 = distinct !DISubprogram(name: "hash_lookup", scope: !844, file: !844, line: 261, type: !918, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !835, retainedNodes: !209)
!11351 = !DILocalVariable(name: "table", arg: 1, scope: !11350, file: !844, line: 261, type: !840)
!11352 = !DILocation(line: 261, column: 32, scope: !11350)
!11353 = !DILocalVariable(name: "entry", arg: 2, scope: !11350, file: !844, line: 261, type: !515)
!11354 = !DILocation(line: 261, column: 51, scope: !11350)
!11355 = !DILocalVariable(name: "bucket", scope: !11350, file: !844, line: 263, type: !853)
!11356 = !DILocation(line: 263, column: 28, scope: !11350)
!11357 = !DILocation(line: 263, column: 50, scope: !11350)
!11358 = !DILocation(line: 263, column: 57, scope: !11350)
!11359 = !DILocation(line: 263, column: 37, scope: !11350)
!11360 = !DILocalVariable(name: "cursor", scope: !11350, file: !844, line: 264, type: !853)
!11361 = !DILocation(line: 264, column: 28, scope: !11350)
!11362 = !DILocation(line: 266, column: 7, scope: !11363)
!11363 = distinct !DILexicalBlock(scope: !11350, file: !844, line: 266, column: 7)
!11364 = !DILocation(line: 266, column: 15, scope: !11363)
!11365 = !DILocation(line: 266, column: 20, scope: !11363)
!11366 = !DILocation(line: 266, column: 7, scope: !11350)
!11367 = !DILocation(line: 267, column: 5, scope: !11363)
!11368 = !DILocation(line: 269, column: 17, scope: !11369)
!11369 = distinct !DILexicalBlock(scope: !11350, file: !844, line: 269, column: 3)
!11370 = !DILocation(line: 269, column: 15, scope: !11369)
!11371 = !DILocation(line: 269, column: 8, scope: !11369)
!11372 = !DILocation(line: 269, column: 25, scope: !11373)
!11373 = distinct !DILexicalBlock(scope: !11369, file: !844, line: 269, column: 3)
!11374 = !DILocation(line: 269, column: 3, scope: !11369)
!11375 = !DILocation(line: 270, column: 9, scope: !11376)
!11376 = distinct !DILexicalBlock(scope: !11373, file: !844, line: 270, column: 9)
!11377 = !DILocation(line: 270, column: 18, scope: !11376)
!11378 = !DILocation(line: 270, column: 26, scope: !11376)
!11379 = !DILocation(line: 270, column: 15, scope: !11376)
!11380 = !DILocation(line: 270, column: 31, scope: !11376)
!11381 = !DILocation(line: 270, column: 34, scope: !11376)
!11382 = !DILocation(line: 270, column: 41, scope: !11376)
!11383 = !{!11181, !2649, i64 56}
!11384 = !DILocation(line: 270, column: 53, scope: !11376)
!11385 = !DILocation(line: 270, column: 60, scope: !11376)
!11386 = !DILocation(line: 270, column: 68, scope: !11376)
!11387 = !DILocation(line: 270, column: 9, scope: !11373)
!11388 = !DILocation(line: 271, column: 14, scope: !11376)
!11389 = !DILocation(line: 271, column: 22, scope: !11376)
!11390 = !DILocation(line: 271, column: 7, scope: !11376)
!11391 = !DILocation(line: 270, column: 72, scope: !11376)
!11392 = !DILocation(line: 269, column: 42, scope: !11373)
!11393 = !DILocation(line: 269, column: 50, scope: !11373)
!11394 = !DILocation(line: 269, column: 40, scope: !11373)
!11395 = !DILocation(line: 269, column: 3, scope: !11373)
!11396 = distinct !{!11396, !11374, !11397}
!11397 = !DILocation(line: 271, column: 22, scope: !11369)
!11398 = !DILocation(line: 273, column: 3, scope: !11350)
!11399 = !DILocation(line: 274, column: 1, scope: !11350)
!11400 = distinct !DISubprogram(name: "safe_hasher", scope: !844, file: !844, line: 249, type: !948, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !835, retainedNodes: !209)
!11401 = !DILocalVariable(name: "table", arg: 1, scope: !11400, file: !844, line: 249, type: !840)
!11402 = !DILocation(line: 249, column: 32, scope: !11400)
!11403 = !DILocalVariable(name: "key", arg: 2, scope: !11400, file: !844, line: 249, type: !515)
!11404 = !DILocation(line: 249, column: 51, scope: !11400)
!11405 = !DILocalVariable(name: "n", scope: !11400, file: !844, line: 251, type: !55)
!11406 = !DILocation(line: 251, column: 10, scope: !11400)
!11407 = !DILocation(line: 251, column: 14, scope: !11400)
!11408 = !DILocation(line: 251, column: 21, scope: !11400)
!11409 = !{!11181, !2649, i64 48}
!11410 = !DILocation(line: 251, column: 29, scope: !11400)
!11411 = !DILocation(line: 251, column: 34, scope: !11400)
!11412 = !DILocation(line: 251, column: 41, scope: !11400)
!11413 = !DILocation(line: 252, column: 10, scope: !11414)
!11414 = distinct !DILexicalBlock(scope: !11400, file: !844, line: 252, column: 7)
!11415 = !DILocation(line: 252, column: 14, scope: !11414)
!11416 = !DILocation(line: 252, column: 21, scope: !11414)
!11417 = !DILocation(line: 252, column: 12, scope: !11414)
!11418 = !DILocation(line: 252, column: 7, scope: !11400)
!11419 = !DILocation(line: 253, column: 5, scope: !11414)
!11420 = !DILocation(line: 254, column: 10, scope: !11400)
!11421 = !DILocation(line: 254, column: 17, scope: !11400)
!11422 = !DILocation(line: 254, column: 26, scope: !11400)
!11423 = !DILocation(line: 254, column: 24, scope: !11400)
!11424 = !DILocation(line: 254, column: 3, scope: !11400)
!11425 = distinct !DISubprogram(name: "hash_get_first", scope: !844, file: !844, line: 288, type: !920, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !835, retainedNodes: !209)
!11426 = !DILocalVariable(name: "table", arg: 1, scope: !11425, file: !844, line: 288, type: !840)
!11427 = !DILocation(line: 288, column: 35, scope: !11425)
!11428 = !DILocalVariable(name: "bucket", scope: !11425, file: !844, line: 290, type: !853)
!11429 = !DILocation(line: 290, column: 28, scope: !11425)
!11430 = !DILocation(line: 292, column: 7, scope: !11431)
!11431 = distinct !DILexicalBlock(scope: !11425, file: !844, line: 292, column: 7)
!11432 = !DILocation(line: 292, column: 14, scope: !11431)
!11433 = !DILocation(line: 292, column: 24, scope: !11431)
!11434 = !DILocation(line: 292, column: 7, scope: !11425)
!11435 = !DILocation(line: 293, column: 5, scope: !11431)
!11436 = !DILocation(line: 295, column: 17, scope: !11437)
!11437 = distinct !DILexicalBlock(scope: !11425, file: !844, line: 295, column: 3)
!11438 = !DILocation(line: 295, column: 24, scope: !11437)
!11439 = !DILocation(line: 295, column: 15, scope: !11437)
!11440 = !DILocation(line: 295, column: 8, scope: !11437)
!11441 = !DILocation(line: 296, column: 12, scope: !11442)
!11442 = distinct !DILexicalBlock(scope: !11443, file: !844, line: 296, column: 9)
!11443 = distinct !DILexicalBlock(scope: !11437, file: !844, line: 295, column: 3)
!11444 = !DILocation(line: 296, column: 21, scope: !11442)
!11445 = !DILocation(line: 296, column: 28, scope: !11442)
!11446 = !DILocation(line: 296, column: 19, scope: !11442)
!11447 = !DILocation(line: 296, column: 9, scope: !11443)
!11448 = !DILocation(line: 297, column: 7, scope: !11442)
!11449 = !DILocation(line: 298, column: 14, scope: !11450)
!11450 = distinct !DILexicalBlock(scope: !11442, file: !844, line: 298, column: 14)
!11451 = !DILocation(line: 298, column: 22, scope: !11450)
!11452 = !DILocation(line: 298, column: 14, scope: !11442)
!11453 = !DILocation(line: 299, column: 14, scope: !11450)
!11454 = !DILocation(line: 299, column: 22, scope: !11450)
!11455 = !DILocation(line: 299, column: 7, scope: !11450)
!11456 = !DILocation(line: 296, column: 40, scope: !11442)
!11457 = !DILocation(line: 295, column: 40, scope: !11443)
!11458 = !DILocation(line: 295, column: 3, scope: !11443)
!11459 = distinct !{!11459, !11460, !11461}
!11460 = !DILocation(line: 295, column: 3, scope: !11437)
!11461 = !DILocation(line: 299, column: 22, scope: !11437)
!11462 = !DILocation(line: 300, column: 1, scope: !11425)
!11463 = distinct !DISubprogram(name: "hash_get_next", scope: !844, file: !844, line: 307, type: !918, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !835, retainedNodes: !209)
!11464 = !DILocalVariable(name: "table", arg: 1, scope: !11463, file: !844, line: 307, type: !840)
!11465 = !DILocation(line: 307, column: 34, scope: !11463)
!11466 = !DILocalVariable(name: "entry", arg: 2, scope: !11463, file: !844, line: 307, type: !515)
!11467 = !DILocation(line: 307, column: 53, scope: !11463)
!11468 = !DILocalVariable(name: "bucket", scope: !11463, file: !844, line: 309, type: !853)
!11469 = !DILocation(line: 309, column: 28, scope: !11463)
!11470 = !DILocation(line: 309, column: 50, scope: !11463)
!11471 = !DILocation(line: 309, column: 57, scope: !11463)
!11472 = !DILocation(line: 309, column: 37, scope: !11463)
!11473 = !DILocalVariable(name: "cursor", scope: !11463, file: !844, line: 310, type: !853)
!11474 = !DILocation(line: 310, column: 28, scope: !11463)
!11475 = !DILocation(line: 313, column: 12, scope: !11463)
!11476 = !DILocation(line: 313, column: 10, scope: !11463)
!11477 = !DILocation(line: 314, column: 3, scope: !11463)
!11478 = !DILocation(line: 316, column: 11, scope: !11479)
!11479 = distinct !DILexicalBlock(scope: !11480, file: !844, line: 316, column: 11)
!11480 = distinct !DILexicalBlock(scope: !11463, file: !844, line: 315, column: 5)
!11481 = !DILocation(line: 316, column: 19, scope: !11479)
!11482 = !DILocation(line: 316, column: 27, scope: !11479)
!11483 = !DILocation(line: 316, column: 24, scope: !11479)
!11484 = !DILocation(line: 316, column: 33, scope: !11479)
!11485 = !DILocation(line: 316, column: 36, scope: !11479)
!11486 = !DILocation(line: 316, column: 44, scope: !11479)
!11487 = !DILocation(line: 316, column: 11, scope: !11480)
!11488 = !DILocation(line: 317, column: 16, scope: !11479)
!11489 = !DILocation(line: 317, column: 24, scope: !11479)
!11490 = !DILocation(line: 317, column: 30, scope: !11479)
!11491 = !DILocation(line: 317, column: 9, scope: !11479)
!11492 = !DILocation(line: 318, column: 16, scope: !11480)
!11493 = !DILocation(line: 318, column: 24, scope: !11480)
!11494 = !DILocation(line: 318, column: 14, scope: !11480)
!11495 = !DILocation(line: 319, column: 5, scope: !11480)
!11496 = !DILocation(line: 320, column: 10, scope: !11463)
!11497 = !DILocation(line: 320, column: 17, scope: !11463)
!11498 = distinct !{!11498, !11477, !11499}
!11499 = !DILocation(line: 320, column: 24, scope: !11463)
!11500 = !DILocation(line: 323, column: 3, scope: !11463)
!11501 = !DILocation(line: 323, column: 10, scope: !11463)
!11502 = !DILocation(line: 323, column: 21, scope: !11463)
!11503 = !DILocation(line: 323, column: 28, scope: !11463)
!11504 = !DILocation(line: 323, column: 19, scope: !11463)
!11505 = !DILocation(line: 324, column: 9, scope: !11506)
!11506 = distinct !DILexicalBlock(scope: !11463, file: !844, line: 324, column: 9)
!11507 = !DILocation(line: 324, column: 17, scope: !11506)
!11508 = !DILocation(line: 324, column: 9, scope: !11463)
!11509 = !DILocation(line: 325, column: 14, scope: !11506)
!11510 = !DILocation(line: 325, column: 22, scope: !11506)
!11511 = !DILocation(line: 325, column: 7, scope: !11506)
!11512 = distinct !{!11512, !11500, !11513}
!11513 = !DILocation(line: 325, column: 22, scope: !11463)
!11514 = !DILocation(line: 328, column: 3, scope: !11463)
!11515 = !DILocation(line: 329, column: 1, scope: !11463)
!11516 = distinct !DISubprogram(name: "hash_get_entries", scope: !844, file: !844, line: 336, type: !922, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !835, retainedNodes: !209)
!11517 = !DILocalVariable(name: "table", arg: 1, scope: !11516, file: !844, line: 336, type: !840)
!11518 = !DILocation(line: 336, column: 37, scope: !11516)
!11519 = !DILocalVariable(name: "buffer", arg: 2, scope: !11516, file: !844, line: 336, type: !924)
!11520 = !DILocation(line: 336, column: 51, scope: !11516)
!11521 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !11516, file: !844, line: 337, type: !55)
!11522 = !DILocation(line: 337, column: 26, scope: !11516)
!11523 = !DILocalVariable(name: "counter", scope: !11516, file: !844, line: 339, type: !55)
!11524 = !DILocation(line: 339, column: 10, scope: !11516)
!11525 = !DILocalVariable(name: "bucket", scope: !11516, file: !844, line: 340, type: !853)
!11526 = !DILocation(line: 340, column: 28, scope: !11516)
!11527 = !DILocalVariable(name: "cursor", scope: !11516, file: !844, line: 341, type: !853)
!11528 = !DILocation(line: 341, column: 28, scope: !11516)
!11529 = !DILocation(line: 343, column: 17, scope: !11530)
!11530 = distinct !DILexicalBlock(scope: !11516, file: !844, line: 343, column: 3)
!11531 = !DILocation(line: 343, column: 24, scope: !11530)
!11532 = !DILocation(line: 343, column: 15, scope: !11530)
!11533 = !DILocation(line: 343, column: 8, scope: !11530)
!11534 = !DILocation(line: 343, column: 32, scope: !11535)
!11535 = distinct !DILexicalBlock(scope: !11530, file: !844, line: 343, column: 3)
!11536 = !DILocation(line: 343, column: 41, scope: !11535)
!11537 = !DILocation(line: 343, column: 48, scope: !11535)
!11538 = !DILocation(line: 343, column: 39, scope: !11535)
!11539 = !DILocation(line: 343, column: 3, scope: !11530)
!11540 = !DILocation(line: 345, column: 11, scope: !11541)
!11541 = distinct !DILexicalBlock(scope: !11542, file: !844, line: 345, column: 11)
!11542 = distinct !DILexicalBlock(scope: !11535, file: !844, line: 344, column: 5)
!11543 = !DILocation(line: 345, column: 19, scope: !11541)
!11544 = !DILocation(line: 345, column: 11, scope: !11542)
!11545 = !DILocation(line: 347, column: 25, scope: !11546)
!11546 = distinct !DILexicalBlock(scope: !11547, file: !844, line: 347, column: 11)
!11547 = distinct !DILexicalBlock(scope: !11541, file: !844, line: 346, column: 9)
!11548 = !DILocation(line: 347, column: 23, scope: !11546)
!11549 = !DILocation(line: 347, column: 16, scope: !11546)
!11550 = !DILocation(line: 347, column: 33, scope: !11551)
!11551 = distinct !DILexicalBlock(scope: !11546, file: !844, line: 347, column: 11)
!11552 = !DILocation(line: 347, column: 11, scope: !11546)
!11553 = !DILocation(line: 349, column: 19, scope: !11554)
!11554 = distinct !DILexicalBlock(scope: !11555, file: !844, line: 349, column: 19)
!11555 = distinct !DILexicalBlock(scope: !11551, file: !844, line: 348, column: 13)
!11556 = !DILocation(line: 349, column: 30, scope: !11554)
!11557 = !DILocation(line: 349, column: 27, scope: !11554)
!11558 = !DILocation(line: 349, column: 19, scope: !11555)
!11559 = !DILocation(line: 350, column: 24, scope: !11554)
!11560 = !DILocation(line: 350, column: 17, scope: !11554)
!11561 = !DILocation(line: 351, column: 35, scope: !11555)
!11562 = !DILocation(line: 351, column: 43, scope: !11555)
!11563 = !DILocation(line: 351, column: 15, scope: !11555)
!11564 = !DILocation(line: 351, column: 29, scope: !11555)
!11565 = !DILocation(line: 351, column: 33, scope: !11555)
!11566 = !DILocation(line: 352, column: 13, scope: !11555)
!11567 = !DILocation(line: 347, column: 50, scope: !11551)
!11568 = !DILocation(line: 347, column: 58, scope: !11551)
!11569 = !DILocation(line: 347, column: 48, scope: !11551)
!11570 = !DILocation(line: 347, column: 11, scope: !11551)
!11571 = distinct !{!11571, !11552, !11572}
!11572 = !DILocation(line: 352, column: 13, scope: !11546)
!11573 = !DILocation(line: 353, column: 9, scope: !11547)
!11574 = !DILocation(line: 354, column: 5, scope: !11542)
!11575 = !DILocation(line: 343, column: 68, scope: !11535)
!11576 = !DILocation(line: 343, column: 3, scope: !11535)
!11577 = distinct !{!11577, !11539, !11578}
!11578 = !DILocation(line: 354, column: 5, scope: !11530)
!11579 = !DILocation(line: 356, column: 10, scope: !11516)
!11580 = !DILocation(line: 356, column: 3, scope: !11516)
!11581 = !DILocation(line: 357, column: 1, scope: !11516)
!11582 = distinct !DISubprogram(name: "hash_do_for_each", scope: !844, file: !844, line: 368, type: !925, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !835, retainedNodes: !209)
!11583 = !DILocalVariable(name: "table", arg: 1, scope: !11582, file: !844, line: 368, type: !840)
!11584 = !DILocation(line: 368, column: 37, scope: !11582)
!11585 = !DILocalVariable(name: "processor", arg: 2, scope: !11582, file: !844, line: 368, type: !927)
!11586 = !DILocation(line: 368, column: 59, scope: !11582)
!11587 = !DILocalVariable(name: "processor_data", arg: 3, scope: !11582, file: !844, line: 369, type: !53)
!11588 = !DILocation(line: 369, column: 25, scope: !11582)
!11589 = !DILocalVariable(name: "counter", scope: !11582, file: !844, line: 371, type: !55)
!11590 = !DILocation(line: 371, column: 10, scope: !11582)
!11591 = !DILocalVariable(name: "bucket", scope: !11582, file: !844, line: 372, type: !853)
!11592 = !DILocation(line: 372, column: 28, scope: !11582)
!11593 = !DILocalVariable(name: "cursor", scope: !11582, file: !844, line: 373, type: !853)
!11594 = !DILocation(line: 373, column: 28, scope: !11582)
!11595 = !DILocation(line: 375, column: 17, scope: !11596)
!11596 = distinct !DILexicalBlock(scope: !11582, file: !844, line: 375, column: 3)
!11597 = !DILocation(line: 375, column: 24, scope: !11596)
!11598 = !DILocation(line: 375, column: 15, scope: !11596)
!11599 = !DILocation(line: 375, column: 8, scope: !11596)
!11600 = !DILocation(line: 375, column: 32, scope: !11601)
!11601 = distinct !DILexicalBlock(scope: !11596, file: !844, line: 375, column: 3)
!11602 = !DILocation(line: 375, column: 41, scope: !11601)
!11603 = !DILocation(line: 375, column: 48, scope: !11601)
!11604 = !DILocation(line: 375, column: 39, scope: !11601)
!11605 = !DILocation(line: 375, column: 3, scope: !11596)
!11606 = !DILocation(line: 377, column: 11, scope: !11607)
!11607 = distinct !DILexicalBlock(scope: !11608, file: !844, line: 377, column: 11)
!11608 = distinct !DILexicalBlock(scope: !11601, file: !844, line: 376, column: 5)
!11609 = !DILocation(line: 377, column: 19, scope: !11607)
!11610 = !DILocation(line: 377, column: 11, scope: !11608)
!11611 = !DILocation(line: 379, column: 25, scope: !11612)
!11612 = distinct !DILexicalBlock(scope: !11613, file: !844, line: 379, column: 11)
!11613 = distinct !DILexicalBlock(scope: !11607, file: !844, line: 378, column: 9)
!11614 = !DILocation(line: 379, column: 23, scope: !11612)
!11615 = !DILocation(line: 379, column: 16, scope: !11612)
!11616 = !DILocation(line: 379, column: 33, scope: !11617)
!11617 = distinct !DILexicalBlock(scope: !11612, file: !844, line: 379, column: 11)
!11618 = !DILocation(line: 379, column: 11, scope: !11612)
!11619 = !DILocation(line: 381, column: 21, scope: !11620)
!11620 = distinct !DILexicalBlock(scope: !11621, file: !844, line: 381, column: 19)
!11621 = distinct !DILexicalBlock(scope: !11617, file: !844, line: 380, column: 13)
!11622 = !DILocation(line: 381, column: 32, scope: !11620)
!11623 = !DILocation(line: 381, column: 40, scope: !11620)
!11624 = !DILocation(line: 381, column: 46, scope: !11620)
!11625 = !DILocation(line: 381, column: 19, scope: !11621)
!11626 = !DILocation(line: 382, column: 24, scope: !11620)
!11627 = !DILocation(line: 382, column: 17, scope: !11620)
!11628 = !DILocation(line: 383, column: 22, scope: !11621)
!11629 = !DILocation(line: 384, column: 13, scope: !11621)
!11630 = !DILocation(line: 379, column: 50, scope: !11617)
!11631 = !DILocation(line: 379, column: 58, scope: !11617)
!11632 = !DILocation(line: 379, column: 48, scope: !11617)
!11633 = !DILocation(line: 379, column: 11, scope: !11617)
!11634 = distinct !{!11634, !11618, !11635}
!11635 = !DILocation(line: 384, column: 13, scope: !11612)
!11636 = !DILocation(line: 385, column: 9, scope: !11613)
!11637 = !DILocation(line: 386, column: 5, scope: !11608)
!11638 = !DILocation(line: 375, column: 68, scope: !11601)
!11639 = !DILocation(line: 375, column: 3, scope: !11601)
!11640 = distinct !{!11640, !11605, !11641}
!11641 = !DILocation(line: 386, column: 5, scope: !11596)
!11642 = !DILocation(line: 388, column: 10, scope: !11582)
!11643 = !DILocation(line: 388, column: 3, scope: !11582)
!11644 = !DILocation(line: 389, column: 1, scope: !11582)
!11645 = distinct !DISubprogram(name: "hash_string", scope: !844, file: !844, line: 428, type: !931, scopeLine: 429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !835, retainedNodes: !209)
!11646 = !DILocalVariable(name: "string", arg: 1, scope: !11645, file: !844, line: 428, type: !180)
!11647 = !DILocation(line: 428, column: 26, scope: !11645)
!11648 = !DILocalVariable(name: "n_buckets", arg: 2, scope: !11645, file: !844, line: 428, type: !55)
!11649 = !DILocation(line: 428, column: 41, scope: !11645)
!11650 = !DILocalVariable(name: "value", scope: !11645, file: !844, line: 430, type: !55)
!11651 = !DILocation(line: 430, column: 10, scope: !11645)
!11652 = !DILocalVariable(name: "ch", scope: !11645, file: !844, line: 431, type: !556)
!11653 = !DILocation(line: 431, column: 17, scope: !11645)
!11654 = !DILocation(line: 433, column: 3, scope: !11645)
!11655 = !DILocation(line: 433, column: 17, scope: !11656)
!11656 = distinct !DILexicalBlock(scope: !11657, file: !844, line: 433, column: 3)
!11657 = distinct !DILexicalBlock(scope: !11645, file: !844, line: 433, column: 3)
!11658 = !DILocation(line: 433, column: 16, scope: !11656)
!11659 = !DILocation(line: 433, column: 14, scope: !11656)
!11660 = !DILocation(line: 433, column: 3, scope: !11657)
!11661 = !DILocation(line: 434, column: 14, scope: !11656)
!11662 = !DILocation(line: 434, column: 20, scope: !11656)
!11663 = !DILocation(line: 434, column: 27, scope: !11656)
!11664 = !DILocation(line: 434, column: 25, scope: !11656)
!11665 = !DILocation(line: 434, column: 33, scope: !11656)
!11666 = !DILocation(line: 434, column: 31, scope: !11656)
!11667 = !DILocation(line: 434, column: 11, scope: !11656)
!11668 = !DILocation(line: 434, column: 5, scope: !11656)
!11669 = !DILocation(line: 433, column: 32, scope: !11656)
!11670 = !DILocation(line: 433, column: 3, scope: !11656)
!11671 = distinct !{!11671, !11660, !11672}
!11672 = !DILocation(line: 434, column: 33, scope: !11657)
!11673 = !DILocation(line: 435, column: 10, scope: !11645)
!11674 = !DILocation(line: 435, column: 3, scope: !11645)
!11675 = distinct !DISubprogram(name: "hash_reset_tuning", scope: !844, file: !844, line: 479, type: !933, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !835, retainedNodes: !209)
!11676 = !DILocalVariable(name: "tuning", arg: 1, scope: !11675, file: !844, line: 479, type: !935)
!11677 = !DILocation(line: 479, column: 33, scope: !11675)
!11678 = !DILocation(line: 481, column: 4, scope: !11675)
!11679 = !DILocation(line: 481, column: 13, scope: !11675)
!11680 = !{i64 0, i64 4, !11681, i64 4, i64 4, !11681, i64 8, i64 4, !11681, i64 12, i64 4, !11681, i64 16, i64 1, !2742}
!11681 = !{!11682, !11682, i64 0}
!11682 = !{!"float", !2637, i64 0}
!11683 = !DILocation(line: 482, column: 1, scope: !11675)
!11684 = distinct !DISubprogram(name: "hash_initialize", scope: !844, file: !844, line: 594, type: !936, scopeLine: 597, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !835, retainedNodes: !209)
!11685 = !DILocalVariable(name: "candidate", arg: 1, scope: !11684, file: !844, line: 594, type: !55)
!11686 = !DILocation(line: 594, column: 25, scope: !11684)
!11687 = !DILocalVariable(name: "tuning", arg: 2, scope: !11684, file: !844, line: 594, type: !859)
!11688 = !DILocation(line: 594, column: 55, scope: !11684)
!11689 = !DILocalVariable(name: "hasher", arg: 3, scope: !11684, file: !844, line: 595, type: !871)
!11690 = !DILocation(line: 595, column: 30, scope: !11684)
!11691 = !DILocalVariable(name: "comparator", arg: 4, scope: !11684, file: !844, line: 595, type: !874)
!11692 = !DILocation(line: 595, column: 54, scope: !11684)
!11693 = !DILocalVariable(name: "data_freer", arg: 5, scope: !11684, file: !844, line: 596, type: !877)
!11694 = !DILocation(line: 596, column: 34, scope: !11684)
!11695 = !DILocalVariable(name: "table", scope: !11684, file: !844, line: 598, type: !938)
!11696 = !DILocation(line: 598, column: 15, scope: !11684)
!11697 = !DILocation(line: 600, column: 7, scope: !11698)
!11698 = distinct !DILexicalBlock(scope: !11684, file: !844, line: 600, column: 7)
!11699 = !DILocation(line: 600, column: 14, scope: !11698)
!11700 = !DILocation(line: 600, column: 7, scope: !11684)
!11701 = !DILocation(line: 601, column: 12, scope: !11698)
!11702 = !DILocation(line: 601, column: 5, scope: !11698)
!11703 = !DILocation(line: 602, column: 7, scope: !11704)
!11704 = distinct !DILexicalBlock(scope: !11684, file: !844, line: 602, column: 7)
!11705 = !DILocation(line: 602, column: 18, scope: !11704)
!11706 = !DILocation(line: 602, column: 7, scope: !11684)
!11707 = !DILocation(line: 603, column: 16, scope: !11704)
!11708 = !DILocation(line: 603, column: 5, scope: !11704)
!11709 = !DILocation(line: 605, column: 11, scope: !11684)
!11710 = !DILocation(line: 605, column: 9, scope: !11684)
!11711 = !DILocation(line: 606, column: 7, scope: !11712)
!11712 = distinct !DILexicalBlock(scope: !11684, file: !844, line: 606, column: 7)
!11713 = !DILocation(line: 606, column: 13, scope: !11712)
!11714 = !DILocation(line: 606, column: 7, scope: !11684)
!11715 = !DILocation(line: 607, column: 5, scope: !11712)
!11716 = !DILocation(line: 609, column: 8, scope: !11717)
!11717 = distinct !DILexicalBlock(scope: !11684, file: !844, line: 609, column: 7)
!11718 = !DILocation(line: 609, column: 7, scope: !11684)
!11719 = !DILocation(line: 610, column: 12, scope: !11717)
!11720 = !DILocation(line: 610, column: 5, scope: !11717)
!11721 = !DILocation(line: 611, column: 19, scope: !11684)
!11722 = !DILocation(line: 611, column: 3, scope: !11684)
!11723 = !DILocation(line: 611, column: 10, scope: !11684)
!11724 = !DILocation(line: 611, column: 17, scope: !11684)
!11725 = !{!11181, !2649, i64 40}
!11726 = !DILocation(line: 612, column: 22, scope: !11727)
!11727 = distinct !DILexicalBlock(scope: !11684, file: !844, line: 612, column: 7)
!11728 = !DILocation(line: 612, column: 8, scope: !11727)
!11729 = !DILocation(line: 612, column: 7, scope: !11684)
!11730 = !DILocation(line: 619, column: 7, scope: !11731)
!11731 = distinct !DILexicalBlock(scope: !11727, file: !844, line: 613, column: 5)
!11732 = !DILocation(line: 622, column: 43, scope: !11684)
!11733 = !DILocation(line: 622, column: 54, scope: !11684)
!11734 = !DILocation(line: 622, column: 22, scope: !11684)
!11735 = !DILocation(line: 622, column: 3, scope: !11684)
!11736 = !DILocation(line: 622, column: 10, scope: !11684)
!11737 = !DILocation(line: 622, column: 20, scope: !11684)
!11738 = !DILocation(line: 623, column: 8, scope: !11739)
!11739 = distinct !DILexicalBlock(scope: !11684, file: !844, line: 623, column: 7)
!11740 = !DILocation(line: 623, column: 15, scope: !11739)
!11741 = !DILocation(line: 623, column: 7, scope: !11684)
!11742 = !DILocation(line: 624, column: 5, scope: !11739)
!11743 = !DILocation(line: 626, column: 27, scope: !11684)
!11744 = !DILocation(line: 626, column: 34, scope: !11684)
!11745 = !DILocation(line: 626, column: 19, scope: !11684)
!11746 = !DILocation(line: 626, column: 3, scope: !11684)
!11747 = !DILocation(line: 626, column: 10, scope: !11684)
!11748 = !DILocation(line: 626, column: 17, scope: !11684)
!11749 = !DILocation(line: 627, column: 7, scope: !11750)
!11750 = distinct !DILexicalBlock(scope: !11684, file: !844, line: 627, column: 7)
!11751 = !DILocation(line: 627, column: 14, scope: !11750)
!11752 = !DILocation(line: 627, column: 21, scope: !11750)
!11753 = !DILocation(line: 627, column: 7, scope: !11684)
!11754 = !DILocation(line: 628, column: 5, scope: !11750)
!11755 = !DILocation(line: 629, column: 25, scope: !11684)
!11756 = !DILocation(line: 629, column: 32, scope: !11684)
!11757 = !DILocation(line: 629, column: 41, scope: !11684)
!11758 = !DILocation(line: 629, column: 48, scope: !11684)
!11759 = !DILocation(line: 629, column: 39, scope: !11684)
!11760 = !DILocation(line: 629, column: 3, scope: !11684)
!11761 = !DILocation(line: 629, column: 10, scope: !11684)
!11762 = !DILocation(line: 629, column: 23, scope: !11684)
!11763 = !DILocation(line: 630, column: 3, scope: !11684)
!11764 = !DILocation(line: 630, column: 10, scope: !11684)
!11765 = !DILocation(line: 630, column: 25, scope: !11684)
!11766 = !DILocation(line: 631, column: 3, scope: !11684)
!11767 = !DILocation(line: 631, column: 10, scope: !11684)
!11768 = !DILocation(line: 631, column: 20, scope: !11684)
!11769 = !DILocation(line: 633, column: 19, scope: !11684)
!11770 = !DILocation(line: 633, column: 3, scope: !11684)
!11771 = !DILocation(line: 633, column: 10, scope: !11684)
!11772 = !DILocation(line: 633, column: 17, scope: !11684)
!11773 = !DILocation(line: 634, column: 23, scope: !11684)
!11774 = !DILocation(line: 634, column: 3, scope: !11684)
!11775 = !DILocation(line: 634, column: 10, scope: !11684)
!11776 = !DILocation(line: 634, column: 21, scope: !11684)
!11777 = !DILocation(line: 635, column: 23, scope: !11684)
!11778 = !DILocation(line: 635, column: 3, scope: !11684)
!11779 = !DILocation(line: 635, column: 10, scope: !11684)
!11780 = !DILocation(line: 635, column: 21, scope: !11684)
!11781 = !{!11181, !2649, i64 64}
!11782 = !DILocation(line: 637, column: 3, scope: !11684)
!11783 = !DILocation(line: 637, column: 10, scope: !11684)
!11784 = !DILocation(line: 637, column: 26, scope: !11684)
!11785 = !{!11181, !2649, i64 72}
!11786 = !DILocation(line: 641, column: 10, scope: !11684)
!11787 = !DILocation(line: 641, column: 3, scope: !11684)
!11788 = !DILabel(scope: !11684, name: "fail", file: !844, line: 643)
!11789 = !DILocation(line: 643, column: 2, scope: !11684)
!11790 = !DILocation(line: 644, column: 9, scope: !11684)
!11791 = !DILocation(line: 644, column: 3, scope: !11684)
!11792 = !DILocation(line: 645, column: 3, scope: !11684)
!11793 = !DILocation(line: 646, column: 1, scope: !11684)
!11794 = distinct !DISubprogram(name: "raw_hasher", scope: !844, file: !844, line: 486, type: !635, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !835, retainedNodes: !209)
!11795 = !DILocalVariable(name: "data", arg: 1, scope: !11794, file: !844, line: 486, type: !515)
!11796 = !DILocation(line: 486, column: 25, scope: !11794)
!11797 = !DILocalVariable(name: "n", arg: 2, scope: !11794, file: !844, line: 486, type: !55)
!11798 = !DILocation(line: 486, column: 38, scope: !11794)
!11799 = !DILocalVariable(name: "val", scope: !11794, file: !844, line: 493, type: !55)
!11800 = !DILocation(line: 493, column: 10, scope: !11794)
!11801 = !DILocation(line: 493, column: 34, scope: !11794)
!11802 = !DILocation(line: 493, column: 25, scope: !11794)
!11803 = !DILocation(line: 493, column: 16, scope: !11794)
!11804 = !DILocation(line: 494, column: 10, scope: !11794)
!11805 = !DILocation(line: 494, column: 16, scope: !11794)
!11806 = !DILocation(line: 494, column: 14, scope: !11794)
!11807 = !DILocation(line: 494, column: 3, scope: !11794)
!11808 = distinct !DISubprogram(name: "raw_comparator", scope: !844, file: !844, line: 499, type: !637, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !835, retainedNodes: !209)
!11809 = !DILocalVariable(name: "a", arg: 1, scope: !11808, file: !844, line: 499, type: !515)
!11810 = !DILocation(line: 499, column: 29, scope: !11808)
!11811 = !DILocalVariable(name: "b", arg: 2, scope: !11808, file: !844, line: 499, type: !515)
!11812 = !DILocation(line: 499, column: 44, scope: !11808)
!11813 = !DILocation(line: 501, column: 10, scope: !11808)
!11814 = !DILocation(line: 501, column: 15, scope: !11808)
!11815 = !DILocation(line: 501, column: 12, scope: !11808)
!11816 = !DILocation(line: 501, column: 3, scope: !11808)
!11817 = distinct !DISubprogram(name: "check_tuning", scope: !844, file: !844, line: 512, type: !950, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !835, retainedNodes: !209)
!11818 = !DILocalVariable(name: "table", arg: 1, scope: !11817, file: !844, line: 512, type: !938)
!11819 = !DILocation(line: 512, column: 27, scope: !11817)
!11820 = !DILocalVariable(name: "tuning", scope: !11817, file: !844, line: 514, type: !859)
!11821 = !DILocation(line: 514, column: 22, scope: !11817)
!11822 = !DILocation(line: 514, column: 31, scope: !11817)
!11823 = !DILocation(line: 514, column: 38, scope: !11817)
!11824 = !DILocalVariable(name: "epsilon", scope: !11817, file: !844, line: 515, type: !865)
!11825 = !DILocation(line: 515, column: 9, scope: !11817)
!11826 = !DILocation(line: 516, column: 7, scope: !11827)
!11827 = distinct !DILexicalBlock(scope: !11817, file: !844, line: 516, column: 7)
!11828 = !DILocation(line: 516, column: 14, scope: !11827)
!11829 = !DILocation(line: 516, column: 7, scope: !11817)
!11830 = !DILocation(line: 517, column: 5, scope: !11827)
!11831 = !DILocation(line: 524, column: 11, scope: !11817)
!11832 = !DILocation(line: 526, column: 7, scope: !11833)
!11833 = distinct !DILexicalBlock(scope: !11817, file: !844, line: 526, column: 7)
!11834 = !DILocation(line: 526, column: 17, scope: !11833)
!11835 = !DILocation(line: 526, column: 25, scope: !11833)
!11836 = !{!11837, !11682, i64 8}
!11837 = !{!"hash_tuning", !11682, i64 0, !11682, i64 4, !11682, i64 8, !11682, i64 12, !2743, i64 16}
!11838 = !DILocation(line: 526, column: 15, scope: !11833)
!11839 = !DILocation(line: 527, column: 7, scope: !11833)
!11840 = !DILocation(line: 527, column: 10, scope: !11833)
!11841 = !DILocation(line: 527, column: 18, scope: !11833)
!11842 = !DILocation(line: 527, column: 41, scope: !11833)
!11843 = !DILocation(line: 527, column: 39, scope: !11833)
!11844 = !DILocation(line: 527, column: 35, scope: !11833)
!11845 = !DILocation(line: 528, column: 7, scope: !11833)
!11846 = !DILocation(line: 528, column: 14, scope: !11833)
!11847 = !DILocation(line: 528, column: 12, scope: !11833)
!11848 = !DILocation(line: 528, column: 24, scope: !11833)
!11849 = !DILocation(line: 528, column: 32, scope: !11833)
!11850 = !{!11837, !11682, i64 12}
!11851 = !DILocation(line: 528, column: 22, scope: !11833)
!11852 = !DILocation(line: 529, column: 7, scope: !11833)
!11853 = !DILocation(line: 529, column: 15, scope: !11833)
!11854 = !DILocation(line: 529, column: 23, scope: !11833)
!11855 = !{!11837, !11682, i64 0}
!11856 = !DILocation(line: 529, column: 12, scope: !11833)
!11857 = !DILocation(line: 530, column: 7, scope: !11833)
!11858 = !DILocation(line: 530, column: 10, scope: !11833)
!11859 = !DILocation(line: 530, column: 18, scope: !11833)
!11860 = !DILocation(line: 530, column: 37, scope: !11833)
!11861 = !DILocation(line: 530, column: 35, scope: !11833)
!11862 = !DILocation(line: 530, column: 47, scope: !11833)
!11863 = !DILocation(line: 530, column: 55, scope: !11833)
!11864 = !{!11837, !11682, i64 4}
!11865 = !DILocation(line: 530, column: 45, scope: !11833)
!11866 = !DILocation(line: 531, column: 7, scope: !11833)
!11867 = !DILocation(line: 531, column: 10, scope: !11833)
!11868 = !DILocation(line: 531, column: 18, scope: !11833)
!11869 = !DILocation(line: 531, column: 32, scope: !11833)
!11870 = !DILocation(line: 532, column: 7, scope: !11833)
!11871 = !DILocation(line: 532, column: 10, scope: !11833)
!11872 = !DILocation(line: 532, column: 18, scope: !11833)
!11873 = !DILocation(line: 532, column: 37, scope: !11833)
!11874 = !DILocation(line: 532, column: 35, scope: !11833)
!11875 = !DILocation(line: 532, column: 47, scope: !11833)
!11876 = !DILocation(line: 532, column: 55, scope: !11833)
!11877 = !DILocation(line: 532, column: 45, scope: !11833)
!11878 = !DILocation(line: 526, column: 7, scope: !11817)
!11879 = !DILocation(line: 533, column: 5, scope: !11833)
!11880 = !DILocation(line: 535, column: 3, scope: !11817)
!11881 = !DILocation(line: 535, column: 10, scope: !11817)
!11882 = !DILocation(line: 535, column: 17, scope: !11817)
!11883 = !DILocation(line: 536, column: 3, scope: !11817)
!11884 = !DILocation(line: 537, column: 1, scope: !11817)
!11885 = distinct !DISubprogram(name: "compute_bucket_size", scope: !844, file: !844, line: 544, type: !952, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !835, retainedNodes: !209)
!11886 = !DILocalVariable(name: "candidate", arg: 1, scope: !11885, file: !844, line: 544, type: !55)
!11887 = !DILocation(line: 544, column: 29, scope: !11885)
!11888 = !DILocalVariable(name: "tuning", arg: 2, scope: !11885, file: !844, line: 544, type: !859)
!11889 = !DILocation(line: 544, column: 59, scope: !11885)
!11890 = !DILocation(line: 546, column: 8, scope: !11891)
!11891 = distinct !DILexicalBlock(scope: !11885, file: !844, line: 546, column: 7)
!11892 = !DILocation(line: 546, column: 16, scope: !11891)
!11893 = !{!11837, !2743, i64 16}
!11894 = !DILocation(line: 546, column: 7, scope: !11885)
!11895 = !DILocalVariable(name: "new_candidate", scope: !11896, file: !844, line: 548, type: !865)
!11896 = distinct !DILexicalBlock(scope: !11891, file: !844, line: 547, column: 5)
!11897 = !DILocation(line: 548, column: 13, scope: !11896)
!11898 = !DILocation(line: 548, column: 29, scope: !11896)
!11899 = !DILocation(line: 548, column: 41, scope: !11896)
!11900 = !DILocation(line: 548, column: 49, scope: !11896)
!11901 = !DILocation(line: 548, column: 39, scope: !11896)
!11902 = !DILocation(line: 549, column: 23, scope: !11903)
!11903 = distinct !DILexicalBlock(scope: !11896, file: !844, line: 549, column: 11)
!11904 = !DILocation(line: 549, column: 20, scope: !11903)
!11905 = !DILocation(line: 549, column: 11, scope: !11896)
!11906 = !DILocation(line: 550, column: 9, scope: !11903)
!11907 = !DILocation(line: 551, column: 19, scope: !11896)
!11908 = !DILocation(line: 551, column: 17, scope: !11896)
!11909 = !DILocation(line: 552, column: 5, scope: !11896)
!11910 = !DILocation(line: 553, column: 27, scope: !11885)
!11911 = !DILocation(line: 553, column: 15, scope: !11885)
!11912 = !DILocation(line: 553, column: 13, scope: !11885)
!11913 = !DILocation(line: 554, column: 7, scope: !11914)
!11914 = distinct !DILexicalBlock(scope: !11885, file: !844, line: 554, column: 7)
!11915 = !DILocation(line: 554, column: 7, scope: !11885)
!11916 = !DILocation(line: 555, column: 5, scope: !11914)
!11917 = !DILocation(line: 556, column: 10, scope: !11885)
!11918 = !DILocation(line: 556, column: 3, scope: !11885)
!11919 = !DILocation(line: 557, column: 1, scope: !11885)
!11920 = distinct !DISubprogram(name: "next_prime", scope: !844, file: !844, line: 463, type: !954, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !835, retainedNodes: !209)
!11921 = !DILocalVariable(name: "candidate", arg: 1, scope: !11920, file: !844, line: 463, type: !55)
!11922 = !DILocation(line: 463, column: 20, scope: !11920)
!11923 = !DILocation(line: 466, column: 7, scope: !11924)
!11924 = distinct !DILexicalBlock(scope: !11920, file: !844, line: 466, column: 7)
!11925 = !DILocation(line: 466, column: 17, scope: !11924)
!11926 = !DILocation(line: 466, column: 7, scope: !11920)
!11927 = !DILocation(line: 467, column: 15, scope: !11924)
!11928 = !DILocation(line: 467, column: 5, scope: !11924)
!11929 = !DILocation(line: 470, column: 13, scope: !11920)
!11930 = !DILocation(line: 472, column: 3, scope: !11920)
!11931 = !DILocation(line: 472, column: 22, scope: !11920)
!11932 = !DILocation(line: 472, column: 19, scope: !11920)
!11933 = !DILocation(line: 472, column: 32, scope: !11920)
!11934 = !DILocation(line: 472, column: 46, scope: !11920)
!11935 = !DILocation(line: 472, column: 36, scope: !11920)
!11936 = !DILocation(line: 472, column: 35, scope: !11920)
!11937 = !DILocation(line: 0, scope: !11920)
!11938 = !DILocation(line: 473, column: 15, scope: !11920)
!11939 = distinct !{!11939, !11930, !11940}
!11940 = !DILocation(line: 473, column: 18, scope: !11920)
!11941 = !DILocation(line: 475, column: 10, scope: !11920)
!11942 = !DILocation(line: 475, column: 3, scope: !11920)
!11943 = distinct !DISubprogram(name: "is_prime", scope: !844, file: !844, line: 444, type: !956, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !835, retainedNodes: !209)
!11944 = !DILocalVariable(name: "candidate", arg: 1, scope: !11943, file: !844, line: 444, type: !55)
!11945 = !DILocation(line: 444, column: 18, scope: !11943)
!11946 = !DILocalVariable(name: "divisor", scope: !11943, file: !844, line: 446, type: !55)
!11947 = !DILocation(line: 446, column: 10, scope: !11943)
!11948 = !DILocalVariable(name: "square", scope: !11943, file: !844, line: 447, type: !55)
!11949 = !DILocation(line: 447, column: 10, scope: !11943)
!11950 = !DILocation(line: 447, column: 19, scope: !11943)
!11951 = !DILocation(line: 447, column: 29, scope: !11943)
!11952 = !DILocation(line: 447, column: 27, scope: !11943)
!11953 = !DILocation(line: 449, column: 3, scope: !11943)
!11954 = !DILocation(line: 449, column: 10, scope: !11943)
!11955 = !DILocation(line: 449, column: 19, scope: !11943)
!11956 = !DILocation(line: 449, column: 17, scope: !11943)
!11957 = !DILocation(line: 449, column: 29, scope: !11943)
!11958 = !DILocation(line: 449, column: 33, scope: !11943)
!11959 = !DILocation(line: 449, column: 45, scope: !11943)
!11960 = !DILocation(line: 449, column: 43, scope: !11943)
!11961 = !DILocation(line: 0, scope: !11943)
!11962 = !DILocation(line: 451, column: 14, scope: !11963)
!11963 = distinct !DILexicalBlock(scope: !11943, file: !844, line: 450, column: 5)
!11964 = !DILocation(line: 452, column: 21, scope: !11963)
!11965 = !DILocation(line: 452, column: 19, scope: !11963)
!11966 = !DILocation(line: 452, column: 14, scope: !11963)
!11967 = !DILocation(line: 453, column: 14, scope: !11963)
!11968 = distinct !{!11968, !11953, !11969}
!11969 = !DILocation(line: 454, column: 5, scope: !11943)
!11970 = !DILocation(line: 456, column: 11, scope: !11943)
!11971 = !DILocation(line: 456, column: 23, scope: !11943)
!11972 = !DILocation(line: 456, column: 21, scope: !11943)
!11973 = !DILocation(line: 456, column: 10, scope: !11943)
!11974 = !DILocation(line: 456, column: 3, scope: !11943)
!11975 = distinct !DISubprogram(name: "hash_clear", scope: !844, file: !844, line: 653, type: !939, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !835, retainedNodes: !209)
!11976 = !DILocalVariable(name: "table", arg: 1, scope: !11975, file: !844, line: 653, type: !938)
!11977 = !DILocation(line: 653, column: 25, scope: !11975)
!11978 = !DILocalVariable(name: "bucket", scope: !11975, file: !844, line: 655, type: !847)
!11979 = !DILocation(line: 655, column: 22, scope: !11975)
!11980 = !DILocation(line: 657, column: 17, scope: !11981)
!11981 = distinct !DILexicalBlock(scope: !11975, file: !844, line: 657, column: 3)
!11982 = !DILocation(line: 657, column: 24, scope: !11981)
!11983 = !DILocation(line: 657, column: 15, scope: !11981)
!11984 = !DILocation(line: 657, column: 8, scope: !11981)
!11985 = !DILocation(line: 657, column: 32, scope: !11986)
!11986 = distinct !DILexicalBlock(scope: !11981, file: !844, line: 657, column: 3)
!11987 = !DILocation(line: 657, column: 41, scope: !11986)
!11988 = !DILocation(line: 657, column: 48, scope: !11986)
!11989 = !DILocation(line: 657, column: 39, scope: !11986)
!11990 = !DILocation(line: 657, column: 3, scope: !11981)
!11991 = !DILocation(line: 659, column: 11, scope: !11992)
!11992 = distinct !DILexicalBlock(scope: !11993, file: !844, line: 659, column: 11)
!11993 = distinct !DILexicalBlock(scope: !11986, file: !844, line: 658, column: 5)
!11994 = !DILocation(line: 659, column: 19, scope: !11992)
!11995 = !DILocation(line: 659, column: 11, scope: !11993)
!11996 = !DILocalVariable(name: "cursor", scope: !11997, file: !844, line: 661, type: !847)
!11997 = distinct !DILexicalBlock(scope: !11992, file: !844, line: 660, column: 9)
!11998 = !DILocation(line: 661, column: 30, scope: !11997)
!11999 = !DILocalVariable(name: "next", scope: !11997, file: !844, line: 662, type: !847)
!12000 = !DILocation(line: 662, column: 30, scope: !11997)
!12001 = !DILocation(line: 665, column: 25, scope: !12002)
!12002 = distinct !DILexicalBlock(scope: !11997, file: !844, line: 665, column: 11)
!12003 = !DILocation(line: 665, column: 33, scope: !12002)
!12004 = !DILocation(line: 665, column: 23, scope: !12002)
!12005 = !DILocation(line: 665, column: 16, scope: !12002)
!12006 = !DILocation(line: 665, column: 39, scope: !12007)
!12007 = distinct !DILexicalBlock(scope: !12002, file: !844, line: 665, column: 11)
!12008 = !DILocation(line: 665, column: 11, scope: !12002)
!12009 = !DILocation(line: 667, column: 19, scope: !12010)
!12010 = distinct !DILexicalBlock(scope: !12011, file: !844, line: 667, column: 19)
!12011 = distinct !DILexicalBlock(scope: !12007, file: !844, line: 666, column: 13)
!12012 = !DILocation(line: 667, column: 26, scope: !12010)
!12013 = !DILocation(line: 667, column: 19, scope: !12011)
!12014 = !DILocation(line: 668, column: 17, scope: !12010)
!12015 = !DILocation(line: 668, column: 24, scope: !12010)
!12016 = !DILocation(line: 668, column: 36, scope: !12010)
!12017 = !DILocation(line: 668, column: 44, scope: !12010)
!12018 = !DILocation(line: 669, column: 15, scope: !12011)
!12019 = !DILocation(line: 669, column: 23, scope: !12011)
!12020 = !DILocation(line: 669, column: 28, scope: !12011)
!12021 = !DILocation(line: 671, column: 22, scope: !12011)
!12022 = !DILocation(line: 671, column: 30, scope: !12011)
!12023 = !DILocation(line: 671, column: 20, scope: !12011)
!12024 = !DILocation(line: 674, column: 30, scope: !12011)
!12025 = !DILocation(line: 674, column: 37, scope: !12011)
!12026 = !DILocation(line: 674, column: 15, scope: !12011)
!12027 = !DILocation(line: 674, column: 23, scope: !12011)
!12028 = !DILocation(line: 674, column: 28, scope: !12011)
!12029 = !DILocation(line: 675, column: 40, scope: !12011)
!12030 = !DILocation(line: 675, column: 15, scope: !12011)
!12031 = !DILocation(line: 675, column: 22, scope: !12011)
!12032 = !DILocation(line: 675, column: 38, scope: !12011)
!12033 = !DILocation(line: 676, column: 13, scope: !12011)
!12034 = !DILocation(line: 665, column: 56, scope: !12007)
!12035 = !DILocation(line: 665, column: 54, scope: !12007)
!12036 = !DILocation(line: 665, column: 11, scope: !12007)
!12037 = distinct !{!12037, !12008, !12038}
!12038 = !DILocation(line: 676, column: 13, scope: !12002)
!12039 = !DILocation(line: 679, column: 15, scope: !12040)
!12040 = distinct !DILexicalBlock(scope: !11997, file: !844, line: 679, column: 15)
!12041 = !DILocation(line: 679, column: 22, scope: !12040)
!12042 = !DILocation(line: 679, column: 15, scope: !11997)
!12043 = !DILocation(line: 680, column: 13, scope: !12040)
!12044 = !DILocation(line: 680, column: 20, scope: !12040)
!12045 = !DILocation(line: 680, column: 32, scope: !12040)
!12046 = !DILocation(line: 680, column: 40, scope: !12040)
!12047 = !DILocation(line: 681, column: 11, scope: !11997)
!12048 = !DILocation(line: 681, column: 19, scope: !11997)
!12049 = !DILocation(line: 681, column: 24, scope: !11997)
!12050 = !DILocation(line: 682, column: 11, scope: !11997)
!12051 = !DILocation(line: 682, column: 19, scope: !11997)
!12052 = !DILocation(line: 682, column: 24, scope: !11997)
!12053 = !DILocation(line: 683, column: 9, scope: !11997)
!12054 = !DILocation(line: 684, column: 5, scope: !11993)
!12055 = !DILocation(line: 657, column: 68, scope: !11986)
!12056 = !DILocation(line: 657, column: 3, scope: !11986)
!12057 = distinct !{!12057, !11990, !12058}
!12058 = !DILocation(line: 684, column: 5, scope: !11981)
!12059 = !DILocation(line: 686, column: 3, scope: !11975)
!12060 = !DILocation(line: 686, column: 10, scope: !11975)
!12061 = !DILocation(line: 686, column: 25, scope: !11975)
!12062 = !DILocation(line: 687, column: 3, scope: !11975)
!12063 = !DILocation(line: 687, column: 10, scope: !11975)
!12064 = !DILocation(line: 687, column: 20, scope: !11975)
!12065 = !DILocation(line: 688, column: 1, scope: !11975)
!12066 = distinct !DISubprogram(name: "hash_free", scope: !844, file: !844, line: 696, type: !939, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !835, retainedNodes: !209)
!12067 = !DILocalVariable(name: "table", arg: 1, scope: !12066, file: !844, line: 696, type: !938)
!12068 = !DILocation(line: 696, column: 24, scope: !12066)
!12069 = !DILocalVariable(name: "bucket", scope: !12066, file: !844, line: 698, type: !847)
!12070 = !DILocation(line: 698, column: 22, scope: !12066)
!12071 = !DILocalVariable(name: "cursor", scope: !12066, file: !844, line: 699, type: !847)
!12072 = !DILocation(line: 699, column: 22, scope: !12066)
!12073 = !DILocalVariable(name: "next", scope: !12066, file: !844, line: 700, type: !847)
!12074 = !DILocation(line: 700, column: 22, scope: !12066)
!12075 = !DILocation(line: 703, column: 7, scope: !12076)
!12076 = distinct !DILexicalBlock(scope: !12066, file: !844, line: 703, column: 7)
!12077 = !DILocation(line: 703, column: 14, scope: !12076)
!12078 = !DILocation(line: 703, column: 25, scope: !12076)
!12079 = !DILocation(line: 703, column: 28, scope: !12076)
!12080 = !DILocation(line: 703, column: 35, scope: !12076)
!12081 = !DILocation(line: 703, column: 7, scope: !12066)
!12082 = !DILocation(line: 705, column: 21, scope: !12083)
!12083 = distinct !DILexicalBlock(scope: !12084, file: !844, line: 705, column: 7)
!12084 = distinct !DILexicalBlock(scope: !12076, file: !844, line: 704, column: 5)
!12085 = !DILocation(line: 705, column: 28, scope: !12083)
!12086 = !DILocation(line: 705, column: 19, scope: !12083)
!12087 = !DILocation(line: 705, column: 12, scope: !12083)
!12088 = !DILocation(line: 705, column: 36, scope: !12089)
!12089 = distinct !DILexicalBlock(scope: !12083, file: !844, line: 705, column: 7)
!12090 = !DILocation(line: 705, column: 45, scope: !12089)
!12091 = !DILocation(line: 705, column: 52, scope: !12089)
!12092 = !DILocation(line: 705, column: 43, scope: !12089)
!12093 = !DILocation(line: 705, column: 7, scope: !12083)
!12094 = !DILocation(line: 707, column: 15, scope: !12095)
!12095 = distinct !DILexicalBlock(scope: !12096, file: !844, line: 707, column: 15)
!12096 = distinct !DILexicalBlock(scope: !12089, file: !844, line: 706, column: 9)
!12097 = !DILocation(line: 707, column: 23, scope: !12095)
!12098 = !DILocation(line: 707, column: 15, scope: !12096)
!12099 = !DILocation(line: 709, column: 29, scope: !12100)
!12100 = distinct !DILexicalBlock(scope: !12101, file: !844, line: 709, column: 15)
!12101 = distinct !DILexicalBlock(scope: !12095, file: !844, line: 708, column: 13)
!12102 = !DILocation(line: 709, column: 27, scope: !12100)
!12103 = !DILocation(line: 709, column: 20, scope: !12100)
!12104 = !DILocation(line: 709, column: 37, scope: !12105)
!12105 = distinct !DILexicalBlock(scope: !12100, file: !844, line: 709, column: 15)
!12106 = !DILocation(line: 709, column: 15, scope: !12100)
!12107 = !DILocation(line: 710, column: 17, scope: !12105)
!12108 = !DILocation(line: 710, column: 24, scope: !12105)
!12109 = !DILocation(line: 710, column: 36, scope: !12105)
!12110 = !DILocation(line: 710, column: 44, scope: !12105)
!12111 = !DILocation(line: 709, column: 54, scope: !12105)
!12112 = !DILocation(line: 709, column: 62, scope: !12105)
!12113 = !DILocation(line: 709, column: 52, scope: !12105)
!12114 = !DILocation(line: 709, column: 15, scope: !12105)
!12115 = distinct !{!12115, !12106, !12116}
!12116 = !DILocation(line: 710, column: 48, scope: !12100)
!12117 = !DILocation(line: 711, column: 13, scope: !12101)
!12118 = !DILocation(line: 712, column: 9, scope: !12096)
!12119 = !DILocation(line: 705, column: 72, scope: !12089)
!12120 = !DILocation(line: 705, column: 7, scope: !12089)
!12121 = distinct !{!12121, !12093, !12122}
!12122 = !DILocation(line: 712, column: 9, scope: !12083)
!12123 = !DILocation(line: 713, column: 5, scope: !12084)
!12124 = !DILocation(line: 722, column: 17, scope: !12125)
!12125 = distinct !DILexicalBlock(scope: !12066, file: !844, line: 722, column: 3)
!12126 = !DILocation(line: 722, column: 24, scope: !12125)
!12127 = !DILocation(line: 722, column: 15, scope: !12125)
!12128 = !DILocation(line: 722, column: 8, scope: !12125)
!12129 = !DILocation(line: 722, column: 32, scope: !12130)
!12130 = distinct !DILexicalBlock(scope: !12125, file: !844, line: 722, column: 3)
!12131 = !DILocation(line: 722, column: 41, scope: !12130)
!12132 = !DILocation(line: 722, column: 48, scope: !12130)
!12133 = !DILocation(line: 722, column: 39, scope: !12130)
!12134 = !DILocation(line: 722, column: 3, scope: !12125)
!12135 = !DILocation(line: 724, column: 21, scope: !12136)
!12136 = distinct !DILexicalBlock(scope: !12137, file: !844, line: 724, column: 7)
!12137 = distinct !DILexicalBlock(scope: !12130, file: !844, line: 723, column: 5)
!12138 = !DILocation(line: 724, column: 29, scope: !12136)
!12139 = !DILocation(line: 724, column: 19, scope: !12136)
!12140 = !DILocation(line: 724, column: 12, scope: !12136)
!12141 = !DILocation(line: 724, column: 35, scope: !12142)
!12142 = distinct !DILexicalBlock(scope: !12136, file: !844, line: 724, column: 7)
!12143 = !DILocation(line: 724, column: 7, scope: !12136)
!12144 = !DILocation(line: 726, column: 18, scope: !12145)
!12145 = distinct !DILexicalBlock(scope: !12142, file: !844, line: 725, column: 9)
!12146 = !DILocation(line: 726, column: 26, scope: !12145)
!12147 = !DILocation(line: 726, column: 16, scope: !12145)
!12148 = !DILocation(line: 727, column: 17, scope: !12145)
!12149 = !DILocation(line: 727, column: 11, scope: !12145)
!12150 = !DILocation(line: 728, column: 9, scope: !12145)
!12151 = !DILocation(line: 724, column: 52, scope: !12142)
!12152 = !DILocation(line: 724, column: 50, scope: !12142)
!12153 = !DILocation(line: 724, column: 7, scope: !12142)
!12154 = distinct !{!12154, !12143, !12155}
!12155 = !DILocation(line: 728, column: 9, scope: !12136)
!12156 = !DILocation(line: 729, column: 5, scope: !12137)
!12157 = !DILocation(line: 722, column: 68, scope: !12130)
!12158 = !DILocation(line: 722, column: 3, scope: !12130)
!12159 = distinct !{!12159, !12134, !12160}
!12160 = !DILocation(line: 729, column: 5, scope: !12125)
!12161 = !DILocation(line: 732, column: 17, scope: !12162)
!12162 = distinct !DILexicalBlock(scope: !12066, file: !844, line: 732, column: 3)
!12163 = !DILocation(line: 732, column: 24, scope: !12162)
!12164 = !DILocation(line: 732, column: 15, scope: !12162)
!12165 = !DILocation(line: 732, column: 8, scope: !12162)
!12166 = !DILocation(line: 732, column: 41, scope: !12167)
!12167 = distinct !DILexicalBlock(scope: !12162, file: !844, line: 732, column: 3)
!12168 = !DILocation(line: 732, column: 3, scope: !12162)
!12169 = !DILocation(line: 734, column: 14, scope: !12170)
!12170 = distinct !DILexicalBlock(scope: !12167, file: !844, line: 733, column: 5)
!12171 = !DILocation(line: 734, column: 22, scope: !12170)
!12172 = !DILocation(line: 734, column: 12, scope: !12170)
!12173 = !DILocation(line: 735, column: 13, scope: !12170)
!12174 = !DILocation(line: 735, column: 7, scope: !12170)
!12175 = !DILocation(line: 736, column: 5, scope: !12170)
!12176 = !DILocation(line: 732, column: 58, scope: !12167)
!12177 = !DILocation(line: 732, column: 56, scope: !12167)
!12178 = !DILocation(line: 732, column: 3, scope: !12167)
!12179 = distinct !{!12179, !12168, !12180}
!12180 = !DILocation(line: 736, column: 5, scope: !12162)
!12181 = !DILocation(line: 741, column: 9, scope: !12066)
!12182 = !DILocation(line: 741, column: 16, scope: !12066)
!12183 = !DILocation(line: 741, column: 3, scope: !12066)
!12184 = !DILocation(line: 742, column: 9, scope: !12066)
!12185 = !DILocation(line: 742, column: 3, scope: !12066)
!12186 = !DILocation(line: 743, column: 1, scope: !12066)
!12187 = distinct !DISubprogram(name: "hash_rehash", scope: !844, file: !844, line: 943, type: !941, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !835, retainedNodes: !209)
!12188 = !DILocalVariable(name: "table", arg: 1, scope: !12187, file: !844, line: 943, type: !938)
!12189 = !DILocation(line: 943, column: 26, scope: !12187)
!12190 = !DILocalVariable(name: "candidate", arg: 2, scope: !12187, file: !844, line: 943, type: !55)
!12191 = !DILocation(line: 943, column: 40, scope: !12187)
!12192 = !DILocalVariable(name: "storage", scope: !12187, file: !844, line: 945, type: !842)
!12193 = !DILocation(line: 945, column: 14, scope: !12187)
!12194 = !DILocalVariable(name: "new_table", scope: !12187, file: !844, line: 946, type: !938)
!12195 = !DILocation(line: 946, column: 15, scope: !12187)
!12196 = !DILocalVariable(name: "new_size", scope: !12187, file: !844, line: 947, type: !55)
!12197 = !DILocation(line: 947, column: 10, scope: !12187)
!12198 = !DILocation(line: 947, column: 42, scope: !12187)
!12199 = !DILocation(line: 947, column: 53, scope: !12187)
!12200 = !DILocation(line: 947, column: 60, scope: !12187)
!12201 = !DILocation(line: 947, column: 21, scope: !12187)
!12202 = !DILocation(line: 949, column: 8, scope: !12203)
!12203 = distinct !DILexicalBlock(scope: !12187, file: !844, line: 949, column: 7)
!12204 = !DILocation(line: 949, column: 7, scope: !12187)
!12205 = !DILocation(line: 950, column: 5, scope: !12203)
!12206 = !DILocation(line: 951, column: 7, scope: !12207)
!12207 = distinct !DILexicalBlock(scope: !12187, file: !844, line: 951, column: 7)
!12208 = !DILocation(line: 951, column: 19, scope: !12207)
!12209 = !DILocation(line: 951, column: 26, scope: !12207)
!12210 = !DILocation(line: 951, column: 16, scope: !12207)
!12211 = !DILocation(line: 951, column: 7, scope: !12187)
!12212 = !DILocation(line: 952, column: 5, scope: !12207)
!12213 = !DILocation(line: 953, column: 13, scope: !12187)
!12214 = !DILocation(line: 954, column: 31, scope: !12187)
!12215 = !DILocation(line: 954, column: 23, scope: !12187)
!12216 = !DILocation(line: 954, column: 3, scope: !12187)
!12217 = !DILocation(line: 954, column: 14, scope: !12187)
!12218 = !DILocation(line: 954, column: 21, scope: !12187)
!12219 = !DILocation(line: 955, column: 7, scope: !12220)
!12220 = distinct !DILexicalBlock(scope: !12187, file: !844, line: 955, column: 7)
!12221 = !DILocation(line: 955, column: 18, scope: !12220)
!12222 = !DILocation(line: 955, column: 25, scope: !12220)
!12223 = !DILocation(line: 955, column: 7, scope: !12187)
!12224 = !DILocation(line: 956, column: 5, scope: !12220)
!12225 = !DILocation(line: 957, column: 26, scope: !12187)
!12226 = !DILocation(line: 957, column: 3, scope: !12187)
!12227 = !DILocation(line: 957, column: 14, scope: !12187)
!12228 = !DILocation(line: 957, column: 24, scope: !12187)
!12229 = !DILocation(line: 958, column: 29, scope: !12187)
!12230 = !DILocation(line: 958, column: 40, scope: !12187)
!12231 = !DILocation(line: 958, column: 49, scope: !12187)
!12232 = !DILocation(line: 958, column: 47, scope: !12187)
!12233 = !DILocation(line: 958, column: 3, scope: !12187)
!12234 = !DILocation(line: 958, column: 14, scope: !12187)
!12235 = !DILocation(line: 958, column: 27, scope: !12187)
!12236 = !DILocation(line: 959, column: 3, scope: !12187)
!12237 = !DILocation(line: 959, column: 14, scope: !12187)
!12238 = !DILocation(line: 959, column: 29, scope: !12187)
!12239 = !DILocation(line: 960, column: 3, scope: !12187)
!12240 = !DILocation(line: 960, column: 14, scope: !12187)
!12241 = !DILocation(line: 960, column: 24, scope: !12187)
!12242 = !DILocation(line: 961, column: 23, scope: !12187)
!12243 = !DILocation(line: 961, column: 30, scope: !12187)
!12244 = !DILocation(line: 961, column: 3, scope: !12187)
!12245 = !DILocation(line: 961, column: 14, scope: !12187)
!12246 = !DILocation(line: 961, column: 21, scope: !12187)
!12247 = !DILocation(line: 962, column: 23, scope: !12187)
!12248 = !DILocation(line: 962, column: 30, scope: !12187)
!12249 = !DILocation(line: 962, column: 3, scope: !12187)
!12250 = !DILocation(line: 962, column: 14, scope: !12187)
!12251 = !DILocation(line: 962, column: 21, scope: !12187)
!12252 = !DILocation(line: 963, column: 27, scope: !12187)
!12253 = !DILocation(line: 963, column: 34, scope: !12187)
!12254 = !DILocation(line: 963, column: 3, scope: !12187)
!12255 = !DILocation(line: 963, column: 14, scope: !12187)
!12256 = !DILocation(line: 963, column: 25, scope: !12187)
!12257 = !DILocation(line: 964, column: 27, scope: !12187)
!12258 = !DILocation(line: 964, column: 34, scope: !12187)
!12259 = !DILocation(line: 964, column: 3, scope: !12187)
!12260 = !DILocation(line: 964, column: 14, scope: !12187)
!12261 = !DILocation(line: 964, column: 25, scope: !12187)
!12262 = !DILocation(line: 984, column: 32, scope: !12187)
!12263 = !DILocation(line: 984, column: 39, scope: !12187)
!12264 = !DILocation(line: 984, column: 3, scope: !12187)
!12265 = !DILocation(line: 984, column: 14, scope: !12187)
!12266 = !DILocation(line: 984, column: 30, scope: !12187)
!12267 = !DILocation(line: 986, column: 25, scope: !12268)
!12268 = distinct !DILexicalBlock(scope: !12187, file: !844, line: 986, column: 7)
!12269 = !DILocation(line: 986, column: 36, scope: !12268)
!12270 = !DILocation(line: 986, column: 7, scope: !12268)
!12271 = !DILocation(line: 986, column: 7, scope: !12187)
!12272 = !DILocation(line: 989, column: 13, scope: !12273)
!12273 = distinct !DILexicalBlock(scope: !12268, file: !844, line: 987, column: 5)
!12274 = !DILocation(line: 989, column: 20, scope: !12273)
!12275 = !DILocation(line: 989, column: 7, scope: !12273)
!12276 = !DILocation(line: 990, column: 23, scope: !12273)
!12277 = !DILocation(line: 990, column: 34, scope: !12273)
!12278 = !DILocation(line: 990, column: 7, scope: !12273)
!12279 = !DILocation(line: 990, column: 14, scope: !12273)
!12280 = !DILocation(line: 990, column: 21, scope: !12273)
!12281 = !DILocation(line: 991, column: 29, scope: !12273)
!12282 = !DILocation(line: 991, column: 40, scope: !12273)
!12283 = !DILocation(line: 991, column: 7, scope: !12273)
!12284 = !DILocation(line: 991, column: 14, scope: !12273)
!12285 = !DILocation(line: 991, column: 27, scope: !12273)
!12286 = !DILocation(line: 992, column: 26, scope: !12273)
!12287 = !DILocation(line: 992, column: 37, scope: !12273)
!12288 = !DILocation(line: 992, column: 7, scope: !12273)
!12289 = !DILocation(line: 992, column: 14, scope: !12273)
!12290 = !DILocation(line: 992, column: 24, scope: !12273)
!12291 = !DILocation(line: 993, column: 31, scope: !12273)
!12292 = !DILocation(line: 993, column: 42, scope: !12273)
!12293 = !DILocation(line: 993, column: 7, scope: !12273)
!12294 = !DILocation(line: 993, column: 14, scope: !12273)
!12295 = !DILocation(line: 993, column: 29, scope: !12273)
!12296 = !DILocation(line: 994, column: 32, scope: !12273)
!12297 = !DILocation(line: 994, column: 43, scope: !12273)
!12298 = !DILocation(line: 994, column: 7, scope: !12273)
!12299 = !DILocation(line: 994, column: 14, scope: !12273)
!12300 = !DILocation(line: 994, column: 30, scope: !12273)
!12301 = !DILocation(line: 996, column: 7, scope: !12273)
!12302 = !DILocation(line: 1012, column: 28, scope: !12187)
!12303 = !DILocation(line: 1012, column: 39, scope: !12187)
!12304 = !DILocation(line: 1012, column: 3, scope: !12187)
!12305 = !DILocation(line: 1012, column: 10, scope: !12187)
!12306 = !DILocation(line: 1012, column: 26, scope: !12187)
!12307 = !DILocation(line: 1013, column: 28, scope: !12308)
!12308 = distinct !DILexicalBlock(scope: !12187, file: !844, line: 1013, column: 7)
!12309 = !DILocation(line: 1013, column: 35, scope: !12308)
!12310 = !DILocation(line: 1013, column: 10, scope: !12308)
!12311 = !DILocation(line: 1014, column: 10, scope: !12308)
!12312 = !DILocation(line: 1014, column: 31, scope: !12308)
!12313 = !DILocation(line: 1014, column: 38, scope: !12308)
!12314 = !DILocation(line: 1014, column: 13, scope: !12308)
!12315 = !DILocation(line: 1013, column: 7, scope: !12187)
!12316 = !DILocation(line: 1015, column: 5, scope: !12308)
!12317 = !DILocation(line: 1017, column: 9, scope: !12187)
!12318 = !DILocation(line: 1017, column: 20, scope: !12187)
!12319 = !DILocation(line: 1017, column: 3, scope: !12187)
!12320 = !DILocation(line: 1018, column: 3, scope: !12187)
!12321 = !DILocation(line: 1019, column: 1, scope: !12187)
!12322 = distinct !DISubprogram(name: "transfer_entries", scope: !844, file: !844, line: 860, type: !958, scopeLine: 861, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !835, retainedNodes: !209)
!12323 = !DILocalVariable(name: "dst", arg: 1, scope: !12322, file: !844, line: 860, type: !938)
!12324 = !DILocation(line: 860, column: 31, scope: !12322)
!12325 = !DILocalVariable(name: "src", arg: 2, scope: !12322, file: !844, line: 860, type: !938)
!12326 = !DILocation(line: 860, column: 48, scope: !12322)
!12327 = !DILocalVariable(name: "safe", arg: 3, scope: !12322, file: !844, line: 860, type: !142)
!12328 = !DILocation(line: 860, column: 58, scope: !12322)
!12329 = !DILocalVariable(name: "bucket", scope: !12322, file: !844, line: 862, type: !847)
!12330 = !DILocation(line: 862, column: 22, scope: !12322)
!12331 = !DILocalVariable(name: "cursor", scope: !12322, file: !844, line: 863, type: !847)
!12332 = !DILocation(line: 863, column: 22, scope: !12322)
!12333 = !DILocalVariable(name: "next", scope: !12322, file: !844, line: 864, type: !847)
!12334 = !DILocation(line: 864, column: 22, scope: !12322)
!12335 = !DILocation(line: 865, column: 17, scope: !12336)
!12336 = distinct !DILexicalBlock(scope: !12322, file: !844, line: 865, column: 3)
!12337 = !DILocation(line: 865, column: 22, scope: !12336)
!12338 = !DILocation(line: 865, column: 15, scope: !12336)
!12339 = !DILocation(line: 865, column: 8, scope: !12336)
!12340 = !DILocation(line: 865, column: 30, scope: !12341)
!12341 = distinct !DILexicalBlock(scope: !12336, file: !844, line: 865, column: 3)
!12342 = !DILocation(line: 865, column: 39, scope: !12341)
!12343 = !DILocation(line: 865, column: 44, scope: !12341)
!12344 = !DILocation(line: 865, column: 37, scope: !12341)
!12345 = !DILocation(line: 865, column: 3, scope: !12336)
!12346 = !DILocation(line: 866, column: 9, scope: !12347)
!12347 = distinct !DILexicalBlock(scope: !12341, file: !844, line: 866, column: 9)
!12348 = !DILocation(line: 866, column: 17, scope: !12347)
!12349 = !DILocation(line: 866, column: 9, scope: !12341)
!12350 = !DILocalVariable(name: "data", scope: !12351, file: !844, line: 868, type: !53)
!12351 = distinct !DILexicalBlock(scope: !12347, file: !844, line: 867, column: 7)
!12352 = !DILocation(line: 868, column: 15, scope: !12351)
!12353 = !DILocalVariable(name: "new_bucket", scope: !12351, file: !844, line: 869, type: !847)
!12354 = !DILocation(line: 869, column: 28, scope: !12351)
!12355 = !DILocation(line: 877, column: 23, scope: !12356)
!12356 = distinct !DILexicalBlock(scope: !12351, file: !844, line: 877, column: 9)
!12357 = !DILocation(line: 877, column: 31, scope: !12356)
!12358 = !DILocation(line: 877, column: 21, scope: !12356)
!12359 = !DILocation(line: 877, column: 14, scope: !12356)
!12360 = !DILocation(line: 877, column: 37, scope: !12361)
!12361 = distinct !DILexicalBlock(scope: !12356, file: !844, line: 877, column: 9)
!12362 = !DILocation(line: 877, column: 9, scope: !12356)
!12363 = !DILocation(line: 879, column: 20, scope: !12364)
!12364 = distinct !DILexicalBlock(scope: !12361, file: !844, line: 878, column: 11)
!12365 = !DILocation(line: 879, column: 28, scope: !12364)
!12366 = !DILocation(line: 879, column: 18, scope: !12364)
!12367 = !DILocation(line: 880, column: 39, scope: !12364)
!12368 = !DILocation(line: 880, column: 44, scope: !12364)
!12369 = !DILocation(line: 880, column: 26, scope: !12364)
!12370 = !DILocation(line: 880, column: 24, scope: !12364)
!12371 = !DILocation(line: 882, column: 20, scope: !12364)
!12372 = !DILocation(line: 882, column: 28, scope: !12364)
!12373 = !DILocation(line: 882, column: 18, scope: !12364)
!12374 = !DILocation(line: 884, column: 17, scope: !12375)
!12375 = distinct !DILexicalBlock(scope: !12364, file: !844, line: 884, column: 17)
!12376 = !DILocation(line: 884, column: 29, scope: !12375)
!12377 = !DILocation(line: 884, column: 17, scope: !12364)
!12378 = !DILocation(line: 888, column: 32, scope: !12379)
!12379 = distinct !DILexicalBlock(scope: !12375, file: !844, line: 885, column: 15)
!12380 = !DILocation(line: 888, column: 44, scope: !12379)
!12381 = !DILocation(line: 888, column: 17, scope: !12379)
!12382 = !DILocation(line: 888, column: 25, scope: !12379)
!12383 = !DILocation(line: 888, column: 30, scope: !12379)
!12384 = !DILocation(line: 889, column: 36, scope: !12379)
!12385 = !DILocation(line: 889, column: 17, scope: !12379)
!12386 = !DILocation(line: 889, column: 29, scope: !12379)
!12387 = !DILocation(line: 889, column: 34, scope: !12379)
!12388 = !DILocation(line: 890, column: 15, scope: !12379)
!12389 = !DILocation(line: 895, column: 36, scope: !12390)
!12390 = distinct !DILexicalBlock(scope: !12375, file: !844, line: 892, column: 15)
!12391 = !DILocation(line: 895, column: 17, scope: !12390)
!12392 = !DILocation(line: 895, column: 29, scope: !12390)
!12393 = !DILocation(line: 895, column: 34, scope: !12390)
!12394 = !DILocation(line: 896, column: 17, scope: !12390)
!12395 = !DILocation(line: 896, column: 22, scope: !12390)
!12396 = !DILocation(line: 896, column: 36, scope: !12390)
!12397 = !DILocation(line: 897, column: 29, scope: !12390)
!12398 = !DILocation(line: 897, column: 34, scope: !12390)
!12399 = !DILocation(line: 897, column: 17, scope: !12390)
!12400 = !DILocation(line: 899, column: 11, scope: !12364)
!12401 = !DILocation(line: 877, column: 54, scope: !12361)
!12402 = !DILocation(line: 877, column: 52, scope: !12361)
!12403 = !DILocation(line: 877, column: 9, scope: !12361)
!12404 = distinct !{!12404, !12362, !12405}
!12405 = !DILocation(line: 899, column: 11, scope: !12356)
!12406 = !DILocation(line: 903, column: 16, scope: !12351)
!12407 = !DILocation(line: 903, column: 24, scope: !12351)
!12408 = !DILocation(line: 903, column: 14, scope: !12351)
!12409 = !DILocation(line: 904, column: 9, scope: !12351)
!12410 = !DILocation(line: 904, column: 17, scope: !12351)
!12411 = !DILocation(line: 904, column: 22, scope: !12351)
!12412 = !DILocation(line: 905, column: 13, scope: !12413)
!12413 = distinct !DILexicalBlock(scope: !12351, file: !844, line: 905, column: 13)
!12414 = !DILocation(line: 905, column: 13, scope: !12351)
!12415 = !DILocation(line: 906, column: 11, scope: !12413)
!12416 = !DILocation(line: 907, column: 35, scope: !12351)
!12417 = !DILocation(line: 907, column: 40, scope: !12351)
!12418 = !DILocation(line: 907, column: 22, scope: !12351)
!12419 = !DILocation(line: 907, column: 20, scope: !12351)
!12420 = !DILocation(line: 909, column: 13, scope: !12421)
!12421 = distinct !DILexicalBlock(scope: !12351, file: !844, line: 909, column: 13)
!12422 = !DILocation(line: 909, column: 25, scope: !12421)
!12423 = !DILocation(line: 909, column: 13, scope: !12351)
!12424 = !DILocalVariable(name: "new_entry", scope: !12425, file: !844, line: 913, type: !847)
!12425 = distinct !DILexicalBlock(scope: !12421, file: !844, line: 910, column: 11)
!12426 = !DILocation(line: 913, column: 32, scope: !12425)
!12427 = !DILocation(line: 913, column: 60, scope: !12425)
!12428 = !DILocation(line: 913, column: 44, scope: !12425)
!12429 = !DILocation(line: 915, column: 17, scope: !12430)
!12430 = distinct !DILexicalBlock(scope: !12425, file: !844, line: 915, column: 17)
!12431 = !DILocation(line: 915, column: 27, scope: !12430)
!12432 = !DILocation(line: 915, column: 17, scope: !12425)
!12433 = !DILocation(line: 916, column: 15, scope: !12430)
!12434 = !DILocation(line: 918, column: 31, scope: !12425)
!12435 = !DILocation(line: 918, column: 13, scope: !12425)
!12436 = !DILocation(line: 918, column: 24, scope: !12425)
!12437 = !DILocation(line: 918, column: 29, scope: !12425)
!12438 = !DILocation(line: 919, column: 31, scope: !12425)
!12439 = !DILocation(line: 919, column: 43, scope: !12425)
!12440 = !DILocation(line: 919, column: 13, scope: !12425)
!12441 = !DILocation(line: 919, column: 24, scope: !12425)
!12442 = !DILocation(line: 919, column: 29, scope: !12425)
!12443 = !DILocation(line: 920, column: 32, scope: !12425)
!12444 = !DILocation(line: 920, column: 13, scope: !12425)
!12445 = !DILocation(line: 920, column: 25, scope: !12425)
!12446 = !DILocation(line: 920, column: 30, scope: !12425)
!12447 = !DILocation(line: 921, column: 11, scope: !12425)
!12448 = !DILocation(line: 925, column: 32, scope: !12449)
!12449 = distinct !DILexicalBlock(scope: !12421, file: !844, line: 923, column: 11)
!12450 = !DILocation(line: 925, column: 13, scope: !12449)
!12451 = !DILocation(line: 925, column: 25, scope: !12449)
!12452 = !DILocation(line: 925, column: 30, scope: !12449)
!12453 = !DILocation(line: 926, column: 13, scope: !12449)
!12454 = !DILocation(line: 926, column: 18, scope: !12449)
!12455 = !DILocation(line: 926, column: 32, scope: !12449)
!12456 = !DILocation(line: 928, column: 9, scope: !12351)
!12457 = !DILocation(line: 928, column: 17, scope: !12351)
!12458 = !DILocation(line: 928, column: 22, scope: !12351)
!12459 = !DILocation(line: 929, column: 9, scope: !12351)
!12460 = !DILocation(line: 929, column: 14, scope: !12351)
!12461 = !DILocation(line: 929, column: 28, scope: !12351)
!12462 = !DILocation(line: 930, column: 7, scope: !12351)
!12463 = !DILocation(line: 865, column: 64, scope: !12341)
!12464 = !DILocation(line: 865, column: 3, scope: !12341)
!12465 = distinct !{!12465, !12345, !12466}
!12466 = !DILocation(line: 930, column: 7, scope: !12336)
!12467 = !DILocation(line: 931, column: 3, scope: !12322)
!12468 = !DILocation(line: 932, column: 1, scope: !12322)
!12469 = distinct !DISubprogram(name: "free_entry", scope: !844, file: !844, line: 776, type: !960, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !835, retainedNodes: !209)
!12470 = !DILocalVariable(name: "table", arg: 1, scope: !12469, file: !844, line: 776, type: !938)
!12471 = !DILocation(line: 776, column: 25, scope: !12469)
!12472 = !DILocalVariable(name: "entry", arg: 2, scope: !12469, file: !844, line: 776, type: !847)
!12473 = !DILocation(line: 776, column: 51, scope: !12469)
!12474 = !DILocation(line: 778, column: 3, scope: !12469)
!12475 = !DILocation(line: 778, column: 10, scope: !12469)
!12476 = !DILocation(line: 778, column: 15, scope: !12469)
!12477 = !DILocation(line: 779, column: 17, scope: !12469)
!12478 = !DILocation(line: 779, column: 24, scope: !12469)
!12479 = !DILocation(line: 779, column: 3, scope: !12469)
!12480 = !DILocation(line: 779, column: 10, scope: !12469)
!12481 = !DILocation(line: 779, column: 15, scope: !12469)
!12482 = !DILocation(line: 780, column: 28, scope: !12469)
!12483 = !DILocation(line: 780, column: 3, scope: !12469)
!12484 = !DILocation(line: 780, column: 10, scope: !12469)
!12485 = !DILocation(line: 780, column: 26, scope: !12469)
!12486 = !DILocation(line: 781, column: 1, scope: !12469)
!12487 = distinct !DISubprogram(name: "allocate_entry", scope: !844, file: !844, line: 751, type: !965, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !835, retainedNodes: !209)
!12488 = !DILocalVariable(name: "table", arg: 1, scope: !12487, file: !844, line: 751, type: !938)
!12489 = !DILocation(line: 751, column: 29, scope: !12487)
!12490 = !DILocalVariable(name: "new", scope: !12487, file: !844, line: 753, type: !847)
!12491 = !DILocation(line: 753, column: 22, scope: !12487)
!12492 = !DILocation(line: 755, column: 7, scope: !12493)
!12493 = distinct !DILexicalBlock(scope: !12487, file: !844, line: 755, column: 7)
!12494 = !DILocation(line: 755, column: 14, scope: !12493)
!12495 = !DILocation(line: 755, column: 7, scope: !12487)
!12496 = !DILocation(line: 757, column: 13, scope: !12497)
!12497 = distinct !DILexicalBlock(scope: !12493, file: !844, line: 756, column: 5)
!12498 = !DILocation(line: 757, column: 20, scope: !12497)
!12499 = !DILocation(line: 757, column: 11, scope: !12497)
!12500 = !DILocation(line: 758, column: 32, scope: !12497)
!12501 = !DILocation(line: 758, column: 37, scope: !12497)
!12502 = !DILocation(line: 758, column: 7, scope: !12497)
!12503 = !DILocation(line: 758, column: 14, scope: !12497)
!12504 = !DILocation(line: 758, column: 30, scope: !12497)
!12505 = !DILocation(line: 759, column: 5, scope: !12497)
!12506 = !DILocation(line: 765, column: 13, scope: !12507)
!12507 = distinct !DILexicalBlock(scope: !12493, file: !844, line: 761, column: 5)
!12508 = !DILocation(line: 765, column: 11, scope: !12507)
!12509 = !DILocation(line: 769, column: 10, scope: !12487)
!12510 = !DILocation(line: 769, column: 3, scope: !12487)
!12511 = distinct !DISubprogram(name: "hash_insert_if_absent", scope: !844, file: !844, line: 1038, type: !943, scopeLine: 1040, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !835, retainedNodes: !209)
!12512 = !DILocalVariable(name: "table", arg: 1, scope: !12511, file: !844, line: 1038, type: !938)
!12513 = !DILocation(line: 1038, column: 36, scope: !12511)
!12514 = !DILocalVariable(name: "entry", arg: 2, scope: !12511, file: !844, line: 1038, type: !515)
!12515 = !DILocation(line: 1038, column: 55, scope: !12511)
!12516 = !DILocalVariable(name: "matched_ent", arg: 3, scope: !12511, file: !844, line: 1039, type: !945)
!12517 = !DILocation(line: 1039, column: 37, scope: !12511)
!12518 = !DILocalVariable(name: "data", scope: !12511, file: !844, line: 1041, type: !53)
!12519 = !DILocation(line: 1041, column: 9, scope: !12511)
!12520 = !DILocalVariable(name: "bucket", scope: !12511, file: !844, line: 1042, type: !847)
!12521 = !DILocation(line: 1042, column: 22, scope: !12511)
!12522 = !DILocation(line: 1047, column: 9, scope: !12523)
!12523 = distinct !DILexicalBlock(scope: !12511, file: !844, line: 1047, column: 7)
!12524 = !DILocation(line: 1047, column: 7, scope: !12511)
!12525 = !DILocation(line: 1048, column: 5, scope: !12523)
!12526 = !DILocation(line: 1051, column: 32, scope: !12527)
!12527 = distinct !DILexicalBlock(scope: !12511, file: !844, line: 1051, column: 7)
!12528 = !DILocation(line: 1051, column: 39, scope: !12527)
!12529 = !DILocation(line: 1051, column: 15, scope: !12527)
!12530 = !DILocation(line: 1051, column: 13, scope: !12527)
!12531 = !DILocation(line: 1051, column: 63, scope: !12527)
!12532 = !DILocation(line: 1051, column: 7, scope: !12511)
!12533 = !DILocation(line: 1053, column: 11, scope: !12534)
!12534 = distinct !DILexicalBlock(scope: !12535, file: !844, line: 1053, column: 11)
!12535 = distinct !DILexicalBlock(scope: !12527, file: !844, line: 1052, column: 5)
!12536 = !DILocation(line: 1053, column: 11, scope: !12535)
!12537 = !DILocation(line: 1054, column: 24, scope: !12534)
!12538 = !DILocation(line: 1054, column: 10, scope: !12534)
!12539 = !DILocation(line: 1054, column: 22, scope: !12534)
!12540 = !DILocation(line: 1054, column: 9, scope: !12534)
!12541 = !DILocation(line: 1055, column: 7, scope: !12535)
!12542 = !DILocation(line: 1063, column: 7, scope: !12543)
!12543 = distinct !DILexicalBlock(scope: !12511, file: !844, line: 1063, column: 7)
!12544 = !DILocation(line: 1063, column: 14, scope: !12543)
!12545 = !DILocation(line: 1064, column: 9, scope: !12543)
!12546 = !DILocation(line: 1064, column: 16, scope: !12543)
!12547 = !DILocation(line: 1064, column: 24, scope: !12543)
!12548 = !DILocation(line: 1064, column: 43, scope: !12543)
!12549 = !DILocation(line: 1064, column: 50, scope: !12543)
!12550 = !DILocation(line: 1064, column: 41, scope: !12543)
!12551 = !DILocation(line: 1064, column: 7, scope: !12543)
!12552 = !DILocation(line: 1063, column: 7, scope: !12511)
!12553 = !DILocation(line: 1068, column: 21, scope: !12554)
!12554 = distinct !DILexicalBlock(scope: !12543, file: !844, line: 1065, column: 5)
!12555 = !DILocation(line: 1068, column: 7, scope: !12554)
!12556 = !DILocation(line: 1069, column: 11, scope: !12557)
!12557 = distinct !DILexicalBlock(scope: !12554, file: !844, line: 1069, column: 11)
!12558 = !DILocation(line: 1069, column: 18, scope: !12557)
!12559 = !DILocation(line: 1070, column: 13, scope: !12557)
!12560 = !DILocation(line: 1070, column: 20, scope: !12557)
!12561 = !DILocation(line: 1070, column: 28, scope: !12557)
!12562 = !DILocation(line: 1070, column: 47, scope: !12557)
!12563 = !DILocation(line: 1070, column: 54, scope: !12557)
!12564 = !DILocation(line: 1070, column: 45, scope: !12557)
!12565 = !DILocation(line: 1070, column: 11, scope: !12557)
!12566 = !DILocation(line: 1069, column: 11, scope: !12554)
!12567 = !DILocalVariable(name: "tuning", scope: !12568, file: !844, line: 1072, type: !859)
!12568 = distinct !DILexicalBlock(scope: !12557, file: !844, line: 1071, column: 9)
!12569 = !DILocation(line: 1072, column: 30, scope: !12568)
!12570 = !DILocation(line: 1072, column: 39, scope: !12568)
!12571 = !DILocation(line: 1072, column: 46, scope: !12568)
!12572 = !DILocalVariable(name: "candidate", scope: !12568, file: !844, line: 1073, type: !865)
!12573 = !DILocation(line: 1073, column: 17, scope: !12568)
!12574 = !DILocation(line: 1074, column: 14, scope: !12568)
!12575 = !DILocation(line: 1074, column: 22, scope: !12568)
!12576 = !DILocation(line: 1075, column: 17, scope: !12568)
!12577 = !DILocation(line: 1075, column: 24, scope: !12568)
!12578 = !DILocation(line: 1075, column: 36, scope: !12568)
!12579 = !DILocation(line: 1075, column: 44, scope: !12568)
!12580 = !DILocation(line: 1075, column: 34, scope: !12568)
!12581 = !DILocation(line: 1076, column: 17, scope: !12568)
!12582 = !DILocation(line: 1076, column: 24, scope: !12568)
!12583 = !DILocation(line: 1076, column: 36, scope: !12568)
!12584 = !DILocation(line: 1076, column: 44, scope: !12568)
!12585 = !DILocation(line: 1076, column: 34, scope: !12568)
!12586 = !DILocation(line: 1077, column: 19, scope: !12568)
!12587 = !DILocation(line: 1077, column: 27, scope: !12568)
!12588 = !DILocation(line: 1077, column: 17, scope: !12568)
!12589 = !DILocation(line: 1079, column: 27, scope: !12590)
!12590 = distinct !DILexicalBlock(scope: !12568, file: !844, line: 1079, column: 15)
!12591 = !DILocation(line: 1079, column: 24, scope: !12590)
!12592 = !DILocation(line: 1079, column: 15, scope: !12568)
!12593 = !DILocation(line: 1080, column: 13, scope: !12590)
!12594 = !DILocation(line: 1083, column: 29, scope: !12595)
!12595 = distinct !DILexicalBlock(scope: !12568, file: !844, line: 1083, column: 15)
!12596 = !DILocation(line: 1083, column: 36, scope: !12595)
!12597 = !DILocation(line: 1083, column: 16, scope: !12595)
!12598 = !DILocation(line: 1083, column: 15, scope: !12568)
!12599 = !DILocation(line: 1084, column: 13, scope: !12595)
!12600 = !DILocation(line: 1087, column: 32, scope: !12601)
!12601 = distinct !DILexicalBlock(scope: !12568, file: !844, line: 1087, column: 15)
!12602 = !DILocation(line: 1087, column: 39, scope: !12601)
!12603 = !DILocation(line: 1087, column: 15, scope: !12601)
!12604 = !DILocation(line: 1087, column: 62, scope: !12601)
!12605 = !DILocation(line: 1087, column: 15, scope: !12568)
!12606 = !DILocation(line: 1088, column: 13, scope: !12601)
!12607 = !DILocation(line: 1089, column: 9, scope: !12568)
!12608 = !DILocation(line: 1090, column: 5, scope: !12554)
!12609 = !DILocation(line: 1094, column: 7, scope: !12610)
!12610 = distinct !DILexicalBlock(scope: !12511, file: !844, line: 1094, column: 7)
!12611 = !DILocation(line: 1094, column: 15, scope: !12610)
!12612 = !DILocation(line: 1094, column: 7, scope: !12511)
!12613 = !DILocalVariable(name: "new_entry", scope: !12614, file: !844, line: 1096, type: !847)
!12614 = distinct !DILexicalBlock(scope: !12610, file: !844, line: 1095, column: 5)
!12615 = !DILocation(line: 1096, column: 26, scope: !12614)
!12616 = !DILocation(line: 1096, column: 54, scope: !12614)
!12617 = !DILocation(line: 1096, column: 38, scope: !12614)
!12618 = !DILocation(line: 1098, column: 11, scope: !12619)
!12619 = distinct !DILexicalBlock(scope: !12614, file: !844, line: 1098, column: 11)
!12620 = !DILocation(line: 1098, column: 21, scope: !12619)
!12621 = !DILocation(line: 1098, column: 11, scope: !12614)
!12622 = !DILocation(line: 1099, column: 9, scope: !12619)
!12623 = !DILocation(line: 1103, column: 34, scope: !12614)
!12624 = !DILocation(line: 1103, column: 7, scope: !12614)
!12625 = !DILocation(line: 1103, column: 18, scope: !12614)
!12626 = !DILocation(line: 1103, column: 23, scope: !12614)
!12627 = !DILocation(line: 1104, column: 25, scope: !12614)
!12628 = !DILocation(line: 1104, column: 33, scope: !12614)
!12629 = !DILocation(line: 1104, column: 7, scope: !12614)
!12630 = !DILocation(line: 1104, column: 18, scope: !12614)
!12631 = !DILocation(line: 1104, column: 23, scope: !12614)
!12632 = !DILocation(line: 1105, column: 22, scope: !12614)
!12633 = !DILocation(line: 1105, column: 7, scope: !12614)
!12634 = !DILocation(line: 1105, column: 15, scope: !12614)
!12635 = !DILocation(line: 1105, column: 20, scope: !12614)
!12636 = !DILocation(line: 1106, column: 7, scope: !12614)
!12637 = !DILocation(line: 1106, column: 14, scope: !12614)
!12638 = !DILocation(line: 1106, column: 23, scope: !12614)
!12639 = !DILocation(line: 1107, column: 7, scope: !12614)
!12640 = !DILocation(line: 1112, column: 27, scope: !12511)
!12641 = !DILocation(line: 1112, column: 3, scope: !12511)
!12642 = !DILocation(line: 1112, column: 11, scope: !12511)
!12643 = !DILocation(line: 1112, column: 16, scope: !12511)
!12644 = !DILocation(line: 1113, column: 3, scope: !12511)
!12645 = !DILocation(line: 1113, column: 10, scope: !12511)
!12646 = !DILocation(line: 1113, column: 19, scope: !12511)
!12647 = !DILocation(line: 1114, column: 3, scope: !12511)
!12648 = !DILocation(line: 1114, column: 10, scope: !12511)
!12649 = !DILocation(line: 1114, column: 24, scope: !12511)
!12650 = !DILocation(line: 1116, column: 3, scope: !12511)
!12651 = !DILocation(line: 1117, column: 1, scope: !12511)
!12652 = distinct !DISubprogram(name: "hash_find_entry", scope: !844, file: !844, line: 790, type: !962, scopeLine: 792, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !835, retainedNodes: !209)
!12653 = !DILocalVariable(name: "table", arg: 1, scope: !12652, file: !844, line: 790, type: !938)
!12654 = !DILocation(line: 790, column: 30, scope: !12652)
!12655 = !DILocalVariable(name: "entry", arg: 2, scope: !12652, file: !844, line: 790, type: !515)
!12656 = !DILocation(line: 790, column: 49, scope: !12652)
!12657 = !DILocalVariable(name: "bucket_head", arg: 3, scope: !12652, file: !844, line: 791, type: !964)
!12658 = !DILocation(line: 791, column: 38, scope: !12652)
!12659 = !DILocalVariable(name: "delete", arg: 4, scope: !12652, file: !844, line: 791, type: !142)
!12660 = !DILocation(line: 791, column: 56, scope: !12652)
!12661 = !DILocalVariable(name: "bucket", scope: !12652, file: !844, line: 793, type: !847)
!12662 = !DILocation(line: 793, column: 22, scope: !12652)
!12663 = !DILocation(line: 793, column: 44, scope: !12652)
!12664 = !DILocation(line: 793, column: 51, scope: !12652)
!12665 = !DILocation(line: 793, column: 31, scope: !12652)
!12666 = !DILocalVariable(name: "cursor", scope: !12652, file: !844, line: 794, type: !847)
!12667 = !DILocation(line: 794, column: 22, scope: !12652)
!12668 = !DILocation(line: 796, column: 18, scope: !12652)
!12669 = !DILocation(line: 796, column: 4, scope: !12652)
!12670 = !DILocation(line: 796, column: 16, scope: !12652)
!12671 = !DILocation(line: 799, column: 7, scope: !12672)
!12672 = distinct !DILexicalBlock(scope: !12652, file: !844, line: 799, column: 7)
!12673 = !DILocation(line: 799, column: 15, scope: !12672)
!12674 = !DILocation(line: 799, column: 20, scope: !12672)
!12675 = !DILocation(line: 799, column: 7, scope: !12652)
!12676 = !DILocation(line: 800, column: 5, scope: !12672)
!12677 = !DILocation(line: 803, column: 7, scope: !12678)
!12678 = distinct !DILexicalBlock(scope: !12652, file: !844, line: 803, column: 7)
!12679 = !DILocation(line: 803, column: 16, scope: !12678)
!12680 = !DILocation(line: 803, column: 24, scope: !12678)
!12681 = !DILocation(line: 803, column: 13, scope: !12678)
!12682 = !DILocation(line: 803, column: 29, scope: !12678)
!12683 = !DILocation(line: 803, column: 32, scope: !12678)
!12684 = !DILocation(line: 803, column: 39, scope: !12678)
!12685 = !DILocation(line: 803, column: 51, scope: !12678)
!12686 = !DILocation(line: 803, column: 58, scope: !12678)
!12687 = !DILocation(line: 803, column: 66, scope: !12678)
!12688 = !DILocation(line: 803, column: 7, scope: !12652)
!12689 = !DILocalVariable(name: "data", scope: !12690, file: !844, line: 805, type: !53)
!12690 = distinct !DILexicalBlock(scope: !12678, file: !844, line: 804, column: 5)
!12691 = !DILocation(line: 805, column: 13, scope: !12690)
!12692 = !DILocation(line: 805, column: 20, scope: !12690)
!12693 = !DILocation(line: 805, column: 28, scope: !12690)
!12694 = !DILocation(line: 807, column: 11, scope: !12695)
!12695 = distinct !DILexicalBlock(scope: !12690, file: !844, line: 807, column: 11)
!12696 = !DILocation(line: 807, column: 11, scope: !12690)
!12697 = !DILocation(line: 809, column: 15, scope: !12698)
!12698 = distinct !DILexicalBlock(scope: !12699, file: !844, line: 809, column: 15)
!12699 = distinct !DILexicalBlock(scope: !12695, file: !844, line: 808, column: 9)
!12700 = !DILocation(line: 809, column: 23, scope: !12698)
!12701 = !DILocation(line: 809, column: 15, scope: !12699)
!12702 = !DILocalVariable(name: "next", scope: !12703, file: !844, line: 811, type: !847)
!12703 = distinct !DILexicalBlock(scope: !12698, file: !844, line: 810, column: 13)
!12704 = !DILocation(line: 811, column: 34, scope: !12703)
!12705 = !DILocation(line: 811, column: 41, scope: !12703)
!12706 = !DILocation(line: 811, column: 49, scope: !12703)
!12707 = !DILocation(line: 815, column: 16, scope: !12703)
!12708 = !DILocation(line: 815, column: 26, scope: !12703)
!12709 = !DILocation(line: 815, column: 25, scope: !12703)
!12710 = !{i64 0, i64 8, !2648, i64 8, i64 8, !2648}
!12711 = !DILocation(line: 816, column: 27, scope: !12703)
!12712 = !DILocation(line: 816, column: 34, scope: !12703)
!12713 = !DILocation(line: 816, column: 15, scope: !12703)
!12714 = !DILocation(line: 817, column: 13, scope: !12703)
!12715 = !DILocation(line: 820, column: 15, scope: !12716)
!12716 = distinct !DILexicalBlock(scope: !12698, file: !844, line: 819, column: 13)
!12717 = !DILocation(line: 820, column: 23, scope: !12716)
!12718 = !DILocation(line: 820, column: 28, scope: !12716)
!12719 = !DILocation(line: 822, column: 9, scope: !12699)
!12720 = !DILocation(line: 824, column: 14, scope: !12690)
!12721 = !DILocation(line: 824, column: 7, scope: !12690)
!12722 = !DILocation(line: 828, column: 17, scope: !12723)
!12723 = distinct !DILexicalBlock(scope: !12652, file: !844, line: 828, column: 3)
!12724 = !DILocation(line: 828, column: 15, scope: !12723)
!12725 = !DILocation(line: 828, column: 8, scope: !12723)
!12726 = !DILocation(line: 828, column: 25, scope: !12727)
!12727 = distinct !DILexicalBlock(scope: !12723, file: !844, line: 828, column: 3)
!12728 = !DILocation(line: 828, column: 33, scope: !12727)
!12729 = !DILocation(line: 828, column: 3, scope: !12723)
!12730 = !DILocation(line: 830, column: 11, scope: !12731)
!12731 = distinct !DILexicalBlock(scope: !12732, file: !844, line: 830, column: 11)
!12732 = distinct !DILexicalBlock(scope: !12727, file: !844, line: 829, column: 5)
!12733 = !DILocation(line: 830, column: 20, scope: !12731)
!12734 = !DILocation(line: 830, column: 28, scope: !12731)
!12735 = !DILocation(line: 830, column: 34, scope: !12731)
!12736 = !DILocation(line: 830, column: 17, scope: !12731)
!12737 = !DILocation(line: 831, column: 11, scope: !12731)
!12738 = !DILocation(line: 831, column: 14, scope: !12731)
!12739 = !DILocation(line: 831, column: 21, scope: !12731)
!12740 = !DILocation(line: 831, column: 33, scope: !12731)
!12741 = !DILocation(line: 831, column: 40, scope: !12731)
!12742 = !DILocation(line: 831, column: 48, scope: !12731)
!12743 = !DILocation(line: 831, column: 54, scope: !12731)
!12744 = !DILocation(line: 830, column: 11, scope: !12732)
!12745 = !DILocalVariable(name: "data", scope: !12746, file: !844, line: 833, type: !53)
!12746 = distinct !DILexicalBlock(scope: !12731, file: !844, line: 832, column: 9)
!12747 = !DILocation(line: 833, column: 17, scope: !12746)
!12748 = !DILocation(line: 833, column: 24, scope: !12746)
!12749 = !DILocation(line: 833, column: 32, scope: !12746)
!12750 = !DILocation(line: 833, column: 38, scope: !12746)
!12751 = !DILocation(line: 835, column: 15, scope: !12752)
!12752 = distinct !DILexicalBlock(scope: !12746, file: !844, line: 835, column: 15)
!12753 = !DILocation(line: 835, column: 15, scope: !12746)
!12754 = !DILocalVariable(name: "next", scope: !12755, file: !844, line: 837, type: !847)
!12755 = distinct !DILexicalBlock(scope: !12752, file: !844, line: 836, column: 13)
!12756 = !DILocation(line: 837, column: 34, scope: !12755)
!12757 = !DILocation(line: 837, column: 41, scope: !12755)
!12758 = !DILocation(line: 837, column: 49, scope: !12755)
!12759 = !DILocation(line: 841, column: 30, scope: !12755)
!12760 = !DILocation(line: 841, column: 36, scope: !12755)
!12761 = !DILocation(line: 841, column: 15, scope: !12755)
!12762 = !DILocation(line: 841, column: 23, scope: !12755)
!12763 = !DILocation(line: 841, column: 28, scope: !12755)
!12764 = !DILocation(line: 842, column: 27, scope: !12755)
!12765 = !DILocation(line: 842, column: 34, scope: !12755)
!12766 = !DILocation(line: 842, column: 15, scope: !12755)
!12767 = !DILocation(line: 843, column: 13, scope: !12755)
!12768 = !DILocation(line: 845, column: 18, scope: !12746)
!12769 = !DILocation(line: 845, column: 11, scope: !12746)
!12770 = !DILocation(line: 847, column: 5, scope: !12732)
!12771 = !DILocation(line: 828, column: 48, scope: !12727)
!12772 = !DILocation(line: 828, column: 56, scope: !12727)
!12773 = !DILocation(line: 828, column: 46, scope: !12727)
!12774 = !DILocation(line: 828, column: 3, scope: !12727)
!12775 = distinct !{!12775, !12729, !12776}
!12776 = !DILocation(line: 847, column: 5, scope: !12723)
!12777 = !DILocation(line: 850, column: 3, scope: !12652)
!12778 = !DILocation(line: 851, column: 1, scope: !12652)
!12779 = distinct !DISubprogram(name: "hash_insert", scope: !844, file: !844, line: 1126, type: !946, scopeLine: 1127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !835, retainedNodes: !209)
!12780 = !DILocalVariable(name: "table", arg: 1, scope: !12779, file: !844, line: 1126, type: !938)
!12781 = !DILocation(line: 1126, column: 26, scope: !12779)
!12782 = !DILocalVariable(name: "entry", arg: 2, scope: !12779, file: !844, line: 1126, type: !515)
!12783 = !DILocation(line: 1126, column: 45, scope: !12779)
!12784 = !DILocalVariable(name: "matched_ent", scope: !12779, file: !844, line: 1128, type: !515)
!12785 = !DILocation(line: 1128, column: 15, scope: !12779)
!12786 = !DILocalVariable(name: "err", scope: !12779, file: !844, line: 1129, type: !7)
!12787 = !DILocation(line: 1129, column: 7, scope: !12779)
!12788 = !DILocation(line: 1129, column: 36, scope: !12779)
!12789 = !DILocation(line: 1129, column: 43, scope: !12779)
!12790 = !DILocation(line: 1129, column: 13, scope: !12779)
!12791 = !DILocation(line: 1130, column: 11, scope: !12779)
!12792 = !DILocation(line: 1130, column: 15, scope: !12779)
!12793 = !DILocation(line: 1132, column: 23, scope: !12779)
!12794 = !DILocation(line: 1132, column: 27, scope: !12779)
!12795 = !DILocation(line: 1132, column: 34, scope: !12779)
!12796 = !DILocation(line: 1132, column: 48, scope: !12779)
!12797 = !DILocation(line: 1130, column: 3, scope: !12779)
!12798 = distinct !DISubprogram(name: "hash_delete", scope: !844, file: !844, line: 1140, type: !946, scopeLine: 1141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !835, retainedNodes: !209)
!12799 = !DILocalVariable(name: "table", arg: 1, scope: !12798, file: !844, line: 1140, type: !938)
!12800 = !DILocation(line: 1140, column: 26, scope: !12798)
!12801 = !DILocalVariable(name: "entry", arg: 2, scope: !12798, file: !844, line: 1140, type: !515)
!12802 = !DILocation(line: 1140, column: 45, scope: !12798)
!12803 = !DILocalVariable(name: "data", scope: !12798, file: !844, line: 1142, type: !53)
!12804 = !DILocation(line: 1142, column: 9, scope: !12798)
!12805 = !DILocalVariable(name: "bucket", scope: !12798, file: !844, line: 1143, type: !847)
!12806 = !DILocation(line: 1143, column: 22, scope: !12798)
!12807 = !DILocation(line: 1145, column: 27, scope: !12798)
!12808 = !DILocation(line: 1145, column: 34, scope: !12798)
!12809 = !DILocation(line: 1145, column: 10, scope: !12798)
!12810 = !DILocation(line: 1145, column: 8, scope: !12798)
!12811 = !DILocation(line: 1146, column: 8, scope: !12812)
!12812 = distinct !DILexicalBlock(scope: !12798, file: !844, line: 1146, column: 7)
!12813 = !DILocation(line: 1146, column: 7, scope: !12798)
!12814 = !DILocation(line: 1147, column: 5, scope: !12812)
!12815 = !DILocation(line: 1149, column: 3, scope: !12798)
!12816 = !DILocation(line: 1149, column: 10, scope: !12798)
!12817 = !DILocation(line: 1149, column: 19, scope: !12798)
!12818 = !DILocation(line: 1150, column: 8, scope: !12819)
!12819 = distinct !DILexicalBlock(scope: !12798, file: !844, line: 1150, column: 7)
!12820 = !DILocation(line: 1150, column: 16, scope: !12819)
!12821 = !DILocation(line: 1150, column: 7, scope: !12798)
!12822 = !DILocation(line: 1152, column: 7, scope: !12823)
!12823 = distinct !DILexicalBlock(scope: !12819, file: !844, line: 1151, column: 5)
!12824 = !DILocation(line: 1152, column: 14, scope: !12823)
!12825 = !DILocation(line: 1152, column: 28, scope: !12823)
!12826 = !DILocation(line: 1157, column: 11, scope: !12827)
!12827 = distinct !DILexicalBlock(scope: !12823, file: !844, line: 1157, column: 11)
!12828 = !DILocation(line: 1157, column: 18, scope: !12827)
!12829 = !DILocation(line: 1158, column: 13, scope: !12827)
!12830 = !DILocation(line: 1158, column: 20, scope: !12827)
!12831 = !DILocation(line: 1158, column: 28, scope: !12827)
!12832 = !DILocation(line: 1158, column: 47, scope: !12827)
!12833 = !DILocation(line: 1158, column: 54, scope: !12827)
!12834 = !DILocation(line: 1158, column: 45, scope: !12827)
!12835 = !DILocation(line: 1158, column: 11, scope: !12827)
!12836 = !DILocation(line: 1157, column: 11, scope: !12823)
!12837 = !DILocation(line: 1162, column: 25, scope: !12838)
!12838 = distinct !DILexicalBlock(scope: !12827, file: !844, line: 1159, column: 9)
!12839 = !DILocation(line: 1162, column: 11, scope: !12838)
!12840 = !DILocation(line: 1163, column: 15, scope: !12841)
!12841 = distinct !DILexicalBlock(scope: !12838, file: !844, line: 1163, column: 15)
!12842 = !DILocation(line: 1163, column: 22, scope: !12841)
!12843 = !DILocation(line: 1164, column: 17, scope: !12841)
!12844 = !DILocation(line: 1164, column: 24, scope: !12841)
!12845 = !DILocation(line: 1164, column: 32, scope: !12841)
!12846 = !DILocation(line: 1164, column: 51, scope: !12841)
!12847 = !DILocation(line: 1164, column: 58, scope: !12841)
!12848 = !DILocation(line: 1164, column: 49, scope: !12841)
!12849 = !DILocation(line: 1164, column: 15, scope: !12841)
!12850 = !DILocation(line: 1163, column: 15, scope: !12838)
!12851 = !DILocalVariable(name: "tuning", scope: !12852, file: !844, line: 1166, type: !859)
!12852 = distinct !DILexicalBlock(scope: !12841, file: !844, line: 1165, column: 13)
!12853 = !DILocation(line: 1166, column: 34, scope: !12852)
!12854 = !DILocation(line: 1166, column: 43, scope: !12852)
!12855 = !DILocation(line: 1166, column: 50, scope: !12852)
!12856 = !DILocalVariable(name: "candidate", scope: !12852, file: !844, line: 1167, type: !55)
!12857 = !DILocation(line: 1167, column: 22, scope: !12852)
!12858 = !DILocation(line: 1168, column: 18, scope: !12852)
!12859 = !DILocation(line: 1168, column: 26, scope: !12852)
!12860 = !DILocation(line: 1169, column: 20, scope: !12852)
!12861 = !DILocation(line: 1169, column: 27, scope: !12852)
!12862 = !DILocation(line: 1169, column: 39, scope: !12852)
!12863 = !DILocation(line: 1169, column: 47, scope: !12852)
!12864 = !DILocation(line: 1169, column: 37, scope: !12852)
!12865 = !DILocation(line: 1170, column: 21, scope: !12852)
!12866 = !DILocation(line: 1170, column: 28, scope: !12852)
!12867 = !DILocation(line: 1170, column: 40, scope: !12852)
!12868 = !DILocation(line: 1170, column: 48, scope: !12852)
!12869 = !DILocation(line: 1170, column: 38, scope: !12852)
!12870 = !DILocation(line: 1171, column: 23, scope: !12852)
!12871 = !DILocation(line: 1171, column: 31, scope: !12852)
!12872 = !DILocation(line: 1171, column: 21, scope: !12852)
!12873 = !DILocation(line: 1168, column: 17, scope: !12852)
!12874 = !DILocation(line: 1173, column: 33, scope: !12875)
!12875 = distinct !DILexicalBlock(scope: !12852, file: !844, line: 1173, column: 19)
!12876 = !DILocation(line: 1173, column: 40, scope: !12875)
!12877 = !DILocation(line: 1173, column: 20, scope: !12875)
!12878 = !DILocation(line: 1173, column: 19, scope: !12852)
!12879 = !DILocalVariable(name: "cursor", scope: !12880, file: !844, line: 1181, type: !847)
!12880 = distinct !DILexicalBlock(scope: !12875, file: !844, line: 1174, column: 17)
!12881 = !DILocation(line: 1181, column: 38, scope: !12880)
!12882 = !DILocation(line: 1181, column: 47, scope: !12880)
!12883 = !DILocation(line: 1181, column: 54, scope: !12880)
!12884 = !DILocalVariable(name: "next", scope: !12880, file: !844, line: 1182, type: !847)
!12885 = !DILocation(line: 1182, column: 38, scope: !12880)
!12886 = !DILocation(line: 1183, column: 19, scope: !12880)
!12887 = !DILocation(line: 1183, column: 26, scope: !12880)
!12888 = !DILocation(line: 1185, column: 30, scope: !12889)
!12889 = distinct !DILexicalBlock(scope: !12880, file: !844, line: 1184, column: 21)
!12890 = !DILocation(line: 1185, column: 38, scope: !12889)
!12891 = !DILocation(line: 1185, column: 28, scope: !12889)
!12892 = !DILocation(line: 1186, column: 29, scope: !12889)
!12893 = !DILocation(line: 1186, column: 23, scope: !12889)
!12894 = !DILocation(line: 1187, column: 32, scope: !12889)
!12895 = !DILocation(line: 1187, column: 30, scope: !12889)
!12896 = distinct !{!12896, !12886, !12897}
!12897 = !DILocation(line: 1188, column: 21, scope: !12880)
!12898 = !DILocation(line: 1189, column: 19, scope: !12880)
!12899 = !DILocation(line: 1189, column: 26, scope: !12880)
!12900 = !DILocation(line: 1189, column: 42, scope: !12880)
!12901 = !DILocation(line: 1191, column: 17, scope: !12880)
!12902 = !DILocation(line: 1192, column: 13, scope: !12852)
!12903 = !DILocation(line: 1193, column: 9, scope: !12838)
!12904 = !DILocation(line: 1194, column: 5, scope: !12823)
!12905 = !DILocation(line: 1196, column: 10, scope: !12798)
!12906 = !DILocation(line: 1196, column: 3, scope: !12798)
!12907 = !DILocation(line: 1197, column: 1, scope: !12798)
!12908 = distinct !DISubprogram(name: "triple_hash", scope: !12909, file: !12909, line: 34, type: !635, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1703, retainedNodes: !209)
!12909 = !DIFile(filename: "lib/hash-triple.c", directory: "/home/mbarbar/clone/coreutils")
!12910 = !DILocalVariable(name: "x", arg: 1, scope: !12908, file: !12909, line: 34, type: !515)
!12911 = !DILocation(line: 34, column: 26, scope: !12908)
!12912 = !DILocalVariable(name: "table_size", arg: 2, scope: !12908, file: !12909, line: 34, type: !55)
!12913 = !DILocation(line: 34, column: 36, scope: !12908)
!12914 = !DILocalVariable(name: "p", scope: !12908, file: !12909, line: 36, type: !1706)
!12915 = !DILocation(line: 36, column: 26, scope: !12908)
!12916 = !DILocation(line: 36, column: 30, scope: !12908)
!12917 = !DILocalVariable(name: "tmp", scope: !12908, file: !12909, line: 37, type: !55)
!12918 = !DILocation(line: 37, column: 10, scope: !12908)
!12919 = !DILocation(line: 37, column: 26, scope: !12908)
!12920 = !DILocation(line: 37, column: 29, scope: !12908)
!12921 = !DILocation(line: 37, column: 35, scope: !12908)
!12922 = !DILocation(line: 37, column: 16, scope: !12908)
!12923 = !DILocation(line: 40, column: 11, scope: !12908)
!12924 = !DILocation(line: 40, column: 17, scope: !12908)
!12925 = !DILocation(line: 40, column: 20, scope: !12908)
!12926 = !DILocation(line: 40, column: 15, scope: !12908)
!12927 = !DILocation(line: 40, column: 30, scope: !12908)
!12928 = !DILocation(line: 40, column: 28, scope: !12908)
!12929 = !DILocation(line: 40, column: 3, scope: !12908)
!12930 = distinct !DISubprogram(name: "triple_hash_no_name", scope: !12909, file: !12909, line: 45, type: !635, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1703, retainedNodes: !209)
!12931 = !DILocalVariable(name: "x", arg: 1, scope: !12930, file: !12909, line: 45, type: !515)
!12932 = !DILocation(line: 45, column: 34, scope: !12930)
!12933 = !DILocalVariable(name: "table_size", arg: 2, scope: !12930, file: !12909, line: 45, type: !55)
!12934 = !DILocation(line: 45, column: 44, scope: !12930)
!12935 = !DILocalVariable(name: "p", scope: !12930, file: !12909, line: 47, type: !1706)
!12936 = !DILocation(line: 47, column: 26, scope: !12930)
!12937 = !DILocation(line: 47, column: 30, scope: !12930)
!12938 = !DILocation(line: 50, column: 10, scope: !12930)
!12939 = !DILocation(line: 50, column: 13, scope: !12930)
!12940 = !DILocation(line: 50, column: 22, scope: !12930)
!12941 = !DILocation(line: 50, column: 20, scope: !12930)
!12942 = !DILocation(line: 50, column: 3, scope: !12930)
!12943 = distinct !DISubprogram(name: "triple_compare", scope: !12909, file: !12909, line: 55, type: !637, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1703, retainedNodes: !209)
!12944 = !DILocalVariable(name: "x", arg: 1, scope: !12943, file: !12909, line: 55, type: !515)
!12945 = !DILocation(line: 55, column: 29, scope: !12943)
!12946 = !DILocalVariable(name: "y", arg: 2, scope: !12943, file: !12909, line: 55, type: !515)
!12947 = !DILocation(line: 55, column: 44, scope: !12943)
!12948 = !DILocalVariable(name: "a", scope: !12943, file: !12909, line: 57, type: !1706)
!12949 = !DILocation(line: 57, column: 26, scope: !12943)
!12950 = !DILocation(line: 57, column: 30, scope: !12943)
!12951 = !DILocalVariable(name: "b", scope: !12943, file: !12909, line: 58, type: !1706)
!12952 = !DILocation(line: 58, column: 26, scope: !12943)
!12953 = !DILocation(line: 58, column: 30, scope: !12943)
!12954 = !DILocation(line: 59, column: 11, scope: !12943)
!12955 = !DILocation(line: 59, column: 31, scope: !12943)
!12956 = !DILocation(line: 59, column: 45, scope: !12943)
!12957 = !DILocation(line: 59, column: 48, scope: !12943)
!12958 = !DILocation(line: 59, column: 54, scope: !12943)
!12959 = !DILocation(line: 59, column: 57, scope: !12943)
!12960 = !DILocation(line: 59, column: 34, scope: !12943)
!12961 = !DILocation(line: 0, scope: !12943)
!12962 = !DILocation(line: 59, column: 10, scope: !12943)
!12963 = !DILocation(line: 59, column: 3, scope: !12943)
!12964 = distinct !DISubprogram(name: "triple_compare_ino_str", scope: !12909, file: !12909, line: 63, type: !637, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1703, retainedNodes: !209)
!12965 = !DILocalVariable(name: "x", arg: 1, scope: !12964, file: !12909, line: 63, type: !515)
!12966 = !DILocation(line: 63, column: 37, scope: !12964)
!12967 = !DILocalVariable(name: "y", arg: 2, scope: !12964, file: !12909, line: 63, type: !515)
!12968 = !DILocation(line: 63, column: 52, scope: !12964)
!12969 = !DILocalVariable(name: "a", scope: !12964, file: !12909, line: 65, type: !1706)
!12970 = !DILocation(line: 65, column: 26, scope: !12964)
!12971 = !DILocation(line: 65, column: 30, scope: !12964)
!12972 = !DILocalVariable(name: "b", scope: !12964, file: !12909, line: 66, type: !1706)
!12973 = !DILocation(line: 66, column: 26, scope: !12964)
!12974 = !DILocation(line: 66, column: 30, scope: !12964)
!12975 = !DILocation(line: 67, column: 11, scope: !12964)
!12976 = !DILocation(line: 67, column: 31, scope: !12964)
!12977 = !DILocation(line: 67, column: 34, scope: !12964)
!12978 = !DILocation(line: 0, scope: !12964)
!12979 = !DILocation(line: 67, column: 10, scope: !12964)
!12980 = !DILocation(line: 67, column: 3, scope: !12964)
!12981 = distinct !DISubprogram(name: "triple_free", scope: !12909, file: !12909, line: 72, type: !633, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1703, retainedNodes: !209)
!12982 = !DILocalVariable(name: "x", arg: 1, scope: !12981, file: !12909, line: 72, type: !53)
!12983 = !DILocation(line: 72, column: 20, scope: !12981)
!12984 = !DILocalVariable(name: "a", scope: !12981, file: !12909, line: 74, type: !1713)
!12985 = !DILocation(line: 74, column: 20, scope: !12981)
!12986 = !DILocation(line: 74, column: 24, scope: !12981)
!12987 = !DILocation(line: 75, column: 9, scope: !12981)
!12988 = !DILocation(line: 75, column: 12, scope: !12981)
!12989 = !DILocation(line: 75, column: 3, scope: !12981)
!12990 = !DILocation(line: 76, column: 9, scope: !12981)
!12991 = !DILocation(line: 76, column: 3, scope: !12981)
!12992 = !DILocation(line: 77, column: 1, scope: !12981)
!12993 = distinct !DISubprogram(name: "mkancesdirs", scope: !12994, file: !12994, line: 65, type: !1728, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1714, retainedNodes: !209)
!12994 = !DIFile(filename: "lib/mkancesdirs.c", directory: "/home/mbarbar/clone/coreutils")
!12995 = !DILocalVariable(name: "file", arg: 1, scope: !12993, file: !12994, line: 65, type: !9)
!12996 = !DILocation(line: 65, column: 20, scope: !12993)
!12997 = !DILocalVariable(name: "wd", arg: 2, scope: !12993, file: !12994, line: 65, type: !1730)
!12998 = !DILocation(line: 65, column: 41, scope: !12993)
!12999 = !DILocalVariable(name: "make_dir", arg: 3, scope: !12993, file: !12994, line: 66, type: !1731)
!13000 = !DILocation(line: 66, column: 20, scope: !12993)
!13001 = !DILocalVariable(name: "make_dir_arg", arg: 4, scope: !12993, file: !12994, line: 67, type: !53)
!13002 = !DILocation(line: 67, column: 20, scope: !12993)
!13003 = !DILocalVariable(name: "sep", scope: !12993, file: !12994, line: 72, type: !9)
!13004 = !DILocation(line: 72, column: 9, scope: !12993)
!13005 = !DILocalVariable(name: "component", scope: !12993, file: !12994, line: 76, type: !9)
!13006 = !DILocation(line: 76, column: 9, scope: !12993)
!13007 = !DILocation(line: 76, column: 21, scope: !12993)
!13008 = !DILocalVariable(name: "p", scope: !12993, file: !12994, line: 78, type: !9)
!13009 = !DILocation(line: 78, column: 9, scope: !12993)
!13010 = !DILocation(line: 78, column: 13, scope: !12993)
!13011 = !DILocation(line: 78, column: 18, scope: !12993)
!13012 = !DILocalVariable(name: "c", scope: !12993, file: !12994, line: 79, type: !10)
!13013 = !DILocation(line: 79, column: 8, scope: !12993)
!13014 = !DILocalVariable(name: "made_dir", scope: !12993, file: !12994, line: 80, type: !142)
!13015 = !DILocation(line: 80, column: 8, scope: !12993)
!13016 = !DILocation(line: 88, column: 3, scope: !12993)
!13017 = !DILocation(line: 88, column: 17, scope: !12993)
!13018 = !DILocation(line: 88, column: 15, scope: !12993)
!13019 = !DILocation(line: 88, column: 13, scope: !12993)
!13020 = !DILocation(line: 89, column: 9, scope: !13021)
!13021 = distinct !DILexicalBlock(scope: !12993, file: !12994, line: 89, column: 9)
!13022 = !DILocation(line: 89, column: 9, scope: !12993)
!13023 = !DILocation(line: 91, column: 15, scope: !13024)
!13024 = distinct !DILexicalBlock(scope: !13025, file: !12994, line: 91, column: 13)
!13025 = distinct !DILexicalBlock(scope: !13021, file: !12994, line: 90, column: 7)
!13026 = !DILocation(line: 91, column: 13, scope: !13025)
!13027 = !DILocation(line: 92, column: 17, scope: !13024)
!13028 = !DILocation(line: 92, column: 15, scope: !13024)
!13029 = !DILocation(line: 92, column: 11, scope: !13024)
!13030 = !DILocation(line: 93, column: 7, scope: !13025)
!13031 = !DILocation(line: 94, column: 14, scope: !13032)
!13032 = distinct !DILexicalBlock(scope: !13021, file: !12994, line: 94, column: 14)
!13033 = !DILocation(line: 94, column: 26, scope: !13032)
!13034 = !DILocation(line: 94, column: 30, scope: !13032)
!13035 = !DILocation(line: 94, column: 29, scope: !13032)
!13036 = !DILocation(line: 94, column: 32, scope: !13032)
!13037 = !DILocation(line: 94, column: 35, scope: !13032)
!13038 = !DILocation(line: 94, column: 14, scope: !13021)
!13039 = !DILocation(line: 98, column: 16, scope: !13040)
!13040 = distinct !DILexicalBlock(scope: !13041, file: !12994, line: 98, column: 13)
!13041 = distinct !DILexicalBlock(scope: !13032, file: !12994, line: 95, column: 7)
!13042 = !DILocation(line: 98, column: 22, scope: !13040)
!13043 = !DILocation(line: 98, column: 20, scope: !13040)
!13044 = !DILocation(line: 98, column: 32, scope: !13040)
!13045 = !DILocation(line: 98, column: 37, scope: !13040)
!13046 = !DILocation(line: 98, column: 40, scope: !13040)
!13047 = !DILocation(line: 98, column: 53, scope: !13040)
!13048 = !DILocation(line: 98, column: 13, scope: !13041)
!13049 = !DILocalVariable(name: "make_dir_errno", scope: !13050, file: !12994, line: 100, type: !7)
!13050 = distinct !DILexicalBlock(scope: !13040, file: !12994, line: 99, column: 11)
!13051 = !DILocation(line: 100, column: 17, scope: !13050)
!13052 = !DILocalVariable(name: "savewd_chdir_options", scope: !13050, file: !12994, line: 101, type: !7)
!13053 = !DILocation(line: 101, column: 17, scope: !13050)
!13054 = !DILocalVariable(name: "chdir_result", scope: !13050, file: !12994, line: 102, type: !7)
!13055 = !DILocation(line: 102, column: 17, scope: !13050)
!13056 = !DILocation(line: 106, column: 14, scope: !13050)
!13057 = !DILocation(line: 106, column: 18, scope: !13050)
!13058 = !DILocation(line: 110, column: 17, scope: !13059)
!13059 = distinct !DILexicalBlock(scope: !13050, file: !12994, line: 110, column: 17)
!13060 = !DILocation(line: 110, column: 23, scope: !13059)
!13061 = !DILocation(line: 110, column: 21, scope: !13059)
!13062 = !DILocation(line: 110, column: 33, scope: !13059)
!13063 = !DILocation(line: 111, column: 17, scope: !13059)
!13064 = !DILocation(line: 111, column: 20, scope: !13059)
!13065 = !DILocation(line: 111, column: 33, scope: !13059)
!13066 = !DILocation(line: 111, column: 40, scope: !13059)
!13067 = !DILocation(line: 111, column: 43, scope: !13059)
!13068 = !DILocation(line: 111, column: 56, scope: !13059)
!13069 = !DILocation(line: 110, column: 17, scope: !13050)
!13070 = !DILocation(line: 112, column: 24, scope: !13059)
!13071 = !DILocation(line: 112, column: 15, scope: !13059)
!13072 = !DILocation(line: 113, column: 22, scope: !13073)
!13073 = distinct !DILexicalBlock(scope: !13059, file: !12994, line: 113, column: 22)
!13074 = !DILocation(line: 113, column: 32, scope: !13073)
!13075 = !DILocation(line: 113, column: 38, scope: !13073)
!13076 = !DILocation(line: 113, column: 49, scope: !13073)
!13077 = !DILocation(line: 113, column: 63, scope: !13073)
!13078 = !DILocation(line: 113, column: 22, scope: !13059)
!13079 = !DILocation(line: 114, column: 32, scope: !13073)
!13080 = !DILocation(line: 114, column: 30, scope: !13073)
!13081 = !DILocation(line: 114, column: 15, scope: !13073)
!13082 = !DILocation(line: 116, column: 24, scope: !13073)
!13083 = !DILocation(line: 118, column: 17, scope: !13084)
!13084 = distinct !DILexicalBlock(scope: !13050, file: !12994, line: 118, column: 17)
!13085 = !DILocation(line: 118, column: 17, scope: !13050)
!13086 = !DILocation(line: 119, column: 36, scope: !13084)
!13087 = !DILocation(line: 119, column: 15, scope: !13084)
!13088 = !DILocation(line: 122, column: 29, scope: !13050)
!13089 = !DILocation(line: 122, column: 33, scope: !13050)
!13090 = !DILocation(line: 122, column: 44, scope: !13050)
!13091 = !DILocation(line: 122, column: 15, scope: !13050)
!13092 = !DILocation(line: 121, column: 26, scope: !13050)
!13093 = !DILocation(line: 126, column: 17, scope: !13094)
!13094 = distinct !DILexicalBlock(scope: !13050, file: !12994, line: 126, column: 17)
!13095 = !DILocation(line: 126, column: 30, scope: !13094)
!13096 = !DILocation(line: 126, column: 17, scope: !13050)
!13097 = !DILocation(line: 127, column: 16, scope: !13094)
!13098 = !DILocation(line: 127, column: 20, scope: !13094)
!13099 = !DILocation(line: 127, column: 15, scope: !13094)
!13100 = !DILocation(line: 129, column: 17, scope: !13101)
!13101 = distinct !DILexicalBlock(scope: !13050, file: !12994, line: 129, column: 17)
!13102 = !DILocation(line: 129, column: 30, scope: !13101)
!13103 = !DILocation(line: 129, column: 17, scope: !13050)
!13104 = !DILocation(line: 131, column: 21, scope: !13105)
!13105 = distinct !DILexicalBlock(scope: !13106, file: !12994, line: 131, column: 21)
!13106 = distinct !DILexicalBlock(scope: !13101, file: !12994, line: 130, column: 15)
!13107 = !DILocation(line: 131, column: 36, scope: !13105)
!13108 = !DILocation(line: 131, column: 41, scope: !13105)
!13109 = !DILocation(line: 131, column: 44, scope: !13105)
!13110 = !DILocation(line: 131, column: 50, scope: !13105)
!13111 = !DILocation(line: 131, column: 21, scope: !13106)
!13112 = !DILocation(line: 132, column: 27, scope: !13105)
!13113 = !DILocation(line: 132, column: 19, scope: !13105)
!13114 = !DILocation(line: 132, column: 25, scope: !13105)
!13115 = !DILocation(line: 133, column: 24, scope: !13106)
!13116 = !DILocation(line: 133, column: 17, scope: !13106)
!13117 = !DILocation(line: 135, column: 11, scope: !13050)
!13118 = !DILocation(line: 137, column: 21, scope: !13041)
!13119 = !DILocation(line: 137, column: 19, scope: !13041)
!13120 = !DILocation(line: 138, column: 7, scope: !13041)
!13121 = distinct !{!13121, !13016, !13122}
!13122 = !DILocation(line: 138, column: 7, scope: !12993)
!13123 = !DILocation(line: 140, column: 10, scope: !12993)
!13124 = !DILocation(line: 140, column: 22, scope: !12993)
!13125 = !DILocation(line: 140, column: 20, scope: !12993)
!13126 = !DILocation(line: 140, column: 3, scope: !12993)
!13127 = !DILocation(line: 141, column: 1, scope: !12993)
!13128 = distinct !DISubprogram(name: "make_dir_parents", scope: !13129, file: !13129, line: 85, type: !1746, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1732, retainedNodes: !209)
!13129 = !DIFile(filename: "lib/mkdir-p.c", directory: "/home/mbarbar/clone/coreutils")
!13130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !271, line: 46, size: 1152, elements: !13131)
!13131 = !{!13132, !13133, !13134, !13135, !13136, !13137, !13138, !13139, !13140, !13141, !13142, !13143, !13148, !13149, !13150}
!13132 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !13130, file: !271, line: 48, baseType: !274, size: 64)
!13133 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !13130, file: !271, line: 53, baseType: !276, size: 64, offset: 64)
!13134 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !13130, file: !271, line: 61, baseType: !278, size: 64, offset: 128)
!13135 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !13130, file: !271, line: 62, baseType: !140, size: 32, offset: 192)
!13136 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !13130, file: !271, line: 64, baseType: !128, size: 32, offset: 224)
!13137 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !13130, file: !271, line: 65, baseType: !130, size: 32, offset: 256)
!13138 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !13130, file: !271, line: 67, baseType: !7, size: 32, offset: 288)
!13139 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !13130, file: !271, line: 69, baseType: !274, size: 64, offset: 320)
!13140 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !13130, file: !271, line: 74, baseType: !29, size: 64, offset: 384)
!13141 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !13130, file: !271, line: 78, baseType: !286, size: 64, offset: 448)
!13142 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !13130, file: !271, line: 80, baseType: !288, size: 64, offset: 512)
!13143 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !13130, file: !271, line: 91, baseType: !13144, size: 128, offset: 576)
!13144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !291, line: 9, size: 128, elements: !13145)
!13145 = !{!13146, !13147}
!13146 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !13144, file: !291, line: 11, baseType: !294, size: 64)
!13147 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !13144, file: !291, line: 12, baseType: !296, size: 64, offset: 64)
!13148 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !13130, file: !271, line: 92, baseType: !13144, size: 128, offset: 704)
!13149 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !13130, file: !271, line: 93, baseType: !13144, size: 128, offset: 832)
!13150 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !13130, file: !271, line: 106, baseType: !300, size: 192, offset: 960)
!13151 = !DILocalVariable(name: "dir", arg: 1, scope: !13128, file: !13129, line: 85, type: !9)
!13152 = !DILocation(line: 85, column: 25, scope: !13128)
!13153 = !DILocalVariable(name: "wd", arg: 2, scope: !13128, file: !13129, line: 86, type: !1748)
!13154 = !DILocation(line: 86, column: 34, scope: !13128)
!13155 = !DILocalVariable(name: "make_ancestor", arg: 3, scope: !13128, file: !13129, line: 87, type: !1731)
!13156 = !DILocation(line: 87, column: 25, scope: !13128)
!13157 = !DILocalVariable(name: "options", arg: 4, scope: !13128, file: !13129, line: 88, type: !53)
!13158 = !DILocation(line: 88, column: 25, scope: !13128)
!13159 = !DILocalVariable(name: "mode", arg: 5, scope: !13128, file: !13129, line: 89, type: !139)
!13160 = !DILocation(line: 89, column: 26, scope: !13128)
!13161 = !DILocalVariable(name: "announce", arg: 6, scope: !13128, file: !13129, line: 90, type: !1749)
!13162 = !DILocation(line: 90, column: 26, scope: !13128)
!13163 = !DILocalVariable(name: "mode_bits", arg: 7, scope: !13128, file: !13129, line: 91, type: !139)
!13164 = !DILocation(line: 91, column: 26, scope: !13128)
!13165 = !DILocalVariable(name: "owner", arg: 8, scope: !13128, file: !13129, line: 92, type: !127)
!13166 = !DILocation(line: 92, column: 25, scope: !13128)
!13167 = !DILocalVariable(name: "group", arg: 9, scope: !13128, file: !13129, line: 93, type: !129)
!13168 = !DILocation(line: 93, column: 25, scope: !13128)
!13169 = !DILocalVariable(name: "preserve_existing", arg: 10, scope: !13128, file: !13129, line: 94, type: !142)
!13170 = !DILocation(line: 94, column: 24, scope: !13128)
!13171 = !DILocalVariable(name: "mkdir_errno", scope: !13128, file: !13129, line: 96, type: !7)
!13172 = !DILocation(line: 96, column: 7, scope: !13128)
!13173 = !DILocation(line: 96, column: 22, scope: !13128)
!13174 = !DILocation(line: 96, column: 70, scope: !13128)
!13175 = !DILocation(line: 96, column: 56, scope: !13128)
!13176 = !DILocation(line: 98, column: 7, scope: !13177)
!13177 = distinct !DILexicalBlock(scope: !13128, file: !13129, line: 98, column: 7)
!13178 = !DILocation(line: 98, column: 19, scope: !13177)
!13179 = !DILocation(line: 98, column: 7, scope: !13128)
!13180 = !DILocalVariable(name: "prefix_len", scope: !13181, file: !13129, line: 100, type: !654)
!13181 = distinct !DILexicalBlock(scope: !13177, file: !13129, line: 99, column: 5)
!13182 = !DILocation(line: 100, column: 17, scope: !13181)
!13183 = !DILocalVariable(name: "savewd_chdir_options", scope: !13181, file: !13129, line: 101, type: !7)
!13184 = !DILocation(line: 101, column: 11, scope: !13181)
!13185 = !DILocation(line: 103, column: 11, scope: !13186)
!13186 = distinct !DILexicalBlock(scope: !13181, file: !13129, line: 103, column: 11)
!13187 = !DILocation(line: 103, column: 11, scope: !13181)
!13188 = !DILocation(line: 105, column: 37, scope: !13189)
!13189 = distinct !DILexicalBlock(scope: !13186, file: !13129, line: 104, column: 9)
!13190 = !DILocation(line: 105, column: 42, scope: !13189)
!13191 = !DILocation(line: 105, column: 46, scope: !13189)
!13192 = !DILocation(line: 105, column: 61, scope: !13189)
!13193 = !DILocation(line: 105, column: 24, scope: !13189)
!13194 = !DILocation(line: 105, column: 22, scope: !13189)
!13195 = !DILocation(line: 106, column: 15, scope: !13196)
!13196 = distinct !DILexicalBlock(scope: !13189, file: !13129, line: 106, column: 15)
!13197 = !DILocation(line: 106, column: 26, scope: !13196)
!13198 = !DILocation(line: 106, column: 15, scope: !13189)
!13199 = !DILocation(line: 108, column: 19, scope: !13200)
!13200 = distinct !DILexicalBlock(scope: !13201, file: !13129, line: 108, column: 19)
!13201 = distinct !DILexicalBlock(scope: !13196, file: !13129, line: 107, column: 13)
!13202 = !DILocation(line: 108, column: 30, scope: !13200)
!13203 = !DILocation(line: 108, column: 19, scope: !13201)
!13204 = !DILocation(line: 109, column: 17, scope: !13200)
!13205 = !DILocation(line: 110, column: 29, scope: !13201)
!13206 = !DILocation(line: 110, column: 27, scope: !13201)
!13207 = !DILocation(line: 111, column: 13, scope: !13201)
!13208 = !DILocation(line: 112, column: 9, scope: !13189)
!13209 = !DILocation(line: 114, column: 16, scope: !13210)
!13210 = distinct !DILexicalBlock(scope: !13181, file: !13129, line: 114, column: 11)
!13211 = !DILocation(line: 114, column: 13, scope: !13210)
!13212 = !DILocation(line: 114, column: 11, scope: !13181)
!13213 = !DILocalVariable(name: "keep_owner", scope: !13214, file: !13129, line: 121, type: !142)
!13214 = distinct !DILexicalBlock(scope: !13210, file: !13129, line: 115, column: 9)
!13215 = !DILocation(line: 121, column: 16, scope: !13214)
!13216 = !DILocation(line: 121, column: 29, scope: !13214)
!13217 = !DILocation(line: 121, column: 35, scope: !13214)
!13218 = !DILocation(line: 121, column: 49, scope: !13214)
!13219 = !DILocation(line: 121, column: 52, scope: !13214)
!13220 = !DILocation(line: 121, column: 58, scope: !13214)
!13221 = !DILocation(line: 0, scope: !13214)
!13222 = !DILocalVariable(name: "keep_special_mode_bits", scope: !13214, file: !13129, line: 122, type: !142)
!13223 = !DILocation(line: 122, column: 16, scope: !13214)
!13224 = !DILocation(line: 123, column: 15, scope: !13214)
!13225 = !DILocation(line: 123, column: 25, scope: !13214)
!13226 = !DILocation(line: 123, column: 51, scope: !13214)
!13227 = !DILocation(line: 123, column: 56, scope: !13214)
!13228 = !DILocation(line: 123, column: 48, scope: !13214)
!13229 = !DILocation(line: 123, column: 68, scope: !13214)
!13230 = !DILocalVariable(name: "mkdir_mode", scope: !13214, file: !13129, line: 124, type: !139)
!13231 = !DILocation(line: 124, column: 18, scope: !13214)
!13232 = !DILocation(line: 124, column: 31, scope: !13214)
!13233 = !DILocation(line: 125, column: 17, scope: !13234)
!13234 = distinct !DILexicalBlock(scope: !13214, file: !13129, line: 125, column: 15)
!13235 = !DILocation(line: 125, column: 15, scope: !13214)
!13236 = !DILocation(line: 126, column: 24, scope: !13234)
!13237 = !DILocation(line: 126, column: 13, scope: !13234)
!13238 = !DILocation(line: 127, column: 22, scope: !13239)
!13239 = distinct !DILexicalBlock(scope: !13234, file: !13129, line: 127, column: 20)
!13240 = !DILocation(line: 127, column: 20, scope: !13234)
!13241 = !DILocation(line: 128, column: 24, scope: !13239)
!13242 = !DILocation(line: 128, column: 13, scope: !13239)
!13243 = !DILocation(line: 130, column: 22, scope: !13244)
!13244 = distinct !DILexicalBlock(scope: !13214, file: !13129, line: 130, column: 15)
!13245 = !DILocation(line: 130, column: 28, scope: !13244)
!13246 = !DILocation(line: 130, column: 26, scope: !13244)
!13247 = !DILocation(line: 130, column: 40, scope: !13244)
!13248 = !DILocation(line: 130, column: 15, scope: !13244)
!13249 = !DILocation(line: 130, column: 52, scope: !13244)
!13250 = !DILocation(line: 130, column: 15, scope: !13214)
!13251 = !DILocalVariable(name: "umask_must_be_ok", scope: !13252, file: !13129, line: 134, type: !142)
!13252 = distinct !DILexicalBlock(scope: !13244, file: !13129, line: 131, column: 13)
!13253 = !DILocation(line: 134, column: 20, scope: !13252)
!13254 = !DILocation(line: 134, column: 40, scope: !13252)
!13255 = !DILocation(line: 134, column: 47, scope: !13252)
!13256 = !DILocation(line: 134, column: 45, scope: !13252)
!13257 = !DILocation(line: 134, column: 57, scope: !13252)
!13258 = !DILocation(line: 134, column: 70, scope: !13252)
!13259 = !DILocation(line: 136, column: 15, scope: !13252)
!13260 = !DILocation(line: 136, column: 25, scope: !13252)
!13261 = !DILocation(line: 136, column: 30, scope: !13252)
!13262 = !DILocation(line: 137, column: 36, scope: !13252)
!13263 = !DILocation(line: 137, column: 49, scope: !13252)
!13264 = !DILocation(line: 137, column: 47, scope: !13252)
!13265 = !DILocation(line: 138, column: 38, scope: !13252)
!13266 = !DILocation(line: 138, column: 36, scope: !13252)
!13267 = !DILocation(line: 137, column: 35, scope: !13252)
!13268 = !DILocation(line: 137, column: 33, scope: !13252)
!13269 = !DILocation(line: 139, column: 36, scope: !13252)
!13270 = !DILocation(line: 140, column: 13, scope: !13252)
!13271 = !DILocation(line: 143, column: 29, scope: !13272)
!13272 = distinct !DILexicalBlock(scope: !13244, file: !13129, line: 142, column: 13)
!13273 = !DILocation(line: 143, column: 27, scope: !13272)
!13274 = !DILocation(line: 144, column: 26, scope: !13272)
!13275 = !DILocation(line: 147, column: 15, scope: !13276)
!13276 = distinct !DILexicalBlock(scope: !13214, file: !13129, line: 147, column: 15)
!13277 = !DILocation(line: 147, column: 15, scope: !13214)
!13278 = !DILocation(line: 149, column: 19, scope: !13279)
!13279 = distinct !DILexicalBlock(scope: !13280, file: !13129, line: 149, column: 19)
!13280 = distinct !DILexicalBlock(scope: !13276, file: !13129, line: 148, column: 13)
!13281 = !DILocation(line: 149, column: 31, scope: !13279)
!13282 = !DILocation(line: 149, column: 19, scope: !13280)
!13283 = !DILocation(line: 150, column: 17, scope: !13279)
!13284 = !DILocation(line: 151, column: 19, scope: !13285)
!13285 = distinct !DILexicalBlock(scope: !13280, file: !13129, line: 151, column: 19)
!13286 = !DILocation(line: 151, column: 31, scope: !13285)
!13287 = !DILocation(line: 151, column: 41, scope: !13285)
!13288 = !DILocation(line: 151, column: 44, scope: !13285)
!13289 = !DILocation(line: 151, column: 19, scope: !13280)
!13290 = !DILocalVariable(name: "st", scope: !13291, file: !13129, line: 153, type: !13130)
!13291 = distinct !DILexicalBlock(scope: !13285, file: !13129, line: 152, column: 17)
!13292 = !DILocation(line: 153, column: 31, scope: !13291)
!13293 = !DILocation(line: 154, column: 29, scope: !13294)
!13294 = distinct !DILexicalBlock(scope: !13291, file: !13129, line: 154, column: 23)
!13295 = !DILocation(line: 154, column: 35, scope: !13294)
!13296 = !DILocation(line: 154, column: 33, scope: !13294)
!13297 = !DILocation(line: 154, column: 23, scope: !13294)
!13298 = !DILocation(line: 154, column: 52, scope: !13294)
!13299 = !DILocation(line: 154, column: 23, scope: !13291)
!13300 = !DILocation(line: 156, column: 27, scope: !13301)
!13301 = distinct !DILexicalBlock(scope: !13302, file: !13129, line: 156, column: 27)
!13302 = distinct !DILexicalBlock(scope: !13294, file: !13129, line: 155, column: 21)
!13303 = !DILocation(line: 156, column: 27, scope: !13302)
!13304 = !DILocation(line: 157, column: 25, scope: !13301)
!13305 = !DILocation(line: 158, column: 21, scope: !13302)
!13306 = !DILocation(line: 159, column: 28, scope: !13307)
!13307 = distinct !DILexicalBlock(scope: !13294, file: !13129, line: 159, column: 28)
!13308 = !DILocation(line: 159, column: 40, scope: !13307)
!13309 = !DILocation(line: 160, column: 28, scope: !13307)
!13310 = !DILocation(line: 160, column: 31, scope: !13307)
!13311 = !DILocation(line: 160, column: 37, scope: !13307)
!13312 = !DILocation(line: 160, column: 47, scope: !13307)
!13313 = !DILocation(line: 160, column: 50, scope: !13307)
!13314 = !DILocation(line: 160, column: 56, scope: !13307)
!13315 = !DILocation(line: 159, column: 28, scope: !13294)
!13316 = !DILocation(line: 162, column: 33, scope: !13317)
!13317 = distinct !DILexicalBlock(scope: !13307, file: !13129, line: 161, column: 21)
!13318 = !DILocation(line: 162, column: 40, scope: !13317)
!13319 = !DILocation(line: 162, column: 68, scope: !13317)
!13320 = !DILocation(line: 162, column: 61, scope: !13317)
!13321 = !DILocation(line: 162, column: 23, scope: !13317)
!13322 = !DILocation(line: 163, column: 23, scope: !13317)
!13323 = !DILocation(line: 165, column: 17, scope: !13291)
!13324 = !DILocation(line: 166, column: 13, scope: !13280)
!13325 = !DILocalVariable(name: "open_result", scope: !13326, file: !13129, line: 169, type: !1750)
!13326 = distinct !DILexicalBlock(scope: !13276, file: !13129, line: 168, column: 13)
!13327 = !DILocation(line: 169, column: 19, scope: !13326)
!13328 = !DILocalVariable(name: "chdir_result", scope: !13326, file: !13129, line: 170, type: !7)
!13329 = !DILocation(line: 170, column: 19, scope: !13326)
!13330 = !DILocation(line: 171, column: 31, scope: !13326)
!13331 = !DILocation(line: 171, column: 35, scope: !13326)
!13332 = !DILocation(line: 171, column: 41, scope: !13326)
!13333 = !DILocation(line: 171, column: 39, scope: !13326)
!13334 = !DILocation(line: 172, column: 31, scope: !13326)
!13335 = !DILocation(line: 172, column: 53, scope: !13326)
!13336 = !DILocation(line: 171, column: 17, scope: !13326)
!13337 = !DILocation(line: 173, column: 19, scope: !13338)
!13338 = distinct !DILexicalBlock(scope: !13326, file: !13129, line: 173, column: 19)
!13339 = !DILocation(line: 173, column: 32, scope: !13338)
!13340 = !DILocation(line: 173, column: 19, scope: !13326)
!13341 = !DILocation(line: 174, column: 17, scope: !13338)
!13342 = !DILocalVariable(name: "chdir_ok", scope: !13343, file: !13129, line: 177, type: !142)
!13343 = distinct !DILexicalBlock(scope: !13338, file: !13129, line: 176, column: 17)
!13344 = !DILocation(line: 177, column: 24, scope: !13343)
!13345 = !DILocation(line: 177, column: 36, scope: !13343)
!13346 = !DILocation(line: 177, column: 49, scope: !13343)
!13347 = !DILocalVariable(name: "subdir", scope: !13343, file: !13129, line: 178, type: !180)
!13348 = !DILocation(line: 178, column: 31, scope: !13343)
!13349 = !DILocation(line: 178, column: 41, scope: !13343)
!13350 = !DILocation(line: 178, column: 58, scope: !13343)
!13351 = !DILocation(line: 178, column: 64, scope: !13343)
!13352 = !DILocation(line: 178, column: 62, scope: !13343)
!13353 = !DILocation(line: 179, column: 36, scope: !13354)
!13354 = distinct !DILexicalBlock(scope: !13343, file: !13129, line: 179, column: 23)
!13355 = !DILocation(line: 179, column: 52, scope: !13354)
!13356 = !DILocation(line: 179, column: 60, scope: !13354)
!13357 = !DILocation(line: 180, column: 36, scope: !13354)
!13358 = !DILocation(line: 180, column: 43, scope: !13354)
!13359 = !DILocation(line: 180, column: 50, scope: !13354)
!13360 = !DILocation(line: 180, column: 56, scope: !13354)
!13361 = !DILocation(line: 179, column: 23, scope: !13354)
!13362 = !DILocation(line: 181, column: 23, scope: !13354)
!13363 = !DILocation(line: 179, column: 23, scope: !13343)
!13364 = !DILocation(line: 182, column: 21, scope: !13354)
!13365 = !DILocation(line: 184, column: 23, scope: !13366)
!13366 = distinct !DILexicalBlock(scope: !13343, file: !13129, line: 184, column: 23)
!13367 = !DILocation(line: 184, column: 35, scope: !13366)
!13368 = !DILocation(line: 185, column: 23, scope: !13366)
!13369 = !DILocation(line: 185, column: 27, scope: !13366)
!13370 = !DILocation(line: 185, column: 39, scope: !13366)
!13371 = !DILocation(line: 185, column: 49, scope: !13366)
!13372 = !DILocation(line: 185, column: 52, scope: !13366)
!13373 = !DILocation(line: 186, column: 27, scope: !13366)
!13374 = !DILocation(line: 186, column: 30, scope: !13366)
!13375 = !DILocation(line: 186, column: 36, scope: !13366)
!13376 = !DILocation(line: 184, column: 23, scope: !13343)
!13377 = !DILocation(line: 188, column: 33, scope: !13378)
!13378 = distinct !DILexicalBlock(scope: !13366, file: !13129, line: 187, column: 21)
!13379 = !DILocation(line: 189, column: 30, scope: !13378)
!13380 = !DILocation(line: 192, column: 37, scope: !13378)
!13381 = !DILocation(line: 192, column: 30, scope: !13378)
!13382 = !DILocation(line: 188, column: 23, scope: !13378)
!13383 = !DILocation(line: 193, column: 23, scope: !13378)
!13384 = !DILocation(line: 197, column: 9, scope: !13214)
!13385 = !DILocation(line: 198, column: 5, scope: !13181)
!13386 = !DILocation(line: 200, column: 13, scope: !13128)
!13387 = !DILocation(line: 200, column: 26, scope: !13128)
!13388 = !DILocation(line: 200, column: 66, scope: !13128)
!13389 = !DILocation(line: 200, column: 59, scope: !13128)
!13390 = !DILocation(line: 200, column: 3, scope: !13128)
!13391 = !DILocation(line: 201, column: 3, scope: !13128)
!13392 = !DILocation(line: 202, column: 1, scope: !13128)
!13393 = distinct !DISubprogram(name: "mode_compile", scope: !1758, file: !1758, line: 134, type: !1754, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1751, retainedNodes: !209)
!13394 = !DILocalVariable(name: "mode_string", arg: 1, scope: !13393, file: !1758, line: 134, type: !180)
!13395 = !DILocation(line: 134, column: 27, scope: !13393)
!13396 = !DILocalVariable(name: "mc", scope: !13393, file: !1758, line: 137, type: !1756)
!13397 = !DILocation(line: 137, column: 23, scope: !13393)
!13398 = !DILocalVariable(name: "used", scope: !13393, file: !1758, line: 138, type: !55)
!13399 = !DILocation(line: 138, column: 10, scope: !13393)
!13400 = !DILocalVariable(name: "p", scope: !13393, file: !1758, line: 139, type: !180)
!13401 = !DILocation(line: 139, column: 15, scope: !13393)
!13402 = !DILocation(line: 141, column: 15, scope: !13403)
!13403 = distinct !DILexicalBlock(scope: !13393, file: !1758, line: 141, column: 7)
!13404 = !DILocation(line: 141, column: 14, scope: !13403)
!13405 = !DILocation(line: 141, column: 11, scope: !13403)
!13406 = !DILocation(line: 141, column: 27, scope: !13403)
!13407 = !DILocation(line: 141, column: 31, scope: !13403)
!13408 = !DILocation(line: 141, column: 30, scope: !13403)
!13409 = !DILocation(line: 141, column: 43, scope: !13403)
!13410 = !DILocation(line: 141, column: 7, scope: !13393)
!13411 = !DILocalVariable(name: "octal_mode", scope: !13412, file: !1758, line: 143, type: !70)
!13412 = distinct !DILexicalBlock(scope: !13403, file: !1758, line: 142, column: 5)
!13413 = !DILocation(line: 143, column: 20, scope: !13412)
!13414 = !DILocalVariable(name: "mode", scope: !13412, file: !1758, line: 144, type: !139)
!13415 = !DILocation(line: 144, column: 14, scope: !13412)
!13416 = !DILocalVariable(name: "mentioned", scope: !13412, file: !1758, line: 145, type: !139)
!13417 = !DILocation(line: 145, column: 14, scope: !13412)
!13418 = !DILocation(line: 147, column: 11, scope: !13412)
!13419 = !DILocation(line: 147, column: 9, scope: !13412)
!13420 = !DILocation(line: 148, column: 7, scope: !13412)
!13421 = !DILocation(line: 150, column: 28, scope: !13422)
!13422 = distinct !DILexicalBlock(scope: !13412, file: !1758, line: 149, column: 9)
!13423 = !DILocation(line: 150, column: 26, scope: !13422)
!13424 = !DILocation(line: 150, column: 43, scope: !13422)
!13425 = !DILocation(line: 150, column: 41, scope: !13422)
!13426 = !DILocation(line: 150, column: 39, scope: !13422)
!13427 = !DILocation(line: 150, column: 46, scope: !13422)
!13428 = !DILocation(line: 150, column: 22, scope: !13422)
!13429 = !DILocation(line: 151, column: 22, scope: !13430)
!13430 = distinct !DILexicalBlock(scope: !13422, file: !1758, line: 151, column: 15)
!13431 = !DILocation(line: 151, column: 20, scope: !13430)
!13432 = !DILocation(line: 151, column: 15, scope: !13422)
!13433 = !DILocation(line: 152, column: 13, scope: !13430)
!13434 = !DILocation(line: 153, column: 9, scope: !13422)
!13435 = !DILocation(line: 154, column: 22, scope: !13412)
!13436 = !DILocation(line: 154, column: 21, scope: !13412)
!13437 = !DILocation(line: 154, column: 18, scope: !13412)
!13438 = !DILocation(line: 154, column: 24, scope: !13412)
!13439 = !DILocation(line: 154, column: 28, scope: !13412)
!13440 = !DILocation(line: 154, column: 27, scope: !13412)
!13441 = !DILocation(line: 154, column: 30, scope: !13412)
!13442 = !DILocation(line: 0, scope: !13412)
!13443 = distinct !{!13443, !13420, !13444}
!13444 = !DILocation(line: 154, column: 35, scope: !13412)
!13445 = !DILocation(line: 156, column: 12, scope: !13446)
!13446 = distinct !DILexicalBlock(scope: !13412, file: !1758, line: 156, column: 11)
!13447 = !DILocation(line: 156, column: 11, scope: !13446)
!13448 = !DILocation(line: 156, column: 11, scope: !13412)
!13449 = !DILocation(line: 157, column: 9, scope: !13446)
!13450 = !DILocation(line: 159, column: 29, scope: !13412)
!13451 = !DILocation(line: 159, column: 14, scope: !13412)
!13452 = !DILocation(line: 159, column: 12, scope: !13412)
!13453 = !DILocation(line: 160, column: 20, scope: !13412)
!13454 = !DILocation(line: 160, column: 24, scope: !13412)
!13455 = !DILocation(line: 160, column: 22, scope: !13412)
!13456 = !DILocation(line: 160, column: 36, scope: !13412)
!13457 = !DILocation(line: 161, column: 23, scope: !13412)
!13458 = !DILocation(line: 161, column: 28, scope: !13412)
!13459 = !DILocation(line: 161, column: 51, scope: !13412)
!13460 = !DILocation(line: 161, column: 61, scope: !13412)
!13461 = !DILocation(line: 160, column: 17, scope: !13412)
!13462 = !DILocation(line: 163, column: 35, scope: !13412)
!13463 = !DILocation(line: 163, column: 41, scope: !13412)
!13464 = !DILocation(line: 163, column: 14, scope: !13412)
!13465 = !DILocation(line: 163, column: 7, scope: !13412)
!13466 = !DILocalVariable(name: "needed", scope: !13467, file: !1758, line: 168, type: !55)
!13467 = distinct !DILexicalBlock(scope: !13393, file: !1758, line: 167, column: 3)
!13468 = !DILocation(line: 168, column: 12, scope: !13467)
!13469 = !DILocation(line: 169, column: 14, scope: !13470)
!13470 = distinct !DILexicalBlock(scope: !13467, file: !1758, line: 169, column: 5)
!13471 = !DILocation(line: 169, column: 12, scope: !13470)
!13472 = !DILocation(line: 169, column: 10, scope: !13470)
!13473 = !DILocation(line: 169, column: 28, scope: !13474)
!13474 = distinct !DILexicalBlock(scope: !13470, file: !1758, line: 169, column: 5)
!13475 = !DILocation(line: 169, column: 27, scope: !13474)
!13476 = !DILocation(line: 169, column: 5, scope: !13470)
!13477 = !DILocation(line: 170, column: 19, scope: !13474)
!13478 = !DILocation(line: 170, column: 18, scope: !13474)
!13479 = !DILocation(line: 170, column: 21, scope: !13474)
!13480 = !DILocation(line: 170, column: 28, scope: !13474)
!13481 = !DILocation(line: 170, column: 32, scope: !13474)
!13482 = !DILocation(line: 170, column: 31, scope: !13474)
!13483 = !DILocation(line: 170, column: 34, scope: !13474)
!13484 = !DILocation(line: 170, column: 41, scope: !13474)
!13485 = !DILocation(line: 170, column: 45, scope: !13474)
!13486 = !DILocation(line: 170, column: 44, scope: !13474)
!13487 = !DILocation(line: 170, column: 47, scope: !13474)
!13488 = !DILocation(line: 170, column: 17, scope: !13474)
!13489 = !DILocation(line: 170, column: 14, scope: !13474)
!13490 = !DILocation(line: 170, column: 7, scope: !13474)
!13491 = !DILocation(line: 169, column: 32, scope: !13474)
!13492 = !DILocation(line: 169, column: 5, scope: !13474)
!13493 = distinct !{!13493, !13476, !13494}
!13494 = !DILocation(line: 170, column: 53, scope: !13470)
!13495 = !DILocation(line: 171, column: 20, scope: !13467)
!13496 = !DILocation(line: 171, column: 10, scope: !13467)
!13497 = !DILocation(line: 171, column: 8, scope: !13467)
!13498 = !DILocation(line: 176, column: 12, scope: !13499)
!13499 = distinct !DILexicalBlock(scope: !13393, file: !1758, line: 176, column: 3)
!13500 = !DILocation(line: 176, column: 10, scope: !13499)
!13501 = !DILocation(line: 176, column: 8, scope: !13499)
!13502 = !DILocalVariable(name: "affected", scope: !13503, file: !1758, line: 179, type: !139)
!13503 = distinct !DILexicalBlock(scope: !13504, file: !1758, line: 177, column: 5)
!13504 = distinct !DILexicalBlock(scope: !13499, file: !1758, line: 176, column: 3)
!13505 = !DILocation(line: 179, column: 14, scope: !13503)
!13506 = !DILocation(line: 182, column: 7, scope: !13503)
!13507 = !DILocation(line: 183, column: 18, scope: !13508)
!13508 = distinct !DILexicalBlock(scope: !13509, file: !1758, line: 182, column: 7)
!13509 = distinct !DILexicalBlock(scope: !13503, file: !1758, line: 182, column: 7)
!13510 = !DILocation(line: 183, column: 17, scope: !13508)
!13511 = !DILocation(line: 183, column: 9, scope: !13508)
!13512 = !DILocation(line: 186, column: 13, scope: !13513)
!13513 = distinct !DILexicalBlock(scope: !13508, file: !1758, line: 184, column: 11)
!13514 = !DILocation(line: 188, column: 22, scope: !13513)
!13515 = !DILocation(line: 189, column: 13, scope: !13513)
!13516 = !DILocation(line: 191, column: 22, scope: !13513)
!13517 = !DILocation(line: 192, column: 13, scope: !13513)
!13518 = !DILocation(line: 194, column: 22, scope: !13513)
!13519 = !DILocation(line: 195, column: 13, scope: !13513)
!13520 = !DILocation(line: 197, column: 22, scope: !13513)
!13521 = !DILocation(line: 198, column: 13, scope: !13513)
!13522 = !DILocation(line: 200, column: 13, scope: !13513)
!13523 = !DILocation(line: 201, column: 11, scope: !13513)
!13524 = !DILocation(line: 182, column: 16, scope: !13508)
!13525 = !DILocation(line: 182, column: 7, scope: !13508)
!13526 = distinct !{!13526, !13527, !13528}
!13527 = !DILocation(line: 182, column: 7, scope: !13509)
!13528 = !DILocation(line: 201, column: 11, scope: !13509)
!13529 = !DILabel(scope: !13503, name: "no_more_affected", file: !1758, line: 202)
!13530 = !DILocation(line: 202, column: 5, scope: !13503)
!13531 = !DILocation(line: 204, column: 7, scope: !13503)
!13532 = !DILocalVariable(name: "op", scope: !13533, file: !1758, line: 206, type: !10)
!13533 = distinct !DILexicalBlock(scope: !13503, file: !1758, line: 205, column: 9)
!13534 = !DILocation(line: 206, column: 16, scope: !13533)
!13535 = !DILocation(line: 206, column: 23, scope: !13533)
!13536 = !DILocation(line: 206, column: 21, scope: !13533)
!13537 = !DILocalVariable(name: "value", scope: !13533, file: !1758, line: 207, type: !139)
!13538 = !DILocation(line: 207, column: 18, scope: !13533)
!13539 = !DILocalVariable(name: "mentioned", scope: !13533, file: !1758, line: 208, type: !139)
!13540 = !DILocation(line: 208, column: 18, scope: !13533)
!13541 = !DILocalVariable(name: "flag", scope: !13533, file: !1758, line: 209, type: !10)
!13542 = !DILocation(line: 209, column: 16, scope: !13533)
!13543 = !DILocalVariable(name: "change", scope: !13533, file: !1758, line: 210, type: !1756)
!13544 = !DILocation(line: 210, column: 31, scope: !13533)
!13545 = !DILocation(line: 212, column: 20, scope: !13533)
!13546 = !DILocation(line: 212, column: 19, scope: !13533)
!13547 = !DILocation(line: 212, column: 11, scope: !13533)
!13548 = !DILocalVariable(name: "octal_mode", scope: !13549, file: !1758, line: 217, type: !70)
!13549 = distinct !DILexicalBlock(scope: !13550, file: !1758, line: 216, column: 15)
!13550 = distinct !DILexicalBlock(scope: !13533, file: !1758, line: 213, column: 13)
!13551 = !DILocation(line: 217, column: 30, scope: !13549)
!13552 = !DILocation(line: 219, column: 17, scope: !13549)
!13553 = !DILocation(line: 221, column: 38, scope: !13554)
!13554 = distinct !DILexicalBlock(scope: !13549, file: !1758, line: 220, column: 19)
!13555 = !DILocation(line: 221, column: 36, scope: !13554)
!13556 = !DILocation(line: 221, column: 53, scope: !13554)
!13557 = !DILocation(line: 221, column: 51, scope: !13554)
!13558 = !DILocation(line: 221, column: 49, scope: !13554)
!13559 = !DILocation(line: 221, column: 56, scope: !13554)
!13560 = !DILocation(line: 221, column: 32, scope: !13554)
!13561 = !DILocation(line: 222, column: 32, scope: !13562)
!13562 = distinct !DILexicalBlock(scope: !13554, file: !1758, line: 222, column: 25)
!13563 = !DILocation(line: 222, column: 30, scope: !13562)
!13564 = !DILocation(line: 222, column: 25, scope: !13554)
!13565 = !DILocation(line: 223, column: 23, scope: !13562)
!13566 = !DILocation(line: 224, column: 19, scope: !13554)
!13567 = !DILocation(line: 225, column: 32, scope: !13549)
!13568 = !DILocation(line: 225, column: 31, scope: !13549)
!13569 = !DILocation(line: 225, column: 28, scope: !13549)
!13570 = !DILocation(line: 225, column: 34, scope: !13549)
!13571 = !DILocation(line: 225, column: 38, scope: !13549)
!13572 = !DILocation(line: 225, column: 37, scope: !13549)
!13573 = !DILocation(line: 225, column: 40, scope: !13549)
!13574 = !DILocation(line: 0, scope: !13549)
!13575 = distinct !{!13575, !13552, !13576}
!13576 = !DILocation(line: 225, column: 45, scope: !13549)
!13577 = !DILocation(line: 227, column: 21, scope: !13578)
!13578 = distinct !DILexicalBlock(scope: !13549, file: !1758, line: 227, column: 21)
!13579 = !DILocation(line: 227, column: 30, scope: !13578)
!13580 = !DILocation(line: 227, column: 35, scope: !13578)
!13581 = !DILocation(line: 227, column: 34, scope: !13578)
!13582 = !DILocation(line: 227, column: 37, scope: !13578)
!13583 = !DILocation(line: 227, column: 41, scope: !13578)
!13584 = !DILocation(line: 227, column: 40, scope: !13578)
!13585 = !DILocation(line: 227, column: 43, scope: !13578)
!13586 = !DILocation(line: 227, column: 21, scope: !13549)
!13587 = !DILocation(line: 228, column: 19, scope: !13578)
!13588 = !DILocation(line: 229, column: 38, scope: !13549)
!13589 = !DILocation(line: 229, column: 26, scope: !13549)
!13590 = !DILocation(line: 230, column: 40, scope: !13549)
!13591 = !DILocation(line: 230, column: 25, scope: !13549)
!13592 = !DILocation(line: 230, column: 23, scope: !13549)
!13593 = !DILocation(line: 231, column: 22, scope: !13549)
!13594 = !DILocation(line: 232, column: 17, scope: !13549)
!13595 = !DILocation(line: 238, column: 21, scope: !13550)
!13596 = !DILocation(line: 239, column: 16, scope: !13550)
!13597 = !DILocation(line: 240, column: 15, scope: !13550)
!13598 = !DILocation(line: 244, column: 21, scope: !13550)
!13599 = !DILocation(line: 245, column: 16, scope: !13550)
!13600 = !DILocation(line: 246, column: 15, scope: !13550)
!13601 = !DILocation(line: 250, column: 21, scope: !13550)
!13602 = !DILocation(line: 251, column: 16, scope: !13550)
!13603 = !DILocation(line: 252, column: 15, scope: !13550)
!13604 = !DILocation(line: 255, column: 21, scope: !13550)
!13605 = !DILocation(line: 256, column: 20, scope: !13550)
!13606 = !DILocation(line: 258, column: 15, scope: !13550)
!13607 = !DILocation(line: 259, column: 26, scope: !13608)
!13608 = distinct !DILexicalBlock(scope: !13609, file: !1758, line: 258, column: 15)
!13609 = distinct !DILexicalBlock(scope: !13550, file: !1758, line: 258, column: 15)
!13610 = !DILocation(line: 259, column: 25, scope: !13608)
!13611 = !DILocation(line: 259, column: 17, scope: !13608)
!13612 = !DILocation(line: 262, column: 27, scope: !13613)
!13613 = distinct !DILexicalBlock(scope: !13608, file: !1758, line: 260, column: 19)
!13614 = !DILocation(line: 263, column: 21, scope: !13613)
!13615 = !DILocation(line: 265, column: 27, scope: !13613)
!13616 = !DILocation(line: 266, column: 21, scope: !13613)
!13617 = !DILocation(line: 268, column: 27, scope: !13613)
!13618 = !DILocation(line: 269, column: 21, scope: !13613)
!13619 = !DILocation(line: 271, column: 26, scope: !13613)
!13620 = !DILocation(line: 272, column: 21, scope: !13613)
!13621 = !DILocation(line: 275, column: 27, scope: !13613)
!13622 = !DILocation(line: 276, column: 21, scope: !13613)
!13623 = !DILocation(line: 279, column: 27, scope: !13613)
!13624 = !DILocation(line: 280, column: 21, scope: !13613)
!13625 = !DILocation(line: 282, column: 21, scope: !13613)
!13626 = !DILocation(line: 283, column: 19, scope: !13613)
!13627 = !DILocation(line: 258, column: 24, scope: !13608)
!13628 = !DILocation(line: 258, column: 15, scope: !13608)
!13629 = distinct !{!13629, !13630, !13631}
!13630 = !DILocation(line: 258, column: 15, scope: !13609)
!13631 = !DILocation(line: 283, column: 19, scope: !13609)
!13632 = !DILabel(scope: !13550, name: "no_more_values", file: !1758, line: 284)
!13633 = !DILocation(line: 284, column: 13, scope: !13550)
!13634 = !DILocation(line: 285, column: 13, scope: !13550)
!13635 = !DILocation(line: 287, column: 21, scope: !13533)
!13636 = !DILocation(line: 287, column: 28, scope: !13533)
!13637 = !DILocation(line: 287, column: 18, scope: !13533)
!13638 = !DILocation(line: 288, column: 24, scope: !13533)
!13639 = !DILocation(line: 288, column: 11, scope: !13533)
!13640 = !DILocation(line: 288, column: 19, scope: !13533)
!13641 = !DILocation(line: 288, column: 22, scope: !13533)
!13642 = !{!13643, !2637, i64 0}
!13643 = !{!"mode_change", !2637, i64 0, !2637, i64 1, !2636, i64 4, !2636, i64 8, !2636, i64 12}
!13644 = !DILocation(line: 289, column: 26, scope: !13533)
!13645 = !DILocation(line: 289, column: 11, scope: !13533)
!13646 = !DILocation(line: 289, column: 19, scope: !13533)
!13647 = !DILocation(line: 289, column: 24, scope: !13533)
!13648 = !{!13643, !2637, i64 1}
!13649 = !DILocation(line: 290, column: 30, scope: !13533)
!13650 = !DILocation(line: 290, column: 11, scope: !13533)
!13651 = !DILocation(line: 290, column: 19, scope: !13533)
!13652 = !DILocation(line: 290, column: 28, scope: !13533)
!13653 = !{!13643, !2636, i64 4}
!13654 = !DILocation(line: 291, column: 27, scope: !13533)
!13655 = !DILocation(line: 291, column: 11, scope: !13533)
!13656 = !DILocation(line: 291, column: 19, scope: !13533)
!13657 = !DILocation(line: 291, column: 25, scope: !13533)
!13658 = !{!13643, !2636, i64 8}
!13659 = !DILocation(line: 293, column: 14, scope: !13533)
!13660 = !DILocation(line: 293, column: 26, scope: !13533)
!13661 = !DILocation(line: 293, column: 38, scope: !13533)
!13662 = !DILocation(line: 293, column: 49, scope: !13533)
!13663 = !DILocation(line: 293, column: 60, scope: !13533)
!13664 = !DILocation(line: 293, column: 58, scope: !13533)
!13665 = !DILocation(line: 293, column: 68, scope: !13533)
!13666 = !DILocation(line: 292, column: 11, scope: !13533)
!13667 = !DILocation(line: 292, column: 19, scope: !13533)
!13668 = !DILocation(line: 292, column: 29, scope: !13533)
!13669 = !{!13643, !2636, i64 12}
!13670 = !DILocation(line: 294, column: 9, scope: !13533)
!13671 = !DILocation(line: 295, column: 15, scope: !13503)
!13672 = !DILocation(line: 295, column: 14, scope: !13503)
!13673 = !DILocation(line: 295, column: 17, scope: !13503)
!13674 = !DILocation(line: 295, column: 24, scope: !13503)
!13675 = !DILocation(line: 295, column: 28, scope: !13503)
!13676 = !DILocation(line: 295, column: 27, scope: !13503)
!13677 = !DILocation(line: 295, column: 30, scope: !13503)
!13678 = !DILocation(line: 295, column: 37, scope: !13503)
!13679 = !DILocation(line: 295, column: 41, scope: !13503)
!13680 = !DILocation(line: 295, column: 40, scope: !13503)
!13681 = !DILocation(line: 295, column: 43, scope: !13503)
!13682 = distinct !{!13682, !13531, !13683}
!13683 = !DILocation(line: 295, column: 49, scope: !13503)
!13684 = !DILocation(line: 297, column: 12, scope: !13685)
!13685 = distinct !DILexicalBlock(scope: !13503, file: !1758, line: 297, column: 11)
!13686 = !DILocation(line: 297, column: 11, scope: !13685)
!13687 = !DILocation(line: 297, column: 14, scope: !13685)
!13688 = !DILocation(line: 297, column: 11, scope: !13503)
!13689 = !DILocation(line: 298, column: 9, scope: !13685)
!13690 = !DILocation(line: 299, column: 5, scope: !13503)
!13691 = !DILocation(line: 176, column: 28, scope: !13504)
!13692 = !DILocation(line: 176, column: 3, scope: !13504)
!13693 = distinct !{!13693, !13694, !13695}
!13694 = !DILocation(line: 176, column: 3, scope: !13499)
!13695 = !DILocation(line: 299, column: 5, scope: !13499)
!13696 = !DILocation(line: 301, column: 8, scope: !13697)
!13697 = distinct !DILexicalBlock(scope: !13393, file: !1758, line: 301, column: 7)
!13698 = !DILocation(line: 301, column: 7, scope: !13697)
!13699 = !DILocation(line: 301, column: 10, scope: !13697)
!13700 = !DILocation(line: 301, column: 7, scope: !13393)
!13701 = !DILocation(line: 303, column: 7, scope: !13702)
!13702 = distinct !DILexicalBlock(scope: !13697, file: !1758, line: 302, column: 5)
!13703 = !DILocation(line: 303, column: 10, scope: !13702)
!13704 = !DILocation(line: 303, column: 16, scope: !13702)
!13705 = !DILocation(line: 303, column: 21, scope: !13702)
!13706 = !DILocation(line: 304, column: 14, scope: !13702)
!13707 = !DILocation(line: 304, column: 7, scope: !13702)
!13708 = !DILocation(line: 301, column: 13, scope: !13697)
!13709 = !DILabel(scope: !13393, name: "invalid", file: !1758, line: 307)
!13710 = !DILocation(line: 307, column: 1, scope: !13393)
!13711 = !DILocation(line: 308, column: 9, scope: !13393)
!13712 = !DILocation(line: 308, column: 3, scope: !13393)
!13713 = !DILocation(line: 309, column: 3, scope: !13393)
!13714 = !DILocation(line: 310, column: 1, scope: !13393)
!13715 = distinct !DISubprogram(name: "octal_to_mode", scope: !1758, file: !1758, line: 54, type: !1770, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1751, retainedNodes: !209)
!13716 = !DILocalVariable(name: "octal", arg: 1, scope: !13715, file: !1758, line: 54, type: !70)
!13717 = !DILocation(line: 54, column: 29, scope: !13715)
!13718 = !DILocation(line: 62, column: 13, scope: !13715)
!13719 = !DILocation(line: 58, column: 3, scope: !13715)
!13720 = distinct !DISubprogram(name: "make_node_op_equals", scope: !1758, file: !1758, line: 112, type: !1772, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1751, retainedNodes: !209)
!13721 = !DILocalVariable(name: "new_mode", arg: 1, scope: !13720, file: !1758, line: 112, type: !139)
!13722 = !DILocation(line: 112, column: 29, scope: !13720)
!13723 = !DILocalVariable(name: "mentioned", arg: 2, scope: !13720, file: !1758, line: 112, type: !139)
!13724 = !DILocation(line: 112, column: 46, scope: !13720)
!13725 = !DILocalVariable(name: "p", scope: !13720, file: !1758, line: 114, type: !1756)
!13726 = !DILocation(line: 114, column: 23, scope: !13720)
!13727 = !DILocation(line: 114, column: 27, scope: !13720)
!13728 = !DILocation(line: 115, column: 3, scope: !13720)
!13729 = !DILocation(line: 115, column: 6, scope: !13720)
!13730 = !DILocation(line: 115, column: 9, scope: !13720)
!13731 = !DILocation(line: 116, column: 3, scope: !13720)
!13732 = !DILocation(line: 116, column: 6, scope: !13720)
!13733 = !DILocation(line: 116, column: 11, scope: !13720)
!13734 = !DILocation(line: 117, column: 3, scope: !13720)
!13735 = !DILocation(line: 117, column: 6, scope: !13720)
!13736 = !DILocation(line: 117, column: 15, scope: !13720)
!13737 = !DILocation(line: 118, column: 14, scope: !13720)
!13738 = !DILocation(line: 118, column: 3, scope: !13720)
!13739 = !DILocation(line: 118, column: 6, scope: !13720)
!13740 = !DILocation(line: 118, column: 12, scope: !13720)
!13741 = !DILocation(line: 119, column: 18, scope: !13720)
!13742 = !DILocation(line: 119, column: 3, scope: !13720)
!13743 = !DILocation(line: 119, column: 6, scope: !13720)
!13744 = !DILocation(line: 119, column: 16, scope: !13720)
!13745 = !DILocation(line: 120, column: 3, scope: !13720)
!13746 = !DILocation(line: 120, column: 8, scope: !13720)
!13747 = !DILocation(line: 120, column: 13, scope: !13720)
!13748 = !DILocation(line: 121, column: 10, scope: !13720)
!13749 = !DILocation(line: 121, column: 3, scope: !13720)
!13750 = distinct !DISubprogram(name: "mode_create_from_ref", scope: !1758, file: !1758, line: 316, type: !1754, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1751, retainedNodes: !209)
!13751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !271, line: 46, size: 1152, elements: !13752)
!13752 = !{!13753, !13754, !13755, !13756, !13757, !13758, !13759, !13760, !13761, !13762, !13763, !13764, !13769, !13770, !13771}
!13753 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !13751, file: !271, line: 48, baseType: !274, size: 64)
!13754 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !13751, file: !271, line: 53, baseType: !276, size: 64, offset: 64)
!13755 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !13751, file: !271, line: 61, baseType: !278, size: 64, offset: 128)
!13756 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !13751, file: !271, line: 62, baseType: !140, size: 32, offset: 192)
!13757 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !13751, file: !271, line: 64, baseType: !128, size: 32, offset: 224)
!13758 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !13751, file: !271, line: 65, baseType: !130, size: 32, offset: 256)
!13759 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !13751, file: !271, line: 67, baseType: !7, size: 32, offset: 288)
!13760 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !13751, file: !271, line: 69, baseType: !274, size: 64, offset: 320)
!13761 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !13751, file: !271, line: 74, baseType: !29, size: 64, offset: 384)
!13762 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !13751, file: !271, line: 78, baseType: !286, size: 64, offset: 448)
!13763 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !13751, file: !271, line: 80, baseType: !288, size: 64, offset: 512)
!13764 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !13751, file: !271, line: 91, baseType: !13765, size: 128, offset: 576)
!13765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !291, line: 9, size: 128, elements: !13766)
!13766 = !{!13767, !13768}
!13767 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !13765, file: !291, line: 11, baseType: !294, size: 64)
!13768 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !13765, file: !291, line: 12, baseType: !296, size: 64, offset: 64)
!13769 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !13751, file: !271, line: 92, baseType: !13765, size: 128, offset: 704)
!13770 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !13751, file: !271, line: 93, baseType: !13765, size: 128, offset: 832)
!13771 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !13751, file: !271, line: 106, baseType: !300, size: 192, offset: 960)
!13772 = !DILocalVariable(name: "ref_file", arg: 1, scope: !13750, file: !1758, line: 316, type: !180)
!13773 = !DILocation(line: 316, column: 35, scope: !13750)
!13774 = !DILocalVariable(name: "ref_stats", scope: !13750, file: !1758, line: 318, type: !13751)
!13775 = !DILocation(line: 318, column: 15, scope: !13750)
!13776 = !DILocation(line: 320, column: 13, scope: !13777)
!13777 = distinct !DILexicalBlock(scope: !13750, file: !1758, line: 320, column: 7)
!13778 = !DILocation(line: 320, column: 7, scope: !13777)
!13779 = !DILocation(line: 320, column: 35, scope: !13777)
!13780 = !DILocation(line: 320, column: 7, scope: !13750)
!13781 = !DILocation(line: 321, column: 5, scope: !13777)
!13782 = !DILocation(line: 322, column: 41, scope: !13750)
!13783 = !DILocation(line: 322, column: 10, scope: !13750)
!13784 = !DILocation(line: 322, column: 3, scope: !13750)
!13785 = !DILocation(line: 323, column: 1, scope: !13750)
!13786 = distinct !DISubprogram(name: "mode_adjust", scope: !1758, file: !1758, line: 339, type: !1765, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1751, retainedNodes: !209)
!13787 = !DILocalVariable(name: "oldmode", arg: 1, scope: !13786, file: !1758, line: 339, type: !139)
!13788 = !DILocation(line: 339, column: 21, scope: !13786)
!13789 = !DILocalVariable(name: "dir", arg: 2, scope: !13786, file: !1758, line: 339, type: !142)
!13790 = !DILocation(line: 339, column: 35, scope: !13786)
!13791 = !DILocalVariable(name: "umask_value", arg: 3, scope: !13786, file: !1758, line: 339, type: !139)
!13792 = !DILocation(line: 339, column: 47, scope: !13786)
!13793 = !DILocalVariable(name: "changes", arg: 4, scope: !13786, file: !1758, line: 340, type: !1767)
!13794 = !DILocation(line: 340, column: 40, scope: !13786)
!13795 = !DILocalVariable(name: "pmode_bits", arg: 5, scope: !13786, file: !1758, line: 340, type: !1769)
!13796 = !DILocation(line: 340, column: 57, scope: !13786)
!13797 = !DILocalVariable(name: "newmode", scope: !13786, file: !1758, line: 343, type: !139)
!13798 = !DILocation(line: 343, column: 10, scope: !13786)
!13799 = !DILocation(line: 343, column: 20, scope: !13786)
!13800 = !DILocation(line: 343, column: 28, scope: !13786)
!13801 = !DILocalVariable(name: "mode_bits", scope: !13786, file: !1758, line: 346, type: !139)
!13802 = !DILocation(line: 346, column: 10, scope: !13786)
!13803 = !DILocation(line: 348, column: 3, scope: !13786)
!13804 = !DILocation(line: 348, column: 10, scope: !13805)
!13805 = distinct !DILexicalBlock(scope: !13806, file: !1758, line: 348, column: 3)
!13806 = distinct !DILexicalBlock(scope: !13786, file: !1758, line: 348, column: 3)
!13807 = !DILocation(line: 348, column: 19, scope: !13805)
!13808 = !DILocation(line: 348, column: 24, scope: !13805)
!13809 = !DILocation(line: 348, column: 3, scope: !13806)
!13810 = !DILocalVariable(name: "affected", scope: !13811, file: !1758, line: 350, type: !139)
!13811 = distinct !DILexicalBlock(scope: !13805, file: !1758, line: 349, column: 5)
!13812 = !DILocation(line: 350, column: 14, scope: !13811)
!13813 = !DILocation(line: 350, column: 25, scope: !13811)
!13814 = !DILocation(line: 350, column: 34, scope: !13811)
!13815 = !DILocalVariable(name: "omit_change", scope: !13811, file: !1758, line: 351, type: !139)
!13816 = !DILocation(line: 351, column: 14, scope: !13811)
!13817 = !DILocation(line: 352, column: 10, scope: !13811)
!13818 = !DILocation(line: 352, column: 43, scope: !13811)
!13819 = !DILocation(line: 352, column: 52, scope: !13811)
!13820 = !DILocation(line: 352, column: 41, scope: !13811)
!13821 = !DILocation(line: 352, column: 39, scope: !13811)
!13822 = !DILocalVariable(name: "value", scope: !13811, file: !1758, line: 353, type: !139)
!13823 = !DILocation(line: 353, column: 14, scope: !13811)
!13824 = !DILocation(line: 353, column: 22, scope: !13811)
!13825 = !DILocation(line: 353, column: 31, scope: !13811)
!13826 = !DILocation(line: 355, column: 15, scope: !13811)
!13827 = !DILocation(line: 355, column: 24, scope: !13811)
!13828 = !DILocation(line: 355, column: 7, scope: !13811)
!13829 = !DILocation(line: 358, column: 11, scope: !13830)
!13830 = distinct !DILexicalBlock(scope: !13811, file: !1758, line: 356, column: 9)
!13831 = !DILocation(line: 362, column: 20, scope: !13830)
!13832 = !DILocation(line: 362, column: 17, scope: !13830)
!13833 = !DILocation(line: 365, column: 22, scope: !13830)
!13834 = !DILocation(line: 365, column: 28, scope: !13830)
!13835 = !DILocation(line: 367, column: 24, scope: !13830)
!13836 = !DILocation(line: 367, column: 30, scope: !13830)
!13837 = !DILocation(line: 367, column: 21, scope: !13830)
!13838 = !DILocation(line: 369, column: 24, scope: !13830)
!13839 = !DILocation(line: 369, column: 30, scope: !13830)
!13840 = !DILocation(line: 369, column: 21, scope: !13830)
!13841 = !DILocation(line: 365, column: 17, scope: !13830)
!13842 = !DILocation(line: 371, column: 11, scope: !13830)
!13843 = !DILocation(line: 376, column: 16, scope: !13844)
!13844 = distinct !DILexicalBlock(scope: !13830, file: !1758, line: 376, column: 15)
!13845 = !DILocation(line: 376, column: 24, scope: !13844)
!13846 = !DILocation(line: 376, column: 59, scope: !13844)
!13847 = !DILocation(line: 376, column: 57, scope: !13844)
!13848 = !DILocation(line: 376, column: 15, scope: !13830)
!13849 = !DILocation(line: 377, column: 19, scope: !13844)
!13850 = !DILocation(line: 377, column: 13, scope: !13844)
!13851 = !DILocation(line: 378, column: 11, scope: !13830)
!13852 = !DILocation(line: 384, column: 17, scope: !13811)
!13853 = !DILocation(line: 384, column: 28, scope: !13811)
!13854 = !DILocation(line: 384, column: 40, scope: !13811)
!13855 = !DILocation(line: 384, column: 39, scope: !13811)
!13856 = !DILocation(line: 384, column: 57, scope: !13811)
!13857 = !DILocation(line: 384, column: 55, scope: !13811)
!13858 = !DILocation(line: 384, column: 53, scope: !13811)
!13859 = !DILocation(line: 384, column: 13, scope: !13811)
!13860 = !DILocation(line: 386, column: 15, scope: !13811)
!13861 = !DILocation(line: 386, column: 24, scope: !13811)
!13862 = !DILocation(line: 386, column: 7, scope: !13811)
!13863 = !DILocalVariable(name: "preserved", scope: !13864, file: !1758, line: 393, type: !139)
!13864 = distinct !DILexicalBlock(scope: !13865, file: !1758, line: 392, column: 11)
!13865 = distinct !DILexicalBlock(scope: !13811, file: !1758, line: 387, column: 9)
!13866 = !DILocation(line: 393, column: 20, scope: !13864)
!13867 = !DILocation(line: 393, column: 33, scope: !13864)
!13868 = !DILocation(line: 393, column: 45, scope: !13864)
!13869 = !DILocation(line: 393, column: 44, scope: !13864)
!13870 = !DILocation(line: 393, column: 61, scope: !13864)
!13871 = !DILocation(line: 393, column: 59, scope: !13864)
!13872 = !DILocation(line: 394, column: 45, scope: !13864)
!13873 = !DILocation(line: 394, column: 44, scope: !13864)
!13874 = !DILocation(line: 394, column: 42, scope: !13864)
!13875 = !DILocation(line: 394, column: 23, scope: !13864)
!13876 = !DILocation(line: 395, column: 24, scope: !13864)
!13877 = !DILocation(line: 395, column: 34, scope: !13864)
!13878 = !DILocation(line: 395, column: 32, scope: !13864)
!13879 = !DILocation(line: 395, column: 47, scope: !13864)
!13880 = !DILocation(line: 395, column: 45, scope: !13864)
!13881 = !DILocation(line: 395, column: 21, scope: !13864)
!13882 = !DILocation(line: 396, column: 13, scope: !13864)
!13883 = !DILocation(line: 400, column: 24, scope: !13865)
!13884 = !DILocation(line: 400, column: 21, scope: !13865)
!13885 = !DILocation(line: 401, column: 22, scope: !13865)
!13886 = !DILocation(line: 401, column: 19, scope: !13865)
!13887 = !DILocation(line: 402, column: 11, scope: !13865)
!13888 = !DILocation(line: 405, column: 24, scope: !13865)
!13889 = !DILocation(line: 405, column: 21, scope: !13865)
!13890 = !DILocation(line: 406, column: 23, scope: !13865)
!13891 = !DILocation(line: 406, column: 22, scope: !13865)
!13892 = !DILocation(line: 406, column: 19, scope: !13865)
!13893 = !DILocation(line: 407, column: 11, scope: !13865)
!13894 = !DILocation(line: 409, column: 5, scope: !13811)
!13895 = !DILocation(line: 348, column: 45, scope: !13805)
!13896 = !DILocation(line: 348, column: 3, scope: !13805)
!13897 = distinct !{!13897, !13809, !13898}
!13898 = !DILocation(line: 409, column: 5, scope: !13806)
!13899 = !DILocation(line: 411, column: 7, scope: !13900)
!13900 = distinct !DILexicalBlock(scope: !13786, file: !1758, line: 411, column: 7)
!13901 = !DILocation(line: 411, column: 7, scope: !13786)
!13902 = !DILocation(line: 412, column: 19, scope: !13900)
!13903 = !DILocation(line: 412, column: 6, scope: !13900)
!13904 = !DILocation(line: 412, column: 17, scope: !13900)
!13905 = !DILocation(line: 412, column: 5, scope: !13900)
!13906 = !DILocation(line: 413, column: 10, scope: !13786)
!13907 = !DILocation(line: 413, column: 3, scope: !13786)
!13908 = distinct !DISubprogram(name: "opendirat", scope: !13909, file: !13909, line: 36, type: !1777, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1774, retainedNodes: !209)
!13909 = !DIFile(filename: "lib/opendirat.c", directory: "/home/mbarbar/clone/coreutils")
!13910 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !13908, file: !13909, line: 36, type: !7)
!13911 = !DILocation(line: 36, column: 16, scope: !13908)
!13912 = !DILocalVariable(name: "dir", arg: 2, scope: !13908, file: !13909, line: 36, type: !180)
!13913 = !DILocation(line: 36, column: 36, scope: !13908)
!13914 = !DILocalVariable(name: "extra_flags", arg: 3, scope: !13908, file: !13909, line: 36, type: !7)
!13915 = !DILocation(line: 36, column: 45, scope: !13908)
!13916 = !DILocalVariable(name: "pnew_fd", arg: 4, scope: !13908, file: !13909, line: 36, type: !193)
!13917 = !DILocation(line: 36, column: 63, scope: !13908)
!13918 = !DILocalVariable(name: "open_flags", scope: !13908, file: !13909, line: 38, type: !7)
!13919 = !DILocation(line: 38, column: 7, scope: !13908)
!13920 = !DILocation(line: 39, column: 36, scope: !13908)
!13921 = !DILocation(line: 39, column: 34, scope: !13908)
!13922 = !DILocalVariable(name: "new_fd", scope: !13908, file: !13909, line: 40, type: !7)
!13923 = !DILocation(line: 40, column: 7, scope: !13908)
!13924 = !DILocation(line: 40, column: 24, scope: !13908)
!13925 = !DILocation(line: 40, column: 32, scope: !13908)
!13926 = !DILocation(line: 40, column: 37, scope: !13908)
!13927 = !DILocation(line: 40, column: 16, scope: !13908)
!13928 = !DILocation(line: 42, column: 7, scope: !13929)
!13929 = distinct !DILexicalBlock(scope: !13908, file: !13909, line: 42, column: 7)
!13930 = !DILocation(line: 42, column: 14, scope: !13929)
!13931 = !DILocation(line: 42, column: 7, scope: !13908)
!13932 = !DILocation(line: 43, column: 5, scope: !13929)
!13933 = !DILocalVariable(name: "dirp", scope: !13908, file: !13909, line: 44, type: !695)
!13934 = !DILocation(line: 44, column: 8, scope: !13908)
!13935 = !DILocation(line: 44, column: 26, scope: !13908)
!13936 = !DILocation(line: 44, column: 15, scope: !13908)
!13937 = !DILocation(line: 45, column: 7, scope: !13938)
!13938 = distinct !DILexicalBlock(scope: !13908, file: !13909, line: 45, column: 7)
!13939 = !DILocation(line: 45, column: 7, scope: !13908)
!13940 = !DILocation(line: 46, column: 16, scope: !13938)
!13941 = !DILocation(line: 46, column: 6, scope: !13938)
!13942 = !DILocation(line: 46, column: 14, scope: !13938)
!13943 = !DILocation(line: 46, column: 5, scope: !13938)
!13944 = !DILocalVariable(name: "fdopendir_errno", scope: !13945, file: !13909, line: 49, type: !7)
!13945 = distinct !DILexicalBlock(scope: !13938, file: !13909, line: 48, column: 5)
!13946 = !DILocation(line: 49, column: 11, scope: !13945)
!13947 = !DILocation(line: 49, column: 29, scope: !13945)
!13948 = !DILocation(line: 50, column: 14, scope: !13945)
!13949 = !DILocation(line: 50, column: 7, scope: !13945)
!13950 = !DILocation(line: 51, column: 15, scope: !13945)
!13951 = !DILocation(line: 51, column: 7, scope: !13945)
!13952 = !DILocation(line: 51, column: 13, scope: !13945)
!13953 = !DILocation(line: 53, column: 10, scope: !13908)
!13954 = !DILocation(line: 53, column: 3, scope: !13908)
!13955 = !DILocation(line: 54, column: 1, scope: !13908)
!13956 = distinct !DISubprogram(name: "set_program_name", scope: !1008, file: !1008, line: 39, type: !202, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !970, retainedNodes: !209)
!13957 = !DILocalVariable(name: "argv0", arg: 1, scope: !13956, file: !1008, line: 39, type: !180)
!13958 = !DILocation(line: 39, column: 31, scope: !13956)
!13959 = !DILocalVariable(name: "slash", scope: !13956, file: !1008, line: 46, type: !180)
!13960 = !DILocation(line: 46, column: 15, scope: !13956)
!13961 = !DILocalVariable(name: "base", scope: !13956, file: !1008, line: 47, type: !180)
!13962 = !DILocation(line: 47, column: 15, scope: !13956)
!13963 = !DILocation(line: 51, column: 7, scope: !13964)
!13964 = distinct !DILexicalBlock(scope: !13956, file: !1008, line: 51, column: 7)
!13965 = !DILocation(line: 51, column: 13, scope: !13964)
!13966 = !DILocation(line: 51, column: 7, scope: !13956)
!13967 = !DILocation(line: 55, column: 14, scope: !13968)
!13968 = distinct !DILexicalBlock(scope: !13964, file: !1008, line: 52, column: 5)
!13969 = !DILocation(line: 54, column: 7, scope: !13968)
!13970 = !DILocation(line: 56, column: 7, scope: !13968)
!13971 = !DILocation(line: 59, column: 20, scope: !13956)
!13972 = !DILocation(line: 59, column: 11, scope: !13956)
!13973 = !DILocation(line: 59, column: 9, scope: !13956)
!13974 = !DILocation(line: 60, column: 11, scope: !13956)
!13975 = !DILocation(line: 60, column: 17, scope: !13956)
!13976 = !DILocation(line: 60, column: 27, scope: !13956)
!13977 = !DILocation(line: 60, column: 33, scope: !13956)
!13978 = !DILocation(line: 60, column: 39, scope: !13956)
!13979 = !DILocation(line: 60, column: 8, scope: !13956)
!13980 = !DILocation(line: 61, column: 7, scope: !13981)
!13981 = distinct !DILexicalBlock(scope: !13956, file: !1008, line: 61, column: 7)
!13982 = !DILocation(line: 61, column: 14, scope: !13981)
!13983 = !DILocation(line: 61, column: 12, scope: !13981)
!13984 = !DILocation(line: 61, column: 20, scope: !13981)
!13985 = !DILocation(line: 61, column: 25, scope: !13981)
!13986 = !DILocation(line: 61, column: 37, scope: !13981)
!13987 = !DILocation(line: 61, column: 42, scope: !13981)
!13988 = !DILocation(line: 61, column: 28, scope: !13981)
!13989 = !DILocation(line: 61, column: 61, scope: !13981)
!13990 = !DILocation(line: 61, column: 7, scope: !13956)
!13991 = !DILocation(line: 63, column: 15, scope: !13992)
!13992 = distinct !DILexicalBlock(scope: !13981, file: !1008, line: 62, column: 5)
!13993 = !DILocation(line: 63, column: 13, scope: !13992)
!13994 = !DILocation(line: 64, column: 20, scope: !13995)
!13995 = distinct !DILexicalBlock(scope: !13992, file: !1008, line: 64, column: 11)
!13996 = !DILocation(line: 64, column: 11, scope: !13995)
!13997 = !DILocation(line: 64, column: 36, scope: !13995)
!13998 = !DILocation(line: 64, column: 11, scope: !13992)
!13999 = !DILocation(line: 66, column: 19, scope: !14000)
!14000 = distinct !DILexicalBlock(scope: !13995, file: !1008, line: 65, column: 9)
!14001 = !DILocation(line: 66, column: 24, scope: !14000)
!14002 = !DILocation(line: 66, column: 17, scope: !14000)
!14003 = !DILocation(line: 70, column: 52, scope: !14000)
!14004 = !DILocation(line: 70, column: 41, scope: !14000)
!14005 = !DILocation(line: 72, column: 9, scope: !14000)
!14006 = !DILocation(line: 73, column: 5, scope: !13992)
!14007 = !DILocation(line: 84, column: 18, scope: !13956)
!14008 = !DILocation(line: 84, column: 16, scope: !13956)
!14009 = !DILocation(line: 90, column: 38, scope: !13956)
!14010 = !DILocation(line: 90, column: 27, scope: !13956)
!14011 = !DILocation(line: 92, column: 1, scope: !13956)
!14012 = distinct !DISubprogram(name: "qcopy_acl", scope: !14013, file: !14013, line: 39, type: !1516, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1779, retainedNodes: !209)
!14013 = !DIFile(filename: "lib/qcopy-acl.c", directory: "/home/mbarbar/clone/coreutils")
!14014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !2250, line: 260, size: 256, elements: !14015)
!14015 = !{!14016, !14017, !14018, !14019}
!14016 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !14014, file: !2250, line: 261, baseType: !139, size: 32)
!14017 = !DIDerivedType(tag: DW_TAG_member, name: "acl", scope: !14014, file: !2250, line: 264, baseType: !2238, size: 64, offset: 64)
!14018 = !DIDerivedType(tag: DW_TAG_member, name: "default_acl", scope: !14014, file: !2250, line: 266, baseType: !2238, size: 64, offset: 128)
!14019 = !DIDerivedType(tag: DW_TAG_member, name: "acls_not_supported", scope: !14014, file: !2250, line: 268, baseType: !142, size: 8, offset: 192)
!14020 = !DILocalVariable(name: "src_name", arg: 1, scope: !14012, file: !14013, line: 39, type: !180)
!14021 = !DILocation(line: 39, column: 24, scope: !14012)
!14022 = !DILocalVariable(name: "source_desc", arg: 2, scope: !14012, file: !14013, line: 39, type: !7)
!14023 = !DILocation(line: 39, column: 38, scope: !14012)
!14024 = !DILocalVariable(name: "dst_name", arg: 3, scope: !14012, file: !14013, line: 39, type: !180)
!14025 = !DILocation(line: 39, column: 63, scope: !14012)
!14026 = !DILocalVariable(name: "dest_desc", arg: 4, scope: !14012, file: !14013, line: 40, type: !7)
!14027 = !DILocation(line: 40, column: 16, scope: !14012)
!14028 = !DILocalVariable(name: "mode", arg: 5, scope: !14012, file: !14013, line: 40, type: !139)
!14029 = !DILocation(line: 40, column: 34, scope: !14012)
!14030 = !DILocalVariable(name: "ctx", scope: !14012, file: !14013, line: 42, type: !14014)
!14031 = !DILocation(line: 42, column: 29, scope: !14012)
!14032 = !DILocalVariable(name: "ret", scope: !14012, file: !14013, line: 43, type: !7)
!14033 = !DILocation(line: 43, column: 7, scope: !14012)
!14034 = !DILocation(line: 45, column: 26, scope: !14012)
!14035 = !DILocation(line: 45, column: 36, scope: !14012)
!14036 = !DILocation(line: 45, column: 49, scope: !14012)
!14037 = !DILocation(line: 45, column: 9, scope: !14012)
!14038 = !DILocation(line: 45, column: 7, scope: !14012)
!14039 = !DILocation(line: 46, column: 7, scope: !14040)
!14040 = distinct !DILexicalBlock(scope: !14012, file: !14013, line: 46, column: 7)
!14041 = !DILocation(line: 46, column: 11, scope: !14040)
!14042 = !DILocation(line: 46, column: 7, scope: !14012)
!14043 = !DILocation(line: 47, column: 5, scope: !14040)
!14044 = !DILocation(line: 48, column: 32, scope: !14012)
!14045 = !DILocation(line: 48, column: 42, scope: !14012)
!14046 = !DILocation(line: 48, column: 9, scope: !14012)
!14047 = !DILocation(line: 48, column: 7, scope: !14012)
!14048 = !DILocation(line: 49, column: 3, scope: !14012)
!14049 = !DILocation(line: 50, column: 10, scope: !14012)
!14050 = !DILocation(line: 50, column: 3, scope: !14012)
!14051 = !DILocation(line: 51, column: 1, scope: !14012)
!14052 = distinct !DISubprogram(name: "qset_acl", scope: !14053, file: !14053, line: 39, type: !1521, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1781, retainedNodes: !209)
!14053 = !DIFile(filename: "lib/qset-acl.c", directory: "/home/mbarbar/clone/coreutils")
!14054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !2250, line: 260, size: 256, elements: !14055)
!14055 = !{!14056, !14057, !14058, !14059}
!14056 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !14054, file: !2250, line: 261, baseType: !139, size: 32)
!14057 = !DIDerivedType(tag: DW_TAG_member, name: "acl", scope: !14054, file: !2250, line: 264, baseType: !2238, size: 64, offset: 64)
!14058 = !DIDerivedType(tag: DW_TAG_member, name: "default_acl", scope: !14054, file: !2250, line: 266, baseType: !2238, size: 64, offset: 128)
!14059 = !DIDerivedType(tag: DW_TAG_member, name: "acls_not_supported", scope: !14054, file: !2250, line: 268, baseType: !142, size: 8, offset: 192)
!14060 = !DILocalVariable(name: "name", arg: 1, scope: !14052, file: !14053, line: 39, type: !180)
!14061 = !DILocation(line: 39, column: 23, scope: !14052)
!14062 = !DILocalVariable(name: "desc", arg: 2, scope: !14052, file: !14053, line: 39, type: !7)
!14063 = !DILocation(line: 39, column: 33, scope: !14052)
!14064 = !DILocalVariable(name: "mode", arg: 3, scope: !14052, file: !14053, line: 39, type: !139)
!14065 = !DILocation(line: 39, column: 46, scope: !14052)
!14066 = !DILocalVariable(name: "ctx", scope: !14052, file: !14053, line: 41, type: !14054)
!14067 = !DILocation(line: 41, column: 29, scope: !14052)
!14068 = !DILocalVariable(name: "ret", scope: !14052, file: !14053, line: 42, type: !7)
!14069 = !DILocation(line: 42, column: 7, scope: !14052)
!14070 = !DILocation(line: 44, column: 3, scope: !14052)
!14071 = !DILocation(line: 45, column: 14, scope: !14052)
!14072 = !DILocation(line: 45, column: 7, scope: !14052)
!14073 = !DILocation(line: 45, column: 12, scope: !14052)
!14074 = !{!14075, !2636, i64 0}
!14075 = !{!"permission_context", !2636, i64 0, !2649, i64 8, !2649, i64 16, !2743, i64 24}
!14076 = !DILocation(line: 46, column: 32, scope: !14052)
!14077 = !DILocation(line: 46, column: 38, scope: !14052)
!14078 = !DILocation(line: 46, column: 9, scope: !14052)
!14079 = !DILocation(line: 46, column: 7, scope: !14052)
!14080 = !DILocation(line: 47, column: 3, scope: !14052)
!14081 = !DILocation(line: 48, column: 10, scope: !14052)
!14082 = !DILocation(line: 48, column: 3, scope: !14052)
!14083 = distinct !DISubprogram(name: "clone_quoting_options", scope: !1040, file: !1040, line: 122, type: !1036, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1011, retainedNodes: !209)
!14084 = !DILocalVariable(name: "o", arg: 1, scope: !14083, file: !1040, line: 122, type: !1038)
!14085 = !DILocation(line: 122, column: 48, scope: !14083)
!14086 = !DILocalVariable(name: "e", scope: !14083, file: !1040, line: 124, type: !7)
!14087 = !DILocation(line: 124, column: 7, scope: !14083)
!14088 = !DILocation(line: 124, column: 11, scope: !14083)
!14089 = !DILocalVariable(name: "p", scope: !14083, file: !1040, line: 125, type: !1038)
!14090 = !DILocation(line: 125, column: 27, scope: !14083)
!14091 = !DILocation(line: 125, column: 40, scope: !14083)
!14092 = !DILocation(line: 125, column: 44, scope: !14083)
!14093 = !DILocation(line: 125, column: 31, scope: !14083)
!14094 = !DILocation(line: 127, column: 11, scope: !14083)
!14095 = !DILocation(line: 127, column: 3, scope: !14083)
!14096 = !DILocation(line: 127, column: 9, scope: !14083)
!14097 = !DILocation(line: 128, column: 10, scope: !14083)
!14098 = !DILocation(line: 128, column: 3, scope: !14083)
!14099 = distinct !DISubprogram(name: "get_quoting_style", scope: !1040, file: !1040, line: 133, type: !1048, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1011, retainedNodes: !209)
!14100 = !DILocalVariable(name: "o", arg: 1, scope: !14099, file: !1040, line: 133, type: !1050)
!14101 = !DILocation(line: 133, column: 50, scope: !14099)
!14102 = !DILocation(line: 135, column: 11, scope: !14099)
!14103 = !DILocation(line: 135, column: 15, scope: !14099)
!14104 = !DILocation(line: 135, column: 46, scope: !14099)
!14105 = !{!14106, !2637, i64 0}
!14106 = !{!"quoting_options", !2637, i64 0, !2636, i64 4, !2637, i64 8, !2649, i64 40, !2649, i64 48}
!14107 = !DILocation(line: 135, column: 3, scope: !14099)
!14108 = distinct !DISubprogram(name: "set_quoting_style", scope: !1040, file: !1040, line: 141, type: !1052, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1011, retainedNodes: !209)
!14109 = !DILocalVariable(name: "o", arg: 1, scope: !14108, file: !1040, line: 141, type: !1038)
!14110 = !DILocation(line: 141, column: 44, scope: !14108)
!14111 = !DILocalVariable(name: "s", arg: 2, scope: !14108, file: !1040, line: 141, type: !1014)
!14112 = !DILocation(line: 141, column: 66, scope: !14108)
!14113 = !DILocation(line: 143, column: 47, scope: !14108)
!14114 = !DILocation(line: 143, column: 4, scope: !14108)
!14115 = !DILocation(line: 143, column: 8, scope: !14108)
!14116 = !DILocation(line: 143, column: 39, scope: !14108)
!14117 = !DILocation(line: 143, column: 45, scope: !14108)
!14118 = !DILocation(line: 144, column: 1, scope: !14108)
!14119 = distinct !DISubprogram(name: "set_char_quoting", scope: !1040, file: !1040, line: 152, type: !1054, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1011, retainedNodes: !209)
!14120 = !DILocalVariable(name: "o", arg: 1, scope: !14119, file: !1040, line: 152, type: !1038)
!14121 = !DILocation(line: 152, column: 43, scope: !14119)
!14122 = !DILocalVariable(name: "c", arg: 2, scope: !14119, file: !1040, line: 152, type: !10)
!14123 = !DILocation(line: 152, column: 51, scope: !14119)
!14124 = !DILocalVariable(name: "i", arg: 3, scope: !14119, file: !1040, line: 152, type: !7)
!14125 = !DILocation(line: 152, column: 58, scope: !14119)
!14126 = !DILocalVariable(name: "uc", scope: !14119, file: !1040, line: 154, type: !556)
!14127 = !DILocation(line: 154, column: 17, scope: !14119)
!14128 = !DILocation(line: 154, column: 22, scope: !14119)
!14129 = !DILocalVariable(name: "p", scope: !14119, file: !1040, line: 155, type: !1056)
!14130 = !DILocation(line: 155, column: 17, scope: !14119)
!14131 = !DILocation(line: 156, column: 6, scope: !14119)
!14132 = !DILocation(line: 156, column: 10, scope: !14119)
!14133 = !DILocation(line: 156, column: 41, scope: !14119)
!14134 = !DILocation(line: 156, column: 5, scope: !14119)
!14135 = !DILocation(line: 156, column: 59, scope: !14119)
!14136 = !DILocation(line: 156, column: 62, scope: !14119)
!14137 = !DILocation(line: 156, column: 57, scope: !14119)
!14138 = !DILocalVariable(name: "shift", scope: !14119, file: !1040, line: 157, type: !7)
!14139 = !DILocation(line: 157, column: 7, scope: !14119)
!14140 = !DILocation(line: 157, column: 15, scope: !14119)
!14141 = !DILocation(line: 157, column: 18, scope: !14119)
!14142 = !DILocalVariable(name: "r", scope: !14119, file: !1040, line: 158, type: !7)
!14143 = !DILocation(line: 158, column: 7, scope: !14119)
!14144 = !DILocation(line: 158, column: 13, scope: !14119)
!14145 = !DILocation(line: 158, column: 12, scope: !14119)
!14146 = !DILocation(line: 158, column: 18, scope: !14119)
!14147 = !DILocation(line: 158, column: 15, scope: !14119)
!14148 = !DILocation(line: 158, column: 25, scope: !14119)
!14149 = !DILocation(line: 159, column: 11, scope: !14119)
!14150 = !DILocation(line: 159, column: 13, scope: !14119)
!14151 = !DILocation(line: 159, column: 20, scope: !14119)
!14152 = !DILocation(line: 159, column: 18, scope: !14119)
!14153 = !DILocation(line: 159, column: 26, scope: !14119)
!14154 = !DILocation(line: 159, column: 23, scope: !14119)
!14155 = !DILocation(line: 159, column: 4, scope: !14119)
!14156 = !DILocation(line: 159, column: 6, scope: !14119)
!14157 = !DILocation(line: 160, column: 10, scope: !14119)
!14158 = !DILocation(line: 160, column: 3, scope: !14119)
!14159 = distinct !DISubprogram(name: "set_quoting_flags", scope: !1040, file: !1040, line: 168, type: !1057, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1011, retainedNodes: !209)
!14160 = !DILocalVariable(name: "o", arg: 1, scope: !14159, file: !1040, line: 168, type: !1038)
!14161 = !DILocation(line: 168, column: 44, scope: !14159)
!14162 = !DILocalVariable(name: "i", arg: 2, scope: !14159, file: !1040, line: 168, type: !7)
!14163 = !DILocation(line: 168, column: 51, scope: !14159)
!14164 = !DILocalVariable(name: "r", scope: !14159, file: !1040, line: 170, type: !7)
!14165 = !DILocation(line: 170, column: 7, scope: !14159)
!14166 = !DILocation(line: 171, column: 8, scope: !14167)
!14167 = distinct !DILexicalBlock(scope: !14159, file: !1040, line: 171, column: 7)
!14168 = !DILocation(line: 171, column: 7, scope: !14159)
!14169 = !DILocation(line: 172, column: 7, scope: !14167)
!14170 = !DILocation(line: 172, column: 5, scope: !14167)
!14171 = !DILocation(line: 173, column: 7, scope: !14159)
!14172 = !DILocation(line: 173, column: 10, scope: !14159)
!14173 = !{!14106, !2636, i64 4}
!14174 = !DILocation(line: 173, column: 5, scope: !14159)
!14175 = !DILocation(line: 174, column: 14, scope: !14159)
!14176 = !DILocation(line: 174, column: 3, scope: !14159)
!14177 = !DILocation(line: 174, column: 6, scope: !14159)
!14178 = !DILocation(line: 174, column: 12, scope: !14159)
!14179 = !DILocation(line: 175, column: 10, scope: !14159)
!14180 = !DILocation(line: 175, column: 3, scope: !14159)
!14181 = distinct !DISubprogram(name: "set_custom_quoting", scope: !1040, file: !1040, line: 179, type: !1059, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1011, retainedNodes: !209)
!14182 = !DILocalVariable(name: "o", arg: 1, scope: !14181, file: !1040, line: 179, type: !1038)
!14183 = !DILocation(line: 179, column: 45, scope: !14181)
!14184 = !DILocalVariable(name: "left_quote", arg: 2, scope: !14181, file: !1040, line: 180, type: !180)
!14185 = !DILocation(line: 180, column: 33, scope: !14181)
!14186 = !DILocalVariable(name: "right_quote", arg: 3, scope: !14181, file: !1040, line: 180, type: !180)
!14187 = !DILocation(line: 180, column: 57, scope: !14181)
!14188 = !DILocation(line: 182, column: 8, scope: !14189)
!14189 = distinct !DILexicalBlock(scope: !14181, file: !1040, line: 182, column: 7)
!14190 = !DILocation(line: 182, column: 7, scope: !14181)
!14191 = !DILocation(line: 183, column: 7, scope: !14189)
!14192 = !DILocation(line: 183, column: 5, scope: !14189)
!14193 = !DILocation(line: 184, column: 3, scope: !14181)
!14194 = !DILocation(line: 184, column: 6, scope: !14181)
!14195 = !DILocation(line: 184, column: 12, scope: !14181)
!14196 = !DILocation(line: 185, column: 8, scope: !14197)
!14197 = distinct !DILexicalBlock(scope: !14181, file: !1040, line: 185, column: 7)
!14198 = !DILocation(line: 185, column: 19, scope: !14197)
!14199 = !DILocation(line: 185, column: 23, scope: !14197)
!14200 = !DILocation(line: 185, column: 7, scope: !14181)
!14201 = !DILocation(line: 186, column: 5, scope: !14197)
!14202 = !DILocation(line: 187, column: 19, scope: !14181)
!14203 = !DILocation(line: 187, column: 3, scope: !14181)
!14204 = !DILocation(line: 187, column: 6, scope: !14181)
!14205 = !DILocation(line: 187, column: 17, scope: !14181)
!14206 = !{!14106, !2649, i64 40}
!14207 = !DILocation(line: 188, column: 20, scope: !14181)
!14208 = !DILocation(line: 188, column: 3, scope: !14181)
!14209 = !DILocation(line: 188, column: 6, scope: !14181)
!14210 = !DILocation(line: 188, column: 18, scope: !14181)
!14211 = !{!14106, !2649, i64 48}
!14212 = !DILocation(line: 189, column: 1, scope: !14181)
!14213 = distinct !DISubprogram(name: "quotearg_buffer", scope: !1040, file: !1040, line: 784, type: !1061, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1011, retainedNodes: !209)
!14214 = !DILocalVariable(name: "buffer", arg: 1, scope: !14213, file: !1040, line: 784, type: !9)
!14215 = !DILocation(line: 784, column: 24, scope: !14213)
!14216 = !DILocalVariable(name: "buffersize", arg: 2, scope: !14213, file: !1040, line: 784, type: !55)
!14217 = !DILocation(line: 784, column: 39, scope: !14213)
!14218 = !DILocalVariable(name: "arg", arg: 3, scope: !14213, file: !1040, line: 785, type: !180)
!14219 = !DILocation(line: 785, column: 30, scope: !14213)
!14220 = !DILocalVariable(name: "argsize", arg: 4, scope: !14213, file: !1040, line: 785, type: !55)
!14221 = !DILocation(line: 785, column: 42, scope: !14213)
!14222 = !DILocalVariable(name: "o", arg: 5, scope: !14213, file: !1040, line: 786, type: !1050)
!14223 = !DILocation(line: 786, column: 48, scope: !14213)
!14224 = !DILocalVariable(name: "p", scope: !14213, file: !1040, line: 788, type: !1050)
!14225 = !DILocation(line: 788, column: 33, scope: !14213)
!14226 = !DILocation(line: 788, column: 37, scope: !14213)
!14227 = !DILocation(line: 788, column: 41, scope: !14213)
!14228 = !DILocalVariable(name: "e", scope: !14213, file: !1040, line: 789, type: !7)
!14229 = !DILocation(line: 789, column: 7, scope: !14213)
!14230 = !DILocation(line: 789, column: 11, scope: !14213)
!14231 = !DILocalVariable(name: "r", scope: !14213, file: !1040, line: 790, type: !55)
!14232 = !DILocation(line: 790, column: 10, scope: !14213)
!14233 = !DILocation(line: 790, column: 40, scope: !14213)
!14234 = !DILocation(line: 790, column: 48, scope: !14213)
!14235 = !DILocation(line: 790, column: 60, scope: !14213)
!14236 = !DILocation(line: 790, column: 65, scope: !14213)
!14237 = !DILocation(line: 791, column: 40, scope: !14213)
!14238 = !DILocation(line: 791, column: 43, scope: !14213)
!14239 = !DILocation(line: 791, column: 50, scope: !14213)
!14240 = !DILocation(line: 791, column: 53, scope: !14213)
!14241 = !DILocation(line: 791, column: 60, scope: !14213)
!14242 = !DILocation(line: 791, column: 63, scope: !14213)
!14243 = !DILocation(line: 792, column: 40, scope: !14213)
!14244 = !DILocation(line: 792, column: 43, scope: !14213)
!14245 = !DILocation(line: 792, column: 55, scope: !14213)
!14246 = !DILocation(line: 792, column: 58, scope: !14213)
!14247 = !DILocation(line: 790, column: 14, scope: !14213)
!14248 = !DILocation(line: 793, column: 11, scope: !14213)
!14249 = !DILocation(line: 793, column: 3, scope: !14213)
!14250 = !DILocation(line: 793, column: 9, scope: !14213)
!14251 = !DILocation(line: 794, column: 10, scope: !14213)
!14252 = !DILocation(line: 794, column: 3, scope: !14213)
!14253 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !1040, file: !1040, line: 256, type: !1106, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1011, retainedNodes: !209)
!14254 = !DILocalVariable(name: "buffer", arg: 1, scope: !14253, file: !1040, line: 256, type: !9)
!14255 = !DILocation(line: 256, column: 33, scope: !14253)
!14256 = !DILocalVariable(name: "buffersize", arg: 2, scope: !14253, file: !1040, line: 256, type: !55)
!14257 = !DILocation(line: 256, column: 48, scope: !14253)
!14258 = !DILocalVariable(name: "arg", arg: 3, scope: !14253, file: !1040, line: 257, type: !180)
!14259 = !DILocation(line: 257, column: 39, scope: !14253)
!14260 = !DILocalVariable(name: "argsize", arg: 4, scope: !14253, file: !1040, line: 257, type: !55)
!14261 = !DILocation(line: 257, column: 51, scope: !14253)
!14262 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !14253, file: !1040, line: 258, type: !1014)
!14263 = !DILocation(line: 258, column: 46, scope: !14253)
!14264 = !DILocalVariable(name: "flags", arg: 6, scope: !14253, file: !1040, line: 258, type: !7)
!14265 = !DILocation(line: 258, column: 65, scope: !14253)
!14266 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !14253, file: !1040, line: 259, type: !1108)
!14267 = !DILocation(line: 259, column: 47, scope: !14253)
!14268 = !DILocalVariable(name: "left_quote", arg: 8, scope: !14253, file: !1040, line: 260, type: !180)
!14269 = !DILocation(line: 260, column: 39, scope: !14253)
!14270 = !DILocalVariable(name: "right_quote", arg: 9, scope: !14253, file: !1040, line: 261, type: !180)
!14271 = !DILocation(line: 261, column: 39, scope: !14253)
!14272 = !DILocalVariable(name: "i", scope: !14253, file: !1040, line: 263, type: !55)
!14273 = !DILocation(line: 263, column: 10, scope: !14253)
!14274 = !DILocalVariable(name: "len", scope: !14253, file: !1040, line: 264, type: !55)
!14275 = !DILocation(line: 264, column: 10, scope: !14253)
!14276 = !DILocalVariable(name: "orig_buffersize", scope: !14253, file: !1040, line: 265, type: !55)
!14277 = !DILocation(line: 265, column: 10, scope: !14253)
!14278 = !DILocalVariable(name: "quote_string", scope: !14253, file: !1040, line: 266, type: !180)
!14279 = !DILocation(line: 266, column: 15, scope: !14253)
!14280 = !DILocalVariable(name: "quote_string_len", scope: !14253, file: !1040, line: 267, type: !55)
!14281 = !DILocation(line: 267, column: 10, scope: !14253)
!14282 = !DILocalVariable(name: "backslash_escapes", scope: !14253, file: !1040, line: 268, type: !142)
!14283 = !DILocation(line: 268, column: 8, scope: !14253)
!14284 = !DILocalVariable(name: "unibyte_locale", scope: !14253, file: !1040, line: 269, type: !142)
!14285 = !DILocation(line: 269, column: 8, scope: !14253)
!14286 = !DILocation(line: 269, column: 25, scope: !14253)
!14287 = !DILocation(line: 269, column: 36, scope: !14253)
!14288 = !DILocalVariable(name: "elide_outer_quotes", scope: !14253, file: !1040, line: 270, type: !142)
!14289 = !DILocation(line: 270, column: 8, scope: !14253)
!14290 = !DILocation(line: 270, column: 30, scope: !14253)
!14291 = !DILocation(line: 270, column: 36, scope: !14253)
!14292 = !DILocation(line: 270, column: 61, scope: !14253)
!14293 = !DILocalVariable(name: "pending_shell_escape_end", scope: !14253, file: !1040, line: 271, type: !142)
!14294 = !DILocation(line: 271, column: 8, scope: !14253)
!14295 = !DILocalVariable(name: "encountered_single_quote", scope: !14253, file: !1040, line: 272, type: !142)
!14296 = !DILocation(line: 272, column: 8, scope: !14253)
!14297 = !DILocalVariable(name: "all_c_and_shell_quote_compat", scope: !14253, file: !1040, line: 273, type: !142)
!14298 = !DILocation(line: 273, column: 8, scope: !14253)
!14299 = !DILocation(line: 273, column: 3, scope: !14253)
!14300 = !DILabel(scope: !14253, name: "process_input", file: !1040, line: 314)
!14301 = !DILocation(line: 314, column: 2, scope: !14253)
!14302 = !DILocation(line: 316, column: 11, scope: !14253)
!14303 = !DILocation(line: 316, column: 3, scope: !14253)
!14304 = !DILocation(line: 319, column: 21, scope: !14305)
!14305 = distinct !DILexicalBlock(scope: !14253, file: !1040, line: 317, column: 5)
!14306 = !DILocation(line: 320, column: 26, scope: !14305)
!14307 = !DILocation(line: 321, column: 7, scope: !14305)
!14308 = !DILocation(line: 323, column: 12, scope: !14309)
!14309 = distinct !DILexicalBlock(scope: !14305, file: !1040, line: 323, column: 11)
!14310 = !DILocation(line: 323, column: 11, scope: !14305)
!14311 = !DILocation(line: 324, column: 9, scope: !14309)
!14312 = !DILocation(line: 324, column: 9, scope: !14313)
!14313 = distinct !DILexicalBlock(scope: !14314, file: !1040, line: 324, column: 9)
!14314 = distinct !DILexicalBlock(scope: !14309, file: !1040, line: 324, column: 9)
!14315 = !DILocation(line: 324, column: 9, scope: !14314)
!14316 = !DILocation(line: 325, column: 25, scope: !14305)
!14317 = !DILocation(line: 326, column: 20, scope: !14305)
!14318 = !DILocation(line: 327, column: 24, scope: !14305)
!14319 = !DILocation(line: 328, column: 7, scope: !14305)
!14320 = !DILocation(line: 331, column: 25, scope: !14305)
!14321 = !DILocation(line: 332, column: 26, scope: !14305)
!14322 = !DILocation(line: 333, column: 7, scope: !14305)
!14323 = !DILocation(line: 339, column: 13, scope: !14324)
!14324 = distinct !DILexicalBlock(scope: !14325, file: !1040, line: 339, column: 13)
!14325 = distinct !DILexicalBlock(scope: !14305, file: !1040, line: 338, column: 7)
!14326 = !DILocation(line: 339, column: 27, scope: !14324)
!14327 = !DILocation(line: 339, column: 13, scope: !14325)
!14328 = !DILocation(line: 362, column: 50, scope: !14329)
!14329 = distinct !DILexicalBlock(scope: !14324, file: !1040, line: 340, column: 11)
!14330 = !DILocation(line: 362, column: 26, scope: !14329)
!14331 = !DILocation(line: 362, column: 24, scope: !14329)
!14332 = !DILocation(line: 363, column: 51, scope: !14329)
!14333 = !DILocation(line: 363, column: 27, scope: !14329)
!14334 = !DILocation(line: 363, column: 25, scope: !14329)
!14335 = !DILocation(line: 364, column: 11, scope: !14329)
!14336 = !DILocation(line: 365, column: 14, scope: !14337)
!14337 = distinct !DILexicalBlock(scope: !14325, file: !1040, line: 365, column: 13)
!14338 = !DILocation(line: 365, column: 13, scope: !14325)
!14339 = !DILocation(line: 366, column: 31, scope: !14340)
!14340 = distinct !DILexicalBlock(scope: !14337, file: !1040, line: 366, column: 11)
!14341 = !DILocation(line: 366, column: 29, scope: !14340)
!14342 = !DILocation(line: 366, column: 16, scope: !14340)
!14343 = !DILocation(line: 366, column: 44, scope: !14344)
!14344 = distinct !DILexicalBlock(scope: !14340, file: !1040, line: 366, column: 11)
!14345 = !DILocation(line: 366, column: 43, scope: !14344)
!14346 = !DILocation(line: 366, column: 11, scope: !14340)
!14347 = !DILocation(line: 367, column: 13, scope: !14344)
!14348 = !DILocation(line: 367, column: 13, scope: !14349)
!14349 = distinct !DILexicalBlock(scope: !14350, file: !1040, line: 367, column: 13)
!14350 = distinct !DILexicalBlock(scope: !14344, file: !1040, line: 367, column: 13)
!14351 = !DILocation(line: 367, column: 13, scope: !14350)
!14352 = !DILocation(line: 366, column: 70, scope: !14344)
!14353 = !DILocation(line: 366, column: 11, scope: !14344)
!14354 = distinct !{!14354, !14346, !14355}
!14355 = !DILocation(line: 367, column: 13, scope: !14340)
!14356 = !DILocation(line: 368, column: 27, scope: !14325)
!14357 = !DILocation(line: 369, column: 24, scope: !14325)
!14358 = !DILocation(line: 369, column: 22, scope: !14325)
!14359 = !DILocation(line: 370, column: 36, scope: !14325)
!14360 = !DILocation(line: 370, column: 28, scope: !14325)
!14361 = !DILocation(line: 370, column: 26, scope: !14325)
!14362 = !DILocation(line: 372, column: 7, scope: !14305)
!14363 = !DILocation(line: 375, column: 25, scope: !14305)
!14364 = !DILocation(line: 376, column: 7, scope: !14305)
!14365 = !DILocation(line: 378, column: 26, scope: !14305)
!14366 = !DILocation(line: 379, column: 7, scope: !14305)
!14367 = !DILocation(line: 381, column: 12, scope: !14368)
!14368 = distinct !DILexicalBlock(scope: !14305, file: !1040, line: 381, column: 11)
!14369 = !DILocation(line: 381, column: 11, scope: !14305)
!14370 = !DILocation(line: 382, column: 27, scope: !14368)
!14371 = !DILocation(line: 382, column: 9, scope: !14368)
!14372 = !DILocation(line: 383, column: 7, scope: !14305)
!14373 = !DILocation(line: 385, column: 21, scope: !14305)
!14374 = !DILocation(line: 386, column: 12, scope: !14375)
!14375 = distinct !DILexicalBlock(scope: !14305, file: !1040, line: 386, column: 11)
!14376 = !DILocation(line: 386, column: 11, scope: !14305)
!14377 = !DILocation(line: 387, column: 9, scope: !14375)
!14378 = !DILocation(line: 387, column: 9, scope: !14379)
!14379 = distinct !DILexicalBlock(scope: !14380, file: !1040, line: 387, column: 9)
!14380 = distinct !DILexicalBlock(scope: !14375, file: !1040, line: 387, column: 9)
!14381 = !DILocation(line: 387, column: 9, scope: !14380)
!14382 = !DILocation(line: 388, column: 20, scope: !14305)
!14383 = !DILocation(line: 389, column: 24, scope: !14305)
!14384 = !DILocation(line: 390, column: 7, scope: !14305)
!14385 = !DILocation(line: 393, column: 26, scope: !14305)
!14386 = !DILocation(line: 394, column: 7, scope: !14305)
!14387 = !DILocation(line: 397, column: 7, scope: !14305)
!14388 = !DILocation(line: 400, column: 10, scope: !14389)
!14389 = distinct !DILexicalBlock(scope: !14253, file: !1040, line: 400, column: 3)
!14390 = !DILocation(line: 400, column: 8, scope: !14389)
!14391 = !DILocation(line: 400, column: 19, scope: !14392)
!14392 = distinct !DILexicalBlock(scope: !14389, file: !1040, line: 400, column: 3)
!14393 = !DILocation(line: 400, column: 27, scope: !14392)
!14394 = !DILocation(line: 400, column: 41, scope: !14392)
!14395 = !DILocation(line: 400, column: 45, scope: !14392)
!14396 = !DILocation(line: 400, column: 48, scope: !14392)
!14397 = !DILocation(line: 400, column: 58, scope: !14392)
!14398 = !DILocation(line: 400, column: 63, scope: !14392)
!14399 = !DILocation(line: 400, column: 60, scope: !14392)
!14400 = !DILocation(line: 400, column: 16, scope: !14392)
!14401 = !DILocation(line: 400, column: 3, scope: !14389)
!14402 = !DILocalVariable(name: "c", scope: !14403, file: !1040, line: 402, type: !556)
!14403 = distinct !DILexicalBlock(scope: !14392, file: !1040, line: 401, column: 5)
!14404 = !DILocation(line: 402, column: 21, scope: !14403)
!14405 = !DILocalVariable(name: "esc", scope: !14403, file: !1040, line: 403, type: !556)
!14406 = !DILocation(line: 403, column: 21, scope: !14403)
!14407 = !DILocalVariable(name: "is_right_quote", scope: !14403, file: !1040, line: 404, type: !142)
!14408 = !DILocation(line: 404, column: 12, scope: !14403)
!14409 = !DILocalVariable(name: "escaping", scope: !14403, file: !1040, line: 405, type: !142)
!14410 = !DILocation(line: 405, column: 12, scope: !14403)
!14411 = !DILocalVariable(name: "c_and_shell_quote_compat", scope: !14403, file: !1040, line: 406, type: !142)
!14412 = !DILocation(line: 406, column: 12, scope: !14403)
!14413 = !DILocation(line: 408, column: 11, scope: !14414)
!14414 = distinct !DILexicalBlock(scope: !14403, file: !1040, line: 408, column: 11)
!14415 = !DILocation(line: 409, column: 11, scope: !14414)
!14416 = !DILocation(line: 409, column: 14, scope: !14414)
!14417 = !DILocation(line: 409, column: 28, scope: !14414)
!14418 = !DILocation(line: 410, column: 11, scope: !14414)
!14419 = !DILocation(line: 410, column: 14, scope: !14414)
!14420 = !DILocation(line: 411, column: 11, scope: !14414)
!14421 = !DILocation(line: 411, column: 15, scope: !14414)
!14422 = !DILocation(line: 411, column: 19, scope: !14414)
!14423 = !DILocation(line: 411, column: 17, scope: !14414)
!14424 = !DILocation(line: 412, column: 19, scope: !14414)
!14425 = !DILocation(line: 412, column: 27, scope: !14414)
!14426 = !DILocation(line: 412, column: 39, scope: !14414)
!14427 = !DILocation(line: 412, column: 46, scope: !14414)
!14428 = !DILocation(line: 412, column: 44, scope: !14414)
!14429 = !DILocation(line: 416, column: 40, scope: !14414)
!14430 = !DILocation(line: 416, column: 32, scope: !14414)
!14431 = !DILocation(line: 416, column: 30, scope: !14414)
!14432 = !DILocation(line: 416, column: 48, scope: !14414)
!14433 = !DILocation(line: 412, column: 15, scope: !14414)
!14434 = !DILocation(line: 417, column: 11, scope: !14414)
!14435 = !DILocation(line: 417, column: 22, scope: !14414)
!14436 = !DILocation(line: 417, column: 28, scope: !14414)
!14437 = !DILocation(line: 417, column: 26, scope: !14414)
!14438 = !DILocation(line: 417, column: 31, scope: !14414)
!14439 = !DILocation(line: 417, column: 45, scope: !14414)
!14440 = !DILocation(line: 417, column: 14, scope: !14414)
!14441 = !DILocation(line: 417, column: 63, scope: !14414)
!14442 = !DILocation(line: 408, column: 11, scope: !14403)
!14443 = !DILocation(line: 419, column: 15, scope: !14444)
!14444 = distinct !DILexicalBlock(scope: !14445, file: !1040, line: 419, column: 15)
!14445 = distinct !DILexicalBlock(scope: !14414, file: !1040, line: 418, column: 9)
!14446 = !DILocation(line: 419, column: 15, scope: !14445)
!14447 = !DILocation(line: 420, column: 13, scope: !14444)
!14448 = !DILocation(line: 421, column: 26, scope: !14445)
!14449 = !DILocation(line: 422, column: 9, scope: !14445)
!14450 = !DILocation(line: 424, column: 11, scope: !14403)
!14451 = !DILocation(line: 424, column: 15, scope: !14403)
!14452 = !DILocation(line: 424, column: 9, scope: !14403)
!14453 = !DILocation(line: 425, column: 15, scope: !14403)
!14454 = !DILocation(line: 425, column: 7, scope: !14403)
!14455 = !DILocation(line: 428, column: 15, scope: !14456)
!14456 = distinct !DILexicalBlock(scope: !14457, file: !1040, line: 428, column: 15)
!14457 = distinct !DILexicalBlock(scope: !14403, file: !1040, line: 426, column: 9)
!14458 = !DILocation(line: 428, column: 15, scope: !14457)
!14459 = !DILocation(line: 430, column: 15, scope: !14460)
!14460 = distinct !DILexicalBlock(scope: !14456, file: !1040, line: 429, column: 13)
!14461 = !DILocation(line: 430, column: 15, scope: !14462)
!14462 = distinct !DILexicalBlock(scope: !14463, file: !1040, line: 430, column: 15)
!14463 = distinct !DILexicalBlock(scope: !14460, file: !1040, line: 430, column: 15)
!14464 = !DILocation(line: 430, column: 15, scope: !14463)
!14465 = !DILocation(line: 430, column: 15, scope: !14466)
!14466 = distinct !DILexicalBlock(scope: !14463, file: !1040, line: 430, column: 15)
!14467 = !DILocation(line: 430, column: 15, scope: !14468)
!14468 = distinct !DILexicalBlock(scope: !14466, file: !1040, line: 430, column: 15)
!14469 = !DILocation(line: 430, column: 15, scope: !14470)
!14470 = distinct !DILexicalBlock(scope: !14471, file: !1040, line: 430, column: 15)
!14471 = distinct !DILexicalBlock(scope: !14468, file: !1040, line: 430, column: 15)
!14472 = !DILocation(line: 430, column: 15, scope: !14471)
!14473 = !DILocation(line: 430, column: 15, scope: !14474)
!14474 = distinct !DILexicalBlock(scope: !14475, file: !1040, line: 430, column: 15)
!14475 = distinct !DILexicalBlock(scope: !14468, file: !1040, line: 430, column: 15)
!14476 = !DILocation(line: 430, column: 15, scope: !14475)
!14477 = !DILocation(line: 430, column: 15, scope: !14478)
!14478 = distinct !DILexicalBlock(scope: !14479, file: !1040, line: 430, column: 15)
!14479 = distinct !DILexicalBlock(scope: !14468, file: !1040, line: 430, column: 15)
!14480 = !DILocation(line: 430, column: 15, scope: !14479)
!14481 = !DILocation(line: 430, column: 15, scope: !14482)
!14482 = distinct !DILexicalBlock(scope: !14483, file: !1040, line: 430, column: 15)
!14483 = distinct !DILexicalBlock(scope: !14463, file: !1040, line: 430, column: 15)
!14484 = !DILocation(line: 430, column: 15, scope: !14483)
!14485 = !DILocation(line: 437, column: 19, scope: !14486)
!14486 = distinct !DILexicalBlock(scope: !14460, file: !1040, line: 437, column: 19)
!14487 = !DILocation(line: 437, column: 33, scope: !14486)
!14488 = !DILocation(line: 438, column: 19, scope: !14486)
!14489 = !DILocation(line: 438, column: 22, scope: !14486)
!14490 = !DILocation(line: 438, column: 24, scope: !14486)
!14491 = !DILocation(line: 438, column: 30, scope: !14486)
!14492 = !DILocation(line: 438, column: 28, scope: !14486)
!14493 = !DILocation(line: 438, column: 38, scope: !14486)
!14494 = !DILocation(line: 438, column: 48, scope: !14486)
!14495 = !DILocation(line: 438, column: 52, scope: !14486)
!14496 = !DILocation(line: 438, column: 54, scope: !14486)
!14497 = !DILocation(line: 438, column: 45, scope: !14486)
!14498 = !DILocation(line: 438, column: 59, scope: !14486)
!14499 = !DILocation(line: 438, column: 62, scope: !14486)
!14500 = !DILocation(line: 438, column: 66, scope: !14486)
!14501 = !DILocation(line: 438, column: 68, scope: !14486)
!14502 = !DILocation(line: 438, column: 73, scope: !14486)
!14503 = !DILocation(line: 437, column: 19, scope: !14460)
!14504 = !DILocation(line: 440, column: 19, scope: !14505)
!14505 = distinct !DILexicalBlock(scope: !14486, file: !1040, line: 439, column: 17)
!14506 = !DILocation(line: 440, column: 19, scope: !14507)
!14507 = distinct !DILexicalBlock(scope: !14508, file: !1040, line: 440, column: 19)
!14508 = distinct !DILexicalBlock(scope: !14505, file: !1040, line: 440, column: 19)
!14509 = !DILocation(line: 440, column: 19, scope: !14508)
!14510 = !DILocation(line: 441, column: 19, scope: !14505)
!14511 = !DILocation(line: 441, column: 19, scope: !14512)
!14512 = distinct !DILexicalBlock(scope: !14513, file: !1040, line: 441, column: 19)
!14513 = distinct !DILexicalBlock(scope: !14505, file: !1040, line: 441, column: 19)
!14514 = !DILocation(line: 441, column: 19, scope: !14513)
!14515 = !DILocation(line: 442, column: 17, scope: !14505)
!14516 = !DILocation(line: 443, column: 17, scope: !14460)
!14517 = !DILocation(line: 448, column: 13, scope: !14460)
!14518 = !DILocation(line: 449, column: 20, scope: !14519)
!14519 = distinct !DILexicalBlock(scope: !14456, file: !1040, line: 449, column: 20)
!14520 = !DILocation(line: 449, column: 26, scope: !14519)
!14521 = !DILocation(line: 449, column: 20, scope: !14456)
!14522 = !DILocation(line: 450, column: 13, scope: !14519)
!14523 = !DILocation(line: 451, column: 11, scope: !14457)
!14524 = !DILocation(line: 454, column: 19, scope: !14457)
!14525 = !DILocation(line: 454, column: 11, scope: !14457)
!14526 = !DILocation(line: 457, column: 19, scope: !14527)
!14527 = distinct !DILexicalBlock(scope: !14528, file: !1040, line: 457, column: 19)
!14528 = distinct !DILexicalBlock(scope: !14457, file: !1040, line: 455, column: 13)
!14529 = !DILocation(line: 457, column: 19, scope: !14528)
!14530 = !DILocation(line: 458, column: 17, scope: !14527)
!14531 = !DILocation(line: 459, column: 15, scope: !14528)
!14532 = !DILocation(line: 462, column: 20, scope: !14533)
!14533 = distinct !DILexicalBlock(scope: !14528, file: !1040, line: 462, column: 19)
!14534 = !DILocation(line: 462, column: 26, scope: !14533)
!14535 = !DILocation(line: 463, column: 19, scope: !14533)
!14536 = !DILocation(line: 463, column: 22, scope: !14533)
!14537 = !DILocation(line: 463, column: 24, scope: !14533)
!14538 = !DILocation(line: 463, column: 30, scope: !14533)
!14539 = !DILocation(line: 463, column: 28, scope: !14533)
!14540 = !DILocation(line: 463, column: 38, scope: !14533)
!14541 = !DILocation(line: 463, column: 41, scope: !14533)
!14542 = !DILocation(line: 463, column: 45, scope: !14533)
!14543 = !DILocation(line: 463, column: 47, scope: !14533)
!14544 = !DILocation(line: 463, column: 52, scope: !14533)
!14545 = !DILocation(line: 462, column: 19, scope: !14528)
!14546 = !DILocation(line: 464, column: 25, scope: !14533)
!14547 = !DILocation(line: 464, column: 29, scope: !14533)
!14548 = !DILocation(line: 464, column: 31, scope: !14533)
!14549 = !DILocation(line: 464, column: 17, scope: !14533)
!14550 = !DILocation(line: 471, column: 25, scope: !14551)
!14551 = distinct !DILexicalBlock(scope: !14552, file: !1040, line: 471, column: 25)
!14552 = distinct !DILexicalBlock(scope: !14533, file: !1040, line: 465, column: 19)
!14553 = !DILocation(line: 471, column: 25, scope: !14552)
!14554 = !DILocation(line: 472, column: 23, scope: !14551)
!14555 = !DILocation(line: 473, column: 25, scope: !14552)
!14556 = !DILocation(line: 473, column: 29, scope: !14552)
!14557 = !DILocation(line: 473, column: 31, scope: !14552)
!14558 = !DILocation(line: 473, column: 23, scope: !14552)
!14559 = !DILocation(line: 474, column: 23, scope: !14552)
!14560 = !DILocation(line: 475, column: 21, scope: !14552)
!14561 = !DILocation(line: 475, column: 21, scope: !14562)
!14562 = distinct !DILexicalBlock(scope: !14563, file: !1040, line: 475, column: 21)
!14563 = distinct !DILexicalBlock(scope: !14552, file: !1040, line: 475, column: 21)
!14564 = !DILocation(line: 475, column: 21, scope: !14563)
!14565 = !DILocation(line: 476, column: 21, scope: !14552)
!14566 = !DILocation(line: 476, column: 21, scope: !14567)
!14567 = distinct !DILexicalBlock(scope: !14568, file: !1040, line: 476, column: 21)
!14568 = distinct !DILexicalBlock(scope: !14552, file: !1040, line: 476, column: 21)
!14569 = !DILocation(line: 476, column: 21, scope: !14568)
!14570 = !DILocation(line: 477, column: 21, scope: !14552)
!14571 = !DILocation(line: 477, column: 21, scope: !14572)
!14572 = distinct !DILexicalBlock(scope: !14573, file: !1040, line: 477, column: 21)
!14573 = distinct !DILexicalBlock(scope: !14552, file: !1040, line: 477, column: 21)
!14574 = !DILocation(line: 477, column: 21, scope: !14573)
!14575 = !DILocation(line: 478, column: 21, scope: !14552)
!14576 = !DILocation(line: 478, column: 21, scope: !14577)
!14577 = distinct !DILexicalBlock(scope: !14578, file: !1040, line: 478, column: 21)
!14578 = distinct !DILexicalBlock(scope: !14552, file: !1040, line: 478, column: 21)
!14579 = !DILocation(line: 478, column: 21, scope: !14578)
!14580 = !DILocation(line: 479, column: 21, scope: !14552)
!14581 = !DILocation(line: 482, column: 21, scope: !14552)
!14582 = !DILocation(line: 483, column: 19, scope: !14552)
!14583 = !DILocation(line: 484, column: 15, scope: !14528)
!14584 = !DILocation(line: 487, column: 15, scope: !14528)
!14585 = !DILocation(line: 489, column: 11, scope: !14457)
!14586 = !DILocation(line: 491, column: 24, scope: !14457)
!14587 = !DILocation(line: 491, column: 31, scope: !14457)
!14588 = !DILocation(line: 492, column: 24, scope: !14457)
!14589 = !DILocation(line: 492, column: 31, scope: !14457)
!14590 = !DILocation(line: 493, column: 24, scope: !14457)
!14591 = !DILocation(line: 493, column: 31, scope: !14457)
!14592 = !DILocation(line: 494, column: 24, scope: !14457)
!14593 = !DILocation(line: 494, column: 31, scope: !14457)
!14594 = !DILocation(line: 495, column: 24, scope: !14457)
!14595 = !DILocation(line: 495, column: 31, scope: !14457)
!14596 = !DILocation(line: 496, column: 24, scope: !14457)
!14597 = !DILocation(line: 496, column: 31, scope: !14457)
!14598 = !DILocation(line: 497, column: 24, scope: !14457)
!14599 = !DILocation(line: 497, column: 31, scope: !14457)
!14600 = !DILocation(line: 498, column: 26, scope: !14457)
!14601 = !DILocation(line: 498, column: 24, scope: !14457)
!14602 = !DILocation(line: 500, column: 15, scope: !14603)
!14603 = distinct !DILexicalBlock(scope: !14457, file: !1040, line: 500, column: 15)
!14604 = !DILocation(line: 500, column: 29, scope: !14603)
!14605 = !DILocation(line: 500, column: 15, scope: !14457)
!14606 = !DILocation(line: 502, column: 19, scope: !14607)
!14607 = distinct !DILexicalBlock(scope: !14608, file: !1040, line: 502, column: 19)
!14608 = distinct !DILexicalBlock(scope: !14603, file: !1040, line: 501, column: 13)
!14609 = !DILocation(line: 502, column: 19, scope: !14608)
!14610 = !DILocation(line: 503, column: 17, scope: !14607)
!14611 = !DILocation(line: 504, column: 15, scope: !14608)
!14612 = !DILocation(line: 509, column: 15, scope: !14613)
!14613 = distinct !DILexicalBlock(scope: !14457, file: !1040, line: 509, column: 15)
!14614 = !DILocation(line: 509, column: 33, scope: !14613)
!14615 = !DILocation(line: 509, column: 36, scope: !14613)
!14616 = !DILocation(line: 509, column: 55, scope: !14613)
!14617 = !DILocation(line: 509, column: 58, scope: !14613)
!14618 = !DILocation(line: 509, column: 15, scope: !14457)
!14619 = !DILocation(line: 510, column: 13, scope: !14613)
!14620 = !DILabel(scope: !14457, name: "c_and_shell_escape", file: !1040, line: 512)
!14621 = !DILocation(line: 512, column: 9, scope: !14457)
!14622 = !DILocation(line: 513, column: 15, scope: !14623)
!14623 = distinct !DILexicalBlock(scope: !14457, file: !1040, line: 513, column: 15)
!14624 = !DILocation(line: 513, column: 29, scope: !14623)
!14625 = !DILocation(line: 514, column: 15, scope: !14623)
!14626 = !DILocation(line: 514, column: 18, scope: !14623)
!14627 = !DILocation(line: 513, column: 15, scope: !14457)
!14628 = !DILocation(line: 515, column: 13, scope: !14623)
!14629 = !DILabel(scope: !14457, name: "c_escape", file: !1040, line: 517)
!14630 = !DILocation(line: 517, column: 9, scope: !14457)
!14631 = !DILocation(line: 518, column: 15, scope: !14632)
!14632 = distinct !DILexicalBlock(scope: !14457, file: !1040, line: 518, column: 15)
!14633 = !DILocation(line: 518, column: 15, scope: !14457)
!14634 = !DILocation(line: 520, column: 19, scope: !14635)
!14635 = distinct !DILexicalBlock(scope: !14632, file: !1040, line: 519, column: 13)
!14636 = !DILocation(line: 520, column: 17, scope: !14635)
!14637 = !DILocation(line: 521, column: 15, scope: !14635)
!14638 = !DILocation(line: 523, column: 11, scope: !14457)
!14639 = !DILocation(line: 526, column: 18, scope: !14640)
!14640 = distinct !DILexicalBlock(scope: !14457, file: !1040, line: 526, column: 15)
!14641 = !DILocation(line: 526, column: 26, scope: !14640)
!14642 = !DILocation(line: 526, column: 15, scope: !14457)
!14643 = !DILocation(line: 526, column: 40, scope: !14640)
!14644 = !DILocation(line: 526, column: 47, scope: !14640)
!14645 = !DILocation(line: 526, column: 57, scope: !14640)
!14646 = !DILocation(line: 526, column: 65, scope: !14640)
!14647 = !DILocation(line: 527, column: 13, scope: !14640)
!14648 = !DILocation(line: 528, column: 11, scope: !14457)
!14649 = !DILocation(line: 530, column: 15, scope: !14650)
!14650 = distinct !DILexicalBlock(scope: !14457, file: !1040, line: 530, column: 15)
!14651 = !DILocation(line: 530, column: 17, scope: !14650)
!14652 = !DILocation(line: 530, column: 15, scope: !14457)
!14653 = !DILocation(line: 531, column: 13, scope: !14650)
!14654 = !DILocation(line: 532, column: 11, scope: !14457)
!14655 = !DILocation(line: 534, column: 36, scope: !14457)
!14656 = !DILocation(line: 535, column: 11, scope: !14457)
!14657 = !DILocation(line: 548, column: 15, scope: !14658)
!14658 = distinct !DILexicalBlock(scope: !14457, file: !1040, line: 548, column: 15)
!14659 = !DILocation(line: 548, column: 29, scope: !14658)
!14660 = !DILocation(line: 549, column: 15, scope: !14658)
!14661 = !DILocation(line: 549, column: 18, scope: !14658)
!14662 = !DILocation(line: 548, column: 15, scope: !14457)
!14663 = !DILocation(line: 550, column: 13, scope: !14658)
!14664 = !DILocation(line: 551, column: 11, scope: !14457)
!14665 = !DILocation(line: 554, column: 36, scope: !14457)
!14666 = !DILocation(line: 555, column: 36, scope: !14457)
!14667 = !DILocation(line: 556, column: 15, scope: !14668)
!14668 = distinct !DILexicalBlock(scope: !14457, file: !1040, line: 556, column: 15)
!14669 = !DILocation(line: 556, column: 29, scope: !14668)
!14670 = !DILocation(line: 556, column: 15, scope: !14457)
!14671 = !DILocation(line: 558, column: 19, scope: !14672)
!14672 = distinct !DILexicalBlock(scope: !14673, file: !1040, line: 558, column: 19)
!14673 = distinct !DILexicalBlock(scope: !14668, file: !1040, line: 557, column: 13)
!14674 = !DILocation(line: 558, column: 19, scope: !14673)
!14675 = !DILocation(line: 559, column: 17, scope: !14672)
!14676 = !DILocation(line: 561, column: 19, scope: !14677)
!14677 = distinct !DILexicalBlock(scope: !14673, file: !1040, line: 561, column: 19)
!14678 = !DILocation(line: 561, column: 30, scope: !14677)
!14679 = !DILocation(line: 561, column: 35, scope: !14677)
!14680 = !DILocation(line: 561, column: 19, scope: !14673)
!14681 = !DILocation(line: 566, column: 37, scope: !14682)
!14682 = distinct !DILexicalBlock(scope: !14677, file: !1040, line: 562, column: 17)
!14683 = !DILocation(line: 566, column: 35, scope: !14682)
!14684 = !DILocation(line: 567, column: 30, scope: !14682)
!14685 = !DILocation(line: 568, column: 17, scope: !14682)
!14686 = !DILocation(line: 570, column: 15, scope: !14673)
!14687 = !DILocation(line: 570, column: 15, scope: !14688)
!14688 = distinct !DILexicalBlock(scope: !14689, file: !1040, line: 570, column: 15)
!14689 = distinct !DILexicalBlock(scope: !14673, file: !1040, line: 570, column: 15)
!14690 = !DILocation(line: 570, column: 15, scope: !14689)
!14691 = !DILocation(line: 571, column: 15, scope: !14673)
!14692 = !DILocation(line: 571, column: 15, scope: !14693)
!14693 = distinct !DILexicalBlock(scope: !14694, file: !1040, line: 571, column: 15)
!14694 = distinct !DILexicalBlock(scope: !14673, file: !1040, line: 571, column: 15)
!14695 = !DILocation(line: 571, column: 15, scope: !14694)
!14696 = !DILocation(line: 572, column: 15, scope: !14673)
!14697 = !DILocation(line: 572, column: 15, scope: !14698)
!14698 = distinct !DILexicalBlock(scope: !14699, file: !1040, line: 572, column: 15)
!14699 = distinct !DILexicalBlock(scope: !14673, file: !1040, line: 572, column: 15)
!14700 = !DILocation(line: 572, column: 15, scope: !14699)
!14701 = !DILocation(line: 573, column: 40, scope: !14673)
!14702 = !DILocation(line: 574, column: 13, scope: !14673)
!14703 = !DILocation(line: 575, column: 11, scope: !14457)
!14704 = !DILocation(line: 599, column: 36, scope: !14457)
!14705 = !DILocation(line: 600, column: 11, scope: !14457)
!14706 = !DILocalVariable(name: "m", scope: !14707, file: !1040, line: 610, type: !55)
!14707 = distinct !DILexicalBlock(scope: !14457, file: !1040, line: 608, column: 11)
!14708 = !DILocation(line: 610, column: 20, scope: !14707)
!14709 = !DILocalVariable(name: "printable", scope: !14707, file: !1040, line: 612, type: !142)
!14710 = !DILocation(line: 612, column: 18, scope: !14707)
!14711 = !DILocation(line: 614, column: 17, scope: !14712)
!14712 = distinct !DILexicalBlock(scope: !14707, file: !1040, line: 614, column: 17)
!14713 = !DILocation(line: 614, column: 17, scope: !14707)
!14714 = !DILocation(line: 616, column: 19, scope: !14715)
!14715 = distinct !DILexicalBlock(scope: !14712, file: !1040, line: 615, column: 15)
!14716 = !DILocation(line: 617, column: 29, scope: !14715)
!14717 = !{!14718, !14718, i64 0}
!14718 = !{!"short", !2637, i64 0}
!14719 = !DILocation(line: 617, column: 41, scope: !14715)
!14720 = !DILocation(line: 617, column: 27, scope: !14715)
!14721 = !DILocation(line: 618, column: 15, scope: !14715)
!14722 = !DILocalVariable(name: "mbstate", scope: !14723, file: !1040, line: 621, type: !1112)
!14723 = distinct !DILexicalBlock(scope: !14712, file: !1040, line: 620, column: 15)
!14724 = !DILocation(line: 621, column: 27, scope: !14723)
!14725 = !DILocation(line: 622, column: 17, scope: !14723)
!14726 = !DILocation(line: 624, column: 19, scope: !14723)
!14727 = !DILocation(line: 625, column: 27, scope: !14723)
!14728 = !DILocation(line: 626, column: 21, scope: !14729)
!14729 = distinct !DILexicalBlock(scope: !14723, file: !1040, line: 626, column: 21)
!14730 = !DILocation(line: 626, column: 29, scope: !14729)
!14731 = !DILocation(line: 626, column: 21, scope: !14723)
!14732 = !DILocation(line: 627, column: 37, scope: !14729)
!14733 = !DILocation(line: 627, column: 29, scope: !14729)
!14734 = !DILocation(line: 627, column: 27, scope: !14729)
!14735 = !DILocation(line: 627, column: 19, scope: !14729)
!14736 = !DILocation(line: 629, column: 17, scope: !14723)
!14737 = !DILocalVariable(name: "w", scope: !14738, file: !1040, line: 631, type: !1127)
!14738 = distinct !DILexicalBlock(scope: !14723, file: !1040, line: 630, column: 19)
!14739 = !DILocation(line: 631, column: 29, scope: !14738)
!14740 = !DILocalVariable(name: "bytes", scope: !14738, file: !1040, line: 632, type: !55)
!14741 = !DILocation(line: 632, column: 28, scope: !14738)
!14742 = !DILocation(line: 632, column: 50, scope: !14738)
!14743 = !DILocation(line: 632, column: 54, scope: !14738)
!14744 = !DILocation(line: 632, column: 58, scope: !14738)
!14745 = !DILocation(line: 632, column: 56, scope: !14738)
!14746 = !DILocation(line: 633, column: 45, scope: !14738)
!14747 = !DILocation(line: 633, column: 56, scope: !14738)
!14748 = !DILocation(line: 633, column: 60, scope: !14738)
!14749 = !DILocation(line: 633, column: 58, scope: !14738)
!14750 = !DILocation(line: 633, column: 53, scope: !14738)
!14751 = !DILocation(line: 632, column: 36, scope: !14738)
!14752 = !DILocation(line: 634, column: 25, scope: !14753)
!14753 = distinct !DILexicalBlock(scope: !14738, file: !1040, line: 634, column: 25)
!14754 = !DILocation(line: 634, column: 31, scope: !14753)
!14755 = !DILocation(line: 634, column: 25, scope: !14738)
!14756 = !DILocation(line: 635, column: 23, scope: !14753)
!14757 = !DILocation(line: 636, column: 30, scope: !14758)
!14758 = distinct !DILexicalBlock(scope: !14753, file: !1040, line: 636, column: 30)
!14759 = !DILocation(line: 636, column: 36, scope: !14758)
!14760 = !DILocation(line: 636, column: 30, scope: !14753)
!14761 = !DILocation(line: 638, column: 35, scope: !14762)
!14762 = distinct !DILexicalBlock(scope: !14758, file: !1040, line: 637, column: 23)
!14763 = !DILocation(line: 639, column: 25, scope: !14762)
!14764 = !DILocation(line: 641, column: 30, scope: !14765)
!14765 = distinct !DILexicalBlock(scope: !14758, file: !1040, line: 641, column: 30)
!14766 = !DILocation(line: 641, column: 36, scope: !14765)
!14767 = !DILocation(line: 641, column: 30, scope: !14758)
!14768 = !DILocation(line: 643, column: 35, scope: !14769)
!14769 = distinct !DILexicalBlock(scope: !14765, file: !1040, line: 642, column: 23)
!14770 = !DILocation(line: 644, column: 25, scope: !14769)
!14771 = !DILocation(line: 644, column: 32, scope: !14769)
!14772 = !DILocation(line: 644, column: 36, scope: !14769)
!14773 = !DILocation(line: 644, column: 34, scope: !14769)
!14774 = !DILocation(line: 644, column: 40, scope: !14769)
!14775 = !DILocation(line: 644, column: 38, scope: !14769)
!14776 = !DILocation(line: 644, column: 48, scope: !14769)
!14777 = !DILocation(line: 644, column: 51, scope: !14769)
!14778 = !DILocation(line: 644, column: 55, scope: !14769)
!14779 = !DILocation(line: 644, column: 59, scope: !14769)
!14780 = !DILocation(line: 644, column: 57, scope: !14769)
!14781 = !DILocation(line: 0, scope: !14769)
!14782 = !DILocation(line: 645, column: 28, scope: !14769)
!14783 = distinct !{!14783, !14770, !14782}
!14784 = !DILocation(line: 646, column: 25, scope: !14769)
!14785 = !DILocation(line: 654, column: 44, scope: !14786)
!14786 = distinct !DILexicalBlock(scope: !14787, file: !1040, line: 654, column: 29)
!14787 = distinct !DILexicalBlock(scope: !14765, file: !1040, line: 649, column: 23)
!14788 = !DILocation(line: 655, column: 29, scope: !14786)
!14789 = !DILocation(line: 655, column: 32, scope: !14786)
!14790 = !DILocation(line: 655, column: 46, scope: !14786)
!14791 = !DILocation(line: 654, column: 29, scope: !14787)
!14792 = !DILocalVariable(name: "j", scope: !14793, file: !1040, line: 657, type: !55)
!14793 = distinct !DILexicalBlock(scope: !14786, file: !1040, line: 656, column: 27)
!14794 = !DILocation(line: 657, column: 36, scope: !14793)
!14795 = !DILocation(line: 658, column: 36, scope: !14796)
!14796 = distinct !DILexicalBlock(scope: !14793, file: !1040, line: 658, column: 29)
!14797 = !DILocation(line: 658, column: 34, scope: !14796)
!14798 = !DILocation(line: 658, column: 41, scope: !14799)
!14799 = distinct !DILexicalBlock(scope: !14796, file: !1040, line: 658, column: 29)
!14800 = !DILocation(line: 658, column: 45, scope: !14799)
!14801 = !DILocation(line: 658, column: 43, scope: !14799)
!14802 = !DILocation(line: 658, column: 29, scope: !14796)
!14803 = !DILocation(line: 659, column: 39, scope: !14799)
!14804 = !DILocation(line: 659, column: 43, scope: !14799)
!14805 = !DILocation(line: 659, column: 47, scope: !14799)
!14806 = !DILocation(line: 659, column: 45, scope: !14799)
!14807 = !DILocation(line: 659, column: 51, scope: !14799)
!14808 = !DILocation(line: 659, column: 49, scope: !14799)
!14809 = !DILocation(line: 659, column: 31, scope: !14799)
!14810 = !DILocation(line: 663, column: 35, scope: !14811)
!14811 = distinct !DILexicalBlock(scope: !14799, file: !1040, line: 660, column: 33)
!14812 = !DILocation(line: 666, column: 35, scope: !14811)
!14813 = !DILocation(line: 667, column: 33, scope: !14811)
!14814 = !DILocation(line: 658, column: 53, scope: !14799)
!14815 = !DILocation(line: 658, column: 29, scope: !14799)
!14816 = distinct !{!14816, !14802, !14817}
!14817 = !DILocation(line: 667, column: 33, scope: !14796)
!14818 = !DILocation(line: 668, column: 27, scope: !14793)
!14819 = !DILocation(line: 670, column: 41, scope: !14820)
!14820 = distinct !DILexicalBlock(scope: !14787, file: !1040, line: 670, column: 29)
!14821 = !DILocation(line: 670, column: 31, scope: !14820)
!14822 = !DILocation(line: 670, column: 29, scope: !14787)
!14823 = !DILocation(line: 671, column: 37, scope: !14820)
!14824 = !DILocation(line: 671, column: 27, scope: !14820)
!14825 = !DILocation(line: 672, column: 30, scope: !14787)
!14826 = !DILocation(line: 672, column: 27, scope: !14787)
!14827 = !DILocation(line: 674, column: 19, scope: !14738)
!14828 = !DILocation(line: 675, column: 26, scope: !14723)
!14829 = !DILocation(line: 675, column: 24, scope: !14723)
!14830 = distinct !{!14830, !14736, !14831}
!14831 = !DILocation(line: 675, column: 44, scope: !14723)
!14832 = !DILocation(line: 678, column: 40, scope: !14707)
!14833 = !DILocation(line: 678, column: 38, scope: !14707)
!14834 = !DILocation(line: 680, column: 21, scope: !14835)
!14835 = distinct !DILexicalBlock(scope: !14707, file: !1040, line: 680, column: 17)
!14836 = !DILocation(line: 680, column: 19, scope: !14835)
!14837 = !DILocation(line: 680, column: 23, scope: !14835)
!14838 = !DILocation(line: 680, column: 27, scope: !14835)
!14839 = !DILocation(line: 680, column: 45, scope: !14835)
!14840 = !DILocation(line: 680, column: 50, scope: !14835)
!14841 = !DILocation(line: 680, column: 17, scope: !14707)
!14842 = !DILocalVariable(name: "ilim", scope: !14843, file: !1040, line: 684, type: !55)
!14843 = distinct !DILexicalBlock(scope: !14835, file: !1040, line: 681, column: 15)
!14844 = !DILocation(line: 684, column: 24, scope: !14843)
!14845 = !DILocation(line: 684, column: 31, scope: !14843)
!14846 = !DILocation(line: 684, column: 35, scope: !14843)
!14847 = !DILocation(line: 684, column: 33, scope: !14843)
!14848 = !DILocation(line: 686, column: 17, scope: !14843)
!14849 = !DILocation(line: 688, column: 25, scope: !14850)
!14850 = distinct !DILexicalBlock(scope: !14851, file: !1040, line: 688, column: 25)
!14851 = distinct !DILexicalBlock(scope: !14852, file: !1040, line: 687, column: 19)
!14852 = distinct !DILexicalBlock(scope: !14853, file: !1040, line: 686, column: 17)
!14853 = distinct !DILexicalBlock(scope: !14843, file: !1040, line: 686, column: 17)
!14854 = !DILocation(line: 688, column: 43, scope: !14850)
!14855 = !DILocation(line: 688, column: 48, scope: !14850)
!14856 = !DILocation(line: 688, column: 25, scope: !14851)
!14857 = !DILocation(line: 690, column: 25, scope: !14858)
!14858 = distinct !DILexicalBlock(scope: !14850, file: !1040, line: 689, column: 23)
!14859 = !DILocation(line: 690, column: 25, scope: !14860)
!14860 = distinct !DILexicalBlock(scope: !14861, file: !1040, line: 690, column: 25)
!14861 = distinct !DILexicalBlock(scope: !14858, file: !1040, line: 690, column: 25)
!14862 = !DILocation(line: 690, column: 25, scope: !14861)
!14863 = !DILocation(line: 690, column: 25, scope: !14864)
!14864 = distinct !DILexicalBlock(scope: !14861, file: !1040, line: 690, column: 25)
!14865 = !DILocation(line: 690, column: 25, scope: !14866)
!14866 = distinct !DILexicalBlock(scope: !14864, file: !1040, line: 690, column: 25)
!14867 = !DILocation(line: 690, column: 25, scope: !14868)
!14868 = distinct !DILexicalBlock(scope: !14869, file: !1040, line: 690, column: 25)
!14869 = distinct !DILexicalBlock(scope: !14866, file: !1040, line: 690, column: 25)
!14870 = !DILocation(line: 690, column: 25, scope: !14869)
!14871 = !DILocation(line: 690, column: 25, scope: !14872)
!14872 = distinct !DILexicalBlock(scope: !14873, file: !1040, line: 690, column: 25)
!14873 = distinct !DILexicalBlock(scope: !14866, file: !1040, line: 690, column: 25)
!14874 = !DILocation(line: 690, column: 25, scope: !14873)
!14875 = !DILocation(line: 690, column: 25, scope: !14876)
!14876 = distinct !DILexicalBlock(scope: !14877, file: !1040, line: 690, column: 25)
!14877 = distinct !DILexicalBlock(scope: !14866, file: !1040, line: 690, column: 25)
!14878 = !DILocation(line: 690, column: 25, scope: !14877)
!14879 = !DILocation(line: 690, column: 25, scope: !14880)
!14880 = distinct !DILexicalBlock(scope: !14881, file: !1040, line: 690, column: 25)
!14881 = distinct !DILexicalBlock(scope: !14861, file: !1040, line: 690, column: 25)
!14882 = !DILocation(line: 690, column: 25, scope: !14881)
!14883 = !DILocation(line: 691, column: 25, scope: !14858)
!14884 = !DILocation(line: 691, column: 25, scope: !14885)
!14885 = distinct !DILexicalBlock(scope: !14886, file: !1040, line: 691, column: 25)
!14886 = distinct !DILexicalBlock(scope: !14858, file: !1040, line: 691, column: 25)
!14887 = !DILocation(line: 691, column: 25, scope: !14886)
!14888 = !DILocation(line: 692, column: 25, scope: !14858)
!14889 = !DILocation(line: 692, column: 25, scope: !14890)
!14890 = distinct !DILexicalBlock(scope: !14891, file: !1040, line: 692, column: 25)
!14891 = distinct !DILexicalBlock(scope: !14858, file: !1040, line: 692, column: 25)
!14892 = !DILocation(line: 692, column: 25, scope: !14891)
!14893 = !DILocation(line: 693, column: 36, scope: !14858)
!14894 = !DILocation(line: 693, column: 38, scope: !14858)
!14895 = !DILocation(line: 693, column: 33, scope: !14858)
!14896 = !DILocation(line: 693, column: 29, scope: !14858)
!14897 = !DILocation(line: 693, column: 27, scope: !14858)
!14898 = !DILocation(line: 694, column: 23, scope: !14858)
!14899 = !DILocation(line: 695, column: 30, scope: !14900)
!14900 = distinct !DILexicalBlock(scope: !14850, file: !1040, line: 695, column: 30)
!14901 = !DILocation(line: 695, column: 30, scope: !14850)
!14902 = !DILocation(line: 697, column: 25, scope: !14903)
!14903 = distinct !DILexicalBlock(scope: !14900, file: !1040, line: 696, column: 23)
!14904 = !DILocation(line: 697, column: 25, scope: !14905)
!14905 = distinct !DILexicalBlock(scope: !14906, file: !1040, line: 697, column: 25)
!14906 = distinct !DILexicalBlock(scope: !14903, file: !1040, line: 697, column: 25)
!14907 = !DILocation(line: 697, column: 25, scope: !14906)
!14908 = !DILocation(line: 698, column: 40, scope: !14903)
!14909 = !DILocation(line: 699, column: 23, scope: !14903)
!14910 = !DILocation(line: 700, column: 25, scope: !14911)
!14911 = distinct !DILexicalBlock(scope: !14851, file: !1040, line: 700, column: 25)
!14912 = !DILocation(line: 700, column: 33, scope: !14911)
!14913 = !DILocation(line: 700, column: 35, scope: !14911)
!14914 = !DILocation(line: 700, column: 30, scope: !14911)
!14915 = !DILocation(line: 700, column: 25, scope: !14851)
!14916 = !DILocation(line: 701, column: 23, scope: !14911)
!14917 = !DILocation(line: 702, column: 21, scope: !14851)
!14918 = !DILocation(line: 702, column: 21, scope: !14919)
!14919 = distinct !DILexicalBlock(scope: !14920, file: !1040, line: 702, column: 21)
!14920 = distinct !DILexicalBlock(scope: !14851, file: !1040, line: 702, column: 21)
!14921 = !DILocation(line: 702, column: 21, scope: !14920)
!14922 = !DILocation(line: 702, column: 21, scope: !14923)
!14923 = distinct !DILexicalBlock(scope: !14919, file: !1040, line: 702, column: 21)
!14924 = !DILocation(line: 702, column: 21, scope: !14925)
!14925 = distinct !DILexicalBlock(scope: !14926, file: !1040, line: 702, column: 21)
!14926 = distinct !DILexicalBlock(scope: !14923, file: !1040, line: 702, column: 21)
!14927 = !DILocation(line: 702, column: 21, scope: !14926)
!14928 = !DILocation(line: 702, column: 21, scope: !14929)
!14929 = distinct !DILexicalBlock(scope: !14930, file: !1040, line: 702, column: 21)
!14930 = distinct !DILexicalBlock(scope: !14923, file: !1040, line: 702, column: 21)
!14931 = !DILocation(line: 702, column: 21, scope: !14930)
!14932 = !DILocation(line: 703, column: 21, scope: !14851)
!14933 = !DILocation(line: 703, column: 21, scope: !14934)
!14934 = distinct !DILexicalBlock(scope: !14935, file: !1040, line: 703, column: 21)
!14935 = distinct !DILexicalBlock(scope: !14851, file: !1040, line: 703, column: 21)
!14936 = !DILocation(line: 703, column: 21, scope: !14935)
!14937 = !DILocation(line: 704, column: 25, scope: !14851)
!14938 = !DILocation(line: 704, column: 29, scope: !14851)
!14939 = !DILocation(line: 704, column: 23, scope: !14851)
!14940 = !DILocation(line: 686, column: 17, scope: !14852)
!14941 = distinct !{!14941, !14942, !14943}
!14942 = !DILocation(line: 686, column: 17, scope: !14853)
!14943 = !DILocation(line: 705, column: 19, scope: !14853)
!14944 = !DILocation(line: 707, column: 17, scope: !14843)
!14945 = !DILocation(line: 710, column: 9, scope: !14457)
!14946 = !DILocation(line: 712, column: 16, scope: !14947)
!14947 = distinct !DILexicalBlock(scope: !14403, file: !1040, line: 712, column: 11)
!14948 = !DILocation(line: 712, column: 34, scope: !14947)
!14949 = !DILocation(line: 712, column: 37, scope: !14947)
!14950 = !DILocation(line: 712, column: 51, scope: !14947)
!14951 = !DILocation(line: 713, column: 15, scope: !14947)
!14952 = !DILocation(line: 713, column: 18, scope: !14947)
!14953 = !DILocation(line: 714, column: 14, scope: !14947)
!14954 = !DILocation(line: 714, column: 17, scope: !14947)
!14955 = !DILocation(line: 715, column: 14, scope: !14947)
!14956 = !DILocation(line: 715, column: 17, scope: !14947)
!14957 = !DILocation(line: 715, column: 33, scope: !14947)
!14958 = !DILocation(line: 715, column: 35, scope: !14947)
!14959 = !DILocation(line: 715, column: 51, scope: !14947)
!14960 = !DILocation(line: 715, column: 53, scope: !14947)
!14961 = !DILocation(line: 715, column: 47, scope: !14947)
!14962 = !DILocation(line: 715, column: 65, scope: !14947)
!14963 = !DILocation(line: 716, column: 11, scope: !14947)
!14964 = !DILocation(line: 716, column: 15, scope: !14947)
!14965 = !DILocation(line: 712, column: 11, scope: !14403)
!14966 = !DILocation(line: 717, column: 9, scope: !14947)
!14967 = !DILabel(scope: !14403, name: "store_escape", file: !1040, line: 719)
!14968 = !DILocation(line: 719, column: 5, scope: !14403)
!14969 = !DILocation(line: 720, column: 7, scope: !14403)
!14970 = !DILocation(line: 720, column: 7, scope: !14971)
!14971 = distinct !DILexicalBlock(scope: !14972, file: !1040, line: 720, column: 7)
!14972 = distinct !DILexicalBlock(scope: !14403, file: !1040, line: 720, column: 7)
!14973 = !DILocation(line: 720, column: 7, scope: !14972)
!14974 = !DILocation(line: 720, column: 7, scope: !14975)
!14975 = distinct !DILexicalBlock(scope: !14972, file: !1040, line: 720, column: 7)
!14976 = !DILocation(line: 720, column: 7, scope: !14977)
!14977 = distinct !DILexicalBlock(scope: !14975, file: !1040, line: 720, column: 7)
!14978 = !DILocation(line: 720, column: 7, scope: !14979)
!14979 = distinct !DILexicalBlock(scope: !14980, file: !1040, line: 720, column: 7)
!14980 = distinct !DILexicalBlock(scope: !14977, file: !1040, line: 720, column: 7)
!14981 = !DILocation(line: 720, column: 7, scope: !14980)
!14982 = !DILocation(line: 720, column: 7, scope: !14983)
!14983 = distinct !DILexicalBlock(scope: !14984, file: !1040, line: 720, column: 7)
!14984 = distinct !DILexicalBlock(scope: !14977, file: !1040, line: 720, column: 7)
!14985 = !DILocation(line: 720, column: 7, scope: !14984)
!14986 = !DILocation(line: 720, column: 7, scope: !14987)
!14987 = distinct !DILexicalBlock(scope: !14988, file: !1040, line: 720, column: 7)
!14988 = distinct !DILexicalBlock(scope: !14977, file: !1040, line: 720, column: 7)
!14989 = !DILocation(line: 720, column: 7, scope: !14988)
!14990 = !DILocation(line: 720, column: 7, scope: !14991)
!14991 = distinct !DILexicalBlock(scope: !14992, file: !1040, line: 720, column: 7)
!14992 = distinct !DILexicalBlock(scope: !14972, file: !1040, line: 720, column: 7)
!14993 = !DILocation(line: 720, column: 7, scope: !14992)
!14994 = !DILabel(scope: !14403, name: "store_c", file: !1040, line: 722)
!14995 = !DILocation(line: 722, column: 5, scope: !14403)
!14996 = !DILocation(line: 723, column: 7, scope: !14403)
!14997 = !DILocation(line: 723, column: 7, scope: !14998)
!14998 = distinct !DILexicalBlock(scope: !14999, file: !1040, line: 723, column: 7)
!14999 = distinct !DILexicalBlock(scope: !14403, file: !1040, line: 723, column: 7)
!15000 = !DILocation(line: 723, column: 7, scope: !14999)
!15001 = !DILocation(line: 723, column: 7, scope: !15002)
!15002 = distinct !DILexicalBlock(scope: !14998, file: !1040, line: 723, column: 7)
!15003 = !DILocation(line: 723, column: 7, scope: !15004)
!15004 = distinct !DILexicalBlock(scope: !15005, file: !1040, line: 723, column: 7)
!15005 = distinct !DILexicalBlock(scope: !15002, file: !1040, line: 723, column: 7)
!15006 = !DILocation(line: 723, column: 7, scope: !15005)
!15007 = !DILocation(line: 723, column: 7, scope: !15008)
!15008 = distinct !DILexicalBlock(scope: !15009, file: !1040, line: 723, column: 7)
!15009 = distinct !DILexicalBlock(scope: !15002, file: !1040, line: 723, column: 7)
!15010 = !DILocation(line: 723, column: 7, scope: !15009)
!15011 = !DILocation(line: 724, column: 7, scope: !14403)
!15012 = !DILocation(line: 724, column: 7, scope: !15013)
!15013 = distinct !DILexicalBlock(scope: !15014, file: !1040, line: 724, column: 7)
!15014 = distinct !DILexicalBlock(scope: !14403, file: !1040, line: 724, column: 7)
!15015 = !DILocation(line: 724, column: 7, scope: !15014)
!15016 = !DILocation(line: 726, column: 13, scope: !15017)
!15017 = distinct !DILexicalBlock(scope: !14403, file: !1040, line: 726, column: 11)
!15018 = !DILocation(line: 726, column: 11, scope: !14403)
!15019 = !DILocation(line: 727, column: 38, scope: !15017)
!15020 = !DILocation(line: 727, column: 9, scope: !15017)
!15021 = !DILocation(line: 728, column: 5, scope: !14403)
!15022 = !DILocation(line: 400, column: 75, scope: !14392)
!15023 = !DILocation(line: 400, column: 3, scope: !14392)
!15024 = distinct !{!15024, !14401, !15025}
!15025 = !DILocation(line: 728, column: 5, scope: !14389)
!15026 = !DILocation(line: 730, column: 7, scope: !15027)
!15027 = distinct !DILexicalBlock(scope: !14253, file: !1040, line: 730, column: 7)
!15028 = !DILocation(line: 730, column: 11, scope: !15027)
!15029 = !DILocation(line: 730, column: 16, scope: !15027)
!15030 = !DILocation(line: 730, column: 19, scope: !15027)
!15031 = !DILocation(line: 730, column: 33, scope: !15027)
!15032 = !DILocation(line: 731, column: 7, scope: !15027)
!15033 = !DILocation(line: 731, column: 10, scope: !15027)
!15034 = !DILocation(line: 730, column: 7, scope: !14253)
!15035 = !DILocation(line: 732, column: 5, scope: !15027)
!15036 = !DILocation(line: 738, column: 7, scope: !15037)
!15037 = distinct !DILexicalBlock(scope: !14253, file: !1040, line: 738, column: 7)
!15038 = !DILocation(line: 738, column: 21, scope: !15037)
!15039 = !DILocation(line: 738, column: 51, scope: !15037)
!15040 = !DILocation(line: 738, column: 56, scope: !15037)
!15041 = !DILocation(line: 739, column: 7, scope: !15037)
!15042 = !DILocation(line: 739, column: 10, scope: !15037)
!15043 = !DILocation(line: 738, column: 7, scope: !14253)
!15044 = !DILocation(line: 741, column: 11, scope: !15045)
!15045 = distinct !DILexicalBlock(scope: !15046, file: !1040, line: 741, column: 11)
!15046 = distinct !DILexicalBlock(scope: !15037, file: !1040, line: 740, column: 5)
!15047 = !DILocation(line: 741, column: 11, scope: !15046)
!15048 = !DILocation(line: 742, column: 42, scope: !15045)
!15049 = !DILocation(line: 742, column: 50, scope: !15045)
!15050 = !DILocation(line: 742, column: 67, scope: !15045)
!15051 = !DILocation(line: 742, column: 72, scope: !15045)
!15052 = !DILocation(line: 744, column: 42, scope: !15045)
!15053 = !DILocation(line: 744, column: 49, scope: !15045)
!15054 = !DILocation(line: 745, column: 42, scope: !15045)
!15055 = !DILocation(line: 745, column: 54, scope: !15045)
!15056 = !DILocation(line: 742, column: 16, scope: !15045)
!15057 = !DILocation(line: 742, column: 9, scope: !15045)
!15058 = !DILocation(line: 746, column: 18, scope: !15059)
!15059 = distinct !DILexicalBlock(scope: !15045, file: !1040, line: 746, column: 16)
!15060 = !DILocation(line: 746, column: 29, scope: !15059)
!15061 = !DILocation(line: 746, column: 32, scope: !15059)
!15062 = !DILocation(line: 746, column: 16, scope: !15045)
!15063 = !DILocation(line: 749, column: 24, scope: !15064)
!15064 = distinct !DILexicalBlock(scope: !15059, file: !1040, line: 747, column: 9)
!15065 = !DILocation(line: 749, column: 22, scope: !15064)
!15066 = !DILocation(line: 750, column: 15, scope: !15064)
!15067 = !DILocation(line: 751, column: 11, scope: !15064)
!15068 = !DILocation(line: 753, column: 5, scope: !15046)
!15069 = !DILocation(line: 755, column: 7, scope: !15070)
!15070 = distinct !DILexicalBlock(scope: !14253, file: !1040, line: 755, column: 7)
!15071 = !DILocation(line: 755, column: 20, scope: !15070)
!15072 = !DILocation(line: 755, column: 24, scope: !15070)
!15073 = !DILocation(line: 755, column: 7, scope: !14253)
!15074 = !DILocation(line: 756, column: 5, scope: !15070)
!15075 = !DILocation(line: 756, column: 13, scope: !15076)
!15076 = distinct !DILexicalBlock(scope: !15077, file: !1040, line: 756, column: 5)
!15077 = distinct !DILexicalBlock(scope: !15070, file: !1040, line: 756, column: 5)
!15078 = !DILocation(line: 756, column: 12, scope: !15076)
!15079 = !DILocation(line: 756, column: 5, scope: !15077)
!15080 = !DILocation(line: 757, column: 7, scope: !15076)
!15081 = !DILocation(line: 757, column: 7, scope: !15082)
!15082 = distinct !DILexicalBlock(scope: !15083, file: !1040, line: 757, column: 7)
!15083 = distinct !DILexicalBlock(scope: !15076, file: !1040, line: 757, column: 7)
!15084 = !DILocation(line: 757, column: 7, scope: !15083)
!15085 = !DILocation(line: 756, column: 39, scope: !15076)
!15086 = !DILocation(line: 756, column: 5, scope: !15076)
!15087 = distinct !{!15087, !15079, !15088}
!15088 = !DILocation(line: 757, column: 7, scope: !15077)
!15089 = !DILocation(line: 759, column: 7, scope: !15090)
!15090 = distinct !DILexicalBlock(scope: !14253, file: !1040, line: 759, column: 7)
!15091 = !DILocation(line: 759, column: 13, scope: !15090)
!15092 = !DILocation(line: 759, column: 11, scope: !15090)
!15093 = !DILocation(line: 759, column: 7, scope: !14253)
!15094 = !DILocation(line: 760, column: 5, scope: !15090)
!15095 = !DILocation(line: 760, column: 12, scope: !15090)
!15096 = !DILocation(line: 760, column: 17, scope: !15090)
!15097 = !DILocation(line: 761, column: 10, scope: !14253)
!15098 = !DILocation(line: 761, column: 3, scope: !14253)
!15099 = !DILabel(scope: !14253, name: "force_outer_quoting_style", file: !1040, line: 763)
!15100 = !DILocation(line: 763, column: 2, scope: !14253)
!15101 = !DILocation(line: 766, column: 7, scope: !15102)
!15102 = distinct !DILexicalBlock(scope: !14253, file: !1040, line: 766, column: 7)
!15103 = !DILocation(line: 766, column: 21, scope: !15102)
!15104 = !DILocation(line: 766, column: 51, scope: !15102)
!15105 = !DILocation(line: 766, column: 54, scope: !15102)
!15106 = !DILocation(line: 766, column: 7, scope: !14253)
!15107 = !DILocation(line: 767, column: 19, scope: !15102)
!15108 = !DILocation(line: 767, column: 5, scope: !15102)
!15109 = !DILocation(line: 768, column: 36, scope: !14253)
!15110 = !DILocation(line: 768, column: 44, scope: !14253)
!15111 = !DILocation(line: 768, column: 56, scope: !14253)
!15112 = !DILocation(line: 768, column: 61, scope: !14253)
!15113 = !DILocation(line: 769, column: 36, scope: !14253)
!15114 = !DILocation(line: 770, column: 36, scope: !14253)
!15115 = !DILocation(line: 770, column: 42, scope: !14253)
!15116 = !DILocation(line: 771, column: 36, scope: !14253)
!15117 = !DILocation(line: 771, column: 48, scope: !14253)
!15118 = !DILocation(line: 768, column: 10, scope: !14253)
!15119 = !DILocation(line: 768, column: 3, scope: !14253)
!15120 = !DILocation(line: 772, column: 1, scope: !14253)
!15121 = distinct !DISubprogram(name: "gettext_quote", scope: !1040, file: !1040, line: 207, type: !1128, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1011, retainedNodes: !209)
!15122 = !DILocalVariable(name: "msgid", arg: 1, scope: !15121, file: !1040, line: 207, type: !180)
!15123 = !DILocation(line: 207, column: 28, scope: !15121)
!15124 = !DILocalVariable(name: "s", arg: 2, scope: !15121, file: !1040, line: 207, type: !1014)
!15125 = !DILocation(line: 207, column: 54, scope: !15121)
!15126 = !DILocalVariable(name: "translation", scope: !15121, file: !1040, line: 209, type: !180)
!15127 = !DILocation(line: 209, column: 15, scope: !15121)
!15128 = !DILocation(line: 209, column: 29, scope: !15121)
!15129 = !DILocalVariable(name: "locale_code", scope: !15121, file: !1040, line: 210, type: !180)
!15130 = !DILocation(line: 210, column: 15, scope: !15121)
!15131 = !DILocation(line: 212, column: 7, scope: !15132)
!15132 = distinct !DILexicalBlock(scope: !15121, file: !1040, line: 212, column: 7)
!15133 = !DILocation(line: 212, column: 22, scope: !15132)
!15134 = !DILocation(line: 212, column: 19, scope: !15132)
!15135 = !DILocation(line: 212, column: 7, scope: !15121)
!15136 = !DILocation(line: 213, column: 12, scope: !15132)
!15137 = !DILocation(line: 213, column: 5, scope: !15132)
!15138 = !DILocation(line: 233, column: 17, scope: !15121)
!15139 = !DILocation(line: 233, column: 15, scope: !15121)
!15140 = !DILocation(line: 234, column: 7, scope: !15141)
!15141 = distinct !DILexicalBlock(scope: !15121, file: !1040, line: 234, column: 7)
!15142 = !DILocation(line: 234, column: 7, scope: !15121)
!15143 = !DILocation(line: 235, column: 12, scope: !15141)
!15144 = !DILocation(line: 235, column: 21, scope: !15141)
!15145 = !DILocation(line: 235, column: 5, scope: !15141)
!15146 = !DILocation(line: 236, column: 7, scope: !15147)
!15147 = distinct !DILexicalBlock(scope: !15121, file: !1040, line: 236, column: 7)
!15148 = !DILocation(line: 236, column: 7, scope: !15121)
!15149 = !DILocation(line: 237, column: 12, scope: !15147)
!15150 = !DILocation(line: 237, column: 21, scope: !15147)
!15151 = !DILocation(line: 237, column: 5, scope: !15147)
!15152 = !DILocation(line: 239, column: 11, scope: !15121)
!15153 = !DILocation(line: 239, column: 13, scope: !15121)
!15154 = !DILocation(line: 239, column: 3, scope: !15121)
!15155 = !DILocation(line: 240, column: 1, scope: !15121)
!15156 = distinct !DISubprogram(name: "quotearg_alloc", scope: !1040, file: !1040, line: 799, type: !1063, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1011, retainedNodes: !209)
!15157 = !DILocalVariable(name: "arg", arg: 1, scope: !15156, file: !1040, line: 799, type: !180)
!15158 = !DILocation(line: 799, column: 29, scope: !15156)
!15159 = !DILocalVariable(name: "argsize", arg: 2, scope: !15156, file: !1040, line: 799, type: !55)
!15160 = !DILocation(line: 799, column: 41, scope: !15156)
!15161 = !DILocalVariable(name: "o", arg: 3, scope: !15156, file: !1040, line: 800, type: !1050)
!15162 = !DILocation(line: 800, column: 47, scope: !15156)
!15163 = !DILocation(line: 802, column: 30, scope: !15156)
!15164 = !DILocation(line: 802, column: 35, scope: !15156)
!15165 = !DILocation(line: 802, column: 50, scope: !15156)
!15166 = !DILocation(line: 802, column: 10, scope: !15156)
!15167 = !DILocation(line: 802, column: 3, scope: !15156)
!15168 = distinct !DISubprogram(name: "quotearg_alloc_mem", scope: !1040, file: !1040, line: 812, type: !1065, scopeLine: 814, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1011, retainedNodes: !209)
!15169 = !DILocalVariable(name: "arg", arg: 1, scope: !15168, file: !1040, line: 812, type: !180)
!15170 = !DILocation(line: 812, column: 33, scope: !15168)
!15171 = !DILocalVariable(name: "argsize", arg: 2, scope: !15168, file: !1040, line: 812, type: !55)
!15172 = !DILocation(line: 812, column: 45, scope: !15168)
!15173 = !DILocalVariable(name: "size", arg: 3, scope: !15168, file: !1040, line: 812, type: !714)
!15174 = !DILocation(line: 812, column: 62, scope: !15168)
!15175 = !DILocalVariable(name: "o", arg: 4, scope: !15168, file: !1040, line: 813, type: !1050)
!15176 = !DILocation(line: 813, column: 51, scope: !15168)
!15177 = !DILocalVariable(name: "p", scope: !15168, file: !1040, line: 815, type: !1050)
!15178 = !DILocation(line: 815, column: 33, scope: !15168)
!15179 = !DILocation(line: 815, column: 37, scope: !15168)
!15180 = !DILocation(line: 815, column: 41, scope: !15168)
!15181 = !DILocalVariable(name: "e", scope: !15168, file: !1040, line: 816, type: !7)
!15182 = !DILocation(line: 816, column: 7, scope: !15168)
!15183 = !DILocation(line: 816, column: 11, scope: !15168)
!15184 = !DILocalVariable(name: "flags", scope: !15168, file: !1040, line: 818, type: !7)
!15185 = !DILocation(line: 818, column: 7, scope: !15168)
!15186 = !DILocation(line: 818, column: 15, scope: !15168)
!15187 = !DILocation(line: 818, column: 18, scope: !15168)
!15188 = !DILocation(line: 818, column: 27, scope: !15168)
!15189 = !DILocation(line: 818, column: 24, scope: !15168)
!15190 = !DILocalVariable(name: "bufsize", scope: !15168, file: !1040, line: 819, type: !55)
!15191 = !DILocation(line: 819, column: 10, scope: !15168)
!15192 = !DILocation(line: 819, column: 52, scope: !15168)
!15193 = !DILocation(line: 819, column: 57, scope: !15168)
!15194 = !DILocation(line: 819, column: 66, scope: !15168)
!15195 = !DILocation(line: 819, column: 69, scope: !15168)
!15196 = !DILocation(line: 820, column: 46, scope: !15168)
!15197 = !DILocation(line: 820, column: 53, scope: !15168)
!15198 = !DILocation(line: 820, column: 56, scope: !15168)
!15199 = !DILocation(line: 821, column: 46, scope: !15168)
!15200 = !DILocation(line: 821, column: 49, scope: !15168)
!15201 = !DILocation(line: 822, column: 46, scope: !15168)
!15202 = !DILocation(line: 822, column: 49, scope: !15168)
!15203 = !DILocation(line: 819, column: 20, scope: !15168)
!15204 = !DILocation(line: 822, column: 62, scope: !15168)
!15205 = !DILocalVariable(name: "buf", scope: !15168, file: !1040, line: 823, type: !9)
!15206 = !DILocation(line: 823, column: 9, scope: !15168)
!15207 = !DILocation(line: 823, column: 27, scope: !15168)
!15208 = !DILocation(line: 823, column: 15, scope: !15168)
!15209 = !DILocation(line: 824, column: 29, scope: !15168)
!15210 = !DILocation(line: 824, column: 34, scope: !15168)
!15211 = !DILocation(line: 824, column: 43, scope: !15168)
!15212 = !DILocation(line: 824, column: 48, scope: !15168)
!15213 = !DILocation(line: 824, column: 57, scope: !15168)
!15214 = !DILocation(line: 824, column: 60, scope: !15168)
!15215 = !DILocation(line: 824, column: 67, scope: !15168)
!15216 = !DILocation(line: 825, column: 29, scope: !15168)
!15217 = !DILocation(line: 825, column: 32, scope: !15168)
!15218 = !DILocation(line: 826, column: 29, scope: !15168)
!15219 = !DILocation(line: 826, column: 32, scope: !15168)
!15220 = !DILocation(line: 826, column: 44, scope: !15168)
!15221 = !DILocation(line: 826, column: 47, scope: !15168)
!15222 = !DILocation(line: 824, column: 3, scope: !15168)
!15223 = !DILocation(line: 827, column: 11, scope: !15168)
!15224 = !DILocation(line: 827, column: 3, scope: !15168)
!15225 = !DILocation(line: 827, column: 9, scope: !15168)
!15226 = !DILocation(line: 828, column: 7, scope: !15227)
!15227 = distinct !DILexicalBlock(scope: !15168, file: !1040, line: 828, column: 7)
!15228 = !DILocation(line: 828, column: 7, scope: !15168)
!15229 = !DILocation(line: 829, column: 13, scope: !15227)
!15230 = !DILocation(line: 829, column: 21, scope: !15227)
!15231 = !DILocation(line: 829, column: 6, scope: !15227)
!15232 = !DILocation(line: 829, column: 11, scope: !15227)
!15233 = !DILocation(line: 829, column: 5, scope: !15227)
!15234 = !DILocation(line: 830, column: 10, scope: !15168)
!15235 = !DILocation(line: 830, column: 3, scope: !15168)
!15236 = distinct !DISubprogram(name: "quotearg_free", scope: !1040, file: !1040, line: 848, type: !200, scopeLine: 849, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1011, retainedNodes: !209)
!15237 = !DILocalVariable(name: "sv", scope: !15236, file: !1040, line: 850, type: !1067)
!15238 = !DILocation(line: 850, column: 19, scope: !15236)
!15239 = !DILocation(line: 850, column: 24, scope: !15236)
!15240 = !DILocalVariable(name: "i", scope: !15236, file: !1040, line: 851, type: !7)
!15241 = !DILocation(line: 851, column: 7, scope: !15236)
!15242 = !DILocation(line: 852, column: 10, scope: !15243)
!15243 = distinct !DILexicalBlock(scope: !15236, file: !1040, line: 852, column: 3)
!15244 = !DILocation(line: 852, column: 8, scope: !15243)
!15245 = !DILocation(line: 852, column: 15, scope: !15246)
!15246 = distinct !DILexicalBlock(scope: !15243, file: !1040, line: 852, column: 3)
!15247 = !DILocation(line: 852, column: 19, scope: !15246)
!15248 = !DILocation(line: 852, column: 17, scope: !15246)
!15249 = !DILocation(line: 852, column: 3, scope: !15243)
!15250 = !DILocation(line: 853, column: 11, scope: !15246)
!15251 = !DILocation(line: 853, column: 14, scope: !15246)
!15252 = !DILocation(line: 853, column: 17, scope: !15246)
!15253 = !{!15254, !2649, i64 8}
!15254 = !{!"slotvec", !2916, i64 0, !2649, i64 8}
!15255 = !DILocation(line: 853, column: 5, scope: !15246)
!15256 = !DILocation(line: 852, column: 28, scope: !15246)
!15257 = !DILocation(line: 852, column: 3, scope: !15246)
!15258 = distinct !{!15258, !15249, !15259}
!15259 = !DILocation(line: 853, column: 20, scope: !15243)
!15260 = !DILocation(line: 854, column: 7, scope: !15261)
!15261 = distinct !DILexicalBlock(scope: !15236, file: !1040, line: 854, column: 7)
!15262 = !DILocation(line: 854, column: 13, scope: !15261)
!15263 = !DILocation(line: 854, column: 17, scope: !15261)
!15264 = !DILocation(line: 854, column: 7, scope: !15236)
!15265 = !DILocation(line: 856, column: 13, scope: !15266)
!15266 = distinct !DILexicalBlock(scope: !15261, file: !1040, line: 855, column: 5)
!15267 = !DILocation(line: 856, column: 19, scope: !15266)
!15268 = !DILocation(line: 856, column: 7, scope: !15266)
!15269 = !DILocation(line: 857, column: 21, scope: !15266)
!15270 = !{!15254, !2916, i64 0}
!15271 = !DILocation(line: 858, column: 20, scope: !15266)
!15272 = !DILocation(line: 859, column: 5, scope: !15266)
!15273 = !DILocation(line: 860, column: 7, scope: !15274)
!15274 = distinct !DILexicalBlock(scope: !15236, file: !1040, line: 860, column: 7)
!15275 = !DILocation(line: 860, column: 10, scope: !15274)
!15276 = !DILocation(line: 860, column: 7, scope: !15236)
!15277 = !DILocation(line: 862, column: 13, scope: !15278)
!15278 = distinct !DILexicalBlock(scope: !15274, file: !1040, line: 861, column: 5)
!15279 = !DILocation(line: 862, column: 7, scope: !15278)
!15280 = !DILocation(line: 863, column: 15, scope: !15278)
!15281 = !DILocation(line: 864, column: 5, scope: !15278)
!15282 = !DILocation(line: 865, column: 10, scope: !15236)
!15283 = !DILocation(line: 866, column: 1, scope: !15236)
!15284 = distinct !DISubprogram(name: "quotearg_n", scope: !1040, file: !1040, line: 931, type: !1072, scopeLine: 932, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1011, retainedNodes: !209)
!15285 = !DILocalVariable(name: "n", arg: 1, scope: !15284, file: !1040, line: 931, type: !7)
!15286 = !DILocation(line: 931, column: 17, scope: !15284)
!15287 = !DILocalVariable(name: "arg", arg: 2, scope: !15284, file: !1040, line: 931, type: !180)
!15288 = !DILocation(line: 931, column: 32, scope: !15284)
!15289 = !DILocation(line: 933, column: 30, scope: !15284)
!15290 = !DILocation(line: 933, column: 33, scope: !15284)
!15291 = !DILocation(line: 933, column: 10, scope: !15284)
!15292 = !DILocation(line: 933, column: 3, scope: !15284)
!15293 = distinct !DISubprogram(name: "quotearg_n_options", scope: !1040, file: !1040, line: 877, type: !1130, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1011, retainedNodes: !209)
!15294 = !DILocalVariable(name: "n", arg: 1, scope: !15293, file: !1040, line: 877, type: !7)
!15295 = !DILocation(line: 877, column: 25, scope: !15293)
!15296 = !DILocalVariable(name: "arg", arg: 2, scope: !15293, file: !1040, line: 877, type: !180)
!15297 = !DILocation(line: 877, column: 40, scope: !15293)
!15298 = !DILocalVariable(name: "argsize", arg: 3, scope: !15293, file: !1040, line: 877, type: !55)
!15299 = !DILocation(line: 877, column: 52, scope: !15293)
!15300 = !DILocalVariable(name: "options", arg: 4, scope: !15293, file: !1040, line: 878, type: !1050)
!15301 = !DILocation(line: 878, column: 51, scope: !15293)
!15302 = !DILocalVariable(name: "e", scope: !15293, file: !1040, line: 880, type: !7)
!15303 = !DILocation(line: 880, column: 7, scope: !15293)
!15304 = !DILocation(line: 880, column: 11, scope: !15293)
!15305 = !DILocalVariable(name: "sv", scope: !15293, file: !1040, line: 882, type: !1067)
!15306 = !DILocation(line: 882, column: 19, scope: !15293)
!15307 = !DILocation(line: 882, column: 24, scope: !15293)
!15308 = !DILocation(line: 884, column: 7, scope: !15309)
!15309 = distinct !DILexicalBlock(scope: !15293, file: !1040, line: 884, column: 7)
!15310 = !DILocation(line: 884, column: 9, scope: !15309)
!15311 = !DILocation(line: 884, column: 7, scope: !15293)
!15312 = !DILocation(line: 885, column: 5, scope: !15309)
!15313 = !DILocation(line: 887, column: 7, scope: !15314)
!15314 = distinct !DILexicalBlock(scope: !15293, file: !1040, line: 887, column: 7)
!15315 = !DILocation(line: 887, column: 17, scope: !15314)
!15316 = !DILocation(line: 887, column: 14, scope: !15314)
!15317 = !DILocation(line: 887, column: 7, scope: !15293)
!15318 = !DILocalVariable(name: "preallocated", scope: !15319, file: !1040, line: 889, type: !142)
!15319 = distinct !DILexicalBlock(scope: !15314, file: !1040, line: 888, column: 5)
!15320 = !DILocation(line: 889, column: 12, scope: !15319)
!15321 = !DILocation(line: 889, column: 28, scope: !15319)
!15322 = !DILocation(line: 889, column: 31, scope: !15319)
!15323 = !DILocalVariable(name: "nmax", scope: !15319, file: !1040, line: 890, type: !7)
!15324 = !DILocation(line: 890, column: 11, scope: !15319)
!15325 = !DILocation(line: 892, column: 11, scope: !15326)
!15326 = distinct !DILexicalBlock(scope: !15319, file: !1040, line: 892, column: 11)
!15327 = !DILocation(line: 892, column: 18, scope: !15326)
!15328 = !DILocation(line: 892, column: 16, scope: !15326)
!15329 = !DILocation(line: 892, column: 11, scope: !15319)
!15330 = !DILocation(line: 893, column: 9, scope: !15326)
!15331 = !DILocation(line: 895, column: 32, scope: !15319)
!15332 = !DILocation(line: 895, column: 54, scope: !15319)
!15333 = !DILocation(line: 895, column: 59, scope: !15319)
!15334 = !DILocation(line: 895, column: 61, scope: !15319)
!15335 = !DILocation(line: 895, column: 58, scope: !15319)
!15336 = !DILocation(line: 895, column: 66, scope: !15319)
!15337 = !DILocation(line: 895, column: 22, scope: !15319)
!15338 = !DILocation(line: 895, column: 20, scope: !15319)
!15339 = !DILocation(line: 895, column: 15, scope: !15319)
!15340 = !DILocation(line: 896, column: 11, scope: !15341)
!15341 = distinct !DILexicalBlock(scope: !15319, file: !1040, line: 896, column: 11)
!15342 = !DILocation(line: 896, column: 11, scope: !15319)
!15343 = !DILocation(line: 897, column: 10, scope: !15341)
!15344 = !DILocation(line: 897, column: 15, scope: !15341)
!15345 = !{i64 0, i64 8, !3288, i64 8, i64 8, !2648}
!15346 = !DILocation(line: 897, column: 9, scope: !15341)
!15347 = !DILocation(line: 898, column: 15, scope: !15319)
!15348 = !DILocation(line: 898, column: 20, scope: !15319)
!15349 = !DILocation(line: 898, column: 18, scope: !15319)
!15350 = !DILocation(line: 898, column: 7, scope: !15319)
!15351 = !DILocation(line: 898, column: 32, scope: !15319)
!15352 = !DILocation(line: 898, column: 34, scope: !15319)
!15353 = !DILocation(line: 898, column: 40, scope: !15319)
!15354 = !DILocation(line: 898, column: 38, scope: !15319)
!15355 = !DILocation(line: 898, column: 31, scope: !15319)
!15356 = !DILocation(line: 898, column: 48, scope: !15319)
!15357 = !DILocation(line: 899, column: 16, scope: !15319)
!15358 = !DILocation(line: 899, column: 18, scope: !15319)
!15359 = !DILocation(line: 899, column: 14, scope: !15319)
!15360 = !DILocation(line: 900, column: 5, scope: !15319)
!15361 = !DILocalVariable(name: "size", scope: !15362, file: !1040, line: 903, type: !55)
!15362 = distinct !DILexicalBlock(scope: !15293, file: !1040, line: 902, column: 3)
!15363 = !DILocation(line: 903, column: 12, scope: !15362)
!15364 = !DILocation(line: 903, column: 19, scope: !15362)
!15365 = !DILocation(line: 903, column: 22, scope: !15362)
!15366 = !DILocation(line: 903, column: 25, scope: !15362)
!15367 = !DILocalVariable(name: "val", scope: !15362, file: !1040, line: 904, type: !9)
!15368 = !DILocation(line: 904, column: 11, scope: !15362)
!15369 = !DILocation(line: 904, column: 17, scope: !15362)
!15370 = !DILocation(line: 904, column: 20, scope: !15362)
!15371 = !DILocation(line: 904, column: 23, scope: !15362)
!15372 = !DILocalVariable(name: "flags", scope: !15362, file: !1040, line: 906, type: !7)
!15373 = !DILocation(line: 906, column: 9, scope: !15362)
!15374 = !DILocation(line: 906, column: 17, scope: !15362)
!15375 = !DILocation(line: 906, column: 26, scope: !15362)
!15376 = !DILocation(line: 906, column: 32, scope: !15362)
!15377 = !DILocalVariable(name: "qsize", scope: !15362, file: !1040, line: 907, type: !55)
!15378 = !DILocation(line: 907, column: 12, scope: !15362)
!15379 = !DILocation(line: 907, column: 46, scope: !15362)
!15380 = !DILocation(line: 907, column: 51, scope: !15362)
!15381 = !DILocation(line: 907, column: 57, scope: !15362)
!15382 = !DILocation(line: 907, column: 62, scope: !15362)
!15383 = !DILocation(line: 908, column: 46, scope: !15362)
!15384 = !DILocation(line: 908, column: 55, scope: !15362)
!15385 = !DILocation(line: 908, column: 62, scope: !15362)
!15386 = !DILocation(line: 909, column: 46, scope: !15362)
!15387 = !DILocation(line: 909, column: 55, scope: !15362)
!15388 = !DILocation(line: 910, column: 46, scope: !15362)
!15389 = !DILocation(line: 910, column: 55, scope: !15362)
!15390 = !DILocation(line: 911, column: 46, scope: !15362)
!15391 = !DILocation(line: 911, column: 55, scope: !15362)
!15392 = !DILocation(line: 907, column: 20, scope: !15362)
!15393 = !DILocation(line: 913, column: 9, scope: !15394)
!15394 = distinct !DILexicalBlock(scope: !15362, file: !1040, line: 913, column: 9)
!15395 = !DILocation(line: 913, column: 17, scope: !15394)
!15396 = !DILocation(line: 913, column: 14, scope: !15394)
!15397 = !DILocation(line: 913, column: 9, scope: !15362)
!15398 = !DILocation(line: 915, column: 29, scope: !15399)
!15399 = distinct !DILexicalBlock(scope: !15394, file: !1040, line: 914, column: 7)
!15400 = !DILocation(line: 915, column: 35, scope: !15399)
!15401 = !DILocation(line: 915, column: 27, scope: !15399)
!15402 = !DILocation(line: 915, column: 9, scope: !15399)
!15403 = !DILocation(line: 915, column: 12, scope: !15399)
!15404 = !DILocation(line: 915, column: 15, scope: !15399)
!15405 = !DILocation(line: 915, column: 20, scope: !15399)
!15406 = !DILocation(line: 916, column: 13, scope: !15407)
!15407 = distinct !DILexicalBlock(scope: !15399, file: !1040, line: 916, column: 13)
!15408 = !DILocation(line: 916, column: 17, scope: !15407)
!15409 = !DILocation(line: 916, column: 13, scope: !15399)
!15410 = !DILocation(line: 917, column: 17, scope: !15407)
!15411 = !DILocation(line: 917, column: 11, scope: !15407)
!15412 = !DILocation(line: 918, column: 39, scope: !15399)
!15413 = !DILocation(line: 918, column: 27, scope: !15399)
!15414 = !DILocation(line: 918, column: 25, scope: !15399)
!15415 = !DILocation(line: 918, column: 9, scope: !15399)
!15416 = !DILocation(line: 918, column: 12, scope: !15399)
!15417 = !DILocation(line: 918, column: 15, scope: !15399)
!15418 = !DILocation(line: 918, column: 19, scope: !15399)
!15419 = !DILocation(line: 919, column: 35, scope: !15399)
!15420 = !DILocation(line: 919, column: 40, scope: !15399)
!15421 = !DILocation(line: 919, column: 46, scope: !15399)
!15422 = !DILocation(line: 919, column: 51, scope: !15399)
!15423 = !DILocation(line: 919, column: 60, scope: !15399)
!15424 = !DILocation(line: 919, column: 69, scope: !15399)
!15425 = !DILocation(line: 920, column: 35, scope: !15399)
!15426 = !DILocation(line: 920, column: 42, scope: !15399)
!15427 = !DILocation(line: 920, column: 51, scope: !15399)
!15428 = !DILocation(line: 921, column: 35, scope: !15399)
!15429 = !DILocation(line: 921, column: 44, scope: !15399)
!15430 = !DILocation(line: 922, column: 35, scope: !15399)
!15431 = !DILocation(line: 922, column: 44, scope: !15399)
!15432 = !DILocation(line: 919, column: 9, scope: !15399)
!15433 = !DILocation(line: 923, column: 7, scope: !15399)
!15434 = !DILocation(line: 925, column: 13, scope: !15362)
!15435 = !DILocation(line: 925, column: 5, scope: !15362)
!15436 = !DILocation(line: 925, column: 11, scope: !15362)
!15437 = !DILocation(line: 926, column: 12, scope: !15362)
!15438 = !DILocation(line: 926, column: 5, scope: !15362)
!15439 = distinct !DISubprogram(name: "quotearg_n_mem", scope: !1040, file: !1040, line: 937, type: !1074, scopeLine: 938, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1011, retainedNodes: !209)
!15440 = !DILocalVariable(name: "n", arg: 1, scope: !15439, file: !1040, line: 937, type: !7)
!15441 = !DILocation(line: 937, column: 21, scope: !15439)
!15442 = !DILocalVariable(name: "arg", arg: 2, scope: !15439, file: !1040, line: 937, type: !180)
!15443 = !DILocation(line: 937, column: 36, scope: !15439)
!15444 = !DILocalVariable(name: "argsize", arg: 3, scope: !15439, file: !1040, line: 937, type: !55)
!15445 = !DILocation(line: 937, column: 48, scope: !15439)
!15446 = !DILocation(line: 939, column: 30, scope: !15439)
!15447 = !DILocation(line: 939, column: 33, scope: !15439)
!15448 = !DILocation(line: 939, column: 38, scope: !15439)
!15449 = !DILocation(line: 939, column: 10, scope: !15439)
!15450 = !DILocation(line: 939, column: 3, scope: !15439)
!15451 = distinct !DISubprogram(name: "quotearg", scope: !1040, file: !1040, line: 943, type: !218, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1011, retainedNodes: !209)
!15452 = !DILocalVariable(name: "arg", arg: 1, scope: !15451, file: !1040, line: 943, type: !180)
!15453 = !DILocation(line: 943, column: 23, scope: !15451)
!15454 = !DILocation(line: 945, column: 25, scope: !15451)
!15455 = !DILocation(line: 945, column: 10, scope: !15451)
!15456 = !DILocation(line: 945, column: 3, scope: !15451)
!15457 = distinct !DISubprogram(name: "quotearg_mem", scope: !1040, file: !1040, line: 949, type: !1076, scopeLine: 950, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1011, retainedNodes: !209)
!15458 = !DILocalVariable(name: "arg", arg: 1, scope: !15457, file: !1040, line: 949, type: !180)
!15459 = !DILocation(line: 949, column: 27, scope: !15457)
!15460 = !DILocalVariable(name: "argsize", arg: 2, scope: !15457, file: !1040, line: 949, type: !55)
!15461 = !DILocation(line: 949, column: 39, scope: !15457)
!15462 = !DILocation(line: 951, column: 29, scope: !15457)
!15463 = !DILocation(line: 951, column: 34, scope: !15457)
!15464 = !DILocation(line: 951, column: 10, scope: !15457)
!15465 = !DILocation(line: 951, column: 3, scope: !15457)
!15466 = distinct !DISubprogram(name: "quotearg_n_style", scope: !1040, file: !1040, line: 955, type: !1078, scopeLine: 956, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1011, retainedNodes: !209)
!15467 = !DILocalVariable(name: "n", arg: 1, scope: !15466, file: !1040, line: 955, type: !7)
!15468 = !DILocation(line: 955, column: 23, scope: !15466)
!15469 = !DILocalVariable(name: "s", arg: 2, scope: !15466, file: !1040, line: 955, type: !1014)
!15470 = !DILocation(line: 955, column: 45, scope: !15466)
!15471 = !DILocalVariable(name: "arg", arg: 3, scope: !15466, file: !1040, line: 955, type: !180)
!15472 = !DILocation(line: 955, column: 60, scope: !15466)
!15473 = !DILocalVariable(name: "o", scope: !15466, file: !1040, line: 957, type: !1051)
!15474 = !DILocation(line: 957, column: 32, scope: !15466)
!15475 = !DILocation(line: 957, column: 64, scope: !15466)
!15476 = !DILocation(line: 957, column: 36, scope: !15466)
!15477 = !DILocation(line: 958, column: 30, scope: !15466)
!15478 = !DILocation(line: 958, column: 33, scope: !15466)
!15479 = !DILocation(line: 958, column: 10, scope: !15466)
!15480 = !DILocation(line: 958, column: 3, scope: !15466)
!15481 = distinct !DISubprogram(name: "quoting_options_from_style", scope: !1040, file: !1040, line: 193, type: !1132, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1011, retainedNodes: !209)
!15482 = !DILocalVariable(name: "style", arg: 1, scope: !15481, file: !1040, line: 193, type: !1014)
!15483 = !DILocation(line: 193, column: 48, scope: !15481)
!15484 = !DILocalVariable(name: "o", scope: !15481, file: !1040, line: 195, type: !1039)
!15485 = !DILocation(line: 195, column: 26, scope: !15481)
!15486 = !DILocation(line: 196, column: 7, scope: !15487)
!15487 = distinct !DILexicalBlock(scope: !15481, file: !1040, line: 196, column: 7)
!15488 = !DILocation(line: 196, column: 13, scope: !15487)
!15489 = !DILocation(line: 196, column: 7, scope: !15481)
!15490 = !DILocation(line: 197, column: 5, scope: !15487)
!15491 = !DILocation(line: 198, column: 13, scope: !15481)
!15492 = !DILocation(line: 198, column: 5, scope: !15481)
!15493 = !DILocation(line: 198, column: 11, scope: !15481)
!15494 = !DILocation(line: 199, column: 3, scope: !15481)
!15495 = distinct !DISubprogram(name: "quotearg_n_style_mem", scope: !1040, file: !1040, line: 962, type: !1080, scopeLine: 964, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1011, retainedNodes: !209)
!15496 = !DILocalVariable(name: "n", arg: 1, scope: !15495, file: !1040, line: 962, type: !7)
!15497 = !DILocation(line: 962, column: 27, scope: !15495)
!15498 = !DILocalVariable(name: "s", arg: 2, scope: !15495, file: !1040, line: 962, type: !1014)
!15499 = !DILocation(line: 962, column: 49, scope: !15495)
!15500 = !DILocalVariable(name: "arg", arg: 3, scope: !15495, file: !1040, line: 963, type: !180)
!15501 = !DILocation(line: 963, column: 35, scope: !15495)
!15502 = !DILocalVariable(name: "argsize", arg: 4, scope: !15495, file: !1040, line: 963, type: !55)
!15503 = !DILocation(line: 963, column: 47, scope: !15495)
!15504 = !DILocalVariable(name: "o", scope: !15495, file: !1040, line: 965, type: !1051)
!15505 = !DILocation(line: 965, column: 32, scope: !15495)
!15506 = !DILocation(line: 965, column: 64, scope: !15495)
!15507 = !DILocation(line: 965, column: 36, scope: !15495)
!15508 = !DILocation(line: 966, column: 30, scope: !15495)
!15509 = !DILocation(line: 966, column: 33, scope: !15495)
!15510 = !DILocation(line: 966, column: 38, scope: !15495)
!15511 = !DILocation(line: 966, column: 10, scope: !15495)
!15512 = !DILocation(line: 966, column: 3, scope: !15495)
!15513 = distinct !DISubprogram(name: "quotearg_style", scope: !1040, file: !1040, line: 970, type: !1082, scopeLine: 971, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1011, retainedNodes: !209)
!15514 = !DILocalVariable(name: "s", arg: 1, scope: !15513, file: !1040, line: 970, type: !1014)
!15515 = !DILocation(line: 970, column: 36, scope: !15513)
!15516 = !DILocalVariable(name: "arg", arg: 2, scope: !15513, file: !1040, line: 970, type: !180)
!15517 = !DILocation(line: 970, column: 51, scope: !15513)
!15518 = !DILocation(line: 972, column: 31, scope: !15513)
!15519 = !DILocation(line: 972, column: 34, scope: !15513)
!15520 = !DILocation(line: 972, column: 10, scope: !15513)
!15521 = !DILocation(line: 972, column: 3, scope: !15513)
!15522 = distinct !DISubprogram(name: "quotearg_style_mem", scope: !1040, file: !1040, line: 976, type: !1084, scopeLine: 977, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1011, retainedNodes: !209)
!15523 = !DILocalVariable(name: "s", arg: 1, scope: !15522, file: !1040, line: 976, type: !1014)
!15524 = !DILocation(line: 976, column: 40, scope: !15522)
!15525 = !DILocalVariable(name: "arg", arg: 2, scope: !15522, file: !1040, line: 976, type: !180)
!15526 = !DILocation(line: 976, column: 55, scope: !15522)
!15527 = !DILocalVariable(name: "argsize", arg: 3, scope: !15522, file: !1040, line: 976, type: !55)
!15528 = !DILocation(line: 976, column: 67, scope: !15522)
!15529 = !DILocation(line: 978, column: 35, scope: !15522)
!15530 = !DILocation(line: 978, column: 38, scope: !15522)
!15531 = !DILocation(line: 978, column: 43, scope: !15522)
!15532 = !DILocation(line: 978, column: 10, scope: !15522)
!15533 = !DILocation(line: 978, column: 3, scope: !15522)
!15534 = distinct !DISubprogram(name: "quotearg_char_mem", scope: !1040, file: !1040, line: 982, type: !1086, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1011, retainedNodes: !209)
!15535 = !DILocalVariable(name: "arg", arg: 1, scope: !15534, file: !1040, line: 982, type: !180)
!15536 = !DILocation(line: 982, column: 32, scope: !15534)
!15537 = !DILocalVariable(name: "argsize", arg: 2, scope: !15534, file: !1040, line: 982, type: !55)
!15538 = !DILocation(line: 982, column: 44, scope: !15534)
!15539 = !DILocalVariable(name: "ch", arg: 3, scope: !15534, file: !1040, line: 982, type: !10)
!15540 = !DILocation(line: 982, column: 58, scope: !15534)
!15541 = !DILocalVariable(name: "options", scope: !15534, file: !1040, line: 984, type: !1039)
!15542 = !DILocation(line: 984, column: 26, scope: !15534)
!15543 = !DILocation(line: 985, column: 13, scope: !15534)
!15544 = !{i64 0, i64 4, !3295, i64 4, i64 4, !2635, i64 8, i64 32, !3295, i64 40, i64 8, !2648, i64 48, i64 8, !2648}
!15545 = !DILocation(line: 986, column: 31, scope: !15534)
!15546 = !DILocation(line: 986, column: 3, scope: !15534)
!15547 = !DILocation(line: 987, column: 33, scope: !15534)
!15548 = !DILocation(line: 987, column: 38, scope: !15534)
!15549 = !DILocation(line: 987, column: 10, scope: !15534)
!15550 = !DILocation(line: 987, column: 3, scope: !15534)
!15551 = distinct !DISubprogram(name: "quotearg_char", scope: !1040, file: !1040, line: 991, type: !1088, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1011, retainedNodes: !209)
!15552 = !DILocalVariable(name: "arg", arg: 1, scope: !15551, file: !1040, line: 991, type: !180)
!15553 = !DILocation(line: 991, column: 28, scope: !15551)
!15554 = !DILocalVariable(name: "ch", arg: 2, scope: !15551, file: !1040, line: 991, type: !10)
!15555 = !DILocation(line: 991, column: 38, scope: !15551)
!15556 = !DILocation(line: 993, column: 29, scope: !15551)
!15557 = !DILocation(line: 993, column: 44, scope: !15551)
!15558 = !DILocation(line: 993, column: 10, scope: !15551)
!15559 = !DILocation(line: 993, column: 3, scope: !15551)
!15560 = distinct !DISubprogram(name: "quotearg_colon", scope: !1040, file: !1040, line: 997, type: !218, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1011, retainedNodes: !209)
!15561 = !DILocalVariable(name: "arg", arg: 1, scope: !15560, file: !1040, line: 997, type: !180)
!15562 = !DILocation(line: 997, column: 29, scope: !15560)
!15563 = !DILocation(line: 999, column: 25, scope: !15560)
!15564 = !DILocation(line: 999, column: 10, scope: !15560)
!15565 = !DILocation(line: 999, column: 3, scope: !15560)
!15566 = distinct !DISubprogram(name: "quotearg_colon_mem", scope: !1040, file: !1040, line: 1003, type: !1076, scopeLine: 1004, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1011, retainedNodes: !209)
!15567 = !DILocalVariable(name: "arg", arg: 1, scope: !15566, file: !1040, line: 1003, type: !180)
!15568 = !DILocation(line: 1003, column: 33, scope: !15566)
!15569 = !DILocalVariable(name: "argsize", arg: 2, scope: !15566, file: !1040, line: 1003, type: !55)
!15570 = !DILocation(line: 1003, column: 45, scope: !15566)
!15571 = !DILocation(line: 1005, column: 29, scope: !15566)
!15572 = !DILocation(line: 1005, column: 34, scope: !15566)
!15573 = !DILocation(line: 1005, column: 10, scope: !15566)
!15574 = !DILocation(line: 1005, column: 3, scope: !15566)
!15575 = distinct !DISubprogram(name: "quotearg_n_style_colon", scope: !1040, file: !1040, line: 1009, type: !1078, scopeLine: 1010, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1011, retainedNodes: !209)
!15576 = !DILocalVariable(name: "n", arg: 1, scope: !15575, file: !1040, line: 1009, type: !7)
!15577 = !DILocation(line: 1009, column: 29, scope: !15575)
!15578 = !DILocalVariable(name: "s", arg: 2, scope: !15575, file: !1040, line: 1009, type: !1014)
!15579 = !DILocation(line: 1009, column: 51, scope: !15575)
!15580 = !DILocalVariable(name: "arg", arg: 3, scope: !15575, file: !1040, line: 1009, type: !180)
!15581 = !DILocation(line: 1009, column: 66, scope: !15575)
!15582 = !DILocalVariable(name: "options", scope: !15575, file: !1040, line: 1011, type: !1039)
!15583 = !DILocation(line: 1011, column: 26, scope: !15575)
!15584 = !DILocation(line: 1012, column: 41, scope: !15575)
!15585 = !DILocation(line: 1012, column: 13, scope: !15575)
!15586 = !DILocation(line: 1013, column: 3, scope: !15575)
!15587 = !DILocation(line: 1014, column: 30, scope: !15575)
!15588 = !DILocation(line: 1014, column: 33, scope: !15575)
!15589 = !DILocation(line: 1014, column: 10, scope: !15575)
!15590 = !DILocation(line: 1014, column: 3, scope: !15575)
!15591 = distinct !DISubprogram(name: "quotearg_n_custom", scope: !1040, file: !1040, line: 1018, type: !1090, scopeLine: 1020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1011, retainedNodes: !209)
!15592 = !DILocalVariable(name: "n", arg: 1, scope: !15591, file: !1040, line: 1018, type: !7)
!15593 = !DILocation(line: 1018, column: 24, scope: !15591)
!15594 = !DILocalVariable(name: "left_quote", arg: 2, scope: !15591, file: !1040, line: 1018, type: !180)
!15595 = !DILocation(line: 1018, column: 39, scope: !15591)
!15596 = !DILocalVariable(name: "right_quote", arg: 3, scope: !15591, file: !1040, line: 1019, type: !180)
!15597 = !DILocation(line: 1019, column: 32, scope: !15591)
!15598 = !DILocalVariable(name: "arg", arg: 4, scope: !15591, file: !1040, line: 1019, type: !180)
!15599 = !DILocation(line: 1019, column: 57, scope: !15591)
!15600 = !DILocation(line: 1021, column: 33, scope: !15591)
!15601 = !DILocation(line: 1021, column: 36, scope: !15591)
!15602 = !DILocation(line: 1021, column: 48, scope: !15591)
!15603 = !DILocation(line: 1021, column: 61, scope: !15591)
!15604 = !DILocation(line: 1021, column: 10, scope: !15591)
!15605 = !DILocation(line: 1021, column: 3, scope: !15591)
!15606 = distinct !DISubprogram(name: "quotearg_n_custom_mem", scope: !1040, file: !1040, line: 1026, type: !1092, scopeLine: 1029, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1011, retainedNodes: !209)
!15607 = !DILocalVariable(name: "n", arg: 1, scope: !15606, file: !1040, line: 1026, type: !7)
!15608 = !DILocation(line: 1026, column: 28, scope: !15606)
!15609 = !DILocalVariable(name: "left_quote", arg: 2, scope: !15606, file: !1040, line: 1026, type: !180)
!15610 = !DILocation(line: 1026, column: 43, scope: !15606)
!15611 = !DILocalVariable(name: "right_quote", arg: 3, scope: !15606, file: !1040, line: 1027, type: !180)
!15612 = !DILocation(line: 1027, column: 36, scope: !15606)
!15613 = !DILocalVariable(name: "arg", arg: 4, scope: !15606, file: !1040, line: 1028, type: !180)
!15614 = !DILocation(line: 1028, column: 36, scope: !15606)
!15615 = !DILocalVariable(name: "argsize", arg: 5, scope: !15606, file: !1040, line: 1028, type: !55)
!15616 = !DILocation(line: 1028, column: 48, scope: !15606)
!15617 = !DILocalVariable(name: "o", scope: !15606, file: !1040, line: 1030, type: !1039)
!15618 = !DILocation(line: 1030, column: 26, scope: !15606)
!15619 = !DILocation(line: 1030, column: 30, scope: !15606)
!15620 = !DILocation(line: 1031, column: 27, scope: !15606)
!15621 = !DILocation(line: 1031, column: 39, scope: !15606)
!15622 = !DILocation(line: 1031, column: 3, scope: !15606)
!15623 = !DILocation(line: 1032, column: 30, scope: !15606)
!15624 = !DILocation(line: 1032, column: 33, scope: !15606)
!15625 = !DILocation(line: 1032, column: 38, scope: !15606)
!15626 = !DILocation(line: 1032, column: 10, scope: !15606)
!15627 = !DILocation(line: 1032, column: 3, scope: !15606)
!15628 = distinct !DISubprogram(name: "quotearg_custom", scope: !1040, file: !1040, line: 1036, type: !1094, scopeLine: 1038, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1011, retainedNodes: !209)
!15629 = !DILocalVariable(name: "left_quote", arg: 1, scope: !15628, file: !1040, line: 1036, type: !180)
!15630 = !DILocation(line: 1036, column: 30, scope: !15628)
!15631 = !DILocalVariable(name: "right_quote", arg: 2, scope: !15628, file: !1040, line: 1036, type: !180)
!15632 = !DILocation(line: 1036, column: 54, scope: !15628)
!15633 = !DILocalVariable(name: "arg", arg: 3, scope: !15628, file: !1040, line: 1037, type: !180)
!15634 = !DILocation(line: 1037, column: 30, scope: !15628)
!15635 = !DILocation(line: 1039, column: 32, scope: !15628)
!15636 = !DILocation(line: 1039, column: 44, scope: !15628)
!15637 = !DILocation(line: 1039, column: 57, scope: !15628)
!15638 = !DILocation(line: 1039, column: 10, scope: !15628)
!15639 = !DILocation(line: 1039, column: 3, scope: !15628)
!15640 = distinct !DISubprogram(name: "quotearg_custom_mem", scope: !1040, file: !1040, line: 1043, type: !1096, scopeLine: 1045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1011, retainedNodes: !209)
!15641 = !DILocalVariable(name: "left_quote", arg: 1, scope: !15640, file: !1040, line: 1043, type: !180)
!15642 = !DILocation(line: 1043, column: 34, scope: !15640)
!15643 = !DILocalVariable(name: "right_quote", arg: 2, scope: !15640, file: !1040, line: 1043, type: !180)
!15644 = !DILocation(line: 1043, column: 58, scope: !15640)
!15645 = !DILocalVariable(name: "arg", arg: 3, scope: !15640, file: !1040, line: 1044, type: !180)
!15646 = !DILocation(line: 1044, column: 34, scope: !15640)
!15647 = !DILocalVariable(name: "argsize", arg: 4, scope: !15640, file: !1040, line: 1044, type: !55)
!15648 = !DILocation(line: 1044, column: 46, scope: !15640)
!15649 = !DILocation(line: 1046, column: 36, scope: !15640)
!15650 = !DILocation(line: 1046, column: 48, scope: !15640)
!15651 = !DILocation(line: 1046, column: 61, scope: !15640)
!15652 = !DILocation(line: 1047, column: 33, scope: !15640)
!15653 = !DILocation(line: 1046, column: 10, scope: !15640)
!15654 = !DILocation(line: 1046, column: 3, scope: !15640)
!15655 = distinct !DISubprogram(name: "quote_n_mem", scope: !1040, file: !1040, line: 1061, type: !1098, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1011, retainedNodes: !209)
!15656 = !DILocalVariable(name: "n", arg: 1, scope: !15655, file: !1040, line: 1061, type: !7)
!15657 = !DILocation(line: 1061, column: 18, scope: !15655)
!15658 = !DILocalVariable(name: "arg", arg: 2, scope: !15655, file: !1040, line: 1061, type: !180)
!15659 = !DILocation(line: 1061, column: 33, scope: !15655)
!15660 = !DILocalVariable(name: "argsize", arg: 3, scope: !15655, file: !1040, line: 1061, type: !55)
!15661 = !DILocation(line: 1061, column: 45, scope: !15655)
!15662 = !DILocation(line: 1063, column: 30, scope: !15655)
!15663 = !DILocation(line: 1063, column: 33, scope: !15655)
!15664 = !DILocation(line: 1063, column: 38, scope: !15655)
!15665 = !DILocation(line: 1063, column: 10, scope: !15655)
!15666 = !DILocation(line: 1063, column: 3, scope: !15655)
!15667 = distinct !DISubprogram(name: "quote_mem", scope: !1040, file: !1040, line: 1067, type: !1100, scopeLine: 1068, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1011, retainedNodes: !209)
!15668 = !DILocalVariable(name: "arg", arg: 1, scope: !15667, file: !1040, line: 1067, type: !180)
!15669 = !DILocation(line: 1067, column: 24, scope: !15667)
!15670 = !DILocalVariable(name: "argsize", arg: 2, scope: !15667, file: !1040, line: 1067, type: !55)
!15671 = !DILocation(line: 1067, column: 36, scope: !15667)
!15672 = !DILocation(line: 1069, column: 26, scope: !15667)
!15673 = !DILocation(line: 1069, column: 31, scope: !15667)
!15674 = !DILocation(line: 1069, column: 10, scope: !15667)
!15675 = !DILocation(line: 1069, column: 3, scope: !15667)
!15676 = distinct !DISubprogram(name: "quote_n", scope: !1040, file: !1040, line: 1073, type: !1102, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1011, retainedNodes: !209)
!15677 = !DILocalVariable(name: "n", arg: 1, scope: !15676, file: !1040, line: 1073, type: !7)
!15678 = !DILocation(line: 1073, column: 14, scope: !15676)
!15679 = !DILocalVariable(name: "arg", arg: 2, scope: !15676, file: !1040, line: 1073, type: !180)
!15680 = !DILocation(line: 1073, column: 29, scope: !15676)
!15681 = !DILocation(line: 1075, column: 23, scope: !15676)
!15682 = !DILocation(line: 1075, column: 26, scope: !15676)
!15683 = !DILocation(line: 1075, column: 10, scope: !15676)
!15684 = !DILocation(line: 1075, column: 3, scope: !15676)
!15685 = distinct !DISubprogram(name: "quote", scope: !1040, file: !1040, line: 1079, type: !1104, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1011, retainedNodes: !209)
!15686 = !DILocalVariable(name: "arg", arg: 1, scope: !15685, file: !1040, line: 1079, type: !180)
!15687 = !DILocation(line: 1079, column: 20, scope: !15685)
!15688 = !DILocation(line: 1081, column: 22, scope: !15685)
!15689 = !DILocation(line: 1081, column: 10, scope: !15685)
!15690 = !DILocation(line: 1081, column: 3, scope: !15685)
!15691 = distinct !DISubprogram(name: "renameatu", scope: !15692, file: !15692, line: 77, type: !1787, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1784, retainedNodes: !209)
!15692 = !DIFile(filename: "lib/renameatu.c", directory: "/home/mbarbar/clone/coreutils")
!15693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !271, line: 46, size: 1152, elements: !15694)
!15694 = !{!15695, !15696, !15697, !15698, !15699, !15700, !15701, !15702, !15703, !15704, !15705, !15706, !15711, !15712, !15713}
!15695 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !15693, file: !271, line: 48, baseType: !274, size: 64)
!15696 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !15693, file: !271, line: 53, baseType: !276, size: 64, offset: 64)
!15697 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !15693, file: !271, line: 61, baseType: !278, size: 64, offset: 128)
!15698 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !15693, file: !271, line: 62, baseType: !140, size: 32, offset: 192)
!15699 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !15693, file: !271, line: 64, baseType: !128, size: 32, offset: 224)
!15700 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !15693, file: !271, line: 65, baseType: !130, size: 32, offset: 256)
!15701 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !15693, file: !271, line: 67, baseType: !7, size: 32, offset: 288)
!15702 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !15693, file: !271, line: 69, baseType: !274, size: 64, offset: 320)
!15703 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !15693, file: !271, line: 74, baseType: !29, size: 64, offset: 384)
!15704 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !15693, file: !271, line: 78, baseType: !286, size: 64, offset: 448)
!15705 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !15693, file: !271, line: 80, baseType: !288, size: 64, offset: 512)
!15706 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !15693, file: !271, line: 91, baseType: !15707, size: 128, offset: 576)
!15707 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !291, line: 9, size: 128, elements: !15708)
!15708 = !{!15709, !15710}
!15709 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !15707, file: !291, line: 11, baseType: !294, size: 64)
!15710 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !15707, file: !291, line: 12, baseType: !296, size: 64, offset: 64)
!15711 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !15693, file: !271, line: 92, baseType: !15707, size: 128, offset: 704)
!15712 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !15693, file: !271, line: 93, baseType: !15707, size: 128, offset: 832)
!15713 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !15693, file: !271, line: 106, baseType: !300, size: 192, offset: 960)
!15714 = !DILocalVariable(name: "fd1", arg: 1, scope: !15691, file: !15692, line: 77, type: !7)
!15715 = !DILocation(line: 77, column: 16, scope: !15691)
!15716 = !DILocalVariable(name: "src", arg: 2, scope: !15691, file: !15692, line: 77, type: !180)
!15717 = !DILocation(line: 77, column: 33, scope: !15691)
!15718 = !DILocalVariable(name: "fd2", arg: 3, scope: !15691, file: !15692, line: 77, type: !7)
!15719 = !DILocation(line: 77, column: 42, scope: !15691)
!15720 = !DILocalVariable(name: "dst", arg: 4, scope: !15691, file: !15692, line: 77, type: !180)
!15721 = !DILocation(line: 77, column: 59, scope: !15691)
!15722 = !DILocalVariable(name: "flags", arg: 5, scope: !15691, file: !15692, line: 78, type: !70)
!15723 = !DILocation(line: 78, column: 25, scope: !15691)
!15724 = !DILocalVariable(name: "ret_val", scope: !15691, file: !15692, line: 80, type: !7)
!15725 = !DILocation(line: 80, column: 7, scope: !15691)
!15726 = !DILocalVariable(name: "err", scope: !15691, file: !15692, line: 81, type: !7)
!15727 = !DILocation(line: 81, column: 7, scope: !15691)
!15728 = !DILocation(line: 84, column: 24, scope: !15691)
!15729 = !DILocation(line: 84, column: 29, scope: !15691)
!15730 = !DILocation(line: 84, column: 34, scope: !15691)
!15731 = !DILocation(line: 84, column: 39, scope: !15691)
!15732 = !DILocation(line: 84, column: 44, scope: !15691)
!15733 = !DILocation(line: 84, column: 13, scope: !15691)
!15734 = !DILocation(line: 84, column: 11, scope: !15691)
!15735 = !DILocation(line: 85, column: 9, scope: !15691)
!15736 = !DILocation(line: 85, column: 7, scope: !15691)
!15737 = !DILocation(line: 99, column: 10, scope: !15738)
!15738 = distinct !DILexicalBlock(scope: !15691, file: !15692, line: 99, column: 7)
!15739 = !DILocation(line: 99, column: 18, scope: !15738)
!15740 = !DILocation(line: 99, column: 22, scope: !15738)
!15741 = !DILocation(line: 99, column: 26, scope: !15738)
!15742 = !DILocation(line: 99, column: 30, scope: !15738)
!15743 = !DILocation(line: 99, column: 40, scope: !15738)
!15744 = !DILocation(line: 99, column: 43, scope: !15738)
!15745 = !DILocation(line: 99, column: 47, scope: !15738)
!15746 = !DILocation(line: 99, column: 57, scope: !15738)
!15747 = !DILocation(line: 99, column: 60, scope: !15738)
!15748 = !DILocation(line: 99, column: 64, scope: !15738)
!15749 = !DILocation(line: 99, column: 7, scope: !15691)
!15750 = !DILocation(line: 100, column: 12, scope: !15738)
!15751 = !DILocation(line: 100, column: 5, scope: !15738)
!15752 = !DILocalVariable(name: "src_len", scope: !15753, file: !15692, line: 104, type: !55)
!15753 = distinct !DILexicalBlock(scope: !15691, file: !15692, line: 103, column: 3)
!15754 = !DILocation(line: 104, column: 10, scope: !15753)
!15755 = !DILocalVariable(name: "dst_len", scope: !15753, file: !15692, line: 105, type: !55)
!15756 = !DILocation(line: 105, column: 10, scope: !15753)
!15757 = !DILocalVariable(name: "src_temp", scope: !15753, file: !15692, line: 106, type: !9)
!15758 = !DILocation(line: 106, column: 9, scope: !15753)
!15759 = !DILocation(line: 106, column: 29, scope: !15753)
!15760 = !DILocalVariable(name: "dst_temp", scope: !15753, file: !15692, line: 107, type: !9)
!15761 = !DILocation(line: 107, column: 9, scope: !15753)
!15762 = !DILocation(line: 107, column: 29, scope: !15753)
!15763 = !DILocalVariable(name: "src_slash", scope: !15753, file: !15692, line: 108, type: !142)
!15764 = !DILocation(line: 108, column: 8, scope: !15753)
!15765 = !DILocalVariable(name: "dst_slash", scope: !15753, file: !15692, line: 109, type: !142)
!15766 = !DILocation(line: 109, column: 8, scope: !15753)
!15767 = !DILocalVariable(name: "rename_errno", scope: !15753, file: !15692, line: 110, type: !7)
!15768 = !DILocation(line: 110, column: 7, scope: !15753)
!15769 = !DILocalVariable(name: "src_st", scope: !15753, file: !15692, line: 111, type: !15693)
!15770 = !DILocation(line: 111, column: 15, scope: !15753)
!15771 = !DILocalVariable(name: "dst_st", scope: !15753, file: !15692, line: 112, type: !15693)
!15772 = !DILocation(line: 112, column: 15, scope: !15753)
!15773 = !DILocalVariable(name: "dst_found_nonexistent", scope: !15753, file: !15692, line: 113, type: !142)
!15774 = !DILocation(line: 113, column: 8, scope: !15753)
!15775 = !DILocation(line: 115, column: 7, scope: !15776)
!15776 = distinct !DILexicalBlock(scope: !15753, file: !15692, line: 115, column: 7)
!15777 = !DILocation(line: 115, column: 13, scope: !15776)
!15778 = !DILocation(line: 115, column: 7, scope: !15753)
!15779 = !DILocation(line: 118, column: 11, scope: !15780)
!15780 = distinct !DILexicalBlock(scope: !15781, file: !15692, line: 118, column: 11)
!15781 = distinct !DILexicalBlock(scope: !15776, file: !15692, line: 116, column: 5)
!15782 = !DILocation(line: 118, column: 17, scope: !15780)
!15783 = !DILocation(line: 118, column: 11, scope: !15781)
!15784 = !DILocation(line: 119, column: 16, scope: !15780)
!15785 = !DILocation(line: 119, column: 9, scope: !15780)
!15786 = !DILocation(line: 124, column: 24, scope: !15787)
!15787 = distinct !DILexicalBlock(scope: !15788, file: !15692, line: 124, column: 15)
!15788 = distinct !DILexicalBlock(scope: !15780, file: !15692, line: 121, column: 9)
!15789 = !DILocation(line: 124, column: 29, scope: !15787)
!15790 = !DILocation(line: 124, column: 15, scope: !15787)
!15791 = !DILocation(line: 124, column: 43, scope: !15787)
!15792 = !DILocation(line: 124, column: 48, scope: !15787)
!15793 = !DILocation(line: 124, column: 51, scope: !15787)
!15794 = !DILocation(line: 124, column: 57, scope: !15787)
!15795 = !DILocation(line: 124, column: 15, scope: !15788)
!15796 = !DILocation(line: 125, column: 20, scope: !15787)
!15797 = !DILocation(line: 125, column: 13, scope: !15787)
!15798 = !DILocation(line: 126, column: 15, scope: !15799)
!15799 = distinct !DILexicalBlock(scope: !15788, file: !15692, line: 126, column: 15)
!15800 = !DILocation(line: 126, column: 21, scope: !15799)
!15801 = !DILocation(line: 126, column: 15, scope: !15788)
!15802 = !DILocation(line: 127, column: 13, scope: !15799)
!15803 = !DILocation(line: 128, column: 33, scope: !15788)
!15804 = !DILocation(line: 130, column: 5, scope: !15781)
!15805 = !DILocation(line: 133, column: 21, scope: !15753)
!15806 = !DILocation(line: 133, column: 13, scope: !15753)
!15807 = !DILocation(line: 133, column: 11, scope: !15753)
!15808 = !DILocation(line: 134, column: 21, scope: !15753)
!15809 = !DILocation(line: 134, column: 13, scope: !15753)
!15810 = !DILocation(line: 134, column: 11, scope: !15753)
!15811 = !DILocation(line: 135, column: 8, scope: !15812)
!15812 = distinct !DILexicalBlock(scope: !15753, file: !15692, line: 135, column: 7)
!15813 = !DILocation(line: 135, column: 16, scope: !15812)
!15814 = !DILocation(line: 135, column: 20, scope: !15812)
!15815 = !DILocation(line: 135, column: 7, scope: !15753)
!15816 = !DILocation(line: 136, column: 22, scope: !15812)
!15817 = !DILocation(line: 136, column: 27, scope: !15812)
!15818 = !DILocation(line: 136, column: 32, scope: !15812)
!15819 = !DILocation(line: 136, column: 37, scope: !15812)
!15820 = !DILocation(line: 136, column: 12, scope: !15812)
!15821 = !DILocation(line: 136, column: 5, scope: !15812)
!15822 = !DILocation(line: 138, column: 15, scope: !15753)
!15823 = !DILocation(line: 138, column: 19, scope: !15753)
!15824 = !DILocation(line: 138, column: 27, scope: !15753)
!15825 = !DILocation(line: 138, column: 32, scope: !15753)
!15826 = !DILocation(line: 138, column: 13, scope: !15753)
!15827 = !DILocation(line: 139, column: 15, scope: !15753)
!15828 = !DILocation(line: 139, column: 19, scope: !15753)
!15829 = !DILocation(line: 139, column: 27, scope: !15753)
!15830 = !DILocation(line: 139, column: 32, scope: !15753)
!15831 = !DILocation(line: 139, column: 13, scope: !15753)
!15832 = !DILocation(line: 140, column: 8, scope: !15833)
!15833 = distinct !DILexicalBlock(scope: !15753, file: !15692, line: 140, column: 7)
!15834 = !DILocation(line: 140, column: 18, scope: !15833)
!15835 = !DILocation(line: 140, column: 22, scope: !15833)
!15836 = !DILocation(line: 140, column: 7, scope: !15753)
!15837 = !DILocation(line: 141, column: 22, scope: !15833)
!15838 = !DILocation(line: 141, column: 27, scope: !15833)
!15839 = !DILocation(line: 141, column: 32, scope: !15833)
!15840 = !DILocation(line: 141, column: 37, scope: !15833)
!15841 = !DILocation(line: 141, column: 12, scope: !15833)
!15842 = !DILocation(line: 141, column: 5, scope: !15833)
!15843 = !DILocation(line: 147, column: 16, scope: !15844)
!15844 = distinct !DILexicalBlock(scope: !15753, file: !15692, line: 147, column: 7)
!15845 = !DILocation(line: 147, column: 21, scope: !15844)
!15846 = !DILocation(line: 147, column: 7, scope: !15844)
!15847 = !DILocation(line: 147, column: 7, scope: !15753)
!15848 = !DILocation(line: 148, column: 5, scope: !15844)
!15849 = !DILocation(line: 149, column: 7, scope: !15850)
!15850 = distinct !DILexicalBlock(scope: !15753, file: !15692, line: 149, column: 7)
!15851 = !DILocation(line: 149, column: 7, scope: !15753)
!15852 = !DILocation(line: 151, column: 12, scope: !15853)
!15853 = distinct !DILexicalBlock(scope: !15854, file: !15692, line: 151, column: 11)
!15854 = distinct !DILexicalBlock(scope: !15850, file: !15692, line: 150, column: 5)
!15855 = !DILocation(line: 151, column: 11, scope: !15854)
!15856 = !DILocation(line: 152, column: 16, scope: !15853)
!15857 = !DILocation(line: 152, column: 9, scope: !15853)
!15858 = !DILocation(line: 153, column: 5, scope: !15854)
!15859 = !DILocation(line: 154, column: 21, scope: !15860)
!15860 = distinct !DILexicalBlock(scope: !15850, file: !15692, line: 154, column: 12)
!15861 = !DILocation(line: 154, column: 26, scope: !15860)
!15862 = !DILocation(line: 154, column: 12, scope: !15860)
!15863 = !DILocation(line: 154, column: 12, scope: !15850)
!15864 = !DILocation(line: 156, column: 11, scope: !15865)
!15865 = distinct !DILexicalBlock(scope: !15866, file: !15692, line: 156, column: 11)
!15866 = distinct !DILexicalBlock(scope: !15860, file: !15692, line: 155, column: 5)
!15867 = !DILocation(line: 156, column: 17, scope: !15865)
!15868 = !DILocation(line: 156, column: 27, scope: !15865)
!15869 = !DILocation(line: 156, column: 31, scope: !15865)
!15870 = !DILocation(line: 156, column: 11, scope: !15866)
!15871 = !DILocation(line: 157, column: 9, scope: !15865)
!15872 = !DILocation(line: 158, column: 5, scope: !15866)
!15873 = !DILocation(line: 159, column: 13, scope: !15874)
!15874 = distinct !DILexicalBlock(scope: !15860, file: !15692, line: 159, column: 12)
!15875 = !DILocation(line: 159, column: 12, scope: !15860)
!15876 = !DILocation(line: 160, column: 12, scope: !15874)
!15877 = !DILocation(line: 160, column: 5, scope: !15874)
!15878 = !DILocation(line: 161, column: 13, scope: !15879)
!15879 = distinct !DILexicalBlock(scope: !15874, file: !15692, line: 161, column: 12)
!15880 = !DILocation(line: 161, column: 12, scope: !15874)
!15881 = !DILocation(line: 162, column: 12, scope: !15879)
!15882 = !DILocation(line: 162, column: 5, scope: !15879)
!15883 = !DILocation(line: 214, column: 23, scope: !15753)
!15884 = !DILocation(line: 214, column: 28, scope: !15753)
!15885 = !DILocation(line: 214, column: 38, scope: !15753)
!15886 = !DILocation(line: 214, column: 43, scope: !15753)
!15887 = !DILocation(line: 214, column: 13, scope: !15753)
!15888 = !DILocation(line: 214, column: 11, scope: !15753)
!15889 = !DILocation(line: 215, column: 18, scope: !15753)
!15890 = !DILocation(line: 215, column: 16, scope: !15753)
!15891 = !DILocation(line: 216, column: 3, scope: !15753)
!15892 = !DILabel(scope: !15753, name: "out", file: !15692, line: 217)
!15893 = !DILocation(line: 217, column: 2, scope: !15753)
!15894 = !DILocation(line: 218, column: 7, scope: !15895)
!15895 = distinct !DILexicalBlock(scope: !15753, file: !15692, line: 218, column: 7)
!15896 = !DILocation(line: 218, column: 19, scope: !15895)
!15897 = !DILocation(line: 218, column: 16, scope: !15895)
!15898 = !DILocation(line: 218, column: 7, scope: !15753)
!15899 = !DILocation(line: 219, column: 11, scope: !15895)
!15900 = !DILocation(line: 219, column: 5, scope: !15895)
!15901 = !DILocation(line: 220, column: 7, scope: !15902)
!15902 = distinct !DILexicalBlock(scope: !15753, file: !15692, line: 220, column: 7)
!15903 = !DILocation(line: 220, column: 19, scope: !15902)
!15904 = !DILocation(line: 220, column: 16, scope: !15902)
!15905 = !DILocation(line: 220, column: 7, scope: !15753)
!15906 = !DILocation(line: 221, column: 11, scope: !15902)
!15907 = !DILocation(line: 221, column: 5, scope: !15902)
!15908 = !DILocation(line: 222, column: 11, scope: !15753)
!15909 = !DILocation(line: 222, column: 3, scope: !15753)
!15910 = !DILocation(line: 222, column: 9, scope: !15753)
!15911 = !DILocation(line: 223, column: 10, scope: !15753)
!15912 = !DILocation(line: 223, column: 3, scope: !15753)
!15913 = !DILocation(line: 233, column: 1, scope: !15691)
!15914 = distinct !DISubprogram(name: "errno_fail", scope: !15692, file: !15692, line: 33, type: !1789, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1784, retainedNodes: !209)
!15915 = !DILocalVariable(name: "e", arg: 1, scope: !15914, file: !15692, line: 33, type: !7)
!15916 = !DILocation(line: 33, column: 17, scope: !15914)
!15917 = !DILocation(line: 35, column: 11, scope: !15914)
!15918 = !DILocation(line: 35, column: 3, scope: !15914)
!15919 = !DILocation(line: 35, column: 9, scope: !15914)
!15920 = !DILocation(line: 36, column: 3, scope: !15914)
!15921 = distinct !DISubprogram(name: "safe_read", scope: !15922, file: !15922, line: 56, type: !1696, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1791, retainedNodes: !209)
!15922 = !DIFile(filename: "lib/safe-read.c", directory: "/home/mbarbar/clone/coreutils")
!15923 = !DILocalVariable(name: "fd", arg: 1, scope: !15921, file: !15922, line: 56, type: !7)
!15924 = !DILocation(line: 56, column: 14, scope: !15921)
!15925 = !DILocalVariable(name: "buf", arg: 2, scope: !15921, file: !15922, line: 56, type: !53)
!15926 = !DILocation(line: 56, column: 30, scope: !15921)
!15927 = !DILocalVariable(name: "count", arg: 3, scope: !15921, file: !15922, line: 56, type: !55)
!15928 = !DILocation(line: 56, column: 42, scope: !15921)
!15929 = !DILocation(line: 58, column: 3, scope: !15921)
!15930 = !DILocalVariable(name: "result", scope: !15931, file: !15922, line: 60, type: !694)
!15931 = distinct !DILexicalBlock(scope: !15932, file: !15922, line: 59, column: 5)
!15932 = distinct !DILexicalBlock(scope: !15933, file: !15922, line: 58, column: 3)
!15933 = distinct !DILexicalBlock(scope: !15921, file: !15922, line: 58, column: 3)
!15934 = !DILocation(line: 60, column: 15, scope: !15931)
!15935 = !DILocation(line: 60, column: 28, scope: !15931)
!15936 = !DILocation(line: 60, column: 32, scope: !15931)
!15937 = !DILocation(line: 60, column: 37, scope: !15931)
!15938 = !DILocation(line: 60, column: 24, scope: !15931)
!15939 = !DILocation(line: 62, column: 16, scope: !15940)
!15940 = distinct !DILexicalBlock(scope: !15931, file: !15922, line: 62, column: 11)
!15941 = !DILocation(line: 62, column: 13, scope: !15940)
!15942 = !DILocation(line: 62, column: 11, scope: !15931)
!15943 = !DILocation(line: 63, column: 16, scope: !15940)
!15944 = !DILocation(line: 63, column: 9, scope: !15940)
!15945 = !DILocation(line: 64, column: 16, scope: !15946)
!15946 = distinct !DILexicalBlock(scope: !15940, file: !15922, line: 64, column: 16)
!15947 = !DILocation(line: 64, column: 16, scope: !15940)
!15948 = !DILocation(line: 65, column: 9, scope: !15946)
!15949 = distinct !{!15949, !15950, !15951}
!15950 = !DILocation(line: 58, column: 3, scope: !15933)
!15951 = !DILocation(line: 70, column: 5, scope: !15933)
!15952 = !DILocation(line: 66, column: 16, scope: !15953)
!15953 = distinct !DILexicalBlock(scope: !15946, file: !15922, line: 66, column: 16)
!15954 = !DILocation(line: 66, column: 22, scope: !15953)
!15955 = !DILocation(line: 66, column: 32, scope: !15953)
!15956 = !DILocation(line: 66, column: 53, scope: !15953)
!15957 = !DILocation(line: 66, column: 51, scope: !15953)
!15958 = !DILocation(line: 66, column: 16, scope: !15946)
!15959 = !DILocation(line: 67, column: 15, scope: !15953)
!15960 = !DILocation(line: 67, column: 9, scope: !15953)
!15961 = !DILocation(line: 69, column: 16, scope: !15953)
!15962 = !DILocation(line: 69, column: 9, scope: !15953)
!15963 = !DILocation(line: 58, column: 3, scope: !15932)
!15964 = !DILocation(line: 71, column: 1, scope: !15921)
!15965 = distinct !DISubprogram(name: "safe_write", scope: !1792, file: !1792, line: 56, type: !1701, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1794, retainedNodes: !209)
!15966 = !DILocalVariable(name: "fd", arg: 1, scope: !15965, file: !1792, line: 56, type: !7)
!15967 = !DILocation(line: 56, column: 14, scope: !15965)
!15968 = !DILocalVariable(name: "buf", arg: 2, scope: !15965, file: !1792, line: 56, type: !515)
!15969 = !DILocation(line: 56, column: 30, scope: !15965)
!15970 = !DILocalVariable(name: "count", arg: 3, scope: !15965, file: !1792, line: 56, type: !55)
!15971 = !DILocation(line: 56, column: 42, scope: !15965)
!15972 = !DILocation(line: 58, column: 3, scope: !15965)
!15973 = !DILocalVariable(name: "result", scope: !15974, file: !1792, line: 60, type: !694)
!15974 = distinct !DILexicalBlock(scope: !15975, file: !1792, line: 59, column: 5)
!15975 = distinct !DILexicalBlock(scope: !15976, file: !1792, line: 58, column: 3)
!15976 = distinct !DILexicalBlock(scope: !15965, file: !1792, line: 58, column: 3)
!15977 = !DILocation(line: 60, column: 15, scope: !15974)
!15978 = !DILocation(line: 60, column: 28, scope: !15974)
!15979 = !DILocation(line: 60, column: 32, scope: !15974)
!15980 = !DILocation(line: 60, column: 37, scope: !15974)
!15981 = !DILocation(line: 60, column: 24, scope: !15974)
!15982 = !DILocation(line: 62, column: 16, scope: !15983)
!15983 = distinct !DILexicalBlock(scope: !15974, file: !1792, line: 62, column: 11)
!15984 = !DILocation(line: 62, column: 13, scope: !15983)
!15985 = !DILocation(line: 62, column: 11, scope: !15974)
!15986 = !DILocation(line: 63, column: 16, scope: !15983)
!15987 = !DILocation(line: 63, column: 9, scope: !15983)
!15988 = !DILocation(line: 64, column: 16, scope: !15989)
!15989 = distinct !DILexicalBlock(scope: !15983, file: !1792, line: 64, column: 16)
!15990 = !DILocation(line: 64, column: 16, scope: !15983)
!15991 = !DILocation(line: 65, column: 9, scope: !15989)
!15992 = distinct !{!15992, !15993, !15994}
!15993 = !DILocation(line: 58, column: 3, scope: !15976)
!15994 = !DILocation(line: 70, column: 5, scope: !15976)
!15995 = !DILocation(line: 66, column: 16, scope: !15996)
!15996 = distinct !DILexicalBlock(scope: !15989, file: !1792, line: 66, column: 16)
!15997 = !DILocation(line: 66, column: 22, scope: !15996)
!15998 = !DILocation(line: 66, column: 32, scope: !15996)
!15999 = !DILocation(line: 66, column: 53, scope: !15996)
!16000 = !DILocation(line: 66, column: 51, scope: !15996)
!16001 = !DILocation(line: 66, column: 16, scope: !15989)
!16002 = !DILocation(line: 67, column: 15, scope: !15996)
!16003 = !DILocation(line: 67, column: 9, scope: !15996)
!16004 = !DILocation(line: 69, column: 16, scope: !15996)
!16005 = !DILocation(line: 69, column: 9, scope: !15996)
!16006 = !DILocation(line: 58, column: 3, scope: !15975)
!16007 = !DILocation(line: 71, column: 1, scope: !15965)
!16008 = distinct !DISubprogram(name: "same_name", scope: !16009, file: !16009, line: 61, type: !1800, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1797, retainedNodes: !209)
!16009 = !DIFile(filename: "lib/same.c", directory: "/home/mbarbar/clone/coreutils")
!16010 = !DILocalVariable(name: "source", arg: 1, scope: !16008, file: !16009, line: 61, type: !180)
!16011 = !DILocation(line: 61, column: 24, scope: !16008)
!16012 = !DILocalVariable(name: "dest", arg: 2, scope: !16008, file: !16009, line: 61, type: !180)
!16013 = !DILocation(line: 61, column: 44, scope: !16008)
!16014 = !DILocation(line: 63, column: 33, scope: !16008)
!16015 = !DILocation(line: 63, column: 51, scope: !16008)
!16016 = !DILocation(line: 63, column: 10, scope: !16008)
!16017 = !DILocation(line: 63, column: 3, scope: !16008)
!16018 = distinct !DISubprogram(name: "same_nameat", scope: !16009, file: !16009, line: 70, type: !1802, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1797, retainedNodes: !209)
!16019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !271, line: 46, size: 1152, elements: !16020)
!16020 = !{!16021, !16022, !16023, !16024, !16025, !16026, !16027, !16028, !16029, !16030, !16031, !16032, !16037, !16038, !16039}
!16021 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !16019, file: !271, line: 48, baseType: !274, size: 64)
!16022 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !16019, file: !271, line: 53, baseType: !276, size: 64, offset: 64)
!16023 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !16019, file: !271, line: 61, baseType: !278, size: 64, offset: 128)
!16024 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !16019, file: !271, line: 62, baseType: !140, size: 32, offset: 192)
!16025 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !16019, file: !271, line: 64, baseType: !128, size: 32, offset: 224)
!16026 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !16019, file: !271, line: 65, baseType: !130, size: 32, offset: 256)
!16027 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !16019, file: !271, line: 67, baseType: !7, size: 32, offset: 288)
!16028 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !16019, file: !271, line: 69, baseType: !274, size: 64, offset: 320)
!16029 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !16019, file: !271, line: 74, baseType: !29, size: 64, offset: 384)
!16030 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !16019, file: !271, line: 78, baseType: !286, size: 64, offset: 448)
!16031 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !16019, file: !271, line: 80, baseType: !288, size: 64, offset: 512)
!16032 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !16019, file: !271, line: 91, baseType: !16033, size: 128, offset: 576)
!16033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !291, line: 9, size: 128, elements: !16034)
!16034 = !{!16035, !16036}
!16035 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !16033, file: !291, line: 11, baseType: !294, size: 64)
!16036 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !16033, file: !291, line: 12, baseType: !296, size: 64, offset: 64)
!16037 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !16019, file: !271, line: 92, baseType: !16033, size: 128, offset: 704)
!16038 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !16019, file: !271, line: 93, baseType: !16033, size: 128, offset: 832)
!16039 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !16019, file: !271, line: 106, baseType: !300, size: 192, offset: 960)
!16040 = !DILocalVariable(name: "source_dfd", arg: 1, scope: !16018, file: !16009, line: 70, type: !7)
!16041 = !DILocation(line: 70, column: 18, scope: !16018)
!16042 = !DILocalVariable(name: "source", arg: 2, scope: !16018, file: !16009, line: 70, type: !180)
!16043 = !DILocation(line: 70, column: 42, scope: !16018)
!16044 = !DILocalVariable(name: "dest_dfd", arg: 3, scope: !16018, file: !16009, line: 71, type: !7)
!16045 = !DILocation(line: 71, column: 18, scope: !16018)
!16046 = !DILocalVariable(name: "dest", arg: 4, scope: !16018, file: !16009, line: 71, type: !180)
!16047 = !DILocation(line: 71, column: 40, scope: !16018)
!16048 = !DILocalVariable(name: "source_basename", scope: !16018, file: !16009, line: 74, type: !180)
!16049 = !DILocation(line: 74, column: 15, scope: !16018)
!16050 = !DILocation(line: 74, column: 49, scope: !16018)
!16051 = !DILocation(line: 74, column: 33, scope: !16018)
!16052 = !DILocalVariable(name: "dest_basename", scope: !16018, file: !16009, line: 75, type: !180)
!16053 = !DILocation(line: 75, column: 15, scope: !16018)
!16054 = !DILocation(line: 75, column: 47, scope: !16018)
!16055 = !DILocation(line: 75, column: 31, scope: !16018)
!16056 = !DILocalVariable(name: "source_baselen", scope: !16018, file: !16009, line: 76, type: !55)
!16057 = !DILocation(line: 76, column: 10, scope: !16018)
!16058 = !DILocation(line: 76, column: 37, scope: !16018)
!16059 = !DILocation(line: 76, column: 27, scope: !16018)
!16060 = !DILocalVariable(name: "dest_baselen", scope: !16018, file: !16009, line: 77, type: !55)
!16061 = !DILocation(line: 77, column: 10, scope: !16018)
!16062 = !DILocation(line: 77, column: 35, scope: !16018)
!16063 = !DILocation(line: 77, column: 25, scope: !16018)
!16064 = !DILocalVariable(name: "identical_basenames", scope: !16018, file: !16009, line: 78, type: !142)
!16065 = !DILocation(line: 78, column: 8, scope: !16018)
!16066 = !DILocation(line: 79, column: 6, scope: !16018)
!16067 = !DILocation(line: 79, column: 24, scope: !16018)
!16068 = !DILocation(line: 79, column: 21, scope: !16018)
!16069 = !DILocation(line: 80, column: 6, scope: !16018)
!16070 = !DILocation(line: 80, column: 17, scope: !16018)
!16071 = !DILocation(line: 80, column: 34, scope: !16018)
!16072 = !DILocation(line: 80, column: 49, scope: !16018)
!16073 = !DILocation(line: 80, column: 9, scope: !16018)
!16074 = !DILocation(line: 80, column: 63, scope: !16018)
!16075 = !DILocation(line: 0, scope: !16018)
!16076 = !DILocalVariable(name: "compare_dirs", scope: !16018, file: !16009, line: 81, type: !142)
!16077 = !DILocation(line: 81, column: 8, scope: !16018)
!16078 = !DILocation(line: 81, column: 23, scope: !16018)
!16079 = !DILocalVariable(name: "same", scope: !16018, file: !16009, line: 82, type: !142)
!16080 = !DILocation(line: 82, column: 8, scope: !16018)
!16081 = !DILocation(line: 92, column: 7, scope: !16082)
!16082 = distinct !DILexicalBlock(scope: !16018, file: !16009, line: 92, column: 7)
!16083 = !DILocation(line: 92, column: 7, scope: !16018)
!16084 = !DILocalVariable(name: "source_dir_stats", scope: !16085, file: !16009, line: 94, type: !16019)
!16085 = distinct !DILexicalBlock(scope: !16082, file: !16009, line: 93, column: 5)
!16086 = !DILocation(line: 94, column: 19, scope: !16085)
!16087 = !DILocalVariable(name: "dest_dir_stats", scope: !16085, file: !16009, line: 95, type: !16019)
!16088 = !DILocation(line: 95, column: 19, scope: !16085)
!16089 = !DILocalVariable(name: "source_dirname", scope: !16085, file: !16009, line: 98, type: !9)
!16090 = !DILocation(line: 98, column: 13, scope: !16085)
!16091 = !DILocation(line: 98, column: 40, scope: !16085)
!16092 = !DILocation(line: 98, column: 30, scope: !16085)
!16093 = !DILocalVariable(name: "flags", scope: !16085, file: !16009, line: 99, type: !7)
!16094 = !DILocation(line: 99, column: 11, scope: !16085)
!16095 = !DILocation(line: 100, column: 20, scope: !16096)
!16096 = distinct !DILexicalBlock(scope: !16085, file: !16009, line: 100, column: 11)
!16097 = !DILocation(line: 100, column: 32, scope: !16096)
!16098 = !DILocation(line: 100, column: 67, scope: !16096)
!16099 = !DILocation(line: 100, column: 11, scope: !16096)
!16100 = !DILocation(line: 100, column: 74, scope: !16096)
!16101 = !DILocation(line: 100, column: 11, scope: !16085)
!16102 = !DILocation(line: 103, column: 21, scope: !16103)
!16103 = distinct !DILexicalBlock(scope: !16096, file: !16009, line: 101, column: 9)
!16104 = !DILocation(line: 103, column: 34, scope: !16103)
!16105 = !DILocation(line: 103, column: 11, scope: !16103)
!16106 = !DILocation(line: 104, column: 9, scope: !16103)
!16107 = !DILocation(line: 105, column: 13, scope: !16085)
!16108 = !DILocation(line: 105, column: 7, scope: !16085)
!16109 = !DILocalVariable(name: "dest_dirname", scope: !16085, file: !16009, line: 107, type: !9)
!16110 = !DILocation(line: 107, column: 13, scope: !16085)
!16111 = !DILocation(line: 107, column: 38, scope: !16085)
!16112 = !DILocation(line: 107, column: 28, scope: !16085)
!16113 = !DILocation(line: 137, column: 20, scope: !16114)
!16114 = distinct !DILexicalBlock(scope: !16085, file: !16009, line: 137, column: 11)
!16115 = !DILocation(line: 137, column: 30, scope: !16114)
!16116 = !DILocation(line: 137, column: 61, scope: !16114)
!16117 = !DILocation(line: 137, column: 11, scope: !16114)
!16118 = !DILocation(line: 137, column: 68, scope: !16114)
!16119 = !DILocation(line: 137, column: 11, scope: !16085)
!16120 = !DILocation(line: 140, column: 21, scope: !16121)
!16121 = distinct !DILexicalBlock(scope: !16114, file: !16009, line: 138, column: 9)
!16122 = !DILocation(line: 140, column: 34, scope: !16121)
!16123 = !DILocation(line: 140, column: 11, scope: !16121)
!16124 = !DILocation(line: 141, column: 9, scope: !16121)
!16125 = !DILocation(line: 142, column: 14, scope: !16085)
!16126 = !DILocation(line: 0, scope: !16085)
!16127 = !DILocation(line: 142, column: 12, scope: !16085)
!16128 = !DILocation(line: 145, column: 13, scope: !16085)
!16129 = !DILocation(line: 145, column: 7, scope: !16085)
!16130 = !DILocation(line: 146, column: 5, scope: !16085)
!16131 = !DILocation(line: 148, column: 10, scope: !16018)
!16132 = !DILocation(line: 148, column: 3, scope: !16018)
!16133 = distinct !DISubprogram(name: "streamsavedir", scope: !1166, file: !1166, line: 91, type: !1162, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1151, retainedNodes: !209)
!16134 = !DILocalVariable(name: "dirp", arg: 1, scope: !16133, file: !1166, line: 91, type: !695)
!16135 = !DILocation(line: 91, column: 21, scope: !16133)
!16136 = !DILocalVariable(name: "option", arg: 2, scope: !16133, file: !1166, line: 91, type: !1154)
!16137 = !DILocation(line: 91, column: 47, scope: !16133)
!16138 = !DILocalVariable(name: "name_space", scope: !16133, file: !1166, line: 93, type: !9)
!16139 = !DILocation(line: 93, column: 9, scope: !16133)
!16140 = !DILocalVariable(name: "allocated", scope: !16133, file: !1166, line: 94, type: !55)
!16141 = !DILocation(line: 94, column: 10, scope: !16133)
!16142 = !DILocalVariable(name: "entries", scope: !16133, file: !1166, line: 95, type: !1164)
!16143 = !DILocation(line: 95, column: 15, scope: !16133)
!16144 = !DILocalVariable(name: "entries_allocated", scope: !16133, file: !1166, line: 96, type: !55)
!16145 = !DILocation(line: 96, column: 10, scope: !16133)
!16146 = !DILocalVariable(name: "entries_used", scope: !16133, file: !1166, line: 97, type: !55)
!16147 = !DILocation(line: 97, column: 10, scope: !16133)
!16148 = !DILocalVariable(name: "used", scope: !16133, file: !1166, line: 98, type: !55)
!16149 = !DILocation(line: 98, column: 10, scope: !16133)
!16150 = !DILocalVariable(name: "readdir_errno", scope: !16133, file: !1166, line: 99, type: !7)
!16151 = !DILocation(line: 99, column: 7, scope: !16133)
!16152 = !DILocalVariable(name: "cmp", scope: !16133, file: !1166, line: 100, type: !1172)
!16153 = !DILocation(line: 100, column: 23, scope: !16133)
!16154 = !DILocation(line: 100, column: 55, scope: !16133)
!16155 = !DILocation(line: 100, column: 29, scope: !16133)
!16156 = !DILocation(line: 102, column: 7, scope: !16157)
!16157 = distinct !DILexicalBlock(scope: !16133, file: !1166, line: 102, column: 7)
!16158 = !DILocation(line: 102, column: 12, scope: !16157)
!16159 = !DILocation(line: 102, column: 7, scope: !16133)
!16160 = !DILocation(line: 103, column: 5, scope: !16157)
!16161 = !DILocation(line: 105, column: 3, scope: !16133)
!16162 = !DILocalVariable(name: "dp", scope: !16163, file: !1166, line: 107, type: !1178)
!16163 = distinct !DILexicalBlock(scope: !16164, file: !1166, line: 106, column: 5)
!16164 = distinct !DILexicalBlock(scope: !16165, file: !1166, line: 105, column: 3)
!16165 = distinct !DILexicalBlock(scope: !16133, file: !1166, line: 105, column: 3)
!16166 = !DILocation(line: 107, column: 28, scope: !16163)
!16167 = !DILocalVariable(name: "entry", scope: !16163, file: !1166, line: 108, type: !180)
!16168 = !DILocation(line: 108, column: 19, scope: !16163)
!16169 = !DILocation(line: 110, column: 7, scope: !16163)
!16170 = !DILocation(line: 110, column: 13, scope: !16163)
!16171 = !DILocation(line: 111, column: 21, scope: !16163)
!16172 = !DILocation(line: 111, column: 12, scope: !16163)
!16173 = !DILocation(line: 111, column: 10, scope: !16163)
!16174 = !DILocation(line: 112, column: 13, scope: !16175)
!16175 = distinct !DILexicalBlock(scope: !16163, file: !1166, line: 112, column: 11)
!16176 = !DILocation(line: 112, column: 11, scope: !16163)
!16177 = !DILocation(line: 113, column: 9, scope: !16175)
!16178 = !DILocation(line: 117, column: 15, scope: !16163)
!16179 = !DILocation(line: 117, column: 19, scope: !16163)
!16180 = !DILocation(line: 117, column: 13, scope: !16163)
!16181 = !DILocation(line: 118, column: 11, scope: !16182)
!16182 = distinct !DILexicalBlock(scope: !16163, file: !1166, line: 118, column: 11)
!16183 = !DILocation(line: 118, column: 17, scope: !16182)
!16184 = !DILocation(line: 118, column: 26, scope: !16182)
!16185 = !DILocation(line: 118, column: 39, scope: !16182)
!16186 = !DILocation(line: 118, column: 48, scope: !16182)
!16187 = !DILocation(line: 118, column: 64, scope: !16182)
!16188 = !DILocation(line: 118, column: 11, scope: !16163)
!16189 = !DILocalVariable(name: "entry_size", scope: !16190, file: !1166, line: 120, type: !55)
!16190 = distinct !DILexicalBlock(scope: !16182, file: !1166, line: 119, column: 9)
!16191 = !DILocation(line: 120, column: 18, scope: !16190)
!16192 = !DILocation(line: 120, column: 31, scope: !16190)
!16193 = !DILocation(line: 120, column: 52, scope: !16190)
!16194 = !DILocation(line: 121, column: 15, scope: !16195)
!16195 = distinct !DILexicalBlock(scope: !16190, file: !1166, line: 121, column: 15)
!16196 = !DILocation(line: 121, column: 15, scope: !16190)
!16197 = !DILocation(line: 123, column: 19, scope: !16198)
!16198 = distinct !DILexicalBlock(scope: !16199, file: !1166, line: 123, column: 19)
!16199 = distinct !DILexicalBlock(scope: !16195, file: !1166, line: 122, column: 13)
!16200 = !DILocation(line: 123, column: 40, scope: !16198)
!16201 = !DILocation(line: 123, column: 37, scope: !16198)
!16202 = !DILocation(line: 123, column: 19, scope: !16199)
!16203 = !DILocalVariable(name: "n", scope: !16204, file: !1166, line: 125, type: !55)
!16204 = distinct !DILexicalBlock(scope: !16198, file: !1166, line: 124, column: 17)
!16205 = !DILocation(line: 125, column: 26, scope: !16204)
!16206 = !DILocation(line: 125, column: 30, scope: !16204)
!16207 = !DILocation(line: 126, column: 41, scope: !16204)
!16208 = !DILocation(line: 126, column: 29, scope: !16204)
!16209 = !DILocation(line: 126, column: 27, scope: !16204)
!16210 = !DILocation(line: 127, column: 39, scope: !16204)
!16211 = !DILocation(line: 127, column: 37, scope: !16204)
!16212 = !DILocation(line: 128, column: 17, scope: !16204)
!16213 = !DILocation(line: 129, column: 53, scope: !16199)
!16214 = !DILocation(line: 129, column: 44, scope: !16199)
!16215 = !DILocation(line: 129, column: 15, scope: !16199)
!16216 = !DILocation(line: 129, column: 23, scope: !16199)
!16217 = !DILocation(line: 129, column: 37, scope: !16199)
!16218 = !DILocation(line: 129, column: 42, scope: !16199)
!16219 = !{!16220, !2649, i64 0}
!16220 = !{!"", !2649, i64 0, !2916, i64 8}
!16221 = !DILocation(line: 131, column: 43, scope: !16199)
!16222 = !DILocation(line: 131, column: 47, scope: !16199)
!16223 = !{!16224, !2916, i64 0}
!16224 = !{!"dirent", !2916, i64 0, !2916, i64 8, !14718, i64 16, !2637, i64 18, !2637, i64 19}
!16225 = !DILocation(line: 131, column: 15, scope: !16199)
!16226 = !DILocation(line: 131, column: 23, scope: !16199)
!16227 = !DILocation(line: 131, column: 37, scope: !16199)
!16228 = !DILocation(line: 131, column: 41, scope: !16199)
!16229 = !{!16220, !2916, i64 8}
!16230 = !DILocation(line: 133, column: 27, scope: !16199)
!16231 = !DILocation(line: 134, column: 13, scope: !16199)
!16232 = !DILocation(line: 137, column: 19, scope: !16233)
!16233 = distinct !DILexicalBlock(scope: !16234, file: !1166, line: 137, column: 19)
!16234 = distinct !DILexicalBlock(scope: !16195, file: !1166, line: 136, column: 13)
!16235 = !DILocation(line: 137, column: 31, scope: !16233)
!16236 = !DILocation(line: 137, column: 29, scope: !16233)
!16237 = !DILocation(line: 137, column: 39, scope: !16233)
!16238 = !DILocation(line: 137, column: 36, scope: !16233)
!16239 = !DILocation(line: 137, column: 19, scope: !16234)
!16240 = !DILocalVariable(name: "n", scope: !16241, file: !1166, line: 139, type: !55)
!16241 = distinct !DILexicalBlock(scope: !16233, file: !1166, line: 138, column: 17)
!16242 = !DILocation(line: 139, column: 26, scope: !16241)
!16243 = !DILocation(line: 139, column: 30, scope: !16241)
!16244 = !DILocation(line: 139, column: 37, scope: !16241)
!16245 = !DILocation(line: 139, column: 35, scope: !16241)
!16246 = !DILocation(line: 140, column: 23, scope: !16247)
!16247 = distinct !DILexicalBlock(scope: !16241, file: !1166, line: 140, column: 23)
!16248 = !DILocation(line: 140, column: 27, scope: !16247)
!16249 = !DILocation(line: 140, column: 25, scope: !16247)
!16250 = !DILocation(line: 140, column: 23, scope: !16241)
!16251 = !DILocation(line: 141, column: 21, scope: !16247)
!16252 = !DILocation(line: 142, column: 44, scope: !16241)
!16253 = !DILocation(line: 142, column: 32, scope: !16241)
!16254 = !DILocation(line: 142, column: 30, scope: !16241)
!16255 = !DILocation(line: 143, column: 31, scope: !16241)
!16256 = !DILocation(line: 143, column: 29, scope: !16241)
!16257 = !DILocation(line: 144, column: 17, scope: !16241)
!16258 = !DILocation(line: 145, column: 23, scope: !16234)
!16259 = !DILocation(line: 145, column: 36, scope: !16234)
!16260 = !DILocation(line: 145, column: 34, scope: !16234)
!16261 = !DILocation(line: 145, column: 42, scope: !16234)
!16262 = !DILocation(line: 145, column: 49, scope: !16234)
!16263 = !DILocation(line: 145, column: 15, scope: !16234)
!16264 = !DILocation(line: 147, column: 19, scope: !16190)
!16265 = !DILocation(line: 147, column: 16, scope: !16190)
!16266 = !DILocation(line: 148, column: 9, scope: !16190)
!16267 = !DILocation(line: 105, column: 3, scope: !16164)
!16268 = distinct !{!16268, !16269, !16270}
!16269 = !DILocation(line: 105, column: 3, scope: !16165)
!16270 = !DILocation(line: 149, column: 5, scope: !16165)
!16271 = !DILocation(line: 151, column: 19, scope: !16133)
!16272 = !DILocation(line: 151, column: 17, scope: !16133)
!16273 = !DILocation(line: 152, column: 7, scope: !16274)
!16274 = distinct !DILexicalBlock(scope: !16133, file: !1166, line: 152, column: 7)
!16275 = !DILocation(line: 152, column: 21, scope: !16274)
!16276 = !DILocation(line: 152, column: 7, scope: !16133)
!16277 = !DILocation(line: 154, column: 13, scope: !16278)
!16278 = distinct !DILexicalBlock(scope: !16274, file: !1166, line: 153, column: 5)
!16279 = !DILocation(line: 154, column: 7, scope: !16278)
!16280 = !DILocation(line: 155, column: 13, scope: !16278)
!16281 = !DILocation(line: 155, column: 7, scope: !16278)
!16282 = !DILocation(line: 156, column: 15, scope: !16278)
!16283 = !DILocation(line: 156, column: 7, scope: !16278)
!16284 = !DILocation(line: 156, column: 13, scope: !16278)
!16285 = !DILocation(line: 157, column: 7, scope: !16278)
!16286 = !DILocation(line: 160, column: 7, scope: !16287)
!16287 = distinct !DILexicalBlock(scope: !16133, file: !1166, line: 160, column: 7)
!16288 = !DILocation(line: 160, column: 7, scope: !16133)
!16289 = !DILocalVariable(name: "i", scope: !16290, file: !1166, line: 162, type: !55)
!16290 = distinct !DILexicalBlock(scope: !16287, file: !1166, line: 161, column: 5)
!16291 = !DILocation(line: 162, column: 14, scope: !16290)
!16292 = !DILocation(line: 164, column: 11, scope: !16293)
!16293 = distinct !DILexicalBlock(scope: !16290, file: !1166, line: 164, column: 11)
!16294 = !DILocation(line: 164, column: 11, scope: !16290)
!16295 = !DILocation(line: 165, column: 16, scope: !16293)
!16296 = !DILocation(line: 165, column: 25, scope: !16293)
!16297 = !DILocation(line: 165, column: 56, scope: !16293)
!16298 = !DILocation(line: 165, column: 9, scope: !16293)
!16299 = !DILocation(line: 166, column: 29, scope: !16290)
!16300 = !DILocation(line: 166, column: 34, scope: !16290)
!16301 = !DILocation(line: 166, column: 20, scope: !16290)
!16302 = !DILocation(line: 166, column: 18, scope: !16290)
!16303 = !DILocation(line: 167, column: 12, scope: !16290)
!16304 = !DILocation(line: 168, column: 14, scope: !16305)
!16305 = distinct !DILexicalBlock(scope: !16290, file: !1166, line: 168, column: 7)
!16306 = !DILocation(line: 168, column: 12, scope: !16305)
!16307 = !DILocation(line: 168, column: 19, scope: !16308)
!16308 = distinct !DILexicalBlock(scope: !16305, file: !1166, line: 168, column: 7)
!16309 = !DILocation(line: 168, column: 23, scope: !16308)
!16310 = !DILocation(line: 168, column: 21, scope: !16308)
!16311 = !DILocation(line: 168, column: 7, scope: !16305)
!16312 = !DILocalVariable(name: "dest", scope: !16313, file: !1166, line: 170, type: !9)
!16313 = distinct !DILexicalBlock(scope: !16308, file: !1166, line: 169, column: 9)
!16314 = !DILocation(line: 170, column: 17, scope: !16313)
!16315 = !DILocation(line: 170, column: 24, scope: !16313)
!16316 = !DILocation(line: 170, column: 37, scope: !16313)
!16317 = !DILocation(line: 170, column: 35, scope: !16313)
!16318 = !DILocation(line: 171, column: 27, scope: !16313)
!16319 = !DILocation(line: 171, column: 33, scope: !16313)
!16320 = !DILocation(line: 171, column: 41, scope: !16313)
!16321 = !DILocation(line: 171, column: 44, scope: !16313)
!16322 = !DILocation(line: 171, column: 19, scope: !16313)
!16323 = !DILocation(line: 171, column: 52, scope: !16313)
!16324 = !DILocation(line: 171, column: 50, scope: !16313)
!16325 = !DILocation(line: 171, column: 57, scope: !16313)
!16326 = !DILocation(line: 171, column: 16, scope: !16313)
!16327 = !DILocation(line: 172, column: 17, scope: !16313)
!16328 = !DILocation(line: 172, column: 25, scope: !16313)
!16329 = !DILocation(line: 172, column: 28, scope: !16313)
!16330 = !DILocation(line: 172, column: 11, scope: !16313)
!16331 = !DILocation(line: 173, column: 9, scope: !16313)
!16332 = !DILocation(line: 168, column: 38, scope: !16308)
!16333 = !DILocation(line: 168, column: 7, scope: !16308)
!16334 = distinct !{!16334, !16311, !16335}
!16335 = !DILocation(line: 173, column: 9, scope: !16305)
!16336 = !DILocation(line: 174, column: 13, scope: !16290)
!16337 = !DILocation(line: 174, column: 7, scope: !16290)
!16338 = !DILocation(line: 175, column: 5, scope: !16290)
!16339 = !DILocation(line: 176, column: 12, scope: !16340)
!16340 = distinct !DILexicalBlock(scope: !16287, file: !1166, line: 176, column: 12)
!16341 = !DILocation(line: 176, column: 20, scope: !16340)
!16342 = !DILocation(line: 176, column: 17, scope: !16340)
!16343 = !DILocation(line: 176, column: 12, scope: !16287)
!16344 = !DILocation(line: 177, column: 28, scope: !16340)
!16345 = !DILocation(line: 177, column: 40, scope: !16340)
!16346 = !DILocation(line: 177, column: 45, scope: !16340)
!16347 = !DILocation(line: 177, column: 18, scope: !16340)
!16348 = !DILocation(line: 177, column: 16, scope: !16340)
!16349 = !DILocation(line: 177, column: 5, scope: !16340)
!16350 = !DILocation(line: 179, column: 3, scope: !16133)
!16351 = !DILocation(line: 179, column: 14, scope: !16133)
!16352 = !DILocation(line: 179, column: 20, scope: !16133)
!16353 = !DILocation(line: 180, column: 10, scope: !16133)
!16354 = !DILocation(line: 180, column: 3, scope: !16133)
!16355 = !DILocation(line: 181, column: 1, scope: !16133)
!16356 = distinct !DISubprogram(name: "direntry_cmp_name", scope: !1166, file: !1166, line: 51, type: !1174, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1151, retainedNodes: !209)
!16357 = !DILocalVariable(name: "a", arg: 1, scope: !16356, file: !1166, line: 51, type: !515)
!16358 = !DILocation(line: 51, column: 32, scope: !16356)
!16359 = !DILocalVariable(name: "b", arg: 2, scope: !16356, file: !1166, line: 51, type: !515)
!16360 = !DILocation(line: 51, column: 47, scope: !16356)
!16361 = !DILocalVariable(name: "dea", scope: !16356, file: !1166, line: 53, type: !1189)
!16362 = !DILocation(line: 53, column: 21, scope: !16356)
!16363 = !DILocation(line: 53, column: 27, scope: !16356)
!16364 = !DILocalVariable(name: "deb", scope: !16356, file: !1166, line: 54, type: !1189)
!16365 = !DILocation(line: 54, column: 21, scope: !16356)
!16366 = !DILocation(line: 54, column: 27, scope: !16356)
!16367 = !DILocation(line: 56, column: 18, scope: !16356)
!16368 = !DILocation(line: 56, column: 23, scope: !16356)
!16369 = !DILocation(line: 56, column: 29, scope: !16356)
!16370 = !DILocation(line: 56, column: 34, scope: !16356)
!16371 = !DILocation(line: 56, column: 10, scope: !16356)
!16372 = !DILocation(line: 56, column: 3, scope: !16356)
!16373 = distinct !DISubprogram(name: "direntry_cmp_inode", scope: !1166, file: !1166, line: 63, type: !1174, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1151, retainedNodes: !209)
!16374 = !DILocalVariable(name: "a", arg: 1, scope: !16373, file: !1166, line: 63, type: !515)
!16375 = !DILocation(line: 63, column: 33, scope: !16373)
!16376 = !DILocalVariable(name: "b", arg: 2, scope: !16373, file: !1166, line: 63, type: !515)
!16377 = !DILocation(line: 63, column: 48, scope: !16373)
!16378 = !DILocalVariable(name: "dea", scope: !16373, file: !1166, line: 65, type: !1189)
!16379 = !DILocation(line: 65, column: 21, scope: !16373)
!16380 = !DILocation(line: 65, column: 27, scope: !16373)
!16381 = !DILocalVariable(name: "deb", scope: !16373, file: !1166, line: 66, type: !1189)
!16382 = !DILocation(line: 66, column: 21, scope: !16373)
!16383 = !DILocation(line: 66, column: 27, scope: !16373)
!16384 = !DILocation(line: 68, column: 10, scope: !16373)
!16385 = !DILocation(line: 68, column: 15, scope: !16373)
!16386 = !DILocation(line: 68, column: 21, scope: !16373)
!16387 = !DILocation(line: 68, column: 26, scope: !16373)
!16388 = !DILocation(line: 68, column: 19, scope: !16373)
!16389 = !DILocation(line: 68, column: 37, scope: !16373)
!16390 = !DILocation(line: 68, column: 42, scope: !16373)
!16391 = !DILocation(line: 68, column: 48, scope: !16373)
!16392 = !DILocation(line: 68, column: 53, scope: !16373)
!16393 = !DILocation(line: 68, column: 46, scope: !16373)
!16394 = !DILocation(line: 68, column: 3, scope: !16373)
!16395 = distinct !DISubprogram(name: "savedir", scope: !1166, file: !1166, line: 189, type: !1187, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1151, retainedNodes: !209)
!16396 = !DILocalVariable(name: "dir", arg: 1, scope: !16395, file: !1166, line: 189, type: !180)
!16397 = !DILocation(line: 189, column: 22, scope: !16395)
!16398 = !DILocalVariable(name: "option", arg: 2, scope: !16395, file: !1166, line: 189, type: !1154)
!16399 = !DILocation(line: 189, column: 47, scope: !16395)
!16400 = !DILocalVariable(name: "dirp", scope: !16395, file: !1166, line: 191, type: !695)
!16401 = !DILocation(line: 191, column: 8, scope: !16395)
!16402 = !DILocation(line: 191, column: 24, scope: !16395)
!16403 = !DILocation(line: 191, column: 15, scope: !16395)
!16404 = !DILocation(line: 192, column: 9, scope: !16405)
!16405 = distinct !DILexicalBlock(scope: !16395, file: !1166, line: 192, column: 7)
!16406 = !DILocation(line: 192, column: 7, scope: !16395)
!16407 = !DILocation(line: 193, column: 5, scope: !16405)
!16408 = !DILocalVariable(name: "name_space", scope: !16409, file: !1166, line: 196, type: !9)
!16409 = distinct !DILexicalBlock(scope: !16405, file: !1166, line: 195, column: 5)
!16410 = !DILocation(line: 196, column: 13, scope: !16409)
!16411 = !DILocation(line: 196, column: 41, scope: !16409)
!16412 = !DILocation(line: 196, column: 47, scope: !16409)
!16413 = !DILocation(line: 196, column: 26, scope: !16409)
!16414 = !DILocation(line: 197, column: 21, scope: !16415)
!16415 = distinct !DILexicalBlock(scope: !16409, file: !1166, line: 197, column: 11)
!16416 = !DILocation(line: 197, column: 11, scope: !16415)
!16417 = !DILocation(line: 197, column: 27, scope: !16415)
!16418 = !DILocation(line: 197, column: 11, scope: !16409)
!16419 = !DILocalVariable(name: "closedir_errno", scope: !16420, file: !1166, line: 199, type: !7)
!16420 = distinct !DILexicalBlock(scope: !16415, file: !1166, line: 198, column: 9)
!16421 = !DILocation(line: 199, column: 15, scope: !16420)
!16422 = !DILocation(line: 199, column: 32, scope: !16420)
!16423 = !DILocation(line: 200, column: 17, scope: !16420)
!16424 = !DILocation(line: 200, column: 11, scope: !16420)
!16425 = !DILocation(line: 201, column: 19, scope: !16420)
!16426 = !DILocation(line: 201, column: 11, scope: !16420)
!16427 = !DILocation(line: 201, column: 17, scope: !16420)
!16428 = !DILocation(line: 202, column: 11, scope: !16420)
!16429 = !DILocation(line: 204, column: 14, scope: !16409)
!16430 = !DILocation(line: 204, column: 7, scope: !16409)
!16431 = !DILocation(line: 206, column: 1, scope: !16395)
!16432 = distinct !DISubprogram(name: "savewd_init", scope: !101, file: !101, line: 79, type: !1818, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1804, retainedNodes: !209)
!16433 = !DILocalVariable(name: "wd", arg: 1, scope: !16432, file: !101, line: 79, type: !1820)
!16434 = !DILocation(line: 79, column: 29, scope: !16432)
!16435 = !DILocation(line: 81, column: 3, scope: !16432)
!16436 = !DILocation(line: 81, column: 7, scope: !16432)
!16437 = !DILocation(line: 81, column: 13, scope: !16432)
!16438 = !{!16439, !2637, i64 0}
!16439 = !{!"savewd", !2637, i64 0, !2637, i64 4}
!16440 = !DILocation(line: 82, column: 1, scope: !16432)
!16441 = distinct !DISubprogram(name: "savewd_errno", scope: !101, file: !101, line: 124, type: !1821, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1804, retainedNodes: !209)
!16442 = !DILocalVariable(name: "wd", arg: 1, scope: !16441, file: !101, line: 124, type: !1823)
!16443 = !DILocation(line: 124, column: 36, scope: !16441)
!16444 = !DILocation(line: 126, column: 11, scope: !16441)
!16445 = !DILocation(line: 126, column: 15, scope: !16441)
!16446 = !DILocation(line: 126, column: 21, scope: !16441)
!16447 = !DILocation(line: 126, column: 38, scope: !16441)
!16448 = !DILocation(line: 126, column: 42, scope: !16441)
!16449 = !DILocation(line: 126, column: 46, scope: !16441)
!16450 = !DILocation(line: 126, column: 3, scope: !16441)
!16451 = distinct !DISubprogram(name: "savewd_chdir", scope: !16452, file: !16452, line: 106, type: !1825, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1804, retainedNodes: !209)
!16452 = !DIFile(filename: "lib/savewd.c", directory: "/home/mbarbar/clone/coreutils")
!16453 = !DILocalVariable(name: "wd", arg: 1, scope: !16451, file: !16452, line: 106, type: !1820)
!16454 = !DILocation(line: 106, column: 30, scope: !16451)
!16455 = !DILocalVariable(name: "dir", arg: 2, scope: !16451, file: !16452, line: 106, type: !180)
!16456 = !DILocation(line: 106, column: 46, scope: !16451)
!16457 = !DILocalVariable(name: "options", arg: 3, scope: !16451, file: !16452, line: 106, type: !7)
!16458 = !DILocation(line: 106, column: 55, scope: !16451)
!16459 = !DILocalVariable(name: "open_result", arg: 4, scope: !16451, file: !16452, line: 107, type: !193)
!16460 = !DILocation(line: 107, column: 19, scope: !16451)
!16461 = !DILocalVariable(name: "fd", scope: !16451, file: !16452, line: 109, type: !7)
!16462 = !DILocation(line: 109, column: 7, scope: !16451)
!16463 = !DILocalVariable(name: "result", scope: !16451, file: !16452, line: 110, type: !7)
!16464 = !DILocation(line: 110, column: 7, scope: !16451)
!16465 = !DILocation(line: 114, column: 7, scope: !16466)
!16466 = distinct !DILexicalBlock(scope: !16451, file: !16452, line: 114, column: 7)
!16467 = !DILocation(line: 115, column: 7, scope: !16466)
!16468 = !DILocation(line: 115, column: 11, scope: !16466)
!16469 = !DILocation(line: 115, column: 19, scope: !16466)
!16470 = !DILocation(line: 114, column: 7, scope: !16451)
!16471 = !DILocation(line: 117, column: 18, scope: !16472)
!16472 = distinct !DILexicalBlock(scope: !16466, file: !16452, line: 116, column: 5)
!16473 = !DILocation(line: 119, column: 22, scope: !16472)
!16474 = !DILocation(line: 119, column: 30, scope: !16472)
!16475 = !DILocation(line: 119, column: 19, scope: !16472)
!16476 = !DILocation(line: 117, column: 12, scope: !16472)
!16477 = !DILocation(line: 117, column: 10, scope: !16472)
!16478 = !DILocation(line: 121, column: 11, scope: !16479)
!16479 = distinct !DILexicalBlock(scope: !16472, file: !16452, line: 121, column: 11)
!16480 = !DILocation(line: 121, column: 11, scope: !16472)
!16481 = !DILocation(line: 123, column: 28, scope: !16482)
!16482 = distinct !DILexicalBlock(scope: !16479, file: !16452, line: 122, column: 9)
!16483 = !DILocation(line: 123, column: 11, scope: !16482)
!16484 = !DILocation(line: 123, column: 26, scope: !16482)
!16485 = !DILocation(line: 124, column: 28, scope: !16482)
!16486 = !DILocation(line: 124, column: 11, scope: !16482)
!16487 = !DILocation(line: 124, column: 26, scope: !16482)
!16488 = !DILocation(line: 125, column: 9, scope: !16482)
!16489 = !DILocation(line: 127, column: 11, scope: !16490)
!16490 = distinct !DILexicalBlock(scope: !16472, file: !16452, line: 127, column: 11)
!16491 = !DILocation(line: 127, column: 14, scope: !16490)
!16492 = !DILocation(line: 127, column: 18, scope: !16490)
!16493 = !DILocation(line: 127, column: 21, scope: !16490)
!16494 = !DILocation(line: 127, column: 27, scope: !16490)
!16495 = !DILocation(line: 127, column: 11, scope: !16472)
!16496 = !DILocation(line: 128, column: 16, scope: !16490)
!16497 = !DILocation(line: 128, column: 9, scope: !16490)
!16498 = !DILocation(line: 129, column: 5, scope: !16472)
!16499 = !DILocation(line: 131, column: 7, scope: !16500)
!16500 = distinct !DILexicalBlock(scope: !16451, file: !16452, line: 131, column: 7)
!16501 = !DILocation(line: 131, column: 14, scope: !16500)
!16502 = !DILocation(line: 131, column: 19, scope: !16500)
!16503 = !DILocation(line: 131, column: 30, scope: !16500)
!16504 = !DILocation(line: 131, column: 27, scope: !16500)
!16505 = !DILocation(line: 131, column: 33, scope: !16500)
!16506 = !DILocation(line: 131, column: 36, scope: !16500)
!16507 = !DILocation(line: 131, column: 44, scope: !16500)
!16508 = !DILocation(line: 131, column: 7, scope: !16451)
!16509 = !DILocation(line: 133, column: 24, scope: !16510)
!16510 = distinct !DILexicalBlock(scope: !16511, file: !16452, line: 133, column: 11)
!16511 = distinct !DILexicalBlock(scope: !16500, file: !16452, line: 132, column: 5)
!16512 = !DILocation(line: 133, column: 11, scope: !16510)
!16513 = !DILocation(line: 133, column: 11, scope: !16511)
!16514 = !DILocation(line: 135, column: 23, scope: !16515)
!16515 = distinct !DILexicalBlock(scope: !16510, file: !16452, line: 134, column: 9)
!16516 = !DILocation(line: 136, column: 18, scope: !16515)
!16517 = !DILocation(line: 137, column: 9, scope: !16515)
!16518 = !DILocation(line: 140, column: 21, scope: !16519)
!16519 = distinct !DILexicalBlock(scope: !16510, file: !16452, line: 139, column: 9)
!16520 = !DILocation(line: 140, column: 24, scope: !16519)
!16521 = !DILocation(line: 140, column: 37, scope: !16519)
!16522 = !DILocation(line: 140, column: 30, scope: !16519)
!16523 = !DILocation(line: 140, column: 52, scope: !16519)
!16524 = !DILocation(line: 140, column: 44, scope: !16519)
!16525 = !DILocation(line: 140, column: 18, scope: !16519)
!16526 = !DILocation(line: 142, column: 15, scope: !16527)
!16527 = distinct !DILexicalBlock(scope: !16519, file: !16452, line: 142, column: 15)
!16528 = !DILocation(line: 142, column: 22, scope: !16527)
!16529 = !DILocation(line: 142, column: 15, scope: !16519)
!16530 = !DILocation(line: 143, column: 21, scope: !16527)
!16531 = !DILocation(line: 143, column: 25, scope: !16527)
!16532 = !DILocation(line: 143, column: 13, scope: !16527)
!16533 = !DILocation(line: 146, column: 17, scope: !16534)
!16534 = distinct !DILexicalBlock(scope: !16527, file: !16452, line: 144, column: 15)
!16535 = !DILocation(line: 146, column: 21, scope: !16534)
!16536 = !DILocation(line: 146, column: 27, scope: !16534)
!16537 = !DILocation(line: 147, column: 17, scope: !16534)
!16538 = !DILocation(line: 152, column: 17, scope: !16534)
!16539 = !DILocation(line: 155, column: 17, scope: !16540)
!16540 = distinct !DILexicalBlock(scope: !16541, file: !16452, line: 155, column: 17)
!16541 = distinct !DILexicalBlock(scope: !16534, file: !16452, line: 155, column: 17)
!16542 = !DILocation(line: 155, column: 17, scope: !16541)
!16543 = !DILocation(line: 156, column: 17, scope: !16534)
!16544 = !DILocation(line: 159, column: 17, scope: !16545)
!16545 = distinct !DILexicalBlock(scope: !16546, file: !16452, line: 159, column: 17)
!16546 = distinct !DILexicalBlock(scope: !16534, file: !16452, line: 159, column: 17)
!16547 = !DILocation(line: 160, column: 15, scope: !16534)
!16548 = !DILocation(line: 162, column: 5, scope: !16511)
!16549 = !DILocation(line: 164, column: 12, scope: !16550)
!16550 = distinct !DILexicalBlock(scope: !16451, file: !16452, line: 164, column: 7)
!16551 = !DILocation(line: 164, column: 9, scope: !16550)
!16552 = !DILocation(line: 164, column: 15, scope: !16550)
!16553 = !DILocation(line: 164, column: 20, scope: !16550)
!16554 = !DILocation(line: 164, column: 7, scope: !16451)
!16555 = !DILocalVariable(name: "e", scope: !16556, file: !16452, line: 166, type: !7)
!16556 = distinct !DILexicalBlock(scope: !16550, file: !16452, line: 165, column: 5)
!16557 = !DILocation(line: 166, column: 11, scope: !16556)
!16558 = !DILocation(line: 166, column: 15, scope: !16556)
!16559 = !DILocation(line: 167, column: 14, scope: !16556)
!16560 = !DILocation(line: 167, column: 7, scope: !16556)
!16561 = !DILocation(line: 168, column: 15, scope: !16556)
!16562 = !DILocation(line: 168, column: 7, scope: !16556)
!16563 = !DILocation(line: 168, column: 13, scope: !16556)
!16564 = !DILocation(line: 169, column: 5, scope: !16556)
!16565 = !DILocation(line: 171, column: 10, scope: !16451)
!16566 = !DILocation(line: 171, column: 3, scope: !16451)
!16567 = distinct !DISubprogram(name: "savewd_save", scope: !16452, file: !16452, line: 51, type: !1834, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1804, retainedNodes: !209)
!16568 = !DILocalVariable(name: "wd", arg: 1, scope: !16567, file: !16452, line: 51, type: !1820)
!16569 = !DILocation(line: 51, column: 29, scope: !16567)
!16570 = !DILocation(line: 53, column: 11, scope: !16567)
!16571 = !DILocation(line: 53, column: 15, scope: !16567)
!16572 = !DILocation(line: 53, column: 3, scope: !16567)
!16573 = !DILocalVariable(name: "fd", scope: !16574, file: !16452, line: 58, type: !7)
!16574 = distinct !DILexicalBlock(scope: !16575, file: !16452, line: 57, column: 7)
!16575 = distinct !DILexicalBlock(scope: !16567, file: !16452, line: 54, column: 5)
!16576 = !DILocation(line: 58, column: 13, scope: !16574)
!16577 = !DILocation(line: 58, column: 18, scope: !16574)
!16578 = !DILocation(line: 59, column: 18, scope: !16579)
!16579 = distinct !DILexicalBlock(scope: !16574, file: !16452, line: 59, column: 13)
!16580 = !DILocation(line: 59, column: 15, scope: !16579)
!16581 = !DILocation(line: 59, column: 13, scope: !16574)
!16582 = !DILocation(line: 61, column: 13, scope: !16583)
!16583 = distinct !DILexicalBlock(scope: !16579, file: !16452, line: 60, column: 11)
!16584 = !DILocation(line: 61, column: 17, scope: !16583)
!16585 = !DILocation(line: 61, column: 23, scope: !16583)
!16586 = !DILocation(line: 62, column: 26, scope: !16583)
!16587 = !DILocation(line: 62, column: 13, scope: !16583)
!16588 = !DILocation(line: 62, column: 17, scope: !16583)
!16589 = !DILocation(line: 62, column: 21, scope: !16583)
!16590 = !DILocation(line: 62, column: 24, scope: !16583)
!16591 = !DILocation(line: 63, column: 13, scope: !16583)
!16592 = !DILocation(line: 65, column: 13, scope: !16593)
!16593 = distinct !DILexicalBlock(scope: !16574, file: !16452, line: 65, column: 13)
!16594 = !DILocation(line: 65, column: 19, scope: !16593)
!16595 = !DILocation(line: 65, column: 29, scope: !16593)
!16596 = !DILocation(line: 65, column: 32, scope: !16593)
!16597 = !DILocation(line: 65, column: 38, scope: !16593)
!16598 = !DILocation(line: 65, column: 13, scope: !16574)
!16599 = !DILocation(line: 67, column: 13, scope: !16600)
!16600 = distinct !DILexicalBlock(scope: !16593, file: !16452, line: 66, column: 11)
!16601 = !DILocation(line: 67, column: 17, scope: !16600)
!16602 = !DILocation(line: 67, column: 23, scope: !16600)
!16603 = !DILocation(line: 68, column: 30, scope: !16600)
!16604 = !DILocation(line: 68, column: 13, scope: !16600)
!16605 = !DILocation(line: 68, column: 17, scope: !16600)
!16606 = !DILocation(line: 68, column: 21, scope: !16600)
!16607 = !DILocation(line: 68, column: 28, scope: !16600)
!16608 = !DILocation(line: 69, column: 13, scope: !16600)
!16609 = !DILocation(line: 72, column: 7, scope: !16575)
!16610 = !DILocation(line: 72, column: 11, scope: !16575)
!16611 = !DILocation(line: 72, column: 17, scope: !16575)
!16612 = !DILocation(line: 73, column: 7, scope: !16575)
!16613 = !DILocation(line: 73, column: 11, scope: !16575)
!16614 = !DILocation(line: 73, column: 15, scope: !16575)
!16615 = !DILocation(line: 73, column: 21, scope: !16575)
!16616 = !DILocation(line: 74, column: 7, scope: !16575)
!16617 = !DILocation(line: 76, column: 11, scope: !16618)
!16618 = distinct !DILexicalBlock(scope: !16575, file: !16452, line: 76, column: 11)
!16619 = !DILocation(line: 76, column: 15, scope: !16618)
!16620 = !DILocation(line: 76, column: 19, scope: !16618)
!16621 = !DILocation(line: 76, column: 25, scope: !16618)
!16622 = !DILocation(line: 76, column: 11, scope: !16575)
!16623 = !DILocation(line: 81, column: 27, scope: !16624)
!16624 = distinct !DILexicalBlock(scope: !16618, file: !16452, line: 77, column: 9)
!16625 = !DILocation(line: 81, column: 11, scope: !16624)
!16626 = !DILocation(line: 81, column: 15, scope: !16624)
!16627 = !DILocation(line: 81, column: 19, scope: !16624)
!16628 = !DILocation(line: 81, column: 25, scope: !16624)
!16629 = !DILocation(line: 82, column: 15, scope: !16630)
!16630 = distinct !DILexicalBlock(scope: !16624, file: !16452, line: 82, column: 15)
!16631 = !DILocation(line: 82, column: 19, scope: !16630)
!16632 = !DILocation(line: 82, column: 23, scope: !16630)
!16633 = !DILocation(line: 82, column: 29, scope: !16630)
!16634 = !DILocation(line: 82, column: 15, scope: !16624)
!16635 = !DILocation(line: 84, column: 23, scope: !16636)
!16636 = distinct !DILexicalBlock(scope: !16637, file: !16452, line: 84, column: 19)
!16637 = distinct !DILexicalBlock(scope: !16630, file: !16452, line: 83, column: 13)
!16638 = !DILocation(line: 84, column: 27, scope: !16636)
!16639 = !DILocation(line: 84, column: 31, scope: !16636)
!16640 = !DILocation(line: 84, column: 21, scope: !16636)
!16641 = !DILocation(line: 84, column: 19, scope: !16637)
!16642 = !DILocation(line: 85, column: 17, scope: !16636)
!16643 = !DILocation(line: 86, column: 15, scope: !16637)
!16644 = !DILocation(line: 86, column: 19, scope: !16637)
!16645 = !DILocation(line: 86, column: 25, scope: !16637)
!16646 = !DILocation(line: 87, column: 32, scope: !16637)
!16647 = !DILocation(line: 87, column: 15, scope: !16637)
!16648 = !DILocation(line: 87, column: 19, scope: !16637)
!16649 = !DILocation(line: 87, column: 23, scope: !16637)
!16650 = !DILocation(line: 87, column: 30, scope: !16637)
!16651 = !DILocation(line: 88, column: 13, scope: !16637)
!16652 = !DILocation(line: 89, column: 9, scope: !16624)
!16653 = !DILocation(line: 90, column: 7, scope: !16575)
!16654 = !DILocation(line: 96, column: 7, scope: !16575)
!16655 = !DILocation(line: 99, column: 7, scope: !16656)
!16656 = distinct !DILexicalBlock(scope: !16657, file: !16452, line: 99, column: 7)
!16657 = distinct !DILexicalBlock(scope: !16575, file: !16452, line: 99, column: 7)
!16658 = !DILocation(line: 102, column: 3, scope: !16567)
!16659 = !DILocation(line: 103, column: 1, scope: !16567)
!16660 = distinct !DISubprogram(name: "savewd_restore", scope: !16452, file: !16452, line: 175, type: !1827, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1804, retainedNodes: !209)
!16661 = !DILocalVariable(name: "wd", arg: 1, scope: !16660, file: !16452, line: 175, type: !1820)
!16662 = !DILocation(line: 175, column: 32, scope: !16660)
!16663 = !DILocalVariable(name: "status", arg: 2, scope: !16660, file: !16452, line: 175, type: !7)
!16664 = !DILocation(line: 175, column: 40, scope: !16660)
!16665 = !DILocation(line: 177, column: 11, scope: !16660)
!16666 = !DILocation(line: 177, column: 15, scope: !16660)
!16667 = !DILocation(line: 177, column: 3, scope: !16660)
!16668 = !DILocation(line: 183, column: 7, scope: !16669)
!16669 = distinct !DILexicalBlock(scope: !16660, file: !16452, line: 178, column: 5)
!16670 = !DILocation(line: 187, column: 19, scope: !16671)
!16671 = distinct !DILexicalBlock(scope: !16669, file: !16452, line: 187, column: 11)
!16672 = !DILocation(line: 187, column: 23, scope: !16671)
!16673 = !DILocation(line: 187, column: 27, scope: !16671)
!16674 = !DILocation(line: 187, column: 11, scope: !16671)
!16675 = !DILocation(line: 187, column: 31, scope: !16671)
!16676 = !DILocation(line: 187, column: 11, scope: !16669)
!16677 = !DILocation(line: 189, column: 11, scope: !16678)
!16678 = distinct !DILexicalBlock(scope: !16671, file: !16452, line: 188, column: 9)
!16679 = !DILocation(line: 189, column: 15, scope: !16678)
!16680 = !DILocation(line: 189, column: 21, scope: !16678)
!16681 = !DILocation(line: 190, column: 11, scope: !16678)
!16682 = !DILocalVariable(name: "chdir_errno", scope: !16683, file: !16452, line: 194, type: !7)
!16683 = distinct !DILexicalBlock(scope: !16671, file: !16452, line: 193, column: 9)
!16684 = !DILocation(line: 194, column: 15, scope: !16683)
!16685 = !DILocation(line: 194, column: 29, scope: !16683)
!16686 = !DILocation(line: 195, column: 18, scope: !16683)
!16687 = !DILocation(line: 195, column: 22, scope: !16683)
!16688 = !DILocation(line: 195, column: 26, scope: !16683)
!16689 = !DILocation(line: 195, column: 11, scope: !16683)
!16690 = !DILocation(line: 196, column: 11, scope: !16683)
!16691 = !DILocation(line: 196, column: 15, scope: !16683)
!16692 = !DILocation(line: 196, column: 21, scope: !16683)
!16693 = !DILocation(line: 197, column: 28, scope: !16683)
!16694 = !DILocation(line: 197, column: 11, scope: !16683)
!16695 = !DILocation(line: 197, column: 15, scope: !16683)
!16696 = !DILocation(line: 197, column: 19, scope: !16683)
!16697 = !DILocation(line: 197, column: 26, scope: !16683)
!16698 = !DILocation(line: 199, column: 7, scope: !16669)
!16699 = !DILocation(line: 202, column: 15, scope: !16669)
!16700 = !DILocation(line: 202, column: 19, scope: !16669)
!16701 = !DILocation(line: 202, column: 23, scope: !16669)
!16702 = !DILocation(line: 202, column: 7, scope: !16669)
!16703 = !DILocation(line: 202, column: 13, scope: !16669)
!16704 = !DILocation(line: 203, column: 7, scope: !16669)
!16705 = !DILocalVariable(name: "child", scope: !16706, file: !16452, line: 209, type: !111)
!16706 = distinct !DILexicalBlock(scope: !16669, file: !16452, line: 208, column: 7)
!16707 = !DILocation(line: 209, column: 15, scope: !16706)
!16708 = !DILocation(line: 209, column: 23, scope: !16706)
!16709 = !DILocation(line: 209, column: 27, scope: !16706)
!16710 = !DILocation(line: 209, column: 31, scope: !16706)
!16711 = !DILocation(line: 210, column: 13, scope: !16712)
!16712 = distinct !DILexicalBlock(scope: !16706, file: !16452, line: 210, column: 13)
!16713 = !DILocation(line: 210, column: 19, scope: !16712)
!16714 = !DILocation(line: 210, column: 13, scope: !16706)
!16715 = !DILocation(line: 211, column: 18, scope: !16712)
!16716 = !DILocation(line: 211, column: 11, scope: !16712)
!16717 = !DILocation(line: 212, column: 17, scope: !16718)
!16718 = distinct !DILexicalBlock(scope: !16706, file: !16452, line: 212, column: 13)
!16719 = !DILocation(line: 212, column: 15, scope: !16718)
!16720 = !DILocation(line: 212, column: 13, scope: !16706)
!16721 = !DILocalVariable(name: "child_status", scope: !16722, file: !16452, line: 214, type: !7)
!16722 = distinct !DILexicalBlock(scope: !16718, file: !16452, line: 213, column: 11)
!16723 = !DILocation(line: 214, column: 17, scope: !16722)
!16724 = !DILocation(line: 215, column: 13, scope: !16722)
!16725 = !DILocation(line: 215, column: 29, scope: !16722)
!16726 = !DILocation(line: 215, column: 20, scope: !16722)
!16727 = !DILocation(line: 215, column: 54, scope: !16722)
!16728 = !DILocation(line: 216, column: 15, scope: !16729)
!16729 = distinct !DILexicalBlock(scope: !16730, file: !16452, line: 216, column: 15)
!16730 = distinct !DILexicalBlock(scope: !16722, file: !16452, line: 216, column: 15)
!16731 = !DILocation(line: 216, column: 15, scope: !16730)
!16732 = distinct !{!16732, !16724, !16733}
!16733 = !DILocation(line: 216, column: 15, scope: !16722)
!16734 = !DILocation(line: 217, column: 13, scope: !16722)
!16735 = !DILocation(line: 217, column: 17, scope: !16722)
!16736 = !DILocation(line: 217, column: 21, scope: !16722)
!16737 = !DILocation(line: 217, column: 27, scope: !16722)
!16738 = !DILocation(line: 218, column: 19, scope: !16739)
!16739 = distinct !DILexicalBlock(scope: !16722, file: !16452, line: 218, column: 17)
!16740 = !DILocation(line: 218, column: 17, scope: !16722)
!16741 = !DILocation(line: 219, column: 22, scope: !16739)
!16742 = !DILocation(line: 219, column: 15, scope: !16739)
!16743 = !DILocation(line: 220, column: 20, scope: !16722)
!16744 = !DILocation(line: 220, column: 13, scope: !16722)
!16745 = !DILocation(line: 223, column: 7, scope: !16669)
!16746 = !DILocation(line: 226, column: 7, scope: !16747)
!16747 = distinct !DILexicalBlock(scope: !16748, file: !16452, line: 226, column: 7)
!16748 = distinct !DILexicalBlock(scope: !16669, file: !16452, line: 226, column: 7)
!16749 = !DILocation(line: 229, column: 3, scope: !16660)
!16750 = !DILocation(line: 230, column: 1, scope: !16660)
!16751 = distinct !DISubprogram(name: "savewd_finish", scope: !16452, file: !16452, line: 233, type: !1818, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1804, retainedNodes: !209)
!16752 = !DILocalVariable(name: "wd", arg: 1, scope: !16751, file: !16452, line: 233, type: !1820)
!16753 = !DILocation(line: 233, column: 31, scope: !16751)
!16754 = !DILocation(line: 235, column: 11, scope: !16751)
!16755 = !DILocation(line: 235, column: 15, scope: !16751)
!16756 = !DILocation(line: 235, column: 3, scope: !16751)
!16757 = !DILocation(line: 239, column: 7, scope: !16758)
!16758 = distinct !DILexicalBlock(scope: !16751, file: !16452, line: 236, column: 5)
!16759 = !DILocation(line: 243, column: 14, scope: !16758)
!16760 = !DILocation(line: 243, column: 18, scope: !16758)
!16761 = !DILocation(line: 243, column: 22, scope: !16758)
!16762 = !DILocation(line: 243, column: 7, scope: !16758)
!16763 = !DILocation(line: 244, column: 7, scope: !16758)
!16764 = !DILocation(line: 247, column: 7, scope: !16765)
!16765 = distinct !DILexicalBlock(scope: !16766, file: !16452, line: 247, column: 7)
!16766 = distinct !DILexicalBlock(scope: !16758, file: !16452, line: 247, column: 7)
!16767 = !DILocation(line: 247, column: 7, scope: !16766)
!16768 = !DILocation(line: 248, column: 7, scope: !16758)
!16769 = !DILocation(line: 251, column: 7, scope: !16770)
!16770 = distinct !DILexicalBlock(scope: !16771, file: !16452, line: 251, column: 7)
!16771 = distinct !DILexicalBlock(scope: !16758, file: !16452, line: 251, column: 7)
!16772 = !DILocation(line: 254, column: 3, scope: !16751)
!16773 = !DILocation(line: 254, column: 7, scope: !16751)
!16774 = !DILocation(line: 254, column: 13, scope: !16751)
!16775 = !DILocation(line: 255, column: 1, scope: !16751)
!16776 = distinct !DISubprogram(name: "savewd_process_files", scope: !16452, file: !16452, line: 274, type: !1829, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1804, retainedNodes: !209)
!16777 = !DILocalVariable(name: "n_files", arg: 1, scope: !16776, file: !16452, line: 274, type: !7)
!16778 = !DILocation(line: 274, column: 27, scope: !16776)
!16779 = !DILocalVariable(name: "file", arg: 2, scope: !16776, file: !16452, line: 274, type: !184)
!16780 = !DILocation(line: 274, column: 43, scope: !16776)
!16781 = !DILocalVariable(name: "act", arg: 3, scope: !16776, file: !16452, line: 275, type: !1831)
!16782 = !DILocation(line: 275, column: 29, scope: !16776)
!16783 = !DILocalVariable(name: "options", arg: 4, scope: !16776, file: !16452, line: 276, type: !53)
!16784 = !DILocation(line: 276, column: 29, scope: !16776)
!16785 = !DILocalVariable(name: "i", scope: !16776, file: !16452, line: 278, type: !7)
!16786 = !DILocation(line: 278, column: 7, scope: !16776)
!16787 = !DILocalVariable(name: "last_relative", scope: !16776, file: !16452, line: 279, type: !7)
!16788 = !DILocation(line: 279, column: 7, scope: !16776)
!16789 = !DILocalVariable(name: "exit_status", scope: !16776, file: !16452, line: 280, type: !7)
!16790 = !DILocation(line: 280, column: 7, scope: !16776)
!16791 = !DILocalVariable(name: "wd", scope: !16776, file: !16452, line: 281, type: !1808)
!16792 = !DILocation(line: 281, column: 17, scope: !16776)
!16793 = !DILocation(line: 282, column: 3, scope: !16776)
!16794 = !DILocation(line: 284, column: 24, scope: !16795)
!16795 = distinct !DILexicalBlock(scope: !16776, file: !16452, line: 284, column: 3)
!16796 = !DILocation(line: 284, column: 32, scope: !16795)
!16797 = !DILocation(line: 284, column: 22, scope: !16795)
!16798 = !DILocation(line: 284, column: 8, scope: !16795)
!16799 = !DILocation(line: 284, column: 42, scope: !16800)
!16800 = distinct !DILexicalBlock(scope: !16795, file: !16452, line: 284, column: 3)
!16801 = !DILocation(line: 284, column: 39, scope: !16800)
!16802 = !DILocation(line: 284, column: 3, scope: !16795)
!16803 = !DILocation(line: 285, column: 11, scope: !16804)
!16804 = distinct !DILexicalBlock(scope: !16800, file: !16452, line: 285, column: 9)
!16805 = !DILocation(line: 285, column: 9, scope: !16800)
!16806 = !DILocation(line: 286, column: 7, scope: !16804)
!16807 = !DILocation(line: 284, column: 70, scope: !16800)
!16808 = !DILocation(line: 284, column: 3, scope: !16800)
!16809 = distinct !{!16809, !16802, !16810}
!16810 = !DILocation(line: 286, column: 7, scope: !16795)
!16811 = !DILocation(line: 288, column: 3, scope: !16776)
!16812 = !DILocation(line: 288, column: 10, scope: !16813)
!16813 = distinct !DILexicalBlock(scope: !16814, file: !16452, line: 288, column: 3)
!16814 = distinct !DILexicalBlock(scope: !16776, file: !16452, line: 288, column: 3)
!16815 = !DILocation(line: 288, column: 14, scope: !16813)
!16816 = !DILocation(line: 288, column: 12, scope: !16813)
!16817 = !DILocation(line: 288, column: 3, scope: !16814)
!16818 = !DILocation(line: 290, column: 13, scope: !16819)
!16819 = distinct !DILexicalBlock(scope: !16820, file: !16452, line: 290, column: 11)
!16820 = distinct !DILexicalBlock(scope: !16813, file: !16452, line: 289, column: 5)
!16821 = !DILocation(line: 290, column: 11, scope: !16820)
!16822 = !DILocalVariable(name: "s", scope: !16823, file: !16452, line: 292, type: !7)
!16823 = distinct !DILexicalBlock(scope: !16819, file: !16452, line: 291, column: 9)
!16824 = !DILocation(line: 292, column: 15, scope: !16823)
!16825 = !DILocation(line: 292, column: 19, scope: !16823)
!16826 = !DILocation(line: 292, column: 24, scope: !16823)
!16827 = !DILocation(line: 292, column: 29, scope: !16823)
!16828 = !DILocation(line: 292, column: 38, scope: !16823)
!16829 = !DILocation(line: 293, column: 15, scope: !16830)
!16830 = distinct !DILexicalBlock(scope: !16823, file: !16452, line: 293, column: 15)
!16831 = !DILocation(line: 293, column: 29, scope: !16830)
!16832 = !DILocation(line: 293, column: 27, scope: !16830)
!16833 = !DILocation(line: 293, column: 15, scope: !16823)
!16834 = !DILocation(line: 294, column: 27, scope: !16830)
!16835 = !DILocation(line: 294, column: 25, scope: !16830)
!16836 = !DILocation(line: 294, column: 13, scope: !16830)
!16837 = !DILocation(line: 295, column: 9, scope: !16823)
!16838 = !DILocation(line: 297, column: 13, scope: !16839)
!16839 = distinct !DILexicalBlock(scope: !16820, file: !16452, line: 297, column: 11)
!16840 = !DILocation(line: 297, column: 11, scope: !16820)
!16841 = !DILocalVariable(name: "r", scope: !16842, file: !16452, line: 299, type: !7)
!16842 = distinct !DILexicalBlock(scope: !16839, file: !16452, line: 298, column: 9)
!16843 = !DILocation(line: 299, column: 15, scope: !16842)
!16844 = !DILocation(line: 299, column: 40, scope: !16842)
!16845 = !DILocation(line: 299, column: 19, scope: !16842)
!16846 = !DILocation(line: 300, column: 15, scope: !16847)
!16847 = distinct !DILexicalBlock(scope: !16842, file: !16452, line: 300, column: 15)
!16848 = !DILocation(line: 300, column: 29, scope: !16847)
!16849 = !DILocation(line: 300, column: 27, scope: !16847)
!16850 = !DILocation(line: 300, column: 15, scope: !16842)
!16851 = !DILocation(line: 301, column: 27, scope: !16847)
!16852 = !DILocation(line: 301, column: 25, scope: !16847)
!16853 = !DILocation(line: 301, column: 13, scope: !16847)
!16854 = !DILocation(line: 302, column: 9, scope: !16842)
!16855 = !DILocation(line: 303, column: 5, scope: !16820)
!16856 = !DILocation(line: 288, column: 30, scope: !16813)
!16857 = !DILocation(line: 288, column: 3, scope: !16813)
!16858 = distinct !{!16858, !16817, !16859}
!16859 = !DILocation(line: 303, column: 5, scope: !16814)
!16860 = !DILocation(line: 305, column: 3, scope: !16776)
!16861 = !DILocation(line: 307, column: 3, scope: !16776)
!16862 = !DILocation(line: 307, column: 10, scope: !16863)
!16863 = distinct !DILexicalBlock(scope: !16864, file: !16452, line: 307, column: 3)
!16864 = distinct !DILexicalBlock(scope: !16776, file: !16452, line: 307, column: 3)
!16865 = !DILocation(line: 307, column: 14, scope: !16863)
!16866 = !DILocation(line: 307, column: 12, scope: !16863)
!16867 = !DILocation(line: 307, column: 3, scope: !16864)
!16868 = !DILocalVariable(name: "s", scope: !16869, file: !16452, line: 309, type: !7)
!16869 = distinct !DILexicalBlock(scope: !16863, file: !16452, line: 308, column: 5)
!16870 = !DILocation(line: 309, column: 11, scope: !16869)
!16871 = !DILocation(line: 309, column: 15, scope: !16869)
!16872 = !DILocation(line: 309, column: 20, scope: !16869)
!16873 = !DILocation(line: 309, column: 25, scope: !16869)
!16874 = !DILocation(line: 309, column: 34, scope: !16869)
!16875 = !DILocation(line: 310, column: 11, scope: !16876)
!16876 = distinct !DILexicalBlock(scope: !16869, file: !16452, line: 310, column: 11)
!16877 = !DILocation(line: 310, column: 25, scope: !16876)
!16878 = !DILocation(line: 310, column: 23, scope: !16876)
!16879 = !DILocation(line: 310, column: 11, scope: !16869)
!16880 = !DILocation(line: 311, column: 23, scope: !16876)
!16881 = !DILocation(line: 311, column: 21, scope: !16876)
!16882 = !DILocation(line: 311, column: 9, scope: !16876)
!16883 = !DILocation(line: 312, column: 5, scope: !16869)
!16884 = !DILocation(line: 307, column: 24, scope: !16863)
!16885 = !DILocation(line: 307, column: 3, scope: !16863)
!16886 = distinct !{!16886, !16867, !16887}
!16887 = !DILocation(line: 312, column: 5, scope: !16864)
!16888 = !DILocation(line: 314, column: 10, scope: !16776)
!16889 = !DILocation(line: 314, column: 3, scope: !16776)
!16890 = distinct !DISubprogram(name: "savewd_delegating", scope: !16452, file: !16452, line: 268, type: !1836, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1804, retainedNodes: !209)
!16891 = !DILocalVariable(name: "wd", arg: 1, scope: !16890, file: !16452, line: 268, type: !1823)
!16892 = !DILocation(line: 268, column: 41, scope: !16890)
!16893 = !DILocation(line: 270, column: 10, scope: !16890)
!16894 = !DILocation(line: 270, column: 14, scope: !16890)
!16895 = !DILocation(line: 270, column: 20, scope: !16890)
!16896 = !DILocation(line: 270, column: 37, scope: !16890)
!16897 = !DILocation(line: 270, column: 44, scope: !16890)
!16898 = !DILocation(line: 270, column: 48, scope: !16890)
!16899 = !DILocation(line: 270, column: 52, scope: !16890)
!16900 = !DILocation(line: 270, column: 42, scope: !16890)
!16901 = !DILocation(line: 0, scope: !16890)
!16902 = !DILocation(line: 270, column: 3, scope: !16890)
!16903 = distinct !DISubprogram(name: "getcon", scope: !1845, file: !1845, line: 87, type: !1841, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1838, retainedNodes: !209)
!16904 = !DILocalVariable(name: "con", arg: 1, scope: !16903, file: !1845, line: 87, type: !1843)
!16905 = !DILocation(line: 87, column: 29, scope: !16903)
!16906 = !DILocation(line: 88, column: 5, scope: !16903)
!16907 = !DILocation(line: 88, column: 11, scope: !16903)
!16908 = !DILocation(line: 88, column: 22, scope: !16903)
!16909 = distinct !DISubprogram(name: "freecon", scope: !1845, file: !1845, line: 90, type: !1846, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1838, retainedNodes: !209)
!16910 = !DILocalVariable(name: "con", arg: 1, scope: !16909, file: !1845, line: 90, type: !1844)
!16911 = !DILocation(line: 90, column: 29, scope: !16909)
!16912 = !DILocation(line: 90, column: 56, scope: !16909)
!16913 = distinct !DISubprogram(name: "getfscreatecon", scope: !1845, file: !1845, line: 93, type: !1841, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1838, retainedNodes: !209)
!16914 = !DILocalVariable(name: "con", arg: 1, scope: !16913, file: !1845, line: 93, type: !1843)
!16915 = !DILocation(line: 93, column: 37, scope: !16913)
!16916 = !DILocation(line: 94, column: 5, scope: !16913)
!16917 = !DILocation(line: 94, column: 11, scope: !16913)
!16918 = !DILocation(line: 94, column: 22, scope: !16913)
!16919 = distinct !DISubprogram(name: "setfscreatecon", scope: !1845, file: !1845, line: 96, type: !1848, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1838, retainedNodes: !209)
!16920 = !DILocalVariable(name: "con", arg: 1, scope: !16919, file: !1845, line: 96, type: !1844)
!16921 = !DILocation(line: 96, column: 36, scope: !16919)
!16922 = !DILocation(line: 97, column: 5, scope: !16919)
!16923 = !DILocation(line: 97, column: 11, scope: !16919)
!16924 = !DILocation(line: 97, column: 22, scope: !16919)
!16925 = distinct !DISubprogram(name: "matchpathcon", scope: !1845, file: !1845, line: 99, type: !1850, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1838, retainedNodes: !209)
!16926 = !DILocalVariable(name: "file", arg: 1, scope: !16925, file: !1845, line: 99, type: !180)
!16927 = !DILocation(line: 99, column: 27, scope: !16925)
!16928 = !DILocalVariable(name: "m", arg: 2, scope: !16925, file: !1845, line: 100, type: !139)
!16929 = !DILocation(line: 100, column: 22, scope: !16925)
!16930 = !DILocalVariable(name: "con", arg: 3, scope: !16925, file: !1845, line: 101, type: !1843)
!16931 = !DILocation(line: 101, column: 23, scope: !16925)
!16932 = !DILocation(line: 102, column: 5, scope: !16925)
!16933 = !DILocation(line: 102, column: 11, scope: !16925)
!16934 = !DILocation(line: 102, column: 22, scope: !16925)
!16935 = distinct !DISubprogram(name: "getfilecon", scope: !1845, file: !1845, line: 104, type: !1852, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1838, retainedNodes: !209)
!16936 = !DILocalVariable(name: "file", arg: 1, scope: !16935, file: !1845, line: 104, type: !180)
!16937 = !DILocation(line: 104, column: 25, scope: !16935)
!16938 = !DILocalVariable(name: "con", arg: 2, scope: !16935, file: !1845, line: 105, type: !1843)
!16939 = !DILocation(line: 105, column: 33, scope: !16935)
!16940 = !DILocation(line: 106, column: 5, scope: !16935)
!16941 = !DILocation(line: 106, column: 11, scope: !16935)
!16942 = !DILocation(line: 106, column: 22, scope: !16935)
!16943 = distinct !DISubprogram(name: "lgetfilecon", scope: !1845, file: !1845, line: 108, type: !1852, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1838, retainedNodes: !209)
!16944 = !DILocalVariable(name: "file", arg: 1, scope: !16943, file: !1845, line: 108, type: !180)
!16945 = !DILocation(line: 108, column: 26, scope: !16943)
!16946 = !DILocalVariable(name: "con", arg: 2, scope: !16943, file: !1845, line: 109, type: !1843)
!16947 = !DILocation(line: 109, column: 34, scope: !16943)
!16948 = !DILocation(line: 110, column: 5, scope: !16943)
!16949 = !DILocation(line: 110, column: 11, scope: !16943)
!16950 = !DILocation(line: 110, column: 22, scope: !16943)
!16951 = distinct !DISubprogram(name: "fgetfilecon", scope: !1845, file: !1845, line: 112, type: !1854, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1838, retainedNodes: !209)
!16952 = !DILocalVariable(name: "fd", arg: 1, scope: !16951, file: !1845, line: 112, type: !7)
!16953 = !DILocation(line: 112, column: 18, scope: !16951)
!16954 = !DILocalVariable(name: "con", arg: 2, scope: !16951, file: !1845, line: 112, type: !1843)
!16955 = !DILocation(line: 112, column: 42, scope: !16951)
!16956 = !DILocation(line: 113, column: 5, scope: !16951)
!16957 = !DILocation(line: 113, column: 11, scope: !16951)
!16958 = !DILocation(line: 113, column: 22, scope: !16951)
!16959 = distinct !DISubprogram(name: "setfilecon", scope: !1845, file: !1845, line: 115, type: !1856, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1838, retainedNodes: !209)
!16960 = !DILocalVariable(name: "file", arg: 1, scope: !16959, file: !1845, line: 115, type: !180)
!16961 = !DILocation(line: 115, column: 25, scope: !16959)
!16962 = !DILocalVariable(name: "con", arg: 2, scope: !16959, file: !1845, line: 116, type: !1844)
!16963 = !DILocation(line: 116, column: 32, scope: !16959)
!16964 = !DILocation(line: 117, column: 5, scope: !16959)
!16965 = !DILocation(line: 117, column: 11, scope: !16959)
!16966 = !DILocation(line: 117, column: 22, scope: !16959)
!16967 = distinct !DISubprogram(name: "lsetfilecon", scope: !1845, file: !1845, line: 119, type: !1856, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1838, retainedNodes: !209)
!16968 = !DILocalVariable(name: "file", arg: 1, scope: !16967, file: !1845, line: 119, type: !180)
!16969 = !DILocation(line: 119, column: 26, scope: !16967)
!16970 = !DILocalVariable(name: "con", arg: 2, scope: !16967, file: !1845, line: 120, type: !1844)
!16971 = !DILocation(line: 120, column: 33, scope: !16967)
!16972 = !DILocation(line: 121, column: 5, scope: !16967)
!16973 = !DILocation(line: 121, column: 11, scope: !16967)
!16974 = !DILocation(line: 121, column: 22, scope: !16967)
!16975 = distinct !DISubprogram(name: "fsetfilecon", scope: !1845, file: !1845, line: 123, type: !1858, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1838, retainedNodes: !209)
!16976 = !DILocalVariable(name: "fd", arg: 1, scope: !16975, file: !1845, line: 123, type: !7)
!16977 = !DILocation(line: 123, column: 18, scope: !16975)
!16978 = !DILocalVariable(name: "con", arg: 2, scope: !16975, file: !1845, line: 124, type: !1844)
!16979 = !DILocation(line: 124, column: 33, scope: !16975)
!16980 = !DILocation(line: 125, column: 5, scope: !16975)
!16981 = !DILocation(line: 125, column: 11, scope: !16975)
!16982 = !DILocation(line: 125, column: 22, scope: !16975)
!16983 = distinct !DISubprogram(name: "security_check_context", scope: !1845, file: !1845, line: 128, type: !1848, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1838, retainedNodes: !209)
!16984 = !DILocalVariable(name: "con", arg: 1, scope: !16983, file: !1845, line: 128, type: !1844)
!16985 = !DILocation(line: 128, column: 44, scope: !16983)
!16986 = !DILocation(line: 129, column: 5, scope: !16983)
!16987 = !DILocation(line: 129, column: 11, scope: !16983)
!16988 = !DILocation(line: 129, column: 22, scope: !16983)
!16989 = distinct !DISubprogram(name: "security_check_context_raw", scope: !1845, file: !1845, line: 131, type: !1848, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1838, retainedNodes: !209)
!16990 = !DILocalVariable(name: "con", arg: 1, scope: !16989, file: !1845, line: 131, type: !1844)
!16991 = !DILocation(line: 131, column: 48, scope: !16989)
!16992 = !DILocation(line: 132, column: 5, scope: !16989)
!16993 = !DILocation(line: 132, column: 11, scope: !16989)
!16994 = !DILocation(line: 132, column: 22, scope: !16989)
!16995 = distinct !DISubprogram(name: "setexeccon", scope: !1845, file: !1845, line: 134, type: !1848, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1838, retainedNodes: !209)
!16996 = !DILocalVariable(name: "con", arg: 1, scope: !16995, file: !1845, line: 134, type: !1844)
!16997 = !DILocation(line: 134, column: 32, scope: !16995)
!16998 = !DILocation(line: 135, column: 5, scope: !16995)
!16999 = !DILocation(line: 135, column: 11, scope: !16995)
!17000 = !DILocation(line: 135, column: 22, scope: !16995)
!17001 = distinct !DISubprogram(name: "security_compute_create", scope: !1845, file: !1845, line: 137, type: !1860, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1838, retainedNodes: !209)
!17002 = !DILocalVariable(name: "scon", arg: 1, scope: !17001, file: !1845, line: 137, type: !1844)
!17003 = !DILocation(line: 137, column: 45, scope: !17001)
!17004 = !DILocalVariable(name: "tcon", arg: 2, scope: !17001, file: !1845, line: 138, type: !1844)
!17005 = !DILocation(line: 138, column: 45, scope: !17001)
!17006 = !DILocalVariable(name: "tclass", arg: 3, scope: !17001, file: !1845, line: 139, type: !1862)
!17007 = !DILocation(line: 139, column: 43, scope: !17001)
!17008 = !DILocalVariable(name: "newcon", arg: 4, scope: !17001, file: !1845, line: 140, type: !1843)
!17009 = !DILocation(line: 140, column: 46, scope: !17001)
!17010 = !DILocation(line: 141, column: 5, scope: !17001)
!17011 = !DILocation(line: 141, column: 11, scope: !17001)
!17012 = !DILocation(line: 141, column: 22, scope: !17001)
!17013 = distinct !DISubprogram(name: "string_to_security_class", scope: !1845, file: !1845, line: 143, type: !1863, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1838, retainedNodes: !209)
!17014 = !DILocalVariable(name: "name", arg: 1, scope: !17013, file: !1845, line: 143, type: !180)
!17015 = !DILocation(line: 143, column: 39, scope: !17013)
!17016 = !DILocation(line: 144, column: 5, scope: !17013)
!17017 = !DILocation(line: 144, column: 11, scope: !17013)
!17018 = !DILocation(line: 144, column: 22, scope: !17013)
!17019 = distinct !DISubprogram(name: "matchpathcon_init_prefix", scope: !1845, file: !1845, line: 146, type: !1865, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1838, retainedNodes: !209)
!17020 = !DILocalVariable(name: "path", arg: 1, scope: !17019, file: !1845, line: 146, type: !180)
!17021 = !DILocation(line: 146, column: 39, scope: !17019)
!17022 = !DILocalVariable(name: "prefix", arg: 2, scope: !17019, file: !1845, line: 147, type: !180)
!17023 = !DILocation(line: 147, column: 39, scope: !17019)
!17024 = !DILocation(line: 148, column: 5, scope: !17019)
!17025 = !DILocation(line: 148, column: 11, scope: !17019)
!17026 = !DILocation(line: 148, column: 22, scope: !17019)
!17027 = distinct !DISubprogram(name: "get_stat_atime_ns", scope: !17028, file: !17028, line: 66, type: !1870, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1867, retainedNodes: !209)
!17028 = !DIFile(filename: "./lib/stat-time.h", directory: "/home/mbarbar/clone/coreutils")
!17029 = !DILocalVariable(name: "st", arg: 1, scope: !17027, file: !17028, line: 66, type: !1872)
!17030 = !DILocation(line: 66, column: 39, scope: !17027)
!17031 = !DILocation(line: 69, column: 10, scope: !17027)
!17032 = !DILocation(line: 69, column: 38, scope: !17027)
!17033 = !{!2915, !2916, i64 80}
!17034 = !DILocation(line: 69, column: 3, scope: !17027)
!17035 = distinct !DISubprogram(name: "get_stat_ctime_ns", scope: !17028, file: !17028, line: 79, type: !1870, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1867, retainedNodes: !209)
!17036 = !DILocalVariable(name: "st", arg: 1, scope: !17035, file: !17028, line: 79, type: !1872)
!17037 = !DILocation(line: 79, column: 39, scope: !17035)
!17038 = !DILocation(line: 82, column: 10, scope: !17035)
!17039 = !DILocation(line: 82, column: 38, scope: !17035)
!17040 = !{!2915, !2916, i64 112}
!17041 = !DILocation(line: 82, column: 3, scope: !17035)
!17042 = distinct !DISubprogram(name: "get_stat_mtime_ns", scope: !17028, file: !17028, line: 92, type: !1870, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1867, retainedNodes: !209)
!17043 = !DILocalVariable(name: "st", arg: 1, scope: !17042, file: !17028, line: 92, type: !1872)
!17044 = !DILocation(line: 92, column: 39, scope: !17042)
!17045 = !DILocation(line: 95, column: 10, scope: !17042)
!17046 = !DILocation(line: 95, column: 38, scope: !17042)
!17047 = !{!2915, !2916, i64 96}
!17048 = !DILocation(line: 95, column: 3, scope: !17042)
!17049 = distinct !DISubprogram(name: "get_stat_birthtime_ns", scope: !17028, file: !17028, line: 105, type: !1870, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1867, retainedNodes: !209)
!17050 = !DILocalVariable(name: "st", arg: 1, scope: !17049, file: !17028, line: 105, type: !1872)
!17051 = !DILocation(line: 105, column: 43, scope: !17049)
!17052 = !DILocation(line: 112, column: 3, scope: !17049)
!17053 = distinct !DISubprogram(name: "get_stat_atime", scope: !17028, file: !17028, line: 118, type: !1895, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1867, retainedNodes: !209)
!17054 = !DILocalVariable(name: "st", arg: 1, scope: !17053, file: !17028, line: 118, type: !1872)
!17055 = !DILocation(line: 118, column: 36, scope: !17053)
!17056 = !DILocation(line: 121, column: 10, scope: !17053)
!17057 = !DILocation(line: 121, column: 3, scope: !17053)
!17058 = distinct !DISubprogram(name: "get_stat_ctime", scope: !17028, file: !17028, line: 132, type: !1895, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1867, retainedNodes: !209)
!17059 = !DILocalVariable(name: "st", arg: 1, scope: !17058, file: !17028, line: 132, type: !1872)
!17060 = !DILocation(line: 132, column: 36, scope: !17058)
!17061 = !DILocation(line: 135, column: 10, scope: !17058)
!17062 = !DILocation(line: 135, column: 3, scope: !17058)
!17063 = distinct !DISubprogram(name: "get_stat_mtime", scope: !17028, file: !17028, line: 146, type: !1895, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1867, retainedNodes: !209)
!17064 = !DILocalVariable(name: "st", arg: 1, scope: !17063, file: !17028, line: 146, type: !1872)
!17065 = !DILocation(line: 146, column: 36, scope: !17063)
!17066 = !DILocation(line: 149, column: 10, scope: !17063)
!17067 = !DILocation(line: 149, column: 3, scope: !17063)
!17068 = distinct !DISubprogram(name: "get_stat_birthtime", scope: !17028, file: !17028, line: 161, type: !1895, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1867, retainedNodes: !209)
!17069 = !DILocalVariable(name: "st", arg: 1, scope: !17068, file: !17028, line: 161, type: !1872)
!17070 = !DILocation(line: 161, column: 40, scope: !17068)
!17071 = !DILocalVariable(name: "t", scope: !17068, file: !17028, line: 163, type: !1888)
!17072 = !DILocation(line: 163, column: 19, scope: !17068)
!17073 = !DILocation(line: 183, column: 5, scope: !17068)
!17074 = !DILocation(line: 183, column: 12, scope: !17068)
!17075 = !{!2917, !2916, i64 0}
!17076 = !DILocation(line: 184, column: 5, scope: !17068)
!17077 = !DILocation(line: 184, column: 13, scope: !17068)
!17078 = !{!2917, !2916, i64 8}
!17079 = !DILocation(line: 202, column: 3, scope: !17068)
!17080 = distinct !DISubprogram(name: "stat_time_normalize", scope: !17028, file: !17028, line: 211, type: !1897, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1867, retainedNodes: !209)
!17081 = !DILocalVariable(name: "result", arg: 1, scope: !17080, file: !17028, line: 211, type: !7)
!17082 = !DILocation(line: 211, column: 26, scope: !17080)
!17083 = !DILocalVariable(name: "st", arg: 2, scope: !17080, file: !17028, line: 211, type: !1899)
!17084 = !DILocation(line: 211, column: 47, scope: !17080)
!17085 = !DILocation(line: 243, column: 10, scope: !17080)
!17086 = !DILocation(line: 243, column: 3, scope: !17080)
!17087 = distinct !DISubprogram(name: "statat", scope: !17088, file: !17088, line: 102, type: !1903, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1900, retainedNodes: !209)
!17088 = !DIFile(filename: "./lib/openat.h", directory: "/home/mbarbar/clone/coreutils")
!17089 = !DILocalVariable(name: "fd", arg: 1, scope: !17087, file: !17088, line: 102, type: !7)
!17090 = !DILocation(line: 102, column: 13, scope: !17087)
!17091 = !DILocalVariable(name: "name", arg: 2, scope: !17087, file: !17088, line: 102, type: !180)
!17092 = !DILocation(line: 102, column: 29, scope: !17087)
!17093 = !DILocalVariable(name: "st", arg: 3, scope: !17087, file: !17088, line: 102, type: !1905)
!17094 = !DILocation(line: 102, column: 48, scope: !17087)
!17095 = !DILocation(line: 104, column: 19, scope: !17087)
!17096 = !DILocation(line: 104, column: 23, scope: !17087)
!17097 = !DILocation(line: 104, column: 29, scope: !17087)
!17098 = !DILocation(line: 104, column: 10, scope: !17087)
!17099 = !DILocation(line: 104, column: 3, scope: !17087)
!17100 = distinct !DISubprogram(name: "lstatat", scope: !17088, file: !17088, line: 108, type: !1903, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1900, retainedNodes: !209)
!17101 = !DILocalVariable(name: "fd", arg: 1, scope: !17100, file: !17088, line: 108, type: !7)
!17102 = !DILocation(line: 108, column: 14, scope: !17100)
!17103 = !DILocalVariable(name: "name", arg: 2, scope: !17100, file: !17088, line: 108, type: !180)
!17104 = !DILocation(line: 108, column: 30, scope: !17100)
!17105 = !DILocalVariable(name: "st", arg: 3, scope: !17100, file: !17088, line: 108, type: !1905)
!17106 = !DILocation(line: 108, column: 49, scope: !17100)
!17107 = !DILocation(line: 110, column: 19, scope: !17100)
!17108 = !DILocation(line: 110, column: 23, scope: !17100)
!17109 = !DILocation(line: 110, column: 29, scope: !17100)
!17110 = !DILocation(line: 110, column: 10, scope: !17100)
!17111 = !DILocation(line: 110, column: 3, scope: !17100)
!17112 = distinct !DISubprogram(name: "try_tempname_len", scope: !1215, file: !1215, line: 188, type: !1197, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1194, retainedNodes: !209)
!17113 = !DILocalVariable(name: "tmpl", arg: 1, scope: !17112, file: !1215, line: 188, type: !9)
!17114 = !DILocation(line: 188, column: 25, scope: !17112)
!17115 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !17112, file: !1215, line: 188, type: !7)
!17116 = !DILocation(line: 188, column: 35, scope: !17112)
!17117 = !DILocalVariable(name: "args", arg: 3, scope: !17112, file: !1215, line: 188, type: !53)
!17118 = !DILocation(line: 188, column: 52, scope: !17112)
!17119 = !DILocalVariable(name: "tryfunc", arg: 4, scope: !17112, file: !1215, line: 189, type: !1199)
!17120 = !DILocation(line: 189, column: 25, scope: !17112)
!17121 = !DILocalVariable(name: "x_suffix_len", arg: 5, scope: !17112, file: !1215, line: 189, type: !55)
!17122 = !DILocation(line: 189, column: 59, scope: !17112)
!17123 = !DILocalVariable(name: "len", scope: !17112, file: !1215, line: 191, type: !55)
!17124 = !DILocation(line: 191, column: 10, scope: !17112)
!17125 = !DILocalVariable(name: "XXXXXX", scope: !17112, file: !1215, line: 192, type: !9)
!17126 = !DILocation(line: 192, column: 9, scope: !17112)
!17127 = !DILocalVariable(name: "count", scope: !17112, file: !1215, line: 193, type: !70)
!17128 = !DILocation(line: 193, column: 16, scope: !17112)
!17129 = !DILocalVariable(name: "fd", scope: !17112, file: !1215, line: 194, type: !7)
!17130 = !DILocation(line: 194, column: 7, scope: !17112)
!17131 = !DILocalVariable(name: "save_errno", scope: !17112, file: !1215, line: 195, type: !7)
!17132 = !DILocation(line: 195, column: 7, scope: !17112)
!17133 = !DILocation(line: 195, column: 20, scope: !17112)
!17134 = !DILocalVariable(name: "rand_src", scope: !17112, file: !1215, line: 196, type: !1200)
!17135 = !DILocation(line: 196, column: 26, scope: !17112)
!17136 = !DILocalVariable(name: "attempts", scope: !17112, file: !1215, line: 212, type: !70)
!17137 = !DILocation(line: 212, column: 16, scope: !17112)
!17138 = !DILocation(line: 215, column: 17, scope: !17112)
!17139 = !DILocation(line: 215, column: 9, scope: !17112)
!17140 = !DILocation(line: 215, column: 7, scope: !17112)
!17141 = !DILocation(line: 216, column: 7, scope: !17142)
!17142 = distinct !DILexicalBlock(scope: !17112, file: !1215, line: 216, column: 7)
!17143 = !DILocation(line: 216, column: 13, scope: !17142)
!17144 = !DILocation(line: 216, column: 28, scope: !17142)
!17145 = !DILocation(line: 216, column: 26, scope: !17142)
!17146 = !DILocation(line: 216, column: 11, scope: !17142)
!17147 = !DILocation(line: 217, column: 7, scope: !17142)
!17148 = !DILocation(line: 217, column: 29, scope: !17142)
!17149 = !DILocation(line: 217, column: 34, scope: !17142)
!17150 = !DILocation(line: 217, column: 40, scope: !17142)
!17151 = !DILocation(line: 217, column: 38, scope: !17142)
!17152 = !DILocation(line: 217, column: 55, scope: !17142)
!17153 = !DILocation(line: 217, column: 53, scope: !17142)
!17154 = !DILocation(line: 218, column: 28, scope: !17142)
!17155 = !DILocation(line: 217, column: 12, scope: !17142)
!17156 = !DILocation(line: 216, column: 7, scope: !17112)
!17157 = !DILocation(line: 220, column: 7, scope: !17158)
!17158 = distinct !DILexicalBlock(scope: !17142, file: !1215, line: 219, column: 5)
!17159 = !DILocation(line: 221, column: 7, scope: !17158)
!17160 = !DILocation(line: 225, column: 13, scope: !17112)
!17161 = !DILocation(line: 225, column: 18, scope: !17112)
!17162 = !DILocation(line: 225, column: 24, scope: !17112)
!17163 = !DILocation(line: 225, column: 22, scope: !17112)
!17164 = !DILocation(line: 225, column: 39, scope: !17112)
!17165 = !DILocation(line: 225, column: 37, scope: !17112)
!17166 = !DILocation(line: 225, column: 10, scope: !17112)
!17167 = !DILocation(line: 228, column: 37, scope: !17112)
!17168 = !DILocation(line: 228, column: 14, scope: !17112)
!17169 = !DILocation(line: 228, column: 12, scope: !17112)
!17170 = !DILocation(line: 229, column: 9, scope: !17171)
!17171 = distinct !DILexicalBlock(scope: !17112, file: !1215, line: 229, column: 7)
!17172 = !DILocation(line: 229, column: 7, scope: !17112)
!17173 = !DILocation(line: 230, column: 5, scope: !17171)
!17174 = !DILocation(line: 232, column: 14, scope: !17175)
!17175 = distinct !DILexicalBlock(scope: !17112, file: !1215, line: 232, column: 3)
!17176 = !DILocation(line: 232, column: 8, scope: !17175)
!17177 = !DILocation(line: 232, column: 19, scope: !17178)
!17178 = distinct !DILexicalBlock(scope: !17175, file: !1215, line: 232, column: 3)
!17179 = !DILocation(line: 232, column: 27, scope: !17178)
!17180 = !DILocation(line: 232, column: 25, scope: !17178)
!17181 = !DILocation(line: 232, column: 3, scope: !17175)
!17182 = !DILocalVariable(name: "i", scope: !17183, file: !1215, line: 234, type: !55)
!17183 = distinct !DILexicalBlock(scope: !17178, file: !1215, line: 233, column: 5)
!17184 = !DILocation(line: 234, column: 14, scope: !17183)
!17185 = !DILocation(line: 236, column: 14, scope: !17186)
!17186 = distinct !DILexicalBlock(scope: !17183, file: !1215, line: 236, column: 7)
!17187 = !DILocation(line: 236, column: 12, scope: !17186)
!17188 = !DILocation(line: 236, column: 19, scope: !17189)
!17189 = distinct !DILexicalBlock(scope: !17186, file: !1215, line: 236, column: 7)
!17190 = !DILocation(line: 236, column: 23, scope: !17189)
!17191 = !DILocation(line: 236, column: 21, scope: !17189)
!17192 = !DILocation(line: 236, column: 7, scope: !17186)
!17193 = !DILocation(line: 237, column: 45, scope: !17189)
!17194 = !DILocation(line: 237, column: 29, scope: !17189)
!17195 = !DILocation(line: 237, column: 21, scope: !17189)
!17196 = !DILocation(line: 237, column: 9, scope: !17189)
!17197 = !DILocation(line: 237, column: 16, scope: !17189)
!17198 = !DILocation(line: 237, column: 19, scope: !17189)
!17199 = !DILocation(line: 236, column: 38, scope: !17189)
!17200 = !DILocation(line: 236, column: 7, scope: !17189)
!17201 = distinct !{!17201, !17192, !17202}
!17202 = !DILocation(line: 237, column: 74, scope: !17186)
!17203 = !DILocation(line: 239, column: 12, scope: !17183)
!17204 = !DILocation(line: 239, column: 21, scope: !17183)
!17205 = !DILocation(line: 239, column: 27, scope: !17183)
!17206 = !DILocation(line: 239, column: 10, scope: !17183)
!17207 = !DILocation(line: 240, column: 11, scope: !17208)
!17208 = distinct !DILexicalBlock(scope: !17183, file: !1215, line: 240, column: 11)
!17209 = !DILocation(line: 240, column: 14, scope: !17208)
!17210 = !DILocation(line: 240, column: 11, scope: !17183)
!17211 = !DILocation(line: 242, column: 11, scope: !17212)
!17212 = distinct !DILexicalBlock(scope: !17208, file: !1215, line: 241, column: 9)
!17213 = !DILocation(line: 243, column: 11, scope: !17212)
!17214 = !DILocation(line: 245, column: 16, scope: !17215)
!17215 = distinct !DILexicalBlock(scope: !17208, file: !1215, line: 245, column: 16)
!17216 = !DILocation(line: 245, column: 22, scope: !17215)
!17217 = !DILocation(line: 245, column: 16, scope: !17208)
!17218 = !DILocation(line: 247, column: 14, scope: !17219)
!17219 = distinct !DILexicalBlock(scope: !17215, file: !1215, line: 246, column: 9)
!17220 = !DILocation(line: 248, column: 11, scope: !17219)
!17221 = !DILocation(line: 250, column: 5, scope: !17183)
!17222 = !DILocation(line: 232, column: 37, scope: !17178)
!17223 = !DILocation(line: 232, column: 3, scope: !17178)
!17224 = distinct !{!17224, !17181, !17225}
!17225 = !DILocation(line: 250, column: 5, scope: !17175)
!17226 = !DILocation(line: 252, column: 21, scope: !17112)
!17227 = !DILocation(line: 252, column: 3, scope: !17112)
!17228 = !DILocation(line: 255, column: 3, scope: !17112)
!17229 = !DILocation(line: 256, column: 3, scope: !17112)
!17230 = !DILabel(scope: !17112, name: "done", file: !1215, line: 258)
!17231 = !DILocation(line: 258, column: 2, scope: !17112)
!17232 = !DILocalVariable(name: "saved_errno", scope: !17233, file: !1215, line: 260, type: !7)
!17233 = distinct !DILexicalBlock(scope: !17112, file: !1215, line: 259, column: 3)
!17234 = !DILocation(line: 260, column: 9, scope: !17233)
!17235 = !DILocation(line: 260, column: 23, scope: !17233)
!17236 = !DILocation(line: 261, column: 23, scope: !17233)
!17237 = !DILocation(line: 261, column: 5, scope: !17233)
!17238 = !DILocation(line: 262, column: 5, scope: !17233)
!17239 = !DILocation(line: 264, column: 10, scope: !17112)
!17240 = !DILocation(line: 264, column: 3, scope: !17112)
!17241 = !DILocation(line: 265, column: 1, scope: !17112)
!17242 = distinct !DISubprogram(name: "check_x_suffix", scope: !1215, file: !1215, line: 178, type: !1212, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1194, retainedNodes: !209)
!17243 = !DILocalVariable(name: "s", arg: 1, scope: !17242, file: !1215, line: 178, type: !180)
!17244 = !DILocation(line: 178, column: 29, scope: !17242)
!17245 = !DILocalVariable(name: "len", arg: 2, scope: !17242, file: !1215, line: 178, type: !55)
!17246 = !DILocation(line: 178, column: 39, scope: !17242)
!17247 = !DILocation(line: 180, column: 10, scope: !17242)
!17248 = !DILocation(line: 180, column: 25, scope: !17242)
!17249 = !DILocation(line: 180, column: 17, scope: !17242)
!17250 = !DILocation(line: 180, column: 14, scope: !17242)
!17251 = !DILocation(line: 180, column: 3, scope: !17242)
!17252 = distinct !DISubprogram(name: "gen_tempname_len", scope: !1215, file: !1215, line: 307, type: !1206, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1194, retainedNodes: !209)
!17253 = !DILocalVariable(name: "tmpl", arg: 1, scope: !17252, file: !1215, line: 307, type: !9)
!17254 = !DILocation(line: 307, column: 25, scope: !17252)
!17255 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !17252, file: !1215, line: 307, type: !7)
!17256 = !DILocation(line: 307, column: 35, scope: !17252)
!17257 = !DILocalVariable(name: "flags", arg: 3, scope: !17252, file: !1215, line: 307, type: !7)
!17258 = !DILocation(line: 307, column: 50, scope: !17252)
!17259 = !DILocalVariable(name: "kind", arg: 4, scope: !17252, file: !1215, line: 307, type: !7)
!17260 = !DILocation(line: 307, column: 61, scope: !17252)
!17261 = !DILocalVariable(name: "x_suffix_len", arg: 5, scope: !17252, file: !1215, line: 308, type: !55)
!17262 = !DILocation(line: 308, column: 26, scope: !17252)
!17263 = !DILocalVariable(name: "tryfunc", scope: !17252, file: !1215, line: 310, type: !1199)
!17264 = !DILocation(line: 310, column: 9, scope: !17252)
!17265 = !DILocation(line: 312, column: 11, scope: !17252)
!17266 = !DILocation(line: 312, column: 3, scope: !17252)
!17267 = !DILocation(line: 315, column: 15, scope: !17268)
!17268 = distinct !DILexicalBlock(scope: !17252, file: !1215, line: 313, column: 5)
!17269 = !DILocation(line: 316, column: 7, scope: !17268)
!17270 = !DILocation(line: 319, column: 15, scope: !17268)
!17271 = !DILocation(line: 320, column: 7, scope: !17268)
!17272 = !DILocation(line: 323, column: 15, scope: !17268)
!17273 = !DILocation(line: 324, column: 7, scope: !17268)
!17274 = !DILocation(line: 327, column: 7, scope: !17275)
!17275 = distinct !DILexicalBlock(scope: !17276, file: !1215, line: 327, column: 7)
!17276 = distinct !DILexicalBlock(scope: !17268, file: !1215, line: 327, column: 7)
!17277 = !DILocation(line: 330, column: 28, scope: !17252)
!17278 = !DILocation(line: 330, column: 34, scope: !17252)
!17279 = !DILocation(line: 330, column: 45, scope: !17252)
!17280 = !DILocation(line: 330, column: 53, scope: !17252)
!17281 = !DILocation(line: 330, column: 62, scope: !17252)
!17282 = !DILocation(line: 330, column: 10, scope: !17252)
!17283 = !DILocation(line: 330, column: 3, scope: !17252)
!17284 = distinct !DISubprogram(name: "try_file", scope: !1215, file: !1215, line: 268, type: !658, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1194, retainedNodes: !209)
!17285 = !DILocalVariable(name: "tmpl", arg: 1, scope: !17284, file: !1215, line: 268, type: !9)
!17286 = !DILocation(line: 268, column: 17, scope: !17284)
!17287 = !DILocalVariable(name: "flags", arg: 2, scope: !17284, file: !1215, line: 268, type: !53)
!17288 = !DILocation(line: 268, column: 29, scope: !17284)
!17289 = !DILocalVariable(name: "openflags", scope: !17284, file: !1215, line: 270, type: !193)
!17290 = !DILocation(line: 270, column: 8, scope: !17284)
!17291 = !DILocation(line: 270, column: 20, scope: !17284)
!17292 = !DILocation(line: 271, column: 18, scope: !17284)
!17293 = !DILocation(line: 272, column: 20, scope: !17284)
!17294 = !DILocation(line: 272, column: 19, scope: !17284)
!17295 = !DILocation(line: 272, column: 30, scope: !17284)
!17296 = !DILocation(line: 273, column: 18, scope: !17284)
!17297 = !DILocation(line: 273, column: 27, scope: !17284)
!17298 = !DILocation(line: 273, column: 37, scope: !17284)
!17299 = !DILocation(line: 271, column: 10, scope: !17284)
!17300 = !DILocation(line: 271, column: 3, scope: !17284)
!17301 = distinct !DISubprogram(name: "try_dir", scope: !1215, file: !1215, line: 277, type: !658, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1194, retainedNodes: !209)
!17302 = !DILocalVariable(name: "tmpl", arg: 1, scope: !17301, file: !1215, line: 277, type: !9)
!17303 = !DILocation(line: 277, column: 16, scope: !17301)
!17304 = !DILocalVariable(name: "flags", arg: 2, scope: !17301, file: !1215, line: 277, type: !53)
!17305 = !DILocation(line: 277, column: 28, scope: !17301)
!17306 = !DILocation(line: 279, column: 19, scope: !17301)
!17307 = !DILocation(line: 279, column: 10, scope: !17301)
!17308 = !DILocation(line: 279, column: 3, scope: !17301)
!17309 = distinct !DISubprogram(name: "try_nocreate", scope: !1215, file: !1215, line: 283, type: !658, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1194, retainedNodes: !209)
!17310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !271, line: 46, size: 1152, elements: !17311)
!17311 = !{!17312, !17313, !17314, !17315, !17316, !17317, !17318, !17319, !17320, !17321, !17322, !17323, !17328, !17329, !17330}
!17312 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !17310, file: !271, line: 48, baseType: !274, size: 64)
!17313 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !17310, file: !271, line: 53, baseType: !276, size: 64, offset: 64)
!17314 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !17310, file: !271, line: 61, baseType: !278, size: 64, offset: 128)
!17315 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !17310, file: !271, line: 62, baseType: !140, size: 32, offset: 192)
!17316 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !17310, file: !271, line: 64, baseType: !128, size: 32, offset: 224)
!17317 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !17310, file: !271, line: 65, baseType: !130, size: 32, offset: 256)
!17318 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !17310, file: !271, line: 67, baseType: !7, size: 32, offset: 288)
!17319 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !17310, file: !271, line: 69, baseType: !274, size: 64, offset: 320)
!17320 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !17310, file: !271, line: 74, baseType: !29, size: 64, offset: 384)
!17321 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !17310, file: !271, line: 78, baseType: !286, size: 64, offset: 448)
!17322 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !17310, file: !271, line: 80, baseType: !288, size: 64, offset: 512)
!17323 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !17310, file: !271, line: 91, baseType: !17324, size: 128, offset: 576)
!17324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !291, line: 9, size: 128, elements: !17325)
!17325 = !{!17326, !17327}
!17326 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !17324, file: !291, line: 11, baseType: !294, size: 64)
!17327 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !17324, file: !291, line: 12, baseType: !296, size: 64, offset: 64)
!17328 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !17310, file: !271, line: 92, baseType: !17324, size: 128, offset: 704)
!17329 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !17310, file: !271, line: 93, baseType: !17324, size: 128, offset: 832)
!17330 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !17310, file: !271, line: 106, baseType: !300, size: 192, offset: 960)
!17331 = !DILocalVariable(name: "tmpl", arg: 1, scope: !17309, file: !1215, line: 283, type: !9)
!17332 = !DILocation(line: 283, column: 21, scope: !17309)
!17333 = !DILocalVariable(name: "flags", arg: 2, scope: !17309, file: !1215, line: 283, type: !53)
!17334 = !DILocation(line: 283, column: 33, scope: !17309)
!17335 = !DILocalVariable(name: "st", scope: !17309, file: !1215, line: 285, type: !17310)
!17336 = !DILocation(line: 285, column: 17, scope: !17309)
!17337 = !DILocation(line: 287, column: 7, scope: !17338)
!17338 = distinct !DILexicalBlock(scope: !17309, file: !1215, line: 287, column: 7)
!17339 = !DILocation(line: 287, column: 41, scope: !17338)
!17340 = !DILocation(line: 287, column: 46, scope: !17338)
!17341 = !DILocation(line: 287, column: 49, scope: !17338)
!17342 = !DILocation(line: 287, column: 55, scope: !17338)
!17343 = !DILocation(line: 287, column: 7, scope: !17309)
!17344 = !DILocation(line: 288, column: 5, scope: !17338)
!17345 = !DILocation(line: 289, column: 10, scope: !17309)
!17346 = !DILocation(line: 289, column: 16, scope: !17309)
!17347 = !DILocation(line: 289, column: 3, scope: !17309)
!17348 = distinct !DISubprogram(name: "gen_tempname", scope: !1215, file: !1215, line: 334, type: !1208, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1194, retainedNodes: !209)
!17349 = !DILocalVariable(name: "tmpl", arg: 1, scope: !17348, file: !1215, line: 334, type: !9)
!17350 = !DILocation(line: 334, column: 23, scope: !17348)
!17351 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !17348, file: !1215, line: 334, type: !7)
!17352 = !DILocation(line: 334, column: 33, scope: !17348)
!17353 = !DILocalVariable(name: "flags", arg: 3, scope: !17348, file: !1215, line: 334, type: !7)
!17354 = !DILocation(line: 334, column: 48, scope: !17348)
!17355 = !DILocalVariable(name: "kind", arg: 4, scope: !17348, file: !1215, line: 334, type: !7)
!17356 = !DILocation(line: 334, column: 59, scope: !17348)
!17357 = !DILocation(line: 336, column: 28, scope: !17348)
!17358 = !DILocation(line: 336, column: 34, scope: !17348)
!17359 = !DILocation(line: 336, column: 45, scope: !17348)
!17360 = !DILocation(line: 336, column: 52, scope: !17348)
!17361 = !DILocation(line: 336, column: 10, scope: !17348)
!17362 = !DILocation(line: 336, column: 3, scope: !17348)
!17363 = distinct !DISubprogram(name: "try_tempname", scope: !1215, file: !1215, line: 340, type: !1210, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1194, retainedNodes: !209)
!17364 = !DILocalVariable(name: "tmpl", arg: 1, scope: !17363, file: !1215, line: 340, type: !9)
!17365 = !DILocation(line: 340, column: 23, scope: !17363)
!17366 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !17363, file: !1215, line: 340, type: !7)
!17367 = !DILocation(line: 340, column: 33, scope: !17363)
!17368 = !DILocalVariable(name: "args", arg: 3, scope: !17363, file: !1215, line: 340, type: !53)
!17369 = !DILocation(line: 340, column: 50, scope: !17363)
!17370 = !DILocalVariable(name: "tryfunc", arg: 4, scope: !17363, file: !1215, line: 341, type: !1199)
!17371 = !DILocation(line: 341, column: 23, scope: !17363)
!17372 = !DILocation(line: 343, column: 28, scope: !17363)
!17373 = !DILocation(line: 343, column: 34, scope: !17363)
!17374 = !DILocation(line: 343, column: 45, scope: !17363)
!17375 = !DILocation(line: 343, column: 51, scope: !17363)
!17376 = !DILocation(line: 343, column: 10, scope: !17363)
!17377 = !DILocation(line: 343, column: 3, scope: !17363)
!17378 = distinct !DISubprogram(name: "fd_safer", scope: !17379, file: !17379, line: 37, type: !1789, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1927, retainedNodes: !209)
!17379 = !DIFile(filename: "lib/fd-safer.c", directory: "/home/mbarbar/clone/coreutils")
!17380 = !DILocalVariable(name: "fd", arg: 1, scope: !17378, file: !17379, line: 37, type: !7)
!17381 = !DILocation(line: 37, column: 15, scope: !17378)
!17382 = !DILocation(line: 39, column: 23, scope: !17383)
!17383 = distinct !DILexicalBlock(scope: !17378, file: !17379, line: 39, column: 7)
!17384 = !DILocation(line: 39, column: 20, scope: !17383)
!17385 = !DILocation(line: 39, column: 26, scope: !17383)
!17386 = !DILocation(line: 39, column: 29, scope: !17383)
!17387 = !DILocation(line: 39, column: 32, scope: !17383)
!17388 = !DILocation(line: 39, column: 7, scope: !17378)
!17389 = !DILocalVariable(name: "f", scope: !17390, file: !17379, line: 41, type: !7)
!17390 = distinct !DILexicalBlock(scope: !17383, file: !17379, line: 40, column: 5)
!17391 = !DILocation(line: 41, column: 11, scope: !17390)
!17392 = !DILocation(line: 41, column: 26, scope: !17390)
!17393 = !DILocation(line: 41, column: 15, scope: !17390)
!17394 = !DILocalVariable(name: "e", scope: !17390, file: !17379, line: 42, type: !7)
!17395 = !DILocation(line: 42, column: 11, scope: !17390)
!17396 = !DILocation(line: 42, column: 15, scope: !17390)
!17397 = !DILocation(line: 43, column: 14, scope: !17390)
!17398 = !DILocation(line: 43, column: 7, scope: !17390)
!17399 = !DILocation(line: 44, column: 15, scope: !17390)
!17400 = !DILocation(line: 44, column: 7, scope: !17390)
!17401 = !DILocation(line: 44, column: 13, scope: !17390)
!17402 = !DILocation(line: 45, column: 12, scope: !17390)
!17403 = !DILocation(line: 45, column: 10, scope: !17390)
!17404 = !DILocation(line: 46, column: 5, scope: !17390)
!17405 = !DILocation(line: 48, column: 10, scope: !17378)
!17406 = !DILocation(line: 48, column: 3, scope: !17378)
!17407 = distinct !DISubprogram(name: "utimecmp", scope: !1219, file: !1219, line: 123, type: !1248, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1245, retainedNodes: !209)
!17408 = !DILocalVariable(name: "dst_name", arg: 1, scope: !17407, file: !1219, line: 123, type: !180)
!17409 = !DILocation(line: 123, column: 23, scope: !17407)
!17410 = !DILocalVariable(name: "dst_stat", arg: 2, scope: !17407, file: !1219, line: 124, type: !1222)
!17411 = !DILocation(line: 124, column: 30, scope: !17407)
!17412 = !DILocalVariable(name: "src_stat", arg: 3, scope: !17407, file: !1219, line: 125, type: !1222)
!17413 = !DILocation(line: 125, column: 30, scope: !17407)
!17414 = !DILocalVariable(name: "options", arg: 4, scope: !17407, file: !1219, line: 126, type: !7)
!17415 = !DILocation(line: 126, column: 15, scope: !17407)
!17416 = !DILocation(line: 128, column: 32, scope: !17407)
!17417 = !DILocation(line: 128, column: 42, scope: !17407)
!17418 = !DILocation(line: 128, column: 52, scope: !17407)
!17419 = !DILocation(line: 128, column: 62, scope: !17407)
!17420 = !DILocation(line: 128, column: 10, scope: !17407)
!17421 = !DILocation(line: 128, column: 3, scope: !17407)
!17422 = !DILocalVariable(name: "dfd", arg: 1, scope: !1218, file: !1219, line: 132, type: !7)
!17423 = !DILocation(line: 132, column: 17, scope: !1218)
!17424 = !DILocalVariable(name: "dst_name", arg: 2, scope: !1218, file: !1219, line: 132, type: !180)
!17425 = !DILocation(line: 132, column: 34, scope: !1218)
!17426 = !DILocalVariable(name: "dst_stat", arg: 3, scope: !1218, file: !1219, line: 133, type: !1222)
!17427 = !DILocation(line: 133, column: 32, scope: !1218)
!17428 = !DILocalVariable(name: "src_stat", arg: 4, scope: !1218, file: !1219, line: 134, type: !1222)
!17429 = !DILocation(line: 134, column: 32, scope: !1218)
!17430 = !DILocalVariable(name: "options", arg: 5, scope: !1218, file: !1219, line: 135, type: !7)
!17431 = !DILocation(line: 135, column: 17, scope: !1218)
!17432 = !DILocalVariable(name: "dst_s", scope: !1218, file: !1219, line: 153, type: !1250)
!17433 = !DILocation(line: 153, column: 10, scope: !1218)
!17434 = !DILocation(line: 153, column: 18, scope: !1218)
!17435 = !DILocation(line: 153, column: 28, scope: !1218)
!17436 = !{!2915, !2916, i64 88}
!17437 = !DILocalVariable(name: "src_s", scope: !1218, file: !1219, line: 154, type: !1250)
!17438 = !DILocation(line: 154, column: 10, scope: !1218)
!17439 = !DILocation(line: 154, column: 18, scope: !1218)
!17440 = !DILocation(line: 154, column: 28, scope: !1218)
!17441 = !DILocalVariable(name: "dst_ns", scope: !1218, file: !1219, line: 155, type: !7)
!17442 = !DILocation(line: 155, column: 7, scope: !1218)
!17443 = !DILocation(line: 155, column: 35, scope: !1218)
!17444 = !DILocation(line: 155, column: 16, scope: !1218)
!17445 = !DILocalVariable(name: "src_ns", scope: !1218, file: !1219, line: 156, type: !7)
!17446 = !DILocation(line: 156, column: 7, scope: !1218)
!17447 = !DILocation(line: 156, column: 35, scope: !1218)
!17448 = !DILocation(line: 156, column: 16, scope: !1218)
!17449 = !DILocation(line: 158, column: 7, scope: !17450)
!17450 = distinct !DILexicalBlock(scope: !1218, file: !1219, line: 158, column: 7)
!17451 = !DILocation(line: 158, column: 15, scope: !17450)
!17452 = !DILocation(line: 158, column: 7, scope: !1218)
!17453 = !DILocalVariable(name: "dst_res", scope: !17454, file: !1219, line: 167, type: !1252)
!17454 = distinct !DILexicalBlock(scope: !17450, file: !1219, line: 159, column: 5)
!17455 = !DILocation(line: 167, column: 22, scope: !17454)
!17456 = !DILocalVariable(name: "tmp_dst_res", scope: !17454, file: !1219, line: 168, type: !1253)
!17457 = !DILocation(line: 168, column: 21, scope: !17454)
!17458 = !DILocalVariable(name: "res", scope: !17454, file: !1219, line: 171, type: !7)
!17459 = !DILocation(line: 171, column: 11, scope: !17454)
!17460 = !DILocation(line: 176, column: 11, scope: !17461)
!17461 = distinct !DILexicalBlock(scope: !17454, file: !1219, line: 176, column: 11)
!17462 = !DILocation(line: 176, column: 20, scope: !17461)
!17463 = !DILocation(line: 176, column: 17, scope: !17461)
!17464 = !DILocation(line: 176, column: 26, scope: !17461)
!17465 = !DILocation(line: 176, column: 29, scope: !17461)
!17466 = !DILocation(line: 176, column: 39, scope: !17461)
!17467 = !DILocation(line: 176, column: 36, scope: !17461)
!17468 = !DILocation(line: 176, column: 11, scope: !17454)
!17469 = !DILocation(line: 177, column: 9, scope: !17461)
!17470 = !DILocation(line: 178, column: 11, scope: !17471)
!17471 = distinct !DILexicalBlock(scope: !17454, file: !1219, line: 178, column: 11)
!17472 = !DILocation(line: 178, column: 20, scope: !17471)
!17473 = !DILocation(line: 178, column: 26, scope: !17471)
!17474 = !DILocation(line: 178, column: 17, scope: !17471)
!17475 = !DILocation(line: 178, column: 11, scope: !17454)
!17476 = !DILocation(line: 179, column: 9, scope: !17471)
!17477 = !DILocation(line: 180, column: 11, scope: !17478)
!17478 = distinct !DILexicalBlock(scope: !17454, file: !1219, line: 180, column: 11)
!17479 = !DILocation(line: 180, column: 20, scope: !17478)
!17480 = !DILocation(line: 180, column: 26, scope: !17478)
!17481 = !DILocation(line: 180, column: 17, scope: !17478)
!17482 = !DILocation(line: 180, column: 11, scope: !17454)
!17483 = !DILocation(line: 181, column: 9, scope: !17478)
!17484 = !DILocation(line: 185, column: 13, scope: !17485)
!17485 = distinct !DILexicalBlock(scope: !17454, file: !1219, line: 185, column: 11)
!17486 = !DILocation(line: 185, column: 11, scope: !17454)
!17487 = !DILocation(line: 186, column: 14, scope: !17485)
!17488 = !DILocation(line: 186, column: 12, scope: !17485)
!17489 = !DILocation(line: 186, column: 9, scope: !17485)
!17490 = !DILocation(line: 187, column: 11, scope: !17491)
!17491 = distinct !DILexicalBlock(scope: !17454, file: !1219, line: 187, column: 11)
!17492 = !DILocation(line: 187, column: 11, scope: !17454)
!17493 = !DILocation(line: 189, column: 17, scope: !17494)
!17494 = distinct !DILexicalBlock(scope: !17495, file: !1219, line: 189, column: 15)
!17495 = distinct !DILexicalBlock(scope: !17491, file: !1219, line: 188, column: 9)
!17496 = !DILocation(line: 189, column: 15, scope: !17495)
!17497 = !DILocation(line: 191, column: 29, scope: !17498)
!17498 = distinct !DILexicalBlock(scope: !17494, file: !1219, line: 190, column: 13)
!17499 = !DILocation(line: 191, column: 27, scope: !17498)
!17500 = !DILocation(line: 192, column: 20, scope: !17501)
!17501 = distinct !DILexicalBlock(scope: !17498, file: !1219, line: 192, column: 19)
!17502 = !DILocation(line: 192, column: 19, scope: !17498)
!17503 = !DILocation(line: 193, column: 17, scope: !17501)
!17504 = !DILocation(line: 194, column: 15, scope: !17498)
!17505 = !DILocation(line: 194, column: 28, scope: !17498)
!17506 = !DILocation(line: 194, column: 39, scope: !17498)
!17507 = !{!17508, !2636, i64 8}
!17508 = !{!"fs_res", !2916, i64 0, !2636, i64 8, !2743, i64 12}
!17509 = !DILocation(line: 195, column: 15, scope: !17498)
!17510 = !DILocation(line: 195, column: 28, scope: !17498)
!17511 = !DILocation(line: 195, column: 34, scope: !17498)
!17512 = !{!17508, !2743, i64 12}
!17513 = !DILocation(line: 196, column: 13, scope: !17498)
!17514 = !DILocation(line: 197, column: 30, scope: !17495)
!17515 = !DILocation(line: 197, column: 40, scope: !17495)
!17516 = !DILocation(line: 197, column: 11, scope: !17495)
!17517 = !DILocation(line: 197, column: 24, scope: !17495)
!17518 = !DILocation(line: 197, column: 28, scope: !17495)
!17519 = !{!17508, !2916, i64 0}
!17520 = !DILocation(line: 198, column: 34, scope: !17495)
!17521 = !DILocation(line: 198, column: 38, scope: !17495)
!17522 = !DILocation(line: 198, column: 21, scope: !17495)
!17523 = !DILocation(line: 198, column: 19, scope: !17495)
!17524 = !DILocation(line: 199, column: 17, scope: !17525)
!17525 = distinct !DILexicalBlock(scope: !17495, file: !1219, line: 199, column: 15)
!17526 = !DILocation(line: 199, column: 15, scope: !17495)
!17527 = !DILocation(line: 200, column: 13, scope: !17525)
!17528 = !DILocation(line: 202, column: 15, scope: !17529)
!17529 = distinct !DILexicalBlock(scope: !17495, file: !1219, line: 202, column: 15)
!17530 = !DILocation(line: 202, column: 26, scope: !17529)
!17531 = !DILocation(line: 202, column: 23, scope: !17529)
!17532 = !DILocation(line: 202, column: 15, scope: !17495)
!17533 = !DILocation(line: 206, column: 27, scope: !17534)
!17534 = distinct !DILexicalBlock(scope: !17529, file: !1219, line: 203, column: 13)
!17535 = !DILocation(line: 207, column: 13, scope: !17534)
!17536 = !DILocation(line: 208, column: 9, scope: !17495)
!17537 = !DILocation(line: 210, column: 9, scope: !17491)
!17538 = !DILabel(scope: !17539, name: "low_memory", file: !1219, line: 211)
!17539 = distinct !DILexicalBlock(scope: !17491, file: !1219, line: 210, column: 9)
!17540 = !DILocation(line: 211, column: 9, scope: !17539)
!17541 = !DILocation(line: 212, column: 15, scope: !17542)
!17542 = distinct !DILexicalBlock(scope: !17539, file: !1219, line: 212, column: 15)
!17543 = !DILocation(line: 212, column: 15, scope: !17539)
!17544 = !DILocation(line: 214, column: 33, scope: !17545)
!17545 = distinct !DILexicalBlock(scope: !17542, file: !1219, line: 213, column: 13)
!17546 = !DILocation(line: 214, column: 43, scope: !17545)
!17547 = !DILocation(line: 214, column: 27, scope: !17545)
!17548 = !DILocation(line: 214, column: 31, scope: !17545)
!17549 = !DILocation(line: 215, column: 38, scope: !17545)
!17550 = !DILocation(line: 215, column: 42, scope: !17545)
!17551 = !DILocation(line: 215, column: 25, scope: !17545)
!17552 = !DILocation(line: 215, column: 23, scope: !17545)
!17553 = !DILocation(line: 216, column: 13, scope: !17545)
!17554 = !DILocation(line: 217, column: 16, scope: !17555)
!17555 = distinct !DILexicalBlock(scope: !17539, file: !1219, line: 217, column: 15)
!17556 = !DILocation(line: 217, column: 15, scope: !17539)
!17557 = !DILocation(line: 219, column: 23, scope: !17558)
!17558 = distinct !DILexicalBlock(scope: !17555, file: !1219, line: 218, column: 13)
!17559 = !DILocation(line: 220, column: 15, scope: !17558)
!17560 = !DILocation(line: 220, column: 24, scope: !17558)
!17561 = !DILocation(line: 220, column: 35, scope: !17558)
!17562 = !DILocation(line: 221, column: 15, scope: !17558)
!17563 = !DILocation(line: 221, column: 24, scope: !17558)
!17564 = !DILocation(line: 221, column: 30, scope: !17558)
!17565 = !DILocation(line: 222, column: 13, scope: !17558)
!17566 = !DILocation(line: 225, column: 13, scope: !17454)
!17567 = !DILocation(line: 225, column: 22, scope: !17454)
!17568 = !DILocation(line: 225, column: 11, scope: !17454)
!17569 = !DILocation(line: 257, column: 13, scope: !17570)
!17570 = distinct !DILexicalBlock(scope: !17454, file: !1219, line: 257, column: 11)
!17571 = !DILocation(line: 257, column: 22, scope: !17570)
!17572 = !DILocation(line: 257, column: 11, scope: !17454)
!17573 = !DILocalVariable(name: "dst_a_s", scope: !17574, file: !1219, line: 262, type: !1250)
!17574 = distinct !DILexicalBlock(scope: !17570, file: !1219, line: 258, column: 9)
!17575 = !DILocation(line: 262, column: 18, scope: !17574)
!17576 = !DILocation(line: 262, column: 28, scope: !17574)
!17577 = !DILocation(line: 262, column: 38, scope: !17574)
!17578 = !{!2915, !2916, i64 72}
!17579 = !DILocalVariable(name: "dst_c_s", scope: !17574, file: !1219, line: 263, type: !1250)
!17580 = !DILocation(line: 263, column: 18, scope: !17574)
!17581 = !DILocation(line: 263, column: 28, scope: !17574)
!17582 = !DILocation(line: 263, column: 38, scope: !17574)
!17583 = !{!2915, !2916, i64 104}
!17584 = !DILocalVariable(name: "dst_m_s", scope: !17574, file: !1219, line: 264, type: !1250)
!17585 = !DILocation(line: 264, column: 18, scope: !17574)
!17586 = !DILocation(line: 264, column: 28, scope: !17574)
!17587 = !DILocalVariable(name: "dst_a_ns", scope: !17574, file: !1219, line: 265, type: !7)
!17588 = !DILocation(line: 265, column: 15, scope: !17574)
!17589 = !DILocation(line: 265, column: 45, scope: !17574)
!17590 = !DILocation(line: 265, column: 26, scope: !17574)
!17591 = !DILocalVariable(name: "dst_c_ns", scope: !17574, file: !1219, line: 266, type: !7)
!17592 = !DILocation(line: 266, column: 15, scope: !17574)
!17593 = !DILocation(line: 266, column: 45, scope: !17574)
!17594 = !DILocation(line: 266, column: 26, scope: !17574)
!17595 = !DILocalVariable(name: "dst_m_ns", scope: !17574, file: !1219, line: 267, type: !7)
!17596 = !DILocation(line: 267, column: 15, scope: !17574)
!17597 = !DILocation(line: 267, column: 26, scope: !17574)
!17598 = !DILocalVariable(name: "odd_second", scope: !17599, file: !1219, line: 276, type: !142)
!17599 = distinct !DILexicalBlock(scope: !17574, file: !1219, line: 275, column: 11)
!17600 = !DILocation(line: 276, column: 18, scope: !17599)
!17601 = !DILocation(line: 276, column: 32, scope: !17599)
!17602 = !DILocation(line: 276, column: 42, scope: !17599)
!17603 = !DILocation(line: 276, column: 40, scope: !17599)
!17604 = !DILocation(line: 276, column: 52, scope: !17599)
!17605 = !DILocation(line: 276, column: 50, scope: !17599)
!17606 = !DILocation(line: 276, column: 61, scope: !17599)
!17607 = !DILocation(line: 276, column: 31, scope: !17599)
!17608 = !DILocalVariable(name: "a", scope: !17609, file: !1219, line: 285, type: !7)
!17609 = distinct !DILexicalBlock(scope: !17610, file: !1219, line: 284, column: 15)
!17610 = distinct !DILexicalBlock(scope: !17599, file: !1219, line: 278, column: 17)
!17611 = !DILocation(line: 285, column: 21, scope: !17609)
!17612 = !DILocation(line: 285, column: 25, scope: !17609)
!17613 = !DILocalVariable(name: "c", scope: !17609, file: !1219, line: 286, type: !7)
!17614 = !DILocation(line: 286, column: 21, scope: !17609)
!17615 = !DILocation(line: 286, column: 25, scope: !17609)
!17616 = !DILocalVariable(name: "m", scope: !17609, file: !1219, line: 287, type: !7)
!17617 = !DILocation(line: 287, column: 21, scope: !17609)
!17618 = !DILocation(line: 287, column: 25, scope: !17609)
!17619 = !DILocalVariable(name: "SR10", scope: !17609, file: !1219, line: 291, type: !7)
!17620 = !DILocation(line: 291, column: 21, scope: !17609)
!17621 = !DILocation(line: 291, column: 54, scope: !17609)
!17622 = !DILocation(line: 293, column: 22, scope: !17623)
!17623 = distinct !DILexicalBlock(scope: !17609, file: !1219, line: 293, column: 21)
!17624 = !DILocation(line: 293, column: 26, scope: !17623)
!17625 = !DILocation(line: 293, column: 24, scope: !17623)
!17626 = !DILocation(line: 293, column: 33, scope: !17623)
!17627 = !DILocation(line: 293, column: 37, scope: !17623)
!17628 = !DILocation(line: 293, column: 35, scope: !17623)
!17629 = !DILocation(line: 293, column: 31, scope: !17623)
!17630 = !DILocation(line: 293, column: 44, scope: !17623)
!17631 = !DILocation(line: 293, column: 48, scope: !17623)
!17632 = !DILocation(line: 293, column: 46, scope: !17623)
!17633 = !DILocation(line: 293, column: 42, scope: !17623)
!17634 = !DILocation(line: 293, column: 54, scope: !17623)
!17635 = !DILocation(line: 293, column: 21, scope: !17609)
!17636 = !DILocation(line: 294, column: 23, scope: !17623)
!17637 = !DILocation(line: 294, column: 19, scope: !17623)
!17638 = !DILocation(line: 296, column: 30, scope: !17639)
!17639 = distinct !DILexicalBlock(scope: !17623, file: !1219, line: 296, column: 19)
!17640 = !DILocation(line: 296, column: 28, scope: !17639)
!17641 = !DILocation(line: 296, column: 41, scope: !17639)
!17642 = !DILocation(line: 296, column: 38, scope: !17639)
!17643 = !DILocation(line: 296, column: 52, scope: !17639)
!17644 = !DILocation(line: 296, column: 49, scope: !17639)
!17645 = !DILocation(line: 296, column: 63, scope: !17639)
!17646 = !DILocation(line: 296, column: 60, scope: !17639)
!17647 = !DILocation(line: 296, column: 24, scope: !17639)
!17648 = !DILocation(line: 297, column: 25, scope: !17649)
!17649 = distinct !DILexicalBlock(scope: !17639, file: !1219, line: 296, column: 19)
!17650 = !DILocation(line: 297, column: 31, scope: !17649)
!17651 = !DILocation(line: 297, column: 40, scope: !17649)
!17652 = !DILocation(line: 297, column: 29, scope: !17649)
!17653 = !DILocation(line: 298, column: 25, scope: !17649)
!17654 = !DILocation(line: 298, column: 29, scope: !17649)
!17655 = !DILocation(line: 298, column: 31, scope: !17649)
!17656 = !DILocation(line: 298, column: 38, scope: !17649)
!17657 = !DILocation(line: 298, column: 40, scope: !17649)
!17658 = !DILocation(line: 298, column: 36, scope: !17649)
!17659 = !DILocation(line: 298, column: 47, scope: !17649)
!17660 = !DILocation(line: 298, column: 49, scope: !17649)
!17661 = !DILocation(line: 298, column: 45, scope: !17649)
!17662 = !DILocation(line: 298, column: 55, scope: !17649)
!17663 = !DILocation(line: 0, scope: !17649)
!17664 = !DILocation(line: 296, column: 19, scope: !17639)
!17665 = !DILocation(line: 300, column: 25, scope: !17666)
!17666 = distinct !DILexicalBlock(scope: !17649, file: !1219, line: 300, column: 25)
!17667 = !DILocation(line: 300, column: 29, scope: !17666)
!17668 = !DILocation(line: 300, column: 25, scope: !17649)
!17669 = !DILocation(line: 302, column: 31, scope: !17670)
!17670 = distinct !DILexicalBlock(scope: !17671, file: !1219, line: 302, column: 29)
!17671 = distinct !DILexicalBlock(scope: !17666, file: !1219, line: 301, column: 23)
!17672 = !DILocation(line: 302, column: 29, scope: !17671)
!17673 = !DILocation(line: 303, column: 31, scope: !17670)
!17674 = !DILocation(line: 303, column: 27, scope: !17670)
!17675 = !DILocation(line: 304, column: 25, scope: !17671)
!17676 = !DILocation(line: 300, column: 32, scope: !17666)
!17677 = !DILocation(line: 299, column: 28, scope: !17649)
!17678 = !DILocation(line: 299, column: 37, scope: !17649)
!17679 = !DILocation(line: 299, column: 46, scope: !17649)
!17680 = !DILocation(line: 299, column: 55, scope: !17649)
!17681 = !DILocation(line: 296, column: 19, scope: !17649)
!17682 = distinct !{!17682, !17664, !17683}
!17683 = !DILocation(line: 305, column: 23, scope: !17639)
!17684 = !DILocation(line: 308, column: 35, scope: !17599)
!17685 = !DILocation(line: 308, column: 13, scope: !17599)
!17686 = !DILocation(line: 308, column: 22, scope: !17599)
!17687 = !DILocation(line: 308, column: 33, scope: !17599)
!17688 = !DILocation(line: 311, column: 36, scope: !17689)
!17689 = distinct !DILexicalBlock(scope: !17574, file: !1219, line: 311, column: 15)
!17690 = !DILocation(line: 311, column: 34, scope: !17689)
!17691 = !DILocation(line: 311, column: 15, scope: !17574)
!17692 = !DILocalVariable(name: "timespec", scope: !17693, file: !1219, line: 313, type: !1258)
!17693 = distinct !DILexicalBlock(scope: !17689, file: !1219, line: 312, column: 13)
!17694 = !DILocation(line: 313, column: 31, scope: !17693)
!17695 = !DILocalVariable(name: "dst_status", scope: !17693, file: !1219, line: 314, type: !1224)
!17696 = !DILocation(line: 314, column: 27, scope: !17693)
!17697 = !DILocation(line: 318, column: 25, scope: !17693)
!17698 = !DILocation(line: 318, column: 32, scope: !17693)
!17699 = !DILocation(line: 318, column: 22, scope: !17693)
!17700 = !DILocalVariable(name: "s", scope: !17701, file: !1219, line: 324, type: !1250)
!17701 = distinct !DILexicalBlock(scope: !17693, file: !1219, line: 323, column: 15)
!17702 = !DILocation(line: 324, column: 24, scope: !17701)
!17703 = !DILocation(line: 324, column: 28, scope: !17701)
!17704 = !DILocation(line: 324, column: 39, scope: !17701)
!17705 = !DILocation(line: 324, column: 43, scope: !17701)
!17706 = !DILocation(line: 324, column: 36, scope: !17701)
!17707 = !DILocation(line: 324, column: 34, scope: !17701)
!17708 = !DILocation(line: 325, column: 21, scope: !17709)
!17709 = distinct !DILexicalBlock(scope: !17701, file: !1219, line: 325, column: 21)
!17710 = !DILocation(line: 325, column: 29, scope: !17709)
!17711 = !DILocation(line: 325, column: 27, scope: !17709)
!17712 = !DILocation(line: 325, column: 35, scope: !17709)
!17713 = !DILocation(line: 325, column: 39, scope: !17709)
!17714 = !DILocation(line: 325, column: 48, scope: !17709)
!17715 = !DILocation(line: 325, column: 45, scope: !17709)
!17716 = !DILocation(line: 325, column: 54, scope: !17709)
!17717 = !DILocation(line: 325, column: 57, scope: !17709)
!17718 = !DILocation(line: 325, column: 67, scope: !17709)
!17719 = !DILocation(line: 325, column: 64, scope: !17709)
!17720 = !DILocation(line: 325, column: 21, scope: !17701)
!17721 = !DILocation(line: 326, column: 19, scope: !17709)
!17722 = !DILocation(line: 327, column: 21, scope: !17723)
!17723 = distinct !DILexicalBlock(scope: !17701, file: !1219, line: 327, column: 21)
!17724 = !DILocation(line: 327, column: 29, scope: !17723)
!17725 = !DILocation(line: 327, column: 27, scope: !17723)
!17726 = !DILocation(line: 328, column: 21, scope: !17723)
!17727 = !DILocation(line: 328, column: 25, scope: !17723)
!17728 = !DILocation(line: 328, column: 34, scope: !17723)
!17729 = !DILocation(line: 328, column: 31, scope: !17723)
!17730 = !DILocation(line: 328, column: 36, scope: !17723)
!17731 = !DILocation(line: 328, column: 39, scope: !17723)
!17732 = !DILocation(line: 328, column: 48, scope: !17723)
!17733 = !DILocation(line: 328, column: 57, scope: !17723)
!17734 = !DILocation(line: 328, column: 66, scope: !17723)
!17735 = !DILocation(line: 328, column: 64, scope: !17723)
!17736 = !DILocation(line: 328, column: 55, scope: !17723)
!17737 = !DILocation(line: 328, column: 46, scope: !17723)
!17738 = !DILocation(line: 327, column: 21, scope: !17701)
!17739 = !DILocation(line: 329, column: 19, scope: !17723)
!17740 = !DILocation(line: 338, column: 36, scope: !17693)
!17741 = !DILocation(line: 338, column: 15, scope: !17693)
!17742 = !DILocation(line: 338, column: 27, scope: !17693)
!17743 = !DILocation(line: 338, column: 34, scope: !17693)
!17744 = !DILocation(line: 339, column: 37, scope: !17693)
!17745 = !DILocation(line: 339, column: 15, scope: !17693)
!17746 = !DILocation(line: 339, column: 27, scope: !17693)
!17747 = !DILocation(line: 339, column: 35, scope: !17693)
!17748 = !DILocation(line: 340, column: 36, scope: !17693)
!17749 = !DILocation(line: 340, column: 47, scope: !17693)
!17750 = !DILocation(line: 340, column: 51, scope: !17693)
!17751 = !DILocation(line: 340, column: 46, scope: !17693)
!17752 = !DILocation(line: 340, column: 44, scope: !17693)
!17753 = !DILocation(line: 340, column: 15, scope: !17693)
!17754 = !DILocation(line: 340, column: 27, scope: !17693)
!17755 = !DILocation(line: 340, column: 34, scope: !17693)
!17756 = !DILocation(line: 341, column: 37, scope: !17693)
!17757 = !DILocation(line: 341, column: 48, scope: !17693)
!17758 = !DILocation(line: 341, column: 52, scope: !17693)
!17759 = !DILocation(line: 341, column: 46, scope: !17693)
!17760 = !DILocation(line: 341, column: 15, scope: !17693)
!17761 = !DILocation(line: 341, column: 27, scope: !17693)
!17762 = !DILocation(line: 341, column: 35, scope: !17693)
!17763 = !DILocation(line: 343, column: 30, scope: !17764)
!17764 = distinct !DILexicalBlock(scope: !17693, file: !1219, line: 343, column: 19)
!17765 = !DILocation(line: 343, column: 35, scope: !17764)
!17766 = !DILocation(line: 343, column: 45, scope: !17764)
!17767 = !DILocation(line: 343, column: 19, scope: !17764)
!17768 = !DILocation(line: 343, column: 19, scope: !17693)
!17769 = !DILocation(line: 344, column: 17, scope: !17764)
!17770 = !DILocalVariable(name: "stat_result", scope: !17771, file: !1219, line: 348, type: !7)
!17771 = distinct !DILexicalBlock(scope: !17693, file: !1219, line: 347, column: 15)
!17772 = !DILocation(line: 348, column: 21, scope: !17771)
!17773 = !DILocation(line: 349, column: 30, scope: !17771)
!17774 = !DILocation(line: 349, column: 35, scope: !17771)
!17775 = !DILocation(line: 349, column: 21, scope: !17771)
!17776 = !DILocation(line: 351, column: 21, scope: !17777)
!17777 = distinct !DILexicalBlock(scope: !17771, file: !1219, line: 351, column: 21)
!17778 = !DILocation(line: 352, column: 35, scope: !17777)
!17779 = !DILocation(line: 352, column: 46, scope: !17777)
!17780 = !DILocation(line: 352, column: 44, scope: !17777)
!17781 = !DILocation(line: 352, column: 21, scope: !17777)
!17782 = !DILocation(line: 353, column: 24, scope: !17777)
!17783 = !DILocation(line: 353, column: 58, scope: !17777)
!17784 = !DILocation(line: 353, column: 56, scope: !17777)
!17785 = !DILocation(line: 353, column: 21, scope: !17777)
!17786 = !DILocation(line: 351, column: 21, scope: !17771)
!17787 = !DILocation(line: 357, column: 42, scope: !17788)
!17788 = distinct !DILexicalBlock(scope: !17777, file: !1219, line: 354, column: 19)
!17789 = !DILocation(line: 357, column: 21, scope: !17788)
!17790 = !DILocation(line: 357, column: 33, scope: !17788)
!17791 = !DILocation(line: 357, column: 40, scope: !17788)
!17792 = !DILocation(line: 358, column: 43, scope: !17788)
!17793 = !DILocation(line: 358, column: 21, scope: !17788)
!17794 = !DILocation(line: 358, column: 33, scope: !17788)
!17795 = !DILocation(line: 358, column: 41, scope: !17788)
!17796 = !DILocation(line: 359, column: 32, scope: !17788)
!17797 = !DILocation(line: 359, column: 37, scope: !17788)
!17798 = !DILocation(line: 359, column: 47, scope: !17788)
!17799 = !DILocation(line: 359, column: 21, scope: !17788)
!17800 = !DILocation(line: 360, column: 19, scope: !17788)
!17801 = !DILocation(line: 362, column: 21, scope: !17802)
!17802 = distinct !DILexicalBlock(scope: !17771, file: !1219, line: 362, column: 21)
!17803 = !DILocation(line: 362, column: 33, scope: !17802)
!17804 = !DILocation(line: 362, column: 21, scope: !17771)
!17805 = !DILocation(line: 363, column: 19, scope: !17802)
!17806 = !DILocalVariable(name: "old_res", scope: !17807, file: !1219, line: 369, type: !7)
!17807 = distinct !DILexicalBlock(scope: !17693, file: !1219, line: 368, column: 15)
!17808 = !DILocation(line: 369, column: 21, scope: !17807)
!17809 = !DILocation(line: 369, column: 31, scope: !17807)
!17810 = !DILocalVariable(name: "a", scope: !17807, file: !1219, line: 370, type: !7)
!17811 = !DILocation(line: 370, column: 21, scope: !17807)
!17812 = !DILocation(line: 370, column: 48, scope: !17807)
!17813 = !DILocation(line: 370, column: 57, scope: !17807)
!17814 = !DILocation(line: 370, column: 34, scope: !17807)
!17815 = !DILocation(line: 371, column: 28, scope: !17807)
!17816 = !DILocation(line: 371, column: 26, scope: !17807)
!17817 = !DILocation(line: 370, column: 25, scope: !17807)
!17818 = !DILocation(line: 373, column: 21, scope: !17807)
!17819 = !DILocation(line: 375, column: 27, scope: !17820)
!17820 = distinct !DILexicalBlock(scope: !17807, file: !1219, line: 375, column: 17)
!17821 = !DILocation(line: 375, column: 24, scope: !17820)
!17822 = !DILocation(line: 375, column: 22, scope: !17820)
!17823 = !DILocation(line: 375, column: 32, scope: !17824)
!17824 = distinct !DILexicalBlock(scope: !17820, file: !1219, line: 375, column: 17)
!17825 = !DILocation(line: 375, column: 34, scope: !17824)
!17826 = !DILocation(line: 375, column: 39, scope: !17824)
!17827 = !DILocation(line: 375, column: 17, scope: !17820)
!17828 = !DILocation(line: 377, column: 25, scope: !17829)
!17829 = distinct !DILexicalBlock(scope: !17830, file: !1219, line: 377, column: 25)
!17830 = distinct !DILexicalBlock(scope: !17824, file: !1219, line: 376, column: 19)
!17831 = !DILocation(line: 377, column: 29, scope: !17829)
!17832 = !DILocation(line: 377, column: 25, scope: !17830)
!17833 = !DILocation(line: 379, column: 29, scope: !17834)
!17834 = distinct !DILexicalBlock(scope: !17829, file: !1219, line: 378, column: 23)
!17835 = !DILocation(line: 380, column: 25, scope: !17834)
!17836 = !DILocation(line: 382, column: 25, scope: !17830)
!17837 = !DILocation(line: 383, column: 25, scope: !17838)
!17838 = distinct !DILexicalBlock(scope: !17830, file: !1219, line: 383, column: 25)
!17839 = !DILocation(line: 383, column: 32, scope: !17838)
!17840 = !DILocation(line: 383, column: 29, scope: !17838)
!17841 = !DILocation(line: 383, column: 25, scope: !17830)
!17842 = !DILocation(line: 384, column: 23, scope: !17838)
!17843 = !DILocation(line: 385, column: 19, scope: !17830)
!17844 = !DILocation(line: 375, column: 47, scope: !17824)
!17845 = !DILocation(line: 375, column: 17, scope: !17824)
!17846 = distinct !{!17846, !17827, !17847}
!17847 = !DILocation(line: 385, column: 19, scope: !17820)
!17848 = !DILocation(line: 387, column: 13, scope: !17693)
!17849 = !DILocation(line: 389, column: 33, scope: !17574)
!17850 = !DILocation(line: 389, column: 11, scope: !17574)
!17851 = !DILocation(line: 389, column: 20, scope: !17574)
!17852 = !DILocation(line: 389, column: 31, scope: !17574)
!17853 = !DILocation(line: 390, column: 11, scope: !17574)
!17854 = !DILocation(line: 390, column: 20, scope: !17574)
!17855 = !DILocation(line: 390, column: 26, scope: !17574)
!17856 = !DILocation(line: 391, column: 9, scope: !17574)
!17857 = !DILocation(line: 394, column: 19, scope: !17454)
!17858 = !DILocation(line: 394, column: 23, scope: !17454)
!17859 = !DILocation(line: 394, column: 16, scope: !17454)
!17860 = !DILocation(line: 394, column: 13, scope: !17454)
!17861 = !DILocation(line: 395, column: 17, scope: !17454)
!17862 = !DILocation(line: 395, column: 26, scope: !17454)
!17863 = !DILocation(line: 395, column: 24, scope: !17454)
!17864 = !DILocation(line: 395, column: 14, scope: !17454)
!17865 = !DILocation(line: 396, column: 5, scope: !17454)
!17866 = !DILocation(line: 399, column: 11, scope: !1218)
!17867 = !DILocation(line: 399, column: 19, scope: !1218)
!17868 = !DILocation(line: 399, column: 17, scope: !1218)
!17869 = !DILocation(line: 400, column: 13, scope: !1218)
!17870 = !DILocation(line: 400, column: 21, scope: !1218)
!17871 = !DILocation(line: 400, column: 19, scope: !1218)
!17872 = !DILocation(line: 401, column: 13, scope: !1218)
!17873 = !DILocation(line: 401, column: 22, scope: !1218)
!17874 = !DILocation(line: 401, column: 20, scope: !1218)
!17875 = !DILocation(line: 402, column: 13, scope: !1218)
!17876 = !DILocation(line: 402, column: 22, scope: !1218)
!17877 = !DILocation(line: 402, column: 20, scope: !1218)
!17878 = !DILocation(line: 399, column: 3, scope: !1218)
!17879 = !DILocation(line: 403, column: 1, scope: !1218)
!17880 = distinct !DISubprogram(name: "dev_info_hash", scope: !1219, file: !1219, line: 85, type: !635, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1245, retainedNodes: !209)
!17881 = !DILocalVariable(name: "x", arg: 1, scope: !17880, file: !1219, line: 85, type: !515)
!17882 = !DILocation(line: 85, column: 28, scope: !17880)
!17883 = !DILocalVariable(name: "table_size", arg: 2, scope: !17880, file: !1219, line: 85, type: !55)
!17884 = !DILocation(line: 85, column: 38, scope: !17880)
!17885 = !DILocalVariable(name: "p", scope: !17880, file: !1219, line: 87, type: !1259)
!17886 = !DILocation(line: 87, column: 24, scope: !17880)
!17887 = !DILocation(line: 87, column: 28, scope: !17880)
!17888 = !DILocation(line: 96, column: 10, scope: !17880)
!17889 = !DILocation(line: 96, column: 13, scope: !17880)
!17890 = !DILocation(line: 96, column: 19, scope: !17880)
!17891 = !DILocation(line: 96, column: 17, scope: !17880)
!17892 = !DILocation(line: 96, column: 3, scope: !17880)
!17893 = distinct !DISubprogram(name: "dev_info_compare", scope: !1219, file: !1219, line: 101, type: !637, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1245, retainedNodes: !209)
!17894 = !DILocalVariable(name: "x", arg: 1, scope: !17893, file: !1219, line: 101, type: !515)
!17895 = !DILocation(line: 101, column: 31, scope: !17893)
!17896 = !DILocalVariable(name: "y", arg: 2, scope: !17893, file: !1219, line: 101, type: !515)
!17897 = !DILocation(line: 101, column: 46, scope: !17893)
!17898 = !DILocalVariable(name: "a", scope: !17893, file: !1219, line: 103, type: !1259)
!17899 = !DILocation(line: 103, column: 24, scope: !17893)
!17900 = !DILocation(line: 103, column: 28, scope: !17893)
!17901 = !DILocalVariable(name: "b", scope: !17893, file: !1219, line: 104, type: !1259)
!17902 = !DILocation(line: 104, column: 24, scope: !17893)
!17903 = !DILocation(line: 104, column: 28, scope: !17893)
!17904 = !DILocation(line: 105, column: 10, scope: !17893)
!17905 = !DILocation(line: 105, column: 13, scope: !17893)
!17906 = !DILocation(line: 105, column: 20, scope: !17893)
!17907 = !DILocation(line: 105, column: 23, scope: !17893)
!17908 = !DILocation(line: 105, column: 17, scope: !17893)
!17909 = !DILocation(line: 105, column: 3, scope: !17893)
!17910 = distinct !DISubprogram(name: "lutimensat", scope: !17911, file: !17911, line: 42, type: !1269, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1266, retainedNodes: !209)
!17911 = !DIFile(filename: "./lib/utimens.h", directory: "/home/mbarbar/clone/coreutils")
!17912 = !DILocalVariable(name: "dir", arg: 1, scope: !17910, file: !17911, line: 42, type: !7)
!17913 = !DILocation(line: 42, column: 17, scope: !17910)
!17914 = !DILocalVariable(name: "file", arg: 2, scope: !17910, file: !17911, line: 42, type: !180)
!17915 = !DILocation(line: 42, column: 34, scope: !17910)
!17916 = !DILocalVariable(name: "times", arg: 3, scope: !17910, file: !17911, line: 42, type: !1271)
!17917 = !DILocation(line: 42, column: 62, scope: !17910)
!17918 = !DILocation(line: 44, column: 21, scope: !17910)
!17919 = !DILocation(line: 44, column: 26, scope: !17910)
!17920 = !DILocation(line: 44, column: 32, scope: !17910)
!17921 = !DILocation(line: 44, column: 10, scope: !17910)
!17922 = !DILocation(line: 44, column: 3, scope: !17910)
!17923 = distinct !DISubprogram(name: "fdutimens", scope: !1316, file: !1316, line: 170, type: !1269, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1266, retainedNodes: !209)
!17924 = !DILocalVariable(name: "fd", arg: 1, scope: !17923, file: !1316, line: 170, type: !7)
!17925 = !DILocation(line: 170, column: 16, scope: !17923)
!17926 = !DILocalVariable(name: "file", arg: 2, scope: !17923, file: !1316, line: 170, type: !180)
!17927 = !DILocation(line: 170, column: 32, scope: !17923)
!17928 = !DILocalVariable(name: "timespec", arg: 3, scope: !17923, file: !1316, line: 170, type: !1271)
!17929 = !DILocation(line: 170, column: 60, scope: !17923)
!17930 = !DILocalVariable(name: "adjusted_timespec", scope: !17923, file: !1316, line: 172, type: !1277)
!17931 = !DILocation(line: 172, column: 19, scope: !17923)
!17932 = !DILocalVariable(name: "ts", scope: !17923, file: !1316, line: 173, type: !1278)
!17933 = !DILocation(line: 173, column: 20, scope: !17923)
!17934 = !DILocation(line: 173, column: 25, scope: !17923)
!17935 = !DILocation(line: 173, column: 36, scope: !17923)
!17936 = !DILocalVariable(name: "adjustment_needed", scope: !17923, file: !1316, line: 174, type: !7)
!17937 = !DILocation(line: 174, column: 7, scope: !17923)
!17938 = !DILocalVariable(name: "st", scope: !17923, file: !1316, line: 175, type: !1295)
!17939 = !DILocation(line: 175, column: 15, scope: !17923)
!17940 = !DILocation(line: 177, column: 7, scope: !17941)
!17941 = distinct !DILexicalBlock(scope: !17923, file: !1316, line: 177, column: 7)
!17942 = !DILocation(line: 177, column: 7, scope: !17923)
!17943 = !DILocation(line: 179, column: 7, scope: !17944)
!17944 = distinct !DILexicalBlock(scope: !17941, file: !1316, line: 178, column: 5)
!17945 = !DILocation(line: 179, column: 30, scope: !17944)
!17946 = !DILocation(line: 180, column: 7, scope: !17944)
!17947 = !DILocation(line: 180, column: 30, scope: !17944)
!17948 = !DILocation(line: 181, column: 46, scope: !17944)
!17949 = !DILocation(line: 181, column: 27, scope: !17944)
!17950 = !DILocation(line: 181, column: 25, scope: !17944)
!17951 = !DILocation(line: 182, column: 5, scope: !17944)
!17952 = !DILocation(line: 183, column: 7, scope: !17953)
!17953 = distinct !DILexicalBlock(scope: !17923, file: !1316, line: 183, column: 7)
!17954 = !DILocation(line: 183, column: 25, scope: !17953)
!17955 = !DILocation(line: 183, column: 7, scope: !17923)
!17956 = !DILocation(line: 184, column: 5, scope: !17953)
!17957 = !DILocation(line: 189, column: 7, scope: !17958)
!17958 = distinct !DILexicalBlock(scope: !17923, file: !1316, line: 189, column: 7)
!17959 = !DILocation(line: 189, column: 10, scope: !17958)
!17960 = !DILocation(line: 189, column: 14, scope: !17958)
!17961 = !DILocation(line: 189, column: 18, scope: !17958)
!17962 = !DILocation(line: 189, column: 7, scope: !17923)
!17963 = !DILocation(line: 191, column: 7, scope: !17964)
!17964 = distinct !DILexicalBlock(scope: !17958, file: !1316, line: 190, column: 5)
!17965 = !DILocation(line: 191, column: 13, scope: !17964)
!17966 = !DILocation(line: 192, column: 7, scope: !17964)
!17967 = !DILocation(line: 218, column: 12, scope: !17968)
!17968 = distinct !DILexicalBlock(scope: !17923, file: !1316, line: 218, column: 7)
!17969 = !DILocation(line: 218, column: 9, scope: !17968)
!17970 = !DILocation(line: 218, column: 7, scope: !17923)
!17971 = !DILocalVariable(name: "result", scope: !17972, file: !1316, line: 220, type: !7)
!17972 = distinct !DILexicalBlock(scope: !17968, file: !1316, line: 219, column: 5)
!17973 = !DILocation(line: 220, column: 11, scope: !17972)
!17974 = !DILocation(line: 234, column: 11, scope: !17975)
!17975 = distinct !DILexicalBlock(scope: !17972, file: !1316, line: 234, column: 11)
!17976 = !DILocation(line: 234, column: 29, scope: !17975)
!17977 = !DILocation(line: 234, column: 11, scope: !17972)
!17978 = !DILocation(line: 236, column: 15, scope: !17979)
!17979 = distinct !DILexicalBlock(scope: !17980, file: !1316, line: 236, column: 15)
!17980 = distinct !DILexicalBlock(scope: !17975, file: !1316, line: 235, column: 9)
!17981 = !DILocation(line: 236, column: 18, scope: !17979)
!17982 = !DILocation(line: 236, column: 15, scope: !17980)
!17983 = !DILocation(line: 236, column: 30, scope: !17979)
!17984 = !DILocation(line: 236, column: 24, scope: !17979)
!17985 = !DILocation(line: 236, column: 50, scope: !17979)
!17986 = !DILocation(line: 236, column: 43, scope: !17979)
!17987 = !DILocation(line: 237, column: 13, scope: !17979)
!17988 = !DILocation(line: 238, column: 15, scope: !17989)
!17989 = distinct !DILexicalBlock(scope: !17980, file: !1316, line: 238, column: 15)
!17990 = !DILocation(line: 238, column: 21, scope: !17989)
!17991 = !DILocation(line: 238, column: 29, scope: !17989)
!17992 = !DILocation(line: 238, column: 15, scope: !17980)
!17993 = !DILocation(line: 239, column: 13, scope: !17989)
!17994 = !DILocation(line: 239, column: 21, scope: !17989)
!17995 = !DILocation(line: 240, column: 20, scope: !17996)
!17996 = distinct !DILexicalBlock(scope: !17989, file: !1316, line: 240, column: 20)
!17997 = !DILocation(line: 240, column: 26, scope: !17996)
!17998 = !DILocation(line: 240, column: 34, scope: !17996)
!17999 = !DILocation(line: 240, column: 20, scope: !17989)
!18000 = !DILocation(line: 241, column: 13, scope: !17996)
!18001 = !DILocation(line: 241, column: 21, scope: !17996)
!18002 = !DILocation(line: 243, column: 28, scope: !17980)
!18003 = !DILocation(line: 244, column: 9, scope: !17980)
!18004 = !DILocation(line: 247, column: 11, scope: !18005)
!18005 = distinct !DILexicalBlock(scope: !17972, file: !1316, line: 247, column: 11)
!18006 = !DILocation(line: 247, column: 14, scope: !18005)
!18007 = !DILocation(line: 247, column: 11, scope: !17972)
!18008 = !DILocation(line: 249, column: 41, scope: !18009)
!18009 = distinct !DILexicalBlock(scope: !18005, file: !1316, line: 248, column: 9)
!18010 = !DILocation(line: 249, column: 47, scope: !18009)
!18011 = !DILocation(line: 249, column: 20, scope: !18009)
!18012 = !DILocation(line: 249, column: 18, scope: !18009)
!18013 = !DILocation(line: 258, column: 19, scope: !18014)
!18014 = distinct !DILexicalBlock(scope: !18009, file: !1316, line: 258, column: 15)
!18015 = !DILocation(line: 258, column: 17, scope: !18014)
!18016 = !DILocation(line: 258, column: 15, scope: !18009)
!18017 = !DILocation(line: 259, column: 13, scope: !18014)
!18018 = !DILocation(line: 259, column: 19, scope: !18014)
!18019 = !DILocation(line: 261, column: 15, scope: !18020)
!18020 = distinct !DILexicalBlock(scope: !18009, file: !1316, line: 261, column: 15)
!18021 = !DILocation(line: 261, column: 22, scope: !18020)
!18022 = !DILocation(line: 261, column: 27, scope: !18020)
!18023 = !DILocation(line: 261, column: 30, scope: !18020)
!18024 = !DILocation(line: 261, column: 36, scope: !18020)
!18025 = !DILocation(line: 261, column: 15, scope: !18009)
!18026 = !DILocation(line: 263, column: 38, scope: !18027)
!18027 = distinct !DILexicalBlock(scope: !18020, file: !1316, line: 262, column: 13)
!18028 = !DILocation(line: 264, column: 22, scope: !18027)
!18029 = !DILocation(line: 264, column: 15, scope: !18027)
!18030 = !DILocation(line: 266, column: 9, scope: !18009)
!18031 = !DILocation(line: 269, column: 16, scope: !18032)
!18032 = distinct !DILexicalBlock(scope: !17972, file: !1316, line: 269, column: 11)
!18033 = !DILocation(line: 269, column: 13, scope: !18032)
!18034 = !DILocation(line: 269, column: 11, scope: !17972)
!18035 = !DILocation(line: 271, column: 30, scope: !18036)
!18036 = distinct !DILexicalBlock(scope: !18032, file: !1316, line: 270, column: 9)
!18037 = !DILocation(line: 271, column: 34, scope: !18036)
!18038 = !DILocation(line: 271, column: 20, scope: !18036)
!18039 = !DILocation(line: 271, column: 18, scope: !18036)
!18040 = !DILocation(line: 274, column: 19, scope: !18041)
!18041 = distinct !DILexicalBlock(scope: !18036, file: !1316, line: 274, column: 15)
!18042 = !DILocation(line: 274, column: 17, scope: !18041)
!18043 = !DILocation(line: 274, column: 15, scope: !18036)
!18044 = !DILocation(line: 275, column: 13, scope: !18041)
!18045 = !DILocation(line: 275, column: 19, scope: !18041)
!18046 = !DILocation(line: 277, column: 15, scope: !18047)
!18047 = distinct !DILexicalBlock(scope: !18036, file: !1316, line: 277, column: 15)
!18048 = !DILocation(line: 277, column: 22, scope: !18047)
!18049 = !DILocation(line: 277, column: 27, scope: !18047)
!18050 = !DILocation(line: 277, column: 30, scope: !18047)
!18051 = !DILocation(line: 277, column: 36, scope: !18047)
!18052 = !DILocation(line: 277, column: 15, scope: !18036)
!18053 = !DILocation(line: 279, column: 38, scope: !18054)
!18054 = distinct !DILexicalBlock(scope: !18047, file: !1316, line: 278, column: 13)
!18055 = !DILocation(line: 280, column: 22, scope: !18054)
!18056 = !DILocation(line: 280, column: 15, scope: !18054)
!18057 = !DILocation(line: 282, column: 9, scope: !18036)
!18058 = !DILocation(line: 284, column: 5, scope: !17972)
!18059 = !DILocation(line: 285, column: 26, scope: !17923)
!18060 = !DILocation(line: 286, column: 27, scope: !17923)
!18061 = !DILocation(line: 377, column: 7, scope: !18062)
!18062 = distinct !DILexicalBlock(scope: !17923, file: !1316, line: 377, column: 7)
!18063 = !DILocation(line: 377, column: 7, scope: !17923)
!18064 = !DILocation(line: 379, column: 11, scope: !18065)
!18065 = distinct !DILexicalBlock(scope: !18066, file: !1316, line: 379, column: 11)
!18066 = distinct !DILexicalBlock(scope: !18062, file: !1316, line: 378, column: 5)
!18067 = !DILocation(line: 379, column: 29, scope: !18065)
!18068 = !DILocation(line: 380, column: 11, scope: !18065)
!18069 = !DILocation(line: 380, column: 15, scope: !18065)
!18070 = !DILocation(line: 380, column: 18, scope: !18065)
!18071 = !DILocation(line: 379, column: 11, scope: !18066)
!18072 = !DILocation(line: 380, column: 30, scope: !18065)
!18073 = !DILocation(line: 380, column: 24, scope: !18065)
!18074 = !DILocation(line: 380, column: 50, scope: !18065)
!18075 = !DILocation(line: 380, column: 43, scope: !18065)
!18076 = !DILocation(line: 381, column: 9, scope: !18065)
!18077 = !DILocation(line: 382, column: 11, scope: !18078)
!18078 = distinct !DILexicalBlock(scope: !18066, file: !1316, line: 382, column: 11)
!18079 = !DILocation(line: 382, column: 14, scope: !18078)
!18080 = !DILocation(line: 382, column: 17, scope: !18078)
!18081 = !DILocation(line: 382, column: 11, scope: !18066)
!18082 = !DILocation(line: 383, column: 9, scope: !18078)
!18083 = !DILocation(line: 384, column: 5, scope: !18066)
!18084 = !DILocalVariable(name: "timeval", scope: !18085, file: !1316, line: 388, type: !1279)
!18085 = distinct !DILexicalBlock(scope: !17923, file: !1316, line: 386, column: 3)
!18086 = !DILocation(line: 388, column: 20, scope: !18085)
!18087 = !DILocalVariable(name: "t", scope: !18085, file: !1316, line: 389, type: !1286)
!18088 = !DILocation(line: 389, column: 21, scope: !18085)
!18089 = !DILocation(line: 390, column: 9, scope: !18090)
!18090 = distinct !DILexicalBlock(scope: !18085, file: !1316, line: 390, column: 9)
!18091 = !DILocation(line: 390, column: 9, scope: !18085)
!18092 = !DILocation(line: 392, column: 29, scope: !18093)
!18093 = distinct !DILexicalBlock(scope: !18090, file: !1316, line: 391, column: 7)
!18094 = !DILocation(line: 392, column: 35, scope: !18093)
!18095 = !DILocation(line: 392, column: 9, scope: !18093)
!18096 = !DILocation(line: 392, column: 20, scope: !18093)
!18097 = !DILocation(line: 392, column: 27, scope: !18093)
!18098 = !{!18099, !2916, i64 0}
!18099 = !{!"timeval", !2916, i64 0, !2916, i64 8}
!18100 = !DILocation(line: 393, column: 30, scope: !18093)
!18101 = !DILocation(line: 393, column: 36, scope: !18093)
!18102 = !DILocation(line: 393, column: 44, scope: !18093)
!18103 = !DILocation(line: 393, column: 9, scope: !18093)
!18104 = !DILocation(line: 393, column: 20, scope: !18093)
!18105 = !DILocation(line: 393, column: 28, scope: !18093)
!18106 = !{!18099, !2916, i64 8}
!18107 = !DILocation(line: 394, column: 29, scope: !18093)
!18108 = !DILocation(line: 394, column: 35, scope: !18093)
!18109 = !DILocation(line: 394, column: 9, scope: !18093)
!18110 = !DILocation(line: 394, column: 20, scope: !18093)
!18111 = !DILocation(line: 394, column: 27, scope: !18093)
!18112 = !DILocation(line: 395, column: 30, scope: !18093)
!18113 = !DILocation(line: 395, column: 36, scope: !18093)
!18114 = !DILocation(line: 395, column: 44, scope: !18093)
!18115 = !DILocation(line: 395, column: 9, scope: !18093)
!18116 = !DILocation(line: 395, column: 20, scope: !18093)
!18117 = !DILocation(line: 395, column: 28, scope: !18093)
!18118 = !DILocation(line: 396, column: 13, scope: !18093)
!18119 = !DILocation(line: 396, column: 11, scope: !18093)
!18120 = !DILocation(line: 397, column: 7, scope: !18093)
!18121 = !DILocation(line: 399, column: 9, scope: !18090)
!18122 = !DILocation(line: 401, column: 9, scope: !18123)
!18123 = distinct !DILexicalBlock(scope: !18085, file: !1316, line: 401, column: 9)
!18124 = !DILocation(line: 401, column: 12, scope: !18123)
!18125 = !DILocation(line: 401, column: 9, scope: !18085)
!18126 = !DILocation(line: 404, column: 37, scope: !18127)
!18127 = distinct !DILexicalBlock(scope: !18123, file: !1316, line: 402, column: 7)
!18128 = !DILocation(line: 404, column: 43, scope: !18127)
!18129 = !DILocation(line: 404, column: 16, scope: !18127)
!18130 = !DILocation(line: 404, column: 9, scope: !18127)
!18131 = !DILocation(line: 425, column: 13, scope: !18132)
!18132 = distinct !DILexicalBlock(scope: !18133, file: !1316, line: 425, column: 13)
!18133 = distinct !DILexicalBlock(scope: !18123, file: !1316, line: 408, column: 7)
!18134 = !DILocation(line: 425, column: 29, scope: !18132)
!18135 = !DILocation(line: 425, column: 13, scope: !18133)
!18136 = !DILocation(line: 433, column: 17, scope: !18137)
!18137 = distinct !DILexicalBlock(scope: !18138, file: !1316, line: 433, column: 17)
!18138 = distinct !DILexicalBlock(scope: !18132, file: !1316, line: 426, column: 11)
!18139 = !DILocation(line: 433, column: 17, scope: !18138)
!18140 = !DILocalVariable(name: "abig", scope: !18141, file: !1316, line: 435, type: !142)
!18141 = distinct !DILexicalBlock(scope: !18137, file: !1316, line: 434, column: 15)
!18142 = !DILocation(line: 435, column: 22, scope: !18141)
!18143 = !DILocation(line: 435, column: 39, scope: !18141)
!18144 = !DILocation(line: 435, column: 44, scope: !18141)
!18145 = !DILocation(line: 435, column: 36, scope: !18141)
!18146 = !DILocalVariable(name: "mbig", scope: !18141, file: !1316, line: 436, type: !142)
!18147 = !DILocation(line: 436, column: 22, scope: !18141)
!18148 = !DILocation(line: 436, column: 39, scope: !18141)
!18149 = !DILocation(line: 436, column: 44, scope: !18141)
!18150 = !DILocation(line: 436, column: 36, scope: !18141)
!18151 = !DILocation(line: 437, column: 22, scope: !18152)
!18152 = distinct !DILexicalBlock(scope: !18141, file: !1316, line: 437, column: 21)
!18153 = !DILocation(line: 437, column: 29, scope: !18152)
!18154 = !DILocation(line: 437, column: 27, scope: !18152)
!18155 = !DILocation(line: 437, column: 35, scope: !18152)
!18156 = !DILocation(line: 437, column: 45, scope: !18152)
!18157 = !DILocation(line: 437, column: 38, scope: !18152)
!18158 = !DILocation(line: 437, column: 54, scope: !18152)
!18159 = !DILocation(line: 437, column: 21, scope: !18141)
!18160 = !DILocalVariable(name: "adiff", scope: !18161, file: !1316, line: 441, type: !1250)
!18161 = distinct !DILexicalBlock(scope: !18152, file: !1316, line: 438, column: 19)
!18162 = !DILocation(line: 441, column: 28, scope: !18161)
!18163 = !DILocation(line: 441, column: 39, scope: !18161)
!18164 = !DILocation(line: 441, column: 50, scope: !18161)
!18165 = !DILocation(line: 441, column: 55, scope: !18161)
!18166 = !DILocation(line: 441, column: 48, scope: !18161)
!18167 = !DILocalVariable(name: "mdiff", scope: !18161, file: !1316, line: 442, type: !1250)
!18168 = !DILocation(line: 442, column: 28, scope: !18161)
!18169 = !DILocation(line: 442, column: 39, scope: !18161)
!18170 = !DILocation(line: 442, column: 50, scope: !18161)
!18171 = !DILocation(line: 442, column: 55, scope: !18161)
!18172 = !DILocation(line: 442, column: 48, scope: !18161)
!18173 = !DILocalVariable(name: "tt", scope: !18161, file: !1316, line: 444, type: !1286)
!18174 = !DILocation(line: 444, column: 37, scope: !18161)
!18175 = !DILocalVariable(name: "truncated_timeval", scope: !18161, file: !1316, line: 445, type: !1279)
!18176 = !DILocation(line: 445, column: 36, scope: !18161)
!18177 = !DILocation(line: 446, column: 21, scope: !18161)
!18178 = !DILocation(line: 446, column: 44, scope: !18161)
!18179 = !DILocation(line: 447, column: 21, scope: !18161)
!18180 = !DILocation(line: 447, column: 44, scope: !18161)
!18181 = !DILocation(line: 448, column: 25, scope: !18182)
!18182 = distinct !DILexicalBlock(scope: !18161, file: !1316, line: 448, column: 25)
!18183 = !DILocation(line: 448, column: 30, scope: !18182)
!18184 = !DILocation(line: 448, column: 33, scope: !18182)
!18185 = !DILocation(line: 448, column: 39, scope: !18182)
!18186 = !DILocation(line: 448, column: 44, scope: !18182)
!18187 = !DILocation(line: 448, column: 47, scope: !18182)
!18188 = !DILocation(line: 448, column: 71, scope: !18182)
!18189 = !DILocation(line: 448, column: 25, scope: !18161)
!18190 = !DILocation(line: 450, column: 30, scope: !18191)
!18191 = distinct !DILexicalBlock(scope: !18182, file: !1316, line: 449, column: 23)
!18192 = !DILocation(line: 450, column: 28, scope: !18191)
!18193 = !DILocation(line: 451, column: 25, scope: !18191)
!18194 = !DILocation(line: 451, column: 31, scope: !18191)
!18195 = !DILocation(line: 451, column: 39, scope: !18191)
!18196 = !DILocation(line: 452, column: 23, scope: !18191)
!18197 = !DILocation(line: 453, column: 25, scope: !18198)
!18198 = distinct !DILexicalBlock(scope: !18161, file: !1316, line: 453, column: 25)
!18199 = !DILocation(line: 453, column: 30, scope: !18198)
!18200 = !DILocation(line: 453, column: 33, scope: !18198)
!18201 = !DILocation(line: 453, column: 39, scope: !18198)
!18202 = !DILocation(line: 453, column: 44, scope: !18198)
!18203 = !DILocation(line: 453, column: 47, scope: !18198)
!18204 = !DILocation(line: 453, column: 71, scope: !18198)
!18205 = !DILocation(line: 453, column: 25, scope: !18161)
!18206 = !DILocation(line: 455, column: 30, scope: !18207)
!18207 = distinct !DILexicalBlock(scope: !18198, file: !1316, line: 454, column: 23)
!18208 = !DILocation(line: 455, column: 28, scope: !18207)
!18209 = !DILocation(line: 456, column: 25, scope: !18207)
!18210 = !DILocation(line: 456, column: 31, scope: !18207)
!18211 = !DILocation(line: 456, column: 39, scope: !18207)
!18212 = !DILocation(line: 457, column: 23, scope: !18207)
!18213 = !DILocation(line: 458, column: 25, scope: !18214)
!18214 = distinct !DILexicalBlock(scope: !18161, file: !1316, line: 458, column: 25)
!18215 = !DILocation(line: 458, column: 25, scope: !18161)
!18216 = !DILocation(line: 459, column: 23, scope: !18214)
!18217 = !DILocation(line: 460, column: 19, scope: !18161)
!18218 = !DILocation(line: 461, column: 15, scope: !18141)
!18219 = !DILocation(line: 464, column: 13, scope: !18138)
!18220 = !DILocation(line: 470, column: 10, scope: !18221)
!18221 = distinct !DILexicalBlock(scope: !18085, file: !1316, line: 470, column: 9)
!18222 = !DILocation(line: 470, column: 9, scope: !18085)
!18223 = !DILocation(line: 476, column: 9, scope: !18224)
!18224 = distinct !DILexicalBlock(scope: !18221, file: !1316, line: 471, column: 7)
!18225 = !DILocation(line: 482, column: 20, scope: !18085)
!18226 = !DILocation(line: 482, column: 26, scope: !18085)
!18227 = !DILocation(line: 482, column: 12, scope: !18085)
!18228 = !DILocation(line: 482, column: 5, scope: !18085)
!18229 = !DILocation(line: 500, column: 1, scope: !17923)
!18230 = distinct !DISubprogram(name: "validate_timespec", scope: !1316, file: !1316, line: 87, type: !1289, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1266, retainedNodes: !209)
!18231 = !DILocalVariable(name: "timespec", arg: 1, scope: !18230, file: !1316, line: 87, type: !1278)
!18232 = !DILocation(line: 87, column: 36, scope: !18230)
!18233 = !DILocalVariable(name: "result", scope: !18230, file: !1316, line: 89, type: !7)
!18234 = !DILocation(line: 89, column: 7, scope: !18230)
!18235 = !DILocalVariable(name: "utime_omit_count", scope: !18230, file: !1316, line: 90, type: !7)
!18236 = !DILocation(line: 90, column: 7, scope: !18230)
!18237 = !DILocation(line: 91, column: 8, scope: !18238)
!18238 = distinct !DILexicalBlock(scope: !18230, file: !1316, line: 91, column: 7)
!18239 = !DILocation(line: 91, column: 20, scope: !18238)
!18240 = !DILocation(line: 91, column: 28, scope: !18238)
!18241 = !DILocation(line: 92, column: 8, scope: !18238)
!18242 = !DILocation(line: 92, column: 11, scope: !18238)
!18243 = !DILocation(line: 92, column: 23, scope: !18238)
!18244 = !DILocation(line: 92, column: 31, scope: !18238)
!18245 = !DILocation(line: 93, column: 8, scope: !18238)
!18246 = !DILocation(line: 93, column: 19, scope: !18238)
!18247 = !DILocation(line: 93, column: 31, scope: !18238)
!18248 = !DILocation(line: 93, column: 16, scope: !18238)
!18249 = !DILocation(line: 94, column: 14, scope: !18238)
!18250 = !DILocation(line: 94, column: 17, scope: !18238)
!18251 = !DILocation(line: 94, column: 29, scope: !18238)
!18252 = !DILocation(line: 94, column: 37, scope: !18238)
!18253 = !DILocation(line: 95, column: 7, scope: !18238)
!18254 = !DILocation(line: 95, column: 11, scope: !18238)
!18255 = !DILocation(line: 95, column: 23, scope: !18238)
!18256 = !DILocation(line: 95, column: 31, scope: !18238)
!18257 = !DILocation(line: 96, column: 11, scope: !18238)
!18258 = !DILocation(line: 96, column: 14, scope: !18238)
!18259 = !DILocation(line: 96, column: 26, scope: !18238)
!18260 = !DILocation(line: 96, column: 34, scope: !18238)
!18261 = !DILocation(line: 97, column: 11, scope: !18238)
!18262 = !DILocation(line: 97, column: 22, scope: !18238)
!18263 = !DILocation(line: 97, column: 34, scope: !18238)
!18264 = !DILocation(line: 97, column: 19, scope: !18238)
!18265 = !DILocation(line: 98, column: 17, scope: !18238)
!18266 = !DILocation(line: 98, column: 20, scope: !18238)
!18267 = !DILocation(line: 98, column: 32, scope: !18238)
!18268 = !DILocation(line: 98, column: 40, scope: !18238)
!18269 = !DILocation(line: 91, column: 7, scope: !18230)
!18270 = !DILocation(line: 100, column: 7, scope: !18271)
!18271 = distinct !DILexicalBlock(scope: !18238, file: !1316, line: 99, column: 5)
!18272 = !DILocation(line: 100, column: 13, scope: !18271)
!18273 = !DILocation(line: 101, column: 7, scope: !18271)
!18274 = !DILocation(line: 107, column: 7, scope: !18275)
!18275 = distinct !DILexicalBlock(scope: !18230, file: !1316, line: 107, column: 7)
!18276 = !DILocation(line: 107, column: 19, scope: !18275)
!18277 = !DILocation(line: 107, column: 27, scope: !18275)
!18278 = !DILocation(line: 108, column: 7, scope: !18275)
!18279 = !DILocation(line: 108, column: 10, scope: !18275)
!18280 = !DILocation(line: 108, column: 22, scope: !18275)
!18281 = !DILocation(line: 108, column: 30, scope: !18275)
!18282 = !DILocation(line: 107, column: 7, scope: !18230)
!18283 = !DILocation(line: 110, column: 7, scope: !18284)
!18284 = distinct !DILexicalBlock(scope: !18275, file: !1316, line: 109, column: 5)
!18285 = !DILocation(line: 110, column: 19, scope: !18284)
!18286 = !DILocation(line: 110, column: 26, scope: !18284)
!18287 = !DILocation(line: 111, column: 14, scope: !18284)
!18288 = !DILocation(line: 112, column: 11, scope: !18289)
!18289 = distinct !DILexicalBlock(scope: !18284, file: !1316, line: 112, column: 11)
!18290 = !DILocation(line: 112, column: 23, scope: !18289)
!18291 = !DILocation(line: 112, column: 31, scope: !18289)
!18292 = !DILocation(line: 112, column: 11, scope: !18284)
!18293 = !DILocation(line: 113, column: 25, scope: !18289)
!18294 = !DILocation(line: 113, column: 9, scope: !18289)
!18295 = !DILocation(line: 114, column: 5, scope: !18284)
!18296 = !DILocation(line: 115, column: 7, scope: !18297)
!18297 = distinct !DILexicalBlock(scope: !18230, file: !1316, line: 115, column: 7)
!18298 = !DILocation(line: 115, column: 19, scope: !18297)
!18299 = !DILocation(line: 115, column: 27, scope: !18297)
!18300 = !DILocation(line: 116, column: 7, scope: !18297)
!18301 = !DILocation(line: 116, column: 10, scope: !18297)
!18302 = !DILocation(line: 116, column: 22, scope: !18297)
!18303 = !DILocation(line: 116, column: 30, scope: !18297)
!18304 = !DILocation(line: 115, column: 7, scope: !18230)
!18305 = !DILocation(line: 118, column: 7, scope: !18306)
!18306 = distinct !DILexicalBlock(scope: !18297, file: !1316, line: 117, column: 5)
!18307 = !DILocation(line: 118, column: 19, scope: !18306)
!18308 = !DILocation(line: 118, column: 26, scope: !18306)
!18309 = !DILocation(line: 119, column: 14, scope: !18306)
!18310 = !DILocation(line: 120, column: 11, scope: !18311)
!18311 = distinct !DILexicalBlock(scope: !18306, file: !1316, line: 120, column: 11)
!18312 = !DILocation(line: 120, column: 23, scope: !18311)
!18313 = !DILocation(line: 120, column: 31, scope: !18311)
!18314 = !DILocation(line: 120, column: 11, scope: !18306)
!18315 = !DILocation(line: 121, column: 25, scope: !18311)
!18316 = !DILocation(line: 121, column: 9, scope: !18311)
!18317 = !DILocation(line: 122, column: 5, scope: !18306)
!18318 = !DILocation(line: 123, column: 10, scope: !18230)
!18319 = !DILocation(line: 123, column: 20, scope: !18230)
!18320 = !DILocation(line: 123, column: 37, scope: !18230)
!18321 = !DILocation(line: 123, column: 17, scope: !18230)
!18322 = !DILocation(line: 123, column: 3, scope: !18230)
!18323 = !DILocation(line: 124, column: 1, scope: !18230)
!18324 = distinct !DISubprogram(name: "update_timespec", scope: !1316, file: !1316, line: 133, type: !1291, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1266, retainedNodes: !209)
!18325 = !DILocalVariable(name: "statbuf", arg: 1, scope: !18324, file: !1316, line: 133, type: !1293)
!18326 = !DILocation(line: 133, column: 37, scope: !18324)
!18327 = !DILocalVariable(name: "ts", arg: 2, scope: !18324, file: !1316, line: 133, type: !1312)
!18328 = !DILocation(line: 133, column: 63, scope: !18324)
!18329 = !DILocalVariable(name: "timespec", scope: !18324, file: !1316, line: 135, type: !1278)
!18330 = !DILocation(line: 135, column: 20, scope: !18324)
!18331 = !DILocation(line: 135, column: 32, scope: !18324)
!18332 = !DILocation(line: 135, column: 31, scope: !18324)
!18333 = !DILocation(line: 136, column: 7, scope: !18334)
!18334 = distinct !DILexicalBlock(scope: !18324, file: !1316, line: 136, column: 7)
!18335 = !DILocation(line: 136, column: 19, scope: !18334)
!18336 = !DILocation(line: 136, column: 27, scope: !18334)
!18337 = !DILocation(line: 137, column: 7, scope: !18334)
!18338 = !DILocation(line: 137, column: 10, scope: !18334)
!18339 = !DILocation(line: 137, column: 22, scope: !18334)
!18340 = !DILocation(line: 137, column: 30, scope: !18334)
!18341 = !DILocation(line: 136, column: 7, scope: !18324)
!18342 = !DILocation(line: 138, column: 5, scope: !18334)
!18343 = !DILocation(line: 139, column: 7, scope: !18344)
!18344 = distinct !DILexicalBlock(scope: !18324, file: !1316, line: 139, column: 7)
!18345 = !DILocation(line: 139, column: 19, scope: !18344)
!18346 = !DILocation(line: 139, column: 27, scope: !18344)
!18347 = !DILocation(line: 140, column: 7, scope: !18344)
!18348 = !DILocation(line: 140, column: 10, scope: !18344)
!18349 = !DILocation(line: 140, column: 22, scope: !18344)
!18350 = !DILocation(line: 140, column: 30, scope: !18344)
!18351 = !DILocation(line: 139, column: 7, scope: !18324)
!18352 = !DILocation(line: 142, column: 8, scope: !18353)
!18353 = distinct !DILexicalBlock(scope: !18344, file: !1316, line: 141, column: 5)
!18354 = !DILocation(line: 142, column: 11, scope: !18353)
!18355 = !DILocation(line: 143, column: 7, scope: !18353)
!18356 = !DILocation(line: 146, column: 7, scope: !18357)
!18357 = distinct !DILexicalBlock(scope: !18324, file: !1316, line: 146, column: 7)
!18358 = !DILocation(line: 146, column: 19, scope: !18357)
!18359 = !DILocation(line: 146, column: 27, scope: !18357)
!18360 = !DILocation(line: 146, column: 7, scope: !18324)
!18361 = !DILocation(line: 147, column: 5, scope: !18357)
!18362 = !DILocation(line: 147, column: 35, scope: !18357)
!18363 = !DILocation(line: 147, column: 19, scope: !18357)
!18364 = !DILocation(line: 148, column: 12, scope: !18365)
!18365 = distinct !DILexicalBlock(scope: !18357, file: !1316, line: 148, column: 12)
!18366 = !DILocation(line: 148, column: 24, scope: !18365)
!18367 = !DILocation(line: 148, column: 32, scope: !18365)
!18368 = !DILocation(line: 148, column: 12, scope: !18357)
!18369 = !DILocation(line: 149, column: 15, scope: !18365)
!18370 = !DILocation(line: 149, column: 5, scope: !18365)
!18371 = !DILocation(line: 151, column: 7, scope: !18372)
!18372 = distinct !DILexicalBlock(scope: !18324, file: !1316, line: 151, column: 7)
!18373 = !DILocation(line: 151, column: 19, scope: !18372)
!18374 = !DILocation(line: 151, column: 27, scope: !18372)
!18375 = !DILocation(line: 151, column: 7, scope: !18324)
!18376 = !DILocation(line: 152, column: 5, scope: !18372)
!18377 = !DILocation(line: 152, column: 35, scope: !18372)
!18378 = !DILocation(line: 152, column: 19, scope: !18372)
!18379 = !DILocation(line: 153, column: 12, scope: !18380)
!18380 = distinct !DILexicalBlock(scope: !18372, file: !1316, line: 153, column: 12)
!18381 = !DILocation(line: 153, column: 24, scope: !18380)
!18382 = !DILocation(line: 153, column: 32, scope: !18380)
!18383 = !DILocation(line: 153, column: 12, scope: !18372)
!18384 = !DILocation(line: 154, column: 15, scope: !18380)
!18385 = !DILocation(line: 154, column: 5, scope: !18380)
!18386 = !DILocation(line: 156, column: 3, scope: !18324)
!18387 = !DILocation(line: 157, column: 1, scope: !18324)
!18388 = distinct !DISubprogram(name: "utimens", scope: !1316, file: !1316, line: 505, type: !1287, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1266, retainedNodes: !209)
!18389 = !DILocalVariable(name: "file", arg: 1, scope: !18388, file: !1316, line: 505, type: !180)
!18390 = !DILocation(line: 505, column: 22, scope: !18388)
!18391 = !DILocalVariable(name: "timespec", arg: 2, scope: !18388, file: !1316, line: 505, type: !1271)
!18392 = !DILocation(line: 505, column: 50, scope: !18388)
!18393 = !DILocation(line: 507, column: 25, scope: !18388)
!18394 = !DILocation(line: 507, column: 31, scope: !18388)
!18395 = !DILocation(line: 507, column: 10, scope: !18388)
!18396 = !DILocation(line: 507, column: 3, scope: !18388)
!18397 = distinct !DISubprogram(name: "lutimens", scope: !1316, file: !1316, line: 515, type: !1287, scopeLine: 516, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1266, retainedNodes: !209)
!18398 = !DILocalVariable(name: "file", arg: 1, scope: !18397, file: !1316, line: 515, type: !180)
!18399 = !DILocation(line: 515, column: 23, scope: !18397)
!18400 = !DILocalVariable(name: "timespec", arg: 2, scope: !18397, file: !1316, line: 515, type: !1271)
!18401 = !DILocation(line: 515, column: 51, scope: !18397)
!18402 = !DILocalVariable(name: "adjusted_timespec", scope: !18397, file: !1316, line: 517, type: !1277)
!18403 = !DILocation(line: 517, column: 19, scope: !18397)
!18404 = !DILocalVariable(name: "ts", scope: !18397, file: !1316, line: 518, type: !1278)
!18405 = !DILocation(line: 518, column: 20, scope: !18397)
!18406 = !DILocation(line: 518, column: 25, scope: !18397)
!18407 = !DILocation(line: 518, column: 36, scope: !18397)
!18408 = !DILocalVariable(name: "adjustment_needed", scope: !18397, file: !1316, line: 519, type: !7)
!18409 = !DILocation(line: 519, column: 7, scope: !18397)
!18410 = !DILocalVariable(name: "st", scope: !18397, file: !1316, line: 520, type: !1295)
!18411 = !DILocation(line: 520, column: 15, scope: !18397)
!18412 = !DILocation(line: 522, column: 7, scope: !18413)
!18413 = distinct !DILexicalBlock(scope: !18397, file: !1316, line: 522, column: 7)
!18414 = !DILocation(line: 522, column: 7, scope: !18397)
!18415 = !DILocation(line: 524, column: 7, scope: !18416)
!18416 = distinct !DILexicalBlock(scope: !18413, file: !1316, line: 523, column: 5)
!18417 = !DILocation(line: 524, column: 30, scope: !18416)
!18418 = !DILocation(line: 525, column: 7, scope: !18416)
!18419 = !DILocation(line: 525, column: 30, scope: !18416)
!18420 = !DILocation(line: 526, column: 46, scope: !18416)
!18421 = !DILocation(line: 526, column: 27, scope: !18416)
!18422 = !DILocation(line: 526, column: 25, scope: !18416)
!18423 = !DILocation(line: 527, column: 5, scope: !18416)
!18424 = !DILocation(line: 528, column: 7, scope: !18425)
!18425 = distinct !DILexicalBlock(scope: !18397, file: !1316, line: 528, column: 7)
!18426 = !DILocation(line: 528, column: 25, scope: !18425)
!18427 = !DILocation(line: 528, column: 7, scope: !18397)
!18428 = !DILocation(line: 529, column: 5, scope: !18425)
!18429 = !DILocation(line: 537, column: 12, scope: !18430)
!18430 = distinct !DILexicalBlock(scope: !18397, file: !1316, line: 537, column: 7)
!18431 = !DILocation(line: 537, column: 9, scope: !18430)
!18432 = !DILocation(line: 537, column: 7, scope: !18397)
!18433 = !DILocalVariable(name: "result", scope: !18434, file: !1316, line: 539, type: !7)
!18434 = distinct !DILexicalBlock(scope: !18430, file: !1316, line: 538, column: 5)
!18435 = !DILocation(line: 539, column: 11, scope: !18434)
!18436 = !DILocation(line: 553, column: 11, scope: !18437)
!18437 = distinct !DILexicalBlock(scope: !18434, file: !1316, line: 553, column: 11)
!18438 = !DILocation(line: 553, column: 29, scope: !18437)
!18439 = !DILocation(line: 553, column: 11, scope: !18434)
!18440 = !DILocation(line: 555, column: 22, scope: !18441)
!18441 = distinct !DILexicalBlock(scope: !18442, file: !1316, line: 555, column: 15)
!18442 = distinct !DILexicalBlock(scope: !18437, file: !1316, line: 554, column: 9)
!18443 = !DILocation(line: 555, column: 15, scope: !18441)
!18444 = !DILocation(line: 555, column: 15, scope: !18442)
!18445 = !DILocation(line: 556, column: 13, scope: !18441)
!18446 = !DILocation(line: 557, column: 15, scope: !18447)
!18447 = distinct !DILexicalBlock(scope: !18442, file: !1316, line: 557, column: 15)
!18448 = !DILocation(line: 557, column: 21, scope: !18447)
!18449 = !DILocation(line: 557, column: 29, scope: !18447)
!18450 = !DILocation(line: 557, column: 15, scope: !18442)
!18451 = !DILocation(line: 558, column: 13, scope: !18447)
!18452 = !DILocation(line: 558, column: 21, scope: !18447)
!18453 = !DILocation(line: 559, column: 20, scope: !18454)
!18454 = distinct !DILexicalBlock(scope: !18447, file: !1316, line: 559, column: 20)
!18455 = !DILocation(line: 559, column: 26, scope: !18454)
!18456 = !DILocation(line: 559, column: 34, scope: !18454)
!18457 = !DILocation(line: 559, column: 20, scope: !18447)
!18458 = !DILocation(line: 560, column: 13, scope: !18454)
!18459 = !DILocation(line: 560, column: 21, scope: !18454)
!18460 = !DILocation(line: 562, column: 28, scope: !18442)
!18461 = !DILocation(line: 563, column: 9, scope: !18442)
!18462 = !DILocation(line: 565, column: 37, scope: !18434)
!18463 = !DILocation(line: 565, column: 43, scope: !18434)
!18464 = !DILocation(line: 565, column: 16, scope: !18434)
!18465 = !DILocation(line: 565, column: 14, scope: !18434)
!18466 = !DILocation(line: 574, column: 15, scope: !18467)
!18467 = distinct !DILexicalBlock(scope: !18434, file: !1316, line: 574, column: 11)
!18468 = !DILocation(line: 574, column: 13, scope: !18467)
!18469 = !DILocation(line: 574, column: 11, scope: !18434)
!18470 = !DILocation(line: 575, column: 9, scope: !18467)
!18471 = !DILocation(line: 575, column: 15, scope: !18467)
!18472 = !DILocation(line: 577, column: 11, scope: !18473)
!18473 = distinct !DILexicalBlock(scope: !18434, file: !1316, line: 577, column: 11)
!18474 = !DILocation(line: 577, column: 18, scope: !18473)
!18475 = !DILocation(line: 577, column: 23, scope: !18473)
!18476 = !DILocation(line: 577, column: 26, scope: !18473)
!18477 = !DILocation(line: 577, column: 32, scope: !18473)
!18478 = !DILocation(line: 577, column: 11, scope: !18434)
!18479 = !DILocation(line: 579, column: 34, scope: !18480)
!18480 = distinct !DILexicalBlock(scope: !18473, file: !1316, line: 578, column: 9)
!18481 = !DILocation(line: 580, column: 35, scope: !18480)
!18482 = !DILocation(line: 581, column: 18, scope: !18480)
!18483 = !DILocation(line: 581, column: 11, scope: !18480)
!18484 = !DILocation(line: 583, column: 5, scope: !18434)
!18485 = !DILocation(line: 584, column: 27, scope: !18397)
!18486 = !DILocation(line: 591, column: 7, scope: !18487)
!18487 = distinct !DILexicalBlock(scope: !18397, file: !1316, line: 591, column: 7)
!18488 = !DILocation(line: 591, column: 7, scope: !18397)
!18489 = !DILocation(line: 593, column: 11, scope: !18490)
!18490 = distinct !DILexicalBlock(scope: !18491, file: !1316, line: 593, column: 11)
!18491 = distinct !DILexicalBlock(scope: !18487, file: !1316, line: 592, column: 5)
!18492 = !DILocation(line: 593, column: 29, scope: !18490)
!18493 = !DILocation(line: 593, column: 34, scope: !18490)
!18494 = !DILocation(line: 593, column: 44, scope: !18490)
!18495 = !DILocation(line: 593, column: 37, scope: !18490)
!18496 = !DILocation(line: 593, column: 11, scope: !18491)
!18497 = !DILocation(line: 594, column: 9, scope: !18490)
!18498 = !DILocation(line: 595, column: 11, scope: !18499)
!18499 = distinct !DILexicalBlock(scope: !18491, file: !1316, line: 595, column: 11)
!18500 = !DILocation(line: 595, column: 14, scope: !18499)
!18501 = !DILocation(line: 595, column: 17, scope: !18499)
!18502 = !DILocation(line: 595, column: 11, scope: !18491)
!18503 = !DILocation(line: 596, column: 9, scope: !18499)
!18504 = !DILocation(line: 597, column: 5, scope: !18491)
!18505 = !DILocation(line: 624, column: 9, scope: !18506)
!18506 = distinct !DILexicalBlock(scope: !18397, file: !1316, line: 624, column: 7)
!18507 = !DILocation(line: 624, column: 54, scope: !18506)
!18508 = !DILocation(line: 624, column: 64, scope: !18506)
!18509 = !DILocation(line: 624, column: 57, scope: !18506)
!18510 = !DILocation(line: 624, column: 7, scope: !18397)
!18511 = !DILocation(line: 625, column: 5, scope: !18506)
!18512 = !DILocation(line: 626, column: 8, scope: !18513)
!18513 = distinct !DILexicalBlock(scope: !18397, file: !1316, line: 626, column: 7)
!18514 = !DILocation(line: 626, column: 7, scope: !18397)
!18515 = !DILocation(line: 627, column: 27, scope: !18513)
!18516 = !DILocation(line: 627, column: 33, scope: !18513)
!18517 = !DILocation(line: 627, column: 12, scope: !18513)
!18518 = !DILocation(line: 627, column: 5, scope: !18513)
!18519 = !DILocation(line: 628, column: 3, scope: !18397)
!18520 = !DILocation(line: 628, column: 9, scope: !18397)
!18521 = !DILocation(line: 629, column: 3, scope: !18397)
!18522 = !DILocation(line: 630, column: 1, scope: !18397)
!18523 = distinct !DISubprogram(name: "verror", scope: !18524, file: !18524, line: 43, type: !1933, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1930, retainedNodes: !209)
!18524 = !DIFile(filename: "lib/verror.c", directory: "/home/mbarbar/clone/coreutils")
!18525 = !DILocalVariable(name: "status", arg: 1, scope: !18523, file: !18524, line: 43, type: !7)
!18526 = !DILocation(line: 43, column: 13, scope: !18523)
!18527 = !DILocalVariable(name: "errnum", arg: 2, scope: !18523, file: !18524, line: 43, type: !7)
!18528 = !DILocation(line: 43, column: 25, scope: !18523)
!18529 = !DILocalVariable(name: "format", arg: 3, scope: !18523, file: !18524, line: 43, type: !180)
!18530 = !DILocation(line: 43, column: 45, scope: !18523)
!18531 = !DILocalVariable(name: "args", arg: 4, scope: !18523, file: !18524, line: 43, type: !1935)
!18532 = !DILocation(line: 43, column: 61, scope: !18523)
!18533 = !DILocation(line: 45, column: 19, scope: !18523)
!18534 = !DILocation(line: 45, column: 27, scope: !18523)
!18535 = !DILocation(line: 45, column: 44, scope: !18523)
!18536 = !DILocation(line: 45, column: 52, scope: !18523)
!18537 = !DILocation(line: 45, column: 3, scope: !18523)
!18538 = !DILocation(line: 46, column: 1, scope: !18523)
!18539 = distinct !DISubprogram(name: "verror_at_line", scope: !18524, file: !18524, line: 55, type: !1942, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1930, retainedNodes: !209)
!18540 = !DILocalVariable(name: "status", arg: 1, scope: !18539, file: !18524, line: 55, type: !7)
!18541 = !DILocation(line: 55, column: 21, scope: !18539)
!18542 = !DILocalVariable(name: "errnum", arg: 2, scope: !18539, file: !18524, line: 55, type: !7)
!18543 = !DILocation(line: 55, column: 33, scope: !18539)
!18544 = !DILocalVariable(name: "file", arg: 3, scope: !18539, file: !18524, line: 55, type: !180)
!18545 = !DILocation(line: 55, column: 53, scope: !18539)
!18546 = !DILocalVariable(name: "line_number", arg: 4, scope: !18539, file: !18524, line: 56, type: !70)
!18547 = !DILocation(line: 56, column: 30, scope: !18539)
!18548 = !DILocalVariable(name: "format", arg: 5, scope: !18539, file: !18524, line: 56, type: !180)
!18549 = !DILocation(line: 56, column: 55, scope: !18539)
!18550 = !DILocalVariable(name: "args", arg: 6, scope: !18539, file: !18524, line: 56, type: !1935)
!18551 = !DILocation(line: 56, column: 71, scope: !18539)
!18552 = !DILocalVariable(name: "message", scope: !18539, file: !18524, line: 58, type: !9)
!18553 = !DILocation(line: 58, column: 9, scope: !18539)
!18554 = !DILocation(line: 58, column: 31, scope: !18539)
!18555 = !DILocation(line: 58, column: 39, scope: !18539)
!18556 = !DILocation(line: 58, column: 19, scope: !18539)
!18557 = !DILocation(line: 59, column: 7, scope: !18558)
!18558 = distinct !DILexicalBlock(scope: !18539, file: !18524, line: 59, column: 7)
!18559 = !DILocation(line: 59, column: 7, scope: !18539)
!18560 = !DILocation(line: 64, column: 11, scope: !18561)
!18561 = distinct !DILexicalBlock(scope: !18562, file: !18524, line: 64, column: 11)
!18562 = distinct !DILexicalBlock(scope: !18558, file: !18524, line: 60, column: 5)
!18563 = !DILocation(line: 64, column: 11, scope: !18562)
!18564 = !DILocation(line: 65, column: 24, scope: !18561)
!18565 = !DILocation(line: 65, column: 32, scope: !18561)
!18566 = !DILocation(line: 65, column: 40, scope: !18561)
!18567 = !DILocation(line: 65, column: 46, scope: !18561)
!18568 = !DILocation(line: 65, column: 65, scope: !18561)
!18569 = !DILocation(line: 65, column: 9, scope: !18561)
!18570 = !DILocation(line: 67, column: 16, scope: !18561)
!18571 = !DILocation(line: 67, column: 24, scope: !18561)
!18572 = !DILocation(line: 67, column: 38, scope: !18561)
!18573 = !DILocation(line: 67, column: 9, scope: !18561)
!18574 = !DILocation(line: 68, column: 5, scope: !18562)
!18575 = !DILocation(line: 73, column: 17, scope: !18576)
!18576 = distinct !DILexicalBlock(scope: !18558, file: !18524, line: 70, column: 5)
!18577 = !DILocation(line: 73, column: 24, scope: !18576)
!18578 = !DILocation(line: 73, column: 7, scope: !18576)
!18579 = !DILocation(line: 74, column: 7, scope: !18576)
!18580 = !DILocation(line: 76, column: 9, scope: !18539)
!18581 = !DILocation(line: 76, column: 3, scope: !18539)
!18582 = !DILocation(line: 77, column: 1, scope: !18539)
!18583 = distinct !DISubprogram(name: "version_etc_arn", scope: !18584, file: !18584, line: 61, type: !1947, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1944, retainedNodes: !209)
!18584 = !DIFile(filename: "lib/version-etc.c", directory: "/home/mbarbar/clone/coreutils")
!18585 = !DILocalVariable(name: "stream", arg: 1, scope: !18583, file: !18584, line: 61, type: !1949)
!18586 = !DILocation(line: 61, column: 24, scope: !18583)
!18587 = !DILocalVariable(name: "command_name", arg: 2, scope: !18583, file: !18584, line: 62, type: !180)
!18588 = !DILocation(line: 62, column: 30, scope: !18583)
!18589 = !DILocalVariable(name: "package", arg: 3, scope: !18583, file: !18584, line: 62, type: !180)
!18590 = !DILocation(line: 62, column: 56, scope: !18583)
!18591 = !DILocalVariable(name: "version", arg: 4, scope: !18583, file: !18584, line: 63, type: !180)
!18592 = !DILocation(line: 63, column: 30, scope: !18583)
!18593 = !DILocalVariable(name: "authors", arg: 5, scope: !18583, file: !18584, line: 64, type: !1346)
!18594 = !DILocation(line: 64, column: 39, scope: !18583)
!18595 = !DILocalVariable(name: "n_authors", arg: 6, scope: !18583, file: !18584, line: 64, type: !55)
!18596 = !DILocation(line: 64, column: 55, scope: !18583)
!18597 = !DILocation(line: 66, column: 7, scope: !18598)
!18598 = distinct !DILexicalBlock(scope: !18583, file: !18584, line: 66, column: 7)
!18599 = !DILocation(line: 66, column: 7, scope: !18583)
!18600 = !DILocation(line: 67, column: 14, scope: !18598)
!18601 = !DILocation(line: 67, column: 38, scope: !18598)
!18602 = !DILocation(line: 67, column: 52, scope: !18598)
!18603 = !DILocation(line: 67, column: 61, scope: !18598)
!18604 = !DILocation(line: 67, column: 5, scope: !18598)
!18605 = !DILocation(line: 69, column: 14, scope: !18598)
!18606 = !DILocation(line: 69, column: 33, scope: !18598)
!18607 = !DILocation(line: 69, column: 42, scope: !18598)
!18608 = !DILocation(line: 69, column: 5, scope: !18598)
!18609 = !DILocation(line: 83, column: 12, scope: !18583)
!18610 = !DILocation(line: 83, column: 43, scope: !18583)
!18611 = !DILocation(line: 83, column: 3, scope: !18583)
!18612 = !DILocation(line: 85, column: 3, scope: !18583)
!18613 = !DILocation(line: 88, column: 12, scope: !18583)
!18614 = !DILocation(line: 88, column: 20, scope: !18583)
!18615 = !DILocation(line: 88, column: 3, scope: !18583)
!18616 = !DILocation(line: 95, column: 3, scope: !18583)
!18617 = !DILocation(line: 97, column: 11, scope: !18583)
!18618 = !DILocation(line: 97, column: 3, scope: !18583)
!18619 = !DILocation(line: 102, column: 7, scope: !18620)
!18620 = distinct !DILexicalBlock(scope: !18583, file: !18584, line: 98, column: 5)
!18621 = !DILocation(line: 105, column: 16, scope: !18620)
!18622 = !DILocation(line: 105, column: 24, scope: !18620)
!18623 = !DILocation(line: 105, column: 47, scope: !18620)
!18624 = !DILocation(line: 105, column: 7, scope: !18620)
!18625 = !DILocation(line: 106, column: 7, scope: !18620)
!18626 = !DILocation(line: 109, column: 16, scope: !18620)
!18627 = !DILocation(line: 109, column: 24, scope: !18620)
!18628 = !DILocation(line: 109, column: 54, scope: !18620)
!18629 = !DILocation(line: 109, column: 66, scope: !18620)
!18630 = !DILocation(line: 109, column: 7, scope: !18620)
!18631 = !DILocation(line: 110, column: 7, scope: !18620)
!18632 = !DILocation(line: 113, column: 16, scope: !18620)
!18633 = !DILocation(line: 113, column: 24, scope: !18620)
!18634 = !DILocation(line: 114, column: 16, scope: !18620)
!18635 = !DILocation(line: 114, column: 28, scope: !18620)
!18636 = !DILocation(line: 114, column: 40, scope: !18620)
!18637 = !DILocation(line: 113, column: 7, scope: !18620)
!18638 = !DILocation(line: 115, column: 7, scope: !18620)
!18639 = !DILocation(line: 120, column: 16, scope: !18620)
!18640 = !DILocation(line: 120, column: 24, scope: !18620)
!18641 = !DILocation(line: 121, column: 16, scope: !18620)
!18642 = !DILocation(line: 121, column: 28, scope: !18620)
!18643 = !DILocation(line: 121, column: 40, scope: !18620)
!18644 = !DILocation(line: 121, column: 52, scope: !18620)
!18645 = !DILocation(line: 120, column: 7, scope: !18620)
!18646 = !DILocation(line: 122, column: 7, scope: !18620)
!18647 = !DILocation(line: 127, column: 16, scope: !18620)
!18648 = !DILocation(line: 127, column: 24, scope: !18620)
!18649 = !DILocation(line: 128, column: 16, scope: !18620)
!18650 = !DILocation(line: 128, column: 28, scope: !18620)
!18651 = !DILocation(line: 128, column: 40, scope: !18620)
!18652 = !DILocation(line: 128, column: 52, scope: !18620)
!18653 = !DILocation(line: 128, column: 64, scope: !18620)
!18654 = !DILocation(line: 127, column: 7, scope: !18620)
!18655 = !DILocation(line: 129, column: 7, scope: !18620)
!18656 = !DILocation(line: 134, column: 16, scope: !18620)
!18657 = !DILocation(line: 134, column: 24, scope: !18620)
!18658 = !DILocation(line: 135, column: 16, scope: !18620)
!18659 = !DILocation(line: 135, column: 28, scope: !18620)
!18660 = !DILocation(line: 135, column: 40, scope: !18620)
!18661 = !DILocation(line: 135, column: 52, scope: !18620)
!18662 = !DILocation(line: 135, column: 64, scope: !18620)
!18663 = !DILocation(line: 136, column: 16, scope: !18620)
!18664 = !DILocation(line: 134, column: 7, scope: !18620)
!18665 = !DILocation(line: 137, column: 7, scope: !18620)
!18666 = !DILocation(line: 142, column: 16, scope: !18620)
!18667 = !DILocation(line: 142, column: 24, scope: !18620)
!18668 = !DILocation(line: 143, column: 16, scope: !18620)
!18669 = !DILocation(line: 143, column: 28, scope: !18620)
!18670 = !DILocation(line: 143, column: 40, scope: !18620)
!18671 = !DILocation(line: 143, column: 52, scope: !18620)
!18672 = !DILocation(line: 143, column: 64, scope: !18620)
!18673 = !DILocation(line: 144, column: 16, scope: !18620)
!18674 = !DILocation(line: 144, column: 28, scope: !18620)
!18675 = !DILocation(line: 142, column: 7, scope: !18620)
!18676 = !DILocation(line: 145, column: 7, scope: !18620)
!18677 = !DILocation(line: 150, column: 16, scope: !18620)
!18678 = !DILocation(line: 150, column: 24, scope: !18620)
!18679 = !DILocation(line: 152, column: 17, scope: !18620)
!18680 = !DILocation(line: 152, column: 29, scope: !18620)
!18681 = !DILocation(line: 152, column: 41, scope: !18620)
!18682 = !DILocation(line: 152, column: 53, scope: !18620)
!18683 = !DILocation(line: 152, column: 65, scope: !18620)
!18684 = !DILocation(line: 153, column: 17, scope: !18620)
!18685 = !DILocation(line: 153, column: 29, scope: !18620)
!18686 = !DILocation(line: 153, column: 41, scope: !18620)
!18687 = !DILocation(line: 150, column: 7, scope: !18620)
!18688 = !DILocation(line: 154, column: 7, scope: !18620)
!18689 = !DILocation(line: 159, column: 16, scope: !18620)
!18690 = !DILocation(line: 159, column: 24, scope: !18620)
!18691 = !DILocation(line: 161, column: 16, scope: !18620)
!18692 = !DILocation(line: 161, column: 28, scope: !18620)
!18693 = !DILocation(line: 161, column: 40, scope: !18620)
!18694 = !DILocation(line: 161, column: 52, scope: !18620)
!18695 = !DILocation(line: 161, column: 64, scope: !18620)
!18696 = !DILocation(line: 162, column: 16, scope: !18620)
!18697 = !DILocation(line: 162, column: 28, scope: !18620)
!18698 = !DILocation(line: 162, column: 40, scope: !18620)
!18699 = !DILocation(line: 162, column: 52, scope: !18620)
!18700 = !DILocation(line: 159, column: 7, scope: !18620)
!18701 = !DILocation(line: 163, column: 7, scope: !18620)
!18702 = !DILocation(line: 170, column: 16, scope: !18620)
!18703 = !DILocation(line: 170, column: 24, scope: !18620)
!18704 = !DILocation(line: 172, column: 17, scope: !18620)
!18705 = !DILocation(line: 172, column: 29, scope: !18620)
!18706 = !DILocation(line: 172, column: 41, scope: !18620)
!18707 = !DILocation(line: 172, column: 53, scope: !18620)
!18708 = !DILocation(line: 172, column: 65, scope: !18620)
!18709 = !DILocation(line: 173, column: 17, scope: !18620)
!18710 = !DILocation(line: 173, column: 29, scope: !18620)
!18711 = !DILocation(line: 173, column: 41, scope: !18620)
!18712 = !DILocation(line: 173, column: 53, scope: !18620)
!18713 = !DILocation(line: 170, column: 7, scope: !18620)
!18714 = !DILocation(line: 174, column: 7, scope: !18620)
!18715 = !DILocation(line: 176, column: 1, scope: !18583)
!18716 = distinct !DISubprogram(name: "version_etc_ar", scope: !18584, file: !18584, line: 183, type: !1984, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1944, retainedNodes: !209)
!18717 = !DILocalVariable(name: "stream", arg: 1, scope: !18716, file: !18584, line: 183, type: !1949)
!18718 = !DILocation(line: 183, column: 23, scope: !18716)
!18719 = !DILocalVariable(name: "command_name", arg: 2, scope: !18716, file: !18584, line: 184, type: !180)
!18720 = !DILocation(line: 184, column: 29, scope: !18716)
!18721 = !DILocalVariable(name: "package", arg: 3, scope: !18716, file: !18584, line: 184, type: !180)
!18722 = !DILocation(line: 184, column: 55, scope: !18716)
!18723 = !DILocalVariable(name: "version", arg: 4, scope: !18716, file: !18584, line: 185, type: !180)
!18724 = !DILocation(line: 185, column: 29, scope: !18716)
!18725 = !DILocalVariable(name: "authors", arg: 5, scope: !18716, file: !18584, line: 185, type: !1346)
!18726 = !DILocation(line: 185, column: 59, scope: !18716)
!18727 = !DILocalVariable(name: "n_authors", scope: !18716, file: !18584, line: 187, type: !55)
!18728 = !DILocation(line: 187, column: 10, scope: !18716)
!18729 = !DILocation(line: 189, column: 18, scope: !18730)
!18730 = distinct !DILexicalBlock(scope: !18716, file: !18584, line: 189, column: 3)
!18731 = !DILocation(line: 189, column: 8, scope: !18730)
!18732 = !DILocation(line: 189, column: 23, scope: !18733)
!18733 = distinct !DILexicalBlock(scope: !18730, file: !18584, line: 189, column: 3)
!18734 = !DILocation(line: 189, column: 31, scope: !18733)
!18735 = !DILocation(line: 189, column: 3, scope: !18730)
!18736 = !DILocation(line: 189, column: 52, scope: !18733)
!18737 = !DILocation(line: 189, column: 3, scope: !18733)
!18738 = distinct !{!18738, !18735, !18739}
!18739 = !DILocation(line: 190, column: 5, scope: !18730)
!18740 = !DILocation(line: 191, column: 20, scope: !18716)
!18741 = !DILocation(line: 191, column: 28, scope: !18716)
!18742 = !DILocation(line: 191, column: 42, scope: !18716)
!18743 = !DILocation(line: 191, column: 51, scope: !18716)
!18744 = !DILocation(line: 191, column: 60, scope: !18716)
!18745 = !DILocation(line: 191, column: 69, scope: !18716)
!18746 = !DILocation(line: 191, column: 3, scope: !18716)
!18747 = !DILocation(line: 192, column: 1, scope: !18716)
!18748 = distinct !DISubprogram(name: "version_etc_va", scope: !18584, file: !18584, line: 199, type: !1986, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1944, retainedNodes: !209)
!18749 = !DILocalVariable(name: "stream", arg: 1, scope: !18748, file: !18584, line: 199, type: !1949)
!18750 = !DILocation(line: 199, column: 23, scope: !18748)
!18751 = !DILocalVariable(name: "command_name", arg: 2, scope: !18748, file: !18584, line: 200, type: !180)
!18752 = !DILocation(line: 200, column: 29, scope: !18748)
!18753 = !DILocalVariable(name: "package", arg: 3, scope: !18748, file: !18584, line: 200, type: !180)
!18754 = !DILocation(line: 200, column: 55, scope: !18748)
!18755 = !DILocalVariable(name: "version", arg: 4, scope: !18748, file: !18584, line: 201, type: !180)
!18756 = !DILocation(line: 201, column: 29, scope: !18748)
!18757 = !DILocalVariable(name: "authors", arg: 5, scope: !18748, file: !18584, line: 201, type: !1988)
!18758 = !DILocation(line: 201, column: 46, scope: !18748)
!18759 = !DILocalVariable(name: "n_authors", scope: !18748, file: !18584, line: 203, type: !55)
!18760 = !DILocation(line: 203, column: 10, scope: !18748)
!18761 = !DILocalVariable(name: "authtab", scope: !18748, file: !18584, line: 204, type: !1995)
!18762 = !DILocation(line: 204, column: 15, scope: !18748)
!18763 = !DILocation(line: 206, column: 18, scope: !18764)
!18764 = distinct !DILexicalBlock(scope: !18748, file: !18584, line: 206, column: 3)
!18765 = !DILocation(line: 206, column: 8, scope: !18764)
!18766 = !DILocation(line: 207, column: 8, scope: !18767)
!18767 = distinct !DILexicalBlock(scope: !18764, file: !18584, line: 206, column: 3)
!18768 = !DILocation(line: 207, column: 18, scope: !18767)
!18769 = !DILocation(line: 208, column: 10, scope: !18767)
!18770 = !DILocation(line: 208, column: 35, scope: !18767)
!18771 = !DILocation(line: 208, column: 22, scope: !18767)
!18772 = !DILocation(line: 208, column: 14, scope: !18767)
!18773 = !DILocation(line: 208, column: 33, scope: !18767)
!18774 = !DILocation(line: 208, column: 67, scope: !18767)
!18775 = !DILocation(line: 0, scope: !18767)
!18776 = !DILocation(line: 206, column: 3, scope: !18764)
!18777 = !DILocation(line: 209, column: 17, scope: !18767)
!18778 = !DILocation(line: 206, column: 3, scope: !18767)
!18779 = distinct !{!18779, !18776, !18780}
!18780 = !DILocation(line: 210, column: 5, scope: !18764)
!18781 = !DILocation(line: 211, column: 20, scope: !18748)
!18782 = !DILocation(line: 211, column: 28, scope: !18748)
!18783 = !DILocation(line: 211, column: 42, scope: !18748)
!18784 = !DILocation(line: 211, column: 51, scope: !18748)
!18785 = !DILocation(line: 212, column: 20, scope: !18748)
!18786 = !DILocation(line: 212, column: 29, scope: !18748)
!18787 = !DILocation(line: 211, column: 3, scope: !18748)
!18788 = !DILocation(line: 213, column: 1, scope: !18748)
!18789 = distinct !DISubprogram(name: "version_etc", scope: !18584, file: !18584, line: 230, type: !18790, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1944, retainedNodes: !209)
!18790 = !DISubroutineType(types: !18791)
!18791 = !{null, !1949, !180, !180, !180, null}
!18792 = !DILocalVariable(name: "stream", arg: 1, scope: !18789, file: !18584, line: 230, type: !1949)
!18793 = !DILocation(line: 230, column: 20, scope: !18789)
!18794 = !DILocalVariable(name: "command_name", arg: 2, scope: !18789, file: !18584, line: 231, type: !180)
!18795 = !DILocation(line: 231, column: 26, scope: !18789)
!18796 = !DILocalVariable(name: "package", arg: 3, scope: !18789, file: !18584, line: 231, type: !180)
!18797 = !DILocation(line: 231, column: 52, scope: !18789)
!18798 = !DILocalVariable(name: "version", arg: 4, scope: !18789, file: !18584, line: 232, type: !180)
!18799 = !DILocation(line: 232, column: 26, scope: !18789)
!18800 = !DILocalVariable(name: "authors", scope: !18789, file: !18584, line: 234, type: !1998)
!18801 = !DILocation(line: 234, column: 11, scope: !18789)
!18802 = !DILocation(line: 236, column: 3, scope: !18789)
!18803 = !DILocation(line: 237, column: 19, scope: !18789)
!18804 = !DILocation(line: 237, column: 27, scope: !18789)
!18805 = !DILocation(line: 237, column: 41, scope: !18789)
!18806 = !DILocation(line: 237, column: 50, scope: !18789)
!18807 = !DILocation(line: 237, column: 59, scope: !18789)
!18808 = !DILocation(line: 237, column: 3, scope: !18789)
!18809 = !DILocation(line: 238, column: 3, scope: !18789)
!18810 = !DILocation(line: 239, column: 1, scope: !18789)
!18811 = distinct !DISubprogram(name: "emit_bug_reporting_address", scope: !18584, file: !18584, line: 242, type: !200, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1944, retainedNodes: !209)
!18812 = !DILocation(line: 244, column: 3, scope: !18811)
!18813 = !DILocation(line: 249, column: 11, scope: !18811)
!18814 = !DILocation(line: 249, column: 3, scope: !18811)
!18815 = !DILocation(line: 255, column: 11, scope: !18811)
!18816 = !DILocation(line: 255, column: 3, scope: !18811)
!18817 = !DILocation(line: 260, column: 11, scope: !18811)
!18818 = !DILocation(line: 260, column: 3, scope: !18811)
!18819 = !DILocation(line: 262, column: 1, scope: !18811)
!18820 = !DILocation(line: 37, column: 9, scope: !18821)
!18821 = distinct !DILexicalBlock(scope: !1329, file: !1330, line: 37, column: 7)
!18822 = !DILocation(line: 37, column: 7, scope: !1329)
!18823 = !DILocalVariable(name: "can", scope: !18824, file: !1330, line: 39, type: !142)
!18824 = distinct !DILexicalBlock(scope: !18821, file: !1330, line: 38, column: 5)
!18825 = !DILocation(line: 39, column: 12, scope: !18824)
!18826 = !DILocation(line: 44, column: 14, scope: !18824)
!18827 = !DILocation(line: 44, column: 25, scope: !18824)
!18828 = !DILocation(line: 44, column: 11, scope: !18824)
!18829 = !DILocation(line: 46, column: 19, scope: !18824)
!18830 = !DILocation(line: 46, column: 17, scope: !18824)
!18831 = !DILocation(line: 47, column: 19, scope: !18824)
!18832 = !DILocation(line: 48, column: 5, scope: !18824)
!18833 = !DILocation(line: 50, column: 10, scope: !1329)
!18834 = !DILocation(line: 50, column: 3, scope: !1329)
!18835 = distinct !DISubprogram(name: "xnmalloc", scope: !18836, file: !18836, line: 99, type: !2005, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2002, retainedNodes: !209)
!18836 = !DIFile(filename: "./lib/xalloc.h", directory: "/home/mbarbar/clone/coreutils")
!18837 = !DILocalVariable(name: "n", arg: 1, scope: !18835, file: !18836, line: 99, type: !55)
!18838 = !DILocation(line: 99, column: 18, scope: !18835)
!18839 = !DILocalVariable(name: "s", arg: 2, scope: !18835, file: !18836, line: 99, type: !55)
!18840 = !DILocation(line: 99, column: 28, scope: !18835)
!18841 = !DILocation(line: 101, column: 7, scope: !18842)
!18842 = distinct !DILexicalBlock(scope: !18835, file: !18836, line: 101, column: 7)
!18843 = !DILocation(line: 101, column: 7, scope: !18835)
!18844 = !DILocation(line: 102, column: 5, scope: !18842)
!18845 = !DILocation(line: 103, column: 19, scope: !18835)
!18846 = !DILocation(line: 103, column: 23, scope: !18835)
!18847 = !DILocation(line: 103, column: 21, scope: !18835)
!18848 = !DILocation(line: 103, column: 10, scope: !18835)
!18849 = !DILocation(line: 103, column: 3, scope: !18835)
!18850 = distinct !DISubprogram(name: "xmalloc", scope: !18851, file: !18851, line: 39, type: !2013, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2002, retainedNodes: !209)
!18851 = !DIFile(filename: "lib/xmalloc.c", directory: "/home/mbarbar/clone/coreutils")
!18852 = !DILocalVariable(name: "n", arg: 1, scope: !18850, file: !18851, line: 39, type: !55)
!18853 = !DILocation(line: 39, column: 17, scope: !18850)
!18854 = !DILocalVariable(name: "p", scope: !18850, file: !18851, line: 41, type: !53)
!18855 = !DILocation(line: 41, column: 9, scope: !18850)
!18856 = !DILocation(line: 41, column: 21, scope: !18850)
!18857 = !DILocation(line: 41, column: 13, scope: !18850)
!18858 = !DILocation(line: 42, column: 8, scope: !18859)
!18859 = distinct !DILexicalBlock(scope: !18850, file: !18851, line: 42, column: 7)
!18860 = !DILocation(line: 42, column: 10, scope: !18859)
!18861 = !DILocation(line: 42, column: 13, scope: !18859)
!18862 = !DILocation(line: 42, column: 15, scope: !18859)
!18863 = !DILocation(line: 42, column: 7, scope: !18850)
!18864 = !DILocation(line: 43, column: 5, scope: !18859)
!18865 = !DILocation(line: 44, column: 10, scope: !18850)
!18866 = !DILocation(line: 44, column: 3, scope: !18850)
!18867 = distinct !DISubprogram(name: "xnrealloc", scope: !18836, file: !18836, line: 112, type: !2007, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2002, retainedNodes: !209)
!18868 = !DILocalVariable(name: "p", arg: 1, scope: !18867, file: !18836, line: 112, type: !53)
!18869 = !DILocation(line: 112, column: 18, scope: !18867)
!18870 = !DILocalVariable(name: "n", arg: 2, scope: !18867, file: !18836, line: 112, type: !55)
!18871 = !DILocation(line: 112, column: 28, scope: !18867)
!18872 = !DILocalVariable(name: "s", arg: 3, scope: !18867, file: !18836, line: 112, type: !55)
!18873 = !DILocation(line: 112, column: 38, scope: !18867)
!18874 = !DILocation(line: 114, column: 7, scope: !18875)
!18875 = distinct !DILexicalBlock(scope: !18867, file: !18836, line: 114, column: 7)
!18876 = !DILocation(line: 114, column: 7, scope: !18867)
!18877 = !DILocation(line: 115, column: 5, scope: !18875)
!18878 = !DILocation(line: 116, column: 20, scope: !18867)
!18879 = !DILocation(line: 116, column: 23, scope: !18867)
!18880 = !DILocation(line: 116, column: 27, scope: !18867)
!18881 = !DILocation(line: 116, column: 25, scope: !18867)
!18882 = !DILocation(line: 116, column: 10, scope: !18867)
!18883 = !DILocation(line: 116, column: 3, scope: !18867)
!18884 = distinct !DISubprogram(name: "xrealloc", scope: !18851, file: !18851, line: 51, type: !2015, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2002, retainedNodes: !209)
!18885 = !DILocalVariable(name: "p", arg: 1, scope: !18884, file: !18851, line: 51, type: !53)
!18886 = !DILocation(line: 51, column: 17, scope: !18884)
!18887 = !DILocalVariable(name: "n", arg: 2, scope: !18884, file: !18851, line: 51, type: !55)
!18888 = !DILocation(line: 51, column: 27, scope: !18884)
!18889 = !DILocation(line: 53, column: 8, scope: !18890)
!18890 = distinct !DILexicalBlock(scope: !18884, file: !18851, line: 53, column: 7)
!18891 = !DILocation(line: 53, column: 10, scope: !18890)
!18892 = !DILocation(line: 53, column: 13, scope: !18890)
!18893 = !DILocation(line: 53, column: 7, scope: !18884)
!18894 = !DILocation(line: 57, column: 13, scope: !18895)
!18895 = distinct !DILexicalBlock(scope: !18890, file: !18851, line: 54, column: 5)
!18896 = !DILocation(line: 57, column: 7, scope: !18895)
!18897 = !DILocation(line: 58, column: 7, scope: !18895)
!18898 = !DILocation(line: 61, column: 16, scope: !18884)
!18899 = !DILocation(line: 61, column: 19, scope: !18884)
!18900 = !DILocation(line: 61, column: 7, scope: !18884)
!18901 = !DILocation(line: 61, column: 5, scope: !18884)
!18902 = !DILocation(line: 62, column: 8, scope: !18903)
!18903 = distinct !DILexicalBlock(scope: !18884, file: !18851, line: 62, column: 7)
!18904 = !DILocation(line: 62, column: 10, scope: !18903)
!18905 = !DILocation(line: 62, column: 13, scope: !18903)
!18906 = !DILocation(line: 62, column: 7, scope: !18884)
!18907 = !DILocation(line: 63, column: 5, scope: !18903)
!18908 = !DILocation(line: 64, column: 10, scope: !18884)
!18909 = !DILocation(line: 64, column: 3, scope: !18884)
!18910 = !DILocation(line: 65, column: 1, scope: !18884)
!18911 = distinct !DISubprogram(name: "x2nrealloc", scope: !18836, file: !18836, line: 174, type: !2009, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2002, retainedNodes: !209)
!18912 = !DILocalVariable(name: "p", arg: 1, scope: !18911, file: !18836, line: 174, type: !53)
!18913 = !DILocation(line: 174, column: 19, scope: !18911)
!18914 = !DILocalVariable(name: "pn", arg: 2, scope: !18911, file: !18836, line: 174, type: !714)
!18915 = !DILocation(line: 174, column: 30, scope: !18911)
!18916 = !DILocalVariable(name: "s", arg: 3, scope: !18911, file: !18836, line: 174, type: !55)
!18917 = !DILocation(line: 174, column: 41, scope: !18911)
!18918 = !DILocalVariable(name: "n", scope: !18911, file: !18836, line: 176, type: !55)
!18919 = !DILocation(line: 176, column: 10, scope: !18911)
!18920 = !DILocation(line: 176, column: 15, scope: !18911)
!18921 = !DILocation(line: 176, column: 14, scope: !18911)
!18922 = !DILocation(line: 178, column: 9, scope: !18923)
!18923 = distinct !DILexicalBlock(scope: !18911, file: !18836, line: 178, column: 7)
!18924 = !DILocation(line: 178, column: 7, scope: !18911)
!18925 = !DILocation(line: 180, column: 13, scope: !18926)
!18926 = distinct !DILexicalBlock(scope: !18927, file: !18836, line: 180, column: 11)
!18927 = distinct !DILexicalBlock(scope: !18923, file: !18836, line: 179, column: 5)
!18928 = !DILocation(line: 180, column: 11, scope: !18927)
!18929 = !DILocation(line: 188, column: 32, scope: !18930)
!18930 = distinct !DILexicalBlock(scope: !18926, file: !18836, line: 181, column: 9)
!18931 = !DILocation(line: 188, column: 30, scope: !18930)
!18932 = !DILocation(line: 188, column: 13, scope: !18930)
!18933 = !DILocation(line: 189, column: 17, scope: !18930)
!18934 = !DILocation(line: 189, column: 16, scope: !18930)
!18935 = !DILocation(line: 189, column: 13, scope: !18930)
!18936 = !DILocation(line: 190, column: 9, scope: !18930)
!18937 = !DILocation(line: 191, column: 11, scope: !18938)
!18938 = distinct !DILexicalBlock(scope: !18927, file: !18836, line: 191, column: 11)
!18939 = !DILocation(line: 191, column: 11, scope: !18927)
!18940 = !DILocation(line: 192, column: 9, scope: !18938)
!18941 = !DILocation(line: 193, column: 5, scope: !18927)
!18942 = !DILocation(line: 200, column: 71, scope: !18943)
!18943 = distinct !DILexicalBlock(scope: !18944, file: !18836, line: 200, column: 11)
!18944 = distinct !DILexicalBlock(scope: !18923, file: !18836, line: 195, column: 5)
!18945 = !DILocation(line: 200, column: 69, scope: !18943)
!18946 = !DILocation(line: 201, column: 14, scope: !18943)
!18947 = !DILocation(line: 201, column: 11, scope: !18943)
!18948 = !DILocation(line: 200, column: 11, scope: !18944)
!18949 = !DILocation(line: 202, column: 9, scope: !18943)
!18950 = !DILocation(line: 203, column: 12, scope: !18944)
!18951 = !DILocation(line: 203, column: 14, scope: !18944)
!18952 = !DILocation(line: 203, column: 18, scope: !18944)
!18953 = !DILocation(line: 203, column: 9, scope: !18944)
!18954 = !DILocation(line: 206, column: 9, scope: !18911)
!18955 = !DILocation(line: 206, column: 4, scope: !18911)
!18956 = !DILocation(line: 206, column: 7, scope: !18911)
!18957 = !DILocation(line: 207, column: 20, scope: !18911)
!18958 = !DILocation(line: 207, column: 23, scope: !18911)
!18959 = !DILocation(line: 207, column: 27, scope: !18911)
!18960 = !DILocation(line: 207, column: 25, scope: !18911)
!18961 = !DILocation(line: 207, column: 10, scope: !18911)
!18962 = !DILocation(line: 207, column: 3, scope: !18911)
!18963 = distinct !DISubprogram(name: "xcharalloc", scope: !18836, file: !18836, line: 216, type: !2011, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2002, retainedNodes: !209)
!18964 = !DILocalVariable(name: "n", arg: 1, scope: !18963, file: !18836, line: 216, type: !55)
!18965 = !DILocation(line: 216, column: 20, scope: !18963)
!18966 = !DILocation(line: 218, column: 10, scope: !18963)
!18967 = !DILocation(line: 218, column: 3, scope: !18963)
!18968 = distinct !DISubprogram(name: "x2realloc", scope: !18851, file: !18851, line: 74, type: !2017, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2002, retainedNodes: !209)
!18969 = !DILocalVariable(name: "p", arg: 1, scope: !18968, file: !18851, line: 74, type: !53)
!18970 = !DILocation(line: 74, column: 18, scope: !18968)
!18971 = !DILocalVariable(name: "pn", arg: 2, scope: !18968, file: !18851, line: 74, type: !714)
!18972 = !DILocation(line: 74, column: 29, scope: !18968)
!18973 = !DILocation(line: 76, column: 22, scope: !18968)
!18974 = !DILocation(line: 76, column: 25, scope: !18968)
!18975 = !DILocation(line: 76, column: 10, scope: !18968)
!18976 = !DILocation(line: 76, column: 3, scope: !18968)
!18977 = distinct !DISubprogram(name: "xzalloc", scope: !18851, file: !18851, line: 84, type: !2013, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2002, retainedNodes: !209)
!18978 = !DILocalVariable(name: "s", arg: 1, scope: !18977, file: !18851, line: 84, type: !55)
!18979 = !DILocation(line: 84, column: 17, scope: !18977)
!18980 = !DILocation(line: 86, column: 27, scope: !18977)
!18981 = !DILocation(line: 86, column: 18, scope: !18977)
!18982 = !DILocation(line: 86, column: 34, scope: !18977)
!18983 = !DILocation(line: 86, column: 10, scope: !18977)
!18984 = !DILocation(line: 86, column: 3, scope: !18977)
!18985 = distinct !DISubprogram(name: "xcalloc", scope: !18851, file: !18851, line: 93, type: !2005, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2002, retainedNodes: !209)
!18986 = !DILocalVariable(name: "n", arg: 1, scope: !18985, file: !18851, line: 93, type: !55)
!18987 = !DILocation(line: 93, column: 17, scope: !18985)
!18988 = !DILocalVariable(name: "s", arg: 2, scope: !18985, file: !18851, line: 93, type: !55)
!18989 = !DILocation(line: 93, column: 27, scope: !18985)
!18990 = !DILocalVariable(name: "p", scope: !18985, file: !18851, line: 95, type: !53)
!18991 = !DILocation(line: 95, column: 9, scope: !18985)
!18992 = !DILocation(line: 100, column: 7, scope: !18993)
!18993 = distinct !DILexicalBlock(scope: !18985, file: !18851, line: 100, column: 7)
!18994 = !DILocation(line: 101, column: 7, scope: !18993)
!18995 = !DILocation(line: 101, column: 26, scope: !18993)
!18996 = !DILocation(line: 101, column: 29, scope: !18993)
!18997 = !DILocation(line: 101, column: 18, scope: !18993)
!18998 = !DILocation(line: 101, column: 16, scope: !18993)
!18999 = !DILocation(line: 100, column: 7, scope: !18985)
!19000 = !DILocation(line: 102, column: 5, scope: !18993)
!19001 = !DILocation(line: 103, column: 10, scope: !18985)
!19002 = !DILocation(line: 103, column: 3, scope: !18985)
!19003 = distinct !DISubprogram(name: "xmemdup", scope: !18851, file: !18851, line: 111, type: !513, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2002, retainedNodes: !209)
!19004 = !DILocalVariable(name: "p", arg: 1, scope: !19003, file: !18851, line: 111, type: !515)
!19005 = !DILocation(line: 111, column: 22, scope: !19003)
!19006 = !DILocalVariable(name: "s", arg: 2, scope: !19003, file: !18851, line: 111, type: !55)
!19007 = !DILocation(line: 111, column: 32, scope: !19003)
!19008 = !DILocation(line: 113, column: 27, scope: !19003)
!19009 = !DILocation(line: 113, column: 18, scope: !19003)
!19010 = !DILocation(line: 113, column: 31, scope: !19003)
!19011 = !DILocation(line: 113, column: 34, scope: !19003)
!19012 = !DILocation(line: 113, column: 10, scope: !19003)
!19013 = !DILocation(line: 113, column: 3, scope: !19003)
!19014 = distinct !DISubprogram(name: "xstrdup", scope: !18851, file: !18851, line: 119, type: !218, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2002, retainedNodes: !209)
!19015 = !DILocalVariable(name: "string", arg: 1, scope: !19014, file: !18851, line: 119, type: !180)
!19016 = !DILocation(line: 119, column: 22, scope: !19014)
!19017 = !DILocation(line: 121, column: 19, scope: !19014)
!19018 = !DILocation(line: 121, column: 35, scope: !19014)
!19019 = !DILocation(line: 121, column: 27, scope: !19014)
!19020 = !DILocation(line: 121, column: 43, scope: !19014)
!19021 = !DILocation(line: 121, column: 10, scope: !19014)
!19022 = !DILocation(line: 121, column: 3, scope: !19014)
!19023 = distinct !DISubprogram(name: "xalloc_die", scope: !19024, file: !19024, line: 32, type: !200, scopeLine: 33, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2019, retainedNodes: !209)
!19024 = !DIFile(filename: "lib/xalloc-die.c", directory: "/home/mbarbar/clone/coreutils")
!19025 = !DILocation(line: 34, column: 10, scope: !19023)
!19026 = !DILocation(line: 34, column: 33, scope: !19023)
!19027 = !DILocation(line: 34, column: 3, scope: !19023)
!19028 = !DILocation(line: 40, column: 3, scope: !19023)
!19029 = distinct !DISubprogram(name: "xstrtoul", scope: !19030, file: !19030, line: 76, type: !2034, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2022, retainedNodes: !209)
!19030 = !DIFile(filename: "./lib/xstrtol.c", directory: "/home/mbarbar/clone/coreutils")
!19031 = !DILocalVariable(name: "s", arg: 1, scope: !19029, file: !19030, line: 76, type: !180)
!19032 = !DILocation(line: 76, column: 24, scope: !19029)
!19033 = !DILocalVariable(name: "ptr", arg: 2, scope: !19029, file: !19030, line: 76, type: !184)
!19034 = !DILocation(line: 76, column: 34, scope: !19029)
!19035 = !DILocalVariable(name: "strtol_base", arg: 3, scope: !19029, file: !19030, line: 76, type: !7)
!19036 = !DILocation(line: 76, column: 43, scope: !19029)
!19037 = !DILocalVariable(name: "val", arg: 4, scope: !19029, file: !19030, line: 77, type: !2037)
!19038 = !DILocation(line: 77, column: 24, scope: !19029)
!19039 = !DILocalVariable(name: "valid_suffixes", arg: 5, scope: !19029, file: !19030, line: 77, type: !180)
!19040 = !DILocation(line: 77, column: 41, scope: !19029)
!19041 = !DILocalVariable(name: "t_ptr", scope: !19029, file: !19030, line: 79, type: !9)
!19042 = !DILocation(line: 79, column: 9, scope: !19029)
!19043 = !DILocalVariable(name: "p", scope: !19029, file: !19030, line: 80, type: !184)
!19044 = !DILocation(line: 80, column: 10, scope: !19029)
!19045 = !DILocalVariable(name: "tmp", scope: !19029, file: !19030, line: 81, type: !57)
!19046 = !DILocation(line: 81, column: 14, scope: !19029)
!19047 = !DILocalVariable(name: "err", scope: !19029, file: !19030, line: 82, type: !2036)
!19048 = !DILocation(line: 82, column: 16, scope: !19029)
!19049 = !DILocation(line: 84, column: 3, scope: !19050)
!19050 = distinct !DILexicalBlock(scope: !19051, file: !19030, line: 84, column: 3)
!19051 = distinct !DILexicalBlock(scope: !19029, file: !19030, line: 84, column: 3)
!19052 = !DILocation(line: 84, column: 3, scope: !19051)
!19053 = !DILocation(line: 86, column: 8, scope: !19029)
!19054 = !DILocation(line: 86, column: 14, scope: !19029)
!19055 = !DILocation(line: 86, column: 5, scope: !19029)
!19056 = !DILocation(line: 88, column: 3, scope: !19029)
!19057 = !DILocation(line: 88, column: 9, scope: !19029)
!19058 = !DILocalVariable(name: "q", scope: !19059, file: !19030, line: 92, type: !180)
!19059 = distinct !DILexicalBlock(scope: !19060, file: !19030, line: 91, column: 5)
!19060 = distinct !DILexicalBlock(scope: !19029, file: !19030, line: 90, column: 7)
!19061 = !DILocation(line: 92, column: 19, scope: !19059)
!19062 = !DILocation(line: 92, column: 23, scope: !19059)
!19063 = !DILocalVariable(name: "ch", scope: !19059, file: !19030, line: 93, type: !556)
!19064 = !DILocation(line: 93, column: 21, scope: !19059)
!19065 = !DILocation(line: 93, column: 27, scope: !19059)
!19066 = !DILocation(line: 93, column: 26, scope: !19059)
!19067 = !DILocation(line: 94, column: 7, scope: !19059)
!19068 = !DILocation(line: 94, column: 14, scope: !19059)
!19069 = !DILocation(line: 95, column: 15, scope: !19059)
!19070 = !DILocation(line: 95, column: 14, scope: !19059)
!19071 = !DILocation(line: 95, column: 12, scope: !19059)
!19072 = distinct !{!19072, !19067, !19073}
!19073 = !DILocation(line: 95, column: 17, scope: !19059)
!19074 = !DILocation(line: 96, column: 11, scope: !19075)
!19075 = distinct !DILexicalBlock(scope: !19059, file: !19030, line: 96, column: 11)
!19076 = !DILocation(line: 96, column: 14, scope: !19075)
!19077 = !DILocation(line: 96, column: 11, scope: !19059)
!19078 = !DILocation(line: 97, column: 9, scope: !19075)
!19079 = !DILocation(line: 100, column: 19, scope: !19029)
!19080 = !DILocation(line: 100, column: 22, scope: !19029)
!19081 = !DILocation(line: 100, column: 25, scope: !19029)
!19082 = !DILocation(line: 100, column: 9, scope: !19029)
!19083 = !DILocation(line: 100, column: 7, scope: !19029)
!19084 = !DILocation(line: 102, column: 8, scope: !19085)
!19085 = distinct !DILexicalBlock(scope: !19029, file: !19030, line: 102, column: 7)
!19086 = !DILocation(line: 102, column: 7, scope: !19085)
!19087 = !DILocation(line: 102, column: 13, scope: !19085)
!19088 = !DILocation(line: 102, column: 10, scope: !19085)
!19089 = !DILocation(line: 102, column: 7, scope: !19029)
!19090 = !DILocation(line: 106, column: 11, scope: !19091)
!19091 = distinct !DILexicalBlock(scope: !19092, file: !19030, line: 106, column: 11)
!19092 = distinct !DILexicalBlock(scope: !19085, file: !19030, line: 103, column: 5)
!19093 = !DILocation(line: 106, column: 26, scope: !19091)
!19094 = !DILocation(line: 106, column: 31, scope: !19091)
!19095 = !DILocation(line: 106, column: 30, scope: !19091)
!19096 = !DILocation(line: 106, column: 29, scope: !19091)
!19097 = !DILocation(line: 106, column: 33, scope: !19091)
!19098 = !DILocation(line: 106, column: 44, scope: !19091)
!19099 = !DILocation(line: 106, column: 62, scope: !19091)
!19100 = !DILocation(line: 106, column: 61, scope: !19091)
!19101 = !DILocation(line: 106, column: 60, scope: !19091)
!19102 = !DILocation(line: 106, column: 36, scope: !19091)
!19103 = !DILocation(line: 106, column: 11, scope: !19092)
!19104 = !DILocation(line: 107, column: 13, scope: !19091)
!19105 = !DILocation(line: 107, column: 9, scope: !19091)
!19106 = !DILocation(line: 109, column: 9, scope: !19091)
!19107 = !DILocation(line: 110, column: 5, scope: !19092)
!19108 = !DILocation(line: 111, column: 12, scope: !19109)
!19109 = distinct !DILexicalBlock(scope: !19085, file: !19030, line: 111, column: 12)
!19110 = !DILocation(line: 111, column: 18, scope: !19109)
!19111 = !DILocation(line: 111, column: 12, scope: !19085)
!19112 = !DILocation(line: 113, column: 11, scope: !19113)
!19113 = distinct !DILexicalBlock(scope: !19114, file: !19030, line: 113, column: 11)
!19114 = distinct !DILexicalBlock(scope: !19109, file: !19030, line: 112, column: 5)
!19115 = !DILocation(line: 113, column: 17, scope: !19113)
!19116 = !DILocation(line: 113, column: 11, scope: !19114)
!19117 = !DILocation(line: 114, column: 9, scope: !19113)
!19118 = !DILocation(line: 115, column: 11, scope: !19114)
!19119 = !DILocation(line: 116, column: 5, scope: !19114)
!19120 = !DILocation(line: 121, column: 8, scope: !19121)
!19121 = distinct !DILexicalBlock(scope: !19029, file: !19030, line: 121, column: 7)
!19122 = !DILocation(line: 121, column: 7, scope: !19029)
!19123 = !DILocation(line: 123, column: 14, scope: !19124)
!19124 = distinct !DILexicalBlock(scope: !19121, file: !19030, line: 122, column: 5)
!19125 = !DILocation(line: 123, column: 8, scope: !19124)
!19126 = !DILocation(line: 123, column: 12, scope: !19124)
!19127 = !DILocation(line: 124, column: 14, scope: !19124)
!19128 = !DILocation(line: 124, column: 7, scope: !19124)
!19129 = !DILocation(line: 127, column: 9, scope: !19130)
!19130 = distinct !DILexicalBlock(scope: !19029, file: !19030, line: 127, column: 7)
!19131 = !DILocation(line: 127, column: 8, scope: !19130)
!19132 = !DILocation(line: 127, column: 7, scope: !19130)
!19133 = !DILocation(line: 127, column: 11, scope: !19130)
!19134 = !DILocation(line: 127, column: 7, scope: !19029)
!19135 = !DILocalVariable(name: "base", scope: !19136, file: !19030, line: 129, type: !7)
!19136 = distinct !DILexicalBlock(scope: !19130, file: !19030, line: 128, column: 5)
!19137 = !DILocation(line: 129, column: 11, scope: !19136)
!19138 = !DILocalVariable(name: "suffixes", scope: !19136, file: !19030, line: 130, type: !7)
!19139 = !DILocation(line: 130, column: 11, scope: !19136)
!19140 = !DILocalVariable(name: "overflow", scope: !19136, file: !19030, line: 131, type: !2036)
!19141 = !DILocation(line: 131, column: 20, scope: !19136)
!19142 = !DILocation(line: 133, column: 20, scope: !19143)
!19143 = distinct !DILexicalBlock(scope: !19136, file: !19030, line: 133, column: 11)
!19144 = !DILocation(line: 133, column: 38, scope: !19143)
!19145 = !DILocation(line: 133, column: 37, scope: !19143)
!19146 = !DILocation(line: 133, column: 36, scope: !19143)
!19147 = !DILocation(line: 133, column: 12, scope: !19143)
!19148 = !DILocation(line: 133, column: 11, scope: !19136)
!19149 = !DILocation(line: 135, column: 18, scope: !19150)
!19150 = distinct !DILexicalBlock(scope: !19143, file: !19030, line: 134, column: 9)
!19151 = !DILocation(line: 135, column: 12, scope: !19150)
!19152 = !DILocation(line: 135, column: 16, scope: !19150)
!19153 = !DILocation(line: 136, column: 18, scope: !19150)
!19154 = !DILocation(line: 136, column: 22, scope: !19150)
!19155 = !DILocation(line: 136, column: 11, scope: !19150)
!19156 = !DILocation(line: 139, column: 17, scope: !19136)
!19157 = !DILocation(line: 139, column: 16, scope: !19136)
!19158 = !DILocation(line: 139, column: 15, scope: !19136)
!19159 = !DILocation(line: 139, column: 7, scope: !19136)
!19160 = !DILocation(line: 151, column: 23, scope: !19161)
!19161 = distinct !DILexicalBlock(scope: !19162, file: !19030, line: 151, column: 15)
!19162 = distinct !DILexicalBlock(scope: !19136, file: !19030, line: 140, column: 9)
!19163 = !DILocation(line: 151, column: 15, scope: !19161)
!19164 = !DILocation(line: 151, column: 15, scope: !19162)
!19165 = !DILocation(line: 152, column: 21, scope: !19161)
!19166 = !DILocation(line: 152, column: 13, scope: !19161)
!19167 = !DILocation(line: 155, column: 21, scope: !19168)
!19168 = distinct !DILexicalBlock(scope: !19169, file: !19030, line: 155, column: 21)
!19169 = distinct !DILexicalBlock(scope: !19161, file: !19030, line: 153, column: 15)
!19170 = !DILocation(line: 155, column: 29, scope: !19168)
!19171 = !DILocation(line: 155, column: 21, scope: !19169)
!19172 = !DILocation(line: 156, column: 28, scope: !19168)
!19173 = !DILocation(line: 156, column: 19, scope: !19168)
!19174 = !DILocation(line: 157, column: 17, scope: !19169)
!19175 = !DILocation(line: 161, column: 22, scope: !19169)
!19176 = !DILocation(line: 162, column: 25, scope: !19169)
!19177 = !DILocation(line: 163, column: 17, scope: !19169)
!19178 = !DILocation(line: 164, column: 15, scope: !19169)
!19179 = !DILocation(line: 165, column: 9, scope: !19162)
!19180 = !DILocation(line: 167, column: 17, scope: !19136)
!19181 = !DILocation(line: 167, column: 16, scope: !19136)
!19182 = !DILocation(line: 167, column: 15, scope: !19136)
!19183 = !DILocation(line: 167, column: 7, scope: !19136)
!19184 = !DILocation(line: 170, column: 22, scope: !19185)
!19185 = distinct !DILexicalBlock(scope: !19136, file: !19030, line: 168, column: 9)
!19186 = !DILocation(line: 170, column: 20, scope: !19185)
!19187 = !DILocation(line: 171, column: 11, scope: !19185)
!19188 = !DILocation(line: 177, column: 22, scope: !19185)
!19189 = !DILocation(line: 177, column: 20, scope: !19185)
!19190 = !DILocation(line: 178, column: 11, scope: !19185)
!19191 = !DILocation(line: 181, column: 20, scope: !19185)
!19192 = !DILocation(line: 182, column: 11, scope: !19185)
!19193 = !DILocation(line: 185, column: 48, scope: !19185)
!19194 = !DILocation(line: 185, column: 22, scope: !19185)
!19195 = !DILocation(line: 185, column: 20, scope: !19185)
!19196 = !DILocation(line: 186, column: 11, scope: !19185)
!19197 = !DILocation(line: 190, column: 48, scope: !19185)
!19198 = !DILocation(line: 190, column: 22, scope: !19185)
!19199 = !DILocation(line: 190, column: 20, scope: !19185)
!19200 = !DILocation(line: 191, column: 11, scope: !19185)
!19201 = !DILocation(line: 195, column: 48, scope: !19185)
!19202 = !DILocation(line: 195, column: 22, scope: !19185)
!19203 = !DILocation(line: 195, column: 20, scope: !19185)
!19204 = !DILocation(line: 196, column: 11, scope: !19185)
!19205 = !DILocation(line: 200, column: 48, scope: !19185)
!19206 = !DILocation(line: 200, column: 22, scope: !19185)
!19207 = !DILocation(line: 200, column: 20, scope: !19185)
!19208 = !DILocation(line: 201, column: 11, scope: !19185)
!19209 = !DILocation(line: 204, column: 48, scope: !19185)
!19210 = !DILocation(line: 204, column: 22, scope: !19185)
!19211 = !DILocation(line: 204, column: 20, scope: !19185)
!19212 = !DILocation(line: 205, column: 11, scope: !19185)
!19213 = !DILocation(line: 209, column: 48, scope: !19185)
!19214 = !DILocation(line: 209, column: 22, scope: !19185)
!19215 = !DILocation(line: 209, column: 20, scope: !19185)
!19216 = !DILocation(line: 210, column: 11, scope: !19185)
!19217 = !DILocation(line: 213, column: 22, scope: !19185)
!19218 = !DILocation(line: 213, column: 20, scope: !19185)
!19219 = !DILocation(line: 214, column: 11, scope: !19185)
!19220 = !DILocation(line: 217, column: 48, scope: !19185)
!19221 = !DILocation(line: 217, column: 22, scope: !19185)
!19222 = !DILocation(line: 217, column: 20, scope: !19185)
!19223 = !DILocation(line: 218, column: 11, scope: !19185)
!19224 = !DILocation(line: 221, column: 48, scope: !19185)
!19225 = !DILocation(line: 221, column: 22, scope: !19185)
!19226 = !DILocation(line: 221, column: 20, scope: !19185)
!19227 = !DILocation(line: 222, column: 11, scope: !19185)
!19228 = !DILocation(line: 225, column: 18, scope: !19185)
!19229 = !DILocation(line: 225, column: 12, scope: !19185)
!19230 = !DILocation(line: 225, column: 16, scope: !19185)
!19231 = !DILocation(line: 226, column: 18, scope: !19185)
!19232 = !DILocation(line: 226, column: 22, scope: !19185)
!19233 = !DILocation(line: 226, column: 11, scope: !19185)
!19234 = !DILocation(line: 229, column: 14, scope: !19136)
!19235 = !DILocation(line: 229, column: 11, scope: !19136)
!19236 = !DILocation(line: 230, column: 13, scope: !19136)
!19237 = !DILocation(line: 230, column: 8, scope: !19136)
!19238 = !DILocation(line: 230, column: 10, scope: !19136)
!19239 = !DILocation(line: 231, column: 13, scope: !19240)
!19240 = distinct !DILexicalBlock(scope: !19136, file: !19030, line: 231, column: 11)
!19241 = !DILocation(line: 231, column: 12, scope: !19240)
!19242 = !DILocation(line: 231, column: 11, scope: !19240)
!19243 = !DILocation(line: 231, column: 11, scope: !19136)
!19244 = !DILocation(line: 232, column: 13, scope: !19240)
!19245 = !DILocation(line: 232, column: 9, scope: !19240)
!19246 = !DILocation(line: 233, column: 5, scope: !19136)
!19247 = !DILocation(line: 235, column: 10, scope: !19029)
!19248 = !DILocation(line: 235, column: 4, scope: !19029)
!19249 = !DILocation(line: 235, column: 8, scope: !19029)
!19250 = !DILocation(line: 236, column: 10, scope: !19029)
!19251 = !DILocation(line: 236, column: 3, scope: !19029)
!19252 = !DILocation(line: 237, column: 1, scope: !19029)
!19253 = distinct !DISubprogram(name: "bkm_scale", scope: !19030, file: !19030, line: 48, type: !2038, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2022, retainedNodes: !209)
!19254 = !DILocalVariable(name: "x", arg: 1, scope: !19253, file: !19030, line: 48, type: !2037)
!19255 = !DILocation(line: 48, column: 24, scope: !19253)
!19256 = !DILocalVariable(name: "scale_factor", arg: 2, scope: !19253, file: !19030, line: 48, type: !7)
!19257 = !DILocation(line: 48, column: 31, scope: !19253)
!19258 = !DILocation(line: 55, column: 26, scope: !19259)
!19259 = distinct !DILexicalBlock(scope: !19253, file: !19030, line: 55, column: 7)
!19260 = !DILocation(line: 55, column: 24, scope: !19259)
!19261 = !DILocation(line: 55, column: 42, scope: !19259)
!19262 = !DILocation(line: 55, column: 41, scope: !19259)
!19263 = !DILocation(line: 55, column: 39, scope: !19259)
!19264 = !DILocation(line: 55, column: 7, scope: !19253)
!19265 = !DILocation(line: 57, column: 8, scope: !19266)
!19266 = distinct !DILexicalBlock(scope: !19259, file: !19030, line: 56, column: 5)
!19267 = !DILocation(line: 57, column: 10, scope: !19266)
!19268 = !DILocation(line: 58, column: 7, scope: !19266)
!19269 = !DILocation(line: 60, column: 9, scope: !19253)
!19270 = !DILocation(line: 60, column: 4, scope: !19253)
!19271 = !DILocation(line: 60, column: 6, scope: !19253)
!19272 = !DILocation(line: 61, column: 3, scope: !19253)
!19273 = !DILocation(line: 62, column: 1, scope: !19253)
!19274 = distinct !DISubprogram(name: "bkm_scale_by_power", scope: !19030, file: !19030, line: 65, type: !2040, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2022, retainedNodes: !209)
!19275 = !DILocalVariable(name: "x", arg: 1, scope: !19274, file: !19030, line: 65, type: !2037)
!19276 = !DILocation(line: 65, column: 33, scope: !19274)
!19277 = !DILocalVariable(name: "base", arg: 2, scope: !19274, file: !19030, line: 65, type: !7)
!19278 = !DILocation(line: 65, column: 40, scope: !19274)
!19279 = !DILocalVariable(name: "power", arg: 3, scope: !19274, file: !19030, line: 65, type: !7)
!19280 = !DILocation(line: 65, column: 50, scope: !19274)
!19281 = !DILocalVariable(name: "err", scope: !19274, file: !19030, line: 67, type: !2036)
!19282 = !DILocation(line: 67, column: 16, scope: !19274)
!19283 = !DILocation(line: 68, column: 3, scope: !19274)
!19284 = !DILocation(line: 68, column: 15, scope: !19274)
!19285 = !DILocation(line: 69, column: 23, scope: !19274)
!19286 = !DILocation(line: 69, column: 26, scope: !19274)
!19287 = !DILocation(line: 69, column: 12, scope: !19274)
!19288 = !DILocation(line: 69, column: 9, scope: !19274)
!19289 = distinct !{!19289, !19283, !19290}
!19290 = !DILocation(line: 69, column: 30, scope: !19274)
!19291 = !DILocation(line: 70, column: 10, scope: !19274)
!19292 = !DILocation(line: 70, column: 3, scope: !19274)
!19293 = distinct !DISubprogram(name: "xvasprintf", scope: !19294, file: !19294, line: 76, type: !2045, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2042, retainedNodes: !209)
!19294 = !DIFile(filename: "lib/xvasprintf.c", directory: "/home/mbarbar/clone/coreutils")
!19295 = !DILocalVariable(name: "format", arg: 1, scope: !19293, file: !19294, line: 76, type: !180)
!19296 = !DILocation(line: 76, column: 25, scope: !19293)
!19297 = !DILocalVariable(name: "args", arg: 2, scope: !19293, file: !19294, line: 76, type: !2047)
!19298 = !DILocation(line: 76, column: 41, scope: !19293)
!19299 = !DILocalVariable(name: "result", scope: !19293, file: !19294, line: 78, type: !9)
!19300 = !DILocation(line: 78, column: 9, scope: !19293)
!19301 = !DILocalVariable(name: "argcount", scope: !19302, file: !19294, line: 84, type: !55)
!19302 = distinct !DILexicalBlock(scope: !19293, file: !19294, line: 83, column: 3)
!19303 = !DILocation(line: 84, column: 12, scope: !19302)
!19304 = !DILocalVariable(name: "f", scope: !19302, file: !19294, line: 85, type: !180)
!19305 = !DILocation(line: 85, column: 17, scope: !19302)
!19306 = !DILocation(line: 87, column: 14, scope: !19307)
!19307 = distinct !DILexicalBlock(scope: !19302, file: !19294, line: 87, column: 5)
!19308 = !DILocation(line: 87, column: 12, scope: !19307)
!19309 = !DILocation(line: 87, column: 10, scope: !19307)
!19310 = !DILocation(line: 89, column: 14, scope: !19311)
!19311 = distinct !DILexicalBlock(scope: !19312, file: !19294, line: 89, column: 13)
!19312 = distinct !DILexicalBlock(scope: !19313, file: !19294, line: 88, column: 7)
!19313 = distinct !DILexicalBlock(scope: !19307, file: !19294, line: 87, column: 5)
!19314 = !DILocation(line: 89, column: 13, scope: !19311)
!19315 = !DILocation(line: 89, column: 16, scope: !19311)
!19316 = !DILocation(line: 89, column: 13, scope: !19312)
!19317 = !DILocation(line: 91, column: 27, scope: !19311)
!19318 = !DILocation(line: 91, column: 37, scope: !19311)
!19319 = !DILocation(line: 91, column: 18, scope: !19311)
!19320 = !DILocation(line: 91, column: 11, scope: !19311)
!19321 = !DILocation(line: 92, column: 14, scope: !19322)
!19322 = distinct !DILexicalBlock(scope: !19312, file: !19294, line: 92, column: 13)
!19323 = !DILocation(line: 92, column: 13, scope: !19322)
!19324 = !DILocation(line: 92, column: 16, scope: !19322)
!19325 = !DILocation(line: 92, column: 13, scope: !19312)
!19326 = !DILocation(line: 93, column: 11, scope: !19322)
!19327 = !DILocation(line: 94, column: 10, scope: !19312)
!19328 = !DILocation(line: 95, column: 14, scope: !19329)
!19329 = distinct !DILexicalBlock(scope: !19312, file: !19294, line: 95, column: 13)
!19330 = !DILocation(line: 95, column: 13, scope: !19329)
!19331 = !DILocation(line: 95, column: 16, scope: !19329)
!19332 = !DILocation(line: 95, column: 13, scope: !19312)
!19333 = !DILocation(line: 96, column: 11, scope: !19329)
!19334 = !DILocation(line: 97, column: 10, scope: !19312)
!19335 = !DILocation(line: 98, column: 17, scope: !19312)
!19336 = !DILocation(line: 87, column: 5, scope: !19313)
!19337 = distinct !{!19337, !19338, !19339}
!19338 = !DILocation(line: 87, column: 5, scope: !19307)
!19339 = !DILocation(line: 99, column: 7, scope: !19307)
!19340 = !DILocation(line: 102, column: 27, scope: !19341)
!19341 = distinct !DILexicalBlock(scope: !19293, file: !19294, line: 102, column: 7)
!19342 = !DILocation(line: 102, column: 35, scope: !19341)
!19343 = !DILocation(line: 102, column: 7, scope: !19341)
!19344 = !DILocation(line: 102, column: 41, scope: !19341)
!19345 = !DILocation(line: 102, column: 7, scope: !19293)
!19346 = !DILocation(line: 104, column: 11, scope: !19347)
!19347 = distinct !DILexicalBlock(scope: !19348, file: !19294, line: 104, column: 11)
!19348 = distinct !DILexicalBlock(scope: !19341, file: !19294, line: 103, column: 5)
!19349 = !DILocation(line: 104, column: 17, scope: !19347)
!19350 = !DILocation(line: 104, column: 11, scope: !19348)
!19351 = !DILocation(line: 105, column: 9, scope: !19347)
!19352 = !DILocation(line: 106, column: 7, scope: !19348)
!19353 = !DILocation(line: 109, column: 10, scope: !19293)
!19354 = !DILocation(line: 109, column: 3, scope: !19293)
!19355 = !DILocation(line: 110, column: 1, scope: !19293)
!19356 = distinct !DISubprogram(name: "xstrcat", scope: !19294, file: !19294, line: 33, type: !2054, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2042, retainedNodes: !209)
!19357 = !DILocalVariable(name: "argcount", arg: 1, scope: !19356, file: !19294, line: 33, type: !55)
!19358 = !DILocation(line: 33, column: 17, scope: !19356)
!19359 = !DILocalVariable(name: "args", arg: 2, scope: !19356, file: !19294, line: 33, type: !2047)
!19360 = !DILocation(line: 33, column: 35, scope: !19356)
!19361 = !DILocalVariable(name: "result", scope: !19356, file: !19294, line: 35, type: !9)
!19362 = !DILocation(line: 35, column: 9, scope: !19356)
!19363 = !DILocalVariable(name: "ap", scope: !19356, file: !19294, line: 36, type: !2056)
!19364 = !DILocation(line: 36, column: 11, scope: !19356)
!19365 = !DILocalVariable(name: "totalsize", scope: !19356, file: !19294, line: 37, type: !55)
!19366 = !DILocation(line: 37, column: 10, scope: !19356)
!19367 = !DILocalVariable(name: "i", scope: !19356, file: !19294, line: 38, type: !55)
!19368 = !DILocation(line: 38, column: 10, scope: !19356)
!19369 = !DILocalVariable(name: "p", scope: !19356, file: !19294, line: 39, type: !9)
!19370 = !DILocation(line: 39, column: 9, scope: !19356)
!19371 = !DILocation(line: 42, column: 13, scope: !19356)
!19372 = !DILocation(line: 43, column: 3, scope: !19356)
!19373 = !DILocation(line: 44, column: 12, scope: !19374)
!19374 = distinct !DILexicalBlock(scope: !19356, file: !19294, line: 44, column: 3)
!19375 = !DILocation(line: 44, column: 10, scope: !19374)
!19376 = !DILocation(line: 44, column: 8, scope: !19374)
!19377 = !DILocation(line: 44, column: 22, scope: !19378)
!19378 = distinct !DILexicalBlock(scope: !19374, file: !19294, line: 44, column: 3)
!19379 = !DILocation(line: 44, column: 24, scope: !19378)
!19380 = !DILocation(line: 44, column: 3, scope: !19374)
!19381 = !DILocalVariable(name: "next", scope: !19382, file: !19294, line: 46, type: !180)
!19382 = distinct !DILexicalBlock(scope: !19378, file: !19294, line: 45, column: 5)
!19383 = !DILocation(line: 46, column: 19, scope: !19382)
!19384 = !DILocation(line: 46, column: 26, scope: !19382)
!19385 = !DILocation(line: 47, column: 25, scope: !19382)
!19386 = !DILocation(line: 47, column: 44, scope: !19382)
!19387 = !DILocation(line: 47, column: 36, scope: !19382)
!19388 = !DILocation(line: 47, column: 19, scope: !19382)
!19389 = !DILocation(line: 47, column: 17, scope: !19382)
!19390 = !DILocation(line: 48, column: 5, scope: !19382)
!19391 = !DILocation(line: 44, column: 30, scope: !19378)
!19392 = !DILocation(line: 44, column: 3, scope: !19378)
!19393 = distinct !{!19393, !19380, !19394}
!19394 = !DILocation(line: 48, column: 5, scope: !19374)
!19395 = !DILocation(line: 49, column: 3, scope: !19356)
!19396 = !DILocation(line: 54, column: 7, scope: !19397)
!19397 = distinct !DILexicalBlock(scope: !19356, file: !19294, line: 54, column: 7)
!19398 = !DILocation(line: 54, column: 17, scope: !19397)
!19399 = !DILocation(line: 54, column: 29, scope: !19397)
!19400 = !DILocation(line: 54, column: 32, scope: !19397)
!19401 = !DILocation(line: 54, column: 42, scope: !19397)
!19402 = !DILocation(line: 54, column: 7, scope: !19356)
!19403 = !DILocation(line: 56, column: 7, scope: !19404)
!19404 = distinct !DILexicalBlock(scope: !19397, file: !19294, line: 55, column: 5)
!19405 = !DILocation(line: 56, column: 13, scope: !19404)
!19406 = !DILocation(line: 57, column: 7, scope: !19404)
!19407 = !DILocation(line: 61, column: 12, scope: !19356)
!19408 = !DILocation(line: 61, column: 10, scope: !19356)
!19409 = !DILocation(line: 62, column: 7, scope: !19356)
!19410 = !DILocation(line: 62, column: 5, scope: !19356)
!19411 = !DILocation(line: 63, column: 12, scope: !19412)
!19412 = distinct !DILexicalBlock(scope: !19356, file: !19294, line: 63, column: 3)
!19413 = !DILocation(line: 63, column: 10, scope: !19412)
!19414 = !DILocation(line: 63, column: 8, scope: !19412)
!19415 = !DILocation(line: 63, column: 22, scope: !19416)
!19416 = distinct !DILexicalBlock(scope: !19412, file: !19294, line: 63, column: 3)
!19417 = !DILocation(line: 63, column: 24, scope: !19416)
!19418 = !DILocation(line: 63, column: 3, scope: !19412)
!19419 = !DILocalVariable(name: "next", scope: !19420, file: !19294, line: 65, type: !180)
!19420 = distinct !DILexicalBlock(scope: !19416, file: !19294, line: 64, column: 5)
!19421 = !DILocation(line: 65, column: 19, scope: !19420)
!19422 = !DILocation(line: 65, column: 26, scope: !19420)
!19423 = !DILocalVariable(name: "len", scope: !19420, file: !19294, line: 66, type: !55)
!19424 = !DILocation(line: 66, column: 14, scope: !19420)
!19425 = !DILocation(line: 66, column: 28, scope: !19420)
!19426 = !DILocation(line: 66, column: 20, scope: !19420)
!19427 = !DILocation(line: 67, column: 15, scope: !19420)
!19428 = !DILocation(line: 67, column: 18, scope: !19420)
!19429 = !DILocation(line: 67, column: 24, scope: !19420)
!19430 = !DILocation(line: 67, column: 7, scope: !19420)
!19431 = !DILocation(line: 68, column: 12, scope: !19420)
!19432 = !DILocation(line: 68, column: 9, scope: !19420)
!19433 = !DILocation(line: 69, column: 5, scope: !19420)
!19434 = !DILocation(line: 63, column: 30, scope: !19416)
!19435 = !DILocation(line: 63, column: 3, scope: !19416)
!19436 = distinct !{!19436, !19418, !19437}
!19437 = !DILocation(line: 69, column: 5, scope: !19412)
!19438 = !DILocation(line: 70, column: 4, scope: !19356)
!19439 = !DILocation(line: 70, column: 6, scope: !19356)
!19440 = !DILocation(line: 72, column: 10, scope: !19356)
!19441 = !DILocation(line: 72, column: 3, scope: !19356)
!19442 = !DILocation(line: 73, column: 1, scope: !19356)
!19443 = distinct !DISubprogram(name: "yesno", scope: !19444, file: !19444, line: 32, type: !1331, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2060, retainedNodes: !209)
!19444 = !DIFile(filename: "lib/yesno.c", directory: "/home/mbarbar/clone/coreutils")
!19445 = !DILocalVariable(name: "yes", scope: !19443, file: !19444, line: 34, type: !142)
!19446 = !DILocation(line: 34, column: 8, scope: !19443)
!19447 = !DILocalVariable(name: "response", scope: !19443, file: !19444, line: 37, type: !9)
!19448 = !DILocation(line: 37, column: 9, scope: !19443)
!19449 = !DILocalVariable(name: "response_size", scope: !19443, file: !19444, line: 38, type: !55)
!19450 = !DILocation(line: 38, column: 10, scope: !19443)
!19451 = !DILocalVariable(name: "response_len", scope: !19443, file: !19444, line: 39, type: !694)
!19452 = !DILocation(line: 39, column: 11, scope: !19443)
!19453 = !DILocation(line: 39, column: 62, scope: !19443)
!19454 = !DILocation(line: 39, column: 26, scope: !19443)
!19455 = !DILocation(line: 41, column: 7, scope: !19456)
!19456 = distinct !DILexicalBlock(scope: !19443, file: !19444, line: 41, column: 7)
!19457 = !DILocation(line: 41, column: 20, scope: !19456)
!19458 = !DILocation(line: 41, column: 7, scope: !19443)
!19459 = !DILocation(line: 42, column: 9, scope: !19456)
!19460 = !DILocation(line: 42, column: 5, scope: !19456)
!19461 = !DILocation(line: 47, column: 11, scope: !19462)
!19462 = distinct !DILexicalBlock(scope: !19463, file: !19444, line: 47, column: 11)
!19463 = distinct !DILexicalBlock(scope: !19456, file: !19444, line: 44, column: 5)
!19464 = !DILocation(line: 47, column: 20, scope: !19462)
!19465 = !DILocation(line: 47, column: 33, scope: !19462)
!19466 = !DILocation(line: 47, column: 38, scope: !19462)
!19467 = !DILocation(line: 47, column: 11, scope: !19463)
!19468 = !DILocation(line: 48, column: 9, scope: !19462)
!19469 = !DILocation(line: 48, column: 18, scope: !19462)
!19470 = !DILocation(line: 48, column: 31, scope: !19462)
!19471 = !DILocation(line: 48, column: 36, scope: !19462)
!19472 = !DILocation(line: 49, column: 27, scope: !19463)
!19473 = !DILocation(line: 49, column: 18, scope: !19463)
!19474 = !DILocation(line: 49, column: 16, scope: !19463)
!19475 = !DILocation(line: 49, column: 11, scope: !19463)
!19476 = !DILocation(line: 52, column: 9, scope: !19443)
!19477 = !DILocation(line: 52, column: 3, scope: !19443)
!19478 = !DILocation(line: 62, column: 10, scope: !19443)
!19479 = !DILocation(line: 62, column: 3, scope: !19443)
!19480 = distinct !DISubprogram(name: "rpl_fflush", scope: !19481, file: !19481, line: 129, type: !2100, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2097, retainedNodes: !209)
!19481 = !DIFile(filename: "lib/fflush.c", directory: "/home/mbarbar/clone/coreutils")
!19482 = !DILocalVariable(name: "stream", arg: 1, scope: !19480, file: !19481, line: 129, type: !2102)
!19483 = !DILocation(line: 129, column: 19, scope: !19480)
!19484 = !DILocation(line: 150, column: 7, scope: !19485)
!19485 = distinct !DILexicalBlock(scope: !19480, file: !19481, line: 150, column: 7)
!19486 = !DILocation(line: 150, column: 14, scope: !19485)
!19487 = !DILocation(line: 150, column: 22, scope: !19485)
!19488 = !DILocation(line: 150, column: 27, scope: !19485)
!19489 = !DILocation(line: 150, column: 7, scope: !19480)
!19490 = !DILocation(line: 151, column: 20, scope: !19485)
!19491 = !DILocation(line: 151, column: 12, scope: !19485)
!19492 = !DILocation(line: 151, column: 5, scope: !19485)
!19493 = !DILocation(line: 156, column: 44, scope: !19480)
!19494 = !DILocation(line: 156, column: 3, scope: !19480)
!19495 = !DILocation(line: 158, column: 18, scope: !19480)
!19496 = !DILocation(line: 158, column: 10, scope: !19480)
!19497 = !DILocation(line: 158, column: 3, scope: !19480)
!19498 = !DILocation(line: 232, column: 1, scope: !19480)
!19499 = distinct !DISubprogram(name: "clear_ungetc_buffer_preserving_position", scope: !19481, file: !19481, line: 41, type: !2136, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2097, retainedNodes: !209)
!19500 = !DILocalVariable(name: "fp", arg: 1, scope: !19499, file: !19481, line: 41, type: !2102)
!19501 = !DILocation(line: 41, column: 48, scope: !19499)
!19502 = !DILocation(line: 43, column: 7, scope: !19503)
!19503 = distinct !DILexicalBlock(scope: !19499, file: !19481, line: 43, column: 7)
!19504 = !DILocation(line: 43, column: 11, scope: !19503)
!19505 = !{!19506, !2636, i64 0}
!19506 = !{!"_IO_FILE", !2636, i64 0, !2649, i64 8, !2649, i64 16, !2649, i64 24, !2649, i64 32, !2649, i64 40, !2649, i64 48, !2649, i64 56, !2649, i64 64, !2649, i64 72, !2649, i64 80, !2649, i64 88, !2649, i64 96, !2649, i64 104, !2636, i64 112, !2636, i64 116, !2916, i64 120, !14718, i64 128, !2637, i64 130, !2637, i64 131, !2649, i64 136, !2916, i64 144, !2649, i64 152, !2649, i64 160, !2649, i64 168, !2649, i64 176, !2916, i64 184, !2636, i64 192, !2637, i64 196}
!19507 = !DILocation(line: 43, column: 18, scope: !19503)
!19508 = !DILocation(line: 43, column: 7, scope: !19499)
!19509 = !DILocation(line: 45, column: 13, scope: !19503)
!19510 = !DILocation(line: 45, column: 5, scope: !19503)
!19511 = !DILocation(line: 46, column: 1, scope: !19499)
!19512 = distinct !DISubprogram(name: "freadahead", scope: !19513, file: !19513, line: 34, type: !2141, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2138, retainedNodes: !209)
!19513 = !DIFile(filename: "lib/freadahead.c", directory: "/home/mbarbar/clone/coreutils")
!19514 = !DILocalVariable(name: "fp", arg: 1, scope: !19512, file: !19513, line: 34, type: !2143)
!19515 = !DILocation(line: 34, column: 19, scope: !19512)
!19516 = !DILocation(line: 38, column: 7, scope: !19517)
!19517 = distinct !DILexicalBlock(scope: !19512, file: !19513, line: 38, column: 7)
!19518 = !DILocation(line: 38, column: 11, scope: !19517)
!19519 = !{!19506, !2649, i64 40}
!19520 = !DILocation(line: 38, column: 27, scope: !19517)
!19521 = !DILocation(line: 38, column: 31, scope: !19517)
!19522 = !{!19506, !2649, i64 32}
!19523 = !DILocation(line: 38, column: 25, scope: !19517)
!19524 = !DILocation(line: 38, column: 7, scope: !19512)
!19525 = !DILocation(line: 39, column: 5, scope: !19517)
!19526 = !DILocation(line: 40, column: 11, scope: !19512)
!19527 = !DILocation(line: 40, column: 15, scope: !19512)
!19528 = !{!19506, !2649, i64 16}
!19529 = !DILocation(line: 40, column: 30, scope: !19512)
!19530 = !DILocation(line: 40, column: 34, scope: !19512)
!19531 = !{!19506, !2649, i64 8}
!19532 = !DILocation(line: 40, column: 28, scope: !19512)
!19533 = !DILocation(line: 41, column: 13, scope: !19512)
!19534 = !DILocation(line: 41, column: 17, scope: !19512)
!19535 = !DILocation(line: 41, column: 24, scope: !19512)
!19536 = !DILocation(line: 41, column: 42, scope: !19512)
!19537 = !DILocation(line: 41, column: 46, scope: !19512)
!19538 = !{!19506, !2649, i64 88}
!19539 = !DILocation(line: 41, column: 61, scope: !19512)
!19540 = !DILocation(line: 41, column: 65, scope: !19512)
!19541 = !{!19506, !2649, i64 72}
!19542 = !DILocation(line: 41, column: 59, scope: !19512)
!19543 = !DILocation(line: 41, column: 10, scope: !19512)
!19544 = !DILocation(line: 40, column: 3, scope: !19512)
!19545 = !DILocation(line: 103, column: 1, scope: !19512)
!19546 = distinct !DISubprogram(name: "rpl_fseeko", scope: !19547, file: !19547, line: 28, type: !2180, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2177, retainedNodes: !209)
!19547 = !DIFile(filename: "lib/fseeko.c", directory: "/home/mbarbar/clone/coreutils")
!19548 = !DILocalVariable(name: "fp", arg: 1, scope: !19546, file: !19547, line: 28, type: !2182)
!19549 = !DILocation(line: 28, column: 15, scope: !19546)
!19550 = !DILocalVariable(name: "offset", arg: 2, scope: !19546, file: !19547, line: 28, type: !352)
!19551 = !DILocation(line: 28, column: 25, scope: !19546)
!19552 = !DILocalVariable(name: "whence", arg: 3, scope: !19546, file: !19547, line: 28, type: !7)
!19553 = !DILocation(line: 28, column: 37, scope: !19546)
!19554 = !DILocation(line: 52, column: 7, scope: !19555)
!19555 = distinct !DILexicalBlock(scope: !19546, file: !19547, line: 52, column: 7)
!19556 = !DILocation(line: 52, column: 11, scope: !19555)
!19557 = !DILocation(line: 52, column: 27, scope: !19555)
!19558 = !DILocation(line: 52, column: 31, scope: !19555)
!19559 = !DILocation(line: 52, column: 24, scope: !19555)
!19560 = !DILocation(line: 53, column: 7, scope: !19555)
!19561 = !DILocation(line: 53, column: 10, scope: !19555)
!19562 = !DILocation(line: 53, column: 14, scope: !19555)
!19563 = !DILocation(line: 53, column: 31, scope: !19555)
!19564 = !DILocation(line: 53, column: 35, scope: !19555)
!19565 = !DILocation(line: 53, column: 28, scope: !19555)
!19566 = !DILocation(line: 54, column: 7, scope: !19555)
!19567 = !DILocation(line: 54, column: 10, scope: !19555)
!19568 = !DILocation(line: 54, column: 14, scope: !19555)
!19569 = !DILocation(line: 54, column: 28, scope: !19555)
!19570 = !DILocation(line: 52, column: 7, scope: !19546)
!19571 = !DILocalVariable(name: "pos", scope: !19572, file: !19547, line: 117, type: !352)
!19572 = distinct !DILexicalBlock(scope: !19555, file: !19547, line: 113, column: 5)
!19573 = !DILocation(line: 117, column: 13, scope: !19572)
!19574 = !DILocation(line: 117, column: 34, scope: !19572)
!19575 = !DILocation(line: 117, column: 26, scope: !19572)
!19576 = !DILocation(line: 117, column: 39, scope: !19572)
!19577 = !DILocation(line: 117, column: 47, scope: !19572)
!19578 = !DILocation(line: 117, column: 19, scope: !19572)
!19579 = !DILocation(line: 118, column: 11, scope: !19580)
!19580 = distinct !DILexicalBlock(scope: !19572, file: !19547, line: 118, column: 11)
!19581 = !DILocation(line: 118, column: 15, scope: !19580)
!19582 = !DILocation(line: 118, column: 11, scope: !19572)
!19583 = !DILocation(line: 124, column: 11, scope: !19584)
!19584 = distinct !DILexicalBlock(scope: !19580, file: !19547, line: 119, column: 9)
!19585 = !DILocation(line: 129, column: 7, scope: !19572)
!19586 = !DILocation(line: 129, column: 11, scope: !19572)
!19587 = !DILocation(line: 129, column: 18, scope: !19572)
!19588 = !DILocation(line: 130, column: 21, scope: !19572)
!19589 = !DILocation(line: 130, column: 7, scope: !19572)
!19590 = !DILocation(line: 130, column: 11, scope: !19572)
!19591 = !DILocation(line: 130, column: 19, scope: !19572)
!19592 = !{!19506, !2916, i64 144}
!19593 = !DILocation(line: 161, column: 7, scope: !19572)
!19594 = !DILocation(line: 163, column: 18, scope: !19546)
!19595 = !DILocation(line: 163, column: 22, scope: !19546)
!19596 = !DILocation(line: 163, column: 30, scope: !19546)
!19597 = !DILocation(line: 163, column: 10, scope: !19546)
!19598 = !DILocation(line: 163, column: 3, scope: !19546)
!19599 = !DILocation(line: 164, column: 1, scope: !19546)
!19600 = distinct !DISubprogram(name: "rpl_mbrtowc", scope: !19601, file: !19601, line: 461, type: !2219, scopeLine: 462, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2216, retainedNodes: !209)
!19601 = !DIFile(filename: "lib/mbrtowc.c", directory: "/home/mbarbar/clone/coreutils")
!19602 = !DILocalVariable(name: "pwc", arg: 1, scope: !19600, file: !19601, line: 461, type: !2221)
!19603 = !DILocation(line: 461, column: 23, scope: !19600)
!19604 = !DILocalVariable(name: "s", arg: 2, scope: !19600, file: !19601, line: 461, type: !180)
!19605 = !DILocation(line: 461, column: 40, scope: !19600)
!19606 = !DILocalVariable(name: "n", arg: 3, scope: !19600, file: !19601, line: 461, type: !55)
!19607 = !DILocation(line: 461, column: 50, scope: !19600)
!19608 = !DILocalVariable(name: "ps", arg: 4, scope: !19600, file: !19601, line: 461, type: !2222)
!19609 = !DILocation(line: 461, column: 64, scope: !19600)
!19610 = !DILocalVariable(name: "ret", scope: !19600, file: !19601, line: 463, type: !55)
!19611 = !DILocation(line: 463, column: 10, scope: !19600)
!19612 = !DILocalVariable(name: "wc", scope: !19600, file: !19601, line: 464, type: !1127)
!19613 = !DILocation(line: 464, column: 11, scope: !19600)
!19614 = !DILocation(line: 480, column: 9, scope: !19615)
!19615 = distinct !DILexicalBlock(scope: !19600, file: !19601, line: 480, column: 7)
!19616 = !DILocation(line: 480, column: 7, scope: !19600)
!19617 = !DILocation(line: 481, column: 9, scope: !19615)
!19618 = !DILocation(line: 481, column: 5, scope: !19615)
!19619 = !DILocation(line: 515, column: 18, scope: !19600)
!19620 = !DILocation(line: 515, column: 23, scope: !19600)
!19621 = !DILocation(line: 515, column: 26, scope: !19600)
!19622 = !DILocation(line: 515, column: 29, scope: !19600)
!19623 = !DILocation(line: 515, column: 9, scope: !19600)
!19624 = !DILocation(line: 515, column: 7, scope: !19600)
!19625 = !DILocation(line: 523, column: 22, scope: !19626)
!19626 = distinct !DILexicalBlock(scope: !19600, file: !19601, line: 523, column: 7)
!19627 = !DILocation(line: 523, column: 19, scope: !19626)
!19628 = !DILocation(line: 523, column: 26, scope: !19626)
!19629 = !DILocation(line: 523, column: 29, scope: !19626)
!19630 = !DILocation(line: 523, column: 31, scope: !19626)
!19631 = !DILocation(line: 523, column: 36, scope: !19626)
!19632 = !DILocation(line: 523, column: 41, scope: !19626)
!19633 = !DILocation(line: 523, column: 7, scope: !19600)
!19634 = !DILocalVariable(name: "uc", scope: !19635, file: !19601, line: 525, type: !556)
!19635 = distinct !DILexicalBlock(scope: !19626, file: !19601, line: 524, column: 5)
!19636 = !DILocation(line: 525, column: 21, scope: !19635)
!19637 = !DILocation(line: 525, column: 27, scope: !19635)
!19638 = !DILocation(line: 525, column: 26, scope: !19635)
!19639 = !DILocation(line: 526, column: 14, scope: !19635)
!19640 = !DILocation(line: 526, column: 8, scope: !19635)
!19641 = !DILocation(line: 526, column: 12, scope: !19635)
!19642 = !DILocation(line: 527, column: 7, scope: !19635)
!19643 = !DILocation(line: 531, column: 10, scope: !19600)
!19644 = !DILocation(line: 531, column: 3, scope: !19600)
!19645 = !DILocation(line: 532, column: 1, scope: !19600)
!19646 = distinct !DISubprogram(name: "acl_access_nontrivial", scope: !19647, file: !19647, line: 47, type: !2236, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2233, retainedNodes: !209)
!19647 = !DIFile(filename: "lib/acl-internal.c", directory: "/home/mbarbar/clone/coreutils")
!19648 = !DILocalVariable(name: "acl", arg: 1, scope: !19646, file: !19647, line: 47, type: !2238)
!19649 = !DILocation(line: 47, column: 30, scope: !19646)
!19650 = !DILocalVariable(name: "ace", scope: !19646, file: !19647, line: 56, type: !2242)
!19651 = !DILocation(line: 56, column: 15, scope: !19646)
!19652 = !DILocalVariable(name: "got_one", scope: !19646, file: !19647, line: 57, type: !7)
!19653 = !DILocation(line: 57, column: 7, scope: !19646)
!19654 = !DILocation(line: 59, column: 33, scope: !19655)
!19655 = distinct !DILexicalBlock(scope: !19646, file: !19647, line: 59, column: 3)
!19656 = !DILocation(line: 59, column: 18, scope: !19655)
!19657 = !DILocation(line: 59, column: 16, scope: !19655)
!19658 = !DILocation(line: 59, column: 8, scope: !19655)
!19659 = !DILocation(line: 60, column: 8, scope: !19660)
!19660 = distinct !DILexicalBlock(scope: !19655, file: !19647, line: 59, column: 3)
!19661 = !DILocation(line: 60, column: 16, scope: !19660)
!19662 = !DILocation(line: 59, column: 3, scope: !19655)
!19663 = !DILocalVariable(name: "tag", scope: !19664, file: !19647, line: 63, type: !2245)
!19664 = distinct !DILexicalBlock(scope: !19660, file: !19647, line: 62, column: 5)
!19665 = !DILocation(line: 63, column: 17, scope: !19664)
!19666 = !DILocation(line: 64, column: 29, scope: !19667)
!19667 = distinct !DILexicalBlock(scope: !19664, file: !19647, line: 64, column: 11)
!19668 = !DILocation(line: 64, column: 11, scope: !19667)
!19669 = !DILocation(line: 64, column: 40, scope: !19667)
!19670 = !DILocation(line: 64, column: 11, scope: !19664)
!19671 = !DILocation(line: 65, column: 9, scope: !19667)
!19672 = !DILocation(line: 66, column: 13, scope: !19673)
!19673 = distinct !DILexicalBlock(scope: !19664, file: !19647, line: 66, column: 11)
!19674 = !DILocation(line: 66, column: 17, scope: !19673)
!19675 = !DILocation(line: 66, column: 33, scope: !19673)
!19676 = !DILocation(line: 66, column: 36, scope: !19673)
!19677 = !DILocation(line: 66, column: 40, scope: !19673)
!19678 = !DILocation(line: 66, column: 57, scope: !19673)
!19679 = !DILocation(line: 66, column: 60, scope: !19673)
!19680 = !DILocation(line: 66, column: 64, scope: !19673)
!19681 = !DILocation(line: 66, column: 11, scope: !19664)
!19682 = !DILocation(line: 67, column: 9, scope: !19673)
!19683 = !DILocation(line: 68, column: 5, scope: !19664)
!19684 = !DILocation(line: 61, column: 33, scope: !19660)
!19685 = !DILocation(line: 61, column: 18, scope: !19660)
!19686 = !DILocation(line: 61, column: 16, scope: !19660)
!19687 = !DILocation(line: 59, column: 3, scope: !19660)
!19688 = distinct !{!19688, !19662, !19689}
!19689 = !DILocation(line: 68, column: 5, scope: !19655)
!19690 = !DILocation(line: 69, column: 10, scope: !19646)
!19691 = !DILocation(line: 69, column: 3, scope: !19646)
!19692 = !DILocation(line: 116, column: 1, scope: !19646)
!19693 = distinct !DISubprogram(name: "acl_default_nontrivial", scope: !19647, file: !19647, line: 119, type: !2236, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2233, retainedNodes: !209)
!19694 = !DILocalVariable(name: "acl", arg: 1, scope: !19693, file: !19647, line: 119, type: !2238)
!19695 = !DILocation(line: 119, column: 31, scope: !19693)
!19696 = !DILocation(line: 122, column: 24, scope: !19693)
!19697 = !DILocation(line: 122, column: 11, scope: !19693)
!19698 = !DILocation(line: 122, column: 29, scope: !19693)
!19699 = !DILocation(line: 122, column: 3, scope: !19693)
!19700 = distinct !DISubprogram(name: "free_permission_context", scope: !19647, file: !19647, line: 479, type: !2246, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2233, retainedNodes: !209)
!19701 = !DILocalVariable(name: "ctx", arg: 1, scope: !19700, file: !19647, line: 479, type: !2248)
!19702 = !DILocation(line: 479, column: 53, scope: !19700)
!19703 = !DILocation(line: 483, column: 7, scope: !19704)
!19704 = distinct !DILexicalBlock(scope: !19700, file: !19647, line: 483, column: 7)
!19705 = !DILocation(line: 483, column: 12, scope: !19704)
!19706 = !{!14075, !2649, i64 8}
!19707 = !DILocation(line: 483, column: 7, scope: !19700)
!19708 = !DILocation(line: 484, column: 15, scope: !19704)
!19709 = !DILocation(line: 484, column: 20, scope: !19704)
!19710 = !DILocation(line: 484, column: 5, scope: !19704)
!19711 = !DILocation(line: 486, column: 7, scope: !19712)
!19712 = distinct !DILexicalBlock(scope: !19700, file: !19647, line: 486, column: 7)
!19713 = !DILocation(line: 486, column: 12, scope: !19712)
!19714 = !{!14075, !2649, i64 16}
!19715 = !DILocation(line: 486, column: 7, scope: !19700)
!19716 = !DILocation(line: 487, column: 15, scope: !19712)
!19717 = !DILocation(line: 487, column: 20, scope: !19712)
!19718 = !DILocation(line: 487, column: 5, scope: !19712)
!19719 = !DILocation(line: 507, column: 1, scope: !19700)
!19720 = distinct !DISubprogram(name: "get_permissions", scope: !19721, file: !19721, line: 33, type: !2259, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2256, retainedNodes: !209)
!19721 = !DIFile(filename: "lib/get-permissions.c", directory: "/home/mbarbar/clone/coreutils")
!19722 = !DILocalVariable(name: "name", arg: 1, scope: !19720, file: !19721, line: 33, type: !180)
!19723 = !DILocation(line: 33, column: 30, scope: !19720)
!19724 = !DILocalVariable(name: "desc", arg: 2, scope: !19720, file: !19721, line: 33, type: !7)
!19725 = !DILocation(line: 33, column: 40, scope: !19720)
!19726 = !DILocalVariable(name: "mode", arg: 3, scope: !19720, file: !19721, line: 33, type: !139)
!19727 = !DILocation(line: 33, column: 53, scope: !19720)
!19728 = !DILocalVariable(name: "ctx", arg: 4, scope: !19720, file: !19721, line: 34, type: !2261)
!19729 = !DILocation(line: 34, column: 45, scope: !19720)
!19730 = !DILocation(line: 36, column: 11, scope: !19720)
!19731 = !DILocation(line: 36, column: 3, scope: !19720)
!19732 = !DILocation(line: 37, column: 15, scope: !19720)
!19733 = !DILocation(line: 37, column: 3, scope: !19720)
!19734 = !DILocation(line: 37, column: 8, scope: !19720)
!19735 = !DILocation(line: 37, column: 13, scope: !19720)
!19736 = !DILocation(line: 45, column: 26, scope: !19737)
!19737 = distinct !DILexicalBlock(scope: !19720, file: !19721, line: 45, column: 7)
!19738 = !DILocation(line: 45, column: 31, scope: !19737)
!19739 = !DILocation(line: 45, column: 7, scope: !19720)
!19740 = !DILocation(line: 46, column: 28, scope: !19737)
!19741 = !DILocation(line: 46, column: 16, scope: !19737)
!19742 = !DILocation(line: 46, column: 5, scope: !19737)
!19743 = !DILocation(line: 46, column: 10, scope: !19737)
!19744 = !DILocation(line: 46, column: 14, scope: !19737)
!19745 = !DILocation(line: 48, column: 30, scope: !19737)
!19746 = !DILocation(line: 48, column: 16, scope: !19737)
!19747 = !DILocation(line: 48, column: 5, scope: !19737)
!19748 = !DILocation(line: 48, column: 10, scope: !19737)
!19749 = !DILocation(line: 48, column: 14, scope: !19737)
!19750 = !DILocation(line: 49, column: 7, scope: !19751)
!19751 = distinct !DILexicalBlock(scope: !19720, file: !19721, line: 49, column: 7)
!19752 = !DILocation(line: 49, column: 12, scope: !19751)
!19753 = !DILocation(line: 49, column: 16, scope: !19751)
!19754 = !DILocation(line: 49, column: 7, scope: !19720)
!19755 = !DILocation(line: 50, column: 29, scope: !19751)
!19756 = !DILocation(line: 50, column: 12, scope: !19751)
!19757 = !DILocation(line: 50, column: 5, scope: !19751)
!19758 = !DILocation(line: 56, column: 7, scope: !19759)
!19759 = distinct !DILexicalBlock(scope: !19720, file: !19721, line: 56, column: 7)
!19760 = !DILocation(line: 56, column: 7, scope: !19720)
!19761 = !DILocation(line: 58, column: 40, scope: !19762)
!19762 = distinct !DILexicalBlock(scope: !19759, file: !19721, line: 57, column: 5)
!19763 = !DILocation(line: 58, column: 26, scope: !19762)
!19764 = !DILocation(line: 58, column: 7, scope: !19762)
!19765 = !DILocation(line: 58, column: 12, scope: !19762)
!19766 = !DILocation(line: 58, column: 24, scope: !19762)
!19767 = !DILocation(line: 59, column: 11, scope: !19768)
!19768 = distinct !DILexicalBlock(scope: !19762, file: !19721, line: 59, column: 11)
!19769 = !DILocation(line: 59, column: 16, scope: !19768)
!19770 = !DILocation(line: 59, column: 28, scope: !19768)
!19771 = !DILocation(line: 59, column: 11, scope: !19762)
!19772 = !DILocation(line: 60, column: 9, scope: !19768)
!19773 = !DILocation(line: 61, column: 5, scope: !19762)
!19774 = !DILocation(line: 289, column: 3, scope: !19720)
!19775 = !DILocation(line: 291, column: 1, scope: !19720)
!19776 = distinct !DISubprogram(name: "chmod_or_fchmod", scope: !19777, file: !19777, line: 760, type: !1521, scopeLine: 761, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2268, retainedNodes: !209)
!19777 = !DIFile(filename: "lib/set-permissions.c", directory: "/home/mbarbar/clone/coreutils")
!19778 = !DILocalVariable(name: "name", arg: 1, scope: !19776, file: !19777, line: 760, type: !180)
!19779 = !DILocation(line: 760, column: 30, scope: !19776)
!19780 = !DILocalVariable(name: "desc", arg: 2, scope: !19776, file: !19777, line: 760, type: !7)
!19781 = !DILocation(line: 760, column: 40, scope: !19776)
!19782 = !DILocalVariable(name: "mode", arg: 3, scope: !19776, file: !19777, line: 760, type: !139)
!19783 = !DILocation(line: 760, column: 53, scope: !19776)
!19784 = !DILocation(line: 762, column: 22, scope: !19785)
!19785 = distinct !DILexicalBlock(scope: !19776, file: !19777, line: 762, column: 7)
!19786 = !DILocation(line: 762, column: 27, scope: !19785)
!19787 = !DILocation(line: 762, column: 7, scope: !19776)
!19788 = !DILocation(line: 763, column: 20, scope: !19785)
!19789 = !DILocation(line: 763, column: 26, scope: !19785)
!19790 = !DILocation(line: 763, column: 12, scope: !19785)
!19791 = !DILocation(line: 763, column: 5, scope: !19785)
!19792 = !DILocation(line: 765, column: 19, scope: !19785)
!19793 = !DILocation(line: 765, column: 25, scope: !19785)
!19794 = !DILocation(line: 765, column: 12, scope: !19785)
!19795 = !DILocation(line: 765, column: 5, scope: !19785)
!19796 = !DILocation(line: 766, column: 1, scope: !19776)
!19797 = distinct !DISubprogram(name: "set_permissions", scope: !19777, file: !19777, line: 776, type: !2271, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2268, retainedNodes: !209)
!19798 = !DILocalVariable(name: "ctx", arg: 1, scope: !19797, file: !19777, line: 776, type: !2273)
!19799 = !DILocation(line: 776, column: 45, scope: !19797)
!19800 = !DILocalVariable(name: "name", arg: 2, scope: !19797, file: !19777, line: 776, type: !180)
!19801 = !DILocation(line: 776, column: 62, scope: !19797)
!19802 = !DILocalVariable(name: "desc", arg: 3, scope: !19797, file: !19777, line: 776, type: !7)
!19803 = !DILocation(line: 776, column: 72, scope: !19797)
!19804 = !DILocalVariable(name: "acls_set", scope: !19797, file: !19777, line: 778, type: !142)
!19805 = !DILocation(line: 778, column: 8, scope: !19797)
!19806 = !DILocalVariable(name: "early_chmod", scope: !19797, file: !19777, line: 779, type: !142)
!19807 = !DILocation(line: 779, column: 8, scope: !19797)
!19808 = !DILocalVariable(name: "must_chmod", scope: !19797, file: !19777, line: 780, type: !142)
!19809 = !DILocation(line: 780, column: 8, scope: !19797)
!19810 = !DILocalVariable(name: "ret", scope: !19797, file: !19777, line: 781, type: !7)
!19811 = !DILocation(line: 781, column: 7, scope: !19797)
!19812 = !DILocation(line: 796, column: 40, scope: !19797)
!19813 = !DILocation(line: 796, column: 45, scope: !19797)
!19814 = !DILocation(line: 796, column: 50, scope: !19797)
!19815 = !DILocation(line: 796, column: 36, scope: !19797)
!19816 = !DILocation(line: 796, column: 15, scope: !19797)
!19817 = !DILocation(line: 804, column: 7, scope: !19818)
!19818 = distinct !DILexicalBlock(scope: !19797, file: !19777, line: 804, column: 7)
!19819 = !DILocation(line: 804, column: 7, scope: !19797)
!19820 = !DILocation(line: 806, column: 30, scope: !19821)
!19821 = distinct !DILexicalBlock(scope: !19818, file: !19777, line: 805, column: 5)
!19822 = !DILocation(line: 806, column: 36, scope: !19821)
!19823 = !DILocation(line: 806, column: 42, scope: !19821)
!19824 = !DILocation(line: 806, column: 47, scope: !19821)
!19825 = !DILocation(line: 806, column: 13, scope: !19821)
!19826 = !DILocation(line: 806, column: 11, scope: !19821)
!19827 = !DILocation(line: 807, column: 11, scope: !19828)
!19828 = distinct !DILexicalBlock(scope: !19821, file: !19777, line: 807, column: 11)
!19829 = !DILocation(line: 807, column: 15, scope: !19828)
!19830 = !DILocation(line: 807, column: 11, scope: !19821)
!19831 = !DILocation(line: 808, column: 9, scope: !19828)
!19832 = !DILocation(line: 809, column: 5, scope: !19821)
!19833 = !DILocation(line: 812, column: 19, scope: !19797)
!19834 = !DILocation(line: 812, column: 24, scope: !19797)
!19835 = !DILocation(line: 812, column: 30, scope: !19797)
!19836 = !DILocation(line: 812, column: 9, scope: !19797)
!19837 = !DILocation(line: 812, column: 7, scope: !19797)
!19838 = !DILocation(line: 813, column: 9, scope: !19839)
!19839 = distinct !DILexicalBlock(scope: !19797, file: !19777, line: 813, column: 7)
!19840 = !DILocation(line: 813, column: 7, scope: !19797)
!19841 = !DILocalVariable(name: "saved_errno", scope: !19842, file: !19777, line: 815, type: !7)
!19842 = distinct !DILexicalBlock(scope: !19839, file: !19777, line: 814, column: 5)
!19843 = !DILocation(line: 815, column: 11, scope: !19842)
!19844 = !DILocation(line: 815, column: 25, scope: !19842)
!19845 = !DILocation(line: 815, column: 31, scope: !19842)
!19846 = !DILocation(line: 821, column: 23, scope: !19842)
!19847 = !DILocation(line: 821, column: 28, scope: !19842)
!19848 = !DILocation(line: 821, column: 34, scope: !19842)
!19849 = !DILocation(line: 821, column: 13, scope: !19842)
!19850 = !DILocation(line: 821, column: 11, scope: !19842)
!19851 = !DILocation(line: 822, column: 13, scope: !19852)
!19852 = distinct !DILexicalBlock(scope: !19842, file: !19777, line: 822, column: 11)
!19853 = !DILocation(line: 822, column: 11, scope: !19842)
!19854 = !DILocation(line: 823, column: 20, scope: !19852)
!19855 = !DILocation(line: 823, column: 9, scope: !19852)
!19856 = !DILocation(line: 825, column: 11, scope: !19857)
!19857 = distinct !DILexicalBlock(scope: !19842, file: !19777, line: 825, column: 11)
!19858 = !DILocation(line: 825, column: 11, scope: !19842)
!19859 = !DILocation(line: 827, column: 19, scope: !19860)
!19860 = distinct !DILexicalBlock(scope: !19857, file: !19777, line: 826, column: 9)
!19861 = !DILocation(line: 827, column: 11, scope: !19860)
!19862 = !DILocation(line: 827, column: 17, scope: !19860)
!19863 = !DILocation(line: 828, column: 15, scope: !19860)
!19864 = !DILocation(line: 829, column: 9, scope: !19860)
!19865 = !DILocation(line: 830, column: 5, scope: !19842)
!19866 = !DILocation(line: 833, column: 7, scope: !19867)
!19867 = distinct !DILexicalBlock(scope: !19797, file: !19777, line: 833, column: 7)
!19868 = !DILocation(line: 833, column: 18, scope: !19867)
!19869 = !DILocation(line: 833, column: 23, scope: !19867)
!19870 = !DILocation(line: 833, column: 7, scope: !19797)
!19871 = !DILocalVariable(name: "saved_errno", scope: !19872, file: !19777, line: 835, type: !7)
!19872 = distinct !DILexicalBlock(scope: !19867, file: !19777, line: 834, column: 5)
!19873 = !DILocation(line: 835, column: 11, scope: !19872)
!19874 = !DILocation(line: 835, column: 25, scope: !19872)
!19875 = !DILocation(line: 835, column: 31, scope: !19872)
!19876 = !DILocation(line: 837, column: 30, scope: !19872)
!19877 = !DILocation(line: 837, column: 36, scope: !19872)
!19878 = !DILocation(line: 837, column: 42, scope: !19872)
!19879 = !DILocation(line: 837, column: 47, scope: !19872)
!19880 = !DILocation(line: 837, column: 13, scope: !19872)
!19881 = !DILocation(line: 837, column: 11, scope: !19872)
!19882 = !DILocation(line: 839, column: 11, scope: !19883)
!19883 = distinct !DILexicalBlock(scope: !19872, file: !19777, line: 839, column: 11)
!19884 = !DILocation(line: 839, column: 11, scope: !19872)
!19885 = !DILocation(line: 841, column: 19, scope: !19886)
!19886 = distinct !DILexicalBlock(scope: !19883, file: !19777, line: 840, column: 9)
!19887 = !DILocation(line: 841, column: 11, scope: !19886)
!19888 = !DILocation(line: 841, column: 17, scope: !19886)
!19889 = !DILocation(line: 842, column: 15, scope: !19886)
!19890 = !DILocation(line: 843, column: 9, scope: !19886)
!19891 = !DILocation(line: 844, column: 5, scope: !19872)
!19892 = !DILocation(line: 846, column: 10, scope: !19797)
!19893 = !DILocation(line: 846, column: 3, scope: !19797)
!19894 = !DILocation(line: 847, column: 1, scope: !19797)
!19895 = distinct !DISubprogram(name: "set_acls", scope: !19777, file: !19777, line: 485, type: !2280, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2268, retainedNodes: !209)
!19896 = !DILocalVariable(name: "ctx", arg: 1, scope: !19895, file: !19777, line: 485, type: !2273)
!19897 = !DILocation(line: 485, column: 38, scope: !19895)
!19898 = !DILocalVariable(name: "name", arg: 2, scope: !19895, file: !19777, line: 485, type: !180)
!19899 = !DILocation(line: 485, column: 55, scope: !19895)
!19900 = !DILocalVariable(name: "desc", arg: 3, scope: !19895, file: !19777, line: 485, type: !7)
!19901 = !DILocation(line: 485, column: 65, scope: !19895)
!19902 = !DILocalVariable(name: "from_mode", arg: 4, scope: !19895, file: !19777, line: 486, type: !7)
!19903 = !DILocation(line: 486, column: 15, scope: !19895)
!19904 = !DILocalVariable(name: "must_chmod", arg: 5, scope: !19895, file: !19777, line: 486, type: !406)
!19905 = !DILocation(line: 486, column: 32, scope: !19895)
!19906 = !DILocalVariable(name: "acls_set", arg: 6, scope: !19895, file: !19777, line: 486, type: !406)
!19907 = !DILocation(line: 486, column: 50, scope: !19895)
!19908 = !DILocalVariable(name: "ret", scope: !19895, file: !19777, line: 488, type: !7)
!19909 = !DILocation(line: 488, column: 7, scope: !19895)
!19910 = !DILocation(line: 503, column: 9, scope: !19911)
!19911 = distinct !DILexicalBlock(scope: !19895, file: !19777, line: 503, column: 7)
!19912 = !DILocation(line: 503, column: 14, scope: !19911)
!19913 = !{!14075, !2743, i64 24}
!19914 = !DILocation(line: 503, column: 7, scope: !19895)
!19915 = !DILocation(line: 505, column: 11, scope: !19916)
!19916 = distinct !DILexicalBlock(scope: !19917, file: !19777, line: 505, column: 11)
!19917 = distinct !DILexicalBlock(scope: !19911, file: !19777, line: 504, column: 5)
!19918 = !DILocation(line: 505, column: 15, scope: !19916)
!19919 = !DILocation(line: 505, column: 20, scope: !19916)
!19920 = !DILocation(line: 505, column: 23, scope: !19916)
!19921 = !DILocation(line: 505, column: 11, scope: !19917)
!19922 = !DILocation(line: 507, column: 15, scope: !19923)
!19923 = distinct !DILexicalBlock(scope: !19924, file: !19777, line: 507, column: 15)
!19924 = distinct !DILexicalBlock(scope: !19916, file: !19777, line: 506, column: 9)
!19925 = !DILocation(line: 507, column: 20, scope: !19923)
!19926 = !DILocation(line: 507, column: 15, scope: !19924)
!19927 = !DILocation(line: 508, column: 23, scope: !19923)
!19928 = !DILocation(line: 508, column: 28, scope: !19923)
!19929 = !DILocation(line: 508, column: 13, scope: !19923)
!19930 = !DILocation(line: 509, column: 37, scope: !19924)
!19931 = !DILocation(line: 509, column: 42, scope: !19924)
!19932 = !DILocation(line: 509, column: 22, scope: !19924)
!19933 = !DILocation(line: 509, column: 11, scope: !19924)
!19934 = !DILocation(line: 509, column: 16, scope: !19924)
!19935 = !DILocation(line: 509, column: 20, scope: !19924)
!19936 = !DILocation(line: 510, column: 15, scope: !19937)
!19937 = distinct !DILexicalBlock(scope: !19924, file: !19777, line: 510, column: 15)
!19938 = !DILocation(line: 510, column: 20, scope: !19937)
!19939 = !DILocation(line: 510, column: 24, scope: !19937)
!19940 = !DILocation(line: 510, column: 15, scope: !19924)
!19941 = !DILocation(line: 511, column: 17, scope: !19937)
!19942 = !DILocation(line: 511, column: 13, scope: !19937)
!19943 = !DILocation(line: 512, column: 9, scope: !19924)
!19944 = !DILocation(line: 514, column: 11, scope: !19945)
!19945 = distinct !DILexicalBlock(scope: !19917, file: !19777, line: 514, column: 11)
!19946 = !DILocation(line: 514, column: 15, scope: !19945)
!19947 = !DILocation(line: 514, column: 20, scope: !19945)
!19948 = !DILocation(line: 514, column: 23, scope: !19945)
!19949 = !DILocation(line: 514, column: 28, scope: !19945)
!19950 = !DILocation(line: 514, column: 11, scope: !19917)
!19951 = !DILocation(line: 516, column: 34, scope: !19952)
!19952 = distinct !DILexicalBlock(scope: !19953, file: !19777, line: 516, column: 15)
!19953 = distinct !DILexicalBlock(scope: !19945, file: !19777, line: 515, column: 9)
!19954 = !DILocation(line: 516, column: 39, scope: !19952)
!19955 = !DILocation(line: 516, column: 15, scope: !19953)
!19956 = !DILocation(line: 517, column: 31, scope: !19952)
!19957 = !DILocation(line: 517, column: 37, scope: !19952)
!19958 = !DILocation(line: 517, column: 42, scope: !19952)
!19959 = !DILocation(line: 517, column: 19, scope: !19952)
!19960 = !DILocation(line: 517, column: 17, scope: !19952)
!19961 = !DILocation(line: 517, column: 13, scope: !19952)
!19962 = !DILocation(line: 519, column: 33, scope: !19952)
!19963 = !DILocation(line: 519, column: 56, scope: !19952)
!19964 = !DILocation(line: 519, column: 61, scope: !19952)
!19965 = !DILocation(line: 519, column: 19, scope: !19952)
!19966 = !DILocation(line: 519, column: 17, scope: !19952)
!19967 = !DILocation(line: 520, column: 15, scope: !19968)
!19968 = distinct !DILexicalBlock(scope: !19953, file: !19777, line: 520, column: 15)
!19969 = !DILocation(line: 520, column: 19, scope: !19968)
!19970 = !DILocation(line: 520, column: 15, scope: !19953)
!19971 = !DILocation(line: 522, column: 38, scope: !19972)
!19972 = distinct !DILexicalBlock(scope: !19973, file: !19777, line: 522, column: 19)
!19973 = distinct !DILexicalBlock(scope: !19968, file: !19777, line: 521, column: 13)
!19974 = !DILocation(line: 522, column: 21, scope: !19972)
!19975 = !DILocation(line: 522, column: 19, scope: !19973)
!19976 = !DILocation(line: 524, column: 19, scope: !19977)
!19977 = distinct !DILexicalBlock(scope: !19972, file: !19777, line: 523, column: 17)
!19978 = !DILocation(line: 524, column: 24, scope: !19977)
!19979 = !DILocation(line: 524, column: 43, scope: !19977)
!19980 = !DILocation(line: 525, column: 23, scope: !19981)
!19981 = distinct !DILexicalBlock(scope: !19977, file: !19777, line: 525, column: 23)
!19982 = !DILocation(line: 525, column: 33, scope: !19981)
!19983 = !DILocation(line: 525, column: 59, scope: !19981)
!19984 = !DILocation(line: 525, column: 64, scope: !19981)
!19985 = !DILocation(line: 525, column: 36, scope: !19981)
!19986 = !DILocation(line: 525, column: 69, scope: !19981)
!19987 = !DILocation(line: 525, column: 23, scope: !19977)
!19988 = !DILocation(line: 526, column: 25, scope: !19981)
!19989 = !DILocation(line: 526, column: 21, scope: !19981)
!19990 = !DILocation(line: 527, column: 17, scope: !19977)
!19991 = !DILocation(line: 528, column: 13, scope: !19973)
!19992 = !DILocation(line: 531, column: 16, scope: !19993)
!19993 = distinct !DILexicalBlock(scope: !19968, file: !19777, line: 530, column: 13)
!19994 = !DILocation(line: 531, column: 25, scope: !19993)
!19995 = !DILocation(line: 532, column: 19, scope: !19996)
!19996 = distinct !DILexicalBlock(scope: !19993, file: !19777, line: 532, column: 19)
!19997 = !DILocation(line: 532, column: 19, scope: !19993)
!19998 = !DILocation(line: 534, column: 25, scope: !19999)
!19999 = distinct !DILexicalBlock(scope: !20000, file: !19777, line: 534, column: 23)
!20000 = distinct !DILexicalBlock(scope: !19996, file: !19777, line: 533, column: 17)
!20001 = !DILocation(line: 534, column: 35, scope: !19999)
!20002 = !DILocation(line: 534, column: 38, scope: !19999)
!20003 = !DILocation(line: 534, column: 43, scope: !19999)
!20004 = !DILocation(line: 534, column: 55, scope: !19999)
!20005 = !DILocation(line: 535, column: 47, scope: !19999)
!20006 = !DILocation(line: 535, column: 52, scope: !19999)
!20007 = !DILocation(line: 535, column: 23, scope: !19999)
!20008 = !DILocation(line: 534, column: 23, scope: !20000)
!20009 = !DILocation(line: 536, column: 41, scope: !19999)
!20010 = !DILocation(line: 537, column: 41, scope: !19999)
!20011 = !DILocation(line: 537, column: 46, scope: !19999)
!20012 = !DILocation(line: 536, column: 27, scope: !19999)
!20013 = !DILocation(line: 536, column: 25, scope: !19999)
!20014 = !DILocation(line: 536, column: 21, scope: !19999)
!20015 = !DILocation(line: 539, column: 48, scope: !19999)
!20016 = !DILocation(line: 539, column: 27, scope: !19999)
!20017 = !DILocation(line: 539, column: 25, scope: !19999)
!20018 = !DILocation(line: 540, column: 17, scope: !20000)
!20019 = !DILocation(line: 542, column: 9, scope: !19953)
!20020 = !DILocation(line: 543, column: 5, scope: !19917)
!20021 = !DILocation(line: 749, column: 10, scope: !19895)
!20022 = !DILocation(line: 749, column: 3, scope: !19895)
!20023 = distinct !DISubprogram(name: "__argmatch_die", scope: !1390, file: !1390, line: 60, type: !200, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1341, retainedNodes: !209)
!20024 = !DILocation(line: 62, column: 3, scope: !20023)
!20025 = !DILocation(line: 63, column: 1, scope: !20023)
!20026 = distinct !DISubprogram(name: "argmatch", scope: !1390, file: !1390, line: 82, type: !1344, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1341, retainedNodes: !209)
!20027 = !DILocalVariable(name: "arg", arg: 1, scope: !20026, file: !1390, line: 82, type: !180)
!20028 = !DILocation(line: 82, column: 23, scope: !20026)
!20029 = !DILocalVariable(name: "arglist", arg: 2, scope: !20026, file: !1390, line: 82, type: !1346)
!20030 = !DILocation(line: 82, column: 47, scope: !20026)
!20031 = !DILocalVariable(name: "vallist", arg: 3, scope: !20026, file: !1390, line: 83, type: !515)
!20032 = !DILocation(line: 83, column: 23, scope: !20026)
!20033 = !DILocalVariable(name: "valsize", arg: 4, scope: !20026, file: !1390, line: 83, type: !55)
!20034 = !DILocation(line: 83, column: 39, scope: !20026)
!20035 = !DILocalVariable(name: "i", scope: !20026, file: !1390, line: 85, type: !55)
!20036 = !DILocation(line: 85, column: 10, scope: !20026)
!20037 = !DILocalVariable(name: "arglen", scope: !20026, file: !1390, line: 86, type: !55)
!20038 = !DILocation(line: 86, column: 10, scope: !20026)
!20039 = !DILocalVariable(name: "matchind", scope: !20026, file: !1390, line: 87, type: !654)
!20040 = !DILocation(line: 87, column: 13, scope: !20026)
!20041 = !DILocalVariable(name: "ambiguous", scope: !20026, file: !1390, line: 88, type: !142)
!20042 = !DILocation(line: 88, column: 8, scope: !20026)
!20043 = !DILocation(line: 90, column: 20, scope: !20026)
!20044 = !DILocation(line: 90, column: 12, scope: !20026)
!20045 = !DILocation(line: 90, column: 10, scope: !20026)
!20046 = !DILocation(line: 93, column: 10, scope: !20047)
!20047 = distinct !DILexicalBlock(scope: !20026, file: !1390, line: 93, column: 3)
!20048 = !DILocation(line: 93, column: 8, scope: !20047)
!20049 = !DILocation(line: 93, column: 15, scope: !20050)
!20050 = distinct !DILexicalBlock(scope: !20047, file: !1390, line: 93, column: 3)
!20051 = !DILocation(line: 93, column: 23, scope: !20050)
!20052 = !DILocation(line: 93, column: 3, scope: !20047)
!20053 = !DILocation(line: 95, column: 21, scope: !20054)
!20054 = distinct !DILexicalBlock(scope: !20055, file: !1390, line: 95, column: 11)
!20055 = distinct !DILexicalBlock(scope: !20050, file: !1390, line: 94, column: 5)
!20056 = !DILocation(line: 95, column: 29, scope: !20054)
!20057 = !DILocation(line: 95, column: 33, scope: !20054)
!20058 = !DILocation(line: 95, column: 38, scope: !20054)
!20059 = !DILocation(line: 95, column: 12, scope: !20054)
!20060 = !DILocation(line: 95, column: 11, scope: !20055)
!20061 = !DILocation(line: 97, column: 23, scope: !20062)
!20062 = distinct !DILexicalBlock(scope: !20063, file: !1390, line: 97, column: 15)
!20063 = distinct !DILexicalBlock(scope: !20054, file: !1390, line: 96, column: 9)
!20064 = !DILocation(line: 97, column: 31, scope: !20062)
!20065 = !DILocation(line: 97, column: 15, scope: !20062)
!20066 = !DILocation(line: 97, column: 38, scope: !20062)
!20067 = !DILocation(line: 97, column: 35, scope: !20062)
!20068 = !DILocation(line: 97, column: 15, scope: !20063)
!20069 = !DILocation(line: 99, column: 20, scope: !20062)
!20070 = !DILocation(line: 99, column: 13, scope: !20062)
!20071 = !DILocation(line: 100, column: 20, scope: !20072)
!20072 = distinct !DILexicalBlock(scope: !20062, file: !1390, line: 100, column: 20)
!20073 = !DILocation(line: 100, column: 29, scope: !20072)
!20074 = !DILocation(line: 100, column: 20, scope: !20062)
!20075 = !DILocation(line: 102, column: 24, scope: !20072)
!20076 = !DILocation(line: 102, column: 22, scope: !20072)
!20077 = !DILocation(line: 102, column: 13, scope: !20072)
!20078 = !DILocation(line: 106, column: 19, scope: !20079)
!20079 = distinct !DILexicalBlock(scope: !20080, file: !1390, line: 106, column: 19)
!20080 = distinct !DILexicalBlock(scope: !20072, file: !1390, line: 104, column: 13)
!20081 = !DILocation(line: 106, column: 27, scope: !20079)
!20082 = !DILocation(line: 107, column: 19, scope: !20079)
!20083 = !DILocation(line: 107, column: 45, scope: !20079)
!20084 = !DILocation(line: 107, column: 55, scope: !20079)
!20085 = !DILocation(line: 107, column: 65, scope: !20079)
!20086 = !DILocation(line: 107, column: 63, scope: !20079)
!20087 = !DILocation(line: 107, column: 53, scope: !20079)
!20088 = !DILocation(line: 108, column: 45, scope: !20079)
!20089 = !DILocation(line: 108, column: 55, scope: !20079)
!20090 = !DILocation(line: 108, column: 65, scope: !20079)
!20091 = !DILocation(line: 108, column: 63, scope: !20079)
!20092 = !DILocation(line: 108, column: 53, scope: !20079)
!20093 = !DILocation(line: 108, column: 68, scope: !20079)
!20094 = !DILocation(line: 107, column: 22, scope: !20079)
!20095 = !DILocation(line: 106, column: 19, scope: !20080)
!20096 = !DILocation(line: 112, column: 29, scope: !20097)
!20097 = distinct !DILexicalBlock(scope: !20079, file: !1390, line: 109, column: 17)
!20098 = !DILocation(line: 113, column: 17, scope: !20097)
!20099 = !DILocation(line: 115, column: 9, scope: !20063)
!20100 = !DILocation(line: 116, column: 5, scope: !20055)
!20101 = !DILocation(line: 93, column: 28, scope: !20050)
!20102 = !DILocation(line: 93, column: 3, scope: !20050)
!20103 = distinct !{!20103, !20052, !20104}
!20104 = !DILocation(line: 116, column: 5, scope: !20047)
!20105 = !DILocation(line: 117, column: 7, scope: !20106)
!20106 = distinct !DILexicalBlock(scope: !20026, file: !1390, line: 117, column: 7)
!20107 = !DILocation(line: 117, column: 7, scope: !20026)
!20108 = !DILocation(line: 118, column: 5, scope: !20106)
!20109 = !DILocation(line: 120, column: 12, scope: !20106)
!20110 = !DILocation(line: 120, column: 5, scope: !20106)
!20111 = !DILocation(line: 121, column: 1, scope: !20026)
!20112 = distinct !DISubprogram(name: "argmatch_invalid", scope: !1390, file: !1390, line: 129, type: !1347, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1341, retainedNodes: !209)
!20113 = !DILocalVariable(name: "context", arg: 1, scope: !20112, file: !1390, line: 129, type: !180)
!20114 = !DILocation(line: 129, column: 31, scope: !20112)
!20115 = !DILocalVariable(name: "value", arg: 2, scope: !20112, file: !1390, line: 129, type: !180)
!20116 = !DILocation(line: 129, column: 52, scope: !20112)
!20117 = !DILocalVariable(name: "problem", arg: 3, scope: !20112, file: !1390, line: 129, type: !654)
!20118 = !DILocation(line: 129, column: 69, scope: !20112)
!20119 = !DILocalVariable(name: "format", scope: !20112, file: !1390, line: 131, type: !180)
!20120 = !DILocation(line: 131, column: 15, scope: !20112)
!20121 = !DILocation(line: 131, column: 25, scope: !20112)
!20122 = !DILocation(line: 131, column: 33, scope: !20112)
!20123 = !DILocation(line: 132, column: 27, scope: !20112)
!20124 = !DILocation(line: 133, column: 27, scope: !20112)
!20125 = !DILocation(line: 135, column: 16, scope: !20112)
!20126 = !DILocation(line: 135, column: 69, scope: !20112)
!20127 = !DILocation(line: 135, column: 24, scope: !20112)
!20128 = !DILocation(line: 136, column: 22, scope: !20112)
!20129 = !DILocation(line: 136, column: 10, scope: !20112)
!20130 = !DILocation(line: 135, column: 3, scope: !20112)
!20131 = !DILocation(line: 137, column: 1, scope: !20112)
!20132 = distinct !DISubprogram(name: "argmatch_valid", scope: !1390, file: !1390, line: 144, type: !1349, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1341, retainedNodes: !209)
!20133 = !DILocalVariable(name: "arglist", arg: 1, scope: !20132, file: !1390, line: 144, type: !1346)
!20134 = !DILocation(line: 144, column: 36, scope: !20132)
!20135 = !DILocalVariable(name: "vallist", arg: 2, scope: !20132, file: !1390, line: 145, type: !515)
!20136 = !DILocation(line: 145, column: 29, scope: !20132)
!20137 = !DILocalVariable(name: "valsize", arg: 3, scope: !20132, file: !1390, line: 145, type: !55)
!20138 = !DILocation(line: 145, column: 45, scope: !20132)
!20139 = !DILocalVariable(name: "i", scope: !20132, file: !1390, line: 147, type: !55)
!20140 = !DILocation(line: 147, column: 10, scope: !20132)
!20141 = !DILocalVariable(name: "last_val", scope: !20132, file: !1390, line: 148, type: !180)
!20142 = !DILocation(line: 148, column: 15, scope: !20132)
!20143 = !DILocation(line: 152, column: 3, scope: !20132)
!20144 = !DILocation(line: 153, column: 10, scope: !20145)
!20145 = distinct !DILexicalBlock(scope: !20132, file: !1390, line: 153, column: 3)
!20146 = !DILocation(line: 153, column: 8, scope: !20145)
!20147 = !DILocation(line: 153, column: 15, scope: !20148)
!20148 = distinct !DILexicalBlock(scope: !20145, file: !1390, line: 153, column: 3)
!20149 = !DILocation(line: 153, column: 23, scope: !20148)
!20150 = !DILocation(line: 153, column: 3, scope: !20145)
!20151 = !DILocation(line: 154, column: 10, scope: !20152)
!20152 = distinct !DILexicalBlock(scope: !20148, file: !1390, line: 154, column: 9)
!20153 = !DILocation(line: 154, column: 12, scope: !20152)
!20154 = !DILocation(line: 155, column: 9, scope: !20152)
!20155 = !DILocation(line: 155, column: 20, scope: !20152)
!20156 = !DILocation(line: 155, column: 45, scope: !20152)
!20157 = !DILocation(line: 155, column: 55, scope: !20152)
!20158 = !DILocation(line: 155, column: 65, scope: !20152)
!20159 = !DILocation(line: 155, column: 63, scope: !20152)
!20160 = !DILocation(line: 155, column: 53, scope: !20152)
!20161 = !DILocation(line: 155, column: 68, scope: !20152)
!20162 = !DILocation(line: 155, column: 12, scope: !20152)
!20163 = !DILocation(line: 154, column: 9, scope: !20148)
!20164 = !DILocation(line: 157, column: 18, scope: !20165)
!20165 = distinct !DILexicalBlock(scope: !20152, file: !1390, line: 156, column: 7)
!20166 = !DILocation(line: 157, column: 45, scope: !20165)
!20167 = !DILocation(line: 157, column: 53, scope: !20165)
!20168 = !DILocation(line: 157, column: 38, scope: !20165)
!20169 = !DILocation(line: 157, column: 9, scope: !20165)
!20170 = !DILocation(line: 158, column: 35, scope: !20165)
!20171 = !DILocation(line: 158, column: 45, scope: !20165)
!20172 = !DILocation(line: 158, column: 55, scope: !20165)
!20173 = !DILocation(line: 158, column: 53, scope: !20165)
!20174 = !DILocation(line: 158, column: 43, scope: !20165)
!20175 = !DILocation(line: 158, column: 18, scope: !20165)
!20176 = !DILocation(line: 159, column: 7, scope: !20165)
!20177 = !DILocation(line: 162, column: 18, scope: !20178)
!20178 = distinct !DILexicalBlock(scope: !20152, file: !1390, line: 161, column: 7)
!20179 = !DILocation(line: 162, column: 41, scope: !20178)
!20180 = !DILocation(line: 162, column: 49, scope: !20178)
!20181 = !DILocation(line: 162, column: 34, scope: !20178)
!20182 = !DILocation(line: 162, column: 9, scope: !20178)
!20183 = !DILocation(line: 155, column: 75, scope: !20152)
!20184 = !DILocation(line: 153, column: 28, scope: !20148)
!20185 = !DILocation(line: 153, column: 3, scope: !20148)
!20186 = distinct !{!20186, !20150, !20187}
!20187 = !DILocation(line: 163, column: 7, scope: !20145)
!20188 = !DILocation(line: 164, column: 3, scope: !20132)
!20189 = !DILocation(line: 165, column: 1, scope: !20132)
!20190 = distinct !DISubprogram(name: "__xargmatch_internal", scope: !1390, file: !1390, line: 174, type: !1385, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1341, retainedNodes: !209)
!20191 = !DILocalVariable(name: "context", arg: 1, scope: !20190, file: !1390, line: 174, type: !180)
!20192 = !DILocation(line: 174, column: 35, scope: !20190)
!20193 = !DILocalVariable(name: "arg", arg: 2, scope: !20190, file: !1390, line: 175, type: !180)
!20194 = !DILocation(line: 175, column: 35, scope: !20190)
!20195 = !DILocalVariable(name: "arglist", arg: 3, scope: !20190, file: !1390, line: 175, type: !1346)
!20196 = !DILocation(line: 175, column: 59, scope: !20190)
!20197 = !DILocalVariable(name: "vallist", arg: 4, scope: !20190, file: !1390, line: 176, type: !515)
!20198 = !DILocation(line: 176, column: 35, scope: !20190)
!20199 = !DILocalVariable(name: "valsize", arg: 5, scope: !20190, file: !1390, line: 176, type: !55)
!20200 = !DILocation(line: 176, column: 51, scope: !20190)
!20201 = !DILocalVariable(name: "exit_fn", arg: 6, scope: !20190, file: !1390, line: 177, type: !732)
!20202 = !DILocation(line: 177, column: 40, scope: !20190)
!20203 = !DILocalVariable(name: "res", scope: !20190, file: !1390, line: 179, type: !654)
!20204 = !DILocation(line: 179, column: 13, scope: !20190)
!20205 = !DILocation(line: 179, column: 29, scope: !20190)
!20206 = !DILocation(line: 179, column: 34, scope: !20190)
!20207 = !DILocation(line: 179, column: 43, scope: !20190)
!20208 = !DILocation(line: 179, column: 52, scope: !20190)
!20209 = !DILocation(line: 179, column: 19, scope: !20190)
!20210 = !DILocation(line: 180, column: 7, scope: !20211)
!20211 = distinct !DILexicalBlock(scope: !20190, file: !1390, line: 180, column: 7)
!20212 = !DILocation(line: 180, column: 11, scope: !20211)
!20213 = !DILocation(line: 180, column: 7, scope: !20190)
!20214 = !DILocation(line: 182, column: 12, scope: !20211)
!20215 = !DILocation(line: 182, column: 5, scope: !20211)
!20216 = !DILocation(line: 185, column: 21, scope: !20190)
!20217 = !DILocation(line: 185, column: 30, scope: !20190)
!20218 = !DILocation(line: 185, column: 35, scope: !20190)
!20219 = !DILocation(line: 185, column: 3, scope: !20190)
!20220 = !DILocation(line: 186, column: 19, scope: !20190)
!20221 = !DILocation(line: 186, column: 28, scope: !20190)
!20222 = !DILocation(line: 186, column: 37, scope: !20190)
!20223 = !DILocation(line: 186, column: 3, scope: !20190)
!20224 = !DILocation(line: 187, column: 5, scope: !20190)
!20225 = !DILocation(line: 187, column: 3, scope: !20190)
!20226 = !DILocation(line: 189, column: 3, scope: !20190)
!20227 = !DILocation(line: 190, column: 1, scope: !20190)
!20228 = distinct !DISubprogram(name: "argmatch_to_argument", scope: !1390, file: !1390, line: 195, type: !1387, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1341, retainedNodes: !209)
!20229 = !DILocalVariable(name: "value", arg: 1, scope: !20228, file: !1390, line: 195, type: !515)
!20230 = !DILocation(line: 195, column: 35, scope: !20228)
!20231 = !DILocalVariable(name: "arglist", arg: 2, scope: !20228, file: !1390, line: 196, type: !1346)
!20232 = !DILocation(line: 196, column: 42, scope: !20228)
!20233 = !DILocalVariable(name: "vallist", arg: 3, scope: !20228, file: !1390, line: 197, type: !515)
!20234 = !DILocation(line: 197, column: 35, scope: !20228)
!20235 = !DILocalVariable(name: "valsize", arg: 4, scope: !20228, file: !1390, line: 197, type: !55)
!20236 = !DILocation(line: 197, column: 51, scope: !20228)
!20237 = !DILocalVariable(name: "i", scope: !20228, file: !1390, line: 199, type: !55)
!20238 = !DILocation(line: 199, column: 10, scope: !20228)
!20239 = !DILocation(line: 201, column: 10, scope: !20240)
!20240 = distinct !DILexicalBlock(scope: !20228, file: !1390, line: 201, column: 3)
!20241 = !DILocation(line: 201, column: 8, scope: !20240)
!20242 = !DILocation(line: 201, column: 15, scope: !20243)
!20243 = distinct !DILexicalBlock(scope: !20240, file: !1390, line: 201, column: 3)
!20244 = !DILocation(line: 201, column: 23, scope: !20243)
!20245 = !DILocation(line: 201, column: 3, scope: !20240)
!20246 = !DILocation(line: 202, column: 18, scope: !20247)
!20247 = distinct !DILexicalBlock(scope: !20243, file: !1390, line: 202, column: 9)
!20248 = !DILocation(line: 202, column: 40, scope: !20247)
!20249 = !DILocation(line: 202, column: 50, scope: !20247)
!20250 = !DILocation(line: 202, column: 60, scope: !20247)
!20251 = !DILocation(line: 202, column: 58, scope: !20247)
!20252 = !DILocation(line: 202, column: 48, scope: !20247)
!20253 = !DILocation(line: 202, column: 63, scope: !20247)
!20254 = !DILocation(line: 202, column: 10, scope: !20247)
!20255 = !DILocation(line: 202, column: 9, scope: !20243)
!20256 = !DILocation(line: 203, column: 14, scope: !20247)
!20257 = !DILocation(line: 203, column: 22, scope: !20247)
!20258 = !DILocation(line: 203, column: 7, scope: !20247)
!20259 = !DILocation(line: 202, column: 70, scope: !20247)
!20260 = !DILocation(line: 201, column: 28, scope: !20243)
!20261 = !DILocation(line: 201, column: 3, scope: !20243)
!20262 = distinct !{!20262, !20245, !20263}
!20263 = !DILocation(line: 203, column: 23, scope: !20240)
!20264 = !DILocation(line: 204, column: 3, scope: !20228)
!20265 = !DILocation(line: 205, column: 1, scope: !20228)
!20266 = distinct !DISubprogram(name: "rotl64", scope: !20267, file: !20267, line: 39, type: !2285, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2282, retainedNodes: !209)
!20267 = !DIFile(filename: "./lib/bitrotate.h", directory: "/home/mbarbar/clone/coreutils")
!20268 = !DILocalVariable(name: "x", arg: 1, scope: !20266, file: !20267, line: 39, type: !1486)
!20269 = !DILocation(line: 39, column: 18, scope: !20266)
!20270 = !DILocalVariable(name: "n", arg: 2, scope: !20266, file: !20267, line: 39, type: !7)
!20271 = !DILocation(line: 39, column: 25, scope: !20266)
!20272 = !DILocation(line: 41, column: 12, scope: !20266)
!20273 = !DILocation(line: 41, column: 17, scope: !20266)
!20274 = !DILocation(line: 41, column: 14, scope: !20266)
!20275 = !DILocation(line: 41, column: 23, scope: !20266)
!20276 = !DILocation(line: 41, column: 34, scope: !20266)
!20277 = !DILocation(line: 41, column: 32, scope: !20266)
!20278 = !DILocation(line: 41, column: 25, scope: !20266)
!20279 = !DILocation(line: 41, column: 20, scope: !20266)
!20280 = !DILocation(line: 41, column: 3, scope: !20266)
!20281 = distinct !DISubprogram(name: "rotr64", scope: !20267, file: !20267, line: 48, type: !2285, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2282, retainedNodes: !209)
!20282 = !DILocalVariable(name: "x", arg: 1, scope: !20281, file: !20267, line: 48, type: !1486)
!20283 = !DILocation(line: 48, column: 18, scope: !20281)
!20284 = !DILocalVariable(name: "n", arg: 2, scope: !20281, file: !20267, line: 48, type: !7)
!20285 = !DILocation(line: 48, column: 25, scope: !20281)
!20286 = !DILocation(line: 50, column: 12, scope: !20281)
!20287 = !DILocation(line: 50, column: 17, scope: !20281)
!20288 = !DILocation(line: 50, column: 14, scope: !20281)
!20289 = !DILocation(line: 50, column: 23, scope: !20281)
!20290 = !DILocation(line: 50, column: 34, scope: !20281)
!20291 = !DILocation(line: 50, column: 32, scope: !20281)
!20292 = !DILocation(line: 50, column: 25, scope: !20281)
!20293 = !DILocation(line: 50, column: 20, scope: !20281)
!20294 = !DILocation(line: 50, column: 3, scope: !20281)
!20295 = distinct !DISubprogram(name: "rotl32", scope: !20267, file: !20267, line: 58, type: !2287, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2282, retainedNodes: !209)
!20296 = !DILocalVariable(name: "x", arg: 1, scope: !20295, file: !20267, line: 58, type: !1491)
!20297 = !DILocation(line: 58, column: 18, scope: !20295)
!20298 = !DILocalVariable(name: "n", arg: 2, scope: !20295, file: !20267, line: 58, type: !7)
!20299 = !DILocation(line: 58, column: 25, scope: !20295)
!20300 = !DILocation(line: 60, column: 12, scope: !20295)
!20301 = !DILocation(line: 60, column: 17, scope: !20295)
!20302 = !DILocation(line: 60, column: 14, scope: !20295)
!20303 = !DILocation(line: 60, column: 23, scope: !20295)
!20304 = !DILocation(line: 60, column: 34, scope: !20295)
!20305 = !DILocation(line: 60, column: 32, scope: !20295)
!20306 = !DILocation(line: 60, column: 25, scope: !20295)
!20307 = !DILocation(line: 60, column: 20, scope: !20295)
!20308 = !DILocation(line: 60, column: 3, scope: !20295)
!20309 = distinct !DISubprogram(name: "rotr32", scope: !20267, file: !20267, line: 67, type: !2287, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2282, retainedNodes: !209)
!20310 = !DILocalVariable(name: "x", arg: 1, scope: !20309, file: !20267, line: 67, type: !1491)
!20311 = !DILocation(line: 67, column: 18, scope: !20309)
!20312 = !DILocalVariable(name: "n", arg: 2, scope: !20309, file: !20267, line: 67, type: !7)
!20313 = !DILocation(line: 67, column: 25, scope: !20309)
!20314 = !DILocation(line: 69, column: 12, scope: !20309)
!20315 = !DILocation(line: 69, column: 17, scope: !20309)
!20316 = !DILocation(line: 69, column: 14, scope: !20309)
!20317 = !DILocation(line: 69, column: 23, scope: !20309)
!20318 = !DILocation(line: 69, column: 34, scope: !20309)
!20319 = !DILocation(line: 69, column: 32, scope: !20309)
!20320 = !DILocation(line: 69, column: 25, scope: !20309)
!20321 = !DILocation(line: 69, column: 20, scope: !20309)
!20322 = !DILocation(line: 69, column: 3, scope: !20309)
!20323 = distinct !DISubprogram(name: "rotl_sz", scope: !20267, file: !20267, line: 76, type: !2289, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2282, retainedNodes: !209)
!20324 = !DILocalVariable(name: "x", arg: 1, scope: !20323, file: !20267, line: 76, type: !55)
!20325 = !DILocation(line: 76, column: 17, scope: !20323)
!20326 = !DILocalVariable(name: "n", arg: 2, scope: !20323, file: !20267, line: 76, type: !7)
!20327 = !DILocation(line: 76, column: 24, scope: !20323)
!20328 = !DILocation(line: 78, column: 12, scope: !20323)
!20329 = !DILocation(line: 78, column: 17, scope: !20323)
!20330 = !DILocation(line: 78, column: 14, scope: !20323)
!20331 = !DILocation(line: 78, column: 23, scope: !20323)
!20332 = !DILocation(line: 78, column: 53, scope: !20323)
!20333 = !DILocation(line: 78, column: 51, scope: !20323)
!20334 = !DILocation(line: 78, column: 25, scope: !20323)
!20335 = !DILocation(line: 78, column: 20, scope: !20323)
!20336 = !DILocation(line: 78, column: 3, scope: !20323)
!20337 = distinct !DISubprogram(name: "rotr_sz", scope: !20267, file: !20267, line: 85, type: !2289, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2282, retainedNodes: !209)
!20338 = !DILocalVariable(name: "x", arg: 1, scope: !20337, file: !20267, line: 85, type: !55)
!20339 = !DILocation(line: 85, column: 17, scope: !20337)
!20340 = !DILocalVariable(name: "n", arg: 2, scope: !20337, file: !20267, line: 85, type: !7)
!20341 = !DILocation(line: 85, column: 24, scope: !20337)
!20342 = !DILocation(line: 87, column: 12, scope: !20337)
!20343 = !DILocation(line: 87, column: 17, scope: !20337)
!20344 = !DILocation(line: 87, column: 14, scope: !20337)
!20345 = !DILocation(line: 87, column: 23, scope: !20337)
!20346 = !DILocation(line: 87, column: 53, scope: !20337)
!20347 = !DILocation(line: 87, column: 51, scope: !20337)
!20348 = !DILocation(line: 87, column: 25, scope: !20337)
!20349 = !DILocation(line: 87, column: 20, scope: !20337)
!20350 = !DILocation(line: 87, column: 3, scope: !20337)
!20351 = distinct !DISubprogram(name: "rotl16", scope: !20267, file: !20267, line: 96, type: !2291, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2282, retainedNodes: !209)
!20352 = !DILocalVariable(name: "x", arg: 1, scope: !20351, file: !20267, line: 96, type: !2293)
!20353 = !DILocation(line: 96, column: 18, scope: !20351)
!20354 = !DILocalVariable(name: "n", arg: 2, scope: !20351, file: !20267, line: 96, type: !7)
!20355 = !DILocation(line: 96, column: 25, scope: !20351)
!20356 = !DILocation(line: 98, column: 27, scope: !20351)
!20357 = !DILocation(line: 98, column: 12, scope: !20351)
!20358 = !DILocation(line: 98, column: 32, scope: !20351)
!20359 = !DILocation(line: 98, column: 29, scope: !20351)
!20360 = !DILocation(line: 98, column: 53, scope: !20351)
!20361 = !DILocation(line: 98, column: 38, scope: !20351)
!20362 = !DILocation(line: 98, column: 64, scope: !20351)
!20363 = !DILocation(line: 98, column: 62, scope: !20351)
!20364 = !DILocation(line: 98, column: 55, scope: !20351)
!20365 = !DILocation(line: 98, column: 35, scope: !20351)
!20366 = !DILocation(line: 99, column: 10, scope: !20351)
!20367 = !DILocation(line: 98, column: 10, scope: !20351)
!20368 = !DILocation(line: 98, column: 3, scope: !20351)
!20369 = distinct !DISubprogram(name: "rotr16", scope: !20267, file: !20267, line: 108, type: !2291, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2282, retainedNodes: !209)
!20370 = !DILocalVariable(name: "x", arg: 1, scope: !20369, file: !20267, line: 108, type: !2293)
!20371 = !DILocation(line: 108, column: 18, scope: !20369)
!20372 = !DILocalVariable(name: "n", arg: 2, scope: !20369, file: !20267, line: 108, type: !7)
!20373 = !DILocation(line: 108, column: 25, scope: !20369)
!20374 = !DILocation(line: 110, column: 27, scope: !20369)
!20375 = !DILocation(line: 110, column: 12, scope: !20369)
!20376 = !DILocation(line: 110, column: 32, scope: !20369)
!20377 = !DILocation(line: 110, column: 29, scope: !20369)
!20378 = !DILocation(line: 110, column: 53, scope: !20369)
!20379 = !DILocation(line: 110, column: 38, scope: !20369)
!20380 = !DILocation(line: 110, column: 64, scope: !20369)
!20381 = !DILocation(line: 110, column: 62, scope: !20369)
!20382 = !DILocation(line: 110, column: 55, scope: !20369)
!20383 = !DILocation(line: 110, column: 35, scope: !20369)
!20384 = !DILocation(line: 111, column: 10, scope: !20369)
!20385 = !DILocation(line: 110, column: 10, scope: !20369)
!20386 = !DILocation(line: 110, column: 3, scope: !20369)
!20387 = distinct !DISubprogram(name: "rotl8", scope: !20267, file: !20267, line: 120, type: !2295, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2282, retainedNodes: !209)
!20388 = !DILocalVariable(name: "x", arg: 1, scope: !20387, file: !20267, line: 120, type: !2297)
!20389 = !DILocation(line: 120, column: 16, scope: !20387)
!20390 = !DILocalVariable(name: "n", arg: 2, scope: !20387, file: !20267, line: 120, type: !7)
!20391 = !DILocation(line: 120, column: 23, scope: !20387)
!20392 = !DILocation(line: 122, column: 27, scope: !20387)
!20393 = !DILocation(line: 122, column: 12, scope: !20387)
!20394 = !DILocation(line: 122, column: 32, scope: !20387)
!20395 = !DILocation(line: 122, column: 29, scope: !20387)
!20396 = !DILocation(line: 122, column: 53, scope: !20387)
!20397 = !DILocation(line: 122, column: 38, scope: !20387)
!20398 = !DILocation(line: 122, column: 63, scope: !20387)
!20399 = !DILocation(line: 122, column: 61, scope: !20387)
!20400 = !DILocation(line: 122, column: 55, scope: !20387)
!20401 = !DILocation(line: 122, column: 35, scope: !20387)
!20402 = !DILocation(line: 122, column: 68, scope: !20387)
!20403 = !DILocation(line: 122, column: 10, scope: !20387)
!20404 = !DILocation(line: 122, column: 3, scope: !20387)
!20405 = distinct !DISubprogram(name: "rotr8", scope: !20267, file: !20267, line: 131, type: !2295, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2282, retainedNodes: !209)
!20406 = !DILocalVariable(name: "x", arg: 1, scope: !20405, file: !20267, line: 131, type: !2297)
!20407 = !DILocation(line: 131, column: 16, scope: !20405)
!20408 = !DILocalVariable(name: "n", arg: 2, scope: !20405, file: !20267, line: 131, type: !7)
!20409 = !DILocation(line: 131, column: 23, scope: !20405)
!20410 = !DILocation(line: 133, column: 27, scope: !20405)
!20411 = !DILocation(line: 133, column: 12, scope: !20405)
!20412 = !DILocation(line: 133, column: 32, scope: !20405)
!20413 = !DILocation(line: 133, column: 29, scope: !20405)
!20414 = !DILocation(line: 133, column: 53, scope: !20405)
!20415 = !DILocation(line: 133, column: 38, scope: !20405)
!20416 = !DILocation(line: 133, column: 63, scope: !20405)
!20417 = !DILocation(line: 133, column: 61, scope: !20405)
!20418 = !DILocation(line: 133, column: 55, scope: !20405)
!20419 = !DILocation(line: 133, column: 35, scope: !20405)
!20420 = !DILocation(line: 133, column: 68, scope: !20405)
!20421 = !DILocation(line: 133, column: 10, scope: !20405)
!20422 = !DILocation(line: 133, column: 3, scope: !20405)
!20423 = distinct !DISubprogram(name: "c_strcasecmp", scope: !20424, file: !20424, line: 27, type: !1865, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2299, retainedNodes: !209)
!20424 = !DIFile(filename: "lib/c-strcasecmp.c", directory: "/home/mbarbar/clone/coreutils")
!20425 = !DILocalVariable(name: "s1", arg: 1, scope: !20423, file: !20424, line: 27, type: !180)
!20426 = !DILocation(line: 27, column: 27, scope: !20423)
!20427 = !DILocalVariable(name: "s2", arg: 2, scope: !20423, file: !20424, line: 27, type: !180)
!20428 = !DILocation(line: 27, column: 43, scope: !20423)
!20429 = !DILocalVariable(name: "p1", scope: !20423, file: !20424, line: 29, type: !554)
!20430 = !DILocation(line: 29, column: 33, scope: !20423)
!20431 = !DILocation(line: 29, column: 62, scope: !20423)
!20432 = !DILocalVariable(name: "p2", scope: !20423, file: !20424, line: 30, type: !554)
!20433 = !DILocation(line: 30, column: 33, scope: !20423)
!20434 = !DILocation(line: 30, column: 62, scope: !20423)
!20435 = !DILocalVariable(name: "c1", scope: !20423, file: !20424, line: 31, type: !556)
!20436 = !DILocation(line: 31, column: 17, scope: !20423)
!20437 = !DILocalVariable(name: "c2", scope: !20423, file: !20424, line: 31, type: !556)
!20438 = !DILocation(line: 31, column: 21, scope: !20423)
!20439 = !DILocation(line: 33, column: 7, scope: !20440)
!20440 = distinct !DILexicalBlock(scope: !20423, file: !20424, line: 33, column: 7)
!20441 = !DILocation(line: 33, column: 13, scope: !20440)
!20442 = !DILocation(line: 33, column: 10, scope: !20440)
!20443 = !DILocation(line: 33, column: 7, scope: !20423)
!20444 = !DILocation(line: 34, column: 5, scope: !20440)
!20445 = !DILocation(line: 36, column: 3, scope: !20423)
!20446 = !DILocation(line: 38, column: 24, scope: !20447)
!20447 = distinct !DILexicalBlock(scope: !20423, file: !20424, line: 37, column: 5)
!20448 = !DILocation(line: 38, column: 23, scope: !20447)
!20449 = !DILocation(line: 38, column: 12, scope: !20447)
!20450 = !DILocation(line: 38, column: 10, scope: !20447)
!20451 = !DILocation(line: 39, column: 24, scope: !20447)
!20452 = !DILocation(line: 39, column: 23, scope: !20447)
!20453 = !DILocation(line: 39, column: 12, scope: !20447)
!20454 = !DILocation(line: 39, column: 10, scope: !20447)
!20455 = !DILocation(line: 41, column: 11, scope: !20456)
!20456 = distinct !DILexicalBlock(scope: !20447, file: !20424, line: 41, column: 11)
!20457 = !DILocation(line: 41, column: 14, scope: !20456)
!20458 = !DILocation(line: 41, column: 11, scope: !20447)
!20459 = !DILocation(line: 42, column: 9, scope: !20456)
!20460 = !DILocation(line: 44, column: 7, scope: !20447)
!20461 = !DILocation(line: 45, column: 7, scope: !20447)
!20462 = !DILocation(line: 46, column: 5, scope: !20447)
!20463 = !DILocation(line: 47, column: 10, scope: !20423)
!20464 = !DILocation(line: 47, column: 16, scope: !20423)
!20465 = !DILocation(line: 47, column: 13, scope: !20423)
!20466 = distinct !{!20466, !20445, !20467}
!20467 = !DILocation(line: 47, column: 18, scope: !20423)
!20468 = !DILocation(line: 50, column: 12, scope: !20469)
!20469 = distinct !DILexicalBlock(scope: !20423, file: !20424, line: 49, column: 7)
!20470 = !DILocation(line: 50, column: 17, scope: !20469)
!20471 = !DILocation(line: 50, column: 15, scope: !20469)
!20472 = !DILocation(line: 50, column: 5, scope: !20469)
!20473 = !DILocation(line: 56, column: 1, scope: !20423)
!20474 = distinct !DISubprogram(name: "close_stream", scope: !20475, file: !20475, line: 56, type: !2305, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2302, retainedNodes: !209)
!20475 = !DIFile(filename: "lib/close-stream.c", directory: "/home/mbarbar/clone/coreutils")
!20476 = !DILocalVariable(name: "stream", arg: 1, scope: !20474, file: !20475, line: 56, type: !2307)
!20477 = !DILocation(line: 56, column: 21, scope: !20474)
!20478 = !DILocalVariable(name: "some_pending", scope: !20474, file: !20475, line: 58, type: !2341)
!20479 = !DILocation(line: 58, column: 14, scope: !20474)
!20480 = !DILocation(line: 58, column: 42, scope: !20474)
!20481 = !DILocation(line: 58, column: 30, scope: !20474)
!20482 = !DILocation(line: 58, column: 50, scope: !20474)
!20483 = !DILocalVariable(name: "prev_fail", scope: !20474, file: !20475, line: 59, type: !2341)
!20484 = !DILocation(line: 59, column: 14, scope: !20474)
!20485 = !DILocation(line: 59, column: 27, scope: !20474)
!20486 = !DILocation(line: 59, column: 43, scope: !20474)
!20487 = !DILocalVariable(name: "fclose_fail", scope: !20474, file: !20475, line: 60, type: !2341)
!20488 = !DILocation(line: 60, column: 14, scope: !20474)
!20489 = !DILocation(line: 60, column: 37, scope: !20474)
!20490 = !DILocation(line: 60, column: 29, scope: !20474)
!20491 = !DILocation(line: 60, column: 45, scope: !20474)
!20492 = !DILocation(line: 70, column: 7, scope: !20493)
!20493 = distinct !DILexicalBlock(scope: !20474, file: !20475, line: 70, column: 7)
!20494 = !DILocation(line: 70, column: 17, scope: !20493)
!20495 = !DILocation(line: 70, column: 21, scope: !20493)
!20496 = !DILocation(line: 70, column: 33, scope: !20493)
!20497 = !DILocation(line: 70, column: 37, scope: !20493)
!20498 = !DILocation(line: 70, column: 50, scope: !20493)
!20499 = !DILocation(line: 70, column: 53, scope: !20493)
!20500 = !DILocation(line: 70, column: 59, scope: !20493)
!20501 = !DILocation(line: 70, column: 7, scope: !20474)
!20502 = !DILocation(line: 72, column: 13, scope: !20503)
!20503 = distinct !DILexicalBlock(scope: !20504, file: !20475, line: 72, column: 11)
!20504 = distinct !DILexicalBlock(scope: !20493, file: !20475, line: 71, column: 5)
!20505 = !DILocation(line: 72, column: 11, scope: !20504)
!20506 = !DILocation(line: 73, column: 9, scope: !20503)
!20507 = !DILocation(line: 73, column: 15, scope: !20503)
!20508 = !DILocation(line: 74, column: 7, scope: !20504)
!20509 = !DILocation(line: 77, column: 3, scope: !20474)
!20510 = !DILocation(line: 78, column: 1, scope: !20474)
!20511 = distinct !DISubprogram(name: "opendir_safer", scope: !20512, file: !20512, line: 31, type: !2345, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2342, retainedNodes: !209)
!20512 = !DIFile(filename: "lib/opendir-safer.c", directory: "/home/mbarbar/clone/coreutils")
!20513 = !DILocalVariable(name: "name", arg: 1, scope: !20511, file: !20512, line: 31, type: !180)
!20514 = !DILocation(line: 31, column: 28, scope: !20511)
!20515 = !DILocalVariable(name: "dp", scope: !20511, file: !20512, line: 33, type: !695)
!20516 = !DILocation(line: 33, column: 8, scope: !20511)
!20517 = !DILocation(line: 33, column: 22, scope: !20511)
!20518 = !DILocation(line: 33, column: 13, scope: !20511)
!20519 = !DILocation(line: 35, column: 7, scope: !20520)
!20520 = distinct !DILexicalBlock(scope: !20511, file: !20512, line: 35, column: 7)
!20521 = !DILocation(line: 35, column: 7, scope: !20511)
!20522 = !DILocalVariable(name: "fd", scope: !20523, file: !20512, line: 37, type: !7)
!20523 = distinct !DILexicalBlock(scope: !20520, file: !20512, line: 36, column: 5)
!20524 = !DILocation(line: 37, column: 11, scope: !20523)
!20525 = !DILocation(line: 37, column: 23, scope: !20523)
!20526 = !DILocation(line: 37, column: 16, scope: !20523)
!20527 = !DILocation(line: 39, column: 16, scope: !20528)
!20528 = distinct !DILexicalBlock(scope: !20523, file: !20512, line: 39, column: 11)
!20529 = !DILocation(line: 39, column: 13, scope: !20528)
!20530 = !DILocation(line: 39, column: 19, scope: !20528)
!20531 = !DILocation(line: 39, column: 22, scope: !20528)
!20532 = !DILocation(line: 39, column: 25, scope: !20528)
!20533 = !DILocation(line: 39, column: 11, scope: !20523)
!20534 = !DILocalVariable(name: "newdp", scope: !20535, file: !20512, line: 49, type: !695)
!20535 = distinct !DILexicalBlock(scope: !20528, file: !20512, line: 40, column: 9)
!20536 = !DILocation(line: 49, column: 16, scope: !20535)
!20537 = !DILocalVariable(name: "e", scope: !20535, file: !20512, line: 50, type: !7)
!20538 = !DILocation(line: 50, column: 15, scope: !20535)
!20539 = !DILocalVariable(name: "f", scope: !20535, file: !20512, line: 52, type: !7)
!20540 = !DILocation(line: 52, column: 15, scope: !20535)
!20541 = !DILocation(line: 52, column: 26, scope: !20535)
!20542 = !DILocation(line: 52, column: 19, scope: !20535)
!20543 = !DILocation(line: 53, column: 15, scope: !20544)
!20544 = distinct !DILexicalBlock(scope: !20535, file: !20512, line: 53, column: 15)
!20545 = !DILocation(line: 53, column: 17, scope: !20544)
!20546 = !DILocation(line: 53, column: 15, scope: !20535)
!20547 = !DILocation(line: 55, column: 19, scope: !20548)
!20548 = distinct !DILexicalBlock(scope: !20544, file: !20512, line: 54, column: 13)
!20549 = !DILocation(line: 55, column: 17, scope: !20548)
!20550 = !DILocation(line: 56, column: 21, scope: !20548)
!20551 = !DILocation(line: 57, column: 13, scope: !20548)
!20552 = !DILocation(line: 60, column: 34, scope: !20553)
!20553 = distinct !DILexicalBlock(scope: !20544, file: !20512, line: 59, column: 13)
!20554 = !DILocation(line: 60, column: 23, scope: !20553)
!20555 = !DILocation(line: 60, column: 21, scope: !20553)
!20556 = !DILocation(line: 61, column: 19, scope: !20553)
!20557 = !DILocation(line: 61, column: 17, scope: !20553)
!20558 = !DILocation(line: 62, column: 21, scope: !20559)
!20559 = distinct !DILexicalBlock(scope: !20553, file: !20512, line: 62, column: 19)
!20560 = !DILocation(line: 62, column: 19, scope: !20553)
!20561 = !DILocation(line: 63, column: 24, scope: !20559)
!20562 = !DILocation(line: 63, column: 17, scope: !20559)
!20563 = !DILocation(line: 69, column: 21, scope: !20535)
!20564 = !DILocation(line: 69, column: 11, scope: !20535)
!20565 = !DILocation(line: 70, column: 19, scope: !20535)
!20566 = !DILocation(line: 70, column: 11, scope: !20535)
!20567 = !DILocation(line: 70, column: 17, scope: !20535)
!20568 = !DILocation(line: 71, column: 16, scope: !20535)
!20569 = !DILocation(line: 71, column: 14, scope: !20535)
!20570 = !DILocation(line: 72, column: 9, scope: !20535)
!20571 = !DILocation(line: 73, column: 5, scope: !20523)
!20572 = !DILocation(line: 75, column: 10, scope: !20511)
!20573 = !DILocation(line: 75, column: 3, scope: !20511)
!20574 = distinct !DISubprogram(name: "gettime", scope: !20575, file: !20575, line: 29, type: !2350, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2347, retainedNodes: !209)
!20575 = !DIFile(filename: "lib/gettime.c", directory: "/home/mbarbar/clone/coreutils")
!20576 = !DILocalVariable(name: "ts", arg: 1, scope: !20574, file: !20575, line: 29, type: !2352)
!20577 = !DILocation(line: 29, column: 27, scope: !20574)
!20578 = !DILocation(line: 32, column: 34, scope: !20574)
!20579 = !DILocation(line: 32, column: 3, scope: !20574)
!20580 = !DILocation(line: 39, column: 1, scope: !20574)
!20581 = distinct !DISubprogram(name: "current_timespec", scope: !20575, file: !20575, line: 44, type: !2357, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2347, retainedNodes: !209)
!20582 = !DILocalVariable(name: "ts", scope: !20581, file: !20575, line: 46, type: !2353)
!20583 = !DILocation(line: 46, column: 19, scope: !20581)
!20584 = !DILocation(line: 47, column: 3, scope: !20581)
!20585 = !DILocation(line: 48, column: 3, scope: !20581)
!20586 = distinct !DISubprogram(name: "hard_locale", scope: !20587, file: !20587, line: 38, type: !256, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2359, retainedNodes: !209)
!20587 = !DIFile(filename: "lib/hard-locale.c", directory: "/home/mbarbar/clone/coreutils")
!20588 = !DILocalVariable(name: "category", arg: 1, scope: !20586, file: !20587, line: 38, type: !7)
!20589 = !DILocation(line: 38, column: 18, scope: !20586)
!20590 = !DILocalVariable(name: "hard", scope: !20586, file: !20587, line: 40, type: !142)
!20591 = !DILocation(line: 40, column: 8, scope: !20586)
!20592 = !DILocalVariable(name: "p", scope: !20586, file: !20587, line: 41, type: !180)
!20593 = !DILocation(line: 41, column: 15, scope: !20586)
!20594 = !DILocation(line: 41, column: 30, scope: !20586)
!20595 = !DILocation(line: 41, column: 19, scope: !20586)
!20596 = !DILocation(line: 43, column: 7, scope: !20597)
!20597 = distinct !DILexicalBlock(scope: !20586, file: !20587, line: 43, column: 7)
!20598 = !DILocation(line: 43, column: 7, scope: !20586)
!20599 = !DILocation(line: 47, column: 23, scope: !20600)
!20600 = distinct !DILexicalBlock(scope: !20601, file: !20587, line: 47, column: 15)
!20601 = distinct !DILexicalBlock(scope: !20602, file: !20587, line: 46, column: 9)
!20602 = distinct !DILexicalBlock(scope: !20603, file: !20587, line: 45, column: 11)
!20603 = distinct !DILexicalBlock(scope: !20597, file: !20587, line: 44, column: 5)
!20604 = !DILocation(line: 47, column: 15, scope: !20600)
!20605 = !DILocation(line: 47, column: 31, scope: !20600)
!20606 = !DILocation(line: 47, column: 36, scope: !20600)
!20607 = !DILocation(line: 47, column: 47, scope: !20600)
!20608 = !DILocation(line: 47, column: 39, scope: !20600)
!20609 = !DILocation(line: 47, column: 59, scope: !20600)
!20610 = !DILocation(line: 47, column: 15, scope: !20601)
!20611 = !DILocation(line: 48, column: 18, scope: !20600)
!20612 = !DILocation(line: 48, column: 13, scope: !20600)
!20613 = !DILocation(line: 69, column: 5, scope: !20603)
!20614 = !DILocation(line: 71, column: 10, scope: !20586)
!20615 = !DILocation(line: 71, column: 3, scope: !20586)
!20616 = distinct !DISubprogram(name: "hash_pjw", scope: !20617, file: !20617, line: 31, type: !635, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2362, retainedNodes: !209)
!20617 = !DIFile(filename: "lib/hash-pjw.c", directory: "/home/mbarbar/clone/coreutils")
!20618 = !DILocalVariable(name: "x", arg: 1, scope: !20616, file: !20617, line: 31, type: !515)
!20619 = !DILocation(line: 31, column: 23, scope: !20616)
!20620 = !DILocalVariable(name: "tablesize", arg: 2, scope: !20616, file: !20617, line: 31, type: !55)
!20621 = !DILocation(line: 31, column: 33, scope: !20616)
!20622 = !DILocalVariable(name: "s", scope: !20616, file: !20617, line: 33, type: !180)
!20623 = !DILocation(line: 33, column: 15, scope: !20616)
!20624 = !DILocalVariable(name: "h", scope: !20616, file: !20617, line: 34, type: !55)
!20625 = !DILocation(line: 34, column: 10, scope: !20616)
!20626 = !DILocation(line: 36, column: 12, scope: !20627)
!20627 = distinct !DILexicalBlock(scope: !20616, file: !20617, line: 36, column: 3)
!20628 = !DILocation(line: 36, column: 10, scope: !20627)
!20629 = !DILocation(line: 36, column: 8, scope: !20627)
!20630 = !DILocation(line: 36, column: 16, scope: !20631)
!20631 = distinct !DILexicalBlock(scope: !20627, file: !20617, line: 36, column: 3)
!20632 = !DILocation(line: 36, column: 15, scope: !20631)
!20633 = !DILocation(line: 36, column: 3, scope: !20627)
!20634 = !DILocation(line: 37, column: 10, scope: !20631)
!20635 = !DILocation(line: 37, column: 9, scope: !20631)
!20636 = !DILocation(line: 37, column: 16, scope: !20631)
!20637 = !DILocation(line: 37, column: 18, scope: !20631)
!20638 = !DILocation(line: 37, column: 27, scope: !20631)
!20639 = !DILocation(line: 37, column: 29, scope: !20631)
!20640 = !DILocation(line: 37, column: 24, scope: !20631)
!20641 = !DILocation(line: 37, column: 12, scope: !20631)
!20642 = !DILocation(line: 37, column: 7, scope: !20631)
!20643 = !DILocation(line: 37, column: 5, scope: !20631)
!20644 = !DILocation(line: 36, column: 20, scope: !20631)
!20645 = !DILocation(line: 36, column: 3, scope: !20631)
!20646 = distinct !{!20646, !20633, !20647}
!20647 = !DILocation(line: 37, column: 48, scope: !20627)
!20648 = !DILocation(line: 39, column: 10, scope: !20616)
!20649 = !DILocation(line: 39, column: 14, scope: !20616)
!20650 = !DILocation(line: 39, column: 12, scope: !20616)
!20651 = !DILocation(line: 39, column: 3, scope: !20616)
!20652 = distinct !DISubprogram(name: "locale_charset", scope: !20653, file: !20653, line: 826, type: !2368, scopeLine: 827, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2365, retainedNodes: !209)
!20653 = !DIFile(filename: "lib/localcharset.c", directory: "/home/mbarbar/clone/coreutils")
!20654 = !DILocalVariable(name: "codeset", scope: !20652, file: !20653, line: 828, type: !180)
!20655 = !DILocation(line: 828, column: 15, scope: !20652)
!20656 = !DILocation(line: 835, column: 13, scope: !20652)
!20657 = !DILocation(line: 835, column: 11, scope: !20652)
!20658 = !DILocation(line: 893, column: 7, scope: !20659)
!20659 = distinct !DILexicalBlock(scope: !20652, file: !20653, line: 893, column: 7)
!20660 = !DILocation(line: 893, column: 15, scope: !20659)
!20661 = !DILocation(line: 893, column: 7, scope: !20652)
!20662 = !DILocation(line: 895, column: 13, scope: !20659)
!20663 = !DILocation(line: 895, column: 5, scope: !20659)
!20664 = !DILocation(line: 1051, column: 13, scope: !20665)
!20665 = distinct !DILexicalBlock(scope: !20666, file: !20653, line: 1051, column: 13)
!20666 = distinct !DILexicalBlock(scope: !20667, file: !20653, line: 1041, column: 7)
!20667 = distinct !DILexicalBlock(scope: !20652, file: !20653, line: 1000, column: 3)
!20668 = !DILocation(line: 1051, column: 24, scope: !20665)
!20669 = !DILocation(line: 1051, column: 13, scope: !20666)
!20670 = !DILocation(line: 1052, column: 19, scope: !20665)
!20671 = !DILocation(line: 1052, column: 11, scope: !20665)
!20672 = !DILocation(line: 1139, column: 10, scope: !20652)
!20673 = !DILocation(line: 1139, column: 3, scope: !20652)
!20674 = distinct !DISubprogram(name: "dirchownmod", scope: !20675, file: !20675, line: 61, type: !2372, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2369, retainedNodes: !209)
!20675 = !DIFile(filename: "lib/dirchownmod.c", directory: "/home/mbarbar/clone/coreutils")
!20676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !271, line: 46, size: 1152, elements: !20677)
!20677 = !{!20678, !20679, !20680, !20681, !20682, !20683, !20684, !20685, !20686, !20687, !20688, !20689, !20694, !20695, !20696}
!20678 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !20676, file: !271, line: 48, baseType: !274, size: 64)
!20679 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !20676, file: !271, line: 53, baseType: !276, size: 64, offset: 64)
!20680 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !20676, file: !271, line: 61, baseType: !278, size: 64, offset: 128)
!20681 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !20676, file: !271, line: 62, baseType: !140, size: 32, offset: 192)
!20682 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !20676, file: !271, line: 64, baseType: !128, size: 32, offset: 224)
!20683 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !20676, file: !271, line: 65, baseType: !130, size: 32, offset: 256)
!20684 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !20676, file: !271, line: 67, baseType: !7, size: 32, offset: 288)
!20685 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !20676, file: !271, line: 69, baseType: !274, size: 64, offset: 320)
!20686 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !20676, file: !271, line: 74, baseType: !29, size: 64, offset: 384)
!20687 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !20676, file: !271, line: 78, baseType: !286, size: 64, offset: 448)
!20688 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !20676, file: !271, line: 80, baseType: !288, size: 64, offset: 512)
!20689 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !20676, file: !271, line: 91, baseType: !20690, size: 128, offset: 576)
!20690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !291, line: 9, size: 128, elements: !20691)
!20691 = !{!20692, !20693}
!20692 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !20690, file: !291, line: 11, baseType: !294, size: 64)
!20693 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !20690, file: !291, line: 12, baseType: !296, size: 64, offset: 64)
!20694 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !20676, file: !271, line: 92, baseType: !20690, size: 128, offset: 704)
!20695 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !20676, file: !271, line: 93, baseType: !20690, size: 128, offset: 832)
!20696 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !20676, file: !271, line: 106, baseType: !300, size: 192, offset: 960)
!20697 = !DILocalVariable(name: "fd", arg: 1, scope: !20674, file: !20675, line: 61, type: !7)
!20698 = !DILocation(line: 61, column: 18, scope: !20674)
!20699 = !DILocalVariable(name: "dir", arg: 2, scope: !20674, file: !20675, line: 61, type: !180)
!20700 = !DILocation(line: 61, column: 34, scope: !20674)
!20701 = !DILocalVariable(name: "mkdir_mode", arg: 3, scope: !20674, file: !20675, line: 61, type: !139)
!20702 = !DILocation(line: 61, column: 46, scope: !20674)
!20703 = !DILocalVariable(name: "owner", arg: 4, scope: !20674, file: !20675, line: 62, type: !127)
!20704 = !DILocation(line: 62, column: 20, scope: !20674)
!20705 = !DILocalVariable(name: "group", arg: 5, scope: !20674, file: !20675, line: 62, type: !129)
!20706 = !DILocation(line: 62, column: 33, scope: !20674)
!20707 = !DILocalVariable(name: "mode", arg: 6, scope: !20674, file: !20675, line: 63, type: !139)
!20708 = !DILocation(line: 63, column: 21, scope: !20674)
!20709 = !DILocalVariable(name: "mode_bits", arg: 7, scope: !20674, file: !20675, line: 63, type: !139)
!20710 = !DILocation(line: 63, column: 34, scope: !20674)
!20711 = !DILocalVariable(name: "st", scope: !20674, file: !20675, line: 65, type: !20676)
!20712 = !DILocation(line: 65, column: 15, scope: !20674)
!20713 = !DILocalVariable(name: "result", scope: !20674, file: !20675, line: 66, type: !7)
!20714 = !DILocation(line: 66, column: 7, scope: !20674)
!20715 = !DILocation(line: 66, column: 17, scope: !20674)
!20716 = !DILocation(line: 66, column: 20, scope: !20674)
!20717 = !DILocation(line: 66, column: 32, scope: !20674)
!20718 = !DILocation(line: 66, column: 26, scope: !20674)
!20719 = !DILocation(line: 66, column: 51, scope: !20674)
!20720 = !DILocation(line: 66, column: 44, scope: !20674)
!20721 = !DILocation(line: 68, column: 7, scope: !20722)
!20722 = distinct !DILexicalBlock(scope: !20674, file: !20675, line: 68, column: 7)
!20723 = !DILocation(line: 68, column: 14, scope: !20722)
!20724 = !DILocation(line: 68, column: 7, scope: !20674)
!20725 = !DILocalVariable(name: "dir_mode", scope: !20726, file: !20675, line: 70, type: !139)
!20726 = distinct !DILexicalBlock(scope: !20722, file: !20675, line: 69, column: 5)
!20727 = !DILocation(line: 70, column: 14, scope: !20726)
!20728 = !DILocation(line: 70, column: 28, scope: !20726)
!20729 = !DILocation(line: 76, column: 13, scope: !20730)
!20730 = distinct !DILexicalBlock(scope: !20726, file: !20675, line: 76, column: 11)
!20731 = !DILocation(line: 76, column: 11, scope: !20726)
!20732 = !DILocation(line: 78, column: 11, scope: !20733)
!20733 = distinct !DILexicalBlock(scope: !20730, file: !20675, line: 77, column: 9)
!20734 = !DILocation(line: 78, column: 17, scope: !20733)
!20735 = !DILocation(line: 79, column: 18, scope: !20733)
!20736 = !DILocation(line: 80, column: 9, scope: !20733)
!20737 = !DILocalVariable(name: "indeterminate", scope: !20738, file: !20675, line: 87, type: !139)
!20738 = distinct !DILexicalBlock(scope: !20730, file: !20675, line: 82, column: 9)
!20739 = !DILocation(line: 87, column: 18, scope: !20738)
!20740 = !DILocation(line: 94, column: 16, scope: !20741)
!20741 = distinct !DILexicalBlock(scope: !20738, file: !20675, line: 94, column: 15)
!20742 = !DILocation(line: 94, column: 22, scope: !20741)
!20743 = !DILocation(line: 94, column: 36, scope: !20741)
!20744 = !DILocation(line: 94, column: 39, scope: !20741)
!20745 = !DILocation(line: 94, column: 51, scope: !20741)
!20746 = !DILocation(line: 94, column: 45, scope: !20741)
!20747 = !DILocation(line: 95, column: 15, scope: !20741)
!20748 = !DILocation(line: 95, column: 19, scope: !20741)
!20749 = !DILocation(line: 95, column: 25, scope: !20741)
!20750 = !DILocation(line: 95, column: 39, scope: !20741)
!20751 = !DILocation(line: 95, column: 42, scope: !20741)
!20752 = !DILocation(line: 95, column: 54, scope: !20741)
!20753 = !DILocation(line: 95, column: 48, scope: !20741)
!20754 = !DILocation(line: 94, column: 15, scope: !20738)
!20755 = !DILocation(line: 97, column: 30, scope: !20756)
!20756 = distinct !DILexicalBlock(scope: !20741, file: !20675, line: 96, column: 13)
!20757 = !DILocation(line: 97, column: 27, scope: !20756)
!20758 = !DILocation(line: 97, column: 25, scope: !20756)
!20759 = !DILocation(line: 98, column: 35, scope: !20756)
!20760 = !DILocation(line: 98, column: 39, scope: !20756)
!20761 = !DILocation(line: 98, column: 46, scope: !20756)
!20762 = !DILocation(line: 98, column: 27, scope: !20756)
!20763 = !DILocation(line: 99, column: 27, scope: !20756)
!20764 = !DILocation(line: 99, column: 38, scope: !20756)
!20765 = !DILocation(line: 100, column: 35, scope: !20756)
!20766 = !DILocation(line: 100, column: 40, scope: !20756)
!20767 = !DILocation(line: 100, column: 47, scope: !20756)
!20768 = !DILocation(line: 100, column: 27, scope: !20756)
!20769 = !DILocation(line: 101, column: 34, scope: !20756)
!20770 = !DILocation(line: 101, column: 39, scope: !20756)
!20771 = !DILocation(line: 101, column: 46, scope: !20756)
!20772 = !DILocation(line: 101, column: 27, scope: !20756)
!20773 = !DILocation(line: 97, column: 22, scope: !20756)
!20774 = !DILocation(line: 108, column: 19, scope: !20775)
!20775 = distinct !DILexicalBlock(scope: !20756, file: !20675, line: 108, column: 19)
!20776 = !DILocation(line: 108, column: 26, scope: !20775)
!20777 = !DILocation(line: 108, column: 31, scope: !20775)
!20778 = !DILocation(line: 108, column: 35, scope: !20775)
!20779 = !DILocation(line: 108, column: 44, scope: !20775)
!20780 = !DILocation(line: 108, column: 19, scope: !20756)
!20781 = !DILocation(line: 109, column: 33, scope: !20775)
!20782 = !DILocation(line: 109, column: 42, scope: !20775)
!20783 = !DILocation(line: 109, column: 31, scope: !20775)
!20784 = !DILocation(line: 109, column: 17, scope: !20775)
!20785 = !DILocation(line: 110, column: 13, scope: !20756)
!20786 = !DILocation(line: 115, column: 15, scope: !20787)
!20787 = distinct !DILexicalBlock(scope: !20738, file: !20675, line: 115, column: 15)
!20788 = !DILocation(line: 115, column: 22, scope: !20787)
!20789 = !DILocation(line: 115, column: 27, scope: !20787)
!20790 = !DILocation(line: 115, column: 33, scope: !20787)
!20791 = !DILocation(line: 115, column: 44, scope: !20787)
!20792 = !DILocation(line: 115, column: 42, scope: !20787)
!20793 = !DILocation(line: 115, column: 52, scope: !20787)
!20794 = !DILocation(line: 115, column: 50, scope: !20787)
!20795 = !DILocation(line: 115, column: 69, scope: !20787)
!20796 = !DILocation(line: 115, column: 67, scope: !20787)
!20797 = !DILocation(line: 115, column: 15, scope: !20738)
!20798 = !DILocalVariable(name: "chmod_mode", scope: !20799, file: !20675, line: 117, type: !139)
!20799 = distinct !DILexicalBlock(scope: !20787, file: !20675, line: 116, column: 13)
!20800 = !DILocation(line: 117, column: 22, scope: !20799)
!20801 = !DILocation(line: 118, column: 17, scope: !20799)
!20802 = !DILocation(line: 118, column: 25, scope: !20799)
!20803 = !DILocation(line: 118, column: 34, scope: !20799)
!20804 = !DILocation(line: 118, column: 55, scope: !20799)
!20805 = !DILocation(line: 118, column: 54, scope: !20799)
!20806 = !DILocation(line: 118, column: 52, scope: !20799)
!20807 = !DILocation(line: 118, column: 22, scope: !20799)
!20808 = !DILocation(line: 119, column: 45, scope: !20799)
!20809 = !DILocation(line: 119, column: 42, scope: !20799)
!20810 = !DILocation(line: 119, column: 25, scope: !20799)
!20811 = !DILocation(line: 120, column: 35, scope: !20799)
!20812 = !DILocation(line: 120, column: 39, scope: !20799)
!20813 = !DILocation(line: 120, column: 27, scope: !20799)
!20814 = !DILocation(line: 121, column: 27, scope: !20799)
!20815 = !DILocation(line: 121, column: 38, scope: !20799)
!20816 = !DILocation(line: 122, column: 35, scope: !20799)
!20817 = !DILocation(line: 122, column: 40, scope: !20799)
!20818 = !DILocation(line: 122, column: 27, scope: !20799)
!20819 = !DILocation(line: 123, column: 34, scope: !20799)
!20820 = !DILocation(line: 123, column: 39, scope: !20799)
!20821 = !DILocation(line: 123, column: 27, scope: !20799)
!20822 = !DILocation(line: 119, column: 22, scope: !20799)
!20823 = !DILocation(line: 124, column: 13, scope: !20799)
!20824 = !DILocation(line: 126, column: 5, scope: !20726)
!20825 = !DILocation(line: 128, column: 12, scope: !20826)
!20826 = distinct !DILexicalBlock(scope: !20674, file: !20675, line: 128, column: 7)
!20827 = !DILocation(line: 128, column: 9, scope: !20826)
!20828 = !DILocation(line: 128, column: 7, scope: !20674)
!20829 = !DILocation(line: 130, column: 11, scope: !20830)
!20830 = distinct !DILexicalBlock(scope: !20831, file: !20675, line: 130, column: 11)
!20831 = distinct !DILexicalBlock(scope: !20826, file: !20675, line: 129, column: 5)
!20832 = !DILocation(line: 130, column: 18, scope: !20830)
!20833 = !DILocation(line: 130, column: 11, scope: !20831)
!20834 = !DILocation(line: 131, column: 25, scope: !20830)
!20835 = !DILocation(line: 131, column: 18, scope: !20830)
!20836 = !DILocation(line: 131, column: 16, scope: !20830)
!20837 = !DILocation(line: 131, column: 9, scope: !20830)
!20838 = !DILocalVariable(name: "e", scope: !20839, file: !20675, line: 134, type: !7)
!20839 = distinct !DILexicalBlock(scope: !20830, file: !20675, line: 133, column: 9)
!20840 = !DILocation(line: 134, column: 15, scope: !20839)
!20841 = !DILocation(line: 134, column: 19, scope: !20839)
!20842 = !DILocation(line: 135, column: 18, scope: !20839)
!20843 = !DILocation(line: 135, column: 11, scope: !20839)
!20844 = !DILocation(line: 136, column: 19, scope: !20839)
!20845 = !DILocation(line: 136, column: 11, scope: !20839)
!20846 = !DILocation(line: 136, column: 17, scope: !20839)
!20847 = !DILocation(line: 138, column: 5, scope: !20831)
!20848 = !DILocation(line: 140, column: 10, scope: !20674)
!20849 = !DILocation(line: 140, column: 3, scope: !20674)
!20850 = distinct !DISubprogram(name: "openat_safer", scope: !20851, file: !20851, line: 29, type: !20852, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2374, retainedNodes: !209)
!20851 = !DIFile(filename: "lib/openat-safer.c", directory: "/home/mbarbar/clone/coreutils")
!20852 = !DISubroutineType(types: !20853)
!20853 = !{!7, !7, !180, !7, null}
!20854 = !DILocalVariable(name: "fd", arg: 1, scope: !20850, file: !20851, line: 29, type: !7)
!20855 = !DILocation(line: 29, column: 19, scope: !20850)
!20856 = !DILocalVariable(name: "file", arg: 2, scope: !20850, file: !20851, line: 29, type: !180)
!20857 = !DILocation(line: 29, column: 35, scope: !20850)
!20858 = !DILocalVariable(name: "flags", arg: 3, scope: !20850, file: !20851, line: 29, type: !7)
!20859 = !DILocation(line: 29, column: 45, scope: !20850)
!20860 = !DILocalVariable(name: "mode", scope: !20850, file: !20851, line: 31, type: !139)
!20861 = !DILocation(line: 31, column: 10, scope: !20850)
!20862 = !DILocation(line: 33, column: 7, scope: !20863)
!20863 = distinct !DILexicalBlock(scope: !20850, file: !20851, line: 33, column: 7)
!20864 = !DILocation(line: 33, column: 13, scope: !20863)
!20865 = !DILocation(line: 33, column: 7, scope: !20850)
!20866 = !DILocalVariable(name: "ap", scope: !20867, file: !20851, line: 35, type: !2379)
!20867 = distinct !DILexicalBlock(scope: !20863, file: !20851, line: 34, column: 5)
!20868 = !DILocation(line: 35, column: 15, scope: !20867)
!20869 = !DILocation(line: 36, column: 7, scope: !20867)
!20870 = !DILocation(line: 40, column: 14, scope: !20867)
!20871 = !DILocation(line: 40, column: 12, scope: !20867)
!20872 = !DILocation(line: 42, column: 7, scope: !20867)
!20873 = !DILocation(line: 43, column: 5, scope: !20867)
!20874 = !DILocation(line: 45, column: 28, scope: !20850)
!20875 = !DILocation(line: 45, column: 32, scope: !20850)
!20876 = !DILocation(line: 45, column: 38, scope: !20850)
!20877 = !DILocation(line: 45, column: 45, scope: !20850)
!20878 = !DILocation(line: 45, column: 20, scope: !20850)
!20879 = !DILocation(line: 45, column: 10, scope: !20850)
!20880 = !DILocation(line: 45, column: 3, scope: !20850)
!20881 = distinct !DISubprogram(name: "randint_new", scope: !2395, file: !2395, line: 71, type: !2391, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2388, retainedNodes: !209)
!20882 = !DILocalVariable(name: "source", arg: 1, scope: !20881, file: !2395, line: 71, type: !2398)
!20883 = !DILocation(line: 71, column: 38, scope: !20881)
!20884 = !DILocalVariable(name: "s", scope: !20881, file: !2395, line: 73, type: !2393)
!20885 = !DILocation(line: 73, column: 26, scope: !20881)
!20886 = !DILocation(line: 73, column: 30, scope: !20881)
!20887 = !DILocation(line: 74, column: 15, scope: !20881)
!20888 = !DILocation(line: 74, column: 3, scope: !20881)
!20889 = !DILocation(line: 74, column: 6, scope: !20881)
!20890 = !DILocation(line: 74, column: 13, scope: !20881)
!20891 = !{!20892, !2649, i64 0}
!20892 = !{!"randint_source", !2649, i64 0, !2916, i64 8, !2916, i64 16}
!20893 = !DILocation(line: 75, column: 16, scope: !20881)
!20894 = !DILocation(line: 75, column: 19, scope: !20881)
!20895 = !DILocation(line: 75, column: 27, scope: !20881)
!20896 = !{!20892, !2916, i64 16}
!20897 = !DILocation(line: 75, column: 3, scope: !20881)
!20898 = !DILocation(line: 75, column: 6, scope: !20881)
!20899 = !DILocation(line: 75, column: 14, scope: !20881)
!20900 = !{!20892, !2916, i64 8}
!20901 = !DILocation(line: 76, column: 10, scope: !20881)
!20902 = !DILocation(line: 76, column: 3, scope: !20881)
!20903 = distinct !DISubprogram(name: "randint_all_new", scope: !2395, file: !2395, line: 84, type: !2404, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2388, retainedNodes: !209)
!20904 = !DILocalVariable(name: "name", arg: 1, scope: !20903, file: !2395, line: 84, type: !180)
!20905 = !DILocation(line: 84, column: 30, scope: !20903)
!20906 = !DILocalVariable(name: "bytes_bound", arg: 2, scope: !20903, file: !2395, line: 84, type: !55)
!20907 = !DILocation(line: 84, column: 43, scope: !20903)
!20908 = !DILocalVariable(name: "source", scope: !20903, file: !2395, line: 86, type: !2398)
!20909 = !DILocation(line: 86, column: 27, scope: !20903)
!20910 = !DILocation(line: 86, column: 50, scope: !20903)
!20911 = !DILocation(line: 86, column: 56, scope: !20903)
!20912 = !DILocation(line: 86, column: 36, scope: !20903)
!20913 = !DILocation(line: 87, column: 11, scope: !20903)
!20914 = !DILocation(line: 87, column: 33, scope: !20903)
!20915 = !DILocation(line: 87, column: 20, scope: !20903)
!20916 = !DILocation(line: 87, column: 3, scope: !20903)
!20917 = distinct !DISubprogram(name: "randint_get_source", scope: !2395, file: !2395, line: 93, type: !2406, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2388, retainedNodes: !209)
!20918 = !DILocalVariable(name: "s", arg: 1, scope: !20917, file: !2395, line: 93, type: !2408)
!20919 = !DILocation(line: 93, column: 50, scope: !20917)
!20920 = !DILocation(line: 95, column: 10, scope: !20917)
!20921 = !DILocation(line: 95, column: 13, scope: !20917)
!20922 = !DILocation(line: 95, column: 3, scope: !20917)
!20923 = distinct !DISubprogram(name: "randint_genmax", scope: !2395, file: !2395, line: 114, type: !2410, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2388, retainedNodes: !209)
!20924 = !DILocalVariable(name: "s", arg: 1, scope: !20923, file: !2395, line: 114, type: !2393)
!20925 = !DILocation(line: 114, column: 40, scope: !20923)
!20926 = !DILocalVariable(name: "genmax", arg: 2, scope: !20923, file: !2395, line: 114, type: !2402)
!20927 = !DILocation(line: 114, column: 51, scope: !20923)
!20928 = !DILocalVariable(name: "source", scope: !20923, file: !2395, line: 116, type: !2398)
!20929 = !DILocation(line: 116, column: 27, scope: !20923)
!20930 = !DILocation(line: 116, column: 36, scope: !20923)
!20931 = !DILocation(line: 116, column: 39, scope: !20923)
!20932 = !DILocalVariable(name: "randnum", scope: !20923, file: !2395, line: 117, type: !2402)
!20933 = !DILocation(line: 117, column: 11, scope: !20923)
!20934 = !DILocation(line: 117, column: 21, scope: !20923)
!20935 = !DILocation(line: 117, column: 24, scope: !20923)
!20936 = !DILocalVariable(name: "randmax", scope: !20923, file: !2395, line: 118, type: !2402)
!20937 = !DILocation(line: 118, column: 11, scope: !20923)
!20938 = !DILocation(line: 118, column: 21, scope: !20923)
!20939 = !DILocation(line: 118, column: 24, scope: !20923)
!20940 = !DILocalVariable(name: "choices", scope: !20923, file: !2395, line: 119, type: !2402)
!20941 = !DILocation(line: 119, column: 11, scope: !20923)
!20942 = !DILocation(line: 119, column: 21, scope: !20923)
!20943 = !DILocation(line: 119, column: 28, scope: !20923)
!20944 = !DILocation(line: 121, column: 3, scope: !20923)
!20945 = !DILocation(line: 123, column: 11, scope: !20946)
!20946 = distinct !DILexicalBlock(scope: !20947, file: !2395, line: 123, column: 11)
!20947 = distinct !DILexicalBlock(scope: !20923, file: !2395, line: 122, column: 5)
!20948 = !DILocation(line: 123, column: 21, scope: !20946)
!20949 = !DILocation(line: 123, column: 19, scope: !20946)
!20950 = !DILocation(line: 123, column: 11, scope: !20947)
!20951 = !DILocalVariable(name: "i", scope: !20952, file: !2395, line: 128, type: !55)
!20952 = distinct !DILexicalBlock(scope: !20946, file: !2395, line: 124, column: 9)
!20953 = !DILocation(line: 128, column: 18, scope: !20952)
!20954 = !DILocalVariable(name: "rmax", scope: !20952, file: !2395, line: 129, type: !2402)
!20955 = !DILocation(line: 129, column: 19, scope: !20952)
!20956 = !DILocation(line: 129, column: 26, scope: !20952)
!20957 = !DILocalVariable(name: "buf", scope: !20952, file: !2395, line: 130, type: !2412)
!20958 = !DILocation(line: 130, column: 25, scope: !20952)
!20959 = !DILocation(line: 132, column: 11, scope: !20952)
!20960 = !DILocation(line: 134, column: 34, scope: !20961)
!20961 = distinct !DILexicalBlock(scope: !20952, file: !2395, line: 133, column: 13)
!20962 = !DILocation(line: 134, column: 22, scope: !20961)
!20963 = !DILocation(line: 134, column: 40, scope: !20961)
!20964 = !DILocation(line: 134, column: 20, scope: !20961)
!20965 = !DILocation(line: 135, column: 16, scope: !20961)
!20966 = !DILocation(line: 136, column: 13, scope: !20961)
!20967 = !DILocation(line: 137, column: 18, scope: !20952)
!20968 = !DILocation(line: 137, column: 25, scope: !20952)
!20969 = !DILocation(line: 137, column: 23, scope: !20952)
!20970 = distinct !{!20970, !20959, !20971}
!20971 = !DILocation(line: 137, column: 31, scope: !20952)
!20972 = !DILocation(line: 139, column: 21, scope: !20952)
!20973 = !DILocation(line: 139, column: 29, scope: !20952)
!20974 = !DILocation(line: 139, column: 34, scope: !20952)
!20975 = !DILocation(line: 139, column: 11, scope: !20952)
!20976 = !DILocation(line: 148, column: 13, scope: !20952)
!20977 = !DILocation(line: 150, column: 11, scope: !20952)
!20978 = !DILocation(line: 152, column: 37, scope: !20979)
!20979 = distinct !DILexicalBlock(scope: !20952, file: !2395, line: 151, column: 13)
!20980 = !DILocation(line: 152, column: 25, scope: !20979)
!20981 = !DILocation(line: 152, column: 52, scope: !20979)
!20982 = !DILocation(line: 152, column: 48, scope: !20979)
!20983 = !DILocation(line: 152, column: 46, scope: !20979)
!20984 = !DILocation(line: 152, column: 23, scope: !20979)
!20985 = !DILocation(line: 153, column: 37, scope: !20979)
!20986 = !DILocation(line: 153, column: 25, scope: !20979)
!20987 = !DILocation(line: 153, column: 46, scope: !20979)
!20988 = !DILocation(line: 153, column: 23, scope: !20979)
!20989 = !DILocation(line: 154, column: 16, scope: !20979)
!20990 = !DILocation(line: 155, column: 13, scope: !20979)
!20991 = !DILocation(line: 156, column: 18, scope: !20952)
!20992 = !DILocation(line: 156, column: 28, scope: !20952)
!20993 = !DILocation(line: 156, column: 26, scope: !20952)
!20994 = distinct !{!20994, !20977, !20995}
!20995 = !DILocation(line: 156, column: 34, scope: !20952)
!20996 = !DILocation(line: 157, column: 9, scope: !20952)
!20997 = !DILocation(line: 159, column: 11, scope: !20998)
!20998 = distinct !DILexicalBlock(scope: !20947, file: !2395, line: 159, column: 11)
!20999 = !DILocation(line: 159, column: 22, scope: !20998)
!21000 = !DILocation(line: 159, column: 19, scope: !20998)
!21001 = !DILocation(line: 159, column: 11, scope: !20947)
!21002 = !DILocation(line: 161, column: 24, scope: !21003)
!21003 = distinct !DILexicalBlock(scope: !20998, file: !2395, line: 160, column: 9)
!21004 = !DILocation(line: 161, column: 27, scope: !21003)
!21005 = !DILocation(line: 161, column: 35, scope: !21003)
!21006 = !DILocation(line: 161, column: 11, scope: !21003)
!21007 = !DILocation(line: 161, column: 14, scope: !21003)
!21008 = !DILocation(line: 161, column: 22, scope: !21003)
!21009 = !DILocation(line: 162, column: 18, scope: !21003)
!21010 = !DILocation(line: 162, column: 11, scope: !21003)
!21011 = !DILocalVariable(name: "excess_choices", scope: !21012, file: !2395, line: 176, type: !2402)
!21012 = distinct !DILexicalBlock(scope: !20998, file: !2395, line: 165, column: 9)
!21013 = !DILocation(line: 176, column: 19, scope: !21012)
!21014 = !DILocation(line: 176, column: 36, scope: !21012)
!21015 = !DILocation(line: 176, column: 46, scope: !21012)
!21016 = !DILocation(line: 176, column: 44, scope: !21012)
!21017 = !DILocalVariable(name: "unusable_choices", scope: !21012, file: !2395, line: 177, type: !2402)
!21018 = !DILocation(line: 177, column: 19, scope: !21012)
!21019 = !DILocation(line: 177, column: 38, scope: !21012)
!21020 = !DILocation(line: 177, column: 55, scope: !21012)
!21021 = !DILocation(line: 177, column: 53, scope: !21012)
!21022 = !DILocalVariable(name: "last_usable_choice", scope: !21012, file: !2395, line: 178, type: !2402)
!21023 = !DILocation(line: 178, column: 19, scope: !21012)
!21024 = !DILocation(line: 178, column: 40, scope: !21012)
!21025 = !DILocation(line: 178, column: 50, scope: !21012)
!21026 = !DILocation(line: 178, column: 48, scope: !21012)
!21027 = !DILocalVariable(name: "reduced_randnum", scope: !21012, file: !2395, line: 179, type: !2402)
!21028 = !DILocation(line: 179, column: 19, scope: !21012)
!21029 = !DILocation(line: 179, column: 37, scope: !21012)
!21030 = !DILocation(line: 179, column: 47, scope: !21012)
!21031 = !DILocation(line: 179, column: 45, scope: !21012)
!21032 = !DILocation(line: 181, column: 15, scope: !21033)
!21033 = distinct !DILexicalBlock(scope: !21012, file: !2395, line: 181, column: 15)
!21034 = !DILocation(line: 181, column: 26, scope: !21033)
!21035 = !DILocation(line: 181, column: 23, scope: !21033)
!21036 = !DILocation(line: 181, column: 15, scope: !21012)
!21037 = !DILocation(line: 183, column: 28, scope: !21038)
!21038 = distinct !DILexicalBlock(scope: !21033, file: !2395, line: 182, column: 13)
!21039 = !DILocation(line: 183, column: 38, scope: !21038)
!21040 = !DILocation(line: 183, column: 36, scope: !21038)
!21041 = !DILocation(line: 183, column: 15, scope: !21038)
!21042 = !DILocation(line: 183, column: 18, scope: !21038)
!21043 = !DILocation(line: 183, column: 26, scope: !21038)
!21044 = !DILocation(line: 184, column: 28, scope: !21038)
!21045 = !DILocation(line: 184, column: 45, scope: !21038)
!21046 = !DILocation(line: 184, column: 43, scope: !21038)
!21047 = !DILocation(line: 184, column: 15, scope: !21038)
!21048 = !DILocation(line: 184, column: 18, scope: !21038)
!21049 = !DILocation(line: 184, column: 26, scope: !21038)
!21050 = !DILocation(line: 185, column: 22, scope: !21038)
!21051 = !DILocation(line: 185, column: 15, scope: !21038)
!21052 = !DILocation(line: 190, column: 21, scope: !21012)
!21053 = !DILocation(line: 190, column: 19, scope: !21012)
!21054 = !DILocation(line: 191, column: 21, scope: !21012)
!21055 = !DILocation(line: 191, column: 38, scope: !21012)
!21056 = !DILocation(line: 191, column: 19, scope: !21012)
!21057 = distinct !{!21057, !20944, !21058}
!21058 = !DILocation(line: 193, column: 5, scope: !20923)
!21059 = !DILocation(line: 194, column: 1, scope: !20923)
!21060 = distinct !DISubprogram(name: "shift_left", scope: !2395, file: !2395, line: 104, type: !2417, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2388, retainedNodes: !209)
!21061 = !DILocalVariable(name: "x", arg: 1, scope: !21060, file: !2395, line: 104, type: !2402)
!21062 = !DILocation(line: 104, column: 43, scope: !21060)
!21063 = !DILocation(line: 106, column: 27, scope: !21060)
!21064 = !DILocation(line: 106, column: 29, scope: !21060)
!21065 = !DILocation(line: 106, column: 3, scope: !21060)
!21066 = distinct !DISubprogram(name: "randint_free", scope: !2395, file: !2395, line: 199, type: !2413, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2388, retainedNodes: !209)
!21067 = !DILocalVariable(name: "s", arg: 1, scope: !21066, file: !2395, line: 199, type: !2393)
!21068 = !DILocation(line: 199, column: 38, scope: !21066)
!21069 = !DILocation(line: 201, column: 19, scope: !21066)
!21070 = !DILocation(line: 201, column: 3, scope: !21066)
!21071 = !DILocation(line: 202, column: 9, scope: !21066)
!21072 = !DILocation(line: 202, column: 3, scope: !21066)
!21073 = !DILocation(line: 203, column: 1, scope: !21066)
!21074 = distinct !DISubprogram(name: "randint_all_free", scope: !2395, file: !2395, line: 209, type: !2415, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2388, retainedNodes: !209)
!21075 = !DILocalVariable(name: "s", arg: 1, scope: !21074, file: !2395, line: 209, type: !2393)
!21076 = !DILocation(line: 209, column: 42, scope: !21074)
!21077 = !DILocalVariable(name: "r", scope: !21074, file: !2395, line: 211, type: !7)
!21078 = !DILocation(line: 211, column: 7, scope: !21074)
!21079 = !DILocation(line: 211, column: 26, scope: !21074)
!21080 = !DILocation(line: 211, column: 29, scope: !21074)
!21081 = !DILocation(line: 211, column: 11, scope: !21074)
!21082 = !DILocalVariable(name: "e", scope: !21074, file: !2395, line: 212, type: !7)
!21083 = !DILocation(line: 212, column: 7, scope: !21074)
!21084 = !DILocation(line: 212, column: 11, scope: !21074)
!21085 = !DILocation(line: 213, column: 17, scope: !21074)
!21086 = !DILocation(line: 213, column: 3, scope: !21074)
!21087 = !DILocation(line: 214, column: 11, scope: !21074)
!21088 = !DILocation(line: 214, column: 3, scope: !21074)
!21089 = !DILocation(line: 214, column: 9, scope: !21074)
!21090 = !DILocation(line: 215, column: 10, scope: !21074)
!21091 = !DILocation(line: 215, column: 3, scope: !21074)
!21092 = distinct !DISubprogram(name: "randread_new", scope: !2426, file: !2426, line: 204, type: !2422, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2419, retainedNodes: !209)
!21093 = !DILocalVariable(name: "name", arg: 1, scope: !21092, file: !2426, line: 204, type: !180)
!21094 = !DILocation(line: 204, column: 27, scope: !21092)
!21095 = !DILocalVariable(name: "bytes_bound", arg: 2, scope: !21092, file: !2426, line: 204, type: !55)
!21096 = !DILocation(line: 204, column: 40, scope: !21092)
!21097 = !DILocation(line: 206, column: 7, scope: !21098)
!21098 = distinct !DILexicalBlock(scope: !21092, file: !2426, line: 206, column: 7)
!21099 = !DILocation(line: 206, column: 19, scope: !21098)
!21100 = !DILocation(line: 206, column: 7, scope: !21092)
!21101 = !DILocation(line: 207, column: 12, scope: !21098)
!21102 = !DILocation(line: 207, column: 5, scope: !21098)
!21103 = !DILocalVariable(name: "source", scope: !21104, file: !2426, line: 210, type: !2429)
!21104 = distinct !DILexicalBlock(scope: !21098, file: !2426, line: 209, column: 5)
!21105 = !DILocation(line: 210, column: 13, scope: !21104)
!21106 = !DILocalVariable(name: "s", scope: !21104, file: !2426, line: 211, type: !2424)
!21107 = !DILocation(line: 211, column: 31, scope: !21104)
!21108 = !DILocation(line: 213, column: 11, scope: !21109)
!21109 = distinct !DILexicalBlock(scope: !21104, file: !2426, line: 213, column: 11)
!21110 = !DILocation(line: 213, column: 11, scope: !21104)
!21111 = !DILocation(line: 214, column: 38, scope: !21112)
!21112 = distinct !DILexicalBlock(scope: !21109, file: !2426, line: 214, column: 13)
!21113 = !DILocation(line: 214, column: 25, scope: !21112)
!21114 = !DILocation(line: 214, column: 23, scope: !21112)
!21115 = !DILocation(line: 214, column: 13, scope: !21109)
!21116 = !DILocation(line: 215, column: 11, scope: !21112)
!21117 = !DILocation(line: 214, column: 49, scope: !21112)
!21118 = !DILocation(line: 217, column: 23, scope: !21104)
!21119 = !DILocation(line: 217, column: 31, scope: !21104)
!21120 = !DILocation(line: 217, column: 11, scope: !21104)
!21121 = !DILocation(line: 217, column: 9, scope: !21104)
!21122 = !DILocation(line: 219, column: 11, scope: !21123)
!21123 = distinct !DILexicalBlock(scope: !21104, file: !2426, line: 219, column: 11)
!21124 = !DILocation(line: 219, column: 11, scope: !21104)
!21125 = !DILocation(line: 220, column: 18, scope: !21123)
!21126 = !DILocation(line: 220, column: 26, scope: !21123)
!21127 = !DILocation(line: 220, column: 29, scope: !21123)
!21128 = !DILocation(line: 220, column: 33, scope: !21123)
!21129 = !DILocation(line: 220, column: 44, scope: !21123)
!21130 = !DILocation(line: 220, column: 9, scope: !21123)
!21131 = !DILocation(line: 223, column: 11, scope: !21132)
!21132 = distinct !DILexicalBlock(scope: !21123, file: !2426, line: 222, column: 9)
!21133 = !DILocation(line: 223, column: 14, scope: !21132)
!21134 = !DILocation(line: 223, column: 18, scope: !21132)
!21135 = !DILocation(line: 223, column: 24, scope: !21132)
!21136 = !DILocation(line: 223, column: 33, scope: !21132)
!21137 = !DILocation(line: 224, column: 22, scope: !21132)
!21138 = !DILocation(line: 224, column: 25, scope: !21132)
!21139 = !DILocation(line: 224, column: 29, scope: !21132)
!21140 = !DILocation(line: 224, column: 35, scope: !21132)
!21141 = !DILocation(line: 224, column: 41, scope: !21132)
!21142 = !DILocation(line: 225, column: 22, scope: !21132)
!21143 = !DILocation(line: 224, column: 11, scope: !21132)
!21144 = !DILocation(line: 226, column: 24, scope: !21132)
!21145 = !DILocation(line: 226, column: 27, scope: !21132)
!21146 = !DILocation(line: 226, column: 31, scope: !21132)
!21147 = !DILocation(line: 226, column: 37, scope: !21132)
!21148 = !DILocation(line: 226, column: 11, scope: !21132)
!21149 = !DILocation(line: 229, column: 14, scope: !21104)
!21150 = !DILocation(line: 229, column: 7, scope: !21104)
!21151 = !DILocation(line: 231, column: 1, scope: !21092)
!21152 = distinct !DISubprogram(name: "simple_new", scope: !2426, file: !2426, line: 137, type: !2504, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2419, retainedNodes: !209)
!21153 = !DILocalVariable(name: "source", arg: 1, scope: !21152, file: !2426, line: 137, type: !2429)
!21154 = !DILocation(line: 137, column: 19, scope: !21152)
!21155 = !DILocalVariable(name: "handler_arg", arg: 2, scope: !21152, file: !2426, line: 137, type: !515)
!21156 = !DILocation(line: 137, column: 39, scope: !21152)
!21157 = !DILocalVariable(name: "s", scope: !21152, file: !2426, line: 139, type: !2424)
!21158 = !DILocation(line: 139, column: 27, scope: !21152)
!21159 = !DILocation(line: 139, column: 31, scope: !21152)
!21160 = !DILocation(line: 140, column: 15, scope: !21152)
!21161 = !DILocation(line: 140, column: 3, scope: !21152)
!21162 = !DILocation(line: 140, column: 6, scope: !21152)
!21163 = !DILocation(line: 140, column: 13, scope: !21152)
!21164 = !{!21165, !2649, i64 0}
!21165 = !{!"randread_source", !2649, i64 0, !2649, i64 8, !2649, i64 16, !2637, i64 24}
!21166 = !DILocation(line: 141, column: 3, scope: !21152)
!21167 = !DILocation(line: 141, column: 6, scope: !21152)
!21168 = !DILocation(line: 141, column: 14, scope: !21152)
!21169 = !{!21165, !2649, i64 8}
!21170 = !DILocation(line: 142, column: 20, scope: !21152)
!21171 = !DILocation(line: 142, column: 3, scope: !21152)
!21172 = !DILocation(line: 142, column: 6, scope: !21152)
!21173 = !DILocation(line: 142, column: 18, scope: !21152)
!21174 = !{!21165, !2649, i64 16}
!21175 = !DILocation(line: 143, column: 10, scope: !21152)
!21176 = !DILocation(line: 143, column: 3, scope: !21152)
!21177 = distinct !DISubprogram(name: "get_nonce", scope: !2426, file: !2426, line: 151, type: !2506, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2419, retainedNodes: !209)
!21178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !1281, line: 8, size: 128, elements: !21179)
!21179 = !{!21180, !21181}
!21180 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !21178, file: !1281, line: 10, baseType: !294, size: 64)
!21181 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !21178, file: !1281, line: 11, baseType: !1285, size: 64, offset: 64)
!21182 = !DILocalVariable(name: "buffer", arg: 1, scope: !21177, file: !2426, line: 151, type: !53)
!21183 = !DILocation(line: 151, column: 18, scope: !21177)
!21184 = !DILocalVariable(name: "bufsize", arg: 2, scope: !21177, file: !2426, line: 151, type: !55)
!21185 = !DILocation(line: 151, column: 33, scope: !21177)
!21186 = !DILocalVariable(name: "bytes_bound", arg: 3, scope: !21177, file: !2426, line: 151, type: !55)
!21187 = !DILocation(line: 151, column: 49, scope: !21177)
!21188 = !DILocalVariable(name: "buf", scope: !21177, file: !2426, line: 153, type: !9)
!21189 = !DILocation(line: 153, column: 9, scope: !21177)
!21190 = !DILocation(line: 153, column: 15, scope: !21177)
!21191 = !DILocalVariable(name: "seeded", scope: !21177, file: !2426, line: 154, type: !694)
!21192 = !DILocation(line: 154, column: 11, scope: !21177)
!21193 = !DILocalVariable(name: "fd", scope: !21177, file: !2426, line: 157, type: !7)
!21194 = !DILocation(line: 157, column: 7, scope: !21177)
!21195 = !DILocation(line: 157, column: 12, scope: !21177)
!21196 = !DILocation(line: 158, column: 12, scope: !21197)
!21197 = distinct !DILexicalBlock(scope: !21177, file: !2426, line: 158, column: 7)
!21198 = !DILocation(line: 158, column: 9, scope: !21197)
!21199 = !DILocation(line: 158, column: 7, scope: !21177)
!21200 = !DILocation(line: 160, column: 22, scope: !21201)
!21201 = distinct !DILexicalBlock(scope: !21197, file: !2426, line: 159, column: 5)
!21202 = !DILocation(line: 160, column: 26, scope: !21201)
!21203 = !DILocation(line: 160, column: 31, scope: !21201)
!21204 = !DILocation(line: 160, column: 16, scope: !21201)
!21205 = !DILocation(line: 160, column: 14, scope: !21201)
!21206 = !DILocation(line: 161, column: 11, scope: !21207)
!21207 = distinct !DILexicalBlock(scope: !21201, file: !2426, line: 161, column: 11)
!21208 = !DILocation(line: 161, column: 18, scope: !21207)
!21209 = !DILocation(line: 161, column: 11, scope: !21201)
!21210 = !DILocation(line: 162, column: 16, scope: !21207)
!21211 = !DILocation(line: 162, column: 9, scope: !21207)
!21212 = !DILocation(line: 163, column: 14, scope: !21201)
!21213 = !DILocation(line: 163, column: 7, scope: !21201)
!21214 = !DILocation(line: 164, column: 5, scope: !21201)
!21215 = !DILocation(line: 177, column: 3, scope: !21216)
!21216 = distinct !DILexicalBlock(scope: !21177, file: !2426, line: 177, column: 3)
!21217 = !DILocation(line: 177, column: 3, scope: !21177)
!21218 = !DILocalVariable(name: "v", scope: !21219, file: !2426, line: 177, type: !21178)
!21219 = distinct !DILexicalBlock(scope: !21216, file: !2426, line: 177, column: 3)
!21220 = !DILocation(line: 177, column: 3, scope: !21219)
!21221 = !DILocalVariable(name: "nbytes", scope: !21219, file: !2426, line: 177, type: !55)
!21222 = !DILocation(line: 178, column: 3, scope: !21223)
!21223 = distinct !DILexicalBlock(scope: !21177, file: !2426, line: 178, column: 3)
!21224 = !DILocation(line: 178, column: 3, scope: !21177)
!21225 = !DILocalVariable(name: "v", scope: !21226, file: !2426, line: 178, type: !111)
!21226 = distinct !DILexicalBlock(scope: !21223, file: !2426, line: 178, column: 3)
!21227 = !DILocation(line: 178, column: 3, scope: !21226)
!21228 = !DILocalVariable(name: "nbytes", scope: !21226, file: !2426, line: 178, type: !55)
!21229 = !DILocation(line: 179, column: 3, scope: !21230)
!21230 = distinct !DILexicalBlock(scope: !21177, file: !2426, line: 179, column: 3)
!21231 = !DILocation(line: 179, column: 3, scope: !21177)
!21232 = !DILocalVariable(name: "v", scope: !21233, file: !2426, line: 179, type: !111)
!21233 = distinct !DILexicalBlock(scope: !21230, file: !2426, line: 179, column: 3)
!21234 = !DILocation(line: 179, column: 3, scope: !21233)
!21235 = !DILocalVariable(name: "nbytes", scope: !21233, file: !2426, line: 179, type: !55)
!21236 = !DILocation(line: 180, column: 3, scope: !21237)
!21237 = distinct !DILexicalBlock(scope: !21177, file: !2426, line: 180, column: 3)
!21238 = !DILocation(line: 180, column: 3, scope: !21177)
!21239 = !DILocalVariable(name: "v", scope: !21240, file: !2426, line: 180, type: !127)
!21240 = distinct !DILexicalBlock(scope: !21237, file: !2426, line: 180, column: 3)
!21241 = !DILocation(line: 180, column: 3, scope: !21240)
!21242 = !DILocalVariable(name: "nbytes", scope: !21240, file: !2426, line: 180, type: !55)
!21243 = !DILocation(line: 181, column: 3, scope: !21244)
!21244 = distinct !DILexicalBlock(scope: !21177, file: !2426, line: 181, column: 3)
!21245 = !DILocation(line: 181, column: 3, scope: !21177)
!21246 = !DILocalVariable(name: "v", scope: !21247, file: !2426, line: 181, type: !127)
!21247 = distinct !DILexicalBlock(scope: !21244, file: !2426, line: 181, column: 3)
!21248 = !DILocation(line: 181, column: 3, scope: !21247)
!21249 = !DILocalVariable(name: "nbytes", scope: !21247, file: !2426, line: 181, type: !55)
!21250 = !DILocation(line: 189, column: 1, scope: !21177)
!21251 = distinct !DISubprogram(name: "randread_error", scope: !2426, file: !2426, line: 124, type: !2465, scopeLine: 125, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2419, retainedNodes: !209)
!21252 = !DILocalVariable(name: "file_name", arg: 1, scope: !21251, file: !2426, line: 124, type: !515)
!21253 = !DILocation(line: 124, column: 29, scope: !21251)
!21254 = !DILocation(line: 126, column: 7, scope: !21255)
!21255 = distinct !DILexicalBlock(scope: !21251, file: !2426, line: 126, column: 7)
!21256 = !DILocation(line: 126, column: 7, scope: !21251)
!21257 = !DILocation(line: 127, column: 12, scope: !21255)
!21258 = !DILocation(line: 127, column: 26, scope: !21255)
!21259 = !DILocation(line: 128, column: 12, scope: !21255)
!21260 = !DILocation(line: 128, column: 18, scope: !21255)
!21261 = !DILocation(line: 128, column: 25, scope: !21255)
!21262 = !DILocation(line: 128, column: 48, scope: !21255)
!21263 = !DILocation(line: 129, column: 19, scope: !21255)
!21264 = !DILocation(line: 129, column: 12, scope: !21255)
!21265 = !DILocation(line: 127, column: 5, scope: !21255)
!21266 = !DILocation(line: 130, column: 3, scope: !21251)
!21267 = distinct !DISubprogram(name: "randread_set_handler", scope: !2426, file: !2426, line: 242, type: !2496, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2419, retainedNodes: !209)
!21268 = !DILocalVariable(name: "s", arg: 1, scope: !21267, file: !2426, line: 242, type: !2424)
!21269 = !DILocation(line: 242, column: 47, scope: !21267)
!21270 = !DILocalVariable(name: "handler", arg: 2, scope: !21267, file: !2426, line: 242, type: !2464)
!21271 = !DILocation(line: 242, column: 57, scope: !21267)
!21272 = !DILocation(line: 244, column: 16, scope: !21267)
!21273 = !DILocation(line: 244, column: 3, scope: !21267)
!21274 = !DILocation(line: 244, column: 6, scope: !21267)
!21275 = !DILocation(line: 244, column: 14, scope: !21267)
!21276 = !DILocation(line: 245, column: 1, scope: !21267)
!21277 = distinct !DISubprogram(name: "randread_set_handler_arg", scope: !2426, file: !2426, line: 248, type: !2498, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2419, retainedNodes: !209)
!21278 = !DILocalVariable(name: "s", arg: 1, scope: !21277, file: !2426, line: 248, type: !2424)
!21279 = !DILocation(line: 248, column: 51, scope: !21277)
!21280 = !DILocalVariable(name: "handler_arg", arg: 2, scope: !21277, file: !2426, line: 248, type: !515)
!21281 = !DILocation(line: 248, column: 66, scope: !21277)
!21282 = !DILocation(line: 250, column: 20, scope: !21277)
!21283 = !DILocation(line: 250, column: 3, scope: !21277)
!21284 = !DILocation(line: 250, column: 6, scope: !21277)
!21285 = !DILocation(line: 250, column: 18, scope: !21277)
!21286 = !DILocation(line: 251, column: 1, scope: !21277)
!21287 = distinct !DISubprogram(name: "randread", scope: !2426, file: !2426, line: 326, type: !2500, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2419, retainedNodes: !209)
!21288 = !DILocalVariable(name: "s", arg: 1, scope: !21287, file: !2426, line: 326, type: !2424)
!21289 = !DILocation(line: 326, column: 35, scope: !21287)
!21290 = !DILocalVariable(name: "buf", arg: 2, scope: !21287, file: !2426, line: 326, type: !53)
!21291 = !DILocation(line: 326, column: 44, scope: !21287)
!21292 = !DILocalVariable(name: "size", arg: 3, scope: !21287, file: !2426, line: 326, type: !55)
!21293 = !DILocation(line: 326, column: 56, scope: !21287)
!21294 = !DILocation(line: 328, column: 7, scope: !21295)
!21295 = distinct !DILexicalBlock(scope: !21287, file: !2426, line: 328, column: 7)
!21296 = !DILocation(line: 328, column: 10, scope: !21295)
!21297 = !DILocation(line: 328, column: 7, scope: !21287)
!21298 = !DILocation(line: 329, column: 17, scope: !21295)
!21299 = !DILocation(line: 329, column: 20, scope: !21295)
!21300 = !DILocation(line: 329, column: 25, scope: !21295)
!21301 = !DILocation(line: 329, column: 5, scope: !21295)
!21302 = !DILocation(line: 331, column: 17, scope: !21295)
!21303 = !DILocation(line: 331, column: 20, scope: !21295)
!21304 = !DILocation(line: 331, column: 24, scope: !21295)
!21305 = !DILocation(line: 331, column: 31, scope: !21295)
!21306 = !DILocation(line: 331, column: 36, scope: !21295)
!21307 = !DILocation(line: 331, column: 5, scope: !21295)
!21308 = !DILocation(line: 332, column: 1, scope: !21287)
!21309 = distinct !DISubprogram(name: "readsource", scope: !2426, file: !2426, line: 258, type: !2508, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2419, retainedNodes: !209)
!21310 = !DILocalVariable(name: "s", arg: 1, scope: !21309, file: !2426, line: 258, type: !2424)
!21311 = !DILocation(line: 258, column: 37, scope: !21309)
!21312 = !DILocalVariable(name: "p", arg: 2, scope: !21309, file: !2426, line: 258, type: !2510)
!21313 = !DILocation(line: 258, column: 55, scope: !21309)
!21314 = !DILocalVariable(name: "size", arg: 3, scope: !21309, file: !2426, line: 258, type: !55)
!21315 = !DILocation(line: 258, column: 65, scope: !21309)
!21316 = !DILocation(line: 260, column: 3, scope: !21309)
!21317 = !DILocalVariable(name: "inbytes", scope: !21318, file: !2426, line: 262, type: !55)
!21318 = distinct !DILexicalBlock(scope: !21309, file: !2426, line: 261, column: 5)
!21319 = !DILocation(line: 262, column: 14, scope: !21318)
!21320 = !DILocation(line: 262, column: 24, scope: !21318)
!21321 = !DILocalVariable(name: "fread_errno", scope: !21318, file: !2426, line: 263, type: !7)
!21322 = !DILocation(line: 263, column: 11, scope: !21318)
!21323 = !DILocation(line: 263, column: 25, scope: !21318)
!21324 = !DILocation(line: 264, column: 12, scope: !21318)
!21325 = !DILocation(line: 264, column: 9, scope: !21318)
!21326 = !DILocation(line: 265, column: 15, scope: !21318)
!21327 = !DILocation(line: 265, column: 12, scope: !21318)
!21328 = !DILocation(line: 266, column: 11, scope: !21329)
!21329 = distinct !DILexicalBlock(scope: !21318, file: !2426, line: 266, column: 11)
!21330 = !DILocation(line: 266, column: 16, scope: !21329)
!21331 = !DILocation(line: 266, column: 11, scope: !21318)
!21332 = !DILocation(line: 267, column: 9, scope: !21329)
!21333 = !DILocation(line: 268, column: 16, scope: !21318)
!21334 = !DILocation(line: 268, column: 37, scope: !21318)
!21335 = !DILocation(line: 268, column: 7, scope: !21318)
!21336 = !DILocation(line: 268, column: 13, scope: !21318)
!21337 = !DILocation(line: 269, column: 7, scope: !21318)
!21338 = !DILocation(line: 269, column: 10, scope: !21318)
!21339 = !DILocation(line: 269, column: 19, scope: !21318)
!21340 = !DILocation(line: 269, column: 22, scope: !21318)
!21341 = distinct !{!21341, !21316, !21342}
!21342 = !DILocation(line: 270, column: 5, scope: !21309)
!21343 = !DILocation(line: 271, column: 1, scope: !21309)
!21344 = distinct !DISubprogram(name: "readisaac", scope: !2426, file: !2426, line: 278, type: !2511, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2419, retainedNodes: !209)
!21345 = !DILocalVariable(name: "isaac", arg: 1, scope: !21344, file: !2426, line: 278, type: !2513)
!21346 = !DILocation(line: 278, column: 26, scope: !21344)
!21347 = !DILocalVariable(name: "p", arg: 2, scope: !21344, file: !2426, line: 278, type: !53)
!21348 = !DILocation(line: 278, column: 39, scope: !21344)
!21349 = !DILocalVariable(name: "size", arg: 3, scope: !21344, file: !2426, line: 278, type: !55)
!21350 = !DILocation(line: 278, column: 49, scope: !21344)
!21351 = !DILocalVariable(name: "inbytes", scope: !21344, file: !2426, line: 280, type: !55)
!21352 = !DILocation(line: 280, column: 10, scope: !21344)
!21353 = !DILocation(line: 280, column: 20, scope: !21344)
!21354 = !DILocation(line: 280, column: 27, scope: !21344)
!21355 = !{!21356, !2916, i64 0}
!21356 = !{!"isaac", !2916, i64 0, !21357, i64 8, !2637, i64 2080}
!21357 = !{!"isaac_state", !2637, i64 0, !2916, i64 2048, !2916, i64 2056, !2916, i64 2064}
!21358 = !DILocation(line: 282, column: 3, scope: !21344)
!21359 = !DILocalVariable(name: "char_p", scope: !21360, file: !2426, line: 284, type: !9)
!21360 = distinct !DILexicalBlock(scope: !21344, file: !2426, line: 283, column: 5)
!21361 = !DILocation(line: 284, column: 13, scope: !21360)
!21362 = !DILocation(line: 284, column: 22, scope: !21360)
!21363 = !DILocation(line: 286, column: 11, scope: !21364)
!21364 = distinct !DILexicalBlock(scope: !21360, file: !2426, line: 286, column: 11)
!21365 = !DILocation(line: 286, column: 19, scope: !21364)
!21366 = !DILocation(line: 286, column: 16, scope: !21364)
!21367 = !DILocation(line: 286, column: 11, scope: !21360)
!21368 = !DILocation(line: 288, column: 19, scope: !21369)
!21369 = distinct !DILexicalBlock(scope: !21364, file: !2426, line: 287, column: 9)
!21370 = !DILocation(line: 288, column: 22, scope: !21369)
!21371 = !DILocation(line: 288, column: 29, scope: !21369)
!21372 = !DILocation(line: 288, column: 34, scope: !21369)
!21373 = !DILocation(line: 288, column: 36, scope: !21369)
!21374 = !DILocation(line: 288, column: 52, scope: !21369)
!21375 = !DILocation(line: 288, column: 50, scope: !21369)
!21376 = !DILocation(line: 288, column: 61, scope: !21369)
!21377 = !DILocation(line: 288, column: 11, scope: !21369)
!21378 = !DILocation(line: 289, column: 29, scope: !21369)
!21379 = !DILocation(line: 289, column: 39, scope: !21369)
!21380 = !DILocation(line: 289, column: 37, scope: !21369)
!21381 = !DILocation(line: 289, column: 11, scope: !21369)
!21382 = !DILocation(line: 289, column: 18, scope: !21369)
!21383 = !DILocation(line: 289, column: 27, scope: !21369)
!21384 = !DILocation(line: 290, column: 11, scope: !21369)
!21385 = !DILocation(line: 293, column: 15, scope: !21360)
!21386 = !DILocation(line: 293, column: 18, scope: !21360)
!21387 = !DILocation(line: 293, column: 25, scope: !21360)
!21388 = !DILocation(line: 293, column: 30, scope: !21360)
!21389 = !DILocation(line: 293, column: 32, scope: !21360)
!21390 = !DILocation(line: 293, column: 48, scope: !21360)
!21391 = !DILocation(line: 293, column: 46, scope: !21360)
!21392 = !DILocation(line: 293, column: 57, scope: !21360)
!21393 = !DILocation(line: 293, column: 7, scope: !21360)
!21394 = !DILocation(line: 294, column: 11, scope: !21360)
!21395 = !DILocation(line: 294, column: 20, scope: !21360)
!21396 = !DILocation(line: 294, column: 18, scope: !21360)
!21397 = !DILocation(line: 294, column: 9, scope: !21360)
!21398 = !DILocation(line: 295, column: 15, scope: !21360)
!21399 = !DILocation(line: 295, column: 12, scope: !21360)
!21400 = !DILocation(line: 299, column: 11, scope: !21401)
!21401 = distinct !DILexicalBlock(scope: !21360, file: !2426, line: 299, column: 11)
!21402 = !DILocation(line: 299, column: 11, scope: !21360)
!21403 = !DILocalVariable(name: "wp", scope: !21404, file: !2426, line: 301, type: !2514)
!21404 = distinct !DILexicalBlock(scope: !21401, file: !2426, line: 300, column: 9)
!21405 = !DILocation(line: 301, column: 23, scope: !21404)
!21406 = !DILocation(line: 301, column: 28, scope: !21404)
!21407 = !DILocation(line: 302, column: 11, scope: !21404)
!21408 = !DILocation(line: 302, column: 33, scope: !21404)
!21409 = !DILocation(line: 302, column: 30, scope: !21404)
!21410 = !DILocation(line: 304, column: 30, scope: !21411)
!21411 = distinct !DILexicalBlock(scope: !21404, file: !2426, line: 303, column: 13)
!21412 = !DILocation(line: 304, column: 37, scope: !21411)
!21413 = !DILocation(line: 304, column: 44, scope: !21411)
!21414 = !DILocation(line: 304, column: 15, scope: !21411)
!21415 = !DILocation(line: 305, column: 18, scope: !21411)
!21416 = !DILocation(line: 306, column: 20, scope: !21411)
!21417 = !DILocation(line: 307, column: 19, scope: !21418)
!21418 = distinct !DILexicalBlock(scope: !21411, file: !2426, line: 307, column: 19)
!21419 = !DILocation(line: 307, column: 24, scope: !21418)
!21420 = !DILocation(line: 307, column: 19, scope: !21411)
!21421 = !DILocation(line: 309, column: 19, scope: !21422)
!21422 = distinct !DILexicalBlock(scope: !21418, file: !2426, line: 308, column: 17)
!21423 = !DILocation(line: 309, column: 26, scope: !21422)
!21424 = !DILocation(line: 309, column: 35, scope: !21422)
!21425 = !DILocation(line: 310, column: 19, scope: !21422)
!21426 = distinct !{!21426, !21407, !21427}
!21427 = !DILocation(line: 312, column: 13, scope: !21404)
!21428 = !DILocation(line: 313, column: 15, scope: !21404)
!21429 = !DILocation(line: 313, column: 13, scope: !21404)
!21430 = !DILocation(line: 314, column: 9, scope: !21404)
!21431 = !DILocation(line: 316, column: 22, scope: !21360)
!21432 = !DILocation(line: 316, column: 29, scope: !21360)
!21433 = !DILocation(line: 316, column: 36, scope: !21360)
!21434 = !DILocation(line: 316, column: 43, scope: !21360)
!21435 = !DILocation(line: 316, column: 48, scope: !21360)
!21436 = !DILocation(line: 316, column: 7, scope: !21360)
!21437 = !DILocation(line: 317, column: 15, scope: !21360)
!21438 = distinct !{!21438, !21358, !21439}
!21439 = !DILocation(line: 318, column: 5, scope: !21344)
!21440 = !DILocation(line: 319, column: 1, scope: !21344)
!21441 = distinct !DISubprogram(name: "randread_free", scope: !2426, file: !2426, line: 341, type: !2502, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2419, retainedNodes: !209)
!21442 = !DILocalVariable(name: "s", arg: 1, scope: !21441, file: !2426, line: 341, type: !2424)
!21443 = !DILocation(line: 341, column: 40, scope: !21441)
!21444 = !DILocalVariable(name: "source", scope: !21441, file: !2426, line: 343, type: !2429)
!21445 = !DILocation(line: 343, column: 9, scope: !21441)
!21446 = !DILocation(line: 343, column: 18, scope: !21441)
!21447 = !DILocation(line: 343, column: 21, scope: !21441)
!21448 = !DILocation(line: 344, column: 19, scope: !21441)
!21449 = !DILocation(line: 344, column: 3, scope: !21441)
!21450 = !DILocation(line: 345, column: 9, scope: !21441)
!21451 = !DILocation(line: 345, column: 3, scope: !21441)
!21452 = !DILocation(line: 346, column: 11, scope: !21441)
!21453 = !DILocation(line: 346, column: 28, scope: !21441)
!21454 = !DILocation(line: 346, column: 20, scope: !21441)
!21455 = !DILocation(line: 346, column: 3, scope: !21441)
!21456 = distinct !DISubprogram(name: "isaac_refill", scope: !21457, file: !21457, line: 90, type: !2518, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2515, retainedNodes: !209)
!21457 = !DIFile(filename: "lib/rand-isaac.c", directory: "/home/mbarbar/clone/coreutils")
!21458 = !DILocalVariable(name: "s", arg: 1, scope: !21456, file: !21457, line: 90, type: !2520)
!21459 = !DILocation(line: 90, column: 35, scope: !21456)
!21460 = !DILocalVariable(name: "result", arg: 2, scope: !21456, file: !21457, line: 90, type: !2514)
!21461 = !DILocation(line: 90, column: 49, scope: !21456)
!21462 = !DILocalVariable(name: "a", scope: !21456, file: !21457, line: 93, type: !2482)
!21463 = !DILocation(line: 93, column: 14, scope: !21456)
!21464 = !DILocation(line: 93, column: 18, scope: !21456)
!21465 = !DILocation(line: 93, column: 21, scope: !21456)
!21466 = !{!21357, !2916, i64 2048}
!21467 = !DILocalVariable(name: "b", scope: !21456, file: !21457, line: 94, type: !2482)
!21468 = !DILocation(line: 94, column: 14, scope: !21456)
!21469 = !DILocation(line: 94, column: 18, scope: !21456)
!21470 = !DILocation(line: 94, column: 21, scope: !21456)
!21471 = !{!21357, !2916, i64 2056}
!21472 = !DILocation(line: 94, column: 28, scope: !21456)
!21473 = !DILocation(line: 94, column: 31, scope: !21456)
!21474 = !DILocation(line: 94, column: 26, scope: !21456)
!21475 = !{!21357, !2916, i64 2064}
!21476 = !DILocation(line: 94, column: 23, scope: !21456)
!21477 = !DILocalVariable(name: "m", scope: !21456, file: !21457, line: 97, type: !2514)
!21478 = !DILocation(line: 97, column: 15, scope: !21456)
!21479 = !DILocation(line: 97, column: 19, scope: !21456)
!21480 = !DILocation(line: 97, column: 22, scope: !21456)
!21481 = !DILocalVariable(name: "r", scope: !21456, file: !21457, line: 98, type: !2514)
!21482 = !DILocation(line: 98, column: 15, scope: !21456)
!21483 = !DILocation(line: 98, column: 19, scope: !21456)
!21484 = !DILocation(line: 116, column: 3, scope: !21456)
!21485 = !DILocalVariable(name: "x", scope: !21486, file: !21457, line: 118, type: !2482)
!21486 = distinct !DILexicalBlock(scope: !21487, file: !21457, line: 118, column: 7)
!21487 = distinct !DILexicalBlock(scope: !21456, file: !21457, line: 117, column: 5)
!21488 = !DILocation(line: 118, column: 7, scope: !21486)
!21489 = !DILocalVariable(name: "y", scope: !21486, file: !21457, line: 118, type: !2482)
!21490 = !DILocalVariable(name: "x", scope: !21491, file: !21457, line: 119, type: !2482)
!21491 = distinct !DILexicalBlock(scope: !21487, file: !21457, line: 119, column: 7)
!21492 = !DILocation(line: 119, column: 7, scope: !21491)
!21493 = !DILocalVariable(name: "y", scope: !21491, file: !21457, line: 119, type: !2482)
!21494 = !DILocalVariable(name: "x", scope: !21495, file: !21457, line: 120, type: !2482)
!21495 = distinct !DILexicalBlock(scope: !21487, file: !21457, line: 120, column: 7)
!21496 = !DILocation(line: 120, column: 7, scope: !21495)
!21497 = !DILocalVariable(name: "y", scope: !21495, file: !21457, line: 120, type: !2482)
!21498 = !DILocalVariable(name: "x", scope: !21499, file: !21457, line: 121, type: !2482)
!21499 = distinct !DILexicalBlock(scope: !21487, file: !21457, line: 121, column: 7)
!21500 = !DILocation(line: 121, column: 7, scope: !21499)
!21501 = !DILocalVariable(name: "y", scope: !21499, file: !21457, line: 121, type: !2482)
!21502 = !DILocation(line: 122, column: 9, scope: !21487)
!21503 = !DILocation(line: 123, column: 5, scope: !21487)
!21504 = !DILocation(line: 124, column: 13, scope: !21456)
!21505 = !DILocation(line: 124, column: 21, scope: !21456)
!21506 = !DILocation(line: 124, column: 24, scope: !21456)
!21507 = !DILocation(line: 124, column: 26, scope: !21456)
!21508 = !DILocation(line: 124, column: 19, scope: !21456)
!21509 = distinct !{!21509, !21484, !21510}
!21510 = !DILocation(line: 124, column: 32, scope: !21456)
!21511 = !DILocation(line: 126, column: 3, scope: !21456)
!21512 = !DILocalVariable(name: "x", scope: !21513, file: !21457, line: 128, type: !2482)
!21513 = distinct !DILexicalBlock(scope: !21514, file: !21457, line: 128, column: 7)
!21514 = distinct !DILexicalBlock(scope: !21456, file: !21457, line: 127, column: 5)
!21515 = !DILocation(line: 128, column: 7, scope: !21513)
!21516 = !DILocalVariable(name: "y", scope: !21513, file: !21457, line: 128, type: !2482)
!21517 = !DILocalVariable(name: "x", scope: !21518, file: !21457, line: 129, type: !2482)
!21518 = distinct !DILexicalBlock(scope: !21514, file: !21457, line: 129, column: 7)
!21519 = !DILocation(line: 129, column: 7, scope: !21518)
!21520 = !DILocalVariable(name: "y", scope: !21518, file: !21457, line: 129, type: !2482)
!21521 = !DILocalVariable(name: "x", scope: !21522, file: !21457, line: 130, type: !2482)
!21522 = distinct !DILexicalBlock(scope: !21514, file: !21457, line: 130, column: 7)
!21523 = !DILocation(line: 130, column: 7, scope: !21522)
!21524 = !DILocalVariable(name: "y", scope: !21522, file: !21457, line: 130, type: !2482)
!21525 = !DILocalVariable(name: "x", scope: !21526, file: !21457, line: 131, type: !2482)
!21526 = distinct !DILexicalBlock(scope: !21514, file: !21457, line: 131, column: 7)
!21527 = !DILocation(line: 131, column: 7, scope: !21526)
!21528 = !DILocalVariable(name: "y", scope: !21526, file: !21457, line: 131, type: !2482)
!21529 = !DILocation(line: 132, column: 9, scope: !21514)
!21530 = !DILocation(line: 133, column: 5, scope: !21514)
!21531 = !DILocation(line: 134, column: 13, scope: !21456)
!21532 = !DILocation(line: 134, column: 21, scope: !21456)
!21533 = !DILocation(line: 134, column: 24, scope: !21456)
!21534 = !DILocation(line: 134, column: 26, scope: !21456)
!21535 = !DILocation(line: 134, column: 19, scope: !21456)
!21536 = distinct !{!21536, !21511, !21537}
!21537 = !DILocation(line: 134, column: 39, scope: !21456)
!21538 = !DILocation(line: 136, column: 10, scope: !21456)
!21539 = !DILocation(line: 136, column: 3, scope: !21456)
!21540 = !DILocation(line: 136, column: 6, scope: !21456)
!21541 = !DILocation(line: 136, column: 8, scope: !21456)
!21542 = !DILocation(line: 137, column: 10, scope: !21456)
!21543 = !DILocation(line: 137, column: 3, scope: !21456)
!21544 = !DILocation(line: 137, column: 6, scope: !21456)
!21545 = !DILocation(line: 137, column: 8, scope: !21456)
!21546 = !DILocation(line: 138, column: 1, scope: !21456)
!21547 = distinct !DISubprogram(name: "ind", scope: !21457, file: !21457, line: 68, type: !2529, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2515, retainedNodes: !209)
!21548 = !DILocalVariable(name: "m", arg: 1, scope: !21547, file: !21457, line: 68, type: !2531)
!21549 = !DILocation(line: 68, column: 24, scope: !21547)
!21550 = !DILocalVariable(name: "x", arg: 2, scope: !21547, file: !21457, line: 68, type: !2482)
!21551 = !DILocation(line: 68, column: 38, scope: !21547)
!21552 = !DILocalVariable(name: "void_m", scope: !21553, file: !21457, line: 75, type: !515)
!21553 = distinct !DILexicalBlock(scope: !21554, file: !21457, line: 71, column: 5)
!21554 = distinct !DILexicalBlock(scope: !21547, file: !21457, line: 70, column: 7)
!21555 = !DILocation(line: 75, column: 19, scope: !21553)
!21556 = !DILocation(line: 75, column: 28, scope: !21553)
!21557 = !DILocalVariable(name: "base_p", scope: !21553, file: !21457, line: 76, type: !180)
!21558 = !DILocation(line: 76, column: 19, scope: !21553)
!21559 = !DILocation(line: 76, column: 28, scope: !21553)
!21560 = !DILocalVariable(name: "word_p", scope: !21553, file: !21457, line: 77, type: !515)
!21561 = !DILocation(line: 77, column: 19, scope: !21553)
!21562 = !DILocation(line: 77, column: 28, scope: !21553)
!21563 = !DILocation(line: 77, column: 38, scope: !21553)
!21564 = !DILocation(line: 77, column: 40, scope: !21553)
!21565 = !DILocation(line: 77, column: 35, scope: !21553)
!21566 = !DILocalVariable(name: "p", scope: !21553, file: !21457, line: 78, type: !2531)
!21567 = !DILocation(line: 78, column: 25, scope: !21553)
!21568 = !DILocation(line: 78, column: 29, scope: !21553)
!21569 = !DILocation(line: 79, column: 15, scope: !21553)
!21570 = !DILocation(line: 79, column: 14, scope: !21553)
!21571 = !DILocation(line: 79, column: 7, scope: !21553)
!21572 = distinct !DISubprogram(name: "just", scope: !21457, file: !21457, line: 60, type: !2533, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2515, retainedNodes: !209)
!21573 = !DILocalVariable(name: "a", arg: 1, scope: !21572, file: !21457, line: 60, type: !2482)
!21574 = !DILocation(line: 60, column: 18, scope: !21572)
!21575 = !DILocalVariable(name: "desired_bits", scope: !21572, file: !21457, line: 62, type: !2482)
!21576 = !DILocation(line: 62, column: 14, scope: !21572)
!21577 = !DILocation(line: 63, column: 10, scope: !21572)
!21578 = !DILocation(line: 63, column: 14, scope: !21572)
!21579 = !DILocation(line: 63, column: 12, scope: !21572)
!21580 = !DILocation(line: 63, column: 3, scope: !21572)
!21581 = distinct !DISubprogram(name: "isaac_seed", scope: !21457, file: !21457, line: 248, type: !2527, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2515, retainedNodes: !209)
!21582 = !DILocalVariable(name: "s", arg: 1, scope: !21581, file: !21457, line: 248, type: !2520)
!21583 = !DILocation(line: 248, column: 33, scope: !21581)
!21584 = !DILocalVariable(name: "a", scope: !21581, file: !21457, line: 250, type: !2482)
!21585 = !DILocation(line: 250, column: 14, scope: !21581)
!21586 = !DILocalVariable(name: "b", scope: !21581, file: !21457, line: 251, type: !2482)
!21587 = !DILocation(line: 251, column: 14, scope: !21581)
!21588 = !DILocalVariable(name: "c", scope: !21581, file: !21457, line: 252, type: !2482)
!21589 = !DILocation(line: 252, column: 14, scope: !21581)
!21590 = !DILocalVariable(name: "d", scope: !21581, file: !21457, line: 253, type: !2482)
!21591 = !DILocation(line: 253, column: 14, scope: !21581)
!21592 = !DILocalVariable(name: "e", scope: !21581, file: !21457, line: 254, type: !2482)
!21593 = !DILocation(line: 254, column: 14, scope: !21581)
!21594 = !DILocalVariable(name: "f", scope: !21581, file: !21457, line: 255, type: !2482)
!21595 = !DILocation(line: 255, column: 14, scope: !21581)
!21596 = !DILocalVariable(name: "g", scope: !21581, file: !21457, line: 256, type: !2482)
!21597 = !DILocation(line: 256, column: 14, scope: !21581)
!21598 = !DILocalVariable(name: "h", scope: !21581, file: !21457, line: 257, type: !2482)
!21599 = !DILocation(line: 257, column: 14, scope: !21581)
!21600 = !DILocalVariable(name: "i", scope: !21601, file: !21457, line: 269, type: !7)
!21601 = distinct !DILexicalBlock(scope: !21581, file: !21457, line: 269, column: 3)
!21602 = !DILocation(line: 269, column: 3, scope: !21601)
!21603 = !DILocation(line: 269, column: 3, scope: !21604)
!21604 = distinct !DILexicalBlock(scope: !21601, file: !21457, line: 269, column: 3)
!21605 = !DILocation(line: 269, column: 3, scope: !21606)
!21606 = distinct !DILexicalBlock(scope: !21604, file: !21457, line: 269, column: 3)
!21607 = !DILocation(line: 269, column: 3, scope: !21608)
!21608 = distinct !DILexicalBlock(scope: !21606, file: !21457, line: 269, column: 3)
!21609 = !DILocation(line: 269, column: 3, scope: !21610)
!21610 = distinct !DILexicalBlock(scope: !21608, file: !21457, line: 269, column: 3)
!21611 = distinct !{!21611, !21603, !21603}
!21612 = !DILocalVariable(name: "i", scope: !21613, file: !21457, line: 270, type: !7)
!21613 = distinct !DILexicalBlock(scope: !21581, file: !21457, line: 270, column: 3)
!21614 = !DILocation(line: 270, column: 3, scope: !21613)
!21615 = !DILocation(line: 270, column: 3, scope: !21616)
!21616 = distinct !DILexicalBlock(scope: !21613, file: !21457, line: 270, column: 3)
!21617 = !DILocation(line: 270, column: 3, scope: !21618)
!21618 = distinct !DILexicalBlock(scope: !21616, file: !21457, line: 270, column: 3)
!21619 = !DILocation(line: 270, column: 3, scope: !21620)
!21620 = distinct !DILexicalBlock(scope: !21618, file: !21457, line: 270, column: 3)
!21621 = !DILocation(line: 270, column: 3, scope: !21622)
!21622 = distinct !DILexicalBlock(scope: !21620, file: !21457, line: 270, column: 3)
!21623 = distinct !{!21623, !21615, !21615}
!21624 = !DILocation(line: 272, column: 17, scope: !21581)
!21625 = !DILocation(line: 272, column: 20, scope: !21581)
!21626 = !DILocation(line: 272, column: 22, scope: !21581)
!21627 = !DILocation(line: 272, column: 10, scope: !21581)
!21628 = !DILocation(line: 272, column: 13, scope: !21581)
!21629 = !DILocation(line: 272, column: 15, scope: !21581)
!21630 = !DILocation(line: 272, column: 3, scope: !21581)
!21631 = !DILocation(line: 272, column: 6, scope: !21581)
!21632 = !DILocation(line: 272, column: 8, scope: !21581)
!21633 = !DILocation(line: 273, column: 1, scope: !21581)
!21634 = distinct !DISubprogram(name: "dup_safer", scope: !21635, file: !21635, line: 31, type: !1789, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2535, retainedNodes: !209)
!21635 = !DIFile(filename: "lib/dup-safer.c", directory: "/home/mbarbar/clone/coreutils")
!21636 = !DILocalVariable(name: "fd", arg: 1, scope: !21634, file: !21635, line: 31, type: !7)
!21637 = !DILocation(line: 31, column: 16, scope: !21634)
!21638 = !DILocation(line: 33, column: 17, scope: !21634)
!21639 = !DILocation(line: 33, column: 10, scope: !21634)
!21640 = !DILocation(line: 33, column: 3, scope: !21634)
!21641 = distinct !DISubprogram(name: "xsum", scope: !21642, file: !21642, line: 63, type: !2541, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2538, retainedNodes: !209)
!21642 = !DIFile(filename: "./lib/xsize.h", directory: "/home/mbarbar/clone/coreutils")
!21643 = !DILocalVariable(name: "size1", arg: 1, scope: !21641, file: !21642, line: 63, type: !55)
!21644 = !DILocation(line: 63, column: 14, scope: !21641)
!21645 = !DILocalVariable(name: "size2", arg: 2, scope: !21641, file: !21642, line: 63, type: !55)
!21646 = !DILocation(line: 63, column: 28, scope: !21641)
!21647 = !DILocalVariable(name: "sum", scope: !21641, file: !21642, line: 65, type: !55)
!21648 = !DILocation(line: 65, column: 10, scope: !21641)
!21649 = !DILocation(line: 65, column: 16, scope: !21641)
!21650 = !DILocation(line: 65, column: 24, scope: !21641)
!21651 = !DILocation(line: 65, column: 22, scope: !21641)
!21652 = !DILocation(line: 66, column: 11, scope: !21641)
!21653 = !DILocation(line: 66, column: 18, scope: !21641)
!21654 = !DILocation(line: 66, column: 15, scope: !21641)
!21655 = !DILocation(line: 66, column: 26, scope: !21641)
!21656 = !DILocation(line: 66, column: 3, scope: !21641)
!21657 = distinct !DISubprogram(name: "xsum3", scope: !21642, file: !21642, line: 74, type: !1535, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2538, retainedNodes: !209)
!21658 = !DILocalVariable(name: "size1", arg: 1, scope: !21657, file: !21642, line: 74, type: !55)
!21659 = !DILocation(line: 74, column: 15, scope: !21657)
!21660 = !DILocalVariable(name: "size2", arg: 2, scope: !21657, file: !21642, line: 74, type: !55)
!21661 = !DILocation(line: 74, column: 29, scope: !21657)
!21662 = !DILocalVariable(name: "size3", arg: 3, scope: !21657, file: !21642, line: 74, type: !55)
!21663 = !DILocation(line: 74, column: 43, scope: !21657)
!21664 = !DILocation(line: 76, column: 22, scope: !21657)
!21665 = !DILocation(line: 76, column: 29, scope: !21657)
!21666 = !DILocation(line: 76, column: 16, scope: !21657)
!21667 = !DILocation(line: 76, column: 37, scope: !21657)
!21668 = !DILocation(line: 76, column: 10, scope: !21657)
!21669 = !DILocation(line: 76, column: 3, scope: !21657)
!21670 = distinct !DISubprogram(name: "xsum4", scope: !21642, file: !21642, line: 84, type: !2543, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2538, retainedNodes: !209)
!21671 = !DILocalVariable(name: "size1", arg: 1, scope: !21670, file: !21642, line: 84, type: !55)
!21672 = !DILocation(line: 84, column: 15, scope: !21670)
!21673 = !DILocalVariable(name: "size2", arg: 2, scope: !21670, file: !21642, line: 84, type: !55)
!21674 = !DILocation(line: 84, column: 29, scope: !21670)
!21675 = !DILocalVariable(name: "size3", arg: 3, scope: !21670, file: !21642, line: 84, type: !55)
!21676 = !DILocation(line: 84, column: 43, scope: !21670)
!21677 = !DILocalVariable(name: "size4", arg: 4, scope: !21670, file: !21642, line: 84, type: !55)
!21678 = !DILocation(line: 84, column: 57, scope: !21670)
!21679 = !DILocation(line: 86, column: 28, scope: !21670)
!21680 = !DILocation(line: 86, column: 35, scope: !21670)
!21681 = !DILocation(line: 86, column: 22, scope: !21670)
!21682 = !DILocation(line: 86, column: 43, scope: !21670)
!21683 = !DILocation(line: 86, column: 16, scope: !21670)
!21684 = !DILocation(line: 86, column: 51, scope: !21670)
!21685 = !DILocation(line: 86, column: 10, scope: !21670)
!21686 = !DILocation(line: 86, column: 3, scope: !21670)
!21687 = distinct !DISubprogram(name: "xmax", scope: !21642, file: !21642, line: 94, type: !2541, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2538, retainedNodes: !209)
!21688 = !DILocalVariable(name: "size1", arg: 1, scope: !21687, file: !21642, line: 94, type: !55)
!21689 = !DILocation(line: 94, column: 14, scope: !21687)
!21690 = !DILocalVariable(name: "size2", arg: 2, scope: !21687, file: !21642, line: 94, type: !55)
!21691 = !DILocation(line: 94, column: 28, scope: !21687)
!21692 = !DILocation(line: 98, column: 11, scope: !21687)
!21693 = !DILocation(line: 98, column: 20, scope: !21687)
!21694 = !DILocation(line: 98, column: 17, scope: !21687)
!21695 = !DILocation(line: 98, column: 28, scope: !21687)
!21696 = !DILocation(line: 98, column: 36, scope: !21687)
!21697 = !DILocation(line: 98, column: 3, scope: !21687)
!21698 = distinct !DISubprogram(name: "rpl_fclose", scope: !21699, file: !21699, line: 58, type: !2548, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2545, retainedNodes: !209)
!21699 = !DIFile(filename: "lib/fclose.c", directory: "/home/mbarbar/clone/coreutils")
!21700 = !DILocalVariable(name: "fp", arg: 1, scope: !21698, file: !21699, line: 58, type: !2550)
!21701 = !DILocation(line: 58, column: 19, scope: !21698)
!21702 = !DILocalVariable(name: "saved_errno", scope: !21698, file: !21699, line: 60, type: !7)
!21703 = !DILocation(line: 60, column: 7, scope: !21698)
!21704 = !DILocalVariable(name: "fd", scope: !21698, file: !21699, line: 61, type: !7)
!21705 = !DILocation(line: 61, column: 7, scope: !21698)
!21706 = !DILocalVariable(name: "result", scope: !21698, file: !21699, line: 62, type: !7)
!21707 = !DILocation(line: 62, column: 7, scope: !21698)
!21708 = !DILocation(line: 65, column: 16, scope: !21698)
!21709 = !DILocation(line: 65, column: 8, scope: !21698)
!21710 = !DILocation(line: 65, column: 6, scope: !21698)
!21711 = !DILocation(line: 66, column: 7, scope: !21712)
!21712 = distinct !DILexicalBlock(scope: !21698, file: !21699, line: 66, column: 7)
!21713 = !DILocation(line: 66, column: 10, scope: !21712)
!21714 = !DILocation(line: 66, column: 7, scope: !21698)
!21715 = !DILocation(line: 67, column: 28, scope: !21712)
!21716 = !DILocation(line: 67, column: 12, scope: !21712)
!21717 = !DILocation(line: 67, column: 5, scope: !21712)
!21718 = !DILocation(line: 72, column: 9, scope: !21719)
!21719 = distinct !DILexicalBlock(scope: !21698, file: !21699, line: 72, column: 7)
!21720 = !DILocation(line: 72, column: 23, scope: !21719)
!21721 = !DILocation(line: 72, column: 41, scope: !21719)
!21722 = !DILocation(line: 72, column: 33, scope: !21719)
!21723 = !DILocation(line: 72, column: 26, scope: !21719)
!21724 = !DILocation(line: 72, column: 59, scope: !21719)
!21725 = !DILocation(line: 73, column: 7, scope: !21719)
!21726 = !DILocation(line: 73, column: 18, scope: !21719)
!21727 = !DILocation(line: 73, column: 10, scope: !21719)
!21728 = !DILocation(line: 72, column: 7, scope: !21698)
!21729 = !DILocation(line: 74, column: 19, scope: !21719)
!21730 = !DILocation(line: 74, column: 17, scope: !21719)
!21731 = !DILocation(line: 74, column: 5, scope: !21719)
!21732 = !DILocation(line: 100, column: 28, scope: !21698)
!21733 = !DILocation(line: 100, column: 12, scope: !21698)
!21734 = !DILocation(line: 100, column: 10, scope: !21698)
!21735 = !DILocation(line: 105, column: 7, scope: !21736)
!21736 = distinct !DILexicalBlock(scope: !21698, file: !21699, line: 105, column: 7)
!21737 = !DILocation(line: 105, column: 19, scope: !21736)
!21738 = !DILocation(line: 105, column: 7, scope: !21698)
!21739 = !DILocation(line: 107, column: 15, scope: !21740)
!21740 = distinct !DILexicalBlock(scope: !21736, file: !21699, line: 106, column: 5)
!21741 = !DILocation(line: 107, column: 7, scope: !21740)
!21742 = !DILocation(line: 107, column: 13, scope: !21740)
!21743 = !DILocation(line: 108, column: 14, scope: !21740)
!21744 = !DILocation(line: 109, column: 5, scope: !21740)
!21745 = !DILocation(line: 111, column: 10, scope: !21698)
!21746 = !DILocation(line: 111, column: 3, scope: !21698)
!21747 = !DILocation(line: 112, column: 1, scope: !21698)
!21748 = distinct !DISubprogram(name: "rpl_fcntl", scope: !1394, file: !1394, line: 202, type: !21749, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1395, retainedNodes: !209)
!21749 = !DISubroutineType(types: !21750)
!21750 = !{!7, !7, !7, null}
!21751 = !DILocalVariable(name: "fd", arg: 1, scope: !21748, file: !1394, line: 202, type: !7)
!21752 = !DILocation(line: 202, column: 12, scope: !21748)
!21753 = !DILocalVariable(name: "action", arg: 2, scope: !21748, file: !1394, line: 202, type: !7)
!21754 = !DILocation(line: 202, column: 20, scope: !21748)
!21755 = !DILocalVariable(name: "arg", scope: !21748, file: !1394, line: 208, type: !1398)
!21756 = !DILocation(line: 208, column: 11, scope: !21748)
!21757 = !DILocalVariable(name: "result", scope: !21748, file: !1394, line: 209, type: !7)
!21758 = !DILocation(line: 209, column: 7, scope: !21748)
!21759 = !DILocation(line: 210, column: 3, scope: !21748)
!21760 = !DILocation(line: 211, column: 11, scope: !21748)
!21761 = !DILocation(line: 211, column: 3, scope: !21748)
!21762 = !DILocalVariable(name: "target", scope: !21763, file: !1394, line: 215, type: !7)
!21763 = distinct !DILexicalBlock(scope: !21764, file: !1394, line: 214, column: 7)
!21764 = distinct !DILexicalBlock(scope: !21748, file: !1394, line: 212, column: 5)
!21765 = !DILocation(line: 215, column: 13, scope: !21763)
!21766 = !DILocation(line: 215, column: 22, scope: !21763)
!21767 = !DILocation(line: 216, column: 35, scope: !21763)
!21768 = !DILocation(line: 216, column: 39, scope: !21763)
!21769 = !DILocation(line: 216, column: 18, scope: !21763)
!21770 = !DILocation(line: 216, column: 16, scope: !21763)
!21771 = !DILocation(line: 217, column: 9, scope: !21763)
!21772 = !DILocalVariable(name: "target", scope: !21773, file: !1394, line: 222, type: !7)
!21773 = distinct !DILexicalBlock(scope: !21764, file: !1394, line: 221, column: 7)
!21774 = !DILocation(line: 222, column: 13, scope: !21773)
!21775 = !DILocation(line: 222, column: 22, scope: !21773)
!21776 = !DILocation(line: 223, column: 43, scope: !21773)
!21777 = !DILocation(line: 223, column: 47, scope: !21773)
!21778 = !DILocation(line: 223, column: 18, scope: !21773)
!21779 = !DILocation(line: 223, column: 16, scope: !21773)
!21780 = !DILocation(line: 224, column: 9, scope: !21773)
!21781 = !DILocation(line: 259, column: 17, scope: !21782)
!21782 = distinct !DILexicalBlock(scope: !21764, file: !1394, line: 257, column: 7)
!21783 = !DILocation(line: 259, column: 9, scope: !21782)
!21784 = !DILocation(line: 328, column: 29, scope: !21785)
!21785 = distinct !DILexicalBlock(scope: !21782, file: !1394, line: 260, column: 11)
!21786 = !DILocation(line: 328, column: 33, scope: !21785)
!21787 = !DILocation(line: 328, column: 22, scope: !21785)
!21788 = !DILocation(line: 328, column: 20, scope: !21785)
!21789 = !DILocation(line: 329, column: 13, scope: !21785)
!21790 = !DILocalVariable(name: "x", scope: !21791, file: !1394, line: 423, type: !7)
!21791 = distinct !DILexicalBlock(scope: !21785, file: !1394, line: 422, column: 13)
!21792 = !DILocation(line: 423, column: 19, scope: !21791)
!21793 = !DILocation(line: 423, column: 23, scope: !21791)
!21794 = !DILocation(line: 424, column: 31, scope: !21791)
!21795 = !DILocation(line: 424, column: 35, scope: !21791)
!21796 = !DILocation(line: 424, column: 43, scope: !21791)
!21797 = !DILocation(line: 424, column: 24, scope: !21791)
!21798 = !DILocation(line: 424, column: 22, scope: !21791)
!21799 = !DILocation(line: 426, column: 13, scope: !21785)
!21800 = !DILocalVariable(name: "p", scope: !21801, file: !1394, line: 431, type: !53)
!21801 = distinct !DILexicalBlock(scope: !21785, file: !1394, line: 430, column: 13)
!21802 = !DILocation(line: 431, column: 21, scope: !21801)
!21803 = !DILocation(line: 431, column: 25, scope: !21801)
!21804 = !DILocation(line: 432, column: 31, scope: !21801)
!21805 = !DILocation(line: 432, column: 35, scope: !21801)
!21806 = !DILocation(line: 432, column: 43, scope: !21801)
!21807 = !DILocation(line: 432, column: 24, scope: !21801)
!21808 = !DILocation(line: 432, column: 22, scope: !21801)
!21809 = !DILocation(line: 434, column: 13, scope: !21785)
!21810 = !DILocation(line: 439, column: 9, scope: !21782)
!21811 = !DILocation(line: 442, column: 3, scope: !21748)
!21812 = !DILocation(line: 443, column: 10, scope: !21748)
!21813 = !DILocation(line: 443, column: 3, scope: !21748)
!21814 = distinct !DISubprogram(name: "rpl_fcntl_DUPFD", scope: !1394, file: !1394, line: 447, type: !507, scopeLine: 448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1395, retainedNodes: !209)
!21815 = !DILocalVariable(name: "fd", arg: 1, scope: !21814, file: !1394, line: 447, type: !7)
!21816 = !DILocation(line: 447, column: 22, scope: !21814)
!21817 = !DILocalVariable(name: "target", arg: 2, scope: !21814, file: !1394, line: 447, type: !7)
!21818 = !DILocation(line: 447, column: 30, scope: !21814)
!21819 = !DILocalVariable(name: "result", scope: !21814, file: !1394, line: 449, type: !7)
!21820 = !DILocation(line: 449, column: 7, scope: !21814)
!21821 = !DILocation(line: 482, column: 19, scope: !21814)
!21822 = !DILocation(line: 482, column: 32, scope: !21814)
!21823 = !DILocation(line: 482, column: 12, scope: !21814)
!21824 = !DILocation(line: 482, column: 10, scope: !21814)
!21825 = !DILocation(line: 484, column: 10, scope: !21814)
!21826 = !DILocation(line: 484, column: 3, scope: !21814)
!21827 = !DILocalVariable(name: "fd", arg: 1, scope: !1393, file: !1394, line: 488, type: !7)
!21828 = !DILocation(line: 488, column: 30, scope: !1393)
!21829 = !DILocalVariable(name: "target", arg: 2, scope: !1393, file: !1394, line: 488, type: !7)
!21830 = !DILocation(line: 488, column: 38, scope: !1393)
!21831 = !DILocalVariable(name: "result", scope: !1393, file: !1394, line: 490, type: !7)
!21832 = !DILocation(line: 490, column: 7, scope: !1393)
!21833 = !DILocation(line: 508, column: 12, scope: !21834)
!21834 = distinct !DILexicalBlock(scope: !1393, file: !1394, line: 508, column: 7)
!21835 = !DILocation(line: 508, column: 9, scope: !21834)
!21836 = !DILocation(line: 508, column: 7, scope: !1393)
!21837 = !DILocation(line: 510, column: 23, scope: !21838)
!21838 = distinct !DILexicalBlock(scope: !21834, file: !1394, line: 509, column: 5)
!21839 = !DILocation(line: 510, column: 44, scope: !21838)
!21840 = !DILocation(line: 510, column: 16, scope: !21838)
!21841 = !DILocation(line: 510, column: 14, scope: !21838)
!21842 = !DILocation(line: 511, column: 16, scope: !21843)
!21843 = distinct !DILexicalBlock(scope: !21838, file: !1394, line: 511, column: 11)
!21844 = !DILocation(line: 511, column: 13, scope: !21843)
!21845 = !DILocation(line: 511, column: 23, scope: !21843)
!21846 = !DILocation(line: 511, column: 26, scope: !21843)
!21847 = !DILocation(line: 511, column: 32, scope: !21843)
!21848 = !DILocation(line: 511, column: 11, scope: !21838)
!21849 = !DILocation(line: 513, column: 30, scope: !21850)
!21850 = distinct !DILexicalBlock(scope: !21843, file: !1394, line: 512, column: 9)
!21851 = !DILocation(line: 518, column: 9, scope: !21850)
!21852 = !DILocation(line: 521, column: 37, scope: !21853)
!21853 = distinct !DILexicalBlock(scope: !21843, file: !1394, line: 520, column: 9)
!21854 = !DILocation(line: 521, column: 41, scope: !21853)
!21855 = !DILocation(line: 521, column: 20, scope: !21853)
!21856 = !DILocation(line: 521, column: 18, scope: !21853)
!21857 = !DILocation(line: 522, column: 15, scope: !21858)
!21858 = distinct !DILexicalBlock(scope: !21853, file: !1394, line: 522, column: 15)
!21859 = !DILocation(line: 522, column: 22, scope: !21858)
!21860 = !DILocation(line: 522, column: 15, scope: !21853)
!21861 = !DILocation(line: 523, column: 32, scope: !21858)
!21862 = !DILocation(line: 523, column: 13, scope: !21858)
!21863 = !DILocation(line: 525, column: 5, scope: !21838)
!21864 = !DILocation(line: 528, column: 31, scope: !21834)
!21865 = !DILocation(line: 528, column: 35, scope: !21834)
!21866 = !DILocation(line: 528, column: 14, scope: !21834)
!21867 = !DILocation(line: 528, column: 12, scope: !21834)
!21868 = !DILocation(line: 529, column: 12, scope: !21869)
!21869 = distinct !DILexicalBlock(scope: !1393, file: !1394, line: 529, column: 7)
!21870 = !DILocation(line: 529, column: 9, scope: !21869)
!21871 = !DILocation(line: 529, column: 19, scope: !21869)
!21872 = !DILocation(line: 529, column: 22, scope: !21869)
!21873 = !DILocation(line: 529, column: 41, scope: !21869)
!21874 = !DILocation(line: 529, column: 7, scope: !1393)
!21875 = !DILocalVariable(name: "flags", scope: !21876, file: !1394, line: 531, type: !7)
!21876 = distinct !DILexicalBlock(scope: !21869, file: !1394, line: 530, column: 5)
!21877 = !DILocation(line: 531, column: 11, scope: !21876)
!21878 = !DILocation(line: 531, column: 26, scope: !21876)
!21879 = !DILocation(line: 531, column: 19, scope: !21876)
!21880 = !DILocation(line: 532, column: 11, scope: !21881)
!21881 = distinct !DILexicalBlock(scope: !21876, file: !1394, line: 532, column: 11)
!21882 = !DILocation(line: 532, column: 17, scope: !21881)
!21883 = !DILocation(line: 532, column: 21, scope: !21881)
!21884 = !DILocation(line: 532, column: 31, scope: !21881)
!21885 = !DILocation(line: 532, column: 48, scope: !21881)
!21886 = !DILocation(line: 532, column: 54, scope: !21881)
!21887 = !DILocation(line: 532, column: 24, scope: !21881)
!21888 = !DILocation(line: 532, column: 68, scope: !21881)
!21889 = !DILocation(line: 532, column: 11, scope: !21876)
!21890 = !DILocalVariable(name: "saved_errno", scope: !21891, file: !1394, line: 534, type: !7)
!21891 = distinct !DILexicalBlock(scope: !21881, file: !1394, line: 533, column: 9)
!21892 = !DILocation(line: 534, column: 15, scope: !21891)
!21893 = !DILocation(line: 534, column: 29, scope: !21891)
!21894 = !DILocation(line: 535, column: 18, scope: !21891)
!21895 = !DILocation(line: 535, column: 11, scope: !21891)
!21896 = !DILocation(line: 536, column: 19, scope: !21891)
!21897 = !DILocation(line: 536, column: 11, scope: !21891)
!21898 = !DILocation(line: 536, column: 17, scope: !21891)
!21899 = !DILocation(line: 537, column: 18, scope: !21891)
!21900 = !DILocation(line: 538, column: 9, scope: !21891)
!21901 = !DILocation(line: 539, column: 5, scope: !21876)
!21902 = !DILocation(line: 541, column: 10, scope: !1393)
!21903 = !DILocation(line: 541, column: 3, scope: !1393)
!21904 = distinct !DISubprogram(name: "acl_errno_valid", scope: !21905, file: !21905, line: 30, type: !256, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2584, retainedNodes: !209)
!21905 = !DIFile(filename: "lib/acl-errno-valid.c", directory: "/home/mbarbar/clone/coreutils")
!21906 = !DILocalVariable(name: "errnum", arg: 1, scope: !21904, file: !21905, line: 30, type: !7)
!21907 = !DILocation(line: 30, column: 22, scope: !21904)
!21908 = !DILocation(line: 34, column: 11, scope: !21904)
!21909 = !DILocation(line: 34, column: 3, scope: !21904)
!21910 = !DILocation(line: 36, column: 17, scope: !21911)
!21911 = distinct !DILexicalBlock(scope: !21904, file: !21905, line: 35, column: 5)
!21912 = !DILocation(line: 37, column: 18, scope: !21911)
!21913 = !DILocation(line: 41, column: 18, scope: !21911)
!21914 = !DILocation(line: 49, column: 22, scope: !21911)
!21915 = !DILocation(line: 50, column: 14, scope: !21911)
!21916 = !DILocation(line: 52, column: 1, scope: !21904)
!21917 = distinct !DISubprogram(name: "c_isalnum", scope: !21918, file: !21918, line: 169, type: !256, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2587, retainedNodes: !209)
!21918 = !DIFile(filename: "./lib/c-ctype.h", directory: "/home/mbarbar/clone/coreutils")
!21919 = !DILocalVariable(name: "c", arg: 1, scope: !21917, file: !21918, line: 169, type: !7)
!21920 = !DILocation(line: 169, column: 16, scope: !21917)
!21921 = !DILocation(line: 171, column: 11, scope: !21917)
!21922 = !DILocation(line: 171, column: 3, scope: !21917)
!21923 = !DILocation(line: 176, column: 7, scope: !21924)
!21924 = distinct !DILexicalBlock(scope: !21917, file: !21918, line: 172, column: 5)
!21925 = !DILocation(line: 178, column: 7, scope: !21924)
!21926 = !DILocation(line: 180, column: 1, scope: !21917)
!21927 = distinct !DISubprogram(name: "c_isalpha", scope: !21918, file: !21918, line: 183, type: !256, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2587, retainedNodes: !209)
!21928 = !DILocalVariable(name: "c", arg: 1, scope: !21927, file: !21918, line: 183, type: !7)
!21929 = !DILocation(line: 183, column: 16, scope: !21927)
!21930 = !DILocation(line: 185, column: 11, scope: !21927)
!21931 = !DILocation(line: 185, column: 3, scope: !21927)
!21932 = !DILocation(line: 189, column: 7, scope: !21933)
!21933 = distinct !DILexicalBlock(scope: !21927, file: !21918, line: 186, column: 5)
!21934 = !DILocation(line: 191, column: 7, scope: !21933)
!21935 = !DILocation(line: 193, column: 1, scope: !21927)
!21936 = distinct !DISubprogram(name: "c_isascii", scope: !21918, file: !21918, line: 198, type: !256, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2587, retainedNodes: !209)
!21937 = !DILocalVariable(name: "c", arg: 1, scope: !21936, file: !21918, line: 198, type: !7)
!21938 = !DILocation(line: 198, column: 16, scope: !21936)
!21939 = !DILocation(line: 200, column: 11, scope: !21936)
!21940 = !DILocation(line: 200, column: 3, scope: !21936)
!21941 = !DILocation(line: 208, column: 7, scope: !21942)
!21942 = distinct !DILexicalBlock(scope: !21936, file: !21918, line: 201, column: 5)
!21943 = !DILocation(line: 210, column: 7, scope: !21942)
!21944 = !DILocation(line: 212, column: 1, scope: !21936)
!21945 = distinct !DISubprogram(name: "c_isblank", scope: !21918, file: !21918, line: 215, type: !256, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2587, retainedNodes: !209)
!21946 = !DILocalVariable(name: "c", arg: 1, scope: !21945, file: !21918, line: 215, type: !7)
!21947 = !DILocation(line: 215, column: 16, scope: !21945)
!21948 = !DILocation(line: 217, column: 10, scope: !21945)
!21949 = !DILocation(line: 217, column: 12, scope: !21945)
!21950 = !DILocation(line: 217, column: 19, scope: !21945)
!21951 = !DILocation(line: 217, column: 22, scope: !21945)
!21952 = !DILocation(line: 217, column: 24, scope: !21945)
!21953 = !DILocation(line: 217, column: 3, scope: !21945)
!21954 = distinct !DISubprogram(name: "c_iscntrl", scope: !21918, file: !21918, line: 221, type: !256, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2587, retainedNodes: !209)
!21955 = !DILocalVariable(name: "c", arg: 1, scope: !21954, file: !21918, line: 221, type: !7)
!21956 = !DILocation(line: 221, column: 16, scope: !21954)
!21957 = !DILocation(line: 223, column: 11, scope: !21954)
!21958 = !DILocation(line: 223, column: 3, scope: !21954)
!21959 = !DILocation(line: 226, column: 7, scope: !21960)
!21960 = distinct !DILexicalBlock(scope: !21954, file: !21918, line: 224, column: 5)
!21961 = !DILocation(line: 228, column: 7, scope: !21960)
!21962 = !DILocation(line: 230, column: 1, scope: !21954)
!21963 = distinct !DISubprogram(name: "c_isdigit", scope: !21918, file: !21918, line: 233, type: !256, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2587, retainedNodes: !209)
!21964 = !DILocalVariable(name: "c", arg: 1, scope: !21963, file: !21918, line: 233, type: !7)
!21965 = !DILocation(line: 233, column: 16, scope: !21963)
!21966 = !DILocation(line: 235, column: 11, scope: !21963)
!21967 = !DILocation(line: 235, column: 3, scope: !21963)
!21968 = !DILocation(line: 238, column: 7, scope: !21969)
!21969 = distinct !DILexicalBlock(scope: !21963, file: !21918, line: 236, column: 5)
!21970 = !DILocation(line: 240, column: 7, scope: !21969)
!21971 = !DILocation(line: 242, column: 1, scope: !21963)
!21972 = distinct !DISubprogram(name: "c_isgraph", scope: !21918, file: !21918, line: 245, type: !256, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2587, retainedNodes: !209)
!21973 = !DILocalVariable(name: "c", arg: 1, scope: !21972, file: !21918, line: 245, type: !7)
!21974 = !DILocation(line: 245, column: 16, scope: !21972)
!21975 = !DILocation(line: 247, column: 11, scope: !21972)
!21976 = !DILocation(line: 247, column: 3, scope: !21972)
!21977 = !DILocation(line: 253, column: 7, scope: !21978)
!21978 = distinct !DILexicalBlock(scope: !21972, file: !21918, line: 248, column: 5)
!21979 = !DILocation(line: 255, column: 7, scope: !21978)
!21980 = !DILocation(line: 257, column: 1, scope: !21972)
!21981 = distinct !DISubprogram(name: "c_islower", scope: !21918, file: !21918, line: 260, type: !256, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2587, retainedNodes: !209)
!21982 = !DILocalVariable(name: "c", arg: 1, scope: !21981, file: !21918, line: 260, type: !7)
!21983 = !DILocation(line: 260, column: 16, scope: !21981)
!21984 = !DILocation(line: 262, column: 11, scope: !21981)
!21985 = !DILocation(line: 262, column: 3, scope: !21981)
!21986 = !DILocation(line: 265, column: 7, scope: !21987)
!21987 = distinct !DILexicalBlock(scope: !21981, file: !21918, line: 263, column: 5)
!21988 = !DILocation(line: 267, column: 7, scope: !21987)
!21989 = !DILocation(line: 269, column: 1, scope: !21981)
!21990 = distinct !DISubprogram(name: "c_isprint", scope: !21918, file: !21918, line: 272, type: !256, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2587, retainedNodes: !209)
!21991 = !DILocalVariable(name: "c", arg: 1, scope: !21990, file: !21918, line: 272, type: !7)
!21992 = !DILocation(line: 272, column: 16, scope: !21990)
!21993 = !DILocation(line: 274, column: 11, scope: !21990)
!21994 = !DILocation(line: 274, column: 3, scope: !21990)
!21995 = !DILocation(line: 281, column: 7, scope: !21996)
!21996 = distinct !DILexicalBlock(scope: !21990, file: !21918, line: 275, column: 5)
!21997 = !DILocation(line: 283, column: 7, scope: !21996)
!21998 = !DILocation(line: 285, column: 1, scope: !21990)
!21999 = distinct !DISubprogram(name: "c_ispunct", scope: !21918, file: !21918, line: 288, type: !256, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2587, retainedNodes: !209)
!22000 = !DILocalVariable(name: "c", arg: 1, scope: !21999, file: !21918, line: 288, type: !7)
!22001 = !DILocation(line: 288, column: 16, scope: !21999)
!22002 = !DILocation(line: 290, column: 11, scope: !21999)
!22003 = !DILocation(line: 290, column: 3, scope: !21999)
!22004 = !DILocation(line: 293, column: 7, scope: !22005)
!22005 = distinct !DILexicalBlock(scope: !21999, file: !21918, line: 291, column: 5)
!22006 = !DILocation(line: 295, column: 7, scope: !22005)
!22007 = !DILocation(line: 297, column: 1, scope: !21999)
!22008 = distinct !DISubprogram(name: "c_isspace", scope: !21918, file: !21918, line: 300, type: !256, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2587, retainedNodes: !209)
!22009 = !DILocalVariable(name: "c", arg: 1, scope: !22008, file: !21918, line: 300, type: !7)
!22010 = !DILocation(line: 300, column: 16, scope: !22008)
!22011 = !DILocation(line: 302, column: 11, scope: !22008)
!22012 = !DILocation(line: 302, column: 3, scope: !22008)
!22013 = !DILocation(line: 305, column: 7, scope: !22014)
!22014 = distinct !DILexicalBlock(scope: !22008, file: !21918, line: 303, column: 5)
!22015 = !DILocation(line: 307, column: 7, scope: !22014)
!22016 = !DILocation(line: 309, column: 1, scope: !22008)
!22017 = distinct !DISubprogram(name: "c_isupper", scope: !21918, file: !21918, line: 312, type: !256, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2587, retainedNodes: !209)
!22018 = !DILocalVariable(name: "c", arg: 1, scope: !22017, file: !21918, line: 312, type: !7)
!22019 = !DILocation(line: 312, column: 16, scope: !22017)
!22020 = !DILocation(line: 314, column: 11, scope: !22017)
!22021 = !DILocation(line: 314, column: 3, scope: !22017)
!22022 = !DILocation(line: 317, column: 7, scope: !22023)
!22023 = distinct !DILexicalBlock(scope: !22017, file: !21918, line: 315, column: 5)
!22024 = !DILocation(line: 319, column: 7, scope: !22023)
!22025 = !DILocation(line: 321, column: 1, scope: !22017)
!22026 = distinct !DISubprogram(name: "c_isxdigit", scope: !21918, file: !21918, line: 324, type: !256, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2587, retainedNodes: !209)
!22027 = !DILocalVariable(name: "c", arg: 1, scope: !22026, file: !21918, line: 324, type: !7)
!22028 = !DILocation(line: 324, column: 17, scope: !22026)
!22029 = !DILocation(line: 326, column: 11, scope: !22026)
!22030 = !DILocation(line: 326, column: 3, scope: !22026)
!22031 = !DILocation(line: 330, column: 7, scope: !22032)
!22032 = distinct !DILexicalBlock(scope: !22026, file: !21918, line: 327, column: 5)
!22033 = !DILocation(line: 332, column: 7, scope: !22032)
!22034 = !DILocation(line: 334, column: 1, scope: !22026)
!22035 = distinct !DISubprogram(name: "c_tolower", scope: !21918, file: !21918, line: 337, type: !1789, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2587, retainedNodes: !209)
!22036 = !DILocalVariable(name: "c", arg: 1, scope: !22035, file: !21918, line: 337, type: !7)
!22037 = !DILocation(line: 337, column: 16, scope: !22035)
!22038 = !DILocation(line: 339, column: 11, scope: !22035)
!22039 = !DILocation(line: 339, column: 3, scope: !22035)
!22040 = !DILocation(line: 342, column: 14, scope: !22041)
!22041 = distinct !DILexicalBlock(scope: !22035, file: !21918, line: 340, column: 5)
!22042 = !DILocation(line: 342, column: 16, scope: !22041)
!22043 = !DILocation(line: 342, column: 22, scope: !22041)
!22044 = !DILocation(line: 342, column: 7, scope: !22041)
!22045 = !DILocation(line: 344, column: 14, scope: !22041)
!22046 = !DILocation(line: 344, column: 7, scope: !22041)
!22047 = !DILocation(line: 346, column: 1, scope: !22035)
!22048 = distinct !DISubprogram(name: "c_toupper", scope: !21918, file: !21918, line: 349, type: !1789, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2587, retainedNodes: !209)
!22049 = !DILocalVariable(name: "c", arg: 1, scope: !22048, file: !21918, line: 349, type: !7)
!22050 = !DILocation(line: 349, column: 16, scope: !22048)
!22051 = !DILocation(line: 351, column: 11, scope: !22048)
!22052 = !DILocation(line: 351, column: 3, scope: !22048)
!22053 = !DILocation(line: 354, column: 14, scope: !22054)
!22054 = distinct !DILexicalBlock(scope: !22048, file: !21918, line: 352, column: 5)
!22055 = !DILocation(line: 354, column: 16, scope: !22054)
!22056 = !DILocation(line: 354, column: 22, scope: !22054)
!22057 = !DILocation(line: 354, column: 7, scope: !22054)
!22058 = !DILocation(line: 356, column: 14, scope: !22054)
!22059 = !DILocation(line: 356, column: 7, scope: !22054)
!22060 = !DILocation(line: 358, column: 1, scope: !22048)
!22061 = distinct !DISubprogram(name: "fopen_safer", scope: !22062, file: !22062, line: 31, type: !2593, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2590, retainedNodes: !209)
!22062 = !DIFile(filename: "lib/fopen-safer.c", directory: "/home/mbarbar/clone/coreutils")
!22063 = !DILocalVariable(name: "file", arg: 1, scope: !22061, file: !22062, line: 31, type: !180)
!22064 = !DILocation(line: 31, column: 26, scope: !22061)
!22065 = !DILocalVariable(name: "mode", arg: 2, scope: !22061, file: !22062, line: 31, type: !180)
!22066 = !DILocation(line: 31, column: 44, scope: !22061)
!22067 = !DILocalVariable(name: "fp", scope: !22061, file: !22062, line: 33, type: !2595)
!22068 = !DILocation(line: 33, column: 9, scope: !22061)
!22069 = !DILocation(line: 33, column: 21, scope: !22061)
!22070 = !DILocation(line: 33, column: 27, scope: !22061)
!22071 = !DILocation(line: 33, column: 14, scope: !22061)
!22072 = !DILocation(line: 35, column: 7, scope: !22073)
!22073 = distinct !DILexicalBlock(scope: !22061, file: !22062, line: 35, column: 7)
!22074 = !DILocation(line: 35, column: 7, scope: !22061)
!22075 = !DILocalVariable(name: "fd", scope: !22076, file: !22062, line: 37, type: !7)
!22076 = distinct !DILexicalBlock(scope: !22073, file: !22062, line: 36, column: 5)
!22077 = !DILocation(line: 37, column: 11, scope: !22076)
!22078 = !DILocation(line: 37, column: 24, scope: !22076)
!22079 = !DILocation(line: 37, column: 16, scope: !22076)
!22080 = !DILocation(line: 39, column: 16, scope: !22081)
!22081 = distinct !DILexicalBlock(scope: !22076, file: !22062, line: 39, column: 11)
!22082 = !DILocation(line: 39, column: 13, scope: !22081)
!22083 = !DILocation(line: 39, column: 19, scope: !22081)
!22084 = !DILocation(line: 39, column: 22, scope: !22081)
!22085 = !DILocation(line: 39, column: 25, scope: !22081)
!22086 = !DILocation(line: 39, column: 11, scope: !22076)
!22087 = !DILocalVariable(name: "f", scope: !22088, file: !22062, line: 41, type: !7)
!22088 = distinct !DILexicalBlock(scope: !22081, file: !22062, line: 40, column: 9)
!22089 = !DILocation(line: 41, column: 15, scope: !22088)
!22090 = !DILocation(line: 41, column: 30, scope: !22088)
!22091 = !DILocation(line: 41, column: 19, scope: !22088)
!22092 = !DILocation(line: 43, column: 15, scope: !22093)
!22093 = distinct !DILexicalBlock(scope: !22088, file: !22062, line: 43, column: 15)
!22094 = !DILocation(line: 43, column: 17, scope: !22093)
!22095 = !DILocation(line: 43, column: 15, scope: !22088)
!22096 = !DILocalVariable(name: "e", scope: !22097, file: !22062, line: 45, type: !7)
!22097 = distinct !DILexicalBlock(scope: !22093, file: !22062, line: 44, column: 13)
!22098 = !DILocation(line: 45, column: 19, scope: !22097)
!22099 = !DILocation(line: 45, column: 23, scope: !22097)
!22100 = !DILocation(line: 46, column: 23, scope: !22097)
!22101 = !DILocation(line: 46, column: 15, scope: !22097)
!22102 = !DILocation(line: 47, column: 23, scope: !22097)
!22103 = !DILocation(line: 47, column: 15, scope: !22097)
!22104 = !DILocation(line: 47, column: 21, scope: !22097)
!22105 = !DILocation(line: 48, column: 15, scope: !22097)
!22106 = !DILocation(line: 51, column: 23, scope: !22107)
!22107 = distinct !DILexicalBlock(scope: !22088, file: !22062, line: 51, column: 15)
!22108 = !DILocation(line: 51, column: 15, scope: !22107)
!22109 = !DILocation(line: 51, column: 27, scope: !22107)
!22110 = !DILocation(line: 52, column: 15, scope: !22107)
!22111 = !DILocation(line: 52, column: 34, scope: !22107)
!22112 = !DILocation(line: 52, column: 37, scope: !22107)
!22113 = !DILocation(line: 52, column: 26, scope: !22107)
!22114 = !DILocation(line: 52, column: 24, scope: !22107)
!22115 = !DILocation(line: 51, column: 15, scope: !22088)
!22116 = !DILocalVariable(name: "e", scope: !22117, file: !22062, line: 54, type: !7)
!22117 = distinct !DILexicalBlock(scope: !22107, file: !22062, line: 53, column: 13)
!22118 = !DILocation(line: 54, column: 19, scope: !22117)
!22119 = !DILocation(line: 54, column: 23, scope: !22117)
!22120 = !DILocation(line: 55, column: 22, scope: !22117)
!22121 = !DILocation(line: 55, column: 15, scope: !22117)
!22122 = !DILocation(line: 56, column: 23, scope: !22117)
!22123 = !DILocation(line: 56, column: 15, scope: !22117)
!22124 = !DILocation(line: 56, column: 21, scope: !22117)
!22125 = !DILocation(line: 57, column: 15, scope: !22117)
!22126 = !DILocation(line: 59, column: 9, scope: !22088)
!22127 = !DILocation(line: 60, column: 5, scope: !22076)
!22128 = !DILocation(line: 62, column: 10, scope: !22061)
!22129 = !DILocation(line: 62, column: 3, scope: !22061)
!22130 = !DILocation(line: 63, column: 1, scope: !22061)
