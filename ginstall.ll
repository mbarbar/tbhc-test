; ModuleID = 'ginstall.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.infomap = type { i8*, i8* }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.hash_table = type { %struct.hash_entry*, %struct.hash_entry*, i64, i64, i64, %struct.hash_tuning*, i64 (i8*, i64)*, i1 (i8*, i8*)*, void (i8*)*, %struct.hash_entry* }
%struct.hash_tuning = type { float, float, float, float, i8 }
%struct.hash_entry = type { i8*, %struct.hash_entry* }
%struct.quoting_options = type { i32, i32, [8 x i32], i8*, i8* }
%struct.slotvec = type { i64, i8* }
%struct.fs_res = type { i64, i32, i8 }
%struct.cp_options = type { i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, %struct.hash_table*, %struct.hash_table* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.mode_change = type { i8, i8, i32, i32, i32 }
%struct.passwd = type { i8*, i8*, i32, i32, i8*, i8*, i8* }
%struct.group = type { i8*, i8*, i32, i8** }
%struct.savewd = type { i32, %union.anon }
%union.anon = type { i32 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.dir_list = type { %struct.dir_list*, i64, i64 }
%struct.error_context = type { void (%struct.error_context*, i8*, ...)*, i8* (%struct.error_context*, i8*)*, void (%struct.error_context*, i8*)* }
%struct.extent_scan = type { i32, i64, i32, i64, i8, i8, %struct.extent_info* }
%struct.extent_info = type { i64, i64, i32 }
%struct.Src_to_dest = type { i64, i64, i8* }
%union.anon.17 = type { %struct.fiemap, [4064 x i8] }
%struct.fiemap = type { i64, i64, i32, i32, i32, i32, [0 x %struct.fiemap_extent] }
%struct.fiemap_extent = type { i64, i64, i64, [2 x i64], i32, [3 x i32] }
%struct.link_arg = type { i32, i8*, i32, i32 }
%struct.symlink_arg = type { i8*, i32 }
%struct.__dirstream = type opaque
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.F_triple = type { i8*, i64, i64 }
%struct.permission_context = type { i32, %struct.__acl_ext*, %struct.__acl_ext*, i8 }
%struct.__acl_ext = type opaque
%struct.direntry_t = type { i8*, i64 }
%struct.randint_source = type { %struct.randread_source*, i64, i64 }
%struct.randread_source = type { %struct._IO_FILE*, void (i8*)*, i8*, %union.anon.128 }
%union.anon.128 = type { %struct.isaac }
%struct.isaac = type { i64, %struct.isaac_state, %union.anon.0 }
%struct.isaac_state = type { [256 x i64], i64, i64, i64 }
%union.anon.0 = type { [256 x i64] }
%struct.__acl_entry_ext = type opaque
%struct.timezone = type { i32, i32 }

@stderr = external dso_local global %struct._IO_FILE*, align 8, !ctir !0
@.str = private unnamed_addr constant [39 x i8] c"Try '%s --help' for more information.\0A\00", align 1
@.str.1 = private unnamed_addr constant [165 x i8] c"Usage: %s [OPTION]... [-T] SOURCE DEST\0A  or:  %s [OPTION]... SOURCE... DIRECTORY\0A  or:  %s [OPTION]... -t DIRECTORY SOURCE...\0A  or:  %s [OPTION]... -d DIRECTORY...\0A\00", align 1
@.str.2 = private unnamed_addr constant [465 x i8] c"\0AThis install program copies files (often just compiled) into destination\0Alocations you choose.  If you want to download and install a ready-to-use\0Apackage on a GNU/Linux system, you should instead be using a package manager\0Alike yum(1) or apt-get(1).\0A\0AIn the first three forms, copy SOURCE to DEST or multiple SOURCE(s) to\0Athe existing DIRECTORY, while setting permission modes and owner/group.\0AIn the 4th form, create all components of the given DIRECTORY(ies).\0A\00", align 1
@stdout = external dso_local global %struct._IO_FILE*, align 8, !ctir !0
@.str.3 = private unnamed_addr constant [465 x i8] c"      --backup[=CONTROL]  make a backup of each existing destination file\0A  -b                  like --backup but does not accept an argument\0A  -c                  (ignored)\0A  -C, --compare       compare each pair of source and destination files, and\0A                        in some cases, do not modify the destination at all\0A  -d, --directory     treat all arguments as directory names; create all\0A                        components of the specified directories\0A\00", align 1
@.str.4 = private unnamed_addr constant [401 x i8] c"  -D                  create all leading components of DEST except the last,\0A                        or all components of --target-directory,\0A                        then copy SOURCE to DEST\0A  -g, --group=GROUP   set group ownership, instead of process' current group\0A  -m, --mode=MODE     set permission mode (as in chmod), instead of rwxr-xr-x\0A  -o, --owner=OWNER   set ownership (super-user only)\0A\00", align 1
@.str.5 = private unnamed_addr constant [504 x i8] c"  -p, --preserve-timestamps   apply access/modification times of SOURCE files\0A                        to corresponding destination files\0A  -s, --strip         strip symbol tables\0A      --strip-program=PROGRAM  program used to strip binaries\0A  -S, --suffix=SUFFIX  override the usual backup suffix\0A  -t, --target-directory=DIRECTORY  copy all SOURCE arguments into DIRECTORY\0A  -T, --no-target-directory  treat DEST as a normal file\0A  -v, --verbose       print the name of each directory as it is created\0A\00", align 1
@.str.6 = private unnamed_addr constant [347 x i8] c"      --preserve-context  preserve SELinux security context\0A  -Z                      set SELinux security context of destination\0A                            file and each created directory to default type\0A      --context[=CTX]     like -Z, or if CTX is specified then set the\0A                            SELinux or SMACK security context to CTX\0A\00", align 1
@.str.7 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 1
@.str.8 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"install\00", align 1
@__const.emit_ancillary_info.infomap = private unnamed_addr constant [7 x %struct.infomap] [%struct.infomap { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.39, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.40, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i32 0, i32 0) }, %struct.infomap { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i32 0, i32 0) }, %struct.infomap zeroinitializer], align 16
@.str.46 = private unnamed_addr constant [23 x i8] c"\0A%s online help: <%s>\0A\00", align 1
@.str.17 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.47 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.48 = private unnamed_addr constant [4 x i8] c"en_\00", align 1
@.str.49 = private unnamed_addr constant [71 x i8] c"Report any translation bugs to <https://translationproject.org/team/>\0A\00", align 1
@.str.50 = private unnamed_addr constant [27 x i8] c"Full documentation <%s%s>\0A\00", align 1
@.str.51 = private unnamed_addr constant [51 x i8] c"or available locally via: info '(coreutils) %s%s'\0A\00", align 1
@.str.52 = private unnamed_addr constant [12 x i8] c" invocation\00", align 1
@.str.10 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.38 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.39 = private unnamed_addr constant [16 x i8] c"test invocation\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"coreutils\00", align 1
@.str.40 = private unnamed_addr constant [22 x i8] c"Multi-call invocation\00", align 1
@.str.41 = private unnamed_addr constant [10 x i8] c"sha224sum\00", align 1
@.str.42 = private unnamed_addr constant [15 x i8] c"sha2 utilities\00", align 1
@.str.43 = private unnamed_addr constant [10 x i8] c"sha256sum\00", align 1
@.str.44 = private unnamed_addr constant [10 x i8] c"sha384sum\00", align 1
@.str.45 = private unnamed_addr constant [10 x i8] c"sha512sum\00", align 1
@.str.36 = private unnamed_addr constant [221 x i8] c"\0AThe backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.\0AThe version control method may be selected via the --backup option or through\0Athe VERSION_CONTROL environment variable.  Here are the values:\0A\0A\00", align 1
@.str.37 = private unnamed_addr constant [222 x i8] c"  none, off       never make backups (even if --backup is given)\0A  numbered, t     make numbered backups\0A  existing, nil   numbered if numbered backups exist, simple otherwise\0A  simple, never   always make simple backups\0A\00", align 1
@.str.35 = private unnamed_addr constant [75 x i8] c"\0AMandatory arguments to long options are mandatory for short options too.\0A\00", align 1
@selinux_enabled = internal global i32 0, align 4, !dbg !63, !ctir !7
@.str.12 = private unnamed_addr constant [24 x i8] c"/usr/local/share/locale\00", align 1
@owner_name = internal global i8* null, align 8, !dbg !309, !ctir !9
@group_name = internal global i8* null, align 8, !dbg !311, !ctir !9
@strip_files = internal global i8 0, align 1, !dbg !315, !ctir !142
@dir_arg = internal global i8 0, align 1, !dbg !317, !ctir !142
@.str.13 = private unnamed_addr constant [21 x i8] c"bcCsDdg:m:o:pt:TvS:Z\00", align 1
@long_options = internal constant [18 x %struct.option] [%struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.53, i32 0, i32 0), i32 2, i32* null, i32 98 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.54, i32 0, i32 0), i32 0, i32* null, i32 67 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.55, i32 0, i32 0), i32 2, i32* null, i32 90 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.56, i32 0, i32 0), i32 0, i32* null, i32 100 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i32 0, i32 0), i32 1, i32* null, i32 103 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58, i32 0, i32 0), i32 1, i32* null, i32 109 }, %struct.option { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.59, i32 0, i32 0), i32 0, i32* null, i32 84 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i32 0, i32 0), i32 1, i32* null, i32 111 }, %struct.option { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.61, i32 0, i32 0), i32 0, i32* null, i32 112 }, %struct.option { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.62, i32 0, i32 0), i32 0, i32* null, i32 128 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i32 0, i32 0), i32 0, i32* null, i32 115 }, %struct.option { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.64, i32 0, i32 0), i32 1, i32* null, i32 129 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.65, i32 0, i32 0), i32 1, i32* null, i32 83 }, %struct.option { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.66, i32 0, i32 0), i32 1, i32* null, i32 116 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.67, i32 0, i32 0), i32 0, i32* null, i32 118 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.68, i32 0, i32 0), i32 0, i32* null, i32 -130 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.69, i32 0, i32 0), i32 0, i32* null, i32 -131 }, %struct.option zeroinitializer], align 16, !dbg !319, !ctir !185
@optarg = external dso_local global i8*, align 8, !ctir !9
@copy_only_if_needed = internal global i8 0, align 1, !dbg !313, !ctir !142
@strip_program = internal global i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.63, i32 0, i32 0), align 8, !dbg !321, !ctir !180
@.str.14 = private unnamed_addr constant [38 x i8] c"multiple target directories specified\00", align 1
@.str.15 = private unnamed_addr constant [73 x i8] c"WARNING: ignoring --preserve-context; this kernel is not SELinux-enabled\00", align 1
@use_default_selinux_context = internal global i8 1, align 1, !dbg !323, !ctir !142
@.str.16 = private unnamed_addr constant [67 x i8] c"warning: ignoring --context; it requires an SELinux-enabled kernel\00", align 1
@.str.18 = private unnamed_addr constant [16 x i8] c"David MacKenzie\00", align 1
@.str.19 = private unnamed_addr constant [61 x i8] c"the strip option may not be used when installing a directory\00", align 1
@.str.20 = private unnamed_addr constant [57 x i8] c"target directory not allowed when installing a directory\00", align 1
@.str.21 = private unnamed_addr constant [20 x i8] c"failed to access %s\00", align 1
@.str.22 = private unnamed_addr constant [29 x i8] c"target %s is not a directory\00", align 1
@.str.23 = private unnamed_addr constant [12 x i8] c"backup type\00", align 1
@.str.24 = private unnamed_addr constant [42 x i8] c"cannot set target context and preserve it\00", align 1
@.str.25 = private unnamed_addr constant [50 x i8] c"failed to set default file creation context to %s\00", align 1
@optind = external dso_local global i32, align 4, !ctir !7
@.str.26 = private unnamed_addr constant [21 x i8] c"missing file operand\00", align 1
@.str.27 = private unnamed_addr constant [42 x i8] c"missing destination file operand after %s\00", align 1
@.str.28 = private unnamed_addr constant [70 x i8] c"cannot combine --target-directory (-t) and --no-target-directory (-T)\00", align 1
@.str.29 = private unnamed_addr constant [17 x i8] c"extra operand %s\00", align 1
@.str.30 = private unnamed_addr constant [16 x i8] c"invalid mode %s\00", align 1
@mode = internal global i32 493, align 4, !dbg !325, !ctir !139
@dir_mode_bits = internal global i32 4095, align 4, !dbg !327, !ctir !139
@dir_mode = internal global i32 493, align 4, !dbg !329, !ctir !139
@.str.31 = private unnamed_addr constant [72 x i8] c"WARNING: ignoring --strip-program option as -s option was not specified\00", align 1
@.str.32 = private unnamed_addr constant [72 x i8] c"options --compare (-C) and --preserve-timestamps are mutually exclusive\00", align 1
@.str.33 = private unnamed_addr constant [58 x i8] c"options --compare (-C) and --strip are mutually exclusive\00", align 1
@.str.34 = private unnamed_addr constant [86 x i8] c"the --compare (-C) option is ignored when you specify a mode with non-permission bits\00", align 1
@.str.75 = private unnamed_addr constant [27 x i8] c"cannot create directory %s\00", align 1
@.str.73 = private unnamed_addr constant [46 x i8] c"failed to set default creation context for %s\00", align 1
@.str.74 = private unnamed_addr constant [22 x i8] c"creating directory %s\00", align 1
@.str.76 = private unnamed_addr constant [15 x i8] c"cannot stat %s\00", align 1
@.str.77 = private unnamed_addr constant [17 x i8] c"cannot unlink %s\00", align 1
@owner_id = internal global i32 0, align 4, !dbg !331, !ctir !127
@group_id = internal global i32 0, align 4, !dbg !333, !ctir !129
@.str.83 = private unnamed_addr constant [30 x i8] c"cannot change ownership of %s\00", align 1
@.str.84 = private unnamed_addr constant [32 x i8] c"cannot change permissions of %s\00", align 1
@setdefaultfilecon.first_call = internal global i8 1, align 1, !dbg !343
@.str.85 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.86 = private unnamed_addr constant [9 x i8] c"<<none>>\00", align 1
@.str.87 = private unnamed_addr constant [44 x i8] c"warning: %s: failed to change context to %s\00", align 1
@.str.82 = private unnamed_addr constant [29 x i8] c"cannot set timestamps for %s\00", align 1
@.str.78 = private unnamed_addr constant [24 x i8] c"fork system call failed\00", align 1
@.str.79 = private unnamed_addr constant [14 x i8] c"cannot run %s\00", align 1
@.str.80 = private unnamed_addr constant [18 x i8] c"waiting for strip\00", align 1
@.str.81 = private unnamed_addr constant [36 x i8] c"strip process terminated abnormally\00", align 1
@have_same_content.a_buff = internal global [4096 x i8] zeroinitializer, align 16, !dbg !335
@have_same_content.b_buff = internal global [4096 x i8] zeroinitializer, align 16, !dbg !341
@.str.72 = private unnamed_addr constant [33 x i8] c"failed to restore context for %s\00", align 1
@.str.70 = private unnamed_addr constant [16 x i8] c"invalid user %s\00", align 1
@.str.71 = private unnamed_addr constant [17 x i8] c"invalid group %s\00", align 1
@.str.63 = private unnamed_addr constant [6 x i8] c"strip\00", align 1
@.str.53 = private unnamed_addr constant [7 x i8] c"backup\00", align 1
@.str.54 = private unnamed_addr constant [8 x i8] c"compare\00", align 1
@.str.55 = private unnamed_addr constant [8 x i8] c"context\00", align 1
@.str.56 = private unnamed_addr constant [10 x i8] c"directory\00", align 1
@.str.57 = private unnamed_addr constant [6 x i8] c"group\00", align 1
@.str.58 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@.str.59 = private unnamed_addr constant [20 x i8] c"no-target-directory\00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c"owner\00", align 1
@.str.61 = private unnamed_addr constant [20 x i8] c"preserve-timestamps\00", align 1
@.str.62 = private unnamed_addr constant [17 x i8] c"preserve-context\00", align 1
@.str.64 = private unnamed_addr constant [14 x i8] c"strip-program\00", align 1
@.str.65 = private unnamed_addr constant [7 x i8] c"suffix\00", align 1
@.str.66 = private unnamed_addr constant [17 x i8] c"target-directory\00", align 1
@.str.67 = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@.str.68 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.69 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str.88 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.89 = private unnamed_addr constant [50 x i8] c"failed to set default file creation context to %s\00", align 1
@.str.1.90 = private unnamed_addr constant [37 x i8] c"failed to get security context of %s\00", align 1
@.str.2.93 = private unnamed_addr constant [51 x i8] c"failed to set default file creation context for %s\00", align 1
@.str.3.95 = private unnamed_addr constant [41 x i8] c"failed to set the security context of %s\00", align 1
@.str.4.100 = private unnamed_addr constant [24 x i8] c"valid_options (options)\00", align 1
@.str.5.101 = private unnamed_addr constant [11 x i8] c"src/copy.c\00", align 1
@__PRETTY_FUNCTION__.copy = private unnamed_addr constant [91 x i8] c"_Bool copy(const char *, const char *, _Bool, const struct cp_options *, _Bool *, _Bool *)\00", align 1
@top_level_src_name = internal global i8* null, align 8, !dbg !346, !ctir !180
@top_level_dst_name = internal global i8* null, align 8, !dbg !600, !ctir !180
@.str.12.102 = private unnamed_addr constant [15 x i8] c"cannot stat %s\00", align 1
@.str.13.103 = private unnamed_addr constant [40 x i8] c"-r not specified; omitting directory %s\00", align 1
@.str.14.104 = private unnamed_addr constant [22 x i8] c"omitting directory %s\00", align 1
@.str.15.105 = private unnamed_addr constant [49 x i8] c"warning: source file %s specified more than once\00", align 1
@.str.16.106 = private unnamed_addr constant [28 x i8] c"%s and %s are the same file\00", align 1
@.str.17.107 = private unnamed_addr constant [52 x i8] c"cannot overwrite non-directory %s with directory %s\00", align 1
@.str.18.108 = private unnamed_addr constant [43 x i8] c"will not overwrite just-created %s with %s\00", align 1
@.str.19.109 = private unnamed_addr constant [49 x i8] c"cannot overwrite directory %s with non-directory\00", align 1
@.str.20.110 = private unnamed_addr constant [51 x i8] c"cannot move directory onto non-directory: %s -> %s\00", align 1
@.str.21.111 = private unnamed_addr constant [50 x i8] c"backing up %s might destroy source;  %s not moved\00", align 1
@.str.22.112 = private unnamed_addr constant [51 x i8] c"backing up %s might destroy source;  %s not copied\00", align 1
@.str.23.113 = private unnamed_addr constant [17 x i8] c"cannot backup %s\00", align 1
@.str.24.114 = private unnamed_addr constant [17 x i8] c"cannot remove %s\00", align 1
@.str.25.115 = private unnamed_addr constant [12 x i8] c"removed %s\0A\00", align 1
@.str.26.116 = private unnamed_addr constant [49 x i8] c"will not copy %s through just-created symlink %s\00", align 1
@.str.27.117 = private unnamed_addr constant [45 x i8] c"cannot copy a directory, %s, into itself, %s\00", align 1
@.str.28.118 = private unnamed_addr constant [54 x i8] c"warning: source directory %s specified more than once\00", align 1
@.str.29.119 = private unnamed_addr constant [45 x i8] c"will not create hard link %s to directory %s\00", align 1
@.str.30.120 = private unnamed_addr constant [9 x i8] c"renamed \00", align 1
@.str.31.121 = private unnamed_addr constant [47 x i8] c"cannot move %s to a subdirectory of itself, %s\00", align 1
@.str.32.122 = private unnamed_addr constant [21 x i8] c"cannot move %s to %s\00", align 1
@.str.33.123 = private unnamed_addr constant [60 x i8] c"inter-device move failed: %s to %s; unable to remove target\00", align 1
@.str.34.124 = private unnamed_addr constant [8 x i8] c"copied \00", align 1
@.str.35.125 = private unnamed_addr constant [36 x i8] c"cannot copy cyclic symbolic link %s\00", align 1
@.str.36.126 = private unnamed_addr constant [27 x i8] c"cannot create directory %s\00", align 1
@.str.37.127 = private unnamed_addr constant [27 x i8] c"setting permissions for %s\00", align 1
@.str.38.128 = private unnamed_addr constant [22 x i8] c"created directory %s\0A\00", align 1
@.str.39.129 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.40.130 = private unnamed_addr constant [63 x i8] c"%s: can make relative symbolic links only in current directory\00", align 1
@.str.41.131 = private unnamed_addr constant [37 x i8] c"cannot create symbolic link %s to %s\00", align 1
@.str.42.132 = private unnamed_addr constant [22 x i8] c"cannot create fifo %s\00", align 1
@.str.43.133 = private unnamed_addr constant [30 x i8] c"cannot create special file %s\00", align 1
@.str.44.134 = private unnamed_addr constant [29 x i8] c"cannot read symbolic link %s\00", align 1
@.str.45.135 = private unnamed_addr constant [31 x i8] c"cannot create symbolic link %s\00", align 1
@.str.46.136 = private unnamed_addr constant [36 x i8] c"failed to preserve ownership for %s\00", align 1
@.str.47.137 = private unnamed_addr constant [25 x i8] c"%s has unknown file type\00", align 1
@.str.48.138 = private unnamed_addr constant [24 x i8] c"preserving times for %s\00", align 1
@.str.49.139 = private unnamed_addr constant [30 x i8] c"preserving permissions for %s\00", align 1
@.str.50.140 = private unnamed_addr constant [20 x i8] c"cannot un-backup %s\00", align 1
@.str.51.141 = private unnamed_addr constant [21 x i8] c"%s -> %s (unbackup)\0A\00", align 1
@cached_umask.mask = internal global i32 -1, align 4, !dbg !597
@.str.77.142 = private unnamed_addr constant [17 x i8] c"security.selinux\00", align 1
@.str.76.143 = private unnamed_addr constant [28 x i8] c"clearing permissions for %s\00", align 1
@.str.75.144 = private unnamed_addr constant [52 x i8] c"failed to restore the default file creation context\00", align 1
@.str.60.145 = private unnamed_addr constant [27 x i8] c"cannot open %s for reading\00", align 1
@.str.61.146 = private unnamed_addr constant [16 x i8] c"cannot fstat %s\00", align 1
@.str.62.147 = private unnamed_addr constant [56 x i8] c"skipping file %s, as it was replaced while being copied\00", align 1
@.str.63.148 = private unnamed_addr constant [40 x i8] c"not writing through dangling symlink %s\00", align 1
@.str.64.149 = private unnamed_addr constant [30 x i8] c"cannot create regular file %s\00", align 1
@.str.65.150 = private unnamed_addr constant [27 x i8] c"failed to clone %s from %s\00", align 1
@.str.66.151 = private unnamed_addr constant [20 x i8] c"failed to extend %s\00", align 1
@.str.67.152 = private unnamed_addr constant [19 x i8] c"failed to close %s\00", align 1
@.str.72.153 = private unnamed_addr constant [17 x i8] c"error reading %s\00", align 1
@.str.73.154 = private unnamed_addr constant [17 x i8] c"error writing %s\00", align 1
@.str.74.155 = private unnamed_addr constant [20 x i8] c"overflow reading %s\00", align 1
@.str.69.156 = private unnamed_addr constant [16 x i8] c"cannot lseek %s\00", align 1
@.str.71.157 = private unnamed_addr constant [22 x i8] c"error deallocating %s\00", align 1
@.str.68.158 = private unnamed_addr constant [31 x i8] c"%s: failed to get extents info\00", align 1
@.str.70.159 = private unnamed_addr constant [17 x i8] c"%s: write failed\00", align 1
@write_zeros.zeros = internal global i8* null, align 8, !dbg !602
@write_zeros.nz = internal global i64 131072, align 8, !dbg !605
@write_zeros.fallback = internal global [1024 x i8] zeroinitializer, align 16, !dbg !607
@.str.59.160 = private unnamed_addr constant [17 x i8] c"cannot access %s\00", align 1
@.str.57.161 = private unnamed_addr constant [9 x i8] c"%s -> %s\00", align 1
@.str.58.162 = private unnamed_addr constant [14 x i8] c" (backup: %s)\00", align 1
@.str.54.163 = private unnamed_addr constant [45 x i8] c"%s: replace %s, overriding mode %04lo (%s)? \00", align 1
@.str.55.164 = private unnamed_addr constant [49 x i8] c"%s: unwritable %s (mode %04lo, %s); try anyway? \00", align 1
@.str.56.165 = private unnamed_addr constant [19 x i8] c"%s: overwrite %s? \00", align 1
@.str.53.166 = private unnamed_addr constant [13 x i8] c"x->move_mode\00", align 1
@__PRETTY_FUNCTION__.abandon_move = private unnamed_addr constant [81 x i8] c"_Bool abandon_move(const struct cp_options *, const char *, const struct stat *)\00", align 1
@.str.52.167 = private unnamed_addr constant [33 x i8] c"cannot create hard link %s to %s\00", align 1
@.str.6.168 = private unnamed_addr constant [11 x i8] c"co != NULL\00", align 1
@__PRETTY_FUNCTION__.valid_options = private unnamed_addr constant [47 x i8] c"_Bool valid_options(const struct cp_options *)\00", align 1
@.str.7.169 = private unnamed_addr constant [36 x i8] c"VALID_BACKUP_TYPE (co->backup_type)\00", align 1
@.str.8.170 = private unnamed_addr constant [36 x i8] c"VALID_SPARSE_MODE (co->sparse_mode)\00", align 1
@.str.9.171 = private unnamed_addr constant [38 x i8] c"VALID_REFLINK_MODE (co->reflink_mode)\00", align 1
@.str.10.172 = private unnamed_addr constant [38 x i8] c"!(co->hard_link && co->symbolic_link)\00", align 1
@.str.11.173 = private unnamed_addr constant [73 x i8] c"! (co->reflink_mode == REFLINK_ALWAYS && co->sparse_mode != SPARSE_AUTO)\00", align 1
@src_to_dest = internal global %struct.hash_table* null, align 8, !dbg !612, !ctir !175
@.str.188 = private unnamed_addr constant [55 x i8] c"scan->ei_count <= SIZE_MAX - fiemap->fm_mapped_extents\00", align 1
@.str.1.189 = private unnamed_addr constant [18 x i8] c"src/extent-scan.c\00", align 1
@__PRETTY_FUNCTION__.extent_scan_read = private unnamed_addr constant [45 x i8] c"_Bool extent_scan_read(struct extent_scan *)\00", align 1
@.str.2.190 = private unnamed_addr constant [64 x i8] c"fm_extents[i].fe_logical <= OFF_T_MAX - fm_extents[i].fe_length\00", align 1
@simple_pattern = internal constant [9 x i8] c"CuXXXXXX\00", align 1, !dbg !638, !ctir !653
@Version = dso_local global i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.197, i32 0, i32 0), align 8, !dbg !671, !ctir !180
@.str.197 = private unnamed_addr constant [5 x i8] c"8.31\00", align 1
@.str.200 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.1.201 = private unnamed_addr constant [30 x i8] c"preserving permissions for %s\00", align 1
@.str.204 = private unnamed_addr constant [27 x i8] c"setting permissions for %s\00", align 1
@simple_backup_suffix = dso_local global i8* null, align 8, !dbg !677, !ctir !180
@.str.211 = private unnamed_addr constant [21 x i8] c"SIMPLE_BACKUP_SUFFIX\00", align 1
@.str.1.212 = private unnamed_addr constant [2 x i8] c"~\00", align 1
@.str.2.213 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.3.214 = private unnamed_addr constant [5 x i8] c".~1~\00", align 1
@backup_args = internal constant [9 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.217, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3.218, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4.219, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.220, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6.221, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7.222, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8.223, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9.224, i32 0, i32 0), i8* null], align 16, !dbg !714, !ctir !728
@backup_types = internal constant [8 x i32] [i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3], align 16, !dbg !734, !ctir !724
@.str.2.217 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.3.218 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@.str.4.219 = private unnamed_addr constant [7 x i8] c"simple\00", align 1
@.str.5.220 = private unnamed_addr constant [6 x i8] c"never\00", align 1
@.str.6.221 = private unnamed_addr constant [9 x i8] c"existing\00", align 1
@.str.7.222 = private unnamed_addr constant [4 x i8] c"nil\00", align 1
@.str.8.223 = private unnamed_addr constant [9 x i8] c"numbered\00", align 1
@.str.9.224 = private unnamed_addr constant [2 x i8] c"t\00", align 1
@.str.1.227 = private unnamed_addr constant [16 x i8] c"VERSION_CONTROL\00", align 1
@.str.228 = private unnamed_addr constant [17 x i8] c"$VERSION_CONTROL\00", align 1
@file_name = internal global i8* null, align 8, !dbg !737, !ctir !180
@stdin = external dso_local global %struct._IO_FILE*, align 8, !ctir !742
@.str.233 = private unnamed_addr constant [19 x i8] c"error closing file\00", align 1
@.str.1.234 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.235 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@file_name.236 = internal global i8* null, align 8, !dbg !779, !ctir !180
@ignore_EPIPE = internal global i8 0, align 1, !dbg !821, !ctir !142
@.str.239 = private unnamed_addr constant [12 x i8] c"write error\00", align 1
@.str.1.240 = private unnamed_addr constant [7 x i8] c"%s: %s\00", align 1
@.str.2.241 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@exit_failure = dso_local global i32 1, align 4, !dbg !824, !ctir !776
@.str.270 = private unnamed_addr constant [24 x i8] c"# entries:         %lu\0A\00", align 1
@.str.1.271 = private unnamed_addr constant [24 x i8] c"# buckets:         %lu\0A\00", align 1
@.str.2.272 = private unnamed_addr constant [33 x i8] c"# buckets used:    %lu (%.2f%%)\0A\00", align 1
@.str.3.273 = private unnamed_addr constant [24 x i8] c"max bucket length: %lu\0A\00", align 1
@default_tuning = internal constant %struct.hash_tuning { float 0.000000e+00, float 1.000000e+00, float 0x3FE99999A0000000, float 0x3FF69FBE80000000, i8 0 }, align 4, !dbg !831, !ctir !858
@.str.296 = private unnamed_addr constant [15 x i8] c"cannot stat %s\00", align 1
@.str.1.297 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.2.298 = private unnamed_addr constant [32 x i8] c"cannot change permissions of %s\00", align 1
@.str.3.299 = private unnamed_addr constant [42 x i8] c"cannot change owner and permissions of %s\00", align 1
@.str.4.300 = private unnamed_addr constant [27 x i8] c"cannot create directory %s\00", align 1
@program_name = dso_local global i8* null, align 8, !dbg !966, !ctir !180
@.str.311 = private unnamed_addr constant [56 x i8] c"A NULL argv[0] was passed through an exec system call.\0A\00", align 1
@.str.1.312 = private unnamed_addr constant [8 x i8] c"/.libs/\00", align 1
@.str.2.313 = private unnamed_addr constant [4 x i8] c"lt-\00", align 1
@program_invocation_short_name = external dso_local global i8*, align 8, !ctir !9
@program_invocation_name = external dso_local global i8*, align 8, !ctir !9
@quoting_style_args = dso_local constant [11 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.318, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.319, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2.320, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.321, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4.322, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.323, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.324, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7.325, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8.326, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9.327, i32 0, i32 0), i8* null], align 16, !dbg !1007, !ctir !1027
@.str.318 = private unnamed_addr constant [8 x i8] c"literal\00", align 1
@.str.1.319 = private unnamed_addr constant [6 x i8] c"shell\00", align 1
@.str.2.320 = private unnamed_addr constant [13 x i8] c"shell-always\00", align 1
@.str.3.321 = private unnamed_addr constant [13 x i8] c"shell-escape\00", align 1
@.str.4.322 = private unnamed_addr constant [20 x i8] c"shell-escape-always\00", align 1
@.str.5.323 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.6.324 = private unnamed_addr constant [8 x i8] c"c-maybe\00", align 1
@.str.7.325 = private unnamed_addr constant [7 x i8] c"escape\00", align 1
@.str.8.326 = private unnamed_addr constant [7 x i8] c"locale\00", align 1
@.str.9.327 = private unnamed_addr constant [8 x i8] c"clocale\00", align 1
@quoting_style_vals = dso_local constant [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9], align 16, !dbg !1133, !ctir !1030
@quote_quoting_options = dso_local global %struct.quoting_options { i32 8, i32 0, [8 x i32] zeroinitializer, i8* null, i8* null }, align 8, !dbg !1135, !ctir !1037
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 8, !dbg !1137, !ctir !1037
@.str.10.328 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.11.329 = private unnamed_addr constant [2 x i8] c"`\00", align 1
@.str.12.330 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.13.331 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.14.332 = private unnamed_addr constant [4 x i8] c"\E2\80\98\00", align 1
@.str.15.333 = private unnamed_addr constant [4 x i8] c"\E2\80\99\00", align 1
@.str.16.334 = private unnamed_addr constant [8 x i8] c"GB18030\00", align 1
@.str.17.335 = private unnamed_addr constant [4 x i8] c"\A1\07e\00", align 1
@.str.18.336 = private unnamed_addr constant [3 x i8] c"\A1\AF\00", align 1
@slotvec = internal global %struct.slotvec* @slotvec0, align 8, !dbg !1141, !ctir !1065
@nslots = internal global i32 1, align 4, !dbg !1143, !ctir !7
@slot0 = internal global [256 x i8] zeroinitializer, align 16, !dbg !1139, !ctir !645
@slotvec0 = internal global %struct.slotvec { i64 256, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i32 0, i32 0) }, align 8, !dbg !1145, !ctir !1066
@.str.357 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@comparison_function_table = internal constant [3 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* null, i32 (i8*, i8*)* @direntry_cmp_name, i32 (i8*, i8*)* @direntry_cmp_inode], align 16, !dbg !1147, !ctir !1174
@.str.366 = private unnamed_addr constant [19 x i8] c"wd->val.child == 0\00", align 1
@.str.1.367 = private unnamed_addr constant [13 x i8] c"lib/savewd.c\00", align 1
@__PRETTY_FUNCTION__.savewd_chdir = private unnamed_addr constant [60 x i8] c"int savewd_chdir(struct savewd *, const char *, int, int *)\00", align 1
@.str.2.368 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.5.369 = private unnamed_addr constant [2 x i8] c".\00", align 1
@__PRETTY_FUNCTION__.savewd_save = private unnamed_addr constant [35 x i8] c"_Bool savewd_save(struct savewd *)\00", align 1
@.str.3.372 = private unnamed_addr constant [28 x i8] c"(*__errno_location ()) == 4\00", align 1
@__PRETTY_FUNCTION__.savewd_restore = private unnamed_addr constant [41 x i8] c"int savewd_restore(struct savewd *, int)\00", align 1
@.str.4.375 = private unnamed_addr constant [18 x i8] c"wd->val.child < 0\00", align 1
@__PRETTY_FUNCTION__.savewd_finish = private unnamed_addr constant [36 x i8] c"void savewd_finish(struct savewd *)\00", align 1
@letters = internal constant [63 x i8] c"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\00", align 16, !dbg !1190, !ctir !1201
@.str.2.398 = private unnamed_addr constant [2 x i8] c"X\00", align 1
@.str.399 = private unnamed_addr constant [35 x i8] c"! \22invalid KIND in __gen_tempname\22\00", align 1
@.str.1.400 = private unnamed_addr constant [15 x i8] c"lib/tempname.c\00", align 1
@__PRETTY_FUNCTION__.gen_tempname_len = private unnamed_addr constant [52 x i8] c"int gen_tempname_len(char *, int, int, int, size_t)\00", align 1
@utimecmpat.ht = internal global %struct.hash_table* null, align 8, !dbg !1214
@utimecmpat.new_dst_res = internal global %struct.fs_res* null, align 8, !dbg !1260
@utimensat_works_really = internal global i32 0, align 4, !dbg !1262, !ctir !7
@lutimensat_works_really = internal global i32 0, align 4, !dbg !1312, !ctir !7
@.str.413 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.1.414 = private unnamed_addr constant [32 x i8] c"unable to display error message\00", align 1
@.str.415 = private unnamed_addr constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str.1.416 = private unnamed_addr constant [7 x i8] c"%s %s\0A\00", align 1
@.str.2.417 = private unnamed_addr constant [4 x i8] c"(C)\00", align 1
@.str.3.418 = private unnamed_addr constant [204 x i8] c"\0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\0AThis is free software: you are free to change and redistribute it.\0AThere is NO WARRANTY, to the extent permitted by law.\0A\0A\00", align 1
@.str.4.419 = private unnamed_addr constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str.5.420 = private unnamed_addr constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str.6.421 = private unnamed_addr constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str.7.422 = private unnamed_addr constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.8.423 = private unnamed_addr constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.9.424 = private unnamed_addr constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 1
@.str.10.425 = private unnamed_addr constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 1
@.str.11.426 = private unnamed_addr constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 1
@.str.12.427 = private unnamed_addr constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 1
@.str.13.428 = private unnamed_addr constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 1
@.str.14.431 = private unnamed_addr constant [21 x i8] c"\0AReport bugs to: %s\0A\00", align 1
@.str.15.432 = private unnamed_addr constant [22 x i8] c"bug-coreutils@gnu.org\00", align 1
@.str.16.433 = private unnamed_addr constant [20 x i8] c"%s home page: <%s>\0A\00", align 1
@.str.17.434 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str.18.435 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 1
@.str.19.436 = private unnamed_addr constant [65 x i8] c"General help using GNU software: <https://www.gnu.org/gethelp/>\0A\00", align 1
@version_etc_copyright = dso_local constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 16, !dbg !1315, !ctir !1320
@can_write_any_file.initialized = internal global i8 0, align 1, !dbg !1325
@can_write_any_file.can_write = internal global i8 0, align 1, !dbg !1335
@.str.1.459 = private unnamed_addr constant [17 x i8] c"memory exhausted\00", align 1
@.str.460 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.463 = private unnamed_addr constant [38 x i8] c"0 <= strtol_base && strtol_base <= 36\00", align 1
@.str.1.464 = private unnamed_addr constant [16 x i8] c"./lib/xstrtol.c\00", align 1
@__PRETTY_FUNCTION__.xstrtoul = private unnamed_addr constant [81 x i8] c"strtol_error xstrtoul(const char *, char **, int, unsigned long *, const char *)\00", align 1
@argmatch_die = dso_local global void ()* @__argmatch_die, align 8, !dbg !1337, !ctir !730
@.str.485 = private unnamed_addr constant [27 x i8] c"invalid argument %s for %s\00", align 1
@.str.1.486 = private unnamed_addr constant [29 x i8] c"ambiguous argument %s for %s\00", align 1
@.str.2.487 = private unnamed_addr constant [21 x i8] c"Valid arguments are:\00", align 1
@.str.3.488 = private unnamed_addr constant [8 x i8] c"\0A  - %s\00", align 1
@.str.4.489 = private unnamed_addr constant [5 x i8] c", %s\00", align 1
@.str.504 = private unnamed_addr constant [2 x i8] c"C\00", align 1
@.str.1.505 = private unnamed_addr constant [6 x i8] c"POSIX\00", align 1
@.str.510 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.1.511 = private unnamed_addr constant [6 x i8] c"ASCII\00", align 1
@.str.524 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.3.525 = private unnamed_addr constant [13 x i8] c"/dev/urandom\00", align 1
@.str.1.526 = private unnamed_addr constant [16 x i8] c"%s: end of file\00", align 1
@.str.2.527 = private unnamed_addr constant [15 x i8] c"%s: read error\00", align 1
@rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec = internal global i32 0, align 4, !dbg !1389

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @usage(i32 %status) #0 !dbg !2631 !ctir !125 {
entry:
  %status.addr = alloca i32, align 4
  store i32 %status, i32* %status.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !2636, metadata !DIExpression()), !dbg !2637
  %0 = load i32, i32* %status.addr, align 4, !dbg !2638, !tbaa !2632
  %cmp = icmp ne i32 %0, 0, !dbg !2640
  br i1 %cmp, label %if.then, label %if.else, !dbg !2641

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !2642

do.body:                                          ; preds = %if.then
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !2643, !tbaa !2645
  %call = call i8* @gettext(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0)) #9, !dbg !2643
  %2 = load i8*, i8** @program_name, align 8, !dbg !2643, !tbaa !2645
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* %call, i8* %2), !dbg !2643
  br label %do.end, !dbg !2643

do.end:                                           ; preds = %do.body
  br label %if.end, !dbg !2643

if.else:                                          ; preds = %entry
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([165 x i8], [165 x i8]* @.str.1, i64 0, i64 0)) #9, !dbg !2647
  %3 = load i8*, i8** @program_name, align 8, !dbg !2649, !tbaa !2645
  %4 = load i8*, i8** @program_name, align 8, !dbg !2650, !tbaa !2645
  %5 = load i8*, i8** @program_name, align 8, !dbg !2651, !tbaa !2645
  %6 = load i8*, i8** @program_name, align 8, !dbg !2652, !tbaa !2645
  %call3 = call i32 (i8*, ...) @printf(i8* %call2, i8* %3, i8* %4, i8* %5, i8* %6), !dbg !2653
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([465 x i8], [465 x i8]* @.str.2, i64 0, i64 0)) #9, !dbg !2654
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2654, !tbaa !2645
  %call5 = call i32 @fputs_unlocked(i8* %call4, %struct._IO_FILE* %7), !dbg !2654
  call void @emit_mandatory_arg_note(), !dbg !2655
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([465 x i8], [465 x i8]* @.str.3, i64 0, i64 0)) #9, !dbg !2656
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2656, !tbaa !2645
  %call7 = call i32 @fputs_unlocked(i8* %call6, %struct._IO_FILE* %8), !dbg !2656
  %call8 = call i8* @gettext(i8* getelementptr inbounds ([401 x i8], [401 x i8]* @.str.4, i64 0, i64 0)) #9, !dbg !2657
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2657, !tbaa !2645
  %call9 = call i32 @fputs_unlocked(i8* %call8, %struct._IO_FILE* %9), !dbg !2657
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([504 x i8], [504 x i8]* @.str.5, i64 0, i64 0)) #9, !dbg !2658
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2658, !tbaa !2645
  %call11 = call i32 @fputs_unlocked(i8* %call10, %struct._IO_FILE* %10), !dbg !2658
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([347 x i8], [347 x i8]* @.str.6, i64 0, i64 0)) #9, !dbg !2659
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2659, !tbaa !2645
  %call13 = call i32 @fputs_unlocked(i8* %call12, %struct._IO_FILE* %11), !dbg !2659
  %call14 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.7, i64 0, i64 0)) #9, !dbg !2660
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2660, !tbaa !2645
  %call15 = call i32 @fputs_unlocked(i8* %call14, %struct._IO_FILE* %12), !dbg !2660
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.8, i64 0, i64 0)) #9, !dbg !2661
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2661, !tbaa !2645
  %call17 = call i32 @fputs_unlocked(i8* %call16, %struct._IO_FILE* %13), !dbg !2661
  call void @emit_backup_suffix_note(), !dbg !2662
  call void @emit_ancillary_info(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0)), !dbg !2663
  br label %if.end

if.end:                                           ; preds = %if.else, %do.end
  %14 = load i32, i32* %status.addr, align 4, !dbg !2664, !tbaa !2632
  call void @exit(i32 %14) #13, !dbg !2665
  unreachable, !dbg !2665
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare dso_local i8* @gettext(i8*) #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

declare dso_local i32 @printf(i8*, ...) #3

declare dso_local i32 @fputs_unlocked(i8*, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_mandatory_arg_note() #4 !dbg !2666 !ctir !200 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.35, i64 0, i64 0)) #9, !dbg !2667
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2667, !tbaa !2645
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !2667
  ret void, !dbg !2668
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_backup_suffix_note() #4 !dbg !2669 !ctir !200 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([221 x i8], [221 x i8]* @.str.36, i64 0, i64 0)) #9, !dbg !2670
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2670, !tbaa !2645
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !2670
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([222 x i8], [222 x i8]* @.str.37, i64 0, i64 0)) #9, !dbg !2671
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2671, !tbaa !2645
  %call3 = call i32 @fputs_unlocked(i8* %call2, %struct._IO_FILE* %1), !dbg !2671
  ret void, !dbg !2672
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_ancillary_info(i8* %program) #4 !dbg !208 !ctir !202 {
entry:
  %program.addr = alloca i8*, align 8
  %infomap = alloca [7 x %struct.infomap], align 16, !ctir !204
  %node = alloca i8*, align 8, !ctir !180
  %map_prog = alloca %struct.infomap*, align 8, !ctir !215
  %lc_messages = alloca i8*, align 8, !ctir !180
  store i8* %program, i8** %program.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %program.addr, metadata !2673, metadata !DIExpression()), !dbg !2674
  call void @llvm.dbg.declare(metadata [7 x %struct.infomap]* %infomap, metadata !2675, metadata !DIExpression()), !dbg !2676
  %0 = bitcast [7 x %struct.infomap]* %infomap to i8*, !dbg !2676
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 bitcast ([7 x %struct.infomap]* @__const.emit_ancillary_info.infomap to i8*), i64 112, i1 false), !dbg !2676
  call void @llvm.dbg.declare(metadata i8** %node, metadata !2677, metadata !DIExpression()), !dbg !2678
  %1 = load i8*, i8** %program.addr, align 8, !dbg !2679, !tbaa !2645
  store i8* %1, i8** %node, align 8, !dbg !2678, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.infomap** %map_prog, metadata !2680, metadata !DIExpression()), !dbg !2681
  %arraydecay = getelementptr inbounds [7 x %struct.infomap], [7 x %struct.infomap]* %infomap, i64 0, i64 0, !dbg !2682
  store %struct.infomap* %arraydecay, %struct.infomap** %map_prog, align 8, !dbg !2681, !tbaa !2645
  br label %while.cond, !dbg !2683

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !2684, !tbaa !2645
  %program1 = getelementptr inbounds %struct.infomap, %struct.infomap* %2, i32 0, i32 0, !dbg !2685, !ctir !205
  %3 = load i8*, i8** %program1, align 8, !dbg !2685, !tbaa !2686, !ctir !180
  %tobool = icmp ne i8* %3, null, !dbg !2684
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !2688

land.rhs:                                         ; preds = %while.cond
  %4 = load i8*, i8** %program.addr, align 8, !dbg !2689, !tbaa !2645
  %5 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !2689, !tbaa !2645
  %program2 = getelementptr inbounds %struct.infomap, %struct.infomap* %5, i32 0, i32 0, !dbg !2689, !ctir !205
  %6 = load i8*, i8** %program2, align 8, !dbg !2689, !tbaa !2686, !ctir !180
  %call = call i32 @strcmp(i8* %4, i8* %6) #14, !dbg !2689
  %cmp = icmp eq i32 %call, 0, !dbg !2689
  %lnot = xor i1 %cmp, true, !dbg !2690
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %7 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !2691
  br i1 %7, label %while.body, label %while.end, !dbg !2683

while.body:                                       ; preds = %land.end
  %8 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !2692, !tbaa !2645
  %incdec.ptr = getelementptr inbounds %struct.infomap, %struct.infomap* %8, i32 1, !dbg !2692
  store %struct.infomap* %incdec.ptr, %struct.infomap** %map_prog, align 8, !dbg !2692, !tbaa !2645
  br label %while.cond, !dbg !2683, !llvm.loop !2693

while.end:                                        ; preds = %land.end
  %9 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !2694, !tbaa !2645
  %node3 = getelementptr inbounds %struct.infomap, %struct.infomap* %9, i32 0, i32 1, !dbg !2696, !ctir !205
  %10 = load i8*, i8** %node3, align 8, !dbg !2696, !tbaa !2697, !ctir !180
  %tobool4 = icmp ne i8* %10, null, !dbg !2694
  br i1 %tobool4, label %if.then, label %if.end, !dbg !2698

if.then:                                          ; preds = %while.end
  %11 = load %struct.infomap*, %struct.infomap** %map_prog, align 8, !dbg !2699, !tbaa !2645
  %node5 = getelementptr inbounds %struct.infomap, %struct.infomap* %11, i32 0, i32 1, !dbg !2700, !ctir !205
  %12 = load i8*, i8** %node5, align 8, !dbg !2700, !tbaa !2697, !ctir !180
  store i8* %12, i8** %node, align 8, !dbg !2701, !tbaa !2645
  br label %if.end, !dbg !2702

if.end:                                           ; preds = %if.then, %while.end
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.46, i64 0, i64 0)) #9, !dbg !2703
  %call7 = call i32 (i8*, ...) @printf(i8* %call6, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.47, i64 0, i64 0)), !dbg !2704
  call void @llvm.dbg.declare(metadata i8** %lc_messages, metadata !2705, metadata !DIExpression()), !dbg !2706
  %call8 = call i8* @setlocale(i32 5, i8* null) #9, !dbg !2707
  store i8* %call8, i8** %lc_messages, align 8, !dbg !2706, !tbaa !2645
  %13 = load i8*, i8** %lc_messages, align 8, !dbg !2708, !tbaa !2645
  %tobool9 = icmp ne i8* %13, null, !dbg !2708
  br i1 %tobool9, label %land.lhs.true, label %if.end15, !dbg !2710

land.lhs.true:                                    ; preds = %if.end
  %14 = load i8*, i8** %lc_messages, align 8, !dbg !2711, !tbaa !2645
  %call10 = call i32 @strncmp(i8* %14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.48, i64 0, i64 0), i64 3) #14, !dbg !2711
  %tobool11 = icmp ne i32 %call10, 0, !dbg !2711
  br i1 %tobool11, label %if.then12, label %if.end15, !dbg !2712

if.then12:                                        ; preds = %land.lhs.true
  %call13 = call i8* @gettext(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.49, i64 0, i64 0)) #9, !dbg !2713
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2713, !tbaa !2645
  %call14 = call i32 @fputs_unlocked(i8* %call13, %struct._IO_FILE* %15), !dbg !2713
  br label %if.end15, !dbg !2715

if.end15:                                         ; preds = %if.then12, %land.lhs.true, %if.end
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.50, i64 0, i64 0)) #9, !dbg !2716
  %16 = load i8*, i8** %program.addr, align 8, !dbg !2717, !tbaa !2645
  %call17 = call i32 (i8*, ...) @printf(i8* %call16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.47, i64 0, i64 0), i8* %16), !dbg !2718
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.51, i64 0, i64 0)) #9, !dbg !2719
  %17 = load i8*, i8** %node, align 8, !dbg !2720, !tbaa !2645
  %18 = load i8*, i8** %node, align 8, !dbg !2721, !tbaa !2645
  %19 = load i8*, i8** %program.addr, align 8, !dbg !2722, !tbaa !2645
  %cmp19 = icmp eq i8* %18, %19, !dbg !2723
  %20 = zext i1 %cmp19 to i64, !dbg !2721
  %cond = select i1 %cmp19, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.52, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), !dbg !2721
  %call20 = call i32 (i8*, ...) @printf(i8* %call18, i8* %17, i8* %cond), !dbg !2724
  ret void, !dbg !2725
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #7

; Function Attrs: nounwind
declare dso_local i8* @setlocale(i32, i8*) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strncmp(i8*, i8*, i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %argc, i8** %argv) #4 !dbg !2726 !ctir !182 {
entry:
  %retval = alloca i32, align 4
  %argc.addr = alloca i32, align 4
  %argv.addr = alloca i8**, align 8
  %optc = alloca i32, align 4, !ctir !7
  %exit_status = alloca i32, align 4, !ctir !7
  %specified_mode = alloca i8*, align 8, !ctir !180
  %make_backups = alloca i8, align 1, !ctir !142
  %backup_suffix = alloca i8*, align 8, !ctir !180
  %version_control_string = alloca i8*, align 8, !ctir !9
  %mkdir_and_install = alloca i8, align 1, !ctir !142
  %x = alloca %struct.cp_options, align 8, !ctir !132
  %target_directory = alloca i8*, align 8, !ctir !180
  %no_target_directory = alloca i8, align 1, !ctir !142
  %n_files = alloca i32, align 4, !ctir !7
  %file = alloca i8**, align 8, !ctir !184
  %strip_program_specified = alloca i8, align 1, !ctir !142
  %scontext = alloca i8*, align 8, !ctir !180
  %st = alloca %struct.stat, align 8, !ctir !270
  %stat_success = alloca i8, align 1, !ctir !142
  %change = alloca %struct.mode_change*, align 8, !ctir !197
  %i = alloca i32, align 4, !ctir !7
  store i32 0, i32* %retval, align 4
  store i32 %argc, i32* %argc.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !2727, metadata !DIExpression()), !dbg !2728
  store i8** %argv, i8*** %argv.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8*** %argv.addr, metadata !2729, metadata !DIExpression()), !dbg !2730
  call void @llvm.dbg.declare(metadata i32* %optc, metadata !2731, metadata !DIExpression()), !dbg !2732
  call void @llvm.dbg.declare(metadata i32* %exit_status, metadata !2733, metadata !DIExpression()), !dbg !2734
  store i32 0, i32* %exit_status, align 4, !dbg !2734, !tbaa !2632
  call void @llvm.dbg.declare(metadata i8** %specified_mode, metadata !2735, metadata !DIExpression()), !dbg !2736
  store i8* null, i8** %specified_mode, align 8, !dbg !2736, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8* %make_backups, metadata !2737, metadata !DIExpression()), !dbg !2738
  store i8 0, i8* %make_backups, align 1, !dbg !2738, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8** %backup_suffix, metadata !2741, metadata !DIExpression()), !dbg !2742
  store i8* null, i8** %backup_suffix, align 8, !dbg !2742, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %version_control_string, metadata !2743, metadata !DIExpression()), !dbg !2744
  store i8* null, i8** %version_control_string, align 8, !dbg !2744, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8* %mkdir_and_install, metadata !2745, metadata !DIExpression()), !dbg !2746
  store i8 0, i8* %mkdir_and_install, align 1, !dbg !2746, !tbaa !2739
  call void @llvm.dbg.declare(metadata %struct.cp_options* %x, metadata !2747, metadata !DIExpression()), !dbg !2748
  call void @llvm.dbg.declare(metadata i8** %target_directory, metadata !2749, metadata !DIExpression()), !dbg !2750
  store i8* null, i8** %target_directory, align 8, !dbg !2750, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8* %no_target_directory, metadata !2751, metadata !DIExpression()), !dbg !2752
  store i8 0, i8* %no_target_directory, align 1, !dbg !2752, !tbaa !2739
  call void @llvm.dbg.declare(metadata i32* %n_files, metadata !2753, metadata !DIExpression()), !dbg !2754
  call void @llvm.dbg.declare(metadata i8*** %file, metadata !2755, metadata !DIExpression()), !dbg !2756
  call void @llvm.dbg.declare(metadata i8* %strip_program_specified, metadata !2757, metadata !DIExpression()), !dbg !2758
  store i8 0, i8* %strip_program_specified, align 1, !dbg !2758, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8** %scontext, metadata !2759, metadata !DIExpression()), !dbg !2760
  store i8* null, i8** %scontext, align 8, !dbg !2760, !tbaa !2645
  store i32 0, i32* @selinux_enabled, align 4, !dbg !2761, !tbaa !2632
  %0 = load i8**, i8*** %argv.addr, align 8, !dbg !2762, !tbaa !2645
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 0, !dbg !2762, !ctir !184
  %1 = load i8*, i8** %arrayidx, align 8, !dbg !2762, !tbaa !2645
  call void @set_program_name(i8* %1), !dbg !2763
  %call = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0)) #9, !dbg !2764
  %call1 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0)) #9, !dbg !2765
  %call2 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0)) #9, !dbg !2766
  %call3 = call i32 @atexit(void ()* @close_stdin) #9, !dbg !2767
  call void @cp_option_init(%struct.cp_options* %x), !dbg !2768
  store i8* null, i8** @owner_name, align 8, !dbg !2769, !tbaa !2645
  store i8* null, i8** @group_name, align 8, !dbg !2770, !tbaa !2645
  store i8 0, i8* @strip_files, align 1, !dbg !2771, !tbaa !2739
  store i8 0, i8* @dir_arg, align 1, !dbg !2772, !tbaa !2739
  %call4 = call i32 @umask(i32 0) #9, !dbg !2773
  br label %while.cond, !dbg !2774

while.cond:                                       ; preds = %sw.epilog, %entry
  %2 = load i32, i32* %argc.addr, align 4, !dbg !2775, !tbaa !2632
  %3 = load i8**, i8*** %argv.addr, align 8, !dbg !2776, !tbaa !2645
  %call5 = call i32 @getopt_long(i32 %2, i8** %3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i64 0, i64 0), %struct.option* getelementptr inbounds ([18 x %struct.option], [18 x %struct.option]* @long_options, i64 0, i64 0), i32* null) #9, !dbg !2777
  store i32 %call5, i32* %optc, align 4, !dbg !2778, !tbaa !2632
  %cmp = icmp ne i32 %call5, -1, !dbg !2779
  br i1 %cmp, label %while.body, label %while.end, !dbg !2774

while.body:                                       ; preds = %while.cond
  %4 = load i32, i32* %optc, align 4, !dbg !2780, !tbaa !2632
  switch i32 %4, label %sw.default [
    i32 98, label %sw.bb
    i32 99, label %sw.bb6
    i32 67, label %sw.bb7
    i32 115, label %sw.bb8
    i32 129, label %sw.bb10
    i32 100, label %sw.bb12
    i32 68, label %sw.bb13
    i32 118, label %sw.bb14
    i32 103, label %sw.bb15
    i32 109, label %sw.bb16
    i32 111, label %sw.bb17
    i32 112, label %sw.bb18
    i32 83, label %sw.bb19
    i32 116, label %sw.bb20
    i32 84, label %sw.bb25
    i32 128, label %sw.bb26
    i32 90, label %sw.bb31
    i32 -130, label %sw.bb43
    i32 -131, label %sw.bb44
  ], !dbg !2782

sw.bb:                                            ; preds = %while.body
  store i8 1, i8* %make_backups, align 1, !dbg !2783, !tbaa !2739
  %5 = load i8*, i8** @optarg, align 8, !dbg !2785, !tbaa !2645
  %tobool = icmp ne i8* %5, null, !dbg !2785
  br i1 %tobool, label %if.then, label %if.end, !dbg !2787

if.then:                                          ; preds = %sw.bb
  %6 = load i8*, i8** @optarg, align 8, !dbg !2788, !tbaa !2645
  store i8* %6, i8** %version_control_string, align 8, !dbg !2789, !tbaa !2645
  br label %if.end, !dbg !2790

if.end:                                           ; preds = %if.then, %sw.bb
  br label %sw.epilog, !dbg !2791

sw.bb6:                                           ; preds = %while.body
  br label %sw.epilog, !dbg !2792

sw.bb7:                                           ; preds = %while.body
  store i8 1, i8* @copy_only_if_needed, align 1, !dbg !2793, !tbaa !2739
  br label %sw.epilog, !dbg !2794

sw.bb8:                                           ; preds = %while.body
  store i8 1, i8* @strip_files, align 1, !dbg !2795, !tbaa !2739
  %call9 = call void (i32)* @signal(i32 17, void (i32)* null) #9, !dbg !2796
  br label %sw.epilog, !dbg !2797

sw.bb10:                                          ; preds = %while.body
  %7 = load i8*, i8** @optarg, align 8, !dbg !2798, !tbaa !2645
  %call11 = call noalias i8* @xstrdup(i8* %7), !dbg !2799
  store i8* %call11, i8** @strip_program, align 8, !dbg !2800, !tbaa !2645
  store i8 1, i8* %strip_program_specified, align 1, !dbg !2801, !tbaa !2739
  br label %sw.epilog, !dbg !2802

sw.bb12:                                          ; preds = %while.body
  store i8 1, i8* @dir_arg, align 1, !dbg !2803, !tbaa !2739
  br label %sw.epilog, !dbg !2804

sw.bb13:                                          ; preds = %while.body
  store i8 1, i8* %mkdir_and_install, align 1, !dbg !2805, !tbaa !2739
  br label %sw.epilog, !dbg !2806

sw.bb14:                                          ; preds = %while.body
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 31, !dbg !2807, !ctir !132
  store i8 1, i8* %verbose, align 2, !dbg !2808, !tbaa !2809, !ctir !142
  br label %sw.epilog, !dbg !2811

sw.bb15:                                          ; preds = %while.body
  %8 = load i8*, i8** @optarg, align 8, !dbg !2812, !tbaa !2645
  store i8* %8, i8** @group_name, align 8, !dbg !2813, !tbaa !2645
  br label %sw.epilog, !dbg !2814

sw.bb16:                                          ; preds = %while.body
  %9 = load i8*, i8** @optarg, align 8, !dbg !2815, !tbaa !2645
  store i8* %9, i8** %specified_mode, align 8, !dbg !2816, !tbaa !2645
  br label %sw.epilog, !dbg !2817

sw.bb17:                                          ; preds = %while.body
  %10 = load i8*, i8** @optarg, align 8, !dbg !2818, !tbaa !2645
  store i8* %10, i8** @owner_name, align 8, !dbg !2819, !tbaa !2645
  br label %sw.epilog, !dbg !2820

sw.bb18:                                          ; preds = %while.body
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 16, !dbg !2821, !ctir !132
  store i8 1, i8* %preserve_timestamps, align 1, !dbg !2822, !tbaa !2823, !ctir !142
  br label %sw.epilog, !dbg !2824

sw.bb19:                                          ; preds = %while.body
  store i8 1, i8* %make_backups, align 1, !dbg !2825, !tbaa !2739
  %11 = load i8*, i8** @optarg, align 8, !dbg !2826, !tbaa !2645
  store i8* %11, i8** %backup_suffix, align 8, !dbg !2827, !tbaa !2645
  br label %sw.epilog, !dbg !2828

sw.bb20:                                          ; preds = %while.body
  %12 = load i8*, i8** %target_directory, align 8, !dbg !2829, !tbaa !2645
  %tobool21 = icmp ne i8* %12, null, !dbg !2829
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !2831

if.then22:                                        ; preds = %sw.bb20
  %call23 = call i8* @gettext(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.14, i64 0, i64 0)) #9, !dbg !2832
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call23), !dbg !2832
  unreachable, !dbg !2832

if.end24:                                         ; preds = %sw.bb20
  %13 = load i8*, i8** @optarg, align 8, !dbg !2833, !tbaa !2645
  store i8* %13, i8** %target_directory, align 8, !dbg !2834, !tbaa !2645
  br label %sw.epilog, !dbg !2835

sw.bb25:                                          ; preds = %while.body
  store i8 1, i8* %no_target_directory, align 1, !dbg !2836, !tbaa !2739
  br label %sw.epilog, !dbg !2837

sw.bb26:                                          ; preds = %while.body
  %14 = load i32, i32* @selinux_enabled, align 4, !dbg !2838, !tbaa !2632
  %tobool27 = icmp ne i32 %14, 0, !dbg !2838
  br i1 %tobool27, label %if.end30, label %if.then28, !dbg !2840

if.then28:                                        ; preds = %sw.bb26
  %call29 = call i8* @gettext(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.15, i64 0, i64 0)) #9, !dbg !2841
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call29), !dbg !2843
  br label %sw.epilog, !dbg !2844

if.end30:                                         ; preds = %sw.bb26
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 22, !dbg !2845, !ctir !132
  store i8 1, i8* %preserve_security_context, align 1, !dbg !2846, !tbaa !2847, !ctir !142
  store i8 0, i8* @use_default_selinux_context, align 1, !dbg !2848, !tbaa !2739
  br label %sw.epilog, !dbg !2849

sw.bb31:                                          ; preds = %while.body
  %15 = load i32, i32* @selinux_enabled, align 4, !dbg !2850, !tbaa !2632
  %tobool32 = icmp ne i32 %15, 0, !dbg !2850
  br i1 %tobool32, label %if.then33, label %if.else37, !dbg !2852

if.then33:                                        ; preds = %sw.bb31
  store i8 0, i8* @use_default_selinux_context, align 1, !dbg !2853, !tbaa !2739
  %16 = load i8*, i8** @optarg, align 8, !dbg !2855, !tbaa !2645
  %tobool34 = icmp ne i8* %16, null, !dbg !2855
  br i1 %tobool34, label %if.then35, label %if.else, !dbg !2857

if.then35:                                        ; preds = %if.then33
  %17 = load i8*, i8** @optarg, align 8, !dbg !2858, !tbaa !2645
  store i8* %17, i8** %scontext, align 8, !dbg !2859, !tbaa !2645
  br label %if.end36, !dbg !2860

if.else:                                          ; preds = %if.then33
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 18, !dbg !2861, !ctir !132
  store i8 1, i8* %set_security_context, align 1, !dbg !2862, !tbaa !2863, !ctir !142
  br label %if.end36

if.end36:                                         ; preds = %if.else, %if.then35
  br label %if.end42, !dbg !2864

if.else37:                                        ; preds = %sw.bb31
  %18 = load i8*, i8** @optarg, align 8, !dbg !2865, !tbaa !2645
  %tobool38 = icmp ne i8* %18, null, !dbg !2865
  br i1 %tobool38, label %if.then39, label %if.end41, !dbg !2867

if.then39:                                        ; preds = %if.else37
  %call40 = call i8* @gettext(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.16, i64 0, i64 0)) #9, !dbg !2868
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call40), !dbg !2870
  br label %if.end41, !dbg !2871

if.end41:                                         ; preds = %if.then39, %if.else37
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.end36
  br label %sw.epilog, !dbg !2872

sw.bb43:                                          ; preds = %while.body
  call void @usage(i32 0) #15, !dbg !2873
  unreachable, !dbg !2873

sw.bb44:                                          ; preds = %while.body
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2874, !tbaa !2645
  %20 = load i8*, i8** @Version, align 8, !dbg !2874, !tbaa !2645
  call void (%struct._IO_FILE*, i8*, i8*, i8*, ...) @version_etc(%struct._IO_FILE* %19, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17, i64 0, i64 0), i8* %20, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i64 0, i64 0), i8* null), !dbg !2874
  call void @exit(i32 0) #13, !dbg !2874
  unreachable, !dbg !2874

sw.default:                                       ; preds = %while.body
  call void @usage(i32 1) #15, !dbg !2875
  unreachable, !dbg !2875

sw.epilog:                                        ; preds = %if.end42, %if.end30, %if.then28, %sw.bb25, %if.end24, %sw.bb19, %sw.bb18, %sw.bb17, %sw.bb16, %sw.bb15, %sw.bb14, %sw.bb13, %sw.bb12, %sw.bb10, %sw.bb8, %sw.bb7, %sw.bb6, %if.end
  br label %while.cond, !dbg !2774, !llvm.loop !2876

while.end:                                        ; preds = %while.cond
  %21 = load i8, i8* @dir_arg, align 1, !dbg !2878, !tbaa !2739
  %tobool45 = trunc i8 %21 to i1, !dbg !2878
  br i1 %tobool45, label %land.lhs.true, label %if.end49, !dbg !2880

land.lhs.true:                                    ; preds = %while.end
  %22 = load i8, i8* @strip_files, align 1, !dbg !2881, !tbaa !2739
  %tobool46 = trunc i8 %22 to i1, !dbg !2881
  br i1 %tobool46, label %if.then47, label %if.end49, !dbg !2882

if.then47:                                        ; preds = %land.lhs.true
  %call48 = call i8* @gettext(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.19, i64 0, i64 0)) #9, !dbg !2883
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call48), !dbg !2883
  unreachable, !dbg !2883

if.end49:                                         ; preds = %land.lhs.true, %while.end
  %23 = load i8, i8* @dir_arg, align 1, !dbg !2884, !tbaa !2739
  %tobool50 = trunc i8 %23 to i1, !dbg !2884
  br i1 %tobool50, label %land.lhs.true51, label %if.end55, !dbg !2886

land.lhs.true51:                                  ; preds = %if.end49
  %24 = load i8*, i8** %target_directory, align 8, !dbg !2887, !tbaa !2645
  %tobool52 = icmp ne i8* %24, null, !dbg !2887
  br i1 %tobool52, label %if.then53, label %if.end55, !dbg !2888

if.then53:                                        ; preds = %land.lhs.true51
  %call54 = call i8* @gettext(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.20, i64 0, i64 0)) #9, !dbg !2889
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call54), !dbg !2889
  unreachable, !dbg !2889

if.end55:                                         ; preds = %land.lhs.true51, %if.end49
  %25 = load i8*, i8** %target_directory, align 8, !dbg !2890, !tbaa !2645
  %tobool56 = icmp ne i8* %25, null, !dbg !2890
  br i1 %tobool56, label %if.then57, label %if.end76, !dbg !2892

if.then57:                                        ; preds = %if.end55
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !2893, metadata !DIExpression()), !dbg !2895
  call void @llvm.dbg.declare(metadata i8* %stat_success, metadata !2896, metadata !DIExpression()), !dbg !2897
  %26 = load i8*, i8** %target_directory, align 8, !dbg !2898, !tbaa !2645
  %call58 = call i32 @stat(i8* %26, %struct.stat* %st) #9, !dbg !2899
  %cmp59 = icmp eq i32 %call58, 0, !dbg !2900
  %27 = zext i1 %cmp59 to i64, !dbg !2899
  %cond = select i1 %cmp59, i32 1, i32 0, !dbg !2899
  %tobool60 = icmp ne i32 %cond, 0, !dbg !2899
  %frombool = zext i1 %tobool60 to i8, !dbg !2897
  store i8 %frombool, i8* %stat_success, align 1, !dbg !2897, !tbaa !2739
  %28 = load i8, i8* %mkdir_and_install, align 1, !dbg !2901, !tbaa !2739
  %tobool61 = trunc i8 %28 to i1, !dbg !2901
  br i1 %tobool61, label %if.end68, label %land.lhs.true62, !dbg !2903

land.lhs.true62:                                  ; preds = %if.then57
  %29 = load i8, i8* %stat_success, align 1, !dbg !2904, !tbaa !2739
  %tobool63 = trunc i8 %29 to i1, !dbg !2904
  br i1 %tobool63, label %if.end68, label %if.then64, !dbg !2905

if.then64:                                        ; preds = %land.lhs.true62
  %call65 = call i32* @__errno_location() #16, !dbg !2906
  %30 = load i32, i32* %call65, align 4, !dbg !2906, !tbaa !2632, !ctir !7
  %call66 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i64 0, i64 0)) #9, !dbg !2906
  %31 = load i8*, i8** %target_directory, align 8, !dbg !2906, !tbaa !2645
  %call67 = call i8* @quotearg_style(i32 4, i8* %31), !dbg !2906
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %30, i8* %call66, i8* %call67), !dbg !2906
  unreachable, !dbg !2906

if.end68:                                         ; preds = %land.lhs.true62, %if.then57
  %32 = load i8, i8* %stat_success, align 1, !dbg !2907, !tbaa !2739
  %tobool69 = trunc i8 %32 to i1, !dbg !2907
  br i1 %tobool69, label %land.lhs.true70, label %if.end75, !dbg !2909

land.lhs.true70:                                  ; preds = %if.end68
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !2910, !ctir !270
  %33 = load i32, i32* %st_mode, align 8, !dbg !2910, !tbaa !2911, !ctir !140
  %and = and i32 %33, 61440, !dbg !2910
  %cmp71 = icmp eq i32 %and, 16384, !dbg !2910
  br i1 %cmp71, label %if.end75, label %if.then72, !dbg !2915

if.then72:                                        ; preds = %land.lhs.true70
  %call73 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22, i64 0, i64 0)) #9, !dbg !2916
  %34 = load i8*, i8** %target_directory, align 8, !dbg !2916, !tbaa !2645
  %call74 = call i8* @quotearg_style(i32 4, i8* %34), !dbg !2916
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call73, i8* %call74), !dbg !2916
  unreachable, !dbg !2916

if.end75:                                         ; preds = %land.lhs.true70, %if.end68
  br label %if.end76, !dbg !2917

if.end76:                                         ; preds = %if.end75, %if.end55
  %35 = load i8, i8* %make_backups, align 1, !dbg !2918, !tbaa !2739
  %tobool77 = trunc i8 %35 to i1, !dbg !2918
  br i1 %tobool77, label %cond.true, label %cond.false, !dbg !2918

cond.true:                                        ; preds = %if.end76
  %call78 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i64 0, i64 0)) #9, !dbg !2919
  %36 = load i8*, i8** %version_control_string, align 8, !dbg !2920, !tbaa !2645
  %call79 = call i32 @xget_version(i8* %call78, i8* %36), !dbg !2921
  br label %cond.end, !dbg !2918

cond.false:                                       ; preds = %if.end76
  br label %cond.end, !dbg !2918

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond80 = phi i32 [ %call79, %cond.true ], [ 0, %cond.false ], !dbg !2918
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 0, !dbg !2922, !ctir !132
  store i32 %cond80, i32* %backup_type, align 8, !dbg !2923, !tbaa !2924, !ctir !68
  %37 = load i8*, i8** %backup_suffix, align 8, !dbg !2925, !tbaa !2645
  call void @set_simple_backup_suffix(i8* %37), !dbg !2926
  %preserve_security_context81 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 22, !dbg !2927, !ctir !132
  %38 = load i8, i8* %preserve_security_context81, align 1, !dbg !2927, !tbaa !2847
  %tobool82 = trunc i8 %38 to i1, !dbg !2927, !ctir !142
  br i1 %tobool82, label %land.lhs.true83, label %if.end89, !dbg !2929

land.lhs.true83:                                  ; preds = %cond.end
  %set_security_context84 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 18, !dbg !2930, !ctir !132
  %39 = load i8, i8* %set_security_context84, align 1, !dbg !2930, !tbaa !2863
  %tobool85 = trunc i8 %39 to i1, !dbg !2930, !ctir !142
  br i1 %tobool85, label %if.then87, label %lor.lhs.false, !dbg !2931

lor.lhs.false:                                    ; preds = %land.lhs.true83
  %40 = load i8*, i8** %scontext, align 8, !dbg !2932, !tbaa !2645
  %tobool86 = icmp ne i8* %40, null, !dbg !2932
  br i1 %tobool86, label %if.then87, label %if.end89, !dbg !2933

if.then87:                                        ; preds = %lor.lhs.false, %land.lhs.true83
  %call88 = call i8* @gettext(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.24, i64 0, i64 0)) #9, !dbg !2934
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call88), !dbg !2934
  unreachable, !dbg !2934

if.end89:                                         ; preds = %lor.lhs.false, %cond.end
  %41 = load i8*, i8** %scontext, align 8, !dbg !2935, !tbaa !2645
  %tobool90 = icmp ne i8* %41, null, !dbg !2935
  br i1 %tobool90, label %land.lhs.true91, label %if.end99, !dbg !2937

land.lhs.true91:                                  ; preds = %if.end89
  %42 = load i8*, i8** %scontext, align 8, !dbg !2938, !tbaa !2645
  %call92 = call i8* @se_const(i8* %42), !dbg !2939
  %call93 = call i32 @setfscreatecon(i8* %call92), !dbg !2940
  %cmp94 = icmp slt i32 %call93, 0, !dbg !2941
  br i1 %cmp94, label %if.then95, label %if.end99, !dbg !2942

if.then95:                                        ; preds = %land.lhs.true91
  %call96 = call i32* @__errno_location() #16, !dbg !2943
  %43 = load i32, i32* %call96, align 4, !dbg !2943, !tbaa !2632, !ctir !7
  %call97 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.25, i64 0, i64 0)) #9, !dbg !2943
  %44 = load i8*, i8** %scontext, align 8, !dbg !2943, !tbaa !2645
  %call98 = call i8* @quote(i8* %44), !dbg !2943
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %43, i8* %call97, i8* %call98), !dbg !2943
  unreachable, !dbg !2943

if.end99:                                         ; preds = %land.lhs.true91, %if.end89
  %45 = load i32, i32* %argc.addr, align 4, !dbg !2944, !tbaa !2632
  %46 = load i32, i32* @optind, align 4, !dbg !2945, !tbaa !2632
  %sub = sub nsw i32 %45, %46, !dbg !2946
  store i32 %sub, i32* %n_files, align 4, !dbg !2947, !tbaa !2632
  %47 = load i8**, i8*** %argv.addr, align 8, !dbg !2948, !tbaa !2645
  %48 = load i32, i32* @optind, align 4, !dbg !2949, !tbaa !2632
  %idx.ext = sext i32 %48 to i64, !dbg !2950
  %add.ptr = getelementptr inbounds i8*, i8** %47, i64 %idx.ext, !dbg !2950
  store i8** %add.ptr, i8*** %file, align 8, !dbg !2951, !tbaa !2645
  %49 = load i32, i32* %n_files, align 4, !dbg !2952, !tbaa !2632
  %50 = load i8, i8* @dir_arg, align 1, !dbg !2954, !tbaa !2739
  %tobool100 = trunc i8 %50 to i1, !dbg !2954
  br i1 %tobool100, label %lor.end, label %lor.rhs, !dbg !2955

lor.rhs:                                          ; preds = %if.end99
  %51 = load i8*, i8** %target_directory, align 8, !dbg !2956, !tbaa !2645
  %tobool101 = icmp ne i8* %51, null, !dbg !2955
  br label %lor.end, !dbg !2955

lor.end:                                          ; preds = %lor.rhs, %if.end99
  %52 = phi i1 [ true, %if.end99 ], [ %tobool101, %lor.rhs ]
  %lnot = xor i1 %52, true, !dbg !2957
  %lnot.ext = zext i1 %lnot to i32, !dbg !2957
  %cmp102 = icmp sle i32 %49, %lnot.ext, !dbg !2958
  br i1 %cmp102, label %if.then103, label %if.end112, !dbg !2959

if.then103:                                       ; preds = %lor.end
  %53 = load i32, i32* %n_files, align 4, !dbg !2960, !tbaa !2632
  %cmp104 = icmp sle i32 %53, 0, !dbg !2963
  br i1 %cmp104, label %if.then105, label %if.else107, !dbg !2964

if.then105:                                       ; preds = %if.then103
  %call106 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.26, i64 0, i64 0)) #9, !dbg !2965
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call106), !dbg !2966
  br label %if.end111, !dbg !2966

if.else107:                                       ; preds = %if.then103
  %call108 = call i8* @gettext(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.27, i64 0, i64 0)) #9, !dbg !2967
  %54 = load i8**, i8*** %file, align 8, !dbg !2968, !tbaa !2645
  %arrayidx109 = getelementptr inbounds i8*, i8** %54, i64 0, !dbg !2968, !ctir !184
  %55 = load i8*, i8** %arrayidx109, align 8, !dbg !2968, !tbaa !2645
  %call110 = call i8* @quotearg_style(i32 4, i8* %55), !dbg !2968
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call108, i8* %call110), !dbg !2969
  br label %if.end111

if.end111:                                        ; preds = %if.else107, %if.then105
  call void @usage(i32 1) #15, !dbg !2970
  unreachable, !dbg !2970

if.end112:                                        ; preds = %lor.end
  %56 = load i8, i8* %no_target_directory, align 1, !dbg !2971, !tbaa !2739
  %tobool113 = trunc i8 %56 to i1, !dbg !2971
  br i1 %tobool113, label %if.then114, label %if.else125, !dbg !2973

if.then114:                                       ; preds = %if.end112
  %57 = load i8*, i8** %target_directory, align 8, !dbg !2974, !tbaa !2645
  %tobool115 = icmp ne i8* %57, null, !dbg !2974
  br i1 %tobool115, label %if.then116, label %if.end118, !dbg !2977

if.then116:                                       ; preds = %if.then114
  %call117 = call i8* @gettext(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.28, i64 0, i64 0)) #9, !dbg !2978
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call117), !dbg !2978
  unreachable, !dbg !2978

if.end118:                                        ; preds = %if.then114
  %58 = load i32, i32* %n_files, align 4, !dbg !2979, !tbaa !2632
  %cmp119 = icmp slt i32 2, %58, !dbg !2981
  br i1 %cmp119, label %if.then120, label %if.end124, !dbg !2982

if.then120:                                       ; preds = %if.end118
  %call121 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.29, i64 0, i64 0)) #9, !dbg !2983
  %59 = load i8**, i8*** %file, align 8, !dbg !2985, !tbaa !2645
  %arrayidx122 = getelementptr inbounds i8*, i8** %59, i64 2, !dbg !2985, !ctir !184
  %60 = load i8*, i8** %arrayidx122, align 8, !dbg !2985, !tbaa !2645
  %call123 = call i8* @quotearg_style(i32 4, i8* %60), !dbg !2985
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call121, i8* %call123), !dbg !2986
  call void @usage(i32 1) #15, !dbg !2987
  unreachable, !dbg !2987

if.end124:                                        ; preds = %if.end118
  br label %if.end149, !dbg !2988

if.else125:                                       ; preds = %if.end112
  %61 = load i8, i8* @dir_arg, align 1, !dbg !2989, !tbaa !2739
  %tobool126 = trunc i8 %61 to i1, !dbg !2989
  br i1 %tobool126, label %if.end148, label %lor.lhs.false127, !dbg !2991

lor.lhs.false127:                                 ; preds = %if.else125
  %62 = load i8*, i8** %target_directory, align 8, !dbg !2992, !tbaa !2645
  %tobool128 = icmp ne i8* %62, null, !dbg !2992
  br i1 %tobool128, label %if.end148, label %if.then129, !dbg !2993

if.then129:                                       ; preds = %lor.lhs.false127
  %63 = load i32, i32* %n_files, align 4, !dbg !2994, !tbaa !2632
  %cmp130 = icmp sle i32 2, %63, !dbg !2997
  br i1 %cmp130, label %land.lhs.true131, label %if.else138, !dbg !2998

land.lhs.true131:                                 ; preds = %if.then129
  %64 = load i8**, i8*** %file, align 8, !dbg !2999, !tbaa !2645
  %65 = load i32, i32* %n_files, align 4, !dbg !3000, !tbaa !2632
  %sub132 = sub nsw i32 %65, 1, !dbg !3001
  %idxprom = sext i32 %sub132 to i64, !dbg !2999
  %arrayidx133 = getelementptr inbounds i8*, i8** %64, i64 %idxprom, !dbg !2999, !ctir !184
  %66 = load i8*, i8** %arrayidx133, align 8, !dbg !2999, !tbaa !2645
  %call134 = call zeroext i1 @target_directory_operand(i8* %66), !dbg !3002
  br i1 %call134, label %if.then135, label %if.else138, !dbg !3003

if.then135:                                       ; preds = %land.lhs.true131
  %67 = load i8**, i8*** %file, align 8, !dbg !3004, !tbaa !2645
  %68 = load i32, i32* %n_files, align 4, !dbg !3005, !tbaa !2632
  %dec = add nsw i32 %68, -1, !dbg !3005
  store i32 %dec, i32* %n_files, align 4, !dbg !3005, !tbaa !2632
  %idxprom136 = sext i32 %dec to i64, !dbg !3004
  %arrayidx137 = getelementptr inbounds i8*, i8** %67, i64 %idxprom136, !dbg !3004, !ctir !184
  %69 = load i8*, i8** %arrayidx137, align 8, !dbg !3004, !tbaa !2645
  store i8* %69, i8** %target_directory, align 8, !dbg !3006, !tbaa !2645
  br label %if.end147, !dbg !3007

if.else138:                                       ; preds = %land.lhs.true131, %if.then129
  %70 = load i32, i32* %n_files, align 4, !dbg !3008, !tbaa !2632
  %cmp139 = icmp slt i32 2, %70, !dbg !3010
  br i1 %cmp139, label %if.then140, label %if.end146, !dbg !3011

if.then140:                                       ; preds = %if.else138
  %call141 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22, i64 0, i64 0)) #9, !dbg !3012
  %71 = load i8**, i8*** %file, align 8, !dbg !3012, !tbaa !2645
  %72 = load i32, i32* %n_files, align 4, !dbg !3012, !tbaa !2632
  %sub142 = sub nsw i32 %72, 1, !dbg !3012
  %idxprom143 = sext i32 %sub142 to i64, !dbg !3012
  %arrayidx144 = getelementptr inbounds i8*, i8** %71, i64 %idxprom143, !dbg !3012, !ctir !184
  %73 = load i8*, i8** %arrayidx144, align 8, !dbg !3012, !tbaa !2645
  %call145 = call i8* @quotearg_style(i32 4, i8* %73), !dbg !3012
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call141, i8* %call145), !dbg !3012
  unreachable, !dbg !3012

if.end146:                                        ; preds = %if.else138
  br label %if.end147

if.end147:                                        ; preds = %if.end146, %if.then135
  br label %if.end148, !dbg !3013

if.end148:                                        ; preds = %if.end147, %lor.lhs.false127, %if.else125
  br label %if.end149

if.end149:                                        ; preds = %if.end148, %if.end124
  %74 = load i8*, i8** %specified_mode, align 8, !dbg !3014, !tbaa !2645
  %tobool150 = icmp ne i8* %74, null, !dbg !3014
  br i1 %tobool150, label %if.then151, label %if.end160, !dbg !3016

if.then151:                                       ; preds = %if.end149
  call void @llvm.dbg.declare(metadata %struct.mode_change** %change, metadata !3017, metadata !DIExpression()), !dbg !3019
  %75 = load i8*, i8** %specified_mode, align 8, !dbg !3020, !tbaa !2645
  %call152 = call %struct.mode_change* @mode_compile(i8* %75), !dbg !3021
  store %struct.mode_change* %call152, %struct.mode_change** %change, align 8, !dbg !3019, !tbaa !2645
  %76 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !3022, !tbaa !2645
  %tobool153 = icmp ne %struct.mode_change* %76, null, !dbg !3022
  br i1 %tobool153, label %if.end157, label %if.then154, !dbg !3024

if.then154:                                       ; preds = %if.then151
  %call155 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30, i64 0, i64 0)) #9, !dbg !3025
  %77 = load i8*, i8** %specified_mode, align 8, !dbg !3025, !tbaa !2645
  %call156 = call i8* @quote(i8* %77), !dbg !3025
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call155, i8* %call156), !dbg !3025
  unreachable, !dbg !3025

if.end157:                                        ; preds = %if.then151
  %78 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !3026, !tbaa !2645
  %call158 = call i32 @mode_adjust(i32 0, i1 zeroext false, i32 0, %struct.mode_change* %78, i32* null), !dbg !3027
  store i32 %call158, i32* @mode, align 4, !dbg !3028, !tbaa !2632
  %79 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !3029, !tbaa !2645
  %call159 = call i32 @mode_adjust(i32 0, i1 zeroext true, i32 0, %struct.mode_change* %79, i32* @dir_mode_bits), !dbg !3030
  store i32 %call159, i32* @dir_mode, align 4, !dbg !3031, !tbaa !2632
  %80 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !3032, !tbaa !2645
  %81 = bitcast %struct.mode_change* %80 to i8*, !dbg !3032
  call void @free(i8* %81) #9, !dbg !3033
  br label %if.end160, !dbg !3034

if.end160:                                        ; preds = %if.end157, %if.end149
  %82 = load i8, i8* %strip_program_specified, align 1, !dbg !3035, !tbaa !2739
  %tobool161 = trunc i8 %82 to i1, !dbg !3035
  br i1 %tobool161, label %land.lhs.true162, label %if.end166, !dbg !3037

land.lhs.true162:                                 ; preds = %if.end160
  %83 = load i8, i8* @strip_files, align 1, !dbg !3038, !tbaa !2739
  %tobool163 = trunc i8 %83 to i1, !dbg !3038
  br i1 %tobool163, label %if.end166, label %if.then164, !dbg !3039

if.then164:                                       ; preds = %land.lhs.true162
  %call165 = call i8* @gettext(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.31, i64 0, i64 0)) #9, !dbg !3040
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call165), !dbg !3041
  br label %if.end166, !dbg !3041

if.end166:                                        ; preds = %if.then164, %land.lhs.true162, %if.end160
  %84 = load i8, i8* @copy_only_if_needed, align 1, !dbg !3042, !tbaa !2739
  %tobool167 = trunc i8 %84 to i1, !dbg !3042
  br i1 %tobool167, label %land.lhs.true168, label %if.end173, !dbg !3044

land.lhs.true168:                                 ; preds = %if.end166
  %preserve_timestamps169 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %x, i32 0, i32 16, !dbg !3045, !ctir !132
  %85 = load i8, i8* %preserve_timestamps169, align 1, !dbg !3045, !tbaa !2823
  %tobool170 = trunc i8 %85 to i1, !dbg !3045, !ctir !142
  br i1 %tobool170, label %if.then171, label %if.end173, !dbg !3046

if.then171:                                       ; preds = %land.lhs.true168
  %call172 = call i8* @gettext(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.32, i64 0, i64 0)) #9, !dbg !3047
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call172), !dbg !3049
  call void @usage(i32 1) #15, !dbg !3050
  unreachable, !dbg !3050

if.end173:                                        ; preds = %land.lhs.true168, %if.end166
  %86 = load i8, i8* @copy_only_if_needed, align 1, !dbg !3051, !tbaa !2739
  %tobool174 = trunc i8 %86 to i1, !dbg !3051
  br i1 %tobool174, label %land.lhs.true175, label %if.end179, !dbg !3053

land.lhs.true175:                                 ; preds = %if.end173
  %87 = load i8, i8* @strip_files, align 1, !dbg !3054, !tbaa !2739
  %tobool176 = trunc i8 %87 to i1, !dbg !3054
  br i1 %tobool176, label %if.then177, label %if.end179, !dbg !3055

if.then177:                                       ; preds = %land.lhs.true175
  %call178 = call i8* @gettext(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.33, i64 0, i64 0)) #9, !dbg !3056
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call178), !dbg !3058
  call void @usage(i32 1) #15, !dbg !3059
  unreachable, !dbg !3059

if.end179:                                        ; preds = %land.lhs.true175, %if.end173
  %88 = load i8, i8* @copy_only_if_needed, align 1, !dbg !3060, !tbaa !2739
  %tobool180 = trunc i8 %88 to i1, !dbg !3060
  br i1 %tobool180, label %land.lhs.true181, label %if.end185, !dbg !3062

land.lhs.true181:                                 ; preds = %if.end179
  %89 = load i32, i32* @mode, align 4, !dbg !3063, !tbaa !2632
  %call182 = call zeroext i1 @extra_mode(i32 %89), !dbg !3064
  br i1 %call182, label %if.then183, label %if.end185, !dbg !3065

if.then183:                                       ; preds = %land.lhs.true181
  %call184 = call i8* @gettext(i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.34, i64 0, i64 0)) #9, !dbg !3066
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call184), !dbg !3067
  br label %if.end185, !dbg !3067

if.end185:                                        ; preds = %if.then183, %land.lhs.true181, %if.end179
  call void @get_ids(), !dbg !3068
  %90 = load i8, i8* @dir_arg, align 1, !dbg !3069, !tbaa !2739
  %tobool186 = trunc i8 %90 to i1, !dbg !3069
  br i1 %tobool186, label %if.then187, label %if.else189, !dbg !3071

if.then187:                                       ; preds = %if.end185
  %91 = load i32, i32* %n_files, align 4, !dbg !3072, !tbaa !2632
  %92 = load i8**, i8*** %file, align 8, !dbg !3073, !tbaa !2645
  %93 = bitcast %struct.cp_options* %x to i8*, !dbg !3074
  %call188 = call i32 @savewd_process_files(i32 %91, i8** %92, i32 (i8*, %struct.savewd*, i8*)* @process_dir, i8* %93), !dbg !3075
  store i32 %call188, i32* %exit_status, align 4, !dbg !3076, !tbaa !2632
  br label %if.end213, !dbg !3077

if.else189:                                       ; preds = %if.end185
  call void @hash_init(), !dbg !3078
  %94 = load i8*, i8** %target_directory, align 8, !dbg !3080, !tbaa !2645
  %tobool190 = icmp ne i8* %94, null, !dbg !3080
  br i1 %tobool190, label %if.else203, label %if.then191, !dbg !3082

if.then191:                                       ; preds = %if.else189
  %95 = load i8, i8* %mkdir_and_install, align 1, !dbg !3083, !tbaa !2739
  %tobool192 = trunc i8 %95 to i1, !dbg !3083
  br i1 %tobool192, label %cond.true193, label %cond.false197, !dbg !3086

cond.true193:                                     ; preds = %if.then191
  %96 = load i8**, i8*** %file, align 8, !dbg !3087, !tbaa !2645
  %arrayidx194 = getelementptr inbounds i8*, i8** %96, i64 0, !dbg !3087, !ctir !184
  %97 = load i8*, i8** %arrayidx194, align 8, !dbg !3087, !tbaa !2645
  %98 = load i8**, i8*** %file, align 8, !dbg !3088, !tbaa !2645
  %arrayidx195 = getelementptr inbounds i8*, i8** %98, i64 1, !dbg !3088, !ctir !184
  %99 = load i8*, i8** %arrayidx195, align 8, !dbg !3088, !tbaa !2645
  %call196 = call zeroext i1 @install_file_in_file_parents(i8* %97, i8* %99, %struct.cp_options* %x), !dbg !3089
  br i1 %call196, label %if.end202, label %if.then201, !dbg !3083

cond.false197:                                    ; preds = %if.then191
  %100 = load i8**, i8*** %file, align 8, !dbg !3090, !tbaa !2645
  %arrayidx198 = getelementptr inbounds i8*, i8** %100, i64 0, !dbg !3090, !ctir !184
  %101 = load i8*, i8** %arrayidx198, align 8, !dbg !3090, !tbaa !2645
  %102 = load i8**, i8*** %file, align 8, !dbg !3091, !tbaa !2645
  %arrayidx199 = getelementptr inbounds i8*, i8** %102, i64 1, !dbg !3091, !ctir !184
  %103 = load i8*, i8** %arrayidx199, align 8, !dbg !3091, !tbaa !2645
  %call200 = call zeroext i1 @install_file_in_file(i8* %101, i8* %103, %struct.cp_options* %x), !dbg !3092
  br i1 %call200, label %if.end202, label %if.then201, !dbg !3086

if.then201:                                       ; preds = %cond.false197, %cond.true193
  store i32 1, i32* %exit_status, align 4, !dbg !3093, !tbaa !2632
  br label %if.end202, !dbg !3094

if.end202:                                        ; preds = %if.then201, %cond.false197, %cond.true193
  br label %if.end212, !dbg !3095

if.else203:                                       ; preds = %if.else189
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3096, metadata !DIExpression()), !dbg !3098
  call void @dest_info_init(%struct.cp_options* %x), !dbg !3099
  store i32 0, i32* %i, align 4, !dbg !3100, !tbaa !2632
  br label %for.cond, !dbg !3102

for.cond:                                         ; preds = %for.inc, %if.else203
  %104 = load i32, i32* %i, align 4, !dbg !3103, !tbaa !2632
  %105 = load i32, i32* %n_files, align 4, !dbg !3105, !tbaa !2632
  %cmp204 = icmp slt i32 %104, %105, !dbg !3106
  br i1 %cmp204, label %for.body, label %for.end, !dbg !3107

for.body:                                         ; preds = %for.cond
  %106 = load i8**, i8*** %file, align 8, !dbg !3108, !tbaa !2645
  %107 = load i32, i32* %i, align 4, !dbg !3110, !tbaa !2632
  %idxprom205 = sext i32 %107 to i64, !dbg !3108
  %arrayidx206 = getelementptr inbounds i8*, i8** %106, i64 %idxprom205, !dbg !3108, !ctir !184
  %108 = load i8*, i8** %arrayidx206, align 8, !dbg !3108, !tbaa !2645
  %109 = load i8*, i8** %target_directory, align 8, !dbg !3111, !tbaa !2645
  %110 = load i32, i32* %i, align 4, !dbg !3112, !tbaa !2632
  %cmp207 = icmp eq i32 %110, 0, !dbg !3113
  br i1 %cmp207, label %land.rhs, label %land.end, !dbg !3114

land.rhs:                                         ; preds = %for.body
  %111 = load i8, i8* %mkdir_and_install, align 1, !dbg !3115, !tbaa !2739
  %tobool208 = trunc i8 %111 to i1, !dbg !3115
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.body
  %112 = phi i1 [ false, %for.body ], [ %tobool208, %land.rhs ], !dbg !3116
  %call209 = call zeroext i1 @install_file_in_dir(i8* %108, i8* %109, %struct.cp_options* %x, i1 zeroext %112), !dbg !3117
  br i1 %call209, label %if.end211, label %if.then210, !dbg !3118

if.then210:                                       ; preds = %land.end
  store i32 1, i32* %exit_status, align 4, !dbg !3119, !tbaa !2632
  br label %if.end211, !dbg !3120

if.end211:                                        ; preds = %if.then210, %land.end
  br label %for.inc, !dbg !3121

for.inc:                                          ; preds = %if.end211
  %113 = load i32, i32* %i, align 4, !dbg !3122, !tbaa !2632
  %inc = add nsw i32 %113, 1, !dbg !3122
  store i32 %inc, i32* %i, align 4, !dbg !3122, !tbaa !2632
  br label %for.cond, !dbg !3123, !llvm.loop !3124

for.end:                                          ; preds = %for.cond
  br label %if.end212

if.end212:                                        ; preds = %for.end, %if.end202
  br label %if.end213

if.end213:                                        ; preds = %if.end212, %if.then187
  %114 = load i32, i32* %exit_status, align 4, !dbg !3126, !tbaa !2632
  ret i32 %114, !dbg !3127
}

; Function Attrs: nounwind
declare dso_local i8* @bindtextdomain(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i8* @textdomain(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @atexit(void ()*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @cp_option_init(%struct.cp_options* %x) #4 !dbg !3128 !ctir !216 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3129, metadata !DIExpression()), !dbg !3130
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3131, !tbaa !2645
  call void @cp_options_default(%struct.cp_options* %0), !dbg !3132
  %1 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3133, !tbaa !2645
  %copy_as_regular = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1, i32 0, i32 5, !dbg !3134, !ctir !132
  store i8 1, i8* %copy_as_regular, align 4, !dbg !3135, !tbaa !3136, !ctir !142
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3137, !tbaa !2645
  %reflink_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 36, !dbg !3138, !ctir !132
  store i32 0, i32* %reflink_mode, align 8, !dbg !3139, !tbaa !3140, !ctir !95
  %3 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3141, !tbaa !2645
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 1, !dbg !3142, !ctir !132
  store i32 4, i32* %dereference, align 4, !dbg !3143, !tbaa !3144, !ctir !76
  %4 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3145, !tbaa !2645
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %4, i32 0, i32 6, !dbg !3146, !ctir !132
  store i8 1, i8* %unlink_dest_before_opening, align 1, !dbg !3147, !tbaa !3148, !ctir !142
  %5 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3149, !tbaa !2645
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 7, !dbg !3150, !ctir !132
  store i8 0, i8* %unlink_dest_after_failed_open, align 2, !dbg !3151, !tbaa !3152, !ctir !142
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3153, !tbaa !2645
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 8, !dbg !3154, !ctir !132
  store i8 0, i8* %hard_link, align 1, !dbg !3155, !tbaa !3156, !ctir !142
  %7 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3157, !tbaa !2645
  %interactive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 2, !dbg !3158, !ctir !132
  store i32 4, i32* %interactive, align 8, !dbg !3159, !tbaa !3160, !ctir !83
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3161, !tbaa !2645
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 9, !dbg !3162, !ctir !132
  store i8 0, i8* %move_mode, align 8, !dbg !3163, !tbaa !3164, !ctir !142
  %9 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3165, !tbaa !2645
  %install_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 10, !dbg !3166, !ctir !132
  store i8 1, i8* %install_mode, align 1, !dbg !3167, !tbaa !3168, !ctir !142
  %10 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3169, !tbaa !2645
  %one_file_system = getelementptr inbounds %struct.cp_options, %struct.cp_options* %10, i32 0, i32 13, !dbg !3170, !ctir !132
  store i8 0, i8* %one_file_system, align 4, !dbg !3171, !tbaa !3172, !ctir !142
  %11 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3173, !tbaa !2645
  %preserve_ownership = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 14, !dbg !3174, !ctir !132
  store i8 0, i8* %preserve_ownership, align 1, !dbg !3175, !tbaa !3176, !ctir !142
  %12 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3177, !tbaa !2645
  %preserve_links = getelementptr inbounds %struct.cp_options, %struct.cp_options* %12, i32 0, i32 19, !dbg !3178, !ctir !132
  store i8 0, i8* %preserve_links, align 2, !dbg !3179, !tbaa !3180, !ctir !142
  %13 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3181, !tbaa !2645
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %13, i32 0, i32 15, !dbg !3182, !ctir !132
  store i8 0, i8* %preserve_mode, align 2, !dbg !3183, !tbaa !3184, !ctir !142
  %14 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3185, !tbaa !2645
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %14, i32 0, i32 16, !dbg !3186, !ctir !132
  store i8 0, i8* %preserve_timestamps, align 1, !dbg !3187, !tbaa !2823, !ctir !142
  %15 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3188, !tbaa !2645
  %explicit_no_preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %15, i32 0, i32 17, !dbg !3189, !ctir !132
  store i8 0, i8* %explicit_no_preserve_mode, align 8, !dbg !3190, !tbaa !3191, !ctir !142
  %16 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3192, !tbaa !2645
  %reduce_diagnostics = getelementptr inbounds %struct.cp_options, %struct.cp_options* %16, i32 0, i32 26, !dbg !3193, !ctir !132
  store i8 0, i8* %reduce_diagnostics, align 1, !dbg !3194, !tbaa !3195, !ctir !142
  %17 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3196, !tbaa !2645
  %data_copy_required = getelementptr inbounds %struct.cp_options, %struct.cp_options* %17, i32 0, i32 20, !dbg !3197, !ctir !132
  store i8 1, i8* %data_copy_required, align 1, !dbg !3198, !tbaa !3199, !ctir !142
  %18 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3200, !tbaa !2645
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %18, i32 0, i32 21, !dbg !3201, !ctir !132
  store i8 0, i8* %require_preserve, align 4, !dbg !3202, !tbaa !3203, !ctir !142
  %19 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3204, !tbaa !2645
  %require_preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %19, i32 0, i32 25, !dbg !3205, !ctir !132
  store i8 0, i8* %require_preserve_xattr, align 8, !dbg !3206, !tbaa !3207, !ctir !142
  %20 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3208, !tbaa !2645
  %recursive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %20, i32 0, i32 27, !dbg !3209, !ctir !132
  store i8 0, i8* %recursive, align 2, !dbg !3210, !tbaa !3211, !ctir !142
  %21 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3212, !tbaa !2645
  %sparse_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %21, i32 0, i32 3, !dbg !3213, !ctir !132
  store i32 2, i32* %sparse_mode, align 4, !dbg !3214, !tbaa !3215, !ctir !89
  %22 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3216, !tbaa !2645
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %22, i32 0, i32 29, !dbg !3217, !ctir !132
  store i8 0, i8* %symbolic_link, align 4, !dbg !3218, !tbaa !3219, !ctir !142
  %23 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3220, !tbaa !2645
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %23, i32 0, i32 0, !dbg !3221, !ctir !132
  store i32 0, i32* %backup_type, align 8, !dbg !3222, !tbaa !2924, !ctir !68
  %24 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3223, !tbaa !2645
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %24, i32 0, i32 28, !dbg !3224, !ctir !132
  store i8 1, i8* %set_mode, align 1, !dbg !3225, !tbaa !3226, !ctir !142
  %25 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3227, !tbaa !2645
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %25, i32 0, i32 4, !dbg !3228, !ctir !132
  store i32 384, i32* %mode, align 8, !dbg !3229, !tbaa !3230, !ctir !139
  %26 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3231, !tbaa !2645
  %stdin_tty = getelementptr inbounds %struct.cp_options, %struct.cp_options* %26, i32 0, i32 32, !dbg !3232, !ctir !132
  store i8 0, i8* %stdin_tty, align 1, !dbg !3233, !tbaa !3234, !ctir !142
  %27 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3235, !tbaa !2645
  %open_dangling_dest_symlink = getelementptr inbounds %struct.cp_options, %struct.cp_options* %27, i32 0, i32 33, !dbg !3236, !ctir !132
  store i8 0, i8* %open_dangling_dest_symlink, align 8, !dbg !3237, !tbaa !3238, !ctir !142
  %28 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3239, !tbaa !2645
  %update = getelementptr inbounds %struct.cp_options, %struct.cp_options* %28, i32 0, i32 30, !dbg !3240, !ctir !132
  store i8 0, i8* %update, align 1, !dbg !3241, !tbaa !3242, !ctir !142
  %29 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3243, !tbaa !2645
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %29, i32 0, i32 23, !dbg !3244, !ctir !132
  store i8 0, i8* %require_preserve_context, align 2, !dbg !3245, !tbaa !3246, !ctir !142
  %30 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3247, !tbaa !2645
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %30, i32 0, i32 22, !dbg !3248, !ctir !132
  store i8 0, i8* %preserve_security_context, align 1, !dbg !3249, !tbaa !2847, !ctir !142
  %31 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3250, !tbaa !2645
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %31, i32 0, i32 18, !dbg !3251, !ctir !132
  store i8 0, i8* %set_security_context, align 1, !dbg !3252, !tbaa !2863, !ctir !142
  %32 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3253, !tbaa !2645
  %preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %32, i32 0, i32 24, !dbg !3254, !ctir !132
  store i8 0, i8* %preserve_xattr, align 1, !dbg !3255, !tbaa !3256, !ctir !142
  %33 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3257, !tbaa !2645
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %33, i32 0, i32 31, !dbg !3258, !ctir !132
  store i8 0, i8* %verbose, align 2, !dbg !3259, !tbaa !2809, !ctir !142
  %34 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3260, !tbaa !2645
  %dest_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %34, i32 0, i32 37, !dbg !3261, !ctir !132
  store %struct.hash_table* null, %struct.hash_table** %dest_info, align 8, !dbg !3262, !tbaa !3263, !ctir !175
  %35 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3264, !tbaa !2645
  %src_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %35, i32 0, i32 38, !dbg !3265, !ctir !132
  store %struct.hash_table* null, %struct.hash_table** %src_info, align 8, !dbg !3266, !tbaa !3267, !ctir !175
  ret void, !dbg !3268
}

; Function Attrs: nounwind
declare dso_local i32 @umask(i32) #2

; Function Attrs: nounwind
declare dso_local i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #2

; Function Attrs: nounwind
declare dso_local void (i32)* @signal(i32, void (i32)*) #2

declare dso_local void @error(i32, i32, i8*, ...) #3

; Function Attrs: nounwind
declare dso_local i32 @stat(i8*, %struct.stat*) #2

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #8

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @se_const(i8* %sctx) #4 !dbg !3269 !ctir !218 {
entry:
  %sctx.addr = alloca i8*, align 8
  store i8* %sctx, i8** %sctx.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %sctx.addr, metadata !3270, metadata !DIExpression()), !dbg !3271
  %0 = load i8*, i8** %sctx.addr, align 8, !dbg !3272, !tbaa !2645
  ret i8* %0, !dbg !3273
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @target_directory_operand(i8* %file) #4 !dbg !3274 !ctir !220 {
entry:
  %file.addr = alloca i8*, align 8
  %b = alloca i8*, align 8, !ctir !180
  %blen = alloca i64, align 8, !ctir !55
  %looks_like_a_dir = alloca i8, align 1, !ctir !142
  %st = alloca %struct.stat, align 8, !ctir !270
  %err = alloca i32, align 4, !ctir !7
  %is_a_dir = alloca i8, align 1, !ctir !142
  store i8* %file, i8** %file.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !3275, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.declare(metadata i8** %b, metadata !3277, metadata !DIExpression()), !dbg !3278
  %0 = load i8*, i8** %file.addr, align 8, !dbg !3279, !tbaa !2645
  %call = call i8* @last_component(i8* %0) #14, !dbg !3280
  store i8* %call, i8** %b, align 8, !dbg !3278, !tbaa !2645
  call void @llvm.dbg.declare(metadata i64* %blen, metadata !3281, metadata !DIExpression()), !dbg !3282
  %1 = load i8*, i8** %b, align 8, !dbg !3283, !tbaa !2645
  %call1 = call i64 @strlen(i8* %1) #14, !dbg !3284
  store i64 %call1, i64* %blen, align 8, !dbg !3282, !tbaa !3285
  call void @llvm.dbg.declare(metadata i8* %looks_like_a_dir, metadata !3286, metadata !DIExpression()), !dbg !3287
  %2 = load i64, i64* %blen, align 8, !dbg !3288, !tbaa !3285
  %cmp = icmp eq i64 %2, 0, !dbg !3289
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !3290

lor.rhs:                                          ; preds = %entry
  %3 = load i8*, i8** %b, align 8, !dbg !3291, !tbaa !2645
  %4 = load i64, i64* %blen, align 8, !dbg !3291, !tbaa !3285
  %sub = sub i64 %4, 1, !dbg !3291
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 %sub, !dbg !3291, !ctir !180
  %5 = load i8, i8* %arrayidx, align 1, !dbg !3291, !tbaa !3292
  %conv = sext i8 %5 to i32, !dbg !3291
  %cmp2 = icmp eq i32 %conv, 47, !dbg !3291
  br label %lor.end, !dbg !3290

lor.end:                                          ; preds = %lor.rhs, %entry
  %6 = phi i1 [ true, %entry ], [ %cmp2, %lor.rhs ]
  %frombool = zext i1 %6 to i8, !dbg !3287
  store i8 %frombool, i8* %looks_like_a_dir, align 1, !dbg !3287, !tbaa !2739
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !3293, metadata !DIExpression()), !dbg !3294
  call void @llvm.dbg.declare(metadata i32* %err, metadata !3295, metadata !DIExpression()), !dbg !3296
  %7 = load i8*, i8** %file.addr, align 8, !dbg !3297, !tbaa !2645
  %call4 = call i32 @stat(i8* %7, %struct.stat* %st) #9, !dbg !3298
  %cmp5 = icmp eq i32 %call4, 0, !dbg !3299
  br i1 %cmp5, label %cond.true, label %cond.false, !dbg !3298

cond.true:                                        ; preds = %lor.end
  br label %cond.end, !dbg !3298

cond.false:                                       ; preds = %lor.end
  %call7 = call i32* @__errno_location() #16, !dbg !3300
  %8 = load i32, i32* %call7, align 4, !dbg !3300, !tbaa !2632, !ctir !7
  br label %cond.end, !dbg !3298

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %8, %cond.false ], !dbg !3298
  store i32 %cond, i32* %err, align 4, !dbg !3296, !tbaa !2632
  call void @llvm.dbg.declare(metadata i8* %is_a_dir, metadata !3301, metadata !DIExpression()), !dbg !3302
  %9 = load i32, i32* %err, align 4, !dbg !3303, !tbaa !2632
  %tobool = icmp ne i32 %9, 0, !dbg !3303
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !3304

land.rhs:                                         ; preds = %cond.end
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !3305, !ctir !270
  %10 = load i32, i32* %st_mode, align 8, !dbg !3305, !tbaa !2911, !ctir !140
  %and = and i32 %10, 61440, !dbg !3305
  %cmp8 = icmp eq i32 %and, 16384, !dbg !3305
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.end
  %11 = phi i1 [ false, %cond.end ], [ %cmp8, %land.rhs ], !dbg !3306
  %frombool10 = zext i1 %11 to i8, !dbg !3302
  store i8 %frombool10, i8* %is_a_dir, align 1, !dbg !3302, !tbaa !2739
  %12 = load i32, i32* %err, align 4, !dbg !3307, !tbaa !2632
  %tobool11 = icmp ne i32 %12, 0, !dbg !3307
  br i1 %tobool11, label %land.lhs.true, label %if.end, !dbg !3309

land.lhs.true:                                    ; preds = %land.end
  %13 = load i32, i32* %err, align 4, !dbg !3310, !tbaa !2632
  %cmp12 = icmp ne i32 %13, 2, !dbg !3311
  br i1 %cmp12, label %if.then, label %if.end, !dbg !3312

if.then:                                          ; preds = %land.lhs.true
  %14 = load i32, i32* %err, align 4, !dbg !3313, !tbaa !2632
  %call14 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i64 0, i64 0)) #9, !dbg !3313
  %15 = load i8*, i8** %file.addr, align 8, !dbg !3313, !tbaa !2645
  %call15 = call i8* @quotearg_style(i32 4, i8* %15), !dbg !3313
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %14, i8* %call14, i8* %call15), !dbg !3313
  unreachable, !dbg !3313

if.end:                                           ; preds = %land.lhs.true, %land.end
  %16 = load i8, i8* %is_a_dir, align 1, !dbg !3314, !tbaa !2739
  %tobool16 = trunc i8 %16 to i1, !dbg !3314
  %conv17 = zext i1 %tobool16 to i32, !dbg !3314
  %17 = load i8, i8* %looks_like_a_dir, align 1, !dbg !3316, !tbaa !2739
  %tobool18 = trunc i8 %17 to i1, !dbg !3316
  %conv19 = zext i1 %tobool18 to i32, !dbg !3316
  %cmp20 = icmp slt i32 %conv17, %conv19, !dbg !3317
  br i1 %cmp20, label %if.then22, label %if.end25, !dbg !3318

if.then22:                                        ; preds = %if.end
  %18 = load i32, i32* %err, align 4, !dbg !3319, !tbaa !2632
  %call23 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.22, i64 0, i64 0)) #9, !dbg !3319
  %19 = load i8*, i8** %file.addr, align 8, !dbg !3319, !tbaa !2645
  %call24 = call i8* @quotearg_style(i32 4, i8* %19), !dbg !3319
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %18, i8* %call23, i8* %call24), !dbg !3319
  unreachable, !dbg !3319

if.end25:                                         ; preds = %if.end
  %20 = load i8, i8* %is_a_dir, align 1, !dbg !3320, !tbaa !2739
  %tobool26 = trunc i8 %20 to i1, !dbg !3320
  ret i1 %tobool26, !dbg !3321
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @extra_mode(i32 %input) #4 !dbg !3322 !ctir !222 {
entry:
  %input.addr = alloca i32, align 4
  %mask = alloca i32, align 4, !ctir !139
  store i32 %input, i32* %input.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %input.addr, metadata !3323, metadata !DIExpression()), !dbg !3324
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !3325, metadata !DIExpression()), !dbg !3326
  store i32 61951, i32* %mask, align 4, !dbg !3326, !tbaa !2632
  %0 = load i32, i32* %input.addr, align 4, !dbg !3327, !tbaa !2632
  %1 = load i32, i32* %mask, align 4, !dbg !3328, !tbaa !2632
  %neg = xor i32 %1, -1, !dbg !3329
  %and = and i32 %0, %neg, !dbg !3330
  %tobool = icmp ne i32 %and, 0, !dbg !3331
  %lnot = xor i1 %tobool, true, !dbg !3331
  %lnot1 = xor i1 %lnot, true, !dbg !3332
  ret i1 %lnot1, !dbg !3333
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @get_ids() #4 !dbg !3334 !ctir !200 {
entry:
  %pw = alloca %struct.passwd*, align 8, !ctir !224
  %gr = alloca %struct.group*, align 8, !ctir !235
  %tmp = alloca i64, align 8, !ctir !57
  %tmp17 = alloca i64, align 8, !ctir !57
  call void @llvm.dbg.declare(metadata %struct.passwd** %pw, metadata !3335, metadata !DIExpression()), !dbg !3336
  call void @llvm.dbg.declare(metadata %struct.group** %gr, metadata !3337, metadata !DIExpression()), !dbg !3338
  %0 = load i8*, i8** @owner_name, align 8, !dbg !3339, !tbaa !2645
  %tobool = icmp ne i8* %0, null, !dbg !3339
  br i1 %tobool, label %if.then, label %if.else9, !dbg !3341

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** @owner_name, align 8, !dbg !3342, !tbaa !2645
  %call = call %struct.passwd* @getpwnam(i8* %1), !dbg !3344
  store %struct.passwd* %call, %struct.passwd** %pw, align 8, !dbg !3345, !tbaa !2645
  %2 = load %struct.passwd*, %struct.passwd** %pw, align 8, !dbg !3346, !tbaa !2645
  %cmp = icmp eq %struct.passwd* %2, null, !dbg !3348
  br i1 %cmp, label %if.then1, label %if.else, !dbg !3349

if.then1:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !3350, metadata !DIExpression()), !dbg !3352
  %3 = load i8*, i8** @owner_name, align 8, !dbg !3353, !tbaa !2645
  %call2 = call i32 @xstrtoul(i8* %3, i8** null, i32 0, i64* %tmp, i8* null), !dbg !3355
  %cmp3 = icmp ne i32 %call2, 0, !dbg !3356
  br i1 %cmp3, label %if.then5, label %lor.lhs.false, !dbg !3357

lor.lhs.false:                                    ; preds = %if.then1
  %4 = load i64, i64* %tmp, align 8, !dbg !3358, !tbaa !3285
  %cmp4 = icmp ult i64 4294967295, %4, !dbg !3359
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !3360

if.then5:                                         ; preds = %lor.lhs.false, %if.then1
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.70, i64 0, i64 0)) #9, !dbg !3361
  %5 = load i8*, i8** @owner_name, align 8, !dbg !3361, !tbaa !2645
  %call7 = call i8* @quote(i8* %5), !dbg !3361
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call6, i8* %call7), !dbg !3361
  unreachable, !dbg !3361

if.end:                                           ; preds = %lor.lhs.false
  %6 = load i64, i64* %tmp, align 8, !dbg !3362, !tbaa !3285
  %conv = trunc i64 %6 to i32, !dbg !3362
  store i32 %conv, i32* @owner_id, align 4, !dbg !3363, !tbaa !2632
  br label %if.end8, !dbg !3364

if.else:                                          ; preds = %if.then
  %7 = load %struct.passwd*, %struct.passwd** %pw, align 8, !dbg !3365, !tbaa !2645
  %pw_uid = getelementptr inbounds %struct.passwd, %struct.passwd* %7, i32 0, i32 2, !dbg !3366, !ctir !225
  %8 = load i32, i32* %pw_uid, align 8, !dbg !3366, !tbaa !3367, !ctir !128
  store i32 %8, i32* @owner_id, align 4, !dbg !3369, !tbaa !2632
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.end
  call void @endpwent(), !dbg !3370
  br label %if.end10, !dbg !3371

if.else9:                                         ; preds = %entry
  store i32 -1, i32* @owner_id, align 4, !dbg !3372, !tbaa !2632
  br label %if.end10

if.end10:                                         ; preds = %if.else9, %if.end8
  %9 = load i8*, i8** @group_name, align 8, !dbg !3373, !tbaa !2645
  %tobool11 = icmp ne i8* %9, null, !dbg !3373
  br i1 %tobool11, label %if.then12, label %if.else31, !dbg !3375

if.then12:                                        ; preds = %if.end10
  %10 = load i8*, i8** @group_name, align 8, !dbg !3376, !tbaa !2645
  %call13 = call %struct.group* @getgrnam(i8* %10), !dbg !3378
  store %struct.group* %call13, %struct.group** %gr, align 8, !dbg !3379, !tbaa !2645
  %11 = load %struct.group*, %struct.group** %gr, align 8, !dbg !3380, !tbaa !2645
  %cmp14 = icmp eq %struct.group* %11, null, !dbg !3382
  br i1 %cmp14, label %if.then16, label %if.else29, !dbg !3383

if.then16:                                        ; preds = %if.then12
  call void @llvm.dbg.declare(metadata i64* %tmp17, metadata !3384, metadata !DIExpression()), !dbg !3386
  %12 = load i8*, i8** @group_name, align 8, !dbg !3387, !tbaa !2645
  %call18 = call i32 @xstrtoul(i8* %12, i8** null, i32 0, i64* %tmp17, i8* null), !dbg !3389
  %cmp19 = icmp ne i32 %call18, 0, !dbg !3390
  br i1 %cmp19, label %if.then24, label %lor.lhs.false21, !dbg !3391

lor.lhs.false21:                                  ; preds = %if.then16
  %13 = load i64, i64* %tmp17, align 8, !dbg !3392, !tbaa !3285
  %cmp22 = icmp ult i64 4294967295, %13, !dbg !3393
  br i1 %cmp22, label %if.then24, label %if.end27, !dbg !3394

if.then24:                                        ; preds = %lor.lhs.false21, %if.then16
  %call25 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.71, i64 0, i64 0)) #9, !dbg !3395
  %14 = load i8*, i8** @group_name, align 8, !dbg !3395, !tbaa !2645
  %call26 = call i8* @quote(i8* %14), !dbg !3395
  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %call25, i8* %call26), !dbg !3395
  unreachable, !dbg !3395

if.end27:                                         ; preds = %lor.lhs.false21
  %15 = load i64, i64* %tmp17, align 8, !dbg !3396, !tbaa !3285
  %conv28 = trunc i64 %15 to i32, !dbg !3396
  store i32 %conv28, i32* @group_id, align 4, !dbg !3397, !tbaa !2632
  br label %if.end30, !dbg !3398

if.else29:                                        ; preds = %if.then12
  %16 = load %struct.group*, %struct.group** %gr, align 8, !dbg !3399, !tbaa !2645
  %gr_gid = getelementptr inbounds %struct.group, %struct.group* %16, i32 0, i32 2, !dbg !3400, !ctir !236
  %17 = load i32, i32* %gr_gid, align 8, !dbg !3400, !tbaa !3401, !ctir !130
  store i32 %17, i32* @group_id, align 4, !dbg !3403, !tbaa !2632
  br label %if.end30

if.end30:                                         ; preds = %if.else29, %if.end27
  call void @endgrent(), !dbg !3404
  br label %if.end32, !dbg !3405

if.else31:                                        ; preds = %if.end10
  store i32 -1, i32* @group_id, align 4, !dbg !3406, !tbaa !2632
  br label %if.end32

if.end32:                                         ; preds = %if.else31, %if.end30
  ret void, !dbg !3407
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @process_dir(i8* %dir, %struct.savewd* %wd, i8* %options) #4 !dbg !3408 !ctir !243 {
entry:
  %dir.addr = alloca i8*, align 8
  %wd.addr = alloca %struct.savewd*, align 8
  %options.addr = alloca i8*, align 8
  %x = alloca %struct.cp_options*, align 8, !ctir !246
  %ret = alloca i32, align 4, !ctir !7
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !3409, metadata !DIExpression()), !dbg !3410
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !3411, metadata !DIExpression()), !dbg !3412
  store i8* %options, i8** %options.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %options.addr, metadata !3413, metadata !DIExpression()), !dbg !3414
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x, metadata !3415, metadata !DIExpression()), !dbg !3416
  %0 = load i8*, i8** %options.addr, align 8, !dbg !3417, !tbaa !2645
  %1 = bitcast i8* %0 to %struct.cp_options*, !dbg !3417
  store %struct.cp_options* %1, %struct.cp_options** %x, align 8, !dbg !3416, !tbaa !2645
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !3418, metadata !DIExpression()), !dbg !3419
  %2 = load i8*, i8** %dir.addr, align 8, !dbg !3420, !tbaa !2645
  %3 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !3421, !tbaa !2645
  %4 = load i8*, i8** %options.addr, align 8, !dbg !3422, !tbaa !2645
  %5 = load i32, i32* @dir_mode, align 4, !dbg !3423, !tbaa !2632
  %6 = load i32, i32* @dir_mode_bits, align 4, !dbg !3424, !tbaa !2632
  %7 = load i32, i32* @owner_id, align 4, !dbg !3425, !tbaa !2632
  %8 = load i32, i32* @group_id, align 4, !dbg !3426, !tbaa !2632
  %call = call zeroext i1 @make_dir_parents(i8* %2, %struct.savewd* %3, i32 (i8*, i8*, i8*)* @make_ancestor, i8* %4, i32 %5, void (i8*, i8*)* @announce_mkdir, i32 %6, i32 %7, i32 %8, i1 zeroext false), !dbg !3427
  %9 = zext i1 %call to i64, !dbg !3427
  %cond = select i1 %call, i32 0, i32 1, !dbg !3427
  store i32 %cond, i32* %ret, align 4, !dbg !3419, !tbaa !2632
  %10 = load i32, i32* %ret, align 4, !dbg !3428, !tbaa !2632
  %cmp = icmp eq i32 %10, 0, !dbg !3430
  br i1 %cmp, label %land.lhs.true, label %if.end10, !dbg !3431

land.lhs.true:                                    ; preds = %entry
  %11 = load %struct.cp_options*, %struct.cp_options** %x, align 8, !dbg !3432, !tbaa !2645
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 18, !dbg !3433, !ctir !247
  %12 = load i8, i8* %set_security_context, align 1, !dbg !3433, !tbaa !2863
  %tobool = trunc i8 %12 to i1, !dbg !3433, !ctir !142
  br i1 %tobool, label %if.then, label %if.end10, !dbg !3434

if.then:                                          ; preds = %land.lhs.true
  %13 = load i8*, i8** %dir.addr, align 8, !dbg !3435, !tbaa !2645
  %call1 = call i8* @last_component(i8* %13) #14, !dbg !3438
  %call2 = call zeroext i1 @restorecon(i8* %call1, i1 zeroext false, i1 zeroext false), !dbg !3439
  br i1 %call2, label %if.end, label %land.lhs.true3, !dbg !3440

land.lhs.true3:                                   ; preds = %if.then
  %call4 = call i32* @__errno_location() #16, !dbg !3441
  %14 = load i32, i32* %call4, align 4, !dbg !3441, !tbaa !2632, !ctir !7
  %call5 = call zeroext i1 @ignorable_ctx_err(i32 %14), !dbg !3442
  br i1 %call5, label %if.end, label %if.then6, !dbg !3443

if.then6:                                         ; preds = %land.lhs.true3
  %call7 = call i32* @__errno_location() #16, !dbg !3444
  %15 = load i32, i32* %call7, align 4, !dbg !3444, !tbaa !2632, !ctir !7
  %call8 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.72, i64 0, i64 0)) #9, !dbg !3445
  %16 = load i8*, i8** %dir.addr, align 8, !dbg !3446, !tbaa !2645
  %call9 = call i8* @quotearg_style(i32 4, i8* %16), !dbg !3446
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %15, i8* %call8, i8* %call9), !dbg !3447
  br label %if.end, !dbg !3447

if.end:                                           ; preds = %if.then6, %land.lhs.true3, %if.then
  br label %if.end10, !dbg !3448

if.end10:                                         ; preds = %if.end, %land.lhs.true, %entry
  %17 = load i32, i32* %ret, align 4, !dbg !3449, !tbaa !2632
  ret i32 %17, !dbg !3450
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @install_file_in_file_parents(i8* %from, i8* %to, %struct.cp_options* %x) #4 !dbg !3451 !ctir !258 {
entry:
  %from.addr = alloca i8*, align 8
  %to.addr = alloca i8*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  store i8* %from, i8** %from.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %from.addr, metadata !3452, metadata !DIExpression()), !dbg !3453
  store i8* %to, i8** %to.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %to.addr, metadata !3454, metadata !DIExpression()), !dbg !3455
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3456, metadata !DIExpression()), !dbg !3457
  %0 = load i8*, i8** %from.addr, align 8, !dbg !3458, !tbaa !2645
  %1 = load i8*, i8** %to.addr, align 8, !dbg !3459, !tbaa !2645
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3460, !tbaa !2645
  %call = call zeroext i1 @mkancesdirs_safe_wd(i8* %0, i8* %1, %struct.cp_options* %2, i1 zeroext false), !dbg !3461
  br i1 %call, label %land.rhs, label %land.end, !dbg !3462

land.rhs:                                         ; preds = %entry
  %3 = load i8*, i8** %from.addr, align 8, !dbg !3463, !tbaa !2645
  %4 = load i8*, i8** %to.addr, align 8, !dbg !3464, !tbaa !2645
  %5 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3465, !tbaa !2645
  %call1 = call zeroext i1 @install_file_in_file(i8* %3, i8* %4, %struct.cp_options* %5), !dbg !3466
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %6 = phi i1 [ false, %entry ], [ %call1, %land.rhs ], !dbg !3467
  ret i1 %6, !dbg !3468
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @install_file_in_file(i8* %from, i8* %to, %struct.cp_options* %x) #4 !dbg !3469 !ctir !262 {
entry:
  %retval = alloca i1, align 1
  %from.addr = alloca i8*, align 8
  %to.addr = alloca i8*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %from_sb = alloca %struct.stat, align 8, !ctir !270
  store i8* %from, i8** %from.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %from.addr, metadata !3470, metadata !DIExpression()), !dbg !3471
  store i8* %to, i8** %to.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %to.addr, metadata !3472, metadata !DIExpression()), !dbg !3473
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3474, metadata !DIExpression()), !dbg !3475
  call void @llvm.dbg.declare(metadata %struct.stat* %from_sb, metadata !3476, metadata !DIExpression()), !dbg !3477
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3478, !tbaa !2645
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 16, !dbg !3480, !ctir !247
  %1 = load i8, i8* %preserve_timestamps, align 1, !dbg !3480, !tbaa !2823
  %tobool = trunc i8 %1 to i1, !dbg !3480, !ctir !142
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3481

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %from.addr, align 8, !dbg !3482, !tbaa !2645
  %call = call i32 @stat(i8* %2, %struct.stat* %from_sb) #9, !dbg !3483
  %cmp = icmp ne i32 %call, 0, !dbg !3484
  br i1 %cmp, label %if.then, label %if.end, !dbg !3485

if.then:                                          ; preds = %land.lhs.true
  %call1 = call i32* @__errno_location() #16, !dbg !3486
  %3 = load i32, i32* %call1, align 4, !dbg !3486, !tbaa !2632, !ctir !7
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.76, i64 0, i64 0)) #9, !dbg !3488
  %4 = load i8*, i8** %from.addr, align 8, !dbg !3489, !tbaa !2645
  %call3 = call i8* @quotearg_style(i32 4, i8* %4), !dbg !3489
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %3, i8* %call2, i8* %call3), !dbg !3490
  store i1 false, i1* %retval, align 1, !dbg !3491
  br label %return, !dbg !3491

if.end:                                           ; preds = %land.lhs.true, %entry
  %5 = load i8*, i8** %from.addr, align 8, !dbg !3492, !tbaa !2645
  %6 = load i8*, i8** %to.addr, align 8, !dbg !3494, !tbaa !2645
  %7 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3495, !tbaa !2645
  %call4 = call zeroext i1 @copy_file(i8* %5, i8* %6, %struct.cp_options* %7), !dbg !3496
  br i1 %call4, label %if.end6, label %if.then5, !dbg !3497

if.then5:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !3498
  br label %return, !dbg !3498

if.end6:                                          ; preds = %if.end
  %8 = load i8, i8* @strip_files, align 1, !dbg !3499, !tbaa !2739
  %tobool7 = trunc i8 %8 to i1, !dbg !3499
  br i1 %tobool7, label %if.then8, label %if.end19, !dbg !3501

if.then8:                                         ; preds = %if.end6
  %9 = load i8*, i8** %to.addr, align 8, !dbg !3502, !tbaa !2645
  %call9 = call zeroext i1 @strip(i8* %9), !dbg !3504
  br i1 %call9, label %if.end18, label %if.then10, !dbg !3505

if.then10:                                        ; preds = %if.then8
  %10 = load i8*, i8** %to.addr, align 8, !dbg !3506, !tbaa !2645
  %call11 = call i32 @unlink(i8* %10) #9, !dbg !3509
  %cmp12 = icmp ne i32 %call11, 0, !dbg !3510
  br i1 %cmp12, label %if.then13, label %if.end17, !dbg !3511

if.then13:                                        ; preds = %if.then10
  %call14 = call i32* @__errno_location() #16, !dbg !3512
  %11 = load i32, i32* %call14, align 4, !dbg !3512, !tbaa !2632, !ctir !7
  %call15 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.77, i64 0, i64 0)) #9, !dbg !3512
  %12 = load i8*, i8** %to.addr, align 8, !dbg !3512, !tbaa !2645
  %call16 = call i8* @quotearg_style(i32 4, i8* %12), !dbg !3512
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %11, i8* %call15, i8* %call16), !dbg !3512
  unreachable, !dbg !3512

if.end17:                                         ; preds = %if.then10
  store i1 false, i1* %retval, align 1, !dbg !3513
  br label %return, !dbg !3513

if.end18:                                         ; preds = %if.then8
  br label %if.end19, !dbg !3514

if.end19:                                         ; preds = %if.end18, %if.end6
  %13 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3515, !tbaa !2645
  %preserve_timestamps20 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %13, i32 0, i32 16, !dbg !3517, !ctir !247
  %14 = load i8, i8* %preserve_timestamps20, align 1, !dbg !3517, !tbaa !2823
  %tobool21 = trunc i8 %14 to i1, !dbg !3517, !ctir !142
  br i1 %tobool21, label %land.lhs.true22, label %if.end28, !dbg !3518

land.lhs.true22:                                  ; preds = %if.end19
  %15 = load i8, i8* @strip_files, align 1, !dbg !3519, !tbaa !2739
  %tobool23 = trunc i8 %15 to i1, !dbg !3519
  br i1 %tobool23, label %land.lhs.true25, label %lor.lhs.false, !dbg !3520

lor.lhs.false:                                    ; preds = %land.lhs.true22
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %from_sb, i32 0, i32 3, !dbg !3521, !ctir !270
  %16 = load i32, i32* %st_mode, align 8, !dbg !3521, !tbaa !2911, !ctir !140
  %and = and i32 %16, 61440, !dbg !3521
  %cmp24 = icmp eq i32 %and, 32768, !dbg !3521
  br i1 %cmp24, label %if.end28, label %land.lhs.true25, !dbg !3522

land.lhs.true25:                                  ; preds = %lor.lhs.false, %land.lhs.true22
  %17 = load i8*, i8** %to.addr, align 8, !dbg !3523, !tbaa !2645
  %call26 = call zeroext i1 @change_timestamps(%struct.stat* %from_sb, i8* %17), !dbg !3524
  br i1 %call26, label %if.end28, label %if.then27, !dbg !3525

if.then27:                                        ; preds = %land.lhs.true25
  store i1 false, i1* %retval, align 1, !dbg !3526
  br label %return, !dbg !3526

if.end28:                                         ; preds = %land.lhs.true25, %lor.lhs.false, %if.end19
  %18 = load i8*, i8** %to.addr, align 8, !dbg !3527, !tbaa !2645
  %call29 = call zeroext i1 @change_attributes(i8* %18), !dbg !3528
  store i1 %call29, i1* %retval, align 1, !dbg !3529
  br label %return, !dbg !3529

return:                                           ; preds = %if.end28, %if.then27, %if.end17, %if.then5, %if.then
  %19 = load i1, i1* %retval, align 1, !dbg !3530
  ret i1 %19, !dbg !3530
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @install_file_in_dir(i8* %from, i8* %to_dir, %struct.cp_options* %x, i1 zeroext %mkdir_and_install) #4 !dbg !3531 !ctir !306 {
entry:
  %from.addr = alloca i8*, align 8
  %to_dir.addr = alloca i8*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %mkdir_and_install.addr = alloca i8, align 1
  %from_base = alloca i8*, align 8, !ctir !180
  %to = alloca i8*, align 8, !ctir !9
  %ret = alloca i8, align 1, !ctir !142
  store i8* %from, i8** %from.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %from.addr, metadata !3532, metadata !DIExpression()), !dbg !3533
  store i8* %to_dir, i8** %to_dir.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %to_dir.addr, metadata !3534, metadata !DIExpression()), !dbg !3535
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3536, metadata !DIExpression()), !dbg !3537
  %frombool = zext i1 %mkdir_and_install to i8
  store i8 %frombool, i8* %mkdir_and_install.addr, align 1, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %mkdir_and_install.addr, metadata !3538, metadata !DIExpression()), !dbg !3539
  call void @llvm.dbg.declare(metadata i8** %from_base, metadata !3540, metadata !DIExpression()), !dbg !3541
  %0 = load i8*, i8** %from.addr, align 8, !dbg !3542, !tbaa !2645
  %call = call i8* @last_component(i8* %0) #14, !dbg !3543
  store i8* %call, i8** %from_base, align 8, !dbg !3541, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %to, metadata !3544, metadata !DIExpression()), !dbg !3545
  %1 = load i8*, i8** %to_dir.addr, align 8, !dbg !3546, !tbaa !2645
  %2 = load i8*, i8** %from_base, align 8, !dbg !3547, !tbaa !2645
  %call1 = call i8* @file_name_concat(i8* %1, i8* %2, i8** null), !dbg !3548
  store i8* %call1, i8** %to, align 8, !dbg !3545, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !3549, metadata !DIExpression()), !dbg !3550
  store i8 1, i8* %ret, align 1, !dbg !3550, !tbaa !2739
  %3 = load i8, i8* %mkdir_and_install.addr, align 1, !dbg !3551, !tbaa !2739
  %tobool = trunc i8 %3 to i1, !dbg !3551
  br i1 %tobool, label %if.then, label %if.end, !dbg !3553

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %from.addr, align 8, !dbg !3554, !tbaa !2645
  %5 = load i8*, i8** %to, align 8, !dbg !3555, !tbaa !2645
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3556, !tbaa !2645
  %call2 = call zeroext i1 @mkancesdirs_safe_wd(i8* %4, i8* %5, %struct.cp_options* %6, i1 zeroext true), !dbg !3557
  %frombool3 = zext i1 %call2 to i8, !dbg !3558
  store i8 %frombool3, i8* %ret, align 1, !dbg !3558, !tbaa !2739
  br label %if.end, !dbg !3559

if.end:                                           ; preds = %if.then, %entry
  %7 = load i8, i8* %ret, align 1, !dbg !3560, !tbaa !2739
  %tobool4 = trunc i8 %7 to i1, !dbg !3560
  br i1 %tobool4, label %land.rhs, label %land.end, !dbg !3561

land.rhs:                                         ; preds = %if.end
  %8 = load i8*, i8** %from.addr, align 8, !dbg !3562, !tbaa !2645
  %9 = load i8*, i8** %to, align 8, !dbg !3563, !tbaa !2645
  %10 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3564, !tbaa !2645
  %call5 = call zeroext i1 @install_file_in_file(i8* %8, i8* %9, %struct.cp_options* %10), !dbg !3565
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %11 = phi i1 [ false, %if.end ], [ %call5, %land.rhs ], !dbg !3566
  %frombool6 = zext i1 %11 to i8, !dbg !3567
  store i8 %frombool6, i8* %ret, align 1, !dbg !3567, !tbaa !2739
  %12 = load i8*, i8** %to, align 8, !dbg !3568, !tbaa !2645
  call void @free(i8* %12) #9, !dbg !3569
  %13 = load i8, i8* %ret, align 1, !dbg !3570, !tbaa !2739
  %tobool7 = trunc i8 %13 to i1, !dbg !3570
  ret i1 %tobool7, !dbg !3571
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @mkancesdirs_safe_wd(i8* %from, i8* %to, %struct.cp_options* %x, i1 zeroext %save_always) #4 !dbg !3572 !ctir !260 {
entry:
  %retval = alloca i1, align 1
  %from.addr = alloca i8*, align 8
  %to.addr = alloca i8*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %save_always.addr = alloca i8, align 1
  %save_working_directory = alloca i8, align 1, !ctir !142
  %status = alloca i32, align 4, !ctir !7
  %wd = alloca %struct.savewd, align 4, !ctir !102
  %restore_result = alloca i32, align 4, !ctir !7
  %restore_errno = alloca i32, align 4, !ctir !7
  store i8* %from, i8** %from.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %from.addr, metadata !3573, metadata !DIExpression()), !dbg !3574
  store i8* %to, i8** %to.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %to.addr, metadata !3575, metadata !DIExpression()), !dbg !3576
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3577, metadata !DIExpression()), !dbg !3578
  %frombool = zext i1 %save_always to i8
  store i8 %frombool, i8* %save_always.addr, align 1, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %save_always.addr, metadata !3579, metadata !DIExpression()), !dbg !3580
  call void @llvm.dbg.declare(metadata i8* %save_working_directory, metadata !3581, metadata !DIExpression()), !dbg !3582
  %0 = load i8, i8* %save_always.addr, align 1, !dbg !3583, !tbaa !2739
  %tobool = trunc i8 %0 to i1, !dbg !3583
  br i1 %tobool, label %lor.end7, label %lor.rhs, !dbg !3584

lor.rhs:                                          ; preds = %entry
  %1 = load i8*, i8** %from.addr, align 8, !dbg !3585, !tbaa !2645
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !3585, !ctir !180
  %2 = load i8, i8* %arrayidx, align 1, !dbg !3585, !tbaa !3292
  %conv = sext i8 %2 to i32, !dbg !3585
  %cmp = icmp eq i32 %conv, 47, !dbg !3585
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !3586

land.rhs:                                         ; preds = %lor.rhs
  %3 = load i8*, i8** %to.addr, align 8, !dbg !3587, !tbaa !2645
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 0, !dbg !3587, !ctir !9
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !3587, !tbaa !3292
  %conv3 = sext i8 %4 to i32, !dbg !3587
  %cmp4 = icmp eq i32 %conv3, 47, !dbg !3587
  br i1 %cmp4, label %lor.end, label %lor.rhs6, !dbg !3587

lor.rhs6:                                         ; preds = %land.rhs
  br label %lor.end, !dbg !3587

lor.end:                                          ; preds = %lor.rhs6, %land.rhs
  %5 = phi i1 [ true, %land.rhs ], [ false, %lor.rhs6 ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %lor.rhs
  %6 = phi i1 [ false, %lor.rhs ], [ %5, %lor.end ], !dbg !3588
  %lnot = xor i1 %6, true, !dbg !3589
  br label %lor.end7, !dbg !3584

lor.end7:                                         ; preds = %land.end, %entry
  %7 = phi i1 [ true, %entry ], [ %lnot, %land.end ]
  %frombool8 = zext i1 %7 to i8, !dbg !3582
  store i8 %frombool8, i8* %save_working_directory, align 1, !dbg !3582, !tbaa !2739
  call void @llvm.dbg.declare(metadata i32* %status, metadata !3590, metadata !DIExpression()), !dbg !3591
  store i32 0, i32* %status, align 4, !dbg !3591, !tbaa !2632
  call void @llvm.dbg.declare(metadata %struct.savewd* %wd, metadata !3592, metadata !DIExpression()), !dbg !3593
  call void @savewd_init(%struct.savewd* %wd), !dbg !3594
  %8 = load i8, i8* %save_working_directory, align 1, !dbg !3595, !tbaa !2739
  %tobool9 = trunc i8 %8 to i1, !dbg !3595
  br i1 %tobool9, label %if.end, label %if.then, !dbg !3597

if.then:                                          ; preds = %lor.end7
  call void @savewd_finish(%struct.savewd* %wd), !dbg !3598
  br label %if.end, !dbg !3598

if.end:                                           ; preds = %if.then, %lor.end7
  %9 = load i8*, i8** %to.addr, align 8, !dbg !3599, !tbaa !2645
  %10 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3601, !tbaa !2645
  %11 = bitcast %struct.cp_options* %10 to i8*, !dbg !3601
  %call = call i64 @mkancesdirs(i8* %9, %struct.savewd* %wd, i32 (i8*, i8*, i8*)* @make_ancestor, i8* %11), !dbg !3602
  %cmp10 = icmp eq i64 %call, -1, !dbg !3603
  br i1 %cmp10, label %if.then12, label %if.end16, !dbg !3604

if.then12:                                        ; preds = %if.end
  %call13 = call i32* @__errno_location() #16, !dbg !3605
  %12 = load i32, i32* %call13, align 4, !dbg !3605, !tbaa !2632, !ctir !7
  %call14 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.75, i64 0, i64 0)) #9, !dbg !3607
  %13 = load i8*, i8** %to.addr, align 8, !dbg !3608, !tbaa !2645
  %call15 = call i8* @quotearg_style(i32 4, i8* %13), !dbg !3608
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %12, i8* %call14, i8* %call15), !dbg !3609
  store i32 1, i32* %status, align 4, !dbg !3610, !tbaa !2632
  br label %if.end16, !dbg !3611

if.end16:                                         ; preds = %if.then12, %if.end
  %14 = load i8, i8* %save_working_directory, align 1, !dbg !3612, !tbaa !2739
  %tobool17 = trunc i8 %14 to i1, !dbg !3612
  br i1 %tobool17, label %if.then18, label %if.end33, !dbg !3614

if.then18:                                        ; preds = %if.end16
  call void @llvm.dbg.declare(metadata i32* %restore_result, metadata !3615, metadata !DIExpression()), !dbg !3617
  %15 = load i32, i32* %status, align 4, !dbg !3618, !tbaa !2632
  %call19 = call i32 @savewd_restore(%struct.savewd* %wd, i32 %15), !dbg !3619
  store i32 %call19, i32* %restore_result, align 4, !dbg !3617, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %restore_errno, metadata !3620, metadata !DIExpression()), !dbg !3621
  %call20 = call i32* @__errno_location() #16, !dbg !3622
  %16 = load i32, i32* %call20, align 4, !dbg !3622, !tbaa !2632, !ctir !7
  store i32 %16, i32* %restore_errno, align 4, !dbg !3621, !tbaa !2632
  call void @savewd_finish(%struct.savewd* %wd), !dbg !3623
  %17 = load i32, i32* %restore_result, align 4, !dbg !3624, !tbaa !2632
  %cmp21 = icmp slt i32 0, %17, !dbg !3626
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !3627

if.then23:                                        ; preds = %if.then18
  store i1 false, i1* %retval, align 1, !dbg !3628
  br label %return, !dbg !3628

if.end24:                                         ; preds = %if.then18
  %18 = load i32, i32* %restore_result, align 4, !dbg !3629, !tbaa !2632
  %cmp25 = icmp slt i32 %18, 0, !dbg !3631
  br i1 %cmp25, label %land.lhs.true, label %if.end32, !dbg !3632

land.lhs.true:                                    ; preds = %if.end24
  %19 = load i32, i32* %status, align 4, !dbg !3633, !tbaa !2632
  %cmp27 = icmp eq i32 %19, 0, !dbg !3634
  br i1 %cmp27, label %if.then29, label %if.end32, !dbg !3635

if.then29:                                        ; preds = %land.lhs.true
  %20 = load i32, i32* %restore_errno, align 4, !dbg !3636, !tbaa !2632
  %call30 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.75, i64 0, i64 0)) #9, !dbg !3638
  %21 = load i8*, i8** %to.addr, align 8, !dbg !3639, !tbaa !2645
  %call31 = call i8* @quotearg_style(i32 4, i8* %21), !dbg !3639
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %20, i8* %call30, i8* %call31), !dbg !3640
  store i1 false, i1* %retval, align 1, !dbg !3641
  br label %return, !dbg !3641

if.end32:                                         ; preds = %land.lhs.true, %if.end24
  br label %if.end33, !dbg !3642

if.end33:                                         ; preds = %if.end32, %if.end16
  %22 = load i32, i32* %status, align 4, !dbg !3643, !tbaa !2632
  %cmp34 = icmp eq i32 %22, 0, !dbg !3644
  store i1 %cmp34, i1* %retval, align 1, !dbg !3645
  br label %return, !dbg !3645

return:                                           ; preds = %if.end33, %if.then29, %if.then23
  %23 = load i1, i1* %retval, align 1, !dbg !3646
  ret i1 %23, !dbg !3646
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @make_ancestor(i8* %dir, i8* %component, i8* %options) #4 !dbg !3647 !ctir !248 {
entry:
  %dir.addr = alloca i8*, align 8
  %component.addr = alloca i8*, align 8
  %options.addr = alloca i8*, align 8
  %x = alloca %struct.cp_options*, align 8, !ctir !246
  %r = alloca i32, align 4, !ctir !7
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !3648, metadata !DIExpression()), !dbg !3649
  store i8* %component, i8** %component.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %component.addr, metadata !3650, metadata !DIExpression()), !dbg !3651
  store i8* %options, i8** %options.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %options.addr, metadata !3652, metadata !DIExpression()), !dbg !3653
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x, metadata !3654, metadata !DIExpression()), !dbg !3655
  %0 = load i8*, i8** %options.addr, align 8, !dbg !3656, !tbaa !2645
  %1 = bitcast i8* %0 to %struct.cp_options*, !dbg !3656
  store %struct.cp_options* %1, %struct.cp_options** %x, align 8, !dbg !3655, !tbaa !2645
  %2 = load %struct.cp_options*, %struct.cp_options** %x, align 8, !dbg !3657, !tbaa !2645
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 18, !dbg !3659, !ctir !247
  %3 = load i8, i8* %set_security_context, align 1, !dbg !3659, !tbaa !2863
  %tobool = trunc i8 %3 to i1, !dbg !3659, !ctir !142
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3660

land.lhs.true:                                    ; preds = %entry
  %4 = load i8*, i8** %component.addr, align 8, !dbg !3661, !tbaa !2645
  %call = call i32 @defaultcon(i8* %4, i32 16384), !dbg !3662
  %cmp = icmp slt i32 %call, 0, !dbg !3663
  br i1 %cmp, label %land.lhs.true1, label %if.end, !dbg !3664

land.lhs.true1:                                   ; preds = %land.lhs.true
  %call2 = call i32* @__errno_location() #16, !dbg !3665
  %5 = load i32, i32* %call2, align 4, !dbg !3665, !tbaa !2632, !ctir !7
  %call3 = call zeroext i1 @ignorable_ctx_err(i32 %5), !dbg !3666
  br i1 %call3, label %if.end, label %if.then, !dbg !3667

if.then:                                          ; preds = %land.lhs.true1
  %call4 = call i32* @__errno_location() #16, !dbg !3668
  %6 = load i32, i32* %call4, align 4, !dbg !3668, !tbaa !2632, !ctir !7
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.73, i64 0, i64 0)) #9, !dbg !3669
  %7 = load i8*, i8** %dir.addr, align 8, !dbg !3670, !tbaa !2645
  %call6 = call i8* @quotearg_style(i32 4, i8* %7), !dbg !3670
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* %call5, i8* %call6), !dbg !3671
  br label %if.end, !dbg !3671

if.end:                                           ; preds = %if.then, %land.lhs.true1, %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata i32* %r, metadata !3672, metadata !DIExpression()), !dbg !3673
  %8 = load i8*, i8** %component.addr, align 8, !dbg !3674, !tbaa !2645
  %call7 = call i32 @mkdir(i8* %8, i32 493) #9, !dbg !3675
  store i32 %call7, i32* %r, align 4, !dbg !3673, !tbaa !2632
  %9 = load i32, i32* %r, align 4, !dbg !3676, !tbaa !2632
  %cmp8 = icmp eq i32 %9, 0, !dbg !3678
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !3679

if.then9:                                         ; preds = %if.end
  %10 = load i8*, i8** %dir.addr, align 8, !dbg !3680, !tbaa !2645
  %11 = load i8*, i8** %options.addr, align 8, !dbg !3681, !tbaa !2645
  call void @announce_mkdir(i8* %10, i8* %11), !dbg !3682
  br label %if.end10, !dbg !3682

if.end10:                                         ; preds = %if.then9, %if.end
  %12 = load i32, i32* %r, align 4, !dbg !3683, !tbaa !2632
  ret i32 %12, !dbg !3684
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @defaultcon(i8* %path, i32 %mode) #4 !dbg !3685 !ctir !250 {
entry:
  %path.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  store i8* %path, i8** %path.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !3687, metadata !DIExpression()), !dbg !3688
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !3689, metadata !DIExpression()), !dbg !3690
  %call = call i32* @__errno_location() #16, !dbg !3691
  store i32 95, i32* %call, align 4, !dbg !3692, !tbaa !2632, !ctir !7
  ret i32 -1, !dbg !3693
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @ignorable_ctx_err(i32 %err) #4 !dbg !3694 !ctir !256 {
entry:
  %err.addr = alloca i32, align 4
  store i32 %err, i32* %err.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !3695, metadata !DIExpression()), !dbg !3696
  %0 = load i32, i32* %err.addr, align 4, !dbg !3697, !tbaa !2632
  %cmp = icmp eq i32 %0, 95, !dbg !3698
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !3699

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %err.addr, align 4, !dbg !3700, !tbaa !2632
  %cmp1 = icmp eq i32 %1, 61, !dbg !3701
  br label %lor.end, !dbg !3699

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !3702
}

; Function Attrs: nounwind
declare dso_local i32 @mkdir(i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @announce_mkdir(i8* %dir, i8* %options) #4 !dbg !3703 !ctir !252 {
entry:
  %dir.addr = alloca i8*, align 8
  %options.addr = alloca i8*, align 8
  %x = alloca %struct.cp_options*, align 8, !ctir !246
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !3704, metadata !DIExpression()), !dbg !3705
  store i8* %options, i8** %options.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %options.addr, metadata !3706, metadata !DIExpression()), !dbg !3707
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x, metadata !3708, metadata !DIExpression()), !dbg !3709
  %0 = load i8*, i8** %options.addr, align 8, !dbg !3710, !tbaa !2645
  %1 = bitcast i8* %0 to %struct.cp_options*, !dbg !3710
  store %struct.cp_options* %1, %struct.cp_options** %x, align 8, !dbg !3709, !tbaa !2645
  %2 = load %struct.cp_options*, %struct.cp_options** %x, align 8, !dbg !3711, !tbaa !2645
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 31, !dbg !3713, !ctir !247
  %3 = load i8, i8* %verbose, align 2, !dbg !3713, !tbaa !2809
  %tobool = trunc i8 %3 to i1, !dbg !3713, !ctir !142
  br i1 %tobool, label %if.then, label %if.end, !dbg !3714

if.then:                                          ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3715, !tbaa !2645
  %call = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.74, i64 0, i64 0)) #9, !dbg !3716
  %5 = load i8*, i8** %dir.addr, align 8, !dbg !3717, !tbaa !2645
  %call1 = call i8* @quotearg_style(i32 4, i8* %5), !dbg !3717
  call void (%struct._IO_FILE*, i8*, ...) @prog_fprintf(%struct._IO_FILE* %4, i8* %call, i8* %call1), !dbg !3718
  br label %if.end, !dbg !3718

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !3719
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_file(i8* %from, i8* %to, %struct.cp_options* %x) #4 !dbg !3720 !ctir !262 {
entry:
  %retval = alloca i1, align 1
  %from.addr = alloca i8*, align 8
  %to.addr = alloca i8*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %copy_into_self = alloca i8, align 1, !ctir !142
  store i8* %from, i8** %from.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %from.addr, metadata !3721, metadata !DIExpression()), !dbg !3722
  store i8* %to, i8** %to.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %to.addr, metadata !3723, metadata !DIExpression()), !dbg !3724
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3725, metadata !DIExpression()), !dbg !3726
  call void @llvm.dbg.declare(metadata i8* %copy_into_self, metadata !3727, metadata !DIExpression()), !dbg !3728
  %0 = load i8, i8* @copy_only_if_needed, align 1, !dbg !3729, !tbaa !2739
  %tobool = trunc i8 %0 to i1, !dbg !3729
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3731

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %from.addr, align 8, !dbg !3732, !tbaa !2645
  %2 = load i8*, i8** %to.addr, align 8, !dbg !3733, !tbaa !2645
  %3 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3734, !tbaa !2645
  %call = call zeroext i1 @need_copy(i8* %1, i8* %2, %struct.cp_options* %3), !dbg !3735
  br i1 %call, label %if.end, label %if.then, !dbg !3736

if.then:                                          ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !3737
  br label %return, !dbg !3737

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load i8*, i8** %from.addr, align 8, !dbg !3738, !tbaa !2645
  %5 = load i8*, i8** %to.addr, align 8, !dbg !3739, !tbaa !2645
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !3740, !tbaa !2645
  %call1 = call zeroext i1 @copy(i8* %4, i8* %5, i1 zeroext false, %struct.cp_options* %6, i8* %copy_into_self, i8* null), !dbg !3741
  store i1 %call1, i1* %retval, align 1, !dbg !3742
  br label %return, !dbg !3742

return:                                           ; preds = %if.end, %if.then
  %7 = load i1, i1* %retval, align 1, !dbg !3743
  ret i1 %7, !dbg !3743
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @strip(i8* %name) #4 !dbg !3744 !ctir !220 {
entry:
  %name.addr = alloca i8*, align 8
  %status = alloca i32, align 4, !ctir !7
  %ok = alloca i8, align 1, !ctir !142
  %pid = alloca i32, align 4, !ctir !111
  store i8* %name, i8** %name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3745, metadata !DIExpression()), !dbg !3746
  call void @llvm.dbg.declare(metadata i32* %status, metadata !3747, metadata !DIExpression()), !dbg !3748
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !3749, metadata !DIExpression()), !dbg !3750
  store i8 0, i8* %ok, align 1, !dbg !3750, !tbaa !2739
  call void @llvm.dbg.declare(metadata i32* %pid, metadata !3751, metadata !DIExpression()), !dbg !3752
  %call = call i32 @fork() #9, !dbg !3753
  store i32 %call, i32* %pid, align 4, !dbg !3752, !tbaa !2632
  %0 = load i32, i32* %pid, align 4, !dbg !3754, !tbaa !2632
  switch i32 %0, label %sw.default [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb3
  ], !dbg !3755

sw.bb:                                            ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !3756
  %1 = load i32, i32* %call1, align 4, !dbg !3756, !tbaa !2632, !ctir !7
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.78, i64 0, i64 0)) #9, !dbg !3758
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %1, i8* %call2), !dbg !3759
  br label %sw.epilog, !dbg !3760

sw.bb3:                                           ; preds = %entry
  %2 = load i8*, i8** @strip_program, align 8, !dbg !3761, !tbaa !2645
  %3 = load i8*, i8** @strip_program, align 8, !dbg !3762, !tbaa !2645
  %4 = load i8*, i8** %name.addr, align 8, !dbg !3763, !tbaa !2645
  %call4 = call i32 (i8*, i8*, ...) @execlp(i8* %2, i8* %3, i8* %4, i8* null) #9, !dbg !3764
  %call5 = call i32* @__errno_location() #16, !dbg !3765
  %5 = load i32, i32* %call5, align 4, !dbg !3765, !tbaa !2632, !ctir !7
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.79, i64 0, i64 0)) #9, !dbg !3765
  %6 = load i8*, i8** @strip_program, align 8, !dbg !3765, !tbaa !2645
  %call7 = call i8* @quotearg_style(i32 4, i8* %6), !dbg !3765
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %5, i8* %call6, i8* %call7), !dbg !3765
  unreachable, !dbg !3765

sw.default:                                       ; preds = %entry
  %7 = load i32, i32* %pid, align 4, !dbg !3766, !tbaa !2632
  %call8 = call i32 @waitpid(i32 %7, i32* %status, i32 0), !dbg !3768
  %cmp = icmp slt i32 %call8, 0, !dbg !3769
  br i1 %cmp, label %if.then, label %if.else, !dbg !3770

if.then:                                          ; preds = %sw.default
  %call9 = call i32* @__errno_location() #16, !dbg !3771
  %8 = load i32, i32* %call9, align 4, !dbg !3771, !tbaa !2632, !ctir !7
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.80, i64 0, i64 0)) #9, !dbg !3772
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %8, i8* %call10), !dbg !3773
  br label %if.end16, !dbg !3773

if.else:                                          ; preds = %sw.default
  %9 = load i32, i32* %status, align 4, !dbg !3774, !tbaa !2632
  %and = and i32 %9, 127, !dbg !3774
  %cmp11 = icmp eq i32 %and, 0, !dbg !3774
  br i1 %cmp11, label %lor.lhs.false, label %if.then13, !dbg !3776

lor.lhs.false:                                    ; preds = %if.else
  %10 = load i32, i32* %status, align 4, !dbg !3777, !tbaa !2632
  %and12 = and i32 %10, 65280, !dbg !3777
  %shr = ashr i32 %and12, 8, !dbg !3777
  %tobool = icmp ne i32 %shr, 0, !dbg !3777
  br i1 %tobool, label %if.then13, label %if.else15, !dbg !3778

if.then13:                                        ; preds = %lor.lhs.false, %if.else
  %call14 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.81, i64 0, i64 0)) #9, !dbg !3779
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call14), !dbg !3780
  br label %if.end, !dbg !3780

if.else15:                                        ; preds = %lor.lhs.false
  store i8 1, i8* %ok, align 1, !dbg !3781, !tbaa !2739
  br label %if.end

if.end:                                           ; preds = %if.else15, %if.then13
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then
  br label %sw.epilog, !dbg !3782

sw.epilog:                                        ; preds = %if.end16, %sw.bb
  %11 = load i8, i8* %ok, align 1, !dbg !3783, !tbaa !2739
  %tobool17 = trunc i8 %11 to i1, !dbg !3783
  ret i1 %tobool17, !dbg !3784
}

; Function Attrs: nounwind
declare dso_local i32 @unlink(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @change_timestamps(%struct.stat* %src_sb, i8* %dest) #4 !dbg !3785 !ctir !266 {
entry:
  %retval = alloca i1, align 1
  %src_sb.addr = alloca %struct.stat*, align 8
  %dest.addr = alloca i8*, align 8
  %timespec = alloca [2 x %struct.timespec], align 16, !ctir !303
  %tmp = alloca %struct.timespec, align 8
  %tmp2 = alloca %struct.timespec, align 8
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !3786, metadata !DIExpression()), !dbg !3787
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !3788, metadata !DIExpression()), !dbg !3789
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timespec, metadata !3790, metadata !DIExpression()), !dbg !3791
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !3792, !ctir !303
  %0 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !3793, !tbaa !2645
  %call = call { i64, i64 } @get_stat_atime(%struct.stat* %0) #14, !dbg !3794
  %1 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !3794
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 0, !dbg !3794
  %3 = extractvalue { i64, i64 } %call, 0, !dbg !3794
  store i64 %3, i64* %2, align 8, !dbg !3794
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %1, i32 0, i32 1, !dbg !3794
  %5 = extractvalue { i64, i64 } %call, 1, !dbg !3794
  store i64 %5, i64* %4, align 8, !dbg !3794
  %6 = bitcast %struct.timespec* %arrayidx to i8*, !dbg !3794
  %7 = bitcast %struct.timespec* %tmp to i8*, !dbg !3794
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %6, i8* align 8 %7, i64 16, i1 false), !dbg !3794, !tbaa.struct !3795
  %arrayidx1 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !3796, !ctir !303
  %8 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !3797, !tbaa !2645
  %call3 = call { i64, i64 } @get_stat_mtime(%struct.stat* %8) #14, !dbg !3798
  %9 = bitcast %struct.timespec* %tmp2 to { i64, i64 }*, !dbg !3798
  %10 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 0, !dbg !3798
  %11 = extractvalue { i64, i64 } %call3, 0, !dbg !3798
  store i64 %11, i64* %10, align 8, !dbg !3798
  %12 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %9, i32 0, i32 1, !dbg !3798
  %13 = extractvalue { i64, i64 } %call3, 1, !dbg !3798
  store i64 %13, i64* %12, align 8, !dbg !3798
  %14 = bitcast %struct.timespec* %arrayidx1 to i8*, !dbg !3798
  %15 = bitcast %struct.timespec* %tmp2 to i8*, !dbg !3798
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %14, i8* align 8 %15, i64 16, i1 false), !dbg !3798, !tbaa.struct !3795
  %16 = load i8*, i8** %dest.addr, align 8, !dbg !3799, !tbaa !2645
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !3801
  %call4 = call i32 @utimens(i8* %16, %struct.timespec* %arraydecay), !dbg !3802
  %tobool = icmp ne i32 %call4, 0, !dbg !3802
  br i1 %tobool, label %if.then, label %if.end, !dbg !3803

if.then:                                          ; preds = %entry
  %call5 = call i32* @__errno_location() #16, !dbg !3804
  %17 = load i32, i32* %call5, align 4, !dbg !3804, !tbaa !2632, !ctir !7
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.82, i64 0, i64 0)) #9, !dbg !3806
  %18 = load i8*, i8** %dest.addr, align 8, !dbg !3807, !tbaa !2645
  %call7 = call i8* @quotearg_style(i32 4, i8* %18), !dbg !3807
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %17, i8* %call6, i8* %call7), !dbg !3808
  store i1 false, i1* %retval, align 1, !dbg !3809
  br label %return, !dbg !3809

if.end:                                           ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !3810
  br label %return, !dbg !3810

return:                                           ; preds = %if.end, %if.then
  %19 = load i1, i1* %retval, align 1, !dbg !3811
  ret i1 %19, !dbg !3811
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @change_attributes(i8* %name) #4 !dbg !3812 !ctir !220 {
entry:
  %name.addr = alloca i8*, align 8
  %ok = alloca i8, align 1, !ctir !142
  store i8* %name, i8** %name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3813, metadata !DIExpression()), !dbg !3814
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !3815, metadata !DIExpression()), !dbg !3816
  store i8 0, i8* %ok, align 1, !dbg !3816, !tbaa !2739
  %0 = load i32, i32* @owner_id, align 4, !dbg !3817, !tbaa !2632
  %cmp = icmp eq i32 %0, -1, !dbg !3819
  br i1 %cmp, label %land.lhs.true, label %land.lhs.true2, !dbg !3820

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @group_id, align 4, !dbg !3821, !tbaa !2632
  %cmp1 = icmp eq i32 %1, -1, !dbg !3822
  br i1 %cmp1, label %if.else, label %land.lhs.true2, !dbg !3823

land.lhs.true2:                                   ; preds = %land.lhs.true, %entry
  %2 = load i8*, i8** %name.addr, align 8, !dbg !3824, !tbaa !2645
  %3 = load i32, i32* @owner_id, align 4, !dbg !3825, !tbaa !2632
  %4 = load i32, i32* @group_id, align 4, !dbg !3826, !tbaa !2632
  %call = call i32 @lchown(i8* %2, i32 %3, i32 %4) #9, !dbg !3827
  %cmp3 = icmp ne i32 %call, 0, !dbg !3828
  br i1 %cmp3, label %if.then, label %if.else, !dbg !3829

if.then:                                          ; preds = %land.lhs.true2
  %call4 = call i32* @__errno_location() #16, !dbg !3830
  %5 = load i32, i32* %call4, align 4, !dbg !3830, !tbaa !2632, !ctir !7
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.83, i64 0, i64 0)) #9, !dbg !3831
  %6 = load i8*, i8** %name.addr, align 8, !dbg !3832, !tbaa !2645
  %call6 = call i8* @quotearg_style(i32 4, i8* %6), !dbg !3832
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %5, i8* %call5, i8* %call6), !dbg !3833
  br label %if.end14, !dbg !3833

if.else:                                          ; preds = %land.lhs.true2, %land.lhs.true
  %7 = load i8*, i8** %name.addr, align 8, !dbg !3834, !tbaa !2645
  %8 = load i32, i32* @mode, align 4, !dbg !3836, !tbaa !2632
  %call7 = call i32 @chmod(i8* %7, i32 %8) #9, !dbg !3837
  %cmp8 = icmp ne i32 %call7, 0, !dbg !3838
  br i1 %cmp8, label %if.then9, label %if.else13, !dbg !3839

if.then9:                                         ; preds = %if.else
  %call10 = call i32* @__errno_location() #16, !dbg !3840
  %9 = load i32, i32* %call10, align 4, !dbg !3840, !tbaa !2632, !ctir !7
  %call11 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.84, i64 0, i64 0)) #9, !dbg !3841
  %10 = load i8*, i8** %name.addr, align 8, !dbg !3842, !tbaa !2645
  %call12 = call i8* @quotearg_style(i32 4, i8* %10), !dbg !3842
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %9, i8* %call11, i8* %call12), !dbg !3843
  br label %if.end, !dbg !3843

if.else13:                                        ; preds = %if.else
  store i8 1, i8* %ok, align 1, !dbg !3844, !tbaa !2739
  br label %if.end

if.end:                                           ; preds = %if.else13, %if.then9
  br label %if.end14

if.end14:                                         ; preds = %if.end, %if.then
  %11 = load i8, i8* @use_default_selinux_context, align 1, !dbg !3845, !tbaa !2739
  %tobool = trunc i8 %11 to i1, !dbg !3845
  br i1 %tobool, label %if.then15, label %if.end16, !dbg !3847

if.then15:                                        ; preds = %if.end14
  %12 = load i8*, i8** %name.addr, align 8, !dbg !3848, !tbaa !2645
  call void @setdefaultfilecon(i8* %12), !dbg !3849
  br label %if.end16, !dbg !3849

if.end16:                                         ; preds = %if.then15, %if.end14
  %13 = load i8, i8* %ok, align 1, !dbg !3850, !tbaa !2739
  %tobool17 = trunc i8 %13 to i1, !dbg !3850
  ret i1 %tobool17, !dbg !3851
}

; Function Attrs: nounwind
declare dso_local i32 @lchown(i8*, i32, i32) #2

; Function Attrs: nounwind
declare dso_local i32 @chmod(i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @setdefaultfilecon(i8* %file) #4 !dbg !345 !ctir !202 {
entry:
  %file.addr = alloca i8*, align 8
  %st = alloca %struct.stat, align 8, !ctir !270
  %scontext = alloca i8*, align 8, !ctir !9
  %p0 = alloca i8*, align 8, !ctir !180
  %p = alloca i8*, align 8, !ctir !180
  %prefix = alloca i8*, align 8, !ctir !9
  store i8* %file, i8** %file.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !3852, metadata !DIExpression()), !dbg !3853
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !3854, metadata !DIExpression()), !dbg !3855
  call void @llvm.dbg.declare(metadata i8** %scontext, metadata !3856, metadata !DIExpression()), !dbg !3857
  store i8* null, i8** %scontext, align 8, !dbg !3857, !tbaa !2645
  %0 = load i32, i32* @selinux_enabled, align 4, !dbg !3858, !tbaa !2632
  %cmp = icmp ne i32 %0, 1, !dbg !3860
  br i1 %cmp, label %if.then, label %if.end, !dbg !3861

if.then:                                          ; preds = %entry
  br label %return, !dbg !3862

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %file.addr, align 8, !dbg !3864, !tbaa !2645
  %call = call i32 @lstat(i8* %1, %struct.stat* %st) #9, !dbg !3866
  %cmp1 = icmp ne i32 %call, 0, !dbg !3867
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !3868

if.then2:                                         ; preds = %if.end
  br label %return, !dbg !3869

if.end3:                                          ; preds = %if.end
  %2 = load i8, i8* @setdefaultfilecon.first_call, align 1, !dbg !3870, !tbaa !2739
  %tobool = trunc i8 %2 to i1, !dbg !3870
  br i1 %tobool, label %land.lhs.true, label %if.end29, !dbg !3872

land.lhs.true:                                    ; preds = %if.end3
  %3 = load i8*, i8** %file.addr, align 8, !dbg !3873, !tbaa !2645
  %arrayidx = getelementptr inbounds i8, i8* %3, i64 0, !dbg !3873, !ctir !180
  %4 = load i8, i8* %arrayidx, align 1, !dbg !3873, !tbaa !3292
  %conv = sext i8 %4 to i32, !dbg !3873
  %cmp4 = icmp eq i32 %conv, 47, !dbg !3873
  br i1 %cmp4, label %if.then6, label %if.end29, !dbg !3874

if.then6:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %p0, metadata !3875, metadata !DIExpression()), !dbg !3877
  call void @llvm.dbg.declare(metadata i8** %p, metadata !3878, metadata !DIExpression()), !dbg !3879
  %5 = load i8*, i8** %file.addr, align 8, !dbg !3880, !tbaa !2645
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 1, !dbg !3881
  store i8* %add.ptr, i8** %p, align 8, !dbg !3879, !tbaa !2645
  br label %while.cond, !dbg !3882

while.cond:                                       ; preds = %while.body, %if.then6
  %6 = load i8*, i8** %p, align 8, !dbg !3883, !tbaa !2645
  %7 = load i8, i8* %6, align 1, !dbg !3883, !tbaa !3292, !ctir !181
  %conv7 = sext i8 %7 to i32, !dbg !3883
  %cmp8 = icmp eq i32 %conv7, 47, !dbg !3883
  br i1 %cmp8, label %while.body, label %while.end, !dbg !3882

while.body:                                       ; preds = %while.cond
  %8 = load i8*, i8** %p, align 8, !dbg !3884, !tbaa !2645
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i32 1, !dbg !3884
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !3884, !tbaa !2645
  br label %while.cond, !dbg !3882, !llvm.loop !3885

while.end:                                        ; preds = %while.cond
  %9 = load i8*, i8** %p, align 8, !dbg !3887, !tbaa !2645
  %add.ptr10 = getelementptr inbounds i8, i8* %9, i64 -1, !dbg !3888
  store i8* %add.ptr10, i8** %p0, align 8, !dbg !3889, !tbaa !2645
  %10 = load i8*, i8** %p, align 8, !dbg !3890, !tbaa !2645
  %11 = load i8, i8* %10, align 1, !dbg !3892, !tbaa !3292, !ctir !181
  %tobool11 = icmp ne i8 %11, 0, !dbg !3892
  br i1 %tobool11, label %if.then12, label %if.end28, !dbg !3893

if.then12:                                        ; preds = %while.end
  call void @llvm.dbg.declare(metadata i8** %prefix, metadata !3894, metadata !DIExpression()), !dbg !3896
  br label %do.body, !dbg !3897

do.body:                                          ; preds = %land.end, %if.then12
  %12 = load i8*, i8** %p, align 8, !dbg !3898, !tbaa !2645
  %incdec.ptr13 = getelementptr inbounds i8, i8* %12, i32 1, !dbg !3898
  store i8* %incdec.ptr13, i8** %p, align 8, !dbg !3898, !tbaa !2645
  br label %do.cond, !dbg !3900

do.cond:                                          ; preds = %do.body
  %13 = load i8*, i8** %p, align 8, !dbg !3901, !tbaa !2645
  %14 = load i8, i8* %13, align 1, !dbg !3902, !tbaa !3292, !ctir !181
  %conv14 = sext i8 %14 to i32, !dbg !3902
  %tobool15 = icmp ne i32 %conv14, 0, !dbg !3902
  br i1 %tobool15, label %land.rhs, label %land.end, !dbg !3903

land.rhs:                                         ; preds = %do.cond
  %15 = load i8*, i8** %p, align 8, !dbg !3904, !tbaa !2645
  %16 = load i8, i8* %15, align 1, !dbg !3904, !tbaa !3292, !ctir !181
  %conv16 = sext i8 %16 to i32, !dbg !3904
  %cmp17 = icmp eq i32 %conv16, 47, !dbg !3904
  %lnot = xor i1 %cmp17, true, !dbg !3905
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %17 = phi i1 [ false, %do.cond ], [ %lnot, %land.rhs ], !dbg !3906
  br i1 %17, label %do.body, label %do.end, !dbg !3900, !llvm.loop !3907

do.end:                                           ; preds = %land.end
  %18 = load i8*, i8** %p, align 8, !dbg !3909, !tbaa !2645
  %19 = load i8*, i8** %p0, align 8, !dbg !3910, !tbaa !2645
  %sub.ptr.lhs.cast = ptrtoint i8* %18 to i64, !dbg !3911
  %sub.ptr.rhs.cast = ptrtoint i8* %19 to i64, !dbg !3911
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3911
  %add = add nsw i64 %sub.ptr.sub, 2, !dbg !3912
  %call19 = call noalias i8* @malloc(i64 %add) #9, !dbg !3913
  store i8* %call19, i8** %prefix, align 8, !dbg !3914, !tbaa !2645
  %20 = load i8*, i8** %prefix, align 8, !dbg !3915, !tbaa !2645
  %tobool20 = icmp ne i8* %20, null, !dbg !3915
  br i1 %tobool20, label %if.then21, label %if.end27, !dbg !3917

if.then21:                                        ; preds = %do.end
  %21 = load i8*, i8** %prefix, align 8, !dbg !3918, !tbaa !2645
  %22 = load i8*, i8** %p0, align 8, !dbg !3920, !tbaa !2645
  %23 = load i8*, i8** %p, align 8, !dbg !3921, !tbaa !2645
  %24 = load i8*, i8** %p0, align 8, !dbg !3922, !tbaa !2645
  %sub.ptr.lhs.cast22 = ptrtoint i8* %23 to i64, !dbg !3923
  %sub.ptr.rhs.cast23 = ptrtoint i8* %24 to i64, !dbg !3923
  %sub.ptr.sub24 = sub i64 %sub.ptr.lhs.cast22, %sub.ptr.rhs.cast23, !dbg !3923
  %call25 = call i8* @stpncpy(i8* %21, i8* %22, i64 %sub.ptr.sub24) #9, !dbg !3924
  %call26 = call i8* @stpcpy(i8* %call25, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.85, i64 0, i64 0)) #9, !dbg !3925
  %25 = load i8*, i8** %prefix, align 8, !dbg !3926, !tbaa !2645
  call void @free(i8* %25) #9, !dbg !3927
  br label %if.end27, !dbg !3928

if.end27:                                         ; preds = %if.then21, %do.end
  br label %if.end28, !dbg !3929

if.end28:                                         ; preds = %if.end27, %while.end
  br label %if.end29, !dbg !3930

if.end29:                                         ; preds = %if.end28, %land.lhs.true, %if.end3
  store i8 0, i8* @setdefaultfilecon.first_call, align 1, !dbg !3931, !tbaa !2739
  %26 = load i8*, i8** %file.addr, align 8, !dbg !3932, !tbaa !2645
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !3934, !ctir !270
  %27 = load i32, i32* %st_mode, align 8, !dbg !3934, !tbaa !2911, !ctir !140
  %call30 = call i32 @matchpathcon(i8* %26, i32 %27, i8** %scontext), !dbg !3935
  %cmp31 = icmp ne i32 %call30, 0, !dbg !3936
  br i1 %cmp31, label %if.then36, label %lor.lhs.false, !dbg !3937

lor.lhs.false:                                    ; preds = %if.end29
  %28 = load i8*, i8** %scontext, align 8, !dbg !3938, !tbaa !2645
  %call33 = call i32 @strcmp(i8* %28, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.86, i64 0, i64 0)) #14, !dbg !3938
  %cmp34 = icmp eq i32 %call33, 0, !dbg !3938
  br i1 %cmp34, label %if.then36, label %if.end41, !dbg !3939

if.then36:                                        ; preds = %lor.lhs.false, %if.end29
  %29 = load i8*, i8** %scontext, align 8, !dbg !3940, !tbaa !2645
  %cmp37 = icmp ne i8* %29, null, !dbg !3943
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !3944

if.then39:                                        ; preds = %if.then36
  %30 = load i8*, i8** %scontext, align 8, !dbg !3945, !tbaa !2645
  call void @freecon(i8* %30), !dbg !3946
  br label %if.end40, !dbg !3946

if.end40:                                         ; preds = %if.then39, %if.then36
  br label %return, !dbg !3947

if.end41:                                         ; preds = %lor.lhs.false
  %31 = load i8*, i8** %file.addr, align 8, !dbg !3948, !tbaa !2645
  %32 = load i8*, i8** %scontext, align 8, !dbg !3950, !tbaa !2645
  %call42 = call i32 @lsetfilecon(i8* %31, i8* %32), !dbg !3951
  %cmp43 = icmp slt i32 %call42, 0, !dbg !3952
  br i1 %cmp43, label %land.lhs.true45, label %if.end54, !dbg !3953

land.lhs.true45:                                  ; preds = %if.end41
  %call46 = call i32* @__errno_location() #16, !dbg !3954
  %33 = load i32, i32* %call46, align 4, !dbg !3954, !tbaa !2632, !ctir !7
  %cmp47 = icmp ne i32 %33, 95, !dbg !3955
  br i1 %cmp47, label %if.then49, label %if.end54, !dbg !3956

if.then49:                                        ; preds = %land.lhs.true45
  %call50 = call i32* @__errno_location() #16, !dbg !3957
  %34 = load i32, i32* %call50, align 4, !dbg !3957, !tbaa !2632, !ctir !7
  %call51 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.87, i64 0, i64 0)) #9, !dbg !3958
  %35 = load i8*, i8** %file.addr, align 8, !dbg !3959, !tbaa !2645
  %call52 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %35), !dbg !3959
  %36 = load i8*, i8** %scontext, align 8, !dbg !3960, !tbaa !2645
  %call53 = call i8* @quote_n(i32 1, i8* %36), !dbg !3961
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %34, i8* %call51, i8* %call52, i8* %call53), !dbg !3962
  br label %if.end54, !dbg !3962

if.end54:                                         ; preds = %if.then49, %land.lhs.true45, %if.end41
  %37 = load i8*, i8** %scontext, align 8, !dbg !3963, !tbaa !2645
  call void @freecon(i8* %37), !dbg !3964
  br label %return, !dbg !3965

return:                                           ; preds = %if.end54, %if.end40, %if.then2, %if.then
  ret void, !dbg !3966
}

; Function Attrs: nounwind
declare dso_local i32 @lstat(i8*, %struct.stat*) #2

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #2

; Function Attrs: nounwind
declare dso_local i8* @stpncpy(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i8* @stpcpy(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @fork() #2

; Function Attrs: nounwind
declare dso_local i32 @execlp(i8*, i8*, ...) #2

declare dso_local i32 @waitpid(i32, i32*, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @need_copy(i8* %src_name, i8* %dest_name, %struct.cp_options* %x) #4 !dbg !3967 !ctir !262 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %dest_name.addr = alloca i8*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %src_sb = alloca %struct.stat, align 8, !ctir !270
  %dest_sb = alloca %struct.stat, align 8, !ctir !270
  %src_fd = alloca i32, align 4, !ctir !7
  %dest_fd = alloca i32, align 4, !ctir !7
  %content_match = alloca i8, align 1, !ctir !142
  %ruid = alloca i32, align 4, !ctir !127
  %rgid = alloca i32, align 4, !ctir !129
  %file_scontext = alloca i8*, align 8, !ctir !9
  %to_scontext = alloca i8*, align 8, !ctir !9
  %scontext_match = alloca i8, align 1, !ctir !142
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !3968, metadata !DIExpression()), !dbg !3969
  store i8* %dest_name, i8** %dest_name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dest_name.addr, metadata !3970, metadata !DIExpression()), !dbg !3971
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !3972, metadata !DIExpression()), !dbg !3973
  call void @llvm.dbg.declare(metadata %struct.stat* %src_sb, metadata !3974, metadata !DIExpression()), !dbg !3975
  call void @llvm.dbg.declare(metadata %struct.stat* %dest_sb, metadata !3976, metadata !DIExpression()), !dbg !3977
  call void @llvm.dbg.declare(metadata i32* %src_fd, metadata !3978, metadata !DIExpression()), !dbg !3979
  call void @llvm.dbg.declare(metadata i32* %dest_fd, metadata !3980, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.declare(metadata i8* %content_match, metadata !3982, metadata !DIExpression()), !dbg !3983
  %0 = load i32, i32* @mode, align 4, !dbg !3984, !tbaa !2632
  %call = call zeroext i1 @extra_mode(i32 %0), !dbg !3986
  br i1 %call, label %if.then, label %if.end, !dbg !3987

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !3988
  br label %return, !dbg !3988

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %src_name.addr, align 8, !dbg !3989, !tbaa !2645
  %call1 = call i32 @lstat(i8* %1, %struct.stat* %src_sb) #9, !dbg !3991
  %cmp = icmp ne i32 %call1, 0, !dbg !3992
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !3993

if.then2:                                         ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !3994
  br label %return, !dbg !3994

if.end3:                                          ; preds = %if.end
  %2 = load i8*, i8** %dest_name.addr, align 8, !dbg !3995, !tbaa !2645
  %call4 = call i32 @lstat(i8* %2, %struct.stat* %dest_sb) #9, !dbg !3997
  %cmp5 = icmp ne i32 %call4, 0, !dbg !3998
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !3999

if.then6:                                         ; preds = %if.end3
  store i1 true, i1* %retval, align 1, !dbg !4000
  br label %return, !dbg !4000

if.end7:                                          ; preds = %if.end3
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !4001, !ctir !270
  %3 = load i32, i32* %st_mode, align 8, !dbg !4001, !tbaa !2911, !ctir !140
  %and = and i32 %3, 61440, !dbg !4001
  %cmp8 = icmp eq i32 %and, 32768, !dbg !4001
  br i1 %cmp8, label %lor.lhs.false, label %if.then18, !dbg !4003

lor.lhs.false:                                    ; preds = %if.end7
  %st_mode9 = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 3, !dbg !4004, !ctir !270
  %4 = load i32, i32* %st_mode9, align 8, !dbg !4004, !tbaa !2911, !ctir !140
  %and10 = and i32 %4, 61440, !dbg !4004
  %cmp11 = icmp eq i32 %and10, 32768, !dbg !4004
  br i1 %cmp11, label %lor.lhs.false12, label %if.then18, !dbg !4005

lor.lhs.false12:                                  ; preds = %lor.lhs.false
  %st_mode13 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !4006, !ctir !270
  %5 = load i32, i32* %st_mode13, align 8, !dbg !4006, !tbaa !2911, !ctir !140
  %call14 = call zeroext i1 @extra_mode(i32 %5), !dbg !4007
  br i1 %call14, label %if.then18, label %lor.lhs.false15, !dbg !4008

lor.lhs.false15:                                  ; preds = %lor.lhs.false12
  %st_mode16 = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 3, !dbg !4009, !ctir !270
  %6 = load i32, i32* %st_mode16, align 8, !dbg !4009, !tbaa !2911, !ctir !140
  %call17 = call zeroext i1 @extra_mode(i32 %6), !dbg !4010
  br i1 %call17, label %if.then18, label %if.end19, !dbg !4011

if.then18:                                        ; preds = %lor.lhs.false15, %lor.lhs.false12, %lor.lhs.false, %if.end7
  store i1 true, i1* %retval, align 1, !dbg !4012
  br label %return, !dbg !4012

if.end19:                                         ; preds = %lor.lhs.false15
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 8, !dbg !4013, !ctir !270
  %7 = load i64, i64* %st_size, align 8, !dbg !4013, !tbaa !4015, !ctir !29
  %st_size20 = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 8, !dbg !4016, !ctir !270
  %8 = load i64, i64* %st_size20, align 8, !dbg !4016, !tbaa !4015, !ctir !29
  %cmp21 = icmp ne i64 %7, %8, !dbg !4017
  br i1 %cmp21, label %if.then26, label %lor.lhs.false22, !dbg !4018

lor.lhs.false22:                                  ; preds = %if.end19
  %st_mode23 = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 3, !dbg !4019, !ctir !270
  %9 = load i32, i32* %st_mode23, align 8, !dbg !4019, !tbaa !2911, !ctir !140
  %and24 = and i32 %9, 4095, !dbg !4020
  %10 = load i32, i32* @mode, align 4, !dbg !4021, !tbaa !2632
  %cmp25 = icmp ne i32 %and24, %10, !dbg !4022
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !4023

if.then26:                                        ; preds = %lor.lhs.false22, %if.end19
  store i1 true, i1* %retval, align 1, !dbg !4024
  br label %return, !dbg !4024

if.end27:                                         ; preds = %lor.lhs.false22
  %11 = load i32, i32* @owner_id, align 4, !dbg !4025, !tbaa !2632
  %cmp28 = icmp eq i32 %11, -1, !dbg !4027
  br i1 %cmp28, label %if.then29, label %if.else, !dbg !4028

if.then29:                                        ; preds = %if.end27
  %call30 = call i32* @__errno_location() #16, !dbg !4029
  store i32 0, i32* %call30, align 4, !dbg !4031, !tbaa !2632, !ctir !7
  call void @llvm.dbg.declare(metadata i32* %ruid, metadata !4032, metadata !DIExpression()), !dbg !4033
  %call31 = call i32 @getuid() #9, !dbg !4034
  store i32 %call31, i32* %ruid, align 4, !dbg !4033, !tbaa !2632
  %12 = load i32, i32* %ruid, align 4, !dbg !4035, !tbaa !2632
  %cmp32 = icmp eq i32 %12, -1, !dbg !4037
  br i1 %cmp32, label %land.lhs.true, label %lor.lhs.false34, !dbg !4038

land.lhs.true:                                    ; preds = %if.then29
  %call33 = call i32* @__errno_location() #16, !dbg !4039
  %13 = load i32, i32* %call33, align 4, !dbg !4039, !tbaa !2632, !ctir !7
  %tobool = icmp ne i32 %13, 0, !dbg !4039
  br i1 %tobool, label %if.then36, label %lor.lhs.false34, !dbg !4040

lor.lhs.false34:                                  ; preds = %land.lhs.true, %if.then29
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 4, !dbg !4041, !ctir !270
  %14 = load i32, i32* %st_uid, align 4, !dbg !4041, !tbaa !4042, !ctir !128
  %15 = load i32, i32* %ruid, align 4, !dbg !4043, !tbaa !2632
  %cmp35 = icmp ne i32 %14, %15, !dbg !4044
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !4045

if.then36:                                        ; preds = %lor.lhs.false34, %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !4046
  br label %return, !dbg !4046

if.end37:                                         ; preds = %lor.lhs.false34
  br label %if.end42, !dbg !4047

if.else:                                          ; preds = %if.end27
  %st_uid38 = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 4, !dbg !4048, !ctir !270
  %16 = load i32, i32* %st_uid38, align 4, !dbg !4048, !tbaa !4042, !ctir !128
  %17 = load i32, i32* @owner_id, align 4, !dbg !4050, !tbaa !2632
  %cmp39 = icmp ne i32 %16, %17, !dbg !4051
  br i1 %cmp39, label %if.then40, label %if.end41, !dbg !4052

if.then40:                                        ; preds = %if.else
  store i1 true, i1* %retval, align 1, !dbg !4053
  br label %return, !dbg !4053

if.end41:                                         ; preds = %if.else
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.end37
  %18 = load i32, i32* @group_id, align 4, !dbg !4054, !tbaa !2632
  %cmp43 = icmp eq i32 %18, -1, !dbg !4056
  br i1 %cmp43, label %if.then44, label %if.else55, !dbg !4057

if.then44:                                        ; preds = %if.end42
  %call45 = call i32* @__errno_location() #16, !dbg !4058
  store i32 0, i32* %call45, align 4, !dbg !4060, !tbaa !2632, !ctir !7
  call void @llvm.dbg.declare(metadata i32* %rgid, metadata !4061, metadata !DIExpression()), !dbg !4062
  %call46 = call i32 @getgid() #9, !dbg !4063
  store i32 %call46, i32* %rgid, align 4, !dbg !4062, !tbaa !2632
  %19 = load i32, i32* %rgid, align 4, !dbg !4064, !tbaa !2632
  %cmp47 = icmp eq i32 %19, -1, !dbg !4066
  br i1 %cmp47, label %land.lhs.true48, label %lor.lhs.false51, !dbg !4067

land.lhs.true48:                                  ; preds = %if.then44
  %call49 = call i32* @__errno_location() #16, !dbg !4068
  %20 = load i32, i32* %call49, align 4, !dbg !4068, !tbaa !2632, !ctir !7
  %tobool50 = icmp ne i32 %20, 0, !dbg !4068
  br i1 %tobool50, label %if.then53, label %lor.lhs.false51, !dbg !4069

lor.lhs.false51:                                  ; preds = %land.lhs.true48, %if.then44
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 5, !dbg !4070, !ctir !270
  %21 = load i32, i32* %st_gid, align 8, !dbg !4070, !tbaa !4071, !ctir !130
  %22 = load i32, i32* %rgid, align 4, !dbg !4072, !tbaa !2632
  %cmp52 = icmp ne i32 %21, %22, !dbg !4073
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !4074

if.then53:                                        ; preds = %lor.lhs.false51, %land.lhs.true48
  store i1 true, i1* %retval, align 1, !dbg !4075
  br label %return, !dbg !4075

if.end54:                                         ; preds = %lor.lhs.false51
  br label %if.end60, !dbg !4076

if.else55:                                        ; preds = %if.end42
  %st_gid56 = getelementptr inbounds %struct.stat, %struct.stat* %dest_sb, i32 0, i32 5, !dbg !4077, !ctir !270
  %23 = load i32, i32* %st_gid56, align 8, !dbg !4077, !tbaa !4071, !ctir !130
  %24 = load i32, i32* @group_id, align 4, !dbg !4079, !tbaa !2632
  %cmp57 = icmp ne i32 %23, %24, !dbg !4080
  br i1 %cmp57, label %if.then58, label %if.end59, !dbg !4081

if.then58:                                        ; preds = %if.else55
  store i1 true, i1* %retval, align 1, !dbg !4082
  br label %return, !dbg !4082

if.end59:                                         ; preds = %if.else55
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.end54
  %25 = load i32, i32* @selinux_enabled, align 4, !dbg !4083, !tbaa !2632
  %tobool61 = icmp ne i32 %25, 0, !dbg !4083
  br i1 %tobool61, label %land.lhs.true62, label %if.end78, !dbg !4085

land.lhs.true62:                                  ; preds = %if.end60
  %26 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4086, !tbaa !2645
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %26, i32 0, i32 22, !dbg !4087, !ctir !247
  %27 = load i8, i8* %preserve_security_context, align 1, !dbg !4087, !tbaa !2847
  %tobool63 = trunc i8 %27 to i1, !dbg !4087, !ctir !142
  br i1 %tobool63, label %if.then64, label %if.end78, !dbg !4088

if.then64:                                        ; preds = %land.lhs.true62
  call void @llvm.dbg.declare(metadata i8** %file_scontext, metadata !4089, metadata !DIExpression()), !dbg !4091
  store i8* null, i8** %file_scontext, align 8, !dbg !4091, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %to_scontext, metadata !4092, metadata !DIExpression()), !dbg !4093
  store i8* null, i8** %to_scontext, align 8, !dbg !4093, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8* %scontext_match, metadata !4094, metadata !DIExpression()), !dbg !4095
  %28 = load i8*, i8** %src_name.addr, align 8, !dbg !4096, !tbaa !2645
  %call65 = call i32 @getfilecon(i8* %28, i8** %file_scontext), !dbg !4098
  %cmp66 = icmp eq i32 %call65, -1, !dbg !4099
  br i1 %cmp66, label %if.then67, label %if.end68, !dbg !4100

if.then67:                                        ; preds = %if.then64
  store i1 true, i1* %retval, align 1, !dbg !4101
  br label %return, !dbg !4101

if.end68:                                         ; preds = %if.then64
  %29 = load i8*, i8** %dest_name.addr, align 8, !dbg !4102, !tbaa !2645
  %call69 = call i32 @getfilecon(i8* %29, i8** %to_scontext), !dbg !4104
  %cmp70 = icmp eq i32 %call69, -1, !dbg !4105
  br i1 %cmp70, label %if.then71, label %if.end72, !dbg !4106

if.then71:                                        ; preds = %if.end68
  %30 = load i8*, i8** %file_scontext, align 8, !dbg !4107, !tbaa !2645
  call void @freecon(i8* %30), !dbg !4109
  store i1 true, i1* %retval, align 1, !dbg !4110
  br label %return, !dbg !4110

if.end72:                                         ; preds = %if.end68
  %31 = load i8*, i8** %file_scontext, align 8, !dbg !4111, !tbaa !2645
  %32 = load i8*, i8** %to_scontext, align 8, !dbg !4111, !tbaa !2645
  %call73 = call i32 @strcmp(i8* %31, i8* %32) #14, !dbg !4111
  %cmp74 = icmp eq i32 %call73, 0, !dbg !4111
  %frombool = zext i1 %cmp74 to i8, !dbg !4112
  store i8 %frombool, i8* %scontext_match, align 1, !dbg !4112, !tbaa !2739
  %33 = load i8*, i8** %file_scontext, align 8, !dbg !4113, !tbaa !2645
  call void @freecon(i8* %33), !dbg !4114
  %34 = load i8*, i8** %to_scontext, align 8, !dbg !4115, !tbaa !2645
  call void @freecon(i8* %34), !dbg !4116
  %35 = load i8, i8* %scontext_match, align 1, !dbg !4117, !tbaa !2739
  %tobool75 = trunc i8 %35 to i1, !dbg !4117
  br i1 %tobool75, label %if.end77, label %if.then76, !dbg !4119

if.then76:                                        ; preds = %if.end72
  store i1 true, i1* %retval, align 1, !dbg !4120
  br label %return, !dbg !4120

if.end77:                                         ; preds = %if.end72
  br label %if.end78, !dbg !4121

if.end78:                                         ; preds = %if.end77, %land.lhs.true62, %if.end60
  %36 = load i8*, i8** %src_name.addr, align 8, !dbg !4122, !tbaa !2645
  %call79 = call i32 (i8*, i32, ...) @open(i8* %36, i32 0), !dbg !4123
  store i32 %call79, i32* %src_fd, align 4, !dbg !4124, !tbaa !2632
  %37 = load i32, i32* %src_fd, align 4, !dbg !4125, !tbaa !2632
  %cmp80 = icmp slt i32 %37, 0, !dbg !4127
  br i1 %cmp80, label %if.then81, label %if.end82, !dbg !4128

if.then81:                                        ; preds = %if.end78
  store i1 true, i1* %retval, align 1, !dbg !4129
  br label %return, !dbg !4129

if.end82:                                         ; preds = %if.end78
  %38 = load i8*, i8** %dest_name.addr, align 8, !dbg !4130, !tbaa !2645
  %call83 = call i32 (i8*, i32, ...) @open(i8* %38, i32 0), !dbg !4131
  store i32 %call83, i32* %dest_fd, align 4, !dbg !4132, !tbaa !2632
  %39 = load i32, i32* %dest_fd, align 4, !dbg !4133, !tbaa !2632
  %cmp84 = icmp slt i32 %39, 0, !dbg !4135
  br i1 %cmp84, label %if.then85, label %if.end87, !dbg !4136

if.then85:                                        ; preds = %if.end82
  %40 = load i32, i32* %src_fd, align 4, !dbg !4137, !tbaa !2632
  %call86 = call i32 @close(i32 %40), !dbg !4139
  store i1 true, i1* %retval, align 1, !dbg !4140
  br label %return, !dbg !4140

if.end87:                                         ; preds = %if.end82
  %41 = load i32, i32* %src_fd, align 4, !dbg !4141, !tbaa !2632
  %42 = load i32, i32* %dest_fd, align 4, !dbg !4142, !tbaa !2632
  %call88 = call zeroext i1 @have_same_content(i32 %41, i32 %42), !dbg !4143
  %frombool89 = zext i1 %call88 to i8, !dbg !4144
  store i8 %frombool89, i8* %content_match, align 1, !dbg !4144, !tbaa !2739
  %43 = load i32, i32* %src_fd, align 4, !dbg !4145, !tbaa !2632
  %call90 = call i32 @close(i32 %43), !dbg !4146
  %44 = load i32, i32* %dest_fd, align 4, !dbg !4147, !tbaa !2632
  %call91 = call i32 @close(i32 %44), !dbg !4148
  %45 = load i8, i8* %content_match, align 1, !dbg !4149, !tbaa !2739
  %tobool92 = trunc i8 %45 to i1, !dbg !4149
  %lnot = xor i1 %tobool92, true, !dbg !4150
  store i1 %lnot, i1* %retval, align 1, !dbg !4151
  br label %return, !dbg !4151

return:                                           ; preds = %if.end87, %if.then85, %if.then81, %if.then76, %if.then71, %if.then67, %if.then58, %if.then53, %if.then40, %if.then36, %if.then26, %if.then18, %if.then6, %if.then2, %if.then
  %46 = load i1, i1* %retval, align 1, !dbg !4152
  ret i1 %46, !dbg !4152
}

; Function Attrs: nounwind
declare dso_local i32 @getuid() #2

; Function Attrs: nounwind
declare dso_local i32 @getgid() #2

declare dso_local i32 @open(i8*, i32, ...) #3

declare dso_local i32 @close(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @have_same_content(i32 %a_fd, i32 %b_fd) #4 !dbg !337 !ctir !264 {
entry:
  %retval = alloca i1, align 1
  %a_fd.addr = alloca i32, align 4
  %b_fd.addr = alloca i32, align 4
  %size = alloca i64, align 8, !ctir !55
  store i32 %a_fd, i32* %a_fd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %a_fd.addr, metadata !4153, metadata !DIExpression()), !dbg !4154
  store i32 %b_fd, i32* %b_fd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %b_fd.addr, metadata !4155, metadata !DIExpression()), !dbg !4156
  call void @llvm.dbg.declare(metadata i64* %size, metadata !4157, metadata !DIExpression()), !dbg !4158
  br label %while.cond, !dbg !4159

while.cond:                                       ; preds = %if.end6, %entry
  %0 = load i32, i32* %a_fd.addr, align 4, !dbg !4160, !tbaa !2632
  %call = call i64 @full_read(i32 %0, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @have_same_content.a_buff, i64 0, i64 0), i64 4096), !dbg !4161
  store i64 %call, i64* %size, align 8, !dbg !4162, !tbaa !3285
  %cmp = icmp ult i64 0, %call, !dbg !4163
  br i1 %cmp, label %while.body, label %while.end, !dbg !4159

while.body:                                       ; preds = %while.cond
  %1 = load i64, i64* %size, align 8, !dbg !4164, !tbaa !3285
  %2 = load i32, i32* %b_fd.addr, align 4, !dbg !4167, !tbaa !2632
  %call1 = call i64 @full_read(i32 %2, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @have_same_content.b_buff, i64 0, i64 0), i64 4096), !dbg !4168
  %cmp2 = icmp ne i64 %1, %call1, !dbg !4169
  br i1 %cmp2, label %if.then, label %if.end, !dbg !4170

if.then:                                          ; preds = %while.body
  store i1 false, i1* %retval, align 1, !dbg !4171
  br label %return, !dbg !4171

if.end:                                           ; preds = %while.body
  %3 = load i64, i64* %size, align 8, !dbg !4172, !tbaa !3285
  %call3 = call i32 @memcmp(i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @have_same_content.a_buff, i64 0, i64 0), i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @have_same_content.b_buff, i64 0, i64 0), i64 %3) #14, !dbg !4174
  %cmp4 = icmp ne i32 %call3, 0, !dbg !4175
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !4176

if.then5:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !4177
  br label %return, !dbg !4177

if.end6:                                          ; preds = %if.end
  br label %while.cond, !dbg !4159, !llvm.loop !4178

while.end:                                        ; preds = %while.cond
  %4 = load i64, i64* %size, align 8, !dbg !4180, !tbaa !3285
  %cmp7 = icmp eq i64 %4, 0, !dbg !4181
  store i1 %cmp7, i1* %retval, align 1, !dbg !4182
  br label %return, !dbg !4182

return:                                           ; preds = %while.end, %if.then5, %if.then
  %5 = load i1, i1* %retval, align 1, !dbg !4183
  ret i1 %5, !dbg !4183
}

; Function Attrs: nounwind readonly
declare dso_local i32 @memcmp(i8*, i8*, i64) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @restorecon(i8* %path, i1 zeroext %recurse, i1 zeroext %preserve) #4 !dbg !4184 !ctir !254 {
entry:
  %path.addr = alloca i8*, align 8
  %recurse.addr = alloca i8, align 1
  %preserve.addr = alloca i8, align 1
  store i8* %path, i8** %path.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !4185, metadata !DIExpression()), !dbg !4186
  %frombool = zext i1 %recurse to i8
  store i8 %frombool, i8* %recurse.addr, align 1, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %recurse.addr, metadata !4187, metadata !DIExpression()), !dbg !4188
  %frombool1 = zext i1 %preserve to i8
  store i8 %frombool1, i8* %preserve.addr, align 1, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %preserve.addr, metadata !4189, metadata !DIExpression()), !dbg !4190
  %call = call i32* @__errno_location() #16, !dbg !4191
  store i32 95, i32* %call, align 4, !dbg !4192, !tbaa !2632, !ctir !7
  ret i1 false, !dbg !4193
}

declare dso_local %struct.passwd* @getpwnam(i8*) #3

declare dso_local void @endpwent() #3

declare dso_local %struct.group* @getgrnam(i8*) #3

declare dso_local void @endgrent() #3

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @prog_fprintf(%struct._IO_FILE* %fp, i8* %fmt, ...) #4 !dbg !4194 !ctir !1409 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %fmt.addr = alloca i8*, align 8
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1445
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !4197, metadata !DIExpression()), !dbg !4198
  store i8* %fmt, i8** %fmt.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !4199, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !4201, metadata !DIExpression()), !dbg !4202
  %0 = load i8*, i8** @program_name, align 8, !dbg !4203, !tbaa !2645
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !4203, !tbaa !2645
  %call = call i32 @fputs_unlocked(i8* %0, %struct._IO_FILE* %1), !dbg !4203
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !4204, !tbaa !2645
  %call1 = call i32 @fputs_unlocked(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.88, i64 0, i64 0), %struct._IO_FILE* %2), !dbg !4204
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !4205
  %arraydecay2 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !4205
  call void @llvm.va_start(i8* %arraydecay2), !dbg !4205
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !4206, !tbaa !2645
  %4 = load i8*, i8** %fmt.addr, align 8, !dbg !4207, !tbaa !2645
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !4208
  %call4 = call i32 @vfprintf(%struct._IO_FILE* %3, i8* %4, %struct.__va_list_tag* %arraydecay3), !dbg !4209
  %arraydecay5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !4210
  %arraydecay56 = bitcast %struct.__va_list_tag* %arraydecay5 to i8*, !dbg !4210
  call void @llvm.va_end(i8* %arraydecay56), !dbg !4210
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !4211, !tbaa !2645
  %call7 = call i32 @fputc_unlocked(i32 10, %struct._IO_FILE* %5), !dbg !4211
  ret void, !dbg !4212
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #9

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) #3

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #9

declare dso_local i32 @fputc_unlocked(i32, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @set_process_security_ctx(i8* %src_name, i8* %dst_name, i32 %mode, i1 zeroext %new_dst, %struct.cp_options* %x) #4 !dbg !4213 !ctir !354 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  %new_dst.addr = alloca i8, align 1
  %x.addr = alloca %struct.cp_options*, align 8
  %all_errors = alloca i8, align 1, !ctir !142
  %some_errors = alloca i8, align 1, !ctir !142
  %con = alloca i8*, align 8, !ctir !9
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !4214, metadata !DIExpression()), !dbg !4215
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !4216, metadata !DIExpression()), !dbg !4217
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4218, metadata !DIExpression()), !dbg !4219
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !4220, metadata !DIExpression()), !dbg !4221
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !4222, metadata !DIExpression()), !dbg !4223
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4224, !tbaa !2645
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 22, !dbg !4226, !ctir !357
  %1 = load i8, i8* %preserve_security_context, align 1, !dbg !4226, !tbaa !2847
  %tobool = trunc i8 %1 to i1, !dbg !4226, !ctir !142
  br i1 %tobool, label %if.then, label %if.else40, !dbg !4227

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %all_errors, metadata !4228, metadata !DIExpression()), !dbg !4230
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4231, !tbaa !2645
  %data_copy_required = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 20, !dbg !4232, !ctir !357
  %3 = load i8, i8* %data_copy_required, align 1, !dbg !4232, !tbaa !3199
  %tobool1 = trunc i8 %3 to i1, !dbg !4232, !ctir !142
  br i1 %tobool1, label %lor.rhs, label %lor.end, !dbg !4233

lor.rhs:                                          ; preds = %if.then
  %4 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4234, !tbaa !2645
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %4, i32 0, i32 23, !dbg !4235, !ctir !357
  %5 = load i8, i8* %require_preserve_context, align 2, !dbg !4235, !tbaa !3246
  %tobool2 = trunc i8 %5 to i1, !dbg !4235, !ctir !142
  br label %lor.end, !dbg !4233

lor.end:                                          ; preds = %lor.rhs, %if.then
  %6 = phi i1 [ true, %if.then ], [ %tobool2, %lor.rhs ]
  %frombool3 = zext i1 %6 to i8, !dbg !4230
  store i8 %frombool3, i8* %all_errors, align 1, !dbg !4230, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %some_errors, metadata !4236, metadata !DIExpression()), !dbg !4237
  %7 = load i8, i8* %all_errors, align 1, !dbg !4238, !tbaa !2739
  %tobool4 = trunc i8 %7 to i1, !dbg !4238
  br i1 %tobool4, label %land.end, label %land.rhs, !dbg !4239

land.rhs:                                         ; preds = %lor.end
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4240, !tbaa !2645
  %reduce_diagnostics = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 26, !dbg !4241, !ctir !357
  %9 = load i8, i8* %reduce_diagnostics, align 1, !dbg !4241, !tbaa !3195
  %tobool5 = trunc i8 %9 to i1, !dbg !4241, !ctir !142
  %lnot = xor i1 %tobool5, true, !dbg !4242
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.end
  %10 = phi i1 [ false, %lor.end ], [ %lnot, %land.rhs ], !dbg !4243
  %frombool6 = zext i1 %10 to i8, !dbg !4237
  store i8 %frombool6, i8* %some_errors, align 1, !dbg !4237, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8** %con, metadata !4244, metadata !DIExpression()), !dbg !4245
  %11 = load i8*, i8** %src_name.addr, align 8, !dbg !4246, !tbaa !2645
  %call = call i32 @lgetfilecon(i8* %11, i8** %con), !dbg !4248
  %cmp = icmp sle i32 0, %call, !dbg !4249
  br i1 %cmp, label %if.then7, label %if.else, !dbg !4250

if.then7:                                         ; preds = %land.end
  %12 = load i8*, i8** %con, align 8, !dbg !4251, !tbaa !2645
  %call8 = call i32 @setfscreatecon(i8* %12), !dbg !4254
  %cmp9 = icmp slt i32 %call8, 0, !dbg !4255
  br i1 %cmp9, label %if.then10, label %if.end23, !dbg !4256

if.then10:                                        ; preds = %if.then7
  %13 = load i8, i8* %all_errors, align 1, !dbg !4257, !tbaa !2739
  %tobool11 = trunc i8 %13 to i1, !dbg !4257
  br i1 %tobool11, label %if.then15, label %lor.lhs.false, !dbg !4260

lor.lhs.false:                                    ; preds = %if.then10
  %14 = load i8, i8* %some_errors, align 1, !dbg !4261, !tbaa !2739
  %tobool12 = trunc i8 %14 to i1, !dbg !4261
  br i1 %tobool12, label %land.lhs.true, label %if.end, !dbg !4262

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call13 = call i32* @__errno_location() #16, !dbg !4263
  %15 = load i32, i32* %call13, align 4, !dbg !4263, !tbaa !2632, !ctir !7
  %call14 = call zeroext i1 @errno_unsupported(i32 %15), !dbg !4264
  br i1 %call14, label %if.end, label %if.then15, !dbg !4265

if.then15:                                        ; preds = %land.lhs.true, %if.then10
  %call16 = call i32* @__errno_location() #16, !dbg !4266
  %16 = load i32, i32* %call16, align 4, !dbg !4266, !tbaa !2632, !ctir !7
  %call17 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.89, i64 0, i64 0)) #9, !dbg !4267
  %17 = load i8*, i8** %con, align 8, !dbg !4268, !tbaa !2645
  %call18 = call i8* @quote(i8* %17), !dbg !4269
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %16, i8* %call17, i8* %call18), !dbg !4270
  br label %if.end, !dbg !4270

if.end:                                           ; preds = %if.then15, %land.lhs.true, %lor.lhs.false
  %18 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4271, !tbaa !2645
  %require_preserve_context19 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %18, i32 0, i32 23, !dbg !4273, !ctir !357
  %19 = load i8, i8* %require_preserve_context19, align 2, !dbg !4273, !tbaa !3246
  %tobool20 = trunc i8 %19 to i1, !dbg !4273, !ctir !142
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !4274

if.then21:                                        ; preds = %if.end
  %20 = load i8*, i8** %con, align 8, !dbg !4275, !tbaa !2645
  call void @freecon(i8* %20), !dbg !4277
  store i1 false, i1* %retval, align 1, !dbg !4278
  br label %return, !dbg !4278

if.end22:                                         ; preds = %if.end
  br label %if.end23, !dbg !4279

if.end23:                                         ; preds = %if.end22, %if.then7
  %21 = load i8*, i8** %con, align 8, !dbg !4280, !tbaa !2645
  call void @freecon(i8* %21), !dbg !4281
  br label %if.end39, !dbg !4282

if.else:                                          ; preds = %land.end
  %22 = load i8, i8* %all_errors, align 1, !dbg !4283, !tbaa !2739
  %tobool24 = trunc i8 %22 to i1, !dbg !4283
  br i1 %tobool24, label %if.then30, label %lor.lhs.false25, !dbg !4286

lor.lhs.false25:                                  ; preds = %if.else
  %23 = load i8, i8* %some_errors, align 1, !dbg !4287, !tbaa !2739
  %tobool26 = trunc i8 %23 to i1, !dbg !4287
  br i1 %tobool26, label %land.lhs.true27, label %if.end34, !dbg !4288

land.lhs.true27:                                  ; preds = %lor.lhs.false25
  %call28 = call i32* @__errno_location() #16, !dbg !4289
  %24 = load i32, i32* %call28, align 4, !dbg !4289, !tbaa !2632, !ctir !7
  %call29 = call zeroext i1 @errno_unsupported(i32 %24), !dbg !4290
  br i1 %call29, label %if.end34, label %if.then30, !dbg !4291

if.then30:                                        ; preds = %land.lhs.true27, %if.else
  %call31 = call i32* @__errno_location() #16, !dbg !4292
  %25 = load i32, i32* %call31, align 4, !dbg !4292, !tbaa !2632, !ctir !7
  %call32 = call i8* @gettext(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1.90, i64 0, i64 0)) #9, !dbg !4294
  %26 = load i8*, i8** %src_name.addr, align 8, !dbg !4295, !tbaa !2645
  %call33 = call i8* @quotearg_style(i32 4, i8* %26), !dbg !4295
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %25, i8* %call32, i8* %call33), !dbg !4296
  br label %if.end34, !dbg !4297

if.end34:                                         ; preds = %if.then30, %land.lhs.true27, %lor.lhs.false25
  %27 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4298, !tbaa !2645
  %require_preserve_context35 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %27, i32 0, i32 23, !dbg !4300, !ctir !357
  %28 = load i8, i8* %require_preserve_context35, align 2, !dbg !4300, !tbaa !3246
  %tobool36 = trunc i8 %28 to i1, !dbg !4300, !ctir !142
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !4301

if.then37:                                        ; preds = %if.end34
  store i1 false, i1* %retval, align 1, !dbg !4302
  br label %return, !dbg !4302

if.end38:                                         ; preds = %if.end34
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.end23
  br label %if.end56, !dbg !4303

if.else40:                                        ; preds = %entry
  %29 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4304, !tbaa !2645
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %29, i32 0, i32 18, !dbg !4306, !ctir !357
  %30 = load i8, i8* %set_security_context, align 1, !dbg !4306, !tbaa !2863
  %tobool41 = trunc i8 %30 to i1, !dbg !4306, !ctir !142
  br i1 %tobool41, label %if.then42, label %if.end55, !dbg !4307

if.then42:                                        ; preds = %if.else40
  %31 = load i8, i8* %new_dst.addr, align 1, !dbg !4308, !tbaa !2739
  %tobool43 = trunc i8 %31 to i1, !dbg !4308
  br i1 %tobool43, label %land.lhs.true44, label %if.end54, !dbg !4311

land.lhs.true44:                                  ; preds = %if.then42
  %32 = load i8*, i8** %dst_name.addr, align 8, !dbg !4312, !tbaa !2645
  %33 = load i32, i32* %mode.addr, align 4, !dbg !4313, !tbaa !2632
  %call45 = call i32 @defaultcon.91(i8* %32, i32 %33), !dbg !4314
  %cmp46 = icmp slt i32 %call45, 0, !dbg !4315
  br i1 %cmp46, label %land.lhs.true47, label %if.end54, !dbg !4316

land.lhs.true47:                                  ; preds = %land.lhs.true44
  %call48 = call i32* @__errno_location() #16, !dbg !4317
  %34 = load i32, i32* %call48, align 4, !dbg !4317, !tbaa !2632, !ctir !7
  %call49 = call zeroext i1 @ignorable_ctx_err.92(i32 %34), !dbg !4318
  br i1 %call49, label %if.end54, label %if.then50, !dbg !4319

if.then50:                                        ; preds = %land.lhs.true47
  %call51 = call i32* @__errno_location() #16, !dbg !4320
  %35 = load i32, i32* %call51, align 4, !dbg !4320, !tbaa !2632, !ctir !7
  %call52 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.93, i64 0, i64 0)) #9, !dbg !4322
  %36 = load i8*, i8** %dst_name.addr, align 8, !dbg !4323, !tbaa !2645
  %call53 = call i8* @quotearg_style(i32 4, i8* %36), !dbg !4323
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %35, i8* %call52, i8* %call53), !dbg !4324
  br label %if.end54, !dbg !4325

if.end54:                                         ; preds = %if.then50, %land.lhs.true47, %land.lhs.true44, %if.then42
  br label %if.end55, !dbg !4326

if.end55:                                         ; preds = %if.end54, %if.else40
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.end39
  store i1 true, i1* %retval, align 1, !dbg !4327
  br label %return, !dbg !4327

return:                                           ; preds = %if.end56, %if.then37, %if.then21
  %37 = load i1, i1* %retval, align 1, !dbg !4328
  ret i1 %37, !dbg !4328
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @errno_unsupported(i32 %err) #4 !dbg !4329 !ctir !256 {
entry:
  %err.addr = alloca i32, align 4
  store i32 %err, i32* %err.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !4330, metadata !DIExpression()), !dbg !4331
  %0 = load i32, i32* %err.addr, align 4, !dbg !4332, !tbaa !2632
  %cmp = icmp eq i32 %0, 95, !dbg !4333
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !4334

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %err.addr, align 4, !dbg !4335, !tbaa !2632
  %cmp1 = icmp eq i32 %1, 61, !dbg !4336
  br label %lor.end, !dbg !4334

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !4337
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @defaultcon.91(i8* %path, i32 %mode) #4 !dbg !4338 !ctir !250 {
entry:
  %path.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  store i8* %path, i8** %path.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !4339, metadata !DIExpression()), !dbg !4340
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4341, metadata !DIExpression()), !dbg !4342
  %call = call i32* @__errno_location() #16, !dbg !4343
  store i32 95, i32* %call, align 4, !dbg !4344, !tbaa !2632, !ctir !7
  ret i32 -1, !dbg !4345
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @ignorable_ctx_err.92(i32 %err) #4 !dbg !4346 !ctir !256 {
entry:
  %err.addr = alloca i32, align 4
  store i32 %err, i32* %err.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !4347, metadata !DIExpression()), !dbg !4348
  %0 = load i32, i32* %err.addr, align 4, !dbg !4349, !tbaa !2632
  %cmp = icmp eq i32 %0, 95, !dbg !4350
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !4351

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %err.addr, align 4, !dbg !4352, !tbaa !2632
  %cmp1 = icmp eq i32 %1, 61, !dbg !4353
  br label %lor.end, !dbg !4351

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !4354
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @set_file_security_ctx(i8* %dst_name, i1 zeroext %process_local, i1 zeroext %recurse, %struct.cp_options* %x) #4 !dbg !4355 !ctir !399 {
entry:
  %retval = alloca i1, align 1
  %dst_name.addr = alloca i8*, align 8
  %process_local.addr = alloca i8, align 1
  %recurse.addr = alloca i8, align 1
  %x.addr = alloca %struct.cp_options*, align 8
  %all_errors = alloca i8, align 1, !ctir !142
  %some_errors = alloca i8, align 1, !ctir !142
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !4356, metadata !DIExpression()), !dbg !4357
  %frombool = zext i1 %process_local to i8
  store i8 %frombool, i8* %process_local.addr, align 1, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %process_local.addr, metadata !4358, metadata !DIExpression()), !dbg !4359
  %frombool1 = zext i1 %recurse to i8
  store i8 %frombool1, i8* %recurse.addr, align 1, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %recurse.addr, metadata !4360, metadata !DIExpression()), !dbg !4361
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !4362, metadata !DIExpression()), !dbg !4363
  call void @llvm.dbg.declare(metadata i8* %all_errors, metadata !4364, metadata !DIExpression()), !dbg !4365
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4366, !tbaa !2645
  %data_copy_required = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 20, !dbg !4367, !ctir !357
  %1 = load i8, i8* %data_copy_required, align 1, !dbg !4367, !tbaa !3199
  %tobool = trunc i8 %1 to i1, !dbg !4367, !ctir !142
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !4368

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4369, !tbaa !2645
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 23, !dbg !4370, !ctir !357
  %3 = load i8, i8* %require_preserve_context, align 2, !dbg !4370, !tbaa !3246
  %tobool2 = trunc i8 %3 to i1, !dbg !4370, !ctir !142
  br label %lor.end, !dbg !4368

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %tobool2, %lor.rhs ]
  %frombool3 = zext i1 %4 to i8, !dbg !4365
  store i8 %frombool3, i8* %all_errors, align 1, !dbg !4365, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %some_errors, metadata !4371, metadata !DIExpression()), !dbg !4372
  %5 = load i8, i8* %all_errors, align 1, !dbg !4373, !tbaa !2739
  %tobool4 = trunc i8 %5 to i1, !dbg !4373
  br i1 %tobool4, label %land.end, label %land.rhs, !dbg !4374

land.rhs:                                         ; preds = %lor.end
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4375, !tbaa !2645
  %reduce_diagnostics = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 26, !dbg !4376, !ctir !357
  %7 = load i8, i8* %reduce_diagnostics, align 1, !dbg !4376, !tbaa !3195
  %tobool5 = trunc i8 %7 to i1, !dbg !4376, !ctir !142
  %lnot = xor i1 %tobool5, true, !dbg !4377
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.end
  %8 = phi i1 [ false, %lor.end ], [ %lnot, %land.rhs ], !dbg !4378
  %frombool6 = zext i1 %8 to i8, !dbg !4372
  store i8 %frombool6, i8* %some_errors, align 1, !dbg !4372, !tbaa !2739
  %9 = load i8*, i8** %dst_name.addr, align 8, !dbg !4379, !tbaa !2645
  %10 = load i8, i8* %recurse.addr, align 1, !dbg !4381, !tbaa !2739
  %tobool7 = trunc i8 %10 to i1, !dbg !4381
  %11 = load i8, i8* %process_local.addr, align 1, !dbg !4382, !tbaa !2739
  %tobool8 = trunc i8 %11 to i1, !dbg !4382
  %call = call zeroext i1 @restorecon.94(i8* %9, i1 zeroext %tobool7, i1 zeroext %tobool8), !dbg !4383
  br i1 %call, label %if.end17, label %if.then, !dbg !4384

if.then:                                          ; preds = %land.end
  %12 = load i8, i8* %all_errors, align 1, !dbg !4385, !tbaa !2739
  %tobool9 = trunc i8 %12 to i1, !dbg !4385
  br i1 %tobool9, label %if.then13, label %lor.lhs.false, !dbg !4388

lor.lhs.false:                                    ; preds = %if.then
  %13 = load i8, i8* %some_errors, align 1, !dbg !4389, !tbaa !2739
  %tobool10 = trunc i8 %13 to i1, !dbg !4389
  br i1 %tobool10, label %land.lhs.true, label %if.end, !dbg !4390

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call11 = call i32* @__errno_location() #16, !dbg !4391
  %14 = load i32, i32* %call11, align 4, !dbg !4391, !tbaa !2632, !ctir !7
  %call12 = call zeroext i1 @errno_unsupported(i32 %14), !dbg !4392
  br i1 %call12, label %if.end, label %if.then13, !dbg !4393

if.then13:                                        ; preds = %land.lhs.true, %if.then
  %call14 = call i32* @__errno_location() #16, !dbg !4394
  %15 = load i32, i32* %call14, align 4, !dbg !4394, !tbaa !2632, !ctir !7
  %call15 = call i8* @gettext(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3.95, i64 0, i64 0)) #9, !dbg !4395
  %16 = load i8*, i8** %dst_name.addr, align 8, !dbg !4396, !tbaa !2645
  %call16 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %16), !dbg !4396
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %15, i8* %call15, i8* %call16), !dbg !4397
  br label %if.end, !dbg !4397

if.end:                                           ; preds = %if.then13, %land.lhs.true, %lor.lhs.false
  store i1 false, i1* %retval, align 1, !dbg !4398
  br label %return, !dbg !4398

if.end17:                                         ; preds = %land.end
  store i1 true, i1* %retval, align 1, !dbg !4399
  br label %return, !dbg !4399

return:                                           ; preds = %if.end17, %if.end
  %17 = load i1, i1* %retval, align 1, !dbg !4400
  ret i1 %17, !dbg !4400
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @restorecon.94(i8* %path, i1 zeroext %recurse, i1 zeroext %preserve) #4 !dbg !4401 !ctir !254 {
entry:
  %path.addr = alloca i8*, align 8
  %recurse.addr = alloca i8, align 1
  %preserve.addr = alloca i8, align 1
  store i8* %path, i8** %path.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !4402, metadata !DIExpression()), !dbg !4403
  %frombool = zext i1 %recurse to i8
  store i8 %frombool, i8* %recurse.addr, align 1, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %recurse.addr, metadata !4404, metadata !DIExpression()), !dbg !4405
  %frombool1 = zext i1 %preserve to i8
  store i8 %frombool1, i8* %preserve.addr, align 1, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %preserve.addr, metadata !4406, metadata !DIExpression()), !dbg !4407
  %call = call i32* @__errno_location() #16, !dbg !4408
  store i32 95, i32* %call, align 4, !dbg !4409, !tbaa !2632, !ctir !7
  ret i1 false, !dbg !4410
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @dest_info_init(%struct.cp_options* %x) #4 !dbg !4411 !ctir !401 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !4412, metadata !DIExpression()), !dbg !4413
  %call = call %struct.hash_table* @hash_initialize(i64 61, %struct.hash_tuning* null, i64 (i8*, i64)* @triple_hash, i1 (i8*, i8*)* @triple_compare, void (i8*)* @triple_free), !dbg !4414
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4415, !tbaa !2645
  %dest_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 37, !dbg !4416, !ctir !358
  store %struct.hash_table* %call, %struct.hash_table** %dest_info, align 8, !dbg !4417, !tbaa !3263, !ctir !175
  ret void, !dbg !4418
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @src_info_init(%struct.cp_options* %x) #4 !dbg !4419 !ctir !401 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !4420, metadata !DIExpression()), !dbg !4421
  %call = call %struct.hash_table* @hash_initialize(i64 61, %struct.hash_tuning* null, i64 (i8*, i64)* @triple_hash_no_name, i1 (i8*, i8*)* @triple_compare, void (i8*)* @triple_free), !dbg !4422
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4423, !tbaa !2645
  %src_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 38, !dbg !4424, !ctir !358
  store %struct.hash_table* %call, %struct.hash_table** %src_info, align 8, !dbg !4425, !tbaa !3267, !ctir !175
  ret void, !dbg !4426
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @copy(i8* %src_name, i8* %dst_name, i1 zeroext %nonexistent_dst, %struct.cp_options* %options, i8* %copy_into_self, i8* %rename_succeeded) #4 !dbg !4427 !ctir !404 {
entry:
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %nonexistent_dst.addr = alloca i8, align 1
  %options.addr = alloca %struct.cp_options*, align 8
  %copy_into_self.addr = alloca i8*, align 8
  %rename_succeeded.addr = alloca i8*, align 8
  %first_dir_created_per_command_line_arg = alloca i8, align 1, !ctir !142
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !4428, metadata !DIExpression()), !dbg !4429
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !4430, metadata !DIExpression()), !dbg !4431
  %frombool = zext i1 %nonexistent_dst to i8
  store i8 %frombool, i8* %nonexistent_dst.addr, align 1, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %nonexistent_dst.addr, metadata !4432, metadata !DIExpression()), !dbg !4433
  store %struct.cp_options* %options, %struct.cp_options** %options.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.cp_options** %options.addr, metadata !4434, metadata !DIExpression()), !dbg !4435
  store i8* %copy_into_self, i8** %copy_into_self.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %copy_into_self.addr, metadata !4436, metadata !DIExpression()), !dbg !4437
  store i8* %rename_succeeded, i8** %rename_succeeded.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %rename_succeeded.addr, metadata !4438, metadata !DIExpression()), !dbg !4439
  %0 = load %struct.cp_options*, %struct.cp_options** %options.addr, align 8, !dbg !4440, !tbaa !2645
  %call = call zeroext i1 @valid_options(%struct.cp_options* %0) #14, !dbg !4440
  br i1 %call, label %if.then, label %if.else, !dbg !4443

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !4443

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4.100, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 2975, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__.copy, i64 0, i64 0)) #13, !dbg !4440
  unreachable, !dbg !4440

if.end:                                           ; preds = %if.then
  %1 = load i8*, i8** %src_name.addr, align 8, !dbg !4444, !tbaa !2645
  store i8* %1, i8** @top_level_src_name, align 8, !dbg !4445, !tbaa !2645
  %2 = load i8*, i8** %dst_name.addr, align 8, !dbg !4446, !tbaa !2645
  store i8* %2, i8** @top_level_dst_name, align 8, !dbg !4447, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8* %first_dir_created_per_command_line_arg, metadata !4448, metadata !DIExpression()), !dbg !4449
  store i8 0, i8* %first_dir_created_per_command_line_arg, align 1, !dbg !4449, !tbaa !2739
  %3 = load i8*, i8** %src_name.addr, align 8, !dbg !4450, !tbaa !2645
  %4 = load i8*, i8** %dst_name.addr, align 8, !dbg !4451, !tbaa !2645
  %5 = load i8, i8* %nonexistent_dst.addr, align 1, !dbg !4452, !tbaa !2739
  %tobool = trunc i8 %5 to i1, !dbg !4452
  %6 = load %struct.cp_options*, %struct.cp_options** %options.addr, align 8, !dbg !4453, !tbaa !2645
  %7 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !4454, !tbaa !2645
  %8 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4455, !tbaa !2645
  %call1 = call zeroext i1 @copy_internal(i8* %3, i8* %4, i1 zeroext %tobool, %struct.stat* null, %struct.dir_list* null, %struct.cp_options* %6, i1 zeroext true, i8* %first_dir_created_per_command_line_arg, i8* %7, i8* %8), !dbg !4456
  ret i1 %call1, !dbg !4457
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @valid_options(%struct.cp_options* %co) #10 !dbg !4458 !ctir !407 {
entry:
  %co.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %co, %struct.cp_options** %co.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.cp_options** %co.addr, metadata !4459, metadata !DIExpression()), !dbg !4460
  %0 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4461, !tbaa !2645
  %cmp = icmp ne %struct.cp_options* %0, null, !dbg !4461
  br i1 %cmp, label %if.then, label %if.else, !dbg !4464

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !4464

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6.168, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 2950, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4461
  unreachable, !dbg !4461

if.end:                                           ; preds = %if.then
  %1 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4465, !tbaa !2645
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1, i32 0, i32 0, !dbg !4465, !ctir !357
  %2 = load i32, i32* %backup_type, align 8, !dbg !4465, !tbaa !2924, !ctir !68
  %cmp1 = icmp ule i32 %2, 3, !dbg !4465
  br i1 %cmp1, label %if.then2, label %if.else3, !dbg !4468

if.then2:                                         ; preds = %if.end
  br label %if.end4, !dbg !4468

if.else3:                                         ; preds = %if.end
  call void @__assert_fail(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7.169, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 2951, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4465
  unreachable, !dbg !4465

if.end4:                                          ; preds = %if.then2
  %3 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4469, !tbaa !2645
  %sparse_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 3, !dbg !4469, !ctir !357
  %4 = load i32, i32* %sparse_mode, align 4, !dbg !4469, !tbaa !3215, !ctir !89
  %cmp5 = icmp eq i32 %4, 1, !dbg !4469
  br i1 %cmp5, label %if.then11, label %lor.lhs.false, !dbg !4469

lor.lhs.false:                                    ; preds = %if.end4
  %5 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4469, !tbaa !2645
  %sparse_mode6 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 3, !dbg !4469, !ctir !357
  %6 = load i32, i32* %sparse_mode6, align 4, !dbg !4469, !tbaa !3215, !ctir !89
  %cmp7 = icmp eq i32 %6, 2, !dbg !4469
  br i1 %cmp7, label %if.then11, label %lor.lhs.false8, !dbg !4469

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %7 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4469, !tbaa !2645
  %sparse_mode9 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 3, !dbg !4469, !ctir !357
  %8 = load i32, i32* %sparse_mode9, align 4, !dbg !4469, !tbaa !3215, !ctir !89
  %cmp10 = icmp eq i32 %8, 3, !dbg !4469
  br i1 %cmp10, label %if.then11, label %if.else12, !dbg !4472

if.then11:                                        ; preds = %lor.lhs.false8, %lor.lhs.false, %if.end4
  br label %if.end13, !dbg !4472

if.else12:                                        ; preds = %lor.lhs.false8
  call void @__assert_fail(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.170, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 2952, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4469
  unreachable, !dbg !4469

if.end13:                                         ; preds = %if.then11
  %9 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4473, !tbaa !2645
  %reflink_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 36, !dbg !4473, !ctir !357
  %10 = load i32, i32* %reflink_mode, align 8, !dbg !4473, !tbaa !3140, !ctir !95
  %cmp14 = icmp eq i32 %10, 0, !dbg !4473
  br i1 %cmp14, label %if.then21, label %lor.lhs.false15, !dbg !4473

lor.lhs.false15:                                  ; preds = %if.end13
  %11 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4473, !tbaa !2645
  %reflink_mode16 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 36, !dbg !4473, !ctir !357
  %12 = load i32, i32* %reflink_mode16, align 8, !dbg !4473, !tbaa !3140, !ctir !95
  %cmp17 = icmp eq i32 %12, 1, !dbg !4473
  br i1 %cmp17, label %if.then21, label %lor.lhs.false18, !dbg !4473

lor.lhs.false18:                                  ; preds = %lor.lhs.false15
  %13 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4473, !tbaa !2645
  %reflink_mode19 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %13, i32 0, i32 36, !dbg !4473, !ctir !357
  %14 = load i32, i32* %reflink_mode19, align 8, !dbg !4473, !tbaa !3140, !ctir !95
  %cmp20 = icmp eq i32 %14, 2, !dbg !4473
  br i1 %cmp20, label %if.then21, label %if.else22, !dbg !4476

if.then21:                                        ; preds = %lor.lhs.false18, %lor.lhs.false15, %if.end13
  br label %if.end23, !dbg !4476

if.else22:                                        ; preds = %lor.lhs.false18
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9.171, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 2953, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4473
  unreachable, !dbg !4473

if.end23:                                         ; preds = %if.then21
  %15 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4477, !tbaa !2645
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %15, i32 0, i32 8, !dbg !4477, !ctir !357
  %16 = load i8, i8* %hard_link, align 1, !dbg !4477, !tbaa !3156
  %tobool = trunc i8 %16 to i1, !dbg !4477, !ctir !142
  br i1 %tobool, label %land.lhs.true, label %if.then25, !dbg !4477

land.lhs.true:                                    ; preds = %if.end23
  %17 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4477, !tbaa !2645
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %17, i32 0, i32 29, !dbg !4477, !ctir !357
  %18 = load i8, i8* %symbolic_link, align 4, !dbg !4477, !tbaa !3219
  %tobool24 = trunc i8 %18 to i1, !dbg !4477, !ctir !142
  br i1 %tobool24, label %if.else26, label %if.then25, !dbg !4480

if.then25:                                        ; preds = %land.lhs.true, %if.end23
  br label %if.end27, !dbg !4480

if.else26:                                        ; preds = %land.lhs.true
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.10.172, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 2954, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4477
  unreachable, !dbg !4477

if.end27:                                         ; preds = %if.then25
  %19 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4481, !tbaa !2645
  %reflink_mode28 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %19, i32 0, i32 36, !dbg !4481, !ctir !357
  %20 = load i32, i32* %reflink_mode28, align 8, !dbg !4481, !tbaa !3140, !ctir !95
  %cmp29 = icmp eq i32 %20, 2, !dbg !4481
  br i1 %cmp29, label %land.lhs.true30, label %if.then33, !dbg !4481

land.lhs.true30:                                  ; preds = %if.end27
  %21 = load %struct.cp_options*, %struct.cp_options** %co.addr, align 8, !dbg !4481, !tbaa !2645
  %sparse_mode31 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %21, i32 0, i32 3, !dbg !4481, !ctir !357
  %22 = load i32, i32* %sparse_mode31, align 4, !dbg !4481, !tbaa !3215, !ctir !89
  %cmp32 = icmp ne i32 %22, 2, !dbg !4481
  br i1 %cmp32, label %if.else34, label %if.then33, !dbg !4484

if.then33:                                        ; preds = %land.lhs.true30, %if.end27
  br label %if.end35, !dbg !4484

if.else34:                                        ; preds = %land.lhs.true30
  call void @__assert_fail(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.11.173, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 2957, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @__PRETTY_FUNCTION__.valid_options, i64 0, i64 0)) #13, !dbg !4481
  unreachable, !dbg !4481

if.end35:                                         ; preds = %if.then33
  ret i1 true, !dbg !4485
}

; Function Attrs: noreturn nounwind
declare dso_local void @__assert_fail(i8*, i8*, i32, i8*) #5

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_internal(i8* %src_name, i8* %dst_name, i1 zeroext %new_dst, %struct.stat* %parent, %struct.dir_list* %ancestors, %struct.cp_options* %x, i1 zeroext %command_line_arg, i8* %first_dir_created_per_command_line_arg, i8* %copy_into_self, i8* %rename_succeeded) #4 !dbg !4486 !ctir !411 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %new_dst.addr = alloca i8, align 1
  %parent.addr = alloca %struct.stat*, align 8
  %ancestors.addr = alloca %struct.dir_list*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %command_line_arg.addr = alloca i8, align 1
  %first_dir_created_per_command_line_arg.addr = alloca i8*, align 8
  %copy_into_self.addr = alloca i8*, align 8
  %rename_succeeded.addr = alloca i8*, align 8
  %src_sb = alloca %struct.stat, align 8, !ctir !415
  %dst_sb = alloca %struct.stat, align 8, !ctir !415
  %src_mode = alloca i32, align 4, !ctir !139
  %dst_mode = alloca i32, align 4, !ctir !139
  %dst_mode_bits = alloca i32, align 4, !ctir !139
  %omitted_permissions = alloca i32, align 4, !ctir !139
  %restore_dst_mode = alloca i8, align 1, !ctir !142
  %earlier_file = alloca i8*, align 8, !ctir !9
  %dst_backup = alloca i8*, align 8, !ctir !9
  %delayed_ok = alloca i8, align 1, !ctir !142
  %copied_as_regular = alloca i8, align 1, !ctir !142
  %dest_is_symlink = alloca i8, align 1, !ctir !142
  %have_dst_lstat = alloca i8, align 1, !ctir !142
  %rename_errno = alloca i32, align 4, !ctir !7
  %name = alloca i8*, align 8, !ctir !180
  %dereference69 = alloca i8, align 1, !ctir !142
  %use_lstat = alloca i8, align 1, !ctir !142
  %fstatat_flags = alloca i32, align 4, !ctir !7
  %return_now = alloca i8, align 1, !ctir !142
  %options = alloca i32, align 4, !ctir !7
  %srcbase = alloca i8*, align 8, !ctir !180
  %fmt = alloca i8*, align 8, !ctir !180
  %tmp_backup = alloca i8*, align 8, !ctir !9
  %__old = alloca i8*, align 8, !ctir !180
  %__len = alloca i64, align 8, !ctir !55
  %__new = alloca i8*, align 8, !ctir !9
  %tmp = alloca i8*, align 8
  %lstat_ok = alloca i8, align 1, !ctir !142
  %tmp_buf = alloca %struct.stat, align 8, !ctir !415
  %dst_lstat_sb = alloca %struct.stat*, align 8, !ctir !444
  %dir = alloca %struct.dir_list*, align 8, !ctir !436
  %dot_sb = alloca %struct.stat, align 8, !ctir !415
  %dst_parent_sb = alloca %struct.stat, align 8, !ctir !415
  %dst_parent = alloca i8*, align 8, !ctir !9
  %in_current_dir = alloca i8, align 1, !ctir !142
  %err = alloca i32, align 4, !ctir !7
  %replace = alloca i8, align 1, !ctir !142
  %src_link_val = alloca i8*, align 8, !ctir !9
  %symlink_err = alloca i32, align 4, !ctir !7
  %dest_link_val = alloca i8*, align 8, !ctir !9
  %sb = alloca %struct.stat, align 8, !ctir !415
  %timespec = alloca [2 x %struct.timespec], align 16, !ctir !445
  %tmp955 = alloca %struct.timespec, align 8
  %tmp958 = alloca %struct.timespec, align 8
  %default_permissions = alloca i32, align 4, !ctir !7
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !4487, metadata !DIExpression()), !dbg !4488
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !4489, metadata !DIExpression()), !dbg !4490
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !4491, metadata !DIExpression()), !dbg !4492
  store %struct.stat* %parent, %struct.stat** %parent.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.stat** %parent.addr, metadata !4493, metadata !DIExpression()), !dbg !4494
  store %struct.dir_list* %ancestors, %struct.dir_list** %ancestors.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.dir_list** %ancestors.addr, metadata !4495, metadata !DIExpression()), !dbg !4496
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !4497, metadata !DIExpression()), !dbg !4498
  %frombool1 = zext i1 %command_line_arg to i8
  store i8 %frombool1, i8* %command_line_arg.addr, align 1, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !4499, metadata !DIExpression()), !dbg !4500
  store i8* %first_dir_created_per_command_line_arg, i8** %first_dir_created_per_command_line_arg.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %first_dir_created_per_command_line_arg.addr, metadata !4501, metadata !DIExpression()), !dbg !4502
  store i8* %copy_into_self, i8** %copy_into_self.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %copy_into_self.addr, metadata !4503, metadata !DIExpression()), !dbg !4504
  store i8* %rename_succeeded, i8** %rename_succeeded.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %rename_succeeded.addr, metadata !4505, metadata !DIExpression()), !dbg !4506
  call void @llvm.dbg.declare(metadata %struct.stat* %src_sb, metadata !4507, metadata !DIExpression()), !dbg !4508
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_sb, metadata !4509, metadata !DIExpression()), !dbg !4510
  call void @llvm.dbg.declare(metadata i32* %src_mode, metadata !4511, metadata !DIExpression()), !dbg !4512
  call void @llvm.dbg.declare(metadata i32* %dst_mode, metadata !4513, metadata !DIExpression()), !dbg !4514
  call void @llvm.dbg.declare(metadata i32* %dst_mode_bits, metadata !4515, metadata !DIExpression()), !dbg !4516
  call void @llvm.dbg.declare(metadata i32* %omitted_permissions, metadata !4517, metadata !DIExpression()), !dbg !4518
  call void @llvm.dbg.declare(metadata i8* %restore_dst_mode, metadata !4519, metadata !DIExpression()), !dbg !4520
  store i8 0, i8* %restore_dst_mode, align 1, !dbg !4520, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8** %earlier_file, metadata !4521, metadata !DIExpression()), !dbg !4522
  store i8* null, i8** %earlier_file, align 8, !dbg !4522, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dst_backup, metadata !4523, metadata !DIExpression()), !dbg !4524
  store i8* null, i8** %dst_backup, align 8, !dbg !4524, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8* %delayed_ok, metadata !4525, metadata !DIExpression()), !dbg !4526
  call void @llvm.dbg.declare(metadata i8* %copied_as_regular, metadata !4527, metadata !DIExpression()), !dbg !4528
  store i8 0, i8* %copied_as_regular, align 1, !dbg !4528, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %dest_is_symlink, metadata !4529, metadata !DIExpression()), !dbg !4530
  store i8 0, i8* %dest_is_symlink, align 1, !dbg !4530, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %have_dst_lstat, metadata !4531, metadata !DIExpression()), !dbg !4532
  store i8 0, i8* %have_dst_lstat, align 1, !dbg !4532, !tbaa !2739
  %0 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !4533, !tbaa !2645
  store i8 0, i8* %0, align 1, !dbg !4534, !tbaa !2739, !ctir !142
  call void @llvm.dbg.declare(metadata i32* %rename_errno, metadata !4535, metadata !DIExpression()), !dbg !4536
  %1 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4537, !tbaa !2645
  %rename_errno2 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %1, i32 0, i32 35, !dbg !4538, !ctir !357
  %2 = load i32, i32* %rename_errno2, align 4, !dbg !4538, !tbaa !4539, !ctir !7
  store i32 %2, i32* %rename_errno, align 4, !dbg !4536, !tbaa !2632
  %3 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4540, !tbaa !2645
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 9, !dbg !4542, !ctir !357
  %4 = load i8, i8* %move_mode, align 8, !dbg !4542, !tbaa !3164
  %tobool = trunc i8 %4 to i1, !dbg !4542, !ctir !142
  br i1 %tobool, label %if.then, label %if.end13, !dbg !4543

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %rename_errno, align 4, !dbg !4544, !tbaa !2632
  %cmp = icmp slt i32 %5, 0, !dbg !4547
  br i1 %cmp, label %if.then3, label %if.end, !dbg !4548

if.then3:                                         ; preds = %if.then
  %6 = load i8*, i8** %src_name.addr, align 8, !dbg !4549, !tbaa !2645
  %7 = load i8*, i8** %dst_name.addr, align 8, !dbg !4550, !tbaa !2645
  %call = call i32 @renameatu(i32 -100, i8* %6, i32 -100, i8* %7, i32 1), !dbg !4551
  %tobool4 = icmp ne i32 %call, 0, !dbg !4551
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !4551

cond.true:                                        ; preds = %if.then3
  %call5 = call i32* @__errno_location() #16, !dbg !4552
  %8 = load i32, i32* %call5, align 4, !dbg !4552, !tbaa !2632, !ctir !7
  br label %cond.end, !dbg !4551

cond.false:                                       ; preds = %if.then3
  br label %cond.end, !dbg !4551

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %8, %cond.true ], [ 0, %cond.false ], !dbg !4551
  store i32 %cond, i32* %rename_errno, align 4, !dbg !4553, !tbaa !2632
  br label %if.end, !dbg !4554

if.end:                                           ; preds = %cond.end, %if.then
  %9 = load i32, i32* %rename_errno, align 4, !dbg !4555, !tbaa !2632
  %cmp6 = icmp eq i32 %9, 0, !dbg !4556
  %frombool7 = zext i1 %cmp6 to i8, !dbg !4557
  store i8 %frombool7, i8* %new_dst.addr, align 1, !dbg !4557, !tbaa !2739
  %10 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4558, !tbaa !2645
  %tobool8 = icmp ne i8* %10, null, !dbg !4558
  br i1 %tobool8, label %if.then9, label %if.end12, !dbg !4560

if.then9:                                         ; preds = %if.end
  %11 = load i8, i8* %new_dst.addr, align 1, !dbg !4561, !tbaa !2739
  %tobool10 = trunc i8 %11 to i1, !dbg !4561
  %12 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4562, !tbaa !2645
  %frombool11 = zext i1 %tobool10 to i8, !dbg !4563
  store i8 %frombool11, i8* %12, align 1, !dbg !4563, !tbaa !2739, !ctir !142
  br label %if.end12, !dbg !4564

if.end12:                                         ; preds = %if.then9, %if.end
  br label %if.end13, !dbg !4565

if.end13:                                         ; preds = %if.end12, %entry
  %13 = load i32, i32* %rename_errno, align 4, !dbg !4566, !tbaa !2632
  %cmp14 = icmp eq i32 %13, 0, !dbg !4568
  br i1 %cmp14, label %cond.true15, label %cond.false17, !dbg !4569

cond.true15:                                      ; preds = %if.end13
  %14 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4570, !tbaa !2645
  %last_file = getelementptr inbounds %struct.cp_options, %struct.cp_options* %14, i32 0, i32 34, !dbg !4571, !ctir !357
  %15 = load i8, i8* %last_file, align 1, !dbg !4571, !tbaa !4572
  %tobool16 = trunc i8 %15 to i1, !dbg !4571, !ctir !142
  br i1 %tobool16, label %if.end51, label %if.then20, !dbg !4566

cond.false17:                                     ; preds = %if.end13
  %16 = load i32, i32* %rename_errno, align 4, !dbg !4573, !tbaa !2632
  %cmp18 = icmp ne i32 %16, 17, !dbg !4574
  br i1 %cmp18, label %if.then20, label %lor.lhs.false, !dbg !4575

lor.lhs.false:                                    ; preds = %cond.false17
  %17 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4576, !tbaa !2645
  %interactive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %17, i32 0, i32 2, !dbg !4577, !ctir !357
  %18 = load i32, i32* %interactive, align 8, !dbg !4577, !tbaa !3160, !ctir !83
  %cmp19 = icmp ne i32 %18, 2, !dbg !4578
  br i1 %cmp19, label %if.then20, label %if.end51, !dbg !4569

if.then20:                                        ; preds = %lor.lhs.false, %cond.false17, %cond.true15
  call void @llvm.dbg.declare(metadata i8** %name, metadata !4579, metadata !DIExpression()), !dbg !4581
  %19 = load i32, i32* %rename_errno, align 4, !dbg !4582, !tbaa !2632
  %cmp21 = icmp eq i32 %19, 0, !dbg !4583
  br i1 %cmp21, label %cond.true22, label %cond.false23, !dbg !4582

cond.true22:                                      ; preds = %if.then20
  %20 = load i8*, i8** %dst_name.addr, align 8, !dbg !4584, !tbaa !2645
  br label %cond.end24, !dbg !4582

cond.false23:                                     ; preds = %if.then20
  %21 = load i8*, i8** %src_name.addr, align 8, !dbg !4585, !tbaa !2645
  br label %cond.end24, !dbg !4582

cond.end24:                                       ; preds = %cond.false23, %cond.true22
  %cond25 = phi i8* [ %20, %cond.true22 ], [ %21, %cond.false23 ], !dbg !4582
  store i8* %cond25, i8** %name, align 8, !dbg !4581, !tbaa !2645
  %22 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4586, !tbaa !2645
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %22, i32 0, i32 1, !dbg !4586, !ctir !357
  %23 = load i32, i32* %dereference, align 4, !dbg !4586, !tbaa !3144, !ctir !76
  %cmp26 = icmp eq i32 %23, 2, !dbg !4586
  br i1 %cmp26, label %cond.true27, label %cond.false29, !dbg !4586

cond.true27:                                      ; preds = %cond.end24
  %24 = load i8*, i8** %name, align 8, !dbg !4586, !tbaa !2645
  %call28 = call i32 @lstat(i8* %24, %struct.stat* %src_sb) #9, !dbg !4586
  br label %cond.end31, !dbg !4586

cond.false29:                                     ; preds = %cond.end24
  %25 = load i8*, i8** %name, align 8, !dbg !4586, !tbaa !2645
  %call30 = call i32 @stat(i8* %25, %struct.stat* %src_sb) #9, !dbg !4586
  br label %cond.end31, !dbg !4586

cond.end31:                                       ; preds = %cond.false29, %cond.true27
  %cond32 = phi i32 [ %call28, %cond.true27 ], [ %call30, %cond.false29 ], !dbg !4586
  %cmp33 = icmp ne i32 %cond32, 0, !dbg !4588
  br i1 %cmp33, label %if.then34, label %if.end38, !dbg !4589

if.then34:                                        ; preds = %cond.end31
  %call35 = call i32* @__errno_location() #16, !dbg !4590
  %26 = load i32, i32* %call35, align 4, !dbg !4590, !tbaa !2632, !ctir !7
  %call36 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.102, i64 0, i64 0)) #9, !dbg !4592
  %27 = load i8*, i8** %name, align 8, !dbg !4593, !tbaa !2645
  %call37 = call i8* @quotearg_style(i32 4, i8* %27), !dbg !4593
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %26, i8* %call36, i8* %call37), !dbg !4594
  store i1 false, i1* %retval, align 1, !dbg !4595
  br label %return, !dbg !4595

if.end38:                                         ; preds = %cond.end31
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !4596, !ctir !415
  %28 = load i32, i32* %st_mode, align 8, !dbg !4596, !tbaa !2911, !ctir !140
  store i32 %28, i32* %src_mode, align 4, !dbg !4597, !tbaa !2632
  %29 = load i32, i32* %src_mode, align 4, !dbg !4598, !tbaa !2632
  %and = and i32 %29, 61440, !dbg !4598
  %cmp39 = icmp eq i32 %and, 16384, !dbg !4598
  br i1 %cmp39, label %land.lhs.true, label %if.end50, !dbg !4600

land.lhs.true:                                    ; preds = %if.end38
  %30 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4601, !tbaa !2645
  %recursive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %30, i32 0, i32 27, !dbg !4602, !ctir !357
  %31 = load i8, i8* %recursive, align 2, !dbg !4602, !tbaa !3211
  %tobool40 = trunc i8 %31 to i1, !dbg !4602, !ctir !142
  br i1 %tobool40, label %if.end50, label %if.then41, !dbg !4603

if.then41:                                        ; preds = %land.lhs.true
  %32 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4604, !tbaa !2645
  %install_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %32, i32 0, i32 10, !dbg !4606, !ctir !357
  %33 = load i8, i8* %install_mode, align 1, !dbg !4606, !tbaa !3168
  %tobool42 = trunc i8 %33 to i1, !dbg !4606, !ctir !142
  br i1 %tobool42, label %cond.false45, label %cond.true43, !dbg !4607

cond.true43:                                      ; preds = %if.then41
  %call44 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.13.103, i64 0, i64 0)) #9, !dbg !4608
  br label %cond.end47, !dbg !4607

cond.false45:                                     ; preds = %if.then41
  %call46 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14.104, i64 0, i64 0)) #9, !dbg !4609
  br label %cond.end47, !dbg !4607

cond.end47:                                       ; preds = %cond.false45, %cond.true43
  %cond48 = phi i8* [ %call44, %cond.true43 ], [ %call46, %cond.false45 ], !dbg !4607
  %34 = load i8*, i8** %src_name.addr, align 8, !dbg !4610, !tbaa !2645
  %call49 = call i8* @quotearg_style(i32 4, i8* %34), !dbg !4610
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %cond48, i8* %call49), !dbg !4611
  store i1 false, i1* %retval, align 1, !dbg !4612
  br label %return, !dbg !4612

if.end50:                                         ; preds = %land.lhs.true, %if.end38
  br label %if.end51, !dbg !4613

if.end51:                                         ; preds = %if.end50, %lor.lhs.false, %cond.true15
  %35 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4614, !tbaa !2739
  %tobool52 = trunc i8 %35 to i1, !dbg !4614
  br i1 %tobool52, label %land.lhs.true53, label %if.end68, !dbg !4616

land.lhs.true53:                                  ; preds = %if.end51
  %36 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4617, !tbaa !2645
  %src_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %36, i32 0, i32 38, !dbg !4618, !ctir !357
  %37 = load %struct.hash_table*, %struct.hash_table** %src_info, align 8, !dbg !4618, !tbaa !3267, !ctir !175
  %tobool54 = icmp ne %struct.hash_table* %37, null, !dbg !4617
  br i1 %tobool54, label %if.then55, label %if.end68, !dbg !4619

if.then55:                                        ; preds = %land.lhs.true53
  %38 = load i32, i32* %src_mode, align 4, !dbg !4620, !tbaa !2632
  %and56 = and i32 %38, 61440, !dbg !4620
  %cmp57 = icmp eq i32 %and56, 16384, !dbg !4620
  br i1 %cmp57, label %if.end66, label %land.lhs.true58, !dbg !4623

land.lhs.true58:                                  ; preds = %if.then55
  %39 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4624, !tbaa !2645
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %39, i32 0, i32 0, !dbg !4625, !ctir !357
  %40 = load i32, i32* %backup_type, align 8, !dbg !4625, !tbaa !2924, !ctir !68
  %cmp59 = icmp eq i32 %40, 0, !dbg !4626
  br i1 %cmp59, label %land.lhs.true60, label %if.end66, !dbg !4627

land.lhs.true60:                                  ; preds = %land.lhs.true58
  %41 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4628, !tbaa !2645
  %src_info61 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %41, i32 0, i32 38, !dbg !4629, !ctir !357
  %42 = load %struct.hash_table*, %struct.hash_table** %src_info61, align 8, !dbg !4629, !tbaa !3267, !ctir !175
  %43 = load i8*, i8** %src_name.addr, align 8, !dbg !4630, !tbaa !2645
  %call62 = call zeroext i1 @seen_file(%struct.hash_table* %42, i8* %43, %struct.stat* %src_sb), !dbg !4631
  br i1 %call62, label %if.then63, label %if.end66, !dbg !4632

if.then63:                                        ; preds = %land.lhs.true60
  %call64 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.15.105, i64 0, i64 0)) #9, !dbg !4633
  %44 = load i8*, i8** %src_name.addr, align 8, !dbg !4635, !tbaa !2645
  %call65 = call i8* @quotearg_style(i32 4, i8* %44), !dbg !4635
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call64, i8* %call65), !dbg !4636
  store i1 true, i1* %retval, align 1, !dbg !4637
  br label %return, !dbg !4637

if.end66:                                         ; preds = %land.lhs.true60, %land.lhs.true58, %if.then55
  %45 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4638, !tbaa !2645
  %src_info67 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %45, i32 0, i32 38, !dbg !4639, !ctir !357
  %46 = load %struct.hash_table*, %struct.hash_table** %src_info67, align 8, !dbg !4639, !tbaa !3267, !ctir !175
  %47 = load i8*, i8** %src_name.addr, align 8, !dbg !4640, !tbaa !2645
  call void @record_file(%struct.hash_table* %46, i8* %47, %struct.stat* %src_sb), !dbg !4641
  br label %if.end68, !dbg !4642

if.end68:                                         ; preds = %if.end66, %land.lhs.true53, %if.end51
  call void @llvm.dbg.declare(metadata i8* %dereference69, metadata !4643, metadata !DIExpression()), !dbg !4644
  %48 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4645, !tbaa !2645
  %49 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4646, !tbaa !2739
  %tobool70 = trunc i8 %49 to i1, !dbg !4646
  %call71 = call zeroext i1 @should_dereference(%struct.cp_options* %48, i1 zeroext %tobool70) #14, !dbg !4647
  %frombool72 = zext i1 %call71 to i8, !dbg !4644
  store i8 %frombool72, i8* %dereference69, align 1, !dbg !4644, !tbaa !2739
  %50 = load i8, i8* %new_dst.addr, align 1, !dbg !4648, !tbaa !2739
  %tobool73 = trunc i8 %50 to i1, !dbg !4648
  br i1 %tobool73, label %if.end348, label %if.then74, !dbg !4650

if.then74:                                        ; preds = %if.end68
  %51 = load i32, i32* %rename_errno, align 4, !dbg !4651, !tbaa !2632
  %cmp75 = icmp eq i32 %51, 17, !dbg !4654
  br i1 %cmp75, label %land.lhs.true76, label %if.then79, !dbg !4655

land.lhs.true76:                                  ; preds = %if.then74
  %52 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4656, !tbaa !2645
  %interactive77 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %52, i32 0, i32 2, !dbg !4657, !ctir !357
  %53 = load i32, i32* %interactive77, align 8, !dbg !4657, !tbaa !3160, !ctir !83
  %cmp78 = icmp eq i32 %53, 2, !dbg !4658
  br i1 %cmp78, label %if.end125, label %if.then79, !dbg !4659

if.then79:                                        ; preds = %land.lhs.true76, %if.then74
  call void @llvm.dbg.declare(metadata i8* %use_lstat, metadata !4660, metadata !DIExpression()), !dbg !4662
  %54 = load i32, i32* %src_mode, align 4, !dbg !4663, !tbaa !2632
  %and80 = and i32 %54, 61440, !dbg !4663
  %cmp81 = icmp eq i32 %and80, 32768, !dbg !4663
  br i1 %cmp81, label %lor.lhs.false90, label %land.lhs.true82, !dbg !4664

land.lhs.true82:                                  ; preds = %if.then79
  %55 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4665, !tbaa !2645
  %copy_as_regular = getelementptr inbounds %struct.cp_options, %struct.cp_options* %55, i32 0, i32 5, !dbg !4666, !ctir !357
  %56 = load i8, i8* %copy_as_regular, align 4, !dbg !4666, !tbaa !3136
  %tobool83 = trunc i8 %56 to i1, !dbg !4666, !ctir !142
  br i1 %tobool83, label %lor.lhs.false84, label %lor.end, !dbg !4667

lor.lhs.false84:                                  ; preds = %land.lhs.true82
  %57 = load i32, i32* %src_mode, align 4, !dbg !4668, !tbaa !2632
  %and85 = and i32 %57, 61440, !dbg !4668
  %cmp86 = icmp eq i32 %and85, 16384, !dbg !4668
  br i1 %cmp86, label %lor.end, label %lor.lhs.false87, !dbg !4669

lor.lhs.false87:                                  ; preds = %lor.lhs.false84
  %58 = load i32, i32* %src_mode, align 4, !dbg !4670, !tbaa !2632
  %and88 = and i32 %58, 61440, !dbg !4670
  %cmp89 = icmp eq i32 %and88, 40960, !dbg !4670
  br i1 %cmp89, label %lor.end, label %lor.lhs.false90, !dbg !4671

lor.lhs.false90:                                  ; preds = %lor.lhs.false87, %if.then79
  %59 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4672, !tbaa !2645
  %move_mode91 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %59, i32 0, i32 9, !dbg !4673, !ctir !357
  %60 = load i8, i8* %move_mode91, align 8, !dbg !4673, !tbaa !3164
  %tobool92 = trunc i8 %60 to i1, !dbg !4673, !ctir !142
  br i1 %tobool92, label %lor.end, label %lor.lhs.false93, !dbg !4674

lor.lhs.false93:                                  ; preds = %lor.lhs.false90
  %61 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4675, !tbaa !2645
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %61, i32 0, i32 29, !dbg !4676, !ctir !357
  %62 = load i8, i8* %symbolic_link, align 4, !dbg !4676, !tbaa !3219
  %tobool94 = trunc i8 %62 to i1, !dbg !4676, !ctir !142
  br i1 %tobool94, label %lor.end, label %lor.lhs.false95, !dbg !4677

lor.lhs.false95:                                  ; preds = %lor.lhs.false93
  %63 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4678, !tbaa !2645
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %63, i32 0, i32 8, !dbg !4679, !ctir !357
  %64 = load i8, i8* %hard_link, align 1, !dbg !4679, !tbaa !3156
  %tobool96 = trunc i8 %64 to i1, !dbg !4679, !ctir !142
  br i1 %tobool96, label %lor.end, label %lor.lhs.false97, !dbg !4680

lor.lhs.false97:                                  ; preds = %lor.lhs.false95
  %65 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4681, !tbaa !2645
  %backup_type98 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %65, i32 0, i32 0, !dbg !4682, !ctir !357
  %66 = load i32, i32* %backup_type98, align 8, !dbg !4682, !tbaa !2924, !ctir !68
  %cmp99 = icmp ne i32 %66, 0, !dbg !4683
  br i1 %cmp99, label %lor.end, label %lor.rhs, !dbg !4684

lor.rhs:                                          ; preds = %lor.lhs.false97
  %67 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4685, !tbaa !2645
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %67, i32 0, i32 6, !dbg !4686, !ctir !357
  %68 = load i8, i8* %unlink_dest_before_opening, align 1, !dbg !4686, !tbaa !3148
  %tobool100 = trunc i8 %68 to i1, !dbg !4686, !ctir !142
  br label %lor.end, !dbg !4684

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false97, %lor.lhs.false95, %lor.lhs.false93, %lor.lhs.false90, %lor.lhs.false87, %lor.lhs.false84, %land.lhs.true82
  %69 = phi i1 [ true, %lor.lhs.false97 ], [ true, %lor.lhs.false95 ], [ true, %lor.lhs.false93 ], [ true, %lor.lhs.false90 ], [ true, %lor.lhs.false87 ], [ true, %lor.lhs.false84 ], [ true, %land.lhs.true82 ], [ %tobool100, %lor.rhs ]
  %frombool101 = zext i1 %69 to i8, !dbg !4662
  store i8 %frombool101, i8* %use_lstat, align 1, !dbg !4662, !tbaa !2739
  call void @llvm.dbg.declare(metadata i32* %fstatat_flags, metadata !4687, metadata !DIExpression()), !dbg !4688
  %70 = load i8, i8* %use_lstat, align 1, !dbg !4689, !tbaa !2739
  %tobool102 = trunc i8 %70 to i1, !dbg !4689
  %71 = zext i1 %tobool102 to i64, !dbg !4689
  %cond103 = select i1 %tobool102, i32 256, i32 0, !dbg !4689
  store i32 %cond103, i32* %fstatat_flags, align 4, !dbg !4688, !tbaa !2632
  %72 = load i8*, i8** %dst_name.addr, align 8, !dbg !4690, !tbaa !2645
  %73 = load i32, i32* %fstatat_flags, align 4, !dbg !4692, !tbaa !2632
  %call104 = call i32 @fstatat(i32 -100, i8* %72, %struct.stat* %dst_sb, i32 %73) #9, !dbg !4693
  %cmp105 = icmp eq i32 %call104, 0, !dbg !4694
  br i1 %cmp105, label %if.then106, label %if.else, !dbg !4695

if.then106:                                       ; preds = %lor.end
  %74 = load i8, i8* %use_lstat, align 1, !dbg !4696, !tbaa !2739
  %tobool107 = trunc i8 %74 to i1, !dbg !4696
  %frombool108 = zext i1 %tobool107 to i8, !dbg !4698
  store i8 %frombool108, i8* %have_dst_lstat, align 1, !dbg !4698, !tbaa !2739
  store i32 17, i32* %rename_errno, align 4, !dbg !4699, !tbaa !2632
  br label %if.end124, !dbg !4700

if.else:                                          ; preds = %lor.end
  %call109 = call i32* @__errno_location() #16, !dbg !4701
  %75 = load i32, i32* %call109, align 4, !dbg !4701, !tbaa !2632, !ctir !7
  %cmp110 = icmp eq i32 %75, 40, !dbg !4704
  br i1 %cmp110, label %land.lhs.true111, label %if.else114, !dbg !4705

land.lhs.true111:                                 ; preds = %if.else
  %76 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4706, !tbaa !2645
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %76, i32 0, i32 7, !dbg !4707, !ctir !357
  %77 = load i8, i8* %unlink_dest_after_failed_open, align 2, !dbg !4707, !tbaa !3152
  %tobool112 = trunc i8 %77 to i1, !dbg !4707, !ctir !142
  br i1 %tobool112, label %if.then113, label %if.else114, !dbg !4708

if.then113:                                       ; preds = %land.lhs.true111
  br label %if.end123, !dbg !4708

if.else114:                                       ; preds = %land.lhs.true111, %if.else
  %call115 = call i32* @__errno_location() #16, !dbg !4709
  %78 = load i32, i32* %call115, align 4, !dbg !4709, !tbaa !2632, !ctir !7
  %cmp116 = icmp ne i32 %78, 2, !dbg !4711
  br i1 %cmp116, label %if.then117, label %if.else121, !dbg !4712

if.then117:                                       ; preds = %if.else114
  %call118 = call i32* @__errno_location() #16, !dbg !4713
  %79 = load i32, i32* %call118, align 4, !dbg !4713, !tbaa !2632, !ctir !7
  %call119 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.102, i64 0, i64 0)) #9, !dbg !4715
  %80 = load i8*, i8** %dst_name.addr, align 8, !dbg !4716, !tbaa !2645
  %call120 = call i8* @quotearg_style(i32 4, i8* %80), !dbg !4716
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %79, i8* %call119, i8* %call120), !dbg !4717
  store i1 false, i1* %retval, align 1, !dbg !4718
  br label %return, !dbg !4718

if.else121:                                       ; preds = %if.else114
  store i8 1, i8* %new_dst.addr, align 1, !dbg !4719, !tbaa !2739
  br label %if.end122

if.end122:                                        ; preds = %if.else121
  br label %if.end123

if.end123:                                        ; preds = %if.end122, %if.then113
  br label %if.end124

if.end124:                                        ; preds = %if.end123, %if.then106
  br label %if.end125, !dbg !4720

if.end125:                                        ; preds = %if.end124, %land.lhs.true76
  %81 = load i32, i32* %rename_errno, align 4, !dbg !4721, !tbaa !2632
  %cmp126 = icmp eq i32 %81, 17, !dbg !4723
  br i1 %cmp126, label %if.then127, label %if.end347, !dbg !4724

if.then127:                                       ; preds = %if.end125
  call void @llvm.dbg.declare(metadata i8* %return_now, metadata !4725, metadata !DIExpression()), !dbg !4727
  store i8 0, i8* %return_now, align 1, !dbg !4727, !tbaa !2739
  %82 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4728, !tbaa !2645
  %interactive128 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %82, i32 0, i32 2, !dbg !4730, !ctir !357
  %83 = load i32, i32* %interactive128, align 8, !dbg !4730, !tbaa !3160, !ctir !83
  %cmp129 = icmp ne i32 %83, 2, !dbg !4731
  br i1 %cmp129, label %land.lhs.true130, label %if.end136, !dbg !4732

land.lhs.true130:                                 ; preds = %if.then127
  %84 = load i8*, i8** %src_name.addr, align 8, !dbg !4733, !tbaa !2645
  %85 = load i8*, i8** %dst_name.addr, align 8, !dbg !4734, !tbaa !2645
  %86 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4735, !tbaa !2645
  %call131 = call zeroext i1 @same_file_ok(i8* %84, %struct.stat* %src_sb, i8* %85, %struct.stat* %dst_sb, %struct.cp_options* %86, i8* %return_now), !dbg !4736
  br i1 %call131, label %if.end136, label %if.then132, !dbg !4737

if.then132:                                       ; preds = %land.lhs.true130
  %call133 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.16.106, i64 0, i64 0)) #9, !dbg !4738
  %87 = load i8*, i8** %src_name.addr, align 8, !dbg !4740, !tbaa !2645
  %call134 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %87), !dbg !4740
  %88 = load i8*, i8** %dst_name.addr, align 8, !dbg !4741, !tbaa !2645
  %call135 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %88), !dbg !4741
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call133, i8* %call134, i8* %call135), !dbg !4742
  store i1 false, i1* %retval, align 1, !dbg !4743
  br label %return, !dbg !4743

if.end136:                                        ; preds = %land.lhs.true130, %if.then127
  %89 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4744, !tbaa !2645
  %update = getelementptr inbounds %struct.cp_options, %struct.cp_options* %89, i32 0, i32 30, !dbg !4746, !ctir !357
  %90 = load i8, i8* %update, align 1, !dbg !4746, !tbaa !3242
  %tobool137 = trunc i8 %90 to i1, !dbg !4746, !ctir !142
  br i1 %tobool137, label %land.lhs.true138, label %if.end167, !dbg !4747

land.lhs.true138:                                 ; preds = %if.end136
  %91 = load i32, i32* %src_mode, align 4, !dbg !4748, !tbaa !2632
  %and139 = and i32 %91, 61440, !dbg !4748
  %cmp140 = icmp eq i32 %and139, 16384, !dbg !4748
  br i1 %cmp140, label %if.end167, label %if.then141, !dbg !4749

if.then141:                                       ; preds = %land.lhs.true138
  call void @llvm.dbg.declare(metadata i32* %options, metadata !4750, metadata !DIExpression()), !dbg !4752
  %92 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4753, !tbaa !2645
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %92, i32 0, i32 16, !dbg !4754, !ctir !357
  %93 = load i8, i8* %preserve_timestamps, align 1, !dbg !4754, !tbaa !2823
  %tobool142 = trunc i8 %93 to i1, !dbg !4754, !ctir !142
  br i1 %tobool142, label %land.rhs, label %land.end148, !dbg !4755

land.rhs:                                         ; preds = %if.then141
  %94 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4756, !tbaa !2645
  %move_mode143 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %94, i32 0, i32 9, !dbg !4757, !ctir !357
  %95 = load i8, i8* %move_mode143, align 8, !dbg !4757, !tbaa !3164
  %tobool144 = trunc i8 %95 to i1, !dbg !4757, !ctir !142
  br i1 %tobool144, label %land.rhs145, label %land.end, !dbg !4758

land.rhs145:                                      ; preds = %land.rhs
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 0, !dbg !4759, !ctir !415
  %96 = load i64, i64* %st_dev, align 8, !dbg !4759, !tbaa !4760, !ctir !274
  %st_dev146 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4761, !ctir !415
  %97 = load i64, i64* %st_dev146, align 8, !dbg !4761, !tbaa !4760, !ctir !274
  %cmp147 = icmp eq i64 %96, %97, !dbg !4762
  br label %land.end

land.end:                                         ; preds = %land.rhs145, %land.rhs
  %98 = phi i1 [ false, %land.rhs ], [ %cmp147, %land.rhs145 ], !dbg !4763
  %lnot = xor i1 %98, true, !dbg !4764
  br label %land.end148

land.end148:                                      ; preds = %land.end, %if.then141
  %99 = phi i1 [ false, %if.then141 ], [ %lnot, %land.end ], !dbg !4763
  %100 = zext i1 %99 to i64, !dbg !4765
  %cond149 = select i1 %99, i32 1, i32 0, !dbg !4765
  store i32 %cond149, i32* %options, align 4, !dbg !4752, !tbaa !2632
  %101 = load i8*, i8** %dst_name.addr, align 8, !dbg !4766, !tbaa !2645
  %102 = load i32, i32* %options, align 4, !dbg !4768, !tbaa !2632
  %call150 = call i32 @utimecmp(i8* %101, %struct.stat* %dst_sb, %struct.stat* %src_sb, i32 %102), !dbg !4769
  %cmp151 = icmp sle i32 0, %call150, !dbg !4770
  br i1 %cmp151, label %if.then152, label %if.end166, !dbg !4771

if.then152:                                       ; preds = %land.end148
  %103 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4772, !tbaa !2645
  %tobool153 = icmp ne i8* %103, null, !dbg !4772
  br i1 %tobool153, label %if.then154, label %if.end155, !dbg !4775

if.then154:                                       ; preds = %if.then152
  %104 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4776, !tbaa !2645
  store i8 1, i8* %104, align 1, !dbg !4777, !tbaa !2739, !ctir !142
  br label %if.end155, !dbg !4778

if.end155:                                        ; preds = %if.then154, %if.then152
  %105 = load i8*, i8** %dst_name.addr, align 8, !dbg !4779, !tbaa !2645
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !4780, !ctir !415
  %106 = load i64, i64* %st_ino, align 8, !dbg !4780, !tbaa !4781, !ctir !276
  %st_dev156 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !4782, !ctir !415
  %107 = load i64, i64* %st_dev156, align 8, !dbg !4782, !tbaa !4760, !ctir !274
  %call157 = call i8* @remember_copied(i8* %105, i64 %106, i64 %107), !dbg !4783
  store i8* %call157, i8** %earlier_file, align 8, !dbg !4784, !tbaa !2645
  %108 = load i8*, i8** %earlier_file, align 8, !dbg !4785, !tbaa !2645
  %tobool158 = icmp ne i8* %108, null, !dbg !4785
  br i1 %tobool158, label %if.then159, label %if.end165, !dbg !4787

if.then159:                                       ; preds = %if.end155
  %109 = load i8*, i8** %earlier_file, align 8, !dbg !4788, !tbaa !2645
  %110 = load i8*, i8** %dst_name.addr, align 8, !dbg !4791, !tbaa !2645
  %111 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4792, !tbaa !2645
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %111, i32 0, i32 31, !dbg !4793, !ctir !357
  %112 = load i8, i8* %verbose, align 2, !dbg !4793, !tbaa !2809
  %tobool160 = trunc i8 %112 to i1, !dbg !4793, !ctir !142
  %113 = load i8, i8* %dereference69, align 1, !dbg !4794, !tbaa !2739
  %tobool161 = trunc i8 %113 to i1, !dbg !4794
  %call162 = call zeroext i1 @create_hard_link(i8* %109, i8* %110, i1 zeroext true, i1 zeroext %tobool160, i1 zeroext %tobool161), !dbg !4795
  br i1 %call162, label %if.end164, label %if.then163, !dbg !4796

if.then163:                                       ; preds = %if.then159
  br label %un_backup, !dbg !4797

if.end164:                                        ; preds = %if.then159
  br label %if.end165, !dbg !4799

if.end165:                                        ; preds = %if.end164, %if.end155
  store i1 true, i1* %retval, align 1, !dbg !4800
  br label %return, !dbg !4800

if.end166:                                        ; preds = %land.end148
  br label %if.end167, !dbg !4801

if.end167:                                        ; preds = %if.end166, %land.lhs.true138, %if.end136
  %114 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4802, !tbaa !2645
  %move_mode168 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %114, i32 0, i32 9, !dbg !4804, !ctir !357
  %115 = load i8, i8* %move_mode168, align 8, !dbg !4804, !tbaa !3164
  %tobool169 = trunc i8 %115 to i1, !dbg !4804, !ctir !142
  br i1 %tobool169, label %if.then170, label %if.else177, !dbg !4805

if.then170:                                       ; preds = %if.end167
  %116 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4806, !tbaa !2645
  %117 = load i8*, i8** %dst_name.addr, align 8, !dbg !4809, !tbaa !2645
  %call171 = call zeroext i1 @abandon_move(%struct.cp_options* %116, i8* %117, %struct.stat* %dst_sb), !dbg !4810
  br i1 %call171, label %if.then172, label %if.end176, !dbg !4811

if.then172:                                       ; preds = %if.then170
  %118 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4812, !tbaa !2645
  %tobool173 = icmp ne i8* %118, null, !dbg !4812
  br i1 %tobool173, label %if.then174, label %if.end175, !dbg !4815

if.then174:                                       ; preds = %if.then172
  %119 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !4816, !tbaa !2645
  store i8 1, i8* %119, align 1, !dbg !4817, !tbaa !2739, !ctir !142
  br label %if.end175, !dbg !4818

if.end175:                                        ; preds = %if.then174, %if.then172
  store i1 true, i1* %retval, align 1, !dbg !4819
  br label %return, !dbg !4819

if.end176:                                        ; preds = %if.then170
  br label %if.end190, !dbg !4820

if.else177:                                       ; preds = %if.end167
  %120 = load i32, i32* %src_mode, align 4, !dbg !4821, !tbaa !2632
  %and178 = and i32 %120, 61440, !dbg !4821
  %cmp179 = icmp eq i32 %and178, 16384, !dbg !4821
  br i1 %cmp179, label %if.end189, label %land.lhs.true180, !dbg !4824

land.lhs.true180:                                 ; preds = %if.else177
  %121 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4825, !tbaa !2645
  %interactive181 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %121, i32 0, i32 2, !dbg !4826, !ctir !357
  %122 = load i32, i32* %interactive181, align 8, !dbg !4826, !tbaa !3160, !ctir !83
  %cmp182 = icmp eq i32 %122, 2, !dbg !4827
  br i1 %cmp182, label %if.then188, label %lor.lhs.false183, !dbg !4828

lor.lhs.false183:                                 ; preds = %land.lhs.true180
  %123 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4829, !tbaa !2645
  %interactive184 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %123, i32 0, i32 2, !dbg !4830, !ctir !357
  %124 = load i32, i32* %interactive184, align 8, !dbg !4830, !tbaa !3160, !ctir !83
  %cmp185 = icmp eq i32 %124, 3, !dbg !4831
  br i1 %cmp185, label %land.lhs.true186, label %if.end189, !dbg !4832

land.lhs.true186:                                 ; preds = %lor.lhs.false183
  %125 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4833, !tbaa !2645
  %126 = load i8*, i8** %dst_name.addr, align 8, !dbg !4834, !tbaa !2645
  %call187 = call zeroext i1 @overwrite_ok(%struct.cp_options* %125, i8* %126, %struct.stat* %dst_sb), !dbg !4835
  br i1 %call187, label %if.end189, label %if.then188, !dbg !4836

if.then188:                                       ; preds = %land.lhs.true186, %land.lhs.true180
  store i1 true, i1* %retval, align 1, !dbg !4837
  br label %return, !dbg !4837

if.end189:                                        ; preds = %land.lhs.true186, %lor.lhs.false183, %if.else177
  br label %if.end190

if.end190:                                        ; preds = %if.end189, %if.end176
  %127 = load i8, i8* %return_now, align 1, !dbg !4838, !tbaa !2739
  %tobool191 = trunc i8 %127 to i1, !dbg !4838
  br i1 %tobool191, label %if.then192, label %if.end193, !dbg !4840

if.then192:                                       ; preds = %if.end190
  store i1 true, i1* %retval, align 1, !dbg !4841
  br label %return, !dbg !4841

if.end193:                                        ; preds = %if.end190
  %st_mode194 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !4842, !ctir !415
  %128 = load i32, i32* %st_mode194, align 8, !dbg !4842, !tbaa !2911, !ctir !140
  %and195 = and i32 %128, 61440, !dbg !4842
  %cmp196 = icmp eq i32 %and195, 16384, !dbg !4842
  br i1 %cmp196, label %if.end224, label %if.then197, !dbg !4844

if.then197:                                       ; preds = %if.end193
  %129 = load i32, i32* %src_mode, align 4, !dbg !4845, !tbaa !2632
  %and198 = and i32 %129, 61440, !dbg !4845
  %cmp199 = icmp eq i32 %and198, 16384, !dbg !4845
  br i1 %cmp199, label %if.then200, label %if.end212, !dbg !4848

if.then200:                                       ; preds = %if.then197
  %130 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4849, !tbaa !2645
  %move_mode201 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %130, i32 0, i32 9, !dbg !4852, !ctir !357
  %131 = load i8, i8* %move_mode201, align 8, !dbg !4852, !tbaa !3164
  %tobool202 = trunc i8 %131 to i1, !dbg !4852, !ctir !142
  br i1 %tobool202, label %land.lhs.true203, label %if.else207, !dbg !4853

land.lhs.true203:                                 ; preds = %if.then200
  %132 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4854, !tbaa !2645
  %backup_type204 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %132, i32 0, i32 0, !dbg !4855, !ctir !357
  %133 = load i32, i32* %backup_type204, align 8, !dbg !4855, !tbaa !2924, !ctir !68
  %cmp205 = icmp ne i32 %133, 0, !dbg !4856
  br i1 %cmp205, label %if.then206, label %if.else207, !dbg !4857

if.then206:                                       ; preds = %land.lhs.true203
  br label %if.end211, !dbg !4858

if.else207:                                       ; preds = %land.lhs.true203, %if.then200
  %call208 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.17.107, i64 0, i64 0)) #9, !dbg !4860
  %134 = load i8*, i8** %dst_name.addr, align 8, !dbg !4862, !tbaa !2645
  %call209 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %134), !dbg !4862
  %135 = load i8*, i8** %src_name.addr, align 8, !dbg !4863, !tbaa !2645
  %call210 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %135), !dbg !4863
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call208, i8* %call209, i8* %call210), !dbg !4864
  store i1 false, i1* %retval, align 1, !dbg !4865
  br label %return, !dbg !4865

if.end211:                                        ; preds = %if.then206
  br label %if.end212, !dbg !4866

if.end212:                                        ; preds = %if.end211, %if.then197
  %136 = load i8, i8* %command_line_arg.addr, align 1, !dbg !4867, !tbaa !2739
  %tobool213 = trunc i8 %136 to i1, !dbg !4867
  br i1 %tobool213, label %land.lhs.true214, label %if.end223, !dbg !4869

land.lhs.true214:                                 ; preds = %if.end212
  %137 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4870, !tbaa !2645
  %backup_type215 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %137, i32 0, i32 0, !dbg !4871, !ctir !357
  %138 = load i32, i32* %backup_type215, align 8, !dbg !4871, !tbaa !2924, !ctir !68
  %cmp216 = icmp ne i32 %138, 3, !dbg !4872
  br i1 %cmp216, label %land.lhs.true217, label %if.end223, !dbg !4873

land.lhs.true217:                                 ; preds = %land.lhs.true214
  %139 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4874, !tbaa !2645
  %dest_info = getelementptr inbounds %struct.cp_options, %struct.cp_options* %139, i32 0, i32 37, !dbg !4875, !ctir !357
  %140 = load %struct.hash_table*, %struct.hash_table** %dest_info, align 8, !dbg !4875, !tbaa !3263, !ctir !175
  %141 = load i8*, i8** %dst_name.addr, align 8, !dbg !4876, !tbaa !2645
  %call218 = call zeroext i1 @seen_file(%struct.hash_table* %140, i8* %141, %struct.stat* %dst_sb), !dbg !4877
  br i1 %call218, label %if.then219, label %if.end223, !dbg !4878

if.then219:                                       ; preds = %land.lhs.true217
  %call220 = call i8* @gettext(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.18.108, i64 0, i64 0)) #9, !dbg !4879
  %142 = load i8*, i8** %dst_name.addr, align 8, !dbg !4881, !tbaa !2645
  %call221 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %142), !dbg !4881
  %143 = load i8*, i8** %src_name.addr, align 8, !dbg !4882, !tbaa !2645
  %call222 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %143), !dbg !4882
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call220, i8* %call221, i8* %call222), !dbg !4883
  store i1 false, i1* %retval, align 1, !dbg !4884
  br label %return, !dbg !4884

if.end223:                                        ; preds = %land.lhs.true217, %land.lhs.true214, %if.end212
  br label %if.end224, !dbg !4885

if.end224:                                        ; preds = %if.end223, %if.end193
  %144 = load i32, i32* %src_mode, align 4, !dbg !4886, !tbaa !2632
  %and225 = and i32 %144, 61440, !dbg !4886
  %cmp226 = icmp eq i32 %and225, 16384, !dbg !4886
  br i1 %cmp226, label %if.end243, label %if.then227, !dbg !4888

if.then227:                                       ; preds = %if.end224
  %st_mode228 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !4889, !ctir !415
  %145 = load i32, i32* %st_mode228, align 8, !dbg !4889, !tbaa !2911, !ctir !140
  %and229 = and i32 %145, 61440, !dbg !4889
  %cmp230 = icmp eq i32 %and229, 16384, !dbg !4889
  br i1 %cmp230, label %if.then231, label %if.end242, !dbg !4892

if.then231:                                       ; preds = %if.then227
  %146 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4893, !tbaa !2645
  %move_mode232 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %146, i32 0, i32 9, !dbg !4896, !ctir !357
  %147 = load i8, i8* %move_mode232, align 8, !dbg !4896, !tbaa !3164
  %tobool233 = trunc i8 %147 to i1, !dbg !4896, !ctir !142
  br i1 %tobool233, label %land.lhs.true234, label %if.else238, !dbg !4897

land.lhs.true234:                                 ; preds = %if.then231
  %148 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4898, !tbaa !2645
  %backup_type235 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %148, i32 0, i32 0, !dbg !4899, !ctir !357
  %149 = load i32, i32* %backup_type235, align 8, !dbg !4899, !tbaa !2924, !ctir !68
  %cmp236 = icmp ne i32 %149, 0, !dbg !4900
  br i1 %cmp236, label %if.then237, label %if.else238, !dbg !4901

if.then237:                                       ; preds = %land.lhs.true234
  br label %if.end241, !dbg !4902

if.else238:                                       ; preds = %land.lhs.true234, %if.then231
  %call239 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.19.109, i64 0, i64 0)) #9, !dbg !4904
  %150 = load i8*, i8** %dst_name.addr, align 8, !dbg !4906, !tbaa !2645
  %call240 = call i8* @quotearg_style(i32 4, i8* %150), !dbg !4906
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call239, i8* %call240), !dbg !4907
  store i1 false, i1* %retval, align 1, !dbg !4908
  br label %return, !dbg !4908

if.end241:                                        ; preds = %if.then237
  br label %if.end242, !dbg !4909

if.end242:                                        ; preds = %if.end241, %if.then227
  br label %if.end243, !dbg !4910

if.end243:                                        ; preds = %if.end242, %if.end224
  %151 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4911, !tbaa !2645
  %move_mode244 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %151, i32 0, i32 9, !dbg !4913, !ctir !357
  %152 = load i8, i8* %move_mode244, align 8, !dbg !4913, !tbaa !3164
  %tobool245 = trunc i8 %152 to i1, !dbg !4913, !ctir !142
  br i1 %tobool245, label %if.then246, label %if.end262, !dbg !4914

if.then246:                                       ; preds = %if.end243
  %st_mode247 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !4915, !ctir !415
  %153 = load i32, i32* %st_mode247, align 8, !dbg !4915, !tbaa !2911, !ctir !140
  %and248 = and i32 %153, 61440, !dbg !4915
  %cmp249 = icmp eq i32 %and248, 16384, !dbg !4915
  br i1 %cmp249, label %land.lhs.true250, label %if.end261, !dbg !4918

land.lhs.true250:                                 ; preds = %if.then246
  %st_mode251 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !4919, !ctir !415
  %154 = load i32, i32* %st_mode251, align 8, !dbg !4919, !tbaa !2911, !ctir !140
  %and252 = and i32 %154, 61440, !dbg !4919
  %cmp253 = icmp eq i32 %and252, 16384, !dbg !4919
  br i1 %cmp253, label %if.end261, label %land.lhs.true254, !dbg !4920

land.lhs.true254:                                 ; preds = %land.lhs.true250
  %155 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4921, !tbaa !2645
  %backup_type255 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %155, i32 0, i32 0, !dbg !4922, !ctir !357
  %156 = load i32, i32* %backup_type255, align 8, !dbg !4922, !tbaa !2924, !ctir !68
  %cmp256 = icmp eq i32 %156, 0, !dbg !4923
  br i1 %cmp256, label %if.then257, label %if.end261, !dbg !4924

if.then257:                                       ; preds = %land.lhs.true254
  %call258 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.20.110, i64 0, i64 0)) #9, !dbg !4925
  %157 = load i8*, i8** %src_name.addr, align 8, !dbg !4927, !tbaa !2645
  %call259 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %157), !dbg !4927
  %158 = load i8*, i8** %dst_name.addr, align 8, !dbg !4928, !tbaa !2645
  %call260 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %158), !dbg !4928
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call258, i8* %call259, i8* %call260), !dbg !4929
  store i1 false, i1* %retval, align 1, !dbg !4930
  br label %return, !dbg !4930

if.end261:                                        ; preds = %land.lhs.true254, %land.lhs.true250, %if.then246
  br label %if.end262, !dbg !4931

if.end262:                                        ; preds = %if.end261, %if.end243
  call void @llvm.dbg.declare(metadata i8** %srcbase, metadata !4932, metadata !DIExpression()), !dbg !4933
  %159 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4934, !tbaa !2645
  %backup_type263 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %159, i32 0, i32 0, !dbg !4936, !ctir !357
  %160 = load i32, i32* %backup_type263, align 8, !dbg !4936, !tbaa !2924, !ctir !68
  %cmp264 = icmp ne i32 %160, 0, !dbg !4937
  br i1 %cmp264, label %land.lhs.true265, label %if.else306, !dbg !4938

land.lhs.true265:                                 ; preds = %if.end262
  %161 = load i8*, i8** %src_name.addr, align 8, !dbg !4939, !tbaa !2645
  %call266 = call i8* @last_component(i8* %161) #14, !dbg !4940
  store i8* %call266, i8** %srcbase, align 8, !dbg !4941, !tbaa !2645
  %call267 = call zeroext i1 @dot_or_dotdot(i8* %call266), !dbg !4942
  br i1 %call267, label %if.else306, label %land.lhs.true268, !dbg !4943

land.lhs.true268:                                 ; preds = %land.lhs.true265
  %162 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4944, !tbaa !2645
  %move_mode269 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %162, i32 0, i32 9, !dbg !4945, !ctir !357
  %163 = load i8, i8* %move_mode269, align 8, !dbg !4945, !tbaa !3164
  %tobool270 = trunc i8 %163 to i1, !dbg !4945, !ctir !142
  br i1 %tobool270, label %if.then275, label %lor.lhs.false271, !dbg !4946

lor.lhs.false271:                                 ; preds = %land.lhs.true268
  %st_mode272 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !4947, !ctir !415
  %164 = load i32, i32* %st_mode272, align 8, !dbg !4947, !tbaa !2911, !ctir !140
  %and273 = and i32 %164, 61440, !dbg !4947
  %cmp274 = icmp eq i32 %and273, 16384, !dbg !4947
  br i1 %cmp274, label %if.else306, label %if.then275, !dbg !4948

if.then275:                                       ; preds = %lor.lhs.false271, %land.lhs.true268
  %165 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4949, !tbaa !2645
  %backup_type276 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %165, i32 0, i32 0, !dbg !4952, !ctir !357
  %166 = load i32, i32* %backup_type276, align 8, !dbg !4952, !tbaa !2924, !ctir !68
  %cmp277 = icmp ne i32 %166, 3, !dbg !4953
  br i1 %cmp277, label %land.lhs.true278, label %if.end291, !dbg !4954

land.lhs.true278:                                 ; preds = %if.then275
  %167 = load i8*, i8** %srcbase, align 8, !dbg !4955, !tbaa !2645
  %168 = load i8*, i8** %dst_name.addr, align 8, !dbg !4956, !tbaa !2645
  %call279 = call zeroext i1 @source_is_dst_backup(i8* %167, %struct.stat* %src_sb, i8* %168), !dbg !4957
  br i1 %call279, label %if.then280, label %if.end291, !dbg !4958

if.then280:                                       ; preds = %land.lhs.true278
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !4959, metadata !DIExpression()), !dbg !4961
  %169 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4962, !tbaa !2645
  %move_mode281 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %169, i32 0, i32 9, !dbg !4963, !ctir !357
  %170 = load i8, i8* %move_mode281, align 8, !dbg !4963, !tbaa !3164
  %tobool282 = trunc i8 %170 to i1, !dbg !4963, !ctir !142
  br i1 %tobool282, label %cond.true283, label %cond.false285, !dbg !4962

cond.true283:                                     ; preds = %if.then280
  %call284 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.21.111, i64 0, i64 0)) #9, !dbg !4964
  br label %cond.end287, !dbg !4962

cond.false285:                                    ; preds = %if.then280
  %call286 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.22.112, i64 0, i64 0)) #9, !dbg !4965
  br label %cond.end287, !dbg !4962

cond.end287:                                      ; preds = %cond.false285, %cond.true283
  %cond288 = phi i8* [ %call284, %cond.true283 ], [ %call286, %cond.false285 ], !dbg !4962
  store i8* %cond288, i8** %fmt, align 8, !dbg !4966, !tbaa !2645
  %171 = load i8*, i8** %fmt, align 8, !dbg !4967, !tbaa !2645
  %172 = load i8*, i8** %dst_name.addr, align 8, !dbg !4968, !tbaa !2645
  %call289 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %172), !dbg !4968
  %173 = load i8*, i8** %src_name.addr, align 8, !dbg !4969, !tbaa !2645
  %call290 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %173), !dbg !4969
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %171, i8* %call289, i8* %call290), !dbg !4970
  store i1 false, i1* %retval, align 1, !dbg !4971
  br label %return, !dbg !4971

if.end291:                                        ; preds = %land.lhs.true278, %if.then275
  call void @llvm.dbg.declare(metadata i8** %tmp_backup, metadata !4972, metadata !DIExpression()), !dbg !4973
  %174 = load i8*, i8** %dst_name.addr, align 8, !dbg !4974, !tbaa !2645
  %175 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !4975, !tbaa !2645
  %backup_type292 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %175, i32 0, i32 0, !dbg !4976, !ctir !357
  %176 = load i32, i32* %backup_type292, align 8, !dbg !4976, !tbaa !2924, !ctir !68
  %call293 = call i8* @backup_file_rename(i32 -100, i8* %174, i32 %176), !dbg !4977
  store i8* %call293, i8** %tmp_backup, align 8, !dbg !4973, !tbaa !2645
  %177 = load i8*, i8** %tmp_backup, align 8, !dbg !4978, !tbaa !2645
  %tobool294 = icmp ne i8* %177, null, !dbg !4978
  br i1 %tobool294, label %if.then295, label %if.else297, !dbg !4980

if.then295:                                       ; preds = %if.end291
  br label %do.body, !dbg !4981

do.body:                                          ; preds = %if.then295
  call void @llvm.dbg.declare(metadata i8** %__old, metadata !4983, metadata !DIExpression()), !dbg !4986
  %178 = load i8*, i8** %tmp_backup, align 8, !dbg !4986, !tbaa !2645
  store i8* %178, i8** %__old, align 8, !dbg !4986, !tbaa !2645
  call void @llvm.dbg.declare(metadata i64* %__len, metadata !4987, metadata !DIExpression()), !dbg !4986
  %179 = load i8*, i8** %__old, align 8, !dbg !4986, !tbaa !2645
  %call296 = call i64 @strlen(i8* %179) #14, !dbg !4986
  %add = add i64 %call296, 1, !dbg !4986
  store i64 %add, i64* %__len, align 8, !dbg !4986, !tbaa !3285
  call void @llvm.dbg.declare(metadata i8** %__new, metadata !4988, metadata !DIExpression()), !dbg !4986
  %180 = load i64, i64* %__len, align 8, !dbg !4986, !tbaa !3285
  %181 = alloca i8, i64 %180, align 16, !dbg !4986
  store i8* %181, i8** %__new, align 8, !dbg !4986, !tbaa !2645
  %182 = load i8*, i8** %__new, align 8, !dbg !4986, !tbaa !2645
  %183 = load i8*, i8** %__old, align 8, !dbg !4986, !tbaa !2645
  %184 = load i64, i64* %__len, align 8, !dbg !4986, !tbaa !3285
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %182, i8* align 1 %183, i64 %184, i1 false), !dbg !4986
  store i8* %182, i8** %tmp, align 8, !dbg !4986, !tbaa !2645
  %185 = load i8*, i8** %tmp, align 8, !dbg !4986, !tbaa !2645
  store i8* %185, i8** %dst_backup, align 8, !dbg !4989, !tbaa !2645
  br label %do.end, !dbg !4989

do.end:                                           ; preds = %do.body
  %186 = load i8*, i8** %tmp_backup, align 8, !dbg !4990, !tbaa !2645
  call void @free(i8* %186) #9, !dbg !4991
  br label %if.end305, !dbg !4992

if.else297:                                       ; preds = %if.end291
  %call298 = call i32* @__errno_location() #16, !dbg !4993
  %187 = load i32, i32* %call298, align 4, !dbg !4993, !tbaa !2632, !ctir !7
  %cmp299 = icmp ne i32 %187, 2, !dbg !4995
  br i1 %cmp299, label %if.then300, label %if.end304, !dbg !4996

if.then300:                                       ; preds = %if.else297
  %call301 = call i32* @__errno_location() #16, !dbg !4997
  %188 = load i32, i32* %call301, align 4, !dbg !4997, !tbaa !2632, !ctir !7
  %call302 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23.113, i64 0, i64 0)) #9, !dbg !4999
  %189 = load i8*, i8** %dst_name.addr, align 8, !dbg !5000, !tbaa !2645
  %call303 = call i8* @quotearg_style(i32 4, i8* %189), !dbg !5000
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %188, i8* %call302, i8* %call303), !dbg !5001
  store i1 false, i1* %retval, align 1, !dbg !5002
  br label %return, !dbg !5002

if.end304:                                        ; preds = %if.else297
  br label %if.end305

if.end305:                                        ; preds = %if.end304, %do.end
  store i8 1, i8* %new_dst.addr, align 1, !dbg !5003, !tbaa !2739
  br label %if.end346, !dbg !5004

if.else306:                                       ; preds = %lor.lhs.false271, %land.lhs.true265, %if.end262
  %st_mode307 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5005, !ctir !415
  %190 = load i32, i32* %st_mode307, align 8, !dbg !5005, !tbaa !2911, !ctir !140
  %and308 = and i32 %190, 61440, !dbg !5005
  %cmp309 = icmp eq i32 %and308, 16384, !dbg !5005
  br i1 %cmp309, label %if.end345, label %land.lhs.true310, !dbg !5007

land.lhs.true310:                                 ; preds = %if.else306
  %191 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5008, !tbaa !2645
  %move_mode311 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %191, i32 0, i32 9, !dbg !5009, !ctir !357
  %192 = load i8, i8* %move_mode311, align 8, !dbg !5009, !tbaa !3164
  %tobool312 = trunc i8 %192 to i1, !dbg !5009, !ctir !142
  br i1 %tobool312, label %if.end345, label %land.lhs.true313, !dbg !5010

land.lhs.true313:                                 ; preds = %land.lhs.true310
  %193 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5011, !tbaa !2645
  %unlink_dest_before_opening314 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %193, i32 0, i32 6, !dbg !5012, !ctir !357
  %194 = load i8, i8* %unlink_dest_before_opening314, align 1, !dbg !5012, !tbaa !3148
  %tobool315 = trunc i8 %194 to i1, !dbg !5012, !ctir !142
  br i1 %tobool315, label %if.then327, label %lor.lhs.false316, !dbg !5013

lor.lhs.false316:                                 ; preds = %land.lhs.true313
  %195 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5014, !tbaa !2645
  %preserve_links = getelementptr inbounds %struct.cp_options, %struct.cp_options* %195, i32 0, i32 19, !dbg !5015, !ctir !357
  %196 = load i8, i8* %preserve_links, align 2, !dbg !5015, !tbaa !3180
  %tobool317 = trunc i8 %196 to i1, !dbg !5015, !ctir !142
  br i1 %tobool317, label %land.lhs.true318, label %lor.lhs.false320, !dbg !5016

land.lhs.true318:                                 ; preds = %lor.lhs.false316
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 2, !dbg !5017, !ctir !415
  %197 = load i64, i64* %st_nlink, align 8, !dbg !5017, !tbaa !5018, !ctir !278
  %cmp319 = icmp ult i64 1, %197, !dbg !5019
  br i1 %cmp319, label %if.then327, label %lor.lhs.false320, !dbg !5020

lor.lhs.false320:                                 ; preds = %land.lhs.true318, %lor.lhs.false316
  %198 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5021, !tbaa !2645
  %dereference321 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %198, i32 0, i32 1, !dbg !5022, !ctir !357
  %199 = load i32, i32* %dereference321, align 4, !dbg !5022, !tbaa !3144, !ctir !76
  %cmp322 = icmp eq i32 %199, 2, !dbg !5023
  br i1 %cmp322, label %land.lhs.true323, label %if.end345, !dbg !5024

land.lhs.true323:                                 ; preds = %lor.lhs.false320
  %st_mode324 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 3, !dbg !5025, !ctir !415
  %200 = load i32, i32* %st_mode324, align 8, !dbg !5025, !tbaa !2911, !ctir !140
  %and325 = and i32 %200, 61440, !dbg !5025
  %cmp326 = icmp eq i32 %and325, 32768, !dbg !5025
  br i1 %cmp326, label %if.end345, label %if.then327, !dbg !5026

if.then327:                                       ; preds = %land.lhs.true323, %land.lhs.true318, %land.lhs.true313
  %201 = load i8*, i8** %dst_name.addr, align 8, !dbg !5027, !tbaa !2645
  %call328 = call i32 @unlink(i8* %201) #9, !dbg !5030
  %cmp329 = icmp ne i32 %call328, 0, !dbg !5031
  br i1 %cmp329, label %land.lhs.true330, label %if.end337, !dbg !5032

land.lhs.true330:                                 ; preds = %if.then327
  %call331 = call i32* @__errno_location() #16, !dbg !5033
  %202 = load i32, i32* %call331, align 4, !dbg !5033, !tbaa !2632, !ctir !7
  %cmp332 = icmp ne i32 %202, 2, !dbg !5034
  br i1 %cmp332, label %if.then333, label %if.end337, !dbg !5035

if.then333:                                       ; preds = %land.lhs.true330
  %call334 = call i32* @__errno_location() #16, !dbg !5036
  %203 = load i32, i32* %call334, align 4, !dbg !5036, !tbaa !2632, !ctir !7
  %call335 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24.114, i64 0, i64 0)) #9, !dbg !5038
  %204 = load i8*, i8** %dst_name.addr, align 8, !dbg !5039, !tbaa !2645
  %call336 = call i8* @quotearg_style(i32 4, i8* %204), !dbg !5039
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %203, i8* %call335, i8* %call336), !dbg !5040
  store i1 false, i1* %retval, align 1, !dbg !5041
  br label %return, !dbg !5041

if.end337:                                        ; preds = %land.lhs.true330, %if.then327
  store i8 1, i8* %new_dst.addr, align 1, !dbg !5042, !tbaa !2739
  %205 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5043, !tbaa !2645
  %verbose338 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %205, i32 0, i32 31, !dbg !5045, !ctir !357
  %206 = load i8, i8* %verbose338, align 2, !dbg !5045, !tbaa !2809
  %tobool339 = trunc i8 %206 to i1, !dbg !5045, !ctir !142
  br i1 %tobool339, label %if.then340, label %if.end344, !dbg !5046

if.then340:                                       ; preds = %if.end337
  %call341 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25.115, i64 0, i64 0)) #9, !dbg !5047
  %207 = load i8*, i8** %dst_name.addr, align 8, !dbg !5048, !tbaa !2645
  %call342 = call i8* @quotearg_style(i32 4, i8* %207), !dbg !5048
  %call343 = call i32 (i8*, ...) @printf(i8* %call341, i8* %call342), !dbg !5049
  br label %if.end344, !dbg !5049

if.end344:                                        ; preds = %if.then340, %if.end337
  br label %if.end345, !dbg !5050

if.end345:                                        ; preds = %if.end344, %land.lhs.true323, %lor.lhs.false320, %land.lhs.true310, %if.else306
  br label %if.end346

if.end346:                                        ; preds = %if.end345, %if.end305
  br label %if.end347, !dbg !5051

if.end347:                                        ; preds = %if.end346, %if.end125
  br label %if.end348, !dbg !5052

if.end348:                                        ; preds = %if.end347, %if.end68
  %208 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5053, !tbaa !2739
  %tobool349 = trunc i8 %208 to i1, !dbg !5053
  br i1 %tobool349, label %land.lhs.true350, label %if.end382, !dbg !5055

land.lhs.true350:                                 ; preds = %if.end348
  %209 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5056, !tbaa !2645
  %dest_info351 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %209, i32 0, i32 37, !dbg !5057, !ctir !357
  %210 = load %struct.hash_table*, %struct.hash_table** %dest_info351, align 8, !dbg !5057, !tbaa !3263, !ctir !175
  %tobool352 = icmp ne %struct.hash_table* %210, null, !dbg !5056
  br i1 %tobool352, label %land.lhs.true353, label %if.end382, !dbg !5058

land.lhs.true353:                                 ; preds = %land.lhs.true350
  %211 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5059, !tbaa !2645
  %move_mode354 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %211, i32 0, i32 9, !dbg !5060, !ctir !357
  %212 = load i8, i8* %move_mode354, align 8, !dbg !5060, !tbaa !3164
  %tobool355 = trunc i8 %212 to i1, !dbg !5060, !ctir !142
  br i1 %tobool355, label %if.end382, label %land.lhs.true356, !dbg !5061

land.lhs.true356:                                 ; preds = %land.lhs.true353
  %213 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5062, !tbaa !2645
  %backup_type357 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %213, i32 0, i32 0, !dbg !5063, !ctir !357
  %214 = load i32, i32* %backup_type357, align 8, !dbg !5063, !tbaa !2924, !ctir !68
  %cmp358 = icmp eq i32 %214, 0, !dbg !5064
  br i1 %cmp358, label %if.then359, label %if.end382, !dbg !5065

if.then359:                                       ; preds = %land.lhs.true356
  call void @llvm.dbg.declare(metadata i8* %lstat_ok, metadata !5066, metadata !DIExpression()), !dbg !5068
  store i8 1, i8* %lstat_ok, align 1, !dbg !5068, !tbaa !2739
  call void @llvm.dbg.declare(metadata %struct.stat* %tmp_buf, metadata !5069, metadata !DIExpression()), !dbg !5070
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_lstat_sb, metadata !5071, metadata !DIExpression()), !dbg !5072
  %215 = load i8, i8* %have_dst_lstat, align 1, !dbg !5073, !tbaa !2739
  %tobool360 = trunc i8 %215 to i1, !dbg !5073
  br i1 %tobool360, label %if.then361, label %if.else362, !dbg !5075

if.then361:                                       ; preds = %if.then359
  store %struct.stat* %dst_sb, %struct.stat** %dst_lstat_sb, align 8, !dbg !5076, !tbaa !2645
  br label %if.end368, !dbg !5077

if.else362:                                       ; preds = %if.then359
  %216 = load i8*, i8** %dst_name.addr, align 8, !dbg !5078, !tbaa !2645
  %call363 = call i32 @lstat(i8* %216, %struct.stat* %tmp_buf) #9, !dbg !5081
  %cmp364 = icmp eq i32 %call363, 0, !dbg !5082
  br i1 %cmp364, label %if.then365, label %if.else366, !dbg !5083

if.then365:                                       ; preds = %if.else362
  store %struct.stat* %tmp_buf, %struct.stat** %dst_lstat_sb, align 8, !dbg !5084, !tbaa !2645
  br label %if.end367, !dbg !5085

if.else366:                                       ; preds = %if.else362
  store i8 0, i8* %lstat_ok, align 1, !dbg !5086, !tbaa !2739
  br label %if.end367

if.end367:                                        ; preds = %if.else366, %if.then365
  br label %if.end368

if.end368:                                        ; preds = %if.end367, %if.then361
  %217 = load i8, i8* %lstat_ok, align 1, !dbg !5087, !tbaa !2739
  %tobool369 = trunc i8 %217 to i1, !dbg !5087
  br i1 %tobool369, label %land.lhs.true370, label %if.end381, !dbg !5089

land.lhs.true370:                                 ; preds = %if.end368
  %218 = load %struct.stat*, %struct.stat** %dst_lstat_sb, align 8, !dbg !5090, !tbaa !2645
  %st_mode371 = getelementptr inbounds %struct.stat, %struct.stat* %218, i32 0, i32 3, !dbg !5090, !ctir !415
  %219 = load i32, i32* %st_mode371, align 8, !dbg !5090, !tbaa !2911, !ctir !140
  %and372 = and i32 %219, 61440, !dbg !5090
  %cmp373 = icmp eq i32 %and372, 40960, !dbg !5090
  br i1 %cmp373, label %land.lhs.true374, label %if.end381, !dbg !5091

land.lhs.true374:                                 ; preds = %land.lhs.true370
  %220 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5092, !tbaa !2645
  %dest_info375 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %220, i32 0, i32 37, !dbg !5093, !ctir !357
  %221 = load %struct.hash_table*, %struct.hash_table** %dest_info375, align 8, !dbg !5093, !tbaa !3263, !ctir !175
  %222 = load i8*, i8** %dst_name.addr, align 8, !dbg !5094, !tbaa !2645
  %223 = load %struct.stat*, %struct.stat** %dst_lstat_sb, align 8, !dbg !5095, !tbaa !2645
  %call376 = call zeroext i1 @seen_file(%struct.hash_table* %221, i8* %222, %struct.stat* %223), !dbg !5096
  br i1 %call376, label %if.then377, label %if.end381, !dbg !5097

if.then377:                                       ; preds = %land.lhs.true374
  %call378 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.26.116, i64 0, i64 0)) #9, !dbg !5098
  %224 = load i8*, i8** %src_name.addr, align 8, !dbg !5100, !tbaa !2645
  %call379 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %224), !dbg !5100
  %225 = load i8*, i8** %dst_name.addr, align 8, !dbg !5101, !tbaa !2645
  %call380 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %225), !dbg !5101
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call378, i8* %call379, i8* %call380), !dbg !5102
  store i1 false, i1* %retval, align 1, !dbg !5103
  br label %return, !dbg !5103

if.end381:                                        ; preds = %land.lhs.true374, %land.lhs.true370, %if.end368
  br label %if.end382, !dbg !5104

if.end382:                                        ; preds = %if.end381, %land.lhs.true356, %land.lhs.true353, %land.lhs.true350, %if.end348
  %226 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5105, !tbaa !2645
  %verbose383 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %226, i32 0, i32 31, !dbg !5107, !ctir !357
  %227 = load i8, i8* %verbose383, align 2, !dbg !5107, !tbaa !2809
  %tobool384 = trunc i8 %227 to i1, !dbg !5107, !ctir !142
  br i1 %tobool384, label %land.lhs.true385, label %if.end392, !dbg !5108

land.lhs.true385:                                 ; preds = %if.end382
  %228 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5109, !tbaa !2645
  %move_mode386 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %228, i32 0, i32 9, !dbg !5110, !ctir !357
  %229 = load i8, i8* %move_mode386, align 8, !dbg !5110, !tbaa !3164
  %tobool387 = trunc i8 %229 to i1, !dbg !5110, !ctir !142
  br i1 %tobool387, label %if.end392, label %land.lhs.true388, !dbg !5111

land.lhs.true388:                                 ; preds = %land.lhs.true385
  %230 = load i32, i32* %src_mode, align 4, !dbg !5112, !tbaa !2632
  %and389 = and i32 %230, 61440, !dbg !5112
  %cmp390 = icmp eq i32 %and389, 16384, !dbg !5112
  br i1 %cmp390, label %if.end392, label %if.then391, !dbg !5113

if.then391:                                       ; preds = %land.lhs.true388
  %231 = load i8*, i8** %src_name.addr, align 8, !dbg !5114, !tbaa !2645
  %232 = load i8*, i8** %dst_name.addr, align 8, !dbg !5115, !tbaa !2645
  %233 = load i8*, i8** %dst_backup, align 8, !dbg !5116, !tbaa !2645
  call void @emit_verbose(i8* %231, i8* %232, i8* %233), !dbg !5117
  br label %if.end392, !dbg !5117

if.end392:                                        ; preds = %if.then391, %land.lhs.true388, %land.lhs.true385, %if.end382
  %234 = load i32, i32* %rename_errno, align 4, !dbg !5118, !tbaa !2632
  %cmp393 = icmp eq i32 %234, 0, !dbg !5120
  br i1 %cmp393, label %if.then394, label %if.else395, !dbg !5121

if.then394:                                       ; preds = %if.end392
  store i8* null, i8** %earlier_file, align 8, !dbg !5122, !tbaa !2645
  br label %if.end446, !dbg !5123

if.else395:                                       ; preds = %if.end392
  %235 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5124, !tbaa !2645
  %recursive396 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %235, i32 0, i32 27, !dbg !5126, !ctir !357
  %236 = load i8, i8* %recursive396, align 2, !dbg !5126, !tbaa !3211
  %tobool397 = trunc i8 %236 to i1, !dbg !5126, !ctir !142
  br i1 %tobool397, label %land.lhs.true398, label %if.else412, !dbg !5127

land.lhs.true398:                                 ; preds = %if.else395
  %237 = load i32, i32* %src_mode, align 4, !dbg !5128, !tbaa !2632
  %and399 = and i32 %237, 61440, !dbg !5128
  %cmp400 = icmp eq i32 %and399, 16384, !dbg !5128
  br i1 %cmp400, label %if.then401, label %if.else412, !dbg !5129

if.then401:                                       ; preds = %land.lhs.true398
  %238 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5130, !tbaa !2739
  %tobool402 = trunc i8 %238 to i1, !dbg !5130
  br i1 %tobool402, label %if.then403, label %if.else407, !dbg !5133

if.then403:                                       ; preds = %if.then401
  %239 = load i8*, i8** %dst_name.addr, align 8, !dbg !5134, !tbaa !2645
  %st_ino404 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5135, !ctir !415
  %240 = load i64, i64* %st_ino404, align 8, !dbg !5135, !tbaa !4781, !ctir !276
  %st_dev405 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5136, !ctir !415
  %241 = load i64, i64* %st_dev405, align 8, !dbg !5136, !tbaa !4760, !ctir !274
  %call406 = call i8* @remember_copied(i8* %239, i64 %240, i64 %241), !dbg !5137
  store i8* %call406, i8** %earlier_file, align 8, !dbg !5138, !tbaa !2645
  br label %if.end411, !dbg !5139

if.else407:                                       ; preds = %if.then401
  %st_ino408 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5140, !ctir !415
  %242 = load i64, i64* %st_ino408, align 8, !dbg !5140, !tbaa !4781, !ctir !276
  %st_dev409 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5141, !ctir !415
  %243 = load i64, i64* %st_dev409, align 8, !dbg !5141, !tbaa !4760, !ctir !274
  %call410 = call i8* @src_to_dest_lookup(i64 %242, i64 %243), !dbg !5142
  store i8* %call410, i8** %earlier_file, align 8, !dbg !5143, !tbaa !2645
  br label %if.end411

if.end411:                                        ; preds = %if.else407, %if.then403
  br label %if.end445, !dbg !5144

if.else412:                                       ; preds = %land.lhs.true398, %if.else395
  %244 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5145, !tbaa !2645
  %move_mode413 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %244, i32 0, i32 9, !dbg !5147, !ctir !357
  %245 = load i8, i8* %move_mode413, align 8, !dbg !5147, !tbaa !3164
  %tobool414 = trunc i8 %245 to i1, !dbg !5147, !ctir !142
  br i1 %tobool414, label %land.lhs.true415, label %if.else422, !dbg !5148

land.lhs.true415:                                 ; preds = %if.else412
  %st_nlink416 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 2, !dbg !5149, !ctir !415
  %246 = load i64, i64* %st_nlink416, align 8, !dbg !5149, !tbaa !5018, !ctir !278
  %cmp417 = icmp eq i64 %246, 1, !dbg !5150
  br i1 %cmp417, label %if.then418, label %if.else422, !dbg !5151

if.then418:                                       ; preds = %land.lhs.true415
  %st_ino419 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5152, !ctir !415
  %247 = load i64, i64* %st_ino419, align 8, !dbg !5152, !tbaa !4781, !ctir !276
  %st_dev420 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5154, !ctir !415
  %248 = load i64, i64* %st_dev420, align 8, !dbg !5154, !tbaa !4760, !ctir !274
  %call421 = call i8* @src_to_dest_lookup(i64 %247, i64 %248), !dbg !5155
  store i8* %call421, i8** %earlier_file, align 8, !dbg !5156, !tbaa !2645
  br label %if.end444, !dbg !5157

if.else422:                                       ; preds = %land.lhs.true415, %if.else412
  %249 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5158, !tbaa !2645
  %preserve_links423 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %249, i32 0, i32 19, !dbg !5160, !ctir !357
  %250 = load i8, i8* %preserve_links423, align 2, !dbg !5160, !tbaa !3180
  %tobool424 = trunc i8 %250 to i1, !dbg !5160, !ctir !142
  br i1 %tobool424, label %land.lhs.true425, label %if.end443, !dbg !5161

land.lhs.true425:                                 ; preds = %if.else422
  %251 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5162, !tbaa !2645
  %hard_link426 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %251, i32 0, i32 8, !dbg !5163, !ctir !357
  %252 = load i8, i8* %hard_link426, align 1, !dbg !5163, !tbaa !3156
  %tobool427 = trunc i8 %252 to i1, !dbg !5163, !ctir !142
  br i1 %tobool427, label %if.end443, label %land.lhs.true428, !dbg !5164

land.lhs.true428:                                 ; preds = %land.lhs.true425
  %st_nlink429 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 2, !dbg !5165, !ctir !415
  %253 = load i64, i64* %st_nlink429, align 8, !dbg !5165, !tbaa !5018, !ctir !278
  %cmp430 = icmp ult i64 1, %253, !dbg !5166
  br i1 %cmp430, label %if.then439, label %lor.lhs.false431, !dbg !5167

lor.lhs.false431:                                 ; preds = %land.lhs.true428
  %254 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5168, !tbaa !2739
  %tobool432 = trunc i8 %254 to i1, !dbg !5168
  br i1 %tobool432, label %land.lhs.true433, label %lor.lhs.false436, !dbg !5169

land.lhs.true433:                                 ; preds = %lor.lhs.false431
  %255 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5170, !tbaa !2645
  %dereference434 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %255, i32 0, i32 1, !dbg !5171, !ctir !357
  %256 = load i32, i32* %dereference434, align 4, !dbg !5171, !tbaa !3144, !ctir !76
  %cmp435 = icmp eq i32 %256, 3, !dbg !5172
  br i1 %cmp435, label %if.then439, label %lor.lhs.false436, !dbg !5173

lor.lhs.false436:                                 ; preds = %land.lhs.true433, %lor.lhs.false431
  %257 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5174, !tbaa !2645
  %dereference437 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %257, i32 0, i32 1, !dbg !5175, !ctir !357
  %258 = load i32, i32* %dereference437, align 4, !dbg !5175, !tbaa !3144, !ctir !76
  %cmp438 = icmp eq i32 %258, 4, !dbg !5176
  br i1 %cmp438, label %if.then439, label %if.end443, !dbg !5177

if.then439:                                       ; preds = %lor.lhs.false436, %land.lhs.true433, %land.lhs.true428
  %259 = load i8*, i8** %dst_name.addr, align 8, !dbg !5178, !tbaa !2645
  %st_ino440 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5180, !ctir !415
  %260 = load i64, i64* %st_ino440, align 8, !dbg !5180, !tbaa !4781, !ctir !276
  %st_dev441 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5181, !ctir !415
  %261 = load i64, i64* %st_dev441, align 8, !dbg !5181, !tbaa !4760, !ctir !274
  %call442 = call i8* @remember_copied(i8* %259, i64 %260, i64 %261), !dbg !5182
  store i8* %call442, i8** %earlier_file, align 8, !dbg !5183, !tbaa !2645
  br label %if.end443, !dbg !5184

if.end443:                                        ; preds = %if.then439, %lor.lhs.false436, %land.lhs.true425, %if.else422
  br label %if.end444

if.end444:                                        ; preds = %if.end443, %if.then418
  br label %if.end445

if.end445:                                        ; preds = %if.end444, %if.end411
  br label %if.end446

if.end446:                                        ; preds = %if.end445, %if.then394
  %262 = load i8*, i8** %earlier_file, align 8, !dbg !5185, !tbaa !2645
  %tobool447 = icmp ne i8* %262, null, !dbg !5185
  br i1 %tobool447, label %if.then448, label %if.end492, !dbg !5187

if.then448:                                       ; preds = %if.end446
  %263 = load i32, i32* %src_mode, align 4, !dbg !5188, !tbaa !2632
  %and449 = and i32 %263, 61440, !dbg !5188
  %cmp450 = icmp eq i32 %and449, 16384, !dbg !5188
  br i1 %cmp450, label %if.then451, label %if.else484, !dbg !5191

if.then451:                                       ; preds = %if.then448
  %264 = load i8*, i8** %src_name.addr, align 8, !dbg !5192, !tbaa !2645
  %265 = load i8*, i8** %earlier_file, align 8, !dbg !5195, !tbaa !2645
  %call452 = call zeroext i1 @same_name(i8* %264, i8* %265), !dbg !5196
  br i1 %call452, label %if.then453, label %if.else457, !dbg !5197

if.then453:                                       ; preds = %if.then451
  %call454 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.27.117, i64 0, i64 0)) #9, !dbg !5198
  %266 = load i8*, i8** @top_level_src_name, align 8, !dbg !5200, !tbaa !2645
  %call455 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %266), !dbg !5200
  %267 = load i8*, i8** @top_level_dst_name, align 8, !dbg !5201, !tbaa !2645
  %call456 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %267), !dbg !5201
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call454, i8* %call455, i8* %call456), !dbg !5202
  %268 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !5203, !tbaa !2645
  store i8 1, i8* %268, align 1, !dbg !5204, !tbaa !2739, !ctir !142
  br label %un_backup, !dbg !5205

if.else457:                                       ; preds = %if.then451
  %269 = load i8*, i8** %dst_name.addr, align 8, !dbg !5206, !tbaa !2645
  %270 = load i8*, i8** %earlier_file, align 8, !dbg !5208, !tbaa !2645
  %call458 = call zeroext i1 @same_name(i8* %269, i8* %270), !dbg !5209
  br i1 %call458, label %if.then459, label %if.else468, !dbg !5210

if.then459:                                       ; preds = %if.else457
  %call460 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.28.118, i64 0, i64 0)) #9, !dbg !5211
  %271 = load i8*, i8** @top_level_src_name, align 8, !dbg !5213, !tbaa !2645
  %call461 = call i8* @quotearg_style(i32 4, i8* %271), !dbg !5213
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call460, i8* %call461), !dbg !5214
  %272 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5215, !tbaa !2645
  %move_mode462 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %272, i32 0, i32 9, !dbg !5217, !ctir !357
  %273 = load i8, i8* %move_mode462, align 8, !dbg !5217, !tbaa !3164
  %tobool463 = trunc i8 %273 to i1, !dbg !5217, !ctir !142
  br i1 %tobool463, label %land.lhs.true464, label %if.end467, !dbg !5218

land.lhs.true464:                                 ; preds = %if.then459
  %274 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !5219, !tbaa !2645
  %tobool465 = icmp ne i8* %274, null, !dbg !5219
  br i1 %tobool465, label %if.then466, label %if.end467, !dbg !5220

if.then466:                                       ; preds = %land.lhs.true464
  %275 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !5221, !tbaa !2645
  store i8 1, i8* %275, align 1, !dbg !5222, !tbaa !2739, !ctir !142
  br label %if.end467, !dbg !5223

if.end467:                                        ; preds = %if.then466, %land.lhs.true464, %if.then459
  store i1 true, i1* %retval, align 1, !dbg !5224
  br label %return, !dbg !5224

if.else468:                                       ; preds = %if.else457
  %276 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5225, !tbaa !2645
  %dereference469 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %276, i32 0, i32 1, !dbg !5227, !ctir !357
  %277 = load i32, i32* %dereference469, align 4, !dbg !5227, !tbaa !3144, !ctir !76
  %cmp470 = icmp eq i32 %277, 4, !dbg !5228
  br i1 %cmp470, label %if.then476, label %lor.lhs.false471, !dbg !5229

lor.lhs.false471:                                 ; preds = %if.else468
  %278 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5230, !tbaa !2739
  %tobool472 = trunc i8 %278 to i1, !dbg !5230
  br i1 %tobool472, label %land.lhs.true473, label %if.else477, !dbg !5231

land.lhs.true473:                                 ; preds = %lor.lhs.false471
  %279 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5232, !tbaa !2645
  %dereference474 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %279, i32 0, i32 1, !dbg !5233, !ctir !357
  %280 = load i32, i32* %dereference474, align 4, !dbg !5233, !tbaa !3144, !ctir !76
  %cmp475 = icmp eq i32 %280, 3, !dbg !5234
  br i1 %cmp475, label %if.then476, label %if.else477, !dbg !5235

if.then476:                                       ; preds = %land.lhs.true473, %if.else468
  br label %if.end481, !dbg !5236

if.else477:                                       ; preds = %land.lhs.true473, %lor.lhs.false471
  %call478 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.29.119, i64 0, i64 0)) #9, !dbg !5238
  %281 = load i8*, i8** %dst_name.addr, align 8, !dbg !5240, !tbaa !2645
  %call479 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %281), !dbg !5240
  %282 = load i8*, i8** %earlier_file, align 8, !dbg !5241, !tbaa !2645
  %call480 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %282), !dbg !5241
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call478, i8* %call479, i8* %call480), !dbg !5242
  br label %un_backup, !dbg !5243

if.end481:                                        ; preds = %if.then476
  br label %if.end482

if.end482:                                        ; preds = %if.end481
  br label %if.end483

if.end483:                                        ; preds = %if.end482
  br label %if.end491, !dbg !5244

if.else484:                                       ; preds = %if.then448
  %283 = load i8*, i8** %earlier_file, align 8, !dbg !5245, !tbaa !2645
  %284 = load i8*, i8** %dst_name.addr, align 8, !dbg !5248, !tbaa !2645
  %285 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5249, !tbaa !2645
  %verbose485 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %285, i32 0, i32 31, !dbg !5250, !ctir !357
  %286 = load i8, i8* %verbose485, align 2, !dbg !5250, !tbaa !2809
  %tobool486 = trunc i8 %286 to i1, !dbg !5250, !ctir !142
  %287 = load i8, i8* %dereference69, align 1, !dbg !5251, !tbaa !2739
  %tobool487 = trunc i8 %287 to i1, !dbg !5251
  %call488 = call zeroext i1 @create_hard_link(i8* %283, i8* %284, i1 zeroext true, i1 zeroext %tobool486, i1 zeroext %tobool487), !dbg !5252
  br i1 %call488, label %if.end490, label %if.then489, !dbg !5253

if.then489:                                       ; preds = %if.else484
  br label %un_backup, !dbg !5254

if.end490:                                        ; preds = %if.else484
  store i1 true, i1* %retval, align 1, !dbg !5255
  br label %return, !dbg !5255

if.end491:                                        ; preds = %if.end483
  br label %if.end492, !dbg !5256

if.end492:                                        ; preds = %if.end491, %if.end446
  %288 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5257, !tbaa !2645
  %move_mode493 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %288, i32 0, i32 9, !dbg !5259, !ctir !357
  %289 = load i8, i8* %move_mode493, align 8, !dbg !5259, !tbaa !3164
  %tobool494 = trunc i8 %289 to i1, !dbg !5259, !ctir !142
  br i1 %tobool494, label %if.then495, label %if.end572, !dbg !5260

if.then495:                                       ; preds = %if.end492
  %290 = load i32, i32* %rename_errno, align 4, !dbg !5261, !tbaa !2632
  %cmp496 = icmp eq i32 %290, 17, !dbg !5264
  br i1 %cmp496, label %if.then497, label %if.end505, !dbg !5265

if.then497:                                       ; preds = %if.then495
  %291 = load i8*, i8** %src_name.addr, align 8, !dbg !5266, !tbaa !2645
  %292 = load i8*, i8** %dst_name.addr, align 8, !dbg !5267, !tbaa !2645
  %call498 = call i32 @rename(i8* %291, i8* %292) #9, !dbg !5268
  %cmp499 = icmp eq i32 %call498, 0, !dbg !5269
  br i1 %cmp499, label %cond.true500, label %cond.false501, !dbg !5268

cond.true500:                                     ; preds = %if.then497
  br label %cond.end503, !dbg !5268

cond.false501:                                    ; preds = %if.then497
  %call502 = call i32* @__errno_location() #16, !dbg !5270
  %293 = load i32, i32* %call502, align 4, !dbg !5270, !tbaa !2632, !ctir !7
  br label %cond.end503, !dbg !5268

cond.end503:                                      ; preds = %cond.false501, %cond.true500
  %cond504 = phi i32 [ 0, %cond.true500 ], [ %293, %cond.false501 ], !dbg !5268
  store i32 %cond504, i32* %rename_errno, align 4, !dbg !5271, !tbaa !2632
  br label %if.end505, !dbg !5272

if.end505:                                        ; preds = %cond.end503, %if.then495
  %294 = load i32, i32* %rename_errno, align 4, !dbg !5273, !tbaa !2632
  %cmp506 = icmp eq i32 %294, 0, !dbg !5275
  br i1 %cmp506, label %if.then507, label %if.end528, !dbg !5276

if.then507:                                       ; preds = %if.end505
  %295 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5277, !tbaa !2645
  %verbose508 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %295, i32 0, i32 31, !dbg !5280, !ctir !357
  %296 = load i8, i8* %verbose508, align 2, !dbg !5280, !tbaa !2809
  %tobool509 = trunc i8 %296 to i1, !dbg !5280, !ctir !142
  br i1 %tobool509, label %if.then510, label %if.end513, !dbg !5281

if.then510:                                       ; preds = %if.then507
  %call511 = call i8* @gettext(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30.120, i64 0, i64 0)) #9, !dbg !5282
  %call512 = call i32 (i8*, ...) @printf(i8* %call511), !dbg !5284
  %297 = load i8*, i8** %src_name.addr, align 8, !dbg !5285, !tbaa !2645
  %298 = load i8*, i8** %dst_name.addr, align 8, !dbg !5286, !tbaa !2645
  %299 = load i8*, i8** %dst_backup, align 8, !dbg !5287, !tbaa !2645
  call void @emit_verbose(i8* %297, i8* %298, i8* %299), !dbg !5288
  br label %if.end513, !dbg !5289

if.end513:                                        ; preds = %if.then510, %if.then507
  %300 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5290, !tbaa !2645
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %300, i32 0, i32 18, !dbg !5292, !ctir !357
  %301 = load i8, i8* %set_security_context, align 1, !dbg !5292, !tbaa !2863
  %tobool514 = trunc i8 %301 to i1, !dbg !5292, !ctir !142
  br i1 %tobool514, label %if.then515, label %if.end517, !dbg !5293

if.then515:                                       ; preds = %if.end513
  %302 = load i8*, i8** %dst_name.addr, align 8, !dbg !5294, !tbaa !2645
  %303 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5296, !tbaa !2645
  %call516 = call zeroext i1 @set_file_security_ctx(i8* %302, i1 zeroext false, i1 zeroext true, %struct.cp_options* %303), !dbg !5297
  br label %if.end517, !dbg !5298

if.end517:                                        ; preds = %if.then515, %if.end513
  %304 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !5299, !tbaa !2645
  %tobool518 = icmp ne i8* %304, null, !dbg !5299
  br i1 %tobool518, label %if.then519, label %if.end520, !dbg !5301

if.then519:                                       ; preds = %if.end517
  %305 = load i8*, i8** %rename_succeeded.addr, align 8, !dbg !5302, !tbaa !2645
  store i8 1, i8* %305, align 1, !dbg !5303, !tbaa !2739, !ctir !142
  br label %if.end520, !dbg !5304

if.end520:                                        ; preds = %if.then519, %if.end517
  %306 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5305, !tbaa !2739
  %tobool521 = trunc i8 %306 to i1, !dbg !5305
  br i1 %tobool521, label %land.lhs.true522, label %if.end527, !dbg !5307

land.lhs.true522:                                 ; preds = %if.end520
  %307 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5308, !tbaa !2645
  %last_file523 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %307, i32 0, i32 34, !dbg !5309, !ctir !357
  %308 = load i8, i8* %last_file523, align 1, !dbg !5309, !tbaa !4572
  %tobool524 = trunc i8 %308 to i1, !dbg !5309, !ctir !142
  br i1 %tobool524, label %if.end527, label %if.then525, !dbg !5310

if.then525:                                       ; preds = %land.lhs.true522
  %309 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5311, !tbaa !2645
  %dest_info526 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %309, i32 0, i32 37, !dbg !5313, !ctir !357
  %310 = load %struct.hash_table*, %struct.hash_table** %dest_info526, align 8, !dbg !5313, !tbaa !3263, !ctir !175
  %311 = load i8*, i8** %dst_name.addr, align 8, !dbg !5314, !tbaa !2645
  call void @record_file(%struct.hash_table* %310, i8* %311, %struct.stat* %src_sb), !dbg !5315
  br label %if.end527, !dbg !5316

if.end527:                                        ; preds = %if.then525, %land.lhs.true522, %if.end520
  store i1 true, i1* %retval, align 1, !dbg !5317
  br label %return, !dbg !5317

if.end528:                                        ; preds = %if.end505
  %312 = load i32, i32* %rename_errno, align 4, !dbg !5318, !tbaa !2632
  %cmp529 = icmp eq i32 %312, 22, !dbg !5320
  br i1 %cmp529, label %if.then530, label %if.end534, !dbg !5321

if.then530:                                       ; preds = %if.end528
  %call531 = call i8* @gettext(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.31.121, i64 0, i64 0)) #9, !dbg !5322
  %313 = load i8*, i8** @top_level_src_name, align 8, !dbg !5324, !tbaa !2645
  %call532 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %313), !dbg !5324
  %314 = load i8*, i8** @top_level_dst_name, align 8, !dbg !5325, !tbaa !2645
  %call533 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %314), !dbg !5325
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call531, i8* %call532, i8* %call533), !dbg !5326
  %315 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !5327, !tbaa !2645
  store i8 1, i8* %315, align 1, !dbg !5328, !tbaa !2739, !ctir !142
  store i1 true, i1* %retval, align 1, !dbg !5329
  br label %return, !dbg !5329

if.end534:                                        ; preds = %if.end528
  %316 = load i32, i32* %rename_errno, align 4, !dbg !5330, !tbaa !2632
  %cmp535 = icmp ne i32 %316, 18, !dbg !5332
  br i1 %cmp535, label %if.then536, label %if.end542, !dbg !5333

if.then536:                                       ; preds = %if.end534
  %317 = load i32, i32* %rename_errno, align 4, !dbg !5334, !tbaa !2632
  %call537 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.32.122, i64 0, i64 0)) #9, !dbg !5336
  %318 = load i8*, i8** %src_name.addr, align 8, !dbg !5337, !tbaa !2645
  %call538 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %318), !dbg !5337
  %319 = load i8*, i8** %dst_name.addr, align 8, !dbg !5338, !tbaa !2645
  %call539 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %319), !dbg !5338
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %317, i8* %call537, i8* %call538, i8* %call539), !dbg !5339
  %st_ino540 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5340, !ctir !415
  %320 = load i64, i64* %st_ino540, align 8, !dbg !5340, !tbaa !4781, !ctir !276
  %st_dev541 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5341, !ctir !415
  %321 = load i64, i64* %st_dev541, align 8, !dbg !5341, !tbaa !4760, !ctir !274
  call void @forget_created(i64 %320, i64 %321), !dbg !5342
  store i1 false, i1* %retval, align 1, !dbg !5343
  br label %return, !dbg !5343

if.end542:                                        ; preds = %if.end534
  %322 = load i32, i32* %src_mode, align 4, !dbg !5344, !tbaa !2632
  %and543 = and i32 %322, 61440, !dbg !5344
  %cmp544 = icmp eq i32 %and543, 16384, !dbg !5344
  br i1 %cmp544, label %cond.true545, label %cond.false547, !dbg !5344

cond.true545:                                     ; preds = %if.end542
  %323 = load i8*, i8** %dst_name.addr, align 8, !dbg !5346, !tbaa !2645
  %call546 = call i32 @rmdir(i8* %323) #9, !dbg !5347
  br label %cond.end549, !dbg !5344

cond.false547:                                    ; preds = %if.end542
  %324 = load i8*, i8** %dst_name.addr, align 8, !dbg !5348, !tbaa !2645
  %call548 = call i32 @unlink(i8* %324) #9, !dbg !5349
  br label %cond.end549, !dbg !5344

cond.end549:                                      ; preds = %cond.false547, %cond.true545
  %cond550 = phi i32 [ %call546, %cond.true545 ], [ %call548, %cond.false547 ], !dbg !5344
  %cmp551 = icmp ne i32 %cond550, 0, !dbg !5350
  br i1 %cmp551, label %land.lhs.true552, label %if.end562, !dbg !5351

land.lhs.true552:                                 ; preds = %cond.end549
  %call553 = call i32* @__errno_location() #16, !dbg !5352
  %325 = load i32, i32* %call553, align 4, !dbg !5352, !tbaa !2632, !ctir !7
  %cmp554 = icmp ne i32 %325, 2, !dbg !5353
  br i1 %cmp554, label %if.then555, label %if.end562, !dbg !5354

if.then555:                                       ; preds = %land.lhs.true552
  %call556 = call i32* @__errno_location() #16, !dbg !5355
  %326 = load i32, i32* %call556, align 4, !dbg !5355, !tbaa !2632, !ctir !7
  %call557 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.33.123, i64 0, i64 0)) #9, !dbg !5357
  %327 = load i8*, i8** %src_name.addr, align 8, !dbg !5358, !tbaa !2645
  %call558 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %327), !dbg !5358
  %328 = load i8*, i8** %dst_name.addr, align 8, !dbg !5359, !tbaa !2645
  %call559 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %328), !dbg !5359
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %326, i8* %call557, i8* %call558, i8* %call559), !dbg !5360
  %st_ino560 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5361, !ctir !415
  %329 = load i64, i64* %st_ino560, align 8, !dbg !5361, !tbaa !4781, !ctir !276
  %st_dev561 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5362, !ctir !415
  %330 = load i64, i64* %st_dev561, align 8, !dbg !5362, !tbaa !4760, !ctir !274
  call void @forget_created(i64 %329, i64 %330), !dbg !5363
  store i1 false, i1* %retval, align 1, !dbg !5364
  br label %return, !dbg !5364

if.end562:                                        ; preds = %land.lhs.true552, %cond.end549
  %331 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5365, !tbaa !2645
  %verbose563 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %331, i32 0, i32 31, !dbg !5367, !ctir !357
  %332 = load i8, i8* %verbose563, align 2, !dbg !5367, !tbaa !2809
  %tobool564 = trunc i8 %332 to i1, !dbg !5367, !ctir !142
  br i1 %tobool564, label %land.lhs.true565, label %if.end571, !dbg !5368

land.lhs.true565:                                 ; preds = %if.end562
  %333 = load i32, i32* %src_mode, align 4, !dbg !5369, !tbaa !2632
  %and566 = and i32 %333, 61440, !dbg !5369
  %cmp567 = icmp eq i32 %and566, 16384, !dbg !5369
  br i1 %cmp567, label %if.end571, label %if.then568, !dbg !5370

if.then568:                                       ; preds = %land.lhs.true565
  %call569 = call i8* @gettext(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.34.124, i64 0, i64 0)) #9, !dbg !5371
  %call570 = call i32 (i8*, ...) @printf(i8* %call569), !dbg !5373
  %334 = load i8*, i8** %src_name.addr, align 8, !dbg !5374, !tbaa !2645
  %335 = load i8*, i8** %dst_name.addr, align 8, !dbg !5375, !tbaa !2645
  %336 = load i8*, i8** %dst_backup, align 8, !dbg !5376, !tbaa !2645
  call void @emit_verbose(i8* %334, i8* %335, i8* %336), !dbg !5377
  br label %if.end571, !dbg !5378

if.end571:                                        ; preds = %if.then568, %land.lhs.true565, %if.end562
  store i8 1, i8* %new_dst.addr, align 1, !dbg !5379, !tbaa !2739
  br label %if.end572, !dbg !5380

if.end572:                                        ; preds = %if.end571, %if.end492
  %337 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5381, !tbaa !2645
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %337, i32 0, i32 28, !dbg !5382, !ctir !357
  %338 = load i8, i8* %set_mode, align 1, !dbg !5382, !tbaa !3226
  %tobool573 = trunc i8 %338 to i1, !dbg !5382, !ctir !142
  br i1 %tobool573, label %cond.true574, label %cond.false575, !dbg !5381

cond.true574:                                     ; preds = %if.end572
  %339 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5383, !tbaa !2645
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %339, i32 0, i32 4, !dbg !5384, !ctir !357
  %340 = load i32, i32* %mode, align 8, !dbg !5384, !tbaa !3230, !ctir !139
  br label %cond.end576, !dbg !5381

cond.false575:                                    ; preds = %if.end572
  %341 = load i32, i32* %src_mode, align 4, !dbg !5385, !tbaa !2632
  br label %cond.end576, !dbg !5381

cond.end576:                                      ; preds = %cond.false575, %cond.true574
  %cond577 = phi i32 [ %340, %cond.true574 ], [ %341, %cond.false575 ], !dbg !5381
  %and578 = and i32 %cond577, 4095, !dbg !5386
  store i32 %and578, i32* %dst_mode_bits, align 4, !dbg !5387, !tbaa !2632
  %342 = load i32, i32* %dst_mode_bits, align 4, !dbg !5388, !tbaa !2632
  %343 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5389, !tbaa !2645
  %preserve_ownership = getelementptr inbounds %struct.cp_options, %struct.cp_options* %343, i32 0, i32 14, !dbg !5390, !ctir !357
  %344 = load i8, i8* %preserve_ownership, align 1, !dbg !5390, !tbaa !3176
  %tobool579 = trunc i8 %344 to i1, !dbg !5390, !ctir !142
  br i1 %tobool579, label %cond.true580, label %cond.false581, !dbg !5389

cond.true580:                                     ; preds = %cond.end576
  br label %cond.end585, !dbg !5389

cond.false581:                                    ; preds = %cond.end576
  %345 = load i32, i32* %src_mode, align 4, !dbg !5391, !tbaa !2632
  %and582 = and i32 %345, 61440, !dbg !5391
  %cmp583 = icmp eq i32 %and582, 16384, !dbg !5391
  %346 = zext i1 %cmp583 to i64, !dbg !5391
  %cond584 = select i1 %cmp583, i32 18, i32 0, !dbg !5391
  br label %cond.end585, !dbg !5389

cond.end585:                                      ; preds = %cond.false581, %cond.true580
  %cond586 = phi i32 [ 63, %cond.true580 ], [ %cond584, %cond.false581 ], !dbg !5389
  %and587 = and i32 %342, %cond586, !dbg !5392
  store i32 %and587, i32* %omitted_permissions, align 4, !dbg !5393, !tbaa !2632
  store i8 1, i8* %delayed_ok, align 1, !dbg !5394, !tbaa !2739
  %347 = load i8*, i8** %src_name.addr, align 8, !dbg !5395, !tbaa !2645
  %348 = load i8*, i8** %dst_name.addr, align 8, !dbg !5397, !tbaa !2645
  %349 = load i32, i32* %src_mode, align 4, !dbg !5398, !tbaa !2632
  %350 = load i8, i8* %new_dst.addr, align 1, !dbg !5399, !tbaa !2739
  %tobool588 = trunc i8 %350 to i1, !dbg !5399
  %351 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5400, !tbaa !2645
  %call589 = call zeroext i1 @set_process_security_ctx(i8* %347, i8* %348, i32 %349, i1 zeroext %tobool588, %struct.cp_options* %351), !dbg !5401
  br i1 %call589, label %if.end591, label %if.then590, !dbg !5402

if.then590:                                       ; preds = %cond.end585
  store i1 false, i1* %retval, align 1, !dbg !5403
  br label %return, !dbg !5403

if.end591:                                        ; preds = %cond.end585
  %352 = load i32, i32* %src_mode, align 4, !dbg !5404, !tbaa !2632
  %and592 = and i32 %352, 61440, !dbg !5404
  %cmp593 = icmp eq i32 %and592, 16384, !dbg !5404
  br i1 %cmp593, label %if.then594, label %if.else685, !dbg !5406

if.then594:                                       ; preds = %if.end591
  call void @llvm.dbg.declare(metadata %struct.dir_list** %dir, metadata !5407, metadata !DIExpression()), !dbg !5409
  %353 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !5410, !tbaa !2645
  %call595 = call zeroext i1 @is_ancestor(%struct.stat* %src_sb, %struct.dir_list* %353) #14, !dbg !5412
  br i1 %call595, label %if.then596, label %if.end599, !dbg !5413

if.then596:                                       ; preds = %if.then594
  %call597 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.35.125, i64 0, i64 0)) #9, !dbg !5414
  %354 = load i8*, i8** %src_name.addr, align 8, !dbg !5416, !tbaa !2645
  %call598 = call i8* @quotearg_style(i32 4, i8* %354), !dbg !5416
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call597, i8* %call598), !dbg !5417
  br label %un_backup, !dbg !5418

if.end599:                                        ; preds = %if.then594
  %355 = alloca i8, i64 24, align 16, !dbg !5419
  %356 = bitcast i8* %355 to %struct.dir_list*, !dbg !5419
  store %struct.dir_list* %356, %struct.dir_list** %dir, align 8, !dbg !5420, !tbaa !2645
  %357 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !5421, !tbaa !2645
  %358 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !5422, !tbaa !2645
  %parent600 = getelementptr inbounds %struct.dir_list, %struct.dir_list* %358, i32 0, i32 0, !dbg !5423, !ctir !437
  store %struct.dir_list* %357, %struct.dir_list** %parent600, align 8, !dbg !5424, !tbaa !5425, !ctir !436
  %st_ino601 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !5427, !ctir !415
  %359 = load i64, i64* %st_ino601, align 8, !dbg !5427, !tbaa !4781, !ctir !276
  %360 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !5428, !tbaa !2645
  %ino = getelementptr inbounds %struct.dir_list, %struct.dir_list* %360, i32 0, i32 1, !dbg !5429, !ctir !437
  store i64 %359, i64* %ino, align 8, !dbg !5430, !tbaa !5431, !ctir !441
  %st_dev602 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5432, !ctir !415
  %361 = load i64, i64* %st_dev602, align 8, !dbg !5432, !tbaa !4760, !ctir !274
  %362 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !5433, !tbaa !2645
  %dev = getelementptr inbounds %struct.dir_list, %struct.dir_list* %362, i32 0, i32 2, !dbg !5434, !ctir !437
  store i64 %361, i64* %dev, align 8, !dbg !5435, !tbaa !5436, !ctir !443
  %363 = load i8, i8* %new_dst.addr, align 1, !dbg !5437, !tbaa !2739
  %tobool603 = trunc i8 %363 to i1, !dbg !5437
  br i1 %tobool603, label %if.then608, label %lor.lhs.false604, !dbg !5439

lor.lhs.false604:                                 ; preds = %if.end599
  %st_mode605 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5440, !ctir !415
  %364 = load i32, i32* %st_mode605, align 8, !dbg !5440, !tbaa !2911, !ctir !140
  %and606 = and i32 %364, 61440, !dbg !5440
  %cmp607 = icmp eq i32 %and606, 16384, !dbg !5440
  br i1 %cmp607, label %if.else656, label %if.then608, !dbg !5441

if.then608:                                       ; preds = %lor.lhs.false604, %if.end599
  %365 = load i8*, i8** %dst_name.addr, align 8, !dbg !5442, !tbaa !2645
  %366 = load i32, i32* %dst_mode_bits, align 4, !dbg !5445, !tbaa !2632
  %367 = load i32, i32* %omitted_permissions, align 4, !dbg !5446, !tbaa !2632
  %neg = xor i32 %367, -1, !dbg !5447
  %and609 = and i32 %366, %neg, !dbg !5448
  %call610 = call i32 @mkdir(i8* %365, i32 %and609) #9, !dbg !5449
  %cmp611 = icmp ne i32 %call610, 0, !dbg !5450
  br i1 %cmp611, label %if.then612, label %if.end616, !dbg !5451

if.then612:                                       ; preds = %if.then608
  %call613 = call i32* @__errno_location() #16, !dbg !5452
  %368 = load i32, i32* %call613, align 4, !dbg !5452, !tbaa !2632, !ctir !7
  %call614 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.36.126, i64 0, i64 0)) #9, !dbg !5454
  %369 = load i8*, i8** %dst_name.addr, align 8, !dbg !5455, !tbaa !2645
  %call615 = call i8* @quotearg_style(i32 4, i8* %369), !dbg !5455
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %368, i8* %call614, i8* %call615), !dbg !5456
  br label %un_backup, !dbg !5457

if.end616:                                        ; preds = %if.then608
  %370 = load i8*, i8** %dst_name.addr, align 8, !dbg !5458, !tbaa !2645
  %call617 = call i32 @lstat(i8* %370, %struct.stat* %dst_sb) #9, !dbg !5460
  %cmp618 = icmp ne i32 %call617, 0, !dbg !5461
  br i1 %cmp618, label %if.then619, label %if.else623, !dbg !5462

if.then619:                                       ; preds = %if.end616
  %call620 = call i32* @__errno_location() #16, !dbg !5463
  %371 = load i32, i32* %call620, align 4, !dbg !5463, !tbaa !2632, !ctir !7
  %call621 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.102, i64 0, i64 0)) #9, !dbg !5465
  %372 = load i8*, i8** %dst_name.addr, align 8, !dbg !5466, !tbaa !2645
  %call622 = call i8* @quotearg_style(i32 4, i8* %372), !dbg !5466
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %371, i8* %call621, i8* %call622), !dbg !5467
  br label %un_backup, !dbg !5468

if.else623:                                       ; preds = %if.end616
  %st_mode624 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5469, !ctir !415
  %373 = load i32, i32* %st_mode624, align 8, !dbg !5469, !tbaa !2911, !ctir !140
  %and625 = and i32 %373, 448, !dbg !5471
  %cmp626 = icmp ne i32 %and625, 448, !dbg !5472
  br i1 %cmp626, label %if.then627, label %if.end636, !dbg !5473

if.then627:                                       ; preds = %if.else623
  %st_mode628 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5474, !ctir !415
  %374 = load i32, i32* %st_mode628, align 8, !dbg !5474, !tbaa !2911, !ctir !140
  store i32 %374, i32* %dst_mode, align 4, !dbg !5476, !tbaa !2632
  store i8 1, i8* %restore_dst_mode, align 1, !dbg !5477, !tbaa !2739
  %375 = load i8*, i8** %dst_name.addr, align 8, !dbg !5478, !tbaa !2645
  %376 = load i32, i32* %dst_mode, align 4, !dbg !5480, !tbaa !2632
  %or = or i32 %376, 448, !dbg !5481
  %call629 = call i32 @chmod(i8* %375, i32 %or) #9, !dbg !5482
  %cmp630 = icmp ne i32 %call629, 0, !dbg !5483
  br i1 %cmp630, label %if.then631, label %if.end635, !dbg !5484

if.then631:                                       ; preds = %if.then627
  %call632 = call i32* @__errno_location() #16, !dbg !5485
  %377 = load i32, i32* %call632, align 4, !dbg !5485, !tbaa !2632, !ctir !7
  %call633 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.37.127, i64 0, i64 0)) #9, !dbg !5487
  %378 = load i8*, i8** %dst_name.addr, align 8, !dbg !5488, !tbaa !2645
  %call634 = call i8* @quotearg_style(i32 4, i8* %378), !dbg !5488
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %377, i8* %call633, i8* %call634), !dbg !5489
  br label %un_backup, !dbg !5490

if.end635:                                        ; preds = %if.then627
  br label %if.end636, !dbg !5491

if.end636:                                        ; preds = %if.end635, %if.else623
  br label %if.end637

if.end637:                                        ; preds = %if.end636
  %379 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !5492, !tbaa !2645
  %380 = load i8, i8* %379, align 1, !dbg !5494, !tbaa !2739
  %tobool638 = trunc i8 %380 to i1, !dbg !5494, !ctir !142
  br i1 %tobool638, label %if.end643, label %if.then639, !dbg !5495

if.then639:                                       ; preds = %if.end637
  %381 = load i8*, i8** %dst_name.addr, align 8, !dbg !5496, !tbaa !2645
  %st_ino640 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 1, !dbg !5498, !ctir !415
  %382 = load i64, i64* %st_ino640, align 8, !dbg !5498, !tbaa !4781, !ctir !276
  %st_dev641 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 0, !dbg !5499, !ctir !415
  %383 = load i64, i64* %st_dev641, align 8, !dbg !5499, !tbaa !4760, !ctir !274
  %call642 = call i8* @remember_copied(i8* %381, i64 %382, i64 %383), !dbg !5500
  %384 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !5501, !tbaa !2645
  store i8 1, i8* %384, align 1, !dbg !5502, !tbaa !2739, !ctir !142
  br label %if.end643, !dbg !5503

if.end643:                                        ; preds = %if.then639, %if.end637
  %385 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5504, !tbaa !2645
  %verbose644 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %385, i32 0, i32 31, !dbg !5506, !ctir !357
  %386 = load i8, i8* %verbose644, align 2, !dbg !5506, !tbaa !2809
  %tobool645 = trunc i8 %386 to i1, !dbg !5506, !ctir !142
  br i1 %tobool645, label %if.then646, label %if.end655, !dbg !5507

if.then646:                                       ; preds = %if.end643
  %387 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5508, !tbaa !2645
  %move_mode647 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %387, i32 0, i32 9, !dbg !5511, !ctir !357
  %388 = load i8, i8* %move_mode647, align 8, !dbg !5511, !tbaa !3164
  %tobool648 = trunc i8 %388 to i1, !dbg !5511, !ctir !142
  br i1 %tobool648, label %if.then649, label %if.else653, !dbg !5512

if.then649:                                       ; preds = %if.then646
  %call650 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.38.128, i64 0, i64 0)) #9, !dbg !5513
  %389 = load i8*, i8** %dst_name.addr, align 8, !dbg !5514, !tbaa !2645
  %call651 = call i8* @quotearg_style(i32 4, i8* %389), !dbg !5514
  %call652 = call i32 (i8*, ...) @printf(i8* %call650, i8* %call651), !dbg !5515
  br label %if.end654, !dbg !5515

if.else653:                                       ; preds = %if.then646
  %390 = load i8*, i8** %src_name.addr, align 8, !dbg !5516, !tbaa !2645
  %391 = load i8*, i8** %dst_name.addr, align 8, !dbg !5517, !tbaa !2645
  call void @emit_verbose(i8* %390, i8* %391, i8* null), !dbg !5518
  br label %if.end654

if.end654:                                        ; preds = %if.else653, %if.then649
  br label %if.end655, !dbg !5519

if.end655:                                        ; preds = %if.end654, %if.end643
  br label %if.end671, !dbg !5520

if.else656:                                       ; preds = %lor.lhs.false604
  store i32 0, i32* %omitted_permissions, align 4, !dbg !5521, !tbaa !2632
  %392 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5523, !tbaa !2645
  %set_security_context657 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %392, i32 0, i32 18, !dbg !5525, !ctir !357
  %393 = load i8, i8* %set_security_context657, align 1, !dbg !5525, !tbaa !2863
  %tobool658 = trunc i8 %393 to i1, !dbg !5525, !ctir !142
  br i1 %tobool658, label %if.then661, label %lor.lhs.false659, !dbg !5526

lor.lhs.false659:                                 ; preds = %if.else656
  %394 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5527, !tbaa !2645
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %394, i32 0, i32 22, !dbg !5528, !ctir !357
  %395 = load i8, i8* %preserve_security_context, align 1, !dbg !5528, !tbaa !2847
  %tobool660 = trunc i8 %395 to i1, !dbg !5528, !ctir !142
  br i1 %tobool660, label %if.then661, label %if.end670, !dbg !5529

if.then661:                                       ; preds = %lor.lhs.false659, %if.else656
  %396 = load i8*, i8** %dst_name.addr, align 8, !dbg !5530, !tbaa !2645
  %397 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5532, !tbaa !2645
  %preserve_security_context662 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %397, i32 0, i32 22, !dbg !5533, !ctir !357
  %398 = load i8, i8* %preserve_security_context662, align 1, !dbg !5533, !tbaa !2847
  %tobool663 = trunc i8 %398 to i1, !dbg !5533, !ctir !142
  %399 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5534, !tbaa !2645
  %call664 = call zeroext i1 @set_file_security_ctx(i8* %396, i1 zeroext %tobool663, i1 zeroext false, %struct.cp_options* %399), !dbg !5535
  br i1 %call664, label %if.end669, label %if.then665, !dbg !5536

if.then665:                                       ; preds = %if.then661
  %400 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5537, !tbaa !2645
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %400, i32 0, i32 23, !dbg !5540, !ctir !357
  %401 = load i8, i8* %require_preserve_context, align 2, !dbg !5540, !tbaa !3246
  %tobool666 = trunc i8 %401 to i1, !dbg !5540, !ctir !142
  br i1 %tobool666, label %if.then667, label %if.end668, !dbg !5541

if.then667:                                       ; preds = %if.then665
  br label %un_backup, !dbg !5542

if.end668:                                        ; preds = %if.then665
  br label %if.end669, !dbg !5543

if.end669:                                        ; preds = %if.end668, %if.then661
  br label %if.end670, !dbg !5544

if.end670:                                        ; preds = %if.end669, %lor.lhs.false659
  br label %if.end671

if.end671:                                        ; preds = %if.end670, %if.end655
  %402 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5545, !tbaa !2645
  %one_file_system = getelementptr inbounds %struct.cp_options, %struct.cp_options* %402, i32 0, i32 13, !dbg !5547, !ctir !357
  %403 = load i8, i8* %one_file_system, align 4, !dbg !5547, !tbaa !3172
  %tobool672 = trunc i8 %403 to i1, !dbg !5547, !ctir !142
  br i1 %tobool672, label %land.lhs.true673, label %if.else680, !dbg !5548

land.lhs.true673:                                 ; preds = %if.end671
  %404 = load %struct.stat*, %struct.stat** %parent.addr, align 8, !dbg !5549, !tbaa !2645
  %tobool674 = icmp ne %struct.stat* %404, null, !dbg !5549
  br i1 %tobool674, label %land.lhs.true675, label %if.else680, !dbg !5550

land.lhs.true675:                                 ; preds = %land.lhs.true673
  %405 = load %struct.stat*, %struct.stat** %parent.addr, align 8, !dbg !5551, !tbaa !2645
  %st_dev676 = getelementptr inbounds %struct.stat, %struct.stat* %405, i32 0, i32 0, !dbg !5552, !ctir !414
  %406 = load i64, i64* %st_dev676, align 8, !dbg !5552, !tbaa !4760, !ctir !274
  %st_dev677 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !5553, !ctir !415
  %407 = load i64, i64* %st_dev677, align 8, !dbg !5553, !tbaa !4760, !ctir !274
  %cmp678 = icmp ne i64 %406, %407, !dbg !5554
  br i1 %cmp678, label %if.then679, label %if.else680, !dbg !5555

if.then679:                                       ; preds = %land.lhs.true675
  br label %if.end684, !dbg !5556

if.else680:                                       ; preds = %land.lhs.true675, %land.lhs.true673, %if.end671
  %408 = load i8*, i8** %src_name.addr, align 8, !dbg !5558, !tbaa !2645
  %409 = load i8*, i8** %dst_name.addr, align 8, !dbg !5560, !tbaa !2645
  %410 = load i8, i8* %new_dst.addr, align 1, !dbg !5561, !tbaa !2739
  %tobool681 = trunc i8 %410 to i1, !dbg !5561
  %411 = load %struct.dir_list*, %struct.dir_list** %dir, align 8, !dbg !5562, !tbaa !2645
  %412 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5563, !tbaa !2645
  %413 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !5564, !tbaa !2645
  %414 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !5565, !tbaa !2645
  %call682 = call zeroext i1 @copy_dir(i8* %408, i8* %409, i1 zeroext %tobool681, %struct.stat* %src_sb, %struct.dir_list* %411, %struct.cp_options* %412, i8* %413, i8* %414), !dbg !5566
  %frombool683 = zext i1 %call682 to i8, !dbg !5567
  store i8 %frombool683, i8* %delayed_ok, align 1, !dbg !5567, !tbaa !2739
  br label %if.end684

if.end684:                                        ; preds = %if.else680, %if.then679
  br label %if.end897, !dbg !5568

if.else685:                                       ; preds = %if.end591
  %415 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5569, !tbaa !2645
  %symbolic_link686 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %415, i32 0, i32 29, !dbg !5571, !ctir !357
  %416 = load i8, i8* %symbolic_link686, align 4, !dbg !5571, !tbaa !3219
  %tobool687 = trunc i8 %416 to i1, !dbg !5571, !ctir !142
  br i1 %tobool687, label %if.then688, label %if.else733, !dbg !5572

if.then688:                                       ; preds = %if.else685
  store i8 1, i8* %dest_is_symlink, align 1, !dbg !5573, !tbaa !2739
  %417 = load i8*, i8** %src_name.addr, align 8, !dbg !5575, !tbaa !2645
  %418 = load i8, i8* %417, align 1, !dbg !5577, !tbaa !3292, !ctir !181
  %conv = sext i8 %418 to i32, !dbg !5577
  %cmp689 = icmp ne i32 %conv, 47, !dbg !5578
  br i1 %cmp689, label %if.then691, label %if.end722, !dbg !5579

if.then691:                                       ; preds = %if.then688
  call void @llvm.dbg.declare(metadata %struct.stat* %dot_sb, metadata !5580, metadata !DIExpression()), !dbg !5582
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_parent_sb, metadata !5583, metadata !DIExpression()), !dbg !5584
  call void @llvm.dbg.declare(metadata i8** %dst_parent, metadata !5585, metadata !DIExpression()), !dbg !5586
  call void @llvm.dbg.declare(metadata i8* %in_current_dir, metadata !5587, metadata !DIExpression()), !dbg !5588
  %419 = load i8*, i8** %dst_name.addr, align 8, !dbg !5589, !tbaa !2645
  %call692 = call i8* @dir_name(i8* %419), !dbg !5590
  store i8* %call692, i8** %dst_parent, align 8, !dbg !5591, !tbaa !2645
  %420 = load i8*, i8** %dst_parent, align 8, !dbg !5592, !tbaa !2645
  %call693 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39.129, i64 0, i64 0), i8* %420) #14, !dbg !5592
  %cmp694 = icmp eq i32 %call693, 0, !dbg !5592
  br i1 %cmp694, label %lor.end715, label %lor.lhs.false696, !dbg !5593

lor.lhs.false696:                                 ; preds = %if.then691
  %call697 = call i32 @stat(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39.129, i64 0, i64 0), %struct.stat* %dot_sb) #9, !dbg !5594
  %cmp698 = icmp ne i32 %call697, 0, !dbg !5595
  br i1 %cmp698, label %lor.end715, label %lor.lhs.false700, !dbg !5596

lor.lhs.false700:                                 ; preds = %lor.lhs.false696
  %421 = load i8*, i8** %dst_parent, align 8, !dbg !5597, !tbaa !2645
  %call701 = call i32 @stat(i8* %421, %struct.stat* %dst_parent_sb) #9, !dbg !5598
  %cmp702 = icmp ne i32 %call701, 0, !dbg !5599
  br i1 %cmp702, label %lor.end715, label %lor.rhs704, !dbg !5600

lor.rhs704:                                       ; preds = %lor.lhs.false700
  %st_ino705 = getelementptr inbounds %struct.stat, %struct.stat* %dot_sb, i32 0, i32 1, !dbg !5601, !ctir !415
  %422 = load i64, i64* %st_ino705, align 8, !dbg !5601, !tbaa !4781, !ctir !276
  %st_ino706 = getelementptr inbounds %struct.stat, %struct.stat* %dst_parent_sb, i32 0, i32 1, !dbg !5601, !ctir !415
  %423 = load i64, i64* %st_ino706, align 8, !dbg !5601, !tbaa !4781, !ctir !276
  %cmp707 = icmp eq i64 %422, %423, !dbg !5601
  br i1 %cmp707, label %land.rhs709, label %land.end714, !dbg !5601

land.rhs709:                                      ; preds = %lor.rhs704
  %st_dev710 = getelementptr inbounds %struct.stat, %struct.stat* %dot_sb, i32 0, i32 0, !dbg !5601, !ctir !415
  %424 = load i64, i64* %st_dev710, align 8, !dbg !5601, !tbaa !4760, !ctir !274
  %st_dev711 = getelementptr inbounds %struct.stat, %struct.stat* %dst_parent_sb, i32 0, i32 0, !dbg !5601, !ctir !415
  %425 = load i64, i64* %st_dev711, align 8, !dbg !5601, !tbaa !4760, !ctir !274
  %cmp712 = icmp eq i64 %424, %425, !dbg !5601
  br label %land.end714

land.end714:                                      ; preds = %land.rhs709, %lor.rhs704
  %426 = phi i1 [ false, %lor.rhs704 ], [ %cmp712, %land.rhs709 ], !dbg !5602
  br label %lor.end715, !dbg !5600

lor.end715:                                       ; preds = %land.end714, %lor.lhs.false700, %lor.lhs.false696, %if.then691
  %427 = phi i1 [ true, %lor.lhs.false700 ], [ true, %lor.lhs.false696 ], [ true, %if.then691 ], [ %426, %land.end714 ]
  %frombool716 = zext i1 %427 to i8, !dbg !5603
  store i8 %frombool716, i8* %in_current_dir, align 1, !dbg !5603, !tbaa !2739
  %428 = load i8*, i8** %dst_parent, align 8, !dbg !5604, !tbaa !2645
  call void @free(i8* %428) #9, !dbg !5605
  %429 = load i8, i8* %in_current_dir, align 1, !dbg !5606, !tbaa !2739
  %tobool717 = trunc i8 %429 to i1, !dbg !5606
  br i1 %tobool717, label %if.end721, label %if.then718, !dbg !5608

if.then718:                                       ; preds = %lor.end715
  %call719 = call i8* @gettext(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.40.130, i64 0, i64 0)) #9, !dbg !5609
  %430 = load i8*, i8** %dst_name.addr, align 8, !dbg !5611, !tbaa !2645
  %call720 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %430), !dbg !5611
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call719, i8* %call720), !dbg !5612
  br label %un_backup, !dbg !5613

if.end721:                                        ; preds = %lor.end715
  br label %if.end722, !dbg !5614

if.end722:                                        ; preds = %if.end721, %if.then688
  call void @llvm.dbg.declare(metadata i32* %err, metadata !5615, metadata !DIExpression()), !dbg !5616
  %431 = load i8*, i8** %src_name.addr, align 8, !dbg !5617, !tbaa !2645
  %432 = load i8*, i8** %dst_name.addr, align 8, !dbg !5618, !tbaa !2645
  %433 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5619, !tbaa !2645
  %unlink_dest_after_failed_open723 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %433, i32 0, i32 7, !dbg !5620, !ctir !357
  %434 = load i8, i8* %unlink_dest_after_failed_open723, align 2, !dbg !5620, !tbaa !3152
  %tobool724 = trunc i8 %434 to i1, !dbg !5620, !ctir !142
  %call725 = call i32 @force_symlinkat(i8* %431, i32 -100, i8* %432, i1 zeroext %tobool724, i32 -1), !dbg !5621
  store i32 %call725, i32* %err, align 4, !dbg !5616, !tbaa !2632
  %435 = load i32, i32* %err, align 4, !dbg !5622, !tbaa !2632
  %cmp726 = icmp slt i32 0, %435, !dbg !5624
  br i1 %cmp726, label %if.then728, label %if.end732, !dbg !5625

if.then728:                                       ; preds = %if.end722
  %436 = load i32, i32* %err, align 4, !dbg !5626, !tbaa !2632
  %call729 = call i8* @gettext(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.41.131, i64 0, i64 0)) #9, !dbg !5628
  %437 = load i8*, i8** %dst_name.addr, align 8, !dbg !5629, !tbaa !2645
  %call730 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %437), !dbg !5629
  %438 = load i8*, i8** %src_name.addr, align 8, !dbg !5630, !tbaa !2645
  %call731 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %438), !dbg !5630
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %436, i8* %call729, i8* %call730, i8* %call731), !dbg !5631
  br label %un_backup, !dbg !5632

if.end732:                                        ; preds = %if.end722
  br label %if.end896, !dbg !5633

if.else733:                                       ; preds = %if.else685
  %439 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5634, !tbaa !2645
  %hard_link734 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %439, i32 0, i32 8, !dbg !5636, !ctir !357
  %440 = load i8, i8* %hard_link734, align 1, !dbg !5636, !tbaa !3156
  %tobool735 = trunc i8 %440 to i1, !dbg !5636, !ctir !142
  br i1 %tobool735, label %if.then737, label %if.else752, !dbg !5637

if.then737:                                       ; preds = %if.else733
  call void @llvm.dbg.declare(metadata i8* %replace, metadata !5638, metadata !DIExpression()), !dbg !5640
  %441 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5641, !tbaa !2645
  %unlink_dest_after_failed_open738 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %441, i32 0, i32 7, !dbg !5642, !ctir !357
  %442 = load i8, i8* %unlink_dest_after_failed_open738, align 2, !dbg !5642, !tbaa !3152
  %tobool739 = trunc i8 %442 to i1, !dbg !5642, !ctir !142
  br i1 %tobool739, label %lor.end745, label %lor.rhs741, !dbg !5643

lor.rhs741:                                       ; preds = %if.then737
  %443 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5644, !tbaa !2645
  %interactive742 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %443, i32 0, i32 2, !dbg !5645, !ctir !357
  %444 = load i32, i32* %interactive742, align 8, !dbg !5645, !tbaa !3160, !ctir !83
  %cmp743 = icmp eq i32 %444, 3, !dbg !5646
  br label %lor.end745, !dbg !5643

lor.end745:                                       ; preds = %lor.rhs741, %if.then737
  %445 = phi i1 [ true, %if.then737 ], [ %cmp743, %lor.rhs741 ]
  %frombool746 = zext i1 %445 to i8, !dbg !5640
  store i8 %frombool746, i8* %replace, align 1, !dbg !5640, !tbaa !2739
  %446 = load i8*, i8** %src_name.addr, align 8, !dbg !5647, !tbaa !2645
  %447 = load i8*, i8** %dst_name.addr, align 8, !dbg !5649, !tbaa !2645
  %448 = load i8, i8* %replace, align 1, !dbg !5650, !tbaa !2739
  %tobool747 = trunc i8 %448 to i1, !dbg !5650
  %449 = load i8, i8* %dereference69, align 1, !dbg !5651, !tbaa !2739
  %tobool748 = trunc i8 %449 to i1, !dbg !5651
  %call749 = call zeroext i1 @create_hard_link(i8* %446, i8* %447, i1 zeroext %tobool747, i1 zeroext false, i1 zeroext %tobool748), !dbg !5652
  br i1 %call749, label %if.end751, label %if.then750, !dbg !5653

if.then750:                                       ; preds = %lor.end745
  br label %un_backup, !dbg !5654

if.end751:                                        ; preds = %lor.end745
  br label %if.end895, !dbg !5655

if.else752:                                       ; preds = %if.else733
  %450 = load i32, i32* %src_mode, align 4, !dbg !5656, !tbaa !2632
  %and753 = and i32 %450, 61440, !dbg !5656
  %cmp754 = icmp eq i32 %and753, 32768, !dbg !5656
  br i1 %cmp754, label %if.then764, label %lor.lhs.false756, !dbg !5658

lor.lhs.false756:                                 ; preds = %if.else752
  %451 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5659, !tbaa !2645
  %copy_as_regular757 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %451, i32 0, i32 5, !dbg !5660, !ctir !357
  %452 = load i8, i8* %copy_as_regular757, align 4, !dbg !5660, !tbaa !3136
  %tobool758 = trunc i8 %452 to i1, !dbg !5660, !ctir !142
  br i1 %tobool758, label %land.lhs.true760, label %if.else769, !dbg !5661

land.lhs.true760:                                 ; preds = %lor.lhs.false756
  %453 = load i32, i32* %src_mode, align 4, !dbg !5662, !tbaa !2632
  %and761 = and i32 %453, 61440, !dbg !5662
  %cmp762 = icmp eq i32 %and761, 40960, !dbg !5662
  br i1 %cmp762, label %if.else769, label %if.then764, !dbg !5663

if.then764:                                       ; preds = %land.lhs.true760, %if.else752
  store i8 1, i8* %copied_as_regular, align 1, !dbg !5664, !tbaa !2739
  %454 = load i8*, i8** %src_name.addr, align 8, !dbg !5666, !tbaa !2645
  %455 = load i8*, i8** %dst_name.addr, align 8, !dbg !5668, !tbaa !2645
  %456 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5669, !tbaa !2645
  %457 = load i32, i32* %dst_mode_bits, align 4, !dbg !5670, !tbaa !2632
  %and765 = and i32 %457, 511, !dbg !5671
  %458 = load i32, i32* %omitted_permissions, align 4, !dbg !5672, !tbaa !2632
  %call766 = call zeroext i1 @copy_reg(i8* %454, i8* %455, %struct.cp_options* %456, i32 %and765, i32 %458, i8* %new_dst.addr, %struct.stat* %src_sb), !dbg !5673
  br i1 %call766, label %if.end768, label %if.then767, !dbg !5674

if.then767:                                       ; preds = %if.then764
  br label %un_backup, !dbg !5675

if.end768:                                        ; preds = %if.then764
  br label %if.end894, !dbg !5676

if.else769:                                       ; preds = %land.lhs.true760, %lor.lhs.false756
  %459 = load i32, i32* %src_mode, align 4, !dbg !5677, !tbaa !2632
  %and770 = and i32 %459, 61440, !dbg !5677
  %cmp771 = icmp eq i32 %and770, 4096, !dbg !5677
  br i1 %cmp771, label %if.then773, label %if.else792, !dbg !5679

if.then773:                                       ; preds = %if.else769
  %460 = load i8*, i8** %dst_name.addr, align 8, !dbg !5680, !tbaa !2645
  %461 = load i32, i32* %src_mode, align 4, !dbg !5683, !tbaa !2632
  %462 = load i32, i32* %omitted_permissions, align 4, !dbg !5684, !tbaa !2632
  %neg774 = xor i32 %462, -1, !dbg !5685
  %and775 = and i32 %461, %neg774, !dbg !5686
  %call776 = call i32 @mknod(i8* %460, i32 %and775, i64 0) #9, !dbg !5687
  %cmp777 = icmp ne i32 %call776, 0, !dbg !5688
  br i1 %cmp777, label %if.then779, label %if.end791, !dbg !5689

if.then779:                                       ; preds = %if.then773
  %463 = load i8*, i8** %dst_name.addr, align 8, !dbg !5690, !tbaa !2645
  %464 = load i32, i32* %src_mode, align 4, !dbg !5692, !tbaa !2632
  %and780 = and i32 %464, -4097, !dbg !5693
  %465 = load i32, i32* %omitted_permissions, align 4, !dbg !5694, !tbaa !2632
  %neg781 = xor i32 %465, -1, !dbg !5695
  %and782 = and i32 %and780, %neg781, !dbg !5696
  %call783 = call i32 @mkfifo(i8* %463, i32 %and782) #9, !dbg !5697
  %cmp784 = icmp ne i32 %call783, 0, !dbg !5698
  br i1 %cmp784, label %if.then786, label %if.end790, !dbg !5699

if.then786:                                       ; preds = %if.then779
  %call787 = call i32* @__errno_location() #16, !dbg !5700
  %466 = load i32, i32* %call787, align 4, !dbg !5700, !tbaa !2632, !ctir !7
  %call788 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.42.132, i64 0, i64 0)) #9, !dbg !5702
  %467 = load i8*, i8** %dst_name.addr, align 8, !dbg !5703, !tbaa !2645
  %call789 = call i8* @quotearg_style(i32 4, i8* %467), !dbg !5703
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %466, i8* %call788, i8* %call789), !dbg !5704
  br label %un_backup, !dbg !5705

if.end790:                                        ; preds = %if.then779
  br label %if.end791, !dbg !5706

if.end791:                                        ; preds = %if.end790, %if.then773
  br label %if.end893, !dbg !5707

if.else792:                                       ; preds = %if.else769
  %468 = load i32, i32* %src_mode, align 4, !dbg !5708, !tbaa !2632
  %and793 = and i32 %468, 61440, !dbg !5708
  %cmp794 = icmp eq i32 %and793, 24576, !dbg !5708
  br i1 %cmp794, label %if.then804, label %lor.lhs.false796, !dbg !5710

lor.lhs.false796:                                 ; preds = %if.else792
  %469 = load i32, i32* %src_mode, align 4, !dbg !5711, !tbaa !2632
  %and797 = and i32 %469, 61440, !dbg !5711
  %cmp798 = icmp eq i32 %and797, 8192, !dbg !5711
  br i1 %cmp798, label %if.then804, label %lor.lhs.false800, !dbg !5712

lor.lhs.false800:                                 ; preds = %lor.lhs.false796
  %470 = load i32, i32* %src_mode, align 4, !dbg !5713, !tbaa !2632
  %and801 = and i32 %470, 61440, !dbg !5713
  %cmp802 = icmp eq i32 %and801, 49152, !dbg !5713
  br i1 %cmp802, label %if.then804, label %if.else815, !dbg !5714

if.then804:                                       ; preds = %lor.lhs.false800, %lor.lhs.false796, %if.else792
  %471 = load i8*, i8** %dst_name.addr, align 8, !dbg !5715, !tbaa !2645
  %472 = load i32, i32* %src_mode, align 4, !dbg !5718, !tbaa !2632
  %473 = load i32, i32* %omitted_permissions, align 4, !dbg !5719, !tbaa !2632
  %neg805 = xor i32 %473, -1, !dbg !5720
  %and806 = and i32 %472, %neg805, !dbg !5721
  %st_rdev = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 7, !dbg !5722, !ctir !415
  %474 = load i64, i64* %st_rdev, align 8, !dbg !5722, !tbaa !5723, !ctir !274
  %call807 = call i32 @mknod(i8* %471, i32 %and806, i64 %474) #9, !dbg !5724
  %cmp808 = icmp ne i32 %call807, 0, !dbg !5725
  br i1 %cmp808, label %if.then810, label %if.end814, !dbg !5726

if.then810:                                       ; preds = %if.then804
  %call811 = call i32* @__errno_location() #16, !dbg !5727
  %475 = load i32, i32* %call811, align 4, !dbg !5727, !tbaa !2632, !ctir !7
  %call812 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.43.133, i64 0, i64 0)) #9, !dbg !5729
  %476 = load i8*, i8** %dst_name.addr, align 8, !dbg !5730, !tbaa !2645
  %call813 = call i8* @quotearg_style(i32 4, i8* %476), !dbg !5730
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %475, i8* %call812, i8* %call813), !dbg !5731
  br label %un_backup, !dbg !5732

if.end814:                                        ; preds = %if.then804
  br label %if.end892, !dbg !5733

if.else815:                                       ; preds = %lor.lhs.false800
  %477 = load i32, i32* %src_mode, align 4, !dbg !5734, !tbaa !2632
  %and816 = and i32 %477, 61440, !dbg !5734
  %cmp817 = icmp eq i32 %and816, 40960, !dbg !5734
  br i1 %cmp817, label %if.then819, label %if.else888, !dbg !5736

if.then819:                                       ; preds = %if.else815
  call void @llvm.dbg.declare(metadata i8** %src_link_val, metadata !5737, metadata !DIExpression()), !dbg !5739
  %478 = load i8*, i8** %src_name.addr, align 8, !dbg !5740, !tbaa !2645
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 8, !dbg !5741, !ctir !415
  %479 = load i64, i64* %st_size, align 8, !dbg !5741, !tbaa !4015, !ctir !29
  %call820 = call i8* @areadlink_with_size(i8* %478, i64 %479), !dbg !5742
  store i8* %call820, i8** %src_link_val, align 8, !dbg !5739, !tbaa !2645
  store i8 1, i8* %dest_is_symlink, align 1, !dbg !5743, !tbaa !2739
  %480 = load i8*, i8** %src_link_val, align 8, !dbg !5744, !tbaa !2645
  %cmp821 = icmp eq i8* %480, null, !dbg !5746
  br i1 %cmp821, label %if.then823, label %if.end827, !dbg !5747

if.then823:                                       ; preds = %if.then819
  %call824 = call i32* @__errno_location() #16, !dbg !5748
  %481 = load i32, i32* %call824, align 4, !dbg !5748, !tbaa !2632, !ctir !7
  %call825 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.44.134, i64 0, i64 0)) #9, !dbg !5750
  %482 = load i8*, i8** %src_name.addr, align 8, !dbg !5751, !tbaa !2645
  %call826 = call i8* @quotearg_style(i32 4, i8* %482), !dbg !5751
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %481, i8* %call825, i8* %call826), !dbg !5752
  br label %un_backup, !dbg !5753

if.end827:                                        ; preds = %if.then819
  call void @llvm.dbg.declare(metadata i32* %symlink_err, metadata !5754, metadata !DIExpression()), !dbg !5755
  %483 = load i8*, i8** %src_link_val, align 8, !dbg !5756, !tbaa !2645
  %484 = load i8*, i8** %dst_name.addr, align 8, !dbg !5757, !tbaa !2645
  %485 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5758, !tbaa !2645
  %unlink_dest_after_failed_open828 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %485, i32 0, i32 7, !dbg !5759, !ctir !357
  %486 = load i8, i8* %unlink_dest_after_failed_open828, align 2, !dbg !5759, !tbaa !3152
  %tobool829 = trunc i8 %486 to i1, !dbg !5759, !ctir !142
  %call830 = call i32 @force_symlinkat(i8* %483, i32 -100, i8* %484, i1 zeroext %tobool829, i32 -1), !dbg !5760
  store i32 %call830, i32* %symlink_err, align 4, !dbg !5755, !tbaa !2632
  %487 = load i32, i32* %symlink_err, align 4, !dbg !5761, !tbaa !2632
  %cmp831 = icmp slt i32 0, %487, !dbg !5763
  br i1 %cmp831, label %land.lhs.true833, label %if.end860, !dbg !5764

land.lhs.true833:                                 ; preds = %if.end827
  %488 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5765, !tbaa !2645
  %update834 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %488, i32 0, i32 30, !dbg !5766, !ctir !357
  %489 = load i8, i8* %update834, align 1, !dbg !5766, !tbaa !3242
  %tobool835 = trunc i8 %489 to i1, !dbg !5766, !ctir !142
  br i1 %tobool835, label %land.lhs.true837, label %if.end860, !dbg !5767

land.lhs.true837:                                 ; preds = %land.lhs.true833
  %490 = load i8, i8* %new_dst.addr, align 1, !dbg !5768, !tbaa !2739
  %tobool838 = trunc i8 %490 to i1, !dbg !5768
  br i1 %tobool838, label %if.end860, label %land.lhs.true839, !dbg !5769

land.lhs.true839:                                 ; preds = %land.lhs.true837
  %st_mode840 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !5770, !ctir !415
  %491 = load i32, i32* %st_mode840, align 8, !dbg !5770, !tbaa !2911, !ctir !140
  %and841 = and i32 %491, 61440, !dbg !5770
  %cmp842 = icmp eq i32 %and841, 40960, !dbg !5770
  br i1 %cmp842, label %land.lhs.true844, label %if.end860, !dbg !5771

land.lhs.true844:                                 ; preds = %land.lhs.true839
  %st_size845 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 8, !dbg !5772, !ctir !415
  %492 = load i64, i64* %st_size845, align 8, !dbg !5772, !tbaa !4015, !ctir !29
  %493 = load i8*, i8** %src_link_val, align 8, !dbg !5773, !tbaa !2645
  %call846 = call i64 @strlen(i8* %493) #14, !dbg !5774
  %cmp847 = icmp eq i64 %492, %call846, !dbg !5775
  br i1 %cmp847, label %if.then849, label %if.end860, !dbg !5776

if.then849:                                       ; preds = %land.lhs.true844
  call void @llvm.dbg.declare(metadata i8** %dest_link_val, metadata !5777, metadata !DIExpression()), !dbg !5779
  %494 = load i8*, i8** %dst_name.addr, align 8, !dbg !5780, !tbaa !2645
  %st_size850 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 8, !dbg !5781, !ctir !415
  %495 = load i64, i64* %st_size850, align 8, !dbg !5781, !tbaa !4015, !ctir !29
  %call851 = call i8* @areadlink_with_size(i8* %494, i64 %495), !dbg !5782
  store i8* %call851, i8** %dest_link_val, align 8, !dbg !5779, !tbaa !2645
  %496 = load i8*, i8** %dest_link_val, align 8, !dbg !5783, !tbaa !2645
  %tobool852 = icmp ne i8* %496, null, !dbg !5783
  br i1 %tobool852, label %if.then853, label %if.end859, !dbg !5785

if.then853:                                       ; preds = %if.then849
  %497 = load i8*, i8** %dest_link_val, align 8, !dbg !5786, !tbaa !2645
  %498 = load i8*, i8** %src_link_val, align 8, !dbg !5786, !tbaa !2645
  %call854 = call i32 @strcmp(i8* %497, i8* %498) #14, !dbg !5786
  %cmp855 = icmp eq i32 %call854, 0, !dbg !5786
  br i1 %cmp855, label %if.then857, label %if.end858, !dbg !5789

if.then857:                                       ; preds = %if.then853
  store i32 0, i32* %symlink_err, align 4, !dbg !5790, !tbaa !2632
  br label %if.end858, !dbg !5791

if.end858:                                        ; preds = %if.then857, %if.then853
  %499 = load i8*, i8** %dest_link_val, align 8, !dbg !5792, !tbaa !2645
  call void @free(i8* %499) #9, !dbg !5793
  br label %if.end859, !dbg !5794

if.end859:                                        ; preds = %if.end858, %if.then849
  br label %if.end860, !dbg !5795

if.end860:                                        ; preds = %if.end859, %land.lhs.true844, %land.lhs.true839, %land.lhs.true837, %land.lhs.true833, %if.end827
  %500 = load i8*, i8** %src_link_val, align 8, !dbg !5796, !tbaa !2645
  call void @free(i8* %500) #9, !dbg !5797
  %501 = load i32, i32* %symlink_err, align 4, !dbg !5798, !tbaa !2632
  %cmp861 = icmp slt i32 0, %501, !dbg !5800
  br i1 %cmp861, label %if.then863, label %if.end866, !dbg !5801

if.then863:                                       ; preds = %if.end860
  %502 = load i32, i32* %symlink_err, align 4, !dbg !5802, !tbaa !2632
  %call864 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.45.135, i64 0, i64 0)) #9, !dbg !5804
  %503 = load i8*, i8** %dst_name.addr, align 8, !dbg !5805, !tbaa !2645
  %call865 = call i8* @quotearg_style(i32 4, i8* %503), !dbg !5805
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %502, i8* %call864, i8* %call865), !dbg !5806
  br label %un_backup, !dbg !5807

if.end866:                                        ; preds = %if.end860
  %504 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5808, !tbaa !2645
  %preserve_security_context867 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %504, i32 0, i32 22, !dbg !5810, !ctir !357
  %505 = load i8, i8* %preserve_security_context867, align 1, !dbg !5810, !tbaa !2847
  %tobool868 = trunc i8 %505 to i1, !dbg !5810, !ctir !142
  br i1 %tobool868, label %if.then869, label %if.end870, !dbg !5811

if.then869:                                       ; preds = %if.end866
  call void @restore_default_fscreatecon_or_die(), !dbg !5812
  br label %if.end870, !dbg !5812

if.end870:                                        ; preds = %if.then869, %if.end866
  %506 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5813, !tbaa !2645
  %preserve_ownership871 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %506, i32 0, i32 14, !dbg !5815, !ctir !357
  %507 = load i8, i8* %preserve_ownership871, align 1, !dbg !5815, !tbaa !3176
  %tobool872 = trunc i8 %507 to i1, !dbg !5815, !ctir !142
  br i1 %tobool872, label %if.then873, label %if.end887, !dbg !5816

if.then873:                                       ; preds = %if.end870
  %508 = load i8*, i8** %dst_name.addr, align 8, !dbg !5817, !tbaa !2645
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 4, !dbg !5820, !ctir !415
  %509 = load i32, i32* %st_uid, align 4, !dbg !5820, !tbaa !4042, !ctir !128
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 5, !dbg !5821, !ctir !415
  %510 = load i32, i32* %st_gid, align 8, !dbg !5821, !tbaa !4071, !ctir !130
  %call874 = call i32 @lchown(i8* %508, i32 %509, i32 %510) #9, !dbg !5822
  %cmp875 = icmp ne i32 %call874, 0, !dbg !5823
  br i1 %cmp875, label %land.lhs.true877, label %if.else885, !dbg !5824

land.lhs.true877:                                 ; preds = %if.then873
  %511 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5825, !tbaa !2645
  %call878 = call zeroext i1 @chown_failure_ok(%struct.cp_options* %511) #14, !dbg !5826
  br i1 %call878, label %if.else885, label %if.then879, !dbg !5827

if.then879:                                       ; preds = %land.lhs.true877
  %call880 = call i32* @__errno_location() #16, !dbg !5828
  %512 = load i32, i32* %call880, align 4, !dbg !5828, !tbaa !2632, !ctir !7
  %call881 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.46.136, i64 0, i64 0)) #9, !dbg !5830
  %513 = load i8*, i8** %dst_name.addr, align 8, !dbg !5831, !tbaa !2645
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %512, i8* %call881, i8* %513), !dbg !5832
  %514 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5833, !tbaa !2645
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %514, i32 0, i32 21, !dbg !5835, !ctir !357
  %515 = load i8, i8* %require_preserve, align 4, !dbg !5835, !tbaa !3203
  %tobool882 = trunc i8 %515 to i1, !dbg !5835, !ctir !142
  br i1 %tobool882, label %if.then883, label %if.end884, !dbg !5836

if.then883:                                       ; preds = %if.then879
  br label %un_backup, !dbg !5837

if.end884:                                        ; preds = %if.then879
  br label %if.end886, !dbg !5838

if.else885:                                       ; preds = %land.lhs.true877, %if.then873
  br label %if.end886

if.end886:                                        ; preds = %if.else885, %if.end884
  br label %if.end887, !dbg !5839

if.end887:                                        ; preds = %if.end886, %if.end870
  br label %if.end891, !dbg !5840

if.else888:                                       ; preds = %if.else815
  %call889 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.47.137, i64 0, i64 0)) #9, !dbg !5841
  %516 = load i8*, i8** %src_name.addr, align 8, !dbg !5843, !tbaa !2645
  %call890 = call i8* @quotearg_style(i32 4, i8* %516), !dbg !5843
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call889, i8* %call890), !dbg !5844
  br label %un_backup, !dbg !5845

if.end891:                                        ; preds = %if.end887
  br label %if.end892

if.end892:                                        ; preds = %if.end891, %if.end814
  br label %if.end893

if.end893:                                        ; preds = %if.end892, %if.end791
  br label %if.end894

if.end894:                                        ; preds = %if.end893, %if.end768
  br label %if.end895

if.end895:                                        ; preds = %if.end894, %if.end751
  br label %if.end896

if.end896:                                        ; preds = %if.end895, %if.end732
  br label %if.end897

if.end897:                                        ; preds = %if.end896, %if.end684
  %517 = load i8, i8* %new_dst.addr, align 1, !dbg !5846, !tbaa !2739
  %tobool898 = trunc i8 %517 to i1, !dbg !5846
  br i1 %tobool898, label %if.end924, label %land.lhs.true899, !dbg !5848

land.lhs.true899:                                 ; preds = %if.end897
  %518 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5849, !tbaa !2645
  %copy_as_regular900 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %518, i32 0, i32 5, !dbg !5850, !ctir !357
  %519 = load i8, i8* %copy_as_regular900, align 4, !dbg !5850, !tbaa !3136
  %tobool901 = trunc i8 %519 to i1, !dbg !5850, !ctir !142
  br i1 %tobool901, label %if.end924, label %land.lhs.true902, !dbg !5851

land.lhs.true902:                                 ; preds = %land.lhs.true899
  %520 = load i32, i32* %src_mode, align 4, !dbg !5852, !tbaa !2632
  %and903 = and i32 %520, 61440, !dbg !5852
  %cmp904 = icmp eq i32 %and903, 16384, !dbg !5852
  br i1 %cmp904, label %if.end924, label %land.lhs.true906, !dbg !5853

land.lhs.true906:                                 ; preds = %land.lhs.true902
  %521 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5854, !tbaa !2645
  %set_security_context907 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %521, i32 0, i32 18, !dbg !5855, !ctir !357
  %522 = load i8, i8* %set_security_context907, align 1, !dbg !5855, !tbaa !2863
  %tobool908 = trunc i8 %522 to i1, !dbg !5855, !ctir !142
  br i1 %tobool908, label %if.then914, label %lor.lhs.false910, !dbg !5856

lor.lhs.false910:                                 ; preds = %land.lhs.true906
  %523 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5857, !tbaa !2645
  %preserve_security_context911 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %523, i32 0, i32 22, !dbg !5858, !ctir !357
  %524 = load i8, i8* %preserve_security_context911, align 1, !dbg !5858, !tbaa !2847
  %tobool912 = trunc i8 %524 to i1, !dbg !5858, !ctir !142
  br i1 %tobool912, label %if.then914, label %if.end924, !dbg !5859

if.then914:                                       ; preds = %lor.lhs.false910, %land.lhs.true906
  %525 = load i8*, i8** %dst_name.addr, align 8, !dbg !5860, !tbaa !2645
  %526 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5863, !tbaa !2645
  %preserve_security_context915 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %526, i32 0, i32 22, !dbg !5864, !ctir !357
  %527 = load i8, i8* %preserve_security_context915, align 1, !dbg !5864, !tbaa !2847
  %tobool916 = trunc i8 %527 to i1, !dbg !5864, !ctir !142
  %528 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5865, !tbaa !2645
  %call917 = call zeroext i1 @set_file_security_ctx(i8* %525, i1 zeroext %tobool916, i1 zeroext false, %struct.cp_options* %528), !dbg !5866
  br i1 %call917, label %if.end923, label %if.then918, !dbg !5867

if.then918:                                       ; preds = %if.then914
  %529 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5868, !tbaa !2645
  %require_preserve_context919 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %529, i32 0, i32 23, !dbg !5871, !ctir !357
  %530 = load i8, i8* %require_preserve_context919, align 2, !dbg !5871, !tbaa !3246
  %tobool920 = trunc i8 %530 to i1, !dbg !5871, !ctir !142
  br i1 %tobool920, label %if.then921, label %if.end922, !dbg !5872

if.then921:                                       ; preds = %if.then918
  br label %un_backup, !dbg !5873

if.end922:                                        ; preds = %if.then918
  br label %if.end923, !dbg !5874

if.end923:                                        ; preds = %if.end922, %if.then914
  br label %if.end924, !dbg !5875

if.end924:                                        ; preds = %if.end923, %lor.lhs.false910, %land.lhs.true902, %land.lhs.true899, %if.end897
  %531 = load i8, i8* %command_line_arg.addr, align 1, !dbg !5876, !tbaa !2739
  %tobool925 = trunc i8 %531 to i1, !dbg !5876
  br i1 %tobool925, label %land.lhs.true927, label %if.end937, !dbg !5878

land.lhs.true927:                                 ; preds = %if.end924
  %532 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5879, !tbaa !2645
  %dest_info928 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %532, i32 0, i32 37, !dbg !5880, !ctir !357
  %533 = load %struct.hash_table*, %struct.hash_table** %dest_info928, align 8, !dbg !5880, !tbaa !3263, !ctir !175
  %tobool929 = icmp ne %struct.hash_table* %533, null, !dbg !5879
  br i1 %tobool929, label %if.then930, label %if.end937, !dbg !5881

if.then930:                                       ; preds = %land.lhs.true927
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !5882, metadata !DIExpression()), !dbg !5884
  %534 = load i8*, i8** %dst_name.addr, align 8, !dbg !5885, !tbaa !2645
  %call931 = call i32 @lstat(i8* %534, %struct.stat* %sb) #9, !dbg !5887
  %cmp932 = icmp eq i32 %call931, 0, !dbg !5888
  br i1 %cmp932, label %if.then934, label %if.end936, !dbg !5889

if.then934:                                       ; preds = %if.then930
  %535 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5890, !tbaa !2645
  %dest_info935 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %535, i32 0, i32 37, !dbg !5891, !ctir !357
  %536 = load %struct.hash_table*, %struct.hash_table** %dest_info935, align 8, !dbg !5891, !tbaa !3263, !ctir !175
  %537 = load i8*, i8** %dst_name.addr, align 8, !dbg !5892, !tbaa !2645
  call void @record_file(%struct.hash_table* %536, i8* %537, %struct.stat* %sb), !dbg !5893
  br label %if.end936, !dbg !5893

if.end936:                                        ; preds = %if.then934, %if.then930
  br label %if.end937, !dbg !5894

if.end937:                                        ; preds = %if.end936, %land.lhs.true927, %if.end924
  %538 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5895, !tbaa !2645
  %hard_link938 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %538, i32 0, i32 8, !dbg !5897, !ctir !357
  %539 = load i8, i8* %hard_link938, align 1, !dbg !5897, !tbaa !3156
  %tobool939 = trunc i8 %539 to i1, !dbg !5897, !ctir !142
  br i1 %tobool939, label %land.lhs.true941, label %if.end947, !dbg !5898

land.lhs.true941:                                 ; preds = %if.end937
  %540 = load i32, i32* %src_mode, align 4, !dbg !5899, !tbaa !2632
  %and942 = and i32 %540, 61440, !dbg !5899
  %cmp943 = icmp eq i32 %and942, 16384, !dbg !5899
  br i1 %cmp943, label %if.end947, label %if.then945, !dbg !5900

if.then945:                                       ; preds = %land.lhs.true941
  %541 = load i8, i8* %delayed_ok, align 1, !dbg !5901, !tbaa !2739
  %tobool946 = trunc i8 %541 to i1, !dbg !5901
  store i1 %tobool946, i1* %retval, align 1, !dbg !5902
  br label %return, !dbg !5902

if.end947:                                        ; preds = %land.lhs.true941, %if.end937
  %542 = load i8, i8* %copied_as_regular, align 1, !dbg !5903, !tbaa !2739
  %tobool948 = trunc i8 %542 to i1, !dbg !5903
  br i1 %tobool948, label %if.then949, label %if.end951, !dbg !5905

if.then949:                                       ; preds = %if.end947
  %543 = load i8, i8* %delayed_ok, align 1, !dbg !5906, !tbaa !2739
  %tobool950 = trunc i8 %543 to i1, !dbg !5906
  store i1 %tobool950, i1* %retval, align 1, !dbg !5907
  br label %return, !dbg !5907

if.end951:                                        ; preds = %if.end947
  %544 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5908, !tbaa !2645
  %preserve_timestamps952 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %544, i32 0, i32 16, !dbg !5910, !ctir !357
  %545 = load i8, i8* %preserve_timestamps952, align 1, !dbg !5910, !tbaa !2823
  %tobool953 = trunc i8 %545 to i1, !dbg !5910, !ctir !142
  br i1 %tobool953, label %if.then954, label %if.end980, !dbg !5911

if.then954:                                       ; preds = %if.end951
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timespec, metadata !5912, metadata !DIExpression()), !dbg !5914
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !5915, !ctir !445
  %call956 = call { i64, i64 } @get_stat_atime(%struct.stat* %src_sb) #14, !dbg !5916
  %546 = bitcast %struct.timespec* %tmp955 to { i64, i64 }*, !dbg !5916
  %547 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %546, i32 0, i32 0, !dbg !5916
  %548 = extractvalue { i64, i64 } %call956, 0, !dbg !5916
  store i64 %548, i64* %547, align 8, !dbg !5916
  %549 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %546, i32 0, i32 1, !dbg !5916
  %550 = extractvalue { i64, i64 } %call956, 1, !dbg !5916
  store i64 %550, i64* %549, align 8, !dbg !5916
  %551 = bitcast %struct.timespec* %arrayidx to i8*, !dbg !5916
  %552 = bitcast %struct.timespec* %tmp955 to i8*, !dbg !5916
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %551, i8* align 8 %552, i64 16, i1 false), !dbg !5916, !tbaa.struct !3795
  %arrayidx957 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !5917, !ctir !445
  %call959 = call { i64, i64 } @get_stat_mtime(%struct.stat* %src_sb) #14, !dbg !5918
  %553 = bitcast %struct.timespec* %tmp958 to { i64, i64 }*, !dbg !5918
  %554 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %553, i32 0, i32 0, !dbg !5918
  %555 = extractvalue { i64, i64 } %call959, 0, !dbg !5918
  store i64 %555, i64* %554, align 8, !dbg !5918
  %556 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %553, i32 0, i32 1, !dbg !5918
  %557 = extractvalue { i64, i64 } %call959, 1, !dbg !5918
  store i64 %557, i64* %556, align 8, !dbg !5918
  %558 = bitcast %struct.timespec* %arrayidx957 to i8*, !dbg !5918
  %559 = bitcast %struct.timespec* %tmp958 to i8*, !dbg !5918
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %558, i8* align 8 %559, i64 16, i1 false), !dbg !5918, !tbaa.struct !3795
  %560 = load i8, i8* %dest_is_symlink, align 1, !dbg !5919, !tbaa !2739
  %tobool960 = trunc i8 %560 to i1, !dbg !5919
  br i1 %tobool960, label %cond.true962, label %cond.false964, !dbg !5919

cond.true962:                                     ; preds = %if.then954
  %561 = load i8*, i8** %dst_name.addr, align 8, !dbg !5921, !tbaa !2645
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !5922
  %call963 = call i32 @utimens_symlink(i8* %561, %struct.timespec* %arraydecay), !dbg !5923
  br label %cond.end967, !dbg !5919

cond.false964:                                    ; preds = %if.then954
  %562 = load i8*, i8** %dst_name.addr, align 8, !dbg !5924, !tbaa !2645
  %arraydecay965 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !5925
  %call966 = call i32 @utimens(i8* %562, %struct.timespec* %arraydecay965), !dbg !5926
  br label %cond.end967, !dbg !5919

cond.end967:                                      ; preds = %cond.false964, %cond.true962
  %cond968 = phi i32 [ %call963, %cond.true962 ], [ %call966, %cond.false964 ], !dbg !5919
  %cmp969 = icmp ne i32 %cond968, 0, !dbg !5927
  br i1 %cmp969, label %if.then971, label %if.end979, !dbg !5928

if.then971:                                       ; preds = %cond.end967
  %call972 = call i32* @__errno_location() #16, !dbg !5929
  %563 = load i32, i32* %call972, align 4, !dbg !5929, !tbaa !2632, !ctir !7
  %call973 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.48.138, i64 0, i64 0)) #9, !dbg !5931
  %564 = load i8*, i8** %dst_name.addr, align 8, !dbg !5932, !tbaa !2645
  %call974 = call i8* @quotearg_style(i32 4, i8* %564), !dbg !5932
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %563, i8* %call973, i8* %call974), !dbg !5933
  %565 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5934, !tbaa !2645
  %require_preserve975 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %565, i32 0, i32 21, !dbg !5936, !ctir !357
  %566 = load i8, i8* %require_preserve975, align 4, !dbg !5936, !tbaa !3203
  %tobool976 = trunc i8 %566 to i1, !dbg !5936, !ctir !142
  br i1 %tobool976, label %if.then977, label %if.end978, !dbg !5937

if.then977:                                       ; preds = %if.then971
  store i1 false, i1* %retval, align 1, !dbg !5938
  br label %return, !dbg !5938

if.end978:                                        ; preds = %if.then971
  br label %if.end979, !dbg !5939

if.end979:                                        ; preds = %if.end978, %cond.end967
  br label %if.end980, !dbg !5940

if.end980:                                        ; preds = %if.end979, %if.end951
  %567 = load i8, i8* %dest_is_symlink, align 1, !dbg !5941, !tbaa !2739
  %tobool981 = trunc i8 %567 to i1, !dbg !5941
  br i1 %tobool981, label %if.end1004, label %land.lhs.true982, !dbg !5943

land.lhs.true982:                                 ; preds = %if.end980
  %568 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5944, !tbaa !2645
  %preserve_ownership983 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %568, i32 0, i32 14, !dbg !5945, !ctir !357
  %569 = load i8, i8* %preserve_ownership983, align 1, !dbg !5945, !tbaa !3176
  %tobool984 = trunc i8 %569 to i1, !dbg !5945, !ctir !142
  br i1 %tobool984, label %land.lhs.true986, label %if.end1004, !dbg !5946

land.lhs.true986:                                 ; preds = %land.lhs.true982
  %570 = load i8, i8* %new_dst.addr, align 1, !dbg !5947, !tbaa !2739
  %tobool987 = trunc i8 %570 to i1, !dbg !5947
  br i1 %tobool987, label %if.then999, label %lor.lhs.false989, !dbg !5948

lor.lhs.false989:                                 ; preds = %land.lhs.true986
  %st_uid990 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 4, !dbg !5949, !ctir !415
  %571 = load i32, i32* %st_uid990, align 4, !dbg !5949, !tbaa !4042, !ctir !128
  %st_uid991 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 4, !dbg !5949, !ctir !415
  %572 = load i32, i32* %st_uid991, align 4, !dbg !5949, !tbaa !4042, !ctir !128
  %cmp992 = icmp eq i32 %571, %572, !dbg !5949
  br i1 %cmp992, label %land.lhs.true994, label %if.then999, !dbg !5949

land.lhs.true994:                                 ; preds = %lor.lhs.false989
  %st_gid995 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 5, !dbg !5949, !ctir !415
  %573 = load i32, i32* %st_gid995, align 8, !dbg !5949, !tbaa !4071, !ctir !130
  %st_gid996 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 5, !dbg !5949, !ctir !415
  %574 = load i32, i32* %st_gid996, align 8, !dbg !5949, !tbaa !4071, !ctir !130
  %cmp997 = icmp eq i32 %573, %574, !dbg !5949
  br i1 %cmp997, label %if.end1004, label %if.then999, !dbg !5950

if.then999:                                       ; preds = %land.lhs.true994, %lor.lhs.false989, %land.lhs.true986
  %575 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5951, !tbaa !2645
  %576 = load i8*, i8** %dst_name.addr, align 8, !dbg !5953, !tbaa !2645
  %577 = load i8, i8* %new_dst.addr, align 1, !dbg !5954, !tbaa !2739
  %tobool1000 = trunc i8 %577 to i1, !dbg !5954
  %call1001 = call i32 @set_owner(%struct.cp_options* %575, i8* %576, i32 -1, %struct.stat* %src_sb, i1 zeroext %tobool1000, %struct.stat* %dst_sb), !dbg !5955
  switch i32 %call1001, label %sw.epilog [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb1002
  ], !dbg !5956

sw.bb:                                            ; preds = %if.then999
  store i1 false, i1* %retval, align 1, !dbg !5957
  br label %return, !dbg !5957

sw.bb1002:                                        ; preds = %if.then999
  %578 = load i32, i32* %src_mode, align 4, !dbg !5959, !tbaa !2632
  %and1003 = and i32 %578, -3585, !dbg !5959
  store i32 %and1003, i32* %src_mode, align 4, !dbg !5959, !tbaa !2632
  br label %sw.epilog, !dbg !5960

sw.epilog:                                        ; preds = %if.then999, %sw.bb1002
  br label %if.end1004, !dbg !5961

if.end1004:                                       ; preds = %sw.epilog, %land.lhs.true994, %land.lhs.true982, %if.end980
  %579 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5962, !tbaa !2645
  %preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %579, i32 0, i32 24, !dbg !5964, !ctir !357
  %580 = load i8, i8* %preserve_xattr, align 1, !dbg !5964, !tbaa !3256
  %tobool1005 = trunc i8 %580 to i1, !dbg !5964, !ctir !142
  br i1 %tobool1005, label %land.lhs.true1007, label %if.end1013, !dbg !5965

land.lhs.true1007:                                ; preds = %if.end1004
  %581 = load i8*, i8** %src_name.addr, align 8, !dbg !5966, !tbaa !2645
  %582 = load i8*, i8** %dst_name.addr, align 8, !dbg !5967, !tbaa !2645
  %583 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5968, !tbaa !2645
  %call1008 = call zeroext i1 @copy_attr(i8* %581, i32 -1, i8* %582, i32 -1, %struct.cp_options* %583), !dbg !5969
  br i1 %call1008, label %if.end1013, label %land.lhs.true1009, !dbg !5970

land.lhs.true1009:                                ; preds = %land.lhs.true1007
  %584 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5971, !tbaa !2645
  %require_preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %584, i32 0, i32 25, !dbg !5972, !ctir !357
  %585 = load i8, i8* %require_preserve_xattr, align 8, !dbg !5972, !tbaa !3207
  %tobool1010 = trunc i8 %585 to i1, !dbg !5972, !ctir !142
  br i1 %tobool1010, label %if.then1012, label %if.end1013, !dbg !5973

if.then1012:                                      ; preds = %land.lhs.true1009
  store i1 false, i1* %retval, align 1, !dbg !5974
  br label %return, !dbg !5974

if.end1013:                                       ; preds = %land.lhs.true1009, %land.lhs.true1007, %if.end1004
  %586 = load i8, i8* %dest_is_symlink, align 1, !dbg !5975, !tbaa !2739
  %tobool1014 = trunc i8 %586 to i1, !dbg !5975
  br i1 %tobool1014, label %if.then1015, label %if.end1017, !dbg !5977

if.then1015:                                      ; preds = %if.end1013
  %587 = load i8, i8* %delayed_ok, align 1, !dbg !5978, !tbaa !2739
  %tobool1016 = trunc i8 %587 to i1, !dbg !5978
  store i1 %tobool1016, i1* %retval, align 1, !dbg !5979
  br label %return, !dbg !5979

if.end1017:                                       ; preds = %if.end1013
  %588 = load i8*, i8** %dst_name.addr, align 8, !dbg !5980, !tbaa !2645
  call void @set_author(i8* %588, i32 -1, %struct.stat* %src_sb), !dbg !5981
  %589 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5982, !tbaa !2645
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %589, i32 0, i32 15, !dbg !5984, !ctir !357
  %590 = load i8, i8* %preserve_mode, align 2, !dbg !5984, !tbaa !3184
  %tobool1018 = trunc i8 %590 to i1, !dbg !5984, !ctir !142
  br i1 %tobool1018, label %if.then1024, label %lor.lhs.false1020, !dbg !5985

lor.lhs.false1020:                                ; preds = %if.end1017
  %591 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5986, !tbaa !2645
  %move_mode1021 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %591, i32 0, i32 9, !dbg !5987, !ctir !357
  %592 = load i8, i8* %move_mode1021, align 8, !dbg !5987, !tbaa !3164
  %tobool1022 = trunc i8 %592 to i1, !dbg !5987, !ctir !142
  br i1 %tobool1022, label %if.then1024, label %if.else1034, !dbg !5988

if.then1024:                                      ; preds = %lor.lhs.false1020, %if.end1017
  %593 = load i8*, i8** %src_name.addr, align 8, !dbg !5989, !tbaa !2645
  %594 = load i8*, i8** %dst_name.addr, align 8, !dbg !5992, !tbaa !2645
  %595 = load i32, i32* %src_mode, align 4, !dbg !5993, !tbaa !2632
  %call1025 = call i32 @copy_acl(i8* %593, i32 -1, i8* %594, i32 -1, i32 %595), !dbg !5994
  %cmp1026 = icmp ne i32 %call1025, 0, !dbg !5995
  br i1 %cmp1026, label %land.lhs.true1028, label %if.end1033, !dbg !5996

land.lhs.true1028:                                ; preds = %if.then1024
  %596 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !5997, !tbaa !2645
  %require_preserve1029 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %596, i32 0, i32 21, !dbg !5998, !ctir !357
  %597 = load i8, i8* %require_preserve1029, align 4, !dbg !5998, !tbaa !3203
  %tobool1030 = trunc i8 %597 to i1, !dbg !5998, !ctir !142
  br i1 %tobool1030, label %if.then1032, label %if.end1033, !dbg !5999

if.then1032:                                      ; preds = %land.lhs.true1028
  store i1 false, i1* %retval, align 1, !dbg !6000
  br label %return, !dbg !6000

if.end1033:                                       ; preds = %land.lhs.true1028, %if.then1024
  br label %if.end1115, !dbg !6001

if.else1034:                                      ; preds = %lor.lhs.false1020
  %598 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6002, !tbaa !2645
  %set_mode1035 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %598, i32 0, i32 28, !dbg !6004, !ctir !357
  %599 = load i8, i8* %set_mode1035, align 1, !dbg !6004, !tbaa !3226
  %tobool1036 = trunc i8 %599 to i1, !dbg !6004, !ctir !142
  br i1 %tobool1036, label %if.then1037, label %if.else1044, !dbg !6005

if.then1037:                                      ; preds = %if.else1034
  %600 = load i8*, i8** %dst_name.addr, align 8, !dbg !6006, !tbaa !2645
  %601 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6009, !tbaa !2645
  %mode1038 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %601, i32 0, i32 4, !dbg !6010, !ctir !357
  %602 = load i32, i32* %mode1038, align 8, !dbg !6010, !tbaa !3230, !ctir !139
  %call1039 = call i32 @set_acl(i8* %600, i32 -1, i32 %602), !dbg !6011
  %cmp1040 = icmp ne i32 %call1039, 0, !dbg !6012
  br i1 %cmp1040, label %if.then1042, label %if.end1043, !dbg !6013

if.then1042:                                      ; preds = %if.then1037
  store i1 false, i1* %retval, align 1, !dbg !6014
  br label %return, !dbg !6014

if.end1043:                                       ; preds = %if.then1037
  br label %if.end1114, !dbg !6015

if.else1044:                                      ; preds = %if.else1034
  %603 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6016, !tbaa !2645
  %explicit_no_preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %603, i32 0, i32 17, !dbg !6018, !ctir !357
  %604 = load i8, i8* %explicit_no_preserve_mode, align 8, !dbg !6018, !tbaa !3191
  %tobool1045 = trunc i8 %604 to i1, !dbg !6018, !ctir !142
  br i1 %tobool1045, label %land.lhs.true1047, label %if.else1068, !dbg !6019

land.lhs.true1047:                                ; preds = %if.else1044
  %605 = load i8, i8* %new_dst.addr, align 1, !dbg !6020, !tbaa !2739
  %tobool1048 = trunc i8 %605 to i1, !dbg !6020
  br i1 %tobool1048, label %if.then1050, label %if.else1068, !dbg !6021

if.then1050:                                      ; preds = %land.lhs.true1047
  call void @llvm.dbg.declare(metadata i32* %default_permissions, metadata !6022, metadata !DIExpression()), !dbg !6024
  %606 = load i32, i32* %src_mode, align 4, !dbg !6025, !tbaa !2632
  %and1051 = and i32 %606, 61440, !dbg !6025
  %cmp1052 = icmp eq i32 %and1051, 16384, !dbg !6025
  br i1 %cmp1052, label %lor.end1058, label %lor.rhs1054, !dbg !6026

lor.rhs1054:                                      ; preds = %if.then1050
  %607 = load i32, i32* %src_mode, align 4, !dbg !6027, !tbaa !2632
  %and1055 = and i32 %607, 61440, !dbg !6027
  %cmp1056 = icmp eq i32 %and1055, 49152, !dbg !6027
  br label %lor.end1058, !dbg !6026

lor.end1058:                                      ; preds = %lor.rhs1054, %if.then1050
  %608 = phi i1 [ true, %if.then1050 ], [ %cmp1056, %lor.rhs1054 ]
  %609 = zext i1 %608 to i64, !dbg !6025
  %cond1059 = select i1 %608, i32 511, i32 438, !dbg !6025
  store i32 %cond1059, i32* %default_permissions, align 4, !dbg !6024, !tbaa !2632
  %610 = load i8*, i8** %dst_name.addr, align 8, !dbg !6028, !tbaa !2645
  %611 = load i32, i32* %default_permissions, align 4, !dbg !6030, !tbaa !2632
  %call1060 = call i32 @cached_umask(), !dbg !6031
  %neg1061 = xor i32 %call1060, -1, !dbg !6032
  %and1062 = and i32 %611, %neg1061, !dbg !6033
  %call1063 = call i32 @set_acl(i8* %610, i32 -1, i32 %and1062), !dbg !6034
  %cmp1064 = icmp ne i32 %call1063, 0, !dbg !6035
  br i1 %cmp1064, label %if.then1066, label %if.end1067, !dbg !6036

if.then1066:                                      ; preds = %lor.end1058
  store i1 false, i1* %retval, align 1, !dbg !6037
  br label %return, !dbg !6037

if.end1067:                                       ; preds = %lor.end1058
  br label %if.end1113, !dbg !6038

if.else1068:                                      ; preds = %land.lhs.true1047, %if.else1044
  %612 = load i32, i32* %omitted_permissions, align 4, !dbg !6039, !tbaa !2632
  %tobool1069 = icmp ne i32 %612, 0, !dbg !6039
  br i1 %tobool1069, label %if.then1070, label %if.end1096, !dbg !6042

if.then1070:                                      ; preds = %if.else1068
  %call1071 = call i32 @cached_umask(), !dbg !6043
  %neg1072 = xor i32 %call1071, -1, !dbg !6045
  %613 = load i32, i32* %omitted_permissions, align 4, !dbg !6046, !tbaa !2632
  %and1073 = and i32 %613, %neg1072, !dbg !6046
  store i32 %and1073, i32* %omitted_permissions, align 4, !dbg !6046, !tbaa !2632
  %614 = load i32, i32* %omitted_permissions, align 4, !dbg !6047, !tbaa !2632
  %tobool1074 = icmp ne i32 %614, 0, !dbg !6047
  br i1 %tobool1074, label %land.lhs.true1075, label %if.end1095, !dbg !6049

land.lhs.true1075:                                ; preds = %if.then1070
  %615 = load i8, i8* %restore_dst_mode, align 1, !dbg !6050, !tbaa !2739
  %tobool1076 = trunc i8 %615 to i1, !dbg !6050
  br i1 %tobool1076, label %if.end1095, label %if.then1077, !dbg !6051

if.then1077:                                      ; preds = %land.lhs.true1075
  %616 = load i8, i8* %new_dst.addr, align 1, !dbg !6052, !tbaa !2739
  %tobool1078 = trunc i8 %616 to i1, !dbg !6052
  br i1 %tobool1078, label %land.lhs.true1080, label %if.end1088, !dbg !6055

land.lhs.true1080:                                ; preds = %if.then1077
  %617 = load i8*, i8** %dst_name.addr, align 8, !dbg !6056, !tbaa !2645
  %call1081 = call i32 @lstat(i8* %617, %struct.stat* %dst_sb) #9, !dbg !6057
  %cmp1082 = icmp ne i32 %call1081, 0, !dbg !6058
  br i1 %cmp1082, label %if.then1084, label %if.end1088, !dbg !6059

if.then1084:                                      ; preds = %land.lhs.true1080
  %call1085 = call i32* @__errno_location() #16, !dbg !6060
  %618 = load i32, i32* %call1085, align 4, !dbg !6060, !tbaa !2632, !ctir !7
  %call1086 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.102, i64 0, i64 0)) #9, !dbg !6062
  %619 = load i8*, i8** %dst_name.addr, align 8, !dbg !6063, !tbaa !2645
  %call1087 = call i8* @quotearg_style(i32 4, i8* %619), !dbg !6063
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %618, i8* %call1086, i8* %call1087), !dbg !6064
  store i1 false, i1* %retval, align 1, !dbg !6065
  br label %return, !dbg !6065

if.end1088:                                       ; preds = %land.lhs.true1080, %if.then1077
  %st_mode1089 = getelementptr inbounds %struct.stat, %struct.stat* %dst_sb, i32 0, i32 3, !dbg !6066, !ctir !415
  %620 = load i32, i32* %st_mode1089, align 8, !dbg !6066, !tbaa !2911, !ctir !140
  store i32 %620, i32* %dst_mode, align 4, !dbg !6067, !tbaa !2632
  %621 = load i32, i32* %omitted_permissions, align 4, !dbg !6068, !tbaa !2632
  %622 = load i32, i32* %dst_mode, align 4, !dbg !6070, !tbaa !2632
  %neg1090 = xor i32 %622, -1, !dbg !6071
  %and1091 = and i32 %621, %neg1090, !dbg !6072
  %tobool1092 = icmp ne i32 %and1091, 0, !dbg !6072
  br i1 %tobool1092, label %if.then1093, label %if.end1094, !dbg !6073

if.then1093:                                      ; preds = %if.end1088
  store i8 1, i8* %restore_dst_mode, align 1, !dbg !6074, !tbaa !2739
  br label %if.end1094, !dbg !6075

if.end1094:                                       ; preds = %if.then1093, %if.end1088
  br label %if.end1095, !dbg !6076

if.end1095:                                       ; preds = %if.end1094, %land.lhs.true1075, %if.then1070
  br label %if.end1096, !dbg !6077

if.end1096:                                       ; preds = %if.end1095, %if.else1068
  %623 = load i8, i8* %restore_dst_mode, align 1, !dbg !6078, !tbaa !2739
  %tobool1097 = trunc i8 %623 to i1, !dbg !6078
  br i1 %tobool1097, label %if.then1098, label %if.end1112, !dbg !6080

if.then1098:                                      ; preds = %if.end1096
  %624 = load i8*, i8** %dst_name.addr, align 8, !dbg !6081, !tbaa !2645
  %625 = load i32, i32* %dst_mode, align 4, !dbg !6084, !tbaa !2632
  %626 = load i32, i32* %omitted_permissions, align 4, !dbg !6085, !tbaa !2632
  %or1099 = or i32 %625, %626, !dbg !6086
  %call1100 = call i32 @chmod(i8* %624, i32 %or1099) #9, !dbg !6087
  %cmp1101 = icmp ne i32 %call1100, 0, !dbg !6088
  br i1 %cmp1101, label %if.then1103, label %if.end1111, !dbg !6089

if.then1103:                                      ; preds = %if.then1098
  %call1104 = call i32* @__errno_location() #16, !dbg !6090
  %627 = load i32, i32* %call1104, align 4, !dbg !6090, !tbaa !2632, !ctir !7
  %call1105 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.49.139, i64 0, i64 0)) #9, !dbg !6092
  %628 = load i8*, i8** %dst_name.addr, align 8, !dbg !6093, !tbaa !2645
  %call1106 = call i8* @quotearg_style(i32 4, i8* %628), !dbg !6093
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %627, i8* %call1105, i8* %call1106), !dbg !6094
  %629 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6095, !tbaa !2645
  %require_preserve1107 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %629, i32 0, i32 21, !dbg !6097, !ctir !357
  %630 = load i8, i8* %require_preserve1107, align 4, !dbg !6097, !tbaa !3203
  %tobool1108 = trunc i8 %630 to i1, !dbg !6097, !ctir !142
  br i1 %tobool1108, label %if.then1109, label %if.end1110, !dbg !6098

if.then1109:                                      ; preds = %if.then1103
  store i1 false, i1* %retval, align 1, !dbg !6099
  br label %return, !dbg !6099

if.end1110:                                       ; preds = %if.then1103
  br label %if.end1111, !dbg !6100

if.end1111:                                       ; preds = %if.end1110, %if.then1098
  br label %if.end1112, !dbg !6101

if.end1112:                                       ; preds = %if.end1111, %if.end1096
  br label %if.end1113

if.end1113:                                       ; preds = %if.end1112, %if.end1067
  br label %if.end1114

if.end1114:                                       ; preds = %if.end1113, %if.end1043
  br label %if.end1115

if.end1115:                                       ; preds = %if.end1114, %if.end1033
  %631 = load i8, i8* %delayed_ok, align 1, !dbg !6102, !tbaa !2739
  %tobool1116 = trunc i8 %631 to i1, !dbg !6102
  store i1 %tobool1116, i1* %retval, align 1, !dbg !6103
  br label %return, !dbg !6103

un_backup:                                        ; preds = %if.then921, %if.else888, %if.then883, %if.then863, %if.then823, %if.then810, %if.then786, %if.then767, %if.then750, %if.then728, %if.then718, %if.then667, %if.then631, %if.then619, %if.then612, %if.then596, %if.then489, %if.else477, %if.then453, %if.then163
  call void @llvm.dbg.label(metadata !6104), !dbg !6105
  %632 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6106, !tbaa !2645
  %preserve_security_context1117 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %632, i32 0, i32 22, !dbg !6108, !ctir !357
  %633 = load i8, i8* %preserve_security_context1117, align 1, !dbg !6108, !tbaa !2847
  %tobool1118 = trunc i8 %633 to i1, !dbg !6108, !ctir !142
  br i1 %tobool1118, label %if.then1119, label %if.end1120, !dbg !6109

if.then1119:                                      ; preds = %un_backup
  call void @restore_default_fscreatecon_or_die(), !dbg !6110
  br label %if.end1120, !dbg !6110

if.end1120:                                       ; preds = %if.then1119, %un_backup
  %634 = load i8*, i8** %earlier_file, align 8, !dbg !6111, !tbaa !2645
  %cmp1121 = icmp eq i8* %634, null, !dbg !6113
  br i1 %cmp1121, label %if.then1123, label %if.end1126, !dbg !6114

if.then1123:                                      ; preds = %if.end1120
  %st_ino1124 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 1, !dbg !6115, !ctir !415
  %635 = load i64, i64* %st_ino1124, align 8, !dbg !6115, !tbaa !4781, !ctir !276
  %st_dev1125 = getelementptr inbounds %struct.stat, %struct.stat* %src_sb, i32 0, i32 0, !dbg !6116, !ctir !415
  %636 = load i64, i64* %st_dev1125, align 8, !dbg !6116, !tbaa !4760, !ctir !274
  call void @forget_created(i64 %635, i64 %636), !dbg !6117
  br label %if.end1126, !dbg !6117

if.end1126:                                       ; preds = %if.then1123, %if.end1120
  %637 = load i8*, i8** %dst_backup, align 8, !dbg !6118, !tbaa !2645
  %tobool1127 = icmp ne i8* %637, null, !dbg !6118
  br i1 %tobool1127, label %if.then1128, label %if.end1146, !dbg !6120

if.then1128:                                      ; preds = %if.end1126
  %638 = load i8*, i8** %dst_backup, align 8, !dbg !6121, !tbaa !2645
  %639 = load i8*, i8** %dst_name.addr, align 8, !dbg !6124, !tbaa !2645
  %call1129 = call i32 @rename(i8* %638, i8* %639) #9, !dbg !6125
  %cmp1130 = icmp ne i32 %call1129, 0, !dbg !6126
  br i1 %cmp1130, label %if.then1132, label %if.else1136, !dbg !6127

if.then1132:                                      ; preds = %if.then1128
  %call1133 = call i32* @__errno_location() #16, !dbg !6128
  %640 = load i32, i32* %call1133, align 4, !dbg !6128, !tbaa !2632, !ctir !7
  %call1134 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.50.140, i64 0, i64 0)) #9, !dbg !6129
  %641 = load i8*, i8** %dst_name.addr, align 8, !dbg !6130, !tbaa !2645
  %call1135 = call i8* @quotearg_style(i32 4, i8* %641), !dbg !6130
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %640, i8* %call1134, i8* %call1135), !dbg !6131
  br label %if.end1145, !dbg !6131

if.else1136:                                      ; preds = %if.then1128
  %642 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6132, !tbaa !2645
  %verbose1137 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %642, i32 0, i32 31, !dbg !6135, !ctir !357
  %643 = load i8, i8* %verbose1137, align 2, !dbg !6135, !tbaa !2809
  %tobool1138 = trunc i8 %643 to i1, !dbg !6135, !ctir !142
  br i1 %tobool1138, label %if.then1139, label %if.end1144, !dbg !6136

if.then1139:                                      ; preds = %if.else1136
  %call1140 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.51.141, i64 0, i64 0)) #9, !dbg !6137
  %644 = load i8*, i8** %dst_backup, align 8, !dbg !6138, !tbaa !2645
  %call1141 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %644), !dbg !6138
  %645 = load i8*, i8** %dst_name.addr, align 8, !dbg !6139, !tbaa !2645
  %call1142 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %645), !dbg !6139
  %call1143 = call i32 (i8*, ...) @printf(i8* %call1140, i8* %call1141, i8* %call1142), !dbg !6140
  br label %if.end1144, !dbg !6140

if.end1144:                                       ; preds = %if.then1139, %if.else1136
  br label %if.end1145

if.end1145:                                       ; preds = %if.end1144, %if.then1132
  br label %if.end1146, !dbg !6141

if.end1146:                                       ; preds = %if.end1145, %if.end1126
  store i1 false, i1* %retval, align 1, !dbg !6142
  br label %return, !dbg !6142

return:                                           ; preds = %if.end1146, %if.end1115, %if.then1109, %if.then1084, %if.then1066, %if.then1042, %if.then1032, %if.then1015, %if.then1012, %sw.bb, %if.then977, %if.then949, %if.then945, %if.then590, %if.then555, %if.then536, %if.then530, %if.end527, %if.end490, %if.end467, %if.then377, %if.then333, %if.then300, %cond.end287, %if.then257, %if.else238, %if.then219, %if.else207, %if.then192, %if.then188, %if.end175, %if.end165, %if.then132, %if.then117, %if.then63, %cond.end47, %if.then34
  %646 = load i1, i1* %retval, align 1, !dbg !6143
  ret i1 %646, !dbg !6143
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @should_dereference(%struct.cp_options* %x, i1 zeroext %command_line_arg) #10 !dbg !6144 !ctir !446 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  %command_line_arg.addr = alloca i8, align 1
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6145, metadata !DIExpression()), !dbg !6146
  %frombool = zext i1 %command_line_arg to i8
  store i8 %frombool, i8* %command_line_arg.addr, align 1, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %command_line_arg.addr, metadata !6147, metadata !DIExpression()), !dbg !6148
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6149, !tbaa !2645
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 1, !dbg !6150, !ctir !357
  %1 = load i32, i32* %dereference, align 4, !dbg !6150, !tbaa !3144, !ctir !76
  %cmp = icmp eq i32 %1, 4, !dbg !6151
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !6152

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6153, !tbaa !2645
  %dereference1 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 1, !dbg !6154, !ctir !357
  %3 = load i32, i32* %dereference1, align 4, !dbg !6154, !tbaa !3144, !ctir !76
  %cmp2 = icmp eq i32 %3, 3, !dbg !6155
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !6156

land.rhs:                                         ; preds = %lor.rhs
  %4 = load i8, i8* %command_line_arg.addr, align 1, !dbg !6157, !tbaa !2739
  %tobool = trunc i8 %4 to i1, !dbg !6157
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %5 = phi i1 [ false, %lor.rhs ], [ %tobool, %land.rhs ], !dbg !6158
  br label %lor.end, !dbg !6152

lor.end:                                          ; preds = %land.end, %entry
  %6 = phi i1 [ true, %entry ], [ %5, %land.end ]
  ret i1 %6, !dbg !6159
}

; Function Attrs: nounwind
declare dso_local i32 @fstatat(i32, i8*, %struct.stat*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @same_file_ok(i8* %src_name, %struct.stat* %src_sb, i8* %dst_name, %struct.stat* %dst_sb, %struct.cp_options* %x, i8* %return_now) #4 !dbg !6160 !ctir !448 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %src_sb.addr = alloca %struct.stat*, align 8
  %dst_name.addr = alloca i8*, align 8
  %dst_sb.addr = alloca %struct.stat*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %return_now.addr = alloca i8*, align 8
  %src_sb_link = alloca %struct.stat*, align 8, !ctir !413
  %dst_sb_link = alloca %struct.stat*, align 8, !ctir !413
  %tmp_dst_sb = alloca %struct.stat, align 8, !ctir !415
  %tmp_src_sb = alloca %struct.stat, align 8, !ctir !415
  %same_link = alloca i8, align 1, !ctir !142
  %same = alloca i8, align 1, !ctir !142
  %sn = alloca i8, align 1, !ctir !142
  %abs_src = alloca i8*, align 8, !ctir !9
  %result = alloca i8, align 1, !ctir !142
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !6161, metadata !DIExpression()), !dbg !6162
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !6163, metadata !DIExpression()), !dbg !6164
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6165, metadata !DIExpression()), !dbg !6166
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !6167, metadata !DIExpression()), !dbg !6168
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6169, metadata !DIExpression()), !dbg !6170
  store i8* %return_now, i8** %return_now.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %return_now.addr, metadata !6171, metadata !DIExpression()), !dbg !6172
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb_link, metadata !6173, metadata !DIExpression()), !dbg !6174
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb_link, metadata !6175, metadata !DIExpression()), !dbg !6176
  call void @llvm.dbg.declare(metadata %struct.stat* %tmp_dst_sb, metadata !6177, metadata !DIExpression()), !dbg !6178
  call void @llvm.dbg.declare(metadata %struct.stat* %tmp_src_sb, metadata !6179, metadata !DIExpression()), !dbg !6180
  call void @llvm.dbg.declare(metadata i8* %same_link, metadata !6181, metadata !DIExpression()), !dbg !6182
  call void @llvm.dbg.declare(metadata i8* %same, metadata !6183, metadata !DIExpression()), !dbg !6184
  %0 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6185, !tbaa !2645
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 1, !dbg !6185, !ctir !414
  %1 = load i64, i64* %st_ino, align 8, !dbg !6185, !tbaa !4781, !ctir !276
  %2 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6185, !tbaa !2645
  %st_ino1 = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 1, !dbg !6185, !ctir !414
  %3 = load i64, i64* %st_ino1, align 8, !dbg !6185, !tbaa !4781, !ctir !276
  %cmp = icmp eq i64 %1, %3, !dbg !6185
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6185

land.rhs:                                         ; preds = %entry
  %4 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6185, !tbaa !2645
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 0, !dbg !6185, !ctir !414
  %5 = load i64, i64* %st_dev, align 8, !dbg !6185, !tbaa !4760, !ctir !274
  %6 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6185, !tbaa !2645
  %st_dev2 = getelementptr inbounds %struct.stat, %struct.stat* %6, i32 0, i32 0, !dbg !6185, !ctir !414
  %7 = load i64, i64* %st_dev2, align 8, !dbg !6185, !tbaa !4760, !ctir !274
  %cmp3 = icmp eq i64 %5, %7, !dbg !6185
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %8 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !6186
  %frombool = zext i1 %8 to i8, !dbg !6184
  store i8 %frombool, i8* %same, align 1, !dbg !6184, !tbaa !2739
  %9 = load i8*, i8** %return_now.addr, align 8, !dbg !6187, !tbaa !2645
  store i8 0, i8* %9, align 1, !dbg !6188, !tbaa !2739, !ctir !142
  %10 = load i8, i8* %same, align 1, !dbg !6189, !tbaa !2739
  %tobool = trunc i8 %10 to i1, !dbg !6189
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6191

land.lhs.true:                                    ; preds = %land.end
  %11 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6192, !tbaa !2645
  %hard_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 8, !dbg !6193, !ctir !357
  %12 = load i8, i8* %hard_link, align 1, !dbg !6193, !tbaa !3156
  %tobool4 = trunc i8 %12 to i1, !dbg !6193, !ctir !142
  br i1 %tobool4, label %if.then, label %if.end, !dbg !6194

if.then:                                          ; preds = %land.lhs.true
  %13 = load i8*, i8** %return_now.addr, align 8, !dbg !6195, !tbaa !2645
  store i8 1, i8* %13, align 1, !dbg !6197, !tbaa !2739, !ctir !142
  store i1 true, i1* %retval, align 1, !dbg !6198
  br label %return, !dbg !6198

if.end:                                           ; preds = %land.lhs.true, %land.end
  %14 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6199, !tbaa !2645
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %14, i32 0, i32 1, !dbg !6201, !ctir !357
  %15 = load i32, i32* %dereference, align 4, !dbg !6201, !tbaa !3144, !ctir !76
  %cmp5 = icmp eq i32 %15, 2, !dbg !6202
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !6203

if.then6:                                         ; preds = %if.end
  %16 = load i8, i8* %same, align 1, !dbg !6204, !tbaa !2739
  %tobool7 = trunc i8 %16 to i1, !dbg !6204
  %frombool8 = zext i1 %tobool7 to i8, !dbg !6206
  store i8 %frombool8, i8* %same_link, align 1, !dbg !6206, !tbaa !2739
  %17 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6207, !tbaa !2645
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 3, !dbg !6207, !ctir !414
  %18 = load i32, i32* %st_mode, align 8, !dbg !6207, !tbaa !2911, !ctir !140
  %and = and i32 %18, 61440, !dbg !6207
  %cmp9 = icmp eq i32 %and, 40960, !dbg !6207
  br i1 %cmp9, label %land.lhs.true10, label %if.end28, !dbg !6209

land.lhs.true10:                                  ; preds = %if.then6
  %19 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6210, !tbaa !2645
  %st_mode11 = getelementptr inbounds %struct.stat, %struct.stat* %19, i32 0, i32 3, !dbg !6210, !ctir !414
  %20 = load i32, i32* %st_mode11, align 8, !dbg !6210, !tbaa !2911, !ctir !140
  %and12 = and i32 %20, 61440, !dbg !6210
  %cmp13 = icmp eq i32 %and12, 40960, !dbg !6210
  br i1 %cmp13, label %if.then14, label %if.end28, !dbg !6211

if.then14:                                        ; preds = %land.lhs.true10
  call void @llvm.dbg.declare(metadata i8* %sn, metadata !6212, metadata !DIExpression()), !dbg !6214
  %21 = load i8*, i8** %src_name.addr, align 8, !dbg !6215, !tbaa !2645
  %22 = load i8*, i8** %dst_name.addr, align 8, !dbg !6216, !tbaa !2645
  %call = call zeroext i1 @same_name(i8* %21, i8* %22), !dbg !6217
  %frombool15 = zext i1 %call to i8, !dbg !6214
  store i8 %frombool15, i8* %sn, align 1, !dbg !6214, !tbaa !2739
  %23 = load i8, i8* %sn, align 1, !dbg !6218, !tbaa !2739
  %tobool16 = trunc i8 %23 to i1, !dbg !6218
  br i1 %tobool16, label %if.end25, label %if.then17, !dbg !6220

if.then17:                                        ; preds = %if.then14
  %24 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6221, !tbaa !2645
  %backup_type = getelementptr inbounds %struct.cp_options, %struct.cp_options* %24, i32 0, i32 0, !dbg !6224, !ctir !357
  %25 = load i32, i32* %backup_type, align 8, !dbg !6224, !tbaa !2924, !ctir !68
  %cmp18 = icmp ne i32 %25, 0, !dbg !6225
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !6226

if.then19:                                        ; preds = %if.then17
  store i1 true, i1* %retval, align 1, !dbg !6227
  br label %return, !dbg !6227

if.end20:                                         ; preds = %if.then17
  %26 = load i8, i8* %same_link, align 1, !dbg !6228, !tbaa !2739
  %tobool21 = trunc i8 %26 to i1, !dbg !6228
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !6230

if.then22:                                        ; preds = %if.end20
  %27 = load i8*, i8** %return_now.addr, align 8, !dbg !6231, !tbaa !2645
  store i8 1, i8* %27, align 1, !dbg !6233, !tbaa !2739, !ctir !142
  %28 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6234, !tbaa !2645
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %28, i32 0, i32 9, !dbg !6235, !ctir !357
  %29 = load i8, i8* %move_mode, align 8, !dbg !6235, !tbaa !3164
  %tobool23 = trunc i8 %29 to i1, !dbg !6235, !ctir !142
  %lnot = xor i1 %tobool23, true, !dbg !6236
  store i1 %lnot, i1* %retval, align 1, !dbg !6237
  br label %return, !dbg !6237

if.end24:                                         ; preds = %if.end20
  br label %if.end25, !dbg !6238

if.end25:                                         ; preds = %if.end24, %if.then14
  %30 = load i8, i8* %sn, align 1, !dbg !6239, !tbaa !2739
  %tobool26 = trunc i8 %30 to i1, !dbg !6239
  %lnot27 = xor i1 %tobool26, true, !dbg !6240
  store i1 %lnot27, i1* %retval, align 1, !dbg !6241
  br label %return, !dbg !6241

if.end28:                                         ; preds = %land.lhs.true10, %if.then6
  %31 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6242, !tbaa !2645
  store %struct.stat* %31, %struct.stat** %src_sb_link, align 8, !dbg !6243, !tbaa !2645
  %32 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6244, !tbaa !2645
  store %struct.stat* %32, %struct.stat** %dst_sb_link, align 8, !dbg !6245, !tbaa !2645
  br label %if.end58, !dbg !6246

if.else:                                          ; preds = %if.end
  %33 = load i8, i8* %same, align 1, !dbg !6247, !tbaa !2739
  %tobool29 = trunc i8 %33 to i1, !dbg !6247
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !6250

if.then30:                                        ; preds = %if.else
  store i1 true, i1* %retval, align 1, !dbg !6251
  br label %return, !dbg !6251

if.end31:                                         ; preds = %if.else
  %34 = load i8*, i8** %dst_name.addr, align 8, !dbg !6252, !tbaa !2645
  %call32 = call i32 @lstat(i8* %34, %struct.stat* %tmp_dst_sb) #9, !dbg !6254
  %cmp33 = icmp ne i32 %call32, 0, !dbg !6255
  br i1 %cmp33, label %if.then36, label %lor.lhs.false, !dbg !6256

lor.lhs.false:                                    ; preds = %if.end31
  %35 = load i8*, i8** %src_name.addr, align 8, !dbg !6257, !tbaa !2645
  %call34 = call i32 @lstat(i8* %35, %struct.stat* %tmp_src_sb) #9, !dbg !6258
  %cmp35 = icmp ne i32 %call34, 0, !dbg !6259
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !6260

if.then36:                                        ; preds = %lor.lhs.false, %if.end31
  store i1 true, i1* %retval, align 1, !dbg !6261
  br label %return, !dbg !6261

if.end37:                                         ; preds = %lor.lhs.false
  store %struct.stat* %tmp_src_sb, %struct.stat** %src_sb_link, align 8, !dbg !6262, !tbaa !2645
  store %struct.stat* %tmp_dst_sb, %struct.stat** %dst_sb_link, align 8, !dbg !6263, !tbaa !2645
  %36 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6264, !tbaa !2645
  %st_ino38 = getelementptr inbounds %struct.stat, %struct.stat* %36, i32 0, i32 1, !dbg !6264, !ctir !414
  %37 = load i64, i64* %st_ino38, align 8, !dbg !6264, !tbaa !4781, !ctir !276
  %38 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6264, !tbaa !2645
  %st_ino39 = getelementptr inbounds %struct.stat, %struct.stat* %38, i32 0, i32 1, !dbg !6264, !ctir !414
  %39 = load i64, i64* %st_ino39, align 8, !dbg !6264, !tbaa !4781, !ctir !276
  %cmp40 = icmp eq i64 %37, %39, !dbg !6264
  br i1 %cmp40, label %land.rhs41, label %land.end45, !dbg !6264

land.rhs41:                                       ; preds = %if.end37
  %40 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6264, !tbaa !2645
  %st_dev42 = getelementptr inbounds %struct.stat, %struct.stat* %40, i32 0, i32 0, !dbg !6264, !ctir !414
  %41 = load i64, i64* %st_dev42, align 8, !dbg !6264, !tbaa !4760, !ctir !274
  %42 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6264, !tbaa !2645
  %st_dev43 = getelementptr inbounds %struct.stat, %struct.stat* %42, i32 0, i32 0, !dbg !6264, !ctir !414
  %43 = load i64, i64* %st_dev43, align 8, !dbg !6264, !tbaa !4760, !ctir !274
  %cmp44 = icmp eq i64 %41, %43, !dbg !6264
  br label %land.end45

land.end45:                                       ; preds = %land.rhs41, %if.end37
  %44 = phi i1 [ false, %if.end37 ], [ %cmp44, %land.rhs41 ], !dbg !6265
  %frombool46 = zext i1 %44 to i8, !dbg !6266
  store i8 %frombool46, i8* %same_link, align 1, !dbg !6266, !tbaa !2739
  %45 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6267, !tbaa !2645
  %st_mode47 = getelementptr inbounds %struct.stat, %struct.stat* %45, i32 0, i32 3, !dbg !6267, !ctir !414
  %46 = load i32, i32* %st_mode47, align 8, !dbg !6267, !tbaa !2911, !ctir !140
  %and48 = and i32 %46, 61440, !dbg !6267
  %cmp49 = icmp eq i32 %and48, 40960, !dbg !6267
  br i1 %cmp49, label %land.lhs.true50, label %if.end57, !dbg !6269

land.lhs.true50:                                  ; preds = %land.end45
  %47 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6270, !tbaa !2645
  %st_mode51 = getelementptr inbounds %struct.stat, %struct.stat* %47, i32 0, i32 3, !dbg !6270, !ctir !414
  %48 = load i32, i32* %st_mode51, align 8, !dbg !6270, !tbaa !2911, !ctir !140
  %and52 = and i32 %48, 61440, !dbg !6270
  %cmp53 = icmp eq i32 %and52, 40960, !dbg !6270
  br i1 %cmp53, label %land.lhs.true54, label %if.end57, !dbg !6271

land.lhs.true54:                                  ; preds = %land.lhs.true50
  %49 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6272, !tbaa !2645
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %49, i32 0, i32 6, !dbg !6273, !ctir !357
  %50 = load i8, i8* %unlink_dest_before_opening, align 1, !dbg !6273, !tbaa !3148
  %tobool55 = trunc i8 %50 to i1, !dbg !6273, !ctir !142
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !6274

if.then56:                                        ; preds = %land.lhs.true54
  store i1 true, i1* %retval, align 1, !dbg !6275
  br label %return, !dbg !6275

if.end57:                                         ; preds = %land.lhs.true54, %land.lhs.true50, %land.end45
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.end28
  %51 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6276, !tbaa !2645
  %backup_type59 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %51, i32 0, i32 0, !dbg !6278, !ctir !357
  %52 = load i32, i32* %backup_type59, align 8, !dbg !6278, !tbaa !2924, !ctir !68
  %cmp60 = icmp ne i32 %52, 0, !dbg !6279
  br i1 %cmp60, label %if.then61, label %if.end82, !dbg !6280

if.then61:                                        ; preds = %if.end58
  %53 = load i8, i8* %same_link, align 1, !dbg !6281, !tbaa !2739
  %tobool62 = trunc i8 %53 to i1, !dbg !6281
  br i1 %tobool62, label %if.end79, label %if.then63, !dbg !6284

if.then63:                                        ; preds = %if.then61
  %54 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6285, !tbaa !2645
  %move_mode64 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %54, i32 0, i32 9, !dbg !6288, !ctir !357
  %55 = load i8, i8* %move_mode64, align 8, !dbg !6288, !tbaa !3164
  %tobool65 = trunc i8 %55 to i1, !dbg !6288, !ctir !142
  br i1 %tobool65, label %if.end78, label %land.lhs.true66, !dbg !6289

land.lhs.true66:                                  ; preds = %if.then63
  %56 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6290, !tbaa !2645
  %dereference67 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %56, i32 0, i32 1, !dbg !6291, !ctir !357
  %57 = load i32, i32* %dereference67, align 4, !dbg !6291, !tbaa !3144, !ctir !76
  %cmp68 = icmp ne i32 %57, 2, !dbg !6292
  br i1 %cmp68, label %land.lhs.true69, label %if.end78, !dbg !6293

land.lhs.true69:                                  ; preds = %land.lhs.true66
  %58 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6294, !tbaa !2645
  %st_mode70 = getelementptr inbounds %struct.stat, %struct.stat* %58, i32 0, i32 3, !dbg !6294, !ctir !414
  %59 = load i32, i32* %st_mode70, align 8, !dbg !6294, !tbaa !2911, !ctir !140
  %and71 = and i32 %59, 61440, !dbg !6294
  %cmp72 = icmp eq i32 %and71, 40960, !dbg !6294
  br i1 %cmp72, label %land.lhs.true73, label %if.end78, !dbg !6295

land.lhs.true73:                                  ; preds = %land.lhs.true69
  %60 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6296, !tbaa !2645
  %st_mode74 = getelementptr inbounds %struct.stat, %struct.stat* %60, i32 0, i32 3, !dbg !6296, !ctir !414
  %61 = load i32, i32* %st_mode74, align 8, !dbg !6296, !tbaa !2911, !ctir !140
  %and75 = and i32 %61, 61440, !dbg !6296
  %cmp76 = icmp eq i32 %and75, 40960, !dbg !6296
  br i1 %cmp76, label %if.end78, label %if.then77, !dbg !6297

if.then77:                                        ; preds = %land.lhs.true73
  store i1 false, i1* %retval, align 1, !dbg !6298
  br label %return, !dbg !6298

if.end78:                                         ; preds = %land.lhs.true73, %land.lhs.true69, %land.lhs.true66, %if.then63
  store i1 true, i1* %retval, align 1, !dbg !6299
  br label %return, !dbg !6299

if.end79:                                         ; preds = %if.then61
  %62 = load i8*, i8** %src_name.addr, align 8, !dbg !6300, !tbaa !2645
  %63 = load i8*, i8** %dst_name.addr, align 8, !dbg !6301, !tbaa !2645
  %call80 = call zeroext i1 @same_name(i8* %62, i8* %63), !dbg !6302
  %lnot81 = xor i1 %call80, true, !dbg !6303
  store i1 %lnot81, i1* %retval, align 1, !dbg !6304
  br label %return, !dbg !6304

if.end82:                                         ; preds = %if.end58
  %64 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6305, !tbaa !2645
  %move_mode83 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %64, i32 0, i32 9, !dbg !6307, !ctir !357
  %65 = load i8, i8* %move_mode83, align 8, !dbg !6307, !tbaa !3164
  %tobool84 = trunc i8 %65 to i1, !dbg !6307, !ctir !142
  br i1 %tobool84, label %if.then88, label %lor.lhs.false85, !dbg !6308

lor.lhs.false85:                                  ; preds = %if.end82
  %66 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6309, !tbaa !2645
  %unlink_dest_before_opening86 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %66, i32 0, i32 6, !dbg !6310, !ctir !357
  %67 = load i8, i8* %unlink_dest_before_opening86, align 1, !dbg !6310, !tbaa !3148
  %tobool87 = trunc i8 %67 to i1, !dbg !6310, !ctir !142
  br i1 %tobool87, label %if.then88, label %if.end104, !dbg !6311

if.then88:                                        ; preds = %lor.lhs.false85, %if.end82
  %68 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6312, !tbaa !2645
  %st_mode89 = getelementptr inbounds %struct.stat, %struct.stat* %68, i32 0, i32 3, !dbg !6312, !ctir !414
  %69 = load i32, i32* %st_mode89, align 8, !dbg !6312, !tbaa !2911, !ctir !140
  %and90 = and i32 %69, 61440, !dbg !6312
  %cmp91 = icmp eq i32 %and90, 40960, !dbg !6312
  br i1 %cmp91, label %if.then92, label %if.end93, !dbg !6315

if.then92:                                        ; preds = %if.then88
  store i1 true, i1* %retval, align 1, !dbg !6316
  br label %return, !dbg !6316

if.end93:                                         ; preds = %if.then88
  %70 = load i8, i8* %same_link, align 1, !dbg !6317, !tbaa !2739
  %tobool94 = trunc i8 %70 to i1, !dbg !6317
  br i1 %tobool94, label %land.lhs.true95, label %if.end103, !dbg !6319

land.lhs.true95:                                  ; preds = %if.end93
  %71 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6320, !tbaa !2645
  %st_nlink = getelementptr inbounds %struct.stat, %struct.stat* %71, i32 0, i32 2, !dbg !6321, !ctir !414
  %72 = load i64, i64* %st_nlink, align 8, !dbg !6321, !tbaa !5018, !ctir !278
  %cmp96 = icmp ult i64 1, %72, !dbg !6322
  br i1 %cmp96, label %land.lhs.true97, label %if.end103, !dbg !6323

land.lhs.true97:                                  ; preds = %land.lhs.true95
  %73 = load i8*, i8** %src_name.addr, align 8, !dbg !6324, !tbaa !2645
  %74 = load i8*, i8** %dst_name.addr, align 8, !dbg !6325, !tbaa !2645
  %call98 = call zeroext i1 @same_name(i8* %73, i8* %74), !dbg !6326
  br i1 %call98, label %if.end103, label %if.then99, !dbg !6327

if.then99:                                        ; preds = %land.lhs.true97
  %75 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6328, !tbaa !2645
  %move_mode100 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %75, i32 0, i32 9, !dbg !6329, !ctir !357
  %76 = load i8, i8* %move_mode100, align 8, !dbg !6329, !tbaa !3164
  %tobool101 = trunc i8 %76 to i1, !dbg !6329, !ctir !142
  %lnot102 = xor i1 %tobool101, true, !dbg !6330
  store i1 %lnot102, i1* %retval, align 1, !dbg !6331
  br label %return, !dbg !6331

if.end103:                                        ; preds = %land.lhs.true97, %land.lhs.true95, %if.end93
  br label %if.end104, !dbg !6332

if.end104:                                        ; preds = %if.end103, %lor.lhs.false85
  %77 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6333, !tbaa !2645
  %st_mode105 = getelementptr inbounds %struct.stat, %struct.stat* %77, i32 0, i32 3, !dbg !6333, !ctir !414
  %78 = load i32, i32* %st_mode105, align 8, !dbg !6333, !tbaa !2911, !ctir !140
  %and106 = and i32 %78, 61440, !dbg !6333
  %cmp107 = icmp eq i32 %and106, 40960, !dbg !6333
  br i1 %cmp107, label %if.end126, label %land.lhs.true108, !dbg !6335

land.lhs.true108:                                 ; preds = %if.end104
  %79 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6336, !tbaa !2645
  %st_mode109 = getelementptr inbounds %struct.stat, %struct.stat* %79, i32 0, i32 3, !dbg !6336, !ctir !414
  %80 = load i32, i32* %st_mode109, align 8, !dbg !6336, !tbaa !2911, !ctir !140
  %and110 = and i32 %80, 61440, !dbg !6336
  %cmp111 = icmp eq i32 %and110, 40960, !dbg !6336
  br i1 %cmp111, label %if.end126, label %if.then112, !dbg !6337

if.then112:                                       ; preds = %land.lhs.true108
  %81 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6338, !tbaa !2645
  %st_ino113 = getelementptr inbounds %struct.stat, %struct.stat* %81, i32 0, i32 1, !dbg !6338, !ctir !414
  %82 = load i64, i64* %st_ino113, align 8, !dbg !6338, !tbaa !4781, !ctir !276
  %83 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6338, !tbaa !2645
  %st_ino114 = getelementptr inbounds %struct.stat, %struct.stat* %83, i32 0, i32 1, !dbg !6338, !ctir !414
  %84 = load i64, i64* %st_ino114, align 8, !dbg !6338, !tbaa !4781, !ctir !276
  %cmp115 = icmp eq i64 %82, %84, !dbg !6338
  br i1 %cmp115, label %land.lhs.true116, label %if.then120, !dbg !6338

land.lhs.true116:                                 ; preds = %if.then112
  %85 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6338, !tbaa !2645
  %st_dev117 = getelementptr inbounds %struct.stat, %struct.stat* %85, i32 0, i32 0, !dbg !6338, !ctir !414
  %86 = load i64, i64* %st_dev117, align 8, !dbg !6338, !tbaa !4760, !ctir !274
  %87 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6338, !tbaa !2645
  %st_dev118 = getelementptr inbounds %struct.stat, %struct.stat* %87, i32 0, i32 0, !dbg !6338, !ctir !414
  %88 = load i64, i64* %st_dev118, align 8, !dbg !6338, !tbaa !4760, !ctir !274
  %cmp119 = icmp eq i64 %86, %88, !dbg !6338
  br i1 %cmp119, label %if.end121, label %if.then120, !dbg !6341

if.then120:                                       ; preds = %land.lhs.true116, %if.then112
  store i1 true, i1* %retval, align 1, !dbg !6342
  br label %return, !dbg !6342

if.end121:                                        ; preds = %land.lhs.true116
  %89 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6343, !tbaa !2645
  %hard_link122 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %89, i32 0, i32 8, !dbg !6345, !ctir !357
  %90 = load i8, i8* %hard_link122, align 1, !dbg !6345, !tbaa !3156
  %tobool123 = trunc i8 %90 to i1, !dbg !6345, !ctir !142
  br i1 %tobool123, label %if.then124, label %if.end125, !dbg !6346

if.then124:                                       ; preds = %if.end121
  %91 = load i8*, i8** %return_now.addr, align 8, !dbg !6347, !tbaa !2645
  store i8 1, i8* %91, align 1, !dbg !6349, !tbaa !2739, !ctir !142
  store i1 true, i1* %retval, align 1, !dbg !6350
  br label %return, !dbg !6350

if.end125:                                        ; preds = %if.end121
  br label %if.end126, !dbg !6351

if.end126:                                        ; preds = %if.end125, %land.lhs.true108, %if.end104
  %92 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6352, !tbaa !2645
  %move_mode127 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %92, i32 0, i32 9, !dbg !6354, !ctir !357
  %93 = load i8, i8* %move_mode127, align 8, !dbg !6354, !tbaa !3164
  %tobool128 = trunc i8 %93 to i1, !dbg !6354, !ctir !142
  br i1 %tobool128, label %land.lhs.true129, label %if.end145, !dbg !6355

land.lhs.true129:                                 ; preds = %if.end126
  %94 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6356, !tbaa !2645
  %st_mode130 = getelementptr inbounds %struct.stat, %struct.stat* %94, i32 0, i32 3, !dbg !6356, !ctir !414
  %95 = load i32, i32* %st_mode130, align 8, !dbg !6356, !tbaa !2911, !ctir !140
  %and131 = and i32 %95, 61440, !dbg !6356
  %cmp132 = icmp eq i32 %and131, 40960, !dbg !6356
  br i1 %cmp132, label %land.lhs.true133, label %if.end145, !dbg !6357

land.lhs.true133:                                 ; preds = %land.lhs.true129
  %96 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6358, !tbaa !2645
  %st_nlink134 = getelementptr inbounds %struct.stat, %struct.stat* %96, i32 0, i32 2, !dbg !6359, !ctir !414
  %97 = load i64, i64* %st_nlink134, align 8, !dbg !6359, !tbaa !5018, !ctir !278
  %cmp135 = icmp ult i64 1, %97, !dbg !6360
  br i1 %cmp135, label %if.then136, label %if.end145, !dbg !6361

if.then136:                                       ; preds = %land.lhs.true133
  call void @llvm.dbg.declare(metadata i8** %abs_src, metadata !6362, metadata !DIExpression()), !dbg !6364
  %98 = load i8*, i8** %src_name.addr, align 8, !dbg !6365, !tbaa !2645
  %call137 = call i8* @canonicalize_file_name(i8* %98) #9, !dbg !6366
  store i8* %call137, i8** %abs_src, align 8, !dbg !6364, !tbaa !2645
  %99 = load i8*, i8** %abs_src, align 8, !dbg !6367, !tbaa !2645
  %tobool138 = icmp ne i8* %99, null, !dbg !6367
  br i1 %tobool138, label %if.then139, label %if.end144, !dbg !6369

if.then139:                                       ; preds = %if.then136
  call void @llvm.dbg.declare(metadata i8* %result, metadata !6370, metadata !DIExpression()), !dbg !6372
  %100 = load i8*, i8** %abs_src, align 8, !dbg !6373, !tbaa !2645
  %101 = load i8*, i8** %dst_name.addr, align 8, !dbg !6374, !tbaa !2645
  %call140 = call zeroext i1 @same_name(i8* %100, i8* %101), !dbg !6375
  %lnot141 = xor i1 %call140, true, !dbg !6376
  %frombool142 = zext i1 %lnot141 to i8, !dbg !6372
  store i8 %frombool142, i8* %result, align 1, !dbg !6372, !tbaa !2739
  %102 = load i8*, i8** %abs_src, align 8, !dbg !6377, !tbaa !2645
  call void @free(i8* %102) #9, !dbg !6378
  %103 = load i8, i8* %result, align 1, !dbg !6379, !tbaa !2739
  %tobool143 = trunc i8 %103 to i1, !dbg !6379
  store i1 %tobool143, i1* %retval, align 1, !dbg !6380
  br label %return, !dbg !6380

if.end144:                                        ; preds = %if.then136
  br label %if.end145, !dbg !6381

if.end145:                                        ; preds = %if.end144, %land.lhs.true133, %land.lhs.true129, %if.end126
  %104 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6382, !tbaa !2645
  %symbolic_link = getelementptr inbounds %struct.cp_options, %struct.cp_options* %104, i32 0, i32 29, !dbg !6384, !ctir !357
  %105 = load i8, i8* %symbolic_link, align 4, !dbg !6384, !tbaa !3219
  %tobool146 = trunc i8 %105 to i1, !dbg !6384, !ctir !142
  br i1 %tobool146, label %land.lhs.true147, label %if.end152, !dbg !6385

land.lhs.true147:                                 ; preds = %if.end145
  %106 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6386, !tbaa !2645
  %st_mode148 = getelementptr inbounds %struct.stat, %struct.stat* %106, i32 0, i32 3, !dbg !6386, !ctir !414
  %107 = load i32, i32* %st_mode148, align 8, !dbg !6386, !tbaa !2911, !ctir !140
  %and149 = and i32 %107, 61440, !dbg !6386
  %cmp150 = icmp eq i32 %and149, 40960, !dbg !6386
  br i1 %cmp150, label %if.then151, label %if.end152, !dbg !6387

if.then151:                                       ; preds = %land.lhs.true147
  store i1 true, i1* %retval, align 1, !dbg !6388
  br label %return, !dbg !6388

if.end152:                                        ; preds = %land.lhs.true147, %if.end145
  %108 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6389, !tbaa !2645
  %dereference153 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %108, i32 0, i32 1, !dbg !6391, !ctir !357
  %109 = load i32, i32* %dereference153, align 4, !dbg !6391, !tbaa !3144, !ctir !76
  %cmp154 = icmp eq i32 %109, 2, !dbg !6392
  br i1 %cmp154, label %if.then155, label %if.end194, !dbg !6393

if.then155:                                       ; preds = %if.end152
  %110 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6394, !tbaa !2645
  %st_mode156 = getelementptr inbounds %struct.stat, %struct.stat* %110, i32 0, i32 3, !dbg !6394, !ctir !414
  %111 = load i32, i32* %st_mode156, align 8, !dbg !6394, !tbaa !2911, !ctir !140
  %and157 = and i32 %111, 61440, !dbg !6394
  %cmp158 = icmp eq i32 %and157, 40960, !dbg !6394
  br i1 %cmp158, label %if.else160, label %if.then159, !dbg !6397

if.then159:                                       ; preds = %if.then155
  %112 = load %struct.stat*, %struct.stat** %src_sb_link, align 8, !dbg !6398, !tbaa !2645
  %113 = bitcast %struct.stat* %tmp_src_sb to i8*, !dbg !6399
  %114 = bitcast %struct.stat* %112 to i8*, !dbg !6399
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 144, i1 false), !dbg !6399, !tbaa.struct !6400
  br label %if.end165, !dbg !6401

if.else160:                                       ; preds = %if.then155
  %115 = load i8*, i8** %src_name.addr, align 8, !dbg !6402, !tbaa !2645
  %call161 = call i32 @stat(i8* %115, %struct.stat* %tmp_src_sb) #9, !dbg !6404
  %cmp162 = icmp ne i32 %call161, 0, !dbg !6405
  br i1 %cmp162, label %if.then163, label %if.end164, !dbg !6406

if.then163:                                       ; preds = %if.else160
  store i1 true, i1* %retval, align 1, !dbg !6407
  br label %return, !dbg !6407

if.end164:                                        ; preds = %if.else160
  br label %if.end165

if.end165:                                        ; preds = %if.end164, %if.then159
  %116 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6408, !tbaa !2645
  %st_mode166 = getelementptr inbounds %struct.stat, %struct.stat* %116, i32 0, i32 3, !dbg !6408, !ctir !414
  %117 = load i32, i32* %st_mode166, align 8, !dbg !6408, !tbaa !2911, !ctir !140
  %and167 = and i32 %117, 61440, !dbg !6408
  %cmp168 = icmp eq i32 %and167, 40960, !dbg !6408
  br i1 %cmp168, label %if.else170, label %if.then169, !dbg !6410

if.then169:                                       ; preds = %if.end165
  %118 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6411, !tbaa !2645
  %119 = bitcast %struct.stat* %tmp_dst_sb to i8*, !dbg !6412
  %120 = bitcast %struct.stat* %118 to i8*, !dbg !6412
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 144, i1 false), !dbg !6412, !tbaa.struct !6400
  br label %if.end175, !dbg !6413

if.else170:                                       ; preds = %if.end165
  %121 = load i8*, i8** %dst_name.addr, align 8, !dbg !6414, !tbaa !2645
  %call171 = call i32 @stat(i8* %121, %struct.stat* %tmp_dst_sb) #9, !dbg !6416
  %cmp172 = icmp ne i32 %call171, 0, !dbg !6417
  br i1 %cmp172, label %if.then173, label %if.end174, !dbg !6418

if.then173:                                       ; preds = %if.else170
  store i1 true, i1* %retval, align 1, !dbg !6419
  br label %return, !dbg !6419

if.end174:                                        ; preds = %if.else170
  br label %if.end175

if.end175:                                        ; preds = %if.end174, %if.then169
  %st_ino176 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_src_sb, i32 0, i32 1, !dbg !6420, !ctir !415
  %122 = load i64, i64* %st_ino176, align 8, !dbg !6420, !tbaa !4781, !ctir !276
  %st_ino177 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_dst_sb, i32 0, i32 1, !dbg !6420, !ctir !415
  %123 = load i64, i64* %st_ino177, align 8, !dbg !6420, !tbaa !4781, !ctir !276
  %cmp178 = icmp eq i64 %122, %123, !dbg !6420
  br i1 %cmp178, label %land.lhs.true179, label %if.then183, !dbg !6420

land.lhs.true179:                                 ; preds = %if.end175
  %st_dev180 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_src_sb, i32 0, i32 0, !dbg !6420, !ctir !415
  %124 = load i64, i64* %st_dev180, align 8, !dbg !6420, !tbaa !4760, !ctir !274
  %st_dev181 = getelementptr inbounds %struct.stat, %struct.stat* %tmp_dst_sb, i32 0, i32 0, !dbg !6420, !ctir !415
  %125 = load i64, i64* %st_dev181, align 8, !dbg !6420, !tbaa !4760, !ctir !274
  %cmp182 = icmp eq i64 %124, %125, !dbg !6420
  br i1 %cmp182, label %if.end184, label %if.then183, !dbg !6422

if.then183:                                       ; preds = %land.lhs.true179, %if.end175
  store i1 true, i1* %retval, align 1, !dbg !6423
  br label %return, !dbg !6423

if.end184:                                        ; preds = %land.lhs.true179
  %126 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6424, !tbaa !2645
  %hard_link185 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %126, i32 0, i32 8, !dbg !6426, !ctir !357
  %127 = load i8, i8* %hard_link185, align 1, !dbg !6426, !tbaa !3156
  %tobool186 = trunc i8 %127 to i1, !dbg !6426, !ctir !142
  br i1 %tobool186, label %if.then187, label %if.end193, !dbg !6427

if.then187:                                       ; preds = %if.end184
  %128 = load %struct.stat*, %struct.stat** %dst_sb_link, align 8, !dbg !6428, !tbaa !2645
  %st_mode188 = getelementptr inbounds %struct.stat, %struct.stat* %128, i32 0, i32 3, !dbg !6428, !ctir !414
  %129 = load i32, i32* %st_mode188, align 8, !dbg !6428, !tbaa !2911, !ctir !140
  %and189 = and i32 %129, 61440, !dbg !6428
  %cmp190 = icmp eq i32 %and189, 40960, !dbg !6428
  %lnot191 = xor i1 %cmp190, true, !dbg !6430
  %130 = load i8*, i8** %return_now.addr, align 8, !dbg !6431, !tbaa !2645
  %frombool192 = zext i1 %lnot191 to i8, !dbg !6432
  store i8 %frombool192, i8* %130, align 1, !dbg !6432, !tbaa !2739, !ctir !142
  store i1 true, i1* %retval, align 1, !dbg !6433
  br label %return, !dbg !6433

if.end193:                                        ; preds = %if.end184
  br label %if.end194, !dbg !6434

if.end194:                                        ; preds = %if.end193, %if.end152
  store i1 false, i1* %retval, align 1, !dbg !6435
  br label %return, !dbg !6435

return:                                           ; preds = %if.end194, %if.then187, %if.then183, %if.then173, %if.then163, %if.then151, %if.then139, %if.then124, %if.then120, %if.then99, %if.then92, %if.end79, %if.end78, %if.then77, %if.then56, %if.then36, %if.then30, %if.end25, %if.then22, %if.then19, %if.then
  %131 = load i1, i1* %retval, align 1, !dbg !6436
  ret i1 %131, !dbg !6436
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @create_hard_link(i8* %src_name, i8* %dst_name, i1 zeroext %replace, i1 zeroext %verbose, i1 zeroext %dereference) #4 !dbg !6437 !ctir !450 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %replace.addr = alloca i8, align 1
  %verbose.addr = alloca i8, align 1
  %dereference.addr = alloca i8, align 1
  %err = alloca i32, align 4, !ctir !7
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !6438, metadata !DIExpression()), !dbg !6439
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6440, metadata !DIExpression()), !dbg !6441
  %frombool = zext i1 %replace to i8
  store i8 %frombool, i8* %replace.addr, align 1, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %replace.addr, metadata !6442, metadata !DIExpression()), !dbg !6443
  %frombool1 = zext i1 %verbose to i8
  store i8 %frombool1, i8* %verbose.addr, align 1, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %verbose.addr, metadata !6444, metadata !DIExpression()), !dbg !6445
  %frombool2 = zext i1 %dereference to i8
  store i8 %frombool2, i8* %dereference.addr, align 1, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %dereference.addr, metadata !6446, metadata !DIExpression()), !dbg !6447
  call void @llvm.dbg.declare(metadata i32* %err, metadata !6448, metadata !DIExpression()), !dbg !6449
  %0 = load i8*, i8** %src_name.addr, align 8, !dbg !6450, !tbaa !2645
  %1 = load i8*, i8** %dst_name.addr, align 8, !dbg !6451, !tbaa !2645
  %2 = load i8, i8* %dereference.addr, align 1, !dbg !6452, !tbaa !2739
  %tobool = trunc i8 %2 to i1, !dbg !6452
  %3 = zext i1 %tobool to i64, !dbg !6452
  %cond = select i1 %tobool, i32 1024, i32 0, !dbg !6452
  %4 = load i8, i8* %replace.addr, align 1, !dbg !6453, !tbaa !2739
  %tobool3 = trunc i8 %4 to i1, !dbg !6453
  %call = call i32 @force_linkat(i32 -100, i8* %0, i32 -100, i8* %1, i32 %cond, i1 zeroext %tobool3, i32 -1), !dbg !6454
  store i32 %call, i32* %err, align 4, !dbg !6449, !tbaa !2632
  %5 = load i32, i32* %err, align 4, !dbg !6455, !tbaa !2632
  %cmp = icmp slt i32 0, %5, !dbg !6457
  br i1 %cmp, label %if.then, label %if.end, !dbg !6458

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %err, align 4, !dbg !6459, !tbaa !2632
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.52.167, i64 0, i64 0)) #9, !dbg !6461
  %7 = load i8*, i8** %dst_name.addr, align 8, !dbg !6462, !tbaa !2645
  %call5 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %7), !dbg !6462
  %8 = load i8*, i8** %src_name.addr, align 8, !dbg !6463, !tbaa !2645
  %call6 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %8), !dbg !6463
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* %call4, i8* %call5, i8* %call6), !dbg !6464
  store i1 false, i1* %retval, align 1, !dbg !6465
  br label %return, !dbg !6465

if.end:                                           ; preds = %entry
  %9 = load i32, i32* %err, align 4, !dbg !6466, !tbaa !2632
  %cmp7 = icmp slt i32 %9, 0, !dbg !6468
  br i1 %cmp7, label %land.lhs.true, label %if.end13, !dbg !6469

land.lhs.true:                                    ; preds = %if.end
  %10 = load i8, i8* %verbose.addr, align 1, !dbg !6470, !tbaa !2739
  %tobool8 = trunc i8 %10 to i1, !dbg !6470
  br i1 %tobool8, label %if.then9, label %if.end13, !dbg !6471

if.then9:                                         ; preds = %land.lhs.true
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25.115, i64 0, i64 0)) #9, !dbg !6472
  %11 = load i8*, i8** %dst_name.addr, align 8, !dbg !6473, !tbaa !2645
  %call11 = call i8* @quotearg_style(i32 4, i8* %11), !dbg !6473
  %call12 = call i32 (i8*, ...) @printf(i8* %call10, i8* %call11), !dbg !6474
  br label %if.end13, !dbg !6474

if.end13:                                         ; preds = %if.then9, %land.lhs.true, %if.end
  store i1 true, i1* %retval, align 1, !dbg !6475
  br label %return, !dbg !6475

return:                                           ; preds = %if.end13, %if.then
  %12 = load i1, i1* %retval, align 1, !dbg !6476
  ret i1 %12, !dbg !6476
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @abandon_move(%struct.cp_options* %x, i8* %dst_name, %struct.stat* %dst_sb) #4 !dbg !6477 !ctir !452 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  %dst_name.addr = alloca i8*, align 8
  %dst_sb.addr = alloca %struct.stat*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6478, metadata !DIExpression()), !dbg !6479
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6480, metadata !DIExpression()), !dbg !6481
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !6482, metadata !DIExpression()), !dbg !6483
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6484, !tbaa !2645
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 9, !dbg !6484, !ctir !357
  %1 = load i8, i8* %move_mode, align 8, !dbg !6484, !tbaa !3164
  %tobool = trunc i8 %1 to i1, !dbg !6484, !ctir !142
  br i1 %tobool, label %if.then, label %if.else, !dbg !6487

if.then:                                          ; preds = %entry
  br label %if.end, !dbg !6487

if.else:                                          ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.53.166, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5.101, i64 0, i64 0), i32 1746, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__.abandon_move, i64 0, i64 0)) #13, !dbg !6484
  unreachable, !dbg !6484

if.end:                                           ; preds = %if.then
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6488, !tbaa !2645
  %interactive = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 2, !dbg !6489, !ctir !357
  %3 = load i32, i32* %interactive, align 8, !dbg !6489, !tbaa !3160, !ctir !83
  %cmp = icmp eq i32 %3, 2, !dbg !6490
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !6491

lor.rhs:                                          ; preds = %if.end
  %4 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6492, !tbaa !2645
  %interactive1 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %4, i32 0, i32 2, !dbg !6493, !ctir !357
  %5 = load i32, i32* %interactive1, align 8, !dbg !6493, !tbaa !3160, !ctir !83
  %cmp2 = icmp eq i32 %5, 3, !dbg !6494
  br i1 %cmp2, label %land.rhs, label %lor.lhs.false, !dbg !6495

lor.lhs.false:                                    ; preds = %lor.rhs
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6496, !tbaa !2645
  %interactive3 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 2, !dbg !6497, !ctir !357
  %7 = load i32, i32* %interactive3, align 8, !dbg !6497, !tbaa !3160, !ctir !83
  %cmp4 = icmp eq i32 %7, 4, !dbg !6498
  br i1 %cmp4, label %land.lhs.true, label %land.end, !dbg !6499

land.lhs.true:                                    ; preds = %lor.lhs.false
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6500, !tbaa !2645
  %stdin_tty = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 32, !dbg !6501, !ctir !357
  %9 = load i8, i8* %stdin_tty, align 1, !dbg !6501, !tbaa !3234
  %tobool5 = trunc i8 %9 to i1, !dbg !6501, !ctir !142
  br i1 %tobool5, label %land.lhs.true6, label %land.end, !dbg !6502

land.lhs.true6:                                   ; preds = %land.lhs.true
  %10 = load i8*, i8** %dst_name.addr, align 8, !dbg !6503, !tbaa !2645
  %11 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6504, !tbaa !2645
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 3, !dbg !6505, !ctir !414
  %12 = load i32, i32* %st_mode, align 8, !dbg !6505, !tbaa !2911, !ctir !140
  %call = call zeroext i1 @writable_destination(i8* %10, i32 %12), !dbg !6506
  br i1 %call, label %land.end, label %land.rhs, !dbg !6507

land.rhs:                                         ; preds = %land.lhs.true6, %lor.rhs
  %13 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6508, !tbaa !2645
  %14 = load i8*, i8** %dst_name.addr, align 8, !dbg !6509, !tbaa !2645
  %15 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6510, !tbaa !2645
  %call7 = call zeroext i1 @overwrite_ok(%struct.cp_options* %13, i8* %14, %struct.stat* %15), !dbg !6511
  %lnot = xor i1 %call7, true, !dbg !6512
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true6, %land.lhs.true, %lor.lhs.false
  %16 = phi i1 [ false, %land.lhs.true6 ], [ false, %land.lhs.true ], [ false, %lor.lhs.false ], [ %lnot, %land.rhs ], !dbg !6513
  br label %lor.end, !dbg !6491

lor.end:                                          ; preds = %land.end, %if.end
  %17 = phi i1 [ true, %if.end ], [ %16, %land.end ]
  ret i1 %17, !dbg !6514
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @overwrite_ok(%struct.cp_options* %x, i8* %dst_name, %struct.stat* %dst_sb) #4 !dbg !6515 !ctir !452 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  %dst_name.addr = alloca i8*, align 8
  %dst_sb.addr = alloca %struct.stat*, align 8
  %perms = alloca [12 x i8], align 1, !ctir !456
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6516, metadata !DIExpression()), !dbg !6517
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6518, metadata !DIExpression()), !dbg !6519
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !6520, metadata !DIExpression()), !dbg !6521
  %0 = load i8*, i8** %dst_name.addr, align 8, !dbg !6522, !tbaa !2645
  %1 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6524, !tbaa !2645
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %1, i32 0, i32 3, !dbg !6525, !ctir !414
  %2 = load i32, i32* %st_mode, align 8, !dbg !6525, !tbaa !2911, !ctir !140
  %call = call zeroext i1 @writable_destination(i8* %0, i32 %2), !dbg !6526
  br i1 %call, label %if.else, label %if.then, !dbg !6527

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [12 x i8]* %perms, metadata !6528, metadata !DIExpression()), !dbg !6530
  %3 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6531, !tbaa !2645
  %st_mode1 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 3, !dbg !6532, !ctir !414
  %4 = load i32, i32* %st_mode1, align 8, !dbg !6532, !tbaa !2911, !ctir !140
  %arraydecay = getelementptr inbounds [12 x i8], [12 x i8]* %perms, i64 0, i64 0, !dbg !6533
  call void @strmode(i32 %4, i8* %arraydecay), !dbg !6534
  %arrayidx = getelementptr inbounds [12 x i8], [12 x i8]* %perms, i64 0, i64 10, !dbg !6535, !ctir !456
  store i8 0, i8* %arrayidx, align 1, !dbg !6536, !tbaa !3292
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !6537, !tbaa !2645
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6538, !tbaa !2645
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 9, !dbg !6539, !ctir !357
  %7 = load i8, i8* %move_mode, align 8, !dbg !6539, !tbaa !3164
  %tobool = trunc i8 %7 to i1, !dbg !6539, !ctir !142
  br i1 %tobool, label %cond.true, label %lor.lhs.false, !dbg !6540

lor.lhs.false:                                    ; preds = %if.then
  %8 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6541, !tbaa !2645
  %unlink_dest_before_opening = getelementptr inbounds %struct.cp_options, %struct.cp_options* %8, i32 0, i32 6, !dbg !6542, !ctir !357
  %9 = load i8, i8* %unlink_dest_before_opening, align 1, !dbg !6542, !tbaa !3148
  %tobool2 = trunc i8 %9 to i1, !dbg !6542, !ctir !142
  br i1 %tobool2, label %cond.true, label %lor.lhs.false3, !dbg !6543

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %10 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6544, !tbaa !2645
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %10, i32 0, i32 7, !dbg !6545, !ctir !357
  %11 = load i8, i8* %unlink_dest_after_failed_open, align 2, !dbg !6545, !tbaa !3152
  %tobool4 = trunc i8 %11 to i1, !dbg !6545, !ctir !142
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !6546

cond.true:                                        ; preds = %lor.lhs.false3, %lor.lhs.false, %if.then
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.54.163, i64 0, i64 0)) #9, !dbg !6547
  br label %cond.end, !dbg !6546

cond.false:                                       ; preds = %lor.lhs.false3
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.55.164, i64 0, i64 0)) #9, !dbg !6548
  br label %cond.end, !dbg !6546

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call5, %cond.true ], [ %call6, %cond.false ], !dbg !6546
  %12 = load i8*, i8** @program_name, align 8, !dbg !6549, !tbaa !2645
  %13 = load i8*, i8** %dst_name.addr, align 8, !dbg !6550, !tbaa !2645
  %call7 = call i8* @quotearg_style(i32 4, i8* %13), !dbg !6550
  %14 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !6551, !tbaa !2645
  %st_mode8 = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 3, !dbg !6552, !ctir !414
  %15 = load i32, i32* %st_mode8, align 8, !dbg !6552, !tbaa !2911, !ctir !140
  %and = and i32 %15, 4095, !dbg !6553
  %conv = zext i32 %and to i64, !dbg !6554
  %arrayidx9 = getelementptr inbounds [12 x i8], [12 x i8]* %perms, i64 0, i64 1, !dbg !6555, !ctir !456
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* %cond, i8* %12, i8* %call7, i64 %conv, i8* %arrayidx9), !dbg !6556
  br label %if.end, !dbg !6557

if.else:                                          ; preds = %entry
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !6558, !tbaa !2645
  %call11 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.56.165, i64 0, i64 0)) #9, !dbg !6560
  %17 = load i8*, i8** @program_name, align 8, !dbg !6561, !tbaa !2645
  %18 = load i8*, i8** %dst_name.addr, align 8, !dbg !6562, !tbaa !2645
  %call12 = call i8* @quotearg_style(i32 4, i8* %18), !dbg !6562
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* %call11, i8* %17, i8* %call12), !dbg !6563
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end
  %call14 = call zeroext i1 @yesno(), !dbg !6564
  ret i1 %call14, !dbg !6565
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dot_or_dotdot(i8* %file_name) #4 !dbg !6566 !ctir !220 {
entry:
  %retval = alloca i1, align 1
  %file_name.addr = alloca i8*, align 8
  %sep = alloca i8, align 1, !ctir !10
  store i8* %file_name, i8** %file_name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %file_name.addr, metadata !6567, metadata !DIExpression()), !dbg !6568
  %0 = load i8*, i8** %file_name.addr, align 8, !dbg !6569, !tbaa !2645
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !6569, !ctir !180
  %1 = load i8, i8* %arrayidx, align 1, !dbg !6569, !tbaa !3292
  %conv = sext i8 %1 to i32, !dbg !6569
  %cmp = icmp eq i32 %conv, 46, !dbg !6571
  br i1 %cmp, label %if.then, label %if.else, !dbg !6572

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %sep, metadata !6573, metadata !DIExpression()), !dbg !6575
  %2 = load i8*, i8** %file_name.addr, align 8, !dbg !6576, !tbaa !2645
  %3 = load i8*, i8** %file_name.addr, align 8, !dbg !6577, !tbaa !2645
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !6577, !ctir !180
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !6577, !tbaa !3292
  %conv3 = sext i8 %4 to i32, !dbg !6577
  %cmp4 = icmp eq i32 %conv3, 46, !dbg !6578
  %conv5 = zext i1 %cmp4 to i32, !dbg !6578
  %add = add nsw i32 %conv5, 1, !dbg !6579
  %idxprom = sext i32 %add to i64, !dbg !6576
  %arrayidx6 = getelementptr inbounds i8, i8* %2, i64 %idxprom, !dbg !6576, !ctir !180
  %5 = load i8, i8* %arrayidx6, align 1, !dbg !6576, !tbaa !3292
  store i8 %5, i8* %sep, align 1, !dbg !6575, !tbaa !3292
  %6 = load i8, i8* %sep, align 1, !dbg !6580, !tbaa !3292
  %tobool = icmp ne i8 %6, 0, !dbg !6580
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !6581

lor.rhs:                                          ; preds = %if.then
  %7 = load i8, i8* %sep, align 1, !dbg !6582, !tbaa !3292
  %conv7 = sext i8 %7 to i32, !dbg !6582
  %cmp8 = icmp eq i32 %conv7, 47, !dbg !6582
  br label %lor.end, !dbg !6581

lor.end:                                          ; preds = %lor.rhs, %if.then
  %8 = phi i1 [ true, %if.then ], [ %cmp8, %lor.rhs ]
  store i1 %8, i1* %retval, align 1, !dbg !6583
  br label %return, !dbg !6583

if.else:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !6584
  br label %return, !dbg !6584

return:                                           ; preds = %if.else, %lor.end
  %9 = load i1, i1* %retval, align 1, !dbg !6585
  ret i1 %9, !dbg !6585
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @source_is_dst_backup(i8* %srcbase, %struct.stat* %src_st, i8* %dst_name) #4 !dbg !6586 !ctir !493 {
entry:
  %retval = alloca i1, align 1
  %srcbase.addr = alloca i8*, align 8
  %src_st.addr = alloca %struct.stat*, align 8
  %dst_name.addr = alloca i8*, align 8
  %srcbaselen = alloca i64, align 8, !ctir !55
  %dstbase = alloca i8*, align 8, !ctir !180
  %dstbaselen = alloca i64, align 8, !ctir !55
  %suffixlen = alloca i64, align 8, !ctir !55
  %dstlen = alloca i64, align 8, !ctir !55
  %dst_back = alloca i8*, align 8, !ctir !9
  %dst_back_sb = alloca %struct.stat, align 8, !ctir !415
  %dst_back_status = alloca i32, align 4, !ctir !7
  store i8* %srcbase, i8** %srcbase.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %srcbase.addr, metadata !6587, metadata !DIExpression()), !dbg !6588
  store %struct.stat* %src_st, %struct.stat** %src_st.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.stat** %src_st.addr, metadata !6589, metadata !DIExpression()), !dbg !6590
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6591, metadata !DIExpression()), !dbg !6592
  call void @llvm.dbg.declare(metadata i64* %srcbaselen, metadata !6593, metadata !DIExpression()), !dbg !6594
  %0 = load i8*, i8** %srcbase.addr, align 8, !dbg !6595, !tbaa !2645
  %call = call i64 @strlen(i8* %0) #14, !dbg !6596
  store i64 %call, i64* %srcbaselen, align 8, !dbg !6594, !tbaa !3285
  call void @llvm.dbg.declare(metadata i8** %dstbase, metadata !6597, metadata !DIExpression()), !dbg !6598
  %1 = load i8*, i8** %dst_name.addr, align 8, !dbg !6599, !tbaa !2645
  %call1 = call i8* @last_component(i8* %1) #14, !dbg !6600
  store i8* %call1, i8** %dstbase, align 8, !dbg !6598, !tbaa !2645
  call void @llvm.dbg.declare(metadata i64* %dstbaselen, metadata !6601, metadata !DIExpression()), !dbg !6602
  %2 = load i8*, i8** %dstbase, align 8, !dbg !6603, !tbaa !2645
  %call2 = call i64 @strlen(i8* %2) #14, !dbg !6604
  store i64 %call2, i64* %dstbaselen, align 8, !dbg !6602, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %suffixlen, metadata !6605, metadata !DIExpression()), !dbg !6606
  %3 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !6607, !tbaa !2645
  %call3 = call i64 @strlen(i8* %3) #14, !dbg !6608
  store i64 %call3, i64* %suffixlen, align 8, !dbg !6606, !tbaa !3285
  %4 = load i64, i64* %srcbaselen, align 8, !dbg !6609, !tbaa !3285
  %5 = load i64, i64* %dstbaselen, align 8, !dbg !6611, !tbaa !3285
  %6 = load i64, i64* %suffixlen, align 8, !dbg !6612, !tbaa !3285
  %add = add i64 %5, %6, !dbg !6613
  %cmp = icmp eq i64 %4, %add, !dbg !6614
  br i1 %cmp, label %land.lhs.true, label %if.then, !dbg !6615

land.lhs.true:                                    ; preds = %entry
  %7 = load i8*, i8** %srcbase.addr, align 8, !dbg !6616, !tbaa !2645
  %8 = load i8*, i8** %dstbase, align 8, !dbg !6617, !tbaa !2645
  %9 = load i64, i64* %dstbaselen, align 8, !dbg !6618, !tbaa !3285
  %call4 = call i32 @memcmp(i8* %7, i8* %8, i64 %9) #14, !dbg !6619
  %cmp5 = icmp eq i32 %call4, 0, !dbg !6620
  br i1 %cmp5, label %land.lhs.true6, label %if.then, !dbg !6621

land.lhs.true6:                                   ; preds = %land.lhs.true
  %10 = load i8*, i8** %srcbase.addr, align 8, !dbg !6622, !tbaa !2645
  %11 = load i64, i64* %dstbaselen, align 8, !dbg !6622, !tbaa !3285
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %11, !dbg !6622
  %12 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !6622, !tbaa !2645
  %call7 = call i32 @strcmp(i8* %add.ptr, i8* %12) #14, !dbg !6622
  %cmp8 = icmp eq i32 %call7, 0, !dbg !6622
  br i1 %cmp8, label %if.end, label %if.then, !dbg !6623

if.then:                                          ; preds = %land.lhs.true6, %land.lhs.true, %entry
  store i1 false, i1* %retval, align 1, !dbg !6624
  br label %return, !dbg !6624

if.end:                                           ; preds = %land.lhs.true6
  call void @llvm.dbg.declare(metadata i64* %dstlen, metadata !6625, metadata !DIExpression()), !dbg !6626
  %13 = load i8*, i8** %dst_name.addr, align 8, !dbg !6627, !tbaa !2645
  %call9 = call i64 @strlen(i8* %13) #14, !dbg !6628
  store i64 %call9, i64* %dstlen, align 8, !dbg !6626, !tbaa !3285
  call void @llvm.dbg.declare(metadata i8** %dst_back, metadata !6629, metadata !DIExpression()), !dbg !6630
  %14 = load i64, i64* %dstlen, align 8, !dbg !6631, !tbaa !3285
  %15 = load i64, i64* %suffixlen, align 8, !dbg !6632, !tbaa !3285
  %add10 = add i64 %14, %15, !dbg !6633
  %add11 = add i64 %add10, 1, !dbg !6634
  %call12 = call noalias i8* @xmalloc(i64 %add11), !dbg !6635
  store i8* %call12, i8** %dst_back, align 8, !dbg !6630, !tbaa !2645
  %16 = load i8*, i8** %dst_back, align 8, !dbg !6636, !tbaa !2645
  %17 = load i8*, i8** %dst_name.addr, align 8, !dbg !6637, !tbaa !2645
  %18 = load i64, i64* %dstlen, align 8, !dbg !6638, !tbaa !3285
  %call13 = call i8* @mempcpy(i8* %16, i8* %17, i64 %18) #9, !dbg !6639
  %19 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !6640, !tbaa !2645
  %call14 = call i8* @strcpy(i8* %call13, i8* %19) #9, !dbg !6641
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_back_sb, metadata !6642, metadata !DIExpression()), !dbg !6643
  call void @llvm.dbg.declare(metadata i32* %dst_back_status, metadata !6644, metadata !DIExpression()), !dbg !6645
  %20 = load i8*, i8** %dst_back, align 8, !dbg !6646, !tbaa !2645
  %call15 = call i32 @stat(i8* %20, %struct.stat* %dst_back_sb) #9, !dbg !6647
  store i32 %call15, i32* %dst_back_status, align 4, !dbg !6645, !tbaa !2632
  %21 = load i8*, i8** %dst_back, align 8, !dbg !6648, !tbaa !2645
  call void @free(i8* %21) #9, !dbg !6649
  %22 = load i32, i32* %dst_back_status, align 4, !dbg !6650, !tbaa !2632
  %cmp16 = icmp eq i32 %22, 0, !dbg !6651
  br i1 %cmp16, label %land.rhs, label %land.end22, !dbg !6652

land.rhs:                                         ; preds = %if.end
  %23 = load %struct.stat*, %struct.stat** %src_st.addr, align 8, !dbg !6653, !tbaa !2645
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %23, i32 0, i32 1, !dbg !6653, !ctir !414
  %24 = load i64, i64* %st_ino, align 8, !dbg !6653, !tbaa !4781, !ctir !276
  %st_ino17 = getelementptr inbounds %struct.stat, %struct.stat* %dst_back_sb, i32 0, i32 1, !dbg !6653, !ctir !415
  %25 = load i64, i64* %st_ino17, align 8, !dbg !6653, !tbaa !4781, !ctir !276
  %cmp18 = icmp eq i64 %24, %25, !dbg !6653
  br i1 %cmp18, label %land.rhs19, label %land.end, !dbg !6653

land.rhs19:                                       ; preds = %land.rhs
  %26 = load %struct.stat*, %struct.stat** %src_st.addr, align 8, !dbg !6653, !tbaa !2645
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %26, i32 0, i32 0, !dbg !6653, !ctir !414
  %27 = load i64, i64* %st_dev, align 8, !dbg !6653, !tbaa !4760, !ctir !274
  %st_dev20 = getelementptr inbounds %struct.stat, %struct.stat* %dst_back_sb, i32 0, i32 0, !dbg !6653, !ctir !415
  %28 = load i64, i64* %st_dev20, align 8, !dbg !6653, !tbaa !4760, !ctir !274
  %cmp21 = icmp eq i64 %27, %28, !dbg !6653
  br label %land.end

land.end:                                         ; preds = %land.rhs19, %land.rhs
  %29 = phi i1 [ false, %land.rhs ], [ %cmp21, %land.rhs19 ], !dbg !6654
  br label %land.end22

land.end22:                                       ; preds = %land.end, %if.end
  %30 = phi i1 [ false, %if.end ], [ %29, %land.end ], !dbg !6654
  store i1 %30, i1* %retval, align 1, !dbg !6655
  br label %return, !dbg !6655

return:                                           ; preds = %land.end22, %if.then
  %31 = load i1, i1* %retval, align 1, !dbg !6656
  ret i1 %31, !dbg !6656
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @emit_verbose(i8* %src, i8* %dst, i8* %backup_dst_name) #4 !dbg !6657 !ctir !495 {
entry:
  %src.addr = alloca i8*, align 8
  %dst.addr = alloca i8*, align 8
  %backup_dst_name.addr = alloca i8*, align 8
  store i8* %src, i8** %src.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !6658, metadata !DIExpression()), !dbg !6659
  store i8* %dst, i8** %dst.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !6660, metadata !DIExpression()), !dbg !6661
  store i8* %backup_dst_name, i8** %backup_dst_name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %backup_dst_name.addr, metadata !6662, metadata !DIExpression()), !dbg !6663
  %0 = load i8*, i8** %src.addr, align 8, !dbg !6664, !tbaa !2645
  %call = call i8* @quotearg_n_style(i32 0, i32 4, i8* %0), !dbg !6664
  %1 = load i8*, i8** %dst.addr, align 8, !dbg !6665, !tbaa !2645
  %call1 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %1), !dbg !6665
  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.57.161, i64 0, i64 0), i8* %call, i8* %call1), !dbg !6666
  %2 = load i8*, i8** %backup_dst_name.addr, align 8, !dbg !6667, !tbaa !2645
  %tobool = icmp ne i8* %2, null, !dbg !6667
  br i1 %tobool, label %if.then, label %if.end, !dbg !6669

if.then:                                          ; preds = %entry
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.58.162, i64 0, i64 0)) #9, !dbg !6670
  %3 = load i8*, i8** %backup_dst_name.addr, align 8, !dbg !6671, !tbaa !2645
  %call4 = call i8* @quotearg_style(i32 4, i8* %3), !dbg !6671
  %call5 = call i32 (i8*, ...) @printf(i8* %call3, i8* %call4), !dbg !6672
  br label %if.end, !dbg !6672

if.end:                                           ; preds = %if.then, %entry
  %call6 = call i32 @putchar_unlocked(i32 10), !dbg !6673
  ret void, !dbg !6674
}

; Function Attrs: nounwind
declare dso_local i32 @rename(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @rmdir(i8*) #2

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @is_ancestor(%struct.stat* %sb, %struct.dir_list* %ancestors) #10 !dbg !6675 !ctir !497 {
entry:
  %retval = alloca i1, align 1
  %sb.addr = alloca %struct.stat*, align 8
  %ancestors.addr = alloca %struct.dir_list*, align 8
  store %struct.stat* %sb, %struct.stat** %sb.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.stat** %sb.addr, metadata !6676, metadata !DIExpression()), !dbg !6677
  store %struct.dir_list* %ancestors, %struct.dir_list** %ancestors.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.dir_list** %ancestors.addr, metadata !6678, metadata !DIExpression()), !dbg !6679
  br label %while.cond, !dbg !6680

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !6681, !tbaa !2645
  %cmp = icmp ne %struct.dir_list* %0, null, !dbg !6682
  br i1 %cmp, label %while.body, label %while.end, !dbg !6680

while.body:                                       ; preds = %while.cond
  %1 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !6683, !tbaa !2645
  %ino = getelementptr inbounds %struct.dir_list, %struct.dir_list* %1, i32 0, i32 1, !dbg !6686, !ctir !500
  %2 = load i64, i64* %ino, align 8, !dbg !6686, !tbaa !5431, !ctir !441
  %3 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !6687, !tbaa !2645
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 1, !dbg !6688, !ctir !414
  %4 = load i64, i64* %st_ino, align 8, !dbg !6688, !tbaa !4781, !ctir !276
  %cmp1 = icmp eq i64 %2, %4, !dbg !6689
  br i1 %cmp1, label %land.lhs.true, label %if.end, !dbg !6690

land.lhs.true:                                    ; preds = %while.body
  %5 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !6691, !tbaa !2645
  %dev = getelementptr inbounds %struct.dir_list, %struct.dir_list* %5, i32 0, i32 2, !dbg !6692, !ctir !500
  %6 = load i64, i64* %dev, align 8, !dbg !6692, !tbaa !5436, !ctir !443
  %7 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !6693, !tbaa !2645
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %7, i32 0, i32 0, !dbg !6694, !ctir !414
  %8 = load i64, i64* %st_dev, align 8, !dbg !6694, !tbaa !4760, !ctir !274
  %cmp2 = icmp eq i64 %6, %8, !dbg !6695
  br i1 %cmp2, label %if.then, label %if.end, !dbg !6696

if.then:                                          ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !6697
  br label %return, !dbg !6697

if.end:                                           ; preds = %land.lhs.true, %while.body
  %9 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !6698, !tbaa !2645
  %parent = getelementptr inbounds %struct.dir_list, %struct.dir_list* %9, i32 0, i32 0, !dbg !6699, !ctir !500
  %10 = load %struct.dir_list*, %struct.dir_list** %parent, align 8, !dbg !6699, !tbaa !5425, !ctir !436
  store %struct.dir_list* %10, %struct.dir_list** %ancestors.addr, align 8, !dbg !6700, !tbaa !2645
  br label %while.cond, !dbg !6680, !llvm.loop !6701

while.end:                                        ; preds = %while.cond
  store i1 false, i1* %retval, align 1, !dbg !6703
  br label %return, !dbg !6703

return:                                           ; preds = %while.end, %if.then
  %11 = load i1, i1* %retval, align 1, !dbg !6704
  ret i1 %11, !dbg !6704
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_dir(i8* %src_name_in, i8* %dst_name_in, i1 zeroext %new_dst, %struct.stat* %src_sb, %struct.dir_list* %ancestors, %struct.cp_options* %x, i8* %first_dir_created_per_command_line_arg, i8* %copy_into_self) #4 !dbg !6705 !ctir !501 {
entry:
  %retval = alloca i1, align 1
  %src_name_in.addr = alloca i8*, align 8
  %dst_name_in.addr = alloca i8*, align 8
  %new_dst.addr = alloca i8, align 1
  %src_sb.addr = alloca %struct.stat*, align 8
  %ancestors.addr = alloca %struct.dir_list*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %first_dir_created_per_command_line_arg.addr = alloca i8*, align 8
  %copy_into_self.addr = alloca i8*, align 8
  %name_space = alloca i8*, align 8, !ctir !9
  %namep = alloca i8*, align 8, !ctir !9
  %non_command_line_options = alloca %struct.cp_options, align 8, !ctir !358
  %ok = alloca i8, align 1, !ctir !142
  %new_first_dir_created = alloca i8, align 1, !ctir !142
  %local_copy_into_self = alloca i8, align 1, !ctir !142
  %src_name = alloca i8*, align 8, !ctir !9
  %dst_name = alloca i8*, align 8, !ctir !9
  %first_dir_created = alloca i8, align 1, !ctir !142
  store i8* %src_name_in, i8** %src_name_in.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %src_name_in.addr, metadata !6706, metadata !DIExpression()), !dbg !6707
  store i8* %dst_name_in, i8** %dst_name_in.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dst_name_in.addr, metadata !6708, metadata !DIExpression()), !dbg !6709
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !6710, metadata !DIExpression()), !dbg !6711
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !6712, metadata !DIExpression()), !dbg !6713
  store %struct.dir_list* %ancestors, %struct.dir_list** %ancestors.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.dir_list** %ancestors.addr, metadata !6714, metadata !DIExpression()), !dbg !6715
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6716, metadata !DIExpression()), !dbg !6717
  store i8* %first_dir_created_per_command_line_arg, i8** %first_dir_created_per_command_line_arg.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %first_dir_created_per_command_line_arg.addr, metadata !6718, metadata !DIExpression()), !dbg !6719
  store i8* %copy_into_self, i8** %copy_into_self.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %copy_into_self.addr, metadata !6720, metadata !DIExpression()), !dbg !6721
  call void @llvm.dbg.declare(metadata i8** %name_space, metadata !6722, metadata !DIExpression()), !dbg !6723
  call void @llvm.dbg.declare(metadata i8** %namep, metadata !6724, metadata !DIExpression()), !dbg !6725
  call void @llvm.dbg.declare(metadata %struct.cp_options* %non_command_line_options, metadata !6726, metadata !DIExpression()), !dbg !6727
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6728, !tbaa !2645
  %1 = bitcast %struct.cp_options* %non_command_line_options to i8*, !dbg !6729
  %2 = bitcast %struct.cp_options* %0 to i8*, !dbg !6729
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 80, i1 false), !dbg !6729, !tbaa.struct !6730
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !6731, metadata !DIExpression()), !dbg !6732
  store i8 1, i8* %ok, align 1, !dbg !6732, !tbaa !2739
  %3 = load i8*, i8** %src_name_in.addr, align 8, !dbg !6733, !tbaa !2645
  %call = call i8* @savedir(i8* %3, i32 2), !dbg !6734
  store i8* %call, i8** %name_space, align 8, !dbg !6735, !tbaa !2645
  %4 = load i8*, i8** %name_space, align 8, !dbg !6736, !tbaa !2645
  %cmp = icmp eq i8* %4, null, !dbg !6738
  br i1 %cmp, label %if.then, label %if.end, !dbg !6739

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !6740
  %5 = load i32, i32* %call1, align 4, !dbg !6740, !tbaa !2632, !ctir !7
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.59.160, i64 0, i64 0)) #9, !dbg !6742
  %6 = load i8*, i8** %src_name_in.addr, align 8, !dbg !6743, !tbaa !2645
  %call3 = call i8* @quotearg_style(i32 4, i8* %6), !dbg !6743
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %5, i8* %call2, i8* %call3), !dbg !6744
  store i1 false, i1* %retval, align 1, !dbg !6745
  br label %return, !dbg !6745

if.end:                                           ; preds = %entry
  %7 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6746, !tbaa !2645
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 1, !dbg !6748, !ctir !357
  %8 = load i32, i32* %dereference, align 4, !dbg !6748, !tbaa !3144, !ctir !76
  %cmp4 = icmp eq i32 %8, 3, !dbg !6749
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !6750

if.then5:                                         ; preds = %if.end
  %dereference6 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %non_command_line_options, i32 0, i32 1, !dbg !6751, !ctir !358
  store i32 2, i32* %dereference6, align 4, !dbg !6752, !tbaa !3144, !ctir !76
  br label %if.end7, !dbg !6753

if.end7:                                          ; preds = %if.then5, %if.end
  call void @llvm.dbg.declare(metadata i8* %new_first_dir_created, metadata !6754, metadata !DIExpression()), !dbg !6755
  store i8 0, i8* %new_first_dir_created, align 1, !dbg !6755, !tbaa !2739
  %9 = load i8*, i8** %name_space, align 8, !dbg !6756, !tbaa !2645
  store i8* %9, i8** %namep, align 8, !dbg !6757, !tbaa !2645
  br label %while.cond, !dbg !6758

while.cond:                                       ; preds = %if.end28, %if.end7
  %10 = load i8*, i8** %namep, align 8, !dbg !6759, !tbaa !2645
  %11 = load i8, i8* %10, align 1, !dbg !6760, !tbaa !3292, !ctir !10
  %conv = sext i8 %11 to i32, !dbg !6760
  %cmp8 = icmp ne i32 %conv, 0, !dbg !6761
  br i1 %cmp8, label %while.body, label %while.end, !dbg !6758

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8* %local_copy_into_self, metadata !6762, metadata !DIExpression()), !dbg !6764
  call void @llvm.dbg.declare(metadata i8** %src_name, metadata !6765, metadata !DIExpression()), !dbg !6766
  %12 = load i8*, i8** %src_name_in.addr, align 8, !dbg !6767, !tbaa !2645
  %13 = load i8*, i8** %namep, align 8, !dbg !6768, !tbaa !2645
  %call10 = call i8* @file_name_concat(i8* %12, i8* %13, i8** null), !dbg !6769
  store i8* %call10, i8** %src_name, align 8, !dbg !6766, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dst_name, metadata !6770, metadata !DIExpression()), !dbg !6771
  %14 = load i8*, i8** %dst_name_in.addr, align 8, !dbg !6772, !tbaa !2645
  %15 = load i8*, i8** %namep, align 8, !dbg !6773, !tbaa !2645
  %call11 = call i8* @file_name_concat(i8* %14, i8* %15, i8** null), !dbg !6774
  store i8* %call11, i8** %dst_name, align 8, !dbg !6771, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8* %first_dir_created, metadata !6775, metadata !DIExpression()), !dbg !6776
  %16 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !6777, !tbaa !2645
  %17 = load i8, i8* %16, align 1, !dbg !6778, !tbaa !2739
  %tobool = trunc i8 %17 to i1, !dbg !6778, !ctir !142
  %frombool12 = zext i1 %tobool to i8, !dbg !6776
  store i8 %frombool12, i8* %first_dir_created, align 1, !dbg !6776, !tbaa !2739
  %18 = load i8*, i8** %src_name, align 8, !dbg !6779, !tbaa !2645
  %19 = load i8*, i8** %dst_name, align 8, !dbg !6780, !tbaa !2645
  %20 = load i8, i8* %new_dst.addr, align 1, !dbg !6781, !tbaa !2739
  %tobool13 = trunc i8 %20 to i1, !dbg !6781
  %21 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6782, !tbaa !2645
  %22 = load %struct.dir_list*, %struct.dir_list** %ancestors.addr, align 8, !dbg !6783, !tbaa !2645
  %call14 = call zeroext i1 @copy_internal(i8* %18, i8* %19, i1 zeroext %tobool13, %struct.stat* %21, %struct.dir_list* %22, %struct.cp_options* %non_command_line_options, i1 zeroext false, i8* %first_dir_created, i8* %local_copy_into_self, i8* null), !dbg !6784
  %conv15 = zext i1 %call14 to i32, !dbg !6784
  %23 = load i8, i8* %ok, align 1, !dbg !6785, !tbaa !2739
  %tobool16 = trunc i8 %23 to i1, !dbg !6785
  %conv17 = zext i1 %tobool16 to i32, !dbg !6785
  %and = and i32 %conv17, %conv15, !dbg !6785
  %tobool18 = icmp ne i32 %and, 0, !dbg !6785
  %frombool19 = zext i1 %tobool18 to i8, !dbg !6785
  store i8 %frombool19, i8* %ok, align 1, !dbg !6785, !tbaa !2739
  %24 = load i8, i8* %local_copy_into_self, align 1, !dbg !6786, !tbaa !2739
  %tobool20 = trunc i8 %24 to i1, !dbg !6786
  %conv21 = zext i1 %tobool20 to i32, !dbg !6786
  %25 = load i8*, i8** %copy_into_self.addr, align 8, !dbg !6787, !tbaa !2645
  %26 = load i8, i8* %25, align 1, !dbg !6788, !tbaa !2739
  %tobool22 = trunc i8 %26 to i1, !dbg !6788, !ctir !142
  %conv23 = zext i1 %tobool22 to i32, !dbg !6788
  %or = or i32 %conv23, %conv21, !dbg !6788
  %tobool24 = icmp ne i32 %or, 0, !dbg !6788
  %frombool25 = zext i1 %tobool24 to i8, !dbg !6788
  store i8 %frombool25, i8* %25, align 1, !dbg !6788, !tbaa !2739, !ctir !142
  %27 = load i8*, i8** %dst_name, align 8, !dbg !6789, !tbaa !2645
  call void @free(i8* %27) #9, !dbg !6790
  %28 = load i8*, i8** %src_name, align 8, !dbg !6791, !tbaa !2645
  call void @free(i8* %28) #9, !dbg !6792
  %29 = load i8, i8* %local_copy_into_self, align 1, !dbg !6793, !tbaa !2739
  %tobool26 = trunc i8 %29 to i1, !dbg !6793
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !6795

if.then27:                                        ; preds = %while.body
  br label %while.end, !dbg !6796

if.end28:                                         ; preds = %while.body
  %30 = load i8, i8* %first_dir_created, align 1, !dbg !6797, !tbaa !2739
  %tobool29 = trunc i8 %30 to i1, !dbg !6797
  %conv30 = zext i1 %tobool29 to i32, !dbg !6797
  %31 = load i8, i8* %new_first_dir_created, align 1, !dbg !6798, !tbaa !2739
  %tobool31 = trunc i8 %31 to i1, !dbg !6798
  %conv32 = zext i1 %tobool31 to i32, !dbg !6798
  %or33 = or i32 %conv32, %conv30, !dbg !6798
  %tobool34 = icmp ne i32 %or33, 0, !dbg !6798
  %frombool35 = zext i1 %tobool34 to i8, !dbg !6798
  store i8 %frombool35, i8* %new_first_dir_created, align 1, !dbg !6798, !tbaa !2739
  %32 = load i8*, i8** %namep, align 8, !dbg !6799, !tbaa !2645
  %call36 = call i64 @strlen(i8* %32) #14, !dbg !6800
  %add = add i64 %call36, 1, !dbg !6801
  %33 = load i8*, i8** %namep, align 8, !dbg !6802, !tbaa !2645
  %add.ptr = getelementptr inbounds i8, i8* %33, i64 %add, !dbg !6802
  store i8* %add.ptr, i8** %namep, align 8, !dbg !6802, !tbaa !2645
  br label %while.cond, !dbg !6758, !llvm.loop !6803

while.end:                                        ; preds = %if.then27, %while.cond
  %34 = load i8*, i8** %name_space, align 8, !dbg !6805, !tbaa !2645
  call void @free(i8* %34) #9, !dbg !6806
  %35 = load i8, i8* %new_first_dir_created, align 1, !dbg !6807, !tbaa !2739
  %tobool37 = trunc i8 %35 to i1, !dbg !6807
  %36 = load i8*, i8** %first_dir_created_per_command_line_arg.addr, align 8, !dbg !6808, !tbaa !2645
  %frombool38 = zext i1 %tobool37 to i8, !dbg !6809
  store i8 %frombool38, i8* %36, align 1, !dbg !6809, !tbaa !2739, !ctir !142
  %37 = load i8, i8* %ok, align 1, !dbg !6810, !tbaa !2739
  %tobool39 = trunc i8 %37 to i1, !dbg !6810
  store i1 %tobool39, i1* %retval, align 1, !dbg !6811
  br label %return, !dbg !6811

return:                                           ; preds = %while.end, %if.then
  %38 = load i1, i1* %retval, align 1, !dbg !6812
  ret i1 %38, !dbg !6812
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_reg(i8* %src_name, i8* %dst_name, %struct.cp_options* %x, i32 %dst_mode, i32 %omitted_permissions, i8* %new_dst, %struct.stat* %src_sb) #4 !dbg !6813 !ctir !503 {
entry:
  %retval = alloca i1, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %x.addr = alloca %struct.cp_options*, align 8
  %dst_mode.addr = alloca i32, align 4
  %omitted_permissions.addr = alloca i32, align 4
  %new_dst.addr = alloca i8*, align 8
  %src_sb.addr = alloca %struct.stat*, align 8
  %buf = alloca i8*, align 8, !ctir !9
  %buf_alloc = alloca i8*, align 8, !ctir !9
  %name_alloc = alloca i8*, align 8, !ctir !9
  %dest_desc = alloca i32, align 4, !ctir !7
  %dest_errno = alloca i32, align 4, !ctir !7
  %source_desc = alloca i32, align 4, !ctir !7
  %src_mode = alloca i32, align 4, !ctir !139
  %sb = alloca %struct.stat, align 8, !ctir !415
  %src_open_sb = alloca %struct.stat, align 8, !ctir !415
  %return_val = alloca i8, align 1, !ctir !142
  %data_copy_required = alloca i8, align 1, !ctir !142
  %open_flags = alloca i32, align 4, !ctir !7
  %open_flags72 = alloca i32, align 4, !ctir !7
  %dangling_link_sb = alloca %struct.stat, align 8, !ctir !415
  %clone_ok = alloca i8, align 1, !ctir !142
  %buf_alignment = alloca i64, align 8, !ctir !55
  %buf_size = alloca i64, align 8, !ctir !55
  %hole_size = alloca i64, align 8, !ctir !55
  %make_holes = alloca i8, align 1, !ctir !142
  %sparse_src = alloca i8, align 1, !ctir !142
  %blcm_max = alloca i64, align 8, !ctir !55
  %blcm = alloca i64, align 8, !ctir !55
  %normal_copy_required = alloca i8, align 1, !ctir !142
  %n_read = alloca i64, align 8, !ctir !352
  %wrote_hole_at_eof = alloca i8, align 1, !ctir !142
  %timespec = alloca [2 x %struct.timespec], align 16, !ctir !445
  %tmp = alloca %struct.timespec, align 8
  %tmp271 = alloca %struct.timespec, align 8
  %access_changed = alloca i8, align 1, !ctir !142
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !6814, metadata !DIExpression()), !dbg !6815
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !6816, metadata !DIExpression()), !dbg !6817
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !6818, metadata !DIExpression()), !dbg !6819
  store i32 %dst_mode, i32* %dst_mode.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %dst_mode.addr, metadata !6820, metadata !DIExpression()), !dbg !6821
  store i32 %omitted_permissions, i32* %omitted_permissions.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %omitted_permissions.addr, metadata !6822, metadata !DIExpression()), !dbg !6823
  store i8* %new_dst, i8** %new_dst.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %new_dst.addr, metadata !6824, metadata !DIExpression()), !dbg !6825
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !6826, metadata !DIExpression()), !dbg !6827
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !6828, metadata !DIExpression()), !dbg !6829
  call void @llvm.dbg.declare(metadata i8** %buf_alloc, metadata !6830, metadata !DIExpression()), !dbg !6831
  store i8* null, i8** %buf_alloc, align 8, !dbg !6831, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %name_alloc, metadata !6832, metadata !DIExpression()), !dbg !6833
  store i8* null, i8** %name_alloc, align 8, !dbg !6833, !tbaa !2645
  call void @llvm.dbg.declare(metadata i32* %dest_desc, metadata !6834, metadata !DIExpression()), !dbg !6835
  call void @llvm.dbg.declare(metadata i32* %dest_errno, metadata !6836, metadata !DIExpression()), !dbg !6837
  call void @llvm.dbg.declare(metadata i32* %source_desc, metadata !6838, metadata !DIExpression()), !dbg !6839
  call void @llvm.dbg.declare(metadata i32* %src_mode, metadata !6840, metadata !DIExpression()), !dbg !6841
  %0 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6842, !tbaa !2645
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !6843, !ctir !414
  %1 = load i32, i32* %st_mode, align 8, !dbg !6843, !tbaa !2911, !ctir !140
  store i32 %1, i32* %src_mode, align 4, !dbg !6841, !tbaa !2632
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !6844, metadata !DIExpression()), !dbg !6845
  call void @llvm.dbg.declare(metadata %struct.stat* %src_open_sb, metadata !6846, metadata !DIExpression()), !dbg !6847
  call void @llvm.dbg.declare(metadata i8* %return_val, metadata !6848, metadata !DIExpression()), !dbg !6849
  store i8 1, i8* %return_val, align 1, !dbg !6849, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %data_copy_required, metadata !6850, metadata !DIExpression()), !dbg !6851
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6852, !tbaa !2645
  %data_copy_required1 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 20, !dbg !6853, !ctir !357
  %3 = load i8, i8* %data_copy_required1, align 1, !dbg !6853, !tbaa !3199
  %tobool = trunc i8 %3 to i1, !dbg !6853, !ctir !142
  %frombool = zext i1 %tobool to i8, !dbg !6851
  store i8 %frombool, i8* %data_copy_required, align 1, !dbg !6851, !tbaa !2739
  %4 = load i8*, i8** %src_name.addr, align 8, !dbg !6854, !tbaa !2645
  %5 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6855, !tbaa !2645
  %dereference = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 1, !dbg !6856, !ctir !357
  %6 = load i32, i32* %dereference, align 4, !dbg !6856, !tbaa !3144, !ctir !76
  %cmp = icmp eq i32 %6, 2, !dbg !6857
  %7 = zext i1 %cmp to i64, !dbg !6855
  %cond = select i1 %cmp, i32 131072, i32 0, !dbg !6855
  %or = or i32 0, %cond, !dbg !6858
  %call = call i32 (i8*, i32, ...) @open_safer(i8* %4, i32 %or), !dbg !6859
  store i32 %call, i32* %source_desc, align 4, !dbg !6860, !tbaa !2632
  %8 = load i32, i32* %source_desc, align 4, !dbg !6861, !tbaa !2632
  %cmp2 = icmp slt i32 %8, 0, !dbg !6863
  br i1 %cmp2, label %if.then, label %if.end, !dbg !6864

if.then:                                          ; preds = %entry
  %call3 = call i32* @__errno_location() #16, !dbg !6865
  %9 = load i32, i32* %call3, align 4, !dbg !6865, !tbaa !2632, !ctir !7
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.60.145, i64 0, i64 0)) #9, !dbg !6867
  %10 = load i8*, i8** %src_name.addr, align 8, !dbg !6868, !tbaa !2645
  %call5 = call i8* @quotearg_style(i32 4, i8* %10), !dbg !6868
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %9, i8* %call4, i8* %call5), !dbg !6869
  store i1 false, i1* %retval, align 1, !dbg !6870
  br label %return, !dbg !6870

if.end:                                           ; preds = %entry
  %11 = load i32, i32* %source_desc, align 4, !dbg !6871, !tbaa !2632
  %call6 = call i32 @fstat(i32 %11, %struct.stat* %src_open_sb) #9, !dbg !6873
  %cmp7 = icmp ne i32 %call6, 0, !dbg !6874
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !6875

if.then8:                                         ; preds = %if.end
  %call9 = call i32* @__errno_location() #16, !dbg !6876
  %12 = load i32, i32* %call9, align 4, !dbg !6876, !tbaa !2632, !ctir !7
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61.146, i64 0, i64 0)) #9, !dbg !6878
  %13 = load i8*, i8** %src_name.addr, align 8, !dbg !6879, !tbaa !2645
  %call11 = call i8* @quotearg_style(i32 4, i8* %13), !dbg !6879
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %12, i8* %call10, i8* %call11), !dbg !6880
  store i8 0, i8* %return_val, align 1, !dbg !6881, !tbaa !2739
  br label %close_src_desc, !dbg !6882

if.end12:                                         ; preds = %if.end
  %14 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6883, !tbaa !2645
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %14, i32 0, i32 1, !dbg !6883, !ctir !414
  %15 = load i64, i64* %st_ino, align 8, !dbg !6883, !tbaa !4781, !ctir !276
  %st_ino13 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 1, !dbg !6883, !ctir !415
  %16 = load i64, i64* %st_ino13, align 8, !dbg !6883, !tbaa !4781, !ctir !276
  %cmp14 = icmp eq i64 %15, %16, !dbg !6883
  br i1 %cmp14, label %land.lhs.true, label %if.then17, !dbg !6883

land.lhs.true:                                    ; preds = %if.end12
  %17 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !6883, !tbaa !2645
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 0, !dbg !6883, !ctir !414
  %18 = load i64, i64* %st_dev, align 8, !dbg !6883, !tbaa !4760, !ctir !274
  %st_dev15 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 0, !dbg !6883, !ctir !415
  %19 = load i64, i64* %st_dev15, align 8, !dbg !6883, !tbaa !4760, !ctir !274
  %cmp16 = icmp eq i64 %18, %19, !dbg !6883
  br i1 %cmp16, label %if.end20, label %if.then17, !dbg !6885

if.then17:                                        ; preds = %land.lhs.true, %if.end12
  %call18 = call i8* @gettext(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.62.147, i64 0, i64 0)) #9, !dbg !6886
  %20 = load i8*, i8** %src_name.addr, align 8, !dbg !6888, !tbaa !2645
  %call19 = call i8* @quotearg_style(i32 4, i8* %20), !dbg !6888
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call18, i8* %call19), !dbg !6889
  store i8 0, i8* %return_val, align 1, !dbg !6890, !tbaa !2739
  br label %close_src_desc, !dbg !6891

if.end20:                                         ; preds = %land.lhs.true
  %21 = load i8*, i8** %new_dst.addr, align 8, !dbg !6892, !tbaa !2645
  %22 = load i8, i8* %21, align 1, !dbg !6894, !tbaa !2739
  %tobool21 = trunc i8 %22 to i1, !dbg !6894, !ctir !142
  br i1 %tobool21, label %if.end69, label %if.then22, !dbg !6895

if.then22:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata i32* %open_flags, metadata !6896, metadata !DIExpression()), !dbg !6898
  %23 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6899, !tbaa !2645
  %data_copy_required23 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %23, i32 0, i32 20, !dbg !6900, !ctir !357
  %24 = load i8, i8* %data_copy_required23, align 1, !dbg !6900, !tbaa !3199
  %tobool24 = trunc i8 %24 to i1, !dbg !6900, !ctir !142
  %25 = zext i1 %tobool24 to i64, !dbg !6899
  %cond25 = select i1 %tobool24, i32 512, i32 0, !dbg !6899
  %or26 = or i32 1, %cond25, !dbg !6901
  store i32 %or26, i32* %open_flags, align 4, !dbg !6898, !tbaa !2632
  %26 = load i8*, i8** %dst_name.addr, align 8, !dbg !6902, !tbaa !2645
  %27 = load i32, i32* %open_flags, align 4, !dbg !6903, !tbaa !2632
  %call27 = call i32 (i8*, i32, ...) @open_safer(i8* %26, i32 %27), !dbg !6904
  store i32 %call27, i32* %dest_desc, align 4, !dbg !6905, !tbaa !2632
  %call28 = call i32* @__errno_location() #16, !dbg !6906
  %28 = load i32, i32* %call28, align 4, !dbg !6906, !tbaa !2632, !ctir !7
  store i32 %28, i32* %dest_errno, align 4, !dbg !6907, !tbaa !2632
  %29 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6908, !tbaa !2645
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %29, i32 0, i32 18, !dbg !6910, !ctir !357
  %30 = load i8, i8* %set_security_context, align 1, !dbg !6910, !tbaa !2863
  %tobool29 = trunc i8 %30 to i1, !dbg !6910, !ctir !142
  br i1 %tobool29, label %land.lhs.true31, label %lor.lhs.false, !dbg !6911

lor.lhs.false:                                    ; preds = %if.then22
  %31 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6912, !tbaa !2645
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %31, i32 0, i32 22, !dbg !6913, !ctir !357
  %32 = load i8, i8* %preserve_security_context, align 1, !dbg !6913, !tbaa !2847
  %tobool30 = trunc i8 %32 to i1, !dbg !6913, !ctir !142
  br i1 %tobool30, label %land.lhs.true31, label %if.end42, !dbg !6914

land.lhs.true31:                                  ; preds = %lor.lhs.false, %if.then22
  %33 = load i32, i32* %dest_desc, align 4, !dbg !6915, !tbaa !2632
  %cmp32 = icmp sle i32 0, %33, !dbg !6916
  br i1 %cmp32, label %if.then33, label %if.end42, !dbg !6917

if.then33:                                        ; preds = %land.lhs.true31
  %34 = load i8*, i8** %dst_name.addr, align 8, !dbg !6918, !tbaa !2645
  %35 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6921, !tbaa !2645
  %preserve_security_context34 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %35, i32 0, i32 22, !dbg !6922, !ctir !357
  %36 = load i8, i8* %preserve_security_context34, align 1, !dbg !6922, !tbaa !2847
  %tobool35 = trunc i8 %36 to i1, !dbg !6922, !ctir !142
  %37 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6923, !tbaa !2645
  %call36 = call zeroext i1 @set_file_security_ctx(i8* %34, i1 zeroext %tobool35, i1 zeroext false, %struct.cp_options* %37), !dbg !6924
  br i1 %call36, label %if.end41, label %if.then37, !dbg !6925

if.then37:                                        ; preds = %if.then33
  %38 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6926, !tbaa !2645
  %require_preserve_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %38, i32 0, i32 23, !dbg !6929, !ctir !357
  %39 = load i8, i8* %require_preserve_context, align 2, !dbg !6929, !tbaa !3246
  %tobool38 = trunc i8 %39 to i1, !dbg !6929, !ctir !142
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !6930

if.then39:                                        ; preds = %if.then37
  store i8 0, i8* %return_val, align 1, !dbg !6931, !tbaa !2739
  br label %close_src_and_dst_desc, !dbg !6933

if.end40:                                         ; preds = %if.then37
  br label %if.end41, !dbg !6934

if.end41:                                         ; preds = %if.end40, %if.then33
  br label %if.end42, !dbg !6935

if.end42:                                         ; preds = %if.end41, %land.lhs.true31, %lor.lhs.false
  %40 = load i32, i32* %dest_desc, align 4, !dbg !6936, !tbaa !2632
  %cmp43 = icmp slt i32 %40, 0, !dbg !6938
  br i1 %cmp43, label %land.lhs.true44, label %if.end68, !dbg !6939

land.lhs.true44:                                  ; preds = %if.end42
  %41 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6940, !tbaa !2645
  %unlink_dest_after_failed_open = getelementptr inbounds %struct.cp_options, %struct.cp_options* %41, i32 0, i32 7, !dbg !6941, !ctir !357
  %42 = load i8, i8* %unlink_dest_after_failed_open, align 2, !dbg !6941, !tbaa !3152
  %tobool45 = trunc i8 %42 to i1, !dbg !6941, !ctir !142
  br i1 %tobool45, label %if.then46, label %if.end68, !dbg !6942

if.then46:                                        ; preds = %land.lhs.true44
  %43 = load i8*, i8** %dst_name.addr, align 8, !dbg !6943, !tbaa !2645
  %call47 = call i32 @unlink(i8* %43) #9, !dbg !6946
  %cmp48 = icmp ne i32 %call47, 0, !dbg !6947
  br i1 %cmp48, label %if.then49, label %if.end53, !dbg !6948

if.then49:                                        ; preds = %if.then46
  %call50 = call i32* @__errno_location() #16, !dbg !6949
  %44 = load i32, i32* %call50, align 4, !dbg !6949, !tbaa !2632, !ctir !7
  %call51 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24.114, i64 0, i64 0)) #9, !dbg !6951
  %45 = load i8*, i8** %dst_name.addr, align 8, !dbg !6952, !tbaa !2645
  %call52 = call i8* @quotearg_style(i32 4, i8* %45), !dbg !6952
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %44, i8* %call51, i8* %call52), !dbg !6953
  store i8 0, i8* %return_val, align 1, !dbg !6954, !tbaa !2739
  br label %close_src_desc, !dbg !6955

if.end53:                                         ; preds = %if.then46
  %46 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6956, !tbaa !2645
  %verbose = getelementptr inbounds %struct.cp_options, %struct.cp_options* %46, i32 0, i32 31, !dbg !6958, !ctir !357
  %47 = load i8, i8* %verbose, align 2, !dbg !6958, !tbaa !2809
  %tobool54 = trunc i8 %47 to i1, !dbg !6958, !ctir !142
  br i1 %tobool54, label %if.then55, label %if.end59, !dbg !6959

if.then55:                                        ; preds = %if.end53
  %call56 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25.115, i64 0, i64 0)) #9, !dbg !6960
  %48 = load i8*, i8** %dst_name.addr, align 8, !dbg !6961, !tbaa !2645
  %call57 = call i8* @quotearg_style(i32 4, i8* %48), !dbg !6961
  %call58 = call i32 (i8*, ...) @printf(i8* %call56, i8* %call57), !dbg !6962
  br label %if.end59, !dbg !6962

if.end59:                                         ; preds = %if.then55, %if.end53
  %49 = load i8*, i8** %new_dst.addr, align 8, !dbg !6963, !tbaa !2645
  store i8 1, i8* %49, align 1, !dbg !6964, !tbaa !2739, !ctir !142
  %50 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6965, !tbaa !2645
  %set_security_context60 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %50, i32 0, i32 18, !dbg !6967, !ctir !357
  %51 = load i8, i8* %set_security_context60, align 1, !dbg !6967, !tbaa !2863
  %tobool61 = trunc i8 %51 to i1, !dbg !6967, !ctir !142
  br i1 %tobool61, label %if.then62, label %if.end67, !dbg !6968

if.then62:                                        ; preds = %if.end59
  %52 = load i8*, i8** %src_name.addr, align 8, !dbg !6969, !tbaa !2645
  %53 = load i8*, i8** %dst_name.addr, align 8, !dbg !6972, !tbaa !2645
  %54 = load i32, i32* %dst_mode.addr, align 4, !dbg !6973, !tbaa !2632
  %55 = load i8*, i8** %new_dst.addr, align 8, !dbg !6974, !tbaa !2645
  %56 = load i8, i8* %55, align 1, !dbg !6975, !tbaa !2739
  %tobool63 = trunc i8 %56 to i1, !dbg !6975, !ctir !142
  %57 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !6976, !tbaa !2645
  %call64 = call zeroext i1 @set_process_security_ctx(i8* %52, i8* %53, i32 %54, i1 zeroext %tobool63, %struct.cp_options* %57), !dbg !6977
  br i1 %call64, label %if.end66, label %if.then65, !dbg !6978

if.then65:                                        ; preds = %if.then62
  store i8 0, i8* %return_val, align 1, !dbg !6979, !tbaa !2739
  br label %close_src_desc, !dbg !6981

if.end66:                                         ; preds = %if.then62
  br label %if.end67, !dbg !6982

if.end67:                                         ; preds = %if.end66, %if.end59
  br label %if.end68, !dbg !6983

if.end68:                                         ; preds = %if.end67, %land.lhs.true44, %if.end42
  br label %if.end69, !dbg !6984

if.end69:                                         ; preds = %if.end68, %if.end20
  %58 = load i8*, i8** %new_dst.addr, align 8, !dbg !6985, !tbaa !2645
  %59 = load i8, i8* %58, align 1, !dbg !6987, !tbaa !2739
  %tobool70 = trunc i8 %59 to i1, !dbg !6987, !ctir !142
  br i1 %tobool70, label %if.then71, label %if.else112, !dbg !6988

if.then71:                                        ; preds = %if.end69
  br label %open_with_O_CREAT, !dbg !6989

open_with_O_CREAT:                                ; preds = %if.then124, %if.then71
  call void @llvm.dbg.label(metadata !6990), !dbg !6992
  call void @llvm.dbg.declare(metadata i32* %open_flags72, metadata !6993, metadata !DIExpression()), !dbg !6994
  store i32 65, i32* %open_flags72, align 4, !dbg !6994, !tbaa !2632
  %60 = load i8*, i8** %dst_name.addr, align 8, !dbg !6995, !tbaa !2645
  %61 = load i32, i32* %open_flags72, align 4, !dbg !6996, !tbaa !2632
  %or73 = or i32 %61, 128, !dbg !6997
  %62 = load i32, i32* %dst_mode.addr, align 4, !dbg !6998, !tbaa !2632
  %63 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !6999, !tbaa !2632
  %neg = xor i32 %63, -1, !dbg !7000
  %and = and i32 %62, %neg, !dbg !7001
  %call74 = call i32 (i8*, i32, ...) @open_safer(i8* %60, i32 %or73, i32 %and), !dbg !7002
  store i32 %call74, i32* %dest_desc, align 4, !dbg !7003, !tbaa !2632
  %call75 = call i32* @__errno_location() #16, !dbg !7004
  %64 = load i32, i32* %call75, align 4, !dbg !7004, !tbaa !2632, !ctir !7
  store i32 %64, i32* %dest_errno, align 4, !dbg !7005, !tbaa !2632
  %65 = load i32, i32* %dest_desc, align 4, !dbg !7006, !tbaa !2632
  %cmp76 = icmp slt i32 %65, 0, !dbg !7008
  br i1 %cmp76, label %land.lhs.true77, label %if.end99, !dbg !7009

land.lhs.true77:                                  ; preds = %open_with_O_CREAT
  %66 = load i32, i32* %dest_errno, align 4, !dbg !7010, !tbaa !2632
  %cmp78 = icmp eq i32 %66, 17, !dbg !7011
  br i1 %cmp78, label %land.lhs.true79, label %if.end99, !dbg !7012

land.lhs.true79:                                  ; preds = %land.lhs.true77
  %67 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7013, !tbaa !2645
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %67, i32 0, i32 9, !dbg !7014, !ctir !357
  %68 = load i8, i8* %move_mode, align 8, !dbg !7014, !tbaa !3164
  %tobool80 = trunc i8 %68 to i1, !dbg !7014, !ctir !142
  br i1 %tobool80, label %if.end99, label %if.then81, !dbg !7015

if.then81:                                        ; preds = %land.lhs.true79
  call void @llvm.dbg.declare(metadata %struct.stat* %dangling_link_sb, metadata !7016, metadata !DIExpression()), !dbg !7018
  %69 = load i8*, i8** %dst_name.addr, align 8, !dbg !7019, !tbaa !2645
  %call82 = call i32 @lstat(i8* %69, %struct.stat* %dangling_link_sb) #9, !dbg !7021
  %cmp83 = icmp eq i32 %call82, 0, !dbg !7022
  br i1 %cmp83, label %land.lhs.true84, label %if.end98, !dbg !7023

land.lhs.true84:                                  ; preds = %if.then81
  %st_mode85 = getelementptr inbounds %struct.stat, %struct.stat* %dangling_link_sb, i32 0, i32 3, !dbg !7024, !ctir !415
  %70 = load i32, i32* %st_mode85, align 8, !dbg !7024, !tbaa !2911, !ctir !140
  %and86 = and i32 %70, 61440, !dbg !7024
  %cmp87 = icmp eq i32 %and86, 40960, !dbg !7024
  br i1 %cmp87, label %if.then88, label %if.end98, !dbg !7025

if.then88:                                        ; preds = %land.lhs.true84
  %71 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7026, !tbaa !2645
  %open_dangling_dest_symlink = getelementptr inbounds %struct.cp_options, %struct.cp_options* %71, i32 0, i32 33, !dbg !7029, !ctir !357
  %72 = load i8, i8* %open_dangling_dest_symlink, align 8, !dbg !7029, !tbaa !3238
  %tobool89 = trunc i8 %72 to i1, !dbg !7029, !ctir !142
  br i1 %tobool89, label %if.then90, label %if.else, !dbg !7030

if.then90:                                        ; preds = %if.then88
  %73 = load i8*, i8** %dst_name.addr, align 8, !dbg !7031, !tbaa !2645
  %74 = load i32, i32* %open_flags72, align 4, !dbg !7033, !tbaa !2632
  %75 = load i32, i32* %dst_mode.addr, align 4, !dbg !7034, !tbaa !2632
  %76 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7035, !tbaa !2632
  %neg91 = xor i32 %76, -1, !dbg !7036
  %and92 = and i32 %75, %neg91, !dbg !7037
  %call93 = call i32 (i8*, i32, ...) @open_safer(i8* %73, i32 %74, i32 %and92), !dbg !7038
  store i32 %call93, i32* %dest_desc, align 4, !dbg !7039, !tbaa !2632
  %call94 = call i32* @__errno_location() #16, !dbg !7040
  %77 = load i32, i32* %call94, align 4, !dbg !7040, !tbaa !2632, !ctir !7
  store i32 %77, i32* %dest_errno, align 4, !dbg !7041, !tbaa !2632
  br label %if.end97, !dbg !7042

if.else:                                          ; preds = %if.then88
  %call95 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.63.148, i64 0, i64 0)) #9, !dbg !7043
  %78 = load i8*, i8** %dst_name.addr, align 8, !dbg !7045, !tbaa !2645
  %call96 = call i8* @quotearg_style(i32 4, i8* %78), !dbg !7045
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call95, i8* %call96), !dbg !7046
  store i8 0, i8* %return_val, align 1, !dbg !7047, !tbaa !2739
  br label %close_src_desc, !dbg !7048

if.end97:                                         ; preds = %if.then90
  br label %if.end98, !dbg !7049

if.end98:                                         ; preds = %if.end97, %land.lhs.true84, %if.then81
  br label %if.end99, !dbg !7050

if.end99:                                         ; preds = %if.end98, %land.lhs.true79, %land.lhs.true77, %open_with_O_CREAT
  %79 = load i32, i32* %dest_desc, align 4, !dbg !7051, !tbaa !2632
  %cmp100 = icmp slt i32 %79, 0, !dbg !7053
  br i1 %cmp100, label %land.lhs.true101, label %if.end111, !dbg !7054

land.lhs.true101:                                 ; preds = %if.end99
  %80 = load i32, i32* %dest_errno, align 4, !dbg !7055, !tbaa !2632
  %cmp102 = icmp eq i32 %80, 21, !dbg !7056
  br i1 %cmp102, label %land.lhs.true103, label %if.end111, !dbg !7057

land.lhs.true103:                                 ; preds = %land.lhs.true101
  %81 = load i8*, i8** %dst_name.addr, align 8, !dbg !7058, !tbaa !2645
  %82 = load i8, i8* %81, align 1, !dbg !7059, !tbaa !3292, !ctir !181
  %conv = sext i8 %82 to i32, !dbg !7059
  %tobool104 = icmp ne i32 %conv, 0, !dbg !7059
  br i1 %tobool104, label %land.lhs.true105, label %if.end111, !dbg !7060

land.lhs.true105:                                 ; preds = %land.lhs.true103
  %83 = load i8*, i8** %dst_name.addr, align 8, !dbg !7061, !tbaa !2645
  %84 = load i8*, i8** %dst_name.addr, align 8, !dbg !7062, !tbaa !2645
  %call106 = call i64 @strlen(i8* %84) #14, !dbg !7063
  %sub = sub i64 %call106, 1, !dbg !7064
  %arrayidx = getelementptr inbounds i8, i8* %83, i64 %sub, !dbg !7061, !ctir !180
  %85 = load i8, i8* %arrayidx, align 1, !dbg !7061, !tbaa !3292
  %conv107 = sext i8 %85 to i32, !dbg !7061
  %cmp108 = icmp eq i32 %conv107, 47, !dbg !7065
  br i1 %cmp108, label %if.then110, label %if.end111, !dbg !7066

if.then110:                                       ; preds = %land.lhs.true105
  store i32 20, i32* %dest_errno, align 4, !dbg !7067, !tbaa !2632
  br label %if.end111, !dbg !7068

if.end111:                                        ; preds = %if.then110, %land.lhs.true105, %land.lhs.true103, %land.lhs.true101, %if.end99
  br label %if.end113, !dbg !7069

if.else112:                                       ; preds = %if.end69
  store i32 0, i32* %omitted_permissions.addr, align 4, !dbg !7070, !tbaa !2632
  br label %if.end113

if.end113:                                        ; preds = %if.else112, %if.end111
  %86 = load i32, i32* %dest_desc, align 4, !dbg !7072, !tbaa !2632
  %cmp114 = icmp slt i32 %86, 0, !dbg !7074
  br i1 %cmp114, label %if.then116, label %if.end128, !dbg !7075

if.then116:                                       ; preds = %if.end113
  %87 = load i32, i32* %dest_errno, align 4, !dbg !7076, !tbaa !2632
  %cmp117 = icmp eq i32 %87, 2, !dbg !7079
  br i1 %cmp117, label %land.lhs.true119, label %if.end125, !dbg !7080

land.lhs.true119:                                 ; preds = %if.then116
  %88 = load i8*, i8** %new_dst.addr, align 8, !dbg !7081, !tbaa !2645
  %89 = load i8, i8* %88, align 1, !dbg !7082, !tbaa !2739
  %tobool120 = trunc i8 %89 to i1, !dbg !7082, !ctir !142
  br i1 %tobool120, label %if.end125, label %land.lhs.true121, !dbg !7083

land.lhs.true121:                                 ; preds = %land.lhs.true119
  %90 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7084, !tbaa !2645
  %move_mode122 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %90, i32 0, i32 9, !dbg !7085, !ctir !357
  %91 = load i8, i8* %move_mode122, align 8, !dbg !7085, !tbaa !3164
  %tobool123 = trunc i8 %91 to i1, !dbg !7085, !ctir !142
  br i1 %tobool123, label %if.end125, label %if.then124, !dbg !7086

if.then124:                                       ; preds = %land.lhs.true121
  %92 = load i8*, i8** %new_dst.addr, align 8, !dbg !7087, !tbaa !2645
  store i8 1, i8* %92, align 1, !dbg !7089, !tbaa !2739, !ctir !142
  br label %open_with_O_CREAT, !dbg !7090

if.end125:                                        ; preds = %land.lhs.true121, %land.lhs.true119, %if.then116
  %93 = load i32, i32* %dest_errno, align 4, !dbg !7091, !tbaa !2632
  %call126 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.64.149, i64 0, i64 0)) #9, !dbg !7092
  %94 = load i8*, i8** %dst_name.addr, align 8, !dbg !7093, !tbaa !2645
  %call127 = call i8* @quotearg_style(i32 4, i8* %94), !dbg !7093
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %93, i8* %call126, i8* %call127), !dbg !7094
  store i8 0, i8* %return_val, align 1, !dbg !7095, !tbaa !2739
  br label %close_src_desc, !dbg !7096

if.end128:                                        ; preds = %if.end113
  %95 = load i32, i32* %dest_desc, align 4, !dbg !7097, !tbaa !2632
  %call129 = call i32 @fstat(i32 %95, %struct.stat* %sb) #9, !dbg !7099
  %cmp130 = icmp ne i32 %call129, 0, !dbg !7100
  br i1 %cmp130, label %if.then132, label %if.end136, !dbg !7101

if.then132:                                       ; preds = %if.end128
  %call133 = call i32* @__errno_location() #16, !dbg !7102
  %96 = load i32, i32* %call133, align 4, !dbg !7102, !tbaa !2632, !ctir !7
  %call134 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61.146, i64 0, i64 0)) #9, !dbg !7104
  %97 = load i8*, i8** %dst_name.addr, align 8, !dbg !7105, !tbaa !2645
  %call135 = call i8* @quotearg_style(i32 4, i8* %97), !dbg !7105
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %96, i8* %call134, i8* %call135), !dbg !7106
  store i8 0, i8* %return_val, align 1, !dbg !7107, !tbaa !2739
  br label %close_src_and_dst_desc, !dbg !7108

if.end136:                                        ; preds = %if.end128
  %98 = load i8, i8* %data_copy_required, align 1, !dbg !7109, !tbaa !2739
  %tobool137 = trunc i8 %98 to i1, !dbg !7109
  br i1 %tobool137, label %land.lhs.true139, label %if.end161, !dbg !7111

land.lhs.true139:                                 ; preds = %if.end136
  %99 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7112, !tbaa !2645
  %reflink_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %99, i32 0, i32 36, !dbg !7113, !ctir !357
  %100 = load i32, i32* %reflink_mode, align 8, !dbg !7113, !tbaa !3140, !ctir !95
  %tobool140 = icmp ne i32 %100, 0, !dbg !7112
  br i1 %tobool140, label %if.then141, label %if.end161, !dbg !7114

if.then141:                                       ; preds = %land.lhs.true139
  call void @llvm.dbg.declare(metadata i8* %clone_ok, metadata !7115, metadata !DIExpression()), !dbg !7117
  %101 = load i32, i32* %dest_desc, align 4, !dbg !7118, !tbaa !2632
  %102 = load i32, i32* %source_desc, align 4, !dbg !7119, !tbaa !2632
  %call142 = call i32 @clone_file(i32 %101, i32 %102), !dbg !7120
  %cmp143 = icmp eq i32 %call142, 0, !dbg !7121
  %frombool145 = zext i1 %cmp143 to i8, !dbg !7117
  store i8 %frombool145, i8* %clone_ok, align 1, !dbg !7117, !tbaa !2739
  %103 = load i8, i8* %clone_ok, align 1, !dbg !7122, !tbaa !2739
  %tobool146 = trunc i8 %103 to i1, !dbg !7122
  br i1 %tobool146, label %if.then152, label %lor.lhs.false148, !dbg !7124

lor.lhs.false148:                                 ; preds = %if.then141
  %104 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7125, !tbaa !2645
  %reflink_mode149 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %104, i32 0, i32 36, !dbg !7126, !ctir !357
  %105 = load i32, i32* %reflink_mode149, align 8, !dbg !7126, !tbaa !3140, !ctir !95
  %cmp150 = icmp eq i32 %105, 2, !dbg !7127
  br i1 %cmp150, label %if.then152, label %if.end160, !dbg !7128

if.then152:                                       ; preds = %lor.lhs.false148, %if.then141
  %106 = load i8, i8* %clone_ok, align 1, !dbg !7129, !tbaa !2739
  %tobool153 = trunc i8 %106 to i1, !dbg !7129
  br i1 %tobool153, label %if.end159, label %if.then154, !dbg !7132

if.then154:                                       ; preds = %if.then152
  %call155 = call i32* @__errno_location() #16, !dbg !7133
  %107 = load i32, i32* %call155, align 4, !dbg !7133, !tbaa !2632, !ctir !7
  %call156 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.65.150, i64 0, i64 0)) #9, !dbg !7135
  %108 = load i8*, i8** %dst_name.addr, align 8, !dbg !7136, !tbaa !2645
  %call157 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %108), !dbg !7136
  %109 = load i8*, i8** %src_name.addr, align 8, !dbg !7137, !tbaa !2645
  %call158 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %109), !dbg !7137
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %107, i8* %call156, i8* %call157, i8* %call158), !dbg !7138
  store i8 0, i8* %return_val, align 1, !dbg !7139, !tbaa !2739
  br label %close_src_and_dst_desc, !dbg !7140

if.end159:                                        ; preds = %if.then152
  store i8 0, i8* %data_copy_required, align 1, !dbg !7141, !tbaa !2739
  br label %if.end160, !dbg !7142

if.end160:                                        ; preds = %if.end159, %lor.lhs.false148
  br label %if.end161, !dbg !7143

if.end161:                                        ; preds = %if.end160, %land.lhs.true139, %if.end136
  %110 = load i8, i8* %data_copy_required, align 1, !dbg !7144, !tbaa !2739
  %tobool162 = trunc i8 %110 to i1, !dbg !7144
  br i1 %tobool162, label %if.then163, label %if.end265, !dbg !7146

if.then163:                                       ; preds = %if.end161
  call void @llvm.dbg.declare(metadata i64* %buf_alignment, metadata !7147, metadata !DIExpression()), !dbg !7149
  %call164 = call i32 @getpagesize() #16, !dbg !7150
  %conv165 = sext i32 %call164 to i64, !dbg !7150
  store i64 %conv165, i64* %buf_alignment, align 8, !dbg !7149, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %buf_size, metadata !7151, metadata !DIExpression()), !dbg !7152
  %call166 = call i64 @io_blksize(%struct.stat* byval(%struct.stat) align 8 %sb), !dbg !7153
  store i64 %call166, i64* %buf_size, align 8, !dbg !7152, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %hole_size, metadata !7154, metadata !DIExpression()), !dbg !7155
  %st_blksize = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7156, !ctir !415
  %111 = load i64, i64* %st_blksize, align 8, !dbg !7156, !tbaa !7157, !ctir !286
  %cmp167 = icmp slt i64 0, %111, !dbg !7156
  br i1 %cmp167, label %land.lhs.true169, label %cond.false, !dbg !7156

land.lhs.true169:                                 ; preds = %if.then163
  %st_blksize170 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7156, !ctir !415
  %112 = load i64, i64* %st_blksize170, align 8, !dbg !7156, !tbaa !7157, !ctir !286
  %cmp171 = icmp ule i64 %112, 2305843009213693952, !dbg !7156
  br i1 %cmp171, label %cond.true, label %cond.false, !dbg !7156

cond.true:                                        ; preds = %land.lhs.true169
  %st_blksize173 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7156, !ctir !415
  %113 = load i64, i64* %st_blksize173, align 8, !dbg !7156, !tbaa !7157, !ctir !286
  br label %cond.end, !dbg !7156

cond.false:                                       ; preds = %land.lhs.true169, %if.then163
  br label %cond.end, !dbg !7156

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond174 = phi i64 [ %113, %cond.true ], [ 512, %cond.false ], !dbg !7156
  store i64 %cond174, i64* %hole_size, align 8, !dbg !7155, !tbaa !3285
  %114 = load i32, i32* %source_desc, align 4, !dbg !7158, !tbaa !2632
  call void @fdadvise(i32 %114, i64 0, i64 0, i32 2), !dbg !7159
  call void @llvm.dbg.declare(metadata i8* %make_holes, metadata !7160, metadata !DIExpression()), !dbg !7161
  store i8 0, i8* %make_holes, align 1, !dbg !7161, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %sparse_src, metadata !7162, metadata !DIExpression()), !dbg !7163
  %call175 = call zeroext i1 @is_probably_sparse(%struct.stat* %src_open_sb), !dbg !7164
  %frombool176 = zext i1 %call175 to i8, !dbg !7163
  store i8 %frombool176, i8* %sparse_src, align 1, !dbg !7163, !tbaa !2739
  %st_mode177 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 3, !dbg !7165, !ctir !415
  %115 = load i32, i32* %st_mode177, align 8, !dbg !7165, !tbaa !2911, !ctir !140
  %and178 = and i32 %115, 61440, !dbg !7165
  %cmp179 = icmp eq i32 %and178, 32768, !dbg !7165
  br i1 %cmp179, label %if.then181, label %if.end194, !dbg !7167

if.then181:                                       ; preds = %cond.end
  %116 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7168, !tbaa !2645
  %sparse_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %116, i32 0, i32 3, !dbg !7171, !ctir !357
  %117 = load i32, i32* %sparse_mode, align 4, !dbg !7171, !tbaa !3215, !ctir !89
  %cmp182 = icmp eq i32 %117, 3, !dbg !7172
  br i1 %cmp182, label %if.then184, label %if.end185, !dbg !7173

if.then184:                                       ; preds = %if.then181
  store i8 1, i8* %make_holes, align 1, !dbg !7174, !tbaa !2739
  br label %if.end185, !dbg !7175

if.end185:                                        ; preds = %if.then184, %if.then181
  %118 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7176, !tbaa !2645
  %sparse_mode186 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %118, i32 0, i32 3, !dbg !7178, !ctir !357
  %119 = load i32, i32* %sparse_mode186, align 4, !dbg !7178, !tbaa !3215, !ctir !89
  %cmp187 = icmp eq i32 %119, 2, !dbg !7179
  br i1 %cmp187, label %land.lhs.true189, label %if.end193, !dbg !7180

land.lhs.true189:                                 ; preds = %if.end185
  %120 = load i8, i8* %sparse_src, align 1, !dbg !7181, !tbaa !2739
  %tobool190 = trunc i8 %120 to i1, !dbg !7181
  br i1 %tobool190, label %if.then192, label %if.end193, !dbg !7182

if.then192:                                       ; preds = %land.lhs.true189
  store i8 1, i8* %make_holes, align 1, !dbg !7183, !tbaa !2739
  br label %if.end193, !dbg !7184

if.end193:                                        ; preds = %if.then192, %land.lhs.true189, %if.end185
  br label %if.end194, !dbg !7185

if.end194:                                        ; preds = %if.end193, %cond.end
  %121 = load i8, i8* %make_holes, align 1, !dbg !7186, !tbaa !2739
  %tobool195 = trunc i8 %121 to i1, !dbg !7186
  br i1 %tobool195, label %if.end220, label %if.then196, !dbg !7188

if.then196:                                       ; preds = %if.end194
  call void @llvm.dbg.declare(metadata i64* %blcm_max, metadata !7189, metadata !DIExpression()), !dbg !7191
  %122 = load i64, i64* %buf_alignment, align 8, !dbg !7192, !tbaa !3285
  %sub197 = sub i64 9223372036854775807, %122, !dbg !7193
  store i64 %sub197, i64* %blcm_max, align 8, !dbg !7191, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %blcm, metadata !7194, metadata !DIExpression()), !dbg !7195
  %call198 = call i64 @io_blksize(%struct.stat* byval(%struct.stat) align 8 %src_open_sb), !dbg !7196
  %123 = load i64, i64* %buf_size, align 8, !dbg !7197, !tbaa !3285
  %124 = load i64, i64* %blcm_max, align 8, !dbg !7198, !tbaa !3285
  %call199 = call i64 @buffer_lcm(i64 %call198, i64 %123, i64 %124) #16, !dbg !7199
  store i64 %call199, i64* %blcm, align 8, !dbg !7195, !tbaa !3285
  %st_mode200 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 3, !dbg !7200, !ctir !415
  %125 = load i32, i32* %st_mode200, align 8, !dbg !7200, !tbaa !2911, !ctir !140
  %and201 = and i32 %125, 61440, !dbg !7200
  %cmp202 = icmp eq i32 %and201, 32768, !dbg !7200
  br i1 %cmp202, label %land.lhs.true204, label %if.end209, !dbg !7202

land.lhs.true204:                                 ; preds = %if.then196
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 8, !dbg !7203, !ctir !415
  %126 = load i64, i64* %st_size, align 8, !dbg !7203, !tbaa !4015, !ctir !29
  %127 = load i64, i64* %buf_size, align 8, !dbg !7204, !tbaa !3285
  %cmp205 = icmp ult i64 %126, %127, !dbg !7205
  br i1 %cmp205, label %if.then207, label %if.end209, !dbg !7206

if.then207:                                       ; preds = %land.lhs.true204
  %st_size208 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 8, !dbg !7207, !ctir !415
  %128 = load i64, i64* %st_size208, align 8, !dbg !7207, !tbaa !4015, !ctir !29
  %add = add nsw i64 %128, 1, !dbg !7208
  store i64 %add, i64* %buf_size, align 8, !dbg !7209, !tbaa !3285
  br label %if.end209, !dbg !7210

if.end209:                                        ; preds = %if.then207, %land.lhs.true204, %if.then196
  %129 = load i64, i64* %blcm, align 8, !dbg !7211, !tbaa !3285
  %sub210 = sub i64 %129, 1, !dbg !7212
  %130 = load i64, i64* %buf_size, align 8, !dbg !7213, !tbaa !3285
  %add211 = add i64 %130, %sub210, !dbg !7213
  store i64 %add211, i64* %buf_size, align 8, !dbg !7213, !tbaa !3285
  %131 = load i64, i64* %buf_size, align 8, !dbg !7214, !tbaa !3285
  %132 = load i64, i64* %blcm, align 8, !dbg !7215, !tbaa !3285
  %rem = urem i64 %131, %132, !dbg !7216
  %133 = load i64, i64* %buf_size, align 8, !dbg !7217, !tbaa !3285
  %sub212 = sub i64 %133, %rem, !dbg !7217
  store i64 %sub212, i64* %buf_size, align 8, !dbg !7217, !tbaa !3285
  %134 = load i64, i64* %buf_size, align 8, !dbg !7218, !tbaa !3285
  %cmp213 = icmp eq i64 %134, 0, !dbg !7220
  br i1 %cmp213, label %if.then218, label %lor.lhs.false215, !dbg !7221

lor.lhs.false215:                                 ; preds = %if.end209
  %135 = load i64, i64* %blcm_max, align 8, !dbg !7222, !tbaa !3285
  %136 = load i64, i64* %buf_size, align 8, !dbg !7223, !tbaa !3285
  %cmp216 = icmp ult i64 %135, %136, !dbg !7224
  br i1 %cmp216, label %if.then218, label %if.end219, !dbg !7225

if.then218:                                       ; preds = %lor.lhs.false215, %if.end209
  %137 = load i64, i64* %blcm, align 8, !dbg !7226, !tbaa !3285
  store i64 %137, i64* %buf_size, align 8, !dbg !7227, !tbaa !3285
  br label %if.end219, !dbg !7228

if.end219:                                        ; preds = %if.then218, %lor.lhs.false215
  br label %if.end220, !dbg !7229

if.end220:                                        ; preds = %if.end219, %if.end194
  %138 = load i64, i64* %buf_size, align 8, !dbg !7230, !tbaa !3285
  %139 = load i64, i64* %buf_alignment, align 8, !dbg !7231, !tbaa !3285
  %add221 = add i64 %138, %139, !dbg !7232
  %call222 = call noalias i8* @xmalloc(i64 %add221), !dbg !7233
  store i8* %call222, i8** %buf_alloc, align 8, !dbg !7234, !tbaa !2645
  %140 = load i8*, i8** %buf_alloc, align 8, !dbg !7235, !tbaa !2645
  %141 = load i64, i64* %buf_alignment, align 8, !dbg !7236, !tbaa !3285
  %call223 = call i8* @ptr_align(i8* %140, i64 %141), !dbg !7237
  store i8* %call223, i8** %buf, align 8, !dbg !7238, !tbaa !2645
  %142 = load i8, i8* %sparse_src, align 1, !dbg !7239, !tbaa !2739
  %tobool224 = trunc i8 %142 to i1, !dbg !7239
  br i1 %tobool224, label %if.then225, label %if.end240, !dbg !7241

if.then225:                                       ; preds = %if.end220
  call void @llvm.dbg.declare(metadata i8* %normal_copy_required, metadata !7242, metadata !DIExpression()), !dbg !7244
  %143 = load i32, i32* %source_desc, align 4, !dbg !7245, !tbaa !2632
  %144 = load i32, i32* %dest_desc, align 4, !dbg !7247, !tbaa !2632
  %145 = load i8*, i8** %buf, align 8, !dbg !7248, !tbaa !2645
  %146 = load i64, i64* %buf_size, align 8, !dbg !7249, !tbaa !3285
  %147 = load i64, i64* %hole_size, align 8, !dbg !7250, !tbaa !3285
  %st_size226 = getelementptr inbounds %struct.stat, %struct.stat* %src_open_sb, i32 0, i32 8, !dbg !7251, !ctir !415
  %148 = load i64, i64* %st_size226, align 8, !dbg !7251, !tbaa !4015, !ctir !29
  %149 = load i8, i8* %make_holes, align 1, !dbg !7252, !tbaa !2739
  %tobool227 = trunc i8 %149 to i1, !dbg !7252
  br i1 %tobool227, label %cond.true229, label %cond.false231, !dbg !7252

cond.true229:                                     ; preds = %if.then225
  %150 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7253, !tbaa !2645
  %sparse_mode230 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %150, i32 0, i32 3, !dbg !7254, !ctir !357
  %151 = load i32, i32* %sparse_mode230, align 4, !dbg !7254, !tbaa !3215, !ctir !89
  br label %cond.end232, !dbg !7252

cond.false231:                                    ; preds = %if.then225
  br label %cond.end232, !dbg !7252

cond.end232:                                      ; preds = %cond.false231, %cond.true229
  %cond233 = phi i32 [ %151, %cond.true229 ], [ 1, %cond.false231 ], !dbg !7252
  %152 = load i8*, i8** %src_name.addr, align 8, !dbg !7255, !tbaa !2645
  %153 = load i8*, i8** %dst_name.addr, align 8, !dbg !7256, !tbaa !2645
  %call234 = call zeroext i1 @extent_copy(i32 %143, i32 %144, i8* %145, i64 %146, i64 %147, i64 %148, i32 %cond233, i8* %152, i8* %153, i8* %normal_copy_required), !dbg !7257
  br i1 %call234, label %if.then235, label %if.end236, !dbg !7258

if.then235:                                       ; preds = %cond.end232
  br label %preserve_metadata, !dbg !7259

if.end236:                                        ; preds = %cond.end232
  %154 = load i8, i8* %normal_copy_required, align 1, !dbg !7260, !tbaa !2739
  %tobool237 = trunc i8 %154 to i1, !dbg !7260
  br i1 %tobool237, label %if.end239, label %if.then238, !dbg !7262

if.then238:                                       ; preds = %if.end236
  store i8 0, i8* %return_val, align 1, !dbg !7263, !tbaa !2739
  br label %close_src_and_dst_desc, !dbg !7265

if.end239:                                        ; preds = %if.end236
  br label %if.end240, !dbg !7266

if.end240:                                        ; preds = %if.end239, %if.end220
  call void @llvm.dbg.declare(metadata i64* %n_read, metadata !7267, metadata !DIExpression()), !dbg !7268
  call void @llvm.dbg.declare(metadata i8* %wrote_hole_at_eof, metadata !7269, metadata !DIExpression()), !dbg !7270
  %155 = load i32, i32* %source_desc, align 4, !dbg !7271, !tbaa !2632
  %156 = load i32, i32* %dest_desc, align 4, !dbg !7273, !tbaa !2632
  %157 = load i8*, i8** %buf, align 8, !dbg !7274, !tbaa !2645
  %158 = load i64, i64* %buf_size, align 8, !dbg !7275, !tbaa !3285
  %159 = load i8, i8* %make_holes, align 1, !dbg !7276, !tbaa !2739
  %tobool241 = trunc i8 %159 to i1, !dbg !7276
  br i1 %tobool241, label %cond.true243, label %cond.false244, !dbg !7276

cond.true243:                                     ; preds = %if.end240
  %160 = load i64, i64* %hole_size, align 8, !dbg !7277, !tbaa !3285
  br label %cond.end245, !dbg !7276

cond.false244:                                    ; preds = %if.end240
  br label %cond.end245, !dbg !7276

cond.end245:                                      ; preds = %cond.false244, %cond.true243
  %cond246 = phi i64 [ %160, %cond.true243 ], [ 0, %cond.false244 ], !dbg !7276
  %161 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7278, !tbaa !2645
  %sparse_mode247 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %161, i32 0, i32 3, !dbg !7279, !ctir !357
  %162 = load i32, i32* %sparse_mode247, align 4, !dbg !7279, !tbaa !3215, !ctir !89
  %cmp248 = icmp eq i32 %162, 3, !dbg !7280
  %163 = load i8*, i8** %src_name.addr, align 8, !dbg !7281, !tbaa !2645
  %164 = load i8*, i8** %dst_name.addr, align 8, !dbg !7282, !tbaa !2645
  %call250 = call zeroext i1 @sparse_copy(i32 %155, i32 %156, i8* %157, i64 %158, i64 %cond246, i1 zeroext %cmp248, i8* %163, i8* %164, i64 -1, i64* %n_read, i8* %wrote_hole_at_eof), !dbg !7283
  br i1 %call250, label %if.else252, label %if.then251, !dbg !7284

if.then251:                                       ; preds = %cond.end245
  store i8 0, i8* %return_val, align 1, !dbg !7285, !tbaa !2739
  br label %close_src_and_dst_desc, !dbg !7287

if.else252:                                       ; preds = %cond.end245
  %165 = load i8, i8* %wrote_hole_at_eof, align 1, !dbg !7288, !tbaa !2739
  %tobool253 = trunc i8 %165 to i1, !dbg !7288
  br i1 %tobool253, label %land.lhs.true255, label %if.end263, !dbg !7290

land.lhs.true255:                                 ; preds = %if.else252
  %166 = load i32, i32* %dest_desc, align 4, !dbg !7291, !tbaa !2632
  %167 = load i64, i64* %n_read, align 8, !dbg !7292, !tbaa !3285
  %call256 = call i32 @ftruncate(i32 %166, i64 %167) #9, !dbg !7293
  %cmp257 = icmp slt i32 %call256, 0, !dbg !7294
  br i1 %cmp257, label %if.then259, label %if.end263, !dbg !7295

if.then259:                                       ; preds = %land.lhs.true255
  %call260 = call i32* @__errno_location() #16, !dbg !7296
  %168 = load i32, i32* %call260, align 4, !dbg !7296, !tbaa !2632, !ctir !7
  %call261 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.66.151, i64 0, i64 0)) #9, !dbg !7298
  %169 = load i8*, i8** %dst_name.addr, align 8, !dbg !7299, !tbaa !2645
  %call262 = call i8* @quotearg_style(i32 4, i8* %169), !dbg !7299
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %168, i8* %call261, i8* %call262), !dbg !7300
  store i8 0, i8* %return_val, align 1, !dbg !7301, !tbaa !2739
  br label %close_src_and_dst_desc, !dbg !7302

if.end263:                                        ; preds = %land.lhs.true255, %if.else252
  br label %if.end264

if.end264:                                        ; preds = %if.end263
  br label %if.end265, !dbg !7303

if.end265:                                        ; preds = %if.end264, %if.end161
  br label %preserve_metadata, !dbg !7144

preserve_metadata:                                ; preds = %if.end265, %if.then235
  call void @llvm.dbg.label(metadata !7304), !dbg !7305
  %170 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7306, !tbaa !2645
  %preserve_timestamps = getelementptr inbounds %struct.cp_options, %struct.cp_options* %170, i32 0, i32 16, !dbg !7308, !ctir !357
  %171 = load i8, i8* %preserve_timestamps, align 1, !dbg !7308, !tbaa !2823
  %tobool266 = trunc i8 %171 to i1, !dbg !7308, !ctir !142
  br i1 %tobool266, label %if.then267, label %if.end284, !dbg !7309

if.then267:                                       ; preds = %preserve_metadata
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timespec, metadata !7310, metadata !DIExpression()), !dbg !7312
  %arrayidx268 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !7313, !ctir !445
  %172 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7314, !tbaa !2645
  %call269 = call { i64, i64 } @get_stat_atime(%struct.stat* %172) #14, !dbg !7315
  %173 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !7315
  %174 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %173, i32 0, i32 0, !dbg !7315
  %175 = extractvalue { i64, i64 } %call269, 0, !dbg !7315
  store i64 %175, i64* %174, align 8, !dbg !7315
  %176 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %173, i32 0, i32 1, !dbg !7315
  %177 = extractvalue { i64, i64 } %call269, 1, !dbg !7315
  store i64 %177, i64* %176, align 8, !dbg !7315
  %178 = bitcast %struct.timespec* %arrayidx268 to i8*, !dbg !7315
  %179 = bitcast %struct.timespec* %tmp to i8*, !dbg !7315
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %178, i8* align 8 %179, i64 16, i1 false), !dbg !7315, !tbaa.struct !3795
  %arrayidx270 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !7316, !ctir !445
  %180 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7317, !tbaa !2645
  %call272 = call { i64, i64 } @get_stat_mtime(%struct.stat* %180) #14, !dbg !7318
  %181 = bitcast %struct.timespec* %tmp271 to { i64, i64 }*, !dbg !7318
  %182 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %181, i32 0, i32 0, !dbg !7318
  %183 = extractvalue { i64, i64 } %call272, 0, !dbg !7318
  store i64 %183, i64* %182, align 8, !dbg !7318
  %184 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %181, i32 0, i32 1, !dbg !7318
  %185 = extractvalue { i64, i64 } %call272, 1, !dbg !7318
  store i64 %185, i64* %184, align 8, !dbg !7318
  %186 = bitcast %struct.timespec* %arrayidx270 to i8*, !dbg !7318
  %187 = bitcast %struct.timespec* %tmp271 to i8*, !dbg !7318
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %186, i8* align 8 %187, i64 16, i1 false), !dbg !7318, !tbaa.struct !3795
  %188 = load i32, i32* %dest_desc, align 4, !dbg !7319, !tbaa !2632
  %189 = load i8*, i8** %dst_name.addr, align 8, !dbg !7321, !tbaa !2645
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !7322
  %call273 = call i32 @fdutimens(i32 %188, i8* %189, %struct.timespec* %arraydecay), !dbg !7323
  %cmp274 = icmp ne i32 %call273, 0, !dbg !7324
  br i1 %cmp274, label %if.then276, label %if.end283, !dbg !7325

if.then276:                                       ; preds = %if.then267
  %call277 = call i32* @__errno_location() #16, !dbg !7326
  %190 = load i32, i32* %call277, align 4, !dbg !7326, !tbaa !2632, !ctir !7
  %call278 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.48.138, i64 0, i64 0)) #9, !dbg !7328
  %191 = load i8*, i8** %dst_name.addr, align 8, !dbg !7329, !tbaa !2645
  %call279 = call i8* @quotearg_style(i32 4, i8* %191), !dbg !7329
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %190, i8* %call278, i8* %call279), !dbg !7330
  %192 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7331, !tbaa !2645
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %192, i32 0, i32 21, !dbg !7333, !ctir !357
  %193 = load i8, i8* %require_preserve, align 4, !dbg !7333, !tbaa !3203
  %tobool280 = trunc i8 %193 to i1, !dbg !7333, !ctir !142
  br i1 %tobool280, label %if.then281, label %if.end282, !dbg !7334

if.then281:                                       ; preds = %if.then276
  store i8 0, i8* %return_val, align 1, !dbg !7335, !tbaa !2739
  br label %close_src_and_dst_desc, !dbg !7337

if.end282:                                        ; preds = %if.then276
  br label %if.end283, !dbg !7338

if.end283:                                        ; preds = %if.end282, %if.then267
  br label %if.end284, !dbg !7339

if.end284:                                        ; preds = %if.end283, %preserve_metadata
  %194 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7340, !tbaa !2645
  %preserve_ownership = getelementptr inbounds %struct.cp_options, %struct.cp_options* %194, i32 0, i32 14, !dbg !7342, !ctir !357
  %195 = load i8, i8* %preserve_ownership, align 1, !dbg !7342, !tbaa !3176
  %tobool285 = trunc i8 %195 to i1, !dbg !7342, !ctir !142
  br i1 %tobool285, label %land.lhs.true287, label %if.end300, !dbg !7343

land.lhs.true287:                                 ; preds = %if.end284
  %196 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7344, !tbaa !2645
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %196, i32 0, i32 4, !dbg !7344, !ctir !414
  %197 = load i32, i32* %st_uid, align 4, !dbg !7344, !tbaa !4042, !ctir !128
  %st_uid288 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 4, !dbg !7344, !ctir !415
  %198 = load i32, i32* %st_uid288, align 4, !dbg !7344, !tbaa !4042, !ctir !128
  %cmp289 = icmp eq i32 %197, %198, !dbg !7344
  br i1 %cmp289, label %land.lhs.true291, label %if.then295, !dbg !7344

land.lhs.true291:                                 ; preds = %land.lhs.true287
  %199 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7344, !tbaa !2645
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %199, i32 0, i32 5, !dbg !7344, !ctir !414
  %200 = load i32, i32* %st_gid, align 8, !dbg !7344, !tbaa !4071, !ctir !130
  %st_gid292 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 5, !dbg !7344, !ctir !415
  %201 = load i32, i32* %st_gid292, align 8, !dbg !7344, !tbaa !4071, !ctir !130
  %cmp293 = icmp eq i32 %200, %201, !dbg !7344
  br i1 %cmp293, label %if.end300, label %if.then295, !dbg !7345

if.then295:                                       ; preds = %land.lhs.true291, %land.lhs.true287
  %202 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7346, !tbaa !2645
  %203 = load i8*, i8** %dst_name.addr, align 8, !dbg !7348, !tbaa !2645
  %204 = load i32, i32* %dest_desc, align 4, !dbg !7349, !tbaa !2632
  %205 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7350, !tbaa !2645
  %206 = load i8*, i8** %new_dst.addr, align 8, !dbg !7351, !tbaa !2645
  %207 = load i8, i8* %206, align 1, !dbg !7352, !tbaa !2739
  %tobool296 = trunc i8 %207 to i1, !dbg !7352, !ctir !142
  %call297 = call i32 @set_owner(%struct.cp_options* %202, i8* %203, i32 %204, %struct.stat* %205, i1 zeroext %tobool296, %struct.stat* %sb), !dbg !7353
  switch i32 %call297, label %sw.epilog [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb298
  ], !dbg !7354

sw.bb:                                            ; preds = %if.then295
  store i8 0, i8* %return_val, align 1, !dbg !7355, !tbaa !2739
  br label %close_src_and_dst_desc, !dbg !7357

sw.bb298:                                         ; preds = %if.then295
  %208 = load i32, i32* %src_mode, align 4, !dbg !7358, !tbaa !2632
  %and299 = and i32 %208, -3585, !dbg !7358
  store i32 %and299, i32* %src_mode, align 4, !dbg !7358, !tbaa !2632
  br label %sw.epilog, !dbg !7359

sw.epilog:                                        ; preds = %if.then295, %sw.bb298
  br label %if.end300, !dbg !7360

if.end300:                                        ; preds = %sw.epilog, %land.lhs.true291, %if.end284
  %209 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7361, !tbaa !2645
  %preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %209, i32 0, i32 24, !dbg !7363, !ctir !357
  %210 = load i8, i8* %preserve_xattr, align 1, !dbg !7363, !tbaa !3256
  %tobool301 = trunc i8 %210 to i1, !dbg !7363, !ctir !142
  br i1 %tobool301, label %if.then302, label %if.end328, !dbg !7364

if.then302:                                       ; preds = %if.end300
  call void @llvm.dbg.declare(metadata i8* %access_changed, metadata !7365, metadata !DIExpression()), !dbg !7367
  store i8 0, i8* %access_changed, align 1, !dbg !7367, !tbaa !2739
  %st_mode303 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 3, !dbg !7368, !ctir !415
  %211 = load i32, i32* %st_mode303, align 8, !dbg !7368, !tbaa !2911, !ctir !140
  %and304 = and i32 %211, 128, !dbg !7370
  %tobool305 = icmp ne i32 %and304, 0, !dbg !7370
  br i1 %tobool305, label %if.end315, label %land.lhs.true306, !dbg !7371

land.lhs.true306:                                 ; preds = %if.then302
  %call307 = call i32 @geteuid() #9, !dbg !7372
  %cmp308 = icmp ne i32 %call307, 0, !dbg !7373
  br i1 %cmp308, label %if.then310, label %if.end315, !dbg !7374

if.then310:                                       ; preds = %land.lhs.true306
  %212 = load i32, i32* %dest_desc, align 4, !dbg !7375, !tbaa !2632
  %213 = load i8*, i8** %dst_name.addr, align 8, !dbg !7377, !tbaa !2645
  %call311 = call i32 @fchmod_or_lchmod(i32 %212, i8* %213, i32 384), !dbg !7378
  %cmp312 = icmp eq i32 %call311, 0, !dbg !7379
  %frombool314 = zext i1 %cmp312 to i8, !dbg !7380
  store i8 %frombool314, i8* %access_changed, align 1, !dbg !7380, !tbaa !2739
  br label %if.end315, !dbg !7381

if.end315:                                        ; preds = %if.then310, %land.lhs.true306, %if.then302
  %214 = load i8*, i8** %src_name.addr, align 8, !dbg !7382, !tbaa !2645
  %215 = load i32, i32* %source_desc, align 4, !dbg !7384, !tbaa !2632
  %216 = load i8*, i8** %dst_name.addr, align 8, !dbg !7385, !tbaa !2645
  %217 = load i32, i32* %dest_desc, align 4, !dbg !7386, !tbaa !2632
  %218 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7387, !tbaa !2645
  %call316 = call zeroext i1 @copy_attr(i8* %214, i32 %215, i8* %216, i32 %217, %struct.cp_options* %218), !dbg !7388
  br i1 %call316, label %if.end321, label %land.lhs.true317, !dbg !7389

land.lhs.true317:                                 ; preds = %if.end315
  %219 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7390, !tbaa !2645
  %require_preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %219, i32 0, i32 25, !dbg !7391, !ctir !357
  %220 = load i8, i8* %require_preserve_xattr, align 8, !dbg !7391, !tbaa !3207
  %tobool318 = trunc i8 %220 to i1, !dbg !7391, !ctir !142
  br i1 %tobool318, label %if.then320, label %if.end321, !dbg !7392

if.then320:                                       ; preds = %land.lhs.true317
  store i8 0, i8* %return_val, align 1, !dbg !7393, !tbaa !2739
  br label %if.end321, !dbg !7394

if.end321:                                        ; preds = %if.then320, %land.lhs.true317, %if.end315
  %221 = load i8, i8* %access_changed, align 1, !dbg !7395, !tbaa !2739
  %tobool322 = trunc i8 %221 to i1, !dbg !7395
  br i1 %tobool322, label %if.then323, label %if.end327, !dbg !7397

if.then323:                                       ; preds = %if.end321
  %222 = load i32, i32* %dest_desc, align 4, !dbg !7398, !tbaa !2632
  %223 = load i8*, i8** %dst_name.addr, align 8, !dbg !7399, !tbaa !2645
  %224 = load i32, i32* %dst_mode.addr, align 4, !dbg !7400, !tbaa !2632
  %225 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7401, !tbaa !2632
  %neg324 = xor i32 %225, -1, !dbg !7402
  %and325 = and i32 %224, %neg324, !dbg !7403
  %call326 = call i32 @fchmod_or_lchmod(i32 %222, i8* %223, i32 %and325), !dbg !7404
  br label %if.end327, !dbg !7404

if.end327:                                        ; preds = %if.then323, %if.end321
  br label %if.end328, !dbg !7405

if.end328:                                        ; preds = %if.end327, %if.end300
  %226 = load i8*, i8** %dst_name.addr, align 8, !dbg !7406, !tbaa !2645
  %227 = load i32, i32* %dest_desc, align 4, !dbg !7407, !tbaa !2632
  %228 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7408, !tbaa !2645
  call void @set_author(i8* %226, i32 %227, %struct.stat* %228), !dbg !7409
  %229 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7410, !tbaa !2645
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %229, i32 0, i32 15, !dbg !7412, !ctir !357
  %230 = load i8, i8* %preserve_mode, align 2, !dbg !7412, !tbaa !3184
  %tobool329 = trunc i8 %230 to i1, !dbg !7412, !ctir !142
  br i1 %tobool329, label %if.then335, label %lor.lhs.false331, !dbg !7413

lor.lhs.false331:                                 ; preds = %if.end328
  %231 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7414, !tbaa !2645
  %move_mode332 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %231, i32 0, i32 9, !dbg !7415, !ctir !357
  %232 = load i8, i8* %move_mode332, align 8, !dbg !7415, !tbaa !3164
  %tobool333 = trunc i8 %232 to i1, !dbg !7415, !ctir !142
  br i1 %tobool333, label %if.then335, label %if.else345, !dbg !7416

if.then335:                                       ; preds = %lor.lhs.false331, %if.end328
  %233 = load i8*, i8** %src_name.addr, align 8, !dbg !7417, !tbaa !2645
  %234 = load i32, i32* %source_desc, align 4, !dbg !7420, !tbaa !2632
  %235 = load i8*, i8** %dst_name.addr, align 8, !dbg !7421, !tbaa !2645
  %236 = load i32, i32* %dest_desc, align 4, !dbg !7422, !tbaa !2632
  %237 = load i32, i32* %src_mode, align 4, !dbg !7423, !tbaa !2632
  %call336 = call i32 @copy_acl(i8* %233, i32 %234, i8* %235, i32 %236, i32 %237), !dbg !7424
  %cmp337 = icmp ne i32 %call336, 0, !dbg !7425
  br i1 %cmp337, label %land.lhs.true339, label %if.end344, !dbg !7426

land.lhs.true339:                                 ; preds = %if.then335
  %238 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7427, !tbaa !2645
  %require_preserve340 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %238, i32 0, i32 21, !dbg !7428, !ctir !357
  %239 = load i8, i8* %require_preserve340, align 4, !dbg !7428, !tbaa !3203
  %tobool341 = trunc i8 %239 to i1, !dbg !7428, !ctir !142
  br i1 %tobool341, label %if.then343, label %if.end344, !dbg !7429

if.then343:                                       ; preds = %land.lhs.true339
  store i8 0, i8* %return_val, align 1, !dbg !7430, !tbaa !2739
  br label %if.end344, !dbg !7431

if.end344:                                        ; preds = %if.then343, %land.lhs.true339, %if.then335
  br label %if.end391, !dbg !7432

if.else345:                                       ; preds = %lor.lhs.false331
  %240 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7433, !tbaa !2645
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %240, i32 0, i32 28, !dbg !7435, !ctir !357
  %241 = load i8, i8* %set_mode, align 1, !dbg !7435, !tbaa !3226
  %tobool346 = trunc i8 %241 to i1, !dbg !7435, !ctir !142
  br i1 %tobool346, label %if.then347, label %if.else353, !dbg !7436

if.then347:                                       ; preds = %if.else345
  %242 = load i8*, i8** %dst_name.addr, align 8, !dbg !7437, !tbaa !2645
  %243 = load i32, i32* %dest_desc, align 4, !dbg !7440, !tbaa !2632
  %244 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7441, !tbaa !2645
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %244, i32 0, i32 4, !dbg !7442, !ctir !357
  %245 = load i32, i32* %mode, align 8, !dbg !7442, !tbaa !3230, !ctir !139
  %call348 = call i32 @set_acl(i8* %242, i32 %243, i32 %245), !dbg !7443
  %cmp349 = icmp ne i32 %call348, 0, !dbg !7444
  br i1 %cmp349, label %if.then351, label %if.end352, !dbg !7445

if.then351:                                       ; preds = %if.then347
  store i8 0, i8* %return_val, align 1, !dbg !7446, !tbaa !2739
  br label %if.end352, !dbg !7447

if.end352:                                        ; preds = %if.then351, %if.then347
  br label %if.end390, !dbg !7448

if.else353:                                       ; preds = %if.else345
  %246 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7449, !tbaa !2645
  %explicit_no_preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %246, i32 0, i32 17, !dbg !7451, !ctir !357
  %247 = load i8, i8* %explicit_no_preserve_mode, align 8, !dbg !7451, !tbaa !3191
  %tobool354 = trunc i8 %247 to i1, !dbg !7451, !ctir !142
  br i1 %tobool354, label %land.lhs.true356, label %if.else368, !dbg !7452

land.lhs.true356:                                 ; preds = %if.else353
  %248 = load i8*, i8** %new_dst.addr, align 8, !dbg !7453, !tbaa !2645
  %249 = load i8, i8* %248, align 1, !dbg !7454, !tbaa !2739
  %tobool357 = trunc i8 %249 to i1, !dbg !7454, !ctir !142
  br i1 %tobool357, label %if.then359, label %if.else368, !dbg !7455

if.then359:                                       ; preds = %land.lhs.true356
  %250 = load i8*, i8** %dst_name.addr, align 8, !dbg !7456, !tbaa !2645
  %251 = load i32, i32* %dest_desc, align 4, !dbg !7459, !tbaa !2632
  %call360 = call i32 @cached_umask(), !dbg !7460
  %neg361 = xor i32 %call360, -1, !dbg !7461
  %and362 = and i32 438, %neg361, !dbg !7462
  %call363 = call i32 @set_acl(i8* %250, i32 %251, i32 %and362), !dbg !7463
  %cmp364 = icmp ne i32 %call363, 0, !dbg !7464
  br i1 %cmp364, label %if.then366, label %if.end367, !dbg !7465

if.then366:                                       ; preds = %if.then359
  store i8 0, i8* %return_val, align 1, !dbg !7466, !tbaa !2739
  br label %if.end367, !dbg !7467

if.end367:                                        ; preds = %if.then366, %if.then359
  br label %if.end389, !dbg !7468

if.else368:                                       ; preds = %land.lhs.true356, %if.else353
  %252 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7469, !tbaa !2632
  %tobool369 = icmp ne i32 %252, 0, !dbg !7469
  br i1 %tobool369, label %if.then370, label %if.end388, !dbg !7471

if.then370:                                       ; preds = %if.else368
  %call371 = call i32 @cached_umask(), !dbg !7472
  %neg372 = xor i32 %call371, -1, !dbg !7474
  %253 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7475, !tbaa !2632
  %and373 = and i32 %253, %neg372, !dbg !7475
  store i32 %and373, i32* %omitted_permissions.addr, align 4, !dbg !7475, !tbaa !2632
  %254 = load i32, i32* %omitted_permissions.addr, align 4, !dbg !7476, !tbaa !2632
  %tobool374 = icmp ne i32 %254, 0, !dbg !7476
  br i1 %tobool374, label %land.lhs.true375, label %if.end387, !dbg !7478

land.lhs.true375:                                 ; preds = %if.then370
  %255 = load i32, i32* %dest_desc, align 4, !dbg !7479, !tbaa !2632
  %256 = load i8*, i8** %dst_name.addr, align 8, !dbg !7480, !tbaa !2645
  %257 = load i32, i32* %dst_mode.addr, align 4, !dbg !7481, !tbaa !2632
  %call376 = call i32 @fchmod_or_lchmod(i32 %255, i8* %256, i32 %257), !dbg !7482
  %cmp377 = icmp ne i32 %call376, 0, !dbg !7483
  br i1 %cmp377, label %if.then379, label %if.end387, !dbg !7484

if.then379:                                       ; preds = %land.lhs.true375
  %call380 = call i32* @__errno_location() #16, !dbg !7485
  %258 = load i32, i32* %call380, align 4, !dbg !7485, !tbaa !2632, !ctir !7
  %call381 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.49.139, i64 0, i64 0)) #9, !dbg !7487
  %259 = load i8*, i8** %dst_name.addr, align 8, !dbg !7488, !tbaa !2645
  %call382 = call i8* @quotearg_style(i32 4, i8* %259), !dbg !7488
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %258, i8* %call381, i8* %call382), !dbg !7489
  %260 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7490, !tbaa !2645
  %require_preserve383 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %260, i32 0, i32 21, !dbg !7492, !ctir !357
  %261 = load i8, i8* %require_preserve383, align 4, !dbg !7492, !tbaa !3203
  %tobool384 = trunc i8 %261 to i1, !dbg !7492, !ctir !142
  br i1 %tobool384, label %if.then385, label %if.end386, !dbg !7493

if.then385:                                       ; preds = %if.then379
  store i8 0, i8* %return_val, align 1, !dbg !7494, !tbaa !2739
  br label %if.end386, !dbg !7495

if.end386:                                        ; preds = %if.then385, %if.then379
  br label %if.end387, !dbg !7496

if.end387:                                        ; preds = %if.end386, %land.lhs.true375, %if.then370
  br label %if.end388, !dbg !7497

if.end388:                                        ; preds = %if.end387, %if.else368
  br label %if.end389

if.end389:                                        ; preds = %if.end388, %if.end367
  br label %if.end390

if.end390:                                        ; preds = %if.end389, %if.end352
  br label %if.end391

if.end391:                                        ; preds = %if.end390, %if.end344
  br label %close_src_and_dst_desc, !dbg !7415

close_src_and_dst_desc:                           ; preds = %if.end391, %sw.bb, %if.then281, %if.then259, %if.then251, %if.then238, %if.then154, %if.then132, %if.then39
  call void @llvm.dbg.label(metadata !7498), !dbg !7499
  %262 = load i32, i32* %dest_desc, align 4, !dbg !7500, !tbaa !2632
  %call392 = call i32 @close(i32 %262), !dbg !7502
  %cmp393 = icmp slt i32 %call392, 0, !dbg !7503
  br i1 %cmp393, label %if.then395, label %if.end399, !dbg !7504

if.then395:                                       ; preds = %close_src_and_dst_desc
  %call396 = call i32* @__errno_location() #16, !dbg !7505
  %263 = load i32, i32* %call396, align 4, !dbg !7505, !tbaa !2632, !ctir !7
  %call397 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.67.152, i64 0, i64 0)) #9, !dbg !7507
  %264 = load i8*, i8** %dst_name.addr, align 8, !dbg !7508, !tbaa !2645
  %call398 = call i8* @quotearg_style(i32 4, i8* %264), !dbg !7508
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %263, i8* %call397, i8* %call398), !dbg !7509
  store i8 0, i8* %return_val, align 1, !dbg !7510, !tbaa !2739
  br label %if.end399, !dbg !7511

if.end399:                                        ; preds = %if.then395, %close_src_and_dst_desc
  br label %close_src_desc, !dbg !7512

close_src_desc:                                   ; preds = %if.end399, %if.end125, %if.else, %if.then65, %if.then49, %if.then17, %if.then8
  call void @llvm.dbg.label(metadata !7513), !dbg !7514
  %265 = load i32, i32* %source_desc, align 4, !dbg !7515, !tbaa !2632
  %call400 = call i32 @close(i32 %265), !dbg !7517
  %cmp401 = icmp slt i32 %call400, 0, !dbg !7518
  br i1 %cmp401, label %if.then403, label %if.end407, !dbg !7519

if.then403:                                       ; preds = %close_src_desc
  %call404 = call i32* @__errno_location() #16, !dbg !7520
  %266 = load i32, i32* %call404, align 4, !dbg !7520, !tbaa !2632, !ctir !7
  %call405 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.67.152, i64 0, i64 0)) #9, !dbg !7522
  %267 = load i8*, i8** %src_name.addr, align 8, !dbg !7523, !tbaa !2645
  %call406 = call i8* @quotearg_style(i32 4, i8* %267), !dbg !7523
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %266, i8* %call405, i8* %call406), !dbg !7524
  store i8 0, i8* %return_val, align 1, !dbg !7525, !tbaa !2739
  br label %if.end407, !dbg !7526

if.end407:                                        ; preds = %if.then403, %close_src_desc
  %268 = load i8*, i8** %buf_alloc, align 8, !dbg !7527, !tbaa !2645
  call void @free(i8* %268) #9, !dbg !7528
  %269 = load i8*, i8** %name_alloc, align 8, !dbg !7529, !tbaa !2645
  call void @free(i8* %269) #9, !dbg !7530
  %270 = load i8, i8* %return_val, align 1, !dbg !7531, !tbaa !2739
  %tobool408 = trunc i8 %270 to i1, !dbg !7531
  store i1 %tobool408, i1* %retval, align 1, !dbg !7532
  br label %return, !dbg !7532

return:                                           ; preds = %if.end407, %if.then
  %271 = load i1, i1* %retval, align 1, !dbg !7533
  ret i1 %271, !dbg !7533
}

; Function Attrs: nounwind
declare dso_local i32 @mknod(i8*, i32, i64) #2

; Function Attrs: nounwind
declare dso_local i32 @mkfifo(i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @restore_default_fscreatecon_or_die() #4 !dbg !7534 !ctir !200 {
entry:
  %call = call i32 @setfscreatecon(i8* null), !dbg !7535
  %cmp = icmp ne i32 %call, 0, !dbg !7537
  br i1 %cmp, label %if.then, label %if.end, !dbg !7538

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !7539
  %0 = load i32, i32* %call1, align 4, !dbg !7539, !tbaa !2632, !ctir !7
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.75.144, i64 0, i64 0)) #9, !dbg !7539
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %0, i8* %call2), !dbg !7539
  unreachable, !dbg !7539

if.end:                                           ; preds = %entry
  ret void, !dbg !7540
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @chown_failure_ok(%struct.cp_options* %x) #10 !dbg !7541 !ctir !407 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !7542, metadata !DIExpression()), !dbg !7543
  %call = call i32* @__errno_location() #16, !dbg !7544
  %0 = load i32, i32* %call, align 4, !dbg !7544, !tbaa !2632, !ctir !7
  %cmp = icmp eq i32 %0, 1, !dbg !7545
  br i1 %cmp, label %land.rhs, label %lor.lhs.false, !dbg !7546

lor.lhs.false:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !7547
  %1 = load i32, i32* %call1, align 4, !dbg !7547, !tbaa !2632, !ctir !7
  %cmp2 = icmp eq i32 %1, 22, !dbg !7548
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !7549

land.rhs:                                         ; preds = %lor.lhs.false, %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7550, !tbaa !2645
  %chown_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 11, !dbg !7551, !ctir !357
  %3 = load i8, i8* %chown_privileges, align 2, !dbg !7551, !tbaa !7552
  %tobool = trunc i8 %3 to i1, !dbg !7551, !ctir !142
  %lnot = xor i1 %tobool, true, !dbg !7553
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false
  %4 = phi i1 [ false, %lor.lhs.false ], [ %lnot, %land.rhs ], !dbg !7554
  ret i1 %4, !dbg !7555
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @utimens_symlink(i8* %file, %struct.timespec* %timespec) #4 !dbg !7556 !ctir !557 {
entry:
  %file.addr = alloca i8*, align 8
  %timespec.addr = alloca %struct.timespec*, align 8
  %err = alloca i32, align 4, !ctir !7
  store i8* %file, i8** %file.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !7557, metadata !DIExpression()), !dbg !7558
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !7559, metadata !DIExpression()), !dbg !7560
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7561, metadata !DIExpression()), !dbg !7562
  %0 = load i8*, i8** %file.addr, align 8, !dbg !7563, !tbaa !2645
  %1 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !7564, !tbaa !2645
  %call = call i32 @lutimens(i8* %0, %struct.timespec* %1), !dbg !7565
  store i32 %call, i32* %err, align 4, !dbg !7562, !tbaa !2632
  %2 = load i32, i32* %err, align 4, !dbg !7566, !tbaa !2632
  %tobool = icmp ne i32 %2, 0, !dbg !7566
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7568

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !7569
  %3 = load i32, i32* %call1, align 4, !dbg !7569, !tbaa !2632, !ctir !7
  %cmp = icmp eq i32 %3, 38, !dbg !7570
  br i1 %cmp, label %if.then, label %if.end, !dbg !7571

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %err, align 4, !dbg !7572, !tbaa !2632
  br label %if.end, !dbg !7573

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %4 = load i32, i32* %err, align 4, !dbg !7574, !tbaa !2632
  ret i32 %4, !dbg !7575
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @set_owner(%struct.cp_options* %x, i8* %dst_name, i32 %dest_desc, %struct.stat* %src_sb, i1 zeroext %new_dst, %struct.stat* %dst_sb) #4 !dbg !7576 !ctir !561 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.cp_options*, align 8
  %dst_name.addr = alloca i8*, align 8
  %dest_desc.addr = alloca i32, align 4
  %src_sb.addr = alloca %struct.stat*, align 8
  %new_dst.addr = alloca i8, align 1
  %dst_sb.addr = alloca %struct.stat*, align 8
  %uid = alloca i32, align 4, !ctir !127
  %gid = alloca i32, align 4, !ctir !129
  %old_mode = alloca i32, align 4, !ctir !139
  %new_mode = alloca i32, align 4, !ctir !139
  %restrictive_temp_mode = alloca i32, align 4, !ctir !139
  %saved_errno = alloca i32, align 4, !ctir !7
  %__x = alloca i32, align 4, !ctir !7
  %saved_errno54 = alloca i32, align 4, !ctir !7
  %__x56 = alloca i32, align 4, !ctir !7
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !7577, metadata !DIExpression()), !dbg !7578
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !7579, metadata !DIExpression()), !dbg !7580
  store i32 %dest_desc, i32* %dest_desc.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !7581, metadata !DIExpression()), !dbg !7582
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !7583, metadata !DIExpression()), !dbg !7584
  %frombool = zext i1 %new_dst to i8
  store i8 %frombool, i8* %new_dst.addr, align 1, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %new_dst.addr, metadata !7585, metadata !DIExpression()), !dbg !7586
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_sb.addr, metadata !7587, metadata !DIExpression()), !dbg !7588
  call void @llvm.dbg.declare(metadata i32* %uid, metadata !7589, metadata !DIExpression()), !dbg !7590
  %0 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7591, !tbaa !2645
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 4, !dbg !7592, !ctir !414
  %1 = load i32, i32* %st_uid, align 4, !dbg !7592, !tbaa !4042, !ctir !128
  store i32 %1, i32* %uid, align 4, !dbg !7590, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %gid, metadata !7593, metadata !DIExpression()), !dbg !7594
  %2 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7595, !tbaa !2645
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 5, !dbg !7596, !ctir !414
  %3 = load i32, i32* %st_gid, align 8, !dbg !7596, !tbaa !4071, !ctir !130
  store i32 %3, i32* %gid, align 4, !dbg !7594, !tbaa !2632
  %4 = load i8, i8* %new_dst.addr, align 1, !dbg !7597, !tbaa !2739
  %tobool = trunc i8 %4 to i1, !dbg !7597
  br i1 %tobool, label %if.end20, label %land.lhs.true, !dbg !7599

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7600, !tbaa !2645
  %preserve_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %5, i32 0, i32 15, !dbg !7601, !ctir !357
  %6 = load i8, i8* %preserve_mode, align 2, !dbg !7601, !tbaa !3184
  %tobool1 = trunc i8 %6 to i1, !dbg !7601, !ctir !142
  br i1 %tobool1, label %if.then, label %lor.lhs.false, !dbg !7602

lor.lhs.false:                                    ; preds = %land.lhs.true
  %7 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7603, !tbaa !2645
  %move_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %7, i32 0, i32 9, !dbg !7604, !ctir !357
  %8 = load i8, i8* %move_mode, align 8, !dbg !7604, !tbaa !3164
  %tobool2 = trunc i8 %8 to i1, !dbg !7604, !ctir !142
  br i1 %tobool2, label %if.then, label %lor.lhs.false3, !dbg !7605

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %9 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7606, !tbaa !2645
  %set_mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 28, !dbg !7607, !ctir !357
  %10 = load i8, i8* %set_mode, align 1, !dbg !7607, !tbaa !3226
  %tobool4 = trunc i8 %10 to i1, !dbg !7607, !ctir !142
  br i1 %tobool4, label %if.then, label %if.end20, !dbg !7608

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %old_mode, metadata !7609, metadata !DIExpression()), !dbg !7611
  %11 = load %struct.stat*, %struct.stat** %dst_sb.addr, align 8, !dbg !7612, !tbaa !2645
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 3, !dbg !7613, !ctir !414
  %12 = load i32, i32* %st_mode, align 8, !dbg !7613, !tbaa !2911, !ctir !140
  store i32 %12, i32* %old_mode, align 4, !dbg !7611, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %new_mode, metadata !7614, metadata !DIExpression()), !dbg !7615
  %13 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7616, !tbaa !2645
  %preserve_mode5 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %13, i32 0, i32 15, !dbg !7617, !ctir !357
  %14 = load i8, i8* %preserve_mode5, align 2, !dbg !7617, !tbaa !3184
  %tobool6 = trunc i8 %14 to i1, !dbg !7617, !ctir !142
  br i1 %tobool6, label %cond.true, label %lor.lhs.false7, !dbg !7618

lor.lhs.false7:                                   ; preds = %if.then
  %15 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7619, !tbaa !2645
  %move_mode8 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %15, i32 0, i32 9, !dbg !7620, !ctir !357
  %16 = load i8, i8* %move_mode8, align 8, !dbg !7620, !tbaa !3164
  %tobool9 = trunc i8 %16 to i1, !dbg !7620, !ctir !142
  br i1 %tobool9, label %cond.true, label %cond.false, !dbg !7616

cond.true:                                        ; preds = %lor.lhs.false7, %if.then
  %17 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7621, !tbaa !2645
  %st_mode10 = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 3, !dbg !7622, !ctir !414
  %18 = load i32, i32* %st_mode10, align 8, !dbg !7622, !tbaa !2911, !ctir !140
  br label %cond.end, !dbg !7616

cond.false:                                       ; preds = %lor.lhs.false7
  %19 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7623, !tbaa !2645
  %mode = getelementptr inbounds %struct.cp_options, %struct.cp_options* %19, i32 0, i32 4, !dbg !7624, !ctir !357
  %20 = load i32, i32* %mode, align 8, !dbg !7624, !tbaa !3230, !ctir !139
  br label %cond.end, !dbg !7616

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %18, %cond.true ], [ %20, %cond.false ], !dbg !7616
  store i32 %cond, i32* %new_mode, align 4, !dbg !7615, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %restrictive_temp_mode, metadata !7625, metadata !DIExpression()), !dbg !7626
  %21 = load i32, i32* %old_mode, align 4, !dbg !7627, !tbaa !2632
  %22 = load i32, i32* %new_mode, align 4, !dbg !7628, !tbaa !2632
  %and = and i32 %21, %22, !dbg !7629
  %and11 = and i32 %and, 448, !dbg !7630
  store i32 %and11, i32* %restrictive_temp_mode, align 4, !dbg !7626, !tbaa !2632
  %23 = load i8*, i8** %dst_name.addr, align 8, !dbg !7631, !tbaa !2645
  %24 = load i32, i32* %dest_desc.addr, align 4, !dbg !7633, !tbaa !2632
  %25 = load i32, i32* %restrictive_temp_mode, align 4, !dbg !7634, !tbaa !2632
  %call = call i32 @qset_acl(i8* %23, i32 %24, i32 %25), !dbg !7635
  %cmp = icmp ne i32 %call, 0, !dbg !7636
  br i1 %cmp, label %if.then12, label %if.end19, !dbg !7637

if.then12:                                        ; preds = %cond.end
  %26 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7638, !tbaa !2645
  %call13 = call zeroext i1 @owner_failure_ok(%struct.cp_options* %26), !dbg !7641
  br i1 %call13, label %if.end, label %if.then14, !dbg !7642

if.then14:                                        ; preds = %if.then12
  %call15 = call i32* @__errno_location() #16, !dbg !7643
  %27 = load i32, i32* %call15, align 4, !dbg !7643, !tbaa !2632, !ctir !7
  %call16 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.76.143, i64 0, i64 0)) #9, !dbg !7644
  %28 = load i8*, i8** %dst_name.addr, align 8, !dbg !7645, !tbaa !2645
  %call17 = call i8* @quotearg_style(i32 4, i8* %28), !dbg !7645
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %27, i8* %call16, i8* %call17), !dbg !7646
  br label %if.end, !dbg !7646

if.end:                                           ; preds = %if.then14, %if.then12
  %29 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7647, !tbaa !2645
  %require_preserve = getelementptr inbounds %struct.cp_options, %struct.cp_options* %29, i32 0, i32 21, !dbg !7648, !ctir !357
  %30 = load i8, i8* %require_preserve, align 4, !dbg !7648, !tbaa !3203
  %tobool18 = trunc i8 %30 to i1, !dbg !7648, !ctir !142
  %conv = zext i1 %tobool18 to i32, !dbg !7647
  %sub = sub nsw i32 0, %conv, !dbg !7649
  store i32 %sub, i32* %retval, align 4, !dbg !7650
  br label %return, !dbg !7650

if.end19:                                         ; preds = %cond.end
  br label %if.end20, !dbg !7651

if.end20:                                         ; preds = %if.end19, %lor.lhs.false3, %entry
  %31 = load i32, i32* %dest_desc.addr, align 4, !dbg !7652, !tbaa !2632
  %cmp21 = icmp ne i32 %31, -1, !dbg !7654
  br i1 %cmp21, label %if.then23, label %if.else, !dbg !7655

if.then23:                                        ; preds = %if.end20
  %32 = load i32, i32* %dest_desc.addr, align 4, !dbg !7656, !tbaa !2632
  %33 = load i32, i32* %uid, align 4, !dbg !7659, !tbaa !2632
  %34 = load i32, i32* %gid, align 4, !dbg !7660, !tbaa !2632
  %call24 = call i32 @fchown(i32 %32, i32 %33, i32 %34) #9, !dbg !7661
  %cmp25 = icmp eq i32 %call24, 0, !dbg !7662
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !7663

if.then27:                                        ; preds = %if.then23
  store i32 1, i32* %retval, align 4, !dbg !7664
  br label %return, !dbg !7664

if.end28:                                         ; preds = %if.then23
  %call29 = call i32* @__errno_location() #16, !dbg !7665
  %35 = load i32, i32* %call29, align 4, !dbg !7665, !tbaa !2632, !ctir !7
  %cmp30 = icmp eq i32 %35, 1, !dbg !7667
  br i1 %cmp30, label %if.then36, label %lor.lhs.false32, !dbg !7668

lor.lhs.false32:                                  ; preds = %if.end28
  %call33 = call i32* @__errno_location() #16, !dbg !7669
  %36 = load i32, i32* %call33, align 4, !dbg !7669, !tbaa !2632, !ctir !7
  %cmp34 = icmp eq i32 %36, 22, !dbg !7670
  br i1 %cmp34, label %if.then36, label %if.end40, !dbg !7671

if.then36:                                        ; preds = %lor.lhs.false32, %if.end28
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !7672, metadata !DIExpression()), !dbg !7674
  %call37 = call i32* @__errno_location() #16, !dbg !7675
  %37 = load i32, i32* %call37, align 4, !dbg !7675, !tbaa !2632, !ctir !7
  store i32 %37, i32* %saved_errno, align 4, !dbg !7674, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !7676, metadata !DIExpression()), !dbg !7678
  %38 = load i32, i32* %dest_desc.addr, align 4, !dbg !7678, !tbaa !2632
  %39 = load i32, i32* %gid, align 4, !dbg !7678, !tbaa !2632
  %call38 = call i32 @fchown(i32 %38, i32 -1, i32 %39) #9, !dbg !7678
  store i32 %call38, i32* %__x, align 4, !dbg !7678, !tbaa !2632
  %40 = load i32, i32* %__x, align 4, !dbg !7678, !tbaa !2632
  %41 = load i32, i32* %saved_errno, align 4, !dbg !7679, !tbaa !2632
  %call39 = call i32* @__errno_location() #16, !dbg !7680
  store i32 %41, i32* %call39, align 4, !dbg !7681, !tbaa !2632, !ctir !7
  br label %if.end40, !dbg !7682

if.end40:                                         ; preds = %if.then36, %lor.lhs.false32
  br label %if.end60, !dbg !7683

if.else:                                          ; preds = %if.end20
  %42 = load i8*, i8** %dst_name.addr, align 8, !dbg !7684, !tbaa !2645
  %43 = load i32, i32* %uid, align 4, !dbg !7687, !tbaa !2632
  %44 = load i32, i32* %gid, align 4, !dbg !7688, !tbaa !2632
  %call41 = call i32 @lchown(i8* %42, i32 %43, i32 %44) #9, !dbg !7689
  %cmp42 = icmp eq i32 %call41, 0, !dbg !7690
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !7691

if.then44:                                        ; preds = %if.else
  store i32 1, i32* %retval, align 4, !dbg !7692
  br label %return, !dbg !7692

if.end45:                                         ; preds = %if.else
  %call46 = call i32* @__errno_location() #16, !dbg !7693
  %45 = load i32, i32* %call46, align 4, !dbg !7693, !tbaa !2632, !ctir !7
  %cmp47 = icmp eq i32 %45, 1, !dbg !7695
  br i1 %cmp47, label %if.then53, label %lor.lhs.false49, !dbg !7696

lor.lhs.false49:                                  ; preds = %if.end45
  %call50 = call i32* @__errno_location() #16, !dbg !7697
  %46 = load i32, i32* %call50, align 4, !dbg !7697, !tbaa !2632, !ctir !7
  %cmp51 = icmp eq i32 %46, 22, !dbg !7698
  br i1 %cmp51, label %if.then53, label %if.end59, !dbg !7699

if.then53:                                        ; preds = %lor.lhs.false49, %if.end45
  call void @llvm.dbg.declare(metadata i32* %saved_errno54, metadata !7700, metadata !DIExpression()), !dbg !7702
  %call55 = call i32* @__errno_location() #16, !dbg !7703
  %47 = load i32, i32* %call55, align 4, !dbg !7703, !tbaa !2632, !ctir !7
  store i32 %47, i32* %saved_errno54, align 4, !dbg !7702, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %__x56, metadata !7704, metadata !DIExpression()), !dbg !7706
  %48 = load i8*, i8** %dst_name.addr, align 8, !dbg !7706, !tbaa !2645
  %49 = load i32, i32* %gid, align 4, !dbg !7706, !tbaa !2632
  %call57 = call i32 @lchown(i8* %48, i32 -1, i32 %49) #9, !dbg !7706
  store i32 %call57, i32* %__x56, align 4, !dbg !7706, !tbaa !2632
  %50 = load i32, i32* %__x56, align 4, !dbg !7706, !tbaa !2632
  %51 = load i32, i32* %saved_errno54, align 4, !dbg !7707, !tbaa !2632
  %call58 = call i32* @__errno_location() #16, !dbg !7708
  store i32 %51, i32* %call58, align 4, !dbg !7709, !tbaa !2632, !ctir !7
  br label %if.end59, !dbg !7710

if.end59:                                         ; preds = %if.then53, %lor.lhs.false49
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.end40
  %52 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7711, !tbaa !2645
  %call61 = call zeroext i1 @chown_failure_ok(%struct.cp_options* %52) #14, !dbg !7713
  br i1 %call61, label %if.end70, label %if.then62, !dbg !7714

if.then62:                                        ; preds = %if.end60
  %call63 = call i32* @__errno_location() #16, !dbg !7715
  %53 = load i32, i32* %call63, align 4, !dbg !7715, !tbaa !2632, !ctir !7
  %call64 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.46.136, i64 0, i64 0)) #9, !dbg !7717
  %54 = load i8*, i8** %dst_name.addr, align 8, !dbg !7718, !tbaa !2645
  %call65 = call i8* @quotearg_style(i32 4, i8* %54), !dbg !7718
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %53, i8* %call64, i8* %call65), !dbg !7719
  %55 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7720, !tbaa !2645
  %require_preserve66 = getelementptr inbounds %struct.cp_options, %struct.cp_options* %55, i32 0, i32 21, !dbg !7722, !ctir !357
  %56 = load i8, i8* %require_preserve66, align 4, !dbg !7722, !tbaa !3203
  %tobool67 = trunc i8 %56 to i1, !dbg !7722, !ctir !142
  br i1 %tobool67, label %if.then68, label %if.end69, !dbg !7723

if.then68:                                        ; preds = %if.then62
  store i32 -1, i32* %retval, align 4, !dbg !7724
  br label %return, !dbg !7724

if.end69:                                         ; preds = %if.then62
  br label %if.end70, !dbg !7725

if.end70:                                         ; preds = %if.end69, %if.end60
  store i32 0, i32* %retval, align 4, !dbg !7726
  br label %return, !dbg !7726

return:                                           ; preds = %if.end70, %if.then68, %if.then44, %if.then27, %if.end
  %57 = load i32, i32* %retval, align 4, !dbg !7727
  ret i32 %57, !dbg !7727
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @copy_attr(i8* %src_path, i32 %src_fd, i8* %dst_path, i32 %dst_fd, %struct.cp_options* %x) #4 !dbg !7728 !ctir !563 {
entry:
  %src_path.addr = alloca i8*, align 8
  %src_fd.addr = alloca i32, align 4
  %dst_path.addr = alloca i8*, align 8
  %dst_fd.addr = alloca i32, align 4
  %x.addr = alloca %struct.cp_options*, align 8
  %ret = alloca i32, align 4, !ctir !7
  %all_errors = alloca i8, align 1, !ctir !142
  %some_errors = alloca i8, align 1, !ctir !142
  %selinux_done = alloca i8, align 1, !ctir !142
  %ctx = alloca %struct.error_context, align 8, !ctir !568
  store i8* %src_path, i8** %src_path.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %src_path.addr, metadata !7729, metadata !DIExpression()), !dbg !7730
  store i32 %src_fd, i32* %src_fd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !7731, metadata !DIExpression()), !dbg !7732
  store i8* %dst_path, i8** %dst_path.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dst_path.addr, metadata !7733, metadata !DIExpression()), !dbg !7734
  store i32 %dst_fd, i32* %dst_fd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %dst_fd.addr, metadata !7735, metadata !DIExpression()), !dbg !7736
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !7737, metadata !DIExpression()), !dbg !7738
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7739, metadata !DIExpression()), !dbg !7740
  call void @llvm.dbg.declare(metadata i8* %all_errors, metadata !7741, metadata !DIExpression()), !dbg !7742
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7743, !tbaa !2645
  %data_copy_required = getelementptr inbounds %struct.cp_options, %struct.cp_options* %0, i32 0, i32 20, !dbg !7744, !ctir !357
  %1 = load i8, i8* %data_copy_required, align 1, !dbg !7744, !tbaa !3199
  %tobool = trunc i8 %1 to i1, !dbg !7744, !ctir !142
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !7745

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7746, !tbaa !2645
  %require_preserve_xattr = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 25, !dbg !7747, !ctir !357
  %3 = load i8, i8* %require_preserve_xattr, align 8, !dbg !7747, !tbaa !3207
  %tobool1 = trunc i8 %3 to i1, !dbg !7747, !ctir !142
  br label %lor.end, !dbg !7745

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %tobool1, %lor.rhs ]
  %frombool = zext i1 %4 to i8, !dbg !7742
  store i8 %frombool, i8* %all_errors, align 1, !dbg !7742, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %some_errors, metadata !7748, metadata !DIExpression()), !dbg !7749
  %5 = load i8, i8* %all_errors, align 1, !dbg !7750, !tbaa !2739
  %tobool2 = trunc i8 %5 to i1, !dbg !7750
  br i1 %tobool2, label %land.end, label %land.rhs, !dbg !7751

land.rhs:                                         ; preds = %lor.end
  %6 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7752, !tbaa !2645
  %reduce_diagnostics = getelementptr inbounds %struct.cp_options, %struct.cp_options* %6, i32 0, i32 26, !dbg !7753, !ctir !357
  %7 = load i8, i8* %reduce_diagnostics, align 1, !dbg !7753, !tbaa !3195
  %tobool3 = trunc i8 %7 to i1, !dbg !7753, !ctir !142
  %lnot = xor i1 %tobool3, true, !dbg !7754
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.end
  %8 = phi i1 [ false, %lor.end ], [ %lnot, %land.rhs ], !dbg !7755
  %frombool4 = zext i1 %8 to i8, !dbg !7749
  store i8 %frombool4, i8* %some_errors, align 1, !dbg !7749, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %selinux_done, metadata !7756, metadata !DIExpression()), !dbg !7757
  %9 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7758, !tbaa !2645
  %preserve_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %9, i32 0, i32 22, !dbg !7759, !ctir !357
  %10 = load i8, i8* %preserve_security_context, align 1, !dbg !7759, !tbaa !2847
  %tobool5 = trunc i8 %10 to i1, !dbg !7759, !ctir !142
  br i1 %tobool5, label %lor.end8, label %lor.rhs6, !dbg !7760

lor.rhs6:                                         ; preds = %land.end
  %11 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7761, !tbaa !2645
  %set_security_context = getelementptr inbounds %struct.cp_options, %struct.cp_options* %11, i32 0, i32 18, !dbg !7762, !ctir !357
  %12 = load i8, i8* %set_security_context, align 1, !dbg !7762, !tbaa !2863
  %tobool7 = trunc i8 %12 to i1, !dbg !7762, !ctir !142
  br label %lor.end8, !dbg !7760

lor.end8:                                         ; preds = %lor.rhs6, %land.end
  %13 = phi i1 [ true, %land.end ], [ %tobool7, %lor.rhs6 ]
  %frombool9 = zext i1 %13 to i8, !dbg !7757
  store i8 %frombool9, i8* %selinux_done, align 1, !dbg !7757, !tbaa !2739
  call void @llvm.dbg.declare(metadata %struct.error_context* %ctx, metadata !7763, metadata !DIExpression()), !dbg !7764
  %error = getelementptr inbounds %struct.error_context, %struct.error_context* %ctx, i32 0, i32 0, !dbg !7765
  %14 = load i8, i8* %all_errors, align 1, !dbg !7766, !tbaa !2739
  %tobool10 = trunc i8 %14 to i1, !dbg !7766
  %15 = zext i1 %tobool10 to i64, !dbg !7766
  %cond = select i1 %tobool10, void (%struct.error_context*, i8*, ...)* @copy_attr_allerror, void (%struct.error_context*, i8*, ...)* @copy_attr_error, !dbg !7766
  store void (%struct.error_context*, i8*, ...)* %cond, void (%struct.error_context*, i8*, ...)** %error, align 8, !dbg !7765, !tbaa !7767
  %quote = getelementptr inbounds %struct.error_context, %struct.error_context* %ctx, i32 0, i32 1, !dbg !7765
  store i8* (%struct.error_context*, i8*)* @copy_attr_quote, i8* (%struct.error_context*, i8*)** %quote, align 8, !dbg !7765, !tbaa !7769
  %quote_free = getelementptr inbounds %struct.error_context, %struct.error_context* %ctx, i32 0, i32 2, !dbg !7765
  store void (%struct.error_context*, i8*)* @copy_attr_free, void (%struct.error_context*, i8*)** %quote_free, align 8, !dbg !7765, !tbaa !7770
  %16 = load i32, i32* %src_fd.addr, align 4, !dbg !7771, !tbaa !2632
  %cmp = icmp sle i32 0, %16, !dbg !7773
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !7774

land.lhs.true:                                    ; preds = %lor.end8
  %17 = load i32, i32* %dst_fd.addr, align 4, !dbg !7775, !tbaa !2632
  %cmp11 = icmp sle i32 0, %17, !dbg !7776
  br i1 %cmp11, label %if.then, label %if.else, !dbg !7777

if.then:                                          ; preds = %land.lhs.true
  %18 = load i8*, i8** %src_path.addr, align 8, !dbg !7778, !tbaa !2645
  %19 = load i32, i32* %src_fd.addr, align 4, !dbg !7779, !tbaa !2632
  %20 = load i8*, i8** %dst_path.addr, align 8, !dbg !7780, !tbaa !2645
  %21 = load i32, i32* %dst_fd.addr, align 4, !dbg !7781, !tbaa !2632
  %22 = load i8, i8* %selinux_done, align 1, !dbg !7782, !tbaa !2739
  %tobool12 = trunc i8 %22 to i1, !dbg !7782
  %23 = zext i1 %tobool12 to i64, !dbg !7782
  %cond13 = select i1 %tobool12, i32 (i8*, %struct.error_context*)* @check_selinux_attr, i32 (i8*, %struct.error_context*)* null, !dbg !7782
  %24 = load i8, i8* %all_errors, align 1, !dbg !7783, !tbaa !2739
  %tobool14 = trunc i8 %24 to i1, !dbg !7783
  br i1 %tobool14, label %cond.true, label %lor.lhs.false, !dbg !7784

lor.lhs.false:                                    ; preds = %if.then
  %25 = load i8, i8* %some_errors, align 1, !dbg !7785, !tbaa !2739
  %tobool15 = trunc i8 %25 to i1, !dbg !7785
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !7783

cond.true:                                        ; preds = %lor.lhs.false, %if.then
  br label %cond.end, !dbg !7783

cond.false:                                       ; preds = %lor.lhs.false
  br label %cond.end, !dbg !7783

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond16 = phi %struct.error_context* [ %ctx, %cond.true ], [ null, %cond.false ], !dbg !7783
  %call = call i32 @attr_copy_fd(i8* %18, i32 %19, i8* %20, i32 %21, i32 (i8*, %struct.error_context*)* %cond13, %struct.error_context* %cond16), !dbg !7786
  store i32 %call, i32* %ret, align 4, !dbg !7787, !tbaa !2632
  br label %if.end, !dbg !7788

if.else:                                          ; preds = %land.lhs.true, %lor.end8
  %26 = load i8*, i8** %src_path.addr, align 8, !dbg !7789, !tbaa !2645
  %27 = load i8*, i8** %dst_path.addr, align 8, !dbg !7790, !tbaa !2645
  %28 = load i8, i8* %selinux_done, align 1, !dbg !7791, !tbaa !2739
  %tobool17 = trunc i8 %28 to i1, !dbg !7791
  %29 = zext i1 %tobool17 to i64, !dbg !7791
  %cond18 = select i1 %tobool17, i32 (i8*, %struct.error_context*)* @check_selinux_attr, i32 (i8*, %struct.error_context*)* null, !dbg !7791
  %30 = load i8, i8* %all_errors, align 1, !dbg !7792, !tbaa !2739
  %tobool19 = trunc i8 %30 to i1, !dbg !7792
  br i1 %tobool19, label %cond.true22, label %lor.lhs.false20, !dbg !7793

lor.lhs.false20:                                  ; preds = %if.else
  %31 = load i8, i8* %some_errors, align 1, !dbg !7794, !tbaa !2739
  %tobool21 = trunc i8 %31 to i1, !dbg !7794
  br i1 %tobool21, label %cond.true22, label %cond.false23, !dbg !7792

cond.true22:                                      ; preds = %lor.lhs.false20, %if.else
  br label %cond.end24, !dbg !7792

cond.false23:                                     ; preds = %lor.lhs.false20
  br label %cond.end24, !dbg !7792

cond.end24:                                       ; preds = %cond.false23, %cond.true22
  %cond25 = phi %struct.error_context* [ %ctx, %cond.true22 ], [ null, %cond.false23 ], !dbg !7792
  %call26 = call i32 @attr_copy_file(i8* %26, i8* %27, i32 (i8*, %struct.error_context*)* %cond18, %struct.error_context* %cond25), !dbg !7795
  store i32 %call26, i32* %ret, align 4, !dbg !7796, !tbaa !2632
  br label %if.end

if.end:                                           ; preds = %cond.end24, %cond.end
  %32 = load i32, i32* %ret, align 4, !dbg !7797, !tbaa !2632
  %cmp27 = icmp eq i32 %32, 0, !dbg !7798
  ret i1 %cmp27, !dbg !7799
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @set_author(i8* %dst_name, i32 %dest_desc, %struct.stat* %src_sb) #4 !dbg !7800 !ctir !594 {
entry:
  %dst_name.addr = alloca i8*, align 8
  %dest_desc.addr = alloca i32, align 4
  %src_sb.addr = alloca %struct.stat*, align 8
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !7801, metadata !DIExpression()), !dbg !7802
  store i32 %dest_desc, i32* %dest_desc.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !7803, metadata !DIExpression()), !dbg !7804
  store %struct.stat* %src_sb, %struct.stat** %src_sb.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.stat** %src_sb.addr, metadata !7805, metadata !DIExpression()), !dbg !7806
  %0 = load i8*, i8** %dst_name.addr, align 8, !dbg !7807, !tbaa !2645
  %1 = load i32, i32* %dest_desc.addr, align 4, !dbg !7808, !tbaa !2632
  %2 = load %struct.stat*, %struct.stat** %src_sb.addr, align 8, !dbg !7809, !tbaa !2645
  ret void, !dbg !7810
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @cached_umask() #4 !dbg !599 !ctir !409 {
entry:
  %0 = load i32, i32* @cached_umask.mask, align 4, !dbg !7811, !tbaa !2632
  %cmp = icmp eq i32 %0, -1, !dbg !7813
  br i1 %cmp, label %if.then, label %if.end, !dbg !7814

if.then:                                          ; preds = %entry
  %call = call i32 @umask(i32 0) #9, !dbg !7815
  store i32 %call, i32* @cached_umask.mask, align 4, !dbg !7817, !tbaa !2632
  %1 = load i32, i32* @cached_umask.mask, align 4, !dbg !7818, !tbaa !2632
  %call1 = call i32 @umask(i32 %1) #9, !dbg !7819
  br label %if.end, !dbg !7820

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* @cached_umask.mask, align 4, !dbg !7821, !tbaa !2632
  ret i32 %2, !dbg !7822
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline nounwind optnone uwtable
define internal void @copy_attr_allerror(%struct.error_context* %ctx, i8* %fmt, ...) #4 !dbg !7823 !ctir !565 {
entry:
  %ctx.addr = alloca %struct.error_context*, align 8
  %fmt.addr = alloca i8*, align 8
  %err = alloca i32, align 4, !ctir !7
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !581
  store %struct.error_context* %ctx, %struct.error_context** %ctx.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.error_context** %ctx.addr, metadata !7824, metadata !DIExpression()), !dbg !7825
  store i8* %fmt, i8** %fmt.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !7826, metadata !DIExpression()), !dbg !7827
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7828, metadata !DIExpression()), !dbg !7829
  %call = call i32* @__errno_location() #16, !dbg !7830
  %0 = load i32, i32* %call, align 4, !dbg !7830, !tbaa !2632, !ctir !7
  store i32 %0, i32* %err, align 4, !dbg !7829, !tbaa !2632
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !7831, metadata !DIExpression()), !dbg !7832
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !7833
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !7833
  call void @llvm.va_start(i8* %arraydecay1), !dbg !7833
  %1 = load i32, i32* %err, align 4, !dbg !7834, !tbaa !2632
  %2 = load i8*, i8** %fmt.addr, align 8, !dbg !7835, !tbaa !2645
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !7836
  call void @verror(i32 0, i32 %1, i8* %2, %struct.__va_list_tag* %arraydecay2), !dbg !7837
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !7838
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !7838
  call void @llvm.va_end(i8* %arraydecay34), !dbg !7838
  ret void, !dbg !7839
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @copy_attr_error(%struct.error_context* %ctx, i8* %fmt, ...) #4 !dbg !7840 !ctir !565 {
entry:
  %ctx.addr = alloca %struct.error_context*, align 8
  %fmt.addr = alloca i8*, align 8
  %err = alloca i32, align 4, !ctir !7
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !581
  store %struct.error_context* %ctx, %struct.error_context** %ctx.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.error_context** %ctx.addr, metadata !7841, metadata !DIExpression()), !dbg !7842
  store i8* %fmt, i8** %fmt.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %fmt.addr, metadata !7843, metadata !DIExpression()), !dbg !7844
  %call = call i32* @__errno_location() #16, !dbg !7845
  %0 = load i32, i32* %call, align 4, !dbg !7845, !tbaa !2632, !ctir !7
  %call1 = call zeroext i1 @errno_unsupported(i32 %0), !dbg !7847
  br i1 %call1, label %if.end, label %if.then, !dbg !7848

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7849, metadata !DIExpression()), !dbg !7851
  %call2 = call i32* @__errno_location() #16, !dbg !7852
  %1 = load i32, i32* %call2, align 4, !dbg !7852, !tbaa !2632, !ctir !7
  store i32 %1, i32* %err, align 4, !dbg !7851, !tbaa !2632
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !7853, metadata !DIExpression()), !dbg !7854
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !7855
  %arraydecay3 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !7855
  call void @llvm.va_start(i8* %arraydecay3), !dbg !7855
  %2 = load i32, i32* %err, align 4, !dbg !7856, !tbaa !2632
  %3 = load i8*, i8** %fmt.addr, align 8, !dbg !7857, !tbaa !2645
  %arraydecay4 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !7858
  call void @verror(i32 0, i32 %2, i8* %3, %struct.__va_list_tag* %arraydecay4), !dbg !7859
  %arraydecay5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !7860
  %arraydecay56 = bitcast %struct.__va_list_tag* %arraydecay5 to i8*, !dbg !7860
  call void @llvm.va_end(i8* %arraydecay56), !dbg !7860
  br label %if.end, !dbg !7861

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7862
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @copy_attr_quote(%struct.error_context* %ctx, i8* %str) #4 !dbg !7863 !ctir !577 {
entry:
  %ctx.addr = alloca %struct.error_context*, align 8
  %str.addr = alloca i8*, align 8
  store %struct.error_context* %ctx, %struct.error_context** %ctx.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.error_context** %ctx.addr, metadata !7864, metadata !DIExpression()), !dbg !7865
  store i8* %str, i8** %str.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !7866, metadata !DIExpression()), !dbg !7867
  %0 = load i8*, i8** %str.addr, align 8, !dbg !7868, !tbaa !2645
  %call = call i8* @quotearg_style(i32 4, i8* %0), !dbg !7868
  ret i8* %call, !dbg !7869
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @copy_attr_free(%struct.error_context* %ctx, i8* %str) #4 !dbg !7870 !ctir !565 {
entry:
  %ctx.addr = alloca %struct.error_context*, align 8
  %str.addr = alloca i8*, align 8
  store %struct.error_context* %ctx, %struct.error_context** %ctx.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.error_context** %ctx.addr, metadata !7871, metadata !DIExpression()), !dbg !7872
  store i8* %str, i8** %str.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !7873, metadata !DIExpression()), !dbg !7874
  ret void, !dbg !7875
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @check_selinux_attr(i8* %name, %struct.error_context* %ctx) #4 !dbg !7876 !ctir !592 {
entry:
  %name.addr = alloca i8*, align 8
  %ctx.addr = alloca %struct.error_context*, align 8
  store i8* %name, i8** %name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7877, metadata !DIExpression()), !dbg !7878
  store %struct.error_context* %ctx, %struct.error_context** %ctx.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.error_context** %ctx.addr, metadata !7879, metadata !DIExpression()), !dbg !7880
  %0 = load i8*, i8** %name.addr, align 8, !dbg !7881, !tbaa !2645
  %call = call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.77.142, i64 0, i64 0), i64 16) #14, !dbg !7881
  %tobool = icmp ne i32 %call, 0, !dbg !7881
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !7882

land.rhs:                                         ; preds = %entry
  %1 = load i8*, i8** %name.addr, align 8, !dbg !7883, !tbaa !2645
  %2 = load %struct.error_context*, %struct.error_context** %ctx.addr, align 8, !dbg !7884, !tbaa !2645
  %call1 = call i32 @attr_copy_check_permissions(i8* %1, %struct.error_context* %2), !dbg !7885
  %tobool2 = icmp ne i32 %call1, 0, !dbg !7882
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ], !dbg !7886
  %land.ext = zext i1 %3 to i32, !dbg !7882
  ret i32 %land.ext, !dbg !7887
}

declare dso_local i32 @attr_copy_fd(i8*, i32, i8*, i32, i32 (i8*, %struct.error_context*)*, %struct.error_context*) #3

declare dso_local i32 @attr_copy_file(i8*, i8*, i32 (i8*, %struct.error_context*)*, %struct.error_context*) #3

declare dso_local i32 @attr_copy_check_permissions(i8*, %struct.error_context*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @owner_failure_ok(%struct.cp_options* %x) #4 !dbg !7888 !ctir !407 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !7889, metadata !DIExpression()), !dbg !7890
  %call = call i32* @__errno_location() #16, !dbg !7891
  %0 = load i32, i32* %call, align 4, !dbg !7891, !tbaa !2632, !ctir !7
  %cmp = icmp eq i32 %0, 1, !dbg !7892
  br i1 %cmp, label %land.rhs, label %lor.lhs.false, !dbg !7893

lor.lhs.false:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !7894
  %1 = load i32, i32* %call1, align 4, !dbg !7894, !tbaa !2632, !ctir !7
  %cmp2 = icmp eq i32 %1, 22, !dbg !7895
  br i1 %cmp2, label %land.rhs, label %land.end, !dbg !7896

land.rhs:                                         ; preds = %lor.lhs.false, %entry
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !7897, !tbaa !2645
  %owner_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 12, !dbg !7898, !ctir !357
  %3 = load i8, i8* %owner_privileges, align 1, !dbg !7898, !tbaa !7899
  %tobool = trunc i8 %3 to i1, !dbg !7898, !ctir !142
  %lnot = xor i1 %tobool, true, !dbg !7900
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false
  %4 = phi i1 [ false, %lor.lhs.false ], [ %lnot, %land.rhs ], !dbg !7901
  ret i1 %4, !dbg !7902
}

; Function Attrs: nounwind
declare dso_local i32 @fchown(i32, i32, i32) #2

; Function Attrs: nounwind
declare dso_local i32 @fstat(i32, %struct.stat*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @clone_file(i32 %dest_fd, i32 %src_fd) #4 !dbg !7903 !ctir !505 {
entry:
  %dest_fd.addr = alloca i32, align 4
  %src_fd.addr = alloca i32, align 4
  store i32 %dest_fd, i32* %dest_fd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %dest_fd.addr, metadata !7904, metadata !DIExpression()), !dbg !7905
  store i32 %src_fd, i32* %src_fd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !7906, metadata !DIExpression()), !dbg !7907
  %0 = load i32, i32* %dest_fd.addr, align 4, !dbg !7908, !tbaa !2632
  %1 = load i32, i32* %src_fd.addr, align 4, !dbg !7909, !tbaa !2632
  %call = call i32 (i32, i64, ...) @ioctl(i32 %0, i64 1074041865, i32 %1) #9, !dbg !7910
  ret i32 %call, !dbg !7911
}

; Function Attrs: nounwind readnone
declare dso_local i32 @getpagesize() #8

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @io_blksize(%struct.stat* byval(%struct.stat) align 8 %sb) #4 !dbg !7912 !ctir !507 {
entry:
  call void @llvm.dbg.declare(metadata %struct.stat* %sb, metadata !7914, metadata !DIExpression()), !dbg !7915
  %st_blksize = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7916, !ctir !415
  %0 = load i64, i64* %st_blksize, align 8, !dbg !7916, !tbaa !7157, !ctir !286
  %cmp = icmp slt i64 0, %0, !dbg !7916
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !7916

land.lhs.true:                                    ; preds = %entry
  %st_blksize1 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7916, !ctir !415
  %1 = load i64, i64* %st_blksize1, align 8, !dbg !7916, !tbaa !7157, !ctir !286
  %cmp2 = icmp ule i64 %1, 2305843009213693952, !dbg !7916
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !7916

cond.true:                                        ; preds = %land.lhs.true
  %st_blksize3 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7916, !ctir !415
  %2 = load i64, i64* %st_blksize3, align 8, !dbg !7916, !tbaa !7157, !ctir !286
  br label %cond.end, !dbg !7916

cond.false:                                       ; preds = %land.lhs.true, %entry
  br label %cond.end, !dbg !7916

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ 512, %cond.false ], !dbg !7916
  %cmp4 = icmp sgt i64 131072, %cond, !dbg !7916
  br i1 %cmp4, label %cond.true5, label %cond.false6, !dbg !7916

cond.true5:                                       ; preds = %cond.end
  br label %cond.end17, !dbg !7916

cond.false6:                                      ; preds = %cond.end
  %st_blksize7 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7916, !ctir !415
  %3 = load i64, i64* %st_blksize7, align 8, !dbg !7916, !tbaa !7157, !ctir !286
  %cmp8 = icmp slt i64 0, %3, !dbg !7916
  br i1 %cmp8, label %land.lhs.true9, label %cond.false14, !dbg !7916

land.lhs.true9:                                   ; preds = %cond.false6
  %st_blksize10 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7916, !ctir !415
  %4 = load i64, i64* %st_blksize10, align 8, !dbg !7916, !tbaa !7157, !ctir !286
  %cmp11 = icmp ule i64 %4, 2305843009213693952, !dbg !7916
  br i1 %cmp11, label %cond.true12, label %cond.false14, !dbg !7916

cond.true12:                                      ; preds = %land.lhs.true9
  %st_blksize13 = getelementptr inbounds %struct.stat, %struct.stat* %sb, i32 0, i32 9, !dbg !7916, !ctir !415
  %5 = load i64, i64* %st_blksize13, align 8, !dbg !7916, !tbaa !7157, !ctir !286
  br label %cond.end15, !dbg !7916

cond.false14:                                     ; preds = %land.lhs.true9, %cond.false6
  br label %cond.end15, !dbg !7916

cond.end15:                                       ; preds = %cond.false14, %cond.true12
  %cond16 = phi i64 [ %5, %cond.true12 ], [ 512, %cond.false14 ], !dbg !7916
  br label %cond.end17, !dbg !7916

cond.end17:                                       ; preds = %cond.end15, %cond.true5
  %cond18 = phi i64 [ 131072, %cond.true5 ], [ %cond16, %cond.end15 ], !dbg !7916
  ret i64 %cond18, !dbg !7917
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_probably_sparse(%struct.stat* %sb) #4 !dbg !7918 !ctir !509 {
entry:
  %sb.addr = alloca %struct.stat*, align 8
  store %struct.stat* %sb, %struct.stat** %sb.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.stat** %sb.addr, metadata !7919, metadata !DIExpression()), !dbg !7920
  %0 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !7921, !tbaa !2645
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !7921, !ctir !414
  %1 = load i32, i32* %st_mode, align 8, !dbg !7921, !tbaa !2911, !ctir !140
  %and = and i32 %1, 61440, !dbg !7921
  %cmp = icmp eq i32 %and, 32768, !dbg !7921
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !7922

land.rhs:                                         ; preds = %entry
  %2 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !7923, !tbaa !2645
  %st_blocks = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 10, !dbg !7923, !ctir !414
  %3 = load i64, i64* %st_blocks, align 8, !dbg !7923, !tbaa !7924, !ctir !288
  %4 = load %struct.stat*, %struct.stat** %sb.addr, align 8, !dbg !7925, !tbaa !2645
  %st_size = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 8, !dbg !7926, !ctir !414
  %5 = load i64, i64* %st_size, align 8, !dbg !7926, !tbaa !4015, !ctir !29
  %div = sdiv i64 %5, 512, !dbg !7927
  %cmp1 = icmp slt i64 %3, %div, !dbg !7928
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %6 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !7929
  ret i1 %6, !dbg !7930
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @ptr_align(i8* %ptr, i64 %alignment) #4 !dbg !7931 !ctir !511 {
entry:
  %ptr.addr = alloca i8*, align 8
  %alignment.addr = alloca i64, align 8
  %p0 = alloca i8*, align 8, !ctir !180
  %p1 = alloca i8*, align 8, !ctir !180
  store i8* %ptr, i8** %ptr.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !7932, metadata !DIExpression()), !dbg !7933
  store i64 %alignment, i64* %alignment.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %alignment.addr, metadata !7934, metadata !DIExpression()), !dbg !7935
  call void @llvm.dbg.declare(metadata i8** %p0, metadata !7936, metadata !DIExpression()), !dbg !7937
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !7938, !tbaa !2645
  store i8* %0, i8** %p0, align 8, !dbg !7937, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !7939, metadata !DIExpression()), !dbg !7940
  %1 = load i8*, i8** %p0, align 8, !dbg !7941, !tbaa !2645
  %2 = load i64, i64* %alignment.addr, align 8, !dbg !7942, !tbaa !3285
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %2, !dbg !7943
  %add.ptr1 = getelementptr inbounds i8, i8* %add.ptr, i64 -1, !dbg !7944
  store i8* %add.ptr1, i8** %p1, align 8, !dbg !7940, !tbaa !2645
  %3 = load i8*, i8** %p1, align 8, !dbg !7945, !tbaa !2645
  %4 = load i8*, i8** %p1, align 8, !dbg !7946, !tbaa !2645
  %5 = ptrtoint i8* %4 to i64, !dbg !7947
  %6 = load i64, i64* %alignment.addr, align 8, !dbg !7948, !tbaa !3285
  %rem = urem i64 %5, %6, !dbg !7949
  %idx.neg = sub i64 0, %rem, !dbg !7950
  %add.ptr2 = getelementptr inbounds i8, i8* %3, i64 %idx.neg, !dbg !7950
  ret i8* %add.ptr2, !dbg !7951
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @extent_copy(i32 %src_fd, i32 %dest_fd, i8* %buf, i64 %buf_size, i64 %hole_size, i64 %src_total_size, i32 %sparse_mode, i8* %src_name, i8* %dst_name, i8* %require_normal_copy) #4 !dbg !7952 !ctir !515 {
entry:
  %retval = alloca i1, align 1
  %src_fd.addr = alloca i32, align 4
  %dest_fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %buf_size.addr = alloca i64, align 8
  %hole_size.addr = alloca i64, align 8
  %src_total_size.addr = alloca i64, align 8
  %sparse_mode.addr = alloca i32, align 4
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %require_normal_copy.addr = alloca i8*, align 8
  %scan = alloca %struct.extent_scan, align 8, !ctir !527
  %last_ext_start = alloca i64, align 8, !ctir !352
  %last_ext_len = alloca i64, align 8, !ctir !352
  %dest_pos = alloca i64, align 8, !ctir !352
  %wrote_hole_at_eof = alloca i8, align 1, !ctir !142
  %ok = alloca i8, align 1, !ctir !142
  %empty_extent = alloca i8, align 1, !ctir !142
  %i = alloca i32, align 4, !ctir !70
  %ext_start = alloca i64, align 8, !ctir !352
  %ext_len = alloca i64, align 8, !ctir !352
  %ext_hole_size = alloca i64, align 8, !ctir !352
  %nzeros = alloca i64, align 8, !ctir !352
  %n_read = alloca i64, align 8, !ctir !352
  %read_hole = alloca i8, align 1, !ctir !142
  store i32 %src_fd, i32* %src_fd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !7953, metadata !DIExpression()), !dbg !7954
  store i32 %dest_fd, i32* %dest_fd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %dest_fd.addr, metadata !7955, metadata !DIExpression()), !dbg !7956
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7957, metadata !DIExpression()), !dbg !7958
  store i64 %buf_size, i64* %buf_size.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %buf_size.addr, metadata !7959, metadata !DIExpression()), !dbg !7960
  store i64 %hole_size, i64* %hole_size.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %hole_size.addr, metadata !7961, metadata !DIExpression()), !dbg !7962
  store i64 %src_total_size, i64* %src_total_size.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %src_total_size.addr, metadata !7963, metadata !DIExpression()), !dbg !7964
  store i32 %sparse_mode, i32* %sparse_mode.addr, align 4, !tbaa !3292
  call void @llvm.dbg.declare(metadata i32* %sparse_mode.addr, metadata !7965, metadata !DIExpression()), !dbg !7966
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !7967, metadata !DIExpression()), !dbg !7968
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !7969, metadata !DIExpression()), !dbg !7970
  store i8* %require_normal_copy, i8** %require_normal_copy.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %require_normal_copy.addr, metadata !7971, metadata !DIExpression()), !dbg !7972
  call void @llvm.dbg.declare(metadata %struct.extent_scan* %scan, metadata !7973, metadata !DIExpression()), !dbg !7974
  call void @llvm.dbg.declare(metadata i64* %last_ext_start, metadata !7975, metadata !DIExpression()), !dbg !7976
  store i64 0, i64* %last_ext_start, align 8, !dbg !7976, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %last_ext_len, metadata !7977, metadata !DIExpression()), !dbg !7978
  store i64 0, i64* %last_ext_len, align 8, !dbg !7978, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %dest_pos, metadata !7979, metadata !DIExpression()), !dbg !7980
  store i64 0, i64* %dest_pos, align 8, !dbg !7980, !tbaa !3285
  %0 = load i32, i32* %src_fd.addr, align 4, !dbg !7981, !tbaa !2632
  call void @extent_scan_init(i32 %0, %struct.extent_scan* %scan), !dbg !7982
  %1 = load i8*, i8** %require_normal_copy.addr, align 8, !dbg !7983, !tbaa !2645
  store i8 0, i8* %1, align 1, !dbg !7984, !tbaa !2739, !ctir !142
  call void @llvm.dbg.declare(metadata i8* %wrote_hole_at_eof, metadata !7985, metadata !DIExpression()), !dbg !7986
  store i8 1, i8* %wrote_hole_at_eof, align 1, !dbg !7986, !tbaa !2739
  br label %do.body, !dbg !7987

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !7988, metadata !DIExpression()), !dbg !7990
  %call = call zeroext i1 @extent_scan_read(%struct.extent_scan* %scan), !dbg !7991
  %frombool = zext i1 %call to i8, !dbg !7990
  store i8 %frombool, i8* %ok, align 1, !dbg !7990, !tbaa !2739
  %2 = load i8, i8* %ok, align 1, !dbg !7992, !tbaa !2739
  %tobool = trunc i8 %2 to i1, !dbg !7992
  br i1 %tobool, label %if.end9, label %if.then, !dbg !7994

if.then:                                          ; preds = %do.body
  %hit_final_extent = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 5, !dbg !7995, !ctir !527
  %3 = load i8, i8* %hit_final_extent, align 1, !dbg !7995, !tbaa !7998
  %tobool1 = trunc i8 %3 to i1, !dbg !7995, !ctir !142
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !8000

if.then2:                                         ; preds = %if.then
  br label %do.end, !dbg !8001

if.end:                                           ; preds = %if.then
  %initial_scan_failed = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 4, !dbg !8002, !ctir !527
  %4 = load i8, i8* %initial_scan_failed, align 8, !dbg !8002, !tbaa !8004
  %tobool3 = trunc i8 %4 to i1, !dbg !8002, !ctir !142
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !8005

if.then4:                                         ; preds = %if.end
  %5 = load i8*, i8** %require_normal_copy.addr, align 8, !dbg !8006, !tbaa !2645
  store i8 1, i8* %5, align 1, !dbg !8008, !tbaa !2739, !ctir !142
  store i1 false, i1* %retval, align 1, !dbg !8009
  br label %return, !dbg !8009

if.end5:                                          ; preds = %if.end
  %call6 = call i32* @__errno_location() #16, !dbg !8010
  %6 = load i32, i32* %call6, align 4, !dbg !8010, !tbaa !2632, !ctir !7
  %call7 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.68.158, i64 0, i64 0)) #9, !dbg !8011
  %7 = load i8*, i8** %src_name.addr, align 8, !dbg !8012, !tbaa !2645
  %call8 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %7), !dbg !8012
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* %call7, i8* %call8), !dbg !8013
  store i1 false, i1* %retval, align 1, !dbg !8014
  br label %return, !dbg !8014

if.end9:                                          ; preds = %do.body
  call void @llvm.dbg.declare(metadata i8* %empty_extent, metadata !8015, metadata !DIExpression()), !dbg !8016
  store i8 0, i8* %empty_extent, align 1, !dbg !8016, !tbaa !2739
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8017, metadata !DIExpression()), !dbg !8019
  store i32 0, i32* %i, align 4, !dbg !8019, !tbaa !2632
  br label %for.cond, !dbg !8020

for.cond:                                         ; preds = %for.inc, %if.end9
  %8 = load i32, i32* %i, align 4, !dbg !8021, !tbaa !2632
  %conv = zext i32 %8 to i64, !dbg !8021
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 3, !dbg !8023, !ctir !527
  %9 = load i64, i64* %ei_count, align 8, !dbg !8023, !tbaa !8024, !ctir !55
  %cmp = icmp ult i64 %conv, %9, !dbg !8025
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !8026

lor.rhs:                                          ; preds = %for.cond
  %10 = load i8, i8* %empty_extent, align 1, !dbg !8027, !tbaa !2739
  %tobool11 = trunc i8 %10 to i1, !dbg !8027
  br label %lor.end, !dbg !8026

lor.end:                                          ; preds = %lor.rhs, %for.cond
  %11 = phi i1 [ true, %for.cond ], [ %tobool11, %lor.rhs ]
  br i1 %11, label %for.body, label %for.end, !dbg !8028

for.body:                                         ; preds = %lor.end
  call void @llvm.dbg.declare(metadata i64* %ext_start, metadata !8029, metadata !DIExpression()), !dbg !8031
  call void @llvm.dbg.declare(metadata i64* %ext_len, metadata !8032, metadata !DIExpression()), !dbg !8033
  call void @llvm.dbg.declare(metadata i64* %ext_hole_size, metadata !8034, metadata !DIExpression()), !dbg !8035
  %12 = load i32, i32* %i, align 4, !dbg !8036, !tbaa !2632
  %conv13 = zext i32 %12 to i64, !dbg !8036
  %ei_count14 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 3, !dbg !8038, !ctir !527
  %13 = load i64, i64* %ei_count14, align 8, !dbg !8038, !tbaa !8024, !ctir !55
  %cmp15 = icmp ult i64 %conv13, %13, !dbg !8039
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !8040

if.then17:                                        ; preds = %for.body
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 6, !dbg !8041, !ctir !527
  %14 = load %struct.extent_info*, %struct.extent_info** %ext_info, align 8, !dbg !8041, !tbaa !8043, !ctir !517
  %15 = load i32, i32* %i, align 4, !dbg !8044, !tbaa !2632
  %idxprom = zext i32 %15 to i64, !dbg !8045
  %arrayidx = getelementptr inbounds %struct.extent_info, %struct.extent_info* %14, i64 %idxprom, !dbg !8045, !ctir !517
  %ext_logical = getelementptr inbounds %struct.extent_info, %struct.extent_info* %arrayidx, i32 0, i32 0, !dbg !8046, !ctir !518
  %16 = load i64, i64* %ext_logical, align 8, !dbg !8046, !tbaa !8047, !ctir !352
  store i64 %16, i64* %ext_start, align 8, !dbg !8049, !tbaa !3285
  %ext_info18 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 6, !dbg !8050, !ctir !527
  %17 = load %struct.extent_info*, %struct.extent_info** %ext_info18, align 8, !dbg !8050, !tbaa !8043, !ctir !517
  %18 = load i32, i32* %i, align 4, !dbg !8051, !tbaa !2632
  %idxprom19 = zext i32 %18 to i64, !dbg !8052
  %arrayidx20 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %17, i64 %idxprom19, !dbg !8052, !ctir !517
  %ext_length = getelementptr inbounds %struct.extent_info, %struct.extent_info* %arrayidx20, i32 0, i32 1, !dbg !8053, !ctir !518
  %19 = load i64, i64* %ext_length, align 8, !dbg !8053, !tbaa !8054, !ctir !352
  store i64 %19, i64* %ext_len, align 8, !dbg !8055, !tbaa !3285
  br label %if.end25, !dbg !8056

if.else:                                          ; preds = %for.body
  %20 = load i32, i32* %i, align 4, !dbg !8057, !tbaa !2632
  %dec = add i32 %20, -1, !dbg !8057
  store i32 %dec, i32* %i, align 4, !dbg !8057, !tbaa !2632
  %21 = load i64, i64* %last_ext_start, align 8, !dbg !8059, !tbaa !3285
  %ext_info21 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 6, !dbg !8060, !ctir !527
  %22 = load %struct.extent_info*, %struct.extent_info** %ext_info21, align 8, !dbg !8060, !tbaa !8043, !ctir !517
  %23 = load i32, i32* %i, align 4, !dbg !8061, !tbaa !2632
  %idxprom22 = zext i32 %23 to i64, !dbg !8062
  %arrayidx23 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %22, i64 %idxprom22, !dbg !8062, !ctir !517
  %ext_length24 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %arrayidx23, i32 0, i32 1, !dbg !8063, !ctir !518
  %24 = load i64, i64* %ext_length24, align 8, !dbg !8063, !tbaa !8054, !ctir !352
  %add = add nsw i64 %21, %24, !dbg !8064
  store i64 %add, i64* %ext_start, align 8, !dbg !8065, !tbaa !3285
  store i64 0, i64* %ext_len, align 8, !dbg !8066, !tbaa !3285
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then17
  %25 = load i64, i64* %src_total_size.addr, align 8, !dbg !8067, !tbaa !3285
  %26 = load i64, i64* %ext_start, align 8, !dbg !8069, !tbaa !3285
  %27 = load i64, i64* %ext_len, align 8, !dbg !8070, !tbaa !3285
  %add26 = add nsw i64 %26, %27, !dbg !8071
  %cmp27 = icmp slt i64 %25, %add26, !dbg !8072
  br i1 %cmp27, label %if.then29, label %if.end34, !dbg !8073

if.then29:                                        ; preds = %if.end25
  %28 = load i64, i64* %src_total_size.addr, align 8, !dbg !8074, !tbaa !3285
  %29 = load i64, i64* %ext_start, align 8, !dbg !8077, !tbaa !3285
  %cmp30 = icmp slt i64 %28, %29, !dbg !8078
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !8079

if.then32:                                        ; preds = %if.then29
  %30 = load i64, i64* %src_total_size.addr, align 8, !dbg !8080, !tbaa !3285
  store i64 %30, i64* %ext_start, align 8, !dbg !8081, !tbaa !3285
  br label %if.end33, !dbg !8082

if.end33:                                         ; preds = %if.then32, %if.then29
  %31 = load i64, i64* %src_total_size.addr, align 8, !dbg !8083, !tbaa !3285
  %32 = load i64, i64* %ext_start, align 8, !dbg !8084, !tbaa !3285
  %sub = sub nsw i64 %31, %32, !dbg !8085
  store i64 %sub, i64* %ext_len, align 8, !dbg !8086, !tbaa !3285
  br label %if.end34, !dbg !8087

if.end34:                                         ; preds = %if.end33, %if.end25
  %33 = load i64, i64* %ext_start, align 8, !dbg !8088, !tbaa !3285
  %34 = load i64, i64* %last_ext_start, align 8, !dbg !8089, !tbaa !3285
  %sub35 = sub nsw i64 %33, %34, !dbg !8090
  %35 = load i64, i64* %last_ext_len, align 8, !dbg !8091, !tbaa !3285
  %sub36 = sub nsw i64 %sub35, %35, !dbg !8092
  store i64 %sub36, i64* %ext_hole_size, align 8, !dbg !8093, !tbaa !3285
  store i8 0, i8* %wrote_hole_at_eof, align 1, !dbg !8094, !tbaa !2739
  %36 = load i64, i64* %ext_hole_size, align 8, !dbg !8095, !tbaa !3285
  %tobool37 = icmp ne i64 %36, 0, !dbg !8095
  br i1 %tobool37, label %if.then38, label %if.end82, !dbg !8097

if.then38:                                        ; preds = %if.end34
  %37 = load i32, i32* %src_fd.addr, align 4, !dbg !8098, !tbaa !2632
  %38 = load i64, i64* %ext_start, align 8, !dbg !8101, !tbaa !3285
  %call39 = call i64 @lseek(i32 %37, i64 %38, i32 0) #9, !dbg !8102
  %cmp40 = icmp slt i64 %call39, 0, !dbg !8103
  br i1 %cmp40, label %if.then42, label %if.end46, !dbg !8104

if.then42:                                        ; preds = %if.then38
  %call43 = call i32* @__errno_location() #16, !dbg !8105
  %39 = load i32, i32* %call43, align 4, !dbg !8105, !tbaa !2632, !ctir !7
  %call44 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.69.156, i64 0, i64 0)) #9, !dbg !8107
  %40 = load i8*, i8** %src_name.addr, align 8, !dbg !8108, !tbaa !2645
  %call45 = call i8* @quotearg_style(i32 4, i8* %40), !dbg !8108
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %39, i8* %call44, i8* %call45), !dbg !8109
  br label %fail, !dbg !8109

fail:                                             ; preds = %if.then90, %if.then70, %if.then59, %if.then42
  call void @llvm.dbg.label(metadata !8110), !dbg !8111
  call void @extent_scan_free(%struct.extent_scan* %scan), !dbg !8112
  store i1 false, i1* %retval, align 1, !dbg !8113
  br label %return, !dbg !8113

if.end46:                                         ; preds = %if.then38
  %41 = load i8, i8* %empty_extent, align 1, !dbg !8114, !tbaa !2739
  %tobool47 = trunc i8 %41 to i1, !dbg !8114
  br i1 %tobool47, label %land.lhs.true, label %lor.lhs.false, !dbg !8116

land.lhs.true:                                    ; preds = %if.end46
  %42 = load i32, i32* %sparse_mode.addr, align 4, !dbg !8117, !tbaa !3292
  %cmp49 = icmp eq i32 %42, 3, !dbg !8118
  br i1 %cmp49, label %if.then55, label %lor.lhs.false, !dbg !8119

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end46
  %43 = load i8, i8* %empty_extent, align 1, !dbg !8120, !tbaa !2739
  %tobool51 = trunc i8 %43 to i1, !dbg !8120
  br i1 %tobool51, label %if.else61, label %land.lhs.true52, !dbg !8121

land.lhs.true52:                                  ; preds = %lor.lhs.false
  %44 = load i32, i32* %sparse_mode.addr, align 4, !dbg !8122, !tbaa !3292
  %cmp53 = icmp ne i32 %44, 1, !dbg !8123
  br i1 %cmp53, label %if.then55, label %if.else61, !dbg !8124

if.then55:                                        ; preds = %land.lhs.true52, %land.lhs.true
  %45 = load i32, i32* %dest_fd.addr, align 4, !dbg !8125, !tbaa !2632
  %46 = load i8*, i8** %dst_name.addr, align 8, !dbg !8128, !tbaa !2645
  %47 = load i32, i32* %sparse_mode.addr, align 4, !dbg !8129, !tbaa !3292
  %cmp56 = icmp eq i32 %47, 3, !dbg !8130
  %48 = load i64, i64* %ext_hole_size, align 8, !dbg !8131, !tbaa !3285
  %call58 = call zeroext i1 @create_hole(i32 %45, i8* %46, i1 zeroext %cmp56, i64 %48), !dbg !8132
  br i1 %call58, label %if.end60, label %if.then59, !dbg !8133

if.then59:                                        ; preds = %if.then55
  br label %fail, !dbg !8134

if.end60:                                         ; preds = %if.then55
  store i8 1, i8* %wrote_hole_at_eof, align 1, !dbg !8135, !tbaa !2739
  br label %if.end81, !dbg !8136

if.else61:                                        ; preds = %land.lhs.true52, %lor.lhs.false
  call void @llvm.dbg.declare(metadata i64* %nzeros, metadata !8137, metadata !DIExpression()), !dbg !8139
  %49 = load i64, i64* %ext_hole_size, align 8, !dbg !8140, !tbaa !3285
  store i64 %49, i64* %nzeros, align 8, !dbg !8139, !tbaa !3285
  %50 = load i8, i8* %empty_extent, align 1, !dbg !8141, !tbaa !2739
  %tobool62 = trunc i8 %50 to i1, !dbg !8141
  br i1 %tobool62, label %if.then63, label %if.end68, !dbg !8143

if.then63:                                        ; preds = %if.else61
  %51 = load i64, i64* %src_total_size.addr, align 8, !dbg !8144, !tbaa !3285
  %52 = load i64, i64* %dest_pos, align 8, !dbg !8144, !tbaa !3285
  %sub64 = sub nsw i64 %51, %52, !dbg !8144
  %53 = load i64, i64* %ext_hole_size, align 8, !dbg !8144, !tbaa !3285
  %cmp65 = icmp slt i64 %sub64, %53, !dbg !8144
  br i1 %cmp65, label %cond.true, label %cond.false, !dbg !8144

cond.true:                                        ; preds = %if.then63
  %54 = load i64, i64* %src_total_size.addr, align 8, !dbg !8144, !tbaa !3285
  %55 = load i64, i64* %dest_pos, align 8, !dbg !8144, !tbaa !3285
  %sub67 = sub nsw i64 %54, %55, !dbg !8144
  br label %cond.end, !dbg !8144

cond.false:                                       ; preds = %if.then63
  %56 = load i64, i64* %ext_hole_size, align 8, !dbg !8144, !tbaa !3285
  br label %cond.end, !dbg !8144

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub67, %cond.true ], [ %56, %cond.false ], !dbg !8144
  store i64 %cond, i64* %nzeros, align 8, !dbg !8145, !tbaa !3285
  br label %if.end68, !dbg !8146

if.end68:                                         ; preds = %cond.end, %if.else61
  %57 = load i32, i32* %dest_fd.addr, align 4, !dbg !8147, !tbaa !2632
  %58 = load i64, i64* %nzeros, align 8, !dbg !8149, !tbaa !3285
  %call69 = call zeroext i1 @write_zeros(i32 %57, i64 %58), !dbg !8150
  br i1 %call69, label %if.end74, label %if.then70, !dbg !8151

if.then70:                                        ; preds = %if.end68
  %call71 = call i32* @__errno_location() #16, !dbg !8152
  %59 = load i32, i32* %call71, align 4, !dbg !8152, !tbaa !2632, !ctir !7
  %call72 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.70.159, i64 0, i64 0)) #9, !dbg !8154
  %60 = load i8*, i8** %dst_name.addr, align 8, !dbg !8155, !tbaa !2645
  %call73 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %60), !dbg !8155
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %59, i8* %call72, i8* %call73), !dbg !8156
  br label %fail, !dbg !8157

if.end74:                                         ; preds = %if.end68
  %61 = load i64, i64* %src_total_size.addr, align 8, !dbg !8158, !tbaa !3285
  %62 = load i64, i64* %ext_start, align 8, !dbg !8158, !tbaa !3285
  %cmp75 = icmp slt i64 %61, %62, !dbg !8158
  br i1 %cmp75, label %cond.true77, label %cond.false78, !dbg !8158

cond.true77:                                      ; preds = %if.end74
  %63 = load i64, i64* %src_total_size.addr, align 8, !dbg !8158, !tbaa !3285
  br label %cond.end79, !dbg !8158

cond.false78:                                     ; preds = %if.end74
  %64 = load i64, i64* %ext_start, align 8, !dbg !8158, !tbaa !3285
  br label %cond.end79, !dbg !8158

cond.end79:                                       ; preds = %cond.false78, %cond.true77
  %cond80 = phi i64 [ %63, %cond.true77 ], [ %64, %cond.false78 ], !dbg !8158
  store i64 %cond80, i64* %dest_pos, align 8, !dbg !8159, !tbaa !3285
  br label %if.end81

if.end81:                                         ; preds = %cond.end79, %if.end60
  br label %if.end82, !dbg !8160

if.end82:                                         ; preds = %if.end81, %if.end34
  %65 = load i64, i64* %ext_start, align 8, !dbg !8161, !tbaa !3285
  store i64 %65, i64* %last_ext_start, align 8, !dbg !8162, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %n_read, metadata !8163, metadata !DIExpression()), !dbg !8166
  store i8 0, i8* %empty_extent, align 1, !dbg !8167, !tbaa !2739
  %66 = load i64, i64* %ext_len, align 8, !dbg !8168, !tbaa !3285
  store i64 %66, i64* %last_ext_len, align 8, !dbg !8169, !tbaa !3285
  call void @llvm.dbg.declare(metadata i8* %read_hole, metadata !8170, metadata !DIExpression()), !dbg !8171
  %67 = load i32, i32* %src_fd.addr, align 4, !dbg !8172, !tbaa !2632
  %68 = load i32, i32* %dest_fd.addr, align 4, !dbg !8174, !tbaa !2632
  %69 = load i8*, i8** %buf.addr, align 8, !dbg !8175, !tbaa !2645
  %70 = load i64, i64* %buf_size.addr, align 8, !dbg !8176, !tbaa !3285
  %71 = load i32, i32* %sparse_mode.addr, align 4, !dbg !8177, !tbaa !3292
  %cmp83 = icmp eq i32 %71, 3, !dbg !8178
  br i1 %cmp83, label %cond.true85, label %cond.false86, !dbg !8177

cond.true85:                                      ; preds = %if.end82
  %72 = load i64, i64* %hole_size.addr, align 8, !dbg !8179, !tbaa !3285
  br label %cond.end87, !dbg !8177

cond.false86:                                     ; preds = %if.end82
  br label %cond.end87, !dbg !8177

cond.end87:                                       ; preds = %cond.false86, %cond.true85
  %cond88 = phi i64 [ %72, %cond.true85 ], [ 0, %cond.false86 ], !dbg !8177
  %73 = load i8*, i8** %src_name.addr, align 8, !dbg !8180, !tbaa !2645
  %74 = load i8*, i8** %dst_name.addr, align 8, !dbg !8181, !tbaa !2645
  %75 = load i64, i64* %ext_len, align 8, !dbg !8182, !tbaa !3285
  %call89 = call zeroext i1 @sparse_copy(i32 %67, i32 %68, i8* %69, i64 %70, i64 %cond88, i1 zeroext true, i8* %73, i8* %74, i64 %75, i64* %n_read, i8* %read_hole), !dbg !8183
  br i1 %call89, label %if.end91, label %if.then90, !dbg !8184

if.then90:                                        ; preds = %cond.end87
  br label %fail, !dbg !8185

if.end91:                                         ; preds = %cond.end87
  %76 = load i64, i64* %ext_start, align 8, !dbg !8186, !tbaa !3285
  %77 = load i64, i64* %n_read, align 8, !dbg !8187, !tbaa !3285
  %add92 = add nsw i64 %76, %77, !dbg !8188
  store i64 %add92, i64* %dest_pos, align 8, !dbg !8189, !tbaa !3285
  %78 = load i64, i64* %n_read, align 8, !dbg !8190, !tbaa !3285
  %tobool93 = icmp ne i64 %78, 0, !dbg !8190
  br i1 %tobool93, label %if.then94, label %if.end97, !dbg !8192

if.then94:                                        ; preds = %if.end91
  %79 = load i8, i8* %read_hole, align 1, !dbg !8193, !tbaa !2739
  %tobool95 = trunc i8 %79 to i1, !dbg !8193
  %frombool96 = zext i1 %tobool95 to i8, !dbg !8194
  store i8 %frombool96, i8* %wrote_hole_at_eof, align 1, !dbg !8194, !tbaa !2739
  br label %if.end97, !dbg !8195

if.end97:                                         ; preds = %if.then94, %if.end91
  %80 = load i64, i64* %dest_pos, align 8, !dbg !8196, !tbaa !3285
  %81 = load i64, i64* %src_total_size.addr, align 8, !dbg !8198, !tbaa !3285
  %cmp98 = icmp eq i64 %80, %81, !dbg !8199
  br i1 %cmp98, label %if.then100, label %if.end102, !dbg !8200

if.then100:                                       ; preds = %if.end97
  %hit_final_extent101 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 5, !dbg !8201, !ctir !527
  store i8 1, i8* %hit_final_extent101, align 1, !dbg !8203, !tbaa !7998, !ctir !142
  br label %for.end, !dbg !8204

if.end102:                                        ; preds = %if.end97
  br label %for.inc, !dbg !8205

for.inc:                                          ; preds = %if.end102
  %82 = load i32, i32* %i, align 4, !dbg !8206, !tbaa !2632
  %inc = add i32 %82, 1, !dbg !8206
  store i32 %inc, i32* %i, align 4, !dbg !8206, !tbaa !2632
  br label %for.cond, !dbg !8207, !llvm.loop !8208

for.end:                                          ; preds = %if.then100, %lor.end
  call void @extent_scan_free(%struct.extent_scan* %scan), !dbg !8210
  br label %do.cond, !dbg !8211

do.cond:                                          ; preds = %for.end
  %hit_final_extent103 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %scan, i32 0, i32 5, !dbg !8212, !ctir !527
  %83 = load i8, i8* %hit_final_extent103, align 1, !dbg !8212, !tbaa !7998
  %tobool104 = trunc i8 %83 to i1, !dbg !8212, !ctir !142
  %lnot = xor i1 %tobool104, true, !dbg !8213
  br i1 %lnot, label %do.body, label %do.end, !dbg !8211, !llvm.loop !8214

do.end:                                           ; preds = %do.cond, %if.then2
  %84 = load i64, i64* %dest_pos, align 8, !dbg !8216, !tbaa !3285
  %85 = load i64, i64* %src_total_size.addr, align 8, !dbg !8218, !tbaa !3285
  %cmp105 = icmp slt i64 %84, %85, !dbg !8219
  br i1 %cmp105, label %land.lhs.true110, label %lor.lhs.false107, !dbg !8220

lor.lhs.false107:                                 ; preds = %do.end
  %86 = load i8, i8* %wrote_hole_at_eof, align 1, !dbg !8221, !tbaa !2739
  %tobool108 = trunc i8 %86 to i1, !dbg !8221
  br i1 %tobool108, label %land.lhs.true110, label %if.end123, !dbg !8222

land.lhs.true110:                                 ; preds = %lor.lhs.false107, %do.end
  %87 = load i32, i32* %sparse_mode.addr, align 4, !dbg !8223, !tbaa !3292
  %cmp111 = icmp ne i32 %87, 1, !dbg !8224
  br i1 %cmp111, label %cond.true113, label %cond.false116, !dbg !8225

cond.true113:                                     ; preds = %land.lhs.true110
  %88 = load i32, i32* %dest_fd.addr, align 4, !dbg !8226, !tbaa !2632
  %89 = load i64, i64* %src_total_size.addr, align 8, !dbg !8227, !tbaa !3285
  %call114 = call i32 @ftruncate(i32 %88, i64 %89) #9, !dbg !8228
  %tobool115 = icmp ne i32 %call114, 0, !dbg !8228
  br i1 %tobool115, label %if.then119, label %if.end123, !dbg !8223

cond.false116:                                    ; preds = %land.lhs.true110
  %90 = load i32, i32* %dest_fd.addr, align 4, !dbg !8229, !tbaa !2632
  %91 = load i64, i64* %src_total_size.addr, align 8, !dbg !8230, !tbaa !3285
  %92 = load i64, i64* %dest_pos, align 8, !dbg !8231, !tbaa !3285
  %sub117 = sub nsw i64 %91, %92, !dbg !8232
  %call118 = call zeroext i1 @write_zeros(i32 %90, i64 %sub117), !dbg !8233
  br i1 %call118, label %if.end123, label %if.then119, !dbg !8225

if.then119:                                       ; preds = %cond.false116, %cond.true113
  %call120 = call i32* @__errno_location() #16, !dbg !8234
  %93 = load i32, i32* %call120, align 4, !dbg !8234, !tbaa !2632, !ctir !7
  %call121 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.66.151, i64 0, i64 0)) #9, !dbg !8236
  %94 = load i8*, i8** %dst_name.addr, align 8, !dbg !8237, !tbaa !2645
  %call122 = call i8* @quotearg_style(i32 4, i8* %94), !dbg !8237
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %93, i8* %call121, i8* %call122), !dbg !8238
  store i1 false, i1* %retval, align 1, !dbg !8239
  br label %return, !dbg !8239

if.end123:                                        ; preds = %cond.false116, %cond.true113, %lor.lhs.false107
  %95 = load i32, i32* %sparse_mode.addr, align 4, !dbg !8240, !tbaa !3292
  %cmp124 = icmp eq i32 %95, 3, !dbg !8242
  br i1 %cmp124, label %land.lhs.true126, label %if.end138, !dbg !8243

land.lhs.true126:                                 ; preds = %if.end123
  %96 = load i64, i64* %dest_pos, align 8, !dbg !8244, !tbaa !3285
  %97 = load i64, i64* %src_total_size.addr, align 8, !dbg !8245, !tbaa !3285
  %cmp127 = icmp slt i64 %96, %97, !dbg !8246
  br i1 %cmp127, label %land.lhs.true129, label %if.end138, !dbg !8247

land.lhs.true129:                                 ; preds = %land.lhs.true126
  %98 = load i32, i32* %dest_fd.addr, align 4, !dbg !8248, !tbaa !2632
  %99 = load i64, i64* %dest_pos, align 8, !dbg !8249, !tbaa !3285
  %100 = load i64, i64* %src_total_size.addr, align 8, !dbg !8250, !tbaa !3285
  %101 = load i64, i64* %dest_pos, align 8, !dbg !8251, !tbaa !3285
  %sub130 = sub nsw i64 %100, %101, !dbg !8252
  %call131 = call i32 @punch_hole(i32 %98, i64 %99, i64 %sub130), !dbg !8253
  %cmp132 = icmp slt i32 %call131, 0, !dbg !8254
  br i1 %cmp132, label %if.then134, label %if.end138, !dbg !8255

if.then134:                                       ; preds = %land.lhs.true129
  %call135 = call i32* @__errno_location() #16, !dbg !8256
  %102 = load i32, i32* %call135, align 4, !dbg !8256, !tbaa !2632, !ctir !7
  %call136 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.71.157, i64 0, i64 0)) #9, !dbg !8258
  %103 = load i8*, i8** %dst_name.addr, align 8, !dbg !8259, !tbaa !2645
  %call137 = call i8* @quotearg_style(i32 4, i8* %103), !dbg !8259
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %102, i8* %call136, i8* %call137), !dbg !8260
  store i1 false, i1* %retval, align 1, !dbg !8261
  br label %return, !dbg !8261

if.end138:                                        ; preds = %land.lhs.true129, %land.lhs.true126, %if.end123
  store i1 true, i1* %retval, align 1, !dbg !8262
  br label %return, !dbg !8262

return:                                           ; preds = %if.end138, %if.then134, %if.then119, %fail, %if.end5, %if.then4
  %104 = load i1, i1* %retval, align 1, !dbg !8263
  ret i1 %104, !dbg !8263
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @sparse_copy(i32 %src_fd, i32 %dest_fd, i8* %buf, i64 %buf_size, i64 %hole_size, i1 zeroext %punch_holes, i8* %src_name, i8* %dst_name, i64 %max_n_read, i64* %total_n_read, i8* %last_write_made_hole) #4 !dbg !8264 !ctir !542 {
entry:
  %retval = alloca i1, align 1
  %src_fd.addr = alloca i32, align 4
  %dest_fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %buf_size.addr = alloca i64, align 8
  %hole_size.addr = alloca i64, align 8
  %punch_holes.addr = alloca i8, align 1
  %src_name.addr = alloca i8*, align 8
  %dst_name.addr = alloca i8*, align 8
  %max_n_read.addr = alloca i64, align 8
  %total_n_read.addr = alloca i64*, align 8
  %last_write_made_hole.addr = alloca i8*, align 8
  %make_hole = alloca i8, align 1, !ctir !142
  %psize = alloca i64, align 8, !ctir !352
  %n_read = alloca i64, align 8, !ctir !548
  %csize = alloca i64, align 8, !ctir !55
  %cbuf = alloca i8*, align 8, !ctir !9
  %pbuf = alloca i8*, align 8, !ctir !9
  %prev_hole = alloca i8, align 1, !ctir !142
  %transition = alloca i8, align 1, !ctir !142
  %last_chunk = alloca i8, align 1, !ctir !142
  store i32 %src_fd, i32* %src_fd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !8265, metadata !DIExpression()), !dbg !8266
  store i32 %dest_fd, i32* %dest_fd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %dest_fd.addr, metadata !8267, metadata !DIExpression()), !dbg !8268
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8269, metadata !DIExpression()), !dbg !8270
  store i64 %buf_size, i64* %buf_size.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %buf_size.addr, metadata !8271, metadata !DIExpression()), !dbg !8272
  store i64 %hole_size, i64* %hole_size.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %hole_size.addr, metadata !8273, metadata !DIExpression()), !dbg !8274
  %frombool = zext i1 %punch_holes to i8
  store i8 %frombool, i8* %punch_holes.addr, align 1, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %punch_holes.addr, metadata !8275, metadata !DIExpression()), !dbg !8276
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !8277, metadata !DIExpression()), !dbg !8278
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !8279, metadata !DIExpression()), !dbg !8280
  store i64 %max_n_read, i64* %max_n_read.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %max_n_read.addr, metadata !8281, metadata !DIExpression()), !dbg !8282
  store i64* %total_n_read, i64** %total_n_read.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i64** %total_n_read.addr, metadata !8283, metadata !DIExpression()), !dbg !8284
  store i8* %last_write_made_hole, i8** %last_write_made_hole.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %last_write_made_hole.addr, metadata !8285, metadata !DIExpression()), !dbg !8286
  %0 = load i8*, i8** %last_write_made_hole.addr, align 8, !dbg !8287, !tbaa !2645
  store i8 0, i8* %0, align 1, !dbg !8288, !tbaa !2739, !ctir !142
  %1 = load i64*, i64** %total_n_read.addr, align 8, !dbg !8289, !tbaa !2645
  store i64 0, i64* %1, align 8, !dbg !8290, !tbaa !3285, !ctir !352
  call void @llvm.dbg.declare(metadata i8* %make_hole, metadata !8291, metadata !DIExpression()), !dbg !8292
  store i8 0, i8* %make_hole, align 1, !dbg !8292, !tbaa !2739
  call void @llvm.dbg.declare(metadata i64* %psize, metadata !8293, metadata !DIExpression()), !dbg !8294
  store i64 0, i64* %psize, align 8, !dbg !8294, !tbaa !3285
  br label %while.cond, !dbg !8295

while.cond:                                       ; preds = %while.end, %if.then4, %entry
  %2 = load i64, i64* %max_n_read.addr, align 8, !dbg !8296, !tbaa !3285
  %tobool = icmp ne i64 %2, 0, !dbg !8295
  br i1 %tobool, label %while.body, label %while.end94, !dbg !8295

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %n_read, metadata !8297, metadata !DIExpression()), !dbg !8299
  %3 = load i32, i32* %src_fd.addr, align 4, !dbg !8300, !tbaa !2632
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !8301, !tbaa !2645
  %5 = load i64, i64* %max_n_read.addr, align 8, !dbg !8302, !tbaa !3285
  %6 = load i64, i64* %buf_size.addr, align 8, !dbg !8302, !tbaa !3285
  %cmp = icmp ult i64 %5, %6, !dbg !8302
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8302

cond.true:                                        ; preds = %while.body
  %7 = load i64, i64* %max_n_read.addr, align 8, !dbg !8302, !tbaa !3285
  br label %cond.end, !dbg !8302

cond.false:                                       ; preds = %while.body
  %8 = load i64, i64* %buf_size.addr, align 8, !dbg !8302, !tbaa !3285
  br label %cond.end, !dbg !8302

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %7, %cond.true ], [ %8, %cond.false ], !dbg !8302
  %call = call i64 @read(i32 %3, i8* %4, i64 %cond), !dbg !8303
  store i64 %call, i64* %n_read, align 8, !dbg !8299, !tbaa !3285
  %9 = load i64, i64* %n_read, align 8, !dbg !8304, !tbaa !3285
  %cmp1 = icmp slt i64 %9, 0, !dbg !8306
  br i1 %cmp1, label %if.then, label %if.end8, !dbg !8307

if.then:                                          ; preds = %cond.end
  %call2 = call i32* @__errno_location() #16, !dbg !8308
  %10 = load i32, i32* %call2, align 4, !dbg !8308, !tbaa !2632, !ctir !7
  %cmp3 = icmp eq i32 %10, 4, !dbg !8311
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !8312

if.then4:                                         ; preds = %if.then
  br label %while.cond, !dbg !8313, !llvm.loop !8314

if.end:                                           ; preds = %if.then
  %call5 = call i32* @__errno_location() #16, !dbg !8316
  %11 = load i32, i32* %call5, align 4, !dbg !8316, !tbaa !2632, !ctir !7
  %call6 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.72.153, i64 0, i64 0)) #9, !dbg !8317
  %12 = load i8*, i8** %src_name.addr, align 8, !dbg !8318, !tbaa !2645
  %call7 = call i8* @quotearg_style(i32 4, i8* %12), !dbg !8318
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %11, i8* %call6, i8* %call7), !dbg !8319
  store i1 false, i1* %retval, align 1, !dbg !8320
  br label %return, !dbg !8320

if.end8:                                          ; preds = %cond.end
  %13 = load i64, i64* %n_read, align 8, !dbg !8321, !tbaa !3285
  %cmp9 = icmp eq i64 %13, 0, !dbg !8323
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !8324

if.then10:                                        ; preds = %if.end8
  br label %while.end94, !dbg !8325

if.end11:                                         ; preds = %if.end8
  %14 = load i64, i64* %n_read, align 8, !dbg !8326, !tbaa !3285
  %15 = load i64, i64* %max_n_read.addr, align 8, !dbg !8327, !tbaa !3285
  %sub = sub i64 %15, %14, !dbg !8327
  store i64 %sub, i64* %max_n_read.addr, align 8, !dbg !8327, !tbaa !3285
  %16 = load i64, i64* %n_read, align 8, !dbg !8328, !tbaa !3285
  %17 = load i64*, i64** %total_n_read.addr, align 8, !dbg !8329, !tbaa !2645
  %18 = load i64, i64* %17, align 8, !dbg !8330, !tbaa !3285, !ctir !352
  %add = add nsw i64 %18, %16, !dbg !8330
  store i64 %add, i64* %17, align 8, !dbg !8330, !tbaa !3285, !ctir !352
  call void @llvm.dbg.declare(metadata i64* %csize, metadata !8331, metadata !DIExpression()), !dbg !8332
  %19 = load i64, i64* %hole_size.addr, align 8, !dbg !8333, !tbaa !3285
  %tobool12 = icmp ne i64 %19, 0, !dbg !8333
  br i1 %tobool12, label %cond.true13, label %cond.false14, !dbg !8333

cond.true13:                                      ; preds = %if.end11
  %20 = load i64, i64* %hole_size.addr, align 8, !dbg !8334, !tbaa !3285
  br label %cond.end15, !dbg !8333

cond.false14:                                     ; preds = %if.end11
  %21 = load i64, i64* %buf_size.addr, align 8, !dbg !8335, !tbaa !3285
  br label %cond.end15, !dbg !8333

cond.end15:                                       ; preds = %cond.false14, %cond.true13
  %cond16 = phi i64 [ %20, %cond.true13 ], [ %21, %cond.false14 ], !dbg !8333
  store i64 %cond16, i64* %csize, align 8, !dbg !8332, !tbaa !3285
  call void @llvm.dbg.declare(metadata i8** %cbuf, metadata !8336, metadata !DIExpression()), !dbg !8337
  %22 = load i8*, i8** %buf.addr, align 8, !dbg !8338, !tbaa !2645
  store i8* %22, i8** %cbuf, align 8, !dbg !8337, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %pbuf, metadata !8339, metadata !DIExpression()), !dbg !8340
  %23 = load i8*, i8** %buf.addr, align 8, !dbg !8341, !tbaa !2645
  store i8* %23, i8** %pbuf, align 8, !dbg !8340, !tbaa !2645
  br label %while.cond17, !dbg !8342

while.cond17:                                     ; preds = %if.end90, %cond.end15
  %24 = load i64, i64* %n_read, align 8, !dbg !8343, !tbaa !3285
  %tobool18 = icmp ne i64 %24, 0, !dbg !8342
  br i1 %tobool18, label %while.body19, label %while.end, !dbg !8342

while.body19:                                     ; preds = %while.cond17
  call void @llvm.dbg.declare(metadata i8* %prev_hole, metadata !8344, metadata !DIExpression()), !dbg !8346
  %25 = load i8, i8* %make_hole, align 1, !dbg !8347, !tbaa !2739
  %tobool20 = trunc i8 %25 to i1, !dbg !8347
  %frombool21 = zext i1 %tobool20 to i8, !dbg !8346
  store i8 %frombool21, i8* %prev_hole, align 1, !dbg !8346, !tbaa !2739
  %26 = load i64, i64* %csize, align 8, !dbg !8348, !tbaa !3285
  %27 = load i64, i64* %n_read, align 8, !dbg !8348, !tbaa !3285
  %cmp22 = icmp ult i64 %26, %27, !dbg !8348
  br i1 %cmp22, label %cond.true23, label %cond.false24, !dbg !8348

cond.true23:                                      ; preds = %while.body19
  %28 = load i64, i64* %csize, align 8, !dbg !8348, !tbaa !3285
  br label %cond.end25, !dbg !8348

cond.false24:                                     ; preds = %while.body19
  %29 = load i64, i64* %n_read, align 8, !dbg !8348, !tbaa !3285
  br label %cond.end25, !dbg !8348

cond.end25:                                       ; preds = %cond.false24, %cond.true23
  %cond26 = phi i64 [ %28, %cond.true23 ], [ %29, %cond.false24 ], !dbg !8348
  store i64 %cond26, i64* %csize, align 8, !dbg !8349, !tbaa !3285
  %30 = load i64, i64* %hole_size.addr, align 8, !dbg !8350, !tbaa !3285
  %tobool27 = icmp ne i64 %30, 0, !dbg !8350
  br i1 %tobool27, label %land.lhs.true, label %if.end32, !dbg !8352

land.lhs.true:                                    ; preds = %cond.end25
  %31 = load i64, i64* %csize, align 8, !dbg !8353, !tbaa !3285
  %tobool28 = icmp ne i64 %31, 0, !dbg !8353
  br i1 %tobool28, label %if.then29, label %if.end32, !dbg !8354

if.then29:                                        ; preds = %land.lhs.true
  %32 = load i8*, i8** %cbuf, align 8, !dbg !8355, !tbaa !2645
  %33 = load i64, i64* %csize, align 8, !dbg !8356, !tbaa !3285
  %call30 = call zeroext i1 @is_nul(i8* %32, i64 %33) #14, !dbg !8357
  %frombool31 = zext i1 %call30 to i8, !dbg !8358
  store i8 %frombool31, i8* %make_hole, align 1, !dbg !8358, !tbaa !2739
  br label %if.end32, !dbg !8359

if.end32:                                         ; preds = %if.then29, %land.lhs.true, %cond.end25
  call void @llvm.dbg.declare(metadata i8* %transition, metadata !8360, metadata !DIExpression()), !dbg !8361
  %34 = load i8, i8* %make_hole, align 1, !dbg !8362, !tbaa !2739
  %tobool33 = trunc i8 %34 to i1, !dbg !8362
  %conv = zext i1 %tobool33 to i32, !dbg !8362
  %35 = load i8, i8* %prev_hole, align 1, !dbg !8363, !tbaa !2739
  %tobool34 = trunc i8 %35 to i1, !dbg !8363
  %conv35 = zext i1 %tobool34 to i32, !dbg !8363
  %cmp36 = icmp ne i32 %conv, %conv35, !dbg !8364
  br i1 %cmp36, label %land.rhs, label %land.end, !dbg !8365

land.rhs:                                         ; preds = %if.end32
  %36 = load i64, i64* %psize, align 8, !dbg !8366, !tbaa !3285
  %tobool38 = icmp ne i64 %36, 0, !dbg !8365
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end32
  %37 = phi i1 [ false, %if.end32 ], [ %tobool38, %land.rhs ], !dbg !8367
  %frombool39 = zext i1 %37 to i8, !dbg !8361
  store i8 %frombool39, i8* %transition, align 1, !dbg !8361, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %last_chunk, metadata !8368, metadata !DIExpression()), !dbg !8369
  %38 = load i64, i64* %n_read, align 8, !dbg !8370, !tbaa !3285
  %39 = load i64, i64* %csize, align 8, !dbg !8371, !tbaa !3285
  %cmp40 = icmp eq i64 %38, %39, !dbg !8372
  br i1 %cmp40, label %land.lhs.true42, label %lor.rhs, !dbg !8373

land.lhs.true42:                                  ; preds = %land.end
  %40 = load i8, i8* %make_hole, align 1, !dbg !8374, !tbaa !2739
  %tobool43 = trunc i8 %40 to i1, !dbg !8374
  br i1 %tobool43, label %lor.rhs, label %lor.end, !dbg !8375

lor.rhs:                                          ; preds = %land.lhs.true42, %land.end
  %41 = load i64, i64* %csize, align 8, !dbg !8376, !tbaa !3285
  %tobool44 = icmp ne i64 %41, 0, !dbg !8377
  %lnot = xor i1 %tobool44, true, !dbg !8377
  br label %lor.end, !dbg !8375

lor.end:                                          ; preds = %lor.rhs, %land.lhs.true42
  %42 = phi i1 [ true, %land.lhs.true42 ], [ %lnot, %lor.rhs ]
  %frombool45 = zext i1 %42 to i8, !dbg !8369
  store i8 %frombool45, i8* %last_chunk, align 1, !dbg !8369, !tbaa !2739
  %43 = load i8, i8* %transition, align 1, !dbg !8378, !tbaa !2739
  %tobool46 = trunc i8 %43 to i1, !dbg !8378
  br i1 %tobool46, label %if.then50, label %lor.lhs.false, !dbg !8380

lor.lhs.false:                                    ; preds = %lor.end
  %44 = load i8, i8* %last_chunk, align 1, !dbg !8381, !tbaa !2739
  %tobool48 = trunc i8 %44 to i1, !dbg !8381
  br i1 %tobool48, label %if.then50, label %if.else80, !dbg !8382

if.then50:                                        ; preds = %lor.lhs.false, %lor.end
  %45 = load i8, i8* %transition, align 1, !dbg !8383, !tbaa !2739
  %tobool51 = trunc i8 %45 to i1, !dbg !8383
  br i1 %tobool51, label %if.end54, label %if.then52, !dbg !8386

if.then52:                                        ; preds = %if.then50
  %46 = load i64, i64* %csize, align 8, !dbg !8387, !tbaa !3285
  %47 = load i64, i64* %psize, align 8, !dbg !8388, !tbaa !3285
  %add53 = add i64 %47, %46, !dbg !8388
  store i64 %add53, i64* %psize, align 8, !dbg !8388, !tbaa !3285
  br label %if.end54, !dbg !8389

if.end54:                                         ; preds = %if.then52, %if.then50
  %48 = load i8, i8* %prev_hole, align 1, !dbg !8390, !tbaa !2739
  %tobool55 = trunc i8 %48 to i1, !dbg !8390
  br i1 %tobool55, label %if.else, label %if.then56, !dbg !8392

if.then56:                                        ; preds = %if.end54
  %49 = load i32, i32* %dest_fd.addr, align 4, !dbg !8393, !tbaa !2632
  %50 = load i8*, i8** %pbuf, align 8, !dbg !8396, !tbaa !2645
  %51 = load i64, i64* %psize, align 8, !dbg !8397, !tbaa !3285
  %call57 = call i64 @full_write(i32 %49, i8* %50, i64 %51), !dbg !8398
  %52 = load i64, i64* %psize, align 8, !dbg !8399, !tbaa !3285
  %cmp58 = icmp ne i64 %call57, %52, !dbg !8400
  br i1 %cmp58, label %if.then60, label %if.end64, !dbg !8401

if.then60:                                        ; preds = %if.then56
  %call61 = call i32* @__errno_location() #16, !dbg !8402
  %53 = load i32, i32* %call61, align 4, !dbg !8402, !tbaa !2632, !ctir !7
  %call62 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.73.154, i64 0, i64 0)) #9, !dbg !8404
  %54 = load i8*, i8** %dst_name.addr, align 8, !dbg !8405, !tbaa !2645
  %call63 = call i8* @quotearg_style(i32 4, i8* %54), !dbg !8405
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %53, i8* %call62, i8* %call63), !dbg !8406
  store i1 false, i1* %retval, align 1, !dbg !8407
  br label %return, !dbg !8407

if.end64:                                         ; preds = %if.then56
  br label %if.end69, !dbg !8408

if.else:                                          ; preds = %if.end54
  %55 = load i32, i32* %dest_fd.addr, align 4, !dbg !8409, !tbaa !2632
  %56 = load i8*, i8** %dst_name.addr, align 8, !dbg !8412, !tbaa !2645
  %57 = load i8, i8* %punch_holes.addr, align 1, !dbg !8413, !tbaa !2739
  %tobool65 = trunc i8 %57 to i1, !dbg !8413
  %58 = load i64, i64* %psize, align 8, !dbg !8414, !tbaa !3285
  %call66 = call zeroext i1 @create_hole(i32 %55, i8* %56, i1 zeroext %tobool65, i64 %58), !dbg !8415
  br i1 %call66, label %if.end68, label %if.then67, !dbg !8416

if.then67:                                        ; preds = %if.else
  store i1 false, i1* %retval, align 1, !dbg !8417
  br label %return, !dbg !8417

if.end68:                                         ; preds = %if.else
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.end64
  %59 = load i8*, i8** %cbuf, align 8, !dbg !8418, !tbaa !2645
  store i8* %59, i8** %pbuf, align 8, !dbg !8419, !tbaa !2645
  %60 = load i64, i64* %csize, align 8, !dbg !8420, !tbaa !3285
  store i64 %60, i64* %psize, align 8, !dbg !8421, !tbaa !3285
  %61 = load i8, i8* %last_chunk, align 1, !dbg !8422, !tbaa !2739
  %tobool70 = trunc i8 %61 to i1, !dbg !8422
  br i1 %tobool70, label %if.then71, label %if.end79, !dbg !8424

if.then71:                                        ; preds = %if.end69
  %62 = load i64, i64* %csize, align 8, !dbg !8425, !tbaa !3285
  %tobool72 = icmp ne i64 %62, 0, !dbg !8425
  br i1 %tobool72, label %if.end74, label %if.then73, !dbg !8428

if.then73:                                        ; preds = %if.then71
  store i64 0, i64* %n_read, align 8, !dbg !8429, !tbaa !3285
  br label %if.end74, !dbg !8430

if.end74:                                         ; preds = %if.then73, %if.then71
  %63 = load i8, i8* %transition, align 1, !dbg !8431, !tbaa !2739
  %tobool75 = trunc i8 %63 to i1, !dbg !8431
  br i1 %tobool75, label %if.then76, label %if.else77, !dbg !8433

if.then76:                                        ; preds = %if.end74
  store i64 0, i64* %csize, align 8, !dbg !8434, !tbaa !3285
  br label %if.end78, !dbg !8435

if.else77:                                        ; preds = %if.end74
  store i64 0, i64* %psize, align 8, !dbg !8436, !tbaa !3285
  br label %if.end78

if.end78:                                         ; preds = %if.else77, %if.then76
  br label %if.end79, !dbg !8437

if.end79:                                         ; preds = %if.end78, %if.end69
  br label %if.end90, !dbg !8438

if.else80:                                        ; preds = %lor.lhs.false
  %64 = load i64, i64* %psize, align 8, !dbg !8439, !tbaa !3285
  %65 = load i64, i64* %csize, align 8, !dbg !8442, !tbaa !3285
  %sub81 = sub i64 9223372036854775807, %65, !dbg !8443
  %cmp82 = icmp ule i64 %64, %sub81, !dbg !8444
  br i1 %cmp82, label %if.then84, label %if.else86, !dbg !8445

if.then84:                                        ; preds = %if.else80
  %66 = load i64, i64* %csize, align 8, !dbg !8446, !tbaa !3285
  %67 = load i64, i64* %psize, align 8, !dbg !8447, !tbaa !3285
  %add85 = add i64 %67, %66, !dbg !8447
  store i64 %add85, i64* %psize, align 8, !dbg !8447, !tbaa !3285
  br label %if.end89, !dbg !8448

if.else86:                                        ; preds = %if.else80
  %call87 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.74.155, i64 0, i64 0)) #9, !dbg !8449
  %68 = load i8*, i8** %src_name.addr, align 8, !dbg !8451, !tbaa !2645
  %call88 = call i8* @quotearg_style(i32 4, i8* %68), !dbg !8451
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %call87, i8* %call88), !dbg !8452
  store i1 false, i1* %retval, align 1, !dbg !8453
  br label %return, !dbg !8453

if.end89:                                         ; preds = %if.then84
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %if.end79
  %69 = load i64, i64* %csize, align 8, !dbg !8454, !tbaa !3285
  %70 = load i64, i64* %n_read, align 8, !dbg !8455, !tbaa !3285
  %sub91 = sub i64 %70, %69, !dbg !8455
  store i64 %sub91, i64* %n_read, align 8, !dbg !8455, !tbaa !3285
  %71 = load i64, i64* %csize, align 8, !dbg !8456, !tbaa !3285
  %72 = load i8*, i8** %cbuf, align 8, !dbg !8457, !tbaa !2645
  %add.ptr = getelementptr inbounds i8, i8* %72, i64 %71, !dbg !8457
  store i8* %add.ptr, i8** %cbuf, align 8, !dbg !8457, !tbaa !2645
  br label %while.cond17, !dbg !8342, !llvm.loop !8458

while.end:                                        ; preds = %while.cond17
  %73 = load i8, i8* %make_hole, align 1, !dbg !8460, !tbaa !2739
  %tobool92 = trunc i8 %73 to i1, !dbg !8460
  %74 = load i8*, i8** %last_write_made_hole.addr, align 8, !dbg !8461, !tbaa !2645
  %frombool93 = zext i1 %tobool92 to i8, !dbg !8462
  store i8 %frombool93, i8* %74, align 1, !dbg !8462, !tbaa !2739, !ctir !142
  br label %while.cond, !dbg !8295, !llvm.loop !8314

while.end94:                                      ; preds = %if.then10, %while.cond
  %75 = load i8, i8* %make_hole, align 1, !dbg !8463, !tbaa !2739
  %tobool95 = trunc i8 %75 to i1, !dbg !8463
  br i1 %tobool95, label %land.lhs.true97, label %if.else101, !dbg !8465

land.lhs.true97:                                  ; preds = %while.end94
  %76 = load i32, i32* %dest_fd.addr, align 4, !dbg !8466, !tbaa !2632
  %77 = load i8*, i8** %dst_name.addr, align 8, !dbg !8467, !tbaa !2645
  %78 = load i8, i8* %punch_holes.addr, align 1, !dbg !8468, !tbaa !2739
  %tobool98 = trunc i8 %78 to i1, !dbg !8468
  %79 = load i64, i64* %psize, align 8, !dbg !8469, !tbaa !3285
  %call99 = call zeroext i1 @create_hole(i32 %76, i8* %77, i1 zeroext %tobool98, i64 %79), !dbg !8470
  br i1 %call99, label %if.else101, label %if.then100, !dbg !8471

if.then100:                                       ; preds = %land.lhs.true97
  store i1 false, i1* %retval, align 1, !dbg !8472
  br label %return, !dbg !8472

if.else101:                                       ; preds = %land.lhs.true97, %while.end94
  store i1 true, i1* %retval, align 1, !dbg !8473
  br label %return, !dbg !8473

return:                                           ; preds = %if.else101, %if.then100, %if.else86, %if.then67, %if.then60, %if.end
  %80 = load i1, i1* %retval, align 1, !dbg !8474
  ret i1 %80, !dbg !8474
}

; Function Attrs: nounwind
declare dso_local i32 @ftruncate(i32, i64) #2

; Function Attrs: nounwind
declare dso_local i32 @geteuid() #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @fchmod_or_lchmod(i32 %desc, i8* %name, i32 %mode) #4 !dbg !8475 !ctir !555 {
entry:
  %retval = alloca i32, align 4
  %desc.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !8476, metadata !DIExpression()), !dbg !8477
  store i8* %name, i8** %name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8478, metadata !DIExpression()), !dbg !8479
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !8480, metadata !DIExpression()), !dbg !8481
  %0 = load i32, i32* %desc.addr, align 4, !dbg !8482, !tbaa !2632
  %cmp = icmp sle i32 0, %0, !dbg !8484
  br i1 %cmp, label %if.then, label %if.end, !dbg !8485

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %desc.addr, align 4, !dbg !8486, !tbaa !2632
  %2 = load i32, i32* %mode.addr, align 4, !dbg !8487, !tbaa !2632
  %call = call i32 @fchmod(i32 %1, i32 %2) #9, !dbg !8488
  store i32 %call, i32* %retval, align 4, !dbg !8489
  br label %return, !dbg !8489

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %name.addr, align 8, !dbg !8490, !tbaa !2645
  %4 = load i32, i32* %mode.addr, align 4, !dbg !8491, !tbaa !2632
  %call1 = call i32 @chmod(i8* %3, i32 %4) #9, !dbg !8492
  store i32 %call1, i32* %retval, align 4, !dbg !8493
  br label %return, !dbg !8493

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !8494
  ret i32 %5, !dbg !8494
}

; Function Attrs: nounwind
declare dso_local i32 @fchmod(i32, i32) #2

declare dso_local i64 @read(i32, i8*, i64) #3

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @is_nul(i8* %buf, i64 %length) #10 !dbg !8495 !ctir !550 {
entry:
  %retval = alloca i1, align 1
  %buf.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %p = alloca i8*, align 8, !ctir !552
  %word = alloca i8, align 1, !ctir !554
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !8496, metadata !DIExpression()), !dbg !8497
  store i64 %length, i64* %length.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !8498, metadata !DIExpression()), !dbg !8499
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8500, metadata !DIExpression()), !dbg !8501
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !8502, !tbaa !2645
  store i8* %0, i8** %p, align 8, !dbg !8501, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8* %word, metadata !8503, metadata !DIExpression()), !dbg !8504
  %1 = load i64, i64* %length.addr, align 8, !dbg !8505, !tbaa !3285
  %tobool = icmp ne i64 %1, 0, !dbg !8505
  br i1 %tobool, label %if.end, label %if.then, !dbg !8507

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !8508
  br label %return, !dbg !8508

if.end:                                           ; preds = %entry
  br label %while.cond, !dbg !8509

while.cond:                                       ; preds = %if.end7, %if.end
  %2 = load i64, i64* %length.addr, align 8, !dbg !8510, !tbaa !3285
  %and = and i64 %2, 0, !dbg !8510
  %tobool1 = icmp ne i64 %and, 0, !dbg !8509
  br i1 %tobool1, label %while.body, label %while.end, !dbg !8509

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %p, align 8, !dbg !8511, !tbaa !2645
  %4 = load i8, i8* %3, align 1, !dbg !8514, !tbaa !3292, !ctir !553
  %tobool2 = icmp ne i8 %4, 0, !dbg !8514
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !8515

if.then3:                                         ; preds = %while.body
  store i1 false, i1* %retval, align 1, !dbg !8516
  br label %return, !dbg !8516

if.end4:                                          ; preds = %while.body
  %5 = load i8*, i8** %p, align 8, !dbg !8517, !tbaa !2645
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !8517
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !8517, !tbaa !2645
  %6 = load i64, i64* %length.addr, align 8, !dbg !8518, !tbaa !3285
  %dec = add i64 %6, -1, !dbg !8518
  store i64 %dec, i64* %length.addr, align 8, !dbg !8518, !tbaa !3285
  %7 = load i64, i64* %length.addr, align 8, !dbg !8519, !tbaa !3285
  %tobool5 = icmp ne i64 %7, 0, !dbg !8519
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !8521

if.then6:                                         ; preds = %if.end4
  store i1 true, i1* %retval, align 1, !dbg !8522
  br label %return, !dbg !8522

if.end7:                                          ; preds = %if.end4
  br label %while.cond, !dbg !8509, !llvm.loop !8523

while.end:                                        ; preds = %while.cond
  br label %for.cond, !dbg !8525

for.cond:                                         ; preds = %if.end16, %while.end
  %8 = load i8*, i8** %p, align 8, !dbg !8526, !tbaa !2645
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %word, i8* align 1 %8, i64 1, i1 false), !dbg !8530
  %9 = load i8, i8* %word, align 1, !dbg !8531, !tbaa !3292
  %tobool8 = icmp ne i8 %9, 0, !dbg !8531
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !8533

if.then9:                                         ; preds = %for.cond
  store i1 false, i1* %retval, align 1, !dbg !8534
  br label %return, !dbg !8534

if.end10:                                         ; preds = %for.cond
  %10 = load i8*, i8** %p, align 8, !dbg !8535, !tbaa !2645
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 1, !dbg !8535
  store i8* %add.ptr, i8** %p, align 8, !dbg !8535, !tbaa !2645
  %11 = load i64, i64* %length.addr, align 8, !dbg !8536, !tbaa !3285
  %sub = sub i64 %11, 1, !dbg !8536
  store i64 %sub, i64* %length.addr, align 8, !dbg !8536, !tbaa !3285
  %12 = load i64, i64* %length.addr, align 8, !dbg !8537, !tbaa !3285
  %tobool11 = icmp ne i64 %12, 0, !dbg !8537
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !8539

if.then12:                                        ; preds = %if.end10
  store i1 true, i1* %retval, align 1, !dbg !8540
  br label %return, !dbg !8540

if.end13:                                         ; preds = %if.end10
  %13 = load i64, i64* %length.addr, align 8, !dbg !8541, !tbaa !3285
  %and14 = and i64 %13, 15, !dbg !8541
  %cmp = icmp eq i64 %and14, 0, !dbg !8543
  br i1 %cmp, label %if.then15, label %if.end16, !dbg !8544

if.then15:                                        ; preds = %if.end13
  br label %for.end, !dbg !8545

if.end16:                                         ; preds = %if.end13
  br label %for.cond, !dbg !8546, !llvm.loop !8547

for.end:                                          ; preds = %if.then15
  %14 = load i8*, i8** %buf.addr, align 8, !dbg !8550, !tbaa !2645
  %15 = load i8*, i8** %p, align 8, !dbg !8551, !tbaa !2645
  %16 = load i64, i64* %length.addr, align 8, !dbg !8552, !tbaa !3285
  %call = call i32 @memcmp(i8* %14, i8* %15, i64 %16) #14, !dbg !8553
  %cmp17 = icmp eq i32 %call, 0, !dbg !8554
  store i1 %cmp17, i1* %retval, align 1, !dbg !8555
  br label %return, !dbg !8555

return:                                           ; preds = %for.end, %if.then12, %if.then9, %if.then6, %if.then3, %if.then
  %17 = load i1, i1* %retval, align 1, !dbg !8556
  ret i1 %17, !dbg !8556
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @create_hole(i32 %fd, i8* %name, i1 zeroext %punch_holes, i64 %size) #4 !dbg !8557 !ctir !536 {
entry:
  %retval = alloca i1, align 1
  %fd.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %punch_holes.addr = alloca i8, align 1
  %size.addr = alloca i64, align 8
  %file_end = alloca i64, align 8, !ctir !352
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !8558, metadata !DIExpression()), !dbg !8559
  store i8* %name, i8** %name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8560, metadata !DIExpression()), !dbg !8561
  %frombool = zext i1 %punch_holes to i8
  store i8 %frombool, i8* %punch_holes.addr, align 1, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %punch_holes.addr, metadata !8562, metadata !DIExpression()), !dbg !8563
  store i64 %size, i64* %size.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8564, metadata !DIExpression()), !dbg !8565
  call void @llvm.dbg.declare(metadata i64* %file_end, metadata !8566, metadata !DIExpression()), !dbg !8567
  %0 = load i32, i32* %fd.addr, align 4, !dbg !8568, !tbaa !2632
  %1 = load i64, i64* %size.addr, align 8, !dbg !8569, !tbaa !3285
  %call = call i64 @lseek(i32 %0, i64 %1, i32 1) #9, !dbg !8570
  store i64 %call, i64* %file_end, align 8, !dbg !8567, !tbaa !3285
  %2 = load i64, i64* %file_end, align 8, !dbg !8571, !tbaa !3285
  %cmp = icmp slt i64 %2, 0, !dbg !8573
  br i1 %cmp, label %if.then, label %if.end, !dbg !8574

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !8575
  %3 = load i32, i32* %call1, align 4, !dbg !8575, !tbaa !2632, !ctir !7
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.69.156, i64 0, i64 0)) #9, !dbg !8577
  %4 = load i8*, i8** %name.addr, align 8, !dbg !8578, !tbaa !2645
  %call3 = call i8* @quotearg_style(i32 4, i8* %4), !dbg !8578
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %3, i8* %call2, i8* %call3), !dbg !8579
  store i1 false, i1* %retval, align 1, !dbg !8580
  br label %return, !dbg !8580

if.end:                                           ; preds = %entry
  %5 = load i8, i8* %punch_holes.addr, align 1, !dbg !8581, !tbaa !2739
  %tobool = trunc i8 %5 to i1, !dbg !8581
  br i1 %tobool, label %land.lhs.true, label %if.end10, !dbg !8583

land.lhs.true:                                    ; preds = %if.end
  %6 = load i32, i32* %fd.addr, align 4, !dbg !8584, !tbaa !2632
  %7 = load i64, i64* %file_end, align 8, !dbg !8585, !tbaa !3285
  %8 = load i64, i64* %size.addr, align 8, !dbg !8586, !tbaa !3285
  %sub = sub nsw i64 %7, %8, !dbg !8587
  %9 = load i64, i64* %size.addr, align 8, !dbg !8588, !tbaa !3285
  %call4 = call i32 @punch_hole(i32 %6, i64 %sub, i64 %9), !dbg !8589
  %cmp5 = icmp slt i32 %call4, 0, !dbg !8590
  br i1 %cmp5, label %if.then6, label %if.end10, !dbg !8591

if.then6:                                         ; preds = %land.lhs.true
  %call7 = call i32* @__errno_location() #16, !dbg !8592
  %10 = load i32, i32* %call7, align 4, !dbg !8592, !tbaa !2632, !ctir !7
  %call8 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.71.157, i64 0, i64 0)) #9, !dbg !8594
  %11 = load i8*, i8** %name.addr, align 8, !dbg !8595, !tbaa !2645
  %call9 = call i8* @quotearg_style(i32 4, i8* %11), !dbg !8595
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %10, i8* %call8, i8* %call9), !dbg !8596
  store i1 false, i1* %retval, align 1, !dbg !8597
  br label %return, !dbg !8597

if.end10:                                         ; preds = %land.lhs.true, %if.end
  store i1 true, i1* %retval, align 1, !dbg !8598
  br label %return, !dbg !8598

return:                                           ; preds = %if.end10, %if.then6, %if.then
  %12 = load i1, i1* %retval, align 1, !dbg !8599
  ret i1 %12, !dbg !8599
}

; Function Attrs: nounwind
declare dso_local i64 @lseek(i32, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @punch_hole(i32 %fd, i64 %offset, i64 %length) #4 !dbg !8600 !ctir !540 {
entry:
  %fd.addr = alloca i32, align 4
  %offset.addr = alloca i64, align 8
  %length.addr = alloca i64, align 8
  %ret = alloca i32, align 4, !ctir !7
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !8601, metadata !DIExpression()), !dbg !8602
  store i64 %offset, i64* %offset.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !8603, metadata !DIExpression()), !dbg !8604
  store i64 %length, i64* %length.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !8605, metadata !DIExpression()), !dbg !8606
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8607, metadata !DIExpression()), !dbg !8608
  store i32 0, i32* %ret, align 4, !dbg !8608, !tbaa !2632
  %0 = load i32, i32* %fd.addr, align 4, !dbg !8609, !tbaa !2632
  %1 = load i64, i64* %offset.addr, align 8, !dbg !8610, !tbaa !3285
  %2 = load i64, i64* %length.addr, align 8, !dbg !8611, !tbaa !3285
  %call = call i32 @fallocate(i32 %0, i32 3, i64 %1, i64 %2), !dbg !8612
  store i32 %call, i32* %ret, align 4, !dbg !8613, !tbaa !2632
  %3 = load i32, i32* %ret, align 4, !dbg !8614, !tbaa !2632
  %cmp = icmp slt i32 %3, 0, !dbg !8616
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8617

land.lhs.true:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !8618
  %4 = load i32, i32* %call1, align 4, !dbg !8618, !tbaa !2632, !ctir !7
  %call2 = call zeroext i1 @is_ENOTSUP(i32 %4), !dbg !8619
  br i1 %call2, label %if.then, label %lor.lhs.false, !dbg !8620

lor.lhs.false:                                    ; preds = %land.lhs.true
  %call3 = call i32* @__errno_location() #16, !dbg !8621
  %5 = load i32, i32* %call3, align 4, !dbg !8621, !tbaa !2632, !ctir !7
  %cmp4 = icmp eq i32 %5, 38, !dbg !8622
  br i1 %cmp4, label %if.then, label %if.end, !dbg !8623

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  store i32 0, i32* %ret, align 4, !dbg !8624, !tbaa !2632
  br label %if.end, !dbg !8625

if.end:                                           ; preds = %if.then, %lor.lhs.false, %entry
  %6 = load i32, i32* %ret, align 4, !dbg !8626, !tbaa !2632
  ret i32 %6, !dbg !8627
}

declare dso_local i32 @fallocate(i32, i32, i64, i64) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @is_ENOTSUP(i32 %err) #4 !dbg !8628 !ctir !256 {
entry:
  %err.addr = alloca i32, align 4
  store i32 %err, i32* %err.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %err.addr, metadata !8629, metadata !DIExpression()), !dbg !8630
  %0 = load i32, i32* %err.addr, align 4, !dbg !8631, !tbaa !2632
  %cmp = icmp eq i32 %0, 95, !dbg !8632
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !8633

lor.rhs:                                          ; preds = %entry
  br label %lor.end, !dbg !8633

lor.end:                                          ; preds = %lor.rhs, %entry
  %1 = phi i1 [ true, %entry ], [ false, %lor.rhs ]
  ret i1 %1, !dbg !8634
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @extent_scan_free(%struct.extent_scan* %scan) #4 !dbg !8635 !ctir !524 {
entry:
  %scan.addr = alloca %struct.extent_scan*, align 8
  store %struct.extent_scan* %scan, %struct.extent_scan** %scan.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.extent_scan** %scan.addr, metadata !8636, metadata !DIExpression()), !dbg !8637
  %0 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8638, !tbaa !2645
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %0, i32 0, i32 6, !dbg !8639, !ctir !527
  %1 = load %struct.extent_info*, %struct.extent_info** %ext_info, align 8, !dbg !8639, !tbaa !8043, !ctir !517
  %2 = bitcast %struct.extent_info* %1 to i8*, !dbg !8638
  call void @free(i8* %2) #9, !dbg !8640
  %3 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8641, !tbaa !2645
  %ext_info1 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %3, i32 0, i32 6, !dbg !8642, !ctir !527
  store %struct.extent_info* null, %struct.extent_info** %ext_info1, align 8, !dbg !8643, !tbaa !8043, !ctir !517
  %4 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8644, !tbaa !2645
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %4, i32 0, i32 3, !dbg !8645, !ctir !527
  store i64 0, i64* %ei_count, align 8, !dbg !8646, !tbaa !8024, !ctir !55
  ret void, !dbg !8647
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @write_zeros(i32 %fd, i64 %n_bytes) #4 !dbg !604 !ctir !538 {
entry:
  %retval = alloca i1, align 1
  %fd.addr = alloca i32, align 4
  %n_bytes.addr = alloca i64, align 8
  %n = alloca i64, align 8, !ctir !55
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !8648, metadata !DIExpression()), !dbg !8649
  store i64 %n_bytes, i64* %n_bytes.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %n_bytes.addr, metadata !8650, metadata !DIExpression()), !dbg !8651
  %0 = load i8*, i8** @write_zeros.zeros, align 8, !dbg !8652, !tbaa !2645
  %cmp = icmp eq i8* %0, null, !dbg !8654
  br i1 %cmp, label %if.then, label %if.end3, !dbg !8655

if.then:                                          ; preds = %entry
  %1 = load i64, i64* @write_zeros.nz, align 8, !dbg !8656, !tbaa !3285
  %call = call noalias i8* @calloc(i64 %1, i64 1) #9, !dbg !8658
  store i8* %call, i8** @write_zeros.zeros, align 8, !dbg !8659, !tbaa !2645
  %2 = load i8*, i8** @write_zeros.zeros, align 8, !dbg !8660, !tbaa !2645
  %cmp1 = icmp eq i8* %2, null, !dbg !8662
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !8663

if.then2:                                         ; preds = %if.then
  store i8* getelementptr inbounds ([1024 x i8], [1024 x i8]* @write_zeros.fallback, i64 0, i64 0), i8** @write_zeros.zeros, align 8, !dbg !8664, !tbaa !2645
  store i64 1024, i64* @write_zeros.nz, align 8, !dbg !8666, !tbaa !3285
  br label %if.end, !dbg !8667

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end3, !dbg !8668

if.end3:                                          ; preds = %if.end, %entry
  br label %while.cond, !dbg !8669

while.cond:                                       ; preds = %if.end8, %if.end3
  %3 = load i64, i64* %n_bytes.addr, align 8, !dbg !8670, !tbaa !3285
  %tobool = icmp ne i64 %3, 0, !dbg !8669
  br i1 %tobool, label %while.body, label %while.end, !dbg !8669

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %n, metadata !8671, metadata !DIExpression()), !dbg !8673
  %4 = load i64, i64* @write_zeros.nz, align 8, !dbg !8674, !tbaa !3285
  %5 = load i64, i64* %n_bytes.addr, align 8, !dbg !8674, !tbaa !3285
  %cmp4 = icmp ult i64 %4, %5, !dbg !8674
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !8674

cond.true:                                        ; preds = %while.body
  %6 = load i64, i64* @write_zeros.nz, align 8, !dbg !8674, !tbaa !3285
  br label %cond.end, !dbg !8674

cond.false:                                       ; preds = %while.body
  %7 = load i64, i64* %n_bytes.addr, align 8, !dbg !8674, !tbaa !3285
  br label %cond.end, !dbg !8674

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %6, %cond.true ], [ %7, %cond.false ], !dbg !8674
  store i64 %cond, i64* %n, align 8, !dbg !8673, !tbaa !3285
  %8 = load i32, i32* %fd.addr, align 4, !dbg !8675, !tbaa !2632
  %9 = load i8*, i8** @write_zeros.zeros, align 8, !dbg !8677, !tbaa !2645
  %10 = load i64, i64* %n, align 8, !dbg !8678, !tbaa !3285
  %call5 = call i64 @full_write(i32 %8, i8* %9, i64 %10), !dbg !8679
  %11 = load i64, i64* %n, align 8, !dbg !8680, !tbaa !3285
  %cmp6 = icmp ne i64 %call5, %11, !dbg !8681
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !8682

if.then7:                                         ; preds = %cond.end
  store i1 false, i1* %retval, align 1, !dbg !8683
  br label %return, !dbg !8683

if.end8:                                          ; preds = %cond.end
  %12 = load i64, i64* %n, align 8, !dbg !8684, !tbaa !3285
  %13 = load i64, i64* %n_bytes.addr, align 8, !dbg !8685, !tbaa !3285
  %sub = sub i64 %13, %12, !dbg !8685
  store i64 %sub, i64* %n_bytes.addr, align 8, !dbg !8685, !tbaa !3285
  br label %while.cond, !dbg !8669, !llvm.loop !8686

while.end:                                        ; preds = %while.cond
  store i1 true, i1* %retval, align 1, !dbg !8688
  br label %return, !dbg !8688

return:                                           ; preds = %while.end, %if.then7
  %14 = load i1, i1* %retval, align 1, !dbg !8689
  ret i1 %14, !dbg !8689
}

; Function Attrs: nounwind
declare dso_local noalias i8* @calloc(i64, i64) #2

; Function Attrs: nounwind
declare dso_local i32 @ioctl(i32, i64, ...) #2

declare dso_local i32 @putchar_unlocked(i32) #3

; Function Attrs: nounwind
declare dso_local i8* @mempcpy(i8*, i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @writable_destination(i8* %file, i32 %mode) #4 !dbg !8690 !ctir !454 {
entry:
  %file.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  store i8* %file, i8** %file.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !8691, metadata !DIExpression()), !dbg !8692
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !8693, metadata !DIExpression()), !dbg !8694
  %0 = load i32, i32* %mode.addr, align 4, !dbg !8695, !tbaa !2632
  %and = and i32 %0, 61440, !dbg !8695
  %cmp = icmp eq i32 %and, 40960, !dbg !8695
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !8696

lor.lhs.false:                                    ; preds = %entry
  %call = call zeroext i1 @can_write_any_file(), !dbg !8697
  br i1 %call, label %lor.end, label %lor.rhs, !dbg !8698

lor.rhs:                                          ; preds = %lor.lhs.false
  %1 = load i8*, i8** %file.addr, align 8, !dbg !8699, !tbaa !2645
  %call1 = call i32 @euidaccess(i8* %1, i32 2) #9, !dbg !8700
  %cmp2 = icmp eq i32 %call1, 0, !dbg !8701
  br label %lor.end, !dbg !8698

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %2 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp2, %lor.rhs ]
  ret i1 %2, !dbg !8702
}

; Function Attrs: nounwind
declare dso_local i32 @euidaccess(i8*, i32) #2

; Function Attrs: nounwind
declare dso_local i8* @canonicalize_file_name(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @cp_options_default(%struct.cp_options* %x) #4 !dbg !8703 !ctir !401 {
entry:
  %x.addr = alloca %struct.cp_options*, align 8
  store %struct.cp_options* %x, %struct.cp_options** %x.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.cp_options** %x.addr, metadata !8704, metadata !DIExpression()), !dbg !8705
  %0 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8706, !tbaa !2645
  %1 = bitcast %struct.cp_options* %0 to i8*, !dbg !8707
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 80, i1 false), !dbg !8707
  %call = call i32 @geteuid() #9, !dbg !8708
  %cmp = icmp eq i32 %call, 0, !dbg !8709
  %2 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8710, !tbaa !2645
  %owner_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %2, i32 0, i32 12, !dbg !8711, !ctir !358
  %frombool = zext i1 %cmp to i8, !dbg !8712
  store i8 %frombool, i8* %owner_privileges, align 1, !dbg !8712, !tbaa !7899, !ctir !142
  %3 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8713, !tbaa !2645
  %chown_privileges = getelementptr inbounds %struct.cp_options, %struct.cp_options* %3, i32 0, i32 11, !dbg !8714, !ctir !358
  %frombool1 = zext i1 %cmp to i8, !dbg !8715
  store i8 %frombool1, i8* %chown_privileges, align 2, !dbg !8715, !tbaa !7552, !ctir !142
  %4 = load %struct.cp_options*, %struct.cp_options** %x.addr, align 8, !dbg !8716, !tbaa !2645
  %rename_errno = getelementptr inbounds %struct.cp_options, %struct.cp_options* %4, i32 0, i32 35, !dbg !8717, !ctir !358
  store i32 -1, i32* %rename_errno, align 4, !dbg !8718, !tbaa !4539, !ctir !7
  ret void, !dbg !8719
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @forget_created(i64 %ino, i64 %dev) #4 !dbg !8720 !ctir !617 {
entry:
  %ino.addr = alloca i64, align 8
  %dev.addr = alloca i64, align 8
  %probe = alloca %struct.Src_to_dest, align 8, !ctir !620
  %ent = alloca %struct.Src_to_dest*, align 8, !ctir !619
  store i64 %ino, i64* %ino.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %ino.addr, metadata !8721, metadata !DIExpression()), !dbg !8722
  store i64 %dev, i64* %dev.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %dev.addr, metadata !8723, metadata !DIExpression()), !dbg !8724
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest* %probe, metadata !8725, metadata !DIExpression()), !dbg !8726
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %ent, metadata !8727, metadata !DIExpression()), !dbg !8728
  %0 = load i64, i64* %ino.addr, align 8, !dbg !8729, !tbaa !3285
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %probe, i32 0, i32 0, !dbg !8730, !ctir !620
  store i64 %0, i64* %st_ino, align 8, !dbg !8731, !tbaa !8732, !ctir !441
  %1 = load i64, i64* %dev.addr, align 8, !dbg !8734, !tbaa !3285
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %probe, i32 0, i32 1, !dbg !8735, !ctir !620
  store i64 %1, i64* %st_dev, align 8, !dbg !8736, !tbaa !8737, !ctir !443
  %name = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %probe, i32 0, i32 2, !dbg !8738, !ctir !620
  store i8* null, i8** %name, align 8, !dbg !8739, !tbaa !8740, !ctir !9
  %2 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !8741, !tbaa !2645
  %3 = bitcast %struct.Src_to_dest* %probe to i8*, !dbg !8742
  %call = call i8* @hash_delete(%struct.hash_table* %2, i8* %3), !dbg !8743
  %4 = bitcast i8* %call to %struct.Src_to_dest*, !dbg !8743
  store %struct.Src_to_dest* %4, %struct.Src_to_dest** %ent, align 8, !dbg !8744, !tbaa !2645
  %5 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8745, !tbaa !2645
  %tobool = icmp ne %struct.Src_to_dest* %5, null, !dbg !8745
  br i1 %tobool, label %if.then, label %if.end, !dbg !8747

if.then:                                          ; preds = %entry
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8748, !tbaa !2645
  %7 = bitcast %struct.Src_to_dest* %6 to i8*, !dbg !8748
  call void @src_to_dest_free(i8* %7), !dbg !8749
  br label %if.end, !dbg !8749

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8750
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @src_to_dest_free(i8* %x) #4 !dbg !8751 !ctir !631 {
entry:
  %x.addr = alloca i8*, align 8
  %a = alloca %struct.Src_to_dest*, align 8, !ctir !619
  store i8* %x, i8** %x.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !8752, metadata !DIExpression()), !dbg !8753
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %a, metadata !8754, metadata !DIExpression()), !dbg !8755
  %0 = load i8*, i8** %x.addr, align 8, !dbg !8756, !tbaa !2645
  %1 = bitcast i8* %0 to %struct.Src_to_dest*, !dbg !8756
  store %struct.Src_to_dest* %1, %struct.Src_to_dest** %a, align 8, !dbg !8755, !tbaa !2645
  %2 = load %struct.Src_to_dest*, %struct.Src_to_dest** %a, align 8, !dbg !8757, !tbaa !2645
  %name = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %2, i32 0, i32 2, !dbg !8758, !ctir !620
  %3 = load i8*, i8** %name, align 8, !dbg !8758, !tbaa !8740, !ctir !9
  call void @free(i8* %3) #9, !dbg !8759
  %4 = load i8*, i8** %x.addr, align 8, !dbg !8760, !tbaa !2645
  call void @free(i8* %4) #9, !dbg !8761
  ret void, !dbg !8762
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @src_to_dest_lookup(i64 %ino, i64 %dev) #4 !dbg !8763 !ctir !625 {
entry:
  %ino.addr = alloca i64, align 8
  %dev.addr = alloca i64, align 8
  %ent = alloca %struct.Src_to_dest, align 8, !ctir !620
  %e = alloca %struct.Src_to_dest*, align 8, !ctir !627
  store i64 %ino, i64* %ino.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %ino.addr, metadata !8764, metadata !DIExpression()), !dbg !8765
  store i64 %dev, i64* %dev.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %dev.addr, metadata !8766, metadata !DIExpression()), !dbg !8767
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest* %ent, metadata !8768, metadata !DIExpression()), !dbg !8769
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %e, metadata !8770, metadata !DIExpression()), !dbg !8771
  %0 = load i64, i64* %ino.addr, align 8, !dbg !8772, !tbaa !3285
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %ent, i32 0, i32 0, !dbg !8773, !ctir !620
  store i64 %0, i64* %st_ino, align 8, !dbg !8774, !tbaa !8732, !ctir !441
  %1 = load i64, i64* %dev.addr, align 8, !dbg !8775, !tbaa !3285
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %ent, i32 0, i32 1, !dbg !8776, !ctir !620
  store i64 %1, i64* %st_dev, align 8, !dbg !8777, !tbaa !8737, !ctir !443
  %2 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !8778, !tbaa !2645
  %3 = bitcast %struct.Src_to_dest* %ent to i8*, !dbg !8779
  %call = call i8* @hash_lookup(%struct.hash_table* %2, i8* %3), !dbg !8780
  %4 = bitcast i8* %call to %struct.Src_to_dest*, !dbg !8780
  store %struct.Src_to_dest* %4, %struct.Src_to_dest** %e, align 8, !dbg !8781, !tbaa !2645
  %5 = load %struct.Src_to_dest*, %struct.Src_to_dest** %e, align 8, !dbg !8782, !tbaa !2645
  %tobool = icmp ne %struct.Src_to_dest* %5, null, !dbg !8782
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8782

cond.true:                                        ; preds = %entry
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %e, align 8, !dbg !8783, !tbaa !2645
  %name = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %6, i32 0, i32 2, !dbg !8784, !ctir !628
  %7 = load i8*, i8** %name, align 8, !dbg !8784, !tbaa !8740, !ctir !9
  br label %cond.end, !dbg !8782

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8782

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %7, %cond.true ], [ null, %cond.false ], !dbg !8782
  ret i8* %cond, !dbg !8785
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @remember_copied(i8* %name, i64 %ino, i64 %dev) #4 !dbg !8786 !ctir !629 {
entry:
  %retval = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %ino.addr = alloca i64, align 8
  %dev.addr = alloca i64, align 8
  %ent = alloca %struct.Src_to_dest*, align 8, !ctir !619
  %ent_from_table = alloca %struct.Src_to_dest*, align 8, !ctir !619
  store i8* %name, i8** %name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !8787, metadata !DIExpression()), !dbg !8788
  store i64 %ino, i64* %ino.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %ino.addr, metadata !8789, metadata !DIExpression()), !dbg !8790
  store i64 %dev, i64* %dev.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %dev.addr, metadata !8791, metadata !DIExpression()), !dbg !8792
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %ent, metadata !8793, metadata !DIExpression()), !dbg !8794
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %ent_from_table, metadata !8795, metadata !DIExpression()), !dbg !8796
  %call = call noalias i8* @xmalloc(i64 24), !dbg !8797
  %0 = bitcast i8* %call to %struct.Src_to_dest*, !dbg !8797
  store %struct.Src_to_dest* %0, %struct.Src_to_dest** %ent, align 8, !dbg !8798, !tbaa !2645
  %1 = load i8*, i8** %name.addr, align 8, !dbg !8799, !tbaa !2645
  %call1 = call noalias i8* @xstrdup(i8* %1), !dbg !8800
  %2 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8801, !tbaa !2645
  %name2 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %2, i32 0, i32 2, !dbg !8802, !ctir !620
  store i8* %call1, i8** %name2, align 8, !dbg !8803, !tbaa !8740, !ctir !9
  %3 = load i64, i64* %ino.addr, align 8, !dbg !8804, !tbaa !3285
  %4 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8805, !tbaa !2645
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %4, i32 0, i32 0, !dbg !8806, !ctir !620
  store i64 %3, i64* %st_ino, align 8, !dbg !8807, !tbaa !8732, !ctir !441
  %5 = load i64, i64* %dev.addr, align 8, !dbg !8808, !tbaa !3285
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8809, !tbaa !2645
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %6, i32 0, i32 1, !dbg !8810, !ctir !620
  store i64 %5, i64* %st_dev, align 8, !dbg !8811, !tbaa !8737, !ctir !443
  %7 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !8812, !tbaa !2645
  %8 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8813, !tbaa !2645
  %9 = bitcast %struct.Src_to_dest* %8 to i8*, !dbg !8813
  %call3 = call i8* @hash_insert(%struct.hash_table* %7, i8* %9), !dbg !8814
  %10 = bitcast i8* %call3 to %struct.Src_to_dest*, !dbg !8814
  store %struct.Src_to_dest* %10, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !8815, !tbaa !2645
  %11 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !8816, !tbaa !2645
  %cmp = icmp eq %struct.Src_to_dest* %11, null, !dbg !8818
  br i1 %cmp, label %if.then, label %if.end, !dbg !8819

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !8820
  unreachable, !dbg !8820

if.end:                                           ; preds = %entry
  %12 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !8822, !tbaa !2645
  %13 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8824, !tbaa !2645
  %cmp4 = icmp ne %struct.Src_to_dest* %12, %13, !dbg !8825
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !8826

if.then5:                                         ; preds = %if.end
  %14 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent, align 8, !dbg !8827, !tbaa !2645
  %15 = bitcast %struct.Src_to_dest* %14 to i8*, !dbg !8827
  call void @src_to_dest_free(i8* %15), !dbg !8829
  %16 = load %struct.Src_to_dest*, %struct.Src_to_dest** %ent_from_table, align 8, !dbg !8830, !tbaa !2645
  %name6 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %16, i32 0, i32 2, !dbg !8831, !ctir !620
  %17 = load i8*, i8** %name6, align 8, !dbg !8831, !tbaa !8740, !ctir !9
  store i8* %17, i8** %retval, align 8, !dbg !8832
  br label %return, !dbg !8832

if.end7:                                          ; preds = %if.end
  store i8* null, i8** %retval, align 8, !dbg !8833
  br label %return, !dbg !8833

return:                                           ; preds = %if.end7, %if.then5
  %18 = load i8*, i8** %retval, align 8, !dbg !8834
  ret i8* %18, !dbg !8834
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_init() #4 !dbg !8835 !ctir !200 {
entry:
  %call = call %struct.hash_table* @hash_initialize(i64 103, %struct.hash_tuning* null, i64 (i8*, i64)* @src_to_dest_hash, i1 (i8*, i8*)* @src_to_dest_compare, void (i8*)* @src_to_dest_free), !dbg !8836
  store %struct.hash_table* %call, %struct.hash_table** @src_to_dest, align 8, !dbg !8837, !tbaa !2645
  %0 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !8838, !tbaa !2645
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !8840
  br i1 %cmp, label %if.then, label %if.end, !dbg !8841

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !8842
  unreachable, !dbg !8842

if.end:                                           ; preds = %entry
  ret void, !dbg !8843
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @src_to_dest_hash(i8* %x, i64 %table_size) #4 !dbg !8844 !ctir !633 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.Src_to_dest*, align 8, !ctir !627
  store i8* %x, i8** %x.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !8845, metadata !DIExpression()), !dbg !8846
  store i64 %table_size, i64* %table_size.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !8847, metadata !DIExpression()), !dbg !8848
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %p, metadata !8849, metadata !DIExpression()), !dbg !8850
  %0 = load i8*, i8** %x.addr, align 8, !dbg !8851, !tbaa !2645
  %1 = bitcast i8* %0 to %struct.Src_to_dest*, !dbg !8851
  store %struct.Src_to_dest* %1, %struct.Src_to_dest** %p, align 8, !dbg !8850, !tbaa !2645
  %2 = load %struct.Src_to_dest*, %struct.Src_to_dest** %p, align 8, !dbg !8852, !tbaa !2645
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %2, i32 0, i32 0, !dbg !8853, !ctir !628
  %3 = load i64, i64* %st_ino, align 8, !dbg !8853, !tbaa !8732, !ctir !441
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !8854, !tbaa !3285
  %rem = urem i64 %3, %4, !dbg !8855
  ret i64 %rem, !dbg !8856
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @src_to_dest_compare(i8* %x, i8* %y) #4 !dbg !8857 !ctir !635 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.Src_to_dest*, align 8, !ctir !627
  %b = alloca %struct.Src_to_dest*, align 8, !ctir !627
  store i8* %x, i8** %x.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !8858, metadata !DIExpression()), !dbg !8859
  store i8* %y, i8** %y.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !8860, metadata !DIExpression()), !dbg !8861
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %a, metadata !8862, metadata !DIExpression()), !dbg !8863
  %0 = load i8*, i8** %x.addr, align 8, !dbg !8864, !tbaa !2645
  %1 = bitcast i8* %0 to %struct.Src_to_dest*, !dbg !8864
  store %struct.Src_to_dest* %1, %struct.Src_to_dest** %a, align 8, !dbg !8863, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.Src_to_dest** %b, metadata !8865, metadata !DIExpression()), !dbg !8866
  %2 = load i8*, i8** %y.addr, align 8, !dbg !8867, !tbaa !2645
  %3 = bitcast i8* %2 to %struct.Src_to_dest*, !dbg !8867
  store %struct.Src_to_dest* %3, %struct.Src_to_dest** %b, align 8, !dbg !8866, !tbaa !2645
  %4 = load %struct.Src_to_dest*, %struct.Src_to_dest** %a, align 8, !dbg !8868, !tbaa !2645
  %st_ino = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %4, i32 0, i32 0, !dbg !8868, !ctir !628
  %5 = load i64, i64* %st_ino, align 8, !dbg !8868, !tbaa !8732, !ctir !441
  %6 = load %struct.Src_to_dest*, %struct.Src_to_dest** %b, align 8, !dbg !8868, !tbaa !2645
  %st_ino1 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %6, i32 0, i32 0, !dbg !8868, !ctir !628
  %7 = load i64, i64* %st_ino1, align 8, !dbg !8868, !tbaa !8732, !ctir !441
  %cmp = icmp eq i64 %5, %7, !dbg !8868
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !8868

land.rhs:                                         ; preds = %entry
  %8 = load %struct.Src_to_dest*, %struct.Src_to_dest** %a, align 8, !dbg !8868, !tbaa !2645
  %st_dev = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %8, i32 0, i32 1, !dbg !8868, !ctir !628
  %9 = load i64, i64* %st_dev, align 8, !dbg !8868, !tbaa !8737, !ctir !443
  %10 = load %struct.Src_to_dest*, %struct.Src_to_dest** %b, align 8, !dbg !8868, !tbaa !2645
  %st_dev2 = getelementptr inbounds %struct.Src_to_dest, %struct.Src_to_dest* %10, i32 0, i32 1, !dbg !8868, !ctir !628
  %11 = load i64, i64* %st_dev2, align 8, !dbg !8868, !tbaa !8737, !ctir !443
  %cmp3 = icmp eq i64 %9, %11, !dbg !8868
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %12 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !8869
  %13 = zext i1 %12 to i64, !dbg !8868
  %cond = select i1 %12, i32 1, i32 0, !dbg !8868
  %tobool = icmp ne i32 %cond, 0, !dbg !8868
  ret i1 %tobool, !dbg !8870
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @forget_all() #4 !dbg !8871 !ctir !200 {
entry:
  %0 = load %struct.hash_table*, %struct.hash_table** @src_to_dest, align 8, !dbg !8872, !tbaa !2645
  call void @hash_free(%struct.hash_table* %0), !dbg !8873
  ret void, !dbg !8874
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @extent_scan_init(i32 %src_fd, %struct.extent_scan* %scan) #4 !dbg !8875 !ctir !1459 {
entry:
  %src_fd.addr = alloca i32, align 4
  %scan.addr = alloca %struct.extent_scan*, align 8
  store i32 %src_fd, i32* %src_fd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %src_fd.addr, metadata !8876, metadata !DIExpression()), !dbg !8877
  store %struct.extent_scan* %scan, %struct.extent_scan** %scan.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.extent_scan** %scan.addr, metadata !8878, metadata !DIExpression()), !dbg !8879
  %0 = load i32, i32* %src_fd.addr, align 4, !dbg !8880, !tbaa !2632
  %1 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8881, !tbaa !2645
  %fd = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %1, i32 0, i32 0, !dbg !8882, !ctir !1462
  store i32 %0, i32* %fd, align 8, !dbg !8883, !tbaa !8884, !ctir !7
  %2 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8885, !tbaa !2645
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %2, i32 0, i32 3, !dbg !8886, !ctir !1462
  store i64 0, i64* %ei_count, align 8, !dbg !8887, !tbaa !8024, !ctir !55
  %3 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8888, !tbaa !2645
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %3, i32 0, i32 6, !dbg !8889, !ctir !1462
  store %struct.extent_info* null, %struct.extent_info** %ext_info, align 8, !dbg !8890, !tbaa !8043, !ctir !1471
  %4 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8891, !tbaa !2645
  %scan_start = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %4, i32 0, i32 1, !dbg !8892, !ctir !1462
  store i64 0, i64* %scan_start, align 8, !dbg !8893, !tbaa !8894, !ctir !1458
  %5 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8895, !tbaa !2645
  %initial_scan_failed = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %5, i32 0, i32 4, !dbg !8896, !ctir !1462
  store i8 0, i8* %initial_scan_failed, align 8, !dbg !8897, !tbaa !8004, !ctir !142
  %6 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8898, !tbaa !2645
  %hit_final_extent = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %6, i32 0, i32 5, !dbg !8899, !ctir !1462
  store i8 0, i8* %hit_final_extent, align 1, !dbg !8900, !tbaa !7998, !ctir !142
  %call = call zeroext i1 @extent_need_sync(), !dbg !8901
  %7 = zext i1 %call to i64, !dbg !8901
  %cond = select i1 %call, i32 1, i32 0, !dbg !8901
  %8 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8902, !tbaa !2645
  %fm_flags = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %8, i32 0, i32 2, !dbg !8903, !ctir !1462
  store i32 %cond, i32* %fm_flags, align 8, !dbg !8904, !tbaa !8905, !ctir !70
  ret void, !dbg !8906
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @extent_need_sync() #4 !dbg !8907 !ctir !1329 {
entry:
  ret i1 true, !dbg !8908
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @extent_scan_read(%struct.extent_scan* %scan) #4 !dbg !8909 !ctir !1477 {
entry:
  %retval = alloca i1, align 1
  %scan.addr = alloca %struct.extent_scan*, align 8
  %si = alloca i32, align 4, !ctir !70
  %last_ei = alloca %struct.extent_info*, align 8, !ctir !1471
  %fiemap_buf = alloca %union.anon.17, align 8, !ctir !8910
  %fiemap = alloca %struct.fiemap*, align 8, !ctir !1479
  %fm_extents = alloca %struct.fiemap_extent*, align 8, !ctir !1508
  %prev_idx = alloca i64, align 8, !ctir !55
  %i = alloca i32, align 4, !ctir !70
  %new_logical = alloca i64, align 8, !ctir !1484
  %length_adjust = alloca i64, align 8, !ctir !1484
  store %struct.extent_scan* %scan, %struct.extent_scan** %scan.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.extent_scan** %scan.addr, metadata !8914, metadata !DIExpression()), !dbg !8915
  call void @llvm.dbg.declare(metadata i32* %si, metadata !8916, metadata !DIExpression()), !dbg !8917
  store i32 0, i32* %si, align 4, !dbg !8917, !tbaa !2632
  call void @llvm.dbg.declare(metadata %struct.extent_info** %last_ei, metadata !8918, metadata !DIExpression()), !dbg !8919
  %0 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8920, !tbaa !2645
  %ext_info = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %0, i32 0, i32 6, !dbg !8921, !ctir !1462
  %1 = load %struct.extent_info*, %struct.extent_info** %ext_info, align 8, !dbg !8921, !tbaa !8043, !ctir !1471
  store %struct.extent_info* %1, %struct.extent_info** %last_ei, align 8, !dbg !8919, !tbaa !2645
  br label %while.body, !dbg !8922

while.body:                                       ; preds = %entry, %if.end165
  call void @llvm.dbg.declare(metadata %union.anon.17* %fiemap_buf, metadata !8923, metadata !DIExpression()), !dbg !8925
  call void @llvm.dbg.declare(metadata %struct.fiemap** %fiemap, metadata !8926, metadata !DIExpression()), !dbg !8927
  %f = bitcast %union.anon.17* %fiemap_buf to %struct.fiemap*, !dbg !8928
  store %struct.fiemap* %f, %struct.fiemap** %fiemap, align 8, !dbg !8927, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.fiemap_extent** %fm_extents, metadata !8929, metadata !DIExpression()), !dbg !8930
  %2 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8931, !tbaa !2645
  %fm_extents1 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %2, i32 0, i32 6, !dbg !8932, !ctir !1480
  %arrayidx = getelementptr inbounds [0 x %struct.fiemap_extent], [0 x %struct.fiemap_extent]* %fm_extents1, i64 0, i64 0, !dbg !8931, !ctir !1495
  store %struct.fiemap_extent* %arrayidx, %struct.fiemap_extent** %fm_extents, align 8, !dbg !8930, !tbaa !2645
  %3 = bitcast %union.anon.17* %fiemap_buf to i8*, !dbg !8933
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 4096, i1 false), !dbg !8933
  %4 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8934, !tbaa !2645
  %scan_start = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %4, i32 0, i32 1, !dbg !8935, !ctir !1462
  %5 = load i64, i64* %scan_start, align 8, !dbg !8935, !tbaa !8894, !ctir !1458
  %6 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8936, !tbaa !2645
  %fm_start = getelementptr inbounds %struct.fiemap, %struct.fiemap* %6, i32 0, i32 0, !dbg !8937, !ctir !1480
  store i64 %5, i64* %fm_start, align 8, !dbg !8938, !tbaa !8939, !ctir !1484
  %7 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8941, !tbaa !2645
  %fm_flags = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %7, i32 0, i32 2, !dbg !8942, !ctir !1462
  %8 = load i32, i32* %fm_flags, align 8, !dbg !8942, !tbaa !8905, !ctir !70
  %9 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8943, !tbaa !2645
  %fm_flags2 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %9, i32 0, i32 2, !dbg !8944, !ctir !1480
  store i32 %8, i32* %fm_flags2, align 8, !dbg !8945, !tbaa !8946, !ctir !1489
  %10 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8947, !tbaa !2645
  %fm_extent_count = getelementptr inbounds %struct.fiemap, %struct.fiemap* %10, i32 0, i32 4, !dbg !8948, !ctir !1480
  store i32 72, i32* %fm_extent_count, align 8, !dbg !8949, !tbaa !8950, !ctir !1489
  %11 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8951, !tbaa !2645
  %scan_start3 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %11, i32 0, i32 1, !dbg !8952, !ctir !1462
  %12 = load i64, i64* %scan_start3, align 8, !dbg !8952, !tbaa !8894, !ctir !1458
  %sub = sub i64 -1, %12, !dbg !8953
  %13 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8954, !tbaa !2645
  %fm_length = getelementptr inbounds %struct.fiemap, %struct.fiemap* %13, i32 0, i32 1, !dbg !8955, !ctir !1480
  store i64 %sub, i64* %fm_length, align 8, !dbg !8956, !tbaa !8957, !ctir !1484
  %14 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8958, !tbaa !2645
  %fd = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %14, i32 0, i32 0, !dbg !8960, !ctir !1462
  %15 = load i32, i32* %fd, align 8, !dbg !8960, !tbaa !8884, !ctir !7
  %16 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8961, !tbaa !2645
  %call = call i32 (i32, i64, ...) @ioctl(i32 %15, i64 3223348747, %struct.fiemap* %16) #9, !dbg !8962
  %cmp = icmp slt i32 %call, 0, !dbg !8963
  br i1 %cmp, label %if.then, label %if.end7, !dbg !8964

if.then:                                          ; preds = %while.body
  %17 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8965, !tbaa !2645
  %scan_start4 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %17, i32 0, i32 1, !dbg !8968, !ctir !1462
  %18 = load i64, i64* %scan_start4, align 8, !dbg !8968, !tbaa !8894, !ctir !1458
  %cmp5 = icmp eq i64 %18, 0, !dbg !8969
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !8970

if.then6:                                         ; preds = %if.then
  %19 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8971, !tbaa !2645
  %initial_scan_failed = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %19, i32 0, i32 4, !dbg !8972, !ctir !1462
  store i8 1, i8* %initial_scan_failed, align 8, !dbg !8973, !tbaa !8004, !ctir !142
  br label %if.end, !dbg !8971

if.end:                                           ; preds = %if.then6, %if.then
  store i1 false, i1* %retval, align 1, !dbg !8974
  br label %return, !dbg !8974

if.end7:                                          ; preds = %while.body
  %20 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8975, !tbaa !2645
  %fm_mapped_extents = getelementptr inbounds %struct.fiemap, %struct.fiemap* %20, i32 0, i32 3, !dbg !8977, !ctir !1480
  %21 = load i32, i32* %fm_mapped_extents, align 4, !dbg !8977, !tbaa !8978, !ctir !1489
  %cmp8 = icmp eq i32 %21, 0, !dbg !8979
  br i1 %cmp8, label %if.then9, label %if.end12, !dbg !8980

if.then9:                                         ; preds = %if.end7
  %22 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8981, !tbaa !2645
  %hit_final_extent = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %22, i32 0, i32 5, !dbg !8983, !ctir !1462
  store i8 1, i8* %hit_final_extent, align 1, !dbg !8984, !tbaa !7998, !ctir !142
  %23 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8985, !tbaa !2645
  %scan_start10 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %23, i32 0, i32 1, !dbg !8986, !ctir !1462
  %24 = load i64, i64* %scan_start10, align 8, !dbg !8986, !tbaa !8894, !ctir !1458
  %cmp11 = icmp ne i64 %24, 0, !dbg !8987
  store i1 %cmp11, i1* %retval, align 1, !dbg !8988
  br label %return, !dbg !8988

if.end12:                                         ; preds = %if.end7
  %25 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8989, !tbaa !2645
  %ei_count = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %25, i32 0, i32 3, !dbg !8989, !ctir !1462
  %26 = load i64, i64* %ei_count, align 8, !dbg !8989, !tbaa !8024, !ctir !55
  %27 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8989, !tbaa !2645
  %fm_mapped_extents13 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %27, i32 0, i32 3, !dbg !8989, !ctir !1480
  %28 = load i32, i32* %fm_mapped_extents13, align 4, !dbg !8989, !tbaa !8978, !ctir !1489
  %conv = zext i32 %28 to i64, !dbg !8989
  %sub14 = sub i64 -1, %conv, !dbg !8989
  %cmp15 = icmp ule i64 %26, %sub14, !dbg !8989
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !8992

if.then17:                                        ; preds = %if.end12
  br label %if.end18, !dbg !8992

if.else:                                          ; preds = %if.end12
  call void @__assert_fail(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.188, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.189, i64 0, i64 0), i32 126, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__.extent_scan_read, i64 0, i64 0)) #13, !dbg !8989
  unreachable, !dbg !8989

if.end18:                                         ; preds = %if.then17
  %29 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !8993, !tbaa !2645
  %fm_mapped_extents19 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %29, i32 0, i32 3, !dbg !8994, !ctir !1480
  %30 = load i32, i32* %fm_mapped_extents19, align 4, !dbg !8994, !tbaa !8978, !ctir !1489
  %conv20 = zext i32 %30 to i64, !dbg !8993
  %31 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !8995, !tbaa !2645
  %ei_count21 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %31, i32 0, i32 3, !dbg !8996, !ctir !1462
  %32 = load i64, i64* %ei_count21, align 8, !dbg !8997, !tbaa !8024, !ctir !55
  %add = add i64 %32, %conv20, !dbg !8997
  store i64 %add, i64* %ei_count21, align 8, !dbg !8997, !tbaa !8024, !ctir !55
  call void @llvm.dbg.declare(metadata i64* %prev_idx, metadata !8998, metadata !DIExpression()), !dbg !9000
  %33 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9001, !tbaa !2645
  %34 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9002, !tbaa !2645
  %ext_info22 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %34, i32 0, i32 6, !dbg !9003, !ctir !1462
  %35 = load %struct.extent_info*, %struct.extent_info** %ext_info22, align 8, !dbg !9003, !tbaa !8043, !ctir !1471
  %sub.ptr.lhs.cast = ptrtoint %struct.extent_info* %33 to i64, !dbg !9004
  %sub.ptr.rhs.cast = ptrtoint %struct.extent_info* %35 to i64, !dbg !9004
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9004
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 24, !dbg !9004
  store i64 %sub.ptr.div, i64* %prev_idx, align 8, !dbg !9000, !tbaa !3285
  %36 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9005, !tbaa !2645
  %ext_info23 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %36, i32 0, i32 6, !dbg !9006, !ctir !1462
  %37 = load %struct.extent_info*, %struct.extent_info** %ext_info23, align 8, !dbg !9006, !tbaa !8043, !ctir !1471
  %38 = bitcast %struct.extent_info* %37 to i8*, !dbg !9005
  %39 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9007, !tbaa !2645
  %ei_count24 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %39, i32 0, i32 3, !dbg !9008, !ctir !1462
  %40 = load i64, i64* %ei_count24, align 8, !dbg !9008, !tbaa !8024, !ctir !55
  %call25 = call i8* @xnrealloc(i8* %38, i64 %40, i64 24), !dbg !9009
  %41 = bitcast i8* %call25 to %struct.extent_info*, !dbg !9009
  %42 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9010, !tbaa !2645
  %ext_info26 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %42, i32 0, i32 6, !dbg !9011, !ctir !1462
  store %struct.extent_info* %41, %struct.extent_info** %ext_info26, align 8, !dbg !9012, !tbaa !8043, !ctir !1471
  %43 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9013, !tbaa !2645
  %ext_info27 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %43, i32 0, i32 6, !dbg !9014, !ctir !1462
  %44 = load %struct.extent_info*, %struct.extent_info** %ext_info27, align 8, !dbg !9014, !tbaa !8043, !ctir !1471
  %45 = load i64, i64* %prev_idx, align 8, !dbg !9015, !tbaa !3285
  %add.ptr = getelementptr inbounds %struct.extent_info, %struct.extent_info* %44, i64 %45, !dbg !9016
  store %struct.extent_info* %add.ptr, %struct.extent_info** %last_ei, align 8, !dbg !9017, !tbaa !2645
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9018, metadata !DIExpression()), !dbg !9019
  store i32 0, i32* %i, align 4, !dbg !9019, !tbaa !2632
  store i32 0, i32* %i, align 4, !dbg !9020, !tbaa !2632
  br label %for.cond, !dbg !9022

for.cond:                                         ; preds = %for.inc, %if.end18
  %46 = load i32, i32* %i, align 4, !dbg !9023, !tbaa !2632
  %47 = load %struct.fiemap*, %struct.fiemap** %fiemap, align 8, !dbg !9025, !tbaa !2645
  %fm_mapped_extents28 = getelementptr inbounds %struct.fiemap, %struct.fiemap* %47, i32 0, i32 3, !dbg !9026, !ctir !1480
  %48 = load i32, i32* %fm_mapped_extents28, align 4, !dbg !9026, !tbaa !8978, !ctir !1489
  %cmp29 = icmp ult i32 %46, %48, !dbg !9027
  br i1 %cmp29, label %for.body, label %for.end, !dbg !9028

for.body:                                         ; preds = %for.cond
  %49 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9029, !tbaa !2645
  %50 = load i32, i32* %i, align 4, !dbg !9029, !tbaa !2632
  %idxprom = zext i32 %50 to i64, !dbg !9029
  %arrayidx31 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %49, i64 %idxprom, !dbg !9029, !ctir !1508
  %fe_logical = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx31, i32 0, i32 0, !dbg !9029, !ctir !1496
  %51 = load i64, i64* %fe_logical, align 8, !dbg !9029, !tbaa !9033, !ctir !1484
  %52 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9029, !tbaa !2645
  %53 = load i32, i32* %i, align 4, !dbg !9029, !tbaa !2632
  %idxprom32 = zext i32 %53 to i64, !dbg !9029
  %arrayidx33 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %52, i64 %idxprom32, !dbg !9029, !ctir !1508
  %fe_length = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx33, i32 0, i32 2, !dbg !9029, !ctir !1496
  %54 = load i64, i64* %fe_length, align 8, !dbg !9029, !tbaa !9035, !ctir !1484
  %sub34 = sub i64 9223372036854775807, %54, !dbg !9029
  %cmp35 = icmp ule i64 %51, %sub34, !dbg !9029
  br i1 %cmp35, label %if.then37, label %if.else38, !dbg !9036

if.then37:                                        ; preds = %for.body
  br label %if.end39, !dbg !9036

if.else38:                                        ; preds = %for.body
  call void @__assert_fail(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.2.190, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1.189, i64 0, i64 0), i32 141, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @__PRETTY_FUNCTION__.extent_scan_read, i64 0, i64 0)) #13, !dbg !9029
  unreachable, !dbg !9029

if.end39:                                         ; preds = %if.then37
  %55 = load i32, i32* %si, align 4, !dbg !9037, !tbaa !2632
  %tobool = icmp ne i32 %55, 0, !dbg !9037
  br i1 %tobool, label %land.lhs.true, label %if.else61, !dbg !9039

land.lhs.true:                                    ; preds = %if.end39
  %56 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9040, !tbaa !2645
  %ext_flags = getelementptr inbounds %struct.extent_info, %struct.extent_info* %56, i32 0, i32 2, !dbg !9041, !ctir !1472
  %57 = load i32, i32* %ext_flags, align 8, !dbg !9041, !tbaa !9042, !ctir !70
  %58 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9043, !tbaa !2645
  %59 = load i32, i32* %i, align 4, !dbg !9044, !tbaa !2632
  %idxprom40 = zext i32 %59 to i64, !dbg !9043
  %arrayidx41 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %58, i64 %idxprom40, !dbg !9043, !ctir !1508
  %fe_flags = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx41, i32 0, i32 4, !dbg !9045, !ctir !1496
  %60 = load i32, i32* %fe_flags, align 8, !dbg !9045, !tbaa !9046, !ctir !1489
  %and = and i32 %60, -2, !dbg !9047
  %cmp42 = icmp eq i32 %57, %and, !dbg !9048
  br i1 %cmp42, label %land.lhs.true44, label %if.else61, !dbg !9049

land.lhs.true44:                                  ; preds = %land.lhs.true
  %61 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9050, !tbaa !2645
  %ext_logical = getelementptr inbounds %struct.extent_info, %struct.extent_info* %61, i32 0, i32 0, !dbg !9051, !ctir !1472
  %62 = load i64, i64* %ext_logical, align 8, !dbg !9051, !tbaa !8047, !ctir !1458
  %63 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9052, !tbaa !2645
  %ext_length = getelementptr inbounds %struct.extent_info, %struct.extent_info* %63, i32 0, i32 1, !dbg !9053, !ctir !1472
  %64 = load i64, i64* %ext_length, align 8, !dbg !9053, !tbaa !8054, !ctir !1458
  %add45 = add nsw i64 %62, %64, !dbg !9054
  %65 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9055, !tbaa !2645
  %66 = load i32, i32* %i, align 4, !dbg !9056, !tbaa !2632
  %idxprom46 = zext i32 %66 to i64, !dbg !9055
  %arrayidx47 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %65, i64 %idxprom46, !dbg !9055, !ctir !1508
  %fe_logical48 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx47, i32 0, i32 0, !dbg !9057, !ctir !1496
  %67 = load i64, i64* %fe_logical48, align 8, !dbg !9057, !tbaa !9033, !ctir !1484
  %cmp49 = icmp eq i64 %add45, %67, !dbg !9058
  br i1 %cmp49, label %if.then51, label %if.else61, !dbg !9059

if.then51:                                        ; preds = %land.lhs.true44
  %68 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9060, !tbaa !2645
  %69 = load i32, i32* %i, align 4, !dbg !9062, !tbaa !2632
  %idxprom52 = zext i32 %69 to i64, !dbg !9060
  %arrayidx53 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %68, i64 %idxprom52, !dbg !9060, !ctir !1508
  %fe_length54 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx53, i32 0, i32 2, !dbg !9063, !ctir !1496
  %70 = load i64, i64* %fe_length54, align 8, !dbg !9063, !tbaa !9035, !ctir !1484
  %71 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9064, !tbaa !2645
  %ext_length55 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %71, i32 0, i32 1, !dbg !9065, !ctir !1472
  %72 = load i64, i64* %ext_length55, align 8, !dbg !9066, !tbaa !8054, !ctir !1458
  %add56 = add i64 %72, %70, !dbg !9066
  store i64 %add56, i64* %ext_length55, align 8, !dbg !9066, !tbaa !8054, !ctir !1458
  %73 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9067, !tbaa !2645
  %74 = load i32, i32* %i, align 4, !dbg !9068, !tbaa !2632
  %idxprom57 = zext i32 %74 to i64, !dbg !9067
  %arrayidx58 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %73, i64 %idxprom57, !dbg !9067, !ctir !1508
  %fe_flags59 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx58, i32 0, i32 4, !dbg !9069, !ctir !1496
  %75 = load i32, i32* %fe_flags59, align 8, !dbg !9069, !tbaa !9046, !ctir !1489
  %76 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9070, !tbaa !2645
  %ext_flags60 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %76, i32 0, i32 2, !dbg !9071, !ctir !1472
  store i32 %75, i32* %ext_flags60, align 8, !dbg !9072, !tbaa !9042, !ctir !70
  br label %if.end131, !dbg !9073

if.else61:                                        ; preds = %land.lhs.true44, %land.lhs.true, %if.end39
  %77 = load i32, i32* %si, align 4, !dbg !9074, !tbaa !2632
  %cmp62 = icmp eq i32 %77, 0, !dbg !9076
  br i1 %cmp62, label %land.lhs.true64, label %lor.lhs.false, !dbg !9077

land.lhs.true64:                                  ; preds = %if.else61
  %78 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9078, !tbaa !2645
  %scan_start65 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %78, i32 0, i32 1, !dbg !9079, !ctir !1462
  %79 = load i64, i64* %scan_start65, align 8, !dbg !9079, !tbaa !8894, !ctir !1458
  %80 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9080, !tbaa !2645
  %81 = load i32, i32* %i, align 4, !dbg !9081, !tbaa !2632
  %idxprom66 = zext i32 %81 to i64, !dbg !9080
  %arrayidx67 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %80, i64 %idxprom66, !dbg !9080, !ctir !1508
  %fe_logical68 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx67, i32 0, i32 0, !dbg !9082, !ctir !1496
  %82 = load i64, i64* %fe_logical68, align 8, !dbg !9082, !tbaa !9033, !ctir !1484
  %cmp69 = icmp ugt i64 %79, %82, !dbg !9083
  br i1 %cmp69, label %if.then81, label %lor.lhs.false, !dbg !9084

lor.lhs.false:                                    ; preds = %land.lhs.true64, %if.else61
  %83 = load i32, i32* %si, align 4, !dbg !9085, !tbaa !2632
  %tobool71 = icmp ne i32 %83, 0, !dbg !9085
  br i1 %tobool71, label %land.lhs.true72, label %if.else115, !dbg !9086

land.lhs.true72:                                  ; preds = %lor.lhs.false
  %84 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9087, !tbaa !2645
  %ext_logical73 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %84, i32 0, i32 0, !dbg !9088, !ctir !1472
  %85 = load i64, i64* %ext_logical73, align 8, !dbg !9088, !tbaa !8047, !ctir !1458
  %86 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9089, !tbaa !2645
  %ext_length74 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %86, i32 0, i32 1, !dbg !9090, !ctir !1472
  %87 = load i64, i64* %ext_length74, align 8, !dbg !9090, !tbaa !8054, !ctir !1458
  %add75 = add nsw i64 %85, %87, !dbg !9091
  %88 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9092, !tbaa !2645
  %89 = load i32, i32* %i, align 4, !dbg !9093, !tbaa !2632
  %idxprom76 = zext i32 %89 to i64, !dbg !9092
  %arrayidx77 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %88, i64 %idxprom76, !dbg !9092, !ctir !1508
  %fe_logical78 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx77, i32 0, i32 0, !dbg !9094, !ctir !1496
  %90 = load i64, i64* %fe_logical78, align 8, !dbg !9094, !tbaa !9033, !ctir !1484
  %cmp79 = icmp ugt i64 %add75, %90, !dbg !9095
  br i1 %cmp79, label %if.then81, label %if.else115, !dbg !9096

if.then81:                                        ; preds = %land.lhs.true72, %land.lhs.true64
  call void @llvm.dbg.declare(metadata i64* %new_logical, metadata !9097, metadata !DIExpression()), !dbg !9099
  call void @llvm.dbg.declare(metadata i64* %length_adjust, metadata !9100, metadata !DIExpression()), !dbg !9101
  %91 = load i32, i32* %si, align 4, !dbg !9102, !tbaa !2632
  %cmp82 = icmp eq i32 %91, 0, !dbg !9104
  br i1 %cmp82, label %if.then84, label %if.else86, !dbg !9105

if.then84:                                        ; preds = %if.then81
  %92 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9106, !tbaa !2645
  %scan_start85 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %92, i32 0, i32 1, !dbg !9107, !ctir !1462
  %93 = load i64, i64* %scan_start85, align 8, !dbg !9107, !tbaa !8894, !ctir !1458
  store i64 %93, i64* %new_logical, align 8, !dbg !9108, !tbaa !3285
  br label %if.end90, !dbg !9109

if.else86:                                        ; preds = %if.then81
  %94 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9110, !tbaa !2645
  %ext_logical87 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %94, i32 0, i32 0, !dbg !9112, !ctir !1472
  %95 = load i64, i64* %ext_logical87, align 8, !dbg !9112, !tbaa !8047, !ctir !1458
  %96 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9113, !tbaa !2645
  %ext_length88 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %96, i32 0, i32 1, !dbg !9114, !ctir !1472
  %97 = load i64, i64* %ext_length88, align 8, !dbg !9114, !tbaa !8054, !ctir !1458
  %add89 = add nsw i64 %95, %97, !dbg !9115
  store i64 %add89, i64* %new_logical, align 8, !dbg !9116, !tbaa !3285
  br label %if.end90

if.end90:                                         ; preds = %if.else86, %if.then84
  %98 = load i64, i64* %new_logical, align 8, !dbg !9117, !tbaa !3285
  %99 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9118, !tbaa !2645
  %100 = load i32, i32* %i, align 4, !dbg !9119, !tbaa !2632
  %idxprom91 = zext i32 %100 to i64, !dbg !9118
  %arrayidx92 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %99, i64 %idxprom91, !dbg !9118, !ctir !1508
  %fe_logical93 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx92, i32 0, i32 0, !dbg !9120, !ctir !1496
  %101 = load i64, i64* %fe_logical93, align 8, !dbg !9120, !tbaa !9033, !ctir !1484
  %sub94 = sub i64 %98, %101, !dbg !9121
  store i64 %sub94, i64* %length_adjust, align 8, !dbg !9122, !tbaa !3285
  %102 = load i64, i64* %length_adjust, align 8, !dbg !9123, !tbaa !3285
  %103 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9125, !tbaa !2645
  %104 = load i32, i32* %i, align 4, !dbg !9126, !tbaa !2632
  %idxprom95 = zext i32 %104 to i64, !dbg !9125
  %arrayidx96 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %103, i64 %idxprom95, !dbg !9125, !ctir !1508
  %fe_length97 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx96, i32 0, i32 2, !dbg !9127, !ctir !1496
  %105 = load i64, i64* %fe_length97, align 8, !dbg !9127, !tbaa !9035, !ctir !1484
  %cmp98 = icmp ult i64 %102, %105, !dbg !9128
  br i1 %cmp98, label %if.then100, label %if.end107, !dbg !9129

if.then100:                                       ; preds = %if.end90
  %106 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9130, !tbaa !2645
  %scan_start101 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %106, i32 0, i32 1, !dbg !9133, !ctir !1462
  %107 = load i64, i64* %scan_start101, align 8, !dbg !9133, !tbaa !8894, !ctir !1458
  %cmp102 = icmp eq i64 %107, 0, !dbg !9134
  br i1 %cmp102, label %if.then104, label %if.end106, !dbg !9135

if.then104:                                       ; preds = %if.then100
  %108 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9136, !tbaa !2645
  %initial_scan_failed105 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %108, i32 0, i32 4, !dbg !9137, !ctir !1462
  store i8 1, i8* %initial_scan_failed105, align 8, !dbg !9138, !tbaa !8004, !ctir !142
  br label %if.end106, !dbg !9136

if.end106:                                        ; preds = %if.then104, %if.then100
  store i1 false, i1* %retval, align 1, !dbg !9139
  br label %return, !dbg !9139

if.end107:                                        ; preds = %if.end90
  %109 = load i64, i64* %new_logical, align 8, !dbg !9140, !tbaa !3285
  %110 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9141, !tbaa !2645
  %111 = load i32, i32* %i, align 4, !dbg !9142, !tbaa !2632
  %idxprom108 = zext i32 %111 to i64, !dbg !9141
  %arrayidx109 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %110, i64 %idxprom108, !dbg !9141, !ctir !1508
  %fe_logical110 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx109, i32 0, i32 0, !dbg !9143, !ctir !1496
  store i64 %109, i64* %fe_logical110, align 8, !dbg !9144, !tbaa !9033, !ctir !1484
  %112 = load i64, i64* %length_adjust, align 8, !dbg !9145, !tbaa !3285
  %113 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9146, !tbaa !2645
  %114 = load i32, i32* %i, align 4, !dbg !9147, !tbaa !2632
  %idxprom111 = zext i32 %114 to i64, !dbg !9146
  %arrayidx112 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %113, i64 %idxprom111, !dbg !9146, !ctir !1508
  %fe_length113 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx112, i32 0, i32 2, !dbg !9148, !ctir !1496
  %115 = load i64, i64* %fe_length113, align 8, !dbg !9149, !tbaa !9035, !ctir !1484
  %sub114 = sub i64 %115, %112, !dbg !9149
  store i64 %sub114, i64* %fe_length113, align 8, !dbg !9149, !tbaa !9035, !ctir !1484
  %116 = load i32, i32* %i, align 4, !dbg !9150, !tbaa !2632
  %dec = add i32 %116, -1, !dbg !9150
  store i32 %dec, i32* %i, align 4, !dbg !9150, !tbaa !2632
  br label %for.inc, !dbg !9151

if.else115:                                       ; preds = %land.lhs.true72, %lor.lhs.false
  %117 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9152, !tbaa !2645
  %ext_info116 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %117, i32 0, i32 6, !dbg !9154, !ctir !1462
  %118 = load %struct.extent_info*, %struct.extent_info** %ext_info116, align 8, !dbg !9154, !tbaa !8043, !ctir !1471
  %119 = load i32, i32* %si, align 4, !dbg !9155, !tbaa !2632
  %idx.ext = zext i32 %119 to i64, !dbg !9156
  %add.ptr117 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %118, i64 %idx.ext, !dbg !9156
  store %struct.extent_info* %add.ptr117, %struct.extent_info** %last_ei, align 8, !dbg !9157, !tbaa !2645
  %120 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9158, !tbaa !2645
  %121 = load i32, i32* %i, align 4, !dbg !9159, !tbaa !2632
  %idxprom118 = zext i32 %121 to i64, !dbg !9158
  %arrayidx119 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %120, i64 %idxprom118, !dbg !9158, !ctir !1508
  %fe_logical120 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx119, i32 0, i32 0, !dbg !9160, !ctir !1496
  %122 = load i64, i64* %fe_logical120, align 8, !dbg !9160, !tbaa !9033, !ctir !1484
  %123 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9161, !tbaa !2645
  %ext_logical121 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %123, i32 0, i32 0, !dbg !9162, !ctir !1472
  store i64 %122, i64* %ext_logical121, align 8, !dbg !9163, !tbaa !8047, !ctir !1458
  %124 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9164, !tbaa !2645
  %125 = load i32, i32* %i, align 4, !dbg !9165, !tbaa !2632
  %idxprom122 = zext i32 %125 to i64, !dbg !9164
  %arrayidx123 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %124, i64 %idxprom122, !dbg !9164, !ctir !1508
  %fe_length124 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx123, i32 0, i32 2, !dbg !9166, !ctir !1496
  %126 = load i64, i64* %fe_length124, align 8, !dbg !9166, !tbaa !9035, !ctir !1484
  %127 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9167, !tbaa !2645
  %ext_length125 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %127, i32 0, i32 1, !dbg !9168, !ctir !1472
  store i64 %126, i64* %ext_length125, align 8, !dbg !9169, !tbaa !8054, !ctir !1458
  %128 = load %struct.fiemap_extent*, %struct.fiemap_extent** %fm_extents, align 8, !dbg !9170, !tbaa !2645
  %129 = load i32, i32* %i, align 4, !dbg !9171, !tbaa !2632
  %idxprom126 = zext i32 %129 to i64, !dbg !9170
  %arrayidx127 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %128, i64 %idxprom126, !dbg !9170, !ctir !1508
  %fe_flags128 = getelementptr inbounds %struct.fiemap_extent, %struct.fiemap_extent* %arrayidx127, i32 0, i32 4, !dbg !9172, !ctir !1496
  %130 = load i32, i32* %fe_flags128, align 8, !dbg !9172, !tbaa !9046, !ctir !1489
  %131 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9173, !tbaa !2645
  %ext_flags129 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %131, i32 0, i32 2, !dbg !9174, !ctir !1472
  store i32 %130, i32* %ext_flags129, align 8, !dbg !9175, !tbaa !9042, !ctir !70
  %132 = load i32, i32* %si, align 4, !dbg !9176, !tbaa !2632
  %inc = add i32 %132, 1, !dbg !9176
  store i32 %inc, i32* %si, align 4, !dbg !9176, !tbaa !2632
  br label %if.end130

if.end130:                                        ; preds = %if.else115
  br label %if.end131

if.end131:                                        ; preds = %if.end130, %if.then51
  br label %for.inc, !dbg !9177

for.inc:                                          ; preds = %if.end131, %if.end107
  %133 = load i32, i32* %i, align 4, !dbg !9178, !tbaa !2632
  %inc132 = add i32 %133, 1, !dbg !9178
  store i32 %inc132, i32* %i, align 4, !dbg !9178, !tbaa !2632
  br label %for.cond, !dbg !9179, !llvm.loop !9180

for.end:                                          ; preds = %for.cond
  %134 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9182, !tbaa !2645
  %ext_flags133 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %134, i32 0, i32 2, !dbg !9184, !ctir !1472
  %135 = load i32, i32* %ext_flags133, align 8, !dbg !9184, !tbaa !9042, !ctir !70
  %and134 = and i32 %135, 1, !dbg !9185
  %tobool135 = icmp ne i32 %and134, 0, !dbg !9185
  br i1 %tobool135, label %if.then136, label %if.end138, !dbg !9186

if.then136:                                       ; preds = %for.end
  %136 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9187, !tbaa !2645
  %hit_final_extent137 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %136, i32 0, i32 5, !dbg !9188, !ctir !1462
  store i8 1, i8* %hit_final_extent137, align 1, !dbg !9189, !tbaa !7998, !ctir !142
  br label %if.end138, !dbg !9187

if.end138:                                        ; preds = %if.then136, %for.end
  %137 = load i32, i32* %si, align 4, !dbg !9190, !tbaa !2632
  %cmp139 = icmp ugt i32 %137, 72, !dbg !9192
  br i1 %cmp139, label %land.lhs.true141, label %if.end150, !dbg !9193

land.lhs.true141:                                 ; preds = %if.end138
  %138 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9194, !tbaa !2645
  %hit_final_extent142 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %138, i32 0, i32 5, !dbg !9195, !ctir !1462
  %139 = load i8, i8* %hit_final_extent142, align 1, !dbg !9195, !tbaa !7998
  %tobool143 = trunc i8 %139 to i1, !dbg !9195, !ctir !142
  br i1 %tobool143, label %if.end150, label %if.then144, !dbg !9196

if.then144:                                       ; preds = %land.lhs.true141
  %140 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9197, !tbaa !2645
  %ext_info145 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %140, i32 0, i32 6, !dbg !9198, !ctir !1462
  %141 = load %struct.extent_info*, %struct.extent_info** %ext_info145, align 8, !dbg !9198, !tbaa !8043, !ctir !1471
  %142 = load i32, i32* %si, align 4, !dbg !9199, !tbaa !2632
  %dec146 = add i32 %142, -1, !dbg !9199
  store i32 %dec146, i32* %si, align 4, !dbg !9199, !tbaa !2632
  %idx.ext147 = zext i32 %dec146 to i64, !dbg !9200
  %add.ptr148 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %141, i64 %idx.ext147, !dbg !9200
  %add.ptr149 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %add.ptr148, i64 -1, !dbg !9201
  store %struct.extent_info* %add.ptr149, %struct.extent_info** %last_ei, align 8, !dbg !9202, !tbaa !2645
  br label %if.end150, !dbg !9203

if.end150:                                        ; preds = %if.then144, %land.lhs.true141, %if.end138
  %143 = load i32, i32* %si, align 4, !dbg !9204, !tbaa !2632
  %conv151 = zext i32 %143 to i64, !dbg !9204
  %144 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9205, !tbaa !2645
  %ei_count152 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %144, i32 0, i32 3, !dbg !9206, !ctir !1462
  store i64 %conv151, i64* %ei_count152, align 8, !dbg !9207, !tbaa !8024, !ctir !55
  %145 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9208, !tbaa !2645
  %hit_final_extent153 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %145, i32 0, i32 5, !dbg !9210, !ctir !1462
  %146 = load i8, i8* %hit_final_extent153, align 1, !dbg !9210, !tbaa !7998
  %tobool154 = trunc i8 %146 to i1, !dbg !9210, !ctir !142
  br i1 %tobool154, label %if.then155, label %if.else156, !dbg !9211

if.then155:                                       ; preds = %if.end150
  br label %while.end, !dbg !9212

if.else156:                                       ; preds = %if.end150
  %147 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9213, !tbaa !2645
  %ext_logical157 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %147, i32 0, i32 0, !dbg !9214, !ctir !1472
  %148 = load i64, i64* %ext_logical157, align 8, !dbg !9214, !tbaa !8047, !ctir !1458
  %149 = load %struct.extent_info*, %struct.extent_info** %last_ei, align 8, !dbg !9215, !tbaa !2645
  %ext_length158 = getelementptr inbounds %struct.extent_info, %struct.extent_info* %149, i32 0, i32 1, !dbg !9216, !ctir !1472
  %150 = load i64, i64* %ext_length158, align 8, !dbg !9216, !tbaa !8054, !ctir !1458
  %add159 = add nsw i64 %148, %150, !dbg !9217
  %151 = load %struct.extent_scan*, %struct.extent_scan** %scan.addr, align 8, !dbg !9218, !tbaa !2645
  %scan_start160 = getelementptr inbounds %struct.extent_scan, %struct.extent_scan* %151, i32 0, i32 1, !dbg !9219, !ctir !1462
  store i64 %add159, i64* %scan_start160, align 8, !dbg !9220, !tbaa !8894, !ctir !1458
  br label %if.end161

if.end161:                                        ; preds = %if.else156
  %152 = load i32, i32* %si, align 4, !dbg !9221, !tbaa !2632
  %cmp162 = icmp uge i32 %152, 72, !dbg !9223
  br i1 %cmp162, label %if.then164, label %if.end165, !dbg !9224

if.then164:                                       ; preds = %if.end161
  br label %while.end, !dbg !9225

if.end165:                                        ; preds = %if.end161
  br label %while.body, !dbg !8922, !llvm.loop !9226

while.end:                                        ; preds = %if.then164, %if.then155
  store i1 true, i1* %retval, align 1, !dbg !9228
  br label %return, !dbg !9228

return:                                           ; preds = %while.end, %if.end106, %if.then9, %if.end
  %153 = load i1, i1* %retval, align 1, !dbg !9229
  ret i1 %153, !dbg !9229
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @force_linkat(i32 %srcdir, i8* %srcname, i32 %dstdir, i8* %dstname, i32 %flags, i1 zeroext %force, i32 %linkat_errno) #4 !dbg !9230 !ctir !643 {
entry:
  %retval = alloca i32, align 4
  %srcdir.addr = alloca i32, align 4
  %srcname.addr = alloca i8*, align 8
  %dstdir.addr = alloca i32, align 4
  %dstname.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %force.addr = alloca i8, align 1
  %linkat_errno.addr = alloca i32, align 4
  %buf = alloca [256 x i8], align 16, !ctir !645
  %dsttmp = alloca i8*, align 8, !ctir !9
  %arg = alloca %struct.link_arg, align 8, !ctir !659
  %err = alloca i32, align 4, !ctir !7
  store i32 %srcdir, i32* %srcdir.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %srcdir.addr, metadata !9231, metadata !DIExpression()), !dbg !9232
  store i8* %srcname, i8** %srcname.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %srcname.addr, metadata !9233, metadata !DIExpression()), !dbg !9234
  store i32 %dstdir, i32* %dstdir.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %dstdir.addr, metadata !9235, metadata !DIExpression()), !dbg !9236
  store i8* %dstname, i8** %dstname.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dstname.addr, metadata !9237, metadata !DIExpression()), !dbg !9238
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !9239, metadata !DIExpression()), !dbg !9240
  %frombool = zext i1 %force to i8
  store i8 %frombool, i8* %force.addr, align 1, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %force.addr, metadata !9241, metadata !DIExpression()), !dbg !9242
  store i32 %linkat_errno, i32* %linkat_errno.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %linkat_errno.addr, metadata !9243, metadata !DIExpression()), !dbg !9244
  %0 = load i32, i32* %linkat_errno.addr, align 4, !dbg !9245, !tbaa !2632
  %cmp = icmp slt i32 %0, 0, !dbg !9247
  br i1 %cmp, label %if.then, label %if.end, !dbg !9248

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %srcdir.addr, align 4, !dbg !9249, !tbaa !2632
  %2 = load i8*, i8** %srcname.addr, align 8, !dbg !9250, !tbaa !2645
  %3 = load i32, i32* %dstdir.addr, align 4, !dbg !9251, !tbaa !2632
  %4 = load i8*, i8** %dstname.addr, align 8, !dbg !9252, !tbaa !2645
  %5 = load i32, i32* %flags.addr, align 4, !dbg !9253, !tbaa !2632
  %call = call i32 @linkat(i32 %1, i8* %2, i32 %3, i8* %4, i32 %5) #9, !dbg !9254
  %cmp1 = icmp eq i32 %call, 0, !dbg !9255
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !9254

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !9254

cond.false:                                       ; preds = %if.then
  %call2 = call i32* @__errno_location() #16, !dbg !9256
  %6 = load i32, i32* %call2, align 4, !dbg !9256, !tbaa !2632, !ctir !7
  br label %cond.end, !dbg !9254

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %6, %cond.false ], !dbg !9254
  store i32 %cond, i32* %linkat_errno.addr, align 4, !dbg !9257, !tbaa !2632
  br label %if.end, !dbg !9258

if.end:                                           ; preds = %cond.end, %entry
  %7 = load i8, i8* %force.addr, align 1, !dbg !9259, !tbaa !2739
  %tobool = trunc i8 %7 to i1, !dbg !9259
  br i1 %tobool, label %lor.lhs.false, label %if.then4, !dbg !9261

lor.lhs.false:                                    ; preds = %if.end
  %8 = load i32, i32* %linkat_errno.addr, align 4, !dbg !9262, !tbaa !2632
  %cmp3 = icmp ne i32 %8, 17, !dbg !9263
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !9264

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %9 = load i32, i32* %linkat_errno.addr, align 4, !dbg !9265, !tbaa !2632
  store i32 %9, i32* %retval, align 4, !dbg !9266
  br label %return, !dbg !9266

if.end5:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata [256 x i8]* %buf, metadata !9267, metadata !DIExpression()), !dbg !9268
  call void @llvm.dbg.declare(metadata i8** %dsttmp, metadata !9269, metadata !DIExpression()), !dbg !9270
  %10 = load i8*, i8** %dstname.addr, align 8, !dbg !9271, !tbaa !2645
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !9272
  %call6 = call i8* @samedir_template(i8* %10, i8* %arraydecay), !dbg !9273
  store i8* %call6, i8** %dsttmp, align 8, !dbg !9270, !tbaa !2645
  %11 = load i8*, i8** %dsttmp, align 8, !dbg !9274, !tbaa !2645
  %tobool7 = icmp ne i8* %11, null, !dbg !9274
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !9276

if.then8:                                         ; preds = %if.end5
  %call9 = call i32* @__errno_location() #16, !dbg !9277
  %12 = load i32, i32* %call9, align 4, !dbg !9277, !tbaa !2632, !ctir !7
  store i32 %12, i32* %retval, align 4, !dbg !9278
  br label %return, !dbg !9278

if.end10:                                         ; preds = %if.end5
  call void @llvm.dbg.declare(metadata %struct.link_arg* %arg, metadata !9279, metadata !DIExpression()), !dbg !9280
  %srcdir11 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 0, !dbg !9281
  %13 = load i32, i32* %srcdir.addr, align 4, !dbg !9282, !tbaa !2632
  store i32 %13, i32* %srcdir11, align 8, !dbg !9281, !tbaa !9283
  %srcname12 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 1, !dbg !9281
  %14 = load i8*, i8** %srcname.addr, align 8, !dbg !9285, !tbaa !2645
  store i8* %14, i8** %srcname12, align 8, !dbg !9281, !tbaa !9286
  %dstdir13 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 2, !dbg !9281
  %15 = load i32, i32* %dstdir.addr, align 4, !dbg !9287, !tbaa !2632
  store i32 %15, i32* %dstdir13, align 8, !dbg !9281, !tbaa !9288
  %flags14 = getelementptr inbounds %struct.link_arg, %struct.link_arg* %arg, i32 0, i32 3, !dbg !9281
  %16 = load i32, i32* %flags.addr, align 4, !dbg !9289, !tbaa !2632
  store i32 %16, i32* %flags14, align 4, !dbg !9281, !tbaa !9290
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9291, metadata !DIExpression()), !dbg !9292
  %17 = load i8*, i8** %dsttmp, align 8, !dbg !9293, !tbaa !2645
  %18 = bitcast %struct.link_arg* %arg to i8*, !dbg !9295
  %call15 = call i32 @try_tempname_len(i8* %17, i32 0, i8* %18, i32 (i8*, i8*)* @try_link, i64 6), !dbg !9296
  %cmp16 = icmp ne i32 %call15, 0, !dbg !9297
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !9298

if.then17:                                        ; preds = %if.end10
  %call18 = call i32* @__errno_location() #16, !dbg !9299
  %19 = load i32, i32* %call18, align 4, !dbg !9299, !tbaa !2632, !ctir !7
  store i32 %19, i32* %err, align 4, !dbg !9300, !tbaa !2632
  br label %if.end27, !dbg !9301

if.else:                                          ; preds = %if.end10
  %20 = load i32, i32* %dstdir.addr, align 4, !dbg !9302, !tbaa !2632
  %21 = load i8*, i8** %dsttmp, align 8, !dbg !9304, !tbaa !2645
  %22 = load i32, i32* %dstdir.addr, align 4, !dbg !9305, !tbaa !2632
  %23 = load i8*, i8** %dstname.addr, align 8, !dbg !9306, !tbaa !2645
  %call19 = call i32 @renameat(i32 %20, i8* %21, i32 %22, i8* %23) #9, !dbg !9307
  %cmp20 = icmp eq i32 %call19, 0, !dbg !9308
  br i1 %cmp20, label %cond.true21, label %cond.false22, !dbg !9307

cond.true21:                                      ; preds = %if.else
  br label %cond.end24, !dbg !9307

cond.false22:                                     ; preds = %if.else
  %call23 = call i32* @__errno_location() #16, !dbg !9309
  %24 = load i32, i32* %call23, align 4, !dbg !9309, !tbaa !2632, !ctir !7
  br label %cond.end24, !dbg !9307

cond.end24:                                       ; preds = %cond.false22, %cond.true21
  %cond25 = phi i32 [ -1, %cond.true21 ], [ %24, %cond.false22 ], !dbg !9307
  store i32 %cond25, i32* %err, align 4, !dbg !9310, !tbaa !2632
  %25 = load i32, i32* %dstdir.addr, align 4, !dbg !9311, !tbaa !2632
  %26 = load i8*, i8** %dsttmp, align 8, !dbg !9312, !tbaa !2645
  %call26 = call i32 @unlinkat(i32 %25, i8* %26, i32 0) #9, !dbg !9313
  br label %if.end27

if.end27:                                         ; preds = %cond.end24, %if.then17
  %27 = load i8*, i8** %dsttmp, align 8, !dbg !9314, !tbaa !2645
  %arraydecay28 = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !9316
  %cmp29 = icmp ne i8* %27, %arraydecay28, !dbg !9317
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !9318

if.then30:                                        ; preds = %if.end27
  %28 = load i8*, i8** %dsttmp, align 8, !dbg !9319, !tbaa !2645
  call void @free(i8* %28) #9, !dbg !9320
  br label %if.end31, !dbg !9320

if.end31:                                         ; preds = %if.then30, %if.end27
  %29 = load i32, i32* %err, align 4, !dbg !9321, !tbaa !2632
  store i32 %29, i32* %retval, align 4, !dbg !9322
  br label %return, !dbg !9322

return:                                           ; preds = %if.end31, %if.then8, %if.then4
  %30 = load i32, i32* %retval, align 4, !dbg !9323
  ret i32 %30, !dbg !9323
}

; Function Attrs: nounwind
declare dso_local i32 @linkat(i32, i8*, i32, i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @samedir_template(i8* %dstname, i8* %buf) #4 !dbg !9324 !ctir !650 {
entry:
  %retval = alloca i8*, align 8
  %dstname.addr = alloca i8*, align 8
  %buf.addr = alloca i8*, align 8
  %dstdirlen = alloca i64, align 8, !ctir !652
  %dsttmpsize = alloca i64, align 8, !ctir !55
  %dsttmp = alloca i8*, align 8, !ctir !9
  store i8* %dstname, i8** %dstname.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dstname.addr, metadata !9325, metadata !DIExpression()), !dbg !9326
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !9327, metadata !DIExpression()), !dbg !9328
  call void @llvm.dbg.declare(metadata i64* %dstdirlen, metadata !9329, metadata !DIExpression()), !dbg !9330
  %0 = load i8*, i8** %dstname.addr, align 8, !dbg !9331, !tbaa !2645
  %call = call i8* @last_component(i8* %0) #14, !dbg !9332
  %1 = load i8*, i8** %dstname.addr, align 8, !dbg !9333, !tbaa !2645
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !9334
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !9334
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9334
  store i64 %sub.ptr.sub, i64* %dstdirlen, align 8, !dbg !9330, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %dsttmpsize, metadata !9335, metadata !DIExpression()), !dbg !9336
  %2 = load i64, i64* %dstdirlen, align 8, !dbg !9337, !tbaa !3285
  %add = add i64 %2, 9, !dbg !9338
  store i64 %add, i64* %dsttmpsize, align 8, !dbg !9336, !tbaa !3285
  call void @llvm.dbg.declare(metadata i8** %dsttmp, metadata !9339, metadata !DIExpression()), !dbg !9340
  %3 = load i64, i64* %dsttmpsize, align 8, !dbg !9341, !tbaa !3285
  %cmp = icmp ule i64 %3, 256, !dbg !9343
  br i1 %cmp, label %if.then, label %if.else, !dbg !9344

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !9345, !tbaa !2645
  store i8* %4, i8** %dsttmp, align 8, !dbg !9346, !tbaa !2645
  br label %if.end3, !dbg !9347

if.else:                                          ; preds = %entry
  %5 = load i64, i64* %dsttmpsize, align 8, !dbg !9348, !tbaa !3285
  %call1 = call noalias i8* @malloc(i64 %5) #9, !dbg !9350
  store i8* %call1, i8** %dsttmp, align 8, !dbg !9351, !tbaa !2645
  %6 = load i8*, i8** %dsttmp, align 8, !dbg !9352, !tbaa !2645
  %tobool = icmp ne i8* %6, null, !dbg !9352
  br i1 %tobool, label %if.end, label %if.then2, !dbg !9354

if.then2:                                         ; preds = %if.else
  %7 = load i8*, i8** %dsttmp, align 8, !dbg !9355, !tbaa !2645
  store i8* %7, i8** %retval, align 8, !dbg !9356
  br label %return, !dbg !9356

if.end:                                           ; preds = %if.else
  br label %if.end3

if.end3:                                          ; preds = %if.end, %if.then
  %8 = load i8*, i8** %dsttmp, align 8, !dbg !9357, !tbaa !2645
  %9 = load i8*, i8** %dstname.addr, align 8, !dbg !9358, !tbaa !2645
  %10 = load i64, i64* %dstdirlen, align 8, !dbg !9359, !tbaa !3285
  %call4 = call i8* @mempcpy(i8* %8, i8* %9, i64 %10) #9, !dbg !9360
  %call5 = call i8* @strcpy(i8* %call4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @simple_pattern, i64 0, i64 0)) #9, !dbg !9361
  %11 = load i8*, i8** %dsttmp, align 8, !dbg !9362, !tbaa !2645
  store i8* %11, i8** %retval, align 8, !dbg !9363
  br label %return, !dbg !9363

return:                                           ; preds = %if.end3, %if.then2
  %12 = load i8*, i8** %retval, align 8, !dbg !9364
  ret i8* %12, !dbg !9364
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_link(i8* %dest, i8* %arg) #4 !dbg !9365 !ctir !656 {
entry:
  %dest.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %a = alloca %struct.link_arg*, align 8, !ctir !658
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !9366, metadata !DIExpression()), !dbg !9367
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !9368, metadata !DIExpression()), !dbg !9369
  call void @llvm.dbg.declare(metadata %struct.link_arg** %a, metadata !9370, metadata !DIExpression()), !dbg !9371
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !9372, !tbaa !2645
  %1 = bitcast i8* %0 to %struct.link_arg*, !dbg !9372
  store %struct.link_arg* %1, %struct.link_arg** %a, align 8, !dbg !9371, !tbaa !2645
  %2 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !9373, !tbaa !2645
  %srcdir = getelementptr inbounds %struct.link_arg, %struct.link_arg* %2, i32 0, i32 0, !dbg !9374, !ctir !659
  %3 = load i32, i32* %srcdir, align 8, !dbg !9374, !tbaa !9283, !ctir !7
  %4 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !9375, !tbaa !2645
  %srcname = getelementptr inbounds %struct.link_arg, %struct.link_arg* %4, i32 0, i32 1, !dbg !9376, !ctir !659
  %5 = load i8*, i8** %srcname, align 8, !dbg !9376, !tbaa !9286, !ctir !180
  %6 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !9377, !tbaa !2645
  %dstdir = getelementptr inbounds %struct.link_arg, %struct.link_arg* %6, i32 0, i32 2, !dbg !9378, !ctir !659
  %7 = load i32, i32* %dstdir, align 8, !dbg !9378, !tbaa !9288, !ctir !7
  %8 = load i8*, i8** %dest.addr, align 8, !dbg !9379, !tbaa !2645
  %9 = load %struct.link_arg*, %struct.link_arg** %a, align 8, !dbg !9380, !tbaa !2645
  %flags = getelementptr inbounds %struct.link_arg, %struct.link_arg* %9, i32 0, i32 3, !dbg !9381, !ctir !659
  %10 = load i32, i32* %flags, align 4, !dbg !9381, !tbaa !9290, !ctir !7
  %call = call i32 @linkat(i32 %3, i8* %5, i32 %7, i8* %8, i32 %10) #9, !dbg !9382
  ret i32 %call, !dbg !9383
}

; Function Attrs: nounwind
declare dso_local i32 @renameat(i32, i8*, i32, i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @unlinkat(i32, i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @force_symlinkat(i8* %srcname, i32 %dstdir, i8* %dstname, i1 zeroext %force, i32 %symlinkat_errno) #4 !dbg !9384 !ctir !648 {
entry:
  %retval = alloca i32, align 4
  %srcname.addr = alloca i8*, align 8
  %dstdir.addr = alloca i32, align 4
  %dstname.addr = alloca i8*, align 8
  %force.addr = alloca i8, align 1
  %symlinkat_errno.addr = alloca i32, align 4
  %buf = alloca [256 x i8], align 16, !ctir !645
  %dsttmp = alloca i8*, align 8, !ctir !9
  %arg = alloca %struct.symlink_arg, align 8, !ctir !666
  %err = alloca i32, align 4, !ctir !7
  store i8* %srcname, i8** %srcname.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %srcname.addr, metadata !9385, metadata !DIExpression()), !dbg !9386
  store i32 %dstdir, i32* %dstdir.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %dstdir.addr, metadata !9387, metadata !DIExpression()), !dbg !9388
  store i8* %dstname, i8** %dstname.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dstname.addr, metadata !9389, metadata !DIExpression()), !dbg !9390
  %frombool = zext i1 %force to i8
  store i8 %frombool, i8* %force.addr, align 1, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %force.addr, metadata !9391, metadata !DIExpression()), !dbg !9392
  store i32 %symlinkat_errno, i32* %symlinkat_errno.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %symlinkat_errno.addr, metadata !9393, metadata !DIExpression()), !dbg !9394
  %0 = load i32, i32* %symlinkat_errno.addr, align 4, !dbg !9395, !tbaa !2632
  %cmp = icmp slt i32 %0, 0, !dbg !9397
  br i1 %cmp, label %if.then, label %if.end, !dbg !9398

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %srcname.addr, align 8, !dbg !9399, !tbaa !2645
  %2 = load i32, i32* %dstdir.addr, align 4, !dbg !9400, !tbaa !2632
  %3 = load i8*, i8** %dstname.addr, align 8, !dbg !9401, !tbaa !2645
  %call = call i32 @symlinkat(i8* %1, i32 %2, i8* %3) #9, !dbg !9402
  %cmp1 = icmp eq i32 %call, 0, !dbg !9403
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !9402

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !9402

cond.false:                                       ; preds = %if.then
  %call2 = call i32* @__errno_location() #16, !dbg !9404
  %4 = load i32, i32* %call2, align 4, !dbg !9404, !tbaa !2632, !ctir !7
  br label %cond.end, !dbg !9402

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %4, %cond.false ], !dbg !9402
  store i32 %cond, i32* %symlinkat_errno.addr, align 4, !dbg !9405, !tbaa !2632
  br label %if.end, !dbg !9406

if.end:                                           ; preds = %cond.end, %entry
  %5 = load i8, i8* %force.addr, align 1, !dbg !9407, !tbaa !2739
  %tobool = trunc i8 %5 to i1, !dbg !9407
  br i1 %tobool, label %lor.lhs.false, label %if.then4, !dbg !9409

lor.lhs.false:                                    ; preds = %if.end
  %6 = load i32, i32* %symlinkat_errno.addr, align 4, !dbg !9410, !tbaa !2632
  %cmp3 = icmp ne i32 %6, 17, !dbg !9411
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !9412

if.then4:                                         ; preds = %lor.lhs.false, %if.end
  %7 = load i32, i32* %symlinkat_errno.addr, align 4, !dbg !9413, !tbaa !2632
  store i32 %7, i32* %retval, align 4, !dbg !9414
  br label %return, !dbg !9414

if.end5:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata [256 x i8]* %buf, metadata !9415, metadata !DIExpression()), !dbg !9416
  call void @llvm.dbg.declare(metadata i8** %dsttmp, metadata !9417, metadata !DIExpression()), !dbg !9418
  %8 = load i8*, i8** %dstname.addr, align 8, !dbg !9419, !tbaa !2645
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !9420
  %call6 = call i8* @samedir_template(i8* %8, i8* %arraydecay), !dbg !9421
  store i8* %call6, i8** %dsttmp, align 8, !dbg !9418, !tbaa !2645
  %9 = load i8*, i8** %dsttmp, align 8, !dbg !9422, !tbaa !2645
  %tobool7 = icmp ne i8* %9, null, !dbg !9422
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !9424

if.then8:                                         ; preds = %if.end5
  %call9 = call i32* @__errno_location() #16, !dbg !9425
  %10 = load i32, i32* %call9, align 4, !dbg !9425, !tbaa !2632, !ctir !7
  store i32 %10, i32* %retval, align 4, !dbg !9426
  br label %return, !dbg !9426

if.end10:                                         ; preds = %if.end5
  call void @llvm.dbg.declare(metadata %struct.symlink_arg* %arg, metadata !9427, metadata !DIExpression()), !dbg !9428
  %srcname11 = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %arg, i32 0, i32 0, !dbg !9429
  %11 = load i8*, i8** %srcname.addr, align 8, !dbg !9430, !tbaa !2645
  store i8* %11, i8** %srcname11, align 8, !dbg !9429, !tbaa !9431
  %dstdir12 = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %arg, i32 0, i32 1, !dbg !9429
  %12 = load i32, i32* %dstdir.addr, align 4, !dbg !9433, !tbaa !2632
  store i32 %12, i32* %dstdir12, align 8, !dbg !9429, !tbaa !9434
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9435, metadata !DIExpression()), !dbg !9436
  %13 = load i8*, i8** %dsttmp, align 8, !dbg !9437, !tbaa !2645
  %14 = bitcast %struct.symlink_arg* %arg to i8*, !dbg !9439
  %call13 = call i32 @try_tempname_len(i8* %13, i32 0, i8* %14, i32 (i8*, i8*)* @try_symlink, i64 6), !dbg !9440
  %cmp14 = icmp ne i32 %call13, 0, !dbg !9441
  br i1 %cmp14, label %if.then15, label %if.else, !dbg !9442

if.then15:                                        ; preds = %if.end10
  %call16 = call i32* @__errno_location() #16, !dbg !9443
  %15 = load i32, i32* %call16, align 4, !dbg !9443, !tbaa !2632, !ctir !7
  store i32 %15, i32* %err, align 4, !dbg !9444, !tbaa !2632
  br label %if.end24, !dbg !9445

if.else:                                          ; preds = %if.end10
  %16 = load i32, i32* %dstdir.addr, align 4, !dbg !9446, !tbaa !2632
  %17 = load i8*, i8** %dsttmp, align 8, !dbg !9448, !tbaa !2645
  %18 = load i32, i32* %dstdir.addr, align 4, !dbg !9449, !tbaa !2632
  %19 = load i8*, i8** %dstname.addr, align 8, !dbg !9450, !tbaa !2645
  %call17 = call i32 @renameat(i32 %16, i8* %17, i32 %18, i8* %19) #9, !dbg !9451
  %cmp18 = icmp ne i32 %call17, 0, !dbg !9452
  br i1 %cmp18, label %if.then19, label %if.else22, !dbg !9453

if.then19:                                        ; preds = %if.else
  %call20 = call i32* @__errno_location() #16, !dbg !9454
  %20 = load i32, i32* %call20, align 4, !dbg !9454, !tbaa !2632, !ctir !7
  store i32 %20, i32* %err, align 4, !dbg !9456, !tbaa !2632
  %21 = load i32, i32* %dstdir.addr, align 4, !dbg !9457, !tbaa !2632
  %22 = load i8*, i8** %dsttmp, align 8, !dbg !9458, !tbaa !2645
  %call21 = call i32 @unlinkat(i32 %21, i8* %22, i32 0) #9, !dbg !9459
  br label %if.end23, !dbg !9460

if.else22:                                        ; preds = %if.else
  store i32 -1, i32* %err, align 4, !dbg !9461, !tbaa !2632
  br label %if.end23

if.end23:                                         ; preds = %if.else22, %if.then19
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then15
  %23 = load i8*, i8** %dsttmp, align 8, !dbg !9463, !tbaa !2645
  %arraydecay25 = getelementptr inbounds [256 x i8], [256 x i8]* %buf, i64 0, i64 0, !dbg !9465
  %cmp26 = icmp ne i8* %23, %arraydecay25, !dbg !9466
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !9467

if.then27:                                        ; preds = %if.end24
  %24 = load i8*, i8** %dsttmp, align 8, !dbg !9468, !tbaa !2645
  call void @free(i8* %24) #9, !dbg !9469
  br label %if.end28, !dbg !9469

if.end28:                                         ; preds = %if.then27, %if.end24
  %25 = load i32, i32* %err, align 4, !dbg !9470, !tbaa !2632
  store i32 %25, i32* %retval, align 4, !dbg !9471
  br label %return, !dbg !9471

return:                                           ; preds = %if.end28, %if.then8, %if.then4
  %26 = load i32, i32* %retval, align 4, !dbg !9472
  ret i32 %26, !dbg !9472
}

; Function Attrs: nounwind
declare dso_local i32 @symlinkat(i8*, i32, i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_symlink(i8* %dest, i8* %arg) #4 !dbg !9473 !ctir !656 {
entry:
  %dest.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %a = alloca %struct.symlink_arg*, align 8, !ctir !665
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !9474, metadata !DIExpression()), !dbg !9475
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !9476, metadata !DIExpression()), !dbg !9477
  call void @llvm.dbg.declare(metadata %struct.symlink_arg** %a, metadata !9478, metadata !DIExpression()), !dbg !9479
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !9480, !tbaa !2645
  %1 = bitcast i8* %0 to %struct.symlink_arg*, !dbg !9480
  store %struct.symlink_arg* %1, %struct.symlink_arg** %a, align 8, !dbg !9479, !tbaa !2645
  %2 = load %struct.symlink_arg*, %struct.symlink_arg** %a, align 8, !dbg !9481, !tbaa !2645
  %srcname = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %2, i32 0, i32 0, !dbg !9482, !ctir !666
  %3 = load i8*, i8** %srcname, align 8, !dbg !9482, !tbaa !9431, !ctir !180
  %4 = load %struct.symlink_arg*, %struct.symlink_arg** %a, align 8, !dbg !9483, !tbaa !2645
  %dstdir = getelementptr inbounds %struct.symlink_arg, %struct.symlink_arg* %4, i32 0, i32 1, !dbg !9484, !ctir !666
  %5 = load i32, i32* %dstdir, align 8, !dbg !9484, !tbaa !9434, !ctir !7
  %6 = load i8*, i8** %dest.addr, align 8, !dbg !9485, !tbaa !2645
  %call = call i32 @symlinkat(i8* %3, i32 %5, i8* %6) #9, !dbg !9486
  ret i32 %call, !dbg !9487
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @copy_acl(i8* %src_name, i32 %source_desc, i8* %dst_name, i32 %dest_desc, i32 %mode) #4 !dbg !9488 !ctir !1514 {
entry:
  %src_name.addr = alloca i8*, align 8
  %source_desc.addr = alloca i32, align 4
  %dst_name.addr = alloca i8*, align 8
  %dest_desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ret = alloca i32, align 4, !ctir !7
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !9490, metadata !DIExpression()), !dbg !9491
  store i32 %source_desc, i32* %source_desc.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %source_desc.addr, metadata !9492, metadata !DIExpression()), !dbg !9493
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !9494, metadata !DIExpression()), !dbg !9495
  store i32 %dest_desc, i32* %dest_desc.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !9496, metadata !DIExpression()), !dbg !9497
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !9498, metadata !DIExpression()), !dbg !9499
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9500, metadata !DIExpression()), !dbg !9501
  %0 = load i8*, i8** %src_name.addr, align 8, !dbg !9502, !tbaa !2645
  %1 = load i32, i32* %source_desc.addr, align 4, !dbg !9503, !tbaa !2632
  %2 = load i8*, i8** %dst_name.addr, align 8, !dbg !9504, !tbaa !2645
  %3 = load i32, i32* %dest_desc.addr, align 4, !dbg !9505, !tbaa !2632
  %4 = load i32, i32* %mode.addr, align 4, !dbg !9506, !tbaa !2632
  %call = call i32 @qcopy_acl(i8* %0, i32 %1, i8* %2, i32 %3, i32 %4), !dbg !9507
  store i32 %call, i32* %ret, align 4, !dbg !9501, !tbaa !2632
  %5 = load i32, i32* %ret, align 4, !dbg !9508, !tbaa !2632
  switch i32 %5, label %sw.default [
    i32 -2, label %sw.bb
    i32 -1, label %sw.bb3
  ], !dbg !9509

sw.bb:                                            ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !9510
  %6 = load i32, i32* %call1, align 4, !dbg !9510, !tbaa !2632, !ctir !7
  %7 = load i8*, i8** %src_name.addr, align 8, !dbg !9512, !tbaa !2645
  %call2 = call i8* @quote(i8* %7), !dbg !9513
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.200, i64 0, i64 0), i8* %call2), !dbg !9514
  br label %sw.epilog, !dbg !9515

sw.bb3:                                           ; preds = %entry
  %call4 = call i32* @__errno_location() #16, !dbg !9516
  %8 = load i32, i32* %call4, align 4, !dbg !9516, !tbaa !2632, !ctir !7
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1.201, i64 0, i64 0)) #9, !dbg !9517
  %9 = load i8*, i8** %dst_name.addr, align 8, !dbg !9518, !tbaa !2645
  %call6 = call i8* @quote(i8* %9), !dbg !9519
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %8, i8* %call5, i8* %call6), !dbg !9520
  br label %sw.epilog, !dbg !9521

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !9522

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb
  %10 = load i32, i32* %ret, align 4, !dbg !9523, !tbaa !2632
  ret i32 %10, !dbg !9524
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_acl(i8* %name, i32 %desc, i32 %mode) #4 !dbg !9525 !ctir !1519 {
entry:
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ret = alloca i32, align 4, !ctir !7
  store i8* %name, i8** %name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !9527, metadata !DIExpression()), !dbg !9528
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !9529, metadata !DIExpression()), !dbg !9530
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !9531, metadata !DIExpression()), !dbg !9532
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9533, metadata !DIExpression()), !dbg !9534
  %0 = load i8*, i8** %name.addr, align 8, !dbg !9535, !tbaa !2645
  %1 = load i32, i32* %desc.addr, align 4, !dbg !9536, !tbaa !2632
  %2 = load i32, i32* %mode.addr, align 4, !dbg !9537, !tbaa !2632
  %call = call i32 @qset_acl(i8* %0, i32 %1, i32 %2), !dbg !9538
  store i32 %call, i32* %ret, align 4, !dbg !9534, !tbaa !2632
  %3 = load i32, i32* %ret, align 4, !dbg !9539, !tbaa !2632
  %cmp = icmp ne i32 %3, 0, !dbg !9541
  br i1 %cmp, label %if.then, label %if.end, !dbg !9542

if.then:                                          ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !9543
  %4 = load i32, i32* %call1, align 4, !dbg !9543, !tbaa !2632, !ctir !7
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.204, i64 0, i64 0)) #9, !dbg !9544
  %5 = load i8*, i8** %name.addr, align 8, !dbg !9545, !tbaa !2645
  %call3 = call i8* @quote(i8* %5), !dbg !9546
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %4, i8* %call2, i8* %call3), !dbg !9547
  br label %if.end, !dbg !9547

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %ret, align 4, !dbg !9548, !tbaa !2632
  ret i32 %6, !dbg !9549
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @areadlink_with_size(i8* %file, i64 %size) #4 !dbg !9550 !ctir !1074 {
entry:
  %retval = alloca i8*, align 8
  %file.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %symlink_max = alloca i64, align 8, !ctir !55
  %INITIAL_LIMIT_BOUND = alloca i64, align 8, !ctir !55
  %initial_limit = alloca i64, align 8, !ctir !55
  %buf_size = alloca i64, align 8, !ctir !55
  %r = alloca i64, align 8, !ctir !692
  %link_length = alloca i64, align 8, !ctir !55
  %buffer = alloca i8*, align 8, !ctir !9
  %saved_errno = alloca i32, align 4, !ctir !7
  store i8* %file, i8** %file.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9552, metadata !DIExpression()), !dbg !9553
  store i64 %size, i64* %size.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9554, metadata !DIExpression()), !dbg !9555
  call void @llvm.dbg.declare(metadata i64* %symlink_max, metadata !9556, metadata !DIExpression()), !dbg !9557
  store i64 1024, i64* %symlink_max, align 8, !dbg !9557, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %INITIAL_LIMIT_BOUND, metadata !9558, metadata !DIExpression()), !dbg !9559
  store i64 8192, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !9559, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %initial_limit, metadata !9560, metadata !DIExpression()), !dbg !9561
  %0 = load i64, i64* %symlink_max, align 8, !dbg !9562, !tbaa !3285
  %1 = load i64, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !9563, !tbaa !3285
  %cmp = icmp ult i64 %0, %1, !dbg !9564
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9562

cond.true:                                        ; preds = %entry
  %2 = load i64, i64* %symlink_max, align 8, !dbg !9565, !tbaa !3285
  %add = add i64 %2, 1, !dbg !9566
  br label %cond.end, !dbg !9562

cond.false:                                       ; preds = %entry
  %3 = load i64, i64* %INITIAL_LIMIT_BOUND, align 8, !dbg !9567, !tbaa !3285
  br label %cond.end, !dbg !9562

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %add, %cond.true ], [ %3, %cond.false ], !dbg !9562
  store i64 %cond, i64* %initial_limit, align 8, !dbg !9561, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %buf_size, metadata !9568, metadata !DIExpression()), !dbg !9569
  %4 = load i64, i64* %size.addr, align 8, !dbg !9570, !tbaa !3285
  %5 = load i64, i64* %initial_limit, align 8, !dbg !9571, !tbaa !3285
  %cmp1 = icmp ult i64 %4, %5, !dbg !9572
  br i1 %cmp1, label %cond.true2, label %cond.false4, !dbg !9570

cond.true2:                                       ; preds = %cond.end
  %6 = load i64, i64* %size.addr, align 8, !dbg !9573, !tbaa !3285
  %add3 = add i64 %6, 1, !dbg !9574
  br label %cond.end5, !dbg !9570

cond.false4:                                      ; preds = %cond.end
  %7 = load i64, i64* %initial_limit, align 8, !dbg !9575, !tbaa !3285
  br label %cond.end5, !dbg !9570

cond.end5:                                        ; preds = %cond.false4, %cond.true2
  %cond6 = phi i64 [ %add3, %cond.true2 ], [ %7, %cond.false4 ], !dbg !9570
  store i64 %cond6, i64* %buf_size, align 8, !dbg !9569, !tbaa !3285
  br label %while.body, !dbg !9576

while.body:                                       ; preds = %cond.end5, %if.end26
  call void @llvm.dbg.declare(metadata i64* %r, metadata !9577, metadata !DIExpression()), !dbg !9579
  call void @llvm.dbg.declare(metadata i64* %link_length, metadata !9580, metadata !DIExpression()), !dbg !9581
  call void @llvm.dbg.declare(metadata i8** %buffer, metadata !9582, metadata !DIExpression()), !dbg !9583
  %8 = load i64, i64* %buf_size, align 8, !dbg !9584, !tbaa !3285
  %call = call noalias i8* @malloc(i64 %8) #9, !dbg !9585
  store i8* %call, i8** %buffer, align 8, !dbg !9583, !tbaa !2645
  %9 = load i8*, i8** %buffer, align 8, !dbg !9586, !tbaa !2645
  %cmp7 = icmp eq i8* %9, null, !dbg !9588
  br i1 %cmp7, label %if.then, label %if.end, !dbg !9589

if.then:                                          ; preds = %while.body
  store i8* null, i8** %retval, align 8, !dbg !9590
  br label %return, !dbg !9590

if.end:                                           ; preds = %while.body
  %10 = load i8*, i8** %file.addr, align 8, !dbg !9591, !tbaa !2645
  %11 = load i8*, i8** %buffer, align 8, !dbg !9592, !tbaa !2645
  %12 = load i64, i64* %buf_size, align 8, !dbg !9593, !tbaa !3285
  %call8 = call i64 @readlink(i8* %10, i8* %11, i64 %12) #9, !dbg !9594
  store i64 %call8, i64* %r, align 8, !dbg !9595, !tbaa !3285
  %13 = load i64, i64* %r, align 8, !dbg !9596, !tbaa !3285
  store i64 %13, i64* %link_length, align 8, !dbg !9597, !tbaa !3285
  %14 = load i64, i64* %r, align 8, !dbg !9598, !tbaa !3285
  %cmp9 = icmp slt i64 %14, 0, !dbg !9600
  br i1 %cmp9, label %land.lhs.true, label %if.end15, !dbg !9601

land.lhs.true:                                    ; preds = %if.end
  %call10 = call i32* @__errno_location() #16, !dbg !9602
  %15 = load i32, i32* %call10, align 4, !dbg !9602, !tbaa !2632, !ctir !7
  %cmp11 = icmp ne i32 %15, 34, !dbg !9603
  br i1 %cmp11, label %if.then12, label %if.end15, !dbg !9604

if.then12:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !9605, metadata !DIExpression()), !dbg !9607
  %call13 = call i32* @__errno_location() #16, !dbg !9608
  %16 = load i32, i32* %call13, align 4, !dbg !9608, !tbaa !2632, !ctir !7
  store i32 %16, i32* %saved_errno, align 4, !dbg !9607, !tbaa !2632
  %17 = load i8*, i8** %buffer, align 8, !dbg !9609, !tbaa !2645
  call void @free(i8* %17) #9, !dbg !9610
  %18 = load i32, i32* %saved_errno, align 4, !dbg !9611, !tbaa !2632
  %call14 = call i32* @__errno_location() #16, !dbg !9612
  store i32 %18, i32* %call14, align 4, !dbg !9613, !tbaa !2632, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !9614
  br label %return, !dbg !9614

if.end15:                                         ; preds = %land.lhs.true, %if.end
  %19 = load i64, i64* %link_length, align 8, !dbg !9615, !tbaa !3285
  %20 = load i64, i64* %buf_size, align 8, !dbg !9617, !tbaa !3285
  %cmp16 = icmp ult i64 %19, %20, !dbg !9618
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !9619

if.then17:                                        ; preds = %if.end15
  %21 = load i8*, i8** %buffer, align 8, !dbg !9620, !tbaa !2645
  %22 = load i64, i64* %link_length, align 8, !dbg !9622, !tbaa !3285
  %arrayidx = getelementptr inbounds i8, i8* %21, i64 %22, !dbg !9620, !ctir !9
  store i8 0, i8* %arrayidx, align 1, !dbg !9623, !tbaa !3292
  %23 = load i8*, i8** %buffer, align 8, !dbg !9624, !tbaa !2645
  store i8* %23, i8** %retval, align 8, !dbg !9625
  br label %return, !dbg !9625

if.end18:                                         ; preds = %if.end15
  %24 = load i8*, i8** %buffer, align 8, !dbg !9626, !tbaa !2645
  call void @free(i8* %24) #9, !dbg !9627
  %25 = load i64, i64* %buf_size, align 8, !dbg !9628, !tbaa !3285
  %cmp19 = icmp ule i64 %25, 4611686018427387903, !dbg !9630
  br i1 %cmp19, label %if.then20, label %if.else, !dbg !9631

if.then20:                                        ; preds = %if.end18
  %26 = load i64, i64* %buf_size, align 8, !dbg !9632, !tbaa !3285
  %mul = mul i64 %26, 2, !dbg !9632
  store i64 %mul, i64* %buf_size, align 8, !dbg !9632, !tbaa !3285
  br label %if.end26, !dbg !9633

if.else:                                          ; preds = %if.end18
  %27 = load i64, i64* %buf_size, align 8, !dbg !9634, !tbaa !3285
  %cmp21 = icmp ult i64 %27, 9223372036854775807, !dbg !9636
  br i1 %cmp21, label %if.then22, label %if.else23, !dbg !9637

if.then22:                                        ; preds = %if.else
  store i64 9223372036854775807, i64* %buf_size, align 8, !dbg !9638, !tbaa !3285
  br label %if.end25, !dbg !9639

if.else23:                                        ; preds = %if.else
  %call24 = call i32* @__errno_location() #16, !dbg !9640
  store i32 12, i32* %call24, align 4, !dbg !9642, !tbaa !2632, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !9643
  br label %return, !dbg !9643

if.end25:                                         ; preds = %if.then22
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then20
  br label %while.body, !dbg !9576, !llvm.loop !9644

return:                                           ; preds = %if.else23, %if.then17, %if.then12, %if.then
  %28 = load i8*, i8** %retval, align 8, !dbg !9646
  ret i8* %28, !dbg !9646
}

; Function Attrs: nounwind
declare dso_local i64 @readlink(i8*, i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_simple_backup_suffix(i8* %s) #4 !dbg !9647 !ctir !202 {
entry:
  %s.addr = alloca i8*, align 8
  store i8* %s, i8** %s.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !9648, metadata !DIExpression()), !dbg !9649
  %0 = load i8*, i8** %s.addr, align 8, !dbg !9650, !tbaa !2645
  %tobool = icmp ne i8* %0, null, !dbg !9650
  br i1 %tobool, label %if.end, label %if.then, !dbg !9652

if.then:                                          ; preds = %entry
  %call = call i8* @getenv(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.211, i64 0, i64 0)) #9, !dbg !9653
  store i8* %call, i8** %s.addr, align 8, !dbg !9654, !tbaa !2645
  br label %if.end, !dbg !9655

if.end:                                           ; preds = %if.then, %entry
  %1 = load i8*, i8** %s.addr, align 8, !dbg !9656, !tbaa !2645
  %tobool1 = icmp ne i8* %1, null, !dbg !9656
  br i1 %tobool1, label %land.lhs.true, label %cond.false, !dbg !9657

land.lhs.true:                                    ; preds = %if.end
  %2 = load i8*, i8** %s.addr, align 8, !dbg !9658, !tbaa !2645
  %3 = load i8, i8* %2, align 1, !dbg !9659, !tbaa !3292, !ctir !181
  %conv = sext i8 %3 to i32, !dbg !9659
  %tobool2 = icmp ne i32 %conv, 0, !dbg !9659
  br i1 %tobool2, label %land.lhs.true3, label %cond.false, !dbg !9660

land.lhs.true3:                                   ; preds = %land.lhs.true
  %4 = load i8*, i8** %s.addr, align 8, !dbg !9661, !tbaa !2645
  %5 = load i8*, i8** %s.addr, align 8, !dbg !9662, !tbaa !2645
  %call4 = call i8* @last_component(i8* %5) #14, !dbg !9663
  %cmp = icmp eq i8* %4, %call4, !dbg !9664
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9656

cond.true:                                        ; preds = %land.lhs.true3
  %6 = load i8*, i8** %s.addr, align 8, !dbg !9665, !tbaa !2645
  br label %cond.end, !dbg !9656

cond.false:                                       ; preds = %land.lhs.true3, %land.lhs.true, %if.end
  br label %cond.end, !dbg !9656

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %6, %cond.true ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.212, i64 0, i64 0), %cond.false ], !dbg !9656
  store i8* %cond, i8** @simple_backup_suffix, align 8, !dbg !9666, !tbaa !2645
  ret void, !dbg !9667
}

; Function Attrs: nounwind
declare dso_local i8* @getenv(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @backupfile_internal(i32 %dir_fd, i8* %file, i32 %backup_type, i1 zeroext %rename) #4 !dbg !9668 !ctir !690 {
entry:
  %retval = alloca i8*, align 8
  %dir_fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %backup_type.addr = alloca i32, align 4
  %rename.addr = alloca i8, align 1
  %base_offset = alloca i64, align 8, !ctir !652
  %filelen = alloca i64, align 8, !ctir !55
  %simple_backup_suffix_size = alloca i64, align 8, !ctir !55
  %backup_suffix_size_guess = alloca i64, align 8, !ctir !55
  %ssize = alloca i64, align 8, !ctir !692
  %s = alloca i8*, align 8, !ctir !9
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !693
  %sdir = alloca i32, align 4, !ctir !7
  %base_max = alloca i64, align 8, !ctir !55
  %flags = alloca i32, align 4, !ctir !70
  %e = alloca i32, align 4, !ctir !7
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !9669, metadata !DIExpression()), !dbg !9670
  store i8* %file, i8** %file.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !9671, metadata !DIExpression()), !dbg !9672
  store i32 %backup_type, i32* %backup_type.addr, align 4, !tbaa !3292
  call void @llvm.dbg.declare(metadata i32* %backup_type.addr, metadata !9673, metadata !DIExpression()), !dbg !9674
  %frombool = zext i1 %rename to i8
  store i8 %frombool, i8* %rename.addr, align 1, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %rename.addr, metadata !9675, metadata !DIExpression()), !dbg !9676
  call void @llvm.dbg.declare(metadata i64* %base_offset, metadata !9677, metadata !DIExpression()), !dbg !9678
  %0 = load i8*, i8** %file.addr, align 8, !dbg !9679, !tbaa !2645
  %call = call i8* @last_component(i8* %0) #14, !dbg !9680
  %1 = load i8*, i8** %file.addr, align 8, !dbg !9681, !tbaa !2645
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !9682
  %sub.ptr.rhs.cast = ptrtoint i8* %1 to i64, !dbg !9682
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9682
  store i64 %sub.ptr.sub, i64* %base_offset, align 8, !dbg !9678, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %filelen, metadata !9683, metadata !DIExpression()), !dbg !9684
  %2 = load i64, i64* %base_offset, align 8, !dbg !9685, !tbaa !3285
  %3 = load i8*, i8** %file.addr, align 8, !dbg !9686, !tbaa !2645
  %4 = load i64, i64* %base_offset, align 8, !dbg !9687, !tbaa !3285
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %4, !dbg !9688
  %call1 = call i64 @strlen(i8* %add.ptr) #14, !dbg !9689
  %add = add i64 %2, %call1, !dbg !9690
  store i64 %add, i64* %filelen, align 8, !dbg !9684, !tbaa !3285
  %5 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !9691, !tbaa !2645
  %tobool = icmp ne i8* %5, null, !dbg !9691
  br i1 %tobool, label %if.end, label %if.then, !dbg !9693

if.then:                                          ; preds = %entry
  call void @set_simple_backup_suffix(i8* null), !dbg !9694
  br label %if.end, !dbg !9694

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.dbg.declare(metadata i64* %simple_backup_suffix_size, metadata !9695, metadata !DIExpression()), !dbg !9696
  %6 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !9697, !tbaa !2645
  %call2 = call i64 @strlen(i8* %6) #14, !dbg !9698
  %add3 = add i64 %call2, 1, !dbg !9699
  store i64 %add3, i64* %simple_backup_suffix_size, align 8, !dbg !9696, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %backup_suffix_size_guess, metadata !9700, metadata !DIExpression()), !dbg !9701
  %7 = load i64, i64* %simple_backup_suffix_size, align 8, !dbg !9702, !tbaa !3285
  store i64 %7, i64* %backup_suffix_size_guess, align 8, !dbg !9701, !tbaa !3285
  %8 = load i64, i64* %backup_suffix_size_guess, align 8, !dbg !9703, !tbaa !3285
  %cmp = icmp ult i64 %8, 9, !dbg !9705
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !9706

if.then4:                                         ; preds = %if.end
  store i64 9, i64* %backup_suffix_size_guess, align 8, !dbg !9707, !tbaa !3285
  br label %if.end5, !dbg !9708

if.end5:                                          ; preds = %if.then4, %if.end
  call void @llvm.dbg.declare(metadata i64* %ssize, metadata !9709, metadata !DIExpression()), !dbg !9710
  %9 = load i64, i64* %filelen, align 8, !dbg !9711, !tbaa !3285
  %10 = load i64, i64* %backup_suffix_size_guess, align 8, !dbg !9712, !tbaa !3285
  %add6 = add i64 %9, %10, !dbg !9713
  %add7 = add i64 %add6, 1, !dbg !9714
  store i64 %add7, i64* %ssize, align 8, !dbg !9710, !tbaa !3285
  call void @llvm.dbg.declare(metadata i8** %s, metadata !9715, metadata !DIExpression()), !dbg !9716
  %11 = load i64, i64* %ssize, align 8, !dbg !9717, !tbaa !3285
  %call8 = call noalias i8* @malloc(i64 %11) #9, !dbg !9718
  store i8* %call8, i8** %s, align 8, !dbg !9716, !tbaa !2645
  %12 = load i8*, i8** %s, align 8, !dbg !9719, !tbaa !2645
  %tobool9 = icmp ne i8* %12, null, !dbg !9719
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !9721

if.then10:                                        ; preds = %if.end5
  %13 = load i8*, i8** %s, align 8, !dbg !9722, !tbaa !2645
  store i8* %13, i8** %retval, align 8, !dbg !9723
  br label %return, !dbg !9723

if.end11:                                         ; preds = %if.end5
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !9724, metadata !DIExpression()), !dbg !9725
  store %struct.__dirstream* null, %struct.__dirstream** %dirp, align 8, !dbg !9725, !tbaa !2645
  call void @llvm.dbg.declare(metadata i32* %sdir, metadata !9726, metadata !DIExpression()), !dbg !9727
  store i32 -1, i32* %sdir, align 4, !dbg !9727, !tbaa !2632
  call void @llvm.dbg.declare(metadata i64* %base_max, metadata !9728, metadata !DIExpression()), !dbg !9729
  store i64 0, i64* %base_max, align 8, !dbg !9729, !tbaa !3285
  br label %while.body, !dbg !9730

while.body:                                       ; preds = %if.end11, %if.end46
  %14 = load i8*, i8** %s, align 8, !dbg !9731, !tbaa !2645
  %15 = load i8*, i8** %file.addr, align 8, !dbg !9733, !tbaa !2645
  %16 = load i64, i64* %filelen, align 8, !dbg !9734, !tbaa !3285
  %add12 = add i64 %16, 1, !dbg !9735
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %15, i64 %add12, i1 false), !dbg !9736
  %17 = load i32, i32* %backup_type.addr, align 4, !dbg !9737, !tbaa !3292
  %cmp13 = icmp eq i32 %17, 1, !dbg !9739
  br i1 %cmp13, label %if.then14, label %if.else, !dbg !9740

if.then14:                                        ; preds = %while.body
  %18 = load i8*, i8** %s, align 8, !dbg !9741, !tbaa !2645
  %19 = load i64, i64* %filelen, align 8, !dbg !9742, !tbaa !3285
  %add.ptr15 = getelementptr inbounds i8, i8* %18, i64 %19, !dbg !9743
  %20 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !9744, !tbaa !2645
  %21 = load i64, i64* %simple_backup_suffix_size, align 8, !dbg !9745, !tbaa !3285
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr15, i8* align 1 %20, i64 %21, i1 false), !dbg !9746
  br label %if.end25, !dbg !9746

if.else:                                          ; preds = %while.body
  %22 = load i32, i32* %dir_fd.addr, align 4, !dbg !9747, !tbaa !2632
  %23 = load i64, i64* %ssize, align 8, !dbg !9748, !tbaa !3285
  %24 = load i64, i64* %filelen, align 8, !dbg !9749, !tbaa !3285
  %25 = load i64, i64* %base_offset, align 8, !dbg !9750, !tbaa !3285
  %call16 = call i32 @numbered_backup(i32 %22, i8** %s, i64 %23, i64 %24, i64 %25, %struct.__dirstream** %dirp, i32* %sdir), !dbg !9751
  switch i32 %call16, label %sw.epilog [
    i32 0, label %sw.bb
    i32 2, label %sw.bb17
    i32 1, label %sw.bb22
    i32 3, label %sw.bb23
  ], !dbg !9752

sw.bb:                                            ; preds = %if.else
  br label %sw.epilog, !dbg !9753

sw.bb17:                                          ; preds = %if.else
  %26 = load i32, i32* %backup_type.addr, align 4, !dbg !9755, !tbaa !3292
  %cmp18 = icmp eq i32 %26, 2, !dbg !9757
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !9758

if.then19:                                        ; preds = %sw.bb17
  store i32 1, i32* %backup_type.addr, align 4, !dbg !9759, !tbaa !3292
  %27 = load i8*, i8** %s, align 8, !dbg !9761, !tbaa !2645
  %28 = load i64, i64* %filelen, align 8, !dbg !9762, !tbaa !3285
  %add.ptr20 = getelementptr inbounds i8, i8* %27, i64 %28, !dbg !9763
  %29 = load i8*, i8** @simple_backup_suffix, align 8, !dbg !9764, !tbaa !2645
  %30 = load i64, i64* %simple_backup_suffix_size, align 8, !dbg !9765, !tbaa !3285
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr20, i8* align 1 %29, i64 %30, i1 false), !dbg !9766
  br label %if.end21, !dbg !9767

if.end21:                                         ; preds = %if.then19, %sw.bb17
  br label %sw.bb22, !dbg !9768

sw.bb22:                                          ; preds = %if.else, %if.end21
  %31 = load i8*, i8** %s, align 8, !dbg !9769, !tbaa !2645
  %32 = load i64, i64* %filelen, align 8, !dbg !9770, !tbaa !3285
  %33 = load i32, i32* %sdir, align 4, !dbg !9771, !tbaa !2632
  call void @check_extension(i8* %31, i64 %32, i8 signext 126, i32 %33, i64* %base_max), !dbg !9772
  br label %sw.epilog, !dbg !9773

sw.bb23:                                          ; preds = %if.else
  %34 = load i8*, i8** %s, align 8, !dbg !9774, !tbaa !2645
  call void @free(i8* %34) #9, !dbg !9775
  %call24 = call i32* @__errno_location() #16, !dbg !9776
  store i32 12, i32* %call24, align 4, !dbg !9777, !tbaa !2632, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !9778
  br label %return, !dbg !9778

sw.epilog:                                        ; preds = %if.else, %sw.bb22, %sw.bb
  br label %if.end25

if.end25:                                         ; preds = %sw.epilog, %if.then14
  %35 = load i8, i8* %rename.addr, align 1, !dbg !9779, !tbaa !2739
  %tobool26 = trunc i8 %35 to i1, !dbg !9779
  br i1 %tobool26, label %if.end28, label %if.then27, !dbg !9781

if.then27:                                        ; preds = %if.end25
  br label %while.end, !dbg !9782

if.end28:                                         ; preds = %if.end25
  %36 = load i32, i32* %sdir, align 4, !dbg !9783, !tbaa !2632
  %cmp29 = icmp slt i32 %36, 0, !dbg !9785
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !9786

if.then30:                                        ; preds = %if.end28
  store i32 -100, i32* %sdir, align 4, !dbg !9787, !tbaa !2632
  store i64 0, i64* %base_offset, align 8, !dbg !9789, !tbaa !3285
  br label %if.end31, !dbg !9790

if.end31:                                         ; preds = %if.then30, %if.end28
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !9791, metadata !DIExpression()), !dbg !9792
  %37 = load i32, i32* %backup_type.addr, align 4, !dbg !9793, !tbaa !3292
  %cmp32 = icmp eq i32 %37, 1, !dbg !9794
  %38 = zext i1 %cmp32 to i64, !dbg !9793
  %cond = select i1 %cmp32, i32 0, i32 1, !dbg !9793
  store i32 %cond, i32* %flags, align 4, !dbg !9792, !tbaa !2632
  %39 = load i8*, i8** %file.addr, align 8, !dbg !9795, !tbaa !2645
  %40 = load i32, i32* %sdir, align 4, !dbg !9797, !tbaa !2632
  %41 = load i8*, i8** %s, align 8, !dbg !9798, !tbaa !2645
  %42 = load i64, i64* %base_offset, align 8, !dbg !9799, !tbaa !3285
  %add.ptr33 = getelementptr inbounds i8, i8* %41, i64 %42, !dbg !9800
  %43 = load i32, i32* %flags, align 4, !dbg !9801, !tbaa !2632
  %call34 = call i32 @renameatu(i32 -100, i8* %39, i32 %40, i8* %add.ptr33, i32 %43), !dbg !9802
  %cmp35 = icmp eq i32 %call34, 0, !dbg !9803
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !9804

if.then36:                                        ; preds = %if.end31
  br label %while.end, !dbg !9805

if.end37:                                         ; preds = %if.end31
  call void @llvm.dbg.declare(metadata i32* %e, metadata !9806, metadata !DIExpression()), !dbg !9807
  %call38 = call i32* @__errno_location() #16, !dbg !9808
  %44 = load i32, i32* %call38, align 4, !dbg !9808, !tbaa !2632, !ctir !7
  store i32 %44, i32* %e, align 4, !dbg !9807, !tbaa !2632
  %45 = load i32, i32* %e, align 4, !dbg !9809, !tbaa !2632
  %cmp39 = icmp ne i32 %45, 17, !dbg !9811
  br i1 %cmp39, label %if.then40, label %if.end46, !dbg !9812

if.then40:                                        ; preds = %if.end37
  %46 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9813, !tbaa !2645
  %tobool41 = icmp ne %struct.__dirstream* %46, null, !dbg !9813
  br i1 %tobool41, label %if.then42, label %if.end44, !dbg !9816

if.then42:                                        ; preds = %if.then40
  %47 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9817, !tbaa !2645
  %call43 = call i32 @closedir(%struct.__dirstream* %47), !dbg !9818
  br label %if.end44, !dbg !9818

if.end44:                                         ; preds = %if.then42, %if.then40
  %48 = load i8*, i8** %s, align 8, !dbg !9819, !tbaa !2645
  call void @free(i8* %48) #9, !dbg !9820
  %49 = load i32, i32* %e, align 4, !dbg !9821, !tbaa !2632
  %call45 = call i32* @__errno_location() #16, !dbg !9822
  store i32 %49, i32* %call45, align 4, !dbg !9823, !tbaa !2632, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !9824
  br label %return, !dbg !9824

if.end46:                                         ; preds = %if.end37
  br label %while.body, !dbg !9730, !llvm.loop !9825

while.end:                                        ; preds = %if.then36, %if.then27
  %50 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9827, !tbaa !2645
  %tobool47 = icmp ne %struct.__dirstream* %50, null, !dbg !9827
  br i1 %tobool47, label %if.then48, label %if.end50, !dbg !9829

if.then48:                                        ; preds = %while.end
  %51 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9830, !tbaa !2645
  %call49 = call i32 @closedir(%struct.__dirstream* %51), !dbg !9831
  br label %if.end50, !dbg !9831

if.end50:                                         ; preds = %if.then48, %while.end
  %52 = load i8*, i8** %s, align 8, !dbg !9832, !tbaa !2645
  store i8* %52, i8** %retval, align 8, !dbg !9833
  br label %return, !dbg !9833

return:                                           ; preds = %if.end50, %if.end44, %sw.bb23, %if.then10
  %53 = load i8*, i8** %retval, align 8, !dbg !9834
  ret i8* %53, !dbg !9834
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @numbered_backup(i32 %dir_fd, i8** %buffer, i64 %buffer_size, i64 %filelen, i64 %base_offset, %struct.__dirstream** %dirpp, i32* %pnew_fd) #4 !dbg !9835 !ctir !697 {
entry:
  %retval = alloca i32, align 4
  %dir_fd.addr = alloca i32, align 4
  %buffer.addr = alloca i8**, align 8
  %buffer_size.addr = alloca i64, align 8
  %filelen.addr = alloca i64, align 8
  %base_offset.addr = alloca i64, align 8
  %dirpp.addr = alloca %struct.__dirstream**, align 8
  %pnew_fd.addr = alloca i32*, align 8
  %result = alloca i32, align 4, !ctir !682
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !693
  %dp = alloca %struct.dirent*, align 8, !ctir !700
  %buf = alloca i8*, align 8, !ctir !9
  %versionlenmax = alloca i64, align 8, !ctir !55
  %base = alloca i8*, align 8, !ctir !9
  %baselen = alloca i64, align 8, !ctir !55
  %tmp = alloca [2 x i8], align 1, !ctir !709
  %p = alloca i8*, align 8, !ctir !180
  %q = alloca i8*, align 8, !ctir !9
  %all_9s = alloca i8, align 1, !ctir !142
  %versionlen = alloca i64, align 8, !ctir !55
  %new_buffer_size = alloca i64, align 8, !ctir !55
  %new_buf = alloca i8*, align 8, !ctir !9
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !9836, metadata !DIExpression()), !dbg !9837
  store i8** %buffer, i8*** %buffer.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8*** %buffer.addr, metadata !9838, metadata !DIExpression()), !dbg !9839
  store i64 %buffer_size, i64* %buffer_size.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %buffer_size.addr, metadata !9840, metadata !DIExpression()), !dbg !9841
  store i64 %filelen, i64* %filelen.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %filelen.addr, metadata !9842, metadata !DIExpression()), !dbg !9843
  store i64 %base_offset, i64* %base_offset.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %base_offset.addr, metadata !9844, metadata !DIExpression()), !dbg !9845
  store %struct.__dirstream** %dirpp, %struct.__dirstream*** %dirpp.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.__dirstream*** %dirpp.addr, metadata !9846, metadata !DIExpression()), !dbg !9847
  store i32* %pnew_fd, i32** %pnew_fd.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i32** %pnew_fd.addr, metadata !9848, metadata !DIExpression()), !dbg !9849
  call void @llvm.dbg.declare(metadata i32* %result, metadata !9850, metadata !DIExpression()), !dbg !9851
  store i32 2, i32* %result, align 4, !dbg !9851, !tbaa !3292
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !9852, metadata !DIExpression()), !dbg !9853
  %0 = load %struct.__dirstream**, %struct.__dirstream*** %dirpp.addr, align 8, !dbg !9854, !tbaa !2645
  %1 = load %struct.__dirstream*, %struct.__dirstream** %0, align 8, !dbg !9855, !tbaa !2645, !ctir !693
  store %struct.__dirstream* %1, %struct.__dirstream** %dirp, align 8, !dbg !9853, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.dirent** %dp, metadata !9856, metadata !DIExpression()), !dbg !9857
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !9858, metadata !DIExpression()), !dbg !9859
  %2 = load i8**, i8*** %buffer.addr, align 8, !dbg !9860, !tbaa !2645
  %3 = load i8*, i8** %2, align 8, !dbg !9861, !tbaa !2645, !ctir !9
  store i8* %3, i8** %buf, align 8, !dbg !9859, !tbaa !2645
  call void @llvm.dbg.declare(metadata i64* %versionlenmax, metadata !9862, metadata !DIExpression()), !dbg !9863
  store i64 1, i64* %versionlenmax, align 8, !dbg !9863, !tbaa !3285
  call void @llvm.dbg.declare(metadata i8** %base, metadata !9864, metadata !DIExpression()), !dbg !9865
  %4 = load i8*, i8** %buf, align 8, !dbg !9866, !tbaa !2645
  %5 = load i64, i64* %base_offset.addr, align 8, !dbg !9867, !tbaa !3285
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %5, !dbg !9868
  store i8* %add.ptr, i8** %base, align 8, !dbg !9865, !tbaa !2645
  call void @llvm.dbg.declare(metadata i64* %baselen, metadata !9869, metadata !DIExpression()), !dbg !9870
  %6 = load i8*, i8** %base, align 8, !dbg !9871, !tbaa !2645
  %call = call i64 @base_len(i8* %6) #14, !dbg !9872
  store i64 %call, i64* %baselen, align 8, !dbg !9870, !tbaa !3285
  %7 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9873, !tbaa !2645
  %tobool = icmp ne %struct.__dirstream* %7, null, !dbg !9873
  br i1 %tobool, label %if.then, label %if.else, !dbg !9875

if.then:                                          ; preds = %entry
  %8 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9876, !tbaa !2645
  call void @rewinddir(%struct.__dirstream* %8) #9, !dbg !9877
  br label %if.end12, !dbg !9877

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [2 x i8]* %tmp, metadata !9878, metadata !DIExpression()), !dbg !9880
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !9881
  %9 = load i8*, i8** %base, align 8, !dbg !9882, !tbaa !2645
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay, i8* align 1 %9, i64 2, i1 false), !dbg !9881
  %10 = load i8*, i8** %base, align 8, !dbg !9883, !tbaa !2645
  %call1 = call i8* @strcpy(i8* %10, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.213, i64 0, i64 0)) #9, !dbg !9884
  %11 = load i32, i32* %dir_fd.addr, align 4, !dbg !9885, !tbaa !2632
  %12 = load i8*, i8** %buf, align 8, !dbg !9886, !tbaa !2645
  %13 = load i32*, i32** %pnew_fd.addr, align 8, !dbg !9887, !tbaa !2645
  %call2 = call %struct.__dirstream* @opendirat(i32 %11, i8* %12, i32 0, i32* %13), !dbg !9888
  store %struct.__dirstream* %call2, %struct.__dirstream** %dirp, align 8, !dbg !9889, !tbaa !2645
  %14 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9890, !tbaa !2645
  %tobool3 = icmp ne %struct.__dirstream* %14, null, !dbg !9890
  br i1 %tobool3, label %if.end, label %land.lhs.true, !dbg !9892

land.lhs.true:                                    ; preds = %if.else
  %call4 = call i32* @__errno_location() #16, !dbg !9893
  %15 = load i32, i32* %call4, align 4, !dbg !9893, !tbaa !2632, !ctir !7
  %cmp = icmp eq i32 %15, 12, !dbg !9894
  br i1 %cmp, label %if.then5, label %if.end, !dbg !9895

if.then5:                                         ; preds = %land.lhs.true
  store i32 3, i32* %result, align 4, !dbg !9896, !tbaa !3292
  br label %if.end, !dbg !9897

if.end:                                           ; preds = %if.then5, %land.lhs.true, %if.else
  %16 = load i8*, i8** %base, align 8, !dbg !9898, !tbaa !2645
  %arraydecay6 = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !9899
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %16, i8* align 1 %arraydecay6, i64 2, i1 false), !dbg !9899
  %17 = load i8*, i8** %base, align 8, !dbg !9900, !tbaa !2645
  %18 = load i64, i64* %baselen, align 8, !dbg !9901, !tbaa !3285
  %add.ptr7 = getelementptr inbounds i8, i8* %17, i64 %18, !dbg !9902
  %call8 = call i8* @strcpy(i8* %add.ptr7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.214, i64 0, i64 0)) #9, !dbg !9903
  %19 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9904, !tbaa !2645
  %tobool9 = icmp ne %struct.__dirstream* %19, null, !dbg !9904
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !9906

if.then10:                                        ; preds = %if.end
  %20 = load i32, i32* %result, align 4, !dbg !9907, !tbaa !3292
  store i32 %20, i32* %retval, align 4, !dbg !9908
  br label %return, !dbg !9908

if.end11:                                         ; preds = %if.end
  %21 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9909, !tbaa !2645
  %22 = load %struct.__dirstream**, %struct.__dirstream*** %dirpp.addr, align 8, !dbg !9910, !tbaa !2645
  store %struct.__dirstream* %21, %struct.__dirstream** %22, align 8, !dbg !9911, !tbaa !2645, !ctir !693
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.then
  br label %while.cond, !dbg !9912

while.cond:                                       ; preds = %while.end, %if.then73, %if.then38, %if.then26, %if.then18, %if.end12
  %23 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !9913, !tbaa !2645
  %call13 = call %struct.dirent* @readdir(%struct.__dirstream* %23), !dbg !9914
  store %struct.dirent* %call13, %struct.dirent** %dp, align 8, !dbg !9915, !tbaa !2645
  %cmp14 = icmp ne %struct.dirent* %call13, null, !dbg !9916
  br i1 %cmp14, label %while.body, label %while.end109, !dbg !9912

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8** %p, metadata !9917, metadata !DIExpression()), !dbg !9919
  call void @llvm.dbg.declare(metadata i8** %q, metadata !9920, metadata !DIExpression()), !dbg !9921
  call void @llvm.dbg.declare(metadata i8* %all_9s, metadata !9922, metadata !DIExpression()), !dbg !9923
  call void @llvm.dbg.declare(metadata i64* %versionlen, metadata !9924, metadata !DIExpression()), !dbg !9925
  %24 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !9926, !tbaa !2645
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %24, i32 0, i32 4, !dbg !9926, !ctir !701
  %arraydecay15 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !9926
  %call16 = call i64 @strlen(i8* %arraydecay15) #14, !dbg !9926
  %25 = load i64, i64* %baselen, align 8, !dbg !9928, !tbaa !3285
  %add = add i64 %25, 4, !dbg !9929
  %cmp17 = icmp ult i64 %call16, %add, !dbg !9930
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !9931

if.then18:                                        ; preds = %while.body
  br label %while.cond, !dbg !9932, !llvm.loop !9933

if.end19:                                         ; preds = %while.body
  %26 = load i8*, i8** %buf, align 8, !dbg !9935, !tbaa !2645
  %27 = load i64, i64* %base_offset.addr, align 8, !dbg !9937, !tbaa !3285
  %add.ptr20 = getelementptr inbounds i8, i8* %26, i64 %27, !dbg !9938
  %28 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !9939, !tbaa !2645
  %d_name21 = getelementptr inbounds %struct.dirent, %struct.dirent* %28, i32 0, i32 4, !dbg !9940, !ctir !701
  %arraydecay22 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name21, i64 0, i64 0, !dbg !9939
  %29 = load i64, i64* %baselen, align 8, !dbg !9941, !tbaa !3285
  %add23 = add i64 %29, 2, !dbg !9942
  %call24 = call i32 @memcmp(i8* %add.ptr20, i8* %arraydecay22, i64 %add23) #14, !dbg !9943
  %cmp25 = icmp ne i32 %call24, 0, !dbg !9944
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !9945

if.then26:                                        ; preds = %if.end19
  br label %while.cond, !dbg !9946, !llvm.loop !9933

if.end27:                                         ; preds = %if.end19
  %30 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !9947, !tbaa !2645
  %d_name28 = getelementptr inbounds %struct.dirent, %struct.dirent* %30, i32 0, i32 4, !dbg !9948, !ctir !701
  %arraydecay29 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name28, i64 0, i64 0, !dbg !9947
  %31 = load i64, i64* %baselen, align 8, !dbg !9949, !tbaa !3285
  %add.ptr30 = getelementptr inbounds i8, i8* %arraydecay29, i64 %31, !dbg !9950
  %add.ptr31 = getelementptr inbounds i8, i8* %add.ptr30, i64 2, !dbg !9951
  store i8* %add.ptr31, i8** %p, align 8, !dbg !9952, !tbaa !2645
  %32 = load i8*, i8** %p, align 8, !dbg !9953, !tbaa !2645
  %33 = load i8, i8* %32, align 1, !dbg !9955, !tbaa !3292, !ctir !181
  %conv = sext i8 %33 to i32, !dbg !9955
  %cmp32 = icmp sle i32 49, %conv, !dbg !9956
  br i1 %cmp32, label %land.lhs.true34, label %if.then38, !dbg !9957

land.lhs.true34:                                  ; preds = %if.end27
  %34 = load i8*, i8** %p, align 8, !dbg !9958, !tbaa !2645
  %35 = load i8, i8* %34, align 1, !dbg !9959, !tbaa !3292, !ctir !181
  %conv35 = sext i8 %35 to i32, !dbg !9959
  %cmp36 = icmp sle i32 %conv35, 57, !dbg !9960
  br i1 %cmp36, label %if.end39, label %if.then38, !dbg !9961

if.then38:                                        ; preds = %land.lhs.true34, %if.end27
  br label %while.cond, !dbg !9962, !llvm.loop !9933

if.end39:                                         ; preds = %land.lhs.true34
  %36 = load i8*, i8** %p, align 8, !dbg !9963, !tbaa !2645
  %37 = load i8, i8* %36, align 1, !dbg !9964, !tbaa !3292, !ctir !181
  %conv40 = sext i8 %37 to i32, !dbg !9964
  %cmp41 = icmp eq i32 %conv40, 57, !dbg !9965
  %frombool = zext i1 %cmp41 to i8, !dbg !9966
  store i8 %frombool, i8* %all_9s, align 1, !dbg !9966, !tbaa !2739
  store i64 1, i64* %versionlen, align 8, !dbg !9967, !tbaa !3285
  br label %for.cond, !dbg !9969

for.cond:                                         ; preds = %for.inc, %if.end39
  %38 = load i8*, i8** %p, align 8, !dbg !9970, !tbaa !2645
  %39 = load i64, i64* %versionlen, align 8, !dbg !9970, !tbaa !3285
  %arrayidx = getelementptr inbounds i8, i8* %38, i64 %39, !dbg !9970, !ctir !180
  %40 = load i8, i8* %arrayidx, align 1, !dbg !9970, !tbaa !3292
  %conv43 = sext i8 %40 to i32, !dbg !9970
  %sub = sub i32 %conv43, 48, !dbg !9970
  %cmp44 = icmp ule i32 %sub, 9, !dbg !9970
  br i1 %cmp44, label %for.body, label %for.end, !dbg !9972

for.body:                                         ; preds = %for.cond
  %41 = load i8*, i8** %p, align 8, !dbg !9973, !tbaa !2645
  %42 = load i64, i64* %versionlen, align 8, !dbg !9974, !tbaa !3285
  %arrayidx46 = getelementptr inbounds i8, i8* %41, i64 %42, !dbg !9973, !ctir !180
  %43 = load i8, i8* %arrayidx46, align 1, !dbg !9973, !tbaa !3292
  %conv47 = sext i8 %43 to i32, !dbg !9973
  %cmp48 = icmp eq i32 %conv47, 57, !dbg !9975
  %conv49 = zext i1 %cmp48 to i32, !dbg !9975
  %44 = load i8, i8* %all_9s, align 1, !dbg !9976, !tbaa !2739
  %tobool50 = trunc i8 %44 to i1, !dbg !9976
  %conv51 = zext i1 %tobool50 to i32, !dbg !9976
  %and = and i32 %conv51, %conv49, !dbg !9976
  %tobool52 = icmp ne i32 %and, 0, !dbg !9976
  %frombool53 = zext i1 %tobool52 to i8, !dbg !9976
  store i8 %frombool53, i8* %all_9s, align 1, !dbg !9976, !tbaa !2739
  br label %for.inc, !dbg !9977

for.inc:                                          ; preds = %for.body
  %45 = load i64, i64* %versionlen, align 8, !dbg !9978, !tbaa !3285
  %inc = add i64 %45, 1, !dbg !9978
  store i64 %inc, i64* %versionlen, align 8, !dbg !9978, !tbaa !3285
  br label %for.cond, !dbg !9979, !llvm.loop !9980

for.end:                                          ; preds = %for.cond
  %46 = load i8*, i8** %p, align 8, !dbg !9982, !tbaa !2645
  %47 = load i64, i64* %versionlen, align 8, !dbg !9984, !tbaa !3285
  %arrayidx54 = getelementptr inbounds i8, i8* %46, i64 %47, !dbg !9982, !ctir !180
  %48 = load i8, i8* %arrayidx54, align 1, !dbg !9982, !tbaa !3292
  %conv55 = sext i8 %48 to i32, !dbg !9982
  %cmp56 = icmp eq i32 %conv55, 126, !dbg !9985
  br i1 %cmp56, label %land.lhs.true58, label %if.then73, !dbg !9986

land.lhs.true58:                                  ; preds = %for.end
  %49 = load i8*, i8** %p, align 8, !dbg !9987, !tbaa !2645
  %50 = load i64, i64* %versionlen, align 8, !dbg !9988, !tbaa !3285
  %add59 = add i64 %50, 1, !dbg !9989
  %arrayidx60 = getelementptr inbounds i8, i8* %49, i64 %add59, !dbg !9987, !ctir !180
  %51 = load i8, i8* %arrayidx60, align 1, !dbg !9987, !tbaa !3292
  %tobool61 = icmp ne i8 %51, 0, !dbg !9987
  br i1 %tobool61, label %if.then73, label %land.lhs.true62, !dbg !9990

land.lhs.true62:                                  ; preds = %land.lhs.true58
  %52 = load i64, i64* %versionlenmax, align 8, !dbg !9991, !tbaa !3285
  %53 = load i64, i64* %versionlen, align 8, !dbg !9992, !tbaa !3285
  %cmp63 = icmp ult i64 %52, %53, !dbg !9993
  br i1 %cmp63, label %if.end74, label %lor.lhs.false, !dbg !9994

lor.lhs.false:                                    ; preds = %land.lhs.true62
  %54 = load i64, i64* %versionlenmax, align 8, !dbg !9995, !tbaa !3285
  %55 = load i64, i64* %versionlen, align 8, !dbg !9996, !tbaa !3285
  %cmp65 = icmp eq i64 %54, %55, !dbg !9997
  br i1 %cmp65, label %land.lhs.true67, label %if.then73, !dbg !9998

land.lhs.true67:                                  ; preds = %lor.lhs.false
  %56 = load i8*, i8** %buf, align 8, !dbg !9999, !tbaa !2645
  %57 = load i64, i64* %filelen.addr, align 8, !dbg !10000, !tbaa !3285
  %add.ptr68 = getelementptr inbounds i8, i8* %56, i64 %57, !dbg !10001
  %add.ptr69 = getelementptr inbounds i8, i8* %add.ptr68, i64 2, !dbg !10002
  %58 = load i8*, i8** %p, align 8, !dbg !10003, !tbaa !2645
  %59 = load i64, i64* %versionlen, align 8, !dbg !10004, !tbaa !3285
  %call70 = call i32 @memcmp(i8* %add.ptr69, i8* %58, i64 %59) #14, !dbg !10005
  %cmp71 = icmp sle i32 %call70, 0, !dbg !10006
  br i1 %cmp71, label %if.end74, label %if.then73, !dbg !10007

if.then73:                                        ; preds = %land.lhs.true67, %lor.lhs.false, %land.lhs.true58, %for.end
  br label %while.cond, !dbg !10008, !llvm.loop !9933

if.end74:                                         ; preds = %land.lhs.true67, %land.lhs.true62
  %60 = load i8, i8* %all_9s, align 1, !dbg !10009, !tbaa !2739
  %tobool75 = trunc i8 %60 to i1, !dbg !10009
  %conv76 = zext i1 %tobool75 to i64, !dbg !10009
  %61 = load i64, i64* %versionlen, align 8, !dbg !10010, !tbaa !3285
  %add77 = add i64 %conv76, %61, !dbg !10011
  store i64 %add77, i64* %versionlenmax, align 8, !dbg !10012, !tbaa !3285
  %62 = load i8, i8* %all_9s, align 1, !dbg !10013, !tbaa !2739
  %tobool78 = trunc i8 %62 to i1, !dbg !10013
  %63 = zext i1 %tobool78 to i64, !dbg !10013
  %cond = select i1 %tobool78, i32 1, i32 0, !dbg !10013
  store i32 %cond, i32* %result, align 4, !dbg !10014, !tbaa !3292
  call void @llvm.dbg.declare(metadata i64* %new_buffer_size, metadata !10015, metadata !DIExpression()), !dbg !10016
  %64 = load i64, i64* %filelen.addr, align 8, !dbg !10017, !tbaa !3285
  %add80 = add i64 %64, 2, !dbg !10018
  %65 = load i64, i64* %versionlenmax, align 8, !dbg !10019, !tbaa !3285
  %add81 = add i64 %add80, %65, !dbg !10020
  %add82 = add i64 %add81, 2, !dbg !10021
  store i64 %add82, i64* %new_buffer_size, align 8, !dbg !10016, !tbaa !3285
  %66 = load i64, i64* %buffer_size.addr, align 8, !dbg !10022, !tbaa !3285
  %67 = load i64, i64* %new_buffer_size, align 8, !dbg !10024, !tbaa !3285
  %cmp83 = icmp ult i64 %66, %67, !dbg !10025
  br i1 %cmp83, label %if.then85, label %if.end94, !dbg !10026

if.then85:                                        ; preds = %if.end74
  %68 = load i64, i64* %new_buffer_size, align 8, !dbg !10027, !tbaa !3285
  %cmp86 = icmp ult i64 4611686018427387903, %68, !dbg !10027
  br i1 %cmp86, label %if.end89, label %if.then88, !dbg !10030

if.then88:                                        ; preds = %if.then85
  %69 = load i64, i64* %new_buffer_size, align 8, !dbg !10031, !tbaa !3285
  %mul = mul i64 %69, 2, !dbg !10031
  store i64 %mul, i64* %new_buffer_size, align 8, !dbg !10031, !tbaa !3285
  br label %if.end89, !dbg !10032

if.end89:                                         ; preds = %if.then88, %if.then85
  call void @llvm.dbg.declare(metadata i8** %new_buf, metadata !10033, metadata !DIExpression()), !dbg !10034
  %70 = load i8*, i8** %buf, align 8, !dbg !10035, !tbaa !2645
  %71 = load i64, i64* %new_buffer_size, align 8, !dbg !10036, !tbaa !3285
  %call90 = call i8* @realloc(i8* %70, i64 %71) #9, !dbg !10037
  store i8* %call90, i8** %new_buf, align 8, !dbg !10034, !tbaa !2645
  %72 = load i8*, i8** %new_buf, align 8, !dbg !10038, !tbaa !2645
  %tobool91 = icmp ne i8* %72, null, !dbg !10038
  br i1 %tobool91, label %if.end93, label %if.then92, !dbg !10040

if.then92:                                        ; preds = %if.end89
  %73 = load i8*, i8** %buf, align 8, !dbg !10041, !tbaa !2645
  %74 = load i8**, i8*** %buffer.addr, align 8, !dbg !10043, !tbaa !2645
  store i8* %73, i8** %74, align 8, !dbg !10044, !tbaa !2645, !ctir !9
  store i32 3, i32* %retval, align 4, !dbg !10045
  br label %return, !dbg !10045

if.end93:                                         ; preds = %if.end89
  %75 = load i8*, i8** %new_buf, align 8, !dbg !10046, !tbaa !2645
  store i8* %75, i8** %buf, align 8, !dbg !10047, !tbaa !2645
  %76 = load i64, i64* %new_buffer_size, align 8, !dbg !10048, !tbaa !3285
  store i64 %76, i64* %buffer_size.addr, align 8, !dbg !10049, !tbaa !3285
  br label %if.end94, !dbg !10050

if.end94:                                         ; preds = %if.end93, %if.end74
  %77 = load i8*, i8** %buf, align 8, !dbg !10051, !tbaa !2645
  %78 = load i64, i64* %filelen.addr, align 8, !dbg !10052, !tbaa !3285
  %add.ptr95 = getelementptr inbounds i8, i8* %77, i64 %78, !dbg !10053
  store i8* %add.ptr95, i8** %q, align 8, !dbg !10054, !tbaa !2645
  %79 = load i8*, i8** %q, align 8, !dbg !10055, !tbaa !2645
  %incdec.ptr = getelementptr inbounds i8, i8* %79, i32 1, !dbg !10055
  store i8* %incdec.ptr, i8** %q, align 8, !dbg !10055, !tbaa !2645
  store i8 46, i8* %79, align 1, !dbg !10056, !tbaa !3292, !ctir !10
  %80 = load i8*, i8** %q, align 8, !dbg !10057, !tbaa !2645
  %incdec.ptr96 = getelementptr inbounds i8, i8* %80, i32 1, !dbg !10057
  store i8* %incdec.ptr96, i8** %q, align 8, !dbg !10057, !tbaa !2645
  store i8 126, i8* %80, align 1, !dbg !10058, !tbaa !3292, !ctir !10
  %81 = load i8*, i8** %q, align 8, !dbg !10059, !tbaa !2645
  store i8 48, i8* %81, align 1, !dbg !10060, !tbaa !3292, !ctir !10
  %82 = load i8, i8* %all_9s, align 1, !dbg !10061, !tbaa !2739
  %tobool97 = trunc i8 %82 to i1, !dbg !10061
  %conv98 = zext i1 %tobool97 to i32, !dbg !10061
  %83 = load i8*, i8** %q, align 8, !dbg !10062, !tbaa !2645
  %idx.ext = sext i32 %conv98 to i64, !dbg !10062
  %add.ptr99 = getelementptr inbounds i8, i8* %83, i64 %idx.ext, !dbg !10062
  store i8* %add.ptr99, i8** %q, align 8, !dbg !10062, !tbaa !2645
  %84 = load i8*, i8** %q, align 8, !dbg !10063, !tbaa !2645
  %85 = load i8*, i8** %p, align 8, !dbg !10064, !tbaa !2645
  %86 = load i64, i64* %versionlen, align 8, !dbg !10065, !tbaa !3285
  %add100 = add i64 %86, 2, !dbg !10066
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %84, i8* align 1 %85, i64 %add100, i1 false), !dbg !10067
  %87 = load i64, i64* %versionlen, align 8, !dbg !10068, !tbaa !3285
  %88 = load i8*, i8** %q, align 8, !dbg !10069, !tbaa !2645
  %add.ptr101 = getelementptr inbounds i8, i8* %88, i64 %87, !dbg !10069
  store i8* %add.ptr101, i8** %q, align 8, !dbg !10069, !tbaa !2645
  br label %while.cond102, !dbg !10070

while.cond102:                                    ; preds = %while.body107, %if.end94
  %89 = load i8*, i8** %q, align 8, !dbg !10071, !tbaa !2645
  %incdec.ptr103 = getelementptr inbounds i8, i8* %89, i32 -1, !dbg !10071
  store i8* %incdec.ptr103, i8** %q, align 8, !dbg !10071, !tbaa !2645
  %90 = load i8, i8* %incdec.ptr103, align 1, !dbg !10072, !tbaa !3292, !ctir !10
  %conv104 = sext i8 %90 to i32, !dbg !10072
  %cmp105 = icmp eq i32 %conv104, 57, !dbg !10073
  br i1 %cmp105, label %while.body107, label %while.end, !dbg !10070

while.body107:                                    ; preds = %while.cond102
  %91 = load i8*, i8** %q, align 8, !dbg !10074, !tbaa !2645
  store i8 48, i8* %91, align 1, !dbg !10075, !tbaa !3292, !ctir !10
  br label %while.cond102, !dbg !10070, !llvm.loop !10076

while.end:                                        ; preds = %while.cond102
  %92 = load i8*, i8** %q, align 8, !dbg !10078, !tbaa !2645
  %93 = load i8, i8* %92, align 1, !dbg !10079, !tbaa !3292, !ctir !10
  %inc108 = add i8 %93, 1, !dbg !10079
  store i8 %inc108, i8* %92, align 1, !dbg !10079, !tbaa !3292, !ctir !10
  br label %while.cond, !dbg !9912, !llvm.loop !9933

while.end109:                                     ; preds = %while.cond
  %94 = load i8*, i8** %buf, align 8, !dbg !10080, !tbaa !2645
  %95 = load i8**, i8*** %buffer.addr, align 8, !dbg !10081, !tbaa !2645
  store i8* %94, i8** %95, align 8, !dbg !10082, !tbaa !2645, !ctir !9
  %96 = load i32, i32* %result, align 4, !dbg !10083, !tbaa !3292
  store i32 %96, i32* %retval, align 4, !dbg !10084
  br label %return, !dbg !10084

return:                                           ; preds = %while.end109, %if.then92, %if.then10
  %97 = load i32, i32* %retval, align 4, !dbg !10085
  ret i32 %97, !dbg !10085
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @check_extension(i8* %file, i64 %filelen, i8 signext %e, i32 %dir_fd, i64* %base_max) #4 !dbg !10086 !ctir !710 {
entry:
  %file.addr = alloca i8*, align 8
  %filelen.addr = alloca i64, align 8
  %e.addr = alloca i8, align 1
  %dir_fd.addr = alloca i32, align 4
  %base_max.addr = alloca i64*, align 8
  %base = alloca i8*, align 8, !ctir !9
  %baselen = alloca i64, align 8, !ctir !55
  %baselen_max = alloca i64, align 8, !ctir !55
  %name_max = alloca i64, align 8, !ctir !31
  %tmp = alloca [2 x i8], align 1, !ctir !709
  store i8* %file, i8** %file.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10087, metadata !DIExpression()), !dbg !10088
  store i64 %filelen, i64* %filelen.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %filelen.addr, metadata !10089, metadata !DIExpression()), !dbg !10090
  store i8 %e, i8* %e.addr, align 1, !tbaa !3292
  call void @llvm.dbg.declare(metadata i8* %e.addr, metadata !10091, metadata !DIExpression()), !dbg !10092
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !10093, metadata !DIExpression()), !dbg !10094
  store i64* %base_max, i64** %base_max.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i64** %base_max.addr, metadata !10095, metadata !DIExpression()), !dbg !10096
  call void @llvm.dbg.declare(metadata i8** %base, metadata !10097, metadata !DIExpression()), !dbg !10098
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10099, !tbaa !2645
  %call = call i8* @last_component(i8* %0) #14, !dbg !10100
  store i8* %call, i8** %base, align 8, !dbg !10098, !tbaa !2645
  call void @llvm.dbg.declare(metadata i64* %baselen, metadata !10101, metadata !DIExpression()), !dbg !10102
  %1 = load i8*, i8** %base, align 8, !dbg !10103, !tbaa !2645
  %call1 = call i64 @base_len(i8* %1) #14, !dbg !10104
  store i64 %call1, i64* %baselen, align 8, !dbg !10102, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %baselen_max, metadata !10105, metadata !DIExpression()), !dbg !10106
  store i64 255, i64* %baselen_max, align 8, !dbg !10106, !tbaa !3285
  %2 = load i64, i64* %baselen, align 8, !dbg !10107, !tbaa !3285
  %cmp = icmp ult i64 14, %2, !dbg !10109
  br i1 %cmp, label %if.then, label %if.end27, !dbg !10110

if.then:                                          ; preds = %entry
  %3 = load i64*, i64** %base_max.addr, align 8, !dbg !10111, !tbaa !2645
  %4 = load i64, i64* %3, align 8, !dbg !10114, !tbaa !3285, !ctir !55
  %cmp2 = icmp eq i64 %4, 0, !dbg !10115
  br i1 %cmp2, label %if.then3, label %if.end26, !dbg !10116

if.then3:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i64* %name_max, metadata !10117, metadata !DIExpression()), !dbg !10119
  %5 = load i32, i32* %dir_fd.addr, align 4, !dbg !10120, !tbaa !2632
  %cmp4 = icmp slt i32 %5, 0, !dbg !10122
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !10123

if.then5:                                         ; preds = %if.then3
  call void @llvm.dbg.declare(metadata [2 x i8]* %tmp, metadata !10124, metadata !DIExpression()), !dbg !10126
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !10127
  %6 = load i8*, i8** %base, align 8, !dbg !10128, !tbaa !2645
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay, i8* align 1 %6, i64 2, i1 false), !dbg !10127
  %7 = load i8*, i8** %base, align 8, !dbg !10129, !tbaa !2645
  %call6 = call i8* @strcpy(i8* %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.213, i64 0, i64 0)) #9, !dbg !10130
  %call7 = call i32* @__errno_location() #16, !dbg !10131
  store i32 0, i32* %call7, align 4, !dbg !10132, !tbaa !2632, !ctir !7
  %8 = load i8*, i8** %file.addr, align 8, !dbg !10133, !tbaa !2645
  %call8 = call i64 @pathconf(i8* %8, i32 3) #9, !dbg !10134
  store i64 %call8, i64* %name_max, align 8, !dbg !10135, !tbaa !3285
  %call9 = call i32* @__errno_location() #16, !dbg !10136
  %9 = load i32, i32* %call9, align 4, !dbg !10136, !tbaa !2632, !ctir !7
  %tobool = icmp ne i32 %9, 0, !dbg !10137
  %lnot = xor i1 %tobool, true, !dbg !10137
  %lnot.ext = zext i1 %lnot to i32, !dbg !10137
  %conv = sext i32 %lnot.ext to i64, !dbg !10137
  %10 = load i64, i64* %name_max, align 8, !dbg !10138, !tbaa !3285
  %sub = sub nsw i64 %10, %conv, !dbg !10138
  store i64 %sub, i64* %name_max, align 8, !dbg !10138, !tbaa !3285
  %11 = load i8*, i8** %base, align 8, !dbg !10139, !tbaa !2645
  %arraydecay10 = getelementptr inbounds [2 x i8], [2 x i8]* %tmp, i64 0, i64 0, !dbg !10140
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %arraydecay10, i64 2, i1 false), !dbg !10140
  br label %if.end, !dbg !10141

if.else:                                          ; preds = %if.then3
  %call11 = call i32* @__errno_location() #16, !dbg !10142
  store i32 0, i32* %call11, align 4, !dbg !10144, !tbaa !2632, !ctir !7
  %12 = load i32, i32* %dir_fd.addr, align 4, !dbg !10145, !tbaa !2632
  %call12 = call i64 @fpathconf(i32 %12, i32 3) #9, !dbg !10146
  store i64 %call12, i64* %name_max, align 8, !dbg !10147, !tbaa !3285
  %call13 = call i32* @__errno_location() #16, !dbg !10148
  %13 = load i32, i32* %call13, align 4, !dbg !10148, !tbaa !2632, !ctir !7
  %tobool14 = icmp ne i32 %13, 0, !dbg !10149
  %lnot15 = xor i1 %tobool14, true, !dbg !10149
  %lnot.ext16 = zext i1 %lnot15 to i32, !dbg !10149
  %conv17 = sext i32 %lnot.ext16 to i64, !dbg !10149
  %14 = load i64, i64* %name_max, align 8, !dbg !10150, !tbaa !3285
  %sub18 = sub nsw i64 %14, %conv17, !dbg !10150
  store i64 %sub18, i64* %name_max, align 8, !dbg !10150, !tbaa !3285
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  %15 = load i64, i64* %name_max, align 8, !dbg !10151, !tbaa !3285
  %cmp19 = icmp sle i64 0, %15, !dbg !10152
  br i1 %cmp19, label %land.lhs.true, label %cond.false, !dbg !10153

land.lhs.true:                                    ; preds = %if.end
  %16 = load i64, i64* %name_max, align 8, !dbg !10154, !tbaa !3285
  %cmp21 = icmp ule i64 %16, -1, !dbg !10155
  br i1 %cmp21, label %cond.true, label %cond.false, !dbg !10156

cond.true:                                        ; preds = %land.lhs.true
  %17 = load i64, i64* %name_max, align 8, !dbg !10157, !tbaa !3285
  br label %cond.end, !dbg !10156

cond.false:                                       ; preds = %land.lhs.true, %if.end
  %18 = load i64, i64* %name_max, align 8, !dbg !10158, !tbaa !3285
  %cmp23 = icmp slt i64 %18, -1, !dbg !10159
  %19 = zext i1 %cmp23 to i64, !dbg !10158
  %cond = select i1 %cmp23, i64 14, i64 -1, !dbg !10158
  br label %cond.end, !dbg !10156

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond25 = phi i64 [ %17, %cond.true ], [ %cond, %cond.false ], !dbg !10156
  %20 = load i64*, i64** %base_max.addr, align 8, !dbg !10160, !tbaa !2645
  store i64 %cond25, i64* %20, align 8, !dbg !10161, !tbaa !3285, !ctir !55
  br label %if.end26, !dbg !10162

if.end26:                                         ; preds = %cond.end, %if.then
  %21 = load i64*, i64** %base_max.addr, align 8, !dbg !10163, !tbaa !2645
  %22 = load i64, i64* %21, align 8, !dbg !10164, !tbaa !3285, !ctir !55
  store i64 %22, i64* %baselen_max, align 8, !dbg !10165, !tbaa !3285
  br label %if.end27, !dbg !10166

if.end27:                                         ; preds = %if.end26, %entry
  %23 = load i64, i64* %baselen_max, align 8, !dbg !10167, !tbaa !3285
  %24 = load i64, i64* %baselen, align 8, !dbg !10169, !tbaa !3285
  %cmp28 = icmp ult i64 %23, %24, !dbg !10170
  br i1 %cmp28, label %if.then30, label %if.end37, !dbg !10171

if.then30:                                        ; preds = %if.end27
  %25 = load i8*, i8** %file.addr, align 8, !dbg !10172, !tbaa !2645
  %26 = load i64, i64* %filelen.addr, align 8, !dbg !10174, !tbaa !3285
  %add.ptr = getelementptr inbounds i8, i8* %25, i64 %26, !dbg !10175
  %27 = load i8*, i8** %base, align 8, !dbg !10176, !tbaa !2645
  %sub.ptr.lhs.cast = ptrtoint i8* %add.ptr to i64, !dbg !10177
  %sub.ptr.rhs.cast = ptrtoint i8* %27 to i64, !dbg !10177
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10177
  store i64 %sub.ptr.sub, i64* %baselen, align 8, !dbg !10178, !tbaa !3285
  %28 = load i64, i64* %baselen_max, align 8, !dbg !10179, !tbaa !3285
  %29 = load i64, i64* %baselen, align 8, !dbg !10181, !tbaa !3285
  %cmp31 = icmp ule i64 %28, %29, !dbg !10182
  br i1 %cmp31, label %if.then33, label %if.end35, !dbg !10183

if.then33:                                        ; preds = %if.then30
  %30 = load i64, i64* %baselen_max, align 8, !dbg !10184, !tbaa !3285
  %sub34 = sub i64 %30, 1, !dbg !10185
  store i64 %sub34, i64* %baselen, align 8, !dbg !10186, !tbaa !3285
  br label %if.end35, !dbg !10187

if.end35:                                         ; preds = %if.then33, %if.then30
  %31 = load i8, i8* %e.addr, align 1, !dbg !10188, !tbaa !3292
  %32 = load i8*, i8** %base, align 8, !dbg !10189, !tbaa !2645
  %33 = load i64, i64* %baselen, align 8, !dbg !10190, !tbaa !3285
  %arrayidx = getelementptr inbounds i8, i8* %32, i64 %33, !dbg !10189, !ctir !9
  store i8 %31, i8* %arrayidx, align 1, !dbg !10191, !tbaa !3292
  %34 = load i8*, i8** %base, align 8, !dbg !10192, !tbaa !2645
  %35 = load i64, i64* %baselen, align 8, !dbg !10193, !tbaa !3285
  %add = add i64 %35, 1, !dbg !10194
  %arrayidx36 = getelementptr inbounds i8, i8* %34, i64 %add, !dbg !10192, !ctir !9
  store i8 0, i8* %arrayidx36, align 1, !dbg !10195, !tbaa !3292
  br label %if.end37, !dbg !10196

if.end37:                                         ; preds = %if.end35, %if.end27
  ret void, !dbg !10197
}

declare dso_local i32 @closedir(%struct.__dirstream*) #3

; Function Attrs: nounwind
declare dso_local i64 @pathconf(i8*, i32) #2

; Function Attrs: nounwind
declare dso_local i64 @fpathconf(i32, i32) #2

; Function Attrs: nounwind
declare dso_local void @rewinddir(%struct.__dirstream*) #2

declare dso_local %struct.dirent* @readdir(%struct.__dirstream*) #3

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @backup_file_rename(i32 %dir_fd, i8* %file, i32 %backup_type) #4 !dbg !10198 !ctir !720 {
entry:
  %dir_fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %backup_type.addr = alloca i32, align 4
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !10200, metadata !DIExpression()), !dbg !10201
  store i8* %file, i8** %file.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10202, metadata !DIExpression()), !dbg !10203
  store i32 %backup_type, i32* %backup_type.addr, align 4, !tbaa !3292
  call void @llvm.dbg.declare(metadata i32* %backup_type.addr, metadata !10204, metadata !DIExpression()), !dbg !10205
  %0 = load i32, i32* %dir_fd.addr, align 4, !dbg !10206, !tbaa !2632
  %1 = load i8*, i8** %file.addr, align 8, !dbg !10207, !tbaa !2645
  %2 = load i32, i32* %backup_type.addr, align 4, !dbg !10208, !tbaa !3292
  %call = call i8* @backupfile_internal(i32 %0, i8* %1, i32 %2, i1 zeroext true), !dbg !10209
  ret i8* %call, !dbg !10210
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @find_backup_file_name(i32 %dir_fd, i8* %file, i32 %backup_type) #4 !dbg !10211 !ctir !720 {
entry:
  %dir_fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %backup_type.addr = alloca i32, align 4
  %result = alloca i8*, align 8, !ctir !9
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !10212, metadata !DIExpression()), !dbg !10213
  store i8* %file, i8** %file.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10214, metadata !DIExpression()), !dbg !10215
  store i32 %backup_type, i32* %backup_type.addr, align 4, !tbaa !3292
  call void @llvm.dbg.declare(metadata i32* %backup_type.addr, metadata !10216, metadata !DIExpression()), !dbg !10217
  call void @llvm.dbg.declare(metadata i8** %result, metadata !10218, metadata !DIExpression()), !dbg !10219
  %0 = load i32, i32* %dir_fd.addr, align 4, !dbg !10220, !tbaa !2632
  %1 = load i8*, i8** %file.addr, align 8, !dbg !10221, !tbaa !2645
  %2 = load i32, i32* %backup_type.addr, align 4, !dbg !10222, !tbaa !3292
  %call = call i8* @backupfile_internal(i32 %0, i8* %1, i32 %2, i1 zeroext false), !dbg !10223
  store i8* %call, i8** %result, align 8, !dbg !10219, !tbaa !2645
  %3 = load i8*, i8** %result, align 8, !dbg !10224, !tbaa !2645
  %tobool = icmp ne i8* %3, null, !dbg !10224
  br i1 %tobool, label %if.end, label %if.then, !dbg !10226

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !10227
  unreachable, !dbg !10227

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %result, align 8, !dbg !10228, !tbaa !2645
  ret i8* %4, !dbg !10229
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_version(i8* %context, i8* %version) #4 !dbg !10230 !ctir !722 {
entry:
  %retval = alloca i32, align 4
  %context.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  store i8* %context, i8** %context.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !10231, metadata !DIExpression()), !dbg !10232
  store i8* %version, i8** %version.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !10233, metadata !DIExpression()), !dbg !10234
  %0 = load i8*, i8** %version.addr, align 8, !dbg !10235, !tbaa !2645
  %cmp = icmp eq i8* %0, null, !dbg !10237
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10238

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %version.addr, align 8, !dbg !10239, !tbaa !2645
  %2 = load i8, i8* %1, align 1, !dbg !10240, !tbaa !3292, !ctir !181
  %conv = sext i8 %2 to i32, !dbg !10240
  %cmp1 = icmp eq i32 %conv, 0, !dbg !10241
  br i1 %cmp1, label %if.then, label %if.else, !dbg !10242

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 2, i32* %retval, align 4, !dbg !10243
  br label %return, !dbg !10243

if.else:                                          ; preds = %lor.lhs.false
  %3 = load i8*, i8** %context.addr, align 8, !dbg !10244, !tbaa !2645
  %4 = load i8*, i8** %version.addr, align 8, !dbg !10244, !tbaa !2645
  %5 = load void ()*, void ()** @argmatch_die, align 8, !dbg !10244, !tbaa !2645
  %call = call i64 @__xargmatch_internal(i8* %3, i8* %4, i8** getelementptr inbounds ([9 x i8*], [9 x i8*]* @backup_args, i64 0, i64 0), i8* bitcast ([8 x i32]* @backup_types to i8*), i64 4, void ()* %5), !dbg !10244
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* @backup_types, i64 0, i64 %call, !dbg !10244, !ctir !724
  %6 = load i32, i32* %arrayidx, align 4, !dbg !10244, !tbaa !3292
  store i32 %6, i32* %retval, align 4, !dbg !10245
  br label %return, !dbg !10245

return:                                           ; preds = %if.else, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !10246
  ret i32 %7, !dbg !10246
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @xget_version(i8* %context, i8* %version) #4 !dbg !10247 !ctir !722 {
entry:
  %retval = alloca i32, align 4
  %context.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  store i8* %context, i8** %context.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !10248, metadata !DIExpression()), !dbg !10249
  store i8* %version, i8** %version.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !10250, metadata !DIExpression()), !dbg !10251
  %0 = load i8*, i8** %version.addr, align 8, !dbg !10252, !tbaa !2645
  %tobool = icmp ne i8* %0, null, !dbg !10252
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !10254

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %version.addr, align 8, !dbg !10255, !tbaa !2645
  %2 = load i8, i8* %1, align 1, !dbg !10256, !tbaa !3292, !ctir !181
  %conv = sext i8 %2 to i32, !dbg !10256
  %tobool1 = icmp ne i32 %conv, 0, !dbg !10256
  br i1 %tobool1, label %if.then, label %if.else, !dbg !10257

if.then:                                          ; preds = %land.lhs.true
  %3 = load i8*, i8** %context.addr, align 8, !dbg !10258, !tbaa !2645
  %4 = load i8*, i8** %version.addr, align 8, !dbg !10259, !tbaa !2645
  %call = call i32 @get_version(i8* %3, i8* %4), !dbg !10260
  store i32 %call, i32* %retval, align 4, !dbg !10261
  br label %return, !dbg !10261

if.else:                                          ; preds = %land.lhs.true, %entry
  %call2 = call i8* @getenv(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.227, i64 0, i64 0)) #9, !dbg !10262
  %call3 = call i32 @get_version(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.228, i64 0, i64 0), i8* %call2), !dbg !10263
  store i32 %call3, i32* %retval, align 4, !dbg !10264
  br label %return, !dbg !10264

return:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !10265
  ret i32 %5, !dbg !10265
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define dso_local i64 @buffer_lcm(i64 %a, i64 %b, i64 %lcm_max) #11 !dbg !10266 !ctir !1530 {
entry:
  %retval = alloca i64, align 8
  %a.addr = alloca i64, align 8
  %b.addr = alloca i64, align 8
  %lcm_max.addr = alloca i64, align 8
  %size = alloca i64, align 8, !ctir !55
  %lcm = alloca i64, align 8, !ctir !55
  %m = alloca i64, align 8, !ctir !55
  %n = alloca i64, align 8, !ctir !55
  %q = alloca i64, align 8, !ctir !55
  %r = alloca i64, align 8, !ctir !55
  store i64 %a, i64* %a.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !10268, metadata !DIExpression()), !dbg !10269
  store i64 %b, i64* %b.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !10270, metadata !DIExpression()), !dbg !10271
  store i64 %lcm_max, i64* %lcm_max.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %lcm_max.addr, metadata !10272, metadata !DIExpression()), !dbg !10273
  call void @llvm.dbg.declare(metadata i64* %size, metadata !10274, metadata !DIExpression()), !dbg !10275
  %0 = load i64, i64* %a.addr, align 8, !dbg !10276, !tbaa !3285
  %tobool = icmp ne i64 %0, 0, !dbg !10276
  br i1 %tobool, label %if.else, label %if.then, !dbg !10278

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %b.addr, align 8, !dbg !10279, !tbaa !3285
  %tobool1 = icmp ne i64 %1, 0, !dbg !10279
  br i1 %tobool1, label %cond.true, label %cond.false, !dbg !10279

cond.true:                                        ; preds = %if.then
  %2 = load i64, i64* %b.addr, align 8, !dbg !10280, !tbaa !3285
  br label %cond.end, !dbg !10279

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !10279

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ 8192, %cond.false ], !dbg !10279
  store i64 %cond, i64* %size, align 8, !dbg !10281, !tbaa !3285
  br label %if.end9, !dbg !10282

if.else:                                          ; preds = %entry
  %3 = load i64, i64* %b.addr, align 8, !dbg !10283, !tbaa !3285
  %tobool2 = icmp ne i64 %3, 0, !dbg !10283
  br i1 %tobool2, label %if.then3, label %if.end8, !dbg !10286

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i64* %lcm, metadata !10287, metadata !DIExpression()), !dbg !10289
  call void @llvm.dbg.declare(metadata i64* %m, metadata !10290, metadata !DIExpression()), !dbg !10291
  call void @llvm.dbg.declare(metadata i64* %n, metadata !10292, metadata !DIExpression()), !dbg !10293
  call void @llvm.dbg.declare(metadata i64* %q, metadata !10294, metadata !DIExpression()), !dbg !10295
  call void @llvm.dbg.declare(metadata i64* %r, metadata !10296, metadata !DIExpression()), !dbg !10297
  %4 = load i64, i64* %a.addr, align 8, !dbg !10298, !tbaa !3285
  store i64 %4, i64* %m, align 8, !dbg !10300, !tbaa !3285
  %5 = load i64, i64* %b.addr, align 8, !dbg !10301, !tbaa !3285
  store i64 %5, i64* %n, align 8, !dbg !10302, !tbaa !3285
  br label %for.cond, !dbg !10303

for.cond:                                         ; preds = %for.inc, %if.then3
  %6 = load i64, i64* %m, align 8, !dbg !10304, !tbaa !3285
  %7 = load i64, i64* %n, align 8, !dbg !10306, !tbaa !3285
  %rem = urem i64 %6, %7, !dbg !10307
  store i64 %rem, i64* %r, align 8, !dbg !10308, !tbaa !3285
  %cmp = icmp ne i64 %rem, 0, !dbg !10309
  br i1 %cmp, label %for.body, label %for.end, !dbg !10310

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !10311

for.inc:                                          ; preds = %for.body
  %8 = load i64, i64* %n, align 8, !dbg !10312, !tbaa !3285
  store i64 %8, i64* %m, align 8, !dbg !10313, !tbaa !3285
  %9 = load i64, i64* %r, align 8, !dbg !10314, !tbaa !3285
  store i64 %9, i64* %n, align 8, !dbg !10315, !tbaa !3285
  br label %for.cond, !dbg !10316, !llvm.loop !10317

for.end:                                          ; preds = %for.cond
  %10 = load i64, i64* %a.addr, align 8, !dbg !10319, !tbaa !3285
  %11 = load i64, i64* %n, align 8, !dbg !10320, !tbaa !3285
  %div = udiv i64 %10, %11, !dbg !10321
  store i64 %div, i64* %q, align 8, !dbg !10322, !tbaa !3285
  %12 = load i64, i64* %q, align 8, !dbg !10323, !tbaa !3285
  %13 = load i64, i64* %b.addr, align 8, !dbg !10324, !tbaa !3285
  %mul = mul i64 %12, %13, !dbg !10325
  store i64 %mul, i64* %lcm, align 8, !dbg !10326, !tbaa !3285
  %14 = load i64, i64* %lcm, align 8, !dbg !10327, !tbaa !3285
  %15 = load i64, i64* %lcm_max.addr, align 8, !dbg !10329, !tbaa !3285
  %cmp4 = icmp ule i64 %14, %15, !dbg !10330
  br i1 %cmp4, label %land.lhs.true, label %if.end, !dbg !10331

land.lhs.true:                                    ; preds = %for.end
  %16 = load i64, i64* %lcm, align 8, !dbg !10332, !tbaa !3285
  %17 = load i64, i64* %b.addr, align 8, !dbg !10333, !tbaa !3285
  %div5 = udiv i64 %16, %17, !dbg !10334
  %18 = load i64, i64* %q, align 8, !dbg !10335, !tbaa !3285
  %cmp6 = icmp eq i64 %div5, %18, !dbg !10336
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !10337

if.then7:                                         ; preds = %land.lhs.true
  %19 = load i64, i64* %lcm, align 8, !dbg !10338, !tbaa !3285
  store i64 %19, i64* %retval, align 8, !dbg !10339
  br label %return, !dbg !10339

if.end:                                           ; preds = %land.lhs.true, %for.end
  br label %if.end8, !dbg !10340

if.end8:                                          ; preds = %if.end, %if.else
  %20 = load i64, i64* %a.addr, align 8, !dbg !10341, !tbaa !3285
  store i64 %20, i64* %size, align 8, !dbg !10342, !tbaa !3285
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %cond.end
  %21 = load i64, i64* %size, align 8, !dbg !10343, !tbaa !3285
  %22 = load i64, i64* %lcm_max.addr, align 8, !dbg !10344, !tbaa !3285
  %cmp10 = icmp ule i64 %21, %22, !dbg !10345
  br i1 %cmp10, label %cond.true11, label %cond.false12, !dbg !10343

cond.true11:                                      ; preds = %if.end9
  %23 = load i64, i64* %size, align 8, !dbg !10346, !tbaa !3285
  br label %cond.end13, !dbg !10343

cond.false12:                                     ; preds = %if.end9
  %24 = load i64, i64* %lcm_max.addr, align 8, !dbg !10347, !tbaa !3285
  br label %cond.end13, !dbg !10343

cond.end13:                                       ; preds = %cond.false12, %cond.true11
  %cond14 = phi i64 [ %23, %cond.true11 ], [ %24, %cond.false12 ], !dbg !10343
  store i64 %cond14, i64* %retval, align 8, !dbg !10348
  br label %return, !dbg !10348

return:                                           ; preds = %cond.end13, %if.then7
  %25 = load i64, i64* %retval, align 8, !dbg !10349
  ret i64 %25, !dbg !10349
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdin_set_file_name(i8* %file) #4 !dbg !10350 !ctir !202 {
entry:
  %file.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10351, metadata !DIExpression()), !dbg !10352
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10353, !tbaa !2645
  store i8* %0, i8** @file_name, align 8, !dbg !10354, !tbaa !2645
  ret void, !dbg !10355
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdin() #4 !dbg !10356 !ctir !200 {
entry:
  %fail = alloca i8, align 1, !ctir !142
  %close_error = alloca i8*, align 8, !ctir !180
  call void @llvm.dbg.declare(metadata i8* %fail, metadata !10357, metadata !DIExpression()), !dbg !10358
  store i8 0, i8* %fail, align 1, !dbg !10358, !tbaa !2739
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !10359, !tbaa !2645
  %call = call i64 @freadahead(%struct._IO_FILE* %0) #14, !dbg !10361
  %cmp = icmp ugt i64 %call, 0, !dbg !10362
  br i1 %cmp, label %if.then, label %if.end6, !dbg !10363

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !10364, !tbaa !2645
  %call1 = call i32 @rpl_fseeko(%struct._IO_FILE* %1, i64 0, i32 1), !dbg !10367
  %cmp2 = icmp eq i32 %call1, 0, !dbg !10368
  br i1 %cmp2, label %land.lhs.true, label %if.end, !dbg !10369

land.lhs.true:                                    ; preds = %if.then
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !10370, !tbaa !2645
  %call3 = call i32 @rpl_fflush(%struct._IO_FILE* %2), !dbg !10371
  %cmp4 = icmp ne i32 %call3, 0, !dbg !10372
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !10373

if.then5:                                         ; preds = %land.lhs.true
  store i8 1, i8* %fail, align 1, !dbg !10374, !tbaa !2739
  br label %if.end, !dbg !10375

if.end:                                           ; preds = %if.then5, %land.lhs.true, %if.then
  br label %if.end6, !dbg !10376

if.end6:                                          ; preds = %if.end, %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !10377, !tbaa !2645
  %call7 = call i32 @close_stream(%struct._IO_FILE* %3), !dbg !10379
  %cmp8 = icmp ne i32 %call7, 0, !dbg !10380
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !10381

if.then9:                                         ; preds = %if.end6
  store i8 1, i8* %fail, align 1, !dbg !10382, !tbaa !2739
  br label %if.end10, !dbg !10383

if.end10:                                         ; preds = %if.then9, %if.end6
  %4 = load i8, i8* %fail, align 1, !dbg !10384, !tbaa !2739
  %tobool = trunc i8 %4 to i1, !dbg !10384
  br i1 %tobool, label %if.then11, label %if.end19, !dbg !10386

if.then11:                                        ; preds = %if.end10
  call void @llvm.dbg.declare(metadata i8** %close_error, metadata !10387, metadata !DIExpression()), !dbg !10389
  %call12 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.233, i64 0, i64 0)) #9, !dbg !10390
  store i8* %call12, i8** %close_error, align 8, !dbg !10389, !tbaa !2645
  %5 = load i8*, i8** @file_name, align 8, !dbg !10391, !tbaa !2645
  %tobool13 = icmp ne i8* %5, null, !dbg !10391
  br i1 %tobool13, label %if.then14, label %if.else, !dbg !10393

if.then14:                                        ; preds = %if.then11
  %call15 = call i32* @__errno_location() #16, !dbg !10394
  %6 = load i32, i32* %call15, align 4, !dbg !10394, !tbaa !2632, !ctir !7
  %7 = load i8*, i8** @file_name, align 8, !dbg !10395, !tbaa !2645
  %call16 = call i8* @quotearg_colon(i8* %7), !dbg !10396
  %8 = load i8*, i8** %close_error, align 8, !dbg !10397, !tbaa !2645
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.234, i64 0, i64 0), i8* %call16, i8* %8), !dbg !10398
  br label %if.end18, !dbg !10398

if.else:                                          ; preds = %if.then11
  %call17 = call i32* @__errno_location() #16, !dbg !10399
  %9 = load i32, i32* %call17, align 4, !dbg !10399, !tbaa !2632, !ctir !7
  %10 = load i8*, i8** %close_error, align 8, !dbg !10400, !tbaa !2645
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.235, i64 0, i64 0), i8* %10), !dbg !10401
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then14
  br label %if.end19, !dbg !10402

if.end19:                                         ; preds = %if.end18, %if.end10
  call void @close_stdout(), !dbg !10403
  %11 = load i8, i8* %fail, align 1, !dbg !10404, !tbaa !2739
  %tobool20 = trunc i8 %11 to i1, !dbg !10404
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !10406

if.then21:                                        ; preds = %if.end19
  %12 = load volatile i32, i32* @exit_failure, align 4, !dbg !10407, !tbaa !2632
  call void @_exit(i32 %12) #15, !dbg !10408
  unreachable, !dbg !10408

if.end22:                                         ; preds = %if.end19
  ret void, !dbg !10409
}

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #12

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout_set_file_name(i8* %file) #4 !dbg !10410 !ctir !202 {
entry:
  %file.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10411, metadata !DIExpression()), !dbg !10412
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10413, !tbaa !2645
  store i8* %0, i8** @file_name.236, align 8, !dbg !10414, !tbaa !2645
  ret void, !dbg !10415
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout_set_ignore_EPIPE(i1 zeroext %ignore) #4 !dbg !10416 !ctir !784 {
entry:
  %ignore.addr = alloca i8, align 1
  %frombool = zext i1 %ignore to i8
  store i8 %frombool, i8* %ignore.addr, align 1, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %ignore.addr, metadata !10417, metadata !DIExpression()), !dbg !10418
  %0 = load i8, i8* %ignore.addr, align 1, !dbg !10419, !tbaa !2739
  %tobool = trunc i8 %0 to i1, !dbg !10419
  %frombool1 = zext i1 %tobool to i8, !dbg !10420
  store i8 %frombool1, i8* @ignore_EPIPE, align 1, !dbg !10420, !tbaa !2739
  ret void, !dbg !10421
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @close_stdout() #4 !dbg !10422 !ctir !200 {
entry:
  %write_error = alloca i8*, align 8, !ctir !180
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !10423, !tbaa !2645
  %call = call i32 @close_stream(%struct._IO_FILE* %0), !dbg !10425
  %cmp = icmp ne i32 %call, 0, !dbg !10426
  br i1 %cmp, label %land.lhs.true, label %if.end10, !dbg !10427

land.lhs.true:                                    ; preds = %entry
  %1 = load i8, i8* @ignore_EPIPE, align 1, !dbg !10428, !tbaa !2739
  %tobool = trunc i8 %1 to i1, !dbg !10428
  br i1 %tobool, label %land.lhs.true1, label %if.then, !dbg !10429

land.lhs.true1:                                   ; preds = %land.lhs.true
  %call2 = call i32* @__errno_location() #16, !dbg !10430
  %2 = load i32, i32* %call2, align 4, !dbg !10430, !tbaa !2632, !ctir !7
  %cmp3 = icmp eq i32 %2, 32, !dbg !10431
  br i1 %cmp3, label %if.end10, label %if.then, !dbg !10432

if.then:                                          ; preds = %land.lhs.true1, %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %write_error, metadata !10433, metadata !DIExpression()), !dbg !10435
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.239, i64 0, i64 0)) #9, !dbg !10436
  store i8* %call4, i8** %write_error, align 8, !dbg !10435, !tbaa !2645
  %3 = load i8*, i8** @file_name.236, align 8, !dbg !10437, !tbaa !2645
  %tobool5 = icmp ne i8* %3, null, !dbg !10437
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !10439

if.then6:                                         ; preds = %if.then
  %call7 = call i32* @__errno_location() #16, !dbg !10440
  %4 = load i32, i32* %call7, align 4, !dbg !10440, !tbaa !2632, !ctir !7
  %5 = load i8*, i8** @file_name.236, align 8, !dbg !10441, !tbaa !2645
  %call8 = call i8* @quotearg_colon(i8* %5), !dbg !10442
  %6 = load i8*, i8** %write_error, align 8, !dbg !10443, !tbaa !2645
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.240, i64 0, i64 0), i8* %call8, i8* %6), !dbg !10444
  br label %if.end, !dbg !10444

if.else:                                          ; preds = %if.then
  %call9 = call i32* @__errno_location() #16, !dbg !10445
  %7 = load i32, i32* %call9, align 4, !dbg !10445, !tbaa !2632, !ctir !7
  %8 = load i8*, i8** %write_error, align 8, !dbg !10446, !tbaa !2645
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2.241, i64 0, i64 0), i8* %8), !dbg !10447
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then6
  %9 = load volatile i32, i32* @exit_failure, align 4, !dbg !10448, !tbaa !2632
  call void @_exit(i32 %9) #15, !dbg !10449
  unreachable, !dbg !10449

if.end10:                                         ; preds = %land.lhs.true1, %entry
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !10450, !tbaa !2645
  %call11 = call i32 @close_stream(%struct._IO_FILE* %10), !dbg !10452
  %cmp12 = icmp ne i32 %call11, 0, !dbg !10453
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !10454

if.then13:                                        ; preds = %if.end10
  %11 = load volatile i32, i32* @exit_failure, align 4, !dbg !10455, !tbaa !2632
  call void @_exit(i32 %11) #15, !dbg !10456
  unreachable, !dbg !10456

if.end14:                                         ; preds = %if.end10
  ret void, !dbg !10457
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @dir_name(i8* %file) #4 !dbg !10458 !ctir !218 {
entry:
  %file.addr = alloca i8*, align 8
  %result = alloca i8*, align 8, !ctir !9
  store i8* %file, i8** %file.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10460, metadata !DIExpression()), !dbg !10461
  call void @llvm.dbg.declare(metadata i8** %result, metadata !10462, metadata !DIExpression()), !dbg !10463
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10464, !tbaa !2645
  %call = call i8* @mdir_name(i8* %0), !dbg !10465
  store i8* %call, i8** %result, align 8, !dbg !10463, !tbaa !2645
  %1 = load i8*, i8** %result, align 8, !dbg !10466, !tbaa !2645
  %tobool = icmp ne i8* %1, null, !dbg !10466
  br i1 %tobool, label %if.end, label %if.then, !dbg !10468

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !10469
  unreachable, !dbg !10469

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %result, align 8, !dbg !10470, !tbaa !2645
  ret i8* %2, !dbg !10471
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @dir_len(i8* %file) #10 !dbg !10472 !ctir !1538 {
entry:
  %file.addr = alloca i8*, align 8
  %prefix_length = alloca i64, align 8, !ctir !55
  %length = alloca i64, align 8, !ctir !55
  store i8* %file, i8** %file.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10474, metadata !DIExpression()), !dbg !10475
  call void @llvm.dbg.declare(metadata i64* %prefix_length, metadata !10476, metadata !DIExpression()), !dbg !10477
  store i64 0, i64* %prefix_length, align 8, !dbg !10477, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %length, metadata !10478, metadata !DIExpression()), !dbg !10479
  %0 = load i64, i64* %prefix_length, align 8, !dbg !10480, !tbaa !3285
  %cmp = icmp ne i64 %0, 0, !dbg !10481
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10480

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !10480

cond.false:                                       ; preds = %entry
  %1 = load i8*, i8** %file.addr, align 8, !dbg !10482, !tbaa !2645
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !10482, !ctir !180
  %2 = load i8, i8* %arrayidx, align 1, !dbg !10482, !tbaa !3292
  %conv = sext i8 %2 to i32, !dbg !10482
  %cmp1 = icmp eq i32 %conv, 47, !dbg !10482
  %3 = zext i1 %cmp1 to i64, !dbg !10482
  %cond = select i1 %cmp1, i32 1, i32 0, !dbg !10482
  br label %cond.end, !dbg !10480

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond3 = phi i32 [ 0, %cond.true ], [ %cond, %cond.false ], !dbg !10480
  %conv4 = sext i32 %cond3 to i64, !dbg !10483
  %4 = load i64, i64* %prefix_length, align 8, !dbg !10484, !tbaa !3285
  %add = add i64 %4, %conv4, !dbg !10484
  store i64 %add, i64* %prefix_length, align 8, !dbg !10484, !tbaa !3285
  %5 = load i8*, i8** %file.addr, align 8, !dbg !10485, !tbaa !2645
  %call = call i8* @last_component(i8* %5) #14, !dbg !10487
  %6 = load i8*, i8** %file.addr, align 8, !dbg !10488, !tbaa !2645
  %sub.ptr.lhs.cast = ptrtoint i8* %call to i64, !dbg !10489
  %sub.ptr.rhs.cast = ptrtoint i8* %6 to i64, !dbg !10489
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10489
  store i64 %sub.ptr.sub, i64* %length, align 8, !dbg !10490, !tbaa !3285
  br label %for.cond, !dbg !10491

for.cond:                                         ; preds = %for.inc, %cond.end
  %7 = load i64, i64* %prefix_length, align 8, !dbg !10492, !tbaa !3285
  %8 = load i64, i64* %length, align 8, !dbg !10494, !tbaa !3285
  %cmp5 = icmp ult i64 %7, %8, !dbg !10495
  br i1 %cmp5, label %for.body, label %for.end, !dbg !10496

for.body:                                         ; preds = %for.cond
  %9 = load i8*, i8** %file.addr, align 8, !dbg !10497, !tbaa !2645
  %10 = load i64, i64* %length, align 8, !dbg !10497, !tbaa !3285
  %sub = sub i64 %10, 1, !dbg !10497
  %arrayidx7 = getelementptr inbounds i8, i8* %9, i64 %sub, !dbg !10497, !ctir !180
  %11 = load i8, i8* %arrayidx7, align 1, !dbg !10497, !tbaa !3292
  %conv8 = sext i8 %11 to i32, !dbg !10497
  %cmp9 = icmp eq i32 %conv8, 47, !dbg !10497
  br i1 %cmp9, label %if.end, label %if.then, !dbg !10499

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !10500

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !10497

for.inc:                                          ; preds = %if.end
  %12 = load i64, i64* %length, align 8, !dbg !10501, !tbaa !3285
  %dec = add i64 %12, -1, !dbg !10501
  store i64 %dec, i64* %length, align 8, !dbg !10501, !tbaa !3285
  br label %for.cond, !dbg !10502, !llvm.loop !10503

for.end:                                          ; preds = %if.then, %for.cond
  %13 = load i64, i64* %length, align 8, !dbg !10505, !tbaa !3285
  ret i64 %13, !dbg !10506
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @mdir_name(i8* %file) #4 !dbg !10507 !ctir !218 {
entry:
  %retval = alloca i8*, align 8
  %file.addr = alloca i8*, align 8
  %length = alloca i64, align 8, !ctir !55
  %append_dot = alloca i8, align 1, !ctir !142
  %dir = alloca i8*, align 8, !ctir !9
  store i8* %file, i8** %file.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10508, metadata !DIExpression()), !dbg !10509
  call void @llvm.dbg.declare(metadata i64* %length, metadata !10510, metadata !DIExpression()), !dbg !10511
  %0 = load i8*, i8** %file.addr, align 8, !dbg !10512, !tbaa !2645
  %call = call i64 @dir_len(i8* %0) #14, !dbg !10513
  store i64 %call, i64* %length, align 8, !dbg !10511, !tbaa !3285
  call void @llvm.dbg.declare(metadata i8* %append_dot, metadata !10514, metadata !DIExpression()), !dbg !10515
  %1 = load i64, i64* %length, align 8, !dbg !10516, !tbaa !3285
  %cmp = icmp eq i64 %1, 0, !dbg !10517
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !10518

lor.rhs:                                          ; preds = %entry
  br label %lor.end, !dbg !10518

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ false, %lor.rhs ]
  %frombool = zext i1 %2 to i8, !dbg !10515
  store i8 %frombool, i8* %append_dot, align 1, !dbg !10515, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8** %dir, metadata !10519, metadata !DIExpression()), !dbg !10520
  %3 = load i64, i64* %length, align 8, !dbg !10521, !tbaa !3285
  %4 = load i8, i8* %append_dot, align 1, !dbg !10522, !tbaa !2739
  %tobool = trunc i8 %4 to i1, !dbg !10522
  %conv = zext i1 %tobool to i64, !dbg !10522
  %add = add i64 %3, %conv, !dbg !10523
  %add1 = add i64 %add, 1, !dbg !10524
  %call2 = call noalias i8* @malloc(i64 %add1) #9, !dbg !10525
  store i8* %call2, i8** %dir, align 8, !dbg !10520, !tbaa !2645
  %5 = load i8*, i8** %dir, align 8, !dbg !10526, !tbaa !2645
  %tobool3 = icmp ne i8* %5, null, !dbg !10526
  br i1 %tobool3, label %if.end, label %if.then, !dbg !10528

if.then:                                          ; preds = %lor.end
  store i8* null, i8** %retval, align 8, !dbg !10529
  br label %return, !dbg !10529

if.end:                                           ; preds = %lor.end
  %6 = load i8*, i8** %dir, align 8, !dbg !10530, !tbaa !2645
  %7 = load i8*, i8** %file.addr, align 8, !dbg !10531, !tbaa !2645
  %8 = load i64, i64* %length, align 8, !dbg !10532, !tbaa !3285
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %7, i64 %8, i1 false), !dbg !10533
  %9 = load i8, i8* %append_dot, align 1, !dbg !10534, !tbaa !2739
  %tobool4 = trunc i8 %9 to i1, !dbg !10534
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !10536

if.then5:                                         ; preds = %if.end
  %10 = load i8*, i8** %dir, align 8, !dbg !10537, !tbaa !2645
  %11 = load i64, i64* %length, align 8, !dbg !10538, !tbaa !3285
  %inc = add i64 %11, 1, !dbg !10538
  store i64 %inc, i64* %length, align 8, !dbg !10538, !tbaa !3285
  %arrayidx = getelementptr inbounds i8, i8* %10, i64 %11, !dbg !10537, !ctir !9
  store i8 46, i8* %arrayidx, align 1, !dbg !10539, !tbaa !3292
  br label %if.end6, !dbg !10537

if.end6:                                          ; preds = %if.then5, %if.end
  %12 = load i8*, i8** %dir, align 8, !dbg !10540, !tbaa !2645
  %13 = load i64, i64* %length, align 8, !dbg !10541, !tbaa !3285
  %arrayidx7 = getelementptr inbounds i8, i8* %12, i64 %13, !dbg !10540, !ctir !9
  store i8 0, i8* %arrayidx7, align 1, !dbg !10542, !tbaa !3292
  %14 = load i8*, i8** %dir, align 8, !dbg !10543, !tbaa !2645
  store i8* %14, i8** %retval, align 8, !dbg !10544
  br label %return, !dbg !10544

return:                                           ; preds = %if.end6, %if.then
  %15 = load i8*, i8** %retval, align 8, !dbg !10545
  ret i8* %15, !dbg !10545
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @last_component(i8* %name) #10 !dbg !10546 !ctir !218 {
entry:
  %name.addr = alloca i8*, align 8
  %base = alloca i8*, align 8, !ctir !180
  %p = alloca i8*, align 8, !ctir !180
  %saw_slash = alloca i8, align 1, !ctir !142
  store i8* %name, i8** %name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10548, metadata !DIExpression()), !dbg !10549
  call void @llvm.dbg.declare(metadata i8** %base, metadata !10550, metadata !DIExpression()), !dbg !10551
  %0 = load i8*, i8** %name.addr, align 8, !dbg !10552, !tbaa !2645
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 0, !dbg !10553
  store i8* %add.ptr, i8** %base, align 8, !dbg !10551, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10554, metadata !DIExpression()), !dbg !10555
  call void @llvm.dbg.declare(metadata i8* %saw_slash, metadata !10556, metadata !DIExpression()), !dbg !10557
  store i8 0, i8* %saw_slash, align 1, !dbg !10557, !tbaa !2739
  br label %while.cond, !dbg !10558

while.cond:                                       ; preds = %while.body, %entry
  %1 = load i8*, i8** %base, align 8, !dbg !10559, !tbaa !2645
  %2 = load i8, i8* %1, align 1, !dbg !10559, !tbaa !3292, !ctir !181
  %conv = sext i8 %2 to i32, !dbg !10559
  %cmp = icmp eq i32 %conv, 47, !dbg !10559
  br i1 %cmp, label %while.body, label %while.end, !dbg !10558

while.body:                                       ; preds = %while.cond
  %3 = load i8*, i8** %base, align 8, !dbg !10560, !tbaa !2645
  %incdec.ptr = getelementptr inbounds i8, i8* %3, i32 1, !dbg !10560
  store i8* %incdec.ptr, i8** %base, align 8, !dbg !10560, !tbaa !2645
  br label %while.cond, !dbg !10558, !llvm.loop !10561

while.end:                                        ; preds = %while.cond
  %4 = load i8*, i8** %base, align 8, !dbg !10562, !tbaa !2645
  store i8* %4, i8** %p, align 8, !dbg !10564, !tbaa !2645
  br label %for.cond, !dbg !10565

for.cond:                                         ; preds = %for.inc, %while.end
  %5 = load i8*, i8** %p, align 8, !dbg !10566, !tbaa !2645
  %6 = load i8, i8* %5, align 1, !dbg !10568, !tbaa !3292, !ctir !181
  %tobool = icmp ne i8 %6, 0, !dbg !10569
  br i1 %tobool, label %for.body, label %for.end, !dbg !10569

for.body:                                         ; preds = %for.cond
  %7 = load i8*, i8** %p, align 8, !dbg !10570, !tbaa !2645
  %8 = load i8, i8* %7, align 1, !dbg !10570, !tbaa !3292, !ctir !181
  %conv2 = sext i8 %8 to i32, !dbg !10570
  %cmp3 = icmp eq i32 %conv2, 47, !dbg !10570
  br i1 %cmp3, label %if.then, label %if.else, !dbg !10573

if.then:                                          ; preds = %for.body
  store i8 1, i8* %saw_slash, align 1, !dbg !10574, !tbaa !2739
  br label %if.end7, !dbg !10575

if.else:                                          ; preds = %for.body
  %9 = load i8, i8* %saw_slash, align 1, !dbg !10576, !tbaa !2739
  %tobool5 = trunc i8 %9 to i1, !dbg !10576
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !10578

if.then6:                                         ; preds = %if.else
  %10 = load i8*, i8** %p, align 8, !dbg !10579, !tbaa !2645
  store i8* %10, i8** %base, align 8, !dbg !10581, !tbaa !2645
  store i8 0, i8* %saw_slash, align 1, !dbg !10582, !tbaa !2739
  br label %if.end, !dbg !10583

if.end:                                           ; preds = %if.then6, %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  br label %for.inc, !dbg !10584

for.inc:                                          ; preds = %if.end7
  %11 = load i8*, i8** %p, align 8, !dbg !10585, !tbaa !2645
  %incdec.ptr8 = getelementptr inbounds i8, i8* %11, i32 1, !dbg !10585
  store i8* %incdec.ptr8, i8** %p, align 8, !dbg !10585, !tbaa !2645
  br label %for.cond, !dbg !10586, !llvm.loop !10587

for.end:                                          ; preds = %for.cond
  %12 = load i8*, i8** %base, align 8, !dbg !10589, !tbaa !2645
  ret i8* %12, !dbg !10590
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @base_len(i8* %name) #10 !dbg !10591 !ctir !1538 {
entry:
  %name.addr = alloca i8*, align 8
  %len = alloca i64, align 8, !ctir !55
  %prefix_len = alloca i64, align 8, !ctir !55
  store i8* %name, i8** %name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !10592, metadata !DIExpression()), !dbg !10593
  call void @llvm.dbg.declare(metadata i64* %len, metadata !10594, metadata !DIExpression()), !dbg !10595
  call void @llvm.dbg.declare(metadata i64* %prefix_len, metadata !10596, metadata !DIExpression()), !dbg !10597
  store i64 0, i64* %prefix_len, align 8, !dbg !10597, !tbaa !3285
  %0 = load i8*, i8** %name.addr, align 8, !dbg !10598, !tbaa !2645
  %call = call i64 @strlen(i8* %0) #14, !dbg !10600
  store i64 %call, i64* %len, align 8, !dbg !10601, !tbaa !3285
  br label %for.cond, !dbg !10602

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64, i64* %len, align 8, !dbg !10603, !tbaa !3285
  %cmp = icmp ult i64 1, %1, !dbg !10605
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !10606

land.rhs:                                         ; preds = %for.cond
  %2 = load i8*, i8** %name.addr, align 8, !dbg !10607, !tbaa !2645
  %3 = load i64, i64* %len, align 8, !dbg !10607, !tbaa !3285
  %sub = sub i64 %3, 1, !dbg !10607
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %sub, !dbg !10607, !ctir !180
  %4 = load i8, i8* %arrayidx, align 1, !dbg !10607, !tbaa !3292
  %conv = sext i8 %4 to i32, !dbg !10607
  %cmp1 = icmp eq i32 %conv, 47, !dbg !10607
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %5 = phi i1 [ false, %for.cond ], [ %cmp1, %land.rhs ], !dbg !10608
  br i1 %5, label %for.body, label %for.end, !dbg !10609

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !10610

for.inc:                                          ; preds = %for.body
  %6 = load i64, i64* %len, align 8, !dbg !10611, !tbaa !3285
  %dec = add i64 %6, -1, !dbg !10611
  store i64 %dec, i64* %len, align 8, !dbg !10611, !tbaa !3285
  br label %for.cond, !dbg !10612, !llvm.loop !10613

for.end:                                          ; preds = %land.end
  %7 = load i64, i64* %len, align 8, !dbg !10615, !tbaa !3285
  ret i64 %7, !dbg !10616
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @fdadvise(i32 %fd, i64 %offset, i64 %len, i32 %advice) #4 !dbg !10617 !ctir !1556 {
entry:
  %fd.addr = alloca i32, align 4
  %offset.addr = alloca i64, align 8
  %len.addr = alloca i64, align 8
  %advice.addr = alloca i32, align 4
  %__x = alloca i32, align 4, !ctir !7
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !10619, metadata !DIExpression()), !dbg !10620
  store i64 %offset, i64* %offset.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !10621, metadata !DIExpression()), !dbg !10622
  store i64 %len, i64* %len.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !10623, metadata !DIExpression()), !dbg !10624
  store i32 %advice, i32* %advice.addr, align 4, !tbaa !3292
  call void @llvm.dbg.declare(metadata i32* %advice.addr, metadata !10625, metadata !DIExpression()), !dbg !10626
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !10627, metadata !DIExpression()), !dbg !10629
  %0 = load i32, i32* %fd.addr, align 4, !dbg !10629, !tbaa !2632
  %1 = load i64, i64* %offset.addr, align 8, !dbg !10629, !tbaa !3285
  %2 = load i64, i64* %len.addr, align 8, !dbg !10629, !tbaa !3285
  %3 = load i32, i32* %advice.addr, align 4, !dbg !10629, !tbaa !3292
  %call = call i32 @posix_fadvise(i32 %0, i64 %1, i64 %2, i32 %3) #9, !dbg !10629
  store i32 %call, i32* %__x, align 4, !dbg !10629, !tbaa !2632
  %4 = load i32, i32* %__x, align 4, !dbg !10629, !tbaa !2632
  ret void, !dbg !10630
}

; Function Attrs: nounwind
declare dso_local i32 @posix_fadvise(i32, i64, i64, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @fadvise(%struct._IO_FILE* %fp, i32 %advice) #4 !dbg !10631 !ctir !1559 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %advice.addr = alloca i32, align 4
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !10632, metadata !DIExpression()), !dbg !10633
  store i32 %advice, i32* %advice.addr, align 4, !tbaa !3292
  call void @llvm.dbg.declare(metadata i32* %advice.addr, metadata !10634, metadata !DIExpression()), !dbg !10635
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !10636, !tbaa !2645
  %tobool = icmp ne %struct._IO_FILE* %0, null, !dbg !10636
  br i1 %tobool, label %if.then, label %if.end, !dbg !10638

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !10639, !tbaa !2645
  %call = call i32 @fileno(%struct._IO_FILE* %1) #9, !dbg !10640
  %2 = load i32, i32* %advice.addr, align 4, !dbg !10641, !tbaa !3292
  call void @fdadvise(i32 %call, i64 0, i64 0, i32 %2), !dbg !10642
  br label %if.end, !dbg !10642

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !10643
}

; Function Attrs: nounwind
declare dso_local i32 @fileno(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @open_safer(i8* %file, i32 %flags, ...) #4 !dbg !10644 !ctir !1598 {
entry:
  %file.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %mode = alloca i32, align 4, !ctir !139
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1600
  store i8* %file, i8** %file.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10648, metadata !DIExpression()), !dbg !10649
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10650, metadata !DIExpression()), !dbg !10651
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !10652, metadata !DIExpression()), !dbg !10653
  store i32 0, i32* %mode, align 4, !dbg !10653, !tbaa !2632
  %0 = load i32, i32* %flags.addr, align 4, !dbg !10654, !tbaa !2632
  %and = and i32 %0, 64, !dbg !10656
  %tobool = icmp ne i32 %and, 0, !dbg !10656
  br i1 %tobool, label %if.then, label %if.end, !dbg !10657

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !10658, metadata !DIExpression()), !dbg !10660
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !10661
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !10661
  call void @llvm.va_start(i8* %arraydecay1), !dbg !10661
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !10662
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0, !dbg !10662
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !10662
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !10662
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !10662

vaarg.in_reg:                                     ; preds = %if.then
  %1 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3, !dbg !10662
  %reg_save_area = load i8*, i8** %1, align 16, !dbg !10662
  %2 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !10662
  %3 = bitcast i8* %2 to i32*, !dbg !10662
  %4 = add i32 %gp_offset, 8, !dbg !10662
  store i32 %4, i32* %gp_offset_p, align 16, !dbg !10662
  br label %vaarg.end, !dbg !10662

vaarg.in_mem:                                     ; preds = %if.then
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !10662
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !10662
  %5 = bitcast i8* %overflow_arg_area to i32*, !dbg !10662
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !10662
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !10662
  br label %vaarg.end, !dbg !10662

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %3, %vaarg.in_reg ], [ %5, %vaarg.in_mem ], !dbg !10662
  %6 = load i32, i32* %vaarg.addr, align 4, !dbg !10662
  store i32 %6, i32* %mode, align 4, !dbg !10663, !tbaa !2632
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !10664
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !10664
  call void @llvm.va_end(i8* %arraydecay34), !dbg !10664
  br label %if.end, !dbg !10665

if.end:                                           ; preds = %vaarg.end, %entry
  %7 = load i8*, i8** %file.addr, align 8, !dbg !10666, !tbaa !2645
  %8 = load i32, i32* %flags.addr, align 4, !dbg !10667, !tbaa !2632
  %9 = load i32, i32* %mode, align 4, !dbg !10668, !tbaa !2632
  %call = call i32 (i8*, i32, ...) @open(i8* %7, i32 %8, i32 %9), !dbg !10669
  %call5 = call i32 @fd_safer(i32 %call), !dbg !10670
  ret i32 %call5, !dbg !10671
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @record_file(%struct.hash_table* %ht, i8* nonnull %file, %struct.stat* nonnull %stats) #4 !dbg !10672 !ctir !1612 {
entry:
  %ht.addr = alloca %struct.hash_table*, align 8
  %file.addr = alloca i8*, align 8
  %stats.addr = alloca %struct.stat*, align 8
  %ent = alloca %struct.F_triple*, align 8, !ctir !1637
  %ent_from_table = alloca %struct.F_triple*, align 8, !ctir !1637
  store %struct.hash_table* %ht, %struct.hash_table** %ht.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.hash_table** %ht.addr, metadata !10674, metadata !DIExpression()), !dbg !10675
  store i8* %file, i8** %file.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10676, metadata !DIExpression()), !dbg !10677
  store %struct.stat* %stats, %struct.stat** %stats.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.stat** %stats.addr, metadata !10678, metadata !DIExpression()), !dbg !10679
  call void @llvm.dbg.declare(metadata %struct.F_triple** %ent, metadata !10680, metadata !DIExpression()), !dbg !10681
  %0 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10682, !tbaa !2645
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !10684
  br i1 %cmp, label %if.then, label %if.end, !dbg !10685

if.then:                                          ; preds = %entry
  br label %if.end10, !dbg !10686

if.end:                                           ; preds = %entry
  %call = call noalias i8* @xmalloc(i64 24), !dbg !10687
  %1 = bitcast i8* %call to %struct.F_triple*, !dbg !10687
  store %struct.F_triple* %1, %struct.F_triple** %ent, align 8, !dbg !10688, !tbaa !2645
  %2 = load i8*, i8** %file.addr, align 8, !dbg !10689, !tbaa !2645
  %call1 = call noalias i8* @xstrdup(i8* %2), !dbg !10690
  %3 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10691, !tbaa !2645
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %3, i32 0, i32 0, !dbg !10692, !ctir !1638
  store i8* %call1, i8** %name, align 8, !dbg !10693, !tbaa !10694, !ctir !9
  %4 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10696, !tbaa !2645
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 1, !dbg !10697, !ctir !1615
  %5 = load i64, i64* %st_ino, align 8, !dbg !10697, !tbaa !4781, !ctir !276
  %6 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10698, !tbaa !2645
  %st_ino2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !10699, !ctir !1638
  store i64 %5, i64* %st_ino2, align 8, !dbg !10700, !tbaa !10701, !ctir !441
  %7 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10702, !tbaa !2645
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %7, i32 0, i32 0, !dbg !10703, !ctir !1615
  %8 = load i64, i64* %st_dev, align 8, !dbg !10703, !tbaa !4760, !ctir !274
  %9 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10704, !tbaa !2645
  %st_dev3 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %9, i32 0, i32 2, !dbg !10705, !ctir !1638
  store i64 %8, i64* %st_dev3, align 8, !dbg !10706, !tbaa !10707, !ctir !443
  call void @llvm.dbg.declare(metadata %struct.F_triple** %ent_from_table, metadata !10708, metadata !DIExpression()), !dbg !10710
  %10 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10711, !tbaa !2645
  %11 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10712, !tbaa !2645
  %12 = bitcast %struct.F_triple* %11 to i8*, !dbg !10712
  %call4 = call i8* @hash_insert(%struct.hash_table* %10, i8* %12), !dbg !10713
  %13 = bitcast i8* %call4 to %struct.F_triple*, !dbg !10713
  store %struct.F_triple* %13, %struct.F_triple** %ent_from_table, align 8, !dbg !10710, !tbaa !2645
  %14 = load %struct.F_triple*, %struct.F_triple** %ent_from_table, align 8, !dbg !10714, !tbaa !2645
  %cmp5 = icmp eq %struct.F_triple* %14, null, !dbg !10716
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !10717

if.then6:                                         ; preds = %if.end
  call void @xalloc_die() #15, !dbg !10718
  unreachable, !dbg !10718

if.end7:                                          ; preds = %if.end
  %15 = load %struct.F_triple*, %struct.F_triple** %ent_from_table, align 8, !dbg !10720, !tbaa !2645
  %16 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10722, !tbaa !2645
  %cmp8 = icmp ne %struct.F_triple* %15, %16, !dbg !10723
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !10724

if.then9:                                         ; preds = %if.end7
  %17 = load %struct.F_triple*, %struct.F_triple** %ent, align 8, !dbg !10725, !tbaa !2645
  %18 = bitcast %struct.F_triple* %17 to i8*, !dbg !10725
  call void @triple_free(i8* %18), !dbg !10727
  br label %if.end10, !dbg !10728

if.end10:                                         ; preds = %if.then, %if.then9, %if.end7
  ret void, !dbg !10729
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @seen_file(%struct.hash_table* %ht, i8* %file, %struct.stat* %stats) #4 !dbg !10730 !ctir !1644 {
entry:
  %retval = alloca i1, align 1
  %ht.addr = alloca %struct.hash_table*, align 8
  %file.addr = alloca i8*, align 8
  %stats.addr = alloca %struct.stat*, align 8
  %new_ent = alloca %struct.F_triple, align 8, !ctir !1638
  store %struct.hash_table* %ht, %struct.hash_table** %ht.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.hash_table** %ht.addr, metadata !10731, metadata !DIExpression()), !dbg !10732
  store i8* %file, i8** %file.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !10733, metadata !DIExpression()), !dbg !10734
  store %struct.stat* %stats, %struct.stat** %stats.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.stat** %stats.addr, metadata !10735, metadata !DIExpression()), !dbg !10736
  call void @llvm.dbg.declare(metadata %struct.F_triple* %new_ent, metadata !10737, metadata !DIExpression()), !dbg !10738
  %0 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10739, !tbaa !2645
  %cmp = icmp eq %struct.hash_table* %0, null, !dbg !10741
  br i1 %cmp, label %if.then, label %if.end, !dbg !10742

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !10743
  br label %return, !dbg !10743

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %file.addr, align 8, !dbg !10744, !tbaa !2645
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 0, !dbg !10745, !ctir !1638
  store i8* %1, i8** %name, align 8, !dbg !10746, !tbaa !10694, !ctir !9
  %2 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10747, !tbaa !2645
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 1, !dbg !10748, !ctir !1615
  %3 = load i64, i64* %st_ino, align 8, !dbg !10748, !tbaa !4781, !ctir !276
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 1, !dbg !10749, !ctir !1638
  store i64 %3, i64* %st_ino1, align 8, !dbg !10750, !tbaa !10701, !ctir !441
  %4 = load %struct.stat*, %struct.stat** %stats.addr, align 8, !dbg !10751, !tbaa !2645
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %4, i32 0, i32 0, !dbg !10752, !ctir !1615
  %5 = load i64, i64* %st_dev, align 8, !dbg !10752, !tbaa !4760, !ctir !274
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %new_ent, i32 0, i32 2, !dbg !10753, !ctir !1638
  store i64 %5, i64* %st_dev2, align 8, !dbg !10754, !tbaa !10707, !ctir !443
  %6 = load %struct.hash_table*, %struct.hash_table** %ht.addr, align 8, !dbg !10755, !tbaa !2645
  %7 = bitcast %struct.F_triple* %new_ent to i8*, !dbg !10756
  %call = call i8* @hash_lookup(%struct.hash_table* %6, i8* %7), !dbg !10757
  %tobool = icmp ne i8* %call, null, !dbg !10758
  %lnot = xor i1 %tobool, true, !dbg !10758
  %lnot3 = xor i1 %lnot, true, !dbg !10759
  store i1 %lnot3, i1* %retval, align 1, !dbg !10760
  br label %return, !dbg !10760

return:                                           ; preds = %if.end, %if.then
  %8 = load i1, i1* %retval, align 1, !dbg !10761
  ret i1 %8, !dbg !10761
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @strmode(i32 %mode, i8* %str) #4 !dbg !10762 !ctir !1651 {
entry:
  %mode.addr = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !10764, metadata !DIExpression()), !dbg !10765
  store i8* %str, i8** %str.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !10766, metadata !DIExpression()), !dbg !10767
  %0 = load i32, i32* %mode.addr, align 4, !dbg !10768, !tbaa !2632
  %call = call signext i8 @ftypelet(i32 %0), !dbg !10769
  %1 = load i8*, i8** %str.addr, align 8, !dbg !10770, !tbaa !2645
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !10770, !ctir !9
  store i8 %call, i8* %arrayidx, align 1, !dbg !10771, !tbaa !3292
  %2 = load i32, i32* %mode.addr, align 4, !dbg !10772, !tbaa !2632
  %and = and i32 %2, 256, !dbg !10773
  %tobool = icmp ne i32 %and, 0, !dbg !10772
  %3 = zext i1 %tobool to i64, !dbg !10772
  %cond = select i1 %tobool, i32 114, i32 45, !dbg !10772
  %conv = trunc i32 %cond to i8, !dbg !10772
  %4 = load i8*, i8** %str.addr, align 8, !dbg !10774, !tbaa !2645
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 1, !dbg !10774, !ctir !9
  store i8 %conv, i8* %arrayidx1, align 1, !dbg !10775, !tbaa !3292
  %5 = load i32, i32* %mode.addr, align 4, !dbg !10776, !tbaa !2632
  %and2 = and i32 %5, 128, !dbg !10777
  %tobool3 = icmp ne i32 %and2, 0, !dbg !10776
  %6 = zext i1 %tobool3 to i64, !dbg !10776
  %cond4 = select i1 %tobool3, i32 119, i32 45, !dbg !10776
  %conv5 = trunc i32 %cond4 to i8, !dbg !10776
  %7 = load i8*, i8** %str.addr, align 8, !dbg !10778, !tbaa !2645
  %arrayidx6 = getelementptr inbounds i8, i8* %7, i64 2, !dbg !10778, !ctir !9
  store i8 %conv5, i8* %arrayidx6, align 1, !dbg !10779, !tbaa !3292
  %8 = load i32, i32* %mode.addr, align 4, !dbg !10780, !tbaa !2632
  %and7 = and i32 %8, 2048, !dbg !10781
  %tobool8 = icmp ne i32 %and7, 0, !dbg !10781
  br i1 %tobool8, label %cond.true, label %cond.false, !dbg !10780

cond.true:                                        ; preds = %entry
  %9 = load i32, i32* %mode.addr, align 4, !dbg !10782, !tbaa !2632
  %and9 = and i32 %9, 64, !dbg !10783
  %tobool10 = icmp ne i32 %and9, 0, !dbg !10782
  %10 = zext i1 %tobool10 to i64, !dbg !10782
  %cond11 = select i1 %tobool10, i32 115, i32 83, !dbg !10782
  br label %cond.end, !dbg !10780

cond.false:                                       ; preds = %entry
  %11 = load i32, i32* %mode.addr, align 4, !dbg !10784, !tbaa !2632
  %and12 = and i32 %11, 64, !dbg !10785
  %tobool13 = icmp ne i32 %and12, 0, !dbg !10784
  %12 = zext i1 %tobool13 to i64, !dbg !10784
  %cond14 = select i1 %tobool13, i32 120, i32 45, !dbg !10784
  br label %cond.end, !dbg !10780

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond15 = phi i32 [ %cond11, %cond.true ], [ %cond14, %cond.false ], !dbg !10780
  %conv16 = trunc i32 %cond15 to i8, !dbg !10786
  %13 = load i8*, i8** %str.addr, align 8, !dbg !10787, !tbaa !2645
  %arrayidx17 = getelementptr inbounds i8, i8* %13, i64 3, !dbg !10787, !ctir !9
  store i8 %conv16, i8* %arrayidx17, align 1, !dbg !10788, !tbaa !3292
  %14 = load i32, i32* %mode.addr, align 4, !dbg !10789, !tbaa !2632
  %and18 = and i32 %14, 32, !dbg !10790
  %tobool19 = icmp ne i32 %and18, 0, !dbg !10789
  %15 = zext i1 %tobool19 to i64, !dbg !10789
  %cond20 = select i1 %tobool19, i32 114, i32 45, !dbg !10789
  %conv21 = trunc i32 %cond20 to i8, !dbg !10789
  %16 = load i8*, i8** %str.addr, align 8, !dbg !10791, !tbaa !2645
  %arrayidx22 = getelementptr inbounds i8, i8* %16, i64 4, !dbg !10791, !ctir !9
  store i8 %conv21, i8* %arrayidx22, align 1, !dbg !10792, !tbaa !3292
  %17 = load i32, i32* %mode.addr, align 4, !dbg !10793, !tbaa !2632
  %and23 = and i32 %17, 16, !dbg !10794
  %tobool24 = icmp ne i32 %and23, 0, !dbg !10793
  %18 = zext i1 %tobool24 to i64, !dbg !10793
  %cond25 = select i1 %tobool24, i32 119, i32 45, !dbg !10793
  %conv26 = trunc i32 %cond25 to i8, !dbg !10793
  %19 = load i8*, i8** %str.addr, align 8, !dbg !10795, !tbaa !2645
  %arrayidx27 = getelementptr inbounds i8, i8* %19, i64 5, !dbg !10795, !ctir !9
  store i8 %conv26, i8* %arrayidx27, align 1, !dbg !10796, !tbaa !3292
  %20 = load i32, i32* %mode.addr, align 4, !dbg !10797, !tbaa !2632
  %and28 = and i32 %20, 1024, !dbg !10798
  %tobool29 = icmp ne i32 %and28, 0, !dbg !10798
  br i1 %tobool29, label %cond.true30, label %cond.false34, !dbg !10797

cond.true30:                                      ; preds = %cond.end
  %21 = load i32, i32* %mode.addr, align 4, !dbg !10799, !tbaa !2632
  %and31 = and i32 %21, 8, !dbg !10800
  %tobool32 = icmp ne i32 %and31, 0, !dbg !10799
  %22 = zext i1 %tobool32 to i64, !dbg !10799
  %cond33 = select i1 %tobool32, i32 115, i32 83, !dbg !10799
  br label %cond.end38, !dbg !10797

cond.false34:                                     ; preds = %cond.end
  %23 = load i32, i32* %mode.addr, align 4, !dbg !10801, !tbaa !2632
  %and35 = and i32 %23, 8, !dbg !10802
  %tobool36 = icmp ne i32 %and35, 0, !dbg !10801
  %24 = zext i1 %tobool36 to i64, !dbg !10801
  %cond37 = select i1 %tobool36, i32 120, i32 45, !dbg !10801
  br label %cond.end38, !dbg !10797

cond.end38:                                       ; preds = %cond.false34, %cond.true30
  %cond39 = phi i32 [ %cond33, %cond.true30 ], [ %cond37, %cond.false34 ], !dbg !10797
  %conv40 = trunc i32 %cond39 to i8, !dbg !10803
  %25 = load i8*, i8** %str.addr, align 8, !dbg !10804, !tbaa !2645
  %arrayidx41 = getelementptr inbounds i8, i8* %25, i64 6, !dbg !10804, !ctir !9
  store i8 %conv40, i8* %arrayidx41, align 1, !dbg !10805, !tbaa !3292
  %26 = load i32, i32* %mode.addr, align 4, !dbg !10806, !tbaa !2632
  %and42 = and i32 %26, 4, !dbg !10807
  %tobool43 = icmp ne i32 %and42, 0, !dbg !10806
  %27 = zext i1 %tobool43 to i64, !dbg !10806
  %cond44 = select i1 %tobool43, i32 114, i32 45, !dbg !10806
  %conv45 = trunc i32 %cond44 to i8, !dbg !10806
  %28 = load i8*, i8** %str.addr, align 8, !dbg !10808, !tbaa !2645
  %arrayidx46 = getelementptr inbounds i8, i8* %28, i64 7, !dbg !10808, !ctir !9
  store i8 %conv45, i8* %arrayidx46, align 1, !dbg !10809, !tbaa !3292
  %29 = load i32, i32* %mode.addr, align 4, !dbg !10810, !tbaa !2632
  %and47 = and i32 %29, 2, !dbg !10811
  %tobool48 = icmp ne i32 %and47, 0, !dbg !10810
  %30 = zext i1 %tobool48 to i64, !dbg !10810
  %cond49 = select i1 %tobool48, i32 119, i32 45, !dbg !10810
  %conv50 = trunc i32 %cond49 to i8, !dbg !10810
  %31 = load i8*, i8** %str.addr, align 8, !dbg !10812, !tbaa !2645
  %arrayidx51 = getelementptr inbounds i8, i8* %31, i64 8, !dbg !10812, !ctir !9
  store i8 %conv50, i8* %arrayidx51, align 1, !dbg !10813, !tbaa !3292
  %32 = load i32, i32* %mode.addr, align 4, !dbg !10814, !tbaa !2632
  %and52 = and i32 %32, 512, !dbg !10815
  %tobool53 = icmp ne i32 %and52, 0, !dbg !10815
  br i1 %tobool53, label %cond.true54, label %cond.false58, !dbg !10814

cond.true54:                                      ; preds = %cond.end38
  %33 = load i32, i32* %mode.addr, align 4, !dbg !10816, !tbaa !2632
  %and55 = and i32 %33, 1, !dbg !10817
  %tobool56 = icmp ne i32 %and55, 0, !dbg !10816
  %34 = zext i1 %tobool56 to i64, !dbg !10816
  %cond57 = select i1 %tobool56, i32 116, i32 84, !dbg !10816
  br label %cond.end62, !dbg !10814

cond.false58:                                     ; preds = %cond.end38
  %35 = load i32, i32* %mode.addr, align 4, !dbg !10818, !tbaa !2632
  %and59 = and i32 %35, 1, !dbg !10819
  %tobool60 = icmp ne i32 %and59, 0, !dbg !10818
  %36 = zext i1 %tobool60 to i64, !dbg !10818
  %cond61 = select i1 %tobool60, i32 120, i32 45, !dbg !10818
  br label %cond.end62, !dbg !10814

cond.end62:                                       ; preds = %cond.false58, %cond.true54
  %cond63 = phi i32 [ %cond57, %cond.true54 ], [ %cond61, %cond.false58 ], !dbg !10814
  %conv64 = trunc i32 %cond63 to i8, !dbg !10820
  %37 = load i8*, i8** %str.addr, align 8, !dbg !10821, !tbaa !2645
  %arrayidx65 = getelementptr inbounds i8, i8* %37, i64 9, !dbg !10821, !ctir !9
  store i8 %conv64, i8* %arrayidx65, align 1, !dbg !10822, !tbaa !3292
  %38 = load i8*, i8** %str.addr, align 8, !dbg !10823, !tbaa !2645
  %arrayidx66 = getelementptr inbounds i8, i8* %38, i64 10, !dbg !10823, !ctir !9
  store i8 32, i8* %arrayidx66, align 1, !dbg !10824, !tbaa !3292
  %39 = load i8*, i8** %str.addr, align 8, !dbg !10825, !tbaa !2645
  %arrayidx67 = getelementptr inbounds i8, i8* %39, i64 11, !dbg !10825, !ctir !9
  store i8 0, i8* %arrayidx67, align 1, !dbg !10826, !tbaa !3292
  ret void, !dbg !10827
}

; Function Attrs: noinline nounwind optnone uwtable
define internal signext i8 @ftypelet(i32 %bits) #4 !dbg !10828 !ctir !1678 {
entry:
  %retval = alloca i8, align 1
  %bits.addr = alloca i32, align 4
  store i32 %bits, i32* %bits.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !10829, metadata !DIExpression()), !dbg !10830
  %0 = load i32, i32* %bits.addr, align 4, !dbg !10831, !tbaa !2632
  %and = and i32 %0, 61440, !dbg !10831
  %cmp = icmp eq i32 %and, 32768, !dbg !10831
  br i1 %cmp, label %if.then, label %if.end, !dbg !10833

if.then:                                          ; preds = %entry
  store i8 45, i8* %retval, align 1, !dbg !10834
  br label %return, !dbg !10834

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %bits.addr, align 4, !dbg !10835, !tbaa !2632
  %and1 = and i32 %1, 61440, !dbg !10835
  %cmp2 = icmp eq i32 %and1, 16384, !dbg !10835
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !10837

if.then3:                                         ; preds = %if.end
  store i8 100, i8* %retval, align 1, !dbg !10838
  br label %return, !dbg !10838

if.end4:                                          ; preds = %if.end
  %2 = load i32, i32* %bits.addr, align 4, !dbg !10839, !tbaa !2632
  %and5 = and i32 %2, 61440, !dbg !10839
  %cmp6 = icmp eq i32 %and5, 24576, !dbg !10839
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !10841

if.then7:                                         ; preds = %if.end4
  store i8 98, i8* %retval, align 1, !dbg !10842
  br label %return, !dbg !10842

if.end8:                                          ; preds = %if.end4
  %3 = load i32, i32* %bits.addr, align 4, !dbg !10843, !tbaa !2632
  %and9 = and i32 %3, 61440, !dbg !10843
  %cmp10 = icmp eq i32 %and9, 8192, !dbg !10843
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !10845

if.then11:                                        ; preds = %if.end8
  store i8 99, i8* %retval, align 1, !dbg !10846
  br label %return, !dbg !10846

if.end12:                                         ; preds = %if.end8
  %4 = load i32, i32* %bits.addr, align 4, !dbg !10847, !tbaa !2632
  %and13 = and i32 %4, 61440, !dbg !10847
  %cmp14 = icmp eq i32 %and13, 40960, !dbg !10847
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !10849

if.then15:                                        ; preds = %if.end12
  store i8 108, i8* %retval, align 1, !dbg !10850
  br label %return, !dbg !10850

if.end16:                                         ; preds = %if.end12
  %5 = load i32, i32* %bits.addr, align 4, !dbg !10851, !tbaa !2632
  %and17 = and i32 %5, 61440, !dbg !10851
  %cmp18 = icmp eq i32 %and17, 4096, !dbg !10851
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !10853

if.then19:                                        ; preds = %if.end16
  store i8 112, i8* %retval, align 1, !dbg !10854
  br label %return, !dbg !10854

if.end20:                                         ; preds = %if.end16
  %6 = load i32, i32* %bits.addr, align 4, !dbg !10855, !tbaa !2632
  %and21 = and i32 %6, 61440, !dbg !10855
  %cmp22 = icmp eq i32 %and21, 49152, !dbg !10855
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !10857

if.then23:                                        ; preds = %if.end20
  store i8 115, i8* %retval, align 1, !dbg !10858
  br label %return, !dbg !10858

if.end24:                                         ; preds = %if.end20
  store i8 63, i8* %retval, align 1, !dbg !10859
  br label %return, !dbg !10859

return:                                           ; preds = %if.end24, %if.then23, %if.then19, %if.then15, %if.then11, %if.then7, %if.then3, %if.then
  %7 = load i8, i8* %retval, align 1, !dbg !10860
  ret i8 %7, !dbg !10860
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @filemodestring(%struct.stat* %statp, i8* %str) #4 !dbg !10861 !ctir !1653 {
entry:
  %statp.addr = alloca %struct.stat*, align 8
  %str.addr = alloca i8*, align 8
  store %struct.stat* %statp, %struct.stat** %statp.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.stat** %statp.addr, metadata !10862, metadata !DIExpression()), !dbg !10863
  store i8* %str, i8** %str.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !10864, metadata !DIExpression()), !dbg !10865
  %0 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10866, !tbaa !2645
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 3, !dbg !10867, !ctir !1656
  %1 = load i32, i32* %st_mode, align 8, !dbg !10867, !tbaa !2911, !ctir !140
  %2 = load i8*, i8** %str.addr, align 8, !dbg !10868, !tbaa !2645
  call void @strmode(i32 %1, i8* %2), !dbg !10869
  %3 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10870, !tbaa !2645
  %st_mode1 = getelementptr inbounds %struct.stat, %struct.stat* %3, i32 0, i32 3, !dbg !10870, !ctir !1656
  %4 = load i32, i32* %st_mode1, align 8, !dbg !10870, !tbaa !2911, !ctir !140
  %5 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10870, !tbaa !2645
  %st_mode2 = getelementptr inbounds %struct.stat, %struct.stat* %5, i32 0, i32 3, !dbg !10870, !ctir !1656
  %6 = load i32, i32* %st_mode2, align 8, !dbg !10870, !tbaa !2911, !ctir !140
  %sub = sub i32 %4, %6, !dbg !10870
  %tobool = icmp ne i32 %sub, 0, !dbg !10870
  br i1 %tobool, label %if.then, label %if.else, !dbg !10872

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %str.addr, align 8, !dbg !10873, !tbaa !2645
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 0, !dbg !10873, !ctir !9
  store i8 70, i8* %arrayidx, align 1, !dbg !10874, !tbaa !3292
  br label %if.end18, !dbg !10873

if.else:                                          ; preds = %entry
  %8 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10875, !tbaa !2645
  %st_mode3 = getelementptr inbounds %struct.stat, %struct.stat* %8, i32 0, i32 3, !dbg !10875, !ctir !1656
  %9 = load i32, i32* %st_mode3, align 8, !dbg !10875, !tbaa !2911, !ctir !140
  %10 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10875, !tbaa !2645
  %st_mode4 = getelementptr inbounds %struct.stat, %struct.stat* %10, i32 0, i32 3, !dbg !10875, !ctir !1656
  %11 = load i32, i32* %st_mode4, align 8, !dbg !10875, !tbaa !2911, !ctir !140
  %sub5 = sub i32 %9, %11, !dbg !10875
  %tobool6 = icmp ne i32 %sub5, 0, !dbg !10875
  br i1 %tobool6, label %if.then7, label %if.else9, !dbg !10878

if.then7:                                         ; preds = %if.else
  %12 = load i8*, i8** %str.addr, align 8, !dbg !10879, !tbaa !2645
  %arrayidx8 = getelementptr inbounds i8, i8* %12, i64 0, !dbg !10879, !ctir !9
  store i8 81, i8* %arrayidx8, align 1, !dbg !10880, !tbaa !3292
  br label %if.end17, !dbg !10879

if.else9:                                         ; preds = %if.else
  %13 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10881, !tbaa !2645
  %st_mode10 = getelementptr inbounds %struct.stat, %struct.stat* %13, i32 0, i32 3, !dbg !10881, !ctir !1656
  %14 = load i32, i32* %st_mode10, align 8, !dbg !10881, !tbaa !2911, !ctir !140
  %15 = load %struct.stat*, %struct.stat** %statp.addr, align 8, !dbg !10881, !tbaa !2645
  %st_mode11 = getelementptr inbounds %struct.stat, %struct.stat* %15, i32 0, i32 3, !dbg !10881, !ctir !1656
  %16 = load i32, i32* %st_mode11, align 8, !dbg !10881, !tbaa !2911, !ctir !140
  %sub12 = sub i32 %14, %16, !dbg !10881
  %tobool13 = icmp ne i32 %sub12, 0, !dbg !10881
  br i1 %tobool13, label %if.then14, label %if.else16, !dbg !10883

if.then14:                                        ; preds = %if.else9
  %17 = load i8*, i8** %str.addr, align 8, !dbg !10884, !tbaa !2645
  %arrayidx15 = getelementptr inbounds i8, i8* %17, i64 0, !dbg !10884, !ctir !9
  store i8 83, i8* %arrayidx15, align 1, !dbg !10885, !tbaa !3292
  br label %if.end, !dbg !10884

if.else16:                                        ; preds = %if.else9
  br label %if.end

if.end:                                           ; preds = %if.else16, %if.then14
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then7
  br label %if.end18

if.end18:                                         ; preds = %if.end17, %if.then
  ret void, !dbg !10886
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @file_name_concat(i8* %dir, i8* %base, i8** %base_in_result) #4 !dbg !10887 !ctir !1683 {
entry:
  %dir.addr = alloca i8*, align 8
  %base.addr = alloca i8*, align 8
  %base_in_result.addr = alloca i8**, align 8
  %p = alloca i8*, align 8, !ctir !9
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !10889, metadata !DIExpression()), !dbg !10890
  store i8* %base, i8** %base.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !10891, metadata !DIExpression()), !dbg !10892
  store i8** %base_in_result, i8*** %base_in_result.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8*** %base_in_result.addr, metadata !10893, metadata !DIExpression()), !dbg !10894
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10895, metadata !DIExpression()), !dbg !10896
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !10897, !tbaa !2645
  %1 = load i8*, i8** %base.addr, align 8, !dbg !10898, !tbaa !2645
  %2 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !10899, !tbaa !2645
  %call = call i8* @mfile_name_concat(i8* %0, i8* %1, i8** %2), !dbg !10900
  store i8* %call, i8** %p, align 8, !dbg !10896, !tbaa !2645
  %3 = load i8*, i8** %p, align 8, !dbg !10901, !tbaa !2645
  %cmp = icmp eq i8* %3, null, !dbg !10903
  br i1 %cmp, label %if.then, label %if.end, !dbg !10904

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !10905
  unreachable, !dbg !10905

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %p, align 8, !dbg !10906, !tbaa !2645
  ret i8* %4, !dbg !10907
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @mfile_name_concat(i8* %dir, i8* %base, i8** %base_in_result) #4 !dbg !10908 !ctir !1683 {
entry:
  %retval = alloca i8*, align 8
  %dir.addr = alloca i8*, align 8
  %base.addr = alloca i8*, align 8
  %base_in_result.addr = alloca i8**, align 8
  %dirbase = alloca i8*, align 8, !ctir !180
  %dirbaselen = alloca i64, align 8, !ctir !55
  %dirlen = alloca i64, align 8, !ctir !55
  %baselen = alloca i64, align 8, !ctir !55
  %sep = alloca i8, align 1, !ctir !10
  %p_concat = alloca i8*, align 8, !ctir !9
  %p = alloca i8*, align 8, !ctir !9
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !10910, metadata !DIExpression()), !dbg !10911
  store i8* %base, i8** %base.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %base.addr, metadata !10912, metadata !DIExpression()), !dbg !10913
  store i8** %base_in_result, i8*** %base_in_result.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8*** %base_in_result.addr, metadata !10914, metadata !DIExpression()), !dbg !10915
  call void @llvm.dbg.declare(metadata i8** %dirbase, metadata !10916, metadata !DIExpression()), !dbg !10917
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !10918, !tbaa !2645
  %call = call i8* @last_component(i8* %0) #14, !dbg !10919
  store i8* %call, i8** %dirbase, align 8, !dbg !10917, !tbaa !2645
  call void @llvm.dbg.declare(metadata i64* %dirbaselen, metadata !10920, metadata !DIExpression()), !dbg !10921
  %1 = load i8*, i8** %dirbase, align 8, !dbg !10922, !tbaa !2645
  %call1 = call i64 @base_len(i8* %1) #14, !dbg !10923
  store i64 %call1, i64* %dirbaselen, align 8, !dbg !10921, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %dirlen, metadata !10924, metadata !DIExpression()), !dbg !10925
  %2 = load i8*, i8** %dirbase, align 8, !dbg !10926, !tbaa !2645
  %3 = load i8*, i8** %dir.addr, align 8, !dbg !10927, !tbaa !2645
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !10928
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !10928
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10928
  %4 = load i64, i64* %dirbaselen, align 8, !dbg !10929, !tbaa !3285
  %add = add i64 %sub.ptr.sub, %4, !dbg !10930
  store i64 %add, i64* %dirlen, align 8, !dbg !10925, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %baselen, metadata !10931, metadata !DIExpression()), !dbg !10932
  %5 = load i8*, i8** %base.addr, align 8, !dbg !10933, !tbaa !2645
  %call2 = call i64 @strlen(i8* %5) #14, !dbg !10934
  store i64 %call2, i64* %baselen, align 8, !dbg !10932, !tbaa !3285
  call void @llvm.dbg.declare(metadata i8* %sep, metadata !10935, metadata !DIExpression()), !dbg !10936
  store i8 0, i8* %sep, align 1, !dbg !10936, !tbaa !3292
  %6 = load i64, i64* %dirbaselen, align 8, !dbg !10937, !tbaa !3285
  %tobool = icmp ne i64 %6, 0, !dbg !10937
  br i1 %tobool, label %if.then, label %if.else, !dbg !10939

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %dir.addr, align 8, !dbg !10940, !tbaa !2645
  %8 = load i64, i64* %dirlen, align 8, !dbg !10940, !tbaa !3285
  %sub = sub i64 %8, 1, !dbg !10940
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 %sub, !dbg !10940, !ctir !180
  %9 = load i8, i8* %arrayidx, align 1, !dbg !10940, !tbaa !3292
  %conv = sext i8 %9 to i32, !dbg !10940
  %cmp = icmp eq i32 %conv, 47, !dbg !10940
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !10943

land.lhs.true:                                    ; preds = %if.then
  %10 = load i8*, i8** %base.addr, align 8, !dbg !10944, !tbaa !2645
  %11 = load i8, i8* %10, align 1, !dbg !10944, !tbaa !3292, !ctir !181
  %conv4 = sext i8 %11 to i32, !dbg !10944
  %cmp5 = icmp eq i32 %conv4, 47, !dbg !10944
  br i1 %cmp5, label %if.end, label %if.then7, !dbg !10945

if.then7:                                         ; preds = %land.lhs.true
  store i8 47, i8* %sep, align 1, !dbg !10946, !tbaa !3292
  br label %if.end, !dbg !10947

if.end:                                           ; preds = %if.then7, %land.lhs.true, %if.then
  br label %if.end13, !dbg !10948

if.else:                                          ; preds = %entry
  %12 = load i8*, i8** %base.addr, align 8, !dbg !10949, !tbaa !2645
  %13 = load i8, i8* %12, align 1, !dbg !10949, !tbaa !3292, !ctir !181
  %conv8 = sext i8 %13 to i32, !dbg !10949
  %cmp9 = icmp eq i32 %conv8, 47, !dbg !10949
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !10951

if.then11:                                        ; preds = %if.else
  store i8 46, i8* %sep, align 1, !dbg !10952, !tbaa !3292
  br label %if.end12, !dbg !10954

if.end12:                                         ; preds = %if.then11, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.end
  call void @llvm.dbg.declare(metadata i8** %p_concat, metadata !10955, metadata !DIExpression()), !dbg !10956
  %14 = load i64, i64* %dirlen, align 8, !dbg !10957, !tbaa !3285
  %15 = load i8, i8* %sep, align 1, !dbg !10958, !tbaa !3292
  %conv14 = sext i8 %15 to i32, !dbg !10958
  %cmp15 = icmp ne i32 %conv14, 0, !dbg !10959
  %conv16 = zext i1 %cmp15 to i32, !dbg !10959
  %conv17 = sext i32 %conv16 to i64, !dbg !10960
  %add18 = add i64 %14, %conv17, !dbg !10961
  %16 = load i64, i64* %baselen, align 8, !dbg !10962, !tbaa !3285
  %add19 = add i64 %add18, %16, !dbg !10963
  %add20 = add i64 %add19, 1, !dbg !10964
  %call21 = call noalias i8* @malloc(i64 %add20) #9, !dbg !10965
  store i8* %call21, i8** %p_concat, align 8, !dbg !10956, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %p, metadata !10966, metadata !DIExpression()), !dbg !10967
  %17 = load i8*, i8** %p_concat, align 8, !dbg !10968, !tbaa !2645
  %cmp22 = icmp eq i8* %17, null, !dbg !10970
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !10971

if.then24:                                        ; preds = %if.end13
  store i8* null, i8** %retval, align 8, !dbg !10972
  br label %return, !dbg !10972

if.end25:                                         ; preds = %if.end13
  %18 = load i8*, i8** %p_concat, align 8, !dbg !10973, !tbaa !2645
  %19 = load i8*, i8** %dir.addr, align 8, !dbg !10974, !tbaa !2645
  %20 = load i64, i64* %dirlen, align 8, !dbg !10975, !tbaa !3285
  %call26 = call i8* @mempcpy(i8* %18, i8* %19, i64 %20) #9, !dbg !10976
  store i8* %call26, i8** %p, align 8, !dbg !10977, !tbaa !2645
  %21 = load i8, i8* %sep, align 1, !dbg !10978, !tbaa !3292
  %22 = load i8*, i8** %p, align 8, !dbg !10979, !tbaa !2645
  store i8 %21, i8* %22, align 1, !dbg !10980, !tbaa !3292, !ctir !10
  %23 = load i8, i8* %sep, align 1, !dbg !10981, !tbaa !3292
  %conv27 = sext i8 %23 to i32, !dbg !10981
  %cmp28 = icmp ne i32 %conv27, 0, !dbg !10982
  %conv29 = zext i1 %cmp28 to i32, !dbg !10982
  %24 = load i8*, i8** %p, align 8, !dbg !10983, !tbaa !2645
  %idx.ext = sext i32 %conv29 to i64, !dbg !10983
  %add.ptr = getelementptr inbounds i8, i8* %24, i64 %idx.ext, !dbg !10983
  store i8* %add.ptr, i8** %p, align 8, !dbg !10983, !tbaa !2645
  %25 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !10984, !tbaa !2645
  %tobool30 = icmp ne i8** %25, null, !dbg !10984
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !10986

if.then31:                                        ; preds = %if.end25
  %26 = load i8*, i8** %p, align 8, !dbg !10987, !tbaa !2645
  %27 = load i8**, i8*** %base_in_result.addr, align 8, !dbg !10988, !tbaa !2645
  store i8* %26, i8** %27, align 8, !dbg !10989, !tbaa !2645, !ctir !9
  br label %if.end32, !dbg !10990

if.end32:                                         ; preds = %if.then31, %if.end25
  %28 = load i8*, i8** %p, align 8, !dbg !10991, !tbaa !2645
  %29 = load i8*, i8** %base.addr, align 8, !dbg !10992, !tbaa !2645
  %30 = load i64, i64* %baselen, align 8, !dbg !10993, !tbaa !3285
  %call33 = call i8* @mempcpy(i8* %28, i8* %29, i64 %30) #9, !dbg !10994
  store i8* %call33, i8** %p, align 8, !dbg !10995, !tbaa !2645
  %31 = load i8*, i8** %p, align 8, !dbg !10996, !tbaa !2645
  store i8 0, i8* %31, align 1, !dbg !10997, !tbaa !3292, !ctir !10
  %32 = load i8*, i8** %p_concat, align 8, !dbg !10998, !tbaa !2645
  store i8* %32, i8** %retval, align 8, !dbg !10999
  br label %return, !dbg !10999

return:                                           ; preds = %if.end32, %if.then24
  %33 = load i8*, i8** %retval, align 8, !dbg !11000
  ret i8* %33, !dbg !11000
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @full_read(i32 %fd, i8* %buf, i64 %count) #4 !dbg !11001 !ctir !1691 {
entry:
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %total = alloca i64, align 8, !ctir !55
  %ptr = alloca i8*, align 8, !ctir !9
  %n_rw = alloca i64, align 8, !ctir !55
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !11002, metadata !DIExpression()), !dbg !11003
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11004, metadata !DIExpression()), !dbg !11005
  store i64 %count, i64* %count.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !11006, metadata !DIExpression()), !dbg !11007
  call void @llvm.dbg.declare(metadata i64* %total, metadata !11008, metadata !DIExpression()), !dbg !11009
  store i64 0, i64* %total, align 8, !dbg !11009, !tbaa !3285
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !11010, metadata !DIExpression()), !dbg !11011
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11012, !tbaa !2645
  store i8* %0, i8** %ptr, align 8, !dbg !11011, !tbaa !2645
  br label %while.cond, !dbg !11013

while.cond:                                       ; preds = %if.end5, %entry
  %1 = load i64, i64* %count.addr, align 8, !dbg !11014, !tbaa !3285
  %cmp = icmp ugt i64 %1, 0, !dbg !11015
  br i1 %cmp, label %while.body, label %while.end, !dbg !11013

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %n_rw, metadata !11016, metadata !DIExpression()), !dbg !11018
  %2 = load i32, i32* %fd.addr, align 4, !dbg !11019, !tbaa !2632
  %3 = load i8*, i8** %ptr, align 8, !dbg !11020, !tbaa !2645
  %4 = load i64, i64* %count.addr, align 8, !dbg !11021, !tbaa !3285
  %call = call i64 @safe_read(i32 %2, i8* %3, i64 %4), !dbg !11022
  store i64 %call, i64* %n_rw, align 8, !dbg !11018, !tbaa !3285
  %5 = load i64, i64* %n_rw, align 8, !dbg !11023, !tbaa !3285
  %cmp1 = icmp eq i64 %5, -1, !dbg !11025
  br i1 %cmp1, label %if.then, label %if.end, !dbg !11026

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !11027

if.end:                                           ; preds = %while.body
  %6 = load i64, i64* %n_rw, align 8, !dbg !11028, !tbaa !3285
  %cmp2 = icmp eq i64 %6, 0, !dbg !11030
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !11031

if.then3:                                         ; preds = %if.end
  %call4 = call i32* @__errno_location() #16, !dbg !11032
  store i32 0, i32* %call4, align 4, !dbg !11034, !tbaa !2632, !ctir !7
  br label %while.end, !dbg !11035

if.end5:                                          ; preds = %if.end
  %7 = load i64, i64* %n_rw, align 8, !dbg !11036, !tbaa !3285
  %8 = load i64, i64* %total, align 8, !dbg !11037, !tbaa !3285
  %add = add i64 %8, %7, !dbg !11037
  store i64 %add, i64* %total, align 8, !dbg !11037, !tbaa !3285
  %9 = load i64, i64* %n_rw, align 8, !dbg !11038, !tbaa !3285
  %10 = load i8*, i8** %ptr, align 8, !dbg !11039, !tbaa !2645
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %9, !dbg !11039
  store i8* %add.ptr, i8** %ptr, align 8, !dbg !11039, !tbaa !2645
  %11 = load i64, i64* %n_rw, align 8, !dbg !11040, !tbaa !3285
  %12 = load i64, i64* %count.addr, align 8, !dbg !11041, !tbaa !3285
  %sub = sub i64 %12, %11, !dbg !11041
  store i64 %sub, i64* %count.addr, align 8, !dbg !11041, !tbaa !3285
  br label %while.cond, !dbg !11013, !llvm.loop !11042

while.end:                                        ; preds = %if.then3, %if.then, %while.cond
  %13 = load i64, i64* %total, align 8, !dbg !11044, !tbaa !3285
  ret i64 %13, !dbg !11045
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @full_write(i32 %fd, i8* %buf, i64 %count) #4 !dbg !11046 !ctir !1696 {
entry:
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %total = alloca i64, align 8, !ctir !55
  %ptr = alloca i8*, align 8, !ctir !180
  %n_rw = alloca i64, align 8, !ctir !55
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !11048, metadata !DIExpression()), !dbg !11049
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11050, metadata !DIExpression()), !dbg !11051
  store i64 %count, i64* %count.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !11052, metadata !DIExpression()), !dbg !11053
  call void @llvm.dbg.declare(metadata i64* %total, metadata !11054, metadata !DIExpression()), !dbg !11055
  store i64 0, i64* %total, align 8, !dbg !11055, !tbaa !3285
  call void @llvm.dbg.declare(metadata i8** %ptr, metadata !11056, metadata !DIExpression()), !dbg !11057
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !11058, !tbaa !2645
  store i8* %0, i8** %ptr, align 8, !dbg !11057, !tbaa !2645
  br label %while.cond, !dbg !11059

while.cond:                                       ; preds = %if.end5, %entry
  %1 = load i64, i64* %count.addr, align 8, !dbg !11060, !tbaa !3285
  %cmp = icmp ugt i64 %1, 0, !dbg !11061
  br i1 %cmp, label %while.body, label %while.end, !dbg !11059

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %n_rw, metadata !11062, metadata !DIExpression()), !dbg !11064
  %2 = load i32, i32* %fd.addr, align 4, !dbg !11065, !tbaa !2632
  %3 = load i8*, i8** %ptr, align 8, !dbg !11066, !tbaa !2645
  %4 = load i64, i64* %count.addr, align 8, !dbg !11067, !tbaa !3285
  %call = call i64 @safe_write(i32 %2, i8* %3, i64 %4), !dbg !11068
  store i64 %call, i64* %n_rw, align 8, !dbg !11064, !tbaa !3285
  %5 = load i64, i64* %n_rw, align 8, !dbg !11069, !tbaa !3285
  %cmp1 = icmp eq i64 %5, -1, !dbg !11071
  br i1 %cmp1, label %if.then, label %if.end, !dbg !11072

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !11073

if.end:                                           ; preds = %while.body
  %6 = load i64, i64* %n_rw, align 8, !dbg !11074, !tbaa !3285
  %cmp2 = icmp eq i64 %6, 0, !dbg !11076
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !11077

if.then3:                                         ; preds = %if.end
  %call4 = call i32* @__errno_location() #16, !dbg !11078
  store i32 28, i32* %call4, align 4, !dbg !11080, !tbaa !2632, !ctir !7
  br label %while.end, !dbg !11081

if.end5:                                          ; preds = %if.end
  %7 = load i64, i64* %n_rw, align 8, !dbg !11082, !tbaa !3285
  %8 = load i64, i64* %total, align 8, !dbg !11083, !tbaa !3285
  %add = add i64 %8, %7, !dbg !11083
  store i64 %add, i64* %total, align 8, !dbg !11083, !tbaa !3285
  %9 = load i64, i64* %n_rw, align 8, !dbg !11084, !tbaa !3285
  %10 = load i8*, i8** %ptr, align 8, !dbg !11085, !tbaa !2645
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %9, !dbg !11085
  store i8* %add.ptr, i8** %ptr, align 8, !dbg !11085, !tbaa !2645
  %11 = load i64, i64* %n_rw, align 8, !dbg !11086, !tbaa !3285
  %12 = load i64, i64* %count.addr, align 8, !dbg !11087, !tbaa !3285
  %sub = sub i64 %12, %11, !dbg !11087
  store i64 %sub, i64* %count.addr, align 8, !dbg !11087, !tbaa !3285
  br label %while.cond, !dbg !11059, !llvm.loop !11088

while.end:                                        ; preds = %if.then3, %if.then, %while.cond
  %13 = load i64, i64* %total, align 8, !dbg !11090, !tbaa !3285
  ret i64 %13, !dbg !11091
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_buckets(%struct.hash_table* %table) #10 !dbg !11092 !ctir !836 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11093, metadata !DIExpression()), !dbg !11094
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11095, !tbaa !2645
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 2, !dbg !11096, !ctir !839
  %1 = load i64, i64* %n_buckets, align 8, !dbg !11096, !tbaa !11097, !ctir !55
  ret i64 %1, !dbg !11099
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_buckets_used(%struct.hash_table* %table) #10 !dbg !11100 !ctir !836 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11101, metadata !DIExpression()), !dbg !11102
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11103, !tbaa !2645
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 3, !dbg !11104, !ctir !839
  %1 = load i64, i64* %n_buckets_used, align 8, !dbg !11104, !tbaa !11105, !ctir !55
  ret i64 %1, !dbg !11106
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_n_entries(%struct.hash_table* %table) #10 !dbg !11107 !ctir !836 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11108, metadata !DIExpression()), !dbg !11109
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11110, !tbaa !2645
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 4, !dbg !11111, !ctir !839
  %1 = load i64, i64* %n_entries, align 8, !dbg !11111, !tbaa !11112, !ctir !55
  ret i64 %1, !dbg !11113
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_get_max_bucket_length(%struct.hash_table* %table) #10 !dbg !11114 !ctir !836 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !851
  %max_bucket_length = alloca i64, align 8, !ctir !55
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !851
  %bucket_length = alloca i64, align 8, !ctir !55
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11115, metadata !DIExpression()), !dbg !11116
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11117, metadata !DIExpression()), !dbg !11118
  call void @llvm.dbg.declare(metadata i64* %max_bucket_length, metadata !11119, metadata !DIExpression()), !dbg !11120
  store i64 0, i64* %max_bucket_length, align 8, !dbg !11120, !tbaa !3285
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11121, !tbaa !2645
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11123, !ctir !839
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11123, !tbaa !11124, !ctir !845
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11125, !tbaa !2645
  br label %for.cond, !dbg !11126

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11127, !tbaa !2645
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11129, !tbaa !2645
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11130, !ctir !839
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11130, !tbaa !11131, !ctir !851
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11132
  br i1 %cmp, label %for.body, label %for.end, !dbg !11133

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11134, !tbaa !2645
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11137, !ctir !852
  %6 = load i8*, i8** %data, align 8, !dbg !11137, !tbaa !11138, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !11134
  br i1 %tobool, label %if.then, label %if.end5, !dbg !11140

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11141, metadata !DIExpression()), !dbg !11143
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11144, !tbaa !2645
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11143, !tbaa !2645
  call void @llvm.dbg.declare(metadata i64* %bucket_length, metadata !11145, metadata !DIExpression()), !dbg !11146
  store i64 1, i64* %bucket_length, align 8, !dbg !11146, !tbaa !3285
  br label %while.cond, !dbg !11147

while.cond:                                       ; preds = %while.body, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11148, !tbaa !2645
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %8, i32 0, i32 1, !dbg !11149, !ctir !852
  %9 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11149, !tbaa !11150, !ctir !845
  store %struct.hash_entry* %9, %struct.hash_entry** %cursor, align 8, !dbg !11151, !tbaa !2645
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11152, !tbaa !2645
  %tobool2 = icmp ne %struct.hash_entry* %10, null, !dbg !11147
  br i1 %tobool2, label %while.body, label %while.end, !dbg !11147

while.body:                                       ; preds = %while.cond
  %11 = load i64, i64* %bucket_length, align 8, !dbg !11153, !tbaa !3285
  %inc = add i64 %11, 1, !dbg !11153
  store i64 %inc, i64* %bucket_length, align 8, !dbg !11153, !tbaa !3285
  br label %while.cond, !dbg !11147, !llvm.loop !11154

while.end:                                        ; preds = %while.cond
  %12 = load i64, i64* %bucket_length, align 8, !dbg !11155, !tbaa !3285
  %13 = load i64, i64* %max_bucket_length, align 8, !dbg !11157, !tbaa !3285
  %cmp3 = icmp ugt i64 %12, %13, !dbg !11158
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !11159

if.then4:                                         ; preds = %while.end
  %14 = load i64, i64* %bucket_length, align 8, !dbg !11160, !tbaa !3285
  store i64 %14, i64* %max_bucket_length, align 8, !dbg !11161, !tbaa !3285
  br label %if.end, !dbg !11162

if.end:                                           ; preds = %if.then4, %while.end
  br label %if.end5, !dbg !11163

if.end5:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !11164

for.inc:                                          ; preds = %if.end5
  %15 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11165, !tbaa !2645
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 1, !dbg !11165
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11165, !tbaa !2645
  br label %for.cond, !dbg !11166, !llvm.loop !11167

for.end:                                          ; preds = %for.cond
  %16 = load i64, i64* %max_bucket_length, align 8, !dbg !11169, !tbaa !3285
  ret i64 %16, !dbg !11170
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @hash_table_ok(%struct.hash_table* %table) #10 !dbg !11171 !ctir !878 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !851
  %n_buckets_used = alloca i64, align 8, !ctir !55
  %n_entries = alloca i64, align 8, !ctir !55
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !851
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11172, metadata !DIExpression()), !dbg !11173
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11174, metadata !DIExpression()), !dbg !11175
  call void @llvm.dbg.declare(metadata i64* %n_buckets_used, metadata !11176, metadata !DIExpression()), !dbg !11177
  store i64 0, i64* %n_buckets_used, align 8, !dbg !11177, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %n_entries, metadata !11178, metadata !DIExpression()), !dbg !11179
  store i64 0, i64* %n_entries, align 8, !dbg !11179, !tbaa !3285
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11180, !tbaa !2645
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11182, !ctir !839
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11182, !tbaa !11124, !ctir !845
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11183, !tbaa !2645
  br label %for.cond, !dbg !11184

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11185, !tbaa !2645
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11187, !tbaa !2645
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11188, !ctir !839
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11188, !tbaa !11131, !ctir !851
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11189
  br i1 %cmp, label %for.body, label %for.end, !dbg !11190

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11191, !tbaa !2645
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11194, !ctir !852
  %6 = load i8*, i8** %data, align 8, !dbg !11194, !tbaa !11138, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !11191
  br i1 %tobool, label %if.then, label %if.end, !dbg !11195

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11196, metadata !DIExpression()), !dbg !11198
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11199, !tbaa !2645
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11198, !tbaa !2645
  %8 = load i64, i64* %n_buckets_used, align 8, !dbg !11200, !tbaa !3285
  %inc = add i64 %8, 1, !dbg !11200
  store i64 %inc, i64* %n_buckets_used, align 8, !dbg !11200, !tbaa !3285
  %9 = load i64, i64* %n_entries, align 8, !dbg !11201, !tbaa !3285
  %inc2 = add i64 %9, 1, !dbg !11201
  store i64 %inc2, i64* %n_entries, align 8, !dbg !11201, !tbaa !3285
  br label %while.cond, !dbg !11202

while.cond:                                       ; preds = %while.body, %if.then
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11203, !tbaa !2645
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 1, !dbg !11204, !ctir !852
  %11 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11204, !tbaa !11150, !ctir !845
  store %struct.hash_entry* %11, %struct.hash_entry** %cursor, align 8, !dbg !11205, !tbaa !2645
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11206, !tbaa !2645
  %tobool3 = icmp ne %struct.hash_entry* %12, null, !dbg !11202
  br i1 %tobool3, label %while.body, label %while.end, !dbg !11202

while.body:                                       ; preds = %while.cond
  %13 = load i64, i64* %n_entries, align 8, !dbg !11207, !tbaa !3285
  %inc4 = add i64 %13, 1, !dbg !11207
  store i64 %inc4, i64* %n_entries, align 8, !dbg !11207, !tbaa !3285
  br label %while.cond, !dbg !11202, !llvm.loop !11208

while.end:                                        ; preds = %while.cond
  br label %if.end, !dbg !11209

if.end:                                           ; preds = %while.end, %for.body
  br label %for.inc, !dbg !11210

for.inc:                                          ; preds = %if.end
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11211, !tbaa !2645
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 1, !dbg !11211
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11211, !tbaa !2645
  br label %for.cond, !dbg !11212, !llvm.loop !11213

for.end:                                          ; preds = %for.cond
  %15 = load i64, i64* %n_buckets_used, align 8, !dbg !11215, !tbaa !3285
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11217, !tbaa !2645
  %n_buckets_used5 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 3, !dbg !11218, !ctir !839
  %17 = load i64, i64* %n_buckets_used5, align 8, !dbg !11218, !tbaa !11105, !ctir !55
  %cmp6 = icmp eq i64 %15, %17, !dbg !11219
  br i1 %cmp6, label %land.lhs.true, label %if.end10, !dbg !11220

land.lhs.true:                                    ; preds = %for.end
  %18 = load i64, i64* %n_entries, align 8, !dbg !11221, !tbaa !3285
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11222, !tbaa !2645
  %n_entries7 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 4, !dbg !11223, !ctir !839
  %20 = load i64, i64* %n_entries7, align 8, !dbg !11223, !tbaa !11112, !ctir !55
  %cmp8 = icmp eq i64 %18, %20, !dbg !11224
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !11225

if.then9:                                         ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !11226
  br label %return, !dbg !11226

if.end10:                                         ; preds = %land.lhs.true, %for.end
  store i1 false, i1* %retval, align 1, !dbg !11227
  br label %return, !dbg !11227

return:                                           ; preds = %if.end10, %if.then9
  %21 = load i1, i1* %retval, align 1, !dbg !11228
  ret i1 %21, !dbg !11228
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_print_statistics(%struct.hash_table* %table, %struct._IO_FILE* %stream) #4 !dbg !11229 !ctir !880 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %n_entries = alloca i64, align 8, !ctir !55
  %n_buckets = alloca i64, align 8, !ctir !55
  %n_buckets_used = alloca i64, align 8, !ctir !55
  %max_bucket_length = alloca i64, align 8, !ctir !55
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11230, metadata !DIExpression()), !dbg !11231
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !11232, metadata !DIExpression()), !dbg !11233
  call void @llvm.dbg.declare(metadata i64* %n_entries, metadata !11234, metadata !DIExpression()), !dbg !11235
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11236, !tbaa !2645
  %call = call i64 @hash_get_n_entries(%struct.hash_table* %0) #14, !dbg !11237
  store i64 %call, i64* %n_entries, align 8, !dbg !11235, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %n_buckets, metadata !11238, metadata !DIExpression()), !dbg !11239
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11240, !tbaa !2645
  %call1 = call i64 @hash_get_n_buckets(%struct.hash_table* %1) #14, !dbg !11241
  store i64 %call1, i64* %n_buckets, align 8, !dbg !11239, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %n_buckets_used, metadata !11242, metadata !DIExpression()), !dbg !11243
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11244, !tbaa !2645
  %call2 = call i64 @hash_get_n_buckets_used(%struct.hash_table* %2) #14, !dbg !11245
  store i64 %call2, i64* %n_buckets_used, align 8, !dbg !11243, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %max_bucket_length, metadata !11246, metadata !DIExpression()), !dbg !11247
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11248, !tbaa !2645
  %call3 = call i64 @hash_get_max_bucket_length(%struct.hash_table* %3) #14, !dbg !11249
  store i64 %call3, i64* %max_bucket_length, align 8, !dbg !11247, !tbaa !3285
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11250, !tbaa !2645
  %5 = load i64, i64* %n_entries, align 8, !dbg !11251, !tbaa !3285
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.270, i64 0, i64 0), i64 %5), !dbg !11252
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11253, !tbaa !2645
  %7 = load i64, i64* %n_buckets, align 8, !dbg !11254, !tbaa !3285
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1.271, i64 0, i64 0), i64 %7), !dbg !11255
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11256, !tbaa !2645
  %9 = load i64, i64* %n_buckets_used, align 8, !dbg !11257, !tbaa !3285
  %10 = load i64, i64* %n_buckets_used, align 8, !dbg !11258, !tbaa !3285
  %conv = uitofp i64 %10 to double, !dbg !11258
  %mul = fmul double 1.000000e+02, %conv, !dbg !11259
  %11 = load i64, i64* %n_buckets, align 8, !dbg !11260, !tbaa !3285
  %conv6 = uitofp i64 %11 to double, !dbg !11260
  %div = fdiv double %mul, %conv6, !dbg !11261
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2.272, i64 0, i64 0), i64 %9, double %div), !dbg !11262
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !11263, !tbaa !2645
  %13 = load i64, i64* %max_bucket_length, align 8, !dbg !11264, !tbaa !3285
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.273, i64 0, i64 0), i64 %13), !dbg !11265
  ret void, !dbg !11266
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_lookup(%struct.hash_table* %table, i8* %entry1) #4 !dbg !11267 !ctir !916 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !851
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !851
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11268, metadata !DIExpression()), !dbg !11269
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !11270, metadata !DIExpression()), !dbg !11271
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11272, metadata !DIExpression()), !dbg !11273
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11274, !tbaa !2645
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !11275, !tbaa !2645
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !11276
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !11273, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11277, metadata !DIExpression()), !dbg !11278
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11279, !tbaa !2645
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %2, i32 0, i32 0, !dbg !11281, !ctir !852
  %3 = load i8*, i8** %data, align 8, !dbg !11281, !tbaa !11138, !ctir !53
  %cmp = icmp eq i8* %3, null, !dbg !11282
  br i1 %cmp, label %if.then, label %if.end, !dbg !11283

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !11284
  br label %return, !dbg !11284

if.end:                                           ; preds = %entry
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11285, !tbaa !2645
  store %struct.hash_entry* %4, %struct.hash_entry** %cursor, align 8, !dbg !11287, !tbaa !2645
  br label %for.cond, !dbg !11288

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11289, !tbaa !2645
  %tobool = icmp ne %struct.hash_entry* %5, null, !dbg !11291
  br i1 %tobool, label %for.body, label %for.end, !dbg !11291

for.body:                                         ; preds = %for.cond
  %6 = load i8*, i8** %entry.addr, align 8, !dbg !11292, !tbaa !2645
  %7 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11294, !tbaa !2645
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !11295, !ctir !852
  %8 = load i8*, i8** %data2, align 8, !dbg !11295, !tbaa !11138, !ctir !53
  %cmp3 = icmp eq i8* %6, %8, !dbg !11296
  br i1 %cmp3, label %if.then6, label %lor.lhs.false, !dbg !11297

lor.lhs.false:                                    ; preds = %for.body
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11298, !tbaa !2645
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 7, !dbg !11299, !ctir !839
  %10 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !11299, !tbaa !11300, !ctir !872
  %11 = load i8*, i8** %entry.addr, align 8, !dbg !11301, !tbaa !2645
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11302, !tbaa !2645
  %data4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !11303, !ctir !852
  %13 = load i8*, i8** %data4, align 8, !dbg !11303, !tbaa !11138, !ctir !53
  %call5 = call zeroext i1 %10(i8* %11, i8* %13), !dbg !11298
  br i1 %call5, label %if.then6, label %if.end8, !dbg !11304

if.then6:                                         ; preds = %lor.lhs.false, %for.body
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11305, !tbaa !2645
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !11306, !ctir !852
  %15 = load i8*, i8** %data7, align 8, !dbg !11306, !tbaa !11138, !ctir !53
  store i8* %15, i8** %retval, align 8, !dbg !11307
  br label %return, !dbg !11307

if.end8:                                          ; preds = %lor.lhs.false
  br label %for.inc, !dbg !11308

for.inc:                                          ; preds = %if.end8
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11309, !tbaa !2645
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 1, !dbg !11310, !ctir !852
  %17 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11310, !tbaa !11150, !ctir !845
  store %struct.hash_entry* %17, %struct.hash_entry** %cursor, align 8, !dbg !11311, !tbaa !2645
  br label %for.cond, !dbg !11312, !llvm.loop !11313

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !11315
  br label %return, !dbg !11315

return:                                           ; preds = %for.end, %if.then6, %if.then
  %18 = load i8*, i8** %retval, align 8, !dbg !11316
  ret i8* %18, !dbg !11316
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.hash_entry* @safe_hasher(%struct.hash_table* %table, i8* %key) #4 !dbg !11317 !ctir !946 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %key.addr = alloca i8*, align 8
  %n = alloca i64, align 8, !ctir !55
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11318, metadata !DIExpression()), !dbg !11319
  store i8* %key, i8** %key.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !11320, metadata !DIExpression()), !dbg !11321
  call void @llvm.dbg.declare(metadata i64* %n, metadata !11322, metadata !DIExpression()), !dbg !11323
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11324, !tbaa !2645
  %hasher = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 6, !dbg !11325, !ctir !839
  %1 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher, align 8, !dbg !11325, !tbaa !11326, !ctir !869
  %2 = load i8*, i8** %key.addr, align 8, !dbg !11327, !tbaa !2645
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11328, !tbaa !2645
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 2, !dbg !11329, !ctir !839
  %4 = load i64, i64* %n_buckets, align 8, !dbg !11329, !tbaa !11097, !ctir !55
  %call = call i64 %1(i8* %2, i64 %4), !dbg !11324
  store i64 %call, i64* %n, align 8, !dbg !11323, !tbaa !3285
  %5 = load i64, i64* %n, align 8, !dbg !11330, !tbaa !3285
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11332, !tbaa !2645
  %n_buckets1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 2, !dbg !11333, !ctir !839
  %7 = load i64, i64* %n_buckets1, align 8, !dbg !11333, !tbaa !11097, !ctir !55
  %cmp = icmp ult i64 %5, %7, !dbg !11334
  br i1 %cmp, label %if.end, label %if.then, !dbg !11335

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !11336
  unreachable, !dbg !11336

if.end:                                           ; preds = %entry
  %8 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11337, !tbaa !2645
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 0, !dbg !11338, !ctir !839
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11338, !tbaa !11124, !ctir !845
  %10 = load i64, i64* %n, align 8, !dbg !11339, !tbaa !3285
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i64 %10, !dbg !11340
  ret %struct.hash_entry* %add.ptr, !dbg !11341
}

; Function Attrs: noreturn nounwind
declare dso_local void @abort() #5

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @hash_get_first(%struct.hash_table* %table) #10 !dbg !11342 !ctir !918 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !851
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11343, metadata !DIExpression()), !dbg !11344
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11345, metadata !DIExpression()), !dbg !11346
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11347, !tbaa !2645
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 4, !dbg !11349, !ctir !839
  %1 = load i64, i64* %n_entries, align 8, !dbg !11349, !tbaa !11112, !ctir !55
  %cmp = icmp eq i64 %1, 0, !dbg !11350
  br i1 %cmp, label %if.then, label %if.end, !dbg !11351

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !11352
  br label %return, !dbg !11352

if.end:                                           ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11353, !tbaa !2645
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 0, !dbg !11355, !ctir !839
  %3 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11355, !tbaa !11124, !ctir !845
  store %struct.hash_entry* %3, %struct.hash_entry** %bucket, align 8, !dbg !11356, !tbaa !2645
  br label %for.cond, !dbg !11357

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11358, !tbaa !2645
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11361, !tbaa !2645
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 1, !dbg !11362, !ctir !839
  %6 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11362, !tbaa !11131, !ctir !851
  %cmp2 = icmp ult %struct.hash_entry* %4, %6, !dbg !11363
  br i1 %cmp2, label %if.else, label %if.then3, !dbg !11364

if.then3:                                         ; preds = %for.cond
  call void @abort() #13, !dbg !11365
  unreachable, !dbg !11365

if.else:                                          ; preds = %for.cond
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11366, !tbaa !2645
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !11368, !ctir !852
  %8 = load i8*, i8** %data, align 8, !dbg !11368, !tbaa !11138, !ctir !53
  %tobool = icmp ne i8* %8, null, !dbg !11366
  br i1 %tobool, label %if.then4, label %if.end6, !dbg !11369

if.then4:                                         ; preds = %if.else
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11370, !tbaa !2645
  %data5 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !11371, !ctir !852
  %10 = load i8*, i8** %data5, align 8, !dbg !11371, !tbaa !11138, !ctir !53
  store i8* %10, i8** %retval, align 8, !dbg !11372
  br label %return, !dbg !11372

if.end6:                                          ; preds = %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end6
  br label %for.inc, !dbg !11373

for.inc:                                          ; preds = %if.end7
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11374, !tbaa !2645
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %11, i32 1, !dbg !11374
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11374, !tbaa !2645
  br label %for.cond, !dbg !11375, !llvm.loop !11376

return:                                           ; preds = %if.then4, %if.then
  %12 = load i8*, i8** %retval, align 8, !dbg !11379
  ret i8* %12, !dbg !11379
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_get_next(%struct.hash_table* %table, i8* %entry1) #4 !dbg !11380 !ctir !916 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !851
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !851
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11381, metadata !DIExpression()), !dbg !11382
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !11383, metadata !DIExpression()), !dbg !11384
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11385, metadata !DIExpression()), !dbg !11386
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11387, !tbaa !2645
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !11388, !tbaa !2645
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !11389
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !11386, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11390, metadata !DIExpression()), !dbg !11391
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11392, !tbaa !2645
  store %struct.hash_entry* %2, %struct.hash_entry** %cursor, align 8, !dbg !11393, !tbaa !2645
  br label %do.body, !dbg !11394

do.body:                                          ; preds = %do.cond, %entry
  %3 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11395, !tbaa !2645
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %3, i32 0, i32 0, !dbg !11398, !ctir !852
  %4 = load i8*, i8** %data, align 8, !dbg !11398, !tbaa !11138, !ctir !53
  %5 = load i8*, i8** %entry.addr, align 8, !dbg !11399, !tbaa !2645
  %cmp = icmp eq i8* %4, %5, !dbg !11400
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11401

land.lhs.true:                                    ; preds = %do.body
  %6 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11402, !tbaa !2645
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %6, i32 0, i32 1, !dbg !11403, !ctir !852
  %7 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11403, !tbaa !11150, !ctir !845
  %tobool = icmp ne %struct.hash_entry* %7, null, !dbg !11402
  br i1 %tobool, label %if.then, label %if.end, !dbg !11404

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11405, !tbaa !2645
  %next2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %8, i32 0, i32 1, !dbg !11406, !ctir !852
  %9 = load %struct.hash_entry*, %struct.hash_entry** %next2, align 8, !dbg !11406, !tbaa !11150, !ctir !845
  %data3 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !11407, !ctir !846
  %10 = load i8*, i8** %data3, align 8, !dbg !11407, !tbaa !11138, !ctir !53
  store i8* %10, i8** %retval, align 8, !dbg !11408
  br label %return, !dbg !11408

if.end:                                           ; preds = %land.lhs.true, %do.body
  %11 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11409, !tbaa !2645
  %next4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %11, i32 0, i32 1, !dbg !11410, !ctir !852
  %12 = load %struct.hash_entry*, %struct.hash_entry** %next4, align 8, !dbg !11410, !tbaa !11150, !ctir !845
  store %struct.hash_entry* %12, %struct.hash_entry** %cursor, align 8, !dbg !11411, !tbaa !2645
  br label %do.cond, !dbg !11412

do.cond:                                          ; preds = %if.end
  %13 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11413, !tbaa !2645
  %cmp5 = icmp ne %struct.hash_entry* %13, null, !dbg !11414
  br i1 %cmp5, label %do.body, label %do.end, !dbg !11412, !llvm.loop !11415

do.end:                                           ; preds = %do.cond
  br label %while.cond, !dbg !11417

while.cond:                                       ; preds = %if.end11, %do.end
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11418, !tbaa !2645
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 1, !dbg !11418
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11418, !tbaa !2645
  %15 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11419, !tbaa !2645
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %15, i32 0, i32 1, !dbg !11420, !ctir !839
  %16 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11420, !tbaa !11131, !ctir !851
  %cmp6 = icmp ult %struct.hash_entry* %incdec.ptr, %16, !dbg !11421
  br i1 %cmp6, label %while.body, label %while.end, !dbg !11417

while.body:                                       ; preds = %while.cond
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11422, !tbaa !2645
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 0, !dbg !11424, !ctir !852
  %18 = load i8*, i8** %data7, align 8, !dbg !11424, !tbaa !11138, !ctir !53
  %tobool8 = icmp ne i8* %18, null, !dbg !11422
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !11425

if.then9:                                         ; preds = %while.body
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11426, !tbaa !2645
  %data10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 0, i32 0, !dbg !11427, !ctir !852
  %20 = load i8*, i8** %data10, align 8, !dbg !11427, !tbaa !11138, !ctir !53
  store i8* %20, i8** %retval, align 8, !dbg !11428
  br label %return, !dbg !11428

if.end11:                                         ; preds = %while.body
  br label %while.cond, !dbg !11417, !llvm.loop !11429

while.end:                                        ; preds = %while.cond
  store i8* null, i8** %retval, align 8, !dbg !11431
  br label %return, !dbg !11431

return:                                           ; preds = %while.end, %if.then9, %if.then
  %21 = load i8*, i8** %retval, align 8, !dbg !11432
  ret i8* %21, !dbg !11432
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @hash_get_entries(%struct.hash_table* %table, i8** %buffer, i64 %buffer_size) #4 !dbg !11433 !ctir !920 {
entry:
  %retval = alloca i64, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %buffer.addr = alloca i8**, align 8
  %buffer_size.addr = alloca i64, align 8
  %counter = alloca i64, align 8, !ctir !55
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !851
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !851
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11434, metadata !DIExpression()), !dbg !11435
  store i8** %buffer, i8*** %buffer.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8*** %buffer.addr, metadata !11436, metadata !DIExpression()), !dbg !11437
  store i64 %buffer_size, i64* %buffer_size.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %buffer_size.addr, metadata !11438, metadata !DIExpression()), !dbg !11439
  call void @llvm.dbg.declare(metadata i64* %counter, metadata !11440, metadata !DIExpression()), !dbg !11441
  store i64 0, i64* %counter, align 8, !dbg !11441, !tbaa !3285
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11442, metadata !DIExpression()), !dbg !11443
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11444, metadata !DIExpression()), !dbg !11445
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11446, !tbaa !2645
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11448, !ctir !839
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11448, !tbaa !11124, !ctir !845
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11449, !tbaa !2645
  br label %for.cond, !dbg !11450

for.cond:                                         ; preds = %for.inc9, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11451, !tbaa !2645
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11453, !tbaa !2645
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11454, !ctir !839
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11454, !tbaa !11131, !ctir !851
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11455
  br i1 %cmp, label %for.body, label %for.end10, !dbg !11456

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11457, !tbaa !2645
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11460, !ctir !852
  %6 = load i8*, i8** %data, align 8, !dbg !11460, !tbaa !11138, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !11457
  br i1 %tobool, label %if.then, label %if.end8, !dbg !11461

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11462, !tbaa !2645
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11465, !tbaa !2645
  br label %for.cond2, !dbg !11466

for.cond2:                                        ; preds = %for.inc, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11467, !tbaa !2645
  %tobool3 = icmp ne %struct.hash_entry* %8, null, !dbg !11469
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !11469

for.body4:                                        ; preds = %for.cond2
  %9 = load i64, i64* %counter, align 8, !dbg !11470, !tbaa !3285
  %10 = load i64, i64* %buffer_size.addr, align 8, !dbg !11473, !tbaa !3285
  %cmp5 = icmp uge i64 %9, %10, !dbg !11474
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !11475

if.then6:                                         ; preds = %for.body4
  %11 = load i64, i64* %counter, align 8, !dbg !11476, !tbaa !3285
  store i64 %11, i64* %retval, align 8, !dbg !11477
  br label %return, !dbg !11477

if.end:                                           ; preds = %for.body4
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11478, !tbaa !2645
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !11479, !ctir !852
  %13 = load i8*, i8** %data7, align 8, !dbg !11479, !tbaa !11138, !ctir !53
  %14 = load i8**, i8*** %buffer.addr, align 8, !dbg !11480, !tbaa !2645
  %15 = load i64, i64* %counter, align 8, !dbg !11481, !tbaa !3285
  %inc = add i64 %15, 1, !dbg !11481
  store i64 %inc, i64* %counter, align 8, !dbg !11481, !tbaa !3285
  %arrayidx = getelementptr inbounds i8*, i8** %14, i64 %15, !dbg !11480, !ctir !922
  store i8* %13, i8** %arrayidx, align 8, !dbg !11482, !tbaa !2645
  br label %for.inc, !dbg !11483

for.inc:                                          ; preds = %if.end
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11484, !tbaa !2645
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 1, !dbg !11485, !ctir !852
  %17 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11485, !tbaa !11150, !ctir !845
  store %struct.hash_entry* %17, %struct.hash_entry** %cursor, align 8, !dbg !11486, !tbaa !2645
  br label %for.cond2, !dbg !11487, !llvm.loop !11488

for.end:                                          ; preds = %for.cond2
  br label %if.end8, !dbg !11490

if.end8:                                          ; preds = %for.end, %for.body
  br label %for.inc9, !dbg !11491

for.inc9:                                         ; preds = %if.end8
  %18 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11492, !tbaa !2645
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %18, i32 1, !dbg !11492
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11492, !tbaa !2645
  br label %for.cond, !dbg !11493, !llvm.loop !11494

for.end10:                                        ; preds = %for.cond
  %19 = load i64, i64* %counter, align 8, !dbg !11496, !tbaa !3285
  store i64 %19, i64* %retval, align 8, !dbg !11497
  br label %return, !dbg !11497

return:                                           ; preds = %for.end10, %if.then6
  %20 = load i64, i64* %retval, align 8, !dbg !11498
  ret i64 %20, !dbg !11498
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @hash_do_for_each(%struct.hash_table* %table, i1 (i8*, i8*)* %processor, i8* %processor_data) #4 !dbg !11499 !ctir !923 {
entry:
  %retval = alloca i64, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %processor.addr = alloca i1 (i8*, i8*)*, align 8
  %processor_data.addr = alloca i8*, align 8
  %counter = alloca i64, align 8, !ctir !55
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !851
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !851
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11500, metadata !DIExpression()), !dbg !11501
  store i1 (i8*, i8*)* %processor, i1 (i8*, i8*)** %processor.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i1 (i8*, i8*)** %processor.addr, metadata !11502, metadata !DIExpression()), !dbg !11503
  store i8* %processor_data, i8** %processor_data.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %processor_data.addr, metadata !11504, metadata !DIExpression()), !dbg !11505
  call void @llvm.dbg.declare(metadata i64* %counter, metadata !11506, metadata !DIExpression()), !dbg !11507
  store i64 0, i64* %counter, align 8, !dbg !11507, !tbaa !3285
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11508, metadata !DIExpression()), !dbg !11509
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11510, metadata !DIExpression()), !dbg !11511
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11512, !tbaa !2645
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11514, !ctir !839
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11514, !tbaa !11124, !ctir !845
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11515, !tbaa !2645
  br label %for.cond, !dbg !11516

for.cond:                                         ; preds = %for.inc8, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11517, !tbaa !2645
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11519, !tbaa !2645
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11520, !ctir !839
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11520, !tbaa !11131, !ctir !851
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11521
  br i1 %cmp, label %for.body, label %for.end9, !dbg !11522

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11523, !tbaa !2645
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11526, !ctir !852
  %6 = load i8*, i8** %data, align 8, !dbg !11526, !tbaa !11138, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !11523
  br i1 %tobool, label %if.then, label %if.end7, !dbg !11527

if.then:                                          ; preds = %for.body
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11528, !tbaa !2645
  store %struct.hash_entry* %7, %struct.hash_entry** %cursor, align 8, !dbg !11531, !tbaa !2645
  br label %for.cond2, !dbg !11532

for.cond2:                                        ; preds = %for.inc, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11533, !tbaa !2645
  %tobool3 = icmp ne %struct.hash_entry* %8, null, !dbg !11535
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !11535

for.body4:                                        ; preds = %for.cond2
  %9 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %processor.addr, align 8, !dbg !11536, !tbaa !2645
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11539, !tbaa !2645
  %data5 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 0, !dbg !11540, !ctir !852
  %11 = load i8*, i8** %data5, align 8, !dbg !11540, !tbaa !11138, !ctir !53
  %12 = load i8*, i8** %processor_data.addr, align 8, !dbg !11541, !tbaa !2645
  %call = call zeroext i1 %9(i8* %11, i8* %12), !dbg !11536
  br i1 %call, label %if.end, label %if.then6, !dbg !11542

if.then6:                                         ; preds = %for.body4
  %13 = load i64, i64* %counter, align 8, !dbg !11543, !tbaa !3285
  store i64 %13, i64* %retval, align 8, !dbg !11544
  br label %return, !dbg !11544

if.end:                                           ; preds = %for.body4
  %14 = load i64, i64* %counter, align 8, !dbg !11545, !tbaa !3285
  %inc = add i64 %14, 1, !dbg !11545
  store i64 %inc, i64* %counter, align 8, !dbg !11545, !tbaa !3285
  br label %for.inc, !dbg !11546

for.inc:                                          ; preds = %if.end
  %15 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11547, !tbaa !2645
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 0, i32 1, !dbg !11548, !ctir !852
  %16 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11548, !tbaa !11150, !ctir !845
  store %struct.hash_entry* %16, %struct.hash_entry** %cursor, align 8, !dbg !11549, !tbaa !2645
  br label %for.cond2, !dbg !11550, !llvm.loop !11551

for.end:                                          ; preds = %for.cond2
  br label %if.end7, !dbg !11553

if.end7:                                          ; preds = %for.end, %for.body
  br label %for.inc8, !dbg !11554

for.inc8:                                         ; preds = %if.end7
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11555, !tbaa !2645
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 1, !dbg !11555
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11555, !tbaa !2645
  br label %for.cond, !dbg !11556, !llvm.loop !11557

for.end9:                                         ; preds = %for.cond
  %18 = load i64, i64* %counter, align 8, !dbg !11559, !tbaa !3285
  store i64 %18, i64* %retval, align 8, !dbg !11560
  br label %return, !dbg !11560

return:                                           ; preds = %for.end9, %if.then6
  %19 = load i64, i64* %retval, align 8, !dbg !11561
  ret i64 %19, !dbg !11561
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_string(i8* %string, i64 %n_buckets) #10 !dbg !11562 !ctir !929 {
entry:
  %string.addr = alloca i8*, align 8
  %n_buckets.addr = alloca i64, align 8
  %value = alloca i64, align 8, !ctir !55
  %ch = alloca i8, align 1, !ctir !554
  store i8* %string, i8** %string.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !11563, metadata !DIExpression()), !dbg !11564
  store i64 %n_buckets, i64* %n_buckets.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %n_buckets.addr, metadata !11565, metadata !DIExpression()), !dbg !11566
  call void @llvm.dbg.declare(metadata i64* %value, metadata !11567, metadata !DIExpression()), !dbg !11568
  store i64 0, i64* %value, align 8, !dbg !11568, !tbaa !3285
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !11569, metadata !DIExpression()), !dbg !11570
  br label %for.cond, !dbg !11571

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8*, i8** %string.addr, align 8, !dbg !11572, !tbaa !2645
  %1 = load i8, i8* %0, align 1, !dbg !11575, !tbaa !3292, !ctir !181
  store i8 %1, i8* %ch, align 1, !dbg !11576, !tbaa !3292
  %tobool = icmp ne i8 %1, 0, !dbg !11577
  br i1 %tobool, label %for.body, label %for.end, !dbg !11577

for.body:                                         ; preds = %for.cond
  %2 = load i64, i64* %value, align 8, !dbg !11578, !tbaa !3285
  %mul = mul i64 %2, 31, !dbg !11579
  %3 = load i8, i8* %ch, align 1, !dbg !11580, !tbaa !3292
  %conv = zext i8 %3 to i64, !dbg !11580
  %add = add i64 %mul, %conv, !dbg !11581
  %4 = load i64, i64* %n_buckets.addr, align 8, !dbg !11582, !tbaa !3285
  %rem = urem i64 %add, %4, !dbg !11583
  store i64 %rem, i64* %value, align 8, !dbg !11584, !tbaa !3285
  br label %for.inc, !dbg !11585

for.inc:                                          ; preds = %for.body
  %5 = load i8*, i8** %string.addr, align 8, !dbg !11586, !tbaa !2645
  %incdec.ptr = getelementptr inbounds i8, i8* %5, i32 1, !dbg !11586
  store i8* %incdec.ptr, i8** %string.addr, align 8, !dbg !11586, !tbaa !2645
  br label %for.cond, !dbg !11587, !llvm.loop !11588

for.end:                                          ; preds = %for.cond
  %6 = load i64, i64* %value, align 8, !dbg !11590, !tbaa !3285
  ret i64 %6, !dbg !11591
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_reset_tuning(%struct.hash_tuning* %tuning) #4 !dbg !11592 !ctir !931 {
entry:
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !11593, metadata !DIExpression()), !dbg !11594
  %0 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11595, !tbaa !2645
  %1 = bitcast %struct.hash_tuning* %0 to i8*, !dbg !11596
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 bitcast (%struct.hash_tuning* @default_tuning to i8*), i64 20, i1 false), !dbg !11596, !tbaa.struct !11597
  ret void, !dbg !11600
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.hash_table* @hash_initialize(i64 %candidate, %struct.hash_tuning* %tuning, i64 (i8*, i64)* %hasher, i1 (i8*, i8*)* %comparator, void (i8*)* %data_freer) #4 !dbg !11601 !ctir !934 {
entry:
  %retval = alloca %struct.hash_table*, align 8
  %candidate.addr = alloca i64, align 8
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  %hasher.addr = alloca i64 (i8*, i64)*, align 8
  %comparator.addr = alloca i1 (i8*, i8*)*, align 8
  %data_freer.addr = alloca void (i8*)*, align 8
  %table = alloca %struct.hash_table*, align 8, !ctir !936
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !11602, metadata !DIExpression()), !dbg !11603
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !11604, metadata !DIExpression()), !dbg !11605
  store i64 (i8*, i64)* %hasher, i64 (i8*, i64)** %hasher.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i64 (i8*, i64)** %hasher.addr, metadata !11606, metadata !DIExpression()), !dbg !11607
  store i1 (i8*, i8*)* %comparator, i1 (i8*, i8*)** %comparator.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i1 (i8*, i8*)** %comparator.addr, metadata !11608, metadata !DIExpression()), !dbg !11609
  store void (i8*)* %data_freer, void (i8*)** %data_freer.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata void (i8*)** %data_freer.addr, metadata !11610, metadata !DIExpression()), !dbg !11611
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table, metadata !11612, metadata !DIExpression()), !dbg !11613
  %0 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !11614, !tbaa !2645
  %cmp = icmp eq i64 (i8*, i64)* %0, null, !dbg !11616
  br i1 %cmp, label %if.then, label %if.end, !dbg !11617

if.then:                                          ; preds = %entry
  store i64 (i8*, i64)* @raw_hasher, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !11618, !tbaa !2645
  br label %if.end, !dbg !11619

if.end:                                           ; preds = %if.then, %entry
  %1 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !11620, !tbaa !2645
  %cmp1 = icmp eq i1 (i8*, i8*)* %1, null, !dbg !11622
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !11623

if.then2:                                         ; preds = %if.end
  store i1 (i8*, i8*)* @raw_comparator, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !11624, !tbaa !2645
  br label %if.end3, !dbg !11625

if.end3:                                          ; preds = %if.then2, %if.end
  %call = call noalias i8* @malloc(i64 80) #9, !dbg !11626
  %2 = bitcast i8* %call to %struct.hash_table*, !dbg !11626
  store %struct.hash_table* %2, %struct.hash_table** %table, align 8, !dbg !11627, !tbaa !2645
  %3 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11628, !tbaa !2645
  %cmp4 = icmp eq %struct.hash_table* %3, null, !dbg !11630
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !11631

if.then5:                                         ; preds = %if.end3
  store %struct.hash_table* null, %struct.hash_table** %retval, align 8, !dbg !11632
  br label %return, !dbg !11632

if.end6:                                          ; preds = %if.end3
  %4 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11633, !tbaa !2645
  %tobool = icmp ne %struct.hash_tuning* %4, null, !dbg !11633
  br i1 %tobool, label %if.end8, label %if.then7, !dbg !11635

if.then7:                                         ; preds = %if.end6
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11636, !tbaa !2645
  br label %if.end8, !dbg !11637

if.end8:                                          ; preds = %if.then7, %if.end6
  %5 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11638, !tbaa !2645
  %6 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11639, !tbaa !2645
  %tuning9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 5, !dbg !11640, !ctir !840
  store %struct.hash_tuning* %5, %struct.hash_tuning** %tuning9, align 8, !dbg !11641, !tbaa !11642, !ctir !857
  %7 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11643, !tbaa !2645
  %call10 = call zeroext i1 @check_tuning(%struct.hash_table* %7), !dbg !11645
  br i1 %call10, label %if.end12, label %if.then11, !dbg !11646

if.then11:                                        ; preds = %if.end8
  br label %fail, !dbg !11647

if.end12:                                         ; preds = %if.end8
  %8 = load i64, i64* %candidate.addr, align 8, !dbg !11649, !tbaa !3285
  %9 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11650, !tbaa !2645
  %call13 = call i64 @compute_bucket_size(i64 %8, %struct.hash_tuning* %9) #14, !dbg !11651
  %10 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11652, !tbaa !2645
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 2, !dbg !11653, !ctir !840
  store i64 %call13, i64* %n_buckets, align 8, !dbg !11654, !tbaa !11097, !ctir !55
  %11 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11655, !tbaa !2645
  %n_buckets14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 2, !dbg !11657, !ctir !840
  %12 = load i64, i64* %n_buckets14, align 8, !dbg !11657, !tbaa !11097, !ctir !55
  %tobool15 = icmp ne i64 %12, 0, !dbg !11655
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !11658

if.then16:                                        ; preds = %if.end12
  br label %fail, !dbg !11659

if.end17:                                         ; preds = %if.end12
  %13 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11660, !tbaa !2645
  %n_buckets18 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 2, !dbg !11661, !ctir !840
  %14 = load i64, i64* %n_buckets18, align 8, !dbg !11661, !tbaa !11097, !ctir !55
  %call19 = call noalias i8* @calloc(i64 %14, i64 16) #9, !dbg !11662
  %15 = bitcast i8* %call19 to %struct.hash_entry*, !dbg !11662
  %16 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11663, !tbaa !2645
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 0, !dbg !11664, !ctir !840
  store %struct.hash_entry* %15, %struct.hash_entry** %bucket, align 8, !dbg !11665, !tbaa !11124, !ctir !845
  %17 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11666, !tbaa !2645
  %bucket20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 0, !dbg !11668, !ctir !840
  %18 = load %struct.hash_entry*, %struct.hash_entry** %bucket20, align 8, !dbg !11668, !tbaa !11124, !ctir !845
  %cmp21 = icmp eq %struct.hash_entry* %18, null, !dbg !11669
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !11670

if.then22:                                        ; preds = %if.end17
  br label %fail, !dbg !11671

if.end23:                                         ; preds = %if.end17
  %19 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11672, !tbaa !2645
  %bucket24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 0, !dbg !11673, !ctir !840
  %20 = load %struct.hash_entry*, %struct.hash_entry** %bucket24, align 8, !dbg !11673, !tbaa !11124, !ctir !845
  %21 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11674, !tbaa !2645
  %n_buckets25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 2, !dbg !11675, !ctir !840
  %22 = load i64, i64* %n_buckets25, align 8, !dbg !11675, !tbaa !11097, !ctir !55
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %20, i64 %22, !dbg !11676
  %23 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11677, !tbaa !2645
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 1, !dbg !11678, !ctir !840
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket_limit, align 8, !dbg !11679, !tbaa !11131, !ctir !851
  %24 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11680, !tbaa !2645
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %24, i32 0, i32 3, !dbg !11681, !ctir !840
  store i64 0, i64* %n_buckets_used, align 8, !dbg !11682, !tbaa !11105, !ctir !55
  %25 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11683, !tbaa !2645
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 4, !dbg !11684, !ctir !840
  store i64 0, i64* %n_entries, align 8, !dbg !11685, !tbaa !11112, !ctir !55
  %26 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher.addr, align 8, !dbg !11686, !tbaa !2645
  %27 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11687, !tbaa !2645
  %hasher26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %27, i32 0, i32 6, !dbg !11688, !ctir !840
  store i64 (i8*, i64)* %26, i64 (i8*, i64)** %hasher26, align 8, !dbg !11689, !tbaa !11326, !ctir !869
  %28 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator.addr, align 8, !dbg !11690, !tbaa !2645
  %29 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11691, !tbaa !2645
  %comparator27 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 7, !dbg !11692, !ctir !840
  store i1 (i8*, i8*)* %28, i1 (i8*, i8*)** %comparator27, align 8, !dbg !11693, !tbaa !11300, !ctir !872
  %30 = load void (i8*)*, void (i8*)** %data_freer.addr, align 8, !dbg !11694, !tbaa !2645
  %31 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11695, !tbaa !2645
  %data_freer28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %31, i32 0, i32 8, !dbg !11696, !ctir !840
  store void (i8*)* %30, void (i8*)** %data_freer28, align 8, !dbg !11697, !tbaa !11698, !ctir !875
  %32 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11699, !tbaa !2645
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 9, !dbg !11700, !ctir !840
  store %struct.hash_entry* null, %struct.hash_entry** %free_entry_list, align 8, !dbg !11701, !tbaa !11702, !ctir !845
  %33 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11703, !tbaa !2645
  store %struct.hash_table* %33, %struct.hash_table** %retval, align 8, !dbg !11704
  br label %return, !dbg !11704

fail:                                             ; preds = %if.then22, %if.then16, %if.then11
  call void @llvm.dbg.label(metadata !11705), !dbg !11706
  %34 = load %struct.hash_table*, %struct.hash_table** %table, align 8, !dbg !11707, !tbaa !2645
  %35 = bitcast %struct.hash_table* %34 to i8*, !dbg !11707
  call void @free(i8* %35) #9, !dbg !11708
  store %struct.hash_table* null, %struct.hash_table** %retval, align 8, !dbg !11709
  br label %return, !dbg !11709

return:                                           ; preds = %fail, %if.end23, %if.then5
  %36 = load %struct.hash_table*, %struct.hash_table** %retval, align 8, !dbg !11710
  ret %struct.hash_table* %36, !dbg !11710
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @raw_hasher(i8* %data, i64 %n) #4 !dbg !11711 !ctir !633 {
entry:
  %data.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %val = alloca i64, align 8, !ctir !55
  store i8* %data, i8** %data.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !11712, metadata !DIExpression()), !dbg !11713
  store i64 %n, i64* %n.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !11714, metadata !DIExpression()), !dbg !11715
  call void @llvm.dbg.declare(metadata i64* %val, metadata !11716, metadata !DIExpression()), !dbg !11717
  %0 = load i8*, i8** %data.addr, align 8, !dbg !11718, !tbaa !2645
  %1 = ptrtoint i8* %0 to i64, !dbg !11719
  %call = call i64 @rotr_sz(i64 %1, i32 3), !dbg !11720
  store i64 %call, i64* %val, align 8, !dbg !11717, !tbaa !3285
  %2 = load i64, i64* %val, align 8, !dbg !11721, !tbaa !3285
  %3 = load i64, i64* %n.addr, align 8, !dbg !11722, !tbaa !3285
  %rem = urem i64 %2, %3, !dbg !11723
  ret i64 %rem, !dbg !11724
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @raw_comparator(i8* %a, i8* %b) #4 !dbg !11725 !ctir !635 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !11726, metadata !DIExpression()), !dbg !11727
  store i8* %b, i8** %b.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !11728, metadata !DIExpression()), !dbg !11729
  %0 = load i8*, i8** %a.addr, align 8, !dbg !11730, !tbaa !2645
  %1 = load i8*, i8** %b.addr, align 8, !dbg !11731, !tbaa !2645
  %cmp = icmp eq i8* %0, %1, !dbg !11732
  ret i1 %cmp, !dbg !11733
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @check_tuning(%struct.hash_table* %table) #4 !dbg !11734 !ctir !948 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %tuning = alloca %struct.hash_tuning*, align 8, !ctir !857
  %epsilon = alloca float, align 4, !ctir !863
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11735, metadata !DIExpression()), !dbg !11736
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning, metadata !11737, metadata !DIExpression()), !dbg !11738
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11739, !tbaa !2645
  %tuning1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 5, !dbg !11740, !ctir !840
  %1 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning1, align 8, !dbg !11740, !tbaa !11642, !ctir !857
  store %struct.hash_tuning* %1, %struct.hash_tuning** %tuning, align 8, !dbg !11738, !tbaa !2645
  call void @llvm.dbg.declare(metadata float* %epsilon, metadata !11741, metadata !DIExpression()), !dbg !11742
  %2 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11743, !tbaa !2645
  %cmp = icmp eq %struct.hash_tuning* %2, @default_tuning, !dbg !11745
  br i1 %cmp, label %if.then, label %if.end, !dbg !11746

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !11747
  br label %return, !dbg !11747

if.end:                                           ; preds = %entry
  store float 0x3FB99999A0000000, float* %epsilon, align 4, !dbg !11748, !tbaa !11598
  %3 = load float, float* %epsilon, align 4, !dbg !11749, !tbaa !11598
  %4 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11751, !tbaa !2645
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %4, i32 0, i32 2, !dbg !11752, !ctir !858
  %5 = load float, float* %growth_threshold, align 4, !dbg !11752, !tbaa !11753, !ctir !863
  %cmp2 = fcmp olt float %3, %5, !dbg !11755
  br i1 %cmp2, label %land.lhs.true, label %if.end22, !dbg !11756

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11757, !tbaa !2645
  %growth_threshold3 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %6, i32 0, i32 2, !dbg !11758, !ctir !858
  %7 = load float, float* %growth_threshold3, align 4, !dbg !11758, !tbaa !11753, !ctir !863
  %8 = load float, float* %epsilon, align 4, !dbg !11759, !tbaa !11598
  %sub = fsub float 1.000000e+00, %8, !dbg !11760
  %cmp4 = fcmp olt float %7, %sub, !dbg !11761
  br i1 %cmp4, label %land.lhs.true5, label %if.end22, !dbg !11762

land.lhs.true5:                                   ; preds = %land.lhs.true
  %9 = load float, float* %epsilon, align 4, !dbg !11763, !tbaa !11598
  %add = fadd float 1.000000e+00, %9, !dbg !11764
  %10 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11765, !tbaa !2645
  %growth_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %10, i32 0, i32 3, !dbg !11766, !ctir !858
  %11 = load float, float* %growth_factor, align 4, !dbg !11766, !tbaa !11767, !ctir !863
  %cmp6 = fcmp olt float %add, %11, !dbg !11768
  br i1 %cmp6, label %land.lhs.true7, label %if.end22, !dbg !11769

land.lhs.true7:                                   ; preds = %land.lhs.true5
  %12 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11770, !tbaa !2645
  %shrink_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %12, i32 0, i32 0, !dbg !11771, !ctir !858
  %13 = load float, float* %shrink_threshold, align 4, !dbg !11771, !tbaa !11772, !ctir !863
  %cmp8 = fcmp ole float 0.000000e+00, %13, !dbg !11773
  br i1 %cmp8, label %land.lhs.true9, label %if.end22, !dbg !11774

land.lhs.true9:                                   ; preds = %land.lhs.true7
  %14 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11775, !tbaa !2645
  %shrink_threshold10 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %14, i32 0, i32 0, !dbg !11776, !ctir !858
  %15 = load float, float* %shrink_threshold10, align 4, !dbg !11776, !tbaa !11772, !ctir !863
  %16 = load float, float* %epsilon, align 4, !dbg !11777, !tbaa !11598
  %add11 = fadd float %15, %16, !dbg !11778
  %17 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11779, !tbaa !2645
  %shrink_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %17, i32 0, i32 1, !dbg !11780, !ctir !858
  %18 = load float, float* %shrink_factor, align 4, !dbg !11780, !tbaa !11781, !ctir !863
  %cmp12 = fcmp olt float %add11, %18, !dbg !11782
  br i1 %cmp12, label %land.lhs.true13, label %if.end22, !dbg !11783

land.lhs.true13:                                  ; preds = %land.lhs.true9
  %19 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11784, !tbaa !2645
  %shrink_factor14 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %19, i32 0, i32 1, !dbg !11785, !ctir !858
  %20 = load float, float* %shrink_factor14, align 4, !dbg !11785, !tbaa !11781, !ctir !863
  %cmp15 = fcmp ole float %20, 1.000000e+00, !dbg !11786
  br i1 %cmp15, label %land.lhs.true16, label %if.end22, !dbg !11787

land.lhs.true16:                                  ; preds = %land.lhs.true13
  %21 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11788, !tbaa !2645
  %shrink_threshold17 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %21, i32 0, i32 0, !dbg !11789, !ctir !858
  %22 = load float, float* %shrink_threshold17, align 4, !dbg !11789, !tbaa !11772, !ctir !863
  %23 = load float, float* %epsilon, align 4, !dbg !11790, !tbaa !11598
  %add18 = fadd float %22, %23, !dbg !11791
  %24 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !11792, !tbaa !2645
  %growth_threshold19 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %24, i32 0, i32 2, !dbg !11793, !ctir !858
  %25 = load float, float* %growth_threshold19, align 4, !dbg !11793, !tbaa !11753, !ctir !863
  %cmp20 = fcmp olt float %add18, %25, !dbg !11794
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !11795

if.then21:                                        ; preds = %land.lhs.true16
  store i1 true, i1* %retval, align 1, !dbg !11796
  br label %return, !dbg !11796

if.end22:                                         ; preds = %land.lhs.true16, %land.lhs.true13, %land.lhs.true9, %land.lhs.true7, %land.lhs.true5, %land.lhs.true, %if.end
  %26 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11797, !tbaa !2645
  %tuning23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %26, i32 0, i32 5, !dbg !11798, !ctir !840
  store %struct.hash_tuning* @default_tuning, %struct.hash_tuning** %tuning23, align 8, !dbg !11799, !tbaa !11642, !ctir !857
  store i1 false, i1* %retval, align 1, !dbg !11800
  br label %return, !dbg !11800

return:                                           ; preds = %if.end22, %if.then21, %if.then
  %27 = load i1, i1* %retval, align 1, !dbg !11801
  ret i1 %27, !dbg !11801
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal i64 @compute_bucket_size(i64 %candidate, %struct.hash_tuning* %tuning) #10 !dbg !11802 !ctir !950 {
entry:
  %retval = alloca i64, align 8
  %candidate.addr = alloca i64, align 8
  %tuning.addr = alloca %struct.hash_tuning*, align 8
  %new_candidate = alloca float, align 4, !ctir !863
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !11803, metadata !DIExpression()), !dbg !11804
  store %struct.hash_tuning* %tuning, %struct.hash_tuning** %tuning.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning.addr, metadata !11805, metadata !DIExpression()), !dbg !11806
  %0 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11807, !tbaa !2645
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %0, i32 0, i32 4, !dbg !11809, !ctir !858
  %1 = load i8, i8* %is_n_buckets, align 4, !dbg !11809, !tbaa !11810
  %tobool = trunc i8 %1 to i1, !dbg !11809, !ctir !142
  br i1 %tobool, label %if.end4, label %if.then, !dbg !11811

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %new_candidate, metadata !11812, metadata !DIExpression()), !dbg !11814
  %2 = load i64, i64* %candidate.addr, align 8, !dbg !11815, !tbaa !3285
  %conv = uitofp i64 %2 to float, !dbg !11815
  %3 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning.addr, align 8, !dbg !11816, !tbaa !2645
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %3, i32 0, i32 2, !dbg !11817, !ctir !858
  %4 = load float, float* %growth_threshold, align 4, !dbg !11817, !tbaa !11753, !ctir !863
  %div = fdiv float %conv, %4, !dbg !11818
  store float %div, float* %new_candidate, align 4, !dbg !11814, !tbaa !11598
  %5 = load float, float* %new_candidate, align 4, !dbg !11819, !tbaa !11598
  %cmp = fcmp ole float 0x43F0000000000000, %5, !dbg !11821
  br i1 %cmp, label %if.then2, label %if.end, !dbg !11822

if.then2:                                         ; preds = %if.then
  store i64 0, i64* %retval, align 8, !dbg !11823
  br label %return, !dbg !11823

if.end:                                           ; preds = %if.then
  %6 = load float, float* %new_candidate, align 4, !dbg !11824, !tbaa !11598
  %conv3 = fptoui float %6 to i64, !dbg !11824
  store i64 %conv3, i64* %candidate.addr, align 8, !dbg !11825, !tbaa !3285
  br label %if.end4, !dbg !11826

if.end4:                                          ; preds = %if.end, %entry
  %7 = load i64, i64* %candidate.addr, align 8, !dbg !11827, !tbaa !3285
  %call = call i64 @next_prime(i64 %7) #16, !dbg !11828
  store i64 %call, i64* %candidate.addr, align 8, !dbg !11829, !tbaa !3285
  %8 = load i64, i64* %candidate.addr, align 8, !dbg !11830, !tbaa !3285
  %cmp5 = icmp ult i64 1152921504606846975, %8, !dbg !11830
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !11832

if.then7:                                         ; preds = %if.end4
  store i64 0, i64* %retval, align 8, !dbg !11833
  br label %return, !dbg !11833

if.end8:                                          ; preds = %if.end4
  %9 = load i64, i64* %candidate.addr, align 8, !dbg !11834, !tbaa !3285
  store i64 %9, i64* %retval, align 8, !dbg !11835
  br label %return, !dbg !11835

return:                                           ; preds = %if.end8, %if.then7, %if.then2
  %10 = load i64, i64* %retval, align 8, !dbg !11836
  ret i64 %10, !dbg !11836
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define internal i64 @next_prime(i64 %candidate) #11 !dbg !11837 !ctir !952 {
entry:
  %candidate.addr = alloca i64, align 8
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !11838, metadata !DIExpression()), !dbg !11839
  %0 = load i64, i64* %candidate.addr, align 8, !dbg !11840, !tbaa !3285
  %cmp = icmp ult i64 %0, 10, !dbg !11842
  br i1 %cmp, label %if.then, label %if.end, !dbg !11843

if.then:                                          ; preds = %entry
  store i64 10, i64* %candidate.addr, align 8, !dbg !11844, !tbaa !3285
  br label %if.end, !dbg !11845

if.end:                                           ; preds = %if.then, %entry
  %1 = load i64, i64* %candidate.addr, align 8, !dbg !11846, !tbaa !3285
  %or = or i64 %1, 1, !dbg !11846
  store i64 %or, i64* %candidate.addr, align 8, !dbg !11846, !tbaa !3285
  br label %while.cond, !dbg !11847

while.cond:                                       ; preds = %while.body, %if.end
  %2 = load i64, i64* %candidate.addr, align 8, !dbg !11848, !tbaa !3285
  %cmp1 = icmp ne i64 -1, %2, !dbg !11849
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !11850

land.rhs:                                         ; preds = %while.cond
  %3 = load i64, i64* %candidate.addr, align 8, !dbg !11851, !tbaa !3285
  %call = call zeroext i1 @is_prime(i64 %3) #16, !dbg !11852
  %lnot = xor i1 %call, true, !dbg !11853
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %4 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !11854
  br i1 %4, label %while.body, label %while.end, !dbg !11847

while.body:                                       ; preds = %land.end
  %5 = load i64, i64* %candidate.addr, align 8, !dbg !11855, !tbaa !3285
  %add = add i64 %5, 2, !dbg !11855
  store i64 %add, i64* %candidate.addr, align 8, !dbg !11855, !tbaa !3285
  br label %while.cond, !dbg !11847, !llvm.loop !11856

while.end:                                        ; preds = %land.end
  %6 = load i64, i64* %candidate.addr, align 8, !dbg !11858, !tbaa !3285
  ret i64 %6, !dbg !11859
}

; Function Attrs: noinline nounwind optnone readnone uwtable
define internal zeroext i1 @is_prime(i64 %candidate) #11 !dbg !11860 !ctir !954 {
entry:
  %candidate.addr = alloca i64, align 8
  %divisor = alloca i64, align 8, !ctir !55
  %square = alloca i64, align 8, !ctir !55
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !11861, metadata !DIExpression()), !dbg !11862
  call void @llvm.dbg.declare(metadata i64* %divisor, metadata !11863, metadata !DIExpression()), !dbg !11864
  store i64 3, i64* %divisor, align 8, !dbg !11864, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %square, metadata !11865, metadata !DIExpression()), !dbg !11866
  %0 = load i64, i64* %divisor, align 8, !dbg !11867, !tbaa !3285
  %1 = load i64, i64* %divisor, align 8, !dbg !11868, !tbaa !3285
  %mul = mul i64 %0, %1, !dbg !11869
  store i64 %mul, i64* %square, align 8, !dbg !11866, !tbaa !3285
  br label %while.cond, !dbg !11870

while.cond:                                       ; preds = %while.body, %entry
  %2 = load i64, i64* %square, align 8, !dbg !11871, !tbaa !3285
  %3 = load i64, i64* %candidate.addr, align 8, !dbg !11872, !tbaa !3285
  %cmp = icmp ult i64 %2, %3, !dbg !11873
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !11874

land.rhs:                                         ; preds = %while.cond
  %4 = load i64, i64* %candidate.addr, align 8, !dbg !11875, !tbaa !3285
  %5 = load i64, i64* %divisor, align 8, !dbg !11876, !tbaa !3285
  %rem = urem i64 %4, %5, !dbg !11877
  %tobool = icmp ne i64 %rem, 0, !dbg !11874
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %6 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ], !dbg !11878
  br i1 %6, label %while.body, label %while.end, !dbg !11870

while.body:                                       ; preds = %land.end
  %7 = load i64, i64* %divisor, align 8, !dbg !11879, !tbaa !3285
  %inc = add i64 %7, 1, !dbg !11879
  store i64 %inc, i64* %divisor, align 8, !dbg !11879, !tbaa !3285
  %8 = load i64, i64* %divisor, align 8, !dbg !11881, !tbaa !3285
  %mul1 = mul i64 4, %8, !dbg !11882
  %9 = load i64, i64* %square, align 8, !dbg !11883, !tbaa !3285
  %add = add i64 %9, %mul1, !dbg !11883
  store i64 %add, i64* %square, align 8, !dbg !11883, !tbaa !3285
  %10 = load i64, i64* %divisor, align 8, !dbg !11884, !tbaa !3285
  %inc2 = add i64 %10, 1, !dbg !11884
  store i64 %inc2, i64* %divisor, align 8, !dbg !11884, !tbaa !3285
  br label %while.cond, !dbg !11870, !llvm.loop !11885

while.end:                                        ; preds = %land.end
  %11 = load i64, i64* %candidate.addr, align 8, !dbg !11887, !tbaa !3285
  %12 = load i64, i64* %divisor, align 8, !dbg !11888, !tbaa !3285
  %rem3 = urem i64 %11, %12, !dbg !11889
  %tobool4 = icmp ne i64 %rem3, 0, !dbg !11887
  %13 = zext i1 %tobool4 to i64, !dbg !11887
  %cond = select i1 %tobool4, i32 1, i32 0, !dbg !11887
  %tobool5 = icmp ne i32 %cond, 0, !dbg !11890
  ret i1 %tobool5, !dbg !11891
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_clear(%struct.hash_table* %table) #4 !dbg !11892 !ctir !937 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !845
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !845
  %next = alloca %struct.hash_entry*, align 8, !ctir !845
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11893, metadata !DIExpression()), !dbg !11894
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11895, metadata !DIExpression()), !dbg !11896
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11897, !tbaa !2645
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !11899, !ctir !840
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !11899, !tbaa !11124, !ctir !845
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !11900, !tbaa !2645
  br label %for.cond, !dbg !11901

for.cond:                                         ; preds = %for.inc23, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11902, !tbaa !2645
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11904, !tbaa !2645
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !11905, !ctir !840
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !11905, !tbaa !11131, !ctir !851
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !11906
  br i1 %cmp, label %for.body, label %for.end24, !dbg !11907

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11908, !tbaa !2645
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !11911, !ctir !846
  %6 = load i8*, i8** %data, align 8, !dbg !11911, !tbaa !11138, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !11908
  br i1 %tobool, label %if.then, label %if.end22, !dbg !11912

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11913, metadata !DIExpression()), !dbg !11915
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !11916, metadata !DIExpression()), !dbg !11917
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11918, !tbaa !2645
  %next2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 1, !dbg !11920, !ctir !846
  %8 = load %struct.hash_entry*, %struct.hash_entry** %next2, align 8, !dbg !11920, !tbaa !11150, !ctir !845
  store %struct.hash_entry* %8, %struct.hash_entry** %cursor, align 8, !dbg !11921, !tbaa !2645
  br label %for.cond3, !dbg !11922

for.cond3:                                        ; preds = %for.inc, %if.then
  %9 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11923, !tbaa !2645
  %tobool4 = icmp ne %struct.hash_entry* %9, null, !dbg !11925
  br i1 %tobool4, label %for.body5, label %for.end, !dbg !11925

for.body5:                                        ; preds = %for.cond3
  %10 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11926, !tbaa !2645
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 8, !dbg !11929, !ctir !840
  %11 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !11929, !tbaa !11698, !ctir !875
  %tobool6 = icmp ne void (i8*)* %11, null, !dbg !11926
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !11930

if.then7:                                         ; preds = %for.body5
  %12 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11931, !tbaa !2645
  %data_freer8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %12, i32 0, i32 8, !dbg !11932, !ctir !840
  %13 = load void (i8*)*, void (i8*)** %data_freer8, align 8, !dbg !11932, !tbaa !11698, !ctir !875
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11933, !tbaa !2645
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !11934, !ctir !846
  %15 = load i8*, i8** %data9, align 8, !dbg !11934, !tbaa !11138, !ctir !53
  call void %13(i8* %15), !dbg !11931
  br label %if.end, !dbg !11931

if.end:                                           ; preds = %if.then7, %for.body5
  %16 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11935, !tbaa !2645
  %data10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 0, !dbg !11936, !ctir !846
  store i8* null, i8** %data10, align 8, !dbg !11937, !tbaa !11138, !ctir !53
  %17 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11938, !tbaa !2645
  %next11 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !11939, !ctir !846
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next11, align 8, !dbg !11939, !tbaa !11150, !ctir !845
  store %struct.hash_entry* %18, %struct.hash_entry** %next, align 8, !dbg !11940, !tbaa !2645
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11941, !tbaa !2645
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 9, !dbg !11942, !ctir !840
  %20 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !11942, !tbaa !11702, !ctir !845
  %21 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11943, !tbaa !2645
  %next12 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %21, i32 0, i32 1, !dbg !11944, !ctir !846
  store %struct.hash_entry* %20, %struct.hash_entry** %next12, align 8, !dbg !11945, !tbaa !11150, !ctir !845
  %22 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !11946, !tbaa !2645
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11947, !tbaa !2645
  %free_entry_list13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 9, !dbg !11948, !ctir !840
  store %struct.hash_entry* %22, %struct.hash_entry** %free_entry_list13, align 8, !dbg !11949, !tbaa !11702, !ctir !845
  br label %for.inc, !dbg !11950

for.inc:                                          ; preds = %if.end
  %24 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !11951, !tbaa !2645
  store %struct.hash_entry* %24, %struct.hash_entry** %cursor, align 8, !dbg !11952, !tbaa !2645
  br label %for.cond3, !dbg !11953, !llvm.loop !11954

for.end:                                          ; preds = %for.cond3
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11956, !tbaa !2645
  %data_freer14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 8, !dbg !11958, !ctir !840
  %26 = load void (i8*)*, void (i8*)** %data_freer14, align 8, !dbg !11958, !tbaa !11698, !ctir !875
  %tobool15 = icmp ne void (i8*)* %26, null, !dbg !11956
  br i1 %tobool15, label %if.then16, label %if.end19, !dbg !11959

if.then16:                                        ; preds = %for.end
  %27 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11960, !tbaa !2645
  %data_freer17 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %27, i32 0, i32 8, !dbg !11961, !ctir !840
  %28 = load void (i8*)*, void (i8*)** %data_freer17, align 8, !dbg !11961, !tbaa !11698, !ctir !875
  %29 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11962, !tbaa !2645
  %data18 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %29, i32 0, i32 0, !dbg !11963, !ctir !846
  %30 = load i8*, i8** %data18, align 8, !dbg !11963, !tbaa !11138, !ctir !53
  call void %28(i8* %30), !dbg !11960
  br label %if.end19, !dbg !11960

if.end19:                                         ; preds = %if.then16, %for.end
  %31 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11964, !tbaa !2645
  %data20 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %31, i32 0, i32 0, !dbg !11965, !ctir !846
  store i8* null, i8** %data20, align 8, !dbg !11966, !tbaa !11138, !ctir !53
  %32 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11967, !tbaa !2645
  %next21 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %32, i32 0, i32 1, !dbg !11968, !ctir !846
  store %struct.hash_entry* null, %struct.hash_entry** %next21, align 8, !dbg !11969, !tbaa !11150, !ctir !845
  br label %if.end22, !dbg !11970

if.end22:                                         ; preds = %if.end19, %for.body
  br label %for.inc23, !dbg !11971

for.inc23:                                        ; preds = %if.end22
  %33 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !11972, !tbaa !2645
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 1, !dbg !11972
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !11972, !tbaa !2645
  br label %for.cond, !dbg !11973, !llvm.loop !11974

for.end24:                                        ; preds = %for.cond
  %34 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11976, !tbaa !2645
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 3, !dbg !11977, !ctir !840
  store i64 0, i64* %n_buckets_used, align 8, !dbg !11978, !tbaa !11105, !ctir !55
  %35 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11979, !tbaa !2645
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %35, i32 0, i32 4, !dbg !11980, !ctir !840
  store i64 0, i64* %n_entries, align 8, !dbg !11981, !tbaa !11112, !ctir !55
  ret void, !dbg !11982
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hash_free(%struct.hash_table* %table) #4 !dbg !11983 !ctir !937 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !845
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !845
  %next = alloca %struct.hash_entry*, align 8, !ctir !845
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !11984, metadata !DIExpression()), !dbg !11985
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !11986, metadata !DIExpression()), !dbg !11987
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !11988, metadata !DIExpression()), !dbg !11989
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !11990, metadata !DIExpression()), !dbg !11991
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11992, !tbaa !2645
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 8, !dbg !11994, !ctir !840
  %1 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !11994, !tbaa !11698, !ctir !875
  %tobool = icmp ne void (i8*)* %1, null, !dbg !11992
  br i1 %tobool, label %land.lhs.true, label %if.end13, !dbg !11995

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11996, !tbaa !2645
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 4, !dbg !11997, !ctir !840
  %3 = load i64, i64* %n_entries, align 8, !dbg !11997, !tbaa !11112, !ctir !55
  %tobool1 = icmp ne i64 %3, 0, !dbg !11996
  br i1 %tobool1, label %if.then, label %if.end13, !dbg !11998

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !11999, !tbaa !2645
  %bucket2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %4, i32 0, i32 0, !dbg !12002, !ctir !840
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket2, align 8, !dbg !12002, !tbaa !11124, !ctir !845
  store %struct.hash_entry* %5, %struct.hash_entry** %bucket, align 8, !dbg !12003, !tbaa !2645
  br label %for.cond, !dbg !12004

for.cond:                                         ; preds = %for.inc11, %if.then
  %6 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12005, !tbaa !2645
  %7 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12007, !tbaa !2645
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %7, i32 0, i32 1, !dbg !12008, !ctir !840
  %8 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12008, !tbaa !11131, !ctir !851
  %cmp = icmp ult %struct.hash_entry* %6, %8, !dbg !12009
  br i1 %cmp, label %for.body, label %for.end12, !dbg !12010

for.body:                                         ; preds = %for.cond
  %9 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12011, !tbaa !2645
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %9, i32 0, i32 0, !dbg !12014, !ctir !846
  %10 = load i8*, i8** %data, align 8, !dbg !12014, !tbaa !11138, !ctir !53
  %tobool3 = icmp ne i8* %10, null, !dbg !12011
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !12015

if.then4:                                         ; preds = %for.body
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12016, !tbaa !2645
  store %struct.hash_entry* %11, %struct.hash_entry** %cursor, align 8, !dbg !12019, !tbaa !2645
  br label %for.cond5, !dbg !12020

for.cond5:                                        ; preds = %for.inc, %if.then4
  %12 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12021, !tbaa !2645
  %tobool6 = icmp ne %struct.hash_entry* %12, null, !dbg !12023
  br i1 %tobool6, label %for.body7, label %for.end, !dbg !12023

for.body7:                                        ; preds = %for.cond5
  %13 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12024, !tbaa !2645
  %data_freer8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 8, !dbg !12025, !ctir !840
  %14 = load void (i8*)*, void (i8*)** %data_freer8, align 8, !dbg !12025, !tbaa !11698, !ctir !875
  %15 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12026, !tbaa !2645
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i32 0, i32 0, !dbg !12027, !ctir !846
  %16 = load i8*, i8** %data9, align 8, !dbg !12027, !tbaa !11138, !ctir !53
  call void %14(i8* %16), !dbg !12024
  br label %for.inc, !dbg !12024

for.inc:                                          ; preds = %for.body7
  %17 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12028, !tbaa !2645
  %next10 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !12029, !ctir !846
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next10, align 8, !dbg !12029, !tbaa !11150, !ctir !845
  store %struct.hash_entry* %18, %struct.hash_entry** %cursor, align 8, !dbg !12030, !tbaa !2645
  br label %for.cond5, !dbg !12031, !llvm.loop !12032

for.end:                                          ; preds = %for.cond5
  br label %if.end, !dbg !12034

if.end:                                           ; preds = %for.end, %for.body
  br label %for.inc11, !dbg !12035

for.inc11:                                        ; preds = %if.end
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12036, !tbaa !2645
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 1, !dbg !12036
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12036, !tbaa !2645
  br label %for.cond, !dbg !12037, !llvm.loop !12038

for.end12:                                        ; preds = %for.cond
  br label %if.end13, !dbg !12040

if.end13:                                         ; preds = %for.end12, %land.lhs.true, %entry
  %20 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12041, !tbaa !2645
  %bucket14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20, i32 0, i32 0, !dbg !12043, !ctir !840
  %21 = load %struct.hash_entry*, %struct.hash_entry** %bucket14, align 8, !dbg !12043, !tbaa !11124, !ctir !845
  store %struct.hash_entry* %21, %struct.hash_entry** %bucket, align 8, !dbg !12044, !tbaa !2645
  br label %for.cond15, !dbg !12045

for.cond15:                                       ; preds = %for.inc26, %if.end13
  %22 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12046, !tbaa !2645
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12048, !tbaa !2645
  %bucket_limit16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 1, !dbg !12049, !ctir !840
  %24 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit16, align 8, !dbg !12049, !tbaa !11131, !ctir !851
  %cmp17 = icmp ult %struct.hash_entry* %22, %24, !dbg !12050
  br i1 %cmp17, label %for.body18, label %for.end28, !dbg !12051

for.body18:                                       ; preds = %for.cond15
  %25 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12052, !tbaa !2645
  %next19 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %25, i32 0, i32 1, !dbg !12055, !ctir !846
  %26 = load %struct.hash_entry*, %struct.hash_entry** %next19, align 8, !dbg !12055, !tbaa !11150, !ctir !845
  store %struct.hash_entry* %26, %struct.hash_entry** %cursor, align 8, !dbg !12056, !tbaa !2645
  br label %for.cond20, !dbg !12057

for.cond20:                                       ; preds = %for.inc24, %for.body18
  %27 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12058, !tbaa !2645
  %tobool21 = icmp ne %struct.hash_entry* %27, null, !dbg !12060
  br i1 %tobool21, label %for.body22, label %for.end25, !dbg !12060

for.body22:                                       ; preds = %for.cond20
  %28 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12061, !tbaa !2645
  %next23 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %28, i32 0, i32 1, !dbg !12063, !ctir !846
  %29 = load %struct.hash_entry*, %struct.hash_entry** %next23, align 8, !dbg !12063, !tbaa !11150, !ctir !845
  store %struct.hash_entry* %29, %struct.hash_entry** %next, align 8, !dbg !12064, !tbaa !2645
  %30 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12065, !tbaa !2645
  %31 = bitcast %struct.hash_entry* %30 to i8*, !dbg !12065
  call void @free(i8* %31) #9, !dbg !12066
  br label %for.inc24, !dbg !12067

for.inc24:                                        ; preds = %for.body22
  %32 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12068, !tbaa !2645
  store %struct.hash_entry* %32, %struct.hash_entry** %cursor, align 8, !dbg !12069, !tbaa !2645
  br label %for.cond20, !dbg !12070, !llvm.loop !12071

for.end25:                                        ; preds = %for.cond20
  br label %for.inc26, !dbg !12073

for.inc26:                                        ; preds = %for.end25
  %33 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12074, !tbaa !2645
  %incdec.ptr27 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 1, !dbg !12074
  store %struct.hash_entry* %incdec.ptr27, %struct.hash_entry** %bucket, align 8, !dbg !12074, !tbaa !2645
  br label %for.cond15, !dbg !12075, !llvm.loop !12076

for.end28:                                        ; preds = %for.cond15
  %34 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12078, !tbaa !2645
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 9, !dbg !12080, !ctir !840
  %35 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12080, !tbaa !11702, !ctir !845
  store %struct.hash_entry* %35, %struct.hash_entry** %cursor, align 8, !dbg !12081, !tbaa !2645
  br label %for.cond29, !dbg !12082

for.cond29:                                       ; preds = %for.inc33, %for.end28
  %36 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12083, !tbaa !2645
  %tobool30 = icmp ne %struct.hash_entry* %36, null, !dbg !12085
  br i1 %tobool30, label %for.body31, label %for.end34, !dbg !12085

for.body31:                                       ; preds = %for.cond29
  %37 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12086, !tbaa !2645
  %next32 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %37, i32 0, i32 1, !dbg !12088, !ctir !846
  %38 = load %struct.hash_entry*, %struct.hash_entry** %next32, align 8, !dbg !12088, !tbaa !11150, !ctir !845
  store %struct.hash_entry* %38, %struct.hash_entry** %next, align 8, !dbg !12089, !tbaa !2645
  %39 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12090, !tbaa !2645
  %40 = bitcast %struct.hash_entry* %39 to i8*, !dbg !12090
  call void @free(i8* %40) #9, !dbg !12091
  br label %for.inc33, !dbg !12092

for.inc33:                                        ; preds = %for.body31
  %41 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12093, !tbaa !2645
  store %struct.hash_entry* %41, %struct.hash_entry** %cursor, align 8, !dbg !12094, !tbaa !2645
  br label %for.cond29, !dbg !12095, !llvm.loop !12096

for.end34:                                        ; preds = %for.cond29
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12098, !tbaa !2645
  %bucket35 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %42, i32 0, i32 0, !dbg !12099, !ctir !840
  %43 = load %struct.hash_entry*, %struct.hash_entry** %bucket35, align 8, !dbg !12099, !tbaa !11124, !ctir !845
  %44 = bitcast %struct.hash_entry* %43 to i8*, !dbg !12098
  call void @free(i8* %44) #9, !dbg !12100
  %45 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12101, !tbaa !2645
  %46 = bitcast %struct.hash_table* %45 to i8*, !dbg !12101
  call void @free(i8* %46) #9, !dbg !12102
  ret void, !dbg !12103
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @hash_rehash(%struct.hash_table* %table, i64 %candidate) #4 !dbg !12104 !ctir !939 {
entry:
  %retval = alloca i1, align 1
  %table.addr = alloca %struct.hash_table*, align 8
  %candidate.addr = alloca i64, align 8
  %storage = alloca %struct.hash_table, align 8, !ctir !840
  %new_table = alloca %struct.hash_table*, align 8, !ctir !936
  %new_size = alloca i64, align 8, !ctir !55
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12105, metadata !DIExpression()), !dbg !12106
  store i64 %candidate, i64* %candidate.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %candidate.addr, metadata !12107, metadata !DIExpression()), !dbg !12108
  call void @llvm.dbg.declare(metadata %struct.hash_table* %storage, metadata !12109, metadata !DIExpression()), !dbg !12110
  call void @llvm.dbg.declare(metadata %struct.hash_table** %new_table, metadata !12111, metadata !DIExpression()), !dbg !12112
  call void @llvm.dbg.declare(metadata i64* %new_size, metadata !12113, metadata !DIExpression()), !dbg !12114
  %0 = load i64, i64* %candidate.addr, align 8, !dbg !12115, !tbaa !3285
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12116, !tbaa !2645
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %1, i32 0, i32 5, !dbg !12117, !ctir !840
  %2 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12117, !tbaa !11642, !ctir !857
  %call = call i64 @compute_bucket_size(i64 %0, %struct.hash_tuning* %2) #14, !dbg !12118
  store i64 %call, i64* %new_size, align 8, !dbg !12114, !tbaa !3285
  %3 = load i64, i64* %new_size, align 8, !dbg !12119, !tbaa !3285
  %tobool = icmp ne i64 %3, 0, !dbg !12119
  br i1 %tobool, label %if.end, label %if.then, !dbg !12121

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !12122
  br label %return, !dbg !12122

if.end:                                           ; preds = %entry
  %4 = load i64, i64* %new_size, align 8, !dbg !12123, !tbaa !3285
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12125, !tbaa !2645
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 2, !dbg !12126, !ctir !840
  %6 = load i64, i64* %n_buckets, align 8, !dbg !12126, !tbaa !11097, !ctir !55
  %cmp = icmp eq i64 %4, %6, !dbg !12127
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !12128

if.then1:                                         ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !12129
  br label %return, !dbg !12129

if.end2:                                          ; preds = %if.end
  store %struct.hash_table* %storage, %struct.hash_table** %new_table, align 8, !dbg !12130, !tbaa !2645
  %7 = load i64, i64* %new_size, align 8, !dbg !12131, !tbaa !3285
  %call3 = call noalias i8* @calloc(i64 %7, i64 16) #9, !dbg !12132
  %8 = bitcast i8* %call3 to %struct.hash_entry*, !dbg !12132
  %9 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12133, !tbaa !2645
  %bucket = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 0, !dbg !12134, !ctir !840
  store %struct.hash_entry* %8, %struct.hash_entry** %bucket, align 8, !dbg !12135, !tbaa !11124, !ctir !845
  %10 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12136, !tbaa !2645
  %bucket4 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %10, i32 0, i32 0, !dbg !12138, !ctir !840
  %11 = load %struct.hash_entry*, %struct.hash_entry** %bucket4, align 8, !dbg !12138, !tbaa !11124, !ctir !845
  %cmp5 = icmp eq %struct.hash_entry* %11, null, !dbg !12139
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !12140

if.then6:                                         ; preds = %if.end2
  store i1 false, i1* %retval, align 1, !dbg !12141
  br label %return, !dbg !12141

if.end7:                                          ; preds = %if.end2
  %12 = load i64, i64* %new_size, align 8, !dbg !12142, !tbaa !3285
  %13 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12143, !tbaa !2645
  %n_buckets8 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %13, i32 0, i32 2, !dbg !12144, !ctir !840
  store i64 %12, i64* %n_buckets8, align 8, !dbg !12145, !tbaa !11097, !ctir !55
  %14 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12146, !tbaa !2645
  %bucket9 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 0, !dbg !12147, !ctir !840
  %15 = load %struct.hash_entry*, %struct.hash_entry** %bucket9, align 8, !dbg !12147, !tbaa !11124, !ctir !845
  %16 = load i64, i64* %new_size, align 8, !dbg !12148, !tbaa !3285
  %add.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %15, i64 %16, !dbg !12149
  %17 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12150, !tbaa !2645
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 1, !dbg !12151, !ctir !840
  store %struct.hash_entry* %add.ptr, %struct.hash_entry** %bucket_limit, align 8, !dbg !12152, !tbaa !11131, !ctir !851
  %18 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12153, !tbaa !2645
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %18, i32 0, i32 3, !dbg !12154, !ctir !840
  store i64 0, i64* %n_buckets_used, align 8, !dbg !12155, !tbaa !11105, !ctir !55
  %19 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12156, !tbaa !2645
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 4, !dbg !12157, !ctir !840
  store i64 0, i64* %n_entries, align 8, !dbg !12158, !tbaa !11112, !ctir !55
  %20 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12159, !tbaa !2645
  %tuning10 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %20, i32 0, i32 5, !dbg !12160, !ctir !840
  %21 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning10, align 8, !dbg !12160, !tbaa !11642, !ctir !857
  %22 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12161, !tbaa !2645
  %tuning11 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %22, i32 0, i32 5, !dbg !12162, !ctir !840
  store %struct.hash_tuning* %21, %struct.hash_tuning** %tuning11, align 8, !dbg !12163, !tbaa !11642, !ctir !857
  %23 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12164, !tbaa !2645
  %hasher = getelementptr inbounds %struct.hash_table, %struct.hash_table* %23, i32 0, i32 6, !dbg !12165, !ctir !840
  %24 = load i64 (i8*, i64)*, i64 (i8*, i64)** %hasher, align 8, !dbg !12165, !tbaa !11326, !ctir !869
  %25 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12166, !tbaa !2645
  %hasher12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 6, !dbg !12167, !ctir !840
  store i64 (i8*, i64)* %24, i64 (i8*, i64)** %hasher12, align 8, !dbg !12168, !tbaa !11326, !ctir !869
  %26 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12169, !tbaa !2645
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %26, i32 0, i32 7, !dbg !12170, !ctir !840
  %27 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !12170, !tbaa !11300, !ctir !872
  %28 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12171, !tbaa !2645
  %comparator13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 7, !dbg !12172, !ctir !840
  store i1 (i8*, i8*)* %27, i1 (i8*, i8*)** %comparator13, align 8, !dbg !12173, !tbaa !11300, !ctir !872
  %29 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12174, !tbaa !2645
  %data_freer = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 8, !dbg !12175, !ctir !840
  %30 = load void (i8*)*, void (i8*)** %data_freer, align 8, !dbg !12175, !tbaa !11698, !ctir !875
  %31 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12176, !tbaa !2645
  %data_freer14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %31, i32 0, i32 8, !dbg !12177, !ctir !840
  store void (i8*)* %30, void (i8*)** %data_freer14, align 8, !dbg !12178, !tbaa !11698, !ctir !875
  %32 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12179, !tbaa !2645
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 9, !dbg !12180, !ctir !840
  %33 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12180, !tbaa !11702, !ctir !845
  %34 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12181, !tbaa !2645
  %free_entry_list15 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %34, i32 0, i32 9, !dbg !12182, !ctir !840
  store %struct.hash_entry* %33, %struct.hash_entry** %free_entry_list15, align 8, !dbg !12183, !tbaa !11702, !ctir !845
  %35 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12184, !tbaa !2645
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12186, !tbaa !2645
  %call16 = call zeroext i1 @transfer_entries(%struct.hash_table* %35, %struct.hash_table* %36, i1 zeroext false), !dbg !12187
  br i1 %call16, label %if.then17, label %if.end29, !dbg !12188

if.then17:                                        ; preds = %if.end7
  %37 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12189, !tbaa !2645
  %bucket18 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %37, i32 0, i32 0, !dbg !12191, !ctir !840
  %38 = load %struct.hash_entry*, %struct.hash_entry** %bucket18, align 8, !dbg !12191, !tbaa !11124, !ctir !845
  %39 = bitcast %struct.hash_entry* %38 to i8*, !dbg !12189
  call void @free(i8* %39) #9, !dbg !12192
  %40 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12193, !tbaa !2645
  %bucket19 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %40, i32 0, i32 0, !dbg !12194, !ctir !840
  %41 = load %struct.hash_entry*, %struct.hash_entry** %bucket19, align 8, !dbg !12194, !tbaa !11124, !ctir !845
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12195, !tbaa !2645
  %bucket20 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %42, i32 0, i32 0, !dbg !12196, !ctir !840
  store %struct.hash_entry* %41, %struct.hash_entry** %bucket20, align 8, !dbg !12197, !tbaa !11124, !ctir !845
  %43 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12198, !tbaa !2645
  %bucket_limit21 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %43, i32 0, i32 1, !dbg !12199, !ctir !840
  %44 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit21, align 8, !dbg !12199, !tbaa !11131, !ctir !851
  %45 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12200, !tbaa !2645
  %bucket_limit22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %45, i32 0, i32 1, !dbg !12201, !ctir !840
  store %struct.hash_entry* %44, %struct.hash_entry** %bucket_limit22, align 8, !dbg !12202, !tbaa !11131, !ctir !851
  %46 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12203, !tbaa !2645
  %n_buckets23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %46, i32 0, i32 2, !dbg !12204, !ctir !840
  %47 = load i64, i64* %n_buckets23, align 8, !dbg !12204, !tbaa !11097, !ctir !55
  %48 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12205, !tbaa !2645
  %n_buckets24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %48, i32 0, i32 2, !dbg !12206, !ctir !840
  store i64 %47, i64* %n_buckets24, align 8, !dbg !12207, !tbaa !11097, !ctir !55
  %49 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12208, !tbaa !2645
  %n_buckets_used25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %49, i32 0, i32 3, !dbg !12209, !ctir !840
  %50 = load i64, i64* %n_buckets_used25, align 8, !dbg !12209, !tbaa !11105, !ctir !55
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12210, !tbaa !2645
  %n_buckets_used26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %51, i32 0, i32 3, !dbg !12211, !ctir !840
  store i64 %50, i64* %n_buckets_used26, align 8, !dbg !12212, !tbaa !11105, !ctir !55
  %52 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12213, !tbaa !2645
  %free_entry_list27 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %52, i32 0, i32 9, !dbg !12214, !ctir !840
  %53 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list27, align 8, !dbg !12214, !tbaa !11702, !ctir !845
  %54 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12215, !tbaa !2645
  %free_entry_list28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %54, i32 0, i32 9, !dbg !12216, !ctir !840
  store %struct.hash_entry* %53, %struct.hash_entry** %free_entry_list28, align 8, !dbg !12217, !tbaa !11702, !ctir !845
  store i1 true, i1* %retval, align 1, !dbg !12218
  br label %return, !dbg !12218

if.end29:                                         ; preds = %if.end7
  %55 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12219, !tbaa !2645
  %free_entry_list30 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %55, i32 0, i32 9, !dbg !12220, !ctir !840
  %56 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list30, align 8, !dbg !12220, !tbaa !11702, !ctir !845
  %57 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12221, !tbaa !2645
  %free_entry_list31 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %57, i32 0, i32 9, !dbg !12222, !ctir !840
  store %struct.hash_entry* %56, %struct.hash_entry** %free_entry_list31, align 8, !dbg !12223, !tbaa !11702, !ctir !845
  %58 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12224, !tbaa !2645
  %59 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12226, !tbaa !2645
  %call32 = call zeroext i1 @transfer_entries(%struct.hash_table* %58, %struct.hash_table* %59, i1 zeroext true), !dbg !12227
  br i1 %call32, label %land.lhs.true, label %if.then34, !dbg !12228

land.lhs.true:                                    ; preds = %if.end29
  %60 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12229, !tbaa !2645
  %61 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12230, !tbaa !2645
  %call33 = call zeroext i1 @transfer_entries(%struct.hash_table* %60, %struct.hash_table* %61, i1 zeroext false), !dbg !12231
  br i1 %call33, label %if.end35, label %if.then34, !dbg !12232

if.then34:                                        ; preds = %land.lhs.true, %if.end29
  call void @abort() #13, !dbg !12233
  unreachable, !dbg !12233

if.end35:                                         ; preds = %land.lhs.true
  %62 = load %struct.hash_table*, %struct.hash_table** %new_table, align 8, !dbg !12234, !tbaa !2645
  %bucket36 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %62, i32 0, i32 0, !dbg !12235, !ctir !840
  %63 = load %struct.hash_entry*, %struct.hash_entry** %bucket36, align 8, !dbg !12235, !tbaa !11124, !ctir !845
  %64 = bitcast %struct.hash_entry* %63 to i8*, !dbg !12234
  call void @free(i8* %64) #9, !dbg !12236
  store i1 false, i1* %retval, align 1, !dbg !12237
  br label %return, !dbg !12237

return:                                           ; preds = %if.end35, %if.then17, %if.then6, %if.then1, %if.then
  %65 = load i1, i1* %retval, align 1, !dbg !12238
  ret i1 %65, !dbg !12238
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @transfer_entries(%struct.hash_table* %dst, %struct.hash_table* %src, i1 zeroext %safe) #4 !dbg !12239 !ctir !956 {
entry:
  %retval = alloca i1, align 1
  %dst.addr = alloca %struct.hash_table*, align 8
  %src.addr = alloca %struct.hash_table*, align 8
  %safe.addr = alloca i8, align 1
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !845
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !845
  %next = alloca %struct.hash_entry*, align 8, !ctir !845
  %data2 = alloca i8*, align 8, !ctir !53
  %new_bucket = alloca %struct.hash_entry*, align 8, !ctir !845
  %new_entry = alloca %struct.hash_entry*, align 8, !ctir !845
  store %struct.hash_table* %dst, %struct.hash_table** %dst.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.hash_table** %dst.addr, metadata !12240, metadata !DIExpression()), !dbg !12241
  store %struct.hash_table* %src, %struct.hash_table** %src.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.hash_table** %src.addr, metadata !12242, metadata !DIExpression()), !dbg !12243
  %frombool = zext i1 %safe to i8
  store i8 %frombool, i8* %safe.addr, align 1, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %safe.addr, metadata !12244, metadata !DIExpression()), !dbg !12245
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12246, metadata !DIExpression()), !dbg !12247
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12248, metadata !DIExpression()), !dbg !12249
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12250, metadata !DIExpression()), !dbg !12251
  %0 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12252, !tbaa !2645
  %bucket1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 0, !dbg !12254, !ctir !840
  %1 = load %struct.hash_entry*, %struct.hash_entry** %bucket1, align 8, !dbg !12254, !tbaa !11124, !ctir !845
  store %struct.hash_entry* %1, %struct.hash_entry** %bucket, align 8, !dbg !12255, !tbaa !2645
  br label %for.cond, !dbg !12256

for.cond:                                         ; preds = %for.inc41, %entry
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12257, !tbaa !2645
  %3 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12259, !tbaa !2645
  %bucket_limit = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 1, !dbg !12260, !ctir !840
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket_limit, align 8, !dbg !12260, !tbaa !11131, !ctir !851
  %cmp = icmp ult %struct.hash_entry* %2, %4, !dbg !12261
  br i1 %cmp, label %for.body, label %for.end42, !dbg !12262

for.body:                                         ; preds = %for.cond
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12263, !tbaa !2645
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12265, !ctir !846
  %6 = load i8*, i8** %data, align 8, !dbg !12265, !tbaa !11138, !ctir !53
  %tobool = icmp ne i8* %6, null, !dbg !12263
  br i1 %tobool, label %if.then, label %if.end40, !dbg !12266

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %data2, metadata !12267, metadata !DIExpression()), !dbg !12269
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_bucket, metadata !12270, metadata !DIExpression()), !dbg !12271
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12272, !tbaa !2645
  %next3 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 1, !dbg !12274, !ctir !846
  %8 = load %struct.hash_entry*, %struct.hash_entry** %next3, align 8, !dbg !12274, !tbaa !11150, !ctir !845
  store %struct.hash_entry* %8, %struct.hash_entry** %cursor, align 8, !dbg !12275, !tbaa !2645
  br label %for.cond4, !dbg !12276

for.cond4:                                        ; preds = %for.inc, %if.then
  %9 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12277, !tbaa !2645
  %tobool5 = icmp ne %struct.hash_entry* %9, null, !dbg !12279
  br i1 %tobool5, label %for.body6, label %for.end, !dbg !12279

for.body6:                                        ; preds = %for.cond4
  %10 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12280, !tbaa !2645
  %data7 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %10, i32 0, i32 0, !dbg !12282, !ctir !846
  %11 = load i8*, i8** %data7, align 8, !dbg !12282, !tbaa !11138, !ctir !53
  store i8* %11, i8** %data2, align 8, !dbg !12283, !tbaa !2645
  %12 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12284, !tbaa !2645
  %13 = load i8*, i8** %data2, align 8, !dbg !12285, !tbaa !2645
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %12, i8* %13), !dbg !12286
  store %struct.hash_entry* %call, %struct.hash_entry** %new_bucket, align 8, !dbg !12287, !tbaa !2645
  %14 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12288, !tbaa !2645
  %next8 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 1, !dbg !12289, !ctir !846
  %15 = load %struct.hash_entry*, %struct.hash_entry** %next8, align 8, !dbg !12289, !tbaa !11150, !ctir !845
  store %struct.hash_entry* %15, %struct.hash_entry** %next, align 8, !dbg !12290, !tbaa !2645
  %16 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12291, !tbaa !2645
  %data9 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %16, i32 0, i32 0, !dbg !12293, !ctir !846
  %17 = load i8*, i8** %data9, align 8, !dbg !12293, !tbaa !11138, !ctir !53
  %tobool10 = icmp ne i8* %17, null, !dbg !12291
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !12294

if.then11:                                        ; preds = %for.body6
  %18 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12295, !tbaa !2645
  %next12 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %18, i32 0, i32 1, !dbg !12297, !ctir !846
  %19 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !12297, !tbaa !11150, !ctir !845
  %20 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12298, !tbaa !2645
  %next13 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %20, i32 0, i32 1, !dbg !12299, !ctir !846
  store %struct.hash_entry* %19, %struct.hash_entry** %next13, align 8, !dbg !12300, !tbaa !11150, !ctir !845
  %21 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12301, !tbaa !2645
  %22 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12302, !tbaa !2645
  %next14 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %22, i32 0, i32 1, !dbg !12303, !ctir !846
  store %struct.hash_entry* %21, %struct.hash_entry** %next14, align 8, !dbg !12304, !tbaa !11150, !ctir !845
  br label %if.end, !dbg !12305

if.else:                                          ; preds = %for.body6
  %23 = load i8*, i8** %data2, align 8, !dbg !12306, !tbaa !2645
  %24 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12308, !tbaa !2645
  %data15 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %24, i32 0, i32 0, !dbg !12309, !ctir !846
  store i8* %23, i8** %data15, align 8, !dbg !12310, !tbaa !11138, !ctir !53
  %25 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12311, !tbaa !2645
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 3, !dbg !12312, !ctir !840
  %26 = load i64, i64* %n_buckets_used, align 8, !dbg !12313, !tbaa !11105, !ctir !55
  %inc = add i64 %26, 1, !dbg !12313
  store i64 %inc, i64* %n_buckets_used, align 8, !dbg !12313, !tbaa !11105, !ctir !55
  %27 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12314, !tbaa !2645
  %28 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12315, !tbaa !2645
  call void @free_entry(%struct.hash_table* %27, %struct.hash_entry* %28), !dbg !12316
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then11
  br label %for.inc, !dbg !12317

for.inc:                                          ; preds = %if.end
  %29 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12318, !tbaa !2645
  store %struct.hash_entry* %29, %struct.hash_entry** %cursor, align 8, !dbg !12319, !tbaa !2645
  br label %for.cond4, !dbg !12320, !llvm.loop !12321

for.end:                                          ; preds = %for.cond4
  %30 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12323, !tbaa !2645
  %data16 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %30, i32 0, i32 0, !dbg !12324, !ctir !846
  %31 = load i8*, i8** %data16, align 8, !dbg !12324, !tbaa !11138, !ctir !53
  store i8* %31, i8** %data2, align 8, !dbg !12325, !tbaa !2645
  %32 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12326, !tbaa !2645
  %next17 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %32, i32 0, i32 1, !dbg !12327, !ctir !846
  store %struct.hash_entry* null, %struct.hash_entry** %next17, align 8, !dbg !12328, !tbaa !11150, !ctir !845
  %33 = load i8, i8* %safe.addr, align 1, !dbg !12329, !tbaa !2739
  %tobool18 = trunc i8 %33 to i1, !dbg !12329
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !12331

if.then19:                                        ; preds = %for.end
  br label %for.inc41, !dbg !12332

if.end20:                                         ; preds = %for.end
  %34 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12333, !tbaa !2645
  %35 = load i8*, i8** %data2, align 8, !dbg !12334, !tbaa !2645
  %call21 = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %34, i8* %35), !dbg !12335
  store %struct.hash_entry* %call21, %struct.hash_entry** %new_bucket, align 8, !dbg !12336, !tbaa !2645
  %36 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12337, !tbaa !2645
  %data22 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %36, i32 0, i32 0, !dbg !12339, !ctir !846
  %37 = load i8*, i8** %data22, align 8, !dbg !12339, !tbaa !11138, !ctir !53
  %tobool23 = icmp ne i8* %37, null, !dbg !12337
  br i1 %tobool23, label %if.then24, label %if.else33, !dbg !12340

if.then24:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_entry, metadata !12341, metadata !DIExpression()), !dbg !12343
  %38 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12344, !tbaa !2645
  %call25 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %38), !dbg !12345
  store %struct.hash_entry* %call25, %struct.hash_entry** %new_entry, align 8, !dbg !12343, !tbaa !2645
  %39 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12346, !tbaa !2645
  %cmp26 = icmp eq %struct.hash_entry* %39, null, !dbg !12348
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !12349

if.then27:                                        ; preds = %if.then24
  store i1 false, i1* %retval, align 1, !dbg !12350
  br label %return, !dbg !12350

if.end28:                                         ; preds = %if.then24
  %40 = load i8*, i8** %data2, align 8, !dbg !12351, !tbaa !2645
  %41 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12352, !tbaa !2645
  %data29 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %41, i32 0, i32 0, !dbg !12353, !ctir !846
  store i8* %40, i8** %data29, align 8, !dbg !12354, !tbaa !11138, !ctir !53
  %42 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12355, !tbaa !2645
  %next30 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %42, i32 0, i32 1, !dbg !12356, !ctir !846
  %43 = load %struct.hash_entry*, %struct.hash_entry** %next30, align 8, !dbg !12356, !tbaa !11150, !ctir !845
  %44 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12357, !tbaa !2645
  %next31 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %44, i32 0, i32 1, !dbg !12358, !ctir !846
  store %struct.hash_entry* %43, %struct.hash_entry** %next31, align 8, !dbg !12359, !tbaa !11150, !ctir !845
  %45 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12360, !tbaa !2645
  %46 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12361, !tbaa !2645
  %next32 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !12362, !ctir !846
  store %struct.hash_entry* %45, %struct.hash_entry** %next32, align 8, !dbg !12363, !tbaa !11150, !ctir !845
  br label %if.end37, !dbg !12364

if.else33:                                        ; preds = %if.end20
  %47 = load i8*, i8** %data2, align 8, !dbg !12365, !tbaa !2645
  %48 = load %struct.hash_entry*, %struct.hash_entry** %new_bucket, align 8, !dbg !12367, !tbaa !2645
  %data34 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 0, !dbg !12368, !ctir !846
  store i8* %47, i8** %data34, align 8, !dbg !12369, !tbaa !11138, !ctir !53
  %49 = load %struct.hash_table*, %struct.hash_table** %dst.addr, align 8, !dbg !12370, !tbaa !2645
  %n_buckets_used35 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %49, i32 0, i32 3, !dbg !12371, !ctir !840
  %50 = load i64, i64* %n_buckets_used35, align 8, !dbg !12372, !tbaa !11105, !ctir !55
  %inc36 = add i64 %50, 1, !dbg !12372
  store i64 %inc36, i64* %n_buckets_used35, align 8, !dbg !12372, !tbaa !11105, !ctir !55
  br label %if.end37

if.end37:                                         ; preds = %if.else33, %if.end28
  %51 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12373, !tbaa !2645
  %data38 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %51, i32 0, i32 0, !dbg !12374, !ctir !846
  store i8* null, i8** %data38, align 8, !dbg !12375, !tbaa !11138, !ctir !53
  %52 = load %struct.hash_table*, %struct.hash_table** %src.addr, align 8, !dbg !12376, !tbaa !2645
  %n_buckets_used39 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %52, i32 0, i32 3, !dbg !12377, !ctir !840
  %53 = load i64, i64* %n_buckets_used39, align 8, !dbg !12378, !tbaa !11105, !ctir !55
  %dec = add i64 %53, -1, !dbg !12378
  store i64 %dec, i64* %n_buckets_used39, align 8, !dbg !12378, !tbaa !11105, !ctir !55
  br label %if.end40, !dbg !12379

if.end40:                                         ; preds = %if.end37, %for.body
  br label %for.inc41, !dbg !12265

for.inc41:                                        ; preds = %if.end40, %if.then19
  %54 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12380, !tbaa !2645
  %incdec.ptr = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 1, !dbg !12380
  store %struct.hash_entry* %incdec.ptr, %struct.hash_entry** %bucket, align 8, !dbg !12380, !tbaa !2645
  br label %for.cond, !dbg !12381, !llvm.loop !12382

for.end42:                                        ; preds = %for.cond
  store i1 true, i1* %retval, align 1, !dbg !12384
  br label %return, !dbg !12384

return:                                           ; preds = %for.end42, %if.then27
  %55 = load i1, i1* %retval, align 1, !dbg !12385
  ret i1 %55, !dbg !12385
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @free_entry(%struct.hash_table* %table, %struct.hash_entry* %entry1) #4 !dbg !12386 !ctir !958 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca %struct.hash_entry*, align 8
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12387, metadata !DIExpression()), !dbg !12388
  store %struct.hash_entry* %entry1, %struct.hash_entry** %entry.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %entry.addr, metadata !12389, metadata !DIExpression()), !dbg !12390
  %0 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !12391, !tbaa !2645
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %0, i32 0, i32 0, !dbg !12392, !ctir !846
  store i8* null, i8** %data, align 8, !dbg !12393, !tbaa !11138, !ctir !53
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12394, !tbaa !2645
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %1, i32 0, i32 9, !dbg !12395, !ctir !840
  %2 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12395, !tbaa !11702, !ctir !845
  %3 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !12396, !tbaa !2645
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %3, i32 0, i32 1, !dbg !12397, !ctir !846
  store %struct.hash_entry* %2, %struct.hash_entry** %next, align 8, !dbg !12398, !tbaa !11150, !ctir !845
  %4 = load %struct.hash_entry*, %struct.hash_entry** %entry.addr, align 8, !dbg !12399, !tbaa !2645
  %5 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12400, !tbaa !2645
  %free_entry_list2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %5, i32 0, i32 9, !dbg !12401, !ctir !840
  store %struct.hash_entry* %4, %struct.hash_entry** %free_entry_list2, align 8, !dbg !12402, !tbaa !11702, !ctir !845
  ret void, !dbg !12403
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.hash_entry* @allocate_entry(%struct.hash_table* %table) #4 !dbg !12404 !ctir !963 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %new = alloca %struct.hash_entry*, align 8, !ctir !845
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12405, metadata !DIExpression()), !dbg !12406
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new, metadata !12407, metadata !DIExpression()), !dbg !12408
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12409, !tbaa !2645
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %0, i32 0, i32 9, !dbg !12411, !ctir !840
  %1 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12411, !tbaa !11702, !ctir !845
  %tobool = icmp ne %struct.hash_entry* %1, null, !dbg !12409
  br i1 %tobool, label %if.then, label %if.else, !dbg !12412

if.then:                                          ; preds = %entry
  %2 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12413, !tbaa !2645
  %free_entry_list1 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %2, i32 0, i32 9, !dbg !12415, !ctir !840
  %3 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list1, align 8, !dbg !12415, !tbaa !11702, !ctir !845
  store %struct.hash_entry* %3, %struct.hash_entry** %new, align 8, !dbg !12416, !tbaa !2645
  %4 = load %struct.hash_entry*, %struct.hash_entry** %new, align 8, !dbg !12417, !tbaa !2645
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %4, i32 0, i32 1, !dbg !12418, !ctir !846
  %5 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12418, !tbaa !11150, !ctir !845
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12419, !tbaa !2645
  %free_entry_list2 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 9, !dbg !12420, !ctir !840
  store %struct.hash_entry* %5, %struct.hash_entry** %free_entry_list2, align 8, !dbg !12421, !tbaa !11702, !ctir !845
  br label %if.end, !dbg !12422

if.else:                                          ; preds = %entry
  %call = call noalias i8* @malloc(i64 16) #9, !dbg !12423
  %7 = bitcast i8* %call to %struct.hash_entry*, !dbg !12423
  store %struct.hash_entry* %7, %struct.hash_entry** %new, align 8, !dbg !12425, !tbaa !2645
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.hash_entry*, %struct.hash_entry** %new, align 8, !dbg !12426, !tbaa !2645
  ret %struct.hash_entry* %8, !dbg !12427
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @hash_insert_if_absent(%struct.hash_table* %table, i8* %entry1, i8** %matched_ent) #4 !dbg !12428 !ctir !941 {
entry:
  %retval = alloca i32, align 4
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %matched_ent.addr = alloca i8**, align 8
  %data = alloca i8*, align 8, !ctir !53
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !845
  %tuning22 = alloca %struct.hash_tuning*, align 8, !ctir !857
  %candidate = alloca float, align 4, !ctir !863
  %new_entry = alloca %struct.hash_entry*, align 8, !ctir !845
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12429, metadata !DIExpression()), !dbg !12430
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !12431, metadata !DIExpression()), !dbg !12432
  store i8** %matched_ent, i8*** %matched_ent.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8*** %matched_ent.addr, metadata !12433, metadata !DIExpression()), !dbg !12434
  call void @llvm.dbg.declare(metadata i8** %data, metadata !12435, metadata !DIExpression()), !dbg !12436
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12437, metadata !DIExpression()), !dbg !12438
  %0 = load i8*, i8** %entry.addr, align 8, !dbg !12439, !tbaa !2645
  %tobool = icmp ne i8* %0, null, !dbg !12439
  br i1 %tobool, label %if.end, label %if.then, !dbg !12441

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !12442
  unreachable, !dbg !12442

if.end:                                           ; preds = %entry
  %1 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12443, !tbaa !2645
  %2 = load i8*, i8** %entry.addr, align 8, !dbg !12445, !tbaa !2645
  %call = call i8* @hash_find_entry(%struct.hash_table* %1, i8* %2, %struct.hash_entry** %bucket, i1 zeroext false), !dbg !12446
  store i8* %call, i8** %data, align 8, !dbg !12447, !tbaa !2645
  %cmp = icmp ne i8* %call, null, !dbg !12448
  br i1 %cmp, label %if.then2, label %if.end6, !dbg !12449

if.then2:                                         ; preds = %if.end
  %3 = load i8**, i8*** %matched_ent.addr, align 8, !dbg !12450, !tbaa !2645
  %tobool3 = icmp ne i8** %3, null, !dbg !12450
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !12453

if.then4:                                         ; preds = %if.then2
  %4 = load i8*, i8** %data, align 8, !dbg !12454, !tbaa !2645
  %5 = load i8**, i8*** %matched_ent.addr, align 8, !dbg !12455, !tbaa !2645
  store i8* %4, i8** %5, align 8, !dbg !12456, !tbaa !2645, !ctir !513
  br label %if.end5, !dbg !12457

if.end5:                                          ; preds = %if.then4, %if.then2
  store i32 0, i32* %retval, align 4, !dbg !12458
  br label %return, !dbg !12458

if.end6:                                          ; preds = %if.end
  %6 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12459, !tbaa !2645
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %6, i32 0, i32 3, !dbg !12461, !ctir !840
  %7 = load i64, i64* %n_buckets_used, align 8, !dbg !12461, !tbaa !11105, !ctir !55
  %conv = uitofp i64 %7 to float, !dbg !12459
  %8 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12462, !tbaa !2645
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %8, i32 0, i32 5, !dbg !12463, !ctir !840
  %9 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12463, !tbaa !11642, !ctir !857
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %9, i32 0, i32 2, !dbg !12464, !ctir !858
  %10 = load float, float* %growth_threshold, align 4, !dbg !12464, !tbaa !11753, !ctir !863
  %11 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12465, !tbaa !2645
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 2, !dbg !12466, !ctir !840
  %12 = load i64, i64* %n_buckets, align 8, !dbg !12466, !tbaa !11097, !ctir !55
  %conv7 = uitofp i64 %12 to float, !dbg !12465
  %mul = fmul float %10, %conv7, !dbg !12467
  %cmp8 = fcmp ogt float %conv, %mul, !dbg !12468
  br i1 %cmp8, label %if.then10, label %if.end49, !dbg !12469

if.then10:                                        ; preds = %if.end6
  %13 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12470, !tbaa !2645
  %call11 = call zeroext i1 @check_tuning(%struct.hash_table* %13), !dbg !12472
  %14 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12473, !tbaa !2645
  %n_buckets_used12 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 3, !dbg !12475, !ctir !840
  %15 = load i64, i64* %n_buckets_used12, align 8, !dbg !12475, !tbaa !11105, !ctir !55
  %conv13 = uitofp i64 %15 to float, !dbg !12473
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12476, !tbaa !2645
  %tuning14 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %16, i32 0, i32 5, !dbg !12477, !ctir !840
  %17 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning14, align 8, !dbg !12477, !tbaa !11642, !ctir !857
  %growth_threshold15 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %17, i32 0, i32 2, !dbg !12478, !ctir !858
  %18 = load float, float* %growth_threshold15, align 4, !dbg !12478, !tbaa !11753, !ctir !863
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12479, !tbaa !2645
  %n_buckets16 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 2, !dbg !12480, !ctir !840
  %20 = load i64, i64* %n_buckets16, align 8, !dbg !12480, !tbaa !11097, !ctir !55
  %conv17 = uitofp i64 %20 to float, !dbg !12479
  %mul18 = fmul float %18, %conv17, !dbg !12481
  %cmp19 = fcmp ogt float %conv13, %mul18, !dbg !12482
  br i1 %cmp19, label %if.then21, label %if.end48, !dbg !12483

if.then21:                                        ; preds = %if.then10
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning22, metadata !12484, metadata !DIExpression()), !dbg !12486
  %21 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12487, !tbaa !2645
  %tuning23 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %21, i32 0, i32 5, !dbg !12488, !ctir !840
  %22 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning23, align 8, !dbg !12488, !tbaa !11642, !ctir !857
  store %struct.hash_tuning* %22, %struct.hash_tuning** %tuning22, align 8, !dbg !12486, !tbaa !2645
  call void @llvm.dbg.declare(metadata float* %candidate, metadata !12489, metadata !DIExpression()), !dbg !12490
  %23 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12491, !tbaa !2645
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %23, i32 0, i32 4, !dbg !12492, !ctir !858
  %24 = load i8, i8* %is_n_buckets, align 4, !dbg !12492, !tbaa !11810
  %tobool24 = trunc i8 %24 to i1, !dbg !12492, !ctir !142
  br i1 %tobool24, label %cond.true, label %cond.false, !dbg !12491

cond.true:                                        ; preds = %if.then21
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12493, !tbaa !2645
  %n_buckets26 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %25, i32 0, i32 2, !dbg !12494, !ctir !840
  %26 = load i64, i64* %n_buckets26, align 8, !dbg !12494, !tbaa !11097, !ctir !55
  %conv27 = uitofp i64 %26 to float, !dbg !12493
  %27 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12495, !tbaa !2645
  %growth_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %27, i32 0, i32 3, !dbg !12496, !ctir !858
  %28 = load float, float* %growth_factor, align 4, !dbg !12496, !tbaa !11767, !ctir !863
  %mul28 = fmul float %conv27, %28, !dbg !12497
  br label %cond.end, !dbg !12491

cond.false:                                       ; preds = %if.then21
  %29 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12498, !tbaa !2645
  %n_buckets29 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %29, i32 0, i32 2, !dbg !12499, !ctir !840
  %30 = load i64, i64* %n_buckets29, align 8, !dbg !12499, !tbaa !11097, !ctir !55
  %conv30 = uitofp i64 %30 to float, !dbg !12498
  %31 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12500, !tbaa !2645
  %growth_factor31 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %31, i32 0, i32 3, !dbg !12501, !ctir !858
  %32 = load float, float* %growth_factor31, align 4, !dbg !12501, !tbaa !11767, !ctir !863
  %mul32 = fmul float %conv30, %32, !dbg !12502
  %33 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12503, !tbaa !2645
  %growth_threshold33 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %33, i32 0, i32 2, !dbg !12504, !ctir !858
  %34 = load float, float* %growth_threshold33, align 4, !dbg !12504, !tbaa !11753, !ctir !863
  %mul34 = fmul float %mul32, %34, !dbg !12505
  br label %cond.end, !dbg !12491

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul28, %cond.true ], [ %mul34, %cond.false ], !dbg !12491
  store float %cond, float* %candidate, align 4, !dbg !12490, !tbaa !11598
  %35 = load float, float* %candidate, align 4, !dbg !12506, !tbaa !11598
  %cmp35 = fcmp ole float 0x43F0000000000000, %35, !dbg !12508
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !12509

if.then37:                                        ; preds = %cond.end
  store i32 -1, i32* %retval, align 4, !dbg !12510
  br label %return, !dbg !12510

if.end38:                                         ; preds = %cond.end
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12511, !tbaa !2645
  %37 = load float, float* %candidate, align 4, !dbg !12513, !tbaa !11598
  %conv39 = fptoui float %37 to i64, !dbg !12513
  %call40 = call zeroext i1 @hash_rehash(%struct.hash_table* %36, i64 %conv39), !dbg !12514
  br i1 %call40, label %if.end42, label %if.then41, !dbg !12515

if.then41:                                        ; preds = %if.end38
  store i32 -1, i32* %retval, align 4, !dbg !12516
  br label %return, !dbg !12516

if.end42:                                         ; preds = %if.end38
  %38 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12517, !tbaa !2645
  %39 = load i8*, i8** %entry.addr, align 8, !dbg !12519, !tbaa !2645
  %call43 = call i8* @hash_find_entry(%struct.hash_table* %38, i8* %39, %struct.hash_entry** %bucket, i1 zeroext false), !dbg !12520
  %cmp44 = icmp ne i8* %call43, null, !dbg !12521
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !12522

if.then46:                                        ; preds = %if.end42
  call void @abort() #13, !dbg !12523
  unreachable, !dbg !12523

if.end47:                                         ; preds = %if.end42
  br label %if.end48, !dbg !12524

if.end48:                                         ; preds = %if.end47, %if.then10
  br label %if.end49, !dbg !12525

if.end49:                                         ; preds = %if.end48, %if.end6
  %40 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12526, !tbaa !2645
  %data50 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %40, i32 0, i32 0, !dbg !12528, !ctir !846
  %41 = load i8*, i8** %data50, align 8, !dbg !12528, !tbaa !11138, !ctir !53
  %tobool51 = icmp ne i8* %41, null, !dbg !12526
  br i1 %tobool51, label %if.then52, label %if.end61, !dbg !12529

if.then52:                                        ; preds = %if.end49
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %new_entry, metadata !12530, metadata !DIExpression()), !dbg !12532
  %42 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12533, !tbaa !2645
  %call53 = call %struct.hash_entry* @allocate_entry(%struct.hash_table* %42), !dbg !12534
  store %struct.hash_entry* %call53, %struct.hash_entry** %new_entry, align 8, !dbg !12532, !tbaa !2645
  %43 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12535, !tbaa !2645
  %cmp54 = icmp eq %struct.hash_entry* %43, null, !dbg !12537
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !12538

if.then56:                                        ; preds = %if.then52
  store i32 -1, i32* %retval, align 4, !dbg !12539
  br label %return, !dbg !12539

if.end57:                                         ; preds = %if.then52
  %44 = load i8*, i8** %entry.addr, align 8, !dbg !12540, !tbaa !2645
  %45 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12541, !tbaa !2645
  %data58 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %45, i32 0, i32 0, !dbg !12542, !ctir !846
  store i8* %44, i8** %data58, align 8, !dbg !12543, !tbaa !11138, !ctir !53
  %46 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12544, !tbaa !2645
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !12545, !ctir !846
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12545, !tbaa !11150, !ctir !845
  %48 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12546, !tbaa !2645
  %next59 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 1, !dbg !12547, !ctir !846
  store %struct.hash_entry* %47, %struct.hash_entry** %next59, align 8, !dbg !12548, !tbaa !11150, !ctir !845
  %49 = load %struct.hash_entry*, %struct.hash_entry** %new_entry, align 8, !dbg !12549, !tbaa !2645
  %50 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12550, !tbaa !2645
  %next60 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %50, i32 0, i32 1, !dbg !12551, !ctir !846
  store %struct.hash_entry* %49, %struct.hash_entry** %next60, align 8, !dbg !12552, !tbaa !11150, !ctir !845
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12553, !tbaa !2645
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %51, i32 0, i32 4, !dbg !12554, !ctir !840
  %52 = load i64, i64* %n_entries, align 8, !dbg !12555, !tbaa !11112, !ctir !55
  %inc = add i64 %52, 1, !dbg !12555
  store i64 %inc, i64* %n_entries, align 8, !dbg !12555, !tbaa !11112, !ctir !55
  store i32 1, i32* %retval, align 4, !dbg !12556
  br label %return, !dbg !12556

if.end61:                                         ; preds = %if.end49
  %53 = load i8*, i8** %entry.addr, align 8, !dbg !12557, !tbaa !2645
  %54 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12558, !tbaa !2645
  %data62 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 0, i32 0, !dbg !12559, !ctir !846
  store i8* %53, i8** %data62, align 8, !dbg !12560, !tbaa !11138, !ctir !53
  %55 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12561, !tbaa !2645
  %n_entries63 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %55, i32 0, i32 4, !dbg !12562, !ctir !840
  %56 = load i64, i64* %n_entries63, align 8, !dbg !12563, !tbaa !11112, !ctir !55
  %inc64 = add i64 %56, 1, !dbg !12563
  store i64 %inc64, i64* %n_entries63, align 8, !dbg !12563, !tbaa !11112, !ctir !55
  %57 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12564, !tbaa !2645
  %n_buckets_used65 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %57, i32 0, i32 3, !dbg !12565, !ctir !840
  %58 = load i64, i64* %n_buckets_used65, align 8, !dbg !12566, !tbaa !11105, !ctir !55
  %inc66 = add i64 %58, 1, !dbg !12566
  store i64 %inc66, i64* %n_buckets_used65, align 8, !dbg !12566, !tbaa !11105, !ctir !55
  store i32 1, i32* %retval, align 4, !dbg !12567
  br label %return, !dbg !12567

return:                                           ; preds = %if.end61, %if.end57, %if.then56, %if.then41, %if.then37, %if.end5
  %59 = load i32, i32* %retval, align 4, !dbg !12568
  ret i32 %59, !dbg !12568
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @hash_find_entry(%struct.hash_table* %table, i8* %entry1, %struct.hash_entry** %bucket_head, i1 zeroext %delete) #4 !dbg !12569 !ctir !960 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %bucket_head.addr = alloca %struct.hash_entry**, align 8
  %delete.addr = alloca i8, align 1
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !845
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !845
  %data7 = alloca i8*, align 8, !ctir !53
  %next12 = alloca %struct.hash_entry*, align 8, !ctir !845
  %data29 = alloca i8*, align 8, !ctir !53
  %next34 = alloca %struct.hash_entry*, align 8, !ctir !845
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12570, metadata !DIExpression()), !dbg !12571
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !12572, metadata !DIExpression()), !dbg !12573
  store %struct.hash_entry** %bucket_head, %struct.hash_entry*** %bucket_head.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.hash_entry*** %bucket_head.addr, metadata !12574, metadata !DIExpression()), !dbg !12575
  %frombool = zext i1 %delete to i8
  store i8 %frombool, i8* %delete.addr, align 1, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %delete.addr, metadata !12576, metadata !DIExpression()), !dbg !12577
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12578, metadata !DIExpression()), !dbg !12579
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12580, !tbaa !2645
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !12581, !tbaa !2645
  %call = call %struct.hash_entry* @safe_hasher(%struct.hash_table* %0, i8* %1), !dbg !12582
  store %struct.hash_entry* %call, %struct.hash_entry** %bucket, align 8, !dbg !12579, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12583, metadata !DIExpression()), !dbg !12584
  %2 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12585, !tbaa !2645
  %3 = load %struct.hash_entry**, %struct.hash_entry*** %bucket_head.addr, align 8, !dbg !12586, !tbaa !2645
  store %struct.hash_entry* %2, %struct.hash_entry** %3, align 8, !dbg !12587, !tbaa !2645, !ctir !845
  %4 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12588, !tbaa !2645
  %data = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %4, i32 0, i32 0, !dbg !12590, !ctir !846
  %5 = load i8*, i8** %data, align 8, !dbg !12590, !tbaa !11138, !ctir !53
  %cmp = icmp eq i8* %5, null, !dbg !12591
  br i1 %cmp, label %if.then, label %if.end, !dbg !12592

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !12593
  br label %return, !dbg !12593

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %entry.addr, align 8, !dbg !12594, !tbaa !2645
  %7 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12596, !tbaa !2645
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %7, i32 0, i32 0, !dbg !12597, !ctir !846
  %8 = load i8*, i8** %data2, align 8, !dbg !12597, !tbaa !11138, !ctir !53
  %cmp3 = icmp eq i8* %6, %8, !dbg !12598
  br i1 %cmp3, label %if.then6, label %lor.lhs.false, !dbg !12599

lor.lhs.false:                                    ; preds = %if.end
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12600, !tbaa !2645
  %comparator = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 7, !dbg !12601, !ctir !840
  %10 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator, align 8, !dbg !12601, !tbaa !11300, !ctir !872
  %11 = load i8*, i8** %entry.addr, align 8, !dbg !12602, !tbaa !2645
  %12 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12603, !tbaa !2645
  %data4 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %12, i32 0, i32 0, !dbg !12604, !ctir !846
  %13 = load i8*, i8** %data4, align 8, !dbg !12604, !tbaa !11138, !ctir !53
  %call5 = call zeroext i1 %10(i8* %11, i8* %13), !dbg !12600
  br i1 %call5, label %if.then6, label %if.end17, !dbg !12605

if.then6:                                         ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata i8** %data7, metadata !12606, metadata !DIExpression()), !dbg !12608
  %14 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12609, !tbaa !2645
  %data8 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %14, i32 0, i32 0, !dbg !12610, !ctir !846
  %15 = load i8*, i8** %data8, align 8, !dbg !12610, !tbaa !11138, !ctir !53
  store i8* %15, i8** %data7, align 8, !dbg !12608, !tbaa !2645
  %16 = load i8, i8* %delete.addr, align 1, !dbg !12611, !tbaa !2739
  %tobool = trunc i8 %16 to i1, !dbg !12611
  br i1 %tobool, label %if.then9, label %if.end16, !dbg !12613

if.then9:                                         ; preds = %if.then6
  %17 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12614, !tbaa !2645
  %next = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %17, i32 0, i32 1, !dbg !12617, !ctir !846
  %18 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12617, !tbaa !11150, !ctir !845
  %tobool10 = icmp ne %struct.hash_entry* %18, null, !dbg !12614
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !12618

if.then11:                                        ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next12, metadata !12619, metadata !DIExpression()), !dbg !12621
  %19 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12622, !tbaa !2645
  %next13 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %19, i32 0, i32 1, !dbg !12623, !ctir !846
  %20 = load %struct.hash_entry*, %struct.hash_entry** %next13, align 8, !dbg !12623, !tbaa !11150, !ctir !845
  store %struct.hash_entry* %20, %struct.hash_entry** %next12, align 8, !dbg !12621, !tbaa !2645
  %21 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12624, !tbaa !2645
  %22 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !12625, !tbaa !2645
  %23 = bitcast %struct.hash_entry* %21 to i8*, !dbg !12626
  %24 = bitcast %struct.hash_entry* %22 to i8*, !dbg !12626
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 16, i1 false), !dbg !12626, !tbaa.struct !12627
  %25 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12628, !tbaa !2645
  %26 = load %struct.hash_entry*, %struct.hash_entry** %next12, align 8, !dbg !12629, !tbaa !2645
  call void @free_entry(%struct.hash_table* %25, %struct.hash_entry* %26), !dbg !12630
  br label %if.end15, !dbg !12631

if.else:                                          ; preds = %if.then9
  %27 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12632, !tbaa !2645
  %data14 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %27, i32 0, i32 0, !dbg !12634, !ctir !846
  store i8* null, i8** %data14, align 8, !dbg !12635, !tbaa !11138, !ctir !53
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then11
  br label %if.end16, !dbg !12636

if.end16:                                         ; preds = %if.end15, %if.then6
  %28 = load i8*, i8** %data7, align 8, !dbg !12637, !tbaa !2645
  store i8* %28, i8** %retval, align 8, !dbg !12638
  br label %return, !dbg !12638

if.end17:                                         ; preds = %lor.lhs.false
  %29 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12639, !tbaa !2645
  store %struct.hash_entry* %29, %struct.hash_entry** %cursor, align 8, !dbg !12641, !tbaa !2645
  br label %for.cond, !dbg !12642

for.cond:                                         ; preds = %for.inc, %if.end17
  %30 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12643, !tbaa !2645
  %next18 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %30, i32 0, i32 1, !dbg !12645, !ctir !846
  %31 = load %struct.hash_entry*, %struct.hash_entry** %next18, align 8, !dbg !12645, !tbaa !11150, !ctir !845
  %tobool19 = icmp ne %struct.hash_entry* %31, null, !dbg !12646
  br i1 %tobool19, label %for.body, label %for.end, !dbg !12646

for.body:                                         ; preds = %for.cond
  %32 = load i8*, i8** %entry.addr, align 8, !dbg !12647, !tbaa !2645
  %33 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12650, !tbaa !2645
  %next20 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %33, i32 0, i32 1, !dbg !12651, !ctir !846
  %34 = load %struct.hash_entry*, %struct.hash_entry** %next20, align 8, !dbg !12651, !tbaa !11150, !ctir !845
  %data21 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %34, i32 0, i32 0, !dbg !12652, !ctir !846
  %35 = load i8*, i8** %data21, align 8, !dbg !12652, !tbaa !11138, !ctir !53
  %cmp22 = icmp eq i8* %32, %35, !dbg !12653
  br i1 %cmp22, label %if.then28, label %lor.lhs.false23, !dbg !12654

lor.lhs.false23:                                  ; preds = %for.body
  %36 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12655, !tbaa !2645
  %comparator24 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %36, i32 0, i32 7, !dbg !12656, !ctir !840
  %37 = load i1 (i8*, i8*)*, i1 (i8*, i8*)** %comparator24, align 8, !dbg !12656, !tbaa !11300, !ctir !872
  %38 = load i8*, i8** %entry.addr, align 8, !dbg !12657, !tbaa !2645
  %39 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12658, !tbaa !2645
  %next25 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %39, i32 0, i32 1, !dbg !12659, !ctir !846
  %40 = load %struct.hash_entry*, %struct.hash_entry** %next25, align 8, !dbg !12659, !tbaa !11150, !ctir !845
  %data26 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %40, i32 0, i32 0, !dbg !12660, !ctir !846
  %41 = load i8*, i8** %data26, align 8, !dbg !12660, !tbaa !11138, !ctir !53
  %call27 = call zeroext i1 %37(i8* %38, i8* %41), !dbg !12655
  br i1 %call27, label %if.then28, label %if.end39, !dbg !12661

if.then28:                                        ; preds = %lor.lhs.false23, %for.body
  call void @llvm.dbg.declare(metadata i8** %data29, metadata !12662, metadata !DIExpression()), !dbg !12664
  %42 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12665, !tbaa !2645
  %next30 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %42, i32 0, i32 1, !dbg !12666, !ctir !846
  %43 = load %struct.hash_entry*, %struct.hash_entry** %next30, align 8, !dbg !12666, !tbaa !11150, !ctir !845
  %data31 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 0, !dbg !12667, !ctir !846
  %44 = load i8*, i8** %data31, align 8, !dbg !12667, !tbaa !11138, !ctir !53
  store i8* %44, i8** %data29, align 8, !dbg !12664, !tbaa !2645
  %45 = load i8, i8* %delete.addr, align 1, !dbg !12668, !tbaa !2739
  %tobool32 = trunc i8 %45 to i1, !dbg !12668
  br i1 %tobool32, label %if.then33, label %if.end38, !dbg !12670

if.then33:                                        ; preds = %if.then28
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next34, metadata !12671, metadata !DIExpression()), !dbg !12673
  %46 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12674, !tbaa !2645
  %next35 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %46, i32 0, i32 1, !dbg !12675, !ctir !846
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next35, align 8, !dbg !12675, !tbaa !11150, !ctir !845
  store %struct.hash_entry* %47, %struct.hash_entry** %next34, align 8, !dbg !12673, !tbaa !2645
  %48 = load %struct.hash_entry*, %struct.hash_entry** %next34, align 8, !dbg !12676, !tbaa !2645
  %next36 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %48, i32 0, i32 1, !dbg !12677, !ctir !846
  %49 = load %struct.hash_entry*, %struct.hash_entry** %next36, align 8, !dbg !12677, !tbaa !11150, !ctir !845
  %50 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12678, !tbaa !2645
  %next37 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %50, i32 0, i32 1, !dbg !12679, !ctir !846
  store %struct.hash_entry* %49, %struct.hash_entry** %next37, align 8, !dbg !12680, !tbaa !11150, !ctir !845
  %51 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12681, !tbaa !2645
  %52 = load %struct.hash_entry*, %struct.hash_entry** %next34, align 8, !dbg !12682, !tbaa !2645
  call void @free_entry(%struct.hash_table* %51, %struct.hash_entry* %52), !dbg !12683
  br label %if.end38, !dbg !12684

if.end38:                                         ; preds = %if.then33, %if.then28
  %53 = load i8*, i8** %data29, align 8, !dbg !12685, !tbaa !2645
  store i8* %53, i8** %retval, align 8, !dbg !12686
  br label %return, !dbg !12686

if.end39:                                         ; preds = %lor.lhs.false23
  br label %for.inc, !dbg !12687

for.inc:                                          ; preds = %if.end39
  %54 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12688, !tbaa !2645
  %next40 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %54, i32 0, i32 1, !dbg !12689, !ctir !846
  %55 = load %struct.hash_entry*, %struct.hash_entry** %next40, align 8, !dbg !12689, !tbaa !11150, !ctir !845
  store %struct.hash_entry* %55, %struct.hash_entry** %cursor, align 8, !dbg !12690, !tbaa !2645
  br label %for.cond, !dbg !12691, !llvm.loop !12692

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !12694
  br label %return, !dbg !12694

return:                                           ; preds = %for.end, %if.end38, %if.end16, %if.then
  %56 = load i8*, i8** %retval, align 8, !dbg !12695
  ret i8* %56, !dbg !12695
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_insert(%struct.hash_table* %table, i8* %entry1) #4 !dbg !12696 !ctir !944 {
entry:
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %matched_ent = alloca i8*, align 8, !ctir !513
  %err = alloca i32, align 4, !ctir !7
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12697, metadata !DIExpression()), !dbg !12698
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !12699, metadata !DIExpression()), !dbg !12700
  call void @llvm.dbg.declare(metadata i8** %matched_ent, metadata !12701, metadata !DIExpression()), !dbg !12702
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12703, metadata !DIExpression()), !dbg !12704
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12705, !tbaa !2645
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !12706, !tbaa !2645
  %call = call i32 @hash_insert_if_absent(%struct.hash_table* %0, i8* %1, i8** %matched_ent), !dbg !12707
  store i32 %call, i32* %err, align 4, !dbg !12704, !tbaa !2632
  %2 = load i32, i32* %err, align 4, !dbg !12708, !tbaa !2632
  %cmp = icmp eq i32 %2, -1, !dbg !12709
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !12708

cond.true:                                        ; preds = %entry
  br label %cond.end5, !dbg !12708

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %err, align 4, !dbg !12710, !tbaa !2632
  %cmp2 = icmp eq i32 %3, 0, !dbg !12711
  br i1 %cmp2, label %cond.true3, label %cond.false4, !dbg !12710

cond.true3:                                       ; preds = %cond.false
  %4 = load i8*, i8** %matched_ent, align 8, !dbg !12712, !tbaa !2645
  br label %cond.end, !dbg !12710

cond.false4:                                      ; preds = %cond.false
  %5 = load i8*, i8** %entry.addr, align 8, !dbg !12713, !tbaa !2645
  br label %cond.end, !dbg !12710

cond.end:                                         ; preds = %cond.false4, %cond.true3
  %cond = phi i8* [ %4, %cond.true3 ], [ %5, %cond.false4 ], !dbg !12710
  br label %cond.end5, !dbg !12708

cond.end5:                                        ; preds = %cond.end, %cond.true
  %cond6 = phi i8* [ null, %cond.true ], [ %cond, %cond.end ], !dbg !12708
  ret i8* %cond6, !dbg !12714
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @hash_delete(%struct.hash_table* %table, i8* %entry1) #4 !dbg !12715 !ctir !944 {
entry:
  %retval = alloca i8*, align 8
  %table.addr = alloca %struct.hash_table*, align 8
  %entry.addr = alloca i8*, align 8
  %data = alloca i8*, align 8, !ctir !53
  %bucket = alloca %struct.hash_entry*, align 8, !ctir !845
  %tuning21 = alloca %struct.hash_tuning*, align 8, !ctir !857
  %candidate = alloca i64, align 8, !ctir !55
  %cursor = alloca %struct.hash_entry*, align 8, !ctir !845
  %next = alloca %struct.hash_entry*, align 8, !ctir !845
  store %struct.hash_table* %table, %struct.hash_table** %table.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.hash_table** %table.addr, metadata !12716, metadata !DIExpression()), !dbg !12717
  store i8* %entry1, i8** %entry.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %entry.addr, metadata !12718, metadata !DIExpression()), !dbg !12719
  call void @llvm.dbg.declare(metadata i8** %data, metadata !12720, metadata !DIExpression()), !dbg !12721
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %bucket, metadata !12722, metadata !DIExpression()), !dbg !12723
  %0 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12724, !tbaa !2645
  %1 = load i8*, i8** %entry.addr, align 8, !dbg !12725, !tbaa !2645
  %call = call i8* @hash_find_entry(%struct.hash_table* %0, i8* %1, %struct.hash_entry** %bucket, i1 zeroext true), !dbg !12726
  store i8* %call, i8** %data, align 8, !dbg !12727, !tbaa !2645
  %2 = load i8*, i8** %data, align 8, !dbg !12728, !tbaa !2645
  %tobool = icmp ne i8* %2, null, !dbg !12728
  br i1 %tobool, label %if.end, label %if.then, !dbg !12730

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !12731
  br label %return, !dbg !12731

if.end:                                           ; preds = %entry
  %3 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12732, !tbaa !2645
  %n_entries = getelementptr inbounds %struct.hash_table, %struct.hash_table* %3, i32 0, i32 4, !dbg !12733, !ctir !840
  %4 = load i64, i64* %n_entries, align 8, !dbg !12734, !tbaa !11112, !ctir !55
  %dec = add i64 %4, -1, !dbg !12734
  store i64 %dec, i64* %n_entries, align 8, !dbg !12734, !tbaa !11112, !ctir !55
  %5 = load %struct.hash_entry*, %struct.hash_entry** %bucket, align 8, !dbg !12735, !tbaa !2645
  %data2 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %5, i32 0, i32 0, !dbg !12737, !ctir !846
  %6 = load i8*, i8** %data2, align 8, !dbg !12737, !tbaa !11138, !ctir !53
  %tobool3 = icmp ne i8* %6, null, !dbg !12735
  br i1 %tobool3, label %if.end42, label %if.then4, !dbg !12738

if.then4:                                         ; preds = %if.end
  %7 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12739, !tbaa !2645
  %n_buckets_used = getelementptr inbounds %struct.hash_table, %struct.hash_table* %7, i32 0, i32 3, !dbg !12741, !ctir !840
  %8 = load i64, i64* %n_buckets_used, align 8, !dbg !12742, !tbaa !11105, !ctir !55
  %dec5 = add i64 %8, -1, !dbg !12742
  store i64 %dec5, i64* %n_buckets_used, align 8, !dbg !12742, !tbaa !11105, !ctir !55
  %9 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12743, !tbaa !2645
  %n_buckets_used6 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %9, i32 0, i32 3, !dbg !12745, !ctir !840
  %10 = load i64, i64* %n_buckets_used6, align 8, !dbg !12745, !tbaa !11105, !ctir !55
  %conv = uitofp i64 %10 to float, !dbg !12743
  %11 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12746, !tbaa !2645
  %tuning = getelementptr inbounds %struct.hash_table, %struct.hash_table* %11, i32 0, i32 5, !dbg !12747, !ctir !840
  %12 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning, align 8, !dbg !12747, !tbaa !11642, !ctir !857
  %shrink_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %12, i32 0, i32 0, !dbg !12748, !ctir !858
  %13 = load float, float* %shrink_threshold, align 4, !dbg !12748, !tbaa !11772, !ctir !863
  %14 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12749, !tbaa !2645
  %n_buckets = getelementptr inbounds %struct.hash_table, %struct.hash_table* %14, i32 0, i32 2, !dbg !12750, !ctir !840
  %15 = load i64, i64* %n_buckets, align 8, !dbg !12750, !tbaa !11097, !ctir !55
  %conv7 = uitofp i64 %15 to float, !dbg !12749
  %mul = fmul float %13, %conv7, !dbg !12751
  %cmp = fcmp olt float %conv, %mul, !dbg !12752
  br i1 %cmp, label %if.then9, label %if.end41, !dbg !12753

if.then9:                                         ; preds = %if.then4
  %16 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12754, !tbaa !2645
  %call10 = call zeroext i1 @check_tuning(%struct.hash_table* %16), !dbg !12756
  %17 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12757, !tbaa !2645
  %n_buckets_used11 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %17, i32 0, i32 3, !dbg !12759, !ctir !840
  %18 = load i64, i64* %n_buckets_used11, align 8, !dbg !12759, !tbaa !11105, !ctir !55
  %conv12 = uitofp i64 %18 to float, !dbg !12757
  %19 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12760, !tbaa !2645
  %tuning13 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %19, i32 0, i32 5, !dbg !12761, !ctir !840
  %20 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning13, align 8, !dbg !12761, !tbaa !11642, !ctir !857
  %shrink_threshold14 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %20, i32 0, i32 0, !dbg !12762, !ctir !858
  %21 = load float, float* %shrink_threshold14, align 4, !dbg !12762, !tbaa !11772, !ctir !863
  %22 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12763, !tbaa !2645
  %n_buckets15 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %22, i32 0, i32 2, !dbg !12764, !ctir !840
  %23 = load i64, i64* %n_buckets15, align 8, !dbg !12764, !tbaa !11097, !ctir !55
  %conv16 = uitofp i64 %23 to float, !dbg !12763
  %mul17 = fmul float %21, %conv16, !dbg !12765
  %cmp18 = fcmp olt float %conv12, %mul17, !dbg !12766
  br i1 %cmp18, label %if.then20, label %if.end40, !dbg !12767

if.then20:                                        ; preds = %if.then9
  call void @llvm.dbg.declare(metadata %struct.hash_tuning** %tuning21, metadata !12768, metadata !DIExpression()), !dbg !12770
  %24 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12771, !tbaa !2645
  %tuning22 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %24, i32 0, i32 5, !dbg !12772, !ctir !840
  %25 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning22, align 8, !dbg !12772, !tbaa !11642, !ctir !857
  store %struct.hash_tuning* %25, %struct.hash_tuning** %tuning21, align 8, !dbg !12770, !tbaa !2645
  call void @llvm.dbg.declare(metadata i64* %candidate, metadata !12773, metadata !DIExpression()), !dbg !12774
  %26 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !12775, !tbaa !2645
  %is_n_buckets = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %26, i32 0, i32 4, !dbg !12776, !ctir !858
  %27 = load i8, i8* %is_n_buckets, align 4, !dbg !12776, !tbaa !11810
  %tobool23 = trunc i8 %27 to i1, !dbg !12776, !ctir !142
  br i1 %tobool23, label %cond.true, label %cond.false, !dbg !12775

cond.true:                                        ; preds = %if.then20
  %28 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12777, !tbaa !2645
  %n_buckets25 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %28, i32 0, i32 2, !dbg !12778, !ctir !840
  %29 = load i64, i64* %n_buckets25, align 8, !dbg !12778, !tbaa !11097, !ctir !55
  %conv26 = uitofp i64 %29 to float, !dbg !12777
  %30 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !12779, !tbaa !2645
  %shrink_factor = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %30, i32 0, i32 1, !dbg !12780, !ctir !858
  %31 = load float, float* %shrink_factor, align 4, !dbg !12780, !tbaa !11781, !ctir !863
  %mul27 = fmul float %conv26, %31, !dbg !12781
  br label %cond.end, !dbg !12775

cond.false:                                       ; preds = %if.then20
  %32 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12782, !tbaa !2645
  %n_buckets28 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %32, i32 0, i32 2, !dbg !12783, !ctir !840
  %33 = load i64, i64* %n_buckets28, align 8, !dbg !12783, !tbaa !11097, !ctir !55
  %conv29 = uitofp i64 %33 to float, !dbg !12782
  %34 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !12784, !tbaa !2645
  %shrink_factor30 = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %34, i32 0, i32 1, !dbg !12785, !ctir !858
  %35 = load float, float* %shrink_factor30, align 4, !dbg !12785, !tbaa !11781, !ctir !863
  %mul31 = fmul float %conv29, %35, !dbg !12786
  %36 = load %struct.hash_tuning*, %struct.hash_tuning** %tuning21, align 8, !dbg !12787, !tbaa !2645
  %growth_threshold = getelementptr inbounds %struct.hash_tuning, %struct.hash_tuning* %36, i32 0, i32 2, !dbg !12788, !ctir !858
  %37 = load float, float* %growth_threshold, align 4, !dbg !12788, !tbaa !11753, !ctir !863
  %mul32 = fmul float %mul31, %37, !dbg !12789
  br label %cond.end, !dbg !12775

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul27, %cond.true ], [ %mul32, %cond.false ], !dbg !12775
  %conv33 = fptoui float %cond to i64, !dbg !12790
  store i64 %conv33, i64* %candidate, align 8, !dbg !12774, !tbaa !3285
  %38 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12791, !tbaa !2645
  %39 = load i64, i64* %candidate, align 8, !dbg !12793, !tbaa !3285
  %call34 = call zeroext i1 @hash_rehash(%struct.hash_table* %38, i64 %39), !dbg !12794
  br i1 %call34, label %if.end39, label %if.then35, !dbg !12795

if.then35:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %cursor, metadata !12796, metadata !DIExpression()), !dbg !12798
  %40 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12799, !tbaa !2645
  %free_entry_list = getelementptr inbounds %struct.hash_table, %struct.hash_table* %40, i32 0, i32 9, !dbg !12800, !ctir !840
  %41 = load %struct.hash_entry*, %struct.hash_entry** %free_entry_list, align 8, !dbg !12800, !tbaa !11702, !ctir !845
  store %struct.hash_entry* %41, %struct.hash_entry** %cursor, align 8, !dbg !12798, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.hash_entry** %next, metadata !12801, metadata !DIExpression()), !dbg !12802
  br label %while.cond, !dbg !12803

while.cond:                                       ; preds = %while.body, %if.then35
  %42 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12804, !tbaa !2645
  %tobool36 = icmp ne %struct.hash_entry* %42, null, !dbg !12803
  br i1 %tobool36, label %while.body, label %while.end, !dbg !12803

while.body:                                       ; preds = %while.cond
  %43 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12805, !tbaa !2645
  %next37 = getelementptr inbounds %struct.hash_entry, %struct.hash_entry* %43, i32 0, i32 1, !dbg !12807, !ctir !846
  %44 = load %struct.hash_entry*, %struct.hash_entry** %next37, align 8, !dbg !12807, !tbaa !11150, !ctir !845
  store %struct.hash_entry* %44, %struct.hash_entry** %next, align 8, !dbg !12808, !tbaa !2645
  %45 = load %struct.hash_entry*, %struct.hash_entry** %cursor, align 8, !dbg !12809, !tbaa !2645
  %46 = bitcast %struct.hash_entry* %45 to i8*, !dbg !12809
  call void @free(i8* %46) #9, !dbg !12810
  %47 = load %struct.hash_entry*, %struct.hash_entry** %next, align 8, !dbg !12811, !tbaa !2645
  store %struct.hash_entry* %47, %struct.hash_entry** %cursor, align 8, !dbg !12812, !tbaa !2645
  br label %while.cond, !dbg !12803, !llvm.loop !12813

while.end:                                        ; preds = %while.cond
  %48 = load %struct.hash_table*, %struct.hash_table** %table.addr, align 8, !dbg !12815, !tbaa !2645
  %free_entry_list38 = getelementptr inbounds %struct.hash_table, %struct.hash_table* %48, i32 0, i32 9, !dbg !12816, !ctir !840
  store %struct.hash_entry* null, %struct.hash_entry** %free_entry_list38, align 8, !dbg !12817, !tbaa !11702, !ctir !845
  br label %if.end39, !dbg !12818

if.end39:                                         ; preds = %while.end, %cond.end
  br label %if.end40, !dbg !12819

if.end40:                                         ; preds = %if.end39, %if.then9
  br label %if.end41, !dbg !12820

if.end41:                                         ; preds = %if.end40, %if.then4
  br label %if.end42, !dbg !12821

if.end42:                                         ; preds = %if.end41, %if.end
  %49 = load i8*, i8** %data, align 8, !dbg !12822, !tbaa !2645
  store i8* %49, i8** %retval, align 8, !dbg !12823
  br label %return, !dbg !12823

return:                                           ; preds = %if.end42, %if.then
  %50 = load i8*, i8** %retval, align 8, !dbg !12824
  ret i8* %50, !dbg !12824
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @triple_hash(i8* %x, i64 %table_size) #10 !dbg !12825 !ctir !633 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.F_triple*, align 8, !ctir !1701
  %tmp = alloca i64, align 8, !ctir !55
  store i8* %x, i8** %x.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !12827, metadata !DIExpression()), !dbg !12828
  store i64 %table_size, i64* %table_size.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !12829, metadata !DIExpression()), !dbg !12830
  call void @llvm.dbg.declare(metadata %struct.F_triple** %p, metadata !12831, metadata !DIExpression()), !dbg !12832
  %0 = load i8*, i8** %x.addr, align 8, !dbg !12833, !tbaa !2645
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !12833
  store %struct.F_triple* %1, %struct.F_triple** %p, align 8, !dbg !12832, !tbaa !2645
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !12834, metadata !DIExpression()), !dbg !12835
  %2 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !12836, !tbaa !2645
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 0, !dbg !12837, !ctir !1702
  %3 = load i8*, i8** %name, align 8, !dbg !12837, !tbaa !10694, !ctir !9
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !12838, !tbaa !3285
  %call = call i64 @hash_pjw(i8* %3, i64 %4) #14, !dbg !12839
  store i64 %call, i64* %tmp, align 8, !dbg !12835, !tbaa !3285
  %5 = load i64, i64* %tmp, align 8, !dbg !12840, !tbaa !3285
  %6 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !12841, !tbaa !2645
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !12842, !ctir !1702
  %7 = load i64, i64* %st_ino, align 8, !dbg !12842, !tbaa !10701, !ctir !441
  %xor = xor i64 %5, %7, !dbg !12843
  %8 = load i64, i64* %table_size.addr, align 8, !dbg !12844, !tbaa !3285
  %rem = urem i64 %xor, %8, !dbg !12845
  ret i64 %rem, !dbg !12846
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @triple_hash_no_name(i8* %x, i64 %table_size) #10 !dbg !12847 !ctir !633 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.F_triple*, align 8, !ctir !1701
  store i8* %x, i8** %x.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !12848, metadata !DIExpression()), !dbg !12849
  store i64 %table_size, i64* %table_size.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !12850, metadata !DIExpression()), !dbg !12851
  call void @llvm.dbg.declare(metadata %struct.F_triple** %p, metadata !12852, metadata !DIExpression()), !dbg !12853
  %0 = load i8*, i8** %x.addr, align 8, !dbg !12854, !tbaa !2645
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !12854
  store %struct.F_triple* %1, %struct.F_triple** %p, align 8, !dbg !12853, !tbaa !2645
  %2 = load %struct.F_triple*, %struct.F_triple** %p, align 8, !dbg !12855, !tbaa !2645
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 1, !dbg !12856, !ctir !1702
  %3 = load i64, i64* %st_ino, align 8, !dbg !12856, !tbaa !10701, !ctir !441
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !12857, !tbaa !3285
  %rem = urem i64 %3, %4, !dbg !12858
  ret i64 %rem, !dbg !12859
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @triple_compare(i8* %x, i8* %y) #4 !dbg !12860 !ctir !635 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.F_triple*, align 8, !ctir !1701
  %b = alloca %struct.F_triple*, align 8, !ctir !1701
  store i8* %x, i8** %x.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !12861, metadata !DIExpression()), !dbg !12862
  store i8* %y, i8** %y.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !12863, metadata !DIExpression()), !dbg !12864
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !12865, metadata !DIExpression()), !dbg !12866
  %0 = load i8*, i8** %x.addr, align 8, !dbg !12867, !tbaa !2645
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !12867
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !12866, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.F_triple** %b, metadata !12868, metadata !DIExpression()), !dbg !12869
  %2 = load i8*, i8** %y.addr, align 8, !dbg !12870, !tbaa !2645
  %3 = bitcast i8* %2 to %struct.F_triple*, !dbg !12870
  store %struct.F_triple* %3, %struct.F_triple** %b, align 8, !dbg !12869, !tbaa !2645
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12871, !tbaa !2645
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %4, i32 0, i32 1, !dbg !12871, !ctir !1702
  %5 = load i64, i64* %st_ino, align 8, !dbg !12871, !tbaa !10701, !ctir !441
  %6 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12871, !tbaa !2645
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !12871, !ctir !1702
  %7 = load i64, i64* %st_ino1, align 8, !dbg !12871, !tbaa !10701, !ctir !441
  %cmp = icmp eq i64 %5, %7, !dbg !12871
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !12871

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12871, !tbaa !2645
  %st_dev = getelementptr inbounds %struct.F_triple, %struct.F_triple* %8, i32 0, i32 2, !dbg !12871, !ctir !1702
  %9 = load i64, i64* %st_dev, align 8, !dbg !12871, !tbaa !10707, !ctir !443
  %10 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12871, !tbaa !2645
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %10, i32 0, i32 2, !dbg !12871, !ctir !1702
  %11 = load i64, i64* %st_dev2, align 8, !dbg !12871, !tbaa !10707, !ctir !443
  %cmp3 = icmp eq i64 %9, %11, !dbg !12871
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !12872

land.rhs:                                         ; preds = %land.lhs.true
  %12 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12873, !tbaa !2645
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %12, i32 0, i32 0, !dbg !12874, !ctir !1702
  %13 = load i8*, i8** %name, align 8, !dbg !12874, !tbaa !10694, !ctir !9
  %14 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12875, !tbaa !2645
  %name4 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %14, i32 0, i32 0, !dbg !12876, !ctir !1702
  %15 = load i8*, i8** %name4, align 8, !dbg !12876, !tbaa !10694, !ctir !9
  %call = call zeroext i1 @same_name(i8* %13, i8* %15), !dbg !12877
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %16 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %call, %land.rhs ], !dbg !12878
  %17 = zext i1 %16 to i64, !dbg !12879
  %cond = select i1 %16, i32 1, i32 0, !dbg !12879
  %tobool = icmp ne i32 %cond, 0, !dbg !12879
  ret i1 %tobool, !dbg !12880
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local zeroext i1 @triple_compare_ino_str(i8* %x, i8* %y) #10 !dbg !12881 !ctir !635 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.F_triple*, align 8, !ctir !1701
  %b = alloca %struct.F_triple*, align 8, !ctir !1701
  store i8* %x, i8** %x.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !12882, metadata !DIExpression()), !dbg !12883
  store i8* %y, i8** %y.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !12884, metadata !DIExpression()), !dbg !12885
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !12886, metadata !DIExpression()), !dbg !12887
  %0 = load i8*, i8** %x.addr, align 8, !dbg !12888, !tbaa !2645
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !12888
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !12887, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.F_triple** %b, metadata !12889, metadata !DIExpression()), !dbg !12890
  %2 = load i8*, i8** %y.addr, align 8, !dbg !12891, !tbaa !2645
  %3 = bitcast i8* %2 to %struct.F_triple*, !dbg !12891
  store %struct.F_triple* %3, %struct.F_triple** %b, align 8, !dbg !12890, !tbaa !2645
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12892, !tbaa !2645
  %st_ino = getelementptr inbounds %struct.F_triple, %struct.F_triple* %4, i32 0, i32 1, !dbg !12892, !ctir !1702
  %5 = load i64, i64* %st_ino, align 8, !dbg !12892, !tbaa !10701, !ctir !441
  %6 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12892, !tbaa !2645
  %st_ino1 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %6, i32 0, i32 1, !dbg !12892, !ctir !1702
  %7 = load i64, i64* %st_ino1, align 8, !dbg !12892, !tbaa !10701, !ctir !441
  %cmp = icmp eq i64 %5, %7, !dbg !12892
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !12892

land.lhs.true:                                    ; preds = %entry
  %8 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12892, !tbaa !2645
  %st_dev = getelementptr inbounds %struct.F_triple, %struct.F_triple* %8, i32 0, i32 2, !dbg !12892, !ctir !1702
  %9 = load i64, i64* %st_dev, align 8, !dbg !12892, !tbaa !10707, !ctir !443
  %10 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12892, !tbaa !2645
  %st_dev2 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %10, i32 0, i32 2, !dbg !12892, !ctir !1702
  %11 = load i64, i64* %st_dev2, align 8, !dbg !12892, !tbaa !10707, !ctir !443
  %cmp3 = icmp eq i64 %9, %11, !dbg !12892
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !12893

land.rhs:                                         ; preds = %land.lhs.true
  %12 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12894, !tbaa !2645
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %12, i32 0, i32 0, !dbg !12894, !ctir !1702
  %13 = load i8*, i8** %name, align 8, !dbg !12894, !tbaa !10694, !ctir !9
  %14 = load %struct.F_triple*, %struct.F_triple** %b, align 8, !dbg !12894, !tbaa !2645
  %name4 = getelementptr inbounds %struct.F_triple, %struct.F_triple* %14, i32 0, i32 0, !dbg !12894, !ctir !1702
  %15 = load i8*, i8** %name4, align 8, !dbg !12894, !tbaa !10694, !ctir !9
  %call = call i32 @strcmp(i8* %13, i8* %15) #14, !dbg !12894
  %cmp5 = icmp eq i32 %call, 0, !dbg !12894
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %16 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %cmp5, %land.rhs ], !dbg !12895
  %17 = zext i1 %16 to i64, !dbg !12896
  %cond = select i1 %16, i32 1, i32 0, !dbg !12896
  %tobool = icmp ne i32 %cond, 0, !dbg !12896
  ret i1 %tobool, !dbg !12897
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @triple_free(i8* %x) #4 !dbg !12898 !ctir !631 {
entry:
  %x.addr = alloca i8*, align 8
  %a = alloca %struct.F_triple*, align 8, !ctir !1708
  store i8* %x, i8** %x.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !12899, metadata !DIExpression()), !dbg !12900
  call void @llvm.dbg.declare(metadata %struct.F_triple** %a, metadata !12901, metadata !DIExpression()), !dbg !12902
  %0 = load i8*, i8** %x.addr, align 8, !dbg !12903, !tbaa !2645
  %1 = bitcast i8* %0 to %struct.F_triple*, !dbg !12903
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8, !dbg !12902, !tbaa !2645
  %2 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12904, !tbaa !2645
  %name = getelementptr inbounds %struct.F_triple, %struct.F_triple* %2, i32 0, i32 0, !dbg !12905, !ctir !1703
  %3 = load i8*, i8** %name, align 8, !dbg !12905, !tbaa !10694, !ctir !9
  call void @free(i8* %3) #9, !dbg !12906
  %4 = load %struct.F_triple*, %struct.F_triple** %a, align 8, !dbg !12907, !tbaa !2645
  %5 = bitcast %struct.F_triple* %4 to i8*, !dbg !12907
  call void @free(i8* %5) #9, !dbg !12908
  ret void, !dbg !12909
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @mkancesdirs(i8* %file, %struct.savewd* %wd, i32 (i8*, i8*, i8*)* %make_dir, i8* %make_dir_arg) #4 !dbg !12910 !ctir !1723 {
entry:
  %retval = alloca i64, align 8
  %file.addr = alloca i8*, align 8
  %wd.addr = alloca %struct.savewd*, align 8
  %make_dir.addr = alloca i32 (i8*, i8*, i8*)*, align 8
  %make_dir_arg.addr = alloca i8*, align 8
  %sep = alloca i8*, align 8, !ctir !9
  %component = alloca i8*, align 8, !ctir !9
  %p = alloca i8*, align 8, !ctir !9
  %c = alloca i8, align 1, !ctir !10
  %made_dir = alloca i8, align 1, !ctir !142
  %make_dir_errno = alloca i32, align 4, !ctir !7
  %savewd_chdir_options = alloca i32, align 4, !ctir !7
  %chdir_result = alloca i32, align 4, !ctir !7
  store i8* %file, i8** %file.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !12912, metadata !DIExpression()), !dbg !12913
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !12914, metadata !DIExpression()), !dbg !12915
  store i32 (i8*, i8*, i8*)* %make_dir, i32 (i8*, i8*, i8*)** %make_dir.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i8*)** %make_dir.addr, metadata !12916, metadata !DIExpression()), !dbg !12917
  store i8* %make_dir_arg, i8** %make_dir_arg.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %make_dir_arg.addr, metadata !12918, metadata !DIExpression()), !dbg !12919
  call void @llvm.dbg.declare(metadata i8** %sep, metadata !12920, metadata !DIExpression()), !dbg !12921
  store i8* null, i8** %sep, align 8, !dbg !12921, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %component, metadata !12922, metadata !DIExpression()), !dbg !12923
  %0 = load i8*, i8** %file.addr, align 8, !dbg !12924, !tbaa !2645
  store i8* %0, i8** %component, align 8, !dbg !12923, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %p, metadata !12925, metadata !DIExpression()), !dbg !12926
  %1 = load i8*, i8** %file.addr, align 8, !dbg !12927, !tbaa !2645
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 0, !dbg !12928
  store i8* %add.ptr, i8** %p, align 8, !dbg !12926, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8* %c, metadata !12929, metadata !DIExpression()), !dbg !12930
  call void @llvm.dbg.declare(metadata i8* %made_dir, metadata !12931, metadata !DIExpression()), !dbg !12932
  store i8 0, i8* %made_dir, align 1, !dbg !12932, !tbaa !2739
  br label %while.cond, !dbg !12933

while.cond:                                       ; preds = %if.end69, %entry
  %2 = load i8*, i8** %p, align 8, !dbg !12934, !tbaa !2645
  %incdec.ptr = getelementptr inbounds i8, i8* %2, i32 1, !dbg !12934
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !12934, !tbaa !2645
  %3 = load i8, i8* %2, align 1, !dbg !12935, !tbaa !3292, !ctir !10
  store i8 %3, i8* %c, align 1, !dbg !12936, !tbaa !3292
  %tobool = icmp ne i8 %3, 0, !dbg !12933
  br i1 %tobool, label %while.body, label %while.end, !dbg !12933

while.body:                                       ; preds = %while.cond
  %4 = load i8*, i8** %p, align 8, !dbg !12937, !tbaa !2645
  %5 = load i8, i8* %4, align 1, !dbg !12937, !tbaa !3292, !ctir !10
  %conv = sext i8 %5 to i32, !dbg !12937
  %cmp = icmp eq i32 %conv, 47, !dbg !12937
  br i1 %cmp, label %if.then, label %if.else, !dbg !12939

if.then:                                          ; preds = %while.body
  %6 = load i8, i8* %c, align 1, !dbg !12940, !tbaa !3292
  %conv2 = sext i8 %6 to i32, !dbg !12940
  %cmp3 = icmp eq i32 %conv2, 47, !dbg !12940
  br i1 %cmp3, label %if.end, label %if.then5, !dbg !12943

if.then5:                                         ; preds = %if.then
  %7 = load i8*, i8** %p, align 8, !dbg !12944, !tbaa !2645
  store i8* %7, i8** %sep, align 8, !dbg !12945, !tbaa !2645
  br label %if.end, !dbg !12946

if.end:                                           ; preds = %if.then5, %if.then
  br label %if.end69, !dbg !12947

if.else:                                          ; preds = %while.body
  %8 = load i8, i8* %c, align 1, !dbg !12948, !tbaa !3292
  %conv6 = sext i8 %8 to i32, !dbg !12948
  %cmp7 = icmp eq i32 %conv6, 47, !dbg !12948
  br i1 %cmp7, label %land.lhs.true, label %if.end68, !dbg !12950

land.lhs.true:                                    ; preds = %if.else
  %9 = load i8*, i8** %p, align 8, !dbg !12951, !tbaa !2645
  %10 = load i8, i8* %9, align 1, !dbg !12952, !tbaa !3292, !ctir !10
  %conv9 = sext i8 %10 to i32, !dbg !12952
  %tobool10 = icmp ne i32 %conv9, 0, !dbg !12952
  br i1 %tobool10, label %land.lhs.true11, label %if.end68, !dbg !12953

land.lhs.true11:                                  ; preds = %land.lhs.true
  %11 = load i8*, i8** %sep, align 8, !dbg !12954, !tbaa !2645
  %tobool12 = icmp ne i8* %11, null, !dbg !12954
  br i1 %tobool12, label %if.then13, label %if.end68, !dbg !12955

if.then13:                                        ; preds = %land.lhs.true11
  %12 = load i8*, i8** %sep, align 8, !dbg !12956, !tbaa !2645
  %13 = load i8*, i8** %component, align 8, !dbg !12959, !tbaa !2645
  %sub.ptr.lhs.cast = ptrtoint i8* %12 to i64, !dbg !12960
  %sub.ptr.rhs.cast = ptrtoint i8* %13 to i64, !dbg !12960
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !12960
  %cmp14 = icmp eq i64 %sub.ptr.sub, 1, !dbg !12961
  br i1 %cmp14, label %land.lhs.true16, label %if.then20, !dbg !12962

land.lhs.true16:                                  ; preds = %if.then13
  %14 = load i8*, i8** %component, align 8, !dbg !12963, !tbaa !2645
  %arrayidx = getelementptr inbounds i8, i8* %14, i64 0, !dbg !12963, !ctir !9
  %15 = load i8, i8* %arrayidx, align 1, !dbg !12963, !tbaa !3292
  %conv17 = sext i8 %15 to i32, !dbg !12963
  %cmp18 = icmp eq i32 %conv17, 46, !dbg !12964
  br i1 %cmp18, label %if.end67, label %if.then20, !dbg !12965

if.then20:                                        ; preds = %land.lhs.true16, %if.then13
  call void @llvm.dbg.declare(metadata i32* %make_dir_errno, metadata !12966, metadata !DIExpression()), !dbg !12968
  store i32 0, i32* %make_dir_errno, align 4, !dbg !12968, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %savewd_chdir_options, metadata !12969, metadata !DIExpression()), !dbg !12970
  store i32 0, i32* %savewd_chdir_options, align 4, !dbg !12970, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %chdir_result, metadata !12971, metadata !DIExpression()), !dbg !12972
  %16 = load i8*, i8** %sep, align 8, !dbg !12973, !tbaa !2645
  store i8 0, i8* %16, align 1, !dbg !12974, !tbaa !3292, !ctir !10
  %17 = load i8*, i8** %sep, align 8, !dbg !12975, !tbaa !2645
  %18 = load i8*, i8** %component, align 8, !dbg !12977, !tbaa !2645
  %sub.ptr.lhs.cast21 = ptrtoint i8* %17 to i64, !dbg !12978
  %sub.ptr.rhs.cast22 = ptrtoint i8* %18 to i64, !dbg !12978
  %sub.ptr.sub23 = sub i64 %sub.ptr.lhs.cast21, %sub.ptr.rhs.cast22, !dbg !12978
  %cmp24 = icmp eq i64 %sub.ptr.sub23, 2, !dbg !12979
  br i1 %cmp24, label %land.lhs.true26, label %if.else37, !dbg !12980

land.lhs.true26:                                  ; preds = %if.then20
  %19 = load i8*, i8** %component, align 8, !dbg !12981, !tbaa !2645
  %arrayidx27 = getelementptr inbounds i8, i8* %19, i64 0, !dbg !12981, !ctir !9
  %20 = load i8, i8* %arrayidx27, align 1, !dbg !12981, !tbaa !3292
  %conv28 = sext i8 %20 to i32, !dbg !12981
  %cmp29 = icmp eq i32 %conv28, 46, !dbg !12982
  br i1 %cmp29, label %land.lhs.true31, label %if.else37, !dbg !12983

land.lhs.true31:                                  ; preds = %land.lhs.true26
  %21 = load i8*, i8** %component, align 8, !dbg !12984, !tbaa !2645
  %arrayidx32 = getelementptr inbounds i8, i8* %21, i64 1, !dbg !12984, !ctir !9
  %22 = load i8, i8* %arrayidx32, align 1, !dbg !12984, !tbaa !3292
  %conv33 = sext i8 %22 to i32, !dbg !12984
  %cmp34 = icmp eq i32 %conv33, 46, !dbg !12985
  br i1 %cmp34, label %if.then36, label %if.else37, !dbg !12986

if.then36:                                        ; preds = %land.lhs.true31
  store i8 0, i8* %made_dir, align 1, !dbg !12987, !tbaa !2739
  br label %if.end44, !dbg !12988

if.else37:                                        ; preds = %land.lhs.true31, %land.lhs.true26, %if.then20
  %23 = load i32 (i8*, i8*, i8*)*, i32 (i8*, i8*, i8*)** %make_dir.addr, align 8, !dbg !12989, !tbaa !2645
  %24 = load i8*, i8** %file.addr, align 8, !dbg !12991, !tbaa !2645
  %25 = load i8*, i8** %component, align 8, !dbg !12992, !tbaa !2645
  %26 = load i8*, i8** %make_dir_arg.addr, align 8, !dbg !12993, !tbaa !2645
  %call = call i32 %23(i8* %24, i8* %25, i8* %26), !dbg !12989
  %cmp38 = icmp slt i32 %call, 0, !dbg !12994
  br i1 %cmp38, label %if.then40, label %if.else42, !dbg !12995

if.then40:                                        ; preds = %if.else37
  %call41 = call i32* @__errno_location() #16, !dbg !12996
  %27 = load i32, i32* %call41, align 4, !dbg !12996, !tbaa !2632, !ctir !7
  store i32 %27, i32* %make_dir_errno, align 4, !dbg !12997, !tbaa !2632
  br label %if.end43, !dbg !12998

if.else42:                                        ; preds = %if.else37
  store i8 1, i8* %made_dir, align 1, !dbg !12999, !tbaa !2739
  br label %if.end43

if.end43:                                         ; preds = %if.else42, %if.then40
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.then36
  %28 = load i8, i8* %made_dir, align 1, !dbg !13000, !tbaa !2739
  %tobool45 = trunc i8 %28 to i1, !dbg !13000
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !13002

if.then46:                                        ; preds = %if.end44
  %29 = load i32, i32* %savewd_chdir_options, align 4, !dbg !13003, !tbaa !2632
  %or = or i32 %29, 1, !dbg !13003
  store i32 %or, i32* %savewd_chdir_options, align 4, !dbg !13003, !tbaa !2632
  br label %if.end47, !dbg !13004

if.end47:                                         ; preds = %if.then46, %if.end44
  %30 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !13005, !tbaa !2645
  %31 = load i8*, i8** %component, align 8, !dbg !13006, !tbaa !2645
  %32 = load i32, i32* %savewd_chdir_options, align 4, !dbg !13007, !tbaa !2632
  %call48 = call i32 @savewd_chdir(%struct.savewd* %30, i8* %31, i32 %32, i32* null), !dbg !13008
  store i32 %call48, i32* %chdir_result, align 4, !dbg !13009, !tbaa !2632
  %33 = load i32, i32* %chdir_result, align 4, !dbg !13010, !tbaa !2632
  %cmp49 = icmp ne i32 %33, -1, !dbg !13012
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !13013

if.then51:                                        ; preds = %if.end47
  %34 = load i8*, i8** %sep, align 8, !dbg !13014, !tbaa !2645
  store i8 47, i8* %34, align 1, !dbg !13015, !tbaa !3292, !ctir !10
  br label %if.end52, !dbg !13016

if.end52:                                         ; preds = %if.then51, %if.end47
  %35 = load i32, i32* %chdir_result, align 4, !dbg !13017, !tbaa !2632
  %cmp53 = icmp ne i32 %35, 0, !dbg !13019
  br i1 %cmp53, label %if.then55, label %if.end66, !dbg !13020

if.then55:                                        ; preds = %if.end52
  %36 = load i32, i32* %make_dir_errno, align 4, !dbg !13021, !tbaa !2632
  %cmp56 = icmp ne i32 %36, 0, !dbg !13024
  br i1 %cmp56, label %land.lhs.true58, label %if.end64, !dbg !13025

land.lhs.true58:                                  ; preds = %if.then55
  %call59 = call i32* @__errno_location() #16, !dbg !13026
  %37 = load i32, i32* %call59, align 4, !dbg !13026, !tbaa !2632, !ctir !7
  %cmp60 = icmp eq i32 %37, 2, !dbg !13027
  br i1 %cmp60, label %if.then62, label %if.end64, !dbg !13028

if.then62:                                        ; preds = %land.lhs.true58
  %38 = load i32, i32* %make_dir_errno, align 4, !dbg !13029, !tbaa !2632
  %call63 = call i32* @__errno_location() #16, !dbg !13030
  store i32 %38, i32* %call63, align 4, !dbg !13031, !tbaa !2632, !ctir !7
  br label %if.end64, !dbg !13030

if.end64:                                         ; preds = %if.then62, %land.lhs.true58, %if.then55
  %39 = load i32, i32* %chdir_result, align 4, !dbg !13032, !tbaa !2632
  %conv65 = sext i32 %39 to i64, !dbg !13032
  store i64 %conv65, i64* %retval, align 8, !dbg !13033
  br label %return, !dbg !13033

if.end66:                                         ; preds = %if.end52
  br label %if.end67, !dbg !13034

if.end67:                                         ; preds = %if.end66, %land.lhs.true16
  %40 = load i8*, i8** %p, align 8, !dbg !13035, !tbaa !2645
  store i8* %40, i8** %component, align 8, !dbg !13036, !tbaa !2645
  br label %if.end68, !dbg !13037

if.end68:                                         ; preds = %if.end67, %land.lhs.true11, %land.lhs.true, %if.else
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.end
  br label %while.cond, !dbg !12933, !llvm.loop !13038

while.end:                                        ; preds = %while.cond
  %41 = load i8*, i8** %component, align 8, !dbg !13040, !tbaa !2645
  %42 = load i8*, i8** %file.addr, align 8, !dbg !13041, !tbaa !2645
  %sub.ptr.lhs.cast70 = ptrtoint i8* %41 to i64, !dbg !13042
  %sub.ptr.rhs.cast71 = ptrtoint i8* %42 to i64, !dbg !13042
  %sub.ptr.sub72 = sub i64 %sub.ptr.lhs.cast70, %sub.ptr.rhs.cast71, !dbg !13042
  store i64 %sub.ptr.sub72, i64* %retval, align 8, !dbg !13043
  br label %return, !dbg !13043

return:                                           ; preds = %while.end, %if.end64
  %43 = load i64, i64* %retval, align 8, !dbg !13044
  ret i64 %43, !dbg !13044
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @make_dir_parents(i8* %dir, %struct.savewd* %wd, i32 (i8*, i8*, i8*)* %make_ancestor, i8* %options, i32 %mode, void (i8*, i8*)* %announce, i32 %mode_bits, i32 %owner, i32 %group, i1 zeroext %preserve_existing) #4 !dbg !13045 !ctir !1741 {
entry:
  %retval = alloca i1, align 1
  %dir.addr = alloca i8*, align 8
  %wd.addr = alloca %struct.savewd*, align 8
  %make_ancestor.addr = alloca i32 (i8*, i8*, i8*)*, align 8
  %options.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  %announce.addr = alloca void (i8*, i8*)*, align 8
  %mode_bits.addr = alloca i32, align 4
  %owner.addr = alloca i32, align 4
  %group.addr = alloca i32, align 4
  %preserve_existing.addr = alloca i8, align 1
  %mkdir_errno = alloca i32, align 4, !ctir !7
  %prefix_len = alloca i64, align 8, !ctir !652
  %savewd_chdir_options = alloca i32, align 4, !ctir !7
  %keep_owner = alloca i8, align 1, !ctir !142
  %keep_special_mode_bits = alloca i8, align 1, !ctir !142
  %mkdir_mode = alloca i32, align 4, !ctir !139
  %umask_must_be_ok = alloca i8, align 1, !ctir !142
  %st = alloca %struct.stat, align 8, !ctir !13047
  %open_result = alloca [2 x i32], align 4, !ctir !1745
  %chdir_result = alloca i32, align 4, !ctir !7
  %chdir_ok = alloca i8, align 1, !ctir !142
  %subdir = alloca i8*, align 8, !ctir !180
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !13068, metadata !DIExpression()), !dbg !13069
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !13070, metadata !DIExpression()), !dbg !13071
  store i32 (i8*, i8*, i8*)* %make_ancestor, i32 (i8*, i8*, i8*)** %make_ancestor.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i8*)** %make_ancestor.addr, metadata !13072, metadata !DIExpression()), !dbg !13073
  store i8* %options, i8** %options.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %options.addr, metadata !13074, metadata !DIExpression()), !dbg !13075
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !13076, metadata !DIExpression()), !dbg !13077
  store void (i8*, i8*)* %announce, void (i8*, i8*)** %announce.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata void (i8*, i8*)** %announce.addr, metadata !13078, metadata !DIExpression()), !dbg !13079
  store i32 %mode_bits, i32* %mode_bits.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %mode_bits.addr, metadata !13080, metadata !DIExpression()), !dbg !13081
  store i32 %owner, i32* %owner.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %owner.addr, metadata !13082, metadata !DIExpression()), !dbg !13083
  store i32 %group, i32* %group.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %group.addr, metadata !13084, metadata !DIExpression()), !dbg !13085
  %frombool = zext i1 %preserve_existing to i8
  store i8 %frombool, i8* %preserve_existing.addr, align 1, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %preserve_existing.addr, metadata !13086, metadata !DIExpression()), !dbg !13087
  call void @llvm.dbg.declare(metadata i32* %mkdir_errno, metadata !13088, metadata !DIExpression()), !dbg !13089
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !13090, !tbaa !2645
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !13090, !ctir !9
  %1 = load i8, i8* %arrayidx, align 1, !dbg !13090, !tbaa !3292
  %conv = sext i8 %1 to i32, !dbg !13090
  %cmp = icmp eq i32 %conv, 47, !dbg !13090
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13090

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !13090

cond.false:                                       ; preds = %entry
  %2 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !13091, !tbaa !2645
  %call = call i32 @savewd_errno(%struct.savewd* %2) #14, !dbg !13092
  br label %cond.end, !dbg !13090

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %call, %cond.false ], !dbg !13090
  store i32 %cond, i32* %mkdir_errno, align 4, !dbg !13089, !tbaa !2632
  %3 = load i32, i32* %mkdir_errno, align 4, !dbg !13093, !tbaa !2632
  %cmp2 = icmp eq i32 %3, 0, !dbg !13095
  br i1 %cmp2, label %if.then, label %if.end140, !dbg !13096

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i64* %prefix_len, metadata !13097, metadata !DIExpression()), !dbg !13099
  store i64 0, i64* %prefix_len, align 8, !dbg !13099, !tbaa !3285
  call void @llvm.dbg.declare(metadata i32* %savewd_chdir_options, metadata !13100, metadata !DIExpression()), !dbg !13101
  store i32 2, i32* %savewd_chdir_options, align 4, !dbg !13101, !tbaa !2632
  %4 = load i32 (i8*, i8*, i8*)*, i32 (i8*, i8*, i8*)** %make_ancestor.addr, align 8, !dbg !13102, !tbaa !2645
  %tobool = icmp ne i32 (i8*, i8*, i8*)* %4, null, !dbg !13102
  br i1 %tobool, label %if.then4, label %if.end14, !dbg !13104

if.then4:                                         ; preds = %if.then
  %5 = load i8*, i8** %dir.addr, align 8, !dbg !13105, !tbaa !2645
  %6 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !13107, !tbaa !2645
  %7 = load i32 (i8*, i8*, i8*)*, i32 (i8*, i8*, i8*)** %make_ancestor.addr, align 8, !dbg !13108, !tbaa !2645
  %8 = load i8*, i8** %options.addr, align 8, !dbg !13109, !tbaa !2645
  %call5 = call i64 @mkancesdirs(i8* %5, %struct.savewd* %6, i32 (i8*, i8*, i8*)* %7, i8* %8), !dbg !13110
  store i64 %call5, i64* %prefix_len, align 8, !dbg !13111, !tbaa !3285
  %9 = load i64, i64* %prefix_len, align 8, !dbg !13112, !tbaa !3285
  %cmp6 = icmp slt i64 %9, 0, !dbg !13114
  br i1 %cmp6, label %if.then8, label %if.end13, !dbg !13115

if.then8:                                         ; preds = %if.then4
  %10 = load i64, i64* %prefix_len, align 8, !dbg !13116, !tbaa !3285
  %cmp9 = icmp slt i64 %10, -1, !dbg !13119
  br i1 %cmp9, label %if.then11, label %if.end, !dbg !13120

if.then11:                                        ; preds = %if.then8
  store i1 true, i1* %retval, align 1, !dbg !13121
  br label %return, !dbg !13121

if.end:                                           ; preds = %if.then8
  %call12 = call i32* @__errno_location() #16, !dbg !13122
  %11 = load i32, i32* %call12, align 4, !dbg !13122, !tbaa !2632, !ctir !7
  store i32 %11, i32* %mkdir_errno, align 4, !dbg !13123, !tbaa !2632
  br label %if.end13, !dbg !13124

if.end13:                                         ; preds = %if.end, %if.then4
  br label %if.end14, !dbg !13125

if.end14:                                         ; preds = %if.end13, %if.then
  %12 = load i64, i64* %prefix_len, align 8, !dbg !13126, !tbaa !3285
  %cmp15 = icmp sle i64 0, %12, !dbg !13128
  br i1 %cmp15, label %if.then17, label %if.end139, !dbg !13129

if.then17:                                        ; preds = %if.end14
  call void @llvm.dbg.declare(metadata i8* %keep_owner, metadata !13130, metadata !DIExpression()), !dbg !13132
  %13 = load i32, i32* %owner.addr, align 4, !dbg !13133, !tbaa !2632
  %cmp18 = icmp eq i32 %13, -1, !dbg !13134
  br i1 %cmp18, label %land.rhs, label %land.end, !dbg !13135

land.rhs:                                         ; preds = %if.then17
  %14 = load i32, i32* %group.addr, align 4, !dbg !13136, !tbaa !2632
  %cmp20 = icmp eq i32 %14, -1, !dbg !13137
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then17
  %15 = phi i1 [ false, %if.then17 ], [ %cmp20, %land.rhs ], !dbg !13138
  %frombool22 = zext i1 %15 to i8, !dbg !13132
  store i8 %frombool22, i8* %keep_owner, align 1, !dbg !13132, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %keep_special_mode_bits, metadata !13139, metadata !DIExpression()), !dbg !13140
  %16 = load i32, i32* %mode_bits.addr, align 4, !dbg !13141, !tbaa !2632
  %and = and i32 %16, 3072, !dbg !13142
  %17 = load i32, i32* %mode.addr, align 4, !dbg !13143, !tbaa !2632
  %and23 = and i32 %17, 512, !dbg !13144
  %or = or i32 %and, %and23, !dbg !13145
  %cmp24 = icmp eq i32 %or, 0, !dbg !13146
  %frombool26 = zext i1 %cmp24 to i8, !dbg !13140
  store i8 %frombool26, i8* %keep_special_mode_bits, align 1, !dbg !13140, !tbaa !2739
  call void @llvm.dbg.declare(metadata i32* %mkdir_mode, metadata !13147, metadata !DIExpression()), !dbg !13148
  %18 = load i32, i32* %mode.addr, align 4, !dbg !13149, !tbaa !2632
  store i32 %18, i32* %mkdir_mode, align 4, !dbg !13148, !tbaa !2632
  %19 = load i8, i8* %keep_owner, align 1, !dbg !13150, !tbaa !2739
  %tobool27 = trunc i8 %19 to i1, !dbg !13150
  br i1 %tobool27, label %if.else, label %if.then28, !dbg !13152

if.then28:                                        ; preds = %land.end
  %20 = load i32, i32* %mkdir_mode, align 4, !dbg !13153, !tbaa !2632
  %and29 = and i32 %20, -64, !dbg !13153
  store i32 %and29, i32* %mkdir_mode, align 4, !dbg !13153, !tbaa !2632
  br label %if.end34, !dbg !13154

if.else:                                          ; preds = %land.end
  %21 = load i8, i8* %keep_special_mode_bits, align 1, !dbg !13155, !tbaa !2739
  %tobool30 = trunc i8 %21 to i1, !dbg !13155
  br i1 %tobool30, label %if.end33, label %if.then31, !dbg !13157

if.then31:                                        ; preds = %if.else
  %22 = load i32, i32* %mkdir_mode, align 4, !dbg !13158, !tbaa !2632
  %and32 = and i32 %22, -19, !dbg !13158
  store i32 %and32, i32* %mkdir_mode, align 4, !dbg !13158, !tbaa !2632
  br label %if.end33, !dbg !13159

if.end33:                                         ; preds = %if.then31, %if.else
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then28
  %23 = load i8*, i8** %dir.addr, align 8, !dbg !13160, !tbaa !2645
  %24 = load i64, i64* %prefix_len, align 8, !dbg !13162, !tbaa !3285
  %add.ptr = getelementptr inbounds i8, i8* %23, i64 %24, !dbg !13163
  %25 = load i32, i32* %mkdir_mode, align 4, !dbg !13164, !tbaa !2632
  %call35 = call i32 @mkdir(i8* %add.ptr, i32 %25) #9, !dbg !13165
  %cmp36 = icmp eq i32 %call35, 0, !dbg !13166
  br i1 %cmp36, label %if.then38, label %if.else55, !dbg !13167

if.then38:                                        ; preds = %if.end34
  call void @llvm.dbg.declare(metadata i8* %umask_must_be_ok, metadata !13168, metadata !DIExpression()), !dbg !13170
  %26 = load i32, i32* %mode.addr, align 4, !dbg !13171, !tbaa !2632
  %27 = load i32, i32* %mode_bits.addr, align 4, !dbg !13172, !tbaa !2632
  %and39 = and i32 %26, %27, !dbg !13173
  %and40 = and i32 %and39, 511, !dbg !13174
  %cmp41 = icmp eq i32 %and40, 0, !dbg !13175
  %frombool43 = zext i1 %cmp41 to i8, !dbg !13170
  store i8 %frombool43, i8* %umask_must_be_ok, align 1, !dbg !13170, !tbaa !2739
  %28 = load void (i8*, i8*)*, void (i8*, i8*)** %announce.addr, align 8, !dbg !13176, !tbaa !2645
  %29 = load i8*, i8** %dir.addr, align 8, !dbg !13177, !tbaa !2645
  %30 = load i8*, i8** %options.addr, align 8, !dbg !13178, !tbaa !2645
  call void %28(i8* %29, i8* %30), !dbg !13176
  %31 = load i8, i8* %keep_owner, align 1, !dbg !13179, !tbaa !2739
  %tobool44 = trunc i8 %31 to i1, !dbg !13179
  %conv45 = zext i1 %tobool44 to i32, !dbg !13179
  %32 = load i8, i8* %keep_special_mode_bits, align 1, !dbg !13180, !tbaa !2739
  %tobool46 = trunc i8 %32 to i1, !dbg !13180
  %conv47 = zext i1 %tobool46 to i32, !dbg !13180
  %and48 = and i32 %conv45, %conv47, !dbg !13181
  %33 = load i8, i8* %umask_must_be_ok, align 1, !dbg !13182, !tbaa !2739
  %tobool49 = trunc i8 %33 to i1, !dbg !13182
  %conv50 = zext i1 %tobool49 to i32, !dbg !13182
  %and51 = and i32 %and48, %conv50, !dbg !13183
  %tobool52 = icmp ne i32 %and51, 0, !dbg !13184
  %frombool53 = zext i1 %tobool52 to i8, !dbg !13185
  store i8 %frombool53, i8* %preserve_existing.addr, align 1, !dbg !13185, !tbaa !2739
  %34 = load i32, i32* %savewd_chdir_options, align 4, !dbg !13186, !tbaa !2632
  %or54 = or i32 %34, 1, !dbg !13186
  store i32 %or54, i32* %savewd_chdir_options, align 4, !dbg !13186, !tbaa !2632
  br label %if.end57, !dbg !13187

if.else55:                                        ; preds = %if.end34
  %call56 = call i32* @__errno_location() #16, !dbg !13188
  %35 = load i32, i32* %call56, align 4, !dbg !13188, !tbaa !2632, !ctir !7
  store i32 %35, i32* %mkdir_errno, align 4, !dbg !13190, !tbaa !2632
  store i32 -1, i32* %mkdir_mode, align 4, !dbg !13191, !tbaa !2632
  br label %if.end57

if.end57:                                         ; preds = %if.else55, %if.then38
  %36 = load i8, i8* %preserve_existing.addr, align 1, !dbg !13192, !tbaa !2739
  %tobool58 = trunc i8 %36 to i1, !dbg !13192
  br i1 %tobool58, label %if.then59, label %if.else96, !dbg !13194

if.then59:                                        ; preds = %if.end57
  %37 = load i32, i32* %mkdir_errno, align 4, !dbg !13195, !tbaa !2632
  %cmp60 = icmp eq i32 %37, 0, !dbg !13198
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !13199

if.then62:                                        ; preds = %if.then59
  store i1 true, i1* %retval, align 1, !dbg !13200
  br label %return, !dbg !13200

if.end63:                                         ; preds = %if.then59
  %38 = load i32, i32* %mkdir_errno, align 4, !dbg !13201, !tbaa !2632
  %cmp64 = icmp ne i32 %38, 2, !dbg !13203
  br i1 %cmp64, label %land.lhs.true, label %if.end95, !dbg !13204

land.lhs.true:                                    ; preds = %if.end63
  %39 = load i32 (i8*, i8*, i8*)*, i32 (i8*, i8*, i8*)** %make_ancestor.addr, align 8, !dbg !13205, !tbaa !2645
  %tobool66 = icmp ne i32 (i8*, i8*, i8*)* %39, null, !dbg !13205
  br i1 %tobool66, label %if.then67, label %if.end95, !dbg !13206

if.then67:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !13207, metadata !DIExpression()), !dbg !13209
  %40 = load i8*, i8** %dir.addr, align 8, !dbg !13210, !tbaa !2645
  %41 = load i64, i64* %prefix_len, align 8, !dbg !13212, !tbaa !3285
  %add.ptr68 = getelementptr inbounds i8, i8* %40, i64 %41, !dbg !13213
  %call69 = call i32 @stat(i8* %add.ptr68, %struct.stat* %st) #9, !dbg !13214
  %cmp70 = icmp eq i32 %call69, 0, !dbg !13215
  br i1 %cmp70, label %if.then72, label %if.else78, !dbg !13216

if.then72:                                        ; preds = %if.then67
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !13217, !ctir !13047
  %42 = load i32, i32* %st_mode, align 8, !dbg !13217, !tbaa !2911, !ctir !140
  %and73 = and i32 %42, 61440, !dbg !13217
  %cmp74 = icmp eq i32 %and73, 16384, !dbg !13217
  br i1 %cmp74, label %if.then76, label %if.end77, !dbg !13220

if.then76:                                        ; preds = %if.then72
  store i1 true, i1* %retval, align 1, !dbg !13221
  br label %return, !dbg !13221

if.end77:                                         ; preds = %if.then72
  br label %if.end94, !dbg !13222

if.else78:                                        ; preds = %if.then67
  %43 = load i32, i32* %mkdir_errno, align 4, !dbg !13223, !tbaa !2632
  %cmp79 = icmp eq i32 %43, 17, !dbg !13225
  br i1 %cmp79, label %land.lhs.true81, label %if.end93, !dbg !13226

land.lhs.true81:                                  ; preds = %if.else78
  %call82 = call i32* @__errno_location() #16, !dbg !13227
  %44 = load i32, i32* %call82, align 4, !dbg !13227, !tbaa !2632, !ctir !7
  %cmp83 = icmp ne i32 %44, 2, !dbg !13228
  br i1 %cmp83, label %land.lhs.true85, label %if.end93, !dbg !13229

land.lhs.true85:                                  ; preds = %land.lhs.true81
  %call86 = call i32* @__errno_location() #16, !dbg !13230
  %45 = load i32, i32* %call86, align 4, !dbg !13230, !tbaa !2632, !ctir !7
  %cmp87 = icmp ne i32 %45, 20, !dbg !13231
  br i1 %cmp87, label %if.then89, label %if.end93, !dbg !13232

if.then89:                                        ; preds = %land.lhs.true85
  %call90 = call i32* @__errno_location() #16, !dbg !13233
  %46 = load i32, i32* %call90, align 4, !dbg !13233, !tbaa !2632, !ctir !7
  %call91 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.296, i64 0, i64 0)) #9, !dbg !13235
  %47 = load i8*, i8** %dir.addr, align 8, !dbg !13236, !tbaa !2645
  %call92 = call i8* @quote(i8* %47), !dbg !13237
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %46, i8* %call91, i8* %call92), !dbg !13238
  store i1 false, i1* %retval, align 1, !dbg !13239
  br label %return, !dbg !13239

if.end93:                                         ; preds = %land.lhs.true85, %land.lhs.true81, %if.else78
  br label %if.end94

if.end94:                                         ; preds = %if.end93, %if.end77
  br label %if.end95, !dbg !13240

if.end95:                                         ; preds = %if.end94, %land.lhs.true, %if.end63
  br label %if.end138, !dbg !13241

if.else96:                                        ; preds = %if.end57
  call void @llvm.dbg.declare(metadata [2 x i32]* %open_result, metadata !13242, metadata !DIExpression()), !dbg !13244
  call void @llvm.dbg.declare(metadata i32* %chdir_result, metadata !13245, metadata !DIExpression()), !dbg !13246
  %48 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !13247, !tbaa !2645
  %49 = load i8*, i8** %dir.addr, align 8, !dbg !13248, !tbaa !2645
  %50 = load i64, i64* %prefix_len, align 8, !dbg !13249, !tbaa !3285
  %add.ptr97 = getelementptr inbounds i8, i8* %49, i64 %50, !dbg !13250
  %51 = load i32, i32* %savewd_chdir_options, align 4, !dbg !13251, !tbaa !2632
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %open_result, i64 0, i64 0, !dbg !13252
  %call98 = call i32 @savewd_chdir(%struct.savewd* %48, i8* %add.ptr97, i32 %51, i32* %arraydecay), !dbg !13253
  store i32 %call98, i32* %chdir_result, align 4, !dbg !13246, !tbaa !2632
  %52 = load i32, i32* %chdir_result, align 4, !dbg !13254, !tbaa !2632
  %cmp99 = icmp slt i32 %52, -1, !dbg !13256
  br i1 %cmp99, label %if.then101, label %if.else102, !dbg !13257

if.then101:                                       ; preds = %if.else96
  store i1 true, i1* %retval, align 1, !dbg !13258
  br label %return, !dbg !13258

if.else102:                                       ; preds = %if.else96
  call void @llvm.dbg.declare(metadata i8* %chdir_ok, metadata !13259, metadata !DIExpression()), !dbg !13261
  %53 = load i32, i32* %chdir_result, align 4, !dbg !13262, !tbaa !2632
  %cmp103 = icmp eq i32 %53, 0, !dbg !13263
  %frombool105 = zext i1 %cmp103 to i8, !dbg !13261
  store i8 %frombool105, i8* %chdir_ok, align 1, !dbg !13261, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8** %subdir, metadata !13264, metadata !DIExpression()), !dbg !13265
  %54 = load i8, i8* %chdir_ok, align 1, !dbg !13266, !tbaa !2739
  %tobool106 = trunc i8 %54 to i1, !dbg !13266
  br i1 %tobool106, label %cond.true108, label %cond.false109, !dbg !13266

cond.true108:                                     ; preds = %if.else102
  br label %cond.end111, !dbg !13266

cond.false109:                                    ; preds = %if.else102
  %55 = load i8*, i8** %dir.addr, align 8, !dbg !13267, !tbaa !2645
  %56 = load i64, i64* %prefix_len, align 8, !dbg !13268, !tbaa !3285
  %add.ptr110 = getelementptr inbounds i8, i8* %55, i64 %56, !dbg !13269
  br label %cond.end111, !dbg !13266

cond.end111:                                      ; preds = %cond.false109, %cond.true108
  %cond112 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.297, i64 0, i64 0), %cond.true108 ], [ %add.ptr110, %cond.false109 ], !dbg !13266
  store i8* %cond112, i8** %subdir, align 8, !dbg !13265, !tbaa !2645
  %arrayidx113 = getelementptr inbounds [2 x i32], [2 x i32]* %open_result, i64 0, i64 0, !dbg !13270, !ctir !1745
  %57 = load i32, i32* %arrayidx113, align 4, !dbg !13270, !tbaa !2632
  %58 = load i8*, i8** %subdir, align 8, !dbg !13272, !tbaa !2645
  %59 = load i32, i32* %mkdir_mode, align 4, !dbg !13273, !tbaa !2632
  %60 = load i32, i32* %owner.addr, align 4, !dbg !13274, !tbaa !2632
  %61 = load i32, i32* %group.addr, align 4, !dbg !13275, !tbaa !2632
  %62 = load i32, i32* %mode.addr, align 4, !dbg !13276, !tbaa !2632
  %63 = load i32, i32* %mode_bits.addr, align 4, !dbg !13277, !tbaa !2632
  %call114 = call i32 @dirchownmod(i32 %57, i8* %58, i32 %59, i32 %60, i32 %61, i32 %62, i32 %63), !dbg !13278
  %cmp115 = icmp eq i32 %call114, 0, !dbg !13279
  br i1 %cmp115, label %if.then117, label %if.end118, !dbg !13280

if.then117:                                       ; preds = %cond.end111
  store i1 true, i1* %retval, align 1, !dbg !13281
  br label %return, !dbg !13281

if.end118:                                        ; preds = %cond.end111
  %64 = load i32, i32* %mkdir_errno, align 4, !dbg !13282, !tbaa !2632
  %cmp119 = icmp eq i32 %64, 0, !dbg !13284
  br i1 %cmp119, label %if.then129, label %lor.lhs.false, !dbg !13285

lor.lhs.false:                                    ; preds = %if.end118
  %65 = load i32, i32* %mkdir_errno, align 4, !dbg !13286, !tbaa !2632
  %cmp121 = icmp ne i32 %65, 2, !dbg !13287
  br i1 %cmp121, label %land.lhs.true123, label %if.end136, !dbg !13288

land.lhs.true123:                                 ; preds = %lor.lhs.false
  %66 = load i32 (i8*, i8*, i8*)*, i32 (i8*, i8*, i8*)** %make_ancestor.addr, align 8, !dbg !13289, !tbaa !2645
  %tobool124 = icmp ne i32 (i8*, i8*, i8*)* %66, null, !dbg !13289
  br i1 %tobool124, label %land.lhs.true125, label %if.end136, !dbg !13290

land.lhs.true125:                                 ; preds = %land.lhs.true123
  %call126 = call i32* @__errno_location() #16, !dbg !13291
  %67 = load i32, i32* %call126, align 4, !dbg !13291, !tbaa !2632, !ctir !7
  %cmp127 = icmp ne i32 %67, 20, !dbg !13292
  br i1 %cmp127, label %if.then129, label %if.end136, !dbg !13293

if.then129:                                       ; preds = %land.lhs.true125, %if.end118
  %call130 = call i32* @__errno_location() #16, !dbg !13294
  %68 = load i32, i32* %call130, align 4, !dbg !13294, !tbaa !2632, !ctir !7
  %69 = load i8, i8* %keep_owner, align 1, !dbg !13296, !tbaa !2739
  %tobool131 = trunc i8 %69 to i1, !dbg !13296
  %70 = zext i1 %tobool131 to i64, !dbg !13296
  %cond133 = select i1 %tobool131, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2.298, i64 0, i64 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3.299, i64 0, i64 0), !dbg !13296
  %call134 = call i8* @gettext(i8* %cond133) #9, !dbg !13296
  %71 = load i8*, i8** %dir.addr, align 8, !dbg !13297, !tbaa !2645
  %call135 = call i8* @quote(i8* %71), !dbg !13298
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %68, i8* %call134, i8* %call135), !dbg !13299
  store i1 false, i1* %retval, align 1, !dbg !13300
  br label %return, !dbg !13300

if.end136:                                        ; preds = %land.lhs.true125, %land.lhs.true123, %lor.lhs.false
  br label %if.end137

if.end137:                                        ; preds = %if.end136
  br label %if.end138

if.end138:                                        ; preds = %if.end137, %if.end95
  br label %if.end139, !dbg !13301

if.end139:                                        ; preds = %if.end138, %if.end14
  br label %if.end140, !dbg !13302

if.end140:                                        ; preds = %if.end139, %cond.end
  %72 = load i32, i32* %mkdir_errno, align 4, !dbg !13303, !tbaa !2632
  %call141 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4.300, i64 0, i64 0)) #9, !dbg !13304
  %73 = load i8*, i8** %dir.addr, align 8, !dbg !13305, !tbaa !2645
  %call142 = call i8* @quote(i8* %73), !dbg !13306
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %72, i8* %call141, i8* %call142), !dbg !13307
  store i1 false, i1* %retval, align 1, !dbg !13308
  br label %return, !dbg !13308

return:                                           ; preds = %if.end140, %if.then129, %if.then117, %if.then101, %if.then89, %if.then76, %if.then62, %if.then11
  %74 = load i1, i1* %retval, align 1, !dbg !13309
  ret i1 %74, !dbg !13309
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.mode_change* @mode_compile(i8* %mode_string) #4 !dbg !13310 !ctir !1749 {
entry:
  %retval = alloca %struct.mode_change*, align 8
  %mode_string.addr = alloca i8*, align 8
  %mc = alloca %struct.mode_change*, align 8, !ctir !1751
  %used = alloca i64, align 8, !ctir !55
  %p = alloca i8*, align 8, !ctir !180
  %octal_mode = alloca i32, align 4, !ctir !70
  %mode = alloca i32, align 4, !ctir !139
  %mentioned = alloca i32, align 4, !ctir !139
  %needed = alloca i64, align 8, !ctir !55
  %affected = alloca i32, align 4, !ctir !139
  %op = alloca i8, align 1, !ctir !10
  %value = alloca i32, align 4, !ctir !139
  %mentioned51 = alloca i32, align 4, !ctir !139
  %flag = alloca i8, align 1, !ctir !10
  %change = alloca %struct.mode_change*, align 8, !ctir !1751
  %octal_mode54 = alloca i32, align 4, !ctir !70
  store i8* %mode_string, i8** %mode_string.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %mode_string.addr, metadata !13311, metadata !DIExpression()), !dbg !13312
  call void @llvm.dbg.declare(metadata %struct.mode_change** %mc, metadata !13313, metadata !DIExpression()), !dbg !13314
  call void @llvm.dbg.declare(metadata i64* %used, metadata !13315, metadata !DIExpression()), !dbg !13316
  store i64 0, i64* %used, align 8, !dbg !13316, !tbaa !3285
  call void @llvm.dbg.declare(metadata i8** %p, metadata !13317, metadata !DIExpression()), !dbg !13318
  %0 = load i8*, i8** %mode_string.addr, align 8, !dbg !13319, !tbaa !2645
  %1 = load i8, i8* %0, align 1, !dbg !13321, !tbaa !3292, !ctir !181
  %conv = sext i8 %1 to i32, !dbg !13321
  %cmp = icmp sle i32 48, %conv, !dbg !13322
  br i1 %cmp, label %land.lhs.true, label %if.end21, !dbg !13323

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %mode_string.addr, align 8, !dbg !13324, !tbaa !2645
  %3 = load i8, i8* %2, align 1, !dbg !13325, !tbaa !3292, !ctir !181
  %conv2 = sext i8 %3 to i32, !dbg !13325
  %cmp3 = icmp slt i32 %conv2, 56, !dbg !13326
  br i1 %cmp3, label %if.then, label %if.end21, !dbg !13327

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %octal_mode, metadata !13328, metadata !DIExpression()), !dbg !13330
  store i32 0, i32* %octal_mode, align 4, !dbg !13330, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !13331, metadata !DIExpression()), !dbg !13332
  call void @llvm.dbg.declare(metadata i32* %mentioned, metadata !13333, metadata !DIExpression()), !dbg !13334
  %4 = load i8*, i8** %mode_string.addr, align 8, !dbg !13335, !tbaa !2645
  store i8* %4, i8** %p, align 8, !dbg !13336, !tbaa !2645
  br label %do.body, !dbg !13337

do.body:                                          ; preds = %land.end, %if.then
  %5 = load i32, i32* %octal_mode, align 4, !dbg !13338, !tbaa !2632
  %mul = mul i32 8, %5, !dbg !13340
  %6 = load i8*, i8** %p, align 8, !dbg !13341, !tbaa !2645
  %incdec.ptr = getelementptr inbounds i8, i8* %6, i32 1, !dbg !13341
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !13341, !tbaa !2645
  %7 = load i8, i8* %6, align 1, !dbg !13342, !tbaa !3292, !ctir !181
  %conv5 = sext i8 %7 to i32, !dbg !13342
  %add = add i32 %mul, %conv5, !dbg !13343
  %sub = sub i32 %add, 48, !dbg !13344
  store i32 %sub, i32* %octal_mode, align 4, !dbg !13345, !tbaa !2632
  %8 = load i32, i32* %octal_mode, align 4, !dbg !13346, !tbaa !2632
  %cmp6 = icmp ult i32 4095, %8, !dbg !13348
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !13349

if.then8:                                         ; preds = %do.body
  store %struct.mode_change* null, %struct.mode_change** %retval, align 8, !dbg !13350
  br label %return, !dbg !13350

if.end:                                           ; preds = %do.body
  br label %do.cond, !dbg !13351

do.cond:                                          ; preds = %if.end
  %9 = load i8*, i8** %p, align 8, !dbg !13352, !tbaa !2645
  %10 = load i8, i8* %9, align 1, !dbg !13353, !tbaa !3292, !ctir !181
  %conv9 = sext i8 %10 to i32, !dbg !13353
  %cmp10 = icmp sle i32 48, %conv9, !dbg !13354
  br i1 %cmp10, label %land.rhs, label %land.end, !dbg !13355

land.rhs:                                         ; preds = %do.cond
  %11 = load i8*, i8** %p, align 8, !dbg !13356, !tbaa !2645
  %12 = load i8, i8* %11, align 1, !dbg !13357, !tbaa !3292, !ctir !181
  %conv12 = sext i8 %12 to i32, !dbg !13357
  %cmp13 = icmp slt i32 %conv12, 56, !dbg !13358
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %13 = phi i1 [ false, %do.cond ], [ %cmp13, %land.rhs ], !dbg !13359
  br i1 %13, label %do.body, label %do.end, !dbg !13351, !llvm.loop !13360

do.end:                                           ; preds = %land.end
  %14 = load i8*, i8** %p, align 8, !dbg !13362, !tbaa !2645
  %15 = load i8, i8* %14, align 1, !dbg !13364, !tbaa !3292, !ctir !181
  %tobool = icmp ne i8 %15, 0, !dbg !13364
  br i1 %tobool, label %if.then15, label %if.end16, !dbg !13365

if.then15:                                        ; preds = %do.end
  store %struct.mode_change* null, %struct.mode_change** %retval, align 8, !dbg !13366
  br label %return, !dbg !13366

if.end16:                                         ; preds = %do.end
  %16 = load i32, i32* %octal_mode, align 4, !dbg !13367, !tbaa !2632
  %call = call i32 @octal_to_mode(i32 %16), !dbg !13368
  store i32 %call, i32* %mode, align 4, !dbg !13369, !tbaa !2632
  %17 = load i8*, i8** %p, align 8, !dbg !13370, !tbaa !2645
  %18 = load i8*, i8** %mode_string.addr, align 8, !dbg !13371, !tbaa !2645
  %sub.ptr.lhs.cast = ptrtoint i8* %17 to i64, !dbg !13372
  %sub.ptr.rhs.cast = ptrtoint i8* %18 to i64, !dbg !13372
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !13372
  %cmp17 = icmp slt i64 %sub.ptr.sub, 5, !dbg !13373
  br i1 %cmp17, label %cond.true, label %cond.false, !dbg !13370

cond.true:                                        ; preds = %if.end16
  %19 = load i32, i32* %mode, align 4, !dbg !13374, !tbaa !2632
  %and = and i32 %19, 3072, !dbg !13375
  %or = or i32 %and, 512, !dbg !13376
  %or19 = or i32 %or, 511, !dbg !13377
  br label %cond.end, !dbg !13370

cond.false:                                       ; preds = %if.end16
  br label %cond.end, !dbg !13370

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or19, %cond.true ], [ 4095, %cond.false ], !dbg !13370
  store i32 %cond, i32* %mentioned, align 4, !dbg !13378, !tbaa !2632
  %20 = load i32, i32* %mode, align 4, !dbg !13379, !tbaa !2632
  %21 = load i32, i32* %mentioned, align 4, !dbg !13380, !tbaa !2632
  %call20 = call %struct.mode_change* @make_node_op_equals(i32 %20, i32 %21), !dbg !13381
  store %struct.mode_change* %call20, %struct.mode_change** %retval, align 8, !dbg !13382
  br label %return, !dbg !13382

if.end21:                                         ; preds = %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata i64* %needed, metadata !13383, metadata !DIExpression()), !dbg !13385
  store i64 1, i64* %needed, align 8, !dbg !13385, !tbaa !3285
  %22 = load i8*, i8** %mode_string.addr, align 8, !dbg !13386, !tbaa !2645
  store i8* %22, i8** %p, align 8, !dbg !13388, !tbaa !2645
  br label %for.cond, !dbg !13389

for.cond:                                         ; preds = %for.inc, %if.end21
  %23 = load i8*, i8** %p, align 8, !dbg !13390, !tbaa !2645
  %24 = load i8, i8* %23, align 1, !dbg !13392, !tbaa !3292, !ctir !181
  %tobool22 = icmp ne i8 %24, 0, !dbg !13393
  br i1 %tobool22, label %for.body, label %for.end, !dbg !13393

for.body:                                         ; preds = %for.cond
  %25 = load i8*, i8** %p, align 8, !dbg !13394, !tbaa !2645
  %26 = load i8, i8* %25, align 1, !dbg !13395, !tbaa !3292, !ctir !181
  %conv23 = sext i8 %26 to i32, !dbg !13395
  %cmp24 = icmp eq i32 %conv23, 61, !dbg !13396
  br i1 %cmp24, label %lor.end, label %lor.lhs.false, !dbg !13397

lor.lhs.false:                                    ; preds = %for.body
  %27 = load i8*, i8** %p, align 8, !dbg !13398, !tbaa !2645
  %28 = load i8, i8* %27, align 1, !dbg !13399, !tbaa !3292, !ctir !181
  %conv26 = sext i8 %28 to i32, !dbg !13399
  %cmp27 = icmp eq i32 %conv26, 43, !dbg !13400
  br i1 %cmp27, label %lor.end, label %lor.rhs, !dbg !13401

lor.rhs:                                          ; preds = %lor.lhs.false
  %29 = load i8*, i8** %p, align 8, !dbg !13402, !tbaa !2645
  %30 = load i8, i8* %29, align 1, !dbg !13403, !tbaa !3292, !ctir !181
  %conv29 = sext i8 %30 to i32, !dbg !13403
  %cmp30 = icmp eq i32 %conv29, 45, !dbg !13404
  br label %lor.end, !dbg !13401

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %for.body
  %31 = phi i1 [ true, %lor.lhs.false ], [ true, %for.body ], [ %cmp30, %lor.rhs ]
  %lor.ext = zext i1 %31 to i32, !dbg !13401
  %conv32 = sext i32 %lor.ext to i64, !dbg !13405
  %32 = load i64, i64* %needed, align 8, !dbg !13406, !tbaa !3285
  %add33 = add i64 %32, %conv32, !dbg !13406
  store i64 %add33, i64* %needed, align 8, !dbg !13406, !tbaa !3285
  br label %for.inc, !dbg !13407

for.inc:                                          ; preds = %lor.end
  %33 = load i8*, i8** %p, align 8, !dbg !13408, !tbaa !2645
  %incdec.ptr34 = getelementptr inbounds i8, i8* %33, i32 1, !dbg !13408
  store i8* %incdec.ptr34, i8** %p, align 8, !dbg !13408, !tbaa !2645
  br label %for.cond, !dbg !13409, !llvm.loop !13410

for.end:                                          ; preds = %for.cond
  %34 = load i64, i64* %needed, align 8, !dbg !13412, !tbaa !3285
  %call35 = call noalias i8* @xnmalloc(i64 %34, i64 16), !dbg !13413
  %35 = bitcast i8* %call35 to %struct.mode_change*, !dbg !13413
  store %struct.mode_change* %35, %struct.mode_change** %mc, align 8, !dbg !13414, !tbaa !2645
  %36 = load i8*, i8** %mode_string.addr, align 8, !dbg !13415, !tbaa !2645
  store i8* %36, i8** %p, align 8, !dbg !13417, !tbaa !2645
  br label %for.cond36, !dbg !13418

for.cond36:                                       ; preds = %for.inc147, %for.end
  call void @llvm.dbg.declare(metadata i32* %affected, metadata !13419, metadata !DIExpression()), !dbg !13422
  store i32 0, i32* %affected, align 4, !dbg !13422, !tbaa !2632
  br label %for.cond37, !dbg !13423

for.cond37:                                       ; preds = %for.inc47, %for.cond36
  %37 = load i8*, i8** %p, align 8, !dbg !13424, !tbaa !2645
  %38 = load i8, i8* %37, align 1, !dbg !13427, !tbaa !3292, !ctir !181
  %conv38 = sext i8 %38 to i32, !dbg !13427
  switch i32 %conv38, label %sw.default [
    i32 117, label %sw.bb
    i32 103, label %sw.bb40
    i32 111, label %sw.bb42
    i32 97, label %sw.bb44
    i32 61, label %sw.bb46
    i32 43, label %sw.bb46
    i32 45, label %sw.bb46
  ], !dbg !13428

sw.default:                                       ; preds = %for.cond37
  br label %invalid, !dbg !13429

sw.bb:                                            ; preds = %for.cond37
  %39 = load i32, i32* %affected, align 4, !dbg !13431, !tbaa !2632
  %or39 = or i32 %39, 2496, !dbg !13431
  store i32 %or39, i32* %affected, align 4, !dbg !13431, !tbaa !2632
  br label %sw.epilog, !dbg !13432

sw.bb40:                                          ; preds = %for.cond37
  %40 = load i32, i32* %affected, align 4, !dbg !13433, !tbaa !2632
  %or41 = or i32 %40, 1080, !dbg !13433
  store i32 %or41, i32* %affected, align 4, !dbg !13433, !tbaa !2632
  br label %sw.epilog, !dbg !13434

sw.bb42:                                          ; preds = %for.cond37
  %41 = load i32, i32* %affected, align 4, !dbg !13435, !tbaa !2632
  %or43 = or i32 %41, 519, !dbg !13435
  store i32 %or43, i32* %affected, align 4, !dbg !13435, !tbaa !2632
  br label %sw.epilog, !dbg !13436

sw.bb44:                                          ; preds = %for.cond37
  %42 = load i32, i32* %affected, align 4, !dbg !13437, !tbaa !2632
  %or45 = or i32 %42, 4095, !dbg !13437
  store i32 %or45, i32* %affected, align 4, !dbg !13437, !tbaa !2632
  br label %sw.epilog, !dbg !13438

sw.bb46:                                          ; preds = %for.cond37, %for.cond37, %for.cond37
  br label %no_more_affected, !dbg !13439

sw.epilog:                                        ; preds = %sw.bb44, %sw.bb42, %sw.bb40, %sw.bb
  br label %for.inc47, !dbg !13440

for.inc47:                                        ; preds = %sw.epilog
  %43 = load i8*, i8** %p, align 8, !dbg !13441, !tbaa !2645
  %incdec.ptr48 = getelementptr inbounds i8, i8* %43, i32 1, !dbg !13441
  store i8* %incdec.ptr48, i8** %p, align 8, !dbg !13441, !tbaa !2645
  br label %for.cond37, !dbg !13442, !llvm.loop !13443

no_more_affected:                                 ; preds = %sw.bb46
  call void @llvm.dbg.label(metadata !13446), !dbg !13447
  br label %do.body49, !dbg !13448

do.body49:                                        ; preds = %lor.end139, %no_more_affected
  call void @llvm.dbg.declare(metadata i8* %op, metadata !13449, metadata !DIExpression()), !dbg !13451
  %44 = load i8*, i8** %p, align 8, !dbg !13452, !tbaa !2645
  %incdec.ptr50 = getelementptr inbounds i8, i8* %44, i32 1, !dbg !13452
  store i8* %incdec.ptr50, i8** %p, align 8, !dbg !13452, !tbaa !2645
  %45 = load i8, i8* %44, align 1, !dbg !13453, !tbaa !3292, !ctir !181
  store i8 %45, i8* %op, align 1, !dbg !13451, !tbaa !3292
  call void @llvm.dbg.declare(metadata i32* %value, metadata !13454, metadata !DIExpression()), !dbg !13455
  call void @llvm.dbg.declare(metadata i32* %mentioned51, metadata !13456, metadata !DIExpression()), !dbg !13457
  store i32 0, i32* %mentioned51, align 4, !dbg !13457, !tbaa !2632
  call void @llvm.dbg.declare(metadata i8* %flag, metadata !13458, metadata !DIExpression()), !dbg !13459
  store i8 3, i8* %flag, align 1, !dbg !13459, !tbaa !3292
  call void @llvm.dbg.declare(metadata %struct.mode_change** %change, metadata !13460, metadata !DIExpression()), !dbg !13461
  %46 = load i8*, i8** %p, align 8, !dbg !13462, !tbaa !2645
  %47 = load i8, i8* %46, align 1, !dbg !13463, !tbaa !3292, !ctir !181
  %conv52 = sext i8 %47 to i32, !dbg !13463
  switch i32 %conv52, label %sw.default92 [
    i32 48, label %sw.bb53
    i32 49, label %sw.bb53
    i32 50, label %sw.bb53
    i32 51, label %sw.bb53
    i32 52, label %sw.bb53
    i32 53, label %sw.bb53
    i32 54, label %sw.bb53
    i32 55, label %sw.bb53
    i32 117, label %sw.bb86
    i32 103, label %sw.bb88
    i32 111, label %sw.bb90
  ], !dbg !13464

sw.bb53:                                          ; preds = %do.body49, %do.body49, %do.body49, %do.body49, %do.body49, %do.body49, %do.body49, %do.body49
  call void @llvm.dbg.declare(metadata i32* %octal_mode54, metadata !13465, metadata !DIExpression()), !dbg !13468
  store i32 0, i32* %octal_mode54, align 4, !dbg !13468, !tbaa !2632
  br label %do.body55, !dbg !13469

do.body55:                                        ; preds = %land.end73, %sw.bb53
  %48 = load i32, i32* %octal_mode54, align 4, !dbg !13470, !tbaa !2632
  %mul56 = mul i32 8, %48, !dbg !13472
  %49 = load i8*, i8** %p, align 8, !dbg !13473, !tbaa !2645
  %incdec.ptr57 = getelementptr inbounds i8, i8* %49, i32 1, !dbg !13473
  store i8* %incdec.ptr57, i8** %p, align 8, !dbg !13473, !tbaa !2645
  %50 = load i8, i8* %49, align 1, !dbg !13474, !tbaa !3292, !ctir !181
  %conv58 = sext i8 %50 to i32, !dbg !13474
  %add59 = add i32 %mul56, %conv58, !dbg !13475
  %sub60 = sub i32 %add59, 48, !dbg !13476
  store i32 %sub60, i32* %octal_mode54, align 4, !dbg !13477, !tbaa !2632
  %51 = load i32, i32* %octal_mode54, align 4, !dbg !13478, !tbaa !2632
  %cmp61 = icmp ult i32 4095, %51, !dbg !13480
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !13481

if.then63:                                        ; preds = %do.body55
  br label %invalid, !dbg !13482

if.end64:                                         ; preds = %do.body55
  br label %do.cond65, !dbg !13483

do.cond65:                                        ; preds = %if.end64
  %52 = load i8*, i8** %p, align 8, !dbg !13484, !tbaa !2645
  %53 = load i8, i8* %52, align 1, !dbg !13485, !tbaa !3292, !ctir !181
  %conv66 = sext i8 %53 to i32, !dbg !13485
  %cmp67 = icmp sle i32 48, %conv66, !dbg !13486
  br i1 %cmp67, label %land.rhs69, label %land.end73, !dbg !13487

land.rhs69:                                       ; preds = %do.cond65
  %54 = load i8*, i8** %p, align 8, !dbg !13488, !tbaa !2645
  %55 = load i8, i8* %54, align 1, !dbg !13489, !tbaa !3292, !ctir !181
  %conv70 = sext i8 %55 to i32, !dbg !13489
  %cmp71 = icmp slt i32 %conv70, 56, !dbg !13490
  br label %land.end73

land.end73:                                       ; preds = %land.rhs69, %do.cond65
  %56 = phi i1 [ false, %do.cond65 ], [ %cmp71, %land.rhs69 ], !dbg !13491
  br i1 %56, label %do.body55, label %do.end74, !dbg !13483, !llvm.loop !13492

do.end74:                                         ; preds = %land.end73
  %57 = load i32, i32* %affected, align 4, !dbg !13494, !tbaa !2632
  %tobool75 = icmp ne i32 %57, 0, !dbg !13494
  br i1 %tobool75, label %if.then83, label %lor.lhs.false76, !dbg !13496

lor.lhs.false76:                                  ; preds = %do.end74
  %58 = load i8*, i8** %p, align 8, !dbg !13497, !tbaa !2645
  %59 = load i8, i8* %58, align 1, !dbg !13498, !tbaa !3292, !ctir !181
  %conv77 = sext i8 %59 to i32, !dbg !13498
  %tobool78 = icmp ne i32 %conv77, 0, !dbg !13498
  br i1 %tobool78, label %land.lhs.true79, label %if.end84, !dbg !13499

land.lhs.true79:                                  ; preds = %lor.lhs.false76
  %60 = load i8*, i8** %p, align 8, !dbg !13500, !tbaa !2645
  %61 = load i8, i8* %60, align 1, !dbg !13501, !tbaa !3292, !ctir !181
  %conv80 = sext i8 %61 to i32, !dbg !13501
  %cmp81 = icmp ne i32 %conv80, 44, !dbg !13502
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !13503

if.then83:                                        ; preds = %land.lhs.true79, %do.end74
  br label %invalid, !dbg !13504

if.end84:                                         ; preds = %land.lhs.true79, %lor.lhs.false76
  store i32 4095, i32* %mentioned51, align 4, !dbg !13505, !tbaa !2632
  store i32 4095, i32* %affected, align 4, !dbg !13506, !tbaa !2632
  %62 = load i32, i32* %octal_mode54, align 4, !dbg !13507, !tbaa !2632
  %call85 = call i32 @octal_to_mode(i32 %62), !dbg !13508
  store i32 %call85, i32* %value, align 4, !dbg !13509, !tbaa !2632
  store i8 1, i8* %flag, align 1, !dbg !13510, !tbaa !3292
  br label %sw.epilog110, !dbg !13511

sw.bb86:                                          ; preds = %do.body49
  store i32 448, i32* %value, align 4, !dbg !13512, !tbaa !2632
  %63 = load i8*, i8** %p, align 8, !dbg !13513, !tbaa !2645
  %incdec.ptr87 = getelementptr inbounds i8, i8* %63, i32 1, !dbg !13513
  store i8* %incdec.ptr87, i8** %p, align 8, !dbg !13513, !tbaa !2645
  br label %sw.epilog110, !dbg !13514

sw.bb88:                                          ; preds = %do.body49
  store i32 56, i32* %value, align 4, !dbg !13515, !tbaa !2632
  %64 = load i8*, i8** %p, align 8, !dbg !13516, !tbaa !2645
  %incdec.ptr89 = getelementptr inbounds i8, i8* %64, i32 1, !dbg !13516
  store i8* %incdec.ptr89, i8** %p, align 8, !dbg !13516, !tbaa !2645
  br label %sw.epilog110, !dbg !13517

sw.bb90:                                          ; preds = %do.body49
  store i32 7, i32* %value, align 4, !dbg !13518, !tbaa !2632
  %65 = load i8*, i8** %p, align 8, !dbg !13519, !tbaa !2645
  %incdec.ptr91 = getelementptr inbounds i8, i8* %65, i32 1, !dbg !13519
  store i8* %incdec.ptr91, i8** %p, align 8, !dbg !13519, !tbaa !2645
  br label %sw.epilog110, !dbg !13520

sw.default92:                                     ; preds = %do.body49
  store i32 0, i32* %value, align 4, !dbg !13521, !tbaa !2632
  store i8 1, i8* %flag, align 1, !dbg !13522, !tbaa !3292
  br label %for.cond93, !dbg !13523

for.cond93:                                       ; preds = %for.inc108, %sw.default92
  %66 = load i8*, i8** %p, align 8, !dbg !13524, !tbaa !2645
  %67 = load i8, i8* %66, align 1, !dbg !13527, !tbaa !3292, !ctir !181
  %conv94 = sext i8 %67 to i32, !dbg !13527
  switch i32 %conv94, label %sw.default106 [
    i32 114, label %sw.bb95
    i32 119, label %sw.bb97
    i32 120, label %sw.bb99
    i32 88, label %sw.bb101
    i32 115, label %sw.bb102
    i32 116, label %sw.bb104
  ], !dbg !13528

sw.bb95:                                          ; preds = %for.cond93
  %68 = load i32, i32* %value, align 4, !dbg !13529, !tbaa !2632
  %or96 = or i32 %68, 292, !dbg !13529
  store i32 %or96, i32* %value, align 4, !dbg !13529, !tbaa !2632
  br label %sw.epilog107, !dbg !13531

sw.bb97:                                          ; preds = %for.cond93
  %69 = load i32, i32* %value, align 4, !dbg !13532, !tbaa !2632
  %or98 = or i32 %69, 146, !dbg !13532
  store i32 %or98, i32* %value, align 4, !dbg !13532, !tbaa !2632
  br label %sw.epilog107, !dbg !13533

sw.bb99:                                          ; preds = %for.cond93
  %70 = load i32, i32* %value, align 4, !dbg !13534, !tbaa !2632
  %or100 = or i32 %70, 73, !dbg !13534
  store i32 %or100, i32* %value, align 4, !dbg !13534, !tbaa !2632
  br label %sw.epilog107, !dbg !13535

sw.bb101:                                         ; preds = %for.cond93
  store i8 2, i8* %flag, align 1, !dbg !13536, !tbaa !3292
  br label %sw.epilog107, !dbg !13537

sw.bb102:                                         ; preds = %for.cond93
  %71 = load i32, i32* %value, align 4, !dbg !13538, !tbaa !2632
  %or103 = or i32 %71, 3072, !dbg !13538
  store i32 %or103, i32* %value, align 4, !dbg !13538, !tbaa !2632
  br label %sw.epilog107, !dbg !13539

sw.bb104:                                         ; preds = %for.cond93
  %72 = load i32, i32* %value, align 4, !dbg !13540, !tbaa !2632
  %or105 = or i32 %72, 512, !dbg !13540
  store i32 %or105, i32* %value, align 4, !dbg !13540, !tbaa !2632
  br label %sw.epilog107, !dbg !13541

sw.default106:                                    ; preds = %for.cond93
  br label %no_more_values, !dbg !13542

sw.epilog107:                                     ; preds = %sw.bb104, %sw.bb102, %sw.bb101, %sw.bb99, %sw.bb97, %sw.bb95
  br label %for.inc108, !dbg !13543

for.inc108:                                       ; preds = %sw.epilog107
  %73 = load i8*, i8** %p, align 8, !dbg !13544, !tbaa !2645
  %incdec.ptr109 = getelementptr inbounds i8, i8* %73, i32 1, !dbg !13544
  store i8* %incdec.ptr109, i8** %p, align 8, !dbg !13544, !tbaa !2645
  br label %for.cond93, !dbg !13545, !llvm.loop !13546

no_more_values:                                   ; preds = %sw.default106
  call void @llvm.dbg.label(metadata !13549), !dbg !13550
  br label %sw.epilog110, !dbg !13551

sw.epilog110:                                     ; preds = %no_more_values, %sw.bb90, %sw.bb88, %sw.bb86, %if.end84
  %74 = load %struct.mode_change*, %struct.mode_change** %mc, align 8, !dbg !13552, !tbaa !2645
  %75 = load i64, i64* %used, align 8, !dbg !13553, !tbaa !3285
  %inc = add i64 %75, 1, !dbg !13553
  store i64 %inc, i64* %used, align 8, !dbg !13553, !tbaa !3285
  %arrayidx = getelementptr inbounds %struct.mode_change, %struct.mode_change* %74, i64 %75, !dbg !13552, !ctir !1751
  store %struct.mode_change* %arrayidx, %struct.mode_change** %change, align 8, !dbg !13554, !tbaa !2645
  %76 = load i8, i8* %op, align 1, !dbg !13555, !tbaa !3292
  %77 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !13556, !tbaa !2645
  %op111 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %77, i32 0, i32 0, !dbg !13557, !ctir !1752
  store i8 %76, i8* %op111, align 4, !dbg !13558, !tbaa !13559, !ctir !10
  %78 = load i8, i8* %flag, align 1, !dbg !13561, !tbaa !3292
  %79 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !13562, !tbaa !2645
  %flag112 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %79, i32 0, i32 1, !dbg !13563, !ctir !1752
  store i8 %78, i8* %flag112, align 1, !dbg !13564, !tbaa !13565, !ctir !10
  %80 = load i32, i32* %affected, align 4, !dbg !13566, !tbaa !2632
  %81 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !13567, !tbaa !2645
  %affected113 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %81, i32 0, i32 2, !dbg !13568, !ctir !1752
  store i32 %80, i32* %affected113, align 4, !dbg !13569, !tbaa !13570, !ctir !139
  %82 = load i32, i32* %value, align 4, !dbg !13571, !tbaa !2632
  %83 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !13572, !tbaa !2645
  %value114 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %83, i32 0, i32 3, !dbg !13573, !ctir !1752
  store i32 %82, i32* %value114, align 4, !dbg !13574, !tbaa !13575, !ctir !139
  %84 = load i32, i32* %mentioned51, align 4, !dbg !13576, !tbaa !2632
  %tobool115 = icmp ne i32 %84, 0, !dbg !13576
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !13576

cond.true116:                                     ; preds = %sw.epilog110
  %85 = load i32, i32* %mentioned51, align 4, !dbg !13577, !tbaa !2632
  br label %cond.end124, !dbg !13576

cond.false117:                                    ; preds = %sw.epilog110
  %86 = load i32, i32* %affected, align 4, !dbg !13578, !tbaa !2632
  %tobool118 = icmp ne i32 %86, 0, !dbg !13578
  br i1 %tobool118, label %cond.true119, label %cond.false121, !dbg !13578

cond.true119:                                     ; preds = %cond.false117
  %87 = load i32, i32* %affected, align 4, !dbg !13579, !tbaa !2632
  %88 = load i32, i32* %value, align 4, !dbg !13580, !tbaa !2632
  %and120 = and i32 %87, %88, !dbg !13581
  br label %cond.end122, !dbg !13578

cond.false121:                                    ; preds = %cond.false117
  %89 = load i32, i32* %value, align 4, !dbg !13582, !tbaa !2632
  br label %cond.end122, !dbg !13578

cond.end122:                                      ; preds = %cond.false121, %cond.true119
  %cond123 = phi i32 [ %and120, %cond.true119 ], [ %89, %cond.false121 ], !dbg !13578
  br label %cond.end124, !dbg !13576

cond.end124:                                      ; preds = %cond.end122, %cond.true116
  %cond125 = phi i32 [ %85, %cond.true116 ], [ %cond123, %cond.end122 ], !dbg !13576
  %90 = load %struct.mode_change*, %struct.mode_change** %change, align 8, !dbg !13583, !tbaa !2645
  %mentioned126 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %90, i32 0, i32 4, !dbg !13584, !ctir !1752
  store i32 %cond125, i32* %mentioned126, align 4, !dbg !13585, !tbaa !13586, !ctir !139
  br label %do.cond127, !dbg !13587

do.cond127:                                       ; preds = %cond.end124
  %91 = load i8*, i8** %p, align 8, !dbg !13588, !tbaa !2645
  %92 = load i8, i8* %91, align 1, !dbg !13589, !tbaa !3292, !ctir !181
  %conv128 = sext i8 %92 to i32, !dbg !13589
  %cmp129 = icmp eq i32 %conv128, 61, !dbg !13590
  br i1 %cmp129, label %lor.end139, label %lor.lhs.false131, !dbg !13591

lor.lhs.false131:                                 ; preds = %do.cond127
  %93 = load i8*, i8** %p, align 8, !dbg !13592, !tbaa !2645
  %94 = load i8, i8* %93, align 1, !dbg !13593, !tbaa !3292, !ctir !181
  %conv132 = sext i8 %94 to i32, !dbg !13593
  %cmp133 = icmp eq i32 %conv132, 43, !dbg !13594
  br i1 %cmp133, label %lor.end139, label %lor.rhs135, !dbg !13595

lor.rhs135:                                       ; preds = %lor.lhs.false131
  %95 = load i8*, i8** %p, align 8, !dbg !13596, !tbaa !2645
  %96 = load i8, i8* %95, align 1, !dbg !13597, !tbaa !3292, !ctir !181
  %conv136 = sext i8 %96 to i32, !dbg !13597
  %cmp137 = icmp eq i32 %conv136, 45, !dbg !13598
  br label %lor.end139, !dbg !13595

lor.end139:                                       ; preds = %lor.rhs135, %lor.lhs.false131, %do.cond127
  %97 = phi i1 [ true, %lor.lhs.false131 ], [ true, %do.cond127 ], [ %cmp137, %lor.rhs135 ]
  br i1 %97, label %do.body49, label %do.end141, !dbg !13587, !llvm.loop !13599

do.end141:                                        ; preds = %lor.end139
  %98 = load i8*, i8** %p, align 8, !dbg !13601, !tbaa !2645
  %99 = load i8, i8* %98, align 1, !dbg !13603, !tbaa !3292, !ctir !181
  %conv142 = sext i8 %99 to i32, !dbg !13603
  %cmp143 = icmp ne i32 %conv142, 44, !dbg !13604
  br i1 %cmp143, label %if.then145, label %if.end146, !dbg !13605

if.then145:                                       ; preds = %do.end141
  br label %for.end149, !dbg !13606

if.end146:                                        ; preds = %do.end141
  br label %for.inc147, !dbg !13607

for.inc147:                                       ; preds = %if.end146
  %100 = load i8*, i8** %p, align 8, !dbg !13608, !tbaa !2645
  %incdec.ptr148 = getelementptr inbounds i8, i8* %100, i32 1, !dbg !13608
  store i8* %incdec.ptr148, i8** %p, align 8, !dbg !13608, !tbaa !2645
  br label %for.cond36, !dbg !13609, !llvm.loop !13610

for.end149:                                       ; preds = %if.then145
  %101 = load i8*, i8** %p, align 8, !dbg !13613, !tbaa !2645
  %102 = load i8, i8* %101, align 1, !dbg !13615, !tbaa !3292, !ctir !181
  %conv150 = sext i8 %102 to i32, !dbg !13615
  %cmp151 = icmp eq i32 %conv150, 0, !dbg !13616
  br i1 %cmp151, label %if.then153, label %if.end156, !dbg !13617

if.then153:                                       ; preds = %for.end149
  %103 = load %struct.mode_change*, %struct.mode_change** %mc, align 8, !dbg !13618, !tbaa !2645
  %104 = load i64, i64* %used, align 8, !dbg !13620, !tbaa !3285
  %arrayidx154 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %103, i64 %104, !dbg !13618, !ctir !1751
  %flag155 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %arrayidx154, i32 0, i32 1, !dbg !13621, !ctir !1752
  store i8 0, i8* %flag155, align 1, !dbg !13622, !tbaa !13565, !ctir !10
  %105 = load %struct.mode_change*, %struct.mode_change** %mc, align 8, !dbg !13623, !tbaa !2645
  store %struct.mode_change* %105, %struct.mode_change** %retval, align 8, !dbg !13624
  br label %return, !dbg !13624

if.end156:                                        ; preds = %for.end149
  br label %invalid, !dbg !13625

invalid:                                          ; preds = %if.end156, %if.then83, %if.then63, %sw.default
  call void @llvm.dbg.label(metadata !13626), !dbg !13627
  %106 = load %struct.mode_change*, %struct.mode_change** %mc, align 8, !dbg !13628, !tbaa !2645
  %107 = bitcast %struct.mode_change* %106 to i8*, !dbg !13628
  call void @free(i8* %107) #9, !dbg !13629
  store %struct.mode_change* null, %struct.mode_change** %retval, align 8, !dbg !13630
  br label %return, !dbg !13630

return:                                           ; preds = %invalid, %if.then153, %cond.end, %if.then15, %if.then8
  %108 = load %struct.mode_change*, %struct.mode_change** %retval, align 8, !dbg !13631
  ret %struct.mode_change* %108, !dbg !13631
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @octal_to_mode(i32 %octal) #4 !dbg !13632 !ctir !1765 {
entry:
  %octal.addr = alloca i32, align 4
  store i32 %octal, i32* %octal.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %octal.addr, metadata !13633, metadata !DIExpression()), !dbg !13634
  %0 = load i32, i32* %octal.addr, align 4, !dbg !13635, !tbaa !2632
  ret i32 %0, !dbg !13636
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.mode_change* @make_node_op_equals(i32 %new_mode, i32 %mentioned) #4 !dbg !13637 !ctir !1767 {
entry:
  %new_mode.addr = alloca i32, align 4
  %mentioned.addr = alloca i32, align 4
  %p = alloca %struct.mode_change*, align 8, !ctir !1751
  store i32 %new_mode, i32* %new_mode.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %new_mode.addr, metadata !13638, metadata !DIExpression()), !dbg !13639
  store i32 %mentioned, i32* %mentioned.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %mentioned.addr, metadata !13640, metadata !DIExpression()), !dbg !13641
  call void @llvm.dbg.declare(metadata %struct.mode_change** %p, metadata !13642, metadata !DIExpression()), !dbg !13643
  %call = call noalias i8* @xmalloc(i64 32), !dbg !13644
  %0 = bitcast i8* %call to %struct.mode_change*, !dbg !13644
  store %struct.mode_change* %0, %struct.mode_change** %p, align 8, !dbg !13643, !tbaa !2645
  %1 = load %struct.mode_change*, %struct.mode_change** %p, align 8, !dbg !13645, !tbaa !2645
  %op = getelementptr inbounds %struct.mode_change, %struct.mode_change* %1, i32 0, i32 0, !dbg !13646, !ctir !1752
  store i8 61, i8* %op, align 4, !dbg !13647, !tbaa !13559, !ctir !10
  %2 = load %struct.mode_change*, %struct.mode_change** %p, align 8, !dbg !13648, !tbaa !2645
  %flag = getelementptr inbounds %struct.mode_change, %struct.mode_change* %2, i32 0, i32 1, !dbg !13649, !ctir !1752
  store i8 1, i8* %flag, align 1, !dbg !13650, !tbaa !13565, !ctir !10
  %3 = load %struct.mode_change*, %struct.mode_change** %p, align 8, !dbg !13651, !tbaa !2645
  %affected = getelementptr inbounds %struct.mode_change, %struct.mode_change* %3, i32 0, i32 2, !dbg !13652, !ctir !1752
  store i32 4095, i32* %affected, align 4, !dbg !13653, !tbaa !13570, !ctir !139
  %4 = load i32, i32* %new_mode.addr, align 4, !dbg !13654, !tbaa !2632
  %5 = load %struct.mode_change*, %struct.mode_change** %p, align 8, !dbg !13655, !tbaa !2645
  %value = getelementptr inbounds %struct.mode_change, %struct.mode_change* %5, i32 0, i32 3, !dbg !13656, !ctir !1752
  store i32 %4, i32* %value, align 4, !dbg !13657, !tbaa !13575, !ctir !139
  %6 = load i32, i32* %mentioned.addr, align 4, !dbg !13658, !tbaa !2632
  %7 = load %struct.mode_change*, %struct.mode_change** %p, align 8, !dbg !13659, !tbaa !2645
  %mentioned1 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %7, i32 0, i32 4, !dbg !13660, !ctir !1752
  store i32 %6, i32* %mentioned1, align 4, !dbg !13661, !tbaa !13586, !ctir !139
  %8 = load %struct.mode_change*, %struct.mode_change** %p, align 8, !dbg !13662, !tbaa !2645
  %arrayidx = getelementptr inbounds %struct.mode_change, %struct.mode_change* %8, i64 1, !dbg !13662, !ctir !1751
  %flag2 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %arrayidx, i32 0, i32 1, !dbg !13663, !ctir !1752
  store i8 0, i8* %flag2, align 1, !dbg !13664, !tbaa !13565, !ctir !10
  %9 = load %struct.mode_change*, %struct.mode_change** %p, align 8, !dbg !13665, !tbaa !2645
  ret %struct.mode_change* %9, !dbg !13666
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.mode_change* @mode_create_from_ref(i8* %ref_file) #4 !dbg !13667 !ctir !1749 {
entry:
  %retval = alloca %struct.mode_change*, align 8
  %ref_file.addr = alloca i8*, align 8
  %ref_stats = alloca %struct.stat, align 8, !ctir !13668
  store i8* %ref_file, i8** %ref_file.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %ref_file.addr, metadata !13689, metadata !DIExpression()), !dbg !13690
  call void @llvm.dbg.declare(metadata %struct.stat* %ref_stats, metadata !13691, metadata !DIExpression()), !dbg !13692
  %0 = load i8*, i8** %ref_file.addr, align 8, !dbg !13693, !tbaa !2645
  %call = call i32 @stat(i8* %0, %struct.stat* %ref_stats) #9, !dbg !13695
  %cmp = icmp ne i32 %call, 0, !dbg !13696
  br i1 %cmp, label %if.then, label %if.end, !dbg !13697

if.then:                                          ; preds = %entry
  store %struct.mode_change* null, %struct.mode_change** %retval, align 8, !dbg !13698
  br label %return, !dbg !13698

if.end:                                           ; preds = %entry
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %ref_stats, i32 0, i32 3, !dbg !13699, !ctir !13668
  %1 = load i32, i32* %st_mode, align 8, !dbg !13699, !tbaa !2911, !ctir !140
  %call1 = call %struct.mode_change* @make_node_op_equals(i32 %1, i32 4095), !dbg !13700
  store %struct.mode_change* %call1, %struct.mode_change** %retval, align 8, !dbg !13701
  br label %return, !dbg !13701

return:                                           ; preds = %if.end, %if.then
  %2 = load %struct.mode_change*, %struct.mode_change** %retval, align 8, !dbg !13702
  ret %struct.mode_change* %2, !dbg !13702
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @mode_adjust(i32 %oldmode, i1 zeroext %dir, i32 %umask_value, %struct.mode_change* %changes, i32* %pmode_bits) #4 !dbg !13703 !ctir !1760 {
entry:
  %oldmode.addr = alloca i32, align 4
  %dir.addr = alloca i8, align 1
  %umask_value.addr = alloca i32, align 4
  %changes.addr = alloca %struct.mode_change*, align 8
  %pmode_bits.addr = alloca i32*, align 8
  %newmode = alloca i32, align 4, !ctir !139
  %mode_bits = alloca i32, align 4, !ctir !139
  %affected = alloca i32, align 4, !ctir !139
  %omit_change = alloca i32, align 4, !ctir !139
  %value = alloca i32, align 4, !ctir !139
  %preserved = alloca i32, align 4, !ctir !139
  store i32 %oldmode, i32* %oldmode.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %oldmode.addr, metadata !13704, metadata !DIExpression()), !dbg !13705
  %frombool = zext i1 %dir to i8
  store i8 %frombool, i8* %dir.addr, align 1, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %dir.addr, metadata !13706, metadata !DIExpression()), !dbg !13707
  store i32 %umask_value, i32* %umask_value.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %umask_value.addr, metadata !13708, metadata !DIExpression()), !dbg !13709
  store %struct.mode_change* %changes, %struct.mode_change** %changes.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.mode_change** %changes.addr, metadata !13710, metadata !DIExpression()), !dbg !13711
  store i32* %pmode_bits, i32** %pmode_bits.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i32** %pmode_bits.addr, metadata !13712, metadata !DIExpression()), !dbg !13713
  call void @llvm.dbg.declare(metadata i32* %newmode, metadata !13714, metadata !DIExpression()), !dbg !13715
  %0 = load i32, i32* %oldmode.addr, align 4, !dbg !13716, !tbaa !2632
  %and = and i32 %0, 4095, !dbg !13717
  store i32 %and, i32* %newmode, align 4, !dbg !13715, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %mode_bits, metadata !13718, metadata !DIExpression()), !dbg !13719
  store i32 0, i32* %mode_bits, align 4, !dbg !13719, !tbaa !2632
  br label %for.cond, !dbg !13720

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.mode_change*, %struct.mode_change** %changes.addr, align 8, !dbg !13721, !tbaa !2645
  %flag = getelementptr inbounds %struct.mode_change, %struct.mode_change* %1, i32 0, i32 1, !dbg !13724, !ctir !1763
  %2 = load i8, i8* %flag, align 1, !dbg !13724, !tbaa !13565, !ctir !10
  %conv = sext i8 %2 to i32, !dbg !13721
  %cmp = icmp ne i32 %conv, 0, !dbg !13725
  br i1 %cmp, label %for.body, label %for.end, !dbg !13726

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %affected, metadata !13727, metadata !DIExpression()), !dbg !13729
  %3 = load %struct.mode_change*, %struct.mode_change** %changes.addr, align 8, !dbg !13730, !tbaa !2645
  %affected2 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %3, i32 0, i32 2, !dbg !13731, !ctir !1763
  %4 = load i32, i32* %affected2, align 4, !dbg !13731, !tbaa !13570, !ctir !139
  store i32 %4, i32* %affected, align 4, !dbg !13729, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %omit_change, metadata !13732, metadata !DIExpression()), !dbg !13733
  %5 = load i8, i8* %dir.addr, align 1, !dbg !13734, !tbaa !2739
  %tobool = trunc i8 %5 to i1, !dbg !13734
  %6 = zext i1 %tobool to i64, !dbg !13734
  %cond = select i1 %tobool, i32 3072, i32 0, !dbg !13734
  %7 = load %struct.mode_change*, %struct.mode_change** %changes.addr, align 8, !dbg !13735, !tbaa !2645
  %mentioned = getelementptr inbounds %struct.mode_change, %struct.mode_change* %7, i32 0, i32 4, !dbg !13736, !ctir !1763
  %8 = load i32, i32* %mentioned, align 4, !dbg !13736, !tbaa !13586, !ctir !139
  %neg = xor i32 %8, -1, !dbg !13737
  %and4 = and i32 %cond, %neg, !dbg !13738
  store i32 %and4, i32* %omit_change, align 4, !dbg !13733, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %value, metadata !13739, metadata !DIExpression()), !dbg !13740
  %9 = load %struct.mode_change*, %struct.mode_change** %changes.addr, align 8, !dbg !13741, !tbaa !2645
  %value5 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %9, i32 0, i32 3, !dbg !13742, !ctir !1763
  %10 = load i32, i32* %value5, align 4, !dbg !13742, !tbaa !13575, !ctir !139
  store i32 %10, i32* %value, align 4, !dbg !13740, !tbaa !2632
  %11 = load %struct.mode_change*, %struct.mode_change** %changes.addr, align 8, !dbg !13743, !tbaa !2645
  %flag6 = getelementptr inbounds %struct.mode_change, %struct.mode_change* %11, i32 0, i32 1, !dbg !13744, !ctir !1763
  %12 = load i8, i8* %flag6, align 1, !dbg !13744, !tbaa !13565, !ctir !10
  %conv7 = sext i8 %12 to i32, !dbg !13743
  switch i32 %conv7, label %sw.epilog [
    i32 1, label %sw.bb
    i32 3, label %sw.bb8
    i32 2, label %sw.bb21
  ], !dbg !13745

sw.bb:                                            ; preds = %for.body
  br label %sw.epilog, !dbg !13746

sw.bb8:                                           ; preds = %for.body
  %13 = load i32, i32* %newmode, align 4, !dbg !13748, !tbaa !2632
  %14 = load i32, i32* %value, align 4, !dbg !13749, !tbaa !2632
  %and9 = and i32 %14, %13, !dbg !13749
  store i32 %and9, i32* %value, align 4, !dbg !13749, !tbaa !2632
  %15 = load i32, i32* %value, align 4, !dbg !13750, !tbaa !2632
  %and10 = and i32 %15, 292, !dbg !13751
  %tobool11 = icmp ne i32 %and10, 0, !dbg !13750
  %16 = zext i1 %tobool11 to i64, !dbg !13750
  %cond12 = select i1 %tobool11, i32 292, i32 0, !dbg !13750
  %17 = load i32, i32* %value, align 4, !dbg !13752, !tbaa !2632
  %and13 = and i32 %17, 146, !dbg !13753
  %tobool14 = icmp ne i32 %and13, 0, !dbg !13752
  %18 = zext i1 %tobool14 to i64, !dbg !13752
  %cond15 = select i1 %tobool14, i32 146, i32 0, !dbg !13752
  %or = or i32 %cond12, %cond15, !dbg !13754
  %19 = load i32, i32* %value, align 4, !dbg !13755, !tbaa !2632
  %and16 = and i32 %19, 73, !dbg !13756
  %tobool17 = icmp ne i32 %and16, 0, !dbg !13755
  %20 = zext i1 %tobool17 to i64, !dbg !13755
  %cond18 = select i1 %tobool17, i32 73, i32 0, !dbg !13755
  %or19 = or i32 %or, %cond18, !dbg !13757
  %21 = load i32, i32* %value, align 4, !dbg !13758, !tbaa !2632
  %or20 = or i32 %21, %or19, !dbg !13758
  store i32 %or20, i32* %value, align 4, !dbg !13758, !tbaa !2632
  br label %sw.epilog, !dbg !13759

sw.bb21:                                          ; preds = %for.body
  %22 = load i32, i32* %newmode, align 4, !dbg !13760, !tbaa !2632
  %and22 = and i32 %22, 73, !dbg !13762
  %23 = load i8, i8* %dir.addr, align 1, !dbg !13763, !tbaa !2739
  %tobool23 = trunc i8 %23 to i1, !dbg !13763
  %conv24 = zext i1 %tobool23 to i32, !dbg !13763
  %or25 = or i32 %and22, %conv24, !dbg !13764
  %tobool26 = icmp ne i32 %or25, 0, !dbg !13764
  br i1 %tobool26, label %if.then, label %if.end, !dbg !13765

if.then:                                          ; preds = %sw.bb21
  %24 = load i32, i32* %value, align 4, !dbg !13766, !tbaa !2632
  %or27 = or i32 %24, 73, !dbg !13766
  store i32 %or27, i32* %value, align 4, !dbg !13766, !tbaa !2632
  br label %if.end, !dbg !13767

if.end:                                           ; preds = %if.then, %sw.bb21
  br label %sw.epilog, !dbg !13768

sw.epilog:                                        ; preds = %for.body, %if.end, %sw.bb8, %sw.bb
  %25 = load i32, i32* %affected, align 4, !dbg !13769, !tbaa !2632
  %tobool28 = icmp ne i32 %25, 0, !dbg !13769
  br i1 %tobool28, label %cond.true, label %cond.false, !dbg !13769

cond.true:                                        ; preds = %sw.epilog
  %26 = load i32, i32* %affected, align 4, !dbg !13770, !tbaa !2632
  br label %cond.end, !dbg !13769

cond.false:                                       ; preds = %sw.epilog
  %27 = load i32, i32* %umask_value.addr, align 4, !dbg !13771, !tbaa !2632
  %neg29 = xor i32 %27, -1, !dbg !13772
  br label %cond.end, !dbg !13769

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond30 = phi i32 [ %26, %cond.true ], [ %neg29, %cond.false ], !dbg !13769
  %28 = load i32, i32* %omit_change, align 4, !dbg !13773, !tbaa !2632
  %neg31 = xor i32 %28, -1, !dbg !13774
  %and32 = and i32 %cond30, %neg31, !dbg !13775
  %29 = load i32, i32* %value, align 4, !dbg !13776, !tbaa !2632
  %and33 = and i32 %29, %and32, !dbg !13776
  store i32 %and33, i32* %value, align 4, !dbg !13776, !tbaa !2632
  %30 = load %struct.mode_change*, %struct.mode_change** %changes.addr, align 8, !dbg !13777, !tbaa !2645
  %op = getelementptr inbounds %struct.mode_change, %struct.mode_change* %30, i32 0, i32 0, !dbg !13778, !ctir !1763
  %31 = load i8, i8* %op, align 4, !dbg !13778, !tbaa !13559, !ctir !10
  %conv34 = sext i8 %31 to i32, !dbg !13777
  switch i32 %conv34, label %sw.epilog55 [
    i32 61, label %sw.bb35
    i32 43, label %sw.bb48
    i32 45, label %sw.bb51
  ], !dbg !13779

sw.bb35:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i32* %preserved, metadata !13780, metadata !DIExpression()), !dbg !13783
  %32 = load i32, i32* %affected, align 4, !dbg !13784, !tbaa !2632
  %tobool36 = icmp ne i32 %32, 0, !dbg !13784
  br i1 %tobool36, label %cond.true37, label %cond.false39, !dbg !13784

cond.true37:                                      ; preds = %sw.bb35
  %33 = load i32, i32* %affected, align 4, !dbg !13785, !tbaa !2632
  %neg38 = xor i32 %33, -1, !dbg !13786
  br label %cond.end40, !dbg !13784

cond.false39:                                     ; preds = %sw.bb35
  br label %cond.end40, !dbg !13784

cond.end40:                                       ; preds = %cond.false39, %cond.true37
  %cond41 = phi i32 [ %neg38, %cond.true37 ], [ 0, %cond.false39 ], !dbg !13784
  %34 = load i32, i32* %omit_change, align 4, !dbg !13787, !tbaa !2632
  %or42 = or i32 %cond41, %34, !dbg !13788
  store i32 %or42, i32* %preserved, align 4, !dbg !13783, !tbaa !2632
  %35 = load i32, i32* %preserved, align 4, !dbg !13789, !tbaa !2632
  %neg43 = xor i32 %35, -1, !dbg !13790
  %and44 = and i32 4095, %neg43, !dbg !13791
  %36 = load i32, i32* %mode_bits, align 4, !dbg !13792, !tbaa !2632
  %or45 = or i32 %36, %and44, !dbg !13792
  store i32 %or45, i32* %mode_bits, align 4, !dbg !13792, !tbaa !2632
  %37 = load i32, i32* %newmode, align 4, !dbg !13793, !tbaa !2632
  %38 = load i32, i32* %preserved, align 4, !dbg !13794, !tbaa !2632
  %and46 = and i32 %37, %38, !dbg !13795
  %39 = load i32, i32* %value, align 4, !dbg !13796, !tbaa !2632
  %or47 = or i32 %and46, %39, !dbg !13797
  store i32 %or47, i32* %newmode, align 4, !dbg !13798, !tbaa !2632
  br label %sw.epilog55, !dbg !13799

sw.bb48:                                          ; preds = %cond.end
  %40 = load i32, i32* %value, align 4, !dbg !13800, !tbaa !2632
  %41 = load i32, i32* %mode_bits, align 4, !dbg !13801, !tbaa !2632
  %or49 = or i32 %41, %40, !dbg !13801
  store i32 %or49, i32* %mode_bits, align 4, !dbg !13801, !tbaa !2632
  %42 = load i32, i32* %value, align 4, !dbg !13802, !tbaa !2632
  %43 = load i32, i32* %newmode, align 4, !dbg !13803, !tbaa !2632
  %or50 = or i32 %43, %42, !dbg !13803
  store i32 %or50, i32* %newmode, align 4, !dbg !13803, !tbaa !2632
  br label %sw.epilog55, !dbg !13804

sw.bb51:                                          ; preds = %cond.end
  %44 = load i32, i32* %value, align 4, !dbg !13805, !tbaa !2632
  %45 = load i32, i32* %mode_bits, align 4, !dbg !13806, !tbaa !2632
  %or52 = or i32 %45, %44, !dbg !13806
  store i32 %or52, i32* %mode_bits, align 4, !dbg !13806, !tbaa !2632
  %46 = load i32, i32* %value, align 4, !dbg !13807, !tbaa !2632
  %neg53 = xor i32 %46, -1, !dbg !13808
  %47 = load i32, i32* %newmode, align 4, !dbg !13809, !tbaa !2632
  %and54 = and i32 %47, %neg53, !dbg !13809
  store i32 %and54, i32* %newmode, align 4, !dbg !13809, !tbaa !2632
  br label %sw.epilog55, !dbg !13810

sw.epilog55:                                      ; preds = %cond.end, %sw.bb51, %sw.bb48, %cond.end40
  br label %for.inc, !dbg !13811

for.inc:                                          ; preds = %sw.epilog55
  %48 = load %struct.mode_change*, %struct.mode_change** %changes.addr, align 8, !dbg !13812, !tbaa !2645
  %incdec.ptr = getelementptr inbounds %struct.mode_change, %struct.mode_change* %48, i32 1, !dbg !13812
  store %struct.mode_change* %incdec.ptr, %struct.mode_change** %changes.addr, align 8, !dbg !13812, !tbaa !2645
  br label %for.cond, !dbg !13813, !llvm.loop !13814

for.end:                                          ; preds = %for.cond
  %49 = load i32*, i32** %pmode_bits.addr, align 8, !dbg !13816, !tbaa !2645
  %tobool56 = icmp ne i32* %49, null, !dbg !13816
  br i1 %tobool56, label %if.then57, label %if.end58, !dbg !13818

if.then57:                                        ; preds = %for.end
  %50 = load i32, i32* %mode_bits, align 4, !dbg !13819, !tbaa !2632
  %51 = load i32*, i32** %pmode_bits.addr, align 8, !dbg !13820, !tbaa !2645
  store i32 %50, i32* %51, align 4, !dbg !13821, !tbaa !2632, !ctir !139
  br label %if.end58, !dbg !13822

if.end58:                                         ; preds = %if.then57, %for.end
  %52 = load i32, i32* %newmode, align 4, !dbg !13823, !tbaa !2632
  ret i32 %52, !dbg !13824
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.__dirstream* @opendirat(i32 %dir_fd, i8* %dir, i32 %extra_flags, i32* %pnew_fd) #4 !dbg !13825 !ctir !1772 {
entry:
  %retval = alloca %struct.__dirstream*, align 8
  %dir_fd.addr = alloca i32, align 4
  %dir.addr = alloca i8*, align 8
  %extra_flags.addr = alloca i32, align 4
  %pnew_fd.addr = alloca i32*, align 8
  %open_flags = alloca i32, align 4, !ctir !7
  %new_fd = alloca i32, align 4, !ctir !7
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !693
  %fdopendir_errno = alloca i32, align 4, !ctir !7
  store i32 %dir_fd, i32* %dir_fd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %dir_fd.addr, metadata !13827, metadata !DIExpression()), !dbg !13828
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !13829, metadata !DIExpression()), !dbg !13830
  store i32 %extra_flags, i32* %extra_flags.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %extra_flags.addr, metadata !13831, metadata !DIExpression()), !dbg !13832
  store i32* %pnew_fd, i32** %pnew_fd.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i32** %pnew_fd.addr, metadata !13833, metadata !DIExpression()), !dbg !13834
  call void @llvm.dbg.declare(metadata i32* %open_flags, metadata !13835, metadata !DIExpression()), !dbg !13836
  %0 = load i32, i32* %extra_flags.addr, align 4, !dbg !13837, !tbaa !2632
  %or = or i32 592128, %0, !dbg !13838
  store i32 %or, i32* %open_flags, align 4, !dbg !13836, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %new_fd, metadata !13839, metadata !DIExpression()), !dbg !13840
  %1 = load i32, i32* %dir_fd.addr, align 4, !dbg !13841, !tbaa !2632
  %2 = load i8*, i8** %dir.addr, align 8, !dbg !13842, !tbaa !2645
  %3 = load i32, i32* %open_flags, align 4, !dbg !13843, !tbaa !2632
  %call = call i32 (i32, i8*, i32, ...) @openat_safer(i32 %1, i8* %2, i32 %3), !dbg !13844
  store i32 %call, i32* %new_fd, align 4, !dbg !13840, !tbaa !2632
  %4 = load i32, i32* %new_fd, align 4, !dbg !13845, !tbaa !2632
  %cmp = icmp slt i32 %4, 0, !dbg !13847
  br i1 %cmp, label %if.then, label %if.end, !dbg !13848

if.then:                                          ; preds = %entry
  store %struct.__dirstream* null, %struct.__dirstream** %retval, align 8, !dbg !13849
  br label %return, !dbg !13849

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !13850, metadata !DIExpression()), !dbg !13851
  %5 = load i32, i32* %new_fd, align 4, !dbg !13852, !tbaa !2632
  %call1 = call %struct.__dirstream* @fdopendir(i32 %5), !dbg !13853
  store %struct.__dirstream* %call1, %struct.__dirstream** %dirp, align 8, !dbg !13851, !tbaa !2645
  %6 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !13854, !tbaa !2645
  %tobool = icmp ne %struct.__dirstream* %6, null, !dbg !13854
  br i1 %tobool, label %if.then2, label %if.else, !dbg !13856

if.then2:                                         ; preds = %if.end
  %7 = load i32, i32* %new_fd, align 4, !dbg !13857, !tbaa !2632
  %8 = load i32*, i32** %pnew_fd.addr, align 8, !dbg !13858, !tbaa !2645
  store i32 %7, i32* %8, align 4, !dbg !13859, !tbaa !2632, !ctir !7
  br label %if.end6, !dbg !13860

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %fdopendir_errno, metadata !13861, metadata !DIExpression()), !dbg !13863
  %call3 = call i32* @__errno_location() #16, !dbg !13864
  %9 = load i32, i32* %call3, align 4, !dbg !13864, !tbaa !2632, !ctir !7
  store i32 %9, i32* %fdopendir_errno, align 4, !dbg !13863, !tbaa !2632
  %10 = load i32, i32* %new_fd, align 4, !dbg !13865, !tbaa !2632
  %call4 = call i32 @close(i32 %10), !dbg !13866
  %11 = load i32, i32* %fdopendir_errno, align 4, !dbg !13867, !tbaa !2632
  %call5 = call i32* @__errno_location() #16, !dbg !13868
  store i32 %11, i32* %call5, align 4, !dbg !13869, !tbaa !2632, !ctir !7
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then2
  %12 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !13870, !tbaa !2645
  store %struct.__dirstream* %12, %struct.__dirstream** %retval, align 8, !dbg !13871
  br label %return, !dbg !13871

return:                                           ; preds = %if.end6, %if.then
  %13 = load %struct.__dirstream*, %struct.__dirstream** %retval, align 8, !dbg !13872
  ret %struct.__dirstream* %13, !dbg !13872
}

declare dso_local %struct.__dirstream* @fdopendir(i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_program_name(i8* %argv0) #4 !dbg !13873 !ctir !202 {
entry:
  %argv0.addr = alloca i8*, align 8
  %slash = alloca i8*, align 8, !ctir !180
  %base = alloca i8*, align 8, !ctir !180
  store i8* %argv0, i8** %argv0.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %argv0.addr, metadata !13874, metadata !DIExpression()), !dbg !13875
  call void @llvm.dbg.declare(metadata i8** %slash, metadata !13876, metadata !DIExpression()), !dbg !13877
  call void @llvm.dbg.declare(metadata i8** %base, metadata !13878, metadata !DIExpression()), !dbg !13879
  %0 = load i8*, i8** %argv0.addr, align 8, !dbg !13880, !tbaa !2645
  %cmp = icmp eq i8* %0, null, !dbg !13882
  br i1 %cmp, label %if.then, label %if.end, !dbg !13883

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !13884, !tbaa !2645
  %call = call i32 @fputs(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.311, i64 0, i64 0), %struct._IO_FILE* %1), !dbg !13886
  call void @abort() #13, !dbg !13887
  unreachable, !dbg !13887

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %argv0.addr, align 8, !dbg !13888, !tbaa !2645
  %call1 = call i8* @strrchr(i8* %2, i32 47) #14, !dbg !13889
  store i8* %call1, i8** %slash, align 8, !dbg !13890, !tbaa !2645
  %3 = load i8*, i8** %slash, align 8, !dbg !13891, !tbaa !2645
  %cmp2 = icmp ne i8* %3, null, !dbg !13892
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !13891

cond.true:                                        ; preds = %if.end
  %4 = load i8*, i8** %slash, align 8, !dbg !13893, !tbaa !2645
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 1, !dbg !13894
  br label %cond.end, !dbg !13891

cond.false:                                       ; preds = %if.end
  %5 = load i8*, i8** %argv0.addr, align 8, !dbg !13895, !tbaa !2645
  br label %cond.end, !dbg !13891

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %add.ptr, %cond.true ], [ %5, %cond.false ], !dbg !13891
  store i8* %cond, i8** %base, align 8, !dbg !13896, !tbaa !2645
  %6 = load i8*, i8** %base, align 8, !dbg !13897, !tbaa !2645
  %7 = load i8*, i8** %argv0.addr, align 8, !dbg !13899, !tbaa !2645
  %sub.ptr.lhs.cast = ptrtoint i8* %6 to i64, !dbg !13900
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !13900
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !13900
  %cmp3 = icmp sge i64 %sub.ptr.sub, 7, !dbg !13901
  br i1 %cmp3, label %land.lhs.true, label %if.end13, !dbg !13902

land.lhs.true:                                    ; preds = %cond.end
  %8 = load i8*, i8** %base, align 8, !dbg !13903, !tbaa !2645
  %add.ptr4 = getelementptr inbounds i8, i8* %8, i64 -7, !dbg !13904
  %call5 = call i32 @strncmp(i8* %add.ptr4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1.312, i64 0, i64 0), i64 7) #14, !dbg !13905
  %cmp6 = icmp eq i32 %call5, 0, !dbg !13906
  br i1 %cmp6, label %if.then7, label %if.end13, !dbg !13907

if.then7:                                         ; preds = %land.lhs.true
  %9 = load i8*, i8** %base, align 8, !dbg !13908, !tbaa !2645
  store i8* %9, i8** %argv0.addr, align 8, !dbg !13910, !tbaa !2645
  %10 = load i8*, i8** %base, align 8, !dbg !13911, !tbaa !2645
  %call8 = call i32 @strncmp(i8* %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.313, i64 0, i64 0), i64 3) #14, !dbg !13913
  %cmp9 = icmp eq i32 %call8, 0, !dbg !13914
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !13915

if.then10:                                        ; preds = %if.then7
  %11 = load i8*, i8** %base, align 8, !dbg !13916, !tbaa !2645
  %add.ptr11 = getelementptr inbounds i8, i8* %11, i64 3, !dbg !13918
  store i8* %add.ptr11, i8** %argv0.addr, align 8, !dbg !13919, !tbaa !2645
  %12 = load i8*, i8** %argv0.addr, align 8, !dbg !13920, !tbaa !2645
  store i8* %12, i8** @program_invocation_short_name, align 8, !dbg !13921, !tbaa !2645
  br label %if.end12, !dbg !13922

if.end12:                                         ; preds = %if.then10, %if.then7
  br label %if.end13, !dbg !13923

if.end13:                                         ; preds = %if.end12, %land.lhs.true, %cond.end
  %13 = load i8*, i8** %argv0.addr, align 8, !dbg !13924, !tbaa !2645
  store i8* %13, i8** @program_name, align 8, !dbg !13925, !tbaa !2645
  %14 = load i8*, i8** %argv0.addr, align 8, !dbg !13926, !tbaa !2645
  store i8* %14, i8** @program_invocation_name, align 8, !dbg !13927, !tbaa !2645
  ret void, !dbg !13928
}

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) #3

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @qcopy_acl(i8* %src_name, i32 %source_desc, i8* %dst_name, i32 %dest_desc, i32 %mode) #4 !dbg !13929 !ctir !1514 {
entry:
  %retval = alloca i32, align 4
  %src_name.addr = alloca i8*, align 8
  %source_desc.addr = alloca i32, align 4
  %dst_name.addr = alloca i8*, align 8
  %dest_desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ctx = alloca %struct.permission_context, align 8, !ctir !13931
  %ret = alloca i32, align 4, !ctir !7
  store i8* %src_name, i8** %src_name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %src_name.addr, metadata !13937, metadata !DIExpression()), !dbg !13938
  store i32 %source_desc, i32* %source_desc.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %source_desc.addr, metadata !13939, metadata !DIExpression()), !dbg !13940
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !13941, metadata !DIExpression()), !dbg !13942
  store i32 %dest_desc, i32* %dest_desc.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %dest_desc.addr, metadata !13943, metadata !DIExpression()), !dbg !13944
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !13945, metadata !DIExpression()), !dbg !13946
  call void @llvm.dbg.declare(metadata %struct.permission_context* %ctx, metadata !13947, metadata !DIExpression()), !dbg !13948
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13949, metadata !DIExpression()), !dbg !13950
  %0 = load i8*, i8** %src_name.addr, align 8, !dbg !13951, !tbaa !2645
  %1 = load i32, i32* %source_desc.addr, align 4, !dbg !13952, !tbaa !2632
  %2 = load i32, i32* %mode.addr, align 4, !dbg !13953, !tbaa !2632
  %call = call i32 @get_permissions(i8* %0, i32 %1, i32 %2, %struct.permission_context* %ctx), !dbg !13954
  store i32 %call, i32* %ret, align 4, !dbg !13955, !tbaa !2632
  %3 = load i32, i32* %ret, align 4, !dbg !13956, !tbaa !2632
  %cmp = icmp ne i32 %3, 0, !dbg !13958
  br i1 %cmp, label %if.then, label %if.end, !dbg !13959

if.then:                                          ; preds = %entry
  store i32 -2, i32* %retval, align 4, !dbg !13960
  br label %return, !dbg !13960

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %dst_name.addr, align 8, !dbg !13961, !tbaa !2645
  %5 = load i32, i32* %dest_desc.addr, align 4, !dbg !13962, !tbaa !2632
  %call1 = call i32 @set_permissions(%struct.permission_context* %ctx, i8* %4, i32 %5), !dbg !13963
  store i32 %call1, i32* %ret, align 4, !dbg !13964, !tbaa !2632
  call void @free_permission_context(%struct.permission_context* %ctx), !dbg !13965
  %6 = load i32, i32* %ret, align 4, !dbg !13966, !tbaa !2632
  store i32 %6, i32* %retval, align 4, !dbg !13967
  br label %return, !dbg !13967

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !13968
  ret i32 %7, !dbg !13968
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @qset_acl(i8* %name, i32 %desc, i32 %mode) #4 !dbg !13969 !ctir !1519 {
entry:
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ctx = alloca %struct.permission_context, align 8, !ctir !13971
  %ret = alloca i32, align 4, !ctir !7
  store i8* %name, i8** %name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !13977, metadata !DIExpression()), !dbg !13978
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !13979, metadata !DIExpression()), !dbg !13980
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !13981, metadata !DIExpression()), !dbg !13982
  call void @llvm.dbg.declare(metadata %struct.permission_context* %ctx, metadata !13983, metadata !DIExpression()), !dbg !13984
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13985, metadata !DIExpression()), !dbg !13986
  %0 = bitcast %struct.permission_context* %ctx to i8*, !dbg !13987
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 32, i1 false), !dbg !13987
  %1 = load i32, i32* %mode.addr, align 4, !dbg !13988, !tbaa !2632
  %mode1 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %ctx, i32 0, i32 0, !dbg !13989, !ctir !13971
  store i32 %1, i32* %mode1, align 8, !dbg !13990, !tbaa !13991, !ctir !139
  %2 = load i8*, i8** %name.addr, align 8, !dbg !13993, !tbaa !2645
  %3 = load i32, i32* %desc.addr, align 4, !dbg !13994, !tbaa !2632
  %call = call i32 @set_permissions(%struct.permission_context* %ctx, i8* %2, i32 %3), !dbg !13995
  store i32 %call, i32* %ret, align 4, !dbg !13996, !tbaa !2632
  call void @free_permission_context(%struct.permission_context* %ctx), !dbg !13997
  %4 = load i32, i32* %ret, align 4, !dbg !13998, !tbaa !2632
  ret i32 %4, !dbg !13999
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.quoting_options* @clone_quoting_options(%struct.quoting_options* %o) #4 !dbg !14000 !ctir !1034 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %e = alloca i32, align 4, !ctir !7
  %p = alloca %struct.quoting_options*, align 8, !ctir !1036
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14001, metadata !DIExpression()), !dbg !14002
  call void @llvm.dbg.declare(metadata i32* %e, metadata !14003, metadata !DIExpression()), !dbg !14004
  %call = call i32* @__errno_location() #16, !dbg !14005
  %0 = load i32, i32* %call, align 4, !dbg !14005, !tbaa !2632, !ctir !7
  store i32 %0, i32* %e, align 4, !dbg !14004, !tbaa !2632
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !14006, metadata !DIExpression()), !dbg !14007
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14008, !tbaa !2645
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !14008
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14008

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14009, !tbaa !2645
  br label %cond.end, !dbg !14008

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14008

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !14008
  %3 = bitcast %struct.quoting_options* %cond to i8*, !dbg !14008
  %call1 = call i8* @xmemdup(i8* %3, i64 56), !dbg !14010
  %4 = bitcast i8* %call1 to %struct.quoting_options*, !dbg !14010
  store %struct.quoting_options* %4, %struct.quoting_options** %p, align 8, !dbg !14007, !tbaa !2645
  %5 = load i32, i32* %e, align 4, !dbg !14011, !tbaa !2632
  %call2 = call i32* @__errno_location() #16, !dbg !14012
  store i32 %5, i32* %call2, align 4, !dbg !14013, !tbaa !2632, !ctir !7
  %6 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14014, !tbaa !2645
  ret %struct.quoting_options* %6, !dbg !14015
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_quoting_style(%struct.quoting_options* %o) #4 !dbg !14016 !ctir !1046 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14017, metadata !DIExpression()), !dbg !14018
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14019, !tbaa !2645
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !14019
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14019

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14020, !tbaa !2645
  br label %cond.end, !dbg !14019

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14019

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !14019
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 0, !dbg !14021, !ctir !1049
  %2 = load i32, i32* %style, align 8, !dbg !14021, !tbaa !14022, !ctir !1012
  ret i32 %2, !dbg !14024
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_quoting_style(%struct.quoting_options* %o, i32 %s) #4 !dbg !14025 !ctir !1050 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %s.addr = alloca i32, align 4
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14026, metadata !DIExpression()), !dbg !14027
  store i32 %s, i32* %s.addr, align 4, !tbaa !3292
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !14028, metadata !DIExpression()), !dbg !14029
  %0 = load i32, i32* %s.addr, align 4, !dbg !14030, !tbaa !3292
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14031, !tbaa !2645
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !14031
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14031

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14032, !tbaa !2645
  br label %cond.end, !dbg !14031

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14031

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !14031
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 0, !dbg !14033, !ctir !1037
  store i32 %0, i32* %style, align 8, !dbg !14034, !tbaa !14022, !ctir !1012
  ret void, !dbg !14035
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_char_quoting(%struct.quoting_options* %o, i8 signext %c, i32 %i) #4 !dbg !14036 !ctir !1052 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %c.addr = alloca i8, align 1
  %i.addr = alloca i32, align 4
  %uc = alloca i8, align 1, !ctir !554
  %p = alloca i32*, align 8, !ctir !1054
  %shift = alloca i32, align 4, !ctir !7
  %r = alloca i32, align 4, !ctir !7
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14037, metadata !DIExpression()), !dbg !14038
  store i8 %c, i8* %c.addr, align 1, !tbaa !3292
  call void @llvm.dbg.declare(metadata i8* %c.addr, metadata !14039, metadata !DIExpression()), !dbg !14040
  store i32 %i, i32* %i.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !14041, metadata !DIExpression()), !dbg !14042
  call void @llvm.dbg.declare(metadata i8* %uc, metadata !14043, metadata !DIExpression()), !dbg !14044
  %0 = load i8, i8* %c.addr, align 1, !dbg !14045, !tbaa !3292
  store i8 %0, i8* %uc, align 1, !dbg !14044, !tbaa !3292
  call void @llvm.dbg.declare(metadata i32** %p, metadata !14046, metadata !DIExpression()), !dbg !14047
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14048, !tbaa !2645
  %tobool = icmp ne %struct.quoting_options* %1, null, !dbg !14048
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14048

cond.true:                                        ; preds = %entry
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14049, !tbaa !2645
  br label %cond.end, !dbg !14048

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14048

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %2, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !14048
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %cond, i32 0, i32 2, !dbg !14050, !ctir !1037
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !14051
  %3 = load i8, i8* %uc, align 1, !dbg !14052, !tbaa !3292
  %conv = zext i8 %3 to i64, !dbg !14052
  %div = udiv i64 %conv, 32, !dbg !14053
  %add.ptr = getelementptr inbounds i32, i32* %arraydecay, i64 %div, !dbg !14054
  store i32* %add.ptr, i32** %p, align 8, !dbg !14047, !tbaa !2645
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !14055, metadata !DIExpression()), !dbg !14056
  %4 = load i8, i8* %uc, align 1, !dbg !14057, !tbaa !3292
  %conv1 = zext i8 %4 to i64, !dbg !14057
  %rem = urem i64 %conv1, 32, !dbg !14058
  %conv2 = trunc i64 %rem to i32, !dbg !14057
  store i32 %conv2, i32* %shift, align 4, !dbg !14056, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %r, metadata !14059, metadata !DIExpression()), !dbg !14060
  %5 = load i32*, i32** %p, align 8, !dbg !14061, !tbaa !2645
  %6 = load i32, i32* %5, align 4, !dbg !14062, !tbaa !2632, !ctir !70
  %7 = load i32, i32* %shift, align 4, !dbg !14063, !tbaa !2632
  %shr = lshr i32 %6, %7, !dbg !14064
  %and = and i32 %shr, 1, !dbg !14065
  store i32 %and, i32* %r, align 4, !dbg !14060, !tbaa !2632
  %8 = load i32, i32* %i.addr, align 4, !dbg !14066, !tbaa !2632
  %and3 = and i32 %8, 1, !dbg !14067
  %9 = load i32, i32* %r, align 4, !dbg !14068, !tbaa !2632
  %xor = xor i32 %and3, %9, !dbg !14069
  %10 = load i32, i32* %shift, align 4, !dbg !14070, !tbaa !2632
  %shl = shl i32 %xor, %10, !dbg !14071
  %11 = load i32*, i32** %p, align 8, !dbg !14072, !tbaa !2645
  %12 = load i32, i32* %11, align 4, !dbg !14073, !tbaa !2632, !ctir !70
  %xor4 = xor i32 %12, %shl, !dbg !14073
  store i32 %xor4, i32* %11, align 4, !dbg !14073, !tbaa !2632, !ctir !70
  %13 = load i32, i32* %r, align 4, !dbg !14074, !tbaa !2632
  ret i32 %13, !dbg !14075
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_quoting_flags(%struct.quoting_options* %o, i32 %i) #4 !dbg !14076 !ctir !1055 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %i.addr = alloca i32, align 4
  %r = alloca i32, align 4, !ctir !7
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14077, metadata !DIExpression()), !dbg !14078
  store i32 %i, i32* %i.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !14079, metadata !DIExpression()), !dbg !14080
  call void @llvm.dbg.declare(metadata i32* %r, metadata !14081, metadata !DIExpression()), !dbg !14082
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14083, !tbaa !2645
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !14083
  br i1 %tobool, label %if.end, label %if.then, !dbg !14085

if.then:                                          ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o.addr, align 8, !dbg !14086, !tbaa !2645
  br label %if.end, !dbg !14087

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14088, !tbaa !2645
  %flags = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %1, i32 0, i32 1, !dbg !14089, !ctir !1037
  %2 = load i32, i32* %flags, align 4, !dbg !14089, !tbaa !14090, !ctir !7
  store i32 %2, i32* %r, align 4, !dbg !14091, !tbaa !2632
  %3 = load i32, i32* %i.addr, align 4, !dbg !14092, !tbaa !2632
  %4 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14093, !tbaa !2645
  %flags1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %4, i32 0, i32 1, !dbg !14094, !ctir !1037
  store i32 %3, i32* %flags1, align 4, !dbg !14095, !tbaa !14090, !ctir !7
  %5 = load i32, i32* %r, align 4, !dbg !14096, !tbaa !2632
  ret i32 %5, !dbg !14097
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @set_custom_quoting(%struct.quoting_options* %o, i8* %left_quote, i8* %right_quote) #4 !dbg !14098 !ctir !1057 {
entry:
  %o.addr = alloca %struct.quoting_options*, align 8
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14099, metadata !DIExpression()), !dbg !14100
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !14101, metadata !DIExpression()), !dbg !14102
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !14103, metadata !DIExpression()), !dbg !14104
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14105, !tbaa !2645
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !14105
  br i1 %tobool, label %if.end, label %if.then, !dbg !14107

if.then:                                          ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o.addr, align 8, !dbg !14108, !tbaa !2645
  br label %if.end, !dbg !14109

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14110, !tbaa !2645
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %1, i32 0, i32 0, !dbg !14111, !ctir !1037
  store i32 10, i32* %style, align 8, !dbg !14112, !tbaa !14022, !ctir !1012
  %2 = load i8*, i8** %left_quote.addr, align 8, !dbg !14113, !tbaa !2645
  %tobool1 = icmp ne i8* %2, null, !dbg !14113
  br i1 %tobool1, label %lor.lhs.false, label %if.then3, !dbg !14115

lor.lhs.false:                                    ; preds = %if.end
  %3 = load i8*, i8** %right_quote.addr, align 8, !dbg !14116, !tbaa !2645
  %tobool2 = icmp ne i8* %3, null, !dbg !14116
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !14117

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  call void @abort() #13, !dbg !14118
  unreachable, !dbg !14118

if.end4:                                          ; preds = %lor.lhs.false
  %4 = load i8*, i8** %left_quote.addr, align 8, !dbg !14119, !tbaa !2645
  %5 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14120, !tbaa !2645
  %left_quote5 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %5, i32 0, i32 3, !dbg !14121, !ctir !1037
  store i8* %4, i8** %left_quote5, align 8, !dbg !14122, !tbaa !14123, !ctir !180
  %6 = load i8*, i8** %right_quote.addr, align 8, !dbg !14124, !tbaa !2645
  %7 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14125, !tbaa !2645
  %right_quote6 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %7, i32 0, i32 4, !dbg !14126, !ctir !1037
  store i8* %6, i8** %right_quote6, align 8, !dbg !14127, !tbaa !14128, !ctir !180
  ret void, !dbg !14129
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @quotearg_buffer(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, %struct.quoting_options* %o) #4 !dbg !14130 !ctir !1059 {
entry:
  %buffer.addr = alloca i8*, align 8
  %buffersize.addr = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  %p = alloca %struct.quoting_options*, align 8, !ctir !1048
  %e = alloca i32, align 4, !ctir !7
  %r = alloca i64, align 8, !ctir !55
  store i8* %buffer, i8** %buffer.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !14131, metadata !DIExpression()), !dbg !14132
  store i64 %buffersize, i64* %buffersize.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %buffersize.addr, metadata !14133, metadata !DIExpression()), !dbg !14134
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14135, metadata !DIExpression()), !dbg !14136
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14137, metadata !DIExpression()), !dbg !14138
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !14139, metadata !DIExpression()), !dbg !14140
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !14141, metadata !DIExpression()), !dbg !14142
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14143, !tbaa !2645
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !14143
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14143

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !14144, !tbaa !2645
  br label %cond.end, !dbg !14143

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14143

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !14143
  store %struct.quoting_options* %cond, %struct.quoting_options** %p, align 8, !dbg !14142, !tbaa !2645
  call void @llvm.dbg.declare(metadata i32* %e, metadata !14145, metadata !DIExpression()), !dbg !14146
  %call = call i32* @__errno_location() #16, !dbg !14147
  %2 = load i32, i32* %call, align 4, !dbg !14147, !tbaa !2632, !ctir !7
  store i32 %2, i32* %e, align 4, !dbg !14146, !tbaa !2632
  call void @llvm.dbg.declare(metadata i64* %r, metadata !14148, metadata !DIExpression()), !dbg !14149
  %3 = load i8*, i8** %buffer.addr, align 8, !dbg !14150, !tbaa !2645
  %4 = load i64, i64* %buffersize.addr, align 8, !dbg !14151, !tbaa !3285
  %5 = load i8*, i8** %arg.addr, align 8, !dbg !14152, !tbaa !2645
  %6 = load i64, i64* %argsize.addr, align 8, !dbg !14153, !tbaa !3285
  %7 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14154, !tbaa !2645
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %7, i32 0, i32 0, !dbg !14155, !ctir !1049
  %8 = load i32, i32* %style, align 8, !dbg !14155, !tbaa !14022, !ctir !1012
  %9 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14156, !tbaa !2645
  %flags = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %9, i32 0, i32 1, !dbg !14157, !ctir !1049
  %10 = load i32, i32* %flags, align 4, !dbg !14157, !tbaa !14090, !ctir !7
  %11 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14158, !tbaa !2645
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %11, i32 0, i32 2, !dbg !14159, !ctir !1049
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !14158
  %12 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14160, !tbaa !2645
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %12, i32 0, i32 3, !dbg !14161, !ctir !1049
  %13 = load i8*, i8** %left_quote, align 8, !dbg !14161, !tbaa !14123, !ctir !180
  %14 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !14162, !tbaa !2645
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %14, i32 0, i32 4, !dbg !14163, !ctir !1049
  %15 = load i8*, i8** %right_quote, align 8, !dbg !14163, !tbaa !14128, !ctir !180
  %call1 = call i64 @quotearg_buffer_restyled(i8* %3, i64 %4, i8* %5, i64 %6, i32 %8, i32 %10, i32* %arraydecay, i8* %13, i8* %15), !dbg !14164
  store i64 %call1, i64* %r, align 8, !dbg !14149, !tbaa !3285
  %16 = load i32, i32* %e, align 4, !dbg !14165, !tbaa !2632
  %call2 = call i32* @__errno_location() #16, !dbg !14166
  store i32 %16, i32* %call2, align 4, !dbg !14167, !tbaa !2632, !ctir !7
  %17 = load i64, i64* %r, align 8, !dbg !14168, !tbaa !3285
  ret i64 %17, !dbg !14169
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @quotearg_buffer_restyled(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, i32 %quoting_style, i32 %flags, i32* %quote_these_too, i8* %left_quote, i8* %right_quote) #4 !dbg !14170 !ctir !1104 {
entry:
  %retval = alloca i64, align 8
  %buffer.addr = alloca i8*, align 8
  %buffersize.addr = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %quoting_style.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %quote_these_too.addr = alloca i32*, align 8
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %i = alloca i64, align 8, !ctir !55
  %len = alloca i64, align 8, !ctir !55
  %orig_buffersize = alloca i64, align 8, !ctir !55
  %quote_string = alloca i8*, align 8, !ctir !180
  %quote_string_len = alloca i64, align 8, !ctir !55
  %backslash_escapes = alloca i8, align 1, !ctir !142
  %unibyte_locale = alloca i8, align 1, !ctir !142
  %elide_outer_quotes = alloca i8, align 1, !ctir !142
  %pending_shell_escape_end = alloca i8, align 1, !ctir !142
  %encountered_single_quote = alloca i8, align 1, !ctir !142
  %all_c_and_shell_quote_compat = alloca i8, align 1, !ctir !142
  %c = alloca i8, align 1, !ctir !554
  %esc = alloca i8, align 1, !ctir !554
  %is_right_quote = alloca i8, align 1, !ctir !142
  %escaping = alloca i8, align 1, !ctir !142
  %c_and_shell_quote_compat = alloca i8, align 1, !ctir !142
  %m = alloca i64, align 8, !ctir !55
  %printable = alloca i8, align 1, !ctir !142
  %mbstate = alloca %struct.savewd, align 4, !ctir !1110
  %w = alloca i32, align 4, !ctir !1125
  %bytes = alloca i64, align 8, !ctir !55
  %j = alloca i64, align 8, !ctir !55
  %ilim = alloca i64, align 8, !ctir !55
  store i8* %buffer, i8** %buffer.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !14171, metadata !DIExpression()), !dbg !14172
  store i64 %buffersize, i64* %buffersize.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %buffersize.addr, metadata !14173, metadata !DIExpression()), !dbg !14174
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !14175, metadata !DIExpression()), !dbg !14176
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !14177, metadata !DIExpression()), !dbg !14178
  store i32 %quoting_style, i32* %quoting_style.addr, align 4, !tbaa !3292
  call void @llvm.dbg.declare(metadata i32* %quoting_style.addr, metadata !14179, metadata !DIExpression()), !dbg !14180
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !14181, metadata !DIExpression()), !dbg !14182
  store i32* %quote_these_too, i32** %quote_these_too.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i32** %quote_these_too.addr, metadata !14183, metadata !DIExpression()), !dbg !14184
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !14185, metadata !DIExpression()), !dbg !14186
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !14187, metadata !DIExpression()), !dbg !14188
  call void @llvm.dbg.declare(metadata i64* %i, metadata !14189, metadata !DIExpression()), !dbg !14190
  call void @llvm.dbg.declare(metadata i64* %len, metadata !14191, metadata !DIExpression()), !dbg !14192
  store i64 0, i64* %len, align 8, !dbg !14192, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %orig_buffersize, metadata !14193, metadata !DIExpression()), !dbg !14194
  store i64 0, i64* %orig_buffersize, align 8, !dbg !14194, !tbaa !3285
  call void @llvm.dbg.declare(metadata i8** %quote_string, metadata !14195, metadata !DIExpression()), !dbg !14196
  store i8* null, i8** %quote_string, align 8, !dbg !14196, !tbaa !2645
  call void @llvm.dbg.declare(metadata i64* %quote_string_len, metadata !14197, metadata !DIExpression()), !dbg !14198
  store i64 0, i64* %quote_string_len, align 8, !dbg !14198, !tbaa !3285
  call void @llvm.dbg.declare(metadata i8* %backslash_escapes, metadata !14199, metadata !DIExpression()), !dbg !14200
  store i8 0, i8* %backslash_escapes, align 1, !dbg !14200, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %unibyte_locale, metadata !14201, metadata !DIExpression()), !dbg !14202
  %call = call i64 @__ctype_get_mb_cur_max() #9, !dbg !14203
  %cmp = icmp eq i64 %call, 1, !dbg !14204
  %frombool = zext i1 %cmp to i8, !dbg !14202
  store i8 %frombool, i8* %unibyte_locale, align 1, !dbg !14202, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %elide_outer_quotes, metadata !14205, metadata !DIExpression()), !dbg !14206
  %0 = load i32, i32* %flags.addr, align 4, !dbg !14207, !tbaa !2632
  %and = and i32 %0, 2, !dbg !14208
  %cmp1 = icmp ne i32 %and, 0, !dbg !14209
  %frombool2 = zext i1 %cmp1 to i8, !dbg !14206
  store i8 %frombool2, i8* %elide_outer_quotes, align 1, !dbg !14206, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %pending_shell_escape_end, metadata !14210, metadata !DIExpression()), !dbg !14211
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !14211, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %encountered_single_quote, metadata !14212, metadata !DIExpression()), !dbg !14213
  store i8 0, i8* %encountered_single_quote, align 1, !dbg !14213, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %all_c_and_shell_quote_compat, metadata !14214, metadata !DIExpression()), !dbg !14215
  store i8 1, i8* %all_c_and_shell_quote_compat, align 1, !dbg !14215, !tbaa !2739
  br label %process_input, !dbg !14216

process_input:                                    ; preds = %if.then701, %entry
  call void @llvm.dbg.label(metadata !14217), !dbg !14218
  %1 = load i32, i32* %quoting_style.addr, align 4, !dbg !14219, !tbaa !3292
  switch i32 %1, label %sw.default [
    i32 6, label %sw.bb
    i32 5, label %sw.bb3
    i32 7, label %sw.bb7
    i32 8, label %sw.bb8
    i32 9, label %sw.bb8
    i32 10, label %sw.bb8
    i32 3, label %sw.bb26
    i32 1, label %sw.bb27
    i32 4, label %sw.bb28
    i32 2, label %sw.bb32
    i32 0, label %sw.bb43
  ], !dbg !14220

sw.bb:                                            ; preds = %process_input
  store i32 5, i32* %quoting_style.addr, align 4, !dbg !14221, !tbaa !3292
  store i8 1, i8* %elide_outer_quotes, align 1, !dbg !14223, !tbaa !2739
  br label %sw.bb3, !dbg !14224

sw.bb3:                                           ; preds = %process_input, %sw.bb
  %2 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14225, !tbaa !2739
  %tobool = trunc i8 %2 to i1, !dbg !14225
  br i1 %tobool, label %if.end6, label %if.then, !dbg !14227

if.then:                                          ; preds = %sw.bb3
  br label %do.body, !dbg !14228

do.body:                                          ; preds = %if.then
  %3 = load i64, i64* %len, align 8, !dbg !14229, !tbaa !3285
  %4 = load i64, i64* %buffersize.addr, align 8, !dbg !14229, !tbaa !3285
  %cmp4 = icmp ult i64 %3, %4, !dbg !14229
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !14232

if.then5:                                         ; preds = %do.body
  %5 = load i8*, i8** %buffer.addr, align 8, !dbg !14229, !tbaa !2645
  %6 = load i64, i64* %len, align 8, !dbg !14229, !tbaa !3285
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %6, !dbg !14229, !ctir !9
  store i8 34, i8* %arrayidx, align 1, !dbg !14229, !tbaa !3292
  br label %if.end, !dbg !14229

if.end:                                           ; preds = %if.then5, %do.body
  %7 = load i64, i64* %len, align 8, !dbg !14232, !tbaa !3285
  %inc = add i64 %7, 1, !dbg !14232
  store i64 %inc, i64* %len, align 8, !dbg !14232, !tbaa !3285
  br label %do.end, !dbg !14232

do.end:                                           ; preds = %if.end
  br label %if.end6, !dbg !14232

if.end6:                                          ; preds = %do.end, %sw.bb3
  store i8 1, i8* %backslash_escapes, align 1, !dbg !14233, !tbaa !2739
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.328, i64 0, i64 0), i8** %quote_string, align 8, !dbg !14234, !tbaa !2645
  store i64 1, i64* %quote_string_len, align 8, !dbg !14235, !tbaa !3285
  br label %sw.epilog, !dbg !14236

sw.bb7:                                           ; preds = %process_input
  store i8 1, i8* %backslash_escapes, align 1, !dbg !14237, !tbaa !2739
  store i8 0, i8* %elide_outer_quotes, align 1, !dbg !14238, !tbaa !2739
  br label %sw.epilog, !dbg !14239

sw.bb8:                                           ; preds = %process_input, %process_input, %process_input
  %8 = load i32, i32* %quoting_style.addr, align 4, !dbg !14240, !tbaa !3292
  %cmp9 = icmp ne i32 %8, 10, !dbg !14243
  br i1 %cmp9, label %if.then10, label %if.end13, !dbg !14244

if.then10:                                        ; preds = %sw.bb8
  %9 = load i32, i32* %quoting_style.addr, align 4, !dbg !14245, !tbaa !3292
  %call11 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11.329, i64 0, i64 0), i32 %9), !dbg !14247
  store i8* %call11, i8** %left_quote.addr, align 8, !dbg !14248, !tbaa !2645
  %10 = load i32, i32* %quoting_style.addr, align 4, !dbg !14249, !tbaa !3292
  %call12 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.330, i64 0, i64 0), i32 %10), !dbg !14250
  store i8* %call12, i8** %right_quote.addr, align 8, !dbg !14251, !tbaa !2645
  br label %if.end13, !dbg !14252

if.end13:                                         ; preds = %if.then10, %sw.bb8
  %11 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14253, !tbaa !2739
  %tobool14 = trunc i8 %11 to i1, !dbg !14253
  br i1 %tobool14, label %if.end24, label %if.then15, !dbg !14255

if.then15:                                        ; preds = %if.end13
  %12 = load i8*, i8** %left_quote.addr, align 8, !dbg !14256, !tbaa !2645
  store i8* %12, i8** %quote_string, align 8, !dbg !14258, !tbaa !2645
  br label %for.cond, !dbg !14259

for.cond:                                         ; preds = %for.inc, %if.then15
  %13 = load i8*, i8** %quote_string, align 8, !dbg !14260, !tbaa !2645
  %14 = load i8, i8* %13, align 1, !dbg !14262, !tbaa !3292, !ctir !181
  %tobool16 = icmp ne i8 %14, 0, !dbg !14263
  br i1 %tobool16, label %for.body, label %for.end, !dbg !14263

for.body:                                         ; preds = %for.cond
  br label %do.body17, !dbg !14264

do.body17:                                        ; preds = %for.body
  %15 = load i64, i64* %len, align 8, !dbg !14265, !tbaa !3285
  %16 = load i64, i64* %buffersize.addr, align 8, !dbg !14265, !tbaa !3285
  %cmp18 = icmp ult i64 %15, %16, !dbg !14265
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !14268

if.then19:                                        ; preds = %do.body17
  %17 = load i8*, i8** %quote_string, align 8, !dbg !14265, !tbaa !2645
  %18 = load i8, i8* %17, align 1, !dbg !14265, !tbaa !3292, !ctir !181
  %19 = load i8*, i8** %buffer.addr, align 8, !dbg !14265, !tbaa !2645
  %20 = load i64, i64* %len, align 8, !dbg !14265, !tbaa !3285
  %arrayidx20 = getelementptr inbounds i8, i8* %19, i64 %20, !dbg !14265, !ctir !9
  store i8 %18, i8* %arrayidx20, align 1, !dbg !14265, !tbaa !3292
  br label %if.end21, !dbg !14265

if.end21:                                         ; preds = %if.then19, %do.body17
  %21 = load i64, i64* %len, align 8, !dbg !14268, !tbaa !3285
  %inc22 = add i64 %21, 1, !dbg !14268
  store i64 %inc22, i64* %len, align 8, !dbg !14268, !tbaa !3285
  br label %do.end23, !dbg !14268

do.end23:                                         ; preds = %if.end21
  br label %for.inc, !dbg !14268

for.inc:                                          ; preds = %do.end23
  %22 = load i8*, i8** %quote_string, align 8, !dbg !14269, !tbaa !2645
  %incdec.ptr = getelementptr inbounds i8, i8* %22, i32 1, !dbg !14269
  store i8* %incdec.ptr, i8** %quote_string, align 8, !dbg !14269, !tbaa !2645
  br label %for.cond, !dbg !14270, !llvm.loop !14271

for.end:                                          ; preds = %for.cond
  br label %if.end24, !dbg !14272

if.end24:                                         ; preds = %for.end, %if.end13
  store i8 1, i8* %backslash_escapes, align 1, !dbg !14273, !tbaa !2739
  %23 = load i8*, i8** %right_quote.addr, align 8, !dbg !14274, !tbaa !2645
  store i8* %23, i8** %quote_string, align 8, !dbg !14275, !tbaa !2645
  %24 = load i8*, i8** %quote_string, align 8, !dbg !14276, !tbaa !2645
  %call25 = call i64 @strlen(i8* %24) #14, !dbg !14277
  store i64 %call25, i64* %quote_string_len, align 8, !dbg !14278, !tbaa !3285
  br label %sw.epilog, !dbg !14279

sw.bb26:                                          ; preds = %process_input
  store i8 1, i8* %backslash_escapes, align 1, !dbg !14280, !tbaa !2739
  br label %sw.bb27, !dbg !14281

sw.bb27:                                          ; preds = %process_input, %sw.bb26
  store i8 1, i8* %elide_outer_quotes, align 1, !dbg !14282, !tbaa !2739
  br label %sw.bb28, !dbg !14283

sw.bb28:                                          ; preds = %process_input, %sw.bb27
  %25 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14284, !tbaa !2739
  %tobool29 = trunc i8 %25 to i1, !dbg !14284
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !14286

if.then30:                                        ; preds = %sw.bb28
  store i8 1, i8* %backslash_escapes, align 1, !dbg !14287, !tbaa !2739
  br label %if.end31, !dbg !14288

if.end31:                                         ; preds = %if.then30, %sw.bb28
  br label %sw.bb32, !dbg !14289

sw.bb32:                                          ; preds = %process_input, %if.end31
  store i32 2, i32* %quoting_style.addr, align 4, !dbg !14290, !tbaa !3292
  %26 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14291, !tbaa !2739
  %tobool33 = trunc i8 %26 to i1, !dbg !14291
  br i1 %tobool33, label %if.end42, label %if.then34, !dbg !14293

if.then34:                                        ; preds = %sw.bb32
  br label %do.body35, !dbg !14294

do.body35:                                        ; preds = %if.then34
  %27 = load i64, i64* %len, align 8, !dbg !14295, !tbaa !3285
  %28 = load i64, i64* %buffersize.addr, align 8, !dbg !14295, !tbaa !3285
  %cmp36 = icmp ult i64 %27, %28, !dbg !14295
  br i1 %cmp36, label %if.then37, label %if.end39, !dbg !14298

if.then37:                                        ; preds = %do.body35
  %29 = load i8*, i8** %buffer.addr, align 8, !dbg !14295, !tbaa !2645
  %30 = load i64, i64* %len, align 8, !dbg !14295, !tbaa !3285
  %arrayidx38 = getelementptr inbounds i8, i8* %29, i64 %30, !dbg !14295, !ctir !9
  store i8 39, i8* %arrayidx38, align 1, !dbg !14295, !tbaa !3292
  br label %if.end39, !dbg !14295

if.end39:                                         ; preds = %if.then37, %do.body35
  %31 = load i64, i64* %len, align 8, !dbg !14298, !tbaa !3285
  %inc40 = add i64 %31, 1, !dbg !14298
  store i64 %inc40, i64* %len, align 8, !dbg !14298, !tbaa !3285
  br label %do.end41, !dbg !14298

do.end41:                                         ; preds = %if.end39
  br label %if.end42, !dbg !14298

if.end42:                                         ; preds = %do.end41, %sw.bb32
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.330, i64 0, i64 0), i8** %quote_string, align 8, !dbg !14299, !tbaa !2645
  store i64 1, i64* %quote_string_len, align 8, !dbg !14300, !tbaa !3285
  br label %sw.epilog, !dbg !14301

sw.bb43:                                          ; preds = %process_input
  store i8 0, i8* %elide_outer_quotes, align 1, !dbg !14302, !tbaa !2739
  br label %sw.epilog, !dbg !14303

sw.default:                                       ; preds = %process_input
  call void @abort() #13, !dbg !14304
  unreachable, !dbg !14304

sw.epilog:                                        ; preds = %sw.bb43, %if.end42, %if.end24, %sw.bb7, %if.end6
  store i64 0, i64* %i, align 8, !dbg !14305, !tbaa !3285
  br label %for.cond44, !dbg !14307

for.cond44:                                       ; preds = %for.inc673, %sw.epilog
  %32 = load i64, i64* %argsize.addr, align 8, !dbg !14308, !tbaa !3285
  %cmp45 = icmp eq i64 %32, -1, !dbg !14310
  br i1 %cmp45, label %cond.true, label %cond.false, !dbg !14308

cond.true:                                        ; preds = %for.cond44
  %33 = load i8*, i8** %arg.addr, align 8, !dbg !14311, !tbaa !2645
  %34 = load i64, i64* %i, align 8, !dbg !14312, !tbaa !3285
  %arrayidx46 = getelementptr inbounds i8, i8* %33, i64 %34, !dbg !14311, !ctir !180
  %35 = load i8, i8* %arrayidx46, align 1, !dbg !14311, !tbaa !3292
  %conv = sext i8 %35 to i32, !dbg !14311
  %cmp47 = icmp eq i32 %conv, 0, !dbg !14313
  %conv48 = zext i1 %cmp47 to i32, !dbg !14313
  br label %cond.end, !dbg !14308

cond.false:                                       ; preds = %for.cond44
  %36 = load i64, i64* %i, align 8, !dbg !14314, !tbaa !3285
  %37 = load i64, i64* %argsize.addr, align 8, !dbg !14315, !tbaa !3285
  %cmp49 = icmp eq i64 %36, %37, !dbg !14316
  %conv50 = zext i1 %cmp49 to i32, !dbg !14316
  br label %cond.end, !dbg !14308

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv48, %cond.true ], [ %conv50, %cond.false ], !dbg !14308
  %tobool51 = icmp ne i32 %cond, 0, !dbg !14317
  %lnot = xor i1 %tobool51, true, !dbg !14317
  br i1 %lnot, label %for.body52, label %for.end675, !dbg !14318

for.body52:                                       ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i8* %c, metadata !14319, metadata !DIExpression()), !dbg !14321
  call void @llvm.dbg.declare(metadata i8* %esc, metadata !14322, metadata !DIExpression()), !dbg !14323
  call void @llvm.dbg.declare(metadata i8* %is_right_quote, metadata !14324, metadata !DIExpression()), !dbg !14325
  store i8 0, i8* %is_right_quote, align 1, !dbg !14325, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %escaping, metadata !14326, metadata !DIExpression()), !dbg !14327
  store i8 0, i8* %escaping, align 1, !dbg !14327, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %c_and_shell_quote_compat, metadata !14328, metadata !DIExpression()), !dbg !14329
  store i8 0, i8* %c_and_shell_quote_compat, align 1, !dbg !14329, !tbaa !2739
  %38 = load i8, i8* %backslash_escapes, align 1, !dbg !14330, !tbaa !2739
  %tobool53 = trunc i8 %38 to i1, !dbg !14330
  br i1 %tobool53, label %land.lhs.true, label %if.end80, !dbg !14332

land.lhs.true:                                    ; preds = %for.body52
  %39 = load i32, i32* %quoting_style.addr, align 4, !dbg !14333, !tbaa !3292
  %cmp55 = icmp ne i32 %39, 2, !dbg !14334
  br i1 %cmp55, label %land.lhs.true57, label %if.end80, !dbg !14335

land.lhs.true57:                                  ; preds = %land.lhs.true
  %40 = load i64, i64* %quote_string_len, align 8, !dbg !14336, !tbaa !3285
  %tobool58 = icmp ne i64 %40, 0, !dbg !14336
  br i1 %tobool58, label %land.lhs.true59, label %if.end80, !dbg !14337

land.lhs.true59:                                  ; preds = %land.lhs.true57
  %41 = load i64, i64* %i, align 8, !dbg !14338, !tbaa !3285
  %42 = load i64, i64* %quote_string_len, align 8, !dbg !14339, !tbaa !3285
  %add = add i64 %41, %42, !dbg !14340
  %43 = load i64, i64* %argsize.addr, align 8, !dbg !14341, !tbaa !3285
  %cmp60 = icmp eq i64 %43, -1, !dbg !14342
  br i1 %cmp60, label %land.lhs.true62, label %cond.false67, !dbg !14343

land.lhs.true62:                                  ; preds = %land.lhs.true59
  %44 = load i64, i64* %quote_string_len, align 8, !dbg !14344, !tbaa !3285
  %cmp63 = icmp ult i64 1, %44, !dbg !14345
  br i1 %cmp63, label %cond.true65, label %cond.false67, !dbg !14341

cond.true65:                                      ; preds = %land.lhs.true62
  %45 = load i8*, i8** %arg.addr, align 8, !dbg !14346, !tbaa !2645
  %call66 = call i64 @strlen(i8* %45) #14, !dbg !14347
  store i64 %call66, i64* %argsize.addr, align 8, !dbg !14348, !tbaa !3285
  br label %cond.end68, !dbg !14341

cond.false67:                                     ; preds = %land.lhs.true62, %land.lhs.true59
  %46 = load i64, i64* %argsize.addr, align 8, !dbg !14349, !tbaa !3285
  br label %cond.end68, !dbg !14341

cond.end68:                                       ; preds = %cond.false67, %cond.true65
  %cond69 = phi i64 [ %call66, %cond.true65 ], [ %46, %cond.false67 ], !dbg !14341
  %cmp70 = icmp ule i64 %add, %cond69, !dbg !14350
  br i1 %cmp70, label %land.lhs.true72, label %if.end80, !dbg !14351

land.lhs.true72:                                  ; preds = %cond.end68
  %47 = load i8*, i8** %arg.addr, align 8, !dbg !14352, !tbaa !2645
  %48 = load i64, i64* %i, align 8, !dbg !14353, !tbaa !3285
  %add.ptr = getelementptr inbounds i8, i8* %47, i64 %48, !dbg !14354
  %49 = load i8*, i8** %quote_string, align 8, !dbg !14355, !tbaa !2645
  %50 = load i64, i64* %quote_string_len, align 8, !dbg !14356, !tbaa !3285
  %call73 = call i32 @memcmp(i8* %add.ptr, i8* %49, i64 %50) #14, !dbg !14357
  %cmp74 = icmp eq i32 %call73, 0, !dbg !14358
  br i1 %cmp74, label %if.then76, label %if.end80, !dbg !14359

if.then76:                                        ; preds = %land.lhs.true72
  %51 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14360, !tbaa !2739
  %tobool77 = trunc i8 %51 to i1, !dbg !14360
  br i1 %tobool77, label %if.then78, label %if.end79, !dbg !14363

if.then78:                                        ; preds = %if.then76
  br label %force_outer_quoting_style, !dbg !14364

if.end79:                                         ; preds = %if.then76
  store i8 1, i8* %is_right_quote, align 1, !dbg !14365, !tbaa !2739
  br label %if.end80, !dbg !14366

if.end80:                                         ; preds = %if.end79, %land.lhs.true72, %cond.end68, %land.lhs.true57, %land.lhs.true, %for.body52
  %52 = load i8*, i8** %arg.addr, align 8, !dbg !14367, !tbaa !2645
  %53 = load i64, i64* %i, align 8, !dbg !14368, !tbaa !3285
  %arrayidx81 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !14367, !ctir !180
  %54 = load i8, i8* %arrayidx81, align 1, !dbg !14367, !tbaa !3292
  store i8 %54, i8* %c, align 1, !dbg !14369, !tbaa !3292
  %55 = load i8, i8* %c, align 1, !dbg !14370, !tbaa !3292
  %conv82 = zext i8 %55 to i32, !dbg !14370
  switch i32 %conv82, label %sw.default335 [
    i32 0, label %sw.bb83
    i32 63, label %sw.bb170
    i32 7, label %sw.bb236
    i32 8, label %sw.bb237
    i32 12, label %sw.bb238
    i32 10, label %sw.bb239
    i32 13, label %sw.bb240
    i32 9, label %sw.bb241
    i32 11, label %sw.bb242
    i32 92, label %sw.bb243
    i32 123, label %sw.bb270
    i32 125, label %sw.bb270
    i32 35, label %sw.bb283
    i32 126, label %sw.bb283
    i32 32, label %sw.bb288
    i32 33, label %sw.bb289
    i32 34, label %sw.bb289
    i32 36, label %sw.bb289
    i32 38, label %sw.bb289
    i32 40, label %sw.bb289
    i32 41, label %sw.bb289
    i32 42, label %sw.bb289
    i32 59, label %sw.bb289
    i32 60, label %sw.bb289
    i32 61, label %sw.bb289
    i32 62, label %sw.bb289
    i32 91, label %sw.bb289
    i32 94, label %sw.bb289
    i32 96, label %sw.bb289
    i32 124, label %sw.bb289
    i32 39, label %sw.bb297
    i32 37, label %sw.bb334
    i32 43, label %sw.bb334
    i32 44, label %sw.bb334
    i32 45, label %sw.bb334
    i32 46, label %sw.bb334
    i32 47, label %sw.bb334
    i32 48, label %sw.bb334
    i32 49, label %sw.bb334
    i32 50, label %sw.bb334
    i32 51, label %sw.bb334
    i32 52, label %sw.bb334
    i32 53, label %sw.bb334
    i32 54, label %sw.bb334
    i32 55, label %sw.bb334
    i32 56, label %sw.bb334
    i32 57, label %sw.bb334
    i32 58, label %sw.bb334
    i32 65, label %sw.bb334
    i32 66, label %sw.bb334
    i32 67, label %sw.bb334
    i32 68, label %sw.bb334
    i32 69, label %sw.bb334
    i32 70, label %sw.bb334
    i32 71, label %sw.bb334
    i32 72, label %sw.bb334
    i32 73, label %sw.bb334
    i32 74, label %sw.bb334
    i32 75, label %sw.bb334
    i32 76, label %sw.bb334
    i32 77, label %sw.bb334
    i32 78, label %sw.bb334
    i32 79, label %sw.bb334
    i32 80, label %sw.bb334
    i32 81, label %sw.bb334
    i32 82, label %sw.bb334
    i32 83, label %sw.bb334
    i32 84, label %sw.bb334
    i32 85, label %sw.bb334
    i32 86, label %sw.bb334
    i32 87, label %sw.bb334
    i32 88, label %sw.bb334
    i32 89, label %sw.bb334
    i32 90, label %sw.bb334
    i32 93, label %sw.bb334
    i32 95, label %sw.bb334
    i32 97, label %sw.bb334
    i32 98, label %sw.bb334
    i32 99, label %sw.bb334
    i32 100, label %sw.bb334
    i32 101, label %sw.bb334
    i32 102, label %sw.bb334
    i32 103, label %sw.bb334
    i32 104, label %sw.bb334
    i32 105, label %sw.bb334
    i32 106, label %sw.bb334
    i32 107, label %sw.bb334
    i32 108, label %sw.bb334
    i32 109, label %sw.bb334
    i32 110, label %sw.bb334
    i32 111, label %sw.bb334
    i32 112, label %sw.bb334
    i32 113, label %sw.bb334
    i32 114, label %sw.bb334
    i32 115, label %sw.bb334
    i32 116, label %sw.bb334
    i32 117, label %sw.bb334
    i32 118, label %sw.bb334
    i32 119, label %sw.bb334
    i32 120, label %sw.bb334
    i32 121, label %sw.bb334
    i32 122, label %sw.bb334
  ], !dbg !14371

sw.bb83:                                          ; preds = %if.end80
  %56 = load i8, i8* %backslash_escapes, align 1, !dbg !14372, !tbaa !2739
  %tobool84 = trunc i8 %56 to i1, !dbg !14372
  br i1 %tobool84, label %if.then85, label %if.else, !dbg !14375

if.then85:                                        ; preds = %sw.bb83
  br label %do.body86, !dbg !14376

do.body86:                                        ; preds = %if.then85
  %57 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14378, !tbaa !2739
  %tobool87 = trunc i8 %57 to i1, !dbg !14378
  br i1 %tobool87, label %if.then88, label %if.end89, !dbg !14381

if.then88:                                        ; preds = %do.body86
  br label %force_outer_quoting_style, !dbg !14378

if.end89:                                         ; preds = %do.body86
  store i8 1, i8* %escaping, align 1, !dbg !14381, !tbaa !2739
  %58 = load i32, i32* %quoting_style.addr, align 4, !dbg !14382, !tbaa !3292
  %cmp90 = icmp eq i32 %58, 2, !dbg !14382
  br i1 %cmp90, label %land.lhs.true92, label %if.end119, !dbg !14382

land.lhs.true92:                                  ; preds = %if.end89
  %59 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !14382, !tbaa !2739
  %tobool93 = trunc i8 %59 to i1, !dbg !14382
  br i1 %tobool93, label %if.end119, label %if.then94, !dbg !14381

if.then94:                                        ; preds = %land.lhs.true92
  br label %do.body95, !dbg !14384

do.body95:                                        ; preds = %if.then94
  %60 = load i64, i64* %len, align 8, !dbg !14386, !tbaa !3285
  %61 = load i64, i64* %buffersize.addr, align 8, !dbg !14386, !tbaa !3285
  %cmp96 = icmp ult i64 %60, %61, !dbg !14386
  br i1 %cmp96, label %if.then98, label %if.end100, !dbg !14389

if.then98:                                        ; preds = %do.body95
  %62 = load i8*, i8** %buffer.addr, align 8, !dbg !14386, !tbaa !2645
  %63 = load i64, i64* %len, align 8, !dbg !14386, !tbaa !3285
  %arrayidx99 = getelementptr inbounds i8, i8* %62, i64 %63, !dbg !14386, !ctir !9
  store i8 39, i8* %arrayidx99, align 1, !dbg !14386, !tbaa !3292
  br label %if.end100, !dbg !14386

if.end100:                                        ; preds = %if.then98, %do.body95
  %64 = load i64, i64* %len, align 8, !dbg !14389, !tbaa !3285
  %inc101 = add i64 %64, 1, !dbg !14389
  store i64 %inc101, i64* %len, align 8, !dbg !14389, !tbaa !3285
  br label %do.end102, !dbg !14389

do.end102:                                        ; preds = %if.end100
  br label %do.body103, !dbg !14384

do.body103:                                       ; preds = %do.end102
  %65 = load i64, i64* %len, align 8, !dbg !14390, !tbaa !3285
  %66 = load i64, i64* %buffersize.addr, align 8, !dbg !14390, !tbaa !3285
  %cmp104 = icmp ult i64 %65, %66, !dbg !14390
  br i1 %cmp104, label %if.then106, label %if.end108, !dbg !14393

if.then106:                                       ; preds = %do.body103
  %67 = load i8*, i8** %buffer.addr, align 8, !dbg !14390, !tbaa !2645
  %68 = load i64, i64* %len, align 8, !dbg !14390, !tbaa !3285
  %arrayidx107 = getelementptr inbounds i8, i8* %67, i64 %68, !dbg !14390, !ctir !9
  store i8 36, i8* %arrayidx107, align 1, !dbg !14390, !tbaa !3292
  br label %if.end108, !dbg !14390

if.end108:                                        ; preds = %if.then106, %do.body103
  %69 = load i64, i64* %len, align 8, !dbg !14393, !tbaa !3285
  %inc109 = add i64 %69, 1, !dbg !14393
  store i64 %inc109, i64* %len, align 8, !dbg !14393, !tbaa !3285
  br label %do.end110, !dbg !14393

do.end110:                                        ; preds = %if.end108
  br label %do.body111, !dbg !14384

do.body111:                                       ; preds = %do.end110
  %70 = load i64, i64* %len, align 8, !dbg !14394, !tbaa !3285
  %71 = load i64, i64* %buffersize.addr, align 8, !dbg !14394, !tbaa !3285
  %cmp112 = icmp ult i64 %70, %71, !dbg !14394
  br i1 %cmp112, label %if.then114, label %if.end116, !dbg !14397

if.then114:                                       ; preds = %do.body111
  %72 = load i8*, i8** %buffer.addr, align 8, !dbg !14394, !tbaa !2645
  %73 = load i64, i64* %len, align 8, !dbg !14394, !tbaa !3285
  %arrayidx115 = getelementptr inbounds i8, i8* %72, i64 %73, !dbg !14394, !ctir !9
  store i8 39, i8* %arrayidx115, align 1, !dbg !14394, !tbaa !3292
  br label %if.end116, !dbg !14394

if.end116:                                        ; preds = %if.then114, %do.body111
  %74 = load i64, i64* %len, align 8, !dbg !14397, !tbaa !3285
  %inc117 = add i64 %74, 1, !dbg !14397
  store i64 %inc117, i64* %len, align 8, !dbg !14397, !tbaa !3285
  br label %do.end118, !dbg !14397

do.end118:                                        ; preds = %if.end116
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !14384, !tbaa !2739
  br label %if.end119, !dbg !14384

if.end119:                                        ; preds = %do.end118, %land.lhs.true92, %if.end89
  br label %do.body120, !dbg !14381

do.body120:                                       ; preds = %if.end119
  %75 = load i64, i64* %len, align 8, !dbg !14398, !tbaa !3285
  %76 = load i64, i64* %buffersize.addr, align 8, !dbg !14398, !tbaa !3285
  %cmp121 = icmp ult i64 %75, %76, !dbg !14398
  br i1 %cmp121, label %if.then123, label %if.end125, !dbg !14401

if.then123:                                       ; preds = %do.body120
  %77 = load i8*, i8** %buffer.addr, align 8, !dbg !14398, !tbaa !2645
  %78 = load i64, i64* %len, align 8, !dbg !14398, !tbaa !3285
  %arrayidx124 = getelementptr inbounds i8, i8* %77, i64 %78, !dbg !14398, !ctir !9
  store i8 92, i8* %arrayidx124, align 1, !dbg !14398, !tbaa !3292
  br label %if.end125, !dbg !14398

if.end125:                                        ; preds = %if.then123, %do.body120
  %79 = load i64, i64* %len, align 8, !dbg !14401, !tbaa !3285
  %inc126 = add i64 %79, 1, !dbg !14401
  store i64 %inc126, i64* %len, align 8, !dbg !14401, !tbaa !3285
  br label %do.end127, !dbg !14401

do.end127:                                        ; preds = %if.end125
  br label %do.end128, !dbg !14381

do.end128:                                        ; preds = %do.end127
  %80 = load i32, i32* %quoting_style.addr, align 4, !dbg !14402, !tbaa !3292
  %cmp129 = icmp ne i32 %80, 2, !dbg !14404
  br i1 %cmp129, label %land.lhs.true131, label %if.end164, !dbg !14405

land.lhs.true131:                                 ; preds = %do.end128
  %81 = load i64, i64* %i, align 8, !dbg !14406, !tbaa !3285
  %add132 = add i64 %81, 1, !dbg !14407
  %82 = load i64, i64* %argsize.addr, align 8, !dbg !14408, !tbaa !3285
  %cmp133 = icmp ult i64 %add132, %82, !dbg !14409
  br i1 %cmp133, label %land.lhs.true135, label %if.end164, !dbg !14410

land.lhs.true135:                                 ; preds = %land.lhs.true131
  %83 = load i8*, i8** %arg.addr, align 8, !dbg !14411, !tbaa !2645
  %84 = load i64, i64* %i, align 8, !dbg !14412, !tbaa !3285
  %add136 = add i64 %84, 1, !dbg !14413
  %arrayidx137 = getelementptr inbounds i8, i8* %83, i64 %add136, !dbg !14411, !ctir !180
  %85 = load i8, i8* %arrayidx137, align 1, !dbg !14411, !tbaa !3292
  %conv138 = sext i8 %85 to i32, !dbg !14411
  %cmp139 = icmp sle i32 48, %conv138, !dbg !14414
  br i1 %cmp139, label %land.lhs.true141, label %if.end164, !dbg !14415

land.lhs.true141:                                 ; preds = %land.lhs.true135
  %86 = load i8*, i8** %arg.addr, align 8, !dbg !14416, !tbaa !2645
  %87 = load i64, i64* %i, align 8, !dbg !14417, !tbaa !3285
  %add142 = add i64 %87, 1, !dbg !14418
  %arrayidx143 = getelementptr inbounds i8, i8* %86, i64 %add142, !dbg !14416, !ctir !180
  %88 = load i8, i8* %arrayidx143, align 1, !dbg !14416, !tbaa !3292
  %conv144 = sext i8 %88 to i32, !dbg !14416
  %cmp145 = icmp sle i32 %conv144, 57, !dbg !14419
  br i1 %cmp145, label %if.then147, label %if.end164, !dbg !14420

if.then147:                                       ; preds = %land.lhs.true141
  br label %do.body148, !dbg !14421

do.body148:                                       ; preds = %if.then147
  %89 = load i64, i64* %len, align 8, !dbg !14423, !tbaa !3285
  %90 = load i64, i64* %buffersize.addr, align 8, !dbg !14423, !tbaa !3285
  %cmp149 = icmp ult i64 %89, %90, !dbg !14423
  br i1 %cmp149, label %if.then151, label %if.end153, !dbg !14426

if.then151:                                       ; preds = %do.body148
  %91 = load i8*, i8** %buffer.addr, align 8, !dbg !14423, !tbaa !2645
  %92 = load i64, i64* %len, align 8, !dbg !14423, !tbaa !3285
  %arrayidx152 = getelementptr inbounds i8, i8* %91, i64 %92, !dbg !14423, !ctir !9
  store i8 48, i8* %arrayidx152, align 1, !dbg !14423, !tbaa !3292
  br label %if.end153, !dbg !14423

if.end153:                                        ; preds = %if.then151, %do.body148
  %93 = load i64, i64* %len, align 8, !dbg !14426, !tbaa !3285
  %inc154 = add i64 %93, 1, !dbg !14426
  store i64 %inc154, i64* %len, align 8, !dbg !14426, !tbaa !3285
  br label %do.end155, !dbg !14426

do.end155:                                        ; preds = %if.end153
  br label %do.body156, !dbg !14427

do.body156:                                       ; preds = %do.end155
  %94 = load i64, i64* %len, align 8, !dbg !14428, !tbaa !3285
  %95 = load i64, i64* %buffersize.addr, align 8, !dbg !14428, !tbaa !3285
  %cmp157 = icmp ult i64 %94, %95, !dbg !14428
  br i1 %cmp157, label %if.then159, label %if.end161, !dbg !14431

if.then159:                                       ; preds = %do.body156
  %96 = load i8*, i8** %buffer.addr, align 8, !dbg !14428, !tbaa !2645
  %97 = load i64, i64* %len, align 8, !dbg !14428, !tbaa !3285
  %arrayidx160 = getelementptr inbounds i8, i8* %96, i64 %97, !dbg !14428, !ctir !9
  store i8 48, i8* %arrayidx160, align 1, !dbg !14428, !tbaa !3292
  br label %if.end161, !dbg !14428

if.end161:                                        ; preds = %if.then159, %do.body156
  %98 = load i64, i64* %len, align 8, !dbg !14431, !tbaa !3285
  %inc162 = add i64 %98, 1, !dbg !14431
  store i64 %inc162, i64* %len, align 8, !dbg !14431, !tbaa !3285
  br label %do.end163, !dbg !14431

do.end163:                                        ; preds = %if.end161
  br label %if.end164, !dbg !14432

if.end164:                                        ; preds = %do.end163, %land.lhs.true141, %land.lhs.true135, %land.lhs.true131, %do.end128
  store i8 48, i8* %c, align 1, !dbg !14433, !tbaa !3292
  br label %if.end169, !dbg !14434

if.else:                                          ; preds = %sw.bb83
  %99 = load i32, i32* %flags.addr, align 4, !dbg !14435, !tbaa !2632
  %and165 = and i32 %99, 1, !dbg !14437
  %tobool166 = icmp ne i32 %and165, 0, !dbg !14437
  br i1 %tobool166, label %if.then167, label %if.end168, !dbg !14438

if.then167:                                       ; preds = %if.else
  br label %for.inc673, !dbg !14439

if.end168:                                        ; preds = %if.else
  br label %if.end169

if.end169:                                        ; preds = %if.end168, %if.end164
  br label %sw.epilog564, !dbg !14440

sw.bb170:                                         ; preds = %if.end80
  %100 = load i32, i32* %quoting_style.addr, align 4, !dbg !14441, !tbaa !3292
  switch i32 %100, label %sw.default234 [
    i32 2, label %sw.bb171
    i32 5, label %sw.bb175
  ], !dbg !14442

sw.bb171:                                         ; preds = %sw.bb170
  %101 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14443, !tbaa !2739
  %tobool172 = trunc i8 %101 to i1, !dbg !14443
  br i1 %tobool172, label %if.then173, label %if.end174, !dbg !14446

if.then173:                                       ; preds = %sw.bb171
  br label %force_outer_quoting_style, !dbg !14447

if.end174:                                        ; preds = %sw.bb171
  br label %sw.epilog235, !dbg !14448

sw.bb175:                                         ; preds = %sw.bb170
  %102 = load i32, i32* %flags.addr, align 4, !dbg !14449, !tbaa !2632
  %and176 = and i32 %102, 4, !dbg !14451
  %tobool177 = icmp ne i32 %and176, 0, !dbg !14451
  br i1 %tobool177, label %land.lhs.true178, label %if.end233, !dbg !14452

land.lhs.true178:                                 ; preds = %sw.bb175
  %103 = load i64, i64* %i, align 8, !dbg !14453, !tbaa !3285
  %add179 = add i64 %103, 2, !dbg !14454
  %104 = load i64, i64* %argsize.addr, align 8, !dbg !14455, !tbaa !3285
  %cmp180 = icmp ult i64 %add179, %104, !dbg !14456
  br i1 %cmp180, label %land.lhs.true182, label %if.end233, !dbg !14457

land.lhs.true182:                                 ; preds = %land.lhs.true178
  %105 = load i8*, i8** %arg.addr, align 8, !dbg !14458, !tbaa !2645
  %106 = load i64, i64* %i, align 8, !dbg !14459, !tbaa !3285
  %add183 = add i64 %106, 1, !dbg !14460
  %arrayidx184 = getelementptr inbounds i8, i8* %105, i64 %add183, !dbg !14458, !ctir !180
  %107 = load i8, i8* %arrayidx184, align 1, !dbg !14458, !tbaa !3292
  %conv185 = sext i8 %107 to i32, !dbg !14458
  %cmp186 = icmp eq i32 %conv185, 63, !dbg !14461
  br i1 %cmp186, label %if.then188, label %if.end233, !dbg !14462

if.then188:                                       ; preds = %land.lhs.true182
  %108 = load i8*, i8** %arg.addr, align 8, !dbg !14463, !tbaa !2645
  %109 = load i64, i64* %i, align 8, !dbg !14464, !tbaa !3285
  %add189 = add i64 %109, 2, !dbg !14465
  %arrayidx190 = getelementptr inbounds i8, i8* %108, i64 %add189, !dbg !14463, !ctir !180
  %110 = load i8, i8* %arrayidx190, align 1, !dbg !14463, !tbaa !3292
  %conv191 = sext i8 %110 to i32, !dbg !14463
  switch i32 %conv191, label %sw.default231 [
    i32 33, label %sw.bb192
    i32 39, label %sw.bb192
    i32 40, label %sw.bb192
    i32 41, label %sw.bb192
    i32 45, label %sw.bb192
    i32 47, label %sw.bb192
    i32 60, label %sw.bb192
    i32 61, label %sw.bb192
    i32 62, label %sw.bb192
  ], !dbg !14466

sw.bb192:                                         ; preds = %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188, %if.then188
  %111 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14467, !tbaa !2739
  %tobool193 = trunc i8 %111 to i1, !dbg !14467
  br i1 %tobool193, label %if.then194, label %if.end195, !dbg !14470

if.then194:                                       ; preds = %sw.bb192
  br label %force_outer_quoting_style, !dbg !14471

if.end195:                                        ; preds = %sw.bb192
  %112 = load i8*, i8** %arg.addr, align 8, !dbg !14472, !tbaa !2645
  %113 = load i64, i64* %i, align 8, !dbg !14473, !tbaa !3285
  %add196 = add i64 %113, 2, !dbg !14474
  %arrayidx197 = getelementptr inbounds i8, i8* %112, i64 %add196, !dbg !14472, !ctir !180
  %114 = load i8, i8* %arrayidx197, align 1, !dbg !14472, !tbaa !3292
  store i8 %114, i8* %c, align 1, !dbg !14475, !tbaa !3292
  %115 = load i64, i64* %i, align 8, !dbg !14476, !tbaa !3285
  %add198 = add i64 %115, 2, !dbg !14476
  store i64 %add198, i64* %i, align 8, !dbg !14476, !tbaa !3285
  br label %do.body199, !dbg !14477

do.body199:                                       ; preds = %if.end195
  %116 = load i64, i64* %len, align 8, !dbg !14478, !tbaa !3285
  %117 = load i64, i64* %buffersize.addr, align 8, !dbg !14478, !tbaa !3285
  %cmp200 = icmp ult i64 %116, %117, !dbg !14478
  br i1 %cmp200, label %if.then202, label %if.end204, !dbg !14481

if.then202:                                       ; preds = %do.body199
  %118 = load i8*, i8** %buffer.addr, align 8, !dbg !14478, !tbaa !2645
  %119 = load i64, i64* %len, align 8, !dbg !14478, !tbaa !3285
  %arrayidx203 = getelementptr inbounds i8, i8* %118, i64 %119, !dbg !14478, !ctir !9
  store i8 63, i8* %arrayidx203, align 1, !dbg !14478, !tbaa !3292
  br label %if.end204, !dbg !14478

if.end204:                                        ; preds = %if.then202, %do.body199
  %120 = load i64, i64* %len, align 8, !dbg !14481, !tbaa !3285
  %inc205 = add i64 %120, 1, !dbg !14481
  store i64 %inc205, i64* %len, align 8, !dbg !14481, !tbaa !3285
  br label %do.end206, !dbg !14481

do.end206:                                        ; preds = %if.end204
  br label %do.body207, !dbg !14482

do.body207:                                       ; preds = %do.end206
  %121 = load i64, i64* %len, align 8, !dbg !14483, !tbaa !3285
  %122 = load i64, i64* %buffersize.addr, align 8, !dbg !14483, !tbaa !3285
  %cmp208 = icmp ult i64 %121, %122, !dbg !14483
  br i1 %cmp208, label %if.then210, label %if.end212, !dbg !14486

if.then210:                                       ; preds = %do.body207
  %123 = load i8*, i8** %buffer.addr, align 8, !dbg !14483, !tbaa !2645
  %124 = load i64, i64* %len, align 8, !dbg !14483, !tbaa !3285
  %arrayidx211 = getelementptr inbounds i8, i8* %123, i64 %124, !dbg !14483, !ctir !9
  store i8 34, i8* %arrayidx211, align 1, !dbg !14483, !tbaa !3292
  br label %if.end212, !dbg !14483

if.end212:                                        ; preds = %if.then210, %do.body207
  %125 = load i64, i64* %len, align 8, !dbg !14486, !tbaa !3285
  %inc213 = add i64 %125, 1, !dbg !14486
  store i64 %inc213, i64* %len, align 8, !dbg !14486, !tbaa !3285
  br label %do.end214, !dbg !14486

do.end214:                                        ; preds = %if.end212
  br label %do.body215, !dbg !14487

do.body215:                                       ; preds = %do.end214
  %126 = load i64, i64* %len, align 8, !dbg !14488, !tbaa !3285
  %127 = load i64, i64* %buffersize.addr, align 8, !dbg !14488, !tbaa !3285
  %cmp216 = icmp ult i64 %126, %127, !dbg !14488
  br i1 %cmp216, label %if.then218, label %if.end220, !dbg !14491

if.then218:                                       ; preds = %do.body215
  %128 = load i8*, i8** %buffer.addr, align 8, !dbg !14488, !tbaa !2645
  %129 = load i64, i64* %len, align 8, !dbg !14488, !tbaa !3285
  %arrayidx219 = getelementptr inbounds i8, i8* %128, i64 %129, !dbg !14488, !ctir !9
  store i8 34, i8* %arrayidx219, align 1, !dbg !14488, !tbaa !3292
  br label %if.end220, !dbg !14488

if.end220:                                        ; preds = %if.then218, %do.body215
  %130 = load i64, i64* %len, align 8, !dbg !14491, !tbaa !3285
  %inc221 = add i64 %130, 1, !dbg !14491
  store i64 %inc221, i64* %len, align 8, !dbg !14491, !tbaa !3285
  br label %do.end222, !dbg !14491

do.end222:                                        ; preds = %if.end220
  br label %do.body223, !dbg !14492

do.body223:                                       ; preds = %do.end222
  %131 = load i64, i64* %len, align 8, !dbg !14493, !tbaa !3285
  %132 = load i64, i64* %buffersize.addr, align 8, !dbg !14493, !tbaa !3285
  %cmp224 = icmp ult i64 %131, %132, !dbg !14493
  br i1 %cmp224, label %if.then226, label %if.end228, !dbg !14496

if.then226:                                       ; preds = %do.body223
  %133 = load i8*, i8** %buffer.addr, align 8, !dbg !14493, !tbaa !2645
  %134 = load i64, i64* %len, align 8, !dbg !14493, !tbaa !3285
  %arrayidx227 = getelementptr inbounds i8, i8* %133, i64 %134, !dbg !14493, !ctir !9
  store i8 63, i8* %arrayidx227, align 1, !dbg !14493, !tbaa !3292
  br label %if.end228, !dbg !14493

if.end228:                                        ; preds = %if.then226, %do.body223
  %135 = load i64, i64* %len, align 8, !dbg !14496, !tbaa !3285
  %inc229 = add i64 %135, 1, !dbg !14496
  store i64 %inc229, i64* %len, align 8, !dbg !14496, !tbaa !3285
  br label %do.end230, !dbg !14496

do.end230:                                        ; preds = %if.end228
  br label %sw.epilog232, !dbg !14497

sw.default231:                                    ; preds = %if.then188
  br label %sw.epilog232, !dbg !14498

sw.epilog232:                                     ; preds = %sw.default231, %do.end230
  br label %if.end233, !dbg !14499

if.end233:                                        ; preds = %sw.epilog232, %land.lhs.true182, %land.lhs.true178, %sw.bb175
  br label %sw.epilog235, !dbg !14500

sw.default234:                                    ; preds = %sw.bb170
  br label %sw.epilog235, !dbg !14501

sw.epilog235:                                     ; preds = %sw.default234, %if.end233, %if.end174
  br label %sw.epilog564, !dbg !14502

sw.bb236:                                         ; preds = %if.end80
  store i8 97, i8* %esc, align 1, !dbg !14503, !tbaa !3292
  br label %c_escape, !dbg !14504

sw.bb237:                                         ; preds = %if.end80
  store i8 98, i8* %esc, align 1, !dbg !14505, !tbaa !3292
  br label %c_escape, !dbg !14506

sw.bb238:                                         ; preds = %if.end80
  store i8 102, i8* %esc, align 1, !dbg !14507, !tbaa !3292
  br label %c_escape, !dbg !14508

sw.bb239:                                         ; preds = %if.end80
  store i8 110, i8* %esc, align 1, !dbg !14509, !tbaa !3292
  br label %c_and_shell_escape, !dbg !14510

sw.bb240:                                         ; preds = %if.end80
  store i8 114, i8* %esc, align 1, !dbg !14511, !tbaa !3292
  br label %c_and_shell_escape, !dbg !14512

sw.bb241:                                         ; preds = %if.end80
  store i8 116, i8* %esc, align 1, !dbg !14513, !tbaa !3292
  br label %c_and_shell_escape, !dbg !14514

sw.bb242:                                         ; preds = %if.end80
  store i8 118, i8* %esc, align 1, !dbg !14515, !tbaa !3292
  br label %c_escape, !dbg !14516

sw.bb243:                                         ; preds = %if.end80
  %136 = load i8, i8* %c, align 1, !dbg !14517, !tbaa !3292
  store i8 %136, i8* %esc, align 1, !dbg !14518, !tbaa !3292
  %137 = load i32, i32* %quoting_style.addr, align 4, !dbg !14519, !tbaa !3292
  %cmp244 = icmp eq i32 %137, 2, !dbg !14521
  br i1 %cmp244, label %if.then246, label %if.end250, !dbg !14522

if.then246:                                       ; preds = %sw.bb243
  %138 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14523, !tbaa !2739
  %tobool247 = trunc i8 %138 to i1, !dbg !14523
  br i1 %tobool247, label %if.then248, label %if.end249, !dbg !14526

if.then248:                                       ; preds = %if.then246
  br label %force_outer_quoting_style, !dbg !14527

if.end249:                                        ; preds = %if.then246
  br label %store_c, !dbg !14528

if.end250:                                        ; preds = %sw.bb243
  %139 = load i8, i8* %backslash_escapes, align 1, !dbg !14529, !tbaa !2739
  %tobool251 = trunc i8 %139 to i1, !dbg !14529
  br i1 %tobool251, label %land.lhs.true253, label %if.end259, !dbg !14531

land.lhs.true253:                                 ; preds = %if.end250
  %140 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14532, !tbaa !2739
  %tobool254 = trunc i8 %140 to i1, !dbg !14532
  br i1 %tobool254, label %land.lhs.true256, label %if.end259, !dbg !14533

land.lhs.true256:                                 ; preds = %land.lhs.true253
  %141 = load i64, i64* %quote_string_len, align 8, !dbg !14534, !tbaa !3285
  %tobool257 = icmp ne i64 %141, 0, !dbg !14534
  br i1 %tobool257, label %if.then258, label %if.end259, !dbg !14535

if.then258:                                       ; preds = %land.lhs.true256
  br label %store_c, !dbg !14536

if.end259:                                        ; preds = %land.lhs.true256, %land.lhs.true253, %if.end250
  br label %c_and_shell_escape, !dbg !14534

c_and_shell_escape:                               ; preds = %if.end259, %sw.bb241, %sw.bb240, %sw.bb239
  call void @llvm.dbg.label(metadata !14537), !dbg !14538
  %142 = load i32, i32* %quoting_style.addr, align 4, !dbg !14539, !tbaa !3292
  %cmp260 = icmp eq i32 %142, 2, !dbg !14541
  br i1 %cmp260, label %land.lhs.true262, label %if.end266, !dbg !14542

land.lhs.true262:                                 ; preds = %c_and_shell_escape
  %143 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14543, !tbaa !2739
  %tobool263 = trunc i8 %143 to i1, !dbg !14543
  br i1 %tobool263, label %if.then265, label %if.end266, !dbg !14544

if.then265:                                       ; preds = %land.lhs.true262
  br label %force_outer_quoting_style, !dbg !14545

if.end266:                                        ; preds = %land.lhs.true262, %c_and_shell_escape
  br label %c_escape, !dbg !14543

c_escape:                                         ; preds = %if.end266, %sw.bb242, %sw.bb238, %sw.bb237, %sw.bb236
  call void @llvm.dbg.label(metadata !14546), !dbg !14547
  %144 = load i8, i8* %backslash_escapes, align 1, !dbg !14548, !tbaa !2739
  %tobool267 = trunc i8 %144 to i1, !dbg !14548
  br i1 %tobool267, label %if.then268, label %if.end269, !dbg !14550

if.then268:                                       ; preds = %c_escape
  %145 = load i8, i8* %esc, align 1, !dbg !14551, !tbaa !3292
  store i8 %145, i8* %c, align 1, !dbg !14553, !tbaa !3292
  br label %store_escape, !dbg !14554

if.end269:                                        ; preds = %c_escape
  br label %sw.epilog564, !dbg !14555

sw.bb270:                                         ; preds = %if.end80, %if.end80
  %146 = load i64, i64* %argsize.addr, align 8, !dbg !14556, !tbaa !3285
  %cmp271 = icmp eq i64 %146, -1, !dbg !14558
  br i1 %cmp271, label %cond.true273, label %cond.false278, !dbg !14559

cond.true273:                                     ; preds = %sw.bb270
  %147 = load i8*, i8** %arg.addr, align 8, !dbg !14560, !tbaa !2645
  %arrayidx274 = getelementptr inbounds i8, i8* %147, i64 1, !dbg !14560, !ctir !180
  %148 = load i8, i8* %arrayidx274, align 1, !dbg !14560, !tbaa !3292
  %conv275 = sext i8 %148 to i32, !dbg !14560
  %cmp276 = icmp eq i32 %conv275, 0, !dbg !14561
  br i1 %cmp276, label %if.end282, label %if.then281, !dbg !14556

cond.false278:                                    ; preds = %sw.bb270
  %149 = load i64, i64* %argsize.addr, align 8, !dbg !14562, !tbaa !3285
  %cmp279 = icmp eq i64 %149, 1, !dbg !14563
  br i1 %cmp279, label %if.end282, label %if.then281, !dbg !14559

if.then281:                                       ; preds = %cond.false278, %cond.true273
  br label %sw.epilog564, !dbg !14564

if.end282:                                        ; preds = %cond.false278, %cond.true273
  br label %sw.bb283, !dbg !14565

sw.bb283:                                         ; preds = %if.end80, %if.end80, %if.end282
  %150 = load i64, i64* %i, align 8, !dbg !14566, !tbaa !3285
  %cmp284 = icmp ne i64 %150, 0, !dbg !14568
  br i1 %cmp284, label %if.then286, label %if.end287, !dbg !14569

if.then286:                                       ; preds = %sw.bb283
  br label %sw.epilog564, !dbg !14570

if.end287:                                        ; preds = %sw.bb283
  br label %sw.bb288, !dbg !14571

sw.bb288:                                         ; preds = %if.end80, %if.end287
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !14572, !tbaa !2739
  br label %sw.bb289, !dbg !14573

sw.bb289:                                         ; preds = %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %sw.bb288
  %151 = load i32, i32* %quoting_style.addr, align 4, !dbg !14574, !tbaa !3292
  %cmp290 = icmp eq i32 %151, 2, !dbg !14576
  br i1 %cmp290, label %land.lhs.true292, label %if.end296, !dbg !14577

land.lhs.true292:                                 ; preds = %sw.bb289
  %152 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14578, !tbaa !2739
  %tobool293 = trunc i8 %152 to i1, !dbg !14578
  br i1 %tobool293, label %if.then295, label %if.end296, !dbg !14579

if.then295:                                       ; preds = %land.lhs.true292
  br label %force_outer_quoting_style, !dbg !14580

if.end296:                                        ; preds = %land.lhs.true292, %sw.bb289
  br label %sw.epilog564, !dbg !14581

sw.bb297:                                         ; preds = %if.end80
  store i8 1, i8* %encountered_single_quote, align 1, !dbg !14582, !tbaa !2739
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !14583, !tbaa !2739
  %153 = load i32, i32* %quoting_style.addr, align 4, !dbg !14584, !tbaa !3292
  %cmp298 = icmp eq i32 %153, 2, !dbg !14586
  br i1 %cmp298, label %if.then300, label %if.end333, !dbg !14587

if.then300:                                       ; preds = %sw.bb297
  %154 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14588, !tbaa !2739
  %tobool301 = trunc i8 %154 to i1, !dbg !14588
  br i1 %tobool301, label %if.then302, label %if.end303, !dbg !14591

if.then302:                                       ; preds = %if.then300
  br label %force_outer_quoting_style, !dbg !14592

if.end303:                                        ; preds = %if.then300
  %155 = load i64, i64* %buffersize.addr, align 8, !dbg !14593, !tbaa !3285
  %tobool304 = icmp ne i64 %155, 0, !dbg !14593
  br i1 %tobool304, label %land.lhs.true305, label %if.end308, !dbg !14595

land.lhs.true305:                                 ; preds = %if.end303
  %156 = load i64, i64* %orig_buffersize, align 8, !dbg !14596, !tbaa !3285
  %tobool306 = icmp ne i64 %156, 0, !dbg !14596
  br i1 %tobool306, label %if.end308, label %if.then307, !dbg !14597

if.then307:                                       ; preds = %land.lhs.true305
  %157 = load i64, i64* %buffersize.addr, align 8, !dbg !14598, !tbaa !3285
  store i64 %157, i64* %orig_buffersize, align 8, !dbg !14600, !tbaa !3285
  store i64 0, i64* %buffersize.addr, align 8, !dbg !14601, !tbaa !3285
  br label %if.end308, !dbg !14602

if.end308:                                        ; preds = %if.then307, %land.lhs.true305, %if.end303
  br label %do.body309, !dbg !14603

do.body309:                                       ; preds = %if.end308
  %158 = load i64, i64* %len, align 8, !dbg !14604, !tbaa !3285
  %159 = load i64, i64* %buffersize.addr, align 8, !dbg !14604, !tbaa !3285
  %cmp310 = icmp ult i64 %158, %159, !dbg !14604
  br i1 %cmp310, label %if.then312, label %if.end314, !dbg !14607

if.then312:                                       ; preds = %do.body309
  %160 = load i8*, i8** %buffer.addr, align 8, !dbg !14604, !tbaa !2645
  %161 = load i64, i64* %len, align 8, !dbg !14604, !tbaa !3285
  %arrayidx313 = getelementptr inbounds i8, i8* %160, i64 %161, !dbg !14604, !ctir !9
  store i8 39, i8* %arrayidx313, align 1, !dbg !14604, !tbaa !3292
  br label %if.end314, !dbg !14604

if.end314:                                        ; preds = %if.then312, %do.body309
  %162 = load i64, i64* %len, align 8, !dbg !14607, !tbaa !3285
  %inc315 = add i64 %162, 1, !dbg !14607
  store i64 %inc315, i64* %len, align 8, !dbg !14607, !tbaa !3285
  br label %do.end316, !dbg !14607

do.end316:                                        ; preds = %if.end314
  br label %do.body317, !dbg !14608

do.body317:                                       ; preds = %do.end316
  %163 = load i64, i64* %len, align 8, !dbg !14609, !tbaa !3285
  %164 = load i64, i64* %buffersize.addr, align 8, !dbg !14609, !tbaa !3285
  %cmp318 = icmp ult i64 %163, %164, !dbg !14609
  br i1 %cmp318, label %if.then320, label %if.end322, !dbg !14612

if.then320:                                       ; preds = %do.body317
  %165 = load i8*, i8** %buffer.addr, align 8, !dbg !14609, !tbaa !2645
  %166 = load i64, i64* %len, align 8, !dbg !14609, !tbaa !3285
  %arrayidx321 = getelementptr inbounds i8, i8* %165, i64 %166, !dbg !14609, !ctir !9
  store i8 92, i8* %arrayidx321, align 1, !dbg !14609, !tbaa !3292
  br label %if.end322, !dbg !14609

if.end322:                                        ; preds = %if.then320, %do.body317
  %167 = load i64, i64* %len, align 8, !dbg !14612, !tbaa !3285
  %inc323 = add i64 %167, 1, !dbg !14612
  store i64 %inc323, i64* %len, align 8, !dbg !14612, !tbaa !3285
  br label %do.end324, !dbg !14612

do.end324:                                        ; preds = %if.end322
  br label %do.body325, !dbg !14613

do.body325:                                       ; preds = %do.end324
  %168 = load i64, i64* %len, align 8, !dbg !14614, !tbaa !3285
  %169 = load i64, i64* %buffersize.addr, align 8, !dbg !14614, !tbaa !3285
  %cmp326 = icmp ult i64 %168, %169, !dbg !14614
  br i1 %cmp326, label %if.then328, label %if.end330, !dbg !14617

if.then328:                                       ; preds = %do.body325
  %170 = load i8*, i8** %buffer.addr, align 8, !dbg !14614, !tbaa !2645
  %171 = load i64, i64* %len, align 8, !dbg !14614, !tbaa !3285
  %arrayidx329 = getelementptr inbounds i8, i8* %170, i64 %171, !dbg !14614, !ctir !9
  store i8 39, i8* %arrayidx329, align 1, !dbg !14614, !tbaa !3292
  br label %if.end330, !dbg !14614

if.end330:                                        ; preds = %if.then328, %do.body325
  %172 = load i64, i64* %len, align 8, !dbg !14617, !tbaa !3285
  %inc331 = add i64 %172, 1, !dbg !14617
  store i64 %inc331, i64* %len, align 8, !dbg !14617, !tbaa !3285
  br label %do.end332, !dbg !14617

do.end332:                                        ; preds = %if.end330
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !14618, !tbaa !2739
  br label %if.end333, !dbg !14619

if.end333:                                        ; preds = %do.end332, %sw.bb297
  br label %sw.epilog564, !dbg !14620

sw.bb334:                                         ; preds = %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80, %if.end80
  store i8 1, i8* %c_and_shell_quote_compat, align 1, !dbg !14621, !tbaa !2739
  br label %sw.epilog564, !dbg !14622

sw.default335:                                    ; preds = %if.end80
  call void @llvm.dbg.declare(metadata i64* %m, metadata !14623, metadata !DIExpression()), !dbg !14625
  call void @llvm.dbg.declare(metadata i8* %printable, metadata !14626, metadata !DIExpression()), !dbg !14627
  %173 = load i8, i8* %unibyte_locale, align 1, !dbg !14628, !tbaa !2739
  %tobool336 = trunc i8 %173 to i1, !dbg !14628
  br i1 %tobool336, label %if.then337, label %if.else346, !dbg !14630

if.then337:                                       ; preds = %sw.default335
  store i64 1, i64* %m, align 8, !dbg !14631, !tbaa !3285
  %call338 = call i16** @__ctype_b_loc() #16, !dbg !14633
  %174 = load i16*, i16** %call338, align 8, !dbg !14633, !tbaa !2645, !ctir !1108
  %175 = load i8, i8* %c, align 1, !dbg !14633, !tbaa !3292
  %conv339 = zext i8 %175 to i32, !dbg !14633
  %idxprom = sext i32 %conv339 to i64, !dbg !14633
  %arrayidx340 = getelementptr inbounds i16, i16* %174, i64 %idxprom, !dbg !14633, !ctir !1108
  %176 = load i16, i16* %arrayidx340, align 2, !dbg !14633, !tbaa !14634
  %conv341 = zext i16 %176 to i32, !dbg !14633
  %and342 = and i32 %conv341, 16384, !dbg !14633
  %cmp343 = icmp ne i32 %and342, 0, !dbg !14636
  %frombool345 = zext i1 %cmp343 to i8, !dbg !14637
  store i8 %frombool345, i8* %printable, align 1, !dbg !14637, !tbaa !2739
  br label %if.end410, !dbg !14638

if.else346:                                       ; preds = %sw.default335
  call void @llvm.dbg.declare(metadata %struct.savewd* %mbstate, metadata !14639, metadata !DIExpression()), !dbg !14641
  %177 = bitcast %struct.savewd* %mbstate to i8*, !dbg !14642
  call void @llvm.memset.p0i8.i64(i8* align 4 %177, i8 0, i64 8, i1 false), !dbg !14642
  store i64 0, i64* %m, align 8, !dbg !14643, !tbaa !3285
  store i8 1, i8* %printable, align 1, !dbg !14644, !tbaa !2739
  %178 = load i64, i64* %argsize.addr, align 8, !dbg !14645, !tbaa !3285
  %cmp347 = icmp eq i64 %178, -1, !dbg !14647
  br i1 %cmp347, label %if.then349, label %if.end351, !dbg !14648

if.then349:                                       ; preds = %if.else346
  %179 = load i8*, i8** %arg.addr, align 8, !dbg !14649, !tbaa !2645
  %call350 = call i64 @strlen(i8* %179) #14, !dbg !14650
  store i64 %call350, i64* %argsize.addr, align 8, !dbg !14651, !tbaa !3285
  br label %if.end351, !dbg !14652

if.end351:                                        ; preds = %if.then349, %if.else346
  br label %do.body352, !dbg !14653

do.body352:                                       ; preds = %do.cond, %if.end351
  call void @llvm.dbg.declare(metadata i32* %w, metadata !14654, metadata !DIExpression()), !dbg !14656
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !14657, metadata !DIExpression()), !dbg !14658
  %180 = load i8*, i8** %arg.addr, align 8, !dbg !14659, !tbaa !2645
  %181 = load i64, i64* %i, align 8, !dbg !14660, !tbaa !3285
  %182 = load i64, i64* %m, align 8, !dbg !14661, !tbaa !3285
  %add353 = add i64 %181, %182, !dbg !14662
  %arrayidx354 = getelementptr inbounds i8, i8* %180, i64 %add353, !dbg !14659, !ctir !180
  %183 = load i64, i64* %argsize.addr, align 8, !dbg !14663, !tbaa !3285
  %184 = load i64, i64* %i, align 8, !dbg !14664, !tbaa !3285
  %185 = load i64, i64* %m, align 8, !dbg !14665, !tbaa !3285
  %add355 = add i64 %184, %185, !dbg !14666
  %sub = sub i64 %183, %add355, !dbg !14667
  %call356 = call i64 @rpl_mbrtowc(i32* %w, i8* %arrayidx354, i64 %sub, %struct.savewd* %mbstate), !dbg !14668
  store i64 %call356, i64* %bytes, align 8, !dbg !14658, !tbaa !3285
  %186 = load i64, i64* %bytes, align 8, !dbg !14669, !tbaa !3285
  %cmp357 = icmp eq i64 %186, 0, !dbg !14671
  br i1 %cmp357, label %if.then359, label %if.else360, !dbg !14672

if.then359:                                       ; preds = %do.body352
  br label %do.end409, !dbg !14673

if.else360:                                       ; preds = %do.body352
  %187 = load i64, i64* %bytes, align 8, !dbg !14674, !tbaa !3285
  %cmp361 = icmp eq i64 %187, -1, !dbg !14676
  br i1 %cmp361, label %if.then363, label %if.else364, !dbg !14677

if.then363:                                       ; preds = %if.else360
  store i8 0, i8* %printable, align 1, !dbg !14678, !tbaa !2739
  br label %do.end409, !dbg !14680

if.else364:                                       ; preds = %if.else360
  %188 = load i64, i64* %bytes, align 8, !dbg !14681, !tbaa !3285
  %cmp365 = icmp eq i64 %188, -2, !dbg !14683
  br i1 %cmp365, label %if.then367, label %if.else376, !dbg !14684

if.then367:                                       ; preds = %if.else364
  store i8 0, i8* %printable, align 1, !dbg !14685, !tbaa !2739
  br label %while.cond, !dbg !14687

while.cond:                                       ; preds = %while.body, %if.then367
  %189 = load i64, i64* %i, align 8, !dbg !14688, !tbaa !3285
  %190 = load i64, i64* %m, align 8, !dbg !14689, !tbaa !3285
  %add368 = add i64 %189, %190, !dbg !14690
  %191 = load i64, i64* %argsize.addr, align 8, !dbg !14691, !tbaa !3285
  %cmp369 = icmp ult i64 %add368, %191, !dbg !14692
  br i1 %cmp369, label %land.rhs, label %land.end, !dbg !14693

land.rhs:                                         ; preds = %while.cond
  %192 = load i8*, i8** %arg.addr, align 8, !dbg !14694, !tbaa !2645
  %193 = load i64, i64* %i, align 8, !dbg !14695, !tbaa !3285
  %194 = load i64, i64* %m, align 8, !dbg !14696, !tbaa !3285
  %add371 = add i64 %193, %194, !dbg !14697
  %arrayidx372 = getelementptr inbounds i8, i8* %192, i64 %add371, !dbg !14694, !ctir !180
  %195 = load i8, i8* %arrayidx372, align 1, !dbg !14694, !tbaa !3292
  %conv373 = sext i8 %195 to i32, !dbg !14694
  %tobool374 = icmp ne i32 %conv373, 0, !dbg !14693
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %196 = phi i1 [ false, %while.cond ], [ %tobool374, %land.rhs ], !dbg !14698
  br i1 %196, label %while.body, label %while.end, !dbg !14687

while.body:                                       ; preds = %land.end
  %197 = load i64, i64* %m, align 8, !dbg !14699, !tbaa !3285
  %inc375 = add i64 %197, 1, !dbg !14699
  store i64 %inc375, i64* %m, align 8, !dbg !14699, !tbaa !3285
  br label %while.cond, !dbg !14687, !llvm.loop !14700

while.end:                                        ; preds = %land.end
  br label %do.end409, !dbg !14701

if.else376:                                       ; preds = %if.else364
  %198 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14702, !tbaa !2739
  %tobool377 = trunc i8 %198 to i1, !dbg !14702
  br i1 %tobool377, label %land.lhs.true379, label %if.end397, !dbg !14705

land.lhs.true379:                                 ; preds = %if.else376
  %199 = load i32, i32* %quoting_style.addr, align 4, !dbg !14706, !tbaa !3292
  %cmp380 = icmp eq i32 %199, 2, !dbg !14707
  br i1 %cmp380, label %if.then382, label %if.end397, !dbg !14708

if.then382:                                       ; preds = %land.lhs.true379
  call void @llvm.dbg.declare(metadata i64* %j, metadata !14709, metadata !DIExpression()), !dbg !14711
  store i64 1, i64* %j, align 8, !dbg !14712, !tbaa !3285
  br label %for.cond383, !dbg !14714

for.cond383:                                      ; preds = %for.inc394, %if.then382
  %200 = load i64, i64* %j, align 8, !dbg !14715, !tbaa !3285
  %201 = load i64, i64* %bytes, align 8, !dbg !14717, !tbaa !3285
  %cmp384 = icmp ult i64 %200, %201, !dbg !14718
  br i1 %cmp384, label %for.body386, label %for.end396, !dbg !14719

for.body386:                                      ; preds = %for.cond383
  %202 = load i8*, i8** %arg.addr, align 8, !dbg !14720, !tbaa !2645
  %203 = load i64, i64* %i, align 8, !dbg !14721, !tbaa !3285
  %204 = load i64, i64* %m, align 8, !dbg !14722, !tbaa !3285
  %add387 = add i64 %203, %204, !dbg !14723
  %205 = load i64, i64* %j, align 8, !dbg !14724, !tbaa !3285
  %add388 = add i64 %add387, %205, !dbg !14725
  %arrayidx389 = getelementptr inbounds i8, i8* %202, i64 %add388, !dbg !14720, !ctir !180
  %206 = load i8, i8* %arrayidx389, align 1, !dbg !14720, !tbaa !3292
  %conv390 = sext i8 %206 to i32, !dbg !14720
  switch i32 %conv390, label %sw.default392 [
    i32 91, label %sw.bb391
    i32 92, label %sw.bb391
    i32 94, label %sw.bb391
    i32 96, label %sw.bb391
    i32 124, label %sw.bb391
  ], !dbg !14726

sw.bb391:                                         ; preds = %for.body386, %for.body386, %for.body386, %for.body386, %for.body386
  br label %force_outer_quoting_style, !dbg !14727

sw.default392:                                    ; preds = %for.body386
  br label %sw.epilog393, !dbg !14729

sw.epilog393:                                     ; preds = %sw.default392
  br label %for.inc394, !dbg !14730

for.inc394:                                       ; preds = %sw.epilog393
  %207 = load i64, i64* %j, align 8, !dbg !14731, !tbaa !3285
  %inc395 = add i64 %207, 1, !dbg !14731
  store i64 %inc395, i64* %j, align 8, !dbg !14731, !tbaa !3285
  br label %for.cond383, !dbg !14732, !llvm.loop !14733

for.end396:                                       ; preds = %for.cond383
  br label %if.end397, !dbg !14735

if.end397:                                        ; preds = %for.end396, %land.lhs.true379, %if.else376
  %208 = load i32, i32* %w, align 4, !dbg !14736, !tbaa !2632
  %call398 = call i32 @iswprint(i32 %208) #9, !dbg !14738
  %tobool399 = icmp ne i32 %call398, 0, !dbg !14738
  br i1 %tobool399, label %if.end401, label %if.then400, !dbg !14739

if.then400:                                       ; preds = %if.end397
  store i8 0, i8* %printable, align 1, !dbg !14740, !tbaa !2739
  br label %if.end401, !dbg !14741

if.end401:                                        ; preds = %if.then400, %if.end397
  %209 = load i64, i64* %bytes, align 8, !dbg !14742, !tbaa !3285
  %210 = load i64, i64* %m, align 8, !dbg !14743, !tbaa !3285
  %add402 = add i64 %210, %209, !dbg !14743
  store i64 %add402, i64* %m, align 8, !dbg !14743, !tbaa !3285
  br label %if.end403

if.end403:                                        ; preds = %if.end401
  br label %if.end404

if.end404:                                        ; preds = %if.end403
  br label %if.end405

if.end405:                                        ; preds = %if.end404
  br label %do.cond, !dbg !14744

do.cond:                                          ; preds = %if.end405
  %call406 = call i32 @mbsinit(%struct.savewd* %mbstate) #14, !dbg !14745
  %tobool407 = icmp ne i32 %call406, 0, !dbg !14746
  %lnot408 = xor i1 %tobool407, true, !dbg !14746
  br i1 %lnot408, label %do.body352, label %do.end409, !dbg !14744, !llvm.loop !14747

do.end409:                                        ; preds = %do.cond, %while.end, %if.then363, %if.then359
  br label %if.end410

if.end410:                                        ; preds = %do.end409, %if.then337
  %211 = load i8, i8* %printable, align 1, !dbg !14749, !tbaa !2739
  %tobool411 = trunc i8 %211 to i1, !dbg !14749
  %frombool412 = zext i1 %tobool411 to i8, !dbg !14750
  store i8 %frombool412, i8* %c_and_shell_quote_compat, align 1, !dbg !14750, !tbaa !2739
  %212 = load i64, i64* %m, align 8, !dbg !14751, !tbaa !3285
  %cmp413 = icmp ult i64 1, %212, !dbg !14753
  br i1 %cmp413, label %if.then419, label %lor.lhs.false, !dbg !14754

lor.lhs.false:                                    ; preds = %if.end410
  %213 = load i8, i8* %backslash_escapes, align 1, !dbg !14755, !tbaa !2739
  %tobool415 = trunc i8 %213 to i1, !dbg !14755
  br i1 %tobool415, label %land.lhs.true417, label %if.end563, !dbg !14756

land.lhs.true417:                                 ; preds = %lor.lhs.false
  %214 = load i8, i8* %printable, align 1, !dbg !14757, !tbaa !2739
  %tobool418 = trunc i8 %214 to i1, !dbg !14757
  br i1 %tobool418, label %if.end563, label %if.then419, !dbg !14758

if.then419:                                       ; preds = %land.lhs.true417, %if.end410
  call void @llvm.dbg.declare(metadata i64* %ilim, metadata !14759, metadata !DIExpression()), !dbg !14761
  %215 = load i64, i64* %i, align 8, !dbg !14762, !tbaa !3285
  %216 = load i64, i64* %m, align 8, !dbg !14763, !tbaa !3285
  %add420 = add i64 %215, %216, !dbg !14764
  store i64 %add420, i64* %ilim, align 8, !dbg !14761, !tbaa !3285
  br label %for.cond421, !dbg !14765

for.cond421:                                      ; preds = %do.end559, %if.then419
  %217 = load i8, i8* %backslash_escapes, align 1, !dbg !14766, !tbaa !2739
  %tobool422 = trunc i8 %217 to i1, !dbg !14766
  br i1 %tobool422, label %land.lhs.true424, label %if.else505, !dbg !14771

land.lhs.true424:                                 ; preds = %for.cond421
  %218 = load i8, i8* %printable, align 1, !dbg !14772, !tbaa !2739
  %tobool425 = trunc i8 %218 to i1, !dbg !14772
  br i1 %tobool425, label %if.else505, label %if.then426, !dbg !14773

if.then426:                                       ; preds = %land.lhs.true424
  br label %do.body427, !dbg !14774

do.body427:                                       ; preds = %if.then426
  %219 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14776, !tbaa !2739
  %tobool428 = trunc i8 %219 to i1, !dbg !14776
  br i1 %tobool428, label %if.then429, label %if.end430, !dbg !14779

if.then429:                                       ; preds = %do.body427
  br label %force_outer_quoting_style, !dbg !14776

if.end430:                                        ; preds = %do.body427
  store i8 1, i8* %escaping, align 1, !dbg !14779, !tbaa !2739
  %220 = load i32, i32* %quoting_style.addr, align 4, !dbg !14780, !tbaa !3292
  %cmp431 = icmp eq i32 %220, 2, !dbg !14780
  br i1 %cmp431, label %land.lhs.true433, label %if.end463, !dbg !14780

land.lhs.true433:                                 ; preds = %if.end430
  %221 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !14780, !tbaa !2739
  %tobool434 = trunc i8 %221 to i1, !dbg !14780
  br i1 %tobool434, label %if.end463, label %if.then435, !dbg !14779

if.then435:                                       ; preds = %land.lhs.true433
  br label %do.body436, !dbg !14782

do.body436:                                       ; preds = %if.then435
  %222 = load i64, i64* %len, align 8, !dbg !14784, !tbaa !3285
  %223 = load i64, i64* %buffersize.addr, align 8, !dbg !14784, !tbaa !3285
  %cmp437 = icmp ult i64 %222, %223, !dbg !14784
  br i1 %cmp437, label %if.then439, label %if.end441, !dbg !14787

if.then439:                                       ; preds = %do.body436
  %224 = load i8*, i8** %buffer.addr, align 8, !dbg !14784, !tbaa !2645
  %225 = load i64, i64* %len, align 8, !dbg !14784, !tbaa !3285
  %arrayidx440 = getelementptr inbounds i8, i8* %224, i64 %225, !dbg !14784, !ctir !9
  store i8 39, i8* %arrayidx440, align 1, !dbg !14784, !tbaa !3292
  br label %if.end441, !dbg !14784

if.end441:                                        ; preds = %if.then439, %do.body436
  %226 = load i64, i64* %len, align 8, !dbg !14787, !tbaa !3285
  %inc442 = add i64 %226, 1, !dbg !14787
  store i64 %inc442, i64* %len, align 8, !dbg !14787, !tbaa !3285
  br label %do.end444, !dbg !14787

do.end444:                                        ; preds = %if.end441
  br label %do.body445, !dbg !14782

do.body445:                                       ; preds = %do.end444
  %227 = load i64, i64* %len, align 8, !dbg !14788, !tbaa !3285
  %228 = load i64, i64* %buffersize.addr, align 8, !dbg !14788, !tbaa !3285
  %cmp446 = icmp ult i64 %227, %228, !dbg !14788
  br i1 %cmp446, label %if.then448, label %if.end450, !dbg !14791

if.then448:                                       ; preds = %do.body445
  %229 = load i8*, i8** %buffer.addr, align 8, !dbg !14788, !tbaa !2645
  %230 = load i64, i64* %len, align 8, !dbg !14788, !tbaa !3285
  %arrayidx449 = getelementptr inbounds i8, i8* %229, i64 %230, !dbg !14788, !ctir !9
  store i8 36, i8* %arrayidx449, align 1, !dbg !14788, !tbaa !3292
  br label %if.end450, !dbg !14788

if.end450:                                        ; preds = %if.then448, %do.body445
  %231 = load i64, i64* %len, align 8, !dbg !14791, !tbaa !3285
  %inc451 = add i64 %231, 1, !dbg !14791
  store i64 %inc451, i64* %len, align 8, !dbg !14791, !tbaa !3285
  br label %do.end453, !dbg !14791

do.end453:                                        ; preds = %if.end450
  br label %do.body454, !dbg !14782

do.body454:                                       ; preds = %do.end453
  %232 = load i64, i64* %len, align 8, !dbg !14792, !tbaa !3285
  %233 = load i64, i64* %buffersize.addr, align 8, !dbg !14792, !tbaa !3285
  %cmp455 = icmp ult i64 %232, %233, !dbg !14792
  br i1 %cmp455, label %if.then457, label %if.end459, !dbg !14795

if.then457:                                       ; preds = %do.body454
  %234 = load i8*, i8** %buffer.addr, align 8, !dbg !14792, !tbaa !2645
  %235 = load i64, i64* %len, align 8, !dbg !14792, !tbaa !3285
  %arrayidx458 = getelementptr inbounds i8, i8* %234, i64 %235, !dbg !14792, !ctir !9
  store i8 39, i8* %arrayidx458, align 1, !dbg !14792, !tbaa !3292
  br label %if.end459, !dbg !14792

if.end459:                                        ; preds = %if.then457, %do.body454
  %236 = load i64, i64* %len, align 8, !dbg !14795, !tbaa !3285
  %inc460 = add i64 %236, 1, !dbg !14795
  store i64 %inc460, i64* %len, align 8, !dbg !14795, !tbaa !3285
  br label %do.end462, !dbg !14795

do.end462:                                        ; preds = %if.end459
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !14782, !tbaa !2739
  br label %if.end463, !dbg !14782

if.end463:                                        ; preds = %do.end462, %land.lhs.true433, %if.end430
  br label %do.body464, !dbg !14779

do.body464:                                       ; preds = %if.end463
  %237 = load i64, i64* %len, align 8, !dbg !14796, !tbaa !3285
  %238 = load i64, i64* %buffersize.addr, align 8, !dbg !14796, !tbaa !3285
  %cmp465 = icmp ult i64 %237, %238, !dbg !14796
  br i1 %cmp465, label %if.then467, label %if.end469, !dbg !14799

if.then467:                                       ; preds = %do.body464
  %239 = load i8*, i8** %buffer.addr, align 8, !dbg !14796, !tbaa !2645
  %240 = load i64, i64* %len, align 8, !dbg !14796, !tbaa !3285
  %arrayidx468 = getelementptr inbounds i8, i8* %239, i64 %240, !dbg !14796, !ctir !9
  store i8 92, i8* %arrayidx468, align 1, !dbg !14796, !tbaa !3292
  br label %if.end469, !dbg !14796

if.end469:                                        ; preds = %if.then467, %do.body464
  %241 = load i64, i64* %len, align 8, !dbg !14799, !tbaa !3285
  %inc470 = add i64 %241, 1, !dbg !14799
  store i64 %inc470, i64* %len, align 8, !dbg !14799, !tbaa !3285
  br label %do.end472, !dbg !14799

do.end472:                                        ; preds = %if.end469
  br label %do.end474, !dbg !14779

do.end474:                                        ; preds = %do.end472
  br label %do.body475, !dbg !14800

do.body475:                                       ; preds = %do.end474
  %242 = load i64, i64* %len, align 8, !dbg !14801, !tbaa !3285
  %243 = load i64, i64* %buffersize.addr, align 8, !dbg !14801, !tbaa !3285
  %cmp476 = icmp ult i64 %242, %243, !dbg !14801
  br i1 %cmp476, label %if.then478, label %if.end483, !dbg !14804

if.then478:                                       ; preds = %do.body475
  %244 = load i8, i8* %c, align 1, !dbg !14801, !tbaa !3292
  %conv479 = zext i8 %244 to i32, !dbg !14801
  %shr = ashr i32 %conv479, 6, !dbg !14801
  %add480 = add nsw i32 48, %shr, !dbg !14801
  %conv481 = trunc i32 %add480 to i8, !dbg !14801
  %245 = load i8*, i8** %buffer.addr, align 8, !dbg !14801, !tbaa !2645
  %246 = load i64, i64* %len, align 8, !dbg !14801, !tbaa !3285
  %arrayidx482 = getelementptr inbounds i8, i8* %245, i64 %246, !dbg !14801, !ctir !9
  store i8 %conv481, i8* %arrayidx482, align 1, !dbg !14801, !tbaa !3292
  br label %if.end483, !dbg !14801

if.end483:                                        ; preds = %if.then478, %do.body475
  %247 = load i64, i64* %len, align 8, !dbg !14804, !tbaa !3285
  %inc484 = add i64 %247, 1, !dbg !14804
  store i64 %inc484, i64* %len, align 8, !dbg !14804, !tbaa !3285
  br label %do.end486, !dbg !14804

do.end486:                                        ; preds = %if.end483
  br label %do.body487, !dbg !14805

do.body487:                                       ; preds = %do.end486
  %248 = load i64, i64* %len, align 8, !dbg !14806, !tbaa !3285
  %249 = load i64, i64* %buffersize.addr, align 8, !dbg !14806, !tbaa !3285
  %cmp488 = icmp ult i64 %248, %249, !dbg !14806
  br i1 %cmp488, label %if.then490, label %if.end497, !dbg !14809

if.then490:                                       ; preds = %do.body487
  %250 = load i8, i8* %c, align 1, !dbg !14806, !tbaa !3292
  %conv491 = zext i8 %250 to i32, !dbg !14806
  %shr492 = ashr i32 %conv491, 3, !dbg !14806
  %and493 = and i32 %shr492, 7, !dbg !14806
  %add494 = add nsw i32 48, %and493, !dbg !14806
  %conv495 = trunc i32 %add494 to i8, !dbg !14806
  %251 = load i8*, i8** %buffer.addr, align 8, !dbg !14806, !tbaa !2645
  %252 = load i64, i64* %len, align 8, !dbg !14806, !tbaa !3285
  %arrayidx496 = getelementptr inbounds i8, i8* %251, i64 %252, !dbg !14806, !ctir !9
  store i8 %conv495, i8* %arrayidx496, align 1, !dbg !14806, !tbaa !3292
  br label %if.end497, !dbg !14806

if.end497:                                        ; preds = %if.then490, %do.body487
  %253 = load i64, i64* %len, align 8, !dbg !14809, !tbaa !3285
  %inc498 = add i64 %253, 1, !dbg !14809
  store i64 %inc498, i64* %len, align 8, !dbg !14809, !tbaa !3285
  br label %do.end500, !dbg !14809

do.end500:                                        ; preds = %if.end497
  %254 = load i8, i8* %c, align 1, !dbg !14810, !tbaa !3292
  %conv501 = zext i8 %254 to i32, !dbg !14810
  %and502 = and i32 %conv501, 7, !dbg !14811
  %add503 = add nsw i32 48, %and502, !dbg !14812
  %conv504 = trunc i32 %add503 to i8, !dbg !14813
  store i8 %conv504, i8* %c, align 1, !dbg !14814, !tbaa !3292
  br label %if.end518, !dbg !14815

if.else505:                                       ; preds = %land.lhs.true424, %for.cond421
  %255 = load i8, i8* %is_right_quote, align 1, !dbg !14816, !tbaa !2739
  %tobool506 = trunc i8 %255 to i1, !dbg !14816
  br i1 %tobool506, label %if.then507, label %if.end517, !dbg !14818

if.then507:                                       ; preds = %if.else505
  br label %do.body508, !dbg !14819

do.body508:                                       ; preds = %if.then507
  %256 = load i64, i64* %len, align 8, !dbg !14821, !tbaa !3285
  %257 = load i64, i64* %buffersize.addr, align 8, !dbg !14821, !tbaa !3285
  %cmp509 = icmp ult i64 %256, %257, !dbg !14821
  br i1 %cmp509, label %if.then511, label %if.end513, !dbg !14824

if.then511:                                       ; preds = %do.body508
  %258 = load i8*, i8** %buffer.addr, align 8, !dbg !14821, !tbaa !2645
  %259 = load i64, i64* %len, align 8, !dbg !14821, !tbaa !3285
  %arrayidx512 = getelementptr inbounds i8, i8* %258, i64 %259, !dbg !14821, !ctir !9
  store i8 92, i8* %arrayidx512, align 1, !dbg !14821, !tbaa !3292
  br label %if.end513, !dbg !14821

if.end513:                                        ; preds = %if.then511, %do.body508
  %260 = load i64, i64* %len, align 8, !dbg !14824, !tbaa !3285
  %inc514 = add i64 %260, 1, !dbg !14824
  store i64 %inc514, i64* %len, align 8, !dbg !14824, !tbaa !3285
  br label %do.end516, !dbg !14824

do.end516:                                        ; preds = %if.end513
  store i8 0, i8* %is_right_quote, align 1, !dbg !14825, !tbaa !2739
  br label %if.end517, !dbg !14826

if.end517:                                        ; preds = %do.end516, %if.else505
  br label %if.end518

if.end518:                                        ; preds = %if.end517, %do.end500
  %261 = load i64, i64* %ilim, align 8, !dbg !14827, !tbaa !3285
  %262 = load i64, i64* %i, align 8, !dbg !14829, !tbaa !3285
  %add519 = add i64 %262, 1, !dbg !14830
  %cmp520 = icmp ule i64 %261, %add519, !dbg !14831
  br i1 %cmp520, label %if.then522, label %if.end523, !dbg !14832

if.then522:                                       ; preds = %if.end518
  br label %for.end562, !dbg !14833

if.end523:                                        ; preds = %if.end518
  br label %do.body524, !dbg !14834

do.body524:                                       ; preds = %if.end523
  %263 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !14835, !tbaa !2739
  %tobool525 = trunc i8 %263 to i1, !dbg !14835
  br i1 %tobool525, label %land.lhs.true527, label %if.end548, !dbg !14835

land.lhs.true527:                                 ; preds = %do.body524
  %264 = load i8, i8* %escaping, align 1, !dbg !14835, !tbaa !2739
  %tobool528 = trunc i8 %264 to i1, !dbg !14835
  br i1 %tobool528, label %if.end548, label %if.then529, !dbg !14838

if.then529:                                       ; preds = %land.lhs.true527
  br label %do.body530, !dbg !14839

do.body530:                                       ; preds = %if.then529
  %265 = load i64, i64* %len, align 8, !dbg !14841, !tbaa !3285
  %266 = load i64, i64* %buffersize.addr, align 8, !dbg !14841, !tbaa !3285
  %cmp531 = icmp ult i64 %265, %266, !dbg !14841
  br i1 %cmp531, label %if.then533, label %if.end535, !dbg !14844

if.then533:                                       ; preds = %do.body530
  %267 = load i8*, i8** %buffer.addr, align 8, !dbg !14841, !tbaa !2645
  %268 = load i64, i64* %len, align 8, !dbg !14841, !tbaa !3285
  %arrayidx534 = getelementptr inbounds i8, i8* %267, i64 %268, !dbg !14841, !ctir !9
  store i8 39, i8* %arrayidx534, align 1, !dbg !14841, !tbaa !3292
  br label %if.end535, !dbg !14841

if.end535:                                        ; preds = %if.then533, %do.body530
  %269 = load i64, i64* %len, align 8, !dbg !14844, !tbaa !3285
  %inc536 = add i64 %269, 1, !dbg !14844
  store i64 %inc536, i64* %len, align 8, !dbg !14844, !tbaa !3285
  br label %do.end538, !dbg !14844

do.end538:                                        ; preds = %if.end535
  br label %do.body539, !dbg !14839

do.body539:                                       ; preds = %do.end538
  %270 = load i64, i64* %len, align 8, !dbg !14845, !tbaa !3285
  %271 = load i64, i64* %buffersize.addr, align 8, !dbg !14845, !tbaa !3285
  %cmp540 = icmp ult i64 %270, %271, !dbg !14845
  br i1 %cmp540, label %if.then542, label %if.end544, !dbg !14848

if.then542:                                       ; preds = %do.body539
  %272 = load i8*, i8** %buffer.addr, align 8, !dbg !14845, !tbaa !2645
  %273 = load i64, i64* %len, align 8, !dbg !14845, !tbaa !3285
  %arrayidx543 = getelementptr inbounds i8, i8* %272, i64 %273, !dbg !14845, !ctir !9
  store i8 39, i8* %arrayidx543, align 1, !dbg !14845, !tbaa !3292
  br label %if.end544, !dbg !14845

if.end544:                                        ; preds = %if.then542, %do.body539
  %274 = load i64, i64* %len, align 8, !dbg !14848, !tbaa !3285
  %inc545 = add i64 %274, 1, !dbg !14848
  store i64 %inc545, i64* %len, align 8, !dbg !14848, !tbaa !3285
  br label %do.end547, !dbg !14848

do.end547:                                        ; preds = %if.end544
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !14839, !tbaa !2739
  br label %if.end548, !dbg !14839

if.end548:                                        ; preds = %do.end547, %land.lhs.true527, %do.body524
  br label %do.end550, !dbg !14838

do.end550:                                        ; preds = %if.end548
  br label %do.body551, !dbg !14849

do.body551:                                       ; preds = %do.end550
  %275 = load i64, i64* %len, align 8, !dbg !14850, !tbaa !3285
  %276 = load i64, i64* %buffersize.addr, align 8, !dbg !14850, !tbaa !3285
  %cmp552 = icmp ult i64 %275, %276, !dbg !14850
  br i1 %cmp552, label %if.then554, label %if.end556, !dbg !14853

if.then554:                                       ; preds = %do.body551
  %277 = load i8, i8* %c, align 1, !dbg !14850, !tbaa !3292
  %278 = load i8*, i8** %buffer.addr, align 8, !dbg !14850, !tbaa !2645
  %279 = load i64, i64* %len, align 8, !dbg !14850, !tbaa !3285
  %arrayidx555 = getelementptr inbounds i8, i8* %278, i64 %279, !dbg !14850, !ctir !9
  store i8 %277, i8* %arrayidx555, align 1, !dbg !14850, !tbaa !3292
  br label %if.end556, !dbg !14850

if.end556:                                        ; preds = %if.then554, %do.body551
  %280 = load i64, i64* %len, align 8, !dbg !14853, !tbaa !3285
  %inc557 = add i64 %280, 1, !dbg !14853
  store i64 %inc557, i64* %len, align 8, !dbg !14853, !tbaa !3285
  br label %do.end559, !dbg !14853

do.end559:                                        ; preds = %if.end556
  %281 = load i8*, i8** %arg.addr, align 8, !dbg !14854, !tbaa !2645
  %282 = load i64, i64* %i, align 8, !dbg !14855, !tbaa !3285
  %inc560 = add i64 %282, 1, !dbg !14855
  store i64 %inc560, i64* %i, align 8, !dbg !14855, !tbaa !3285
  %arrayidx561 = getelementptr inbounds i8, i8* %281, i64 %inc560, !dbg !14854, !ctir !180
  %283 = load i8, i8* %arrayidx561, align 1, !dbg !14854, !tbaa !3292
  store i8 %283, i8* %c, align 1, !dbg !14856, !tbaa !3292
  br label %for.cond421, !dbg !14857, !llvm.loop !14858

for.end562:                                       ; preds = %if.then522
  br label %store_c, !dbg !14861

if.end563:                                        ; preds = %land.lhs.true417, %lor.lhs.false
  br label %sw.epilog564, !dbg !14862

sw.epilog564:                                     ; preds = %if.end563, %sw.bb334, %if.end333, %if.end296, %if.then286, %if.then281, %if.end269, %sw.epilog235, %if.end169
  %284 = load i8, i8* %backslash_escapes, align 1, !dbg !14863, !tbaa !2739
  %tobool565 = trunc i8 %284 to i1, !dbg !14863
  br i1 %tobool565, label %land.lhs.true567, label %lor.lhs.false570, !dbg !14865

land.lhs.true567:                                 ; preds = %sw.epilog564
  %285 = load i32, i32* %quoting_style.addr, align 4, !dbg !14866, !tbaa !3292
  %cmp568 = icmp ne i32 %285, 2, !dbg !14867
  br i1 %cmp568, label %land.lhs.true573, label %lor.lhs.false570, !dbg !14868

lor.lhs.false570:                                 ; preds = %land.lhs.true567, %sw.epilog564
  %286 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14869, !tbaa !2739
  %tobool571 = trunc i8 %286 to i1, !dbg !14869
  br i1 %tobool571, label %land.lhs.true573, label %land.lhs.true582, !dbg !14870

land.lhs.true573:                                 ; preds = %lor.lhs.false570, %land.lhs.true567
  %287 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !14871, !tbaa !2645
  %tobool574 = icmp ne i32* %287, null, !dbg !14871
  br i1 %tobool574, label %land.lhs.true575, label %land.lhs.true582, !dbg !14872

land.lhs.true575:                                 ; preds = %land.lhs.true573
  %288 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !14873, !tbaa !2645
  %289 = load i8, i8* %c, align 1, !dbg !14874, !tbaa !3292
  %conv576 = zext i8 %289 to i64, !dbg !14874
  %div = udiv i64 %conv576, 32, !dbg !14875
  %arrayidx577 = getelementptr inbounds i32, i32* %288, i64 %div, !dbg !14873, !ctir !1106
  %290 = load i32, i32* %arrayidx577, align 4, !dbg !14873, !tbaa !2632
  %291 = load i8, i8* %c, align 1, !dbg !14876, !tbaa !3292
  %conv578 = zext i8 %291 to i64, !dbg !14876
  %rem = urem i64 %conv578, 32, !dbg !14877
  %sh_prom = trunc i64 %rem to i32, !dbg !14878
  %shr579 = lshr i32 %290, %sh_prom, !dbg !14878
  %and580 = and i32 %shr579, 1, !dbg !14879
  %tobool581 = icmp ne i32 %and580, 0, !dbg !14879
  br i1 %tobool581, label %if.end585, label %land.lhs.true582, !dbg !14880

land.lhs.true582:                                 ; preds = %land.lhs.true575, %land.lhs.true573, %lor.lhs.false570
  %292 = load i8, i8* %is_right_quote, align 1, !dbg !14881, !tbaa !2739
  %tobool583 = trunc i8 %292 to i1, !dbg !14881
  br i1 %tobool583, label %if.end585, label %if.then584, !dbg !14882

if.then584:                                       ; preds = %land.lhs.true582
  br label %store_c, !dbg !14883

if.end585:                                        ; preds = %land.lhs.true582, %land.lhs.true575
  br label %store_escape, !dbg !14881

store_escape:                                     ; preds = %if.end585, %if.then268
  call void @llvm.dbg.label(metadata !14884), !dbg !14885
  br label %do.body586, !dbg !14886

do.body586:                                       ; preds = %store_escape
  %293 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14887, !tbaa !2739
  %tobool587 = trunc i8 %293 to i1, !dbg !14887
  br i1 %tobool587, label %if.then588, label %if.end589, !dbg !14890

if.then588:                                       ; preds = %do.body586
  br label %force_outer_quoting_style, !dbg !14887

if.end589:                                        ; preds = %do.body586
  store i8 1, i8* %escaping, align 1, !dbg !14890, !tbaa !2739
  %294 = load i32, i32* %quoting_style.addr, align 4, !dbg !14891, !tbaa !3292
  %cmp590 = icmp eq i32 %294, 2, !dbg !14891
  br i1 %cmp590, label %land.lhs.true592, label %if.end622, !dbg !14891

land.lhs.true592:                                 ; preds = %if.end589
  %295 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !14891, !tbaa !2739
  %tobool593 = trunc i8 %295 to i1, !dbg !14891
  br i1 %tobool593, label %if.end622, label %if.then594, !dbg !14890

if.then594:                                       ; preds = %land.lhs.true592
  br label %do.body595, !dbg !14893

do.body595:                                       ; preds = %if.then594
  %296 = load i64, i64* %len, align 8, !dbg !14895, !tbaa !3285
  %297 = load i64, i64* %buffersize.addr, align 8, !dbg !14895, !tbaa !3285
  %cmp596 = icmp ult i64 %296, %297, !dbg !14895
  br i1 %cmp596, label %if.then598, label %if.end600, !dbg !14898

if.then598:                                       ; preds = %do.body595
  %298 = load i8*, i8** %buffer.addr, align 8, !dbg !14895, !tbaa !2645
  %299 = load i64, i64* %len, align 8, !dbg !14895, !tbaa !3285
  %arrayidx599 = getelementptr inbounds i8, i8* %298, i64 %299, !dbg !14895, !ctir !9
  store i8 39, i8* %arrayidx599, align 1, !dbg !14895, !tbaa !3292
  br label %if.end600, !dbg !14895

if.end600:                                        ; preds = %if.then598, %do.body595
  %300 = load i64, i64* %len, align 8, !dbg !14898, !tbaa !3285
  %inc601 = add i64 %300, 1, !dbg !14898
  store i64 %inc601, i64* %len, align 8, !dbg !14898, !tbaa !3285
  br label %do.end603, !dbg !14898

do.end603:                                        ; preds = %if.end600
  br label %do.body604, !dbg !14893

do.body604:                                       ; preds = %do.end603
  %301 = load i64, i64* %len, align 8, !dbg !14899, !tbaa !3285
  %302 = load i64, i64* %buffersize.addr, align 8, !dbg !14899, !tbaa !3285
  %cmp605 = icmp ult i64 %301, %302, !dbg !14899
  br i1 %cmp605, label %if.then607, label %if.end609, !dbg !14902

if.then607:                                       ; preds = %do.body604
  %303 = load i8*, i8** %buffer.addr, align 8, !dbg !14899, !tbaa !2645
  %304 = load i64, i64* %len, align 8, !dbg !14899, !tbaa !3285
  %arrayidx608 = getelementptr inbounds i8, i8* %303, i64 %304, !dbg !14899, !ctir !9
  store i8 36, i8* %arrayidx608, align 1, !dbg !14899, !tbaa !3292
  br label %if.end609, !dbg !14899

if.end609:                                        ; preds = %if.then607, %do.body604
  %305 = load i64, i64* %len, align 8, !dbg !14902, !tbaa !3285
  %inc610 = add i64 %305, 1, !dbg !14902
  store i64 %inc610, i64* %len, align 8, !dbg !14902, !tbaa !3285
  br label %do.end612, !dbg !14902

do.end612:                                        ; preds = %if.end609
  br label %do.body613, !dbg !14893

do.body613:                                       ; preds = %do.end612
  %306 = load i64, i64* %len, align 8, !dbg !14903, !tbaa !3285
  %307 = load i64, i64* %buffersize.addr, align 8, !dbg !14903, !tbaa !3285
  %cmp614 = icmp ult i64 %306, %307, !dbg !14903
  br i1 %cmp614, label %if.then616, label %if.end618, !dbg !14906

if.then616:                                       ; preds = %do.body613
  %308 = load i8*, i8** %buffer.addr, align 8, !dbg !14903, !tbaa !2645
  %309 = load i64, i64* %len, align 8, !dbg !14903, !tbaa !3285
  %arrayidx617 = getelementptr inbounds i8, i8* %308, i64 %309, !dbg !14903, !ctir !9
  store i8 39, i8* %arrayidx617, align 1, !dbg !14903, !tbaa !3292
  br label %if.end618, !dbg !14903

if.end618:                                        ; preds = %if.then616, %do.body613
  %310 = load i64, i64* %len, align 8, !dbg !14906, !tbaa !3285
  %inc619 = add i64 %310, 1, !dbg !14906
  store i64 %inc619, i64* %len, align 8, !dbg !14906, !tbaa !3285
  br label %do.end621, !dbg !14906

do.end621:                                        ; preds = %if.end618
  store i8 1, i8* %pending_shell_escape_end, align 1, !dbg !14893, !tbaa !2739
  br label %if.end622, !dbg !14893

if.end622:                                        ; preds = %do.end621, %land.lhs.true592, %if.end589
  br label %do.body623, !dbg !14890

do.body623:                                       ; preds = %if.end622
  %311 = load i64, i64* %len, align 8, !dbg !14907, !tbaa !3285
  %312 = load i64, i64* %buffersize.addr, align 8, !dbg !14907, !tbaa !3285
  %cmp624 = icmp ult i64 %311, %312, !dbg !14907
  br i1 %cmp624, label %if.then626, label %if.end628, !dbg !14910

if.then626:                                       ; preds = %do.body623
  %313 = load i8*, i8** %buffer.addr, align 8, !dbg !14907, !tbaa !2645
  %314 = load i64, i64* %len, align 8, !dbg !14907, !tbaa !3285
  %arrayidx627 = getelementptr inbounds i8, i8* %313, i64 %314, !dbg !14907, !ctir !9
  store i8 92, i8* %arrayidx627, align 1, !dbg !14907, !tbaa !3292
  br label %if.end628, !dbg !14907

if.end628:                                        ; preds = %if.then626, %do.body623
  %315 = load i64, i64* %len, align 8, !dbg !14910, !tbaa !3285
  %inc629 = add i64 %315, 1, !dbg !14910
  store i64 %inc629, i64* %len, align 8, !dbg !14910, !tbaa !3285
  br label %do.end631, !dbg !14910

do.end631:                                        ; preds = %if.end628
  br label %do.end633, !dbg !14890

do.end633:                                        ; preds = %do.end631
  br label %store_c, !dbg !14890

store_c:                                          ; preds = %do.end633, %if.then584, %for.end562, %if.then258, %if.end249
  call void @llvm.dbg.label(metadata !14911), !dbg !14912
  br label %do.body634, !dbg !14913

do.body634:                                       ; preds = %store_c
  %316 = load i8, i8* %pending_shell_escape_end, align 1, !dbg !14914, !tbaa !2739
  %tobool635 = trunc i8 %316 to i1, !dbg !14914
  br i1 %tobool635, label %land.lhs.true637, label %if.end658, !dbg !14914

land.lhs.true637:                                 ; preds = %do.body634
  %317 = load i8, i8* %escaping, align 1, !dbg !14914, !tbaa !2739
  %tobool638 = trunc i8 %317 to i1, !dbg !14914
  br i1 %tobool638, label %if.end658, label %if.then639, !dbg !14917

if.then639:                                       ; preds = %land.lhs.true637
  br label %do.body640, !dbg !14918

do.body640:                                       ; preds = %if.then639
  %318 = load i64, i64* %len, align 8, !dbg !14920, !tbaa !3285
  %319 = load i64, i64* %buffersize.addr, align 8, !dbg !14920, !tbaa !3285
  %cmp641 = icmp ult i64 %318, %319, !dbg !14920
  br i1 %cmp641, label %if.then643, label %if.end645, !dbg !14923

if.then643:                                       ; preds = %do.body640
  %320 = load i8*, i8** %buffer.addr, align 8, !dbg !14920, !tbaa !2645
  %321 = load i64, i64* %len, align 8, !dbg !14920, !tbaa !3285
  %arrayidx644 = getelementptr inbounds i8, i8* %320, i64 %321, !dbg !14920, !ctir !9
  store i8 39, i8* %arrayidx644, align 1, !dbg !14920, !tbaa !3292
  br label %if.end645, !dbg !14920

if.end645:                                        ; preds = %if.then643, %do.body640
  %322 = load i64, i64* %len, align 8, !dbg !14923, !tbaa !3285
  %inc646 = add i64 %322, 1, !dbg !14923
  store i64 %inc646, i64* %len, align 8, !dbg !14923, !tbaa !3285
  br label %do.end648, !dbg !14923

do.end648:                                        ; preds = %if.end645
  br label %do.body649, !dbg !14918

do.body649:                                       ; preds = %do.end648
  %323 = load i64, i64* %len, align 8, !dbg !14924, !tbaa !3285
  %324 = load i64, i64* %buffersize.addr, align 8, !dbg !14924, !tbaa !3285
  %cmp650 = icmp ult i64 %323, %324, !dbg !14924
  br i1 %cmp650, label %if.then652, label %if.end654, !dbg !14927

if.then652:                                       ; preds = %do.body649
  %325 = load i8*, i8** %buffer.addr, align 8, !dbg !14924, !tbaa !2645
  %326 = load i64, i64* %len, align 8, !dbg !14924, !tbaa !3285
  %arrayidx653 = getelementptr inbounds i8, i8* %325, i64 %326, !dbg !14924, !ctir !9
  store i8 39, i8* %arrayidx653, align 1, !dbg !14924, !tbaa !3292
  br label %if.end654, !dbg !14924

if.end654:                                        ; preds = %if.then652, %do.body649
  %327 = load i64, i64* %len, align 8, !dbg !14927, !tbaa !3285
  %inc655 = add i64 %327, 1, !dbg !14927
  store i64 %inc655, i64* %len, align 8, !dbg !14927, !tbaa !3285
  br label %do.end657, !dbg !14927

do.end657:                                        ; preds = %if.end654
  store i8 0, i8* %pending_shell_escape_end, align 1, !dbg !14918, !tbaa !2739
  br label %if.end658, !dbg !14918

if.end658:                                        ; preds = %do.end657, %land.lhs.true637, %do.body634
  br label %do.end660, !dbg !14917

do.end660:                                        ; preds = %if.end658
  br label %do.body661, !dbg !14928

do.body661:                                       ; preds = %do.end660
  %328 = load i64, i64* %len, align 8, !dbg !14929, !tbaa !3285
  %329 = load i64, i64* %buffersize.addr, align 8, !dbg !14929, !tbaa !3285
  %cmp662 = icmp ult i64 %328, %329, !dbg !14929
  br i1 %cmp662, label %if.then664, label %if.end666, !dbg !14932

if.then664:                                       ; preds = %do.body661
  %330 = load i8, i8* %c, align 1, !dbg !14929, !tbaa !3292
  %331 = load i8*, i8** %buffer.addr, align 8, !dbg !14929, !tbaa !2645
  %332 = load i64, i64* %len, align 8, !dbg !14929, !tbaa !3285
  %arrayidx665 = getelementptr inbounds i8, i8* %331, i64 %332, !dbg !14929, !ctir !9
  store i8 %330, i8* %arrayidx665, align 1, !dbg !14929, !tbaa !3292
  br label %if.end666, !dbg !14929

if.end666:                                        ; preds = %if.then664, %do.body661
  %333 = load i64, i64* %len, align 8, !dbg !14932, !tbaa !3285
  %inc667 = add i64 %333, 1, !dbg !14932
  store i64 %inc667, i64* %len, align 8, !dbg !14932, !tbaa !3285
  br label %do.end669, !dbg !14932

do.end669:                                        ; preds = %if.end666
  %334 = load i8, i8* %c_and_shell_quote_compat, align 1, !dbg !14933, !tbaa !2739
  %tobool670 = trunc i8 %334 to i1, !dbg !14933
  br i1 %tobool670, label %if.end672, label %if.then671, !dbg !14935

if.then671:                                       ; preds = %do.end669
  store i8 0, i8* %all_c_and_shell_quote_compat, align 1, !dbg !14936, !tbaa !2739
  br label %if.end672, !dbg !14937

if.end672:                                        ; preds = %if.then671, %do.end669
  br label %for.inc673, !dbg !14938

for.inc673:                                       ; preds = %if.end672, %if.then167
  %335 = load i64, i64* %i, align 8, !dbg !14939, !tbaa !3285
  %inc674 = add i64 %335, 1, !dbg !14939
  store i64 %inc674, i64* %i, align 8, !dbg !14939, !tbaa !3285
  br label %for.cond44, !dbg !14940, !llvm.loop !14941

for.end675:                                       ; preds = %cond.end
  %336 = load i64, i64* %len, align 8, !dbg !14943, !tbaa !3285
  %cmp676 = icmp eq i64 %336, 0, !dbg !14945
  br i1 %cmp676, label %land.lhs.true678, label %if.end685, !dbg !14946

land.lhs.true678:                                 ; preds = %for.end675
  %337 = load i32, i32* %quoting_style.addr, align 4, !dbg !14947, !tbaa !3292
  %cmp679 = icmp eq i32 %337, 2, !dbg !14948
  br i1 %cmp679, label %land.lhs.true681, label %if.end685, !dbg !14949

land.lhs.true681:                                 ; preds = %land.lhs.true678
  %338 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14950, !tbaa !2739
  %tobool682 = trunc i8 %338 to i1, !dbg !14950
  br i1 %tobool682, label %if.then684, label %if.end685, !dbg !14951

if.then684:                                       ; preds = %land.lhs.true681
  br label %force_outer_quoting_style, !dbg !14952

if.end685:                                        ; preds = %land.lhs.true681, %land.lhs.true678, %for.end675
  %339 = load i32, i32* %quoting_style.addr, align 4, !dbg !14953, !tbaa !3292
  %cmp686 = icmp eq i32 %339, 2, !dbg !14955
  br i1 %cmp686, label %land.lhs.true688, label %if.end704, !dbg !14956

land.lhs.true688:                                 ; preds = %if.end685
  %340 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14957, !tbaa !2739
  %tobool689 = trunc i8 %340 to i1, !dbg !14957
  br i1 %tobool689, label %if.end704, label %land.lhs.true690, !dbg !14958

land.lhs.true690:                                 ; preds = %land.lhs.true688
  %341 = load i8, i8* %encountered_single_quote, align 1, !dbg !14959, !tbaa !2739
  %tobool691 = trunc i8 %341 to i1, !dbg !14959
  br i1 %tobool691, label %if.then693, label %if.end704, !dbg !14960

if.then693:                                       ; preds = %land.lhs.true690
  %342 = load i8, i8* %all_c_and_shell_quote_compat, align 1, !dbg !14961, !tbaa !2739
  %tobool694 = trunc i8 %342 to i1, !dbg !14961
  br i1 %tobool694, label %if.then695, label %if.else697, !dbg !14964

if.then695:                                       ; preds = %if.then693
  %343 = load i8*, i8** %buffer.addr, align 8, !dbg !14965, !tbaa !2645
  %344 = load i64, i64* %orig_buffersize, align 8, !dbg !14966, !tbaa !3285
  %345 = load i8*, i8** %arg.addr, align 8, !dbg !14967, !tbaa !2645
  %346 = load i64, i64* %argsize.addr, align 8, !dbg !14968, !tbaa !3285
  %347 = load i32, i32* %flags.addr, align 4, !dbg !14969, !tbaa !2632
  %348 = load i32*, i32** %quote_these_too.addr, align 8, !dbg !14970, !tbaa !2645
  %349 = load i8*, i8** %left_quote.addr, align 8, !dbg !14971, !tbaa !2645
  %350 = load i8*, i8** %right_quote.addr, align 8, !dbg !14972, !tbaa !2645
  %call696 = call i64 @quotearg_buffer_restyled(i8* %343, i64 %344, i8* %345, i64 %346, i32 5, i32 %347, i32* %348, i8* %349, i8* %350), !dbg !14973
  store i64 %call696, i64* %retval, align 8, !dbg !14974
  br label %return, !dbg !14974

if.else697:                                       ; preds = %if.then693
  %351 = load i64, i64* %buffersize.addr, align 8, !dbg !14975, !tbaa !3285
  %tobool698 = icmp ne i64 %351, 0, !dbg !14975
  br i1 %tobool698, label %if.end702, label %land.lhs.true699, !dbg !14977

land.lhs.true699:                                 ; preds = %if.else697
  %352 = load i64, i64* %orig_buffersize, align 8, !dbg !14978, !tbaa !3285
  %tobool700 = icmp ne i64 %352, 0, !dbg !14978
  br i1 %tobool700, label %if.then701, label %if.end702, !dbg !14979

if.then701:                                       ; preds = %land.lhs.true699
  %353 = load i64, i64* %orig_buffersize, align 8, !dbg !14980, !tbaa !3285
  store i64 %353, i64* %buffersize.addr, align 8, !dbg !14982, !tbaa !3285
  store i64 0, i64* %len, align 8, !dbg !14983, !tbaa !3285
  br label %process_input, !dbg !14984

if.end702:                                        ; preds = %land.lhs.true699, %if.else697
  br label %if.end703

if.end703:                                        ; preds = %if.end702
  br label %if.end704, !dbg !14985

if.end704:                                        ; preds = %if.end703, %land.lhs.true690, %land.lhs.true688, %if.end685
  %354 = load i8*, i8** %quote_string, align 8, !dbg !14986, !tbaa !2645
  %tobool705 = icmp ne i8* %354, null, !dbg !14986
  br i1 %tobool705, label %land.lhs.true706, label %if.end724, !dbg !14988

land.lhs.true706:                                 ; preds = %if.end704
  %355 = load i8, i8* %elide_outer_quotes, align 1, !dbg !14989, !tbaa !2739
  %tobool707 = trunc i8 %355 to i1, !dbg !14989
  br i1 %tobool707, label %if.end724, label %if.then708, !dbg !14990

if.then708:                                       ; preds = %land.lhs.true706
  br label %for.cond709, !dbg !14991

for.cond709:                                      ; preds = %for.inc721, %if.then708
  %356 = load i8*, i8** %quote_string, align 8, !dbg !14992, !tbaa !2645
  %357 = load i8, i8* %356, align 1, !dbg !14995, !tbaa !3292, !ctir !181
  %tobool710 = icmp ne i8 %357, 0, !dbg !14996
  br i1 %tobool710, label %for.body711, label %for.end723, !dbg !14996

for.body711:                                      ; preds = %for.cond709
  br label %do.body712, !dbg !14997

do.body712:                                       ; preds = %for.body711
  %358 = load i64, i64* %len, align 8, !dbg !14998, !tbaa !3285
  %359 = load i64, i64* %buffersize.addr, align 8, !dbg !14998, !tbaa !3285
  %cmp713 = icmp ult i64 %358, %359, !dbg !14998
  br i1 %cmp713, label %if.then715, label %if.end717, !dbg !15001

if.then715:                                       ; preds = %do.body712
  %360 = load i8*, i8** %quote_string, align 8, !dbg !14998, !tbaa !2645
  %361 = load i8, i8* %360, align 1, !dbg !14998, !tbaa !3292, !ctir !181
  %362 = load i8*, i8** %buffer.addr, align 8, !dbg !14998, !tbaa !2645
  %363 = load i64, i64* %len, align 8, !dbg !14998, !tbaa !3285
  %arrayidx716 = getelementptr inbounds i8, i8* %362, i64 %363, !dbg !14998, !ctir !9
  store i8 %361, i8* %arrayidx716, align 1, !dbg !14998, !tbaa !3292
  br label %if.end717, !dbg !14998

if.end717:                                        ; preds = %if.then715, %do.body712
  %364 = load i64, i64* %len, align 8, !dbg !15001, !tbaa !3285
  %inc718 = add i64 %364, 1, !dbg !15001
  store i64 %inc718, i64* %len, align 8, !dbg !15001, !tbaa !3285
  br label %do.end720, !dbg !15001

do.end720:                                        ; preds = %if.end717
  br label %for.inc721, !dbg !15001

for.inc721:                                       ; preds = %do.end720
  %365 = load i8*, i8** %quote_string, align 8, !dbg !15002, !tbaa !2645
  %incdec.ptr722 = getelementptr inbounds i8, i8* %365, i32 1, !dbg !15002
  store i8* %incdec.ptr722, i8** %quote_string, align 8, !dbg !15002, !tbaa !2645
  br label %for.cond709, !dbg !15003, !llvm.loop !15004

for.end723:                                       ; preds = %for.cond709
  br label %if.end724, !dbg !15005

if.end724:                                        ; preds = %for.end723, %land.lhs.true706, %if.end704
  %366 = load i64, i64* %len, align 8, !dbg !15006, !tbaa !3285
  %367 = load i64, i64* %buffersize.addr, align 8, !dbg !15008, !tbaa !3285
  %cmp725 = icmp ult i64 %366, %367, !dbg !15009
  br i1 %cmp725, label %if.then727, label %if.end729, !dbg !15010

if.then727:                                       ; preds = %if.end724
  %368 = load i8*, i8** %buffer.addr, align 8, !dbg !15011, !tbaa !2645
  %369 = load i64, i64* %len, align 8, !dbg !15012, !tbaa !3285
  %arrayidx728 = getelementptr inbounds i8, i8* %368, i64 %369, !dbg !15011, !ctir !9
  store i8 0, i8* %arrayidx728, align 1, !dbg !15013, !tbaa !3292
  br label %if.end729, !dbg !15011

if.end729:                                        ; preds = %if.then727, %if.end724
  %370 = load i64, i64* %len, align 8, !dbg !15014, !tbaa !3285
  store i64 %370, i64* %retval, align 8, !dbg !15015
  br label %return, !dbg !15015

force_outer_quoting_style:                        ; preds = %if.then684, %if.then588, %if.then429, %sw.bb391, %if.then302, %if.then295, %if.then265, %if.then248, %if.then194, %if.then173, %if.then88, %if.then78
  call void @llvm.dbg.label(metadata !15016), !dbg !15017
  %371 = load i32, i32* %quoting_style.addr, align 4, !dbg !15018, !tbaa !3292
  %cmp730 = icmp eq i32 %371, 2, !dbg !15020
  br i1 %cmp730, label %land.lhs.true732, label %if.end736, !dbg !15021

land.lhs.true732:                                 ; preds = %force_outer_quoting_style
  %372 = load i8, i8* %backslash_escapes, align 1, !dbg !15022, !tbaa !2739
  %tobool733 = trunc i8 %372 to i1, !dbg !15022
  br i1 %tobool733, label %if.then735, label %if.end736, !dbg !15023

if.then735:                                       ; preds = %land.lhs.true732
  store i32 4, i32* %quoting_style.addr, align 4, !dbg !15024, !tbaa !3292
  br label %if.end736, !dbg !15025

if.end736:                                        ; preds = %if.then735, %land.lhs.true732, %force_outer_quoting_style
  %373 = load i8*, i8** %buffer.addr, align 8, !dbg !15026, !tbaa !2645
  %374 = load i64, i64* %buffersize.addr, align 8, !dbg !15027, !tbaa !3285
  %375 = load i8*, i8** %arg.addr, align 8, !dbg !15028, !tbaa !2645
  %376 = load i64, i64* %argsize.addr, align 8, !dbg !15029, !tbaa !3285
  %377 = load i32, i32* %quoting_style.addr, align 4, !dbg !15030, !tbaa !3292
  %378 = load i32, i32* %flags.addr, align 4, !dbg !15031, !tbaa !2632
  %and737 = and i32 %378, -3, !dbg !15032
  %379 = load i8*, i8** %left_quote.addr, align 8, !dbg !15033, !tbaa !2645
  %380 = load i8*, i8** %right_quote.addr, align 8, !dbg !15034, !tbaa !2645
  %call738 = call i64 @quotearg_buffer_restyled(i8* %373, i64 %374, i8* %375, i64 %376, i32 %377, i32 %and737, i32* null, i8* %379, i8* %380), !dbg !15035
  store i64 %call738, i64* %retval, align 8, !dbg !15036
  br label %return, !dbg !15036

return:                                           ; preds = %if.end736, %if.end729, %if.then695
  %381 = load i64, i64* %retval, align 8, !dbg !15037
  ret i64 %381, !dbg !15037
}

; Function Attrs: nounwind
declare dso_local i64 @__ctype_get_mb_cur_max() #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @gettext_quote(i8* %msgid, i32 %s) #4 !dbg !15038 !ctir !1126 {
entry:
  %retval = alloca i8*, align 8
  %msgid.addr = alloca i8*, align 8
  %s.addr = alloca i32, align 4
  %translation = alloca i8*, align 8, !ctir !180
  %locale_code = alloca i8*, align 8, !ctir !180
  store i8* %msgid, i8** %msgid.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %msgid.addr, metadata !15039, metadata !DIExpression()), !dbg !15040
  store i32 %s, i32* %s.addr, align 4, !tbaa !3292
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !15041, metadata !DIExpression()), !dbg !15042
  call void @llvm.dbg.declare(metadata i8** %translation, metadata !15043, metadata !DIExpression()), !dbg !15044
  %0 = load i8*, i8** %msgid.addr, align 8, !dbg !15045, !tbaa !2645
  %call = call i8* @gettext(i8* %0) #9, !dbg !15045
  store i8* %call, i8** %translation, align 8, !dbg !15044, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %locale_code, metadata !15046, metadata !DIExpression()), !dbg !15047
  %1 = load i8*, i8** %translation, align 8, !dbg !15048, !tbaa !2645
  %2 = load i8*, i8** %msgid.addr, align 8, !dbg !15050, !tbaa !2645
  %cmp = icmp ne i8* %1, %2, !dbg !15051
  br i1 %cmp, label %if.then, label %if.end, !dbg !15052

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %translation, align 8, !dbg !15053, !tbaa !2645
  store i8* %3, i8** %retval, align 8, !dbg !15054
  br label %return, !dbg !15054

if.end:                                           ; preds = %entry
  %call1 = call i8* @locale_charset(), !dbg !15055
  store i8* %call1, i8** %locale_code, align 8, !dbg !15056, !tbaa !2645
  %4 = load i8*, i8** %locale_code, align 8, !dbg !15057, !tbaa !2645
  %call2 = call i32 @c_strcasecmp(i8* %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13.331, i64 0, i64 0)) #14, !dbg !15057
  %cmp3 = icmp eq i32 %call2, 0, !dbg !15057
  br i1 %cmp3, label %if.then4, label %if.end7, !dbg !15059

if.then4:                                         ; preds = %if.end
  %5 = load i8*, i8** %msgid.addr, align 8, !dbg !15060, !tbaa !2645
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0, !dbg !15060, !ctir !180
  %6 = load i8, i8* %arrayidx, align 1, !dbg !15060, !tbaa !3292
  %conv = sext i8 %6 to i32, !dbg !15060
  %cmp5 = icmp eq i32 %conv, 96, !dbg !15061
  %7 = zext i1 %cmp5 to i64, !dbg !15060
  %cond = select i1 %cmp5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14.332, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15.333, i64 0, i64 0), !dbg !15060
  store i8* %cond, i8** %retval, align 8, !dbg !15062
  br label %return, !dbg !15062

if.end7:                                          ; preds = %if.end
  %8 = load i8*, i8** %locale_code, align 8, !dbg !15063, !tbaa !2645
  %call8 = call i32 @c_strcasecmp(i8* %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16.334, i64 0, i64 0)) #14, !dbg !15063
  %cmp9 = icmp eq i32 %call8, 0, !dbg !15063
  br i1 %cmp9, label %if.then11, label %if.end17, !dbg !15065

if.then11:                                        ; preds = %if.end7
  %9 = load i8*, i8** %msgid.addr, align 8, !dbg !15066, !tbaa !2645
  %arrayidx12 = getelementptr inbounds i8, i8* %9, i64 0, !dbg !15066, !ctir !180
  %10 = load i8, i8* %arrayidx12, align 1, !dbg !15066, !tbaa !3292
  %conv13 = sext i8 %10 to i32, !dbg !15066
  %cmp14 = icmp eq i32 %conv13, 96, !dbg !15067
  %11 = zext i1 %cmp14 to i64, !dbg !15066
  %cond16 = select i1 %cmp14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17.335, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18.336, i64 0, i64 0), !dbg !15066
  store i8* %cond16, i8** %retval, align 8, !dbg !15068
  br label %return, !dbg !15068

if.end17:                                         ; preds = %if.end7
  %12 = load i32, i32* %s.addr, align 4, !dbg !15069, !tbaa !3292
  %cmp18 = icmp eq i32 %12, 9, !dbg !15070
  %13 = zext i1 %cmp18 to i64, !dbg !15069
  %cond20 = select i1 %cmp18, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10.328, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12.330, i64 0, i64 0), !dbg !15069
  store i8* %cond20, i8** %retval, align 8, !dbg !15071
  br label %return, !dbg !15071

return:                                           ; preds = %if.end17, %if.then11, %if.then4, %if.then
  %14 = load i8*, i8** %retval, align 8, !dbg !15072
  ret i8* %14, !dbg !15072
}

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #8

; Function Attrs: nounwind
declare dso_local i32 @iswprint(i32) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @mbsinit(%struct.savewd*) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_alloc(i8* %arg, i64 %argsize, %struct.quoting_options* %o) #4 !dbg !15073 !ctir !1061 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15074, metadata !DIExpression()), !dbg !15075
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15076, metadata !DIExpression()), !dbg !15077
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !15078, metadata !DIExpression()), !dbg !15079
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15080, !tbaa !2645
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !15081, !tbaa !3285
  %2 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !15082, !tbaa !2645
  %call = call i8* @quotearg_alloc_mem(i8* %0, i64 %1, i64* null, %struct.quoting_options* %2), !dbg !15083
  ret i8* %call, !dbg !15084
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_alloc_mem(i8* %arg, i64 %argsize, i64* %size, %struct.quoting_options* %o) #4 !dbg !15085 !ctir !1063 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %size.addr = alloca i64*, align 8
  %o.addr = alloca %struct.quoting_options*, align 8
  %p = alloca %struct.quoting_options*, align 8, !ctir !1048
  %e = alloca i32, align 4, !ctir !7
  %flags = alloca i32, align 4, !ctir !7
  %bufsize = alloca i64, align 8, !ctir !55
  %buf = alloca i8*, align 8, !ctir !9
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15086, metadata !DIExpression()), !dbg !15087
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15088, metadata !DIExpression()), !dbg !15089
  store i64* %size, i64** %size.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i64** %size.addr, metadata !15090, metadata !DIExpression()), !dbg !15091
  store %struct.quoting_options* %o, %struct.quoting_options** %o.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %o.addr, metadata !15092, metadata !DIExpression()), !dbg !15093
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %p, metadata !15094, metadata !DIExpression()), !dbg !15095
  %0 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !15096, !tbaa !2645
  %tobool = icmp ne %struct.quoting_options* %0, null, !dbg !15096
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !15096

cond.true:                                        ; preds = %entry
  %1 = load %struct.quoting_options*, %struct.quoting_options** %o.addr, align 8, !dbg !15097, !tbaa !2645
  br label %cond.end, !dbg !15096

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !15096

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.quoting_options* [ %1, %cond.true ], [ @default_quoting_options, %cond.false ], !dbg !15096
  store %struct.quoting_options* %cond, %struct.quoting_options** %p, align 8, !dbg !15095, !tbaa !2645
  call void @llvm.dbg.declare(metadata i32* %e, metadata !15098, metadata !DIExpression()), !dbg !15099
  %call = call i32* @__errno_location() #16, !dbg !15100
  %2 = load i32, i32* %call, align 4, !dbg !15100, !tbaa !2632, !ctir !7
  store i32 %2, i32* %e, align 4, !dbg !15099, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !15101, metadata !DIExpression()), !dbg !15102
  %3 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15103, !tbaa !2645
  %flags1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %3, i32 0, i32 1, !dbg !15104, !ctir !1049
  %4 = load i32, i32* %flags1, align 4, !dbg !15104, !tbaa !14090, !ctir !7
  %5 = load i64*, i64** %size.addr, align 8, !dbg !15105, !tbaa !2645
  %tobool2 = icmp ne i64* %5, null, !dbg !15105
  %6 = zext i1 %tobool2 to i64, !dbg !15105
  %cond3 = select i1 %tobool2, i32 0, i32 1, !dbg !15105
  %or = or i32 %4, %cond3, !dbg !15106
  store i32 %or, i32* %flags, align 4, !dbg !15102, !tbaa !2632
  call void @llvm.dbg.declare(metadata i64* %bufsize, metadata !15107, metadata !DIExpression()), !dbg !15108
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !15109, !tbaa !2645
  %8 = load i64, i64* %argsize.addr, align 8, !dbg !15110, !tbaa !3285
  %9 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15111, !tbaa !2645
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %9, i32 0, i32 0, !dbg !15112, !ctir !1049
  %10 = load i32, i32* %style, align 8, !dbg !15112, !tbaa !14022, !ctir !1012
  %11 = load i32, i32* %flags, align 4, !dbg !15113, !tbaa !2632
  %12 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15114, !tbaa !2645
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %12, i32 0, i32 2, !dbg !15115, !ctir !1049
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !15114
  %13 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15116, !tbaa !2645
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %13, i32 0, i32 3, !dbg !15117, !ctir !1049
  %14 = load i8*, i8** %left_quote, align 8, !dbg !15117, !tbaa !14123, !ctir !180
  %15 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15118, !tbaa !2645
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %15, i32 0, i32 4, !dbg !15119, !ctir !1049
  %16 = load i8*, i8** %right_quote, align 8, !dbg !15119, !tbaa !14128, !ctir !180
  %call4 = call i64 @quotearg_buffer_restyled(i8* null, i64 0, i8* %7, i64 %8, i32 %10, i32 %11, i32* %arraydecay, i8* %14, i8* %16), !dbg !15120
  %add = add i64 %call4, 1, !dbg !15121
  store i64 %add, i64* %bufsize, align 8, !dbg !15108, !tbaa !3285
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !15122, metadata !DIExpression()), !dbg !15123
  %17 = load i64, i64* %bufsize, align 8, !dbg !15124, !tbaa !3285
  %call5 = call noalias i8* @xcharalloc(i64 %17), !dbg !15125
  store i8* %call5, i8** %buf, align 8, !dbg !15123, !tbaa !2645
  %18 = load i8*, i8** %buf, align 8, !dbg !15126, !tbaa !2645
  %19 = load i64, i64* %bufsize, align 8, !dbg !15127, !tbaa !3285
  %20 = load i8*, i8** %arg.addr, align 8, !dbg !15128, !tbaa !2645
  %21 = load i64, i64* %argsize.addr, align 8, !dbg !15129, !tbaa !3285
  %22 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15130, !tbaa !2645
  %style6 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %22, i32 0, i32 0, !dbg !15131, !ctir !1049
  %23 = load i32, i32* %style6, align 8, !dbg !15131, !tbaa !14022, !ctir !1012
  %24 = load i32, i32* %flags, align 4, !dbg !15132, !tbaa !2632
  %25 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15133, !tbaa !2645
  %quote_these_too7 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %25, i32 0, i32 2, !dbg !15134, !ctir !1049
  %arraydecay8 = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too7, i64 0, i64 0, !dbg !15133
  %26 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15135, !tbaa !2645
  %left_quote9 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %26, i32 0, i32 3, !dbg !15136, !ctir !1049
  %27 = load i8*, i8** %left_quote9, align 8, !dbg !15136, !tbaa !14123, !ctir !180
  %28 = load %struct.quoting_options*, %struct.quoting_options** %p, align 8, !dbg !15137, !tbaa !2645
  %right_quote10 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %28, i32 0, i32 4, !dbg !15138, !ctir !1049
  %29 = load i8*, i8** %right_quote10, align 8, !dbg !15138, !tbaa !14128, !ctir !180
  %call11 = call i64 @quotearg_buffer_restyled(i8* %18, i64 %19, i8* %20, i64 %21, i32 %23, i32 %24, i32* %arraydecay8, i8* %27, i8* %29), !dbg !15139
  %30 = load i32, i32* %e, align 4, !dbg !15140, !tbaa !2632
  %call12 = call i32* @__errno_location() #16, !dbg !15141
  store i32 %30, i32* %call12, align 4, !dbg !15142, !tbaa !2632, !ctir !7
  %31 = load i64*, i64** %size.addr, align 8, !dbg !15143, !tbaa !2645
  %tobool13 = icmp ne i64* %31, null, !dbg !15143
  br i1 %tobool13, label %if.then, label %if.end, !dbg !15145

if.then:                                          ; preds = %cond.end
  %32 = load i64, i64* %bufsize, align 8, !dbg !15146, !tbaa !3285
  %sub = sub i64 %32, 1, !dbg !15147
  %33 = load i64*, i64** %size.addr, align 8, !dbg !15148, !tbaa !2645
  store i64 %sub, i64* %33, align 8, !dbg !15149, !tbaa !3285, !ctir !55
  br label %if.end, !dbg !15150

if.end:                                           ; preds = %if.then, %cond.end
  %34 = load i8*, i8** %buf, align 8, !dbg !15151, !tbaa !2645
  ret i8* %34, !dbg !15152
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @quotearg_free() #4 !dbg !15153 !ctir !200 {
entry:
  %sv = alloca %struct.slotvec*, align 8, !ctir !1065
  %i = alloca i32, align 4, !ctir !7
  call void @llvm.dbg.declare(metadata %struct.slotvec** %sv, metadata !15154, metadata !DIExpression()), !dbg !15155
  %0 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !15156, !tbaa !2645
  store %struct.slotvec* %0, %struct.slotvec** %sv, align 8, !dbg !15155, !tbaa !2645
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15157, metadata !DIExpression()), !dbg !15158
  store i32 1, i32* %i, align 4, !dbg !15159, !tbaa !2632
  br label %for.cond, !dbg !15161

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !15162, !tbaa !2632
  %2 = load i32, i32* @nslots, align 4, !dbg !15164, !tbaa !2632
  %cmp = icmp slt i32 %1, %2, !dbg !15165
  br i1 %cmp, label %for.body, label %for.end, !dbg !15166

for.body:                                         ; preds = %for.cond
  %3 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15167, !tbaa !2645
  %4 = load i32, i32* %i, align 4, !dbg !15168, !tbaa !2632
  %idxprom = sext i32 %4 to i64, !dbg !15167
  %arrayidx = getelementptr inbounds %struct.slotvec, %struct.slotvec* %3, i64 %idxprom, !dbg !15167, !ctir !1065
  %val = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx, i32 0, i32 1, !dbg !15169, !ctir !1066
  %5 = load i8*, i8** %val, align 8, !dbg !15169, !tbaa !15170, !ctir !9
  call void @free(i8* %5) #9, !dbg !15172
  br label %for.inc, !dbg !15172

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !15173, !tbaa !2632
  %inc = add nsw i32 %6, 1, !dbg !15173
  store i32 %inc, i32* %i, align 4, !dbg !15173, !tbaa !2632
  br label %for.cond, !dbg !15174, !llvm.loop !15175

for.end:                                          ; preds = %for.cond
  %7 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15177, !tbaa !2645
  %arrayidx1 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %7, i64 0, !dbg !15177, !ctir !1065
  %val2 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx1, i32 0, i32 1, !dbg !15179, !ctir !1066
  %8 = load i8*, i8** %val2, align 8, !dbg !15179, !tbaa !15170, !ctir !9
  %cmp3 = icmp ne i8* %8, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !15180
  br i1 %cmp3, label %if.then, label %if.end, !dbg !15181

if.then:                                          ; preds = %for.end
  %9 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15182, !tbaa !2645
  %arrayidx4 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %9, i64 0, !dbg !15182, !ctir !1065
  %val5 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx4, i32 0, i32 1, !dbg !15184, !ctir !1066
  %10 = load i8*, i8** %val5, align 8, !dbg !15184, !tbaa !15170, !ctir !9
  call void @free(i8* %10) #9, !dbg !15185
  store i64 256, i64* getelementptr inbounds (%struct.slotvec, %struct.slotvec* @slotvec0, i32 0, i32 0), align 8, !dbg !15186, !tbaa !15187, !ctir !55
  store i8* getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), i8** getelementptr inbounds (%struct.slotvec, %struct.slotvec* @slotvec0, i32 0, i32 1), align 8, !dbg !15188, !tbaa !15170, !ctir !9
  br label %if.end, !dbg !15189

if.end:                                           ; preds = %if.then, %for.end
  %11 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15190, !tbaa !2645
  %cmp6 = icmp ne %struct.slotvec* %11, @slotvec0, !dbg !15192
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !15193

if.then7:                                         ; preds = %if.end
  %12 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15194, !tbaa !2645
  %13 = bitcast %struct.slotvec* %12 to i8*, !dbg !15194
  call void @free(i8* %13) #9, !dbg !15196
  store %struct.slotvec* @slotvec0, %struct.slotvec** @slotvec, align 8, !dbg !15197, !tbaa !2645
  br label %if.end8, !dbg !15198

if.end8:                                          ; preds = %if.then7, %if.end
  store i32 1, i32* @nslots, align 4, !dbg !15199, !tbaa !2632
  ret void, !dbg !15200
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n(i32 %n, i8* %arg) #4 !dbg !15201 !ctir !1070 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15202, metadata !DIExpression()), !dbg !15203
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15204, metadata !DIExpression()), !dbg !15205
  %0 = load i32, i32* %n.addr, align 4, !dbg !15206, !tbaa !2632
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15207, !tbaa !2645
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 -1, %struct.quoting_options* @default_quoting_options), !dbg !15208
  ret i8* %call, !dbg !15209
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @quotearg_n_options(i32 %n, i8* %arg, i64 %argsize, %struct.quoting_options* %options) #4 !dbg !15210 !ctir !1128 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %options.addr = alloca %struct.quoting_options*, align 8
  %e = alloca i32, align 4, !ctir !7
  %sv = alloca %struct.slotvec*, align 8, !ctir !1065
  %preallocated = alloca i8, align 1, !ctir !142
  %nmax = alloca i32, align 4, !ctir !7
  %size = alloca i64, align 8, !ctir !55
  %val = alloca i8*, align 8, !ctir !9
  %flags = alloca i32, align 4, !ctir !7
  %qsize = alloca i64, align 8, !ctir !55
  store i32 %n, i32* %n.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15211, metadata !DIExpression()), !dbg !15212
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15213, metadata !DIExpression()), !dbg !15214
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15215, metadata !DIExpression()), !dbg !15216
  store %struct.quoting_options* %options, %struct.quoting_options** %options.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.quoting_options** %options.addr, metadata !15217, metadata !DIExpression()), !dbg !15218
  call void @llvm.dbg.declare(metadata i32* %e, metadata !15219, metadata !DIExpression()), !dbg !15220
  %call = call i32* @__errno_location() #16, !dbg !15221
  %0 = load i32, i32* %call, align 4, !dbg !15221, !tbaa !2632, !ctir !7
  store i32 %0, i32* %e, align 4, !dbg !15220, !tbaa !2632
  call void @llvm.dbg.declare(metadata %struct.slotvec** %sv, metadata !15222, metadata !DIExpression()), !dbg !15223
  %1 = load %struct.slotvec*, %struct.slotvec** @slotvec, align 8, !dbg !15224, !tbaa !2645
  store %struct.slotvec* %1, %struct.slotvec** %sv, align 8, !dbg !15223, !tbaa !2645
  %2 = load i32, i32* %n.addr, align 4, !dbg !15225, !tbaa !2632
  %cmp = icmp slt i32 %2, 0, !dbg !15227
  br i1 %cmp, label %if.then, label %if.end, !dbg !15228

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !15229
  unreachable, !dbg !15229

if.end:                                           ; preds = %entry
  %3 = load i32, i32* @nslots, align 4, !dbg !15230, !tbaa !2632
  %4 = load i32, i32* %n.addr, align 4, !dbg !15232, !tbaa !2632
  %cmp1 = icmp sle i32 %3, %4, !dbg !15233
  br i1 %cmp1, label %if.then2, label %if.end15, !dbg !15234

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %preallocated, metadata !15235, metadata !DIExpression()), !dbg !15237
  %5 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15238, !tbaa !2645
  %cmp3 = icmp eq %struct.slotvec* %5, @slotvec0, !dbg !15239
  %frombool = zext i1 %cmp3 to i8, !dbg !15237
  store i8 %frombool, i8* %preallocated, align 1, !dbg !15237, !tbaa !2739
  call void @llvm.dbg.declare(metadata i32* %nmax, metadata !15240, metadata !DIExpression()), !dbg !15241
  store i32 2147483646, i32* %nmax, align 4, !dbg !15241, !tbaa !2632
  %6 = load i32, i32* %nmax, align 4, !dbg !15242, !tbaa !2632
  %7 = load i32, i32* %n.addr, align 4, !dbg !15244, !tbaa !2632
  %cmp4 = icmp slt i32 %6, %7, !dbg !15245
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !15246

if.then5:                                         ; preds = %if.then2
  call void @xalloc_die() #15, !dbg !15247
  unreachable, !dbg !15247

if.end6:                                          ; preds = %if.then2
  %8 = load i8, i8* %preallocated, align 1, !dbg !15248, !tbaa !2739
  %tobool = trunc i8 %8 to i1, !dbg !15248
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !15248

cond.true:                                        ; preds = %if.end6
  br label %cond.end, !dbg !15248

cond.false:                                       ; preds = %if.end6
  %9 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15249, !tbaa !2645
  br label %cond.end, !dbg !15248

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.slotvec* [ null, %cond.true ], [ %9, %cond.false ], !dbg !15248
  %10 = bitcast %struct.slotvec* %cond to i8*, !dbg !15248
  %11 = load i32, i32* %n.addr, align 4, !dbg !15250, !tbaa !2632
  %add = add nsw i32 %11, 1, !dbg !15251
  %conv = sext i32 %add to i64, !dbg !15252
  %mul = mul i64 %conv, 16, !dbg !15253
  %call7 = call i8* @xrealloc(i8* %10, i64 %mul), !dbg !15254
  %12 = bitcast i8* %call7 to %struct.slotvec*, !dbg !15254
  store %struct.slotvec* %12, %struct.slotvec** %sv, align 8, !dbg !15255, !tbaa !2645
  store %struct.slotvec* %12, %struct.slotvec** @slotvec, align 8, !dbg !15256, !tbaa !2645
  %13 = load i8, i8* %preallocated, align 1, !dbg !15257, !tbaa !2739
  %tobool8 = trunc i8 %13 to i1, !dbg !15257
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !15259

if.then9:                                         ; preds = %cond.end
  %14 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15260, !tbaa !2645
  %15 = bitcast %struct.slotvec* %14 to i8*, !dbg !15261
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 bitcast (%struct.slotvec* @slotvec0 to i8*), i64 16, i1 false), !dbg !15261, !tbaa.struct !15262
  br label %if.end10, !dbg !15263

if.end10:                                         ; preds = %if.then9, %cond.end
  %16 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15264, !tbaa !2645
  %17 = load i32, i32* @nslots, align 4, !dbg !15265, !tbaa !2632
  %idx.ext = sext i32 %17 to i64, !dbg !15266
  %add.ptr = getelementptr inbounds %struct.slotvec, %struct.slotvec* %16, i64 %idx.ext, !dbg !15266
  %18 = bitcast %struct.slotvec* %add.ptr to i8*, !dbg !15267
  %19 = load i32, i32* %n.addr, align 4, !dbg !15268, !tbaa !2632
  %add11 = add nsw i32 %19, 1, !dbg !15269
  %20 = load i32, i32* @nslots, align 4, !dbg !15270, !tbaa !2632
  %sub = sub nsw i32 %add11, %20, !dbg !15271
  %conv12 = sext i32 %sub to i64, !dbg !15272
  %mul13 = mul i64 %conv12, 16, !dbg !15273
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 %mul13, i1 false), !dbg !15267
  %21 = load i32, i32* %n.addr, align 4, !dbg !15274, !tbaa !2632
  %add14 = add nsw i32 %21, 1, !dbg !15275
  store i32 %add14, i32* @nslots, align 4, !dbg !15276, !tbaa !2632
  br label %if.end15, !dbg !15277

if.end15:                                         ; preds = %if.end10, %if.end
  call void @llvm.dbg.declare(metadata i64* %size, metadata !15278, metadata !DIExpression()), !dbg !15280
  %22 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15281, !tbaa !2645
  %23 = load i32, i32* %n.addr, align 4, !dbg !15282, !tbaa !2632
  %idxprom = sext i32 %23 to i64, !dbg !15281
  %arrayidx = getelementptr inbounds %struct.slotvec, %struct.slotvec* %22, i64 %idxprom, !dbg !15281, !ctir !1065
  %size16 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx, i32 0, i32 0, !dbg !15283, !ctir !1066
  %24 = load i64, i64* %size16, align 8, !dbg !15283, !tbaa !15187, !ctir !55
  store i64 %24, i64* %size, align 8, !dbg !15280, !tbaa !3285
  call void @llvm.dbg.declare(metadata i8** %val, metadata !15284, metadata !DIExpression()), !dbg !15285
  %25 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15286, !tbaa !2645
  %26 = load i32, i32* %n.addr, align 4, !dbg !15287, !tbaa !2632
  %idxprom17 = sext i32 %26 to i64, !dbg !15286
  %arrayidx18 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %25, i64 %idxprom17, !dbg !15286, !ctir !1065
  %val19 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx18, i32 0, i32 1, !dbg !15288, !ctir !1066
  %27 = load i8*, i8** %val19, align 8, !dbg !15288, !tbaa !15170, !ctir !9
  store i8* %27, i8** %val, align 8, !dbg !15285, !tbaa !2645
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !15289, metadata !DIExpression()), !dbg !15290
  %28 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15291, !tbaa !2645
  %flags20 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %28, i32 0, i32 1, !dbg !15292, !ctir !1049
  %29 = load i32, i32* %flags20, align 4, !dbg !15292, !tbaa !14090, !ctir !7
  %or = or i32 %29, 1, !dbg !15293
  store i32 %or, i32* %flags, align 4, !dbg !15290, !tbaa !2632
  call void @llvm.dbg.declare(metadata i64* %qsize, metadata !15294, metadata !DIExpression()), !dbg !15295
  %30 = load i8*, i8** %val, align 8, !dbg !15296, !tbaa !2645
  %31 = load i64, i64* %size, align 8, !dbg !15297, !tbaa !3285
  %32 = load i8*, i8** %arg.addr, align 8, !dbg !15298, !tbaa !2645
  %33 = load i64, i64* %argsize.addr, align 8, !dbg !15299, !tbaa !3285
  %34 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15300, !tbaa !2645
  %style = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %34, i32 0, i32 0, !dbg !15301, !ctir !1049
  %35 = load i32, i32* %style, align 8, !dbg !15301, !tbaa !14022, !ctir !1012
  %36 = load i32, i32* %flags, align 4, !dbg !15302, !tbaa !2632
  %37 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15303, !tbaa !2645
  %quote_these_too = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %37, i32 0, i32 2, !dbg !15304, !ctir !1049
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too, i64 0, i64 0, !dbg !15303
  %38 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15305, !tbaa !2645
  %left_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %38, i32 0, i32 3, !dbg !15306, !ctir !1049
  %39 = load i8*, i8** %left_quote, align 8, !dbg !15306, !tbaa !14123, !ctir !180
  %40 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15307, !tbaa !2645
  %right_quote = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %40, i32 0, i32 4, !dbg !15308, !ctir !1049
  %41 = load i8*, i8** %right_quote, align 8, !dbg !15308, !tbaa !14128, !ctir !180
  %call21 = call i64 @quotearg_buffer_restyled(i8* %30, i64 %31, i8* %32, i64 %33, i32 %35, i32 %36, i32* %arraydecay, i8* %39, i8* %41), !dbg !15309
  store i64 %call21, i64* %qsize, align 8, !dbg !15295, !tbaa !3285
  %42 = load i64, i64* %size, align 8, !dbg !15310, !tbaa !3285
  %43 = load i64, i64* %qsize, align 8, !dbg !15312, !tbaa !3285
  %cmp22 = icmp ule i64 %42, %43, !dbg !15313
  br i1 %cmp22, label %if.then24, label %if.end43, !dbg !15314

if.then24:                                        ; preds = %if.end15
  %44 = load i64, i64* %qsize, align 8, !dbg !15315, !tbaa !3285
  %add25 = add i64 %44, 1, !dbg !15317
  store i64 %add25, i64* %size, align 8, !dbg !15318, !tbaa !3285
  %45 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15319, !tbaa !2645
  %46 = load i32, i32* %n.addr, align 4, !dbg !15320, !tbaa !2632
  %idxprom26 = sext i32 %46 to i64, !dbg !15319
  %arrayidx27 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %45, i64 %idxprom26, !dbg !15319, !ctir !1065
  %size28 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx27, i32 0, i32 0, !dbg !15321, !ctir !1066
  store i64 %add25, i64* %size28, align 8, !dbg !15322, !tbaa !15187, !ctir !55
  %47 = load i8*, i8** %val, align 8, !dbg !15323, !tbaa !2645
  %cmp29 = icmp ne i8* %47, getelementptr inbounds ([256 x i8], [256 x i8]* @slot0, i64 0, i64 0), !dbg !15325
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !15326

if.then31:                                        ; preds = %if.then24
  %48 = load i8*, i8** %val, align 8, !dbg !15327, !tbaa !2645
  call void @free(i8* %48) #9, !dbg !15328
  br label %if.end32, !dbg !15328

if.end32:                                         ; preds = %if.then31, %if.then24
  %49 = load i64, i64* %size, align 8, !dbg !15329, !tbaa !3285
  %call33 = call noalias i8* @xcharalloc(i64 %49), !dbg !15330
  store i8* %call33, i8** %val, align 8, !dbg !15331, !tbaa !2645
  %50 = load %struct.slotvec*, %struct.slotvec** %sv, align 8, !dbg !15332, !tbaa !2645
  %51 = load i32, i32* %n.addr, align 4, !dbg !15333, !tbaa !2632
  %idxprom34 = sext i32 %51 to i64, !dbg !15332
  %arrayidx35 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %50, i64 %idxprom34, !dbg !15332, !ctir !1065
  %val36 = getelementptr inbounds %struct.slotvec, %struct.slotvec* %arrayidx35, i32 0, i32 1, !dbg !15334, !ctir !1066
  store i8* %call33, i8** %val36, align 8, !dbg !15335, !tbaa !15170, !ctir !9
  %52 = load i8*, i8** %val, align 8, !dbg !15336, !tbaa !2645
  %53 = load i64, i64* %size, align 8, !dbg !15337, !tbaa !3285
  %54 = load i8*, i8** %arg.addr, align 8, !dbg !15338, !tbaa !2645
  %55 = load i64, i64* %argsize.addr, align 8, !dbg !15339, !tbaa !3285
  %56 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15340, !tbaa !2645
  %style37 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %56, i32 0, i32 0, !dbg !15341, !ctir !1049
  %57 = load i32, i32* %style37, align 8, !dbg !15341, !tbaa !14022, !ctir !1012
  %58 = load i32, i32* %flags, align 4, !dbg !15342, !tbaa !2632
  %59 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15343, !tbaa !2645
  %quote_these_too38 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %59, i32 0, i32 2, !dbg !15344, !ctir !1049
  %arraydecay39 = getelementptr inbounds [8 x i32], [8 x i32]* %quote_these_too38, i64 0, i64 0, !dbg !15343
  %60 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15345, !tbaa !2645
  %left_quote40 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %60, i32 0, i32 3, !dbg !15346, !ctir !1049
  %61 = load i8*, i8** %left_quote40, align 8, !dbg !15346, !tbaa !14123, !ctir !180
  %62 = load %struct.quoting_options*, %struct.quoting_options** %options.addr, align 8, !dbg !15347, !tbaa !2645
  %right_quote41 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %62, i32 0, i32 4, !dbg !15348, !ctir !1049
  %63 = load i8*, i8** %right_quote41, align 8, !dbg !15348, !tbaa !14128, !ctir !180
  %call42 = call i64 @quotearg_buffer_restyled(i8* %52, i64 %53, i8* %54, i64 %55, i32 %57, i32 %58, i32* %arraydecay39, i8* %61, i8* %63), !dbg !15349
  br label %if.end43, !dbg !15350

if.end43:                                         ; preds = %if.end32, %if.end15
  %64 = load i32, i32* %e, align 4, !dbg !15351, !tbaa !2632
  %call44 = call i32* @__errno_location() #16, !dbg !15352
  store i32 %64, i32* %call44, align 4, !dbg !15353, !tbaa !2632, !ctir !7
  %65 = load i8*, i8** %val, align 8, !dbg !15354, !tbaa !2645
  ret i8* %65, !dbg !15355
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_mem(i32 %n, i8* %arg, i64 %argsize) #4 !dbg !15356 !ctir !1072 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15357, metadata !DIExpression()), !dbg !15358
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15359, metadata !DIExpression()), !dbg !15360
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15361, metadata !DIExpression()), !dbg !15362
  %0 = load i32, i32* %n.addr, align 4, !dbg !15363, !tbaa !2632
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15364, !tbaa !2645
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !15365, !tbaa !3285
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 %2, %struct.quoting_options* @default_quoting_options), !dbg !15366
  ret i8* %call, !dbg !15367
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg(i8* %arg) #4 !dbg !15368 !ctir !218 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15369, metadata !DIExpression()), !dbg !15370
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15371, !tbaa !2645
  %call = call i8* @quotearg_n(i32 0, i8* %0), !dbg !15372
  ret i8* %call, !dbg !15373
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_mem(i8* %arg, i64 %argsize) #4 !dbg !15374 !ctir !1074 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15375, metadata !DIExpression()), !dbg !15376
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15377, metadata !DIExpression()), !dbg !15378
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15379, !tbaa !2645
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !15380, !tbaa !3285
  %call = call i8* @quotearg_n_mem(i32 0, i8* %0, i64 %1), !dbg !15381
  ret i8* %call, !dbg !15382
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style(i32 %n, i32 %s, i8* %arg) #4 !dbg !15383 !ctir !1076 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %o = alloca %struct.quoting_options, align 8, !ctir !1049
  store i32 %n, i32* %n.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15384, metadata !DIExpression()), !dbg !15385
  store i32 %s, i32* %s.addr, align 4, !tbaa !3292
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !15386, metadata !DIExpression()), !dbg !15387
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15388, metadata !DIExpression()), !dbg !15389
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !15390, metadata !DIExpression()), !dbg !15391
  %0 = load i32, i32* %s.addr, align 4, !dbg !15392, !tbaa !3292
  call void @quoting_options_from_style(%struct.quoting_options* sret %o, i32 %0), !dbg !15393
  %1 = load i32, i32* %n.addr, align 4, !dbg !15394, !tbaa !2632
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !15395, !tbaa !2645
  %call = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 -1, %struct.quoting_options* %o), !dbg !15396
  ret i8* %call, !dbg !15397
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @quoting_options_from_style(%struct.quoting_options* noalias sret %agg.result, i32 %style) #4 !dbg !15398 !ctir !1130 {
entry:
  %style.addr = alloca i32, align 4
  store i32 %style, i32* %style.addr, align 4, !tbaa !3292
  call void @llvm.dbg.declare(metadata i32* %style.addr, metadata !15399, metadata !DIExpression()), !dbg !15400
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %agg.result, metadata !15401, metadata !DIExpression()), !dbg !15402
  %0 = bitcast %struct.quoting_options* %agg.result to i8*, !dbg !15402
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 56, i1 false), !dbg !15402
  %1 = load i32, i32* %style.addr, align 4, !dbg !15403, !tbaa !3292
  %cmp = icmp eq i32 %1, 10, !dbg !15405
  br i1 %cmp, label %if.then, label %if.end, !dbg !15406

if.then:                                          ; preds = %entry
  call void @abort() #13, !dbg !15407
  unreachable, !dbg !15407

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %style.addr, align 4, !dbg !15408, !tbaa !3292
  %style1 = getelementptr inbounds %struct.quoting_options, %struct.quoting_options* %agg.result, i32 0, i32 0, !dbg !15409, !ctir !1037
  store i32 %2, i32* %style1, align 8, !dbg !15410, !tbaa !14022, !ctir !1012
  ret void, !dbg !15411
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style_mem(i32 %n, i32 %s, i8* %arg, i64 %argsize) #4 !dbg !15412 !ctir !1078 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o = alloca %struct.quoting_options, align 8, !ctir !1049
  store i32 %n, i32* %n.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15413, metadata !DIExpression()), !dbg !15414
  store i32 %s, i32* %s.addr, align 4, !tbaa !3292
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !15415, metadata !DIExpression()), !dbg !15416
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15417, metadata !DIExpression()), !dbg !15418
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15419, metadata !DIExpression()), !dbg !15420
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !15421, metadata !DIExpression()), !dbg !15422
  %0 = load i32, i32* %s.addr, align 4, !dbg !15423, !tbaa !3292
  call void @quoting_options_from_style(%struct.quoting_options* sret %o, i32 %0), !dbg !15424
  %1 = load i32, i32* %n.addr, align 4, !dbg !15425, !tbaa !2632
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !15426, !tbaa !2645
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !15427, !tbaa !3285
  %call = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 %3, %struct.quoting_options* %o), !dbg !15428
  ret i8* %call, !dbg !15429
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_style(i32 %s, i8* %arg) #4 !dbg !15430 !ctir !1080 {
entry:
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %s, i32* %s.addr, align 4, !tbaa !3292
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !15431, metadata !DIExpression()), !dbg !15432
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15433, metadata !DIExpression()), !dbg !15434
  %0 = load i32, i32* %s.addr, align 4, !dbg !15435, !tbaa !3292
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15436, !tbaa !2645
  %call = call i8* @quotearg_n_style(i32 0, i32 %0, i8* %1), !dbg !15437
  ret i8* %call, !dbg !15438
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_style_mem(i32 %s, i8* %arg, i64 %argsize) #4 !dbg !15439 !ctir !1082 {
entry:
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i32 %s, i32* %s.addr, align 4, !tbaa !3292
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !15440, metadata !DIExpression()), !dbg !15441
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15442, metadata !DIExpression()), !dbg !15443
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15444, metadata !DIExpression()), !dbg !15445
  %0 = load i32, i32* %s.addr, align 4, !dbg !15446, !tbaa !3292
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15447, !tbaa !2645
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !15448, !tbaa !3285
  %call = call i8* @quotearg_n_style_mem(i32 0, i32 %0, i8* %1, i64 %2), !dbg !15449
  ret i8* %call, !dbg !15450
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_char_mem(i8* %arg, i64 %argsize, i8 signext %ch) #4 !dbg !15451 !ctir !1084 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %ch.addr = alloca i8, align 1
  %options = alloca %struct.quoting_options, align 8, !ctir !1037
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15452, metadata !DIExpression()), !dbg !15453
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15454, metadata !DIExpression()), !dbg !15455
  store i8 %ch, i8* %ch.addr, align 1, !tbaa !3292
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !15456, metadata !DIExpression()), !dbg !15457
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %options, metadata !15458, metadata !DIExpression()), !dbg !15459
  %0 = bitcast %struct.quoting_options* %options to i8*, !dbg !15460
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !15460, !tbaa.struct !15461
  %1 = load i8, i8* %ch.addr, align 1, !dbg !15462, !tbaa !3292
  %call = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext %1, i32 1), !dbg !15463
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !15464, !tbaa !2645
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !15465, !tbaa !3285
  %call1 = call i8* @quotearg_n_options(i32 0, i8* %2, i64 %3, %struct.quoting_options* %options), !dbg !15466
  ret i8* %call1, !dbg !15467
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_char(i8* %arg, i8 signext %ch) #4 !dbg !15468 !ctir !1086 {
entry:
  %arg.addr = alloca i8*, align 8
  %ch.addr = alloca i8, align 1
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15469, metadata !DIExpression()), !dbg !15470
  store i8 %ch, i8* %ch.addr, align 1, !tbaa !3292
  call void @llvm.dbg.declare(metadata i8* %ch.addr, metadata !15471, metadata !DIExpression()), !dbg !15472
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15473, !tbaa !2645
  %1 = load i8, i8* %ch.addr, align 1, !dbg !15474, !tbaa !3292
  %call = call i8* @quotearg_char_mem(i8* %0, i64 -1, i8 signext %1), !dbg !15475
  ret i8* %call, !dbg !15476
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_colon(i8* %arg) #4 !dbg !15477 !ctir !218 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15478, metadata !DIExpression()), !dbg !15479
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15480, !tbaa !2645
  %call = call i8* @quotearg_char(i8* %0, i8 signext 58), !dbg !15481
  ret i8* %call, !dbg !15482
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_colon_mem(i8* %arg, i64 %argsize) #4 !dbg !15483 !ctir !1074 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15484, metadata !DIExpression()), !dbg !15485
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15486, metadata !DIExpression()), !dbg !15487
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15488, !tbaa !2645
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !15489, !tbaa !3285
  %call = call i8* @quotearg_char_mem(i8* %0, i64 %1, i8 signext 58), !dbg !15490
  ret i8* %call, !dbg !15491
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_style_colon(i32 %n, i32 %s, i8* %arg) #4 !dbg !15492 !ctir !1076 {
entry:
  %n.addr = alloca i32, align 4
  %s.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %options = alloca %struct.quoting_options, align 8, !ctir !1037
  %tmp = alloca %struct.quoting_options, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15493, metadata !DIExpression()), !dbg !15494
  store i32 %s, i32* %s.addr, align 4, !tbaa !3292
  call void @llvm.dbg.declare(metadata i32* %s.addr, metadata !15495, metadata !DIExpression()), !dbg !15496
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15497, metadata !DIExpression()), !dbg !15498
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %options, metadata !15499, metadata !DIExpression()), !dbg !15500
  %0 = load i32, i32* %s.addr, align 4, !dbg !15501, !tbaa !3292
  call void @quoting_options_from_style(%struct.quoting_options* sret %tmp, i32 %0), !dbg !15502
  %1 = bitcast %struct.quoting_options* %options to i8*, !dbg !15502
  %2 = bitcast %struct.quoting_options* %tmp to i8*, !dbg !15502
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 56, i1 false), !dbg !15502, !tbaa.struct !15461
  %call = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext 58, i32 1), !dbg !15503
  %3 = load i32, i32* %n.addr, align 4, !dbg !15504, !tbaa !2632
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !15505, !tbaa !2645
  %call1 = call i8* @quotearg_n_options(i32 %3, i8* %4, i64 -1, %struct.quoting_options* %options), !dbg !15506
  ret i8* %call1, !dbg !15507
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_custom(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg) #4 !dbg !15508 !ctir !1088 {
entry:
  %n.addr = alloca i32, align 4
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15509, metadata !DIExpression()), !dbg !15510
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !15511, metadata !DIExpression()), !dbg !15512
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !15513, metadata !DIExpression()), !dbg !15514
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15515, metadata !DIExpression()), !dbg !15516
  %0 = load i32, i32* %n.addr, align 4, !dbg !15517, !tbaa !2632
  %1 = load i8*, i8** %left_quote.addr, align 8, !dbg !15518, !tbaa !2645
  %2 = load i8*, i8** %right_quote.addr, align 8, !dbg !15519, !tbaa !2645
  %3 = load i8*, i8** %arg.addr, align 8, !dbg !15520, !tbaa !2645
  %call = call i8* @quotearg_n_custom_mem(i32 %0, i8* %1, i8* %2, i8* %3, i64 -1), !dbg !15521
  ret i8* %call, !dbg !15522
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_n_custom_mem(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) #4 !dbg !15523 !ctir !1090 {
entry:
  %n.addr = alloca i32, align 4
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  %o = alloca %struct.quoting_options, align 8, !ctir !1037
  store i32 %n, i32* %n.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15524, metadata !DIExpression()), !dbg !15525
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !15526, metadata !DIExpression()), !dbg !15527
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !15528, metadata !DIExpression()), !dbg !15529
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15530, metadata !DIExpression()), !dbg !15531
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15532, metadata !DIExpression()), !dbg !15533
  call void @llvm.dbg.declare(metadata %struct.quoting_options* %o, metadata !15534, metadata !DIExpression()), !dbg !15535
  %0 = bitcast %struct.quoting_options* %o to i8*, !dbg !15536
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56, i1 false), !dbg !15536, !tbaa.struct !15461
  %1 = load i8*, i8** %left_quote.addr, align 8, !dbg !15537, !tbaa !2645
  %2 = load i8*, i8** %right_quote.addr, align 8, !dbg !15538, !tbaa !2645
  call void @set_custom_quoting(%struct.quoting_options* %o, i8* %1, i8* %2), !dbg !15539
  %3 = load i32, i32* %n.addr, align 4, !dbg !15540, !tbaa !2632
  %4 = load i8*, i8** %arg.addr, align 8, !dbg !15541, !tbaa !2645
  %5 = load i64, i64* %argsize.addr, align 8, !dbg !15542, !tbaa !3285
  %call = call i8* @quotearg_n_options(i32 %3, i8* %4, i64 %5, %struct.quoting_options* %o), !dbg !15543
  ret i8* %call, !dbg !15544
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_custom(i8* %left_quote, i8* %right_quote, i8* %arg) #4 !dbg !15545 !ctir !1092 {
entry:
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !15546, metadata !DIExpression()), !dbg !15547
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !15548, metadata !DIExpression()), !dbg !15549
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15550, metadata !DIExpression()), !dbg !15551
  %0 = load i8*, i8** %left_quote.addr, align 8, !dbg !15552, !tbaa !2645
  %1 = load i8*, i8** %right_quote.addr, align 8, !dbg !15553, !tbaa !2645
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !15554, !tbaa !2645
  %call = call i8* @quotearg_n_custom(i32 0, i8* %0, i8* %1, i8* %2), !dbg !15555
  ret i8* %call, !dbg !15556
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quotearg_custom_mem(i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) #4 !dbg !15557 !ctir !1094 {
entry:
  %left_quote.addr = alloca i8*, align 8
  %right_quote.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %left_quote, i8** %left_quote.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %left_quote.addr, metadata !15558, metadata !DIExpression()), !dbg !15559
  store i8* %right_quote, i8** %right_quote.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %right_quote.addr, metadata !15560, metadata !DIExpression()), !dbg !15561
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15562, metadata !DIExpression()), !dbg !15563
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15564, metadata !DIExpression()), !dbg !15565
  %0 = load i8*, i8** %left_quote.addr, align 8, !dbg !15566, !tbaa !2645
  %1 = load i8*, i8** %right_quote.addr, align 8, !dbg !15567, !tbaa !2645
  %2 = load i8*, i8** %arg.addr, align 8, !dbg !15568, !tbaa !2645
  %3 = load i64, i64* %argsize.addr, align 8, !dbg !15569, !tbaa !3285
  %call = call i8* @quotearg_n_custom_mem(i32 0, i8* %0, i8* %1, i8* %2, i64 %3), !dbg !15570
  ret i8* %call, !dbg !15571
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_n_mem(i32 %n, i8* %arg, i64 %argsize) #4 !dbg !15572 !ctir !1096 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15573, metadata !DIExpression()), !dbg !15574
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15575, metadata !DIExpression()), !dbg !15576
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15577, metadata !DIExpression()), !dbg !15578
  %0 = load i32, i32* %n.addr, align 4, !dbg !15579, !tbaa !2632
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15580, !tbaa !2645
  %2 = load i64, i64* %argsize.addr, align 8, !dbg !15581, !tbaa !3285
  %call = call i8* @quotearg_n_options(i32 %0, i8* %1, i64 %2, %struct.quoting_options* @quote_quoting_options), !dbg !15582
  ret i8* %call, !dbg !15583
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_mem(i8* %arg, i64 %argsize) #4 !dbg !15584 !ctir !1098 {
entry:
  %arg.addr = alloca i8*, align 8
  %argsize.addr = alloca i64, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15585, metadata !DIExpression()), !dbg !15586
  store i64 %argsize, i64* %argsize.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %argsize.addr, metadata !15587, metadata !DIExpression()), !dbg !15588
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15589, !tbaa !2645
  %1 = load i64, i64* %argsize.addr, align 8, !dbg !15590, !tbaa !3285
  %call = call i8* @quote_n_mem(i32 0, i8* %0, i64 %1), !dbg !15591
  ret i8* %call, !dbg !15592
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote_n(i32 %n, i8* %arg) #4 !dbg !15593 !ctir !1100 {
entry:
  %n.addr = alloca i32, align 4
  %arg.addr = alloca i8*, align 8
  store i32 %n, i32* %n.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !15594, metadata !DIExpression()), !dbg !15595
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15596, metadata !DIExpression()), !dbg !15597
  %0 = load i32, i32* %n.addr, align 4, !dbg !15598, !tbaa !2632
  %1 = load i8*, i8** %arg.addr, align 8, !dbg !15599, !tbaa !2645
  %call = call i8* @quote_n_mem(i32 %0, i8* %1, i64 -1), !dbg !15600
  ret i8* %call, !dbg !15601
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quote(i8* %arg) #4 !dbg !15602 !ctir !1102 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !15603, metadata !DIExpression()), !dbg !15604
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !15605, !tbaa !2645
  %call = call i8* @quote_n(i32 0, i8* %0), !dbg !15606
  ret i8* %call, !dbg !15607
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @renameatu(i32 %fd1, i8* %src, i32 %fd2, i8* %dst, i32 %flags) #4 !dbg !15608 !ctir !1782 {
entry:
  %retval = alloca i32, align 4
  %fd1.addr = alloca i32, align 4
  %src.addr = alloca i8*, align 8
  %fd2.addr = alloca i32, align 4
  %dst.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %ret_val = alloca i32, align 4, !ctir !7
  %err = alloca i32, align 4, !ctir !7
  %src_len = alloca i64, align 8, !ctir !55
  %dst_len = alloca i64, align 8, !ctir !55
  %src_temp = alloca i8*, align 8, !ctir !9
  %dst_temp = alloca i8*, align 8, !ctir !9
  %src_slash = alloca i8, align 1, !ctir !142
  %dst_slash = alloca i8, align 1, !ctir !142
  %rename_errno = alloca i32, align 4, !ctir !7
  %src_st = alloca %struct.stat, align 8, !ctir !15610
  %dst_st = alloca %struct.stat, align 8, !ctir !15610
  %dst_found_nonexistent = alloca i8, align 1, !ctir !142
  store i32 %fd1, i32* %fd1.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %fd1.addr, metadata !15631, metadata !DIExpression()), !dbg !15632
  store i8* %src, i8** %src.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !15633, metadata !DIExpression()), !dbg !15634
  store i32 %fd2, i32* %fd2.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %fd2.addr, metadata !15635, metadata !DIExpression()), !dbg !15636
  store i8* %dst, i8** %dst.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !15637, metadata !DIExpression()), !dbg !15638
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !15639, metadata !DIExpression()), !dbg !15640
  call void @llvm.dbg.declare(metadata i32* %ret_val, metadata !15641, metadata !DIExpression()), !dbg !15642
  store i32 -1, i32* %ret_val, align 4, !dbg !15642, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %err, metadata !15643, metadata !DIExpression()), !dbg !15644
  store i32 22, i32* %err, align 4, !dbg !15644, !tbaa !2632
  %0 = load i32, i32* %fd1.addr, align 4, !dbg !15645, !tbaa !2632
  %1 = load i8*, i8** %src.addr, align 8, !dbg !15646, !tbaa !2645
  %2 = load i32, i32* %fd2.addr, align 4, !dbg !15647, !tbaa !2632
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !15648, !tbaa !2645
  %4 = load i32, i32* %flags.addr, align 4, !dbg !15649, !tbaa !2632
  %call = call i32 @renameat2(i32 %0, i8* %1, i32 %2, i8* %3, i32 %4) #9, !dbg !15650
  store i32 %call, i32* %ret_val, align 4, !dbg !15651, !tbaa !2632
  %call1 = call i32* @__errno_location() #16, !dbg !15652
  %5 = load i32, i32* %call1, align 4, !dbg !15652, !tbaa !2632, !ctir !7
  store i32 %5, i32* %err, align 4, !dbg !15653, !tbaa !2632
  %6 = load i32, i32* %ret_val, align 4, !dbg !15654, !tbaa !2632
  %cmp = icmp slt i32 %6, 0, !dbg !15656
  br i1 %cmp, label %land.lhs.true, label %if.then, !dbg !15657

land.lhs.true:                                    ; preds = %entry
  %7 = load i32, i32* %err, align 4, !dbg !15658, !tbaa !2632
  %cmp2 = icmp eq i32 %7, 22, !dbg !15659
  br i1 %cmp2, label %if.end, label %lor.lhs.false, !dbg !15660

lor.lhs.false:                                    ; preds = %land.lhs.true
  %8 = load i32, i32* %err, align 4, !dbg !15661, !tbaa !2632
  %cmp3 = icmp eq i32 %8, 38, !dbg !15662
  br i1 %cmp3, label %if.end, label %lor.lhs.false4, !dbg !15663

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %9 = load i32, i32* %err, align 4, !dbg !15664, !tbaa !2632
  %cmp5 = icmp eq i32 %9, 95, !dbg !15665
  br i1 %cmp5, label %if.end, label %if.then, !dbg !15666

if.then:                                          ; preds = %lor.lhs.false4, %entry
  %10 = load i32, i32* %ret_val, align 4, !dbg !15667, !tbaa !2632
  store i32 %10, i32* %retval, align 4, !dbg !15668
  br label %return, !dbg !15668

if.end:                                           ; preds = %lor.lhs.false4, %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %src_len, metadata !15669, metadata !DIExpression()), !dbg !15671
  call void @llvm.dbg.declare(metadata i64* %dst_len, metadata !15672, metadata !DIExpression()), !dbg !15673
  call void @llvm.dbg.declare(metadata i8** %src_temp, metadata !15674, metadata !DIExpression()), !dbg !15675
  %11 = load i8*, i8** %src.addr, align 8, !dbg !15676, !tbaa !2645
  store i8* %11, i8** %src_temp, align 8, !dbg !15675, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dst_temp, metadata !15677, metadata !DIExpression()), !dbg !15678
  %12 = load i8*, i8** %dst.addr, align 8, !dbg !15679, !tbaa !2645
  store i8* %12, i8** %dst_temp, align 8, !dbg !15678, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8* %src_slash, metadata !15680, metadata !DIExpression()), !dbg !15681
  call void @llvm.dbg.declare(metadata i8* %dst_slash, metadata !15682, metadata !DIExpression()), !dbg !15683
  call void @llvm.dbg.declare(metadata i32* %rename_errno, metadata !15684, metadata !DIExpression()), !dbg !15685
  store i32 20, i32* %rename_errno, align 4, !dbg !15685, !tbaa !2632
  call void @llvm.dbg.declare(metadata %struct.stat* %src_st, metadata !15686, metadata !DIExpression()), !dbg !15687
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_st, metadata !15688, metadata !DIExpression()), !dbg !15689
  call void @llvm.dbg.declare(metadata i8* %dst_found_nonexistent, metadata !15690, metadata !DIExpression()), !dbg !15691
  store i8 0, i8* %dst_found_nonexistent, align 1, !dbg !15691, !tbaa !2739
  %13 = load i32, i32* %flags.addr, align 4, !dbg !15692, !tbaa !2632
  %cmp6 = icmp ne i32 %13, 0, !dbg !15694
  br i1 %cmp6, label %if.then7, label %if.end23, !dbg !15695

if.then7:                                         ; preds = %if.end
  %14 = load i32, i32* %flags.addr, align 4, !dbg !15696, !tbaa !2632
  %and = and i32 %14, -2, !dbg !15699
  %tobool = icmp ne i32 %and, 0, !dbg !15699
  br i1 %tobool, label %if.then8, label %if.else, !dbg !15700

if.then8:                                         ; preds = %if.then7
  %call9 = call i32 @errno_fail(i32 95), !dbg !15701
  store i32 %call9, i32* %retval, align 4, !dbg !15702
  br label %return, !dbg !15702

if.else:                                          ; preds = %if.then7
  %15 = load i32, i32* %fd2.addr, align 4, !dbg !15703, !tbaa !2632
  %16 = load i8*, i8** %dst.addr, align 8, !dbg !15706, !tbaa !2645
  %call10 = call i32 @lstatat(i32 %15, i8* %16, %struct.stat* %dst_st), !dbg !15707
  %cmp11 = icmp eq i32 %call10, 0, !dbg !15708
  br i1 %cmp11, label %if.then15, label %lor.lhs.false12, !dbg !15709

lor.lhs.false12:                                  ; preds = %if.else
  %call13 = call i32* @__errno_location() #16, !dbg !15710
  %17 = load i32, i32* %call13, align 4, !dbg !15710, !tbaa !2632, !ctir !7
  %cmp14 = icmp eq i32 %17, 75, !dbg !15711
  br i1 %cmp14, label %if.then15, label %if.end17, !dbg !15712

if.then15:                                        ; preds = %lor.lhs.false12, %if.else
  %call16 = call i32 @errno_fail(i32 17), !dbg !15713
  store i32 %call16, i32* %retval, align 4, !dbg !15714
  br label %return, !dbg !15714

if.end17:                                         ; preds = %lor.lhs.false12
  %call18 = call i32* @__errno_location() #16, !dbg !15715
  %18 = load i32, i32* %call18, align 4, !dbg !15715, !tbaa !2632, !ctir !7
  %cmp19 = icmp ne i32 %18, 2, !dbg !15717
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !15718

if.then20:                                        ; preds = %if.end17
  store i32 -1, i32* %retval, align 4, !dbg !15719
  br label %return, !dbg !15719

if.end21:                                         ; preds = %if.end17
  store i8 1, i8* %dst_found_nonexistent, align 1, !dbg !15720, !tbaa !2739
  br label %if.end22

if.end22:                                         ; preds = %if.end21
  br label %if.end23, !dbg !15721

if.end23:                                         ; preds = %if.end22, %if.end
  %19 = load i8*, i8** %src.addr, align 8, !dbg !15722, !tbaa !2645
  %call24 = call i64 @strlen(i8* %19) #14, !dbg !15723
  store i64 %call24, i64* %src_len, align 8, !dbg !15724, !tbaa !3285
  %20 = load i8*, i8** %dst.addr, align 8, !dbg !15725, !tbaa !2645
  %call25 = call i64 @strlen(i8* %20) #14, !dbg !15726
  store i64 %call25, i64* %dst_len, align 8, !dbg !15727, !tbaa !3285
  %21 = load i64, i64* %src_len, align 8, !dbg !15728, !tbaa !3285
  %tobool26 = icmp ne i64 %21, 0, !dbg !15728
  br i1 %tobool26, label %lor.lhs.false27, label %if.then29, !dbg !15730

lor.lhs.false27:                                  ; preds = %if.end23
  %22 = load i64, i64* %dst_len, align 8, !dbg !15731, !tbaa !3285
  %tobool28 = icmp ne i64 %22, 0, !dbg !15731
  br i1 %tobool28, label %if.end31, label %if.then29, !dbg !15732

if.then29:                                        ; preds = %lor.lhs.false27, %if.end23
  %23 = load i32, i32* %fd1.addr, align 4, !dbg !15733, !tbaa !2632
  %24 = load i8*, i8** %src.addr, align 8, !dbg !15734, !tbaa !2645
  %25 = load i32, i32* %fd2.addr, align 4, !dbg !15735, !tbaa !2632
  %26 = load i8*, i8** %dst.addr, align 8, !dbg !15736, !tbaa !2645
  %call30 = call i32 @renameat(i32 %23, i8* %24, i32 %25, i8* %26) #9, !dbg !15737
  store i32 %call30, i32* %retval, align 4, !dbg !15738
  br label %return, !dbg !15738

if.end31:                                         ; preds = %lor.lhs.false27
  %27 = load i8*, i8** %src.addr, align 8, !dbg !15739, !tbaa !2645
  %28 = load i64, i64* %src_len, align 8, !dbg !15740, !tbaa !3285
  %sub = sub i64 %28, 1, !dbg !15741
  %arrayidx = getelementptr inbounds i8, i8* %27, i64 %sub, !dbg !15739, !ctir !180
  %29 = load i8, i8* %arrayidx, align 1, !dbg !15739, !tbaa !3292
  %conv = sext i8 %29 to i32, !dbg !15739
  %cmp32 = icmp eq i32 %conv, 47, !dbg !15742
  %frombool = zext i1 %cmp32 to i8, !dbg !15743
  store i8 %frombool, i8* %src_slash, align 1, !dbg !15743, !tbaa !2739
  %30 = load i8*, i8** %dst.addr, align 8, !dbg !15744, !tbaa !2645
  %31 = load i64, i64* %dst_len, align 8, !dbg !15745, !tbaa !3285
  %sub34 = sub i64 %31, 1, !dbg !15746
  %arrayidx35 = getelementptr inbounds i8, i8* %30, i64 %sub34, !dbg !15744, !ctir !180
  %32 = load i8, i8* %arrayidx35, align 1, !dbg !15744, !tbaa !3292
  %conv36 = sext i8 %32 to i32, !dbg !15744
  %cmp37 = icmp eq i32 %conv36, 47, !dbg !15747
  %frombool39 = zext i1 %cmp37 to i8, !dbg !15748
  store i8 %frombool39, i8* %dst_slash, align 1, !dbg !15748, !tbaa !2739
  %33 = load i8, i8* %src_slash, align 1, !dbg !15749, !tbaa !2739
  %tobool40 = trunc i8 %33 to i1, !dbg !15749
  br i1 %tobool40, label %if.end45, label %land.lhs.true41, !dbg !15751

land.lhs.true41:                                  ; preds = %if.end31
  %34 = load i8, i8* %dst_slash, align 1, !dbg !15752, !tbaa !2739
  %tobool42 = trunc i8 %34 to i1, !dbg !15752
  br i1 %tobool42, label %if.end45, label %if.then43, !dbg !15753

if.then43:                                        ; preds = %land.lhs.true41
  %35 = load i32, i32* %fd1.addr, align 4, !dbg !15754, !tbaa !2632
  %36 = load i8*, i8** %src.addr, align 8, !dbg !15755, !tbaa !2645
  %37 = load i32, i32* %fd2.addr, align 4, !dbg !15756, !tbaa !2632
  %38 = load i8*, i8** %dst.addr, align 8, !dbg !15757, !tbaa !2645
  %call44 = call i32 @renameat(i32 %35, i8* %36, i32 %37, i8* %38) #9, !dbg !15758
  store i32 %call44, i32* %retval, align 4, !dbg !15759
  br label %return, !dbg !15759

if.end45:                                         ; preds = %land.lhs.true41, %if.end31
  %39 = load i32, i32* %fd1.addr, align 4, !dbg !15760, !tbaa !2632
  %40 = load i8*, i8** %src.addr, align 8, !dbg !15762, !tbaa !2645
  %call46 = call i32 @lstatat(i32 %39, i8* %40, %struct.stat* %src_st), !dbg !15763
  %tobool47 = icmp ne i32 %call46, 0, !dbg !15763
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !15764

if.then48:                                        ; preds = %if.end45
  store i32 -1, i32* %retval, align 4, !dbg !15765
  br label %return, !dbg !15765

if.end49:                                         ; preds = %if.end45
  %41 = load i8, i8* %dst_found_nonexistent, align 1, !dbg !15766, !tbaa !2739
  %tobool50 = trunc i8 %41 to i1, !dbg !15766
  br i1 %tobool50, label %if.then51, label %if.else58, !dbg !15768

if.then51:                                        ; preds = %if.end49
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %src_st, i32 0, i32 3, !dbg !15769, !ctir !15610
  %42 = load i32, i32* %st_mode, align 8, !dbg !15769, !tbaa !2911, !ctir !140
  %and52 = and i32 %42, 61440, !dbg !15769
  %cmp53 = icmp eq i32 %and52, 16384, !dbg !15769
  br i1 %cmp53, label %if.end57, label %if.then55, !dbg !15772

if.then55:                                        ; preds = %if.then51
  %call56 = call i32 @errno_fail(i32 2), !dbg !15773
  store i32 %call56, i32* %retval, align 4, !dbg !15774
  br label %return, !dbg !15774

if.end57:                                         ; preds = %if.then51
  br label %if.end89, !dbg !15775

if.else58:                                        ; preds = %if.end49
  %43 = load i32, i32* %fd2.addr, align 4, !dbg !15776, !tbaa !2632
  %44 = load i8*, i8** %dst.addr, align 8, !dbg !15778, !tbaa !2645
  %call59 = call i32 @lstatat(i32 %43, i8* %44, %struct.stat* %dst_st), !dbg !15779
  %tobool60 = icmp ne i32 %call59, 0, !dbg !15779
  br i1 %tobool60, label %if.then61, label %if.else72, !dbg !15780

if.then61:                                        ; preds = %if.else58
  %call62 = call i32* @__errno_location() #16, !dbg !15781
  %45 = load i32, i32* %call62, align 4, !dbg !15781, !tbaa !2632, !ctir !7
  %cmp63 = icmp ne i32 %45, 2, !dbg !15784
  br i1 %cmp63, label %if.then70, label %lor.lhs.false65, !dbg !15785

lor.lhs.false65:                                  ; preds = %if.then61
  %st_mode66 = getelementptr inbounds %struct.stat, %struct.stat* %src_st, i32 0, i32 3, !dbg !15786, !ctir !15610
  %46 = load i32, i32* %st_mode66, align 8, !dbg !15786, !tbaa !2911, !ctir !140
  %and67 = and i32 %46, 61440, !dbg !15786
  %cmp68 = icmp eq i32 %and67, 16384, !dbg !15786
  br i1 %cmp68, label %if.end71, label %if.then70, !dbg !15787

if.then70:                                        ; preds = %lor.lhs.false65, %if.then61
  store i32 -1, i32* %retval, align 4, !dbg !15788
  br label %return, !dbg !15788

if.end71:                                         ; preds = %lor.lhs.false65
  br label %if.end88, !dbg !15789

if.else72:                                        ; preds = %if.else58
  %st_mode73 = getelementptr inbounds %struct.stat, %struct.stat* %dst_st, i32 0, i32 3, !dbg !15790, !ctir !15610
  %47 = load i32, i32* %st_mode73, align 8, !dbg !15790, !tbaa !2911, !ctir !140
  %and74 = and i32 %47, 61440, !dbg !15790
  %cmp75 = icmp eq i32 %and74, 16384, !dbg !15790
  br i1 %cmp75, label %if.else79, label %if.then77, !dbg !15792

if.then77:                                        ; preds = %if.else72
  %call78 = call i32 @errno_fail(i32 20), !dbg !15793
  store i32 %call78, i32* %retval, align 4, !dbg !15794
  br label %return, !dbg !15794

if.else79:                                        ; preds = %if.else72
  %st_mode80 = getelementptr inbounds %struct.stat, %struct.stat* %src_st, i32 0, i32 3, !dbg !15795, !ctir !15610
  %48 = load i32, i32* %st_mode80, align 8, !dbg !15795, !tbaa !2911, !ctir !140
  %and81 = and i32 %48, 61440, !dbg !15795
  %cmp82 = icmp eq i32 %and81, 16384, !dbg !15795
  br i1 %cmp82, label %if.end86, label %if.then84, !dbg !15797

if.then84:                                        ; preds = %if.else79
  %call85 = call i32 @errno_fail(i32 21), !dbg !15798
  store i32 %call85, i32* %retval, align 4, !dbg !15799
  br label %return, !dbg !15799

if.end86:                                         ; preds = %if.else79
  br label %if.end87

if.end87:                                         ; preds = %if.end86
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %if.end71
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %if.end57
  %49 = load i32, i32* %fd1.addr, align 4, !dbg !15800, !tbaa !2632
  %50 = load i8*, i8** %src_temp, align 8, !dbg !15801, !tbaa !2645
  %51 = load i32, i32* %fd2.addr, align 4, !dbg !15802, !tbaa !2632
  %52 = load i8*, i8** %dst_temp, align 8, !dbg !15803, !tbaa !2645
  %call90 = call i32 @renameat(i32 %49, i8* %50, i32 %51, i8* %52) #9, !dbg !15804
  store i32 %call90, i32* %ret_val, align 4, !dbg !15805, !tbaa !2632
  %call91 = call i32* @__errno_location() #16, !dbg !15806
  %53 = load i32, i32* %call91, align 4, !dbg !15806, !tbaa !2632, !ctir !7
  store i32 %53, i32* %rename_errno, align 4, !dbg !15807, !tbaa !2632
  br label %out, !dbg !15808

out:                                              ; preds = %if.end89
  call void @llvm.dbg.label(metadata !15809), !dbg !15810
  %54 = load i8*, i8** %src_temp, align 8, !dbg !15811, !tbaa !2645
  %55 = load i8*, i8** %src.addr, align 8, !dbg !15813, !tbaa !2645
  %cmp92 = icmp ne i8* %54, %55, !dbg !15814
  br i1 %cmp92, label %if.then94, label %if.end95, !dbg !15815

if.then94:                                        ; preds = %out
  %56 = load i8*, i8** %src_temp, align 8, !dbg !15816, !tbaa !2645
  call void @free(i8* %56) #9, !dbg !15817
  br label %if.end95, !dbg !15817

if.end95:                                         ; preds = %if.then94, %out
  %57 = load i8*, i8** %dst_temp, align 8, !dbg !15818, !tbaa !2645
  %58 = load i8*, i8** %dst.addr, align 8, !dbg !15820, !tbaa !2645
  %cmp96 = icmp ne i8* %57, %58, !dbg !15821
  br i1 %cmp96, label %if.then98, label %if.end99, !dbg !15822

if.then98:                                        ; preds = %if.end95
  %59 = load i8*, i8** %dst_temp, align 8, !dbg !15823, !tbaa !2645
  call void @free(i8* %59) #9, !dbg !15824
  br label %if.end99, !dbg !15824

if.end99:                                         ; preds = %if.then98, %if.end95
  %60 = load i32, i32* %rename_errno, align 4, !dbg !15825, !tbaa !2632
  %call100 = call i32* @__errno_location() #16, !dbg !15826
  store i32 %60, i32* %call100, align 4, !dbg !15827, !tbaa !2632, !ctir !7
  %61 = load i32, i32* %ret_val, align 4, !dbg !15828, !tbaa !2632
  store i32 %61, i32* %retval, align 4, !dbg !15829
  br label %return, !dbg !15829

return:                                           ; preds = %if.end99, %if.then84, %if.then77, %if.then70, %if.then55, %if.then48, %if.then43, %if.then29, %if.then20, %if.then15, %if.then8, %if.then
  %62 = load i32, i32* %retval, align 4, !dbg !15830
  ret i32 %62, !dbg !15830
}

; Function Attrs: nounwind
declare dso_local i32 @renameat2(i32, i8*, i32, i8*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @errno_fail(i32 %e) #4 !dbg !15831 !ctir !1784 {
entry:
  %e.addr = alloca i32, align 4
  store i32 %e, i32* %e.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %e.addr, metadata !15832, metadata !DIExpression()), !dbg !15833
  %0 = load i32, i32* %e.addr, align 4, !dbg !15834, !tbaa !2632
  %call = call i32* @__errno_location() #16, !dbg !15835
  store i32 %0, i32* %call, align 4, !dbg !15836, !tbaa !2632, !ctir !7
  ret i32 -1, !dbg !15837
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @safe_read(i32 %fd, i8* %buf, i64 %count) #4 !dbg !15838 !ctir !1691 {
entry:
  %retval = alloca i64, align 8
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %result = alloca i64, align 8, !ctir !692
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !15840, metadata !DIExpression()), !dbg !15841
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15842, metadata !DIExpression()), !dbg !15843
  store i64 %count, i64* %count.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !15844, metadata !DIExpression()), !dbg !15845
  br label %for.cond, !dbg !15846

for.cond:                                         ; preds = %if.end11, %if.then3, %entry
  call void @llvm.dbg.declare(metadata i64* %result, metadata !15847, metadata !DIExpression()), !dbg !15851
  %0 = load i32, i32* %fd.addr, align 4, !dbg !15852, !tbaa !2632
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !15853, !tbaa !2645
  %2 = load i64, i64* %count.addr, align 8, !dbg !15854, !tbaa !3285
  %call = call i64 @read(i32 %0, i8* %1, i64 %2), !dbg !15855
  store i64 %call, i64* %result, align 8, !dbg !15851, !tbaa !3285
  %3 = load i64, i64* %result, align 8, !dbg !15856, !tbaa !3285
  %cmp = icmp sle i64 0, %3, !dbg !15858
  br i1 %cmp, label %if.then, label %if.else, !dbg !15859

if.then:                                          ; preds = %for.cond
  %4 = load i64, i64* %result, align 8, !dbg !15860, !tbaa !3285
  store i64 %4, i64* %retval, align 8, !dbg !15861
  br label %return, !dbg !15861

if.else:                                          ; preds = %for.cond
  %call1 = call i32* @__errno_location() #16, !dbg !15862
  %5 = load i32, i32* %call1, align 4, !dbg !15862, !tbaa !2632, !ctir !7
  %cmp2 = icmp eq i32 %5, 4, !dbg !15862
  br i1 %cmp2, label %if.then3, label %if.else4, !dbg !15864

if.then3:                                         ; preds = %if.else
  br label %for.cond, !dbg !15865, !llvm.loop !15866

if.else4:                                         ; preds = %if.else
  %call5 = call i32* @__errno_location() #16, !dbg !15869
  %6 = load i32, i32* %call5, align 4, !dbg !15869, !tbaa !2632, !ctir !7
  %cmp6 = icmp eq i32 %6, 22, !dbg !15871
  br i1 %cmp6, label %land.lhs.true, label %if.else9, !dbg !15872

land.lhs.true:                                    ; preds = %if.else4
  %7 = load i64, i64* %count.addr, align 8, !dbg !15873, !tbaa !3285
  %cmp7 = icmp ult i64 2146435072, %7, !dbg !15874
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !15875

if.then8:                                         ; preds = %land.lhs.true
  store i64 2146435072, i64* %count.addr, align 8, !dbg !15876, !tbaa !3285
  br label %if.end, !dbg !15877

if.else9:                                         ; preds = %land.lhs.true, %if.else4
  %8 = load i64, i64* %result, align 8, !dbg !15878, !tbaa !3285
  store i64 %8, i64* %retval, align 8, !dbg !15879
  br label %return, !dbg !15879

if.end:                                           ; preds = %if.then8
  br label %if.end10

if.end10:                                         ; preds = %if.end
  br label %if.end11

if.end11:                                         ; preds = %if.end10
  br label %for.cond, !dbg !15880, !llvm.loop !15866

return:                                           ; preds = %if.else9, %if.then
  %9 = load i64, i64* %retval, align 8, !dbg !15881
  ret i64 %9, !dbg !15881
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @safe_write(i32 %fd, i8* %buf, i64 %count) #4 !dbg !15882 !ctir !1696 {
entry:
  %retval = alloca i64, align 8
  %fd.addr = alloca i32, align 4
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %result = alloca i64, align 8, !ctir !692
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !15883, metadata !DIExpression()), !dbg !15884
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15885, metadata !DIExpression()), !dbg !15886
  store i64 %count, i64* %count.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !15887, metadata !DIExpression()), !dbg !15888
  br label %for.cond, !dbg !15889

for.cond:                                         ; preds = %if.end11, %if.then3, %entry
  call void @llvm.dbg.declare(metadata i64* %result, metadata !15890, metadata !DIExpression()), !dbg !15894
  %0 = load i32, i32* %fd.addr, align 4, !dbg !15895, !tbaa !2632
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !15896, !tbaa !2645
  %2 = load i64, i64* %count.addr, align 8, !dbg !15897, !tbaa !3285
  %call = call i64 @write(i32 %0, i8* %1, i64 %2), !dbg !15898
  store i64 %call, i64* %result, align 8, !dbg !15894, !tbaa !3285
  %3 = load i64, i64* %result, align 8, !dbg !15899, !tbaa !3285
  %cmp = icmp sle i64 0, %3, !dbg !15901
  br i1 %cmp, label %if.then, label %if.else, !dbg !15902

if.then:                                          ; preds = %for.cond
  %4 = load i64, i64* %result, align 8, !dbg !15903, !tbaa !3285
  store i64 %4, i64* %retval, align 8, !dbg !15904
  br label %return, !dbg !15904

if.else:                                          ; preds = %for.cond
  %call1 = call i32* @__errno_location() #16, !dbg !15905
  %5 = load i32, i32* %call1, align 4, !dbg !15905, !tbaa !2632, !ctir !7
  %cmp2 = icmp eq i32 %5, 4, !dbg !15905
  br i1 %cmp2, label %if.then3, label %if.else4, !dbg !15907

if.then3:                                         ; preds = %if.else
  br label %for.cond, !dbg !15908, !llvm.loop !15909

if.else4:                                         ; preds = %if.else
  %call5 = call i32* @__errno_location() #16, !dbg !15912
  %6 = load i32, i32* %call5, align 4, !dbg !15912, !tbaa !2632, !ctir !7
  %cmp6 = icmp eq i32 %6, 22, !dbg !15914
  br i1 %cmp6, label %land.lhs.true, label %if.else9, !dbg !15915

land.lhs.true:                                    ; preds = %if.else4
  %7 = load i64, i64* %count.addr, align 8, !dbg !15916, !tbaa !3285
  %cmp7 = icmp ult i64 2146435072, %7, !dbg !15917
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !15918

if.then8:                                         ; preds = %land.lhs.true
  store i64 2146435072, i64* %count.addr, align 8, !dbg !15919, !tbaa !3285
  br label %if.end, !dbg !15920

if.else9:                                         ; preds = %land.lhs.true, %if.else4
  %8 = load i64, i64* %result, align 8, !dbg !15921, !tbaa !3285
  store i64 %8, i64* %retval, align 8, !dbg !15922
  br label %return, !dbg !15922

if.end:                                           ; preds = %if.then8
  br label %if.end10

if.end10:                                         ; preds = %if.end
  br label %if.end11

if.end11:                                         ; preds = %if.end10
  br label %for.cond, !dbg !15923, !llvm.loop !15909

return:                                           ; preds = %if.else9, %if.then
  %9 = load i64, i64* %retval, align 8, !dbg !15924
  ret i64 %9, !dbg !15924
}

declare dso_local i64 @write(i32, i8*, i64) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @same_name(i8* %source, i8* %dest) #4 !dbg !15925 !ctir !1795 {
entry:
  %source.addr = alloca i8*, align 8
  %dest.addr = alloca i8*, align 8
  store i8* %source, i8** %source.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !15927, metadata !DIExpression()), !dbg !15928
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !15929, metadata !DIExpression()), !dbg !15930
  %0 = load i8*, i8** %source.addr, align 8, !dbg !15931, !tbaa !2645
  %1 = load i8*, i8** %dest.addr, align 8, !dbg !15932, !tbaa !2645
  %call = call zeroext i1 @same_nameat(i32 -100, i8* %0, i32 -100, i8* %1), !dbg !15933
  ret i1 %call, !dbg !15934
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @same_nameat(i32 %source_dfd, i8* %source, i32 %dest_dfd, i8* %dest) #4 !dbg !15935 !ctir !1797 {
entry:
  %source_dfd.addr = alloca i32, align 4
  %source.addr = alloca i8*, align 8
  %dest_dfd.addr = alloca i32, align 4
  %dest.addr = alloca i8*, align 8
  %source_basename = alloca i8*, align 8, !ctir !180
  %dest_basename = alloca i8*, align 8, !ctir !180
  %source_baselen = alloca i64, align 8, !ctir !55
  %dest_baselen = alloca i64, align 8, !ctir !55
  %identical_basenames = alloca i8, align 1, !ctir !142
  %compare_dirs = alloca i8, align 1, !ctir !142
  %same = alloca i8, align 1, !ctir !142
  %source_dir_stats = alloca %struct.stat, align 8, !ctir !15936
  %dest_dir_stats = alloca %struct.stat, align 8, !ctir !15936
  %source_dirname = alloca i8*, align 8, !ctir !9
  %flags = alloca i32, align 4, !ctir !7
  %dest_dirname = alloca i8*, align 8, !ctir !9
  store i32 %source_dfd, i32* %source_dfd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %source_dfd.addr, metadata !15957, metadata !DIExpression()), !dbg !15958
  store i8* %source, i8** %source.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !15959, metadata !DIExpression()), !dbg !15960
  store i32 %dest_dfd, i32* %dest_dfd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %dest_dfd.addr, metadata !15961, metadata !DIExpression()), !dbg !15962
  store i8* %dest, i8** %dest.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dest.addr, metadata !15963, metadata !DIExpression()), !dbg !15964
  call void @llvm.dbg.declare(metadata i8** %source_basename, metadata !15965, metadata !DIExpression()), !dbg !15966
  %0 = load i8*, i8** %source.addr, align 8, !dbg !15967, !tbaa !2645
  %call = call i8* @last_component(i8* %0) #14, !dbg !15968
  store i8* %call, i8** %source_basename, align 8, !dbg !15966, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dest_basename, metadata !15969, metadata !DIExpression()), !dbg !15970
  %1 = load i8*, i8** %dest.addr, align 8, !dbg !15971, !tbaa !2645
  %call1 = call i8* @last_component(i8* %1) #14, !dbg !15972
  store i8* %call1, i8** %dest_basename, align 8, !dbg !15970, !tbaa !2645
  call void @llvm.dbg.declare(metadata i64* %source_baselen, metadata !15973, metadata !DIExpression()), !dbg !15974
  %2 = load i8*, i8** %source_basename, align 8, !dbg !15975, !tbaa !2645
  %call2 = call i64 @base_len(i8* %2) #14, !dbg !15976
  store i64 %call2, i64* %source_baselen, align 8, !dbg !15974, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %dest_baselen, metadata !15977, metadata !DIExpression()), !dbg !15978
  %3 = load i8*, i8** %dest_basename, align 8, !dbg !15979, !tbaa !2645
  %call3 = call i64 @base_len(i8* %3) #14, !dbg !15980
  store i64 %call3, i64* %dest_baselen, align 8, !dbg !15978, !tbaa !3285
  call void @llvm.dbg.declare(metadata i8* %identical_basenames, metadata !15981, metadata !DIExpression()), !dbg !15982
  %4 = load i64, i64* %source_baselen, align 8, !dbg !15983, !tbaa !3285
  %5 = load i64, i64* %dest_baselen, align 8, !dbg !15984, !tbaa !3285
  %cmp = icmp eq i64 %4, %5, !dbg !15985
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !15986

land.rhs:                                         ; preds = %entry
  %6 = load i8*, i8** %source_basename, align 8, !dbg !15987, !tbaa !2645
  %7 = load i8*, i8** %dest_basename, align 8, !dbg !15988, !tbaa !2645
  %8 = load i64, i64* %dest_baselen, align 8, !dbg !15989, !tbaa !3285
  %call4 = call i32 @memcmp(i8* %6, i8* %7, i64 %8) #14, !dbg !15990
  %cmp5 = icmp eq i32 %call4, 0, !dbg !15991
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %9 = phi i1 [ false, %entry ], [ %cmp5, %land.rhs ], !dbg !15992
  %frombool = zext i1 %9 to i8, !dbg !15982
  store i8 %frombool, i8* %identical_basenames, align 1, !dbg !15982, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %compare_dirs, metadata !15993, metadata !DIExpression()), !dbg !15994
  %10 = load i8, i8* %identical_basenames, align 1, !dbg !15995, !tbaa !2739
  %tobool = trunc i8 %10 to i1, !dbg !15995
  %frombool6 = zext i1 %tobool to i8, !dbg !15994
  store i8 %frombool6, i8* %compare_dirs, align 1, !dbg !15994, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %same, metadata !15996, metadata !DIExpression()), !dbg !15997
  store i8 0, i8* %same, align 1, !dbg !15997, !tbaa !2739
  %11 = load i8, i8* %compare_dirs, align 1, !dbg !15998, !tbaa !2739
  %tobool7 = trunc i8 %11 to i1, !dbg !15998
  br i1 %tobool7, label %if.then, label %if.end26, !dbg !16000

if.then:                                          ; preds = %land.end
  call void @llvm.dbg.declare(metadata %struct.stat* %source_dir_stats, metadata !16001, metadata !DIExpression()), !dbg !16003
  call void @llvm.dbg.declare(metadata %struct.stat* %dest_dir_stats, metadata !16004, metadata !DIExpression()), !dbg !16005
  call void @llvm.dbg.declare(metadata i8** %source_dirname, metadata !16006, metadata !DIExpression()), !dbg !16007
  %12 = load i8*, i8** %source.addr, align 8, !dbg !16008, !tbaa !2645
  %call8 = call i8* @dir_name(i8* %12), !dbg !16009
  store i8* %call8, i8** %source_dirname, align 8, !dbg !16007, !tbaa !2645
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !16010, metadata !DIExpression()), !dbg !16011
  store i32 256, i32* %flags, align 4, !dbg !16011, !tbaa !2632
  %13 = load i32, i32* %source_dfd.addr, align 4, !dbg !16012, !tbaa !2632
  %14 = load i8*, i8** %source_dirname, align 8, !dbg !16014, !tbaa !2645
  %15 = load i32, i32* %flags, align 4, !dbg !16015, !tbaa !2632
  %call9 = call i32 @fstatat(i32 %13, i8* %14, %struct.stat* %source_dir_stats, i32 %15) #9, !dbg !16016
  %cmp10 = icmp ne i32 %call9, 0, !dbg !16017
  br i1 %cmp10, label %if.then11, label %if.end, !dbg !16018

if.then11:                                        ; preds = %if.then
  %call12 = call i32* @__errno_location() #16, !dbg !16019
  %16 = load i32, i32* %call12, align 4, !dbg !16019, !tbaa !2632, !ctir !7
  %17 = load i8*, i8** %source_dirname, align 8, !dbg !16021, !tbaa !2645
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %16, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.357, i64 0, i64 0), i8* %17), !dbg !16022
  br label %if.end, !dbg !16023

if.end:                                           ; preds = %if.then11, %if.then
  %18 = load i8*, i8** %source_dirname, align 8, !dbg !16024, !tbaa !2645
  call void @free(i8* %18) #9, !dbg !16025
  call void @llvm.dbg.declare(metadata i8** %dest_dirname, metadata !16026, metadata !DIExpression()), !dbg !16027
  %19 = load i8*, i8** %dest.addr, align 8, !dbg !16028, !tbaa !2645
  %call13 = call i8* @dir_name(i8* %19), !dbg !16029
  store i8* %call13, i8** %dest_dirname, align 8, !dbg !16027, !tbaa !2645
  %20 = load i32, i32* %dest_dfd.addr, align 4, !dbg !16030, !tbaa !2632
  %21 = load i8*, i8** %dest_dirname, align 8, !dbg !16032, !tbaa !2645
  %22 = load i32, i32* %flags, align 4, !dbg !16033, !tbaa !2632
  %call14 = call i32 @fstatat(i32 %20, i8* %21, %struct.stat* %dest_dir_stats, i32 %22) #9, !dbg !16034
  %cmp15 = icmp ne i32 %call14, 0, !dbg !16035
  br i1 %cmp15, label %if.then16, label %if.end18, !dbg !16036

if.then16:                                        ; preds = %if.end
  %call17 = call i32* @__errno_location() #16, !dbg !16037
  %23 = load i32, i32* %call17, align 4, !dbg !16037, !tbaa !2632, !ctir !7
  %24 = load i8*, i8** %dest_dirname, align 8, !dbg !16039, !tbaa !2645
  call void (i32, i32, i8*, ...) @error(i32 1, i32 %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.357, i64 0, i64 0), i8* %24), !dbg !16040
  br label %if.end18, !dbg !16041

if.end18:                                         ; preds = %if.then16, %if.end
  %st_ino = getelementptr inbounds %struct.stat, %struct.stat* %source_dir_stats, i32 0, i32 1, !dbg !16042, !ctir !15936
  %25 = load i64, i64* %st_ino, align 8, !dbg !16042, !tbaa !4781, !ctir !276
  %st_ino19 = getelementptr inbounds %struct.stat, %struct.stat* %dest_dir_stats, i32 0, i32 1, !dbg !16042, !ctir !15936
  %26 = load i64, i64* %st_ino19, align 8, !dbg !16042, !tbaa !4781, !ctir !276
  %cmp20 = icmp eq i64 %25, %26, !dbg !16042
  br i1 %cmp20, label %land.rhs21, label %land.end24, !dbg !16042

land.rhs21:                                       ; preds = %if.end18
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %source_dir_stats, i32 0, i32 0, !dbg !16042, !ctir !15936
  %27 = load i64, i64* %st_dev, align 8, !dbg !16042, !tbaa !4760, !ctir !274
  %st_dev22 = getelementptr inbounds %struct.stat, %struct.stat* %dest_dir_stats, i32 0, i32 0, !dbg !16042, !ctir !15936
  %28 = load i64, i64* %st_dev22, align 8, !dbg !16042, !tbaa !4760, !ctir !274
  %cmp23 = icmp eq i64 %27, %28, !dbg !16042
  br label %land.end24

land.end24:                                       ; preds = %land.rhs21, %if.end18
  %29 = phi i1 [ false, %if.end18 ], [ %cmp23, %land.rhs21 ], !dbg !16043
  %frombool25 = zext i1 %29 to i8, !dbg !16044
  store i8 %frombool25, i8* %same, align 1, !dbg !16044, !tbaa !2739
  %30 = load i8*, i8** %dest_dirname, align 8, !dbg !16045, !tbaa !2645
  call void @free(i8* %30) #9, !dbg !16046
  br label %if.end26, !dbg !16047

if.end26:                                         ; preds = %land.end24, %land.end
  %31 = load i8, i8* %same, align 1, !dbg !16048, !tbaa !2739
  %tobool27 = trunc i8 %31 to i1, !dbg !16048
  ret i1 %tobool27, !dbg !16049
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @streamsavedir(%struct.__dirstream* %dirp, i32 %option) #4 !dbg !16050 !ctir !1160 {
entry:
  %retval = alloca i8*, align 8
  %dirp.addr = alloca %struct.__dirstream*, align 8
  %option.addr = alloca i32, align 4
  %name_space = alloca i8*, align 8, !ctir !9
  %allocated = alloca i64, align 8, !ctir !55
  %entries = alloca %struct.direntry_t*, align 8, !ctir !1162
  %entries_allocated = alloca i64, align 8, !ctir !55
  %entries_used = alloca i64, align 8, !ctir !55
  %used = alloca i64, align 8, !ctir !55
  %readdir_errno = alloca i32, align 4, !ctir !7
  %cmp = alloca i32 (i8*, i8*)*, align 8, !ctir !1170
  %dp = alloca %struct.dirent*, align 8, !ctir !1176
  %entry2 = alloca i8*, align 8, !ctir !180
  %entry_size = alloca i64, align 8, !ctir !55
  %n = alloca i64, align 8, !ctir !55
  %n36 = alloca i64, align 8, !ctir !55
  %i = alloca i64, align 8, !ctir !55
  %dest = alloca i8*, align 8, !ctir !9
  store %struct.__dirstream* %dirp, %struct.__dirstream** %dirp.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp.addr, metadata !16051, metadata !DIExpression()), !dbg !16052
  store i32 %option, i32* %option.addr, align 4, !tbaa !3292
  call void @llvm.dbg.declare(metadata i32* %option.addr, metadata !16053, metadata !DIExpression()), !dbg !16054
  call void @llvm.dbg.declare(metadata i8** %name_space, metadata !16055, metadata !DIExpression()), !dbg !16056
  store i8* null, i8** %name_space, align 8, !dbg !16056, !tbaa !2645
  call void @llvm.dbg.declare(metadata i64* %allocated, metadata !16057, metadata !DIExpression()), !dbg !16058
  store i64 0, i64* %allocated, align 8, !dbg !16058, !tbaa !3285
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %entries, metadata !16059, metadata !DIExpression()), !dbg !16060
  store %struct.direntry_t* null, %struct.direntry_t** %entries, align 8, !dbg !16060, !tbaa !2645
  call void @llvm.dbg.declare(metadata i64* %entries_allocated, metadata !16061, metadata !DIExpression()), !dbg !16062
  store i64 0, i64* %entries_allocated, align 8, !dbg !16062, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %entries_used, metadata !16063, metadata !DIExpression()), !dbg !16064
  store i64 0, i64* %entries_used, align 8, !dbg !16064, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %used, metadata !16065, metadata !DIExpression()), !dbg !16066
  store i64 0, i64* %used, align 8, !dbg !16066, !tbaa !3285
  call void @llvm.dbg.declare(metadata i32* %readdir_errno, metadata !16067, metadata !DIExpression()), !dbg !16068
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %cmp, metadata !16069, metadata !DIExpression()), !dbg !16070
  %0 = load i32, i32* %option.addr, align 4, !dbg !16071, !tbaa !3292
  %idxprom = zext i32 %0 to i64, !dbg !16072
  %arrayidx = getelementptr inbounds [3 x i32 (i8*, i8*)*], [3 x i32 (i8*, i8*)*]* @comparison_function_table, i64 0, i64 %idxprom, !dbg !16072, !ctir !1174
  %1 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %arrayidx, align 8, !dbg !16072, !tbaa !2645
  store i32 (i8*, i8*)* %1, i32 (i8*, i8*)** %cmp, align 8, !dbg !16070, !tbaa !2645
  %2 = load %struct.__dirstream*, %struct.__dirstream** %dirp.addr, align 8, !dbg !16073, !tbaa !2645
  %cmp1 = icmp eq %struct.__dirstream* %2, null, !dbg !16075
  br i1 %cmp1, label %if.then, label %if.end, !dbg !16076

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !16077
  br label %return, !dbg !16077

if.end:                                           ; preds = %entry
  br label %for.cond, !dbg !16078

for.cond:                                         ; preds = %if.end46, %if.end
  call void @llvm.dbg.declare(metadata %struct.dirent** %dp, metadata !16079, metadata !DIExpression()), !dbg !16083
  call void @llvm.dbg.declare(metadata i8** %entry2, metadata !16084, metadata !DIExpression()), !dbg !16085
  %call = call i32* @__errno_location() #16, !dbg !16086
  store i32 0, i32* %call, align 4, !dbg !16087, !tbaa !2632, !ctir !7
  %3 = load %struct.__dirstream*, %struct.__dirstream** %dirp.addr, align 8, !dbg !16088, !tbaa !2645
  %call3 = call %struct.dirent* @readdir(%struct.__dirstream* %3), !dbg !16089
  store %struct.dirent* %call3, %struct.dirent** %dp, align 8, !dbg !16090, !tbaa !2645
  %4 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !16091, !tbaa !2645
  %tobool = icmp ne %struct.dirent* %4, null, !dbg !16091
  br i1 %tobool, label %if.end5, label %if.then4, !dbg !16093

if.then4:                                         ; preds = %for.cond
  br label %for.end, !dbg !16094

if.end5:                                          ; preds = %for.cond
  %5 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !16095, !tbaa !2645
  %d_name = getelementptr inbounds %struct.dirent, %struct.dirent* %5, i32 0, i32 4, !dbg !16096, !ctir !1177
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %d_name, i64 0, i64 0, !dbg !16095
  store i8* %arraydecay, i8** %entry2, align 8, !dbg !16097, !tbaa !2645
  %6 = load i8*, i8** %entry2, align 8, !dbg !16098, !tbaa !2645
  %7 = load i8*, i8** %entry2, align 8, !dbg !16100, !tbaa !2645
  %arrayidx6 = getelementptr inbounds i8, i8* %7, i64 0, !dbg !16100, !ctir !180
  %8 = load i8, i8* %arrayidx6, align 1, !dbg !16100, !tbaa !3292
  %conv = sext i8 %8 to i32, !dbg !16100
  %cmp7 = icmp ne i32 %conv, 46, !dbg !16101
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !16100

cond.true:                                        ; preds = %if.end5
  br label %cond.end, !dbg !16100

cond.false:                                       ; preds = %if.end5
  %9 = load i8*, i8** %entry2, align 8, !dbg !16102, !tbaa !2645
  %arrayidx9 = getelementptr inbounds i8, i8* %9, i64 1, !dbg !16102, !ctir !180
  %10 = load i8, i8* %arrayidx9, align 1, !dbg !16102, !tbaa !3292
  %conv10 = sext i8 %10 to i32, !dbg !16102
  %cmp11 = icmp ne i32 %conv10, 46, !dbg !16103
  %11 = zext i1 %cmp11 to i64, !dbg !16102
  %cond = select i1 %cmp11, i32 1, i32 2, !dbg !16102
  br label %cond.end, !dbg !16100

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond13 = phi i32 [ 0, %cond.true ], [ %cond, %cond.false ], !dbg !16100
  %idxprom14 = sext i32 %cond13 to i64, !dbg !16098
  %arrayidx15 = getelementptr inbounds i8, i8* %6, i64 %idxprom14, !dbg !16098, !ctir !180
  %12 = load i8, i8* %arrayidx15, align 1, !dbg !16098, !tbaa !3292
  %conv16 = sext i8 %12 to i32, !dbg !16098
  %cmp17 = icmp ne i32 %conv16, 0, !dbg !16104
  br i1 %cmp17, label %if.then19, label %if.end46, !dbg !16105

if.then19:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i64* %entry_size, metadata !16106, metadata !DIExpression()), !dbg !16108
  %13 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !16109, !tbaa !2645
  %d_name20 = getelementptr inbounds %struct.dirent, %struct.dirent* %13, i32 0, i32 4, !dbg !16109, !ctir !1177
  %arraydecay21 = getelementptr inbounds [256 x i8], [256 x i8]* %d_name20, i64 0, i64 0, !dbg !16109
  %call22 = call i64 @strlen(i8* %arraydecay21) #14, !dbg !16109
  %add = add i64 %call22, 1, !dbg !16110
  store i64 %add, i64* %entry_size, align 8, !dbg !16108, !tbaa !3285
  %14 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp, align 8, !dbg !16111, !tbaa !2645
  %tobool23 = icmp ne i32 (i8*, i8*)* %14, null, !dbg !16111
  br i1 %tobool23, label %if.then24, label %if.else, !dbg !16113

if.then24:                                        ; preds = %if.then19
  %15 = load i64, i64* %entries_allocated, align 8, !dbg !16114, !tbaa !3285
  %16 = load i64, i64* %entries_used, align 8, !dbg !16117, !tbaa !3285
  %cmp25 = icmp eq i64 %15, %16, !dbg !16118
  br i1 %cmp25, label %if.then27, label %if.end29, !dbg !16119

if.then27:                                        ; preds = %if.then24
  call void @llvm.dbg.declare(metadata i64* %n, metadata !16120, metadata !DIExpression()), !dbg !16122
  %17 = load i64, i64* %entries_allocated, align 8, !dbg !16123, !tbaa !3285
  store i64 %17, i64* %n, align 8, !dbg !16122, !tbaa !3285
  %18 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !16124, !tbaa !2645
  %19 = bitcast %struct.direntry_t* %18 to i8*, !dbg !16124
  %call28 = call i8* @x2nrealloc(i8* %19, i64* %n, i64 16), !dbg !16125
  %20 = bitcast i8* %call28 to %struct.direntry_t*, !dbg !16125
  store %struct.direntry_t* %20, %struct.direntry_t** %entries, align 8, !dbg !16126, !tbaa !2645
  %21 = load i64, i64* %n, align 8, !dbg !16127, !tbaa !3285
  store i64 %21, i64* %entries_allocated, align 8, !dbg !16128, !tbaa !3285
  br label %if.end29, !dbg !16129

if.end29:                                         ; preds = %if.then27, %if.then24
  %22 = load i8*, i8** %entry2, align 8, !dbg !16130, !tbaa !2645
  %call30 = call noalias i8* @xstrdup(i8* %22), !dbg !16131
  %23 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !16132, !tbaa !2645
  %24 = load i64, i64* %entries_used, align 8, !dbg !16133, !tbaa !3285
  %arrayidx31 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %23, i64 %24, !dbg !16132, !ctir !1162
  %name = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx31, i32 0, i32 0, !dbg !16134, !ctir !1163
  store i8* %call30, i8** %name, align 8, !dbg !16135, !tbaa !16136, !ctir !9
  %25 = load %struct.dirent*, %struct.dirent** %dp, align 8, !dbg !16138, !tbaa !2645
  %d_ino = getelementptr inbounds %struct.dirent, %struct.dirent* %25, i32 0, i32 0, !dbg !16139, !ctir !1177
  %26 = load i64, i64* %d_ino, align 8, !dbg !16139, !tbaa !16140, !ctir !276
  %27 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !16142, !tbaa !2645
  %28 = load i64, i64* %entries_used, align 8, !dbg !16143, !tbaa !3285
  %arrayidx32 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %27, i64 %28, !dbg !16142, !ctir !1162
  %ino = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx32, i32 0, i32 1, !dbg !16144, !ctir !1163
  store i64 %26, i64* %ino, align 8, !dbg !16145, !tbaa !16146, !ctir !1169
  %29 = load i64, i64* %entries_used, align 8, !dbg !16147, !tbaa !3285
  %inc = add i64 %29, 1, !dbg !16147
  store i64 %inc, i64* %entries_used, align 8, !dbg !16147, !tbaa !3285
  br label %if.end44, !dbg !16148

if.else:                                          ; preds = %if.then19
  %30 = load i64, i64* %allocated, align 8, !dbg !16149, !tbaa !3285
  %31 = load i64, i64* %used, align 8, !dbg !16152, !tbaa !3285
  %sub = sub i64 %30, %31, !dbg !16153
  %32 = load i64, i64* %entry_size, align 8, !dbg !16154, !tbaa !3285
  %cmp33 = icmp ule i64 %sub, %32, !dbg !16155
  br i1 %cmp33, label %if.then35, label %if.end43, !dbg !16156

if.then35:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i64* %n36, metadata !16157, metadata !DIExpression()), !dbg !16159
  %33 = load i64, i64* %used, align 8, !dbg !16160, !tbaa !3285
  %34 = load i64, i64* %entry_size, align 8, !dbg !16161, !tbaa !3285
  %add37 = add i64 %33, %34, !dbg !16162
  store i64 %add37, i64* %n36, align 8, !dbg !16159, !tbaa !3285
  %35 = load i64, i64* %n36, align 8, !dbg !16163, !tbaa !3285
  %36 = load i64, i64* %used, align 8, !dbg !16165, !tbaa !3285
  %cmp38 = icmp ult i64 %35, %36, !dbg !16166
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !16167

if.then40:                                        ; preds = %if.then35
  call void @xalloc_die() #15, !dbg !16168
  unreachable, !dbg !16168

if.end41:                                         ; preds = %if.then35
  %37 = load i8*, i8** %name_space, align 8, !dbg !16169, !tbaa !2645
  %call42 = call i8* @x2nrealloc(i8* %37, i64* %n36, i64 1), !dbg !16170
  store i8* %call42, i8** %name_space, align 8, !dbg !16171, !tbaa !2645
  %38 = load i64, i64* %n36, align 8, !dbg !16172, !tbaa !3285
  store i64 %38, i64* %allocated, align 8, !dbg !16173, !tbaa !3285
  br label %if.end43, !dbg !16174

if.end43:                                         ; preds = %if.end41, %if.else
  %39 = load i8*, i8** %name_space, align 8, !dbg !16175, !tbaa !2645
  %40 = load i64, i64* %used, align 8, !dbg !16176, !tbaa !3285
  %add.ptr = getelementptr inbounds i8, i8* %39, i64 %40, !dbg !16177
  %41 = load i8*, i8** %entry2, align 8, !dbg !16178, !tbaa !2645
  %42 = load i64, i64* %entry_size, align 8, !dbg !16179, !tbaa !3285
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 1 %41, i64 %42, i1 false), !dbg !16180
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end29
  %43 = load i64, i64* %entry_size, align 8, !dbg !16181, !tbaa !3285
  %44 = load i64, i64* %used, align 8, !dbg !16182, !tbaa !3285
  %add45 = add i64 %44, %43, !dbg !16182
  store i64 %add45, i64* %used, align 8, !dbg !16182, !tbaa !3285
  br label %if.end46, !dbg !16183

if.end46:                                         ; preds = %if.end44, %cond.end
  br label %for.cond, !dbg !16184, !llvm.loop !16185

for.end:                                          ; preds = %if.then4
  %call47 = call i32* @__errno_location() #16, !dbg !16188
  %45 = load i32, i32* %call47, align 4, !dbg !16188, !tbaa !2632, !ctir !7
  store i32 %45, i32* %readdir_errno, align 4, !dbg !16189, !tbaa !2632
  %46 = load i32, i32* %readdir_errno, align 4, !dbg !16190, !tbaa !2632
  %cmp48 = icmp ne i32 %46, 0, !dbg !16192
  br i1 %cmp48, label %if.then50, label %if.end52, !dbg !16193

if.then50:                                        ; preds = %for.end
  %47 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !16194, !tbaa !2645
  %48 = bitcast %struct.direntry_t* %47 to i8*, !dbg !16194
  call void @free(i8* %48) #9, !dbg !16196
  %49 = load i8*, i8** %name_space, align 8, !dbg !16197, !tbaa !2645
  call void @free(i8* %49) #9, !dbg !16198
  %50 = load i32, i32* %readdir_errno, align 4, !dbg !16199, !tbaa !2632
  %call51 = call i32* @__errno_location() #16, !dbg !16200
  store i32 %50, i32* %call51, align 4, !dbg !16201, !tbaa !2632, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !16202
  br label %return, !dbg !16202

if.end52:                                         ; preds = %for.end
  %51 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp, align 8, !dbg !16203, !tbaa !2645
  %tobool53 = icmp ne i32 (i8*, i8*)* %51, null, !dbg !16203
  br i1 %tobool53, label %if.then54, label %if.else73, !dbg !16205

if.then54:                                        ; preds = %if.end52
  call void @llvm.dbg.declare(metadata i64* %i, metadata !16206, metadata !DIExpression()), !dbg !16208
  %52 = load i64, i64* %entries_used, align 8, !dbg !16209, !tbaa !3285
  %tobool55 = icmp ne i64 %52, 0, !dbg !16209
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !16211

if.then56:                                        ; preds = %if.then54
  %53 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !16212, !tbaa !2645
  %54 = bitcast %struct.direntry_t* %53 to i8*, !dbg !16212
  %55 = load i64, i64* %entries_used, align 8, !dbg !16213, !tbaa !3285
  %56 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %cmp, align 8, !dbg !16214, !tbaa !2645
  call void @qsort(i8* %54, i64 %55, i64 16, i32 (i8*, i8*)* %56), !dbg !16215
  br label %if.end57, !dbg !16215

if.end57:                                         ; preds = %if.then56, %if.then54
  %57 = load i64, i64* %used, align 8, !dbg !16216, !tbaa !3285
  %add58 = add i64 %57, 1, !dbg !16217
  %call59 = call noalias i8* @xmalloc(i64 %add58), !dbg !16218
  store i8* %call59, i8** %name_space, align 8, !dbg !16219, !tbaa !2645
  store i64 0, i64* %used, align 8, !dbg !16220, !tbaa !3285
  store i64 0, i64* %i, align 8, !dbg !16221, !tbaa !3285
  br label %for.cond60, !dbg !16223

for.cond60:                                       ; preds = %for.inc, %if.end57
  %58 = load i64, i64* %i, align 8, !dbg !16224, !tbaa !3285
  %59 = load i64, i64* %entries_used, align 8, !dbg !16226, !tbaa !3285
  %cmp61 = icmp ult i64 %58, %59, !dbg !16227
  br i1 %cmp61, label %for.body, label %for.end72, !dbg !16228

for.body:                                         ; preds = %for.cond60
  call void @llvm.dbg.declare(metadata i8** %dest, metadata !16229, metadata !DIExpression()), !dbg !16231
  %60 = load i8*, i8** %name_space, align 8, !dbg !16232, !tbaa !2645
  %61 = load i64, i64* %used, align 8, !dbg !16233, !tbaa !3285
  %add.ptr63 = getelementptr inbounds i8, i8* %60, i64 %61, !dbg !16234
  store i8* %add.ptr63, i8** %dest, align 8, !dbg !16231, !tbaa !2645
  %62 = load i8*, i8** %dest, align 8, !dbg !16235, !tbaa !2645
  %63 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !16236, !tbaa !2645
  %64 = load i64, i64* %i, align 8, !dbg !16237, !tbaa !3285
  %arrayidx64 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %63, i64 %64, !dbg !16236, !ctir !1162
  %name65 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx64, i32 0, i32 0, !dbg !16238, !ctir !1163
  %65 = load i8*, i8** %name65, align 8, !dbg !16238, !tbaa !16136, !ctir !9
  %call66 = call i8* @stpcpy(i8* %62, i8* %65) #9, !dbg !16239
  %66 = load i8*, i8** %dest, align 8, !dbg !16240, !tbaa !2645
  %sub.ptr.lhs.cast = ptrtoint i8* %call66 to i64, !dbg !16241
  %sub.ptr.rhs.cast = ptrtoint i8* %66 to i64, !dbg !16241
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !16241
  %add67 = add nsw i64 %sub.ptr.sub, 1, !dbg !16242
  %67 = load i64, i64* %used, align 8, !dbg !16243, !tbaa !3285
  %add68 = add i64 %67, %add67, !dbg !16243
  store i64 %add68, i64* %used, align 8, !dbg !16243, !tbaa !3285
  %68 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !16244, !tbaa !2645
  %69 = load i64, i64* %i, align 8, !dbg !16245, !tbaa !3285
  %arrayidx69 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %68, i64 %69, !dbg !16244, !ctir !1162
  %name70 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %arrayidx69, i32 0, i32 0, !dbg !16246, !ctir !1163
  %70 = load i8*, i8** %name70, align 8, !dbg !16246, !tbaa !16136, !ctir !9
  call void @free(i8* %70) #9, !dbg !16247
  br label %for.inc, !dbg !16248

for.inc:                                          ; preds = %for.body
  %71 = load i64, i64* %i, align 8, !dbg !16249, !tbaa !3285
  %inc71 = add i64 %71, 1, !dbg !16249
  store i64 %inc71, i64* %i, align 8, !dbg !16249, !tbaa !3285
  br label %for.cond60, !dbg !16250, !llvm.loop !16251

for.end72:                                        ; preds = %for.cond60
  %72 = load %struct.direntry_t*, %struct.direntry_t** %entries, align 8, !dbg !16253, !tbaa !2645
  %73 = bitcast %struct.direntry_t* %72 to i8*, !dbg !16253
  call void @free(i8* %73) #9, !dbg !16254
  br label %if.end80, !dbg !16255

if.else73:                                        ; preds = %if.end52
  %74 = load i64, i64* %used, align 8, !dbg !16256, !tbaa !3285
  %75 = load i64, i64* %allocated, align 8, !dbg !16258, !tbaa !3285
  %cmp74 = icmp eq i64 %74, %75, !dbg !16259
  br i1 %cmp74, label %if.then76, label %if.end79, !dbg !16260

if.then76:                                        ; preds = %if.else73
  %76 = load i8*, i8** %name_space, align 8, !dbg !16261, !tbaa !2645
  %77 = load i64, i64* %used, align 8, !dbg !16262, !tbaa !3285
  %add77 = add i64 %77, 1, !dbg !16263
  %call78 = call i8* @xrealloc(i8* %76, i64 %add77), !dbg !16264
  store i8* %call78, i8** %name_space, align 8, !dbg !16265, !tbaa !2645
  br label %if.end79, !dbg !16266

if.end79:                                         ; preds = %if.then76, %if.else73
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %for.end72
  %78 = load i8*, i8** %name_space, align 8, !dbg !16267, !tbaa !2645
  %79 = load i64, i64* %used, align 8, !dbg !16268, !tbaa !3285
  %arrayidx81 = getelementptr inbounds i8, i8* %78, i64 %79, !dbg !16267, !ctir !9
  store i8 0, i8* %arrayidx81, align 1, !dbg !16269, !tbaa !3292
  %80 = load i8*, i8** %name_space, align 8, !dbg !16270, !tbaa !2645
  store i8* %80, i8** %retval, align 8, !dbg !16271
  br label %return, !dbg !16271

return:                                           ; preds = %if.end80, %if.then50, %if.then
  %81 = load i8*, i8** %retval, align 8, !dbg !16272
  ret i8* %81, !dbg !16272
}

declare dso_local void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @direntry_cmp_name(i8* %a, i8* %b) #4 !dbg !16273 !ctir !1172 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %dea = alloca %struct.direntry_t*, align 8, !ctir !1187
  %deb = alloca %struct.direntry_t*, align 8, !ctir !1187
  store i8* %a, i8** %a.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !16274, metadata !DIExpression()), !dbg !16275
  store i8* %b, i8** %b.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !16276, metadata !DIExpression()), !dbg !16277
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %dea, metadata !16278, metadata !DIExpression()), !dbg !16279
  %0 = load i8*, i8** %a.addr, align 8, !dbg !16280, !tbaa !2645
  %1 = bitcast i8* %0 to %struct.direntry_t*, !dbg !16280
  store %struct.direntry_t* %1, %struct.direntry_t** %dea, align 8, !dbg !16279, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %deb, metadata !16281, metadata !DIExpression()), !dbg !16282
  %2 = load i8*, i8** %b.addr, align 8, !dbg !16283, !tbaa !2645
  %3 = bitcast i8* %2 to %struct.direntry_t*, !dbg !16283
  store %struct.direntry_t* %3, %struct.direntry_t** %deb, align 8, !dbg !16282, !tbaa !2645
  %4 = load %struct.direntry_t*, %struct.direntry_t** %dea, align 8, !dbg !16284, !tbaa !2645
  %name = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %4, i32 0, i32 0, !dbg !16285, !ctir !1188
  %5 = load i8*, i8** %name, align 8, !dbg !16285, !tbaa !16136, !ctir !9
  %6 = load %struct.direntry_t*, %struct.direntry_t** %deb, align 8, !dbg !16286, !tbaa !2645
  %name1 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %6, i32 0, i32 0, !dbg !16287, !ctir !1188
  %7 = load i8*, i8** %name1, align 8, !dbg !16287, !tbaa !16136, !ctir !9
  %call = call i32 @strcmp(i8* %5, i8* %7) #14, !dbg !16288
  ret i32 %call, !dbg !16289
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @direntry_cmp_inode(i8* %a, i8* %b) #4 !dbg !16290 !ctir !1172 {
entry:
  %a.addr = alloca i8*, align 8
  %b.addr = alloca i8*, align 8
  %dea = alloca %struct.direntry_t*, align 8, !ctir !1187
  %deb = alloca %struct.direntry_t*, align 8, !ctir !1187
  store i8* %a, i8** %a.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !16291, metadata !DIExpression()), !dbg !16292
  store i8* %b, i8** %b.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %b.addr, metadata !16293, metadata !DIExpression()), !dbg !16294
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %dea, metadata !16295, metadata !DIExpression()), !dbg !16296
  %0 = load i8*, i8** %a.addr, align 8, !dbg !16297, !tbaa !2645
  %1 = bitcast i8* %0 to %struct.direntry_t*, !dbg !16297
  store %struct.direntry_t* %1, %struct.direntry_t** %dea, align 8, !dbg !16296, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.direntry_t** %deb, metadata !16298, metadata !DIExpression()), !dbg !16299
  %2 = load i8*, i8** %b.addr, align 8, !dbg !16300, !tbaa !2645
  %3 = bitcast i8* %2 to %struct.direntry_t*, !dbg !16300
  store %struct.direntry_t* %3, %struct.direntry_t** %deb, align 8, !dbg !16299, !tbaa !2645
  %4 = load %struct.direntry_t*, %struct.direntry_t** %dea, align 8, !dbg !16301, !tbaa !2645
  %ino = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %4, i32 0, i32 1, !dbg !16302, !ctir !1188
  %5 = load i64, i64* %ino, align 8, !dbg !16302, !tbaa !16146, !ctir !1169
  %6 = load %struct.direntry_t*, %struct.direntry_t** %deb, align 8, !dbg !16303, !tbaa !2645
  %ino1 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %6, i32 0, i32 1, !dbg !16304, !ctir !1188
  %7 = load i64, i64* %ino1, align 8, !dbg !16304, !tbaa !16146, !ctir !1169
  %cmp = icmp ult i64 %5, %7, !dbg !16305
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !16301

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !16301

cond.false:                                       ; preds = %entry
  %8 = load %struct.direntry_t*, %struct.direntry_t** %dea, align 8, !dbg !16306, !tbaa !2645
  %ino2 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %8, i32 0, i32 1, !dbg !16307, !ctir !1188
  %9 = load i64, i64* %ino2, align 8, !dbg !16307, !tbaa !16146, !ctir !1169
  %10 = load %struct.direntry_t*, %struct.direntry_t** %deb, align 8, !dbg !16308, !tbaa !2645
  %ino3 = getelementptr inbounds %struct.direntry_t, %struct.direntry_t* %10, i32 0, i32 1, !dbg !16309, !ctir !1188
  %11 = load i64, i64* %ino3, align 8, !dbg !16309, !tbaa !16146, !ctir !1169
  %cmp4 = icmp ugt i64 %9, %11, !dbg !16310
  %conv = zext i1 %cmp4 to i32, !dbg !16310
  br label %cond.end, !dbg !16301

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ -1, %cond.true ], [ %conv, %cond.false ], !dbg !16301
  ret i32 %cond, !dbg !16311
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @savedir(i8* %dir, i32 %option) #4 !dbg !16312 !ctir !1185 {
entry:
  %retval = alloca i8*, align 8
  %dir.addr = alloca i8*, align 8
  %option.addr = alloca i32, align 4
  %dirp = alloca %struct.__dirstream*, align 8, !ctir !693
  %name_space = alloca i8*, align 8, !ctir !9
  %closedir_errno = alloca i32, align 4, !ctir !7
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !16313, metadata !DIExpression()), !dbg !16314
  store i32 %option, i32* %option.addr, align 4, !tbaa !3292
  call void @llvm.dbg.declare(metadata i32* %option.addr, metadata !16315, metadata !DIExpression()), !dbg !16316
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dirp, metadata !16317, metadata !DIExpression()), !dbg !16318
  %0 = load i8*, i8** %dir.addr, align 8, !dbg !16319, !tbaa !2645
  %call = call %struct.__dirstream* @opendir_safer(i8* %0), !dbg !16320
  store %struct.__dirstream* %call, %struct.__dirstream** %dirp, align 8, !dbg !16318, !tbaa !2645
  %1 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !16321, !tbaa !2645
  %tobool = icmp ne %struct.__dirstream* %1, null, !dbg !16321
  br i1 %tobool, label %if.else, label %if.then, !dbg !16323

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !16324
  br label %return, !dbg !16324

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %name_space, metadata !16325, metadata !DIExpression()), !dbg !16327
  %2 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !16328, !tbaa !2645
  %3 = load i32, i32* %option.addr, align 4, !dbg !16329, !tbaa !3292
  %call1 = call i8* @streamsavedir(%struct.__dirstream* %2, i32 %3), !dbg !16330
  store i8* %call1, i8** %name_space, align 8, !dbg !16327, !tbaa !2645
  %4 = load %struct.__dirstream*, %struct.__dirstream** %dirp, align 8, !dbg !16331, !tbaa !2645
  %call2 = call i32 @closedir(%struct.__dirstream* %4), !dbg !16333
  %cmp = icmp ne i32 %call2, 0, !dbg !16334
  br i1 %cmp, label %if.then3, label %if.end, !dbg !16335

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %closedir_errno, metadata !16336, metadata !DIExpression()), !dbg !16338
  %call4 = call i32* @__errno_location() #16, !dbg !16339
  %5 = load i32, i32* %call4, align 4, !dbg !16339, !tbaa !2632, !ctir !7
  store i32 %5, i32* %closedir_errno, align 4, !dbg !16338, !tbaa !2632
  %6 = load i8*, i8** %name_space, align 8, !dbg !16340, !tbaa !2645
  call void @free(i8* %6) #9, !dbg !16341
  %7 = load i32, i32* %closedir_errno, align 4, !dbg !16342, !tbaa !2632
  %call5 = call i32* @__errno_location() #16, !dbg !16343
  store i32 %7, i32* %call5, align 4, !dbg !16344, !tbaa !2632, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !16345
  br label %return, !dbg !16345

if.end:                                           ; preds = %if.else
  %8 = load i8*, i8** %name_space, align 8, !dbg !16346, !tbaa !2645
  store i8* %8, i8** %retval, align 8, !dbg !16347
  br label %return, !dbg !16347

return:                                           ; preds = %if.end, %if.then3, %if.then
  %9 = load i8*, i8** %retval, align 8, !dbg !16348
  ret i8* %9, !dbg !16348
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @savewd_init(%struct.savewd* %wd) #4 !dbg !16349 !ctir !1813 {
entry:
  %wd.addr = alloca %struct.savewd*, align 8
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !16350, metadata !DIExpression()), !dbg !16351
  %0 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16352, !tbaa !2645
  %state = getelementptr inbounds %struct.savewd, %struct.savewd* %0, i32 0, i32 0, !dbg !16353, !ctir !1803
  store i32 0, i32* %state, align 4, !dbg !16354, !tbaa !16355, !ctir !1802
  ret void, !dbg !16357
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @savewd_errno(%struct.savewd* %wd) #10 !dbg !16358 !ctir !1816 {
entry:
  %wd.addr = alloca %struct.savewd*, align 8
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !16359, metadata !DIExpression()), !dbg !16360
  %0 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16361, !tbaa !2645
  %state = getelementptr inbounds %struct.savewd, %struct.savewd* %0, i32 0, i32 0, !dbg !16362, !ctir !1819
  %1 = load i32, i32* %state, align 4, !dbg !16362, !tbaa !16355, !ctir !1802
  %cmp = icmp eq i32 %1, 4, !dbg !16363
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !16361

cond.true:                                        ; preds = %entry
  %2 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16364, !tbaa !2645
  %val = getelementptr inbounds %struct.savewd, %struct.savewd* %2, i32 0, i32 1, !dbg !16365, !ctir !1819
  %errnum = bitcast %union.anon* %val to i32*, !dbg !16366
  %3 = load i32, i32* %errnum, align 4, !dbg !16366, !tbaa !3292, !ctir !1807
  br label %cond.end, !dbg !16361

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !16361

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %3, %cond.true ], [ 0, %cond.false ], !dbg !16361
  ret i32 %cond, !dbg !16367
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @savewd_chdir(%struct.savewd* %wd, i8* %dir, i32 %options, i32* %open_result) #4 !dbg !16368 !ctir !1820 {
entry:
  %wd.addr = alloca %struct.savewd*, align 8
  %dir.addr = alloca i8*, align 8
  %options.addr = alloca i32, align 4
  %open_result.addr = alloca i32*, align 8
  %fd = alloca i32, align 4, !ctir !7
  %result = alloca i32, align 4, !ctir !7
  %e = alloca i32, align 4, !ctir !7
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !16370, metadata !DIExpression()), !dbg !16371
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !16372, metadata !DIExpression()), !dbg !16373
  store i32 %options, i32* %options.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %options.addr, metadata !16374, metadata !DIExpression()), !dbg !16375
  store i32* %open_result, i32** %open_result.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i32** %open_result.addr, metadata !16376, metadata !DIExpression()), !dbg !16377
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !16378, metadata !DIExpression()), !dbg !16379
  store i32 -1, i32* %fd, align 4, !dbg !16379, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %result, metadata !16380, metadata !DIExpression()), !dbg !16381
  store i32 0, i32* %result, align 4, !dbg !16381, !tbaa !2632
  %0 = load i32*, i32** %open_result.addr, align 8, !dbg !16382, !tbaa !2645
  %tobool = icmp ne i32* %0, null, !dbg !16382
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !16384

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %options.addr, align 4, !dbg !16385, !tbaa !2632
  %and = and i32 %1, 1, !dbg !16386
  %tobool1 = icmp ne i32 %and, 0, !dbg !16386
  br i1 %tobool1, label %if.then, label %if.end12, !dbg !16387

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load i8*, i8** %dir.addr, align 8, !dbg !16388, !tbaa !2645
  %3 = load i32, i32* %options.addr, align 4, !dbg !16390, !tbaa !2632
  %and2 = and i32 %3, 1, !dbg !16391
  %tobool3 = icmp ne i32 %and2, 0, !dbg !16390
  %4 = zext i1 %tobool3 to i64, !dbg !16390
  %cond = select i1 %tobool3, i32 131072, i32 0, !dbg !16390
  %or = or i32 67840, %cond, !dbg !16392
  %call = call i32 (i8*, i32, ...) @open(i8* %2, i32 %or), !dbg !16393
  store i32 %call, i32* %fd, align 4, !dbg !16394, !tbaa !2632
  %5 = load i32*, i32** %open_result.addr, align 8, !dbg !16395, !tbaa !2645
  %tobool4 = icmp ne i32* %5, null, !dbg !16395
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !16397

if.then5:                                         ; preds = %if.then
  %6 = load i32, i32* %fd, align 4, !dbg !16398, !tbaa !2632
  %7 = load i32*, i32** %open_result.addr, align 8, !dbg !16400, !tbaa !2645
  %arrayidx = getelementptr inbounds i32, i32* %7, i64 0, !dbg !16400, !ctir !193
  store i32 %6, i32* %arrayidx, align 4, !dbg !16401, !tbaa !2632
  %call6 = call i32* @__errno_location() #16, !dbg !16402
  %8 = load i32, i32* %call6, align 4, !dbg !16402, !tbaa !2632, !ctir !7
  %9 = load i32*, i32** %open_result.addr, align 8, !dbg !16403, !tbaa !2645
  %arrayidx7 = getelementptr inbounds i32, i32* %9, i64 1, !dbg !16403, !ctir !193
  store i32 %8, i32* %arrayidx7, align 4, !dbg !16404, !tbaa !2632
  br label %if.end, !dbg !16405

if.end:                                           ; preds = %if.then5, %if.then
  %10 = load i32, i32* %fd, align 4, !dbg !16406, !tbaa !2632
  %cmp = icmp slt i32 %10, 0, !dbg !16408
  br i1 %cmp, label %land.lhs.true, label %if.end11, !dbg !16409

land.lhs.true:                                    ; preds = %if.end
  %call8 = call i32* @__errno_location() #16, !dbg !16410
  %11 = load i32, i32* %call8, align 4, !dbg !16410, !tbaa !2632, !ctir !7
  %cmp9 = icmp ne i32 %11, 13, !dbg !16411
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !16412

if.then10:                                        ; preds = %land.lhs.true
  store i32 -1, i32* %result, align 4, !dbg !16413, !tbaa !2632
  br label %if.end11, !dbg !16414

if.end11:                                         ; preds = %if.then10, %land.lhs.true, %if.end
  br label %if.end12, !dbg !16415

if.end12:                                         ; preds = %if.end11, %lor.lhs.false
  %12 = load i32, i32* %result, align 4, !dbg !16416, !tbaa !2632
  %cmp13 = icmp eq i32 %12, 0, !dbg !16418
  br i1 %cmp13, label %land.lhs.true14, label %if.end37, !dbg !16419

land.lhs.true14:                                  ; preds = %if.end12
  %13 = load i32, i32* %fd, align 4, !dbg !16420, !tbaa !2632
  %cmp15 = icmp sle i32 0, %13, !dbg !16421
  br i1 %cmp15, label %land.lhs.true16, label %if.then19, !dbg !16422

land.lhs.true16:                                  ; preds = %land.lhs.true14
  %14 = load i32, i32* %options.addr, align 4, !dbg !16423, !tbaa !2632
  %and17 = and i32 %14, 2, !dbg !16424
  %tobool18 = icmp ne i32 %and17, 0, !dbg !16424
  br i1 %tobool18, label %if.end37, label %if.then19, !dbg !16425

if.then19:                                        ; preds = %land.lhs.true16, %land.lhs.true14
  %15 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16426, !tbaa !2645
  %call20 = call zeroext i1 @savewd_save(%struct.savewd* %15), !dbg !16429
  br i1 %call20, label %if.then21, label %if.else, !dbg !16430

if.then21:                                        ; preds = %if.then19
  store i32* null, i32** %open_result.addr, align 8, !dbg !16431, !tbaa !2645
  store i32 -2, i32* %result, align 4, !dbg !16433, !tbaa !2632
  br label %if.end36, !dbg !16434

if.else:                                          ; preds = %if.then19
  %16 = load i32, i32* %fd, align 4, !dbg !16435, !tbaa !2632
  %cmp22 = icmp slt i32 %16, 0, !dbg !16437
  br i1 %cmp22, label %cond.true, label %cond.false, !dbg !16435

cond.true:                                        ; preds = %if.else
  %17 = load i8*, i8** %dir.addr, align 8, !dbg !16438, !tbaa !2645
  %call23 = call i32 @chdir(i8* %17) #9, !dbg !16439
  br label %cond.end, !dbg !16435

cond.false:                                       ; preds = %if.else
  %18 = load i32, i32* %fd, align 4, !dbg !16440, !tbaa !2632
  %call24 = call i32 @fchdir(i32 %18) #9, !dbg !16441
  br label %cond.end, !dbg !16435

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond25 = phi i32 [ %call23, %cond.true ], [ %call24, %cond.false ], !dbg !16435
  store i32 %cond25, i32* %result, align 4, !dbg !16442, !tbaa !2632
  %19 = load i32, i32* %result, align 4, !dbg !16443, !tbaa !2632
  %cmp26 = icmp eq i32 %19, 0, !dbg !16445
  br i1 %cmp26, label %if.then27, label %if.end35, !dbg !16446

if.then27:                                        ; preds = %cond.end
  %20 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16447, !tbaa !2645
  %state = getelementptr inbounds %struct.savewd, %struct.savewd* %20, i32 0, i32 0, !dbg !16448, !ctir !1803
  %21 = load i32, i32* %state, align 4, !dbg !16448, !tbaa !16355, !ctir !1802
  switch i32 %21, label %sw.default [
    i32 1, label %sw.bb
    i32 4, label %sw.bb29
    i32 2, label %sw.bb29
    i32 5, label %sw.bb29
    i32 3, label %sw.bb30
  ], !dbg !16449

sw.bb:                                            ; preds = %if.then27
  %22 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16450, !tbaa !2645
  %state28 = getelementptr inbounds %struct.savewd, %struct.savewd* %22, i32 0, i32 0, !dbg !16452, !ctir !1803
  store i32 2, i32* %state28, align 4, !dbg !16453, !tbaa !16355, !ctir !1802
  br label %sw.epilog, !dbg !16454

sw.bb29:                                          ; preds = %if.then27, %if.then27, %if.then27
  br label %sw.epilog, !dbg !16455

sw.bb30:                                          ; preds = %if.then27
  %23 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16456, !tbaa !2645
  %val = getelementptr inbounds %struct.savewd, %struct.savewd* %23, i32 0, i32 1, !dbg !16456, !ctir !1803
  %child = bitcast %union.anon* %val to i32*, !dbg !16456
  %24 = load i32, i32* %child, align 4, !dbg !16456, !tbaa !3292, !ctir !1807
  %cmp31 = icmp eq i32 %24, 0, !dbg !16456
  br i1 %cmp31, label %if.then32, label %if.else33, !dbg !16459

if.then32:                                        ; preds = %sw.bb30
  br label %if.end34, !dbg !16459

if.else33:                                        ; preds = %sw.bb30
  call void @__assert_fail(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.366, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.367, i64 0, i64 0), i32 155, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__.savewd_chdir, i64 0, i64 0)) #13, !dbg !16456
  unreachable, !dbg !16456

if.end34:                                         ; preds = %if.then32
  br label %sw.epilog, !dbg !16460

sw.default:                                       ; preds = %if.then27
  call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.368, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.367, i64 0, i64 0), i32 159, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__.savewd_chdir, i64 0, i64 0)) #13, !dbg !16461
  unreachable, !dbg !16461

sw.epilog:                                        ; preds = %if.end34, %sw.bb29, %sw.bb
  br label %if.end35, !dbg !16464

if.end35:                                         ; preds = %sw.epilog, %cond.end
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then21
  br label %if.end37, !dbg !16465

if.end37:                                         ; preds = %if.end36, %land.lhs.true16, %if.end12
  %25 = load i32, i32* %fd, align 4, !dbg !16466, !tbaa !2632
  %cmp38 = icmp sle i32 0, %25, !dbg !16468
  br i1 %cmp38, label %land.lhs.true39, label %if.end45, !dbg !16469

land.lhs.true39:                                  ; preds = %if.end37
  %26 = load i32*, i32** %open_result.addr, align 8, !dbg !16470, !tbaa !2645
  %tobool40 = icmp ne i32* %26, null, !dbg !16470
  br i1 %tobool40, label %if.end45, label %if.then41, !dbg !16471

if.then41:                                        ; preds = %land.lhs.true39
  call void @llvm.dbg.declare(metadata i32* %e, metadata !16472, metadata !DIExpression()), !dbg !16474
  %call42 = call i32* @__errno_location() #16, !dbg !16475
  %27 = load i32, i32* %call42, align 4, !dbg !16475, !tbaa !2632, !ctir !7
  store i32 %27, i32* %e, align 4, !dbg !16474, !tbaa !2632
  %28 = load i32, i32* %fd, align 4, !dbg !16476, !tbaa !2632
  %call43 = call i32 @close(i32 %28), !dbg !16477
  %29 = load i32, i32* %e, align 4, !dbg !16478, !tbaa !2632
  %call44 = call i32* @__errno_location() #16, !dbg !16479
  store i32 %29, i32* %call44, align 4, !dbg !16480, !tbaa !2632, !ctir !7
  br label %if.end45, !dbg !16481

if.end45:                                         ; preds = %if.then41, %land.lhs.true39, %if.end37
  %30 = load i32, i32* %result, align 4, !dbg !16482, !tbaa !2632
  ret i32 %30, !dbg !16483
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @savewd_save(%struct.savewd* %wd) #4 !dbg !16484 !ctir !1829 {
entry:
  %retval = alloca i1, align 1
  %wd.addr = alloca %struct.savewd*, align 8
  %fd = alloca i32, align 4, !ctir !7
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !16485, metadata !DIExpression()), !dbg !16486
  %0 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16487, !tbaa !2645
  %state = getelementptr inbounds %struct.savewd, %struct.savewd* %0, i32 0, i32 0, !dbg !16488, !ctir !1803
  %1 = load i32, i32* %state, align 4, !dbg !16488, !tbaa !16355, !ctir !1802
  switch i32 %1, label %sw.default [
    i32 0, label %sw.bb
    i32 3, label %sw.bb14
    i32 1, label %sw.bb37
    i32 2, label %sw.bb37
    i32 4, label %sw.bb37
    i32 5, label %sw.bb37
  ], !dbg !16489

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !16490, metadata !DIExpression()), !dbg !16493
  %call = call i32 (i8*, i32, ...) @open_safer(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.369, i64 0, i64 0), i32 0), !dbg !16494
  store i32 %call, i32* %fd, align 4, !dbg !16493, !tbaa !2632
  %2 = load i32, i32* %fd, align 4, !dbg !16495, !tbaa !2632
  %cmp = icmp sle i32 0, %2, !dbg !16497
  br i1 %cmp, label %if.then, label %if.end, !dbg !16498

if.then:                                          ; preds = %sw.bb
  %3 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16499, !tbaa !2645
  %state1 = getelementptr inbounds %struct.savewd, %struct.savewd* %3, i32 0, i32 0, !dbg !16501, !ctir !1803
  store i32 1, i32* %state1, align 4, !dbg !16502, !tbaa !16355, !ctir !1802
  %4 = load i32, i32* %fd, align 4, !dbg !16503, !tbaa !2632
  %5 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16504, !tbaa !2645
  %val = getelementptr inbounds %struct.savewd, %struct.savewd* %5, i32 0, i32 1, !dbg !16505, !ctir !1803
  %fd2 = bitcast %union.anon* %val to i32*, !dbg !16506
  store i32 %4, i32* %fd2, align 4, !dbg !16507, !tbaa !3292, !ctir !1807
  br label %sw.epilog, !dbg !16508

if.end:                                           ; preds = %sw.bb
  %call3 = call i32* @__errno_location() #16, !dbg !16509
  %6 = load i32, i32* %call3, align 4, !dbg !16509, !tbaa !2632, !ctir !7
  %cmp4 = icmp ne i32 %6, 13, !dbg !16511
  br i1 %cmp4, label %land.lhs.true, label %if.end11, !dbg !16512

land.lhs.true:                                    ; preds = %if.end
  %call5 = call i32* @__errno_location() #16, !dbg !16513
  %7 = load i32, i32* %call5, align 4, !dbg !16513, !tbaa !2632, !ctir !7
  %cmp6 = icmp ne i32 %7, 116, !dbg !16514
  br i1 %cmp6, label %if.then7, label %if.end11, !dbg !16515

if.then7:                                         ; preds = %land.lhs.true
  %8 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16516, !tbaa !2645
  %state8 = getelementptr inbounds %struct.savewd, %struct.savewd* %8, i32 0, i32 0, !dbg !16518, !ctir !1803
  store i32 4, i32* %state8, align 4, !dbg !16519, !tbaa !16355, !ctir !1802
  %call9 = call i32* @__errno_location() #16, !dbg !16520
  %9 = load i32, i32* %call9, align 4, !dbg !16520, !tbaa !2632, !ctir !7
  %10 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16521, !tbaa !2645
  %val10 = getelementptr inbounds %struct.savewd, %struct.savewd* %10, i32 0, i32 1, !dbg !16522, !ctir !1803
  %errnum = bitcast %union.anon* %val10 to i32*, !dbg !16523
  store i32 %9, i32* %errnum, align 4, !dbg !16524, !tbaa !3292, !ctir !1807
  br label %sw.epilog, !dbg !16525

if.end11:                                         ; preds = %land.lhs.true, %if.end
  %11 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16526, !tbaa !2645
  %state12 = getelementptr inbounds %struct.savewd, %struct.savewd* %11, i32 0, i32 0, !dbg !16527, !ctir !1803
  store i32 3, i32* %state12, align 4, !dbg !16528, !tbaa !16355, !ctir !1802
  %12 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16529, !tbaa !2645
  %val13 = getelementptr inbounds %struct.savewd, %struct.savewd* %12, i32 0, i32 1, !dbg !16530, !ctir !1803
  %child = bitcast %union.anon* %val13 to i32*, !dbg !16531
  store i32 -1, i32* %child, align 4, !dbg !16532, !tbaa !3292, !ctir !1807
  br label %sw.bb14, !dbg !16533

sw.bb14:                                          ; preds = %entry, %if.end11
  %13 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16534, !tbaa !2645
  %val15 = getelementptr inbounds %struct.savewd, %struct.savewd* %13, i32 0, i32 1, !dbg !16536, !ctir !1803
  %child16 = bitcast %union.anon* %val15 to i32*, !dbg !16537
  %14 = load i32, i32* %child16, align 4, !dbg !16537, !tbaa !3292, !ctir !1807
  %cmp17 = icmp slt i32 %14, 0, !dbg !16538
  br i1 %cmp17, label %if.then18, label %if.end36, !dbg !16539

if.then18:                                        ; preds = %sw.bb14
  %call19 = call i32 @fork() #9, !dbg !16540
  %15 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16542, !tbaa !2645
  %val20 = getelementptr inbounds %struct.savewd, %struct.savewd* %15, i32 0, i32 1, !dbg !16543, !ctir !1803
  %child21 = bitcast %union.anon* %val20 to i32*, !dbg !16544
  store i32 %call19, i32* %child21, align 4, !dbg !16545, !tbaa !3292, !ctir !1807
  %16 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16546, !tbaa !2645
  %val22 = getelementptr inbounds %struct.savewd, %struct.savewd* %16, i32 0, i32 1, !dbg !16548, !ctir !1803
  %child23 = bitcast %union.anon* %val22 to i32*, !dbg !16549
  %17 = load i32, i32* %child23, align 4, !dbg !16549, !tbaa !3292, !ctir !1807
  %cmp24 = icmp ne i32 %17, 0, !dbg !16550
  br i1 %cmp24, label %if.then25, label %if.end35, !dbg !16551

if.then25:                                        ; preds = %if.then18
  %18 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16552, !tbaa !2645
  %val26 = getelementptr inbounds %struct.savewd, %struct.savewd* %18, i32 0, i32 1, !dbg !16555, !ctir !1803
  %child27 = bitcast %union.anon* %val26 to i32*, !dbg !16556
  %19 = load i32, i32* %child27, align 4, !dbg !16556, !tbaa !3292, !ctir !1807
  %cmp28 = icmp slt i32 0, %19, !dbg !16557
  br i1 %cmp28, label %if.then29, label %if.end30, !dbg !16558

if.then29:                                        ; preds = %if.then25
  store i1 true, i1* %retval, align 1, !dbg !16559
  br label %return, !dbg !16559

if.end30:                                         ; preds = %if.then25
  %20 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16560, !tbaa !2645
  %state31 = getelementptr inbounds %struct.savewd, %struct.savewd* %20, i32 0, i32 0, !dbg !16561, !ctir !1803
  store i32 4, i32* %state31, align 4, !dbg !16562, !tbaa !16355, !ctir !1802
  %call32 = call i32* @__errno_location() #16, !dbg !16563
  %21 = load i32, i32* %call32, align 4, !dbg !16563, !tbaa !2632, !ctir !7
  %22 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16564, !tbaa !2645
  %val33 = getelementptr inbounds %struct.savewd, %struct.savewd* %22, i32 0, i32 1, !dbg !16565, !ctir !1803
  %errnum34 = bitcast %union.anon* %val33 to i32*, !dbg !16566
  store i32 %21, i32* %errnum34, align 4, !dbg !16567, !tbaa !3292, !ctir !1807
  br label %if.end35, !dbg !16568

if.end35:                                         ; preds = %if.end30, %if.then18
  br label %if.end36, !dbg !16569

if.end36:                                         ; preds = %if.end35, %sw.bb14
  br label %sw.epilog, !dbg !16570

sw.bb37:                                          ; preds = %entry, %entry, %entry, %entry
  br label %sw.epilog, !dbg !16571

sw.default:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.368, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.367, i64 0, i64 0), i32 99, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__PRETTY_FUNCTION__.savewd_save, i64 0, i64 0)) #13, !dbg !16572
  unreachable, !dbg !16572

sw.epilog:                                        ; preds = %sw.bb37, %if.end36, %if.then7, %if.then
  store i1 false, i1* %retval, align 1, !dbg !16575
  br label %return, !dbg !16575

return:                                           ; preds = %sw.epilog, %if.then29
  %23 = load i1, i1* %retval, align 1, !dbg !16576
  ret i1 %23, !dbg !16576
}

; Function Attrs: nounwind
declare dso_local i32 @chdir(i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @fchdir(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @savewd_restore(%struct.savewd* %wd, i32 %status) #4 !dbg !16577 !ctir !1822 {
entry:
  %retval = alloca i32, align 4
  %wd.addr = alloca %struct.savewd*, align 8
  %status.addr = alloca i32, align 4
  %chdir_errno = alloca i32, align 4, !ctir !7
  %child = alloca i32, align 4, !ctir !111
  %child_status = alloca i32, align 4, !ctir !7
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !16578, metadata !DIExpression()), !dbg !16579
  store i32 %status, i32* %status.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !16580, metadata !DIExpression()), !dbg !16581
  %0 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16582, !tbaa !2645
  %state = getelementptr inbounds %struct.savewd, %struct.savewd* %0, i32 0, i32 0, !dbg !16583, !ctir !1803
  %1 = load i32, i32* %state, align 4, !dbg !16583, !tbaa !16355, !ctir !1802
  switch i32 %1, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 4, label %sw.bb9
    i32 3, label %sw.bb13
  ], !dbg !16584

sw.bb:                                            ; preds = %entry, %entry
  br label %sw.epilog, !dbg !16585

sw.bb1:                                           ; preds = %entry
  %2 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16587, !tbaa !2645
  %val = getelementptr inbounds %struct.savewd, %struct.savewd* %2, i32 0, i32 1, !dbg !16589, !ctir !1803
  %fd = bitcast %union.anon* %val to i32*, !dbg !16590
  %3 = load i32, i32* %fd, align 4, !dbg !16590, !tbaa !3292, !ctir !1807
  %call = call i32 @fchdir(i32 %3) #9, !dbg !16591
  %cmp = icmp eq i32 %call, 0, !dbg !16592
  br i1 %cmp, label %if.then, label %if.else, !dbg !16593

if.then:                                          ; preds = %sw.bb1
  %4 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16594, !tbaa !2645
  %state2 = getelementptr inbounds %struct.savewd, %struct.savewd* %4, i32 0, i32 0, !dbg !16596, !ctir !1803
  store i32 1, i32* %state2, align 4, !dbg !16597, !tbaa !16355, !ctir !1802
  br label %sw.epilog, !dbg !16598

if.else:                                          ; preds = %sw.bb1
  call void @llvm.dbg.declare(metadata i32* %chdir_errno, metadata !16599, metadata !DIExpression()), !dbg !16601
  %call3 = call i32* @__errno_location() #16, !dbg !16602
  %5 = load i32, i32* %call3, align 4, !dbg !16602, !tbaa !2632, !ctir !7
  store i32 %5, i32* %chdir_errno, align 4, !dbg !16601, !tbaa !2632
  %6 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16603, !tbaa !2645
  %val4 = getelementptr inbounds %struct.savewd, %struct.savewd* %6, i32 0, i32 1, !dbg !16604, !ctir !1803
  %fd5 = bitcast %union.anon* %val4 to i32*, !dbg !16605
  %7 = load i32, i32* %fd5, align 4, !dbg !16605, !tbaa !3292, !ctir !1807
  %call6 = call i32 @close(i32 %7), !dbg !16606
  %8 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16607, !tbaa !2645
  %state7 = getelementptr inbounds %struct.savewd, %struct.savewd* %8, i32 0, i32 0, !dbg !16608, !ctir !1803
  store i32 4, i32* %state7, align 4, !dbg !16609, !tbaa !16355, !ctir !1802
  %9 = load i32, i32* %chdir_errno, align 4, !dbg !16610, !tbaa !2632
  %10 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16611, !tbaa !2645
  %val8 = getelementptr inbounds %struct.savewd, %struct.savewd* %10, i32 0, i32 1, !dbg !16612, !ctir !1803
  %errnum = bitcast %union.anon* %val8 to i32*, !dbg !16613
  store i32 %9, i32* %errnum, align 4, !dbg !16614, !tbaa !3292, !ctir !1807
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %sw.bb9, !dbg !16615

sw.bb9:                                           ; preds = %entry, %if.end
  %11 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16616, !tbaa !2645
  %val10 = getelementptr inbounds %struct.savewd, %struct.savewd* %11, i32 0, i32 1, !dbg !16617, !ctir !1803
  %errnum11 = bitcast %union.anon* %val10 to i32*, !dbg !16618
  %12 = load i32, i32* %errnum11, align 4, !dbg !16618, !tbaa !3292, !ctir !1807
  %call12 = call i32* @__errno_location() #16, !dbg !16619
  store i32 %12, i32* %call12, align 4, !dbg !16620, !tbaa !2632, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !16621
  br label %return, !dbg !16621

sw.bb13:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %child, metadata !16622, metadata !DIExpression()), !dbg !16624
  %13 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16625, !tbaa !2645
  %val14 = getelementptr inbounds %struct.savewd, %struct.savewd* %13, i32 0, i32 1, !dbg !16626, !ctir !1803
  %child15 = bitcast %union.anon* %val14 to i32*, !dbg !16627
  %14 = load i32, i32* %child15, align 4, !dbg !16627, !tbaa !3292, !ctir !1807
  store i32 %14, i32* %child, align 4, !dbg !16624, !tbaa !2632
  %15 = load i32, i32* %child, align 4, !dbg !16628, !tbaa !2632
  %cmp16 = icmp eq i32 %15, 0, !dbg !16630
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !16631

if.then17:                                        ; preds = %sw.bb13
  %16 = load i32, i32* %status.addr, align 4, !dbg !16632, !tbaa !2632
  call void @_exit(i32 %16) #15, !dbg !16633
  unreachable, !dbg !16633

if.end18:                                         ; preds = %sw.bb13
  %17 = load i32, i32* %child, align 4, !dbg !16634, !tbaa !2632
  %cmp19 = icmp slt i32 0, %17, !dbg !16636
  br i1 %cmp19, label %if.then20, label %if.end36, !dbg !16637

if.then20:                                        ; preds = %if.end18
  call void @llvm.dbg.declare(metadata i32* %child_status, metadata !16638, metadata !DIExpression()), !dbg !16640
  br label %while.cond, !dbg !16641

while.cond:                                       ; preds = %if.end27, %if.then20
  %18 = load i32, i32* %child, align 4, !dbg !16642, !tbaa !2632
  %call21 = call i32 @waitpid(i32 %18, i32* %child_status, i32 0), !dbg !16643
  %cmp22 = icmp slt i32 %call21, 0, !dbg !16644
  br i1 %cmp22, label %while.body, label %while.end, !dbg !16641

while.body:                                       ; preds = %while.cond
  %call23 = call i32* @__errno_location() #16, !dbg !16645
  %19 = load i32, i32* %call23, align 4, !dbg !16645, !tbaa !2632, !ctir !7
  %cmp24 = icmp eq i32 %19, 4, !dbg !16645
  br i1 %cmp24, label %if.then25, label %if.else26, !dbg !16648

if.then25:                                        ; preds = %while.body
  br label %if.end27, !dbg !16648

if.else26:                                        ; preds = %while.body
  call void @__assert_fail(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3.372, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.367, i64 0, i64 0), i32 216, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__PRETTY_FUNCTION__.savewd_restore, i64 0, i64 0)) #13, !dbg !16645
  unreachable, !dbg !16645

if.end27:                                         ; preds = %if.then25
  br label %while.cond, !dbg !16641, !llvm.loop !16649

while.end:                                        ; preds = %while.cond
  %20 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16651, !tbaa !2645
  %val28 = getelementptr inbounds %struct.savewd, %struct.savewd* %20, i32 0, i32 1, !dbg !16652, !ctir !1803
  %child29 = bitcast %union.anon* %val28 to i32*, !dbg !16653
  store i32 -1, i32* %child29, align 4, !dbg !16654, !tbaa !3292, !ctir !1807
  %21 = load i32, i32* %child_status, align 4, !dbg !16655, !tbaa !2632
  %and = and i32 %21, 127, !dbg !16655
  %cmp30 = icmp eq i32 %and, 0, !dbg !16655
  br i1 %cmp30, label %if.end34, label %if.then31, !dbg !16657

if.then31:                                        ; preds = %while.end
  %22 = load i32, i32* %child_status, align 4, !dbg !16658, !tbaa !2632
  %and32 = and i32 %22, 127, !dbg !16658
  %call33 = call i32 @raise(i32 %and32) #9, !dbg !16659
  br label %if.end34, !dbg !16659

if.end34:                                         ; preds = %if.then31, %while.end
  %23 = load i32, i32* %child_status, align 4, !dbg !16660, !tbaa !2632
  %and35 = and i32 %23, 65280, !dbg !16660
  %shr = ashr i32 %and35, 8, !dbg !16660
  store i32 %shr, i32* %retval, align 4, !dbg !16661
  br label %return, !dbg !16661

if.end36:                                         ; preds = %if.end18
  br label %sw.epilog, !dbg !16662

sw.default:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.368, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.367, i64 0, i64 0), i32 226, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__PRETTY_FUNCTION__.savewd_restore, i64 0, i64 0)) #13, !dbg !16663
  unreachable, !dbg !16663

sw.epilog:                                        ; preds = %if.end36, %if.then, %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !16666
  br label %return, !dbg !16666

return:                                           ; preds = %sw.epilog, %if.end34, %sw.bb9
  %24 = load i32, i32* %retval, align 4, !dbg !16667
  ret i32 %24, !dbg !16667
}

; Function Attrs: nounwind
declare dso_local i32 @raise(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @savewd_finish(%struct.savewd* %wd) #4 !dbg !16668 !ctir !1813 {
entry:
  %wd.addr = alloca %struct.savewd*, align 8
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !16669, metadata !DIExpression()), !dbg !16670
  %0 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16671, !tbaa !2645
  %state = getelementptr inbounds %struct.savewd, %struct.savewd* %0, i32 0, i32 0, !dbg !16672, !ctir !1803
  %1 = load i32, i32* %state, align 4, !dbg !16672, !tbaa !16355, !ctir !1802
  switch i32 %1, label %sw.default [
    i32 0, label %sw.bb
    i32 4, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb1
    i32 3, label %sw.bb2
  ], !dbg !16673

sw.bb:                                            ; preds = %entry, %entry
  br label %sw.epilog, !dbg !16674

sw.bb1:                                           ; preds = %entry, %entry
  %2 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16676, !tbaa !2645
  %val = getelementptr inbounds %struct.savewd, %struct.savewd* %2, i32 0, i32 1, !dbg !16677, !ctir !1803
  %fd = bitcast %union.anon* %val to i32*, !dbg !16678
  %3 = load i32, i32* %fd, align 4, !dbg !16678, !tbaa !3292, !ctir !1807
  %call = call i32 @close(i32 %3), !dbg !16679
  br label %sw.epilog, !dbg !16680

sw.bb2:                                           ; preds = %entry
  %4 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16681, !tbaa !2645
  %val3 = getelementptr inbounds %struct.savewd, %struct.savewd* %4, i32 0, i32 1, !dbg !16681, !ctir !1803
  %child = bitcast %union.anon* %val3 to i32*, !dbg !16681
  %5 = load i32, i32* %child, align 4, !dbg !16681, !tbaa !3292, !ctir !1807
  %cmp = icmp slt i32 %5, 0, !dbg !16681
  br i1 %cmp, label %if.then, label %if.else, !dbg !16684

if.then:                                          ; preds = %sw.bb2
  br label %if.end, !dbg !16684

if.else:                                          ; preds = %sw.bb2
  call void @__assert_fail(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4.375, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.367, i64 0, i64 0), i32 247, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__.savewd_finish, i64 0, i64 0)) #13, !dbg !16681
  unreachable, !dbg !16681

if.end:                                           ; preds = %if.then
  br label %sw.epilog, !dbg !16685

sw.default:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.368, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1.367, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @__PRETTY_FUNCTION__.savewd_finish, i64 0, i64 0)) #13, !dbg !16686
  unreachable, !dbg !16686

sw.epilog:                                        ; preds = %if.end, %sw.bb1, %sw.bb
  %6 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16689, !tbaa !2645
  %state4 = getelementptr inbounds %struct.savewd, %struct.savewd* %6, i32 0, i32 0, !dbg !16690, !ctir !1803
  store i32 5, i32* %state4, align 4, !dbg !16691, !tbaa !16355, !ctir !1802
  ret void, !dbg !16692
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @savewd_process_files(i32 %n_files, i8** %file, i32 (i8*, %struct.savewd*, i8*)* %act, i8* %options) #4 !dbg !16693 !ctir !1824 {
entry:
  %n_files.addr = alloca i32, align 4
  %file.addr = alloca i8**, align 8
  %act.addr = alloca i32 (i8*, %struct.savewd*, i8*)*, align 8
  %options.addr = alloca i8*, align 8
  %i = alloca i32, align 4, !ctir !7
  %last_relative = alloca i32, align 4, !ctir !7
  %exit_status = alloca i32, align 4, !ctir !7
  %wd = alloca %struct.savewd, align 4, !ctir !1803
  %s = alloca i32, align 4, !ctir !7
  %r = alloca i32, align 4, !ctir !7
  %s36 = alloca i32, align 4, !ctir !7
  store i32 %n_files, i32* %n_files.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %n_files.addr, metadata !16694, metadata !DIExpression()), !dbg !16695
  store i8** %file, i8*** %file.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8*** %file.addr, metadata !16696, metadata !DIExpression()), !dbg !16697
  store i32 (i8*, %struct.savewd*, i8*)* %act, i32 (i8*, %struct.savewd*, i8*)** %act.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i32 (i8*, %struct.savewd*, i8*)** %act.addr, metadata !16698, metadata !DIExpression()), !dbg !16699
  store i8* %options, i8** %options.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %options.addr, metadata !16700, metadata !DIExpression()), !dbg !16701
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16702, metadata !DIExpression()), !dbg !16703
  store i32 0, i32* %i, align 4, !dbg !16703, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %last_relative, metadata !16704, metadata !DIExpression()), !dbg !16705
  call void @llvm.dbg.declare(metadata i32* %exit_status, metadata !16706, metadata !DIExpression()), !dbg !16707
  store i32 0, i32* %exit_status, align 4, !dbg !16707, !tbaa !2632
  call void @llvm.dbg.declare(metadata %struct.savewd* %wd, metadata !16708, metadata !DIExpression()), !dbg !16709
  call void @savewd_init(%struct.savewd* %wd), !dbg !16710
  %0 = load i32, i32* %n_files.addr, align 4, !dbg !16711, !tbaa !2632
  %sub = sub nsw i32 %0, 1, !dbg !16713
  store i32 %sub, i32* %last_relative, align 4, !dbg !16714, !tbaa !2632
  br label %for.cond, !dbg !16715

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %last_relative, align 4, !dbg !16716, !tbaa !2632
  %cmp = icmp sle i32 0, %1, !dbg !16718
  br i1 %cmp, label %for.body, label %for.end, !dbg !16719

for.body:                                         ; preds = %for.cond
  %2 = load i8**, i8*** %file.addr, align 8, !dbg !16720, !tbaa !2645
  %3 = load i32, i32* %last_relative, align 4, !dbg !16720, !tbaa !2632
  %idxprom = sext i32 %3 to i64, !dbg !16720
  %arrayidx = getelementptr inbounds i8*, i8** %2, i64 %idxprom, !dbg !16720, !ctir !184
  %4 = load i8*, i8** %arrayidx, align 8, !dbg !16720, !tbaa !2645
  %arrayidx1 = getelementptr inbounds i8, i8* %4, i64 0, !dbg !16720, !ctir !9
  %5 = load i8, i8* %arrayidx1, align 1, !dbg !16720, !tbaa !3292
  %conv = sext i8 %5 to i32, !dbg !16720
  %cmp2 = icmp eq i32 %conv, 47, !dbg !16720
  br i1 %cmp2, label %if.end, label %if.then, !dbg !16722

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !16723

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !16720

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %last_relative, align 4, !dbg !16724, !tbaa !2632
  %dec = add nsw i32 %6, -1, !dbg !16724
  store i32 %dec, i32* %last_relative, align 4, !dbg !16724, !tbaa !2632
  br label %for.cond, !dbg !16725, !llvm.loop !16726

for.end:                                          ; preds = %if.then, %for.cond
  br label %for.cond4, !dbg !16728

for.cond4:                                        ; preds = %for.inc30, %for.end
  %7 = load i32, i32* %i, align 4, !dbg !16729, !tbaa !2632
  %8 = load i32, i32* %last_relative, align 4, !dbg !16732, !tbaa !2632
  %cmp5 = icmp slt i32 %7, %8, !dbg !16733
  br i1 %cmp5, label %for.body7, label %for.end31, !dbg !16734

for.body7:                                        ; preds = %for.cond4
  %call = call zeroext i1 @savewd_delegating(%struct.savewd* %wd), !dbg !16735
  br i1 %call, label %if.end16, label %if.then8, !dbg !16738

if.then8:                                         ; preds = %for.body7
  call void @llvm.dbg.declare(metadata i32* %s, metadata !16739, metadata !DIExpression()), !dbg !16741
  %9 = load i32 (i8*, %struct.savewd*, i8*)*, i32 (i8*, %struct.savewd*, i8*)** %act.addr, align 8, !dbg !16742, !tbaa !2645
  %10 = load i8**, i8*** %file.addr, align 8, !dbg !16743, !tbaa !2645
  %11 = load i32, i32* %i, align 4, !dbg !16744, !tbaa !2632
  %idxprom9 = sext i32 %11 to i64, !dbg !16743
  %arrayidx10 = getelementptr inbounds i8*, i8** %10, i64 %idxprom9, !dbg !16743, !ctir !184
  %12 = load i8*, i8** %arrayidx10, align 8, !dbg !16743, !tbaa !2645
  %13 = load i8*, i8** %options.addr, align 8, !dbg !16745, !tbaa !2645
  %call11 = call i32 %9(i8* %12, %struct.savewd* %wd, i8* %13), !dbg !16742
  store i32 %call11, i32* %s, align 4, !dbg !16741, !tbaa !2632
  %14 = load i32, i32* %exit_status, align 4, !dbg !16746, !tbaa !2632
  %15 = load i32, i32* %s, align 4, !dbg !16748, !tbaa !2632
  %cmp12 = icmp slt i32 %14, %15, !dbg !16749
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !16750

if.then14:                                        ; preds = %if.then8
  %16 = load i32, i32* %s, align 4, !dbg !16751, !tbaa !2632
  store i32 %16, i32* %exit_status, align 4, !dbg !16752, !tbaa !2632
  br label %if.end15, !dbg !16753

if.end15:                                         ; preds = %if.then14, %if.then8
  br label %if.end16, !dbg !16754

if.end16:                                         ; preds = %if.end15, %for.body7
  %17 = load i8**, i8*** %file.addr, align 8, !dbg !16755, !tbaa !2645
  %18 = load i32, i32* %i, align 4, !dbg !16755, !tbaa !2632
  %add = add nsw i32 %18, 1, !dbg !16755
  %idxprom17 = sext i32 %add to i64, !dbg !16755
  %arrayidx18 = getelementptr inbounds i8*, i8** %17, i64 %idxprom17, !dbg !16755, !ctir !184
  %19 = load i8*, i8** %arrayidx18, align 8, !dbg !16755, !tbaa !2645
  %arrayidx19 = getelementptr inbounds i8, i8* %19, i64 0, !dbg !16755, !ctir !9
  %20 = load i8, i8* %arrayidx19, align 1, !dbg !16755, !tbaa !3292
  %conv20 = sext i8 %20 to i32, !dbg !16755
  %cmp21 = icmp eq i32 %conv20, 47, !dbg !16755
  br i1 %cmp21, label %if.end29, label %if.then23, !dbg !16757

if.then23:                                        ; preds = %if.end16
  call void @llvm.dbg.declare(metadata i32* %r, metadata !16758, metadata !DIExpression()), !dbg !16760
  %21 = load i32, i32* %exit_status, align 4, !dbg !16761, !tbaa !2632
  %call24 = call i32 @savewd_restore(%struct.savewd* %wd, i32 %21), !dbg !16762
  store i32 %call24, i32* %r, align 4, !dbg !16760, !tbaa !2632
  %22 = load i32, i32* %exit_status, align 4, !dbg !16763, !tbaa !2632
  %23 = load i32, i32* %r, align 4, !dbg !16765, !tbaa !2632
  %cmp25 = icmp slt i32 %22, %23, !dbg !16766
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !16767

if.then27:                                        ; preds = %if.then23
  %24 = load i32, i32* %r, align 4, !dbg !16768, !tbaa !2632
  store i32 %24, i32* %exit_status, align 4, !dbg !16769, !tbaa !2632
  br label %if.end28, !dbg !16770

if.end28:                                         ; preds = %if.then27, %if.then23
  br label %if.end29, !dbg !16771

if.end29:                                         ; preds = %if.end28, %if.end16
  br label %for.inc30, !dbg !16772

for.inc30:                                        ; preds = %if.end29
  %25 = load i32, i32* %i, align 4, !dbg !16773, !tbaa !2632
  %inc = add nsw i32 %25, 1, !dbg !16773
  store i32 %inc, i32* %i, align 4, !dbg !16773, !tbaa !2632
  br label %for.cond4, !dbg !16774, !llvm.loop !16775

for.end31:                                        ; preds = %for.cond4
  call void @savewd_finish(%struct.savewd* %wd), !dbg !16777
  br label %for.cond32, !dbg !16778

for.cond32:                                       ; preds = %for.inc44, %for.end31
  %26 = load i32, i32* %i, align 4, !dbg !16779, !tbaa !2632
  %27 = load i32, i32* %n_files.addr, align 4, !dbg !16782, !tbaa !2632
  %cmp33 = icmp slt i32 %26, %27, !dbg !16783
  br i1 %cmp33, label %for.body35, label %for.end46, !dbg !16784

for.body35:                                       ; preds = %for.cond32
  call void @llvm.dbg.declare(metadata i32* %s36, metadata !16785, metadata !DIExpression()), !dbg !16787
  %28 = load i32 (i8*, %struct.savewd*, i8*)*, i32 (i8*, %struct.savewd*, i8*)** %act.addr, align 8, !dbg !16788, !tbaa !2645
  %29 = load i8**, i8*** %file.addr, align 8, !dbg !16789, !tbaa !2645
  %30 = load i32, i32* %i, align 4, !dbg !16790, !tbaa !2632
  %idxprom37 = sext i32 %30 to i64, !dbg !16789
  %arrayidx38 = getelementptr inbounds i8*, i8** %29, i64 %idxprom37, !dbg !16789, !ctir !184
  %31 = load i8*, i8** %arrayidx38, align 8, !dbg !16789, !tbaa !2645
  %32 = load i8*, i8** %options.addr, align 8, !dbg !16791, !tbaa !2645
  %call39 = call i32 %28(i8* %31, %struct.savewd* %wd, i8* %32), !dbg !16788
  store i32 %call39, i32* %s36, align 4, !dbg !16787, !tbaa !2632
  %33 = load i32, i32* %exit_status, align 4, !dbg !16792, !tbaa !2632
  %34 = load i32, i32* %s36, align 4, !dbg !16794, !tbaa !2632
  %cmp40 = icmp slt i32 %33, %34, !dbg !16795
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !16796

if.then42:                                        ; preds = %for.body35
  %35 = load i32, i32* %s36, align 4, !dbg !16797, !tbaa !2632
  store i32 %35, i32* %exit_status, align 4, !dbg !16798, !tbaa !2632
  br label %if.end43, !dbg !16799

if.end43:                                         ; preds = %if.then42, %for.body35
  br label %for.inc44, !dbg !16800

for.inc44:                                        ; preds = %if.end43
  %36 = load i32, i32* %i, align 4, !dbg !16801, !tbaa !2632
  %inc45 = add nsw i32 %36, 1, !dbg !16801
  store i32 %inc45, i32* %i, align 4, !dbg !16801, !tbaa !2632
  br label %for.cond32, !dbg !16802, !llvm.loop !16803

for.end46:                                        ; preds = %for.cond32
  %37 = load i32, i32* %exit_status, align 4, !dbg !16805, !tbaa !2632
  ret i32 %37, !dbg !16806
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @savewd_delegating(%struct.savewd* %wd) #4 !dbg !16807 !ctir !1831 {
entry:
  %wd.addr = alloca %struct.savewd*, align 8
  store %struct.savewd* %wd, %struct.savewd** %wd.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.savewd** %wd.addr, metadata !16808, metadata !DIExpression()), !dbg !16809
  %0 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16810, !tbaa !2645
  %state = getelementptr inbounds %struct.savewd, %struct.savewd* %0, i32 0, i32 0, !dbg !16811, !ctir !1819
  %1 = load i32, i32* %state, align 4, !dbg !16811, !tbaa !16355, !ctir !1802
  %cmp = icmp eq i32 %1, 3, !dbg !16812
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !16813

land.rhs:                                         ; preds = %entry
  %2 = load %struct.savewd*, %struct.savewd** %wd.addr, align 8, !dbg !16814, !tbaa !2645
  %val = getelementptr inbounds %struct.savewd, %struct.savewd* %2, i32 0, i32 1, !dbg !16815, !ctir !1819
  %child = bitcast %union.anon* %val to i32*, !dbg !16816
  %3 = load i32, i32* %child, align 4, !dbg !16816, !tbaa !3292, !ctir !1807
  %cmp1 = icmp slt i32 0, %3, !dbg !16817
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !16818
  ret i1 %4, !dbg !16819
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getcon(i8** %con) #4 !dbg !16820 !ctir !1836 {
entry:
  %con.addr = alloca i8**, align 8
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !16821, metadata !DIExpression()), !dbg !16822
  %call = call i32* @__errno_location() #16, !dbg !16823
  store i32 95, i32* %call, align 4, !dbg !16824, !tbaa !2632, !ctir !7
  ret i32 -1, !dbg !16825
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @freecon(i8* %con) #4 !dbg !16826 !ctir !1841 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16827, metadata !DIExpression()), !dbg !16828
  ret void, !dbg !16829
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getfscreatecon(i8** %con) #4 !dbg !16830 !ctir !1836 {
entry:
  %con.addr = alloca i8**, align 8
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !16831, metadata !DIExpression()), !dbg !16832
  %call = call i32* @__errno_location() #16, !dbg !16833
  store i32 95, i32* %call, align 4, !dbg !16834, !tbaa !2632, !ctir !7
  ret i32 -1, !dbg !16835
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setfscreatecon(i8* %con) #4 !dbg !16836 !ctir !1843 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16837, metadata !DIExpression()), !dbg !16838
  %call = call i32* @__errno_location() #16, !dbg !16839
  store i32 95, i32* %call, align 4, !dbg !16840, !tbaa !2632, !ctir !7
  ret i32 -1, !dbg !16841
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @matchpathcon(i8* %file, i32 %m, i8** %con) #4 !dbg !16842 !ctir !1845 {
entry:
  %file.addr = alloca i8*, align 8
  %m.addr = alloca i32, align 4
  %con.addr = alloca i8**, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16843, metadata !DIExpression()), !dbg !16844
  store i32 %m, i32* %m.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !16845, metadata !DIExpression()), !dbg !16846
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !16847, metadata !DIExpression()), !dbg !16848
  %call = call i32* @__errno_location() #16, !dbg !16849
  store i32 95, i32* %call, align 4, !dbg !16850, !tbaa !2632, !ctir !7
  ret i32 -1, !dbg !16851
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getfilecon(i8* %file, i8** %con) #4 !dbg !16852 !ctir !1847 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8**, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16853, metadata !DIExpression()), !dbg !16854
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !16855, metadata !DIExpression()), !dbg !16856
  %call = call i32* @__errno_location() #16, !dbg !16857
  store i32 95, i32* %call, align 4, !dbg !16858, !tbaa !2632, !ctir !7
  ret i32 -1, !dbg !16859
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lgetfilecon(i8* %file, i8** %con) #4 !dbg !16860 !ctir !1847 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8**, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16861, metadata !DIExpression()), !dbg !16862
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !16863, metadata !DIExpression()), !dbg !16864
  %call = call i32* @__errno_location() #16, !dbg !16865
  store i32 95, i32* %call, align 4, !dbg !16866, !tbaa !2632, !ctir !7
  ret i32 -1, !dbg !16867
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fgetfilecon(i32 %fd, i8** %con) #4 !dbg !16868 !ctir !1849 {
entry:
  %fd.addr = alloca i32, align 4
  %con.addr = alloca i8**, align 8
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !16869, metadata !DIExpression()), !dbg !16870
  store i8** %con, i8*** %con.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8*** %con.addr, metadata !16871, metadata !DIExpression()), !dbg !16872
  %call = call i32* @__errno_location() #16, !dbg !16873
  store i32 95, i32* %call, align 4, !dbg !16874, !tbaa !2632, !ctir !7
  ret i32 -1, !dbg !16875
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setfilecon(i8* %file, i8* %con) #4 !dbg !16876 !ctir !1851 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16877, metadata !DIExpression()), !dbg !16878
  store i8* %con, i8** %con.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16879, metadata !DIExpression()), !dbg !16880
  %call = call i32* @__errno_location() #16, !dbg !16881
  store i32 95, i32* %call, align 4, !dbg !16882, !tbaa !2632, !ctir !7
  ret i32 -1, !dbg !16883
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lsetfilecon(i8* %file, i8* %con) #4 !dbg !16884 !ctir !1851 {
entry:
  %file.addr = alloca i8*, align 8
  %con.addr = alloca i8*, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !16885, metadata !DIExpression()), !dbg !16886
  store i8* %con, i8** %con.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16887, metadata !DIExpression()), !dbg !16888
  %call = call i32* @__errno_location() #16, !dbg !16889
  store i32 95, i32* %call, align 4, !dbg !16890, !tbaa !2632, !ctir !7
  ret i32 -1, !dbg !16891
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fsetfilecon(i32 %fd, i8* %con) #4 !dbg !16892 !ctir !1853 {
entry:
  %fd.addr = alloca i32, align 4
  %con.addr = alloca i8*, align 8
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !16893, metadata !DIExpression()), !dbg !16894
  store i8* %con, i8** %con.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16895, metadata !DIExpression()), !dbg !16896
  %call = call i32* @__errno_location() #16, !dbg !16897
  store i32 95, i32* %call, align 4, !dbg !16898, !tbaa !2632, !ctir !7
  ret i32 -1, !dbg !16899
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_check_context(i8* %con) #4 !dbg !16900 !ctir !1843 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16901, metadata !DIExpression()), !dbg !16902
  %call = call i32* @__errno_location() #16, !dbg !16903
  store i32 95, i32* %call, align 4, !dbg !16904, !tbaa !2632, !ctir !7
  ret i32 -1, !dbg !16905
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_check_context_raw(i8* %con) #4 !dbg !16906 !ctir !1843 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16907, metadata !DIExpression()), !dbg !16908
  %call = call i32* @__errno_location() #16, !dbg !16909
  store i32 95, i32* %call, align 4, !dbg !16910, !tbaa !2632, !ctir !7
  ret i32 -1, !dbg !16911
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @setexeccon(i8* %con) #4 !dbg !16912 !ctir !1843 {
entry:
  %con.addr = alloca i8*, align 8
  store i8* %con, i8** %con.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %con.addr, metadata !16913, metadata !DIExpression()), !dbg !16914
  %call = call i32* @__errno_location() #16, !dbg !16915
  store i32 95, i32* %call, align 4, !dbg !16916, !tbaa !2632, !ctir !7
  ret i32 -1, !dbg !16917
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @security_compute_create(i8* %scon, i8* %tcon, i16 zeroext %tclass, i8** %newcon) #4 !dbg !16918 !ctir !1855 {
entry:
  %scon.addr = alloca i8*, align 8
  %tcon.addr = alloca i8*, align 8
  %tclass.addr = alloca i16, align 2
  %newcon.addr = alloca i8**, align 8
  store i8* %scon, i8** %scon.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %scon.addr, metadata !16919, metadata !DIExpression()), !dbg !16920
  store i8* %tcon, i8** %tcon.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %tcon.addr, metadata !16921, metadata !DIExpression()), !dbg !16922
  store i16 %tclass, i16* %tclass.addr, align 2, !tbaa !14634
  call void @llvm.dbg.declare(metadata i16* %tclass.addr, metadata !16923, metadata !DIExpression()), !dbg !16924
  store i8** %newcon, i8*** %newcon.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8*** %newcon.addr, metadata !16925, metadata !DIExpression()), !dbg !16926
  %call = call i32* @__errno_location() #16, !dbg !16927
  store i32 95, i32* %call, align 4, !dbg !16928, !tbaa !2632, !ctir !7
  ret i32 -1, !dbg !16929
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @string_to_security_class(i8* %name) #4 !dbg !16930 !ctir !1858 {
entry:
  %name.addr = alloca i8*, align 8
  store i8* %name, i8** %name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !16931, metadata !DIExpression()), !dbg !16932
  %call = call i32* @__errno_location() #16, !dbg !16933
  store i32 95, i32* %call, align 4, !dbg !16934, !tbaa !2632, !ctir !7
  ret i16 0, !dbg !16935
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @matchpathcon_init_prefix(i8* %path, i8* %prefix) #4 !dbg !16936 !ctir !1860 {
entry:
  %path.addr = alloca i8*, align 8
  %prefix.addr = alloca i8*, align 8
  store i8* %path, i8** %path.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !16937, metadata !DIExpression()), !dbg !16938
  store i8* %prefix, i8** %prefix.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %prefix.addr, metadata !16939, metadata !DIExpression()), !dbg !16940
  %call = call i32* @__errno_location() #16, !dbg !16941
  store i32 95, i32* %call, align 4, !dbg !16942, !tbaa !2632, !ctir !7
  ret i32 -1, !dbg !16943
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_atime_ns(%struct.stat* %st) #10 !dbg !16944 !ctir !1865 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16946, metadata !DIExpression()), !dbg !16947
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16948, !tbaa !2645
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 11, !dbg !16948, !ctir !1868
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_atim, i32 0, i32 1, !dbg !16949, !ctir !1883
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !16949, !tbaa !16950, !ctir !296
  ret i64 %1, !dbg !16951
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_ctime_ns(%struct.stat* %st) #10 !dbg !16952 !ctir !1865 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16953, metadata !DIExpression()), !dbg !16954
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16955, !tbaa !2645
  %st_ctim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 13, !dbg !16955, !ctir !1868
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_ctim, i32 0, i32 1, !dbg !16956, !ctir !1883
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !16956, !tbaa !16957, !ctir !296
  ret i64 %1, !dbg !16958
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_mtime_ns(%struct.stat* %st) #10 !dbg !16959 !ctir !1865 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16960, metadata !DIExpression()), !dbg !16961
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16962, !tbaa !2645
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 12, !dbg !16962, !ctir !1868
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 1, !dbg !16963, !ctir !1883
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !16963, !tbaa !16964, !ctir !296
  ret i64 %1, !dbg !16965
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @get_stat_birthtime_ns(%struct.stat* %st) #10 !dbg !16966 !ctir !1865 {
entry:
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16967, metadata !DIExpression()), !dbg !16968
  ret i64 0, !dbg !16969
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_atime(%struct.stat* %st) #10 !dbg !16970 !ctir !1890 {
entry:
  %retval = alloca %struct.timespec, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16971, metadata !DIExpression()), !dbg !16972
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16973, !tbaa !2645
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 11, !dbg !16973, !ctir !1868
  %1 = bitcast %struct.timespec* %retval to i8*, !dbg !16973
  %2 = bitcast %struct.timespec* %st_atim to i8*, !dbg !16973
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !16973, !tbaa.struct !3795
  %3 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !16974
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !16974
  ret { i64, i64 } %4, !dbg !16974
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_ctime(%struct.stat* %st) #10 !dbg !16975 !ctir !1890 {
entry:
  %retval = alloca %struct.timespec, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16976, metadata !DIExpression()), !dbg !16977
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16978, !tbaa !2645
  %st_ctim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 13, !dbg !16978, !ctir !1868
  %1 = bitcast %struct.timespec* %retval to i8*, !dbg !16978
  %2 = bitcast %struct.timespec* %st_ctim to i8*, !dbg !16978
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !16978, !tbaa.struct !3795
  %3 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !16979
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !16979
  ret { i64, i64 } %4, !dbg !16979
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_mtime(%struct.stat* %st) #10 !dbg !16980 !ctir !1890 {
entry:
  %retval = alloca %struct.timespec, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16981, metadata !DIExpression()), !dbg !16982
  %0 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !16983, !tbaa !2645
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 12, !dbg !16983, !ctir !1868
  %1 = bitcast %struct.timespec* %retval to i8*, !dbg !16983
  %2 = bitcast %struct.timespec* %st_mtim to i8*, !dbg !16983
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 16, i1 false), !dbg !16983, !tbaa.struct !3795
  %3 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !16984
  %4 = load { i64, i64 }, { i64, i64 }* %3, align 8, !dbg !16984
  ret { i64, i64 } %4, !dbg !16984
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local { i64, i64 } @get_stat_birthtime(%struct.stat* %st) #10 !dbg !16985 !ctir !1890 {
entry:
  %retval = alloca %struct.timespec, align 8
  %st.addr = alloca %struct.stat*, align 8
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !16986, metadata !DIExpression()), !dbg !16987
  call void @llvm.dbg.declare(metadata %struct.timespec* %retval, metadata !16988, metadata !DIExpression()), !dbg !16989
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %retval, i32 0, i32 0, !dbg !16990, !ctir !1883
  store i64 -1, i64* %tv_sec, align 8, !dbg !16991, !tbaa !16992, !ctir !294
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %retval, i32 0, i32 1, !dbg !16993, !ctir !1883
  store i64 -1, i64* %tv_nsec, align 8, !dbg !16994, !tbaa !16995, !ctir !296
  %0 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !16996
  %1 = load { i64, i64 }, { i64, i64 }* %0, align 8, !dbg !16996
  ret { i64, i64 } %1, !dbg !16996
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @stat_time_normalize(i32 %result, %struct.stat* %st) #4 !dbg !16997 !ctir !1892 {
entry:
  %result.addr = alloca i32, align 4
  %st.addr = alloca %struct.stat*, align 8
  store i32 %result, i32* %result.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %result.addr, metadata !16998, metadata !DIExpression()), !dbg !16999
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !17000, metadata !DIExpression()), !dbg !17001
  %0 = load i32, i32* %result.addr, align 4, !dbg !17002, !tbaa !2632
  ret i32 %0, !dbg !17003
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @statat(i32 %fd, i8* %name, %struct.stat* %st) #4 !dbg !17004 !ctir !1898 {
entry:
  %fd.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %st.addr = alloca %struct.stat*, align 8
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !17006, metadata !DIExpression()), !dbg !17007
  store i8* %name, i8** %name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !17008, metadata !DIExpression()), !dbg !17009
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !17010, metadata !DIExpression()), !dbg !17011
  %0 = load i32, i32* %fd.addr, align 4, !dbg !17012, !tbaa !2632
  %1 = load i8*, i8** %name.addr, align 8, !dbg !17013, !tbaa !2645
  %2 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !17014, !tbaa !2645
  %call = call i32 @fstatat(i32 %0, i8* %1, %struct.stat* %2, i32 0) #9, !dbg !17015
  ret i32 %call, !dbg !17016
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lstatat(i32 %fd, i8* %name, %struct.stat* %st) #4 !dbg !17017 !ctir !1898 {
entry:
  %fd.addr = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %st.addr = alloca %struct.stat*, align 8
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !17018, metadata !DIExpression()), !dbg !17019
  store i8* %name, i8** %name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !17020, metadata !DIExpression()), !dbg !17021
  store %struct.stat* %st, %struct.stat** %st.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.stat** %st.addr, metadata !17022, metadata !DIExpression()), !dbg !17023
  %0 = load i32, i32* %fd.addr, align 4, !dbg !17024, !tbaa !2632
  %1 = load i8*, i8** %name.addr, align 8, !dbg !17025, !tbaa !2645
  %2 = load %struct.stat*, %struct.stat** %st.addr, align 8, !dbg !17026, !tbaa !2645
  %call = call i32 @fstatat(i32 %0, i8* %1, %struct.stat* %2, i32 256) #9, !dbg !17027
  ret i32 %call, !dbg !17028
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @try_tempname_len(i8* %tmpl, i32 %suffixlen, i8* %args, i32 (i8*, i8*)* %tryfunc, i64 %x_suffix_len) #4 !dbg !17029 !ctir !1195 {
entry:
  %retval = alloca i32, align 4
  %tmpl.addr = alloca i8*, align 8
  %suffixlen.addr = alloca i32, align 4
  %args.addr = alloca i8*, align 8
  %tryfunc.addr = alloca i32 (i8*, i8*)*, align 8
  %x_suffix_len.addr = alloca i64, align 8
  %len = alloca i64, align 8, !ctir !55
  %XXXXXX = alloca i8*, align 8, !ctir !9
  %count = alloca i32, align 4, !ctir !70
  %fd = alloca i32, align 4, !ctir !7
  %save_errno = alloca i32, align 4, !ctir !7
  %rand_src = alloca %struct.randint_source*, align 8, !ctir !1198
  %attempts = alloca i32, align 4, !ctir !70
  %i = alloca i64, align 8, !ctir !55
  %saved_errno = alloca i32, align 4, !ctir !7
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !17030, metadata !DIExpression()), !dbg !17031
  store i32 %suffixlen, i32* %suffixlen.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !17032, metadata !DIExpression()), !dbg !17033
  store i8* %args, i8** %args.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %args.addr, metadata !17034, metadata !DIExpression()), !dbg !17035
  store i32 (i8*, i8*)* %tryfunc, i32 (i8*, i8*)** %tryfunc.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %tryfunc.addr, metadata !17036, metadata !DIExpression()), !dbg !17037
  store i64 %x_suffix_len, i64* %x_suffix_len.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %x_suffix_len.addr, metadata !17038, metadata !DIExpression()), !dbg !17039
  call void @llvm.dbg.declare(metadata i64* %len, metadata !17040, metadata !DIExpression()), !dbg !17041
  call void @llvm.dbg.declare(metadata i8** %XXXXXX, metadata !17042, metadata !DIExpression()), !dbg !17043
  call void @llvm.dbg.declare(metadata i32* %count, metadata !17044, metadata !DIExpression()), !dbg !17045
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !17046, metadata !DIExpression()), !dbg !17047
  store i32 -1, i32* %fd, align 4, !dbg !17047, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %save_errno, metadata !17048, metadata !DIExpression()), !dbg !17049
  %call = call i32* @__errno_location() #16, !dbg !17050
  %0 = load i32, i32* %call, align 4, !dbg !17050, !tbaa !2632, !ctir !7
  store i32 %0, i32* %save_errno, align 4, !dbg !17049, !tbaa !2632
  call void @llvm.dbg.declare(metadata %struct.randint_source** %rand_src, metadata !17051, metadata !DIExpression()), !dbg !17052
  call void @llvm.dbg.declare(metadata i32* %attempts, metadata !17053, metadata !DIExpression()), !dbg !17054
  store i32 238328, i32* %attempts, align 4, !dbg !17054, !tbaa !2632
  %1 = load i8*, i8** %tmpl.addr, align 8, !dbg !17055, !tbaa !2645
  %call1 = call i64 @strlen(i8* %1) #14, !dbg !17056
  store i64 %call1, i64* %len, align 8, !dbg !17057, !tbaa !3285
  %2 = load i64, i64* %len, align 8, !dbg !17058, !tbaa !3285
  %3 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !17060, !tbaa !3285
  %4 = load i32, i32* %suffixlen.addr, align 4, !dbg !17061, !tbaa !2632
  %conv = sext i32 %4 to i64, !dbg !17061
  %add = add i64 %3, %conv, !dbg !17062
  %cmp = icmp ult i64 %2, %add, !dbg !17063
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !17064

lor.lhs.false:                                    ; preds = %entry
  %5 = load i8*, i8** %tmpl.addr, align 8, !dbg !17065, !tbaa !2645
  %6 = load i64, i64* %len, align 8, !dbg !17066, !tbaa !3285
  %7 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !17067, !tbaa !3285
  %sub = sub i64 %6, %7, !dbg !17068
  %8 = load i32, i32* %suffixlen.addr, align 4, !dbg !17069, !tbaa !2632
  %conv3 = sext i32 %8 to i64, !dbg !17069
  %sub4 = sub i64 %sub, %conv3, !dbg !17070
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %sub4, !dbg !17065, !ctir !9
  %9 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !17071, !tbaa !3285
  %call5 = call zeroext i1 @check_x_suffix(i8* %arrayidx, i64 %9) #14, !dbg !17072
  br i1 %call5, label %if.end, label %if.then, !dbg !17073

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call6 = call i32* @__errno_location() #16, !dbg !17074
  store i32 22, i32* %call6, align 4, !dbg !17074, !tbaa !2632, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !17076
  br label %return, !dbg !17076

if.end:                                           ; preds = %lor.lhs.false
  %10 = load i8*, i8** %tmpl.addr, align 8, !dbg !17077, !tbaa !2645
  %11 = load i64, i64* %len, align 8, !dbg !17078, !tbaa !3285
  %12 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !17079, !tbaa !3285
  %sub7 = sub i64 %11, %12, !dbg !17080
  %13 = load i32, i32* %suffixlen.addr, align 4, !dbg !17081, !tbaa !2632
  %conv8 = sext i32 %13 to i64, !dbg !17081
  %sub9 = sub i64 %sub7, %conv8, !dbg !17082
  %arrayidx10 = getelementptr inbounds i8, i8* %10, i64 %sub9, !dbg !17077, !ctir !9
  store i8* %arrayidx10, i8** %XXXXXX, align 8, !dbg !17083, !tbaa !2645
  %14 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !17084, !tbaa !3285
  %call11 = call %struct.randint_source* @randint_all_new(i8* null, i64 %14), !dbg !17085
  store %struct.randint_source* %call11, %struct.randint_source** %rand_src, align 8, !dbg !17086, !tbaa !2645
  %15 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !17087, !tbaa !2645
  %tobool = icmp ne %struct.randint_source* %15, null, !dbg !17087
  br i1 %tobool, label %if.end13, label %if.then12, !dbg !17089

if.then12:                                        ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !17090
  br label %return, !dbg !17090

if.end13:                                         ; preds = %if.end
  store i32 0, i32* %count, align 4, !dbg !17091, !tbaa !2632
  br label %for.cond, !dbg !17093

for.cond:                                         ; preds = %for.inc34, %if.end13
  %16 = load i32, i32* %count, align 4, !dbg !17094, !tbaa !2632
  %17 = load i32, i32* %attempts, align 4, !dbg !17096, !tbaa !2632
  %cmp14 = icmp ult i32 %16, %17, !dbg !17097
  br i1 %cmp14, label %for.body, label %for.end36, !dbg !17098

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %i, metadata !17099, metadata !DIExpression()), !dbg !17101
  store i64 0, i64* %i, align 8, !dbg !17102, !tbaa !3285
  br label %for.cond16, !dbg !17104

for.cond16:                                       ; preds = %for.inc, %for.body
  %18 = load i64, i64* %i, align 8, !dbg !17105, !tbaa !3285
  %19 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !17107, !tbaa !3285
  %cmp17 = icmp ult i64 %18, %19, !dbg !17108
  br i1 %cmp17, label %for.body19, label %for.end, !dbg !17109

for.body19:                                       ; preds = %for.cond16
  %20 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !17110, !tbaa !2645
  %call20 = call i64 @randint_genmax(%struct.randint_source* %20, i64 61), !dbg !17111
  %arrayidx21 = getelementptr inbounds [63 x i8], [63 x i8]* @letters, i64 0, i64 %call20, !dbg !17112, !ctir !1201
  %21 = load i8, i8* %arrayidx21, align 1, !dbg !17112, !tbaa !3292
  %22 = load i8*, i8** %XXXXXX, align 8, !dbg !17113, !tbaa !2645
  %23 = load i64, i64* %i, align 8, !dbg !17114, !tbaa !3285
  %arrayidx22 = getelementptr inbounds i8, i8* %22, i64 %23, !dbg !17113, !ctir !9
  store i8 %21, i8* %arrayidx22, align 1, !dbg !17115, !tbaa !3292
  br label %for.inc, !dbg !17113

for.inc:                                          ; preds = %for.body19
  %24 = load i64, i64* %i, align 8, !dbg !17116, !tbaa !3285
  %inc = add i64 %24, 1, !dbg !17116
  store i64 %inc, i64* %i, align 8, !dbg !17116, !tbaa !3285
  br label %for.cond16, !dbg !17117, !llvm.loop !17118

for.end:                                          ; preds = %for.cond16
  %25 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %tryfunc.addr, align 8, !dbg !17120, !tbaa !2645
  %26 = load i8*, i8** %tmpl.addr, align 8, !dbg !17121, !tbaa !2645
  %27 = load i8*, i8** %args.addr, align 8, !dbg !17122, !tbaa !2645
  %call23 = call i32 %25(i8* %26, i8* %27), !dbg !17120
  store i32 %call23, i32* %fd, align 4, !dbg !17123, !tbaa !2632
  %28 = load i32, i32* %fd, align 4, !dbg !17124, !tbaa !2632
  %cmp24 = icmp sge i32 %28, 0, !dbg !17126
  br i1 %cmp24, label %if.then26, label %if.else, !dbg !17127

if.then26:                                        ; preds = %for.end
  %29 = load i32, i32* %save_errno, align 4, !dbg !17128, !tbaa !2632
  %call27 = call i32* @__errno_location() #16, !dbg !17128
  store i32 %29, i32* %call27, align 4, !dbg !17128, !tbaa !2632, !ctir !7
  br label %done, !dbg !17130

if.else:                                          ; preds = %for.end
  %call28 = call i32* @__errno_location() #16, !dbg !17131
  %30 = load i32, i32* %call28, align 4, !dbg !17131, !tbaa !2632, !ctir !7
  %cmp29 = icmp ne i32 %30, 17, !dbg !17133
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !17134

if.then31:                                        ; preds = %if.else
  store i32 -1, i32* %fd, align 4, !dbg !17135, !tbaa !2632
  br label %done, !dbg !17137

if.end32:                                         ; preds = %if.else
  br label %if.end33

if.end33:                                         ; preds = %if.end32
  br label %for.inc34, !dbg !17138

for.inc34:                                        ; preds = %if.end33
  %31 = load i32, i32* %count, align 4, !dbg !17139, !tbaa !2632
  %inc35 = add i32 %31, 1, !dbg !17139
  store i32 %inc35, i32* %count, align 4, !dbg !17139, !tbaa !2632
  br label %for.cond, !dbg !17140, !llvm.loop !17141

for.end36:                                        ; preds = %for.cond
  %32 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !17143, !tbaa !2645
  %call37 = call i32 @randint_all_free(%struct.randint_source* %32), !dbg !17144
  %call38 = call i32* @__errno_location() #16, !dbg !17145
  store i32 17, i32* %call38, align 4, !dbg !17145, !tbaa !2632, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !17146
  br label %return, !dbg !17146

done:                                             ; preds = %if.then31, %if.then26
  call void @llvm.dbg.label(metadata !17147), !dbg !17148
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !17149, metadata !DIExpression()), !dbg !17151
  %call39 = call i32* @__errno_location() #16, !dbg !17152
  %33 = load i32, i32* %call39, align 4, !dbg !17152, !tbaa !2632, !ctir !7
  store i32 %33, i32* %saved_errno, align 4, !dbg !17151, !tbaa !2632
  %34 = load %struct.randint_source*, %struct.randint_source** %rand_src, align 8, !dbg !17153, !tbaa !2645
  %call40 = call i32 @randint_all_free(%struct.randint_source* %34), !dbg !17154
  %35 = load i32, i32* %saved_errno, align 4, !dbg !17155, !tbaa !2632
  %call41 = call i32* @__errno_location() #16, !dbg !17155
  store i32 %35, i32* %call41, align 4, !dbg !17155, !tbaa !2632, !ctir !7
  %36 = load i32, i32* %fd, align 4, !dbg !17156, !tbaa !2632
  store i32 %36, i32* %retval, align 4, !dbg !17157
  br label %return, !dbg !17157

return:                                           ; preds = %done, %for.end36, %if.then12, %if.then
  %37 = load i32, i32* %retval, align 4, !dbg !17158
  ret i32 %37, !dbg !17158
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define internal zeroext i1 @check_x_suffix(i8* %s, i64 %len) #10 !dbg !17159 !ctir !1210 {
entry:
  %s.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  store i8* %s, i8** %s.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !17160, metadata !DIExpression()), !dbg !17161
  store i64 %len, i64* %len.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !17162, metadata !DIExpression()), !dbg !17163
  %0 = load i64, i64* %len.addr, align 8, !dbg !17164, !tbaa !3285
  %1 = load i8*, i8** %s.addr, align 8, !dbg !17165, !tbaa !2645
  %call = call i64 @strspn(i8* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2.398, i64 0, i64 0)) #14, !dbg !17166
  %cmp = icmp ule i64 %0, %call, !dbg !17167
  ret i1 %cmp, !dbg !17168
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strspn(i8*, i8*) #7

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @gen_tempname_len(i8* %tmpl, i32 %suffixlen, i32 %flags, i32 %kind, i64 %x_suffix_len) #4 !dbg !17169 !ctir !1204 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %suffixlen.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %kind.addr = alloca i32, align 4
  %x_suffix_len.addr = alloca i64, align 8
  %tryfunc = alloca i32 (i8*, i8*)*, align 8, !ctir !1197
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !17170, metadata !DIExpression()), !dbg !17171
  store i32 %suffixlen, i32* %suffixlen.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !17172, metadata !DIExpression()), !dbg !17173
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !17174, metadata !DIExpression()), !dbg !17175
  store i32 %kind, i32* %kind.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %kind.addr, metadata !17176, metadata !DIExpression()), !dbg !17177
  store i64 %x_suffix_len, i64* %x_suffix_len.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %x_suffix_len.addr, metadata !17178, metadata !DIExpression()), !dbg !17179
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %tryfunc, metadata !17180, metadata !DIExpression()), !dbg !17181
  %0 = load i32, i32* %kind.addr, align 4, !dbg !17182, !tbaa !2632
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
  ], !dbg !17183

sw.bb:                                            ; preds = %entry
  store i32 (i8*, i8*)* @try_file, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !17184, !tbaa !2645
  br label %sw.epilog, !dbg !17186

sw.bb1:                                           ; preds = %entry
  store i32 (i8*, i8*)* @try_dir, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !17187, !tbaa !2645
  br label %sw.epilog, !dbg !17188

sw.bb2:                                           ; preds = %entry
  store i32 (i8*, i8*)* @try_nocreate, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !17189, !tbaa !2645
  br label %sw.epilog, !dbg !17190

sw.default:                                       ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.399, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1.400, i64 0, i64 0), i32 327, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__PRETTY_FUNCTION__.gen_tempname_len, i64 0, i64 0)) #13, !dbg !17191
  unreachable, !dbg !17191

sw.epilog:                                        ; preds = %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i8*, i8** %tmpl.addr, align 8, !dbg !17194, !tbaa !2645
  %2 = load i32, i32* %suffixlen.addr, align 4, !dbg !17195, !tbaa !2632
  %3 = bitcast i32* %flags.addr to i8*, !dbg !17196
  %4 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %tryfunc, align 8, !dbg !17197, !tbaa !2645
  %5 = load i64, i64* %x_suffix_len.addr, align 8, !dbg !17198, !tbaa !3285
  %call = call i32 @try_tempname_len(i8* %1, i32 %2, i8* %3, i32 (i8*, i8*)* %4, i64 %5), !dbg !17199
  ret i32 %call, !dbg !17200
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_file(i8* %tmpl, i8* %flags) #4 !dbg !17201 !ctir !656 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %flags.addr = alloca i8*, align 8
  %openflags = alloca i32*, align 8, !ctir !193
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !17202, metadata !DIExpression()), !dbg !17203
  store i8* %flags, i8** %flags.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %flags.addr, metadata !17204, metadata !DIExpression()), !dbg !17205
  call void @llvm.dbg.declare(metadata i32** %openflags, metadata !17206, metadata !DIExpression()), !dbg !17207
  %0 = load i8*, i8** %flags.addr, align 8, !dbg !17208, !tbaa !2645
  %1 = bitcast i8* %0 to i32*, !dbg !17208
  store i32* %1, i32** %openflags, align 8, !dbg !17207, !tbaa !2645
  %2 = load i8*, i8** %tmpl.addr, align 8, !dbg !17209, !tbaa !2645
  %3 = load i32*, i32** %openflags, align 8, !dbg !17210, !tbaa !2645
  %4 = load i32, i32* %3, align 4, !dbg !17211, !tbaa !2632, !ctir !7
  %and = and i32 %4, -4, !dbg !17212
  %or = or i32 %and, 2, !dbg !17213
  %or1 = or i32 %or, 64, !dbg !17214
  %or2 = or i32 %or1, 128, !dbg !17215
  %call = call i32 (i8*, i32, ...) @open(i8* %2, i32 %or2, i32 384), !dbg !17216
  ret i32 %call, !dbg !17217
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_dir(i8* %tmpl, i8* %flags) #4 !dbg !17218 !ctir !656 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %flags.addr = alloca i8*, align 8
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !17219, metadata !DIExpression()), !dbg !17220
  store i8* %flags, i8** %flags.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %flags.addr, metadata !17221, metadata !DIExpression()), !dbg !17222
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !17223, !tbaa !2645
  %call = call i32 @mkdir(i8* %0, i32 448) #9, !dbg !17224
  ret i32 %call, !dbg !17225
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @try_nocreate(i8* %tmpl, i8* %flags) #4 !dbg !17226 !ctir !656 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %flags.addr = alloca i8*, align 8
  %st = alloca %struct.stat, align 8, !ctir !17227
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !17248, metadata !DIExpression()), !dbg !17249
  store i8* %flags, i8** %flags.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %flags.addr, metadata !17250, metadata !DIExpression()), !dbg !17251
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !17252, metadata !DIExpression()), !dbg !17253
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !17254, !tbaa !2645
  %call = call i32 @lstat(i8* %0, %struct.stat* %st) #9, !dbg !17254
  %cmp = icmp eq i32 %call, 0, !dbg !17256
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !17257

lor.lhs.false:                                    ; preds = %entry
  %call1 = call i32* @__errno_location() #16, !dbg !17258
  %1 = load i32, i32* %call1, align 4, !dbg !17258, !tbaa !2632, !ctir !7
  %cmp2 = icmp eq i32 %1, 75, !dbg !17259
  br i1 %cmp2, label %if.then, label %if.end, !dbg !17260

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call3 = call i32* @__errno_location() #16, !dbg !17261
  store i32 17, i32* %call3, align 4, !dbg !17261, !tbaa !2632, !ctir !7
  br label %if.end, !dbg !17261

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %call4 = call i32* @__errno_location() #16, !dbg !17262
  %2 = load i32, i32* %call4, align 4, !dbg !17262, !tbaa !2632, !ctir !7
  %cmp5 = icmp eq i32 %2, 2, !dbg !17263
  %3 = zext i1 %cmp5 to i64, !dbg !17262
  %cond = select i1 %cmp5, i32 0, i32 -1, !dbg !17262
  ret i32 %cond, !dbg !17264
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @gen_tempname(i8* %tmpl, i32 %suffixlen, i32 %flags, i32 %kind) #4 !dbg !17265 !ctir !1206 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %suffixlen.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %kind.addr = alloca i32, align 4
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !17266, metadata !DIExpression()), !dbg !17267
  store i32 %suffixlen, i32* %suffixlen.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !17268, metadata !DIExpression()), !dbg !17269
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !17270, metadata !DIExpression()), !dbg !17271
  store i32 %kind, i32* %kind.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %kind.addr, metadata !17272, metadata !DIExpression()), !dbg !17273
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !17274, !tbaa !2645
  %1 = load i32, i32* %suffixlen.addr, align 4, !dbg !17275, !tbaa !2632
  %2 = load i32, i32* %flags.addr, align 4, !dbg !17276, !tbaa !2632
  %3 = load i32, i32* %kind.addr, align 4, !dbg !17277, !tbaa !2632
  %call = call i32 @gen_tempname_len(i8* %0, i32 %1, i32 %2, i32 %3, i64 6), !dbg !17278
  ret i32 %call, !dbg !17279
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @try_tempname(i8* %tmpl, i32 %suffixlen, i8* %args, i32 (i8*, i8*)* %tryfunc) #4 !dbg !17280 !ctir !1208 {
entry:
  %tmpl.addr = alloca i8*, align 8
  %suffixlen.addr = alloca i32, align 4
  %args.addr = alloca i8*, align 8
  %tryfunc.addr = alloca i32 (i8*, i8*)*, align 8
  store i8* %tmpl, i8** %tmpl.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %tmpl.addr, metadata !17281, metadata !DIExpression()), !dbg !17282
  store i32 %suffixlen, i32* %suffixlen.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %suffixlen.addr, metadata !17283, metadata !DIExpression()), !dbg !17284
  store i8* %args, i8** %args.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %args.addr, metadata !17285, metadata !DIExpression()), !dbg !17286
  store i32 (i8*, i8*)* %tryfunc, i32 (i8*, i8*)** %tryfunc.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*)** %tryfunc.addr, metadata !17287, metadata !DIExpression()), !dbg !17288
  %0 = load i8*, i8** %tmpl.addr, align 8, !dbg !17289, !tbaa !2645
  %1 = load i32, i32* %suffixlen.addr, align 4, !dbg !17290, !tbaa !2632
  %2 = load i8*, i8** %args.addr, align 8, !dbg !17291, !tbaa !2645
  %3 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %tryfunc.addr, align 8, !dbg !17292, !tbaa !2645
  %call = call i32 @try_tempname_len(i8* %0, i32 %1, i8* %2, i32 (i8*, i8*)* %3, i64 6), !dbg !17293
  ret i32 %call, !dbg !17294
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fd_safer(i32 %fd) #4 !dbg !17295 !ctir !1784 {
entry:
  %fd.addr = alloca i32, align 4
  %f = alloca i32, align 4, !ctir !7
  %e = alloca i32, align 4, !ctir !7
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !17297, metadata !DIExpression()), !dbg !17298
  %0 = load i32, i32* %fd.addr, align 4, !dbg !17299, !tbaa !2632
  %cmp = icmp sle i32 0, %0, !dbg !17301
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !17302

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %fd.addr, align 4, !dbg !17303, !tbaa !2632
  %cmp1 = icmp sle i32 %1, 2, !dbg !17304
  br i1 %cmp1, label %if.then, label %if.end, !dbg !17305

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %f, metadata !17306, metadata !DIExpression()), !dbg !17308
  %2 = load i32, i32* %fd.addr, align 4, !dbg !17309, !tbaa !2632
  %call = call i32 @dup_safer(i32 %2), !dbg !17310
  store i32 %call, i32* %f, align 4, !dbg !17308, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %e, metadata !17311, metadata !DIExpression()), !dbg !17312
  %call2 = call i32* @__errno_location() #16, !dbg !17313
  %3 = load i32, i32* %call2, align 4, !dbg !17313, !tbaa !2632, !ctir !7
  store i32 %3, i32* %e, align 4, !dbg !17312, !tbaa !2632
  %4 = load i32, i32* %fd.addr, align 4, !dbg !17314, !tbaa !2632
  %call3 = call i32 @close(i32 %4), !dbg !17315
  %5 = load i32, i32* %e, align 4, !dbg !17316, !tbaa !2632
  %call4 = call i32* @__errno_location() #16, !dbg !17317
  store i32 %5, i32* %call4, align 4, !dbg !17318, !tbaa !2632, !ctir !7
  %6 = load i32, i32* %f, align 4, !dbg !17319, !tbaa !2632
  store i32 %6, i32* %fd.addr, align 4, !dbg !17320, !tbaa !2632
  br label %if.end, !dbg !17321

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %7 = load i32, i32* %fd.addr, align 4, !dbg !17322, !tbaa !2632
  ret i32 %7, !dbg !17323
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @utimecmp(i8* %dst_name, %struct.stat* %dst_stat, %struct.stat* %src_stat, i32 %options) #4 !dbg !17324 !ctir !1246 {
entry:
  %dst_name.addr = alloca i8*, align 8
  %dst_stat.addr = alloca %struct.stat*, align 8
  %src_stat.addr = alloca %struct.stat*, align 8
  %options.addr = alloca i32, align 4
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !17325, metadata !DIExpression()), !dbg !17326
  store %struct.stat* %dst_stat, %struct.stat** %dst_stat.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_stat.addr, metadata !17327, metadata !DIExpression()), !dbg !17328
  store %struct.stat* %src_stat, %struct.stat** %src_stat.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.stat** %src_stat.addr, metadata !17329, metadata !DIExpression()), !dbg !17330
  store i32 %options, i32* %options.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %options.addr, metadata !17331, metadata !DIExpression()), !dbg !17332
  %0 = load i8*, i8** %dst_name.addr, align 8, !dbg !17333, !tbaa !2645
  %1 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17334, !tbaa !2645
  %2 = load %struct.stat*, %struct.stat** %src_stat.addr, align 8, !dbg !17335, !tbaa !2645
  %3 = load i32, i32* %options.addr, align 4, !dbg !17336, !tbaa !2632
  %call = call i32 @utimecmpat(i32 -100, i8* %0, %struct.stat* %1, %struct.stat* %2, i32 %3), !dbg !17337
  ret i32 %call, !dbg !17338
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @utimecmpat(i32 %dfd, i8* %dst_name, %struct.stat* %dst_stat, %struct.stat* %src_stat, i32 %options) #4 !dbg !1216 !ctir !1218 {
entry:
  %retval = alloca i32, align 4
  %dfd.addr = alloca i32, align 4
  %dst_name.addr = alloca i8*, align 8
  %dst_stat.addr = alloca %struct.stat*, align 8
  %src_stat.addr = alloca %struct.stat*, align 8
  %options.addr = alloca i32, align 4
  %dst_s = alloca i64, align 8, !ctir !1248
  %src_s = alloca i64, align 8, !ctir !1248
  %dst_ns = alloca i32, align 4, !ctir !7
  %src_ns = alloca i32, align 4, !ctir !7
  %dst_res = alloca %struct.fs_res*, align 8, !ctir !1250
  %tmp_dst_res = alloca %struct.fs_res, align 8, !ctir !1251
  %res = alloca i32, align 4, !ctir !7
  %dst_a_s = alloca i64, align 8, !ctir !1248
  %dst_c_s = alloca i64, align 8, !ctir !1248
  %dst_m_s = alloca i64, align 8, !ctir !1248
  %dst_a_ns = alloca i32, align 4, !ctir !7
  %dst_c_ns = alloca i32, align 4, !ctir !7
  %dst_m_ns = alloca i32, align 4, !ctir !7
  %odd_second = alloca i8, align 1, !ctir !142
  %a = alloca i32, align 4, !ctir !7
  %c = alloca i32, align 4, !ctir !7
  %m = alloca i32, align 4, !ctir !7
  %SR10 = alloca i32, align 4, !ctir !7
  %timespec = alloca [2 x %struct.timespec], align 16, !ctir !1256
  %dst_status = alloca %struct.stat, align 8, !ctir !1222
  %s = alloca i64, align 8, !ctir !1248
  %stat_result = alloca i32, align 4, !ctir !7
  %old_res = alloca i32, align 4, !ctir !7
  %a168 = alloca i32, align 4, !ctir !7
  store i32 %dfd, i32* %dfd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %dfd.addr, metadata !17339, metadata !DIExpression()), !dbg !17340
  store i8* %dst_name, i8** %dst_name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dst_name.addr, metadata !17341, metadata !DIExpression()), !dbg !17342
  store %struct.stat* %dst_stat, %struct.stat** %dst_stat.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.stat** %dst_stat.addr, metadata !17343, metadata !DIExpression()), !dbg !17344
  store %struct.stat* %src_stat, %struct.stat** %src_stat.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.stat** %src_stat.addr, metadata !17345, metadata !DIExpression()), !dbg !17346
  store i32 %options, i32* %options.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %options.addr, metadata !17347, metadata !DIExpression()), !dbg !17348
  call void @llvm.dbg.declare(metadata i64* %dst_s, metadata !17349, metadata !DIExpression()), !dbg !17350
  %0 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17351, !tbaa !2645
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %0, i32 0, i32 12, !dbg !17352, !ctir !1221
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 0, !dbg !17352, !ctir !1236
  %1 = load i64, i64* %tv_sec, align 8, !dbg !17352, !tbaa !17353, !ctir !294
  store i64 %1, i64* %dst_s, align 8, !dbg !17350, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %src_s, metadata !17354, metadata !DIExpression()), !dbg !17355
  %2 = load %struct.stat*, %struct.stat** %src_stat.addr, align 8, !dbg !17356, !tbaa !2645
  %st_mtim1 = getelementptr inbounds %struct.stat, %struct.stat* %2, i32 0, i32 12, !dbg !17357, !ctir !1221
  %tv_sec2 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim1, i32 0, i32 0, !dbg !17357, !ctir !1236
  %3 = load i64, i64* %tv_sec2, align 8, !dbg !17357, !tbaa !17353, !ctir !294
  store i64 %3, i64* %src_s, align 8, !dbg !17355, !tbaa !3285
  call void @llvm.dbg.declare(metadata i32* %dst_ns, metadata !17358, metadata !DIExpression()), !dbg !17359
  %4 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17360, !tbaa !2645
  %call = call i64 @get_stat_mtime_ns(%struct.stat* %4) #14, !dbg !17361
  %conv = trunc i64 %call to i32, !dbg !17361
  store i32 %conv, i32* %dst_ns, align 4, !dbg !17359, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %src_ns, metadata !17362, metadata !DIExpression()), !dbg !17363
  %5 = load %struct.stat*, %struct.stat** %src_stat.addr, align 8, !dbg !17364, !tbaa !2645
  %call3 = call i64 @get_stat_mtime_ns(%struct.stat* %5) #14, !dbg !17365
  %conv4 = trunc i64 %call3 to i32, !dbg !17365
  store i32 %conv4, i32* %src_ns, align 4, !dbg !17363, !tbaa !2632
  %6 = load i32, i32* %options.addr, align 4, !dbg !17366, !tbaa !2632
  %and = and i32 %6, 1, !dbg !17368
  %tobool = icmp ne i32 %and, 0, !dbg !17368
  br i1 %tobool, label %if.then, label %if.end207, !dbg !17369

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.fs_res** %dst_res, metadata !17370, metadata !DIExpression()), !dbg !17372
  store %struct.fs_res* null, %struct.fs_res** %dst_res, align 8, !dbg !17372, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.fs_res* %tmp_dst_res, metadata !17373, metadata !DIExpression()), !dbg !17374
  call void @llvm.dbg.declare(metadata i32* %res, metadata !17375, metadata !DIExpression()), !dbg !17376
  %7 = load i64, i64* %dst_s, align 8, !dbg !17377, !tbaa !3285
  %8 = load i64, i64* %src_s, align 8, !dbg !17379, !tbaa !3285
  %cmp = icmp eq i64 %7, %8, !dbg !17380
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !17381

land.lhs.true:                                    ; preds = %if.then
  %9 = load i32, i32* %dst_ns, align 4, !dbg !17382, !tbaa !2632
  %10 = load i32, i32* %src_ns, align 4, !dbg !17383, !tbaa !2632
  %cmp6 = icmp eq i32 %9, %10, !dbg !17384
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !17385

if.then8:                                         ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !17386
  br label %return, !dbg !17386

if.end:                                           ; preds = %land.lhs.true, %if.then
  %11 = load i64, i64* %dst_s, align 8, !dbg !17387, !tbaa !3285
  %12 = load i64, i64* %src_s, align 8, !dbg !17389, !tbaa !3285
  %sub = sub nsw i64 %12, 2, !dbg !17390
  %cmp9 = icmp sle i64 %11, %sub, !dbg !17391
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !17392

if.then11:                                        ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !17393
  br label %return, !dbg !17393

if.end12:                                         ; preds = %if.end
  %13 = load i64, i64* %src_s, align 8, !dbg !17394, !tbaa !3285
  %14 = load i64, i64* %dst_s, align 8, !dbg !17396, !tbaa !3285
  %sub13 = sub nsw i64 %14, 2, !dbg !17397
  %cmp14 = icmp sle i64 %13, %sub13, !dbg !17398
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !17399

if.then16:                                        ; preds = %if.end12
  store i32 1, i32* %retval, align 4, !dbg !17400
  br label %return, !dbg !17400

if.end17:                                         ; preds = %if.end12
  %15 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !17401, !tbaa !2645
  %tobool18 = icmp ne %struct.hash_table* %15, null, !dbg !17401
  br i1 %tobool18, label %if.end21, label %if.then19, !dbg !17403

if.then19:                                        ; preds = %if.end17
  %call20 = call %struct.hash_table* @hash_initialize(i64 16, %struct.hash_tuning* null, i64 (i8*, i64)* @dev_info_hash, i1 (i8*, i8*)* @dev_info_compare, void (i8*)* @free), !dbg !17404
  store %struct.hash_table* %call20, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !17405, !tbaa !2645
  br label %if.end21, !dbg !17406

if.end21:                                         ; preds = %if.then19, %if.end17
  %16 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !17407, !tbaa !2645
  %tobool22 = icmp ne %struct.hash_table* %16, null, !dbg !17407
  br i1 %tobool22, label %if.then23, label %if.else, !dbg !17409

if.then23:                                        ; preds = %if.end21
  %17 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17410, !tbaa !2645
  %tobool24 = icmp ne %struct.fs_res* %17, null, !dbg !17410
  br i1 %tobool24, label %if.end30, label %if.then25, !dbg !17413

if.then25:                                        ; preds = %if.then23
  %call26 = call noalias i8* @malloc(i64 16) #9, !dbg !17414
  %18 = bitcast i8* %call26 to %struct.fs_res*, !dbg !17414
  store %struct.fs_res* %18, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17416, !tbaa !2645
  %19 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17417, !tbaa !2645
  %tobool27 = icmp ne %struct.fs_res* %19, null, !dbg !17417
  br i1 %tobool27, label %if.end29, label %if.then28, !dbg !17419

if.then28:                                        ; preds = %if.then25
  br label %low_memory, !dbg !17420

if.end29:                                         ; preds = %if.then25
  %20 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17421, !tbaa !2645
  %resolution = getelementptr inbounds %struct.fs_res, %struct.fs_res* %20, i32 0, i32 1, !dbg !17422, !ctir !1251
  store i32 2000000000, i32* %resolution, align 8, !dbg !17423, !tbaa !17424, !ctir !7
  %21 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17426, !tbaa !2645
  %exact = getelementptr inbounds %struct.fs_res, %struct.fs_res* %21, i32 0, i32 2, !dbg !17427, !ctir !1251
  store i8 0, i8* %exact, align 4, !dbg !17428, !tbaa !17429, !ctir !142
  br label %if.end30, !dbg !17430

if.end30:                                         ; preds = %if.end29, %if.then23
  %22 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17431, !tbaa !2645
  %st_dev = getelementptr inbounds %struct.stat, %struct.stat* %22, i32 0, i32 0, !dbg !17432, !ctir !1221
  %23 = load i64, i64* %st_dev, align 8, !dbg !17432, !tbaa !4760, !ctir !274
  %24 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17433, !tbaa !2645
  %dev = getelementptr inbounds %struct.fs_res, %struct.fs_res* %24, i32 0, i32 0, !dbg !17434, !ctir !1251
  store i64 %23, i64* %dev, align 8, !dbg !17435, !tbaa !17436, !ctir !443
  %25 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !17437, !tbaa !2645
  %26 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17438, !tbaa !2645
  %27 = bitcast %struct.fs_res* %26 to i8*, !dbg !17438
  %call31 = call i8* @hash_insert(%struct.hash_table* %25, i8* %27), !dbg !17439
  %28 = bitcast i8* %call31 to %struct.fs_res*, !dbg !17439
  store %struct.fs_res* %28, %struct.fs_res** %dst_res, align 8, !dbg !17440, !tbaa !2645
  %29 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17441, !tbaa !2645
  %tobool32 = icmp ne %struct.fs_res* %29, null, !dbg !17441
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !17443

if.then33:                                        ; preds = %if.end30
  br label %low_memory, !dbg !17444

if.end34:                                         ; preds = %if.end30
  %30 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17445, !tbaa !2645
  %31 = load %struct.fs_res*, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17447, !tbaa !2645
  %cmp35 = icmp eq %struct.fs_res* %30, %31, !dbg !17448
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !17449

if.then37:                                        ; preds = %if.end34
  store %struct.fs_res* null, %struct.fs_res** @utimecmpat.new_dst_res, align 8, !dbg !17450, !tbaa !2645
  br label %if.end38, !dbg !17452

if.end38:                                         ; preds = %if.then37, %if.end34
  br label %if.end50, !dbg !17453

if.else:                                          ; preds = %if.end21
  br label %low_memory, !dbg !17454

low_memory:                                       ; preds = %if.else, %if.then33, %if.then28
  call void @llvm.dbg.label(metadata !17455), !dbg !17457
  %32 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !17458, !tbaa !2645
  %tobool39 = icmp ne %struct.hash_table* %32, null, !dbg !17458
  br i1 %tobool39, label %if.then40, label %if.end44, !dbg !17460

if.then40:                                        ; preds = %low_memory
  %33 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17461, !tbaa !2645
  %st_dev41 = getelementptr inbounds %struct.stat, %struct.stat* %33, i32 0, i32 0, !dbg !17463, !ctir !1221
  %34 = load i64, i64* %st_dev41, align 8, !dbg !17463, !tbaa !4760, !ctir !274
  %dev42 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %tmp_dst_res, i32 0, i32 0, !dbg !17464, !ctir !1251
  store i64 %34, i64* %dev42, align 8, !dbg !17465, !tbaa !17436, !ctir !443
  %35 = load %struct.hash_table*, %struct.hash_table** @utimecmpat.ht, align 8, !dbg !17466, !tbaa !2645
  %36 = bitcast %struct.fs_res* %tmp_dst_res to i8*, !dbg !17467
  %call43 = call i8* @hash_lookup(%struct.hash_table* %35, i8* %36), !dbg !17468
  %37 = bitcast i8* %call43 to %struct.fs_res*, !dbg !17468
  store %struct.fs_res* %37, %struct.fs_res** %dst_res, align 8, !dbg !17469, !tbaa !2645
  br label %if.end44, !dbg !17470

if.end44:                                         ; preds = %if.then40, %low_memory
  %38 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17471, !tbaa !2645
  %tobool45 = icmp ne %struct.fs_res* %38, null, !dbg !17471
  br i1 %tobool45, label %if.end49, label %if.then46, !dbg !17473

if.then46:                                        ; preds = %if.end44
  store %struct.fs_res* %tmp_dst_res, %struct.fs_res** %dst_res, align 8, !dbg !17474, !tbaa !2645
  %39 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17476, !tbaa !2645
  %resolution47 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %39, i32 0, i32 1, !dbg !17477, !ctir !1251
  store i32 2000000000, i32* %resolution47, align 8, !dbg !17478, !tbaa !17424, !ctir !7
  %40 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17479, !tbaa !2645
  %exact48 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %40, i32 0, i32 2, !dbg !17480, !ctir !1251
  store i8 0, i8* %exact48, align 4, !dbg !17481, !tbaa !17429, !ctir !142
  br label %if.end49, !dbg !17482

if.end49:                                         ; preds = %if.then46, %if.end44
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.end38
  %41 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17483, !tbaa !2645
  %resolution51 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %41, i32 0, i32 1, !dbg !17484, !ctir !1251
  %42 = load i32, i32* %resolution51, align 8, !dbg !17484, !tbaa !17424, !ctir !7
  store i32 %42, i32* %res, align 4, !dbg !17485, !tbaa !2632
  %43 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17486, !tbaa !2645
  %exact52 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %43, i32 0, i32 2, !dbg !17488, !ctir !1251
  %44 = load i8, i8* %exact52, align 4, !dbg !17488, !tbaa !17429
  %tobool53 = trunc i8 %44 to i1, !dbg !17488, !ctir !142
  br i1 %tobool53, label %if.end198, label %if.then54, !dbg !17489

if.then54:                                        ; preds = %if.end50
  call void @llvm.dbg.declare(metadata i64* %dst_a_s, metadata !17490, metadata !DIExpression()), !dbg !17492
  %45 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17493, !tbaa !2645
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %45, i32 0, i32 11, !dbg !17494, !ctir !1221
  %tv_sec55 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_atim, i32 0, i32 0, !dbg !17494, !ctir !1236
  %46 = load i64, i64* %tv_sec55, align 8, !dbg !17494, !tbaa !17495, !ctir !294
  store i64 %46, i64* %dst_a_s, align 8, !dbg !17492, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %dst_c_s, metadata !17496, metadata !DIExpression()), !dbg !17497
  %47 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17498, !tbaa !2645
  %st_ctim = getelementptr inbounds %struct.stat, %struct.stat* %47, i32 0, i32 13, !dbg !17499, !ctir !1221
  %tv_sec56 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_ctim, i32 0, i32 0, !dbg !17499, !ctir !1236
  %48 = load i64, i64* %tv_sec56, align 8, !dbg !17499, !tbaa !17500, !ctir !294
  store i64 %48, i64* %dst_c_s, align 8, !dbg !17497, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %dst_m_s, metadata !17501, metadata !DIExpression()), !dbg !17502
  %49 = load i64, i64* %dst_s, align 8, !dbg !17503, !tbaa !3285
  store i64 %49, i64* %dst_m_s, align 8, !dbg !17502, !tbaa !3285
  call void @llvm.dbg.declare(metadata i32* %dst_a_ns, metadata !17504, metadata !DIExpression()), !dbg !17505
  %50 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17506, !tbaa !2645
  %call57 = call i64 @get_stat_atime_ns(%struct.stat* %50) #14, !dbg !17507
  %conv58 = trunc i64 %call57 to i32, !dbg !17507
  store i32 %conv58, i32* %dst_a_ns, align 4, !dbg !17505, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %dst_c_ns, metadata !17508, metadata !DIExpression()), !dbg !17509
  %51 = load %struct.stat*, %struct.stat** %dst_stat.addr, align 8, !dbg !17510, !tbaa !2645
  %call59 = call i64 @get_stat_ctime_ns(%struct.stat* %51) #14, !dbg !17511
  %conv60 = trunc i64 %call59 to i32, !dbg !17511
  store i32 %conv60, i32* %dst_c_ns, align 4, !dbg !17509, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %dst_m_ns, metadata !17512, metadata !DIExpression()), !dbg !17513
  %52 = load i32, i32* %dst_ns, align 4, !dbg !17514, !tbaa !2632
  store i32 %52, i32* %dst_m_ns, align 4, !dbg !17513, !tbaa !2632
  call void @llvm.dbg.declare(metadata i8* %odd_second, metadata !17515, metadata !DIExpression()), !dbg !17517
  %53 = load i64, i64* %dst_a_s, align 8, !dbg !17518, !tbaa !3285
  %54 = load i64, i64* %dst_c_s, align 8, !dbg !17519, !tbaa !3285
  %or = or i64 %53, %54, !dbg !17520
  %55 = load i64, i64* %dst_m_s, align 8, !dbg !17521, !tbaa !3285
  %or61 = or i64 %or, %55, !dbg !17522
  %and62 = and i64 %or61, 1, !dbg !17523
  %tobool63 = icmp ne i64 %and62, 0, !dbg !17524
  %frombool = zext i1 %tobool63 to i8, !dbg !17517
  store i8 %frombool, i8* %odd_second, align 1, !dbg !17517, !tbaa !2739
  call void @llvm.dbg.declare(metadata i32* %a, metadata !17525, metadata !DIExpression()), !dbg !17528
  %56 = load i32, i32* %dst_a_ns, align 4, !dbg !17529, !tbaa !2632
  store i32 %56, i32* %a, align 4, !dbg !17528, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %c, metadata !17530, metadata !DIExpression()), !dbg !17531
  %57 = load i32, i32* %dst_c_ns, align 4, !dbg !17532, !tbaa !2632
  store i32 %57, i32* %c, align 4, !dbg !17531, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %m, metadata !17533, metadata !DIExpression()), !dbg !17534
  %58 = load i32, i32* %dst_m_ns, align 4, !dbg !17535, !tbaa !2632
  store i32 %58, i32* %m, align 4, !dbg !17534, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %SR10, metadata !17536, metadata !DIExpression()), !dbg !17537
  store i32 1, i32* %SR10, align 4, !dbg !17537, !tbaa !2632
  %59 = load i32, i32* %SR10, align 4, !dbg !17538, !tbaa !2632
  %mul = mul nsw i32 %59, 10, !dbg !17538
  store i32 %mul, i32* %SR10, align 4, !dbg !17538, !tbaa !2632
  %60 = load i32, i32* %a, align 4, !dbg !17539, !tbaa !2632
  %61 = load i32, i32* %SR10, align 4, !dbg !17541, !tbaa !2632
  %rem = srem i32 %60, %61, !dbg !17542
  %62 = load i32, i32* %c, align 4, !dbg !17543, !tbaa !2632
  %63 = load i32, i32* %SR10, align 4, !dbg !17544, !tbaa !2632
  %rem64 = srem i32 %62, %63, !dbg !17545
  %or65 = or i32 %rem, %rem64, !dbg !17546
  %64 = load i32, i32* %m, align 4, !dbg !17547, !tbaa !2632
  %65 = load i32, i32* %SR10, align 4, !dbg !17548, !tbaa !2632
  %rem66 = srem i32 %64, %65, !dbg !17549
  %or67 = or i32 %or65, %rem66, !dbg !17550
  %cmp68 = icmp ne i32 %or67, 0, !dbg !17551
  br i1 %cmp68, label %if.then70, label %if.else71, !dbg !17552

if.then70:                                        ; preds = %if.then54
  store i32 1, i32* %res, align 4, !dbg !17553, !tbaa !2632
  br label %if.end96, !dbg !17554

if.else71:                                        ; preds = %if.then54
  %66 = load i32, i32* %SR10, align 4, !dbg !17555, !tbaa !2632
  store i32 %66, i32* %res, align 4, !dbg !17557, !tbaa !2632
  %67 = load i32, i32* %SR10, align 4, !dbg !17558, !tbaa !2632
  %68 = load i32, i32* %a, align 4, !dbg !17559, !tbaa !2632
  %div = sdiv i32 %68, %67, !dbg !17559
  store i32 %div, i32* %a, align 4, !dbg !17559, !tbaa !2632
  %69 = load i32, i32* %SR10, align 4, !dbg !17560, !tbaa !2632
  %70 = load i32, i32* %c, align 4, !dbg !17561, !tbaa !2632
  %div72 = sdiv i32 %70, %69, !dbg !17561
  store i32 %div72, i32* %c, align 4, !dbg !17561, !tbaa !2632
  %71 = load i32, i32* %SR10, align 4, !dbg !17562, !tbaa !2632
  %72 = load i32, i32* %m, align 4, !dbg !17563, !tbaa !2632
  %div73 = sdiv i32 %72, %71, !dbg !17563
  store i32 %div73, i32* %m, align 4, !dbg !17563, !tbaa !2632
  br label %for.cond, !dbg !17564

for.cond:                                         ; preds = %for.inc, %if.else71
  %73 = load i32, i32* %res, align 4, !dbg !17565, !tbaa !2632
  %74 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17567, !tbaa !2645
  %resolution74 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %74, i32 0, i32 1, !dbg !17568, !ctir !1251
  %75 = load i32, i32* %resolution74, align 8, !dbg !17568, !tbaa !17424, !ctir !7
  %cmp75 = icmp slt i32 %73, %75, !dbg !17569
  br i1 %cmp75, label %land.rhs, label %land.end, !dbg !17570

land.rhs:                                         ; preds = %for.cond
  %76 = load i32, i32* %a, align 4, !dbg !17571, !tbaa !2632
  %rem77 = srem i32 %76, 10, !dbg !17572
  %77 = load i32, i32* %c, align 4, !dbg !17573, !tbaa !2632
  %rem78 = srem i32 %77, 10, !dbg !17574
  %or79 = or i32 %rem77, %rem78, !dbg !17575
  %78 = load i32, i32* %m, align 4, !dbg !17576, !tbaa !2632
  %rem80 = srem i32 %78, 10, !dbg !17577
  %or81 = or i32 %or79, %rem80, !dbg !17578
  %cmp82 = icmp eq i32 %or81, 0, !dbg !17579
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %79 = phi i1 [ false, %for.cond ], [ %cmp82, %land.rhs ], !dbg !17580
  br i1 %79, label %for.body, label %for.end, !dbg !17581

for.body:                                         ; preds = %land.end
  %80 = load i32, i32* %res, align 4, !dbg !17582, !tbaa !2632
  %cmp84 = icmp eq i32 %80, 1000000000, !dbg !17584
  br i1 %cmp84, label %if.then86, label %if.end91, !dbg !17585

if.then86:                                        ; preds = %for.body
  %81 = load i8, i8* %odd_second, align 1, !dbg !17586, !tbaa !2739
  %tobool87 = trunc i8 %81 to i1, !dbg !17586
  br i1 %tobool87, label %if.end90, label %if.then88, !dbg !17589

if.then88:                                        ; preds = %if.then86
  %82 = load i32, i32* %res, align 4, !dbg !17590, !tbaa !2632
  %mul89 = mul nsw i32 %82, 2, !dbg !17590
  store i32 %mul89, i32* %res, align 4, !dbg !17590, !tbaa !2632
  br label %if.end90, !dbg !17591

if.end90:                                         ; preds = %if.then88, %if.then86
  br label %for.end, !dbg !17592

if.end91:                                         ; preds = %for.body
  br label %for.inc, !dbg !17593

for.inc:                                          ; preds = %if.end91
  %83 = load i32, i32* %res, align 4, !dbg !17594, !tbaa !2632
  %mul92 = mul nsw i32 %83, 10, !dbg !17594
  store i32 %mul92, i32* %res, align 4, !dbg !17594, !tbaa !2632
  %84 = load i32, i32* %a, align 4, !dbg !17595, !tbaa !2632
  %div93 = sdiv i32 %84, 10, !dbg !17595
  store i32 %div93, i32* %a, align 4, !dbg !17595, !tbaa !2632
  %85 = load i32, i32* %c, align 4, !dbg !17596, !tbaa !2632
  %div94 = sdiv i32 %85, 10, !dbg !17596
  store i32 %div94, i32* %c, align 4, !dbg !17596, !tbaa !2632
  %86 = load i32, i32* %m, align 4, !dbg !17597, !tbaa !2632
  %div95 = sdiv i32 %86, 10, !dbg !17597
  store i32 %div95, i32* %m, align 4, !dbg !17597, !tbaa !2632
  br label %for.cond, !dbg !17598, !llvm.loop !17599

for.end:                                          ; preds = %if.end90, %land.end
  br label %if.end96

if.end96:                                         ; preds = %for.end, %if.then70
  %87 = load i32, i32* %res, align 4, !dbg !17601, !tbaa !2632
  %88 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17602, !tbaa !2645
  %resolution97 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %88, i32 0, i32 1, !dbg !17603, !ctir !1251
  store i32 %87, i32* %resolution97, align 8, !dbg !17604, !tbaa !17424, !ctir !7
  %89 = load i32, i32* %res, align 4, !dbg !17605, !tbaa !2632
  %cmp98 = icmp slt i32 1, %89, !dbg !17607
  br i1 %cmp98, label %if.then100, label %if.end195, !dbg !17608

if.then100:                                       ; preds = %if.end96
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timespec, metadata !17609, metadata !DIExpression()), !dbg !17611
  call void @llvm.dbg.declare(metadata %struct.stat* %dst_status, metadata !17612, metadata !DIExpression()), !dbg !17613
  %90 = load i32, i32* %src_ns, align 4, !dbg !17614, !tbaa !2632
  %rem101 = srem i32 %90, 1, !dbg !17615
  %91 = load i32, i32* %src_ns, align 4, !dbg !17616, !tbaa !2632
  %sub102 = sub nsw i32 %91, %rem101, !dbg !17616
  store i32 %sub102, i32* %src_ns, align 4, !dbg !17616, !tbaa !2632
  call void @llvm.dbg.declare(metadata i64* %s, metadata !17617, metadata !DIExpression()), !dbg !17619
  %92 = load i64, i64* %src_s, align 8, !dbg !17620, !tbaa !3285
  %93 = load i32, i32* %res, align 4, !dbg !17621, !tbaa !2632
  %cmp103 = icmp eq i32 %93, 2000000000, !dbg !17622
  %94 = zext i1 %cmp103 to i64, !dbg !17621
  %cond = select i1 %cmp103, i32 1, i32 0, !dbg !17621
  %neg = xor i32 %cond, -1, !dbg !17623
  %conv105 = sext i32 %neg to i64, !dbg !17623
  %and106 = and i64 %92, %conv105, !dbg !17624
  store i64 %and106, i64* %s, align 8, !dbg !17619, !tbaa !3285
  %95 = load i64, i64* %src_s, align 8, !dbg !17625, !tbaa !3285
  %96 = load i64, i64* %dst_s, align 8, !dbg !17627, !tbaa !3285
  %cmp107 = icmp slt i64 %95, %96, !dbg !17628
  br i1 %cmp107, label %if.then114, label %lor.lhs.false, !dbg !17629

lor.lhs.false:                                    ; preds = %if.then100
  %97 = load i64, i64* %src_s, align 8, !dbg !17630, !tbaa !3285
  %98 = load i64, i64* %dst_s, align 8, !dbg !17631, !tbaa !3285
  %cmp109 = icmp eq i64 %97, %98, !dbg !17632
  br i1 %cmp109, label %land.lhs.true111, label %if.end115, !dbg !17633

land.lhs.true111:                                 ; preds = %lor.lhs.false
  %99 = load i32, i32* %src_ns, align 4, !dbg !17634, !tbaa !2632
  %100 = load i32, i32* %dst_ns, align 4, !dbg !17635, !tbaa !2632
  %cmp112 = icmp sle i32 %99, %100, !dbg !17636
  br i1 %cmp112, label %if.then114, label %if.end115, !dbg !17637

if.then114:                                       ; preds = %land.lhs.true111, %if.then100
  store i32 1, i32* %retval, align 4, !dbg !17638
  br label %return, !dbg !17638

if.end115:                                        ; preds = %land.lhs.true111, %lor.lhs.false
  %101 = load i64, i64* %dst_s, align 8, !dbg !17639, !tbaa !3285
  %102 = load i64, i64* %s, align 8, !dbg !17641, !tbaa !3285
  %cmp116 = icmp slt i64 %101, %102, !dbg !17642
  br i1 %cmp116, label %if.then126, label %lor.lhs.false118, !dbg !17643

lor.lhs.false118:                                 ; preds = %if.end115
  %103 = load i64, i64* %dst_s, align 8, !dbg !17644, !tbaa !3285
  %104 = load i64, i64* %s, align 8, !dbg !17645, !tbaa !3285
  %cmp119 = icmp eq i64 %103, %104, !dbg !17646
  br i1 %cmp119, label %land.lhs.true121, label %if.end127, !dbg !17647

land.lhs.true121:                                 ; preds = %lor.lhs.false118
  %105 = load i32, i32* %dst_ns, align 4, !dbg !17648, !tbaa !2632
  %106 = load i32, i32* %src_ns, align 4, !dbg !17649, !tbaa !2632
  %107 = load i32, i32* %src_ns, align 4, !dbg !17650, !tbaa !2632
  %108 = load i32, i32* %res, align 4, !dbg !17651, !tbaa !2632
  %rem122 = srem i32 %107, %108, !dbg !17652
  %sub123 = sub nsw i32 %106, %rem122, !dbg !17653
  %cmp124 = icmp slt i32 %105, %sub123, !dbg !17654
  br i1 %cmp124, label %if.then126, label %if.end127, !dbg !17655

if.then126:                                       ; preds = %land.lhs.true121, %if.end115
  store i32 -1, i32* %retval, align 4, !dbg !17656
  br label %return, !dbg !17656

if.end127:                                        ; preds = %land.lhs.true121, %lor.lhs.false118
  %109 = load i64, i64* %dst_a_s, align 8, !dbg !17657, !tbaa !3285
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !17658, !ctir !1256
  %tv_sec128 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx, i32 0, i32 0, !dbg !17659, !ctir !1236
  store i64 %109, i64* %tv_sec128, align 16, !dbg !17660, !tbaa !16992, !ctir !294
  %110 = load i32, i32* %dst_a_ns, align 4, !dbg !17661, !tbaa !2632
  %conv129 = sext i32 %110 to i64, !dbg !17661
  %arrayidx130 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !17662, !ctir !1256
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx130, i32 0, i32 1, !dbg !17663, !ctir !1236
  store i64 %conv129, i64* %tv_nsec, align 8, !dbg !17664, !tbaa !16995, !ctir !296
  %111 = load i64, i64* %dst_m_s, align 8, !dbg !17665, !tbaa !3285
  %112 = load i32, i32* %res, align 4, !dbg !17666, !tbaa !2632
  %cmp131 = icmp eq i32 %112, 2000000000, !dbg !17667
  %conv132 = zext i1 %cmp131 to i32, !dbg !17667
  %conv133 = sext i32 %conv132 to i64, !dbg !17668
  %or134 = or i64 %111, %conv133, !dbg !17669
  %arrayidx135 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !17670, !ctir !1256
  %tv_sec136 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx135, i32 0, i32 0, !dbg !17671, !ctir !1236
  store i64 %or134, i64* %tv_sec136, align 16, !dbg !17672, !tbaa !16992, !ctir !294
  %113 = load i32, i32* %dst_m_ns, align 4, !dbg !17673, !tbaa !2632
  %114 = load i32, i32* %res, align 4, !dbg !17674, !tbaa !2632
  %div137 = sdiv i32 %114, 9, !dbg !17675
  %add = add nsw i32 %113, %div137, !dbg !17676
  %conv138 = sext i32 %add to i64, !dbg !17673
  %arrayidx139 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !17677, !ctir !1256
  %tv_nsec140 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx139, i32 0, i32 1, !dbg !17678, !ctir !1236
  store i64 %conv138, i64* %tv_nsec140, align 8, !dbg !17679, !tbaa !16995, !ctir !296
  %115 = load i32, i32* %dfd.addr, align 4, !dbg !17680, !tbaa !2632
  %116 = load i8*, i8** %dst_name.addr, align 8, !dbg !17682, !tbaa !2645
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !17683
  %call141 = call i32 @utimensat(i32 %115, i8* %116, %struct.timespec* %arraydecay, i32 256) #9, !dbg !17684
  %tobool142 = icmp ne i32 %call141, 0, !dbg !17684
  br i1 %tobool142, label %if.then143, label %if.end144, !dbg !17685

if.then143:                                       ; preds = %if.end127
  store i32 -2, i32* %retval, align 4, !dbg !17686
  br label %return, !dbg !17686

if.end144:                                        ; preds = %if.end127
  call void @llvm.dbg.declare(metadata i32* %stat_result, metadata !17687, metadata !DIExpression()), !dbg !17689
  %117 = load i32, i32* %dfd.addr, align 4, !dbg !17690, !tbaa !2632
  %118 = load i8*, i8** %dst_name.addr, align 8, !dbg !17691, !tbaa !2645
  %call145 = call i32 @fstatat(i32 %117, i8* %118, %struct.stat* %dst_status, i32 256) #9, !dbg !17692
  store i32 %call145, i32* %stat_result, align 4, !dbg !17689, !tbaa !2632
  %119 = load i32, i32* %stat_result, align 4, !dbg !17693, !tbaa !2632
  %conv146 = sext i32 %119 to i64, !dbg !17693
  %st_mtim147 = getelementptr inbounds %struct.stat, %struct.stat* %dst_status, i32 0, i32 12, !dbg !17695, !ctir !1222
  %tv_sec148 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim147, i32 0, i32 0, !dbg !17695, !ctir !1236
  %120 = load i64, i64* %tv_sec148, align 8, !dbg !17695, !tbaa !17353, !ctir !294
  %121 = load i64, i64* %dst_m_s, align 8, !dbg !17696, !tbaa !3285
  %xor = xor i64 %120, %121, !dbg !17697
  %or149 = or i64 %conv146, %xor, !dbg !17698
  %call150 = call i64 @get_stat_mtime_ns(%struct.stat* %dst_status) #14, !dbg !17699
  %122 = load i32, i32* %dst_m_ns, align 4, !dbg !17700, !tbaa !2632
  %conv151 = sext i32 %122 to i64, !dbg !17700
  %xor152 = xor i64 %call150, %conv151, !dbg !17701
  %or153 = or i64 %or149, %xor152, !dbg !17702
  %tobool154 = icmp ne i64 %or153, 0, !dbg !17702
  br i1 %tobool154, label %if.then155, label %if.end163, !dbg !17703

if.then155:                                       ; preds = %if.end144
  %123 = load i64, i64* %dst_m_s, align 8, !dbg !17704, !tbaa !3285
  %arrayidx156 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !17706, !ctir !1256
  %tv_sec157 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx156, i32 0, i32 0, !dbg !17707, !ctir !1236
  store i64 %123, i64* %tv_sec157, align 16, !dbg !17708, !tbaa !16992, !ctir !294
  %124 = load i32, i32* %dst_m_ns, align 4, !dbg !17709, !tbaa !2632
  %conv158 = sext i32 %124 to i64, !dbg !17709
  %arrayidx159 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 1, !dbg !17710, !ctir !1256
  %tv_nsec160 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx159, i32 0, i32 1, !dbg !17711, !ctir !1236
  store i64 %conv158, i64* %tv_nsec160, align 8, !dbg !17712, !tbaa !16995, !ctir !296
  %125 = load i32, i32* %dfd.addr, align 4, !dbg !17713, !tbaa !2632
  %126 = load i8*, i8** %dst_name.addr, align 8, !dbg !17714, !tbaa !2645
  %arraydecay161 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timespec, i64 0, i64 0, !dbg !17715
  %call162 = call i32 @utimensat(i32 %125, i8* %126, %struct.timespec* %arraydecay161, i32 256) #9, !dbg !17716
  br label %if.end163, !dbg !17717

if.end163:                                        ; preds = %if.then155, %if.end144
  %127 = load i32, i32* %stat_result, align 4, !dbg !17718, !tbaa !2632
  %cmp164 = icmp ne i32 %127, 0, !dbg !17720
  br i1 %cmp164, label %if.then166, label %if.end167, !dbg !17721

if.then166:                                       ; preds = %if.end163
  store i32 -2, i32* %retval, align 4, !dbg !17722
  br label %return, !dbg !17722

if.end167:                                        ; preds = %if.end163
  call void @llvm.dbg.declare(metadata i32* %old_res, metadata !17723, metadata !DIExpression()), !dbg !17725
  %128 = load i32, i32* %res, align 4, !dbg !17726, !tbaa !2632
  store i32 %128, i32* %old_res, align 4, !dbg !17725, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %a168, metadata !17727, metadata !DIExpression()), !dbg !17728
  %st_mtim169 = getelementptr inbounds %struct.stat, %struct.stat* %dst_status, i32 0, i32 12, !dbg !17729, !ctir !1222
  %tv_sec170 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim169, i32 0, i32 0, !dbg !17729, !ctir !1236
  %129 = load i64, i64* %tv_sec170, align 8, !dbg !17729, !tbaa !17353, !ctir !294
  %and171 = and i64 %129, 1, !dbg !17730
  %mul172 = mul nsw i64 1000000000, %and171, !dbg !17731
  %call173 = call i64 @get_stat_mtime_ns(%struct.stat* %dst_status) #14, !dbg !17732
  %add174 = add nsw i64 %mul172, %call173, !dbg !17733
  %conv175 = trunc i64 %add174 to i32, !dbg !17734
  store i32 %conv175, i32* %a168, align 4, !dbg !17728, !tbaa !2632
  store i32 1, i32* %res, align 4, !dbg !17735, !tbaa !2632
  %130 = load i32, i32* %res, align 4, !dbg !17736, !tbaa !2632
  %131 = load i32, i32* %a168, align 4, !dbg !17738, !tbaa !2632
  %div176 = sdiv i32 %131, %130, !dbg !17738
  store i32 %div176, i32* %a168, align 4, !dbg !17738, !tbaa !2632
  br label %for.cond177, !dbg !17739

for.cond177:                                      ; preds = %for.inc192, %if.end167
  %132 = load i32, i32* %a168, align 4, !dbg !17740, !tbaa !2632
  %rem178 = srem i32 %132, 10, !dbg !17742
  %cmp179 = icmp eq i32 %rem178, 0, !dbg !17743
  br i1 %cmp179, label %for.body181, label %for.end194, !dbg !17744

for.body181:                                      ; preds = %for.cond177
  %133 = load i32, i32* %res, align 4, !dbg !17745, !tbaa !2632
  %cmp182 = icmp eq i32 %133, 1000000000, !dbg !17748
  br i1 %cmp182, label %if.then184, label %if.end186, !dbg !17749

if.then184:                                       ; preds = %for.body181
  %134 = load i32, i32* %res, align 4, !dbg !17750, !tbaa !2632
  %mul185 = mul nsw i32 %134, 2, !dbg !17750
  store i32 %mul185, i32* %res, align 4, !dbg !17750, !tbaa !2632
  br label %for.end194, !dbg !17752

if.end186:                                        ; preds = %for.body181
  %135 = load i32, i32* %res, align 4, !dbg !17753, !tbaa !2632
  %mul187 = mul nsw i32 %135, 10, !dbg !17753
  store i32 %mul187, i32* %res, align 4, !dbg !17753, !tbaa !2632
  %136 = load i32, i32* %res, align 4, !dbg !17754, !tbaa !2632
  %137 = load i32, i32* %old_res, align 4, !dbg !17756, !tbaa !2632
  %cmp188 = icmp eq i32 %136, %137, !dbg !17757
  br i1 %cmp188, label %if.then190, label %if.end191, !dbg !17758

if.then190:                                       ; preds = %if.end186
  br label %for.end194, !dbg !17759

if.end191:                                        ; preds = %if.end186
  br label %for.inc192, !dbg !17760

for.inc192:                                       ; preds = %if.end191
  %138 = load i32, i32* %a168, align 4, !dbg !17761, !tbaa !2632
  %div193 = sdiv i32 %138, 10, !dbg !17761
  store i32 %div193, i32* %a168, align 4, !dbg !17761, !tbaa !2632
  br label %for.cond177, !dbg !17762, !llvm.loop !17763

for.end194:                                       ; preds = %if.then190, %if.then184, %for.cond177
  br label %if.end195, !dbg !17765

if.end195:                                        ; preds = %for.end194, %if.end96
  %139 = load i32, i32* %res, align 4, !dbg !17766, !tbaa !2632
  %140 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17767, !tbaa !2645
  %resolution196 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %140, i32 0, i32 1, !dbg !17768, !ctir !1251
  store i32 %139, i32* %resolution196, align 8, !dbg !17769, !tbaa !17424, !ctir !7
  %141 = load %struct.fs_res*, %struct.fs_res** %dst_res, align 8, !dbg !17770, !tbaa !2645
  %exact197 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %141, i32 0, i32 2, !dbg !17771, !ctir !1251
  store i8 1, i8* %exact197, align 4, !dbg !17772, !tbaa !17429, !ctir !142
  br label %if.end198, !dbg !17773

if.end198:                                        ; preds = %if.end195, %if.end50
  %142 = load i32, i32* %res, align 4, !dbg !17774, !tbaa !2632
  %cmp199 = icmp eq i32 %142, 2000000000, !dbg !17775
  %143 = zext i1 %cmp199 to i64, !dbg !17774
  %cond201 = select i1 %cmp199, i32 1, i32 0, !dbg !17774
  %neg202 = xor i32 %cond201, -1, !dbg !17776
  %conv203 = sext i32 %neg202 to i64, !dbg !17776
  %144 = load i64, i64* %src_s, align 8, !dbg !17777, !tbaa !3285
  %and204 = and i64 %144, %conv203, !dbg !17777
  store i64 %and204, i64* %src_s, align 8, !dbg !17777, !tbaa !3285
  %145 = load i32, i32* %src_ns, align 4, !dbg !17778, !tbaa !2632
  %146 = load i32, i32* %res, align 4, !dbg !17779, !tbaa !2632
  %rem205 = srem i32 %145, %146, !dbg !17780
  %147 = load i32, i32* %src_ns, align 4, !dbg !17781, !tbaa !2632
  %sub206 = sub nsw i32 %147, %rem205, !dbg !17781
  store i32 %sub206, i32* %src_ns, align 4, !dbg !17781, !tbaa !2632
  br label %if.end207, !dbg !17782

if.end207:                                        ; preds = %if.end198, %entry
  %148 = load i64, i64* %dst_s, align 8, !dbg !17783, !tbaa !3285
  %149 = load i64, i64* %src_s, align 8, !dbg !17784, !tbaa !3285
  %cmp208 = icmp slt i64 %148, %149, !dbg !17785
  br i1 %cmp208, label %cond.true, label %cond.false, !dbg !17783

cond.true:                                        ; preds = %if.end207
  br label %cond.end223, !dbg !17783

cond.false:                                       ; preds = %if.end207
  %150 = load i64, i64* %dst_s, align 8, !dbg !17786, !tbaa !3285
  %151 = load i64, i64* %src_s, align 8, !dbg !17787, !tbaa !3285
  %cmp210 = icmp sgt i64 %150, %151, !dbg !17788
  br i1 %cmp210, label %cond.true212, label %cond.false213, !dbg !17786

cond.true212:                                     ; preds = %cond.false
  br label %cond.end221, !dbg !17786

cond.false213:                                    ; preds = %cond.false
  %152 = load i32, i32* %dst_ns, align 4, !dbg !17789, !tbaa !2632
  %153 = load i32, i32* %src_ns, align 4, !dbg !17790, !tbaa !2632
  %cmp214 = icmp slt i32 %152, %153, !dbg !17791
  br i1 %cmp214, label %cond.true216, label %cond.false217, !dbg !17789

cond.true216:                                     ; preds = %cond.false213
  br label %cond.end, !dbg !17789

cond.false217:                                    ; preds = %cond.false213
  %154 = load i32, i32* %dst_ns, align 4, !dbg !17792, !tbaa !2632
  %155 = load i32, i32* %src_ns, align 4, !dbg !17793, !tbaa !2632
  %cmp218 = icmp sgt i32 %154, %155, !dbg !17794
  %conv219 = zext i1 %cmp218 to i32, !dbg !17794
  br label %cond.end, !dbg !17789

cond.end:                                         ; preds = %cond.false217, %cond.true216
  %cond220 = phi i32 [ -1, %cond.true216 ], [ %conv219, %cond.false217 ], !dbg !17789
  br label %cond.end221, !dbg !17786

cond.end221:                                      ; preds = %cond.end, %cond.true212
  %cond222 = phi i32 [ 1, %cond.true212 ], [ %cond220, %cond.end ], !dbg !17786
  br label %cond.end223, !dbg !17783

cond.end223:                                      ; preds = %cond.end221, %cond.true
  %cond224 = phi i32 [ -1, %cond.true ], [ %cond222, %cond.end221 ], !dbg !17783
  store i32 %cond224, i32* %retval, align 4, !dbg !17795
  br label %return, !dbg !17795

return:                                           ; preds = %cond.end223, %if.then166, %if.then143, %if.then126, %if.then114, %if.then16, %if.then11, %if.then8
  %156 = load i32, i32* %retval, align 4, !dbg !17796
  ret i32 %156, !dbg !17796
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @dev_info_hash(i8* %x, i64 %table_size) #4 !dbg !17797 !ctir !633 {
entry:
  %x.addr = alloca i8*, align 8
  %table_size.addr = alloca i64, align 8
  %p = alloca %struct.fs_res*, align 8, !ctir !1257
  store i8* %x, i8** %x.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !17798, metadata !DIExpression()), !dbg !17799
  store i64 %table_size, i64* %table_size.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %table_size.addr, metadata !17800, metadata !DIExpression()), !dbg !17801
  call void @llvm.dbg.declare(metadata %struct.fs_res** %p, metadata !17802, metadata !DIExpression()), !dbg !17803
  %0 = load i8*, i8** %x.addr, align 8, !dbg !17804, !tbaa !2645
  %1 = bitcast i8* %0 to %struct.fs_res*, !dbg !17804
  store %struct.fs_res* %1, %struct.fs_res** %p, align 8, !dbg !17803, !tbaa !2645
  %2 = load %struct.fs_res*, %struct.fs_res** %p, align 8, !dbg !17805, !tbaa !2645
  %dev = getelementptr inbounds %struct.fs_res, %struct.fs_res* %2, i32 0, i32 0, !dbg !17806, !ctir !1258
  %3 = load i64, i64* %dev, align 8, !dbg !17806, !tbaa !17436, !ctir !443
  %4 = load i64, i64* %table_size.addr, align 8, !dbg !17807, !tbaa !3285
  %rem = urem i64 %3, %4, !dbg !17808
  ret i64 %rem, !dbg !17809
}

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @dev_info_compare(i8* %x, i8* %y) #4 !dbg !17810 !ctir !635 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %a = alloca %struct.fs_res*, align 8, !ctir !1257
  %b = alloca %struct.fs_res*, align 8, !ctir !1257
  store i8* %x, i8** %x.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !17811, metadata !DIExpression()), !dbg !17812
  store i8* %y, i8** %y.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !17813, metadata !DIExpression()), !dbg !17814
  call void @llvm.dbg.declare(metadata %struct.fs_res** %a, metadata !17815, metadata !DIExpression()), !dbg !17816
  %0 = load i8*, i8** %x.addr, align 8, !dbg !17817, !tbaa !2645
  %1 = bitcast i8* %0 to %struct.fs_res*, !dbg !17817
  store %struct.fs_res* %1, %struct.fs_res** %a, align 8, !dbg !17816, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.fs_res** %b, metadata !17818, metadata !DIExpression()), !dbg !17819
  %2 = load i8*, i8** %y.addr, align 8, !dbg !17820, !tbaa !2645
  %3 = bitcast i8* %2 to %struct.fs_res*, !dbg !17820
  store %struct.fs_res* %3, %struct.fs_res** %b, align 8, !dbg !17819, !tbaa !2645
  %4 = load %struct.fs_res*, %struct.fs_res** %a, align 8, !dbg !17821, !tbaa !2645
  %dev = getelementptr inbounds %struct.fs_res, %struct.fs_res* %4, i32 0, i32 0, !dbg !17822, !ctir !1258
  %5 = load i64, i64* %dev, align 8, !dbg !17822, !tbaa !17436, !ctir !443
  %6 = load %struct.fs_res*, %struct.fs_res** %b, align 8, !dbg !17823, !tbaa !2645
  %dev1 = getelementptr inbounds %struct.fs_res, %struct.fs_res* %6, i32 0, i32 0, !dbg !17824, !ctir !1258
  %7 = load i64, i64* %dev1, align 8, !dbg !17824, !tbaa !17436, !ctir !443
  %cmp = icmp eq i64 %5, %7, !dbg !17825
  ret i1 %cmp, !dbg !17826
}

; Function Attrs: nounwind
declare dso_local i32 @utimensat(i32, i8*, %struct.timespec*, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lutimensat(i32 %dir, i8* %file, %struct.timespec* %times) #4 !dbg !17827 !ctir !1267 {
entry:
  %dir.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %times.addr = alloca %struct.timespec*, align 8
  store i32 %dir, i32* %dir.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !17829, metadata !DIExpression()), !dbg !17830
  store i8* %file, i8** %file.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !17831, metadata !DIExpression()), !dbg !17832
  store %struct.timespec* %times, %struct.timespec** %times.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.timespec** %times.addr, metadata !17833, metadata !DIExpression()), !dbg !17834
  %0 = load i32, i32* %dir.addr, align 4, !dbg !17835, !tbaa !2632
  %1 = load i8*, i8** %file.addr, align 8, !dbg !17836, !tbaa !2645
  %2 = load %struct.timespec*, %struct.timespec** %times.addr, align 8, !dbg !17837, !tbaa !2645
  %call = call i32 @utimensat(i32 %0, i8* %1, %struct.timespec* %2, i32 256) #9, !dbg !17838
  ret i32 %call, !dbg !17839
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fdutimens(i32 %fd, i8* %file, %struct.timespec* %timespec) #4 !dbg !17840 !ctir !1267 {
entry:
  %retval = alloca i32, align 4
  %fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %timespec.addr = alloca %struct.timespec*, align 8
  %adjusted_timespec = alloca [2 x %struct.timespec], align 16, !ctir !1275
  %ts = alloca %struct.timespec*, align 8, !ctir !1276
  %adjustment_needed = alloca i32, align 4, !ctir !7
  %st = alloca %struct.stat, align 8, !ctir !1293
  %result = alloca i32, align 4, !ctir !7
  %tmp = alloca %struct.timespec, align 8
  %tmp35 = alloca %struct.timespec, align 8
  %timeval = alloca [2 x %struct.timespec], align 16, !ctir !1277
  %t = alloca %struct.timespec*, align 8, !ctir !1284
  %abig = alloca i8, align 1, !ctir !142
  %mbig = alloca i8, align 1, !ctir !142
  %adiff = alloca i64, align 8, !ctir !1248
  %mdiff = alloca i64, align 8, !ctir !1248
  %tt = alloca %struct.timespec*, align 8, !ctir !1284
  %truncated_timeval = alloca [2 x %struct.timespec], align 16, !ctir !1277
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !17841, metadata !DIExpression()), !dbg !17842
  store i8* %file, i8** %file.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !17843, metadata !DIExpression()), !dbg !17844
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !17845, metadata !DIExpression()), !dbg !17846
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %adjusted_timespec, metadata !17847, metadata !DIExpression()), !dbg !17848
  call void @llvm.dbg.declare(metadata %struct.timespec** %ts, metadata !17849, metadata !DIExpression()), !dbg !17850
  %0 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17851, !tbaa !2645
  %tobool = icmp ne %struct.timespec* %0, null, !dbg !17851
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !17851

cond.true:                                        ; preds = %entry
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !17852
  br label %cond.end, !dbg !17851

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !17851

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.timespec* [ %arraydecay, %cond.true ], [ null, %cond.false ], !dbg !17851
  store %struct.timespec* %cond, %struct.timespec** %ts, align 8, !dbg !17850, !tbaa !2645
  call void @llvm.dbg.declare(metadata i32* %adjustment_needed, metadata !17853, metadata !DIExpression()), !dbg !17854
  store i32 0, i32* %adjustment_needed, align 4, !dbg !17854, !tbaa !2632
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !17855, metadata !DIExpression()), !dbg !17856
  %1 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17857, !tbaa !2645
  %tobool1 = icmp ne %struct.timespec* %1, null, !dbg !17857
  br i1 %tobool1, label %if.then, label %if.end, !dbg !17859

if.then:                                          ; preds = %cond.end
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !17860, !ctir !1275
  %2 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17862, !tbaa !2645
  %arrayidx2 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !17862, !ctir !1269
  %3 = bitcast %struct.timespec* %arrayidx to i8*, !dbg !17862
  %4 = bitcast %struct.timespec* %arrayidx2 to i8*, !dbg !17862
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %3, i8* align 8 %4, i64 16, i1 false), !dbg !17862, !tbaa.struct !3795
  %arrayidx3 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 1, !dbg !17863, !ctir !1275
  %5 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !17864, !tbaa !2645
  %arrayidx4 = getelementptr inbounds %struct.timespec, %struct.timespec* %5, i64 1, !dbg !17864, !ctir !1269
  %6 = bitcast %struct.timespec* %arrayidx3 to i8*, !dbg !17864
  %7 = bitcast %struct.timespec* %arrayidx4 to i8*, !dbg !17864
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %6, i8* align 8 %7, i64 16, i1 false), !dbg !17864, !tbaa.struct !3795
  %8 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17865, !tbaa !2645
  %call = call i32 @validate_timespec(%struct.timespec* %8), !dbg !17866
  store i32 %call, i32* %adjustment_needed, align 4, !dbg !17867, !tbaa !2632
  br label %if.end, !dbg !17868

if.end:                                           ; preds = %if.then, %cond.end
  %9 = load i32, i32* %adjustment_needed, align 4, !dbg !17869, !tbaa !2632
  %cmp = icmp slt i32 %9, 0, !dbg !17871
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !17872

if.then5:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !17873
  br label %return, !dbg !17873

if.end6:                                          ; preds = %if.end
  %10 = load i32, i32* %fd.addr, align 4, !dbg !17874, !tbaa !2632
  %cmp7 = icmp slt i32 %10, 0, !dbg !17876
  br i1 %cmp7, label %land.lhs.true, label %if.end11, !dbg !17877

land.lhs.true:                                    ; preds = %if.end6
  %11 = load i8*, i8** %file.addr, align 8, !dbg !17878, !tbaa !2645
  %tobool8 = icmp ne i8* %11, null, !dbg !17878
  br i1 %tobool8, label %if.end11, label %if.then9, !dbg !17879

if.then9:                                         ; preds = %land.lhs.true
  %call10 = call i32* @__errno_location() #16, !dbg !17880
  store i32 9, i32* %call10, align 4, !dbg !17882, !tbaa !2632, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !17883
  br label %return, !dbg !17883

if.end11:                                         ; preds = %land.lhs.true, %if.end6
  %12 = load i32, i32* @utimensat_works_really, align 4, !dbg !17884, !tbaa !2632
  %cmp12 = icmp sle i32 0, %12, !dbg !17886
  br i1 %cmp12, label %if.then13, label %if.end67, !dbg !17887

if.then13:                                        ; preds = %if.end11
  call void @llvm.dbg.declare(metadata i32* %result, metadata !17888, metadata !DIExpression()), !dbg !17890
  %13 = load i32, i32* %adjustment_needed, align 4, !dbg !17891, !tbaa !2632
  %cmp14 = icmp eq i32 %13, 2, !dbg !17893
  br i1 %cmp14, label %if.then15, label %if.end39, !dbg !17894

if.then15:                                        ; preds = %if.then13
  %14 = load i32, i32* %fd.addr, align 4, !dbg !17895, !tbaa !2632
  %cmp16 = icmp slt i32 %14, 0, !dbg !17898
  br i1 %cmp16, label %cond.true17, label %cond.false20, !dbg !17899

cond.true17:                                      ; preds = %if.then15
  %15 = load i8*, i8** %file.addr, align 8, !dbg !17900, !tbaa !2645
  %call18 = call i32 @stat(i8* %15, %struct.stat* %st) #9, !dbg !17901
  %tobool19 = icmp ne i32 %call18, 0, !dbg !17901
  br i1 %tobool19, label %if.then23, label %if.end24, !dbg !17895

cond.false20:                                     ; preds = %if.then15
  %16 = load i32, i32* %fd.addr, align 4, !dbg !17902, !tbaa !2632
  %call21 = call i32 @fstat(i32 %16, %struct.stat* %st) #9, !dbg !17903
  %tobool22 = icmp ne i32 %call21, 0, !dbg !17903
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !17899

if.then23:                                        ; preds = %cond.false20, %cond.true17
  store i32 -1, i32* %retval, align 4, !dbg !17904
  br label %return, !dbg !17904

if.end24:                                         ; preds = %cond.false20, %cond.true17
  %17 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17905, !tbaa !2645
  %arrayidx25 = getelementptr inbounds %struct.timespec, %struct.timespec* %17, i64 0, !dbg !17905, !ctir !1276
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx25, i32 0, i32 1, !dbg !17907, !ctir !1271
  %18 = load i64, i64* %tv_nsec, align 8, !dbg !17907, !tbaa !16995, !ctir !296
  %cmp26 = icmp eq i64 %18, 1073741822, !dbg !17908
  br i1 %cmp26, label %if.then27, label %if.else, !dbg !17909

if.then27:                                        ; preds = %if.end24
  %19 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17910, !tbaa !2645
  %arrayidx28 = getelementptr inbounds %struct.timespec, %struct.timespec* %19, i64 0, !dbg !17910, !ctir !1276
  %call29 = call { i64, i64 } @get_stat_atime(%struct.stat* %st) #14, !dbg !17911
  %20 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !17911
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 0, !dbg !17911
  %22 = extractvalue { i64, i64 } %call29, 0, !dbg !17911
  store i64 %22, i64* %21, align 8, !dbg !17911
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %20, i32 0, i32 1, !dbg !17911
  %24 = extractvalue { i64, i64 } %call29, 1, !dbg !17911
  store i64 %24, i64* %23, align 8, !dbg !17911
  %25 = bitcast %struct.timespec* %arrayidx28 to i8*, !dbg !17911
  %26 = bitcast %struct.timespec* %tmp to i8*, !dbg !17911
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 16, i1 false), !dbg !17911, !tbaa.struct !3795
  br label %if.end38, !dbg !17910

if.else:                                          ; preds = %if.end24
  %27 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17912, !tbaa !2645
  %arrayidx30 = getelementptr inbounds %struct.timespec, %struct.timespec* %27, i64 1, !dbg !17912, !ctir !1276
  %tv_nsec31 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx30, i32 0, i32 1, !dbg !17914, !ctir !1271
  %28 = load i64, i64* %tv_nsec31, align 8, !dbg !17914, !tbaa !16995, !ctir !296
  %cmp32 = icmp eq i64 %28, 1073741822, !dbg !17915
  br i1 %cmp32, label %if.then33, label %if.end37, !dbg !17916

if.then33:                                        ; preds = %if.else
  %29 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17917, !tbaa !2645
  %arrayidx34 = getelementptr inbounds %struct.timespec, %struct.timespec* %29, i64 1, !dbg !17917, !ctir !1276
  %call36 = call { i64, i64 } @get_stat_mtime(%struct.stat* %st) #14, !dbg !17918
  %30 = bitcast %struct.timespec* %tmp35 to { i64, i64 }*, !dbg !17918
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %30, i32 0, i32 0, !dbg !17918
  %32 = extractvalue { i64, i64 } %call36, 0, !dbg !17918
  store i64 %32, i64* %31, align 8, !dbg !17918
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %30, i32 0, i32 1, !dbg !17918
  %34 = extractvalue { i64, i64 } %call36, 1, !dbg !17918
  store i64 %34, i64* %33, align 8, !dbg !17918
  %35 = bitcast %struct.timespec* %arrayidx34 to i8*, !dbg !17918
  %36 = bitcast %struct.timespec* %tmp35 to i8*, !dbg !17918
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 16, i1 false), !dbg !17918, !tbaa.struct !3795
  br label %if.end37, !dbg !17917

if.end37:                                         ; preds = %if.then33, %if.else
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then27
  %37 = load i32, i32* %adjustment_needed, align 4, !dbg !17919, !tbaa !2632
  %inc = add nsw i32 %37, 1, !dbg !17919
  store i32 %inc, i32* %adjustment_needed, align 4, !dbg !17919, !tbaa !2632
  br label %if.end39, !dbg !17920

if.end39:                                         ; preds = %if.end38, %if.then13
  %38 = load i32, i32* %fd.addr, align 4, !dbg !17921, !tbaa !2632
  %cmp40 = icmp slt i32 %38, 0, !dbg !17923
  br i1 %cmp40, label %if.then41, label %if.end52, !dbg !17924

if.then41:                                        ; preds = %if.end39
  %39 = load i8*, i8** %file.addr, align 8, !dbg !17925, !tbaa !2645
  %40 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17927, !tbaa !2645
  %call42 = call i32 @utimensat(i32 -100, i8* %39, %struct.timespec* %40, i32 0) #9, !dbg !17928
  store i32 %call42, i32* %result, align 4, !dbg !17929, !tbaa !2632
  %41 = load i32, i32* %result, align 4, !dbg !17930, !tbaa !2632
  %cmp43 = icmp slt i32 0, %41, !dbg !17932
  br i1 %cmp43, label %if.then44, label %if.end46, !dbg !17933

if.then44:                                        ; preds = %if.then41
  %call45 = call i32* @__errno_location() #16, !dbg !17934
  store i32 38, i32* %call45, align 4, !dbg !17935, !tbaa !2632, !ctir !7
  br label %if.end46, !dbg !17934

if.end46:                                         ; preds = %if.then44, %if.then41
  %42 = load i32, i32* %result, align 4, !dbg !17936, !tbaa !2632
  %cmp47 = icmp eq i32 %42, 0, !dbg !17938
  br i1 %cmp47, label %if.then50, label %lor.lhs.false, !dbg !17939

lor.lhs.false:                                    ; preds = %if.end46
  %call48 = call i32* @__errno_location() #16, !dbg !17940
  %43 = load i32, i32* %call48, align 4, !dbg !17940, !tbaa !2632, !ctir !7
  %cmp49 = icmp ne i32 %43, 38, !dbg !17941
  br i1 %cmp49, label %if.then50, label %if.end51, !dbg !17942

if.then50:                                        ; preds = %lor.lhs.false, %if.end46
  store i32 1, i32* @utimensat_works_really, align 4, !dbg !17943, !tbaa !2632
  %44 = load i32, i32* %result, align 4, !dbg !17945, !tbaa !2632
  store i32 %44, i32* %retval, align 4, !dbg !17946
  br label %return, !dbg !17946

if.end51:                                         ; preds = %lor.lhs.false
  br label %if.end52, !dbg !17947

if.end52:                                         ; preds = %if.end51, %if.end39
  %45 = load i32, i32* %fd.addr, align 4, !dbg !17948, !tbaa !2632
  %cmp53 = icmp sle i32 0, %45, !dbg !17950
  br i1 %cmp53, label %if.then54, label %if.end66, !dbg !17951

if.then54:                                        ; preds = %if.end52
  %46 = load i32, i32* %fd.addr, align 4, !dbg !17952, !tbaa !2632
  %47 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17954, !tbaa !2645
  %call55 = call i32 @futimens(i32 %46, %struct.timespec* %47) #9, !dbg !17955
  store i32 %call55, i32* %result, align 4, !dbg !17956, !tbaa !2632
  %48 = load i32, i32* %result, align 4, !dbg !17957, !tbaa !2632
  %cmp56 = icmp slt i32 0, %48, !dbg !17959
  br i1 %cmp56, label %if.then57, label %if.end59, !dbg !17960

if.then57:                                        ; preds = %if.then54
  %call58 = call i32* @__errno_location() #16, !dbg !17961
  store i32 38, i32* %call58, align 4, !dbg !17962, !tbaa !2632, !ctir !7
  br label %if.end59, !dbg !17961

if.end59:                                         ; preds = %if.then57, %if.then54
  %49 = load i32, i32* %result, align 4, !dbg !17963, !tbaa !2632
  %cmp60 = icmp eq i32 %49, 0, !dbg !17965
  br i1 %cmp60, label %if.then64, label %lor.lhs.false61, !dbg !17966

lor.lhs.false61:                                  ; preds = %if.end59
  %call62 = call i32* @__errno_location() #16, !dbg !17967
  %50 = load i32, i32* %call62, align 4, !dbg !17967, !tbaa !2632, !ctir !7
  %cmp63 = icmp ne i32 %50, 38, !dbg !17968
  br i1 %cmp63, label %if.then64, label %if.end65, !dbg !17969

if.then64:                                        ; preds = %lor.lhs.false61, %if.end59
  store i32 1, i32* @utimensat_works_really, align 4, !dbg !17970, !tbaa !2632
  %51 = load i32, i32* %result, align 4, !dbg !17972, !tbaa !2632
  store i32 %51, i32* %retval, align 4, !dbg !17973
  br label %return, !dbg !17973

if.end65:                                         ; preds = %lor.lhs.false61
  br label %if.end66, !dbg !17974

if.end66:                                         ; preds = %if.end65, %if.end52
  br label %if.end67, !dbg !17975

if.end67:                                         ; preds = %if.end66, %if.end11
  store i32 -1, i32* @utimensat_works_really, align 4, !dbg !17976, !tbaa !2632
  store i32 -1, i32* @lutimensat_works_really, align 4, !dbg !17977, !tbaa !2632
  %52 = load i32, i32* %adjustment_needed, align 4, !dbg !17978, !tbaa !2632
  %tobool68 = icmp ne i32 %52, 0, !dbg !17978
  br i1 %tobool68, label %if.then69, label %if.end86, !dbg !17980

if.then69:                                        ; preds = %if.end67
  %53 = load i32, i32* %adjustment_needed, align 4, !dbg !17981, !tbaa !2632
  %cmp70 = icmp ne i32 %53, 3, !dbg !17984
  br i1 %cmp70, label %land.lhs.true71, label %if.end80, !dbg !17985

land.lhs.true71:                                  ; preds = %if.then69
  %54 = load i32, i32* %fd.addr, align 4, !dbg !17986, !tbaa !2632
  %cmp72 = icmp slt i32 %54, 0, !dbg !17987
  br i1 %cmp72, label %cond.true73, label %cond.false76, !dbg !17988

cond.true73:                                      ; preds = %land.lhs.true71
  %55 = load i8*, i8** %file.addr, align 8, !dbg !17989, !tbaa !2645
  %call74 = call i32 @stat(i8* %55, %struct.stat* %st) #9, !dbg !17990
  %tobool75 = icmp ne i32 %call74, 0, !dbg !17990
  br i1 %tobool75, label %if.then79, label %if.end80, !dbg !17986

cond.false76:                                     ; preds = %land.lhs.true71
  %56 = load i32, i32* %fd.addr, align 4, !dbg !17991, !tbaa !2632
  %call77 = call i32 @fstat(i32 %56, %struct.stat* %st) #9, !dbg !17992
  %tobool78 = icmp ne i32 %call77, 0, !dbg !17992
  br i1 %tobool78, label %if.then79, label %if.end80, !dbg !17988

if.then79:                                        ; preds = %cond.false76, %cond.true73
  store i32 -1, i32* %retval, align 4, !dbg !17993
  br label %return, !dbg !17993

if.end80:                                         ; preds = %cond.false76, %cond.true73, %if.then69
  %57 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !17994, !tbaa !2645
  %tobool81 = icmp ne %struct.timespec* %57, null, !dbg !17994
  br i1 %tobool81, label %land.lhs.true82, label %if.end85, !dbg !17996

land.lhs.true82:                                  ; preds = %if.end80
  %call83 = call zeroext i1 @update_timespec(%struct.stat* %st, %struct.timespec** %ts), !dbg !17997
  br i1 %call83, label %if.then84, label %if.end85, !dbg !17998

if.then84:                                        ; preds = %land.lhs.true82
  store i32 0, i32* %retval, align 4, !dbg !17999
  br label %return, !dbg !17999

if.end85:                                         ; preds = %land.lhs.true82, %if.end80
  br label %if.end86, !dbg !18000

if.end86:                                         ; preds = %if.end85, %if.end67
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %timeval, metadata !18001, metadata !DIExpression()), !dbg !18003
  call void @llvm.dbg.declare(metadata %struct.timespec** %t, metadata !18004, metadata !DIExpression()), !dbg !18005
  %58 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18006, !tbaa !2645
  %tobool87 = icmp ne %struct.timespec* %58, null, !dbg !18006
  br i1 %tobool87, label %if.then88, label %if.else105, !dbg !18008

if.then88:                                        ; preds = %if.end86
  %59 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18009, !tbaa !2645
  %arrayidx89 = getelementptr inbounds %struct.timespec, %struct.timespec* %59, i64 0, !dbg !18009, !ctir !1276
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx89, i32 0, i32 0, !dbg !18011, !ctir !1271
  %60 = load i64, i64* %tv_sec, align 8, !dbg !18011, !tbaa !16992, !ctir !294
  %arrayidx90 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 0, !dbg !18012, !ctir !1277
  %tv_sec91 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx90, i32 0, i32 0, !dbg !18013, !ctir !1278
  store i64 %60, i64* %tv_sec91, align 16, !dbg !18014, !tbaa !18015, !ctir !294
  %61 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18017, !tbaa !2645
  %arrayidx92 = getelementptr inbounds %struct.timespec, %struct.timespec* %61, i64 0, !dbg !18017, !ctir !1276
  %tv_nsec93 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx92, i32 0, i32 1, !dbg !18018, !ctir !1271
  %62 = load i64, i64* %tv_nsec93, align 8, !dbg !18018, !tbaa !16995, !ctir !296
  %div = sdiv i64 %62, 1000, !dbg !18019
  %arrayidx94 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 0, !dbg !18020, !ctir !1277
  %tv_usec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx94, i32 0, i32 1, !dbg !18021, !ctir !1278
  store i64 %div, i64* %tv_usec, align 8, !dbg !18022, !tbaa !18023, !ctir !1283
  %63 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18024, !tbaa !2645
  %arrayidx95 = getelementptr inbounds %struct.timespec, %struct.timespec* %63, i64 1, !dbg !18024, !ctir !1276
  %tv_sec96 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx95, i32 0, i32 0, !dbg !18025, !ctir !1271
  %64 = load i64, i64* %tv_sec96, align 8, !dbg !18025, !tbaa !16992, !ctir !294
  %arrayidx97 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 1, !dbg !18026, !ctir !1277
  %tv_sec98 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx97, i32 0, i32 0, !dbg !18027, !ctir !1278
  store i64 %64, i64* %tv_sec98, align 16, !dbg !18028, !tbaa !18015, !ctir !294
  %65 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18029, !tbaa !2645
  %arrayidx99 = getelementptr inbounds %struct.timespec, %struct.timespec* %65, i64 1, !dbg !18029, !ctir !1276
  %tv_nsec100 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx99, i32 0, i32 1, !dbg !18030, !ctir !1271
  %66 = load i64, i64* %tv_nsec100, align 8, !dbg !18030, !tbaa !16995, !ctir !296
  %div101 = sdiv i64 %66, 1000, !dbg !18031
  %arrayidx102 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 1, !dbg !18032, !ctir !1277
  %tv_usec103 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx102, i32 0, i32 1, !dbg !18033, !ctir !1278
  store i64 %div101, i64* %tv_usec103, align 8, !dbg !18034, !tbaa !18023, !ctir !1283
  %arraydecay104 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %timeval, i64 0, i64 0, !dbg !18035
  store %struct.timespec* %arraydecay104, %struct.timespec** %t, align 8, !dbg !18036, !tbaa !2645
  br label %if.end106, !dbg !18037

if.else105:                                       ; preds = %if.end86
  store %struct.timespec* null, %struct.timespec** %t, align 8, !dbg !18038, !tbaa !2645
  br label %if.end106

if.end106:                                        ; preds = %if.else105, %if.then88
  %67 = load i32, i32* %fd.addr, align 4, !dbg !18039, !tbaa !2632
  %cmp107 = icmp slt i32 %67, 0, !dbg !18041
  br i1 %cmp107, label %if.then108, label %if.else110, !dbg !18042

if.then108:                                       ; preds = %if.end106
  %68 = load i8*, i8** %file.addr, align 8, !dbg !18043, !tbaa !2645
  %69 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !18045, !tbaa !2645
  %call109 = call i32 @futimesat(i32 -100, i8* %68, %struct.timespec* %69) #9, !dbg !18046
  store i32 %call109, i32* %retval, align 4, !dbg !18047
  br label %return, !dbg !18047

if.else110:                                       ; preds = %if.end106
  %70 = load i32, i32* %fd.addr, align 4, !dbg !18048, !tbaa !2632
  %71 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !18048, !tbaa !2645
  %call111 = call i32 @futimesat(i32 %70, i8* null, %struct.timespec* %71) #9, !dbg !18048
  %cmp112 = icmp eq i32 %call111, 0, !dbg !18051
  br i1 %cmp112, label %if.then113, label %if.end177, !dbg !18052

if.then113:                                       ; preds = %if.else110
  %72 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !18053, !tbaa !2645
  %tobool114 = icmp ne %struct.timespec* %72, null, !dbg !18053
  br i1 %tobool114, label %if.then115, label %if.end176, !dbg !18056

if.then115:                                       ; preds = %if.then113
  call void @llvm.dbg.declare(metadata i8* %abig, metadata !18057, metadata !DIExpression()), !dbg !18059
  %73 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !18060, !tbaa !2645
  %arrayidx116 = getelementptr inbounds %struct.timespec, %struct.timespec* %73, i64 0, !dbg !18060, !ctir !1284
  %tv_usec117 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx116, i32 0, i32 1, !dbg !18061, !ctir !1278
  %74 = load i64, i64* %tv_usec117, align 8, !dbg !18061, !tbaa !18023, !ctir !1283
  %cmp118 = icmp sle i64 500000, %74, !dbg !18062
  %frombool = zext i1 %cmp118 to i8, !dbg !18059
  store i8 %frombool, i8* %abig, align 1, !dbg !18059, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %mbig, metadata !18063, metadata !DIExpression()), !dbg !18064
  %75 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !18065, !tbaa !2645
  %arrayidx119 = getelementptr inbounds %struct.timespec, %struct.timespec* %75, i64 1, !dbg !18065, !ctir !1284
  %tv_usec120 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx119, i32 0, i32 1, !dbg !18066, !ctir !1278
  %76 = load i64, i64* %tv_usec120, align 8, !dbg !18066, !tbaa !18023, !ctir !1283
  %cmp121 = icmp sle i64 500000, %76, !dbg !18067
  %frombool122 = zext i1 %cmp121 to i8, !dbg !18064
  store i8 %frombool122, i8* %mbig, align 1, !dbg !18064, !tbaa !2739
  %77 = load i8, i8* %abig, align 1, !dbg !18068, !tbaa !2739
  %tobool123 = trunc i8 %77 to i1, !dbg !18068
  %conv = zext i1 %tobool123 to i32, !dbg !18068
  %78 = load i8, i8* %mbig, align 1, !dbg !18070, !tbaa !2739
  %tobool124 = trunc i8 %78 to i1, !dbg !18070
  %conv125 = zext i1 %tobool124 to i32, !dbg !18070
  %or = or i32 %conv, %conv125, !dbg !18071
  %tobool126 = icmp ne i32 %or, 0, !dbg !18071
  br i1 %tobool126, label %land.lhs.true127, label %if.end175, !dbg !18072

land.lhs.true127:                                 ; preds = %if.then115
  %79 = load i32, i32* %fd.addr, align 4, !dbg !18073, !tbaa !2632
  %call128 = call i32 @fstat(i32 %79, %struct.stat* %st) #9, !dbg !18074
  %cmp129 = icmp eq i32 %call128, 0, !dbg !18075
  br i1 %cmp129, label %if.then131, label %if.end175, !dbg !18076

if.then131:                                       ; preds = %land.lhs.true127
  call void @llvm.dbg.declare(metadata i64* %adiff, metadata !18077, metadata !DIExpression()), !dbg !18079
  %st_atim = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 11, !dbg !18080, !ctir !1293
  %tv_sec132 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_atim, i32 0, i32 0, !dbg !18080, !ctir !1271
  %80 = load i64, i64* %tv_sec132, align 8, !dbg !18080, !tbaa !17495, !ctir !294
  %81 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !18081, !tbaa !2645
  %arrayidx133 = getelementptr inbounds %struct.timespec, %struct.timespec* %81, i64 0, !dbg !18081, !ctir !1284
  %tv_sec134 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx133, i32 0, i32 0, !dbg !18082, !ctir !1278
  %82 = load i64, i64* %tv_sec134, align 8, !dbg !18082, !tbaa !18015, !ctir !294
  %sub = sub nsw i64 %80, %82, !dbg !18083
  store i64 %sub, i64* %adiff, align 8, !dbg !18079, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %mdiff, metadata !18084, metadata !DIExpression()), !dbg !18085
  %st_mtim = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 12, !dbg !18086, !ctir !1293
  %tv_sec135 = getelementptr inbounds %struct.timespec, %struct.timespec* %st_mtim, i32 0, i32 0, !dbg !18086, !ctir !1271
  %83 = load i64, i64* %tv_sec135, align 8, !dbg !18086, !tbaa !17353, !ctir !294
  %84 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !18087, !tbaa !2645
  %arrayidx136 = getelementptr inbounds %struct.timespec, %struct.timespec* %84, i64 1, !dbg !18087, !ctir !1284
  %tv_sec137 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx136, i32 0, i32 0, !dbg !18088, !ctir !1278
  %85 = load i64, i64* %tv_sec137, align 8, !dbg !18088, !tbaa !18015, !ctir !294
  %sub138 = sub nsw i64 %83, %85, !dbg !18089
  store i64 %sub138, i64* %mdiff, align 8, !dbg !18085, !tbaa !3285
  call void @llvm.dbg.declare(metadata %struct.timespec** %tt, metadata !18090, metadata !DIExpression()), !dbg !18091
  store %struct.timespec* null, %struct.timespec** %tt, align 8, !dbg !18091, !tbaa !2645
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %truncated_timeval, metadata !18092, metadata !DIExpression()), !dbg !18093
  %arrayidx139 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 0, !dbg !18094, !ctir !1277
  %86 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !18095, !tbaa !2645
  %arrayidx140 = getelementptr inbounds %struct.timespec, %struct.timespec* %86, i64 0, !dbg !18095, !ctir !1284
  %87 = bitcast %struct.timespec* %arrayidx139 to i8*, !dbg !18095
  %88 = bitcast %struct.timespec* %arrayidx140 to i8*, !dbg !18095
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %87, i8* align 8 %88, i64 16, i1 false), !dbg !18095, !tbaa.struct !3795
  %arrayidx141 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 1, !dbg !18096, !ctir !1277
  %89 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !18097, !tbaa !2645
  %arrayidx142 = getelementptr inbounds %struct.timespec, %struct.timespec* %89, i64 1, !dbg !18097, !ctir !1284
  %90 = bitcast %struct.timespec* %arrayidx141 to i8*, !dbg !18097
  %91 = bitcast %struct.timespec* %arrayidx142 to i8*, !dbg !18097
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %90, i8* align 8 %91, i64 16, i1 false), !dbg !18097, !tbaa.struct !3795
  %92 = load i8, i8* %abig, align 1, !dbg !18098, !tbaa !2739
  %tobool143 = trunc i8 %92 to i1, !dbg !18098
  br i1 %tobool143, label %land.lhs.true145, label %if.end156, !dbg !18100

land.lhs.true145:                                 ; preds = %if.then131
  %93 = load i64, i64* %adiff, align 8, !dbg !18101, !tbaa !3285
  %cmp146 = icmp eq i64 %93, 1, !dbg !18102
  br i1 %cmp146, label %land.lhs.true148, label %if.end156, !dbg !18103

land.lhs.true148:                                 ; preds = %land.lhs.true145
  %call149 = call i64 @get_stat_atime_ns(%struct.stat* %st) #14, !dbg !18104
  %cmp150 = icmp eq i64 %call149, 0, !dbg !18105
  br i1 %cmp150, label %if.then152, label %if.end156, !dbg !18106

if.then152:                                       ; preds = %land.lhs.true148
  %arraydecay153 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 0, !dbg !18107
  store %struct.timespec* %arraydecay153, %struct.timespec** %tt, align 8, !dbg !18109, !tbaa !2645
  %94 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !18110, !tbaa !2645
  %arrayidx154 = getelementptr inbounds %struct.timespec, %struct.timespec* %94, i64 0, !dbg !18110, !ctir !1284
  %tv_usec155 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx154, i32 0, i32 1, !dbg !18111, !ctir !1278
  store i64 0, i64* %tv_usec155, align 8, !dbg !18112, !tbaa !18023, !ctir !1283
  br label %if.end156, !dbg !18113

if.end156:                                        ; preds = %if.then152, %land.lhs.true148, %land.lhs.true145, %if.then131
  %95 = load i8, i8* %mbig, align 1, !dbg !18114, !tbaa !2739
  %tobool157 = trunc i8 %95 to i1, !dbg !18114
  br i1 %tobool157, label %land.lhs.true159, label %if.end170, !dbg !18116

land.lhs.true159:                                 ; preds = %if.end156
  %96 = load i64, i64* %mdiff, align 8, !dbg !18117, !tbaa !3285
  %cmp160 = icmp eq i64 %96, 1, !dbg !18118
  br i1 %cmp160, label %land.lhs.true162, label %if.end170, !dbg !18119

land.lhs.true162:                                 ; preds = %land.lhs.true159
  %call163 = call i64 @get_stat_mtime_ns(%struct.stat* %st) #14, !dbg !18120
  %cmp164 = icmp eq i64 %call163, 0, !dbg !18121
  br i1 %cmp164, label %if.then166, label %if.end170, !dbg !18122

if.then166:                                       ; preds = %land.lhs.true162
  %arraydecay167 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 0, !dbg !18123
  store %struct.timespec* %arraydecay167, %struct.timespec** %tt, align 8, !dbg !18125, !tbaa !2645
  %97 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !18126, !tbaa !2645
  %arrayidx168 = getelementptr inbounds %struct.timespec, %struct.timespec* %97, i64 1, !dbg !18126, !ctir !1284
  %tv_usec169 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx168, i32 0, i32 1, !dbg !18127, !ctir !1278
  store i64 0, i64* %tv_usec169, align 8, !dbg !18128, !tbaa !18023, !ctir !1283
  br label %if.end170, !dbg !18129

if.end170:                                        ; preds = %if.then166, %land.lhs.true162, %land.lhs.true159, %if.end156
  %98 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !18130, !tbaa !2645
  %tobool171 = icmp ne %struct.timespec* %98, null, !dbg !18130
  br i1 %tobool171, label %if.then172, label %if.end174, !dbg !18132

if.then172:                                       ; preds = %if.end170
  %99 = load i32, i32* %fd.addr, align 4, !dbg !18133, !tbaa !2632
  %100 = load %struct.timespec*, %struct.timespec** %tt, align 8, !dbg !18133, !tbaa !2645
  %call173 = call i32 @futimesat(i32 %99, i8* null, %struct.timespec* %100) #9, !dbg !18133
  br label %if.end174, !dbg !18133

if.end174:                                        ; preds = %if.then172, %if.end170
  br label %if.end175, !dbg !18134

if.end175:                                        ; preds = %if.end174, %land.lhs.true127, %if.then115
  br label %if.end176, !dbg !18135

if.end176:                                        ; preds = %if.end175, %if.then113
  store i32 0, i32* %retval, align 4, !dbg !18136
  br label %return, !dbg !18136

if.end177:                                        ; preds = %if.else110
  br label %if.end178

if.end178:                                        ; preds = %if.end177
  %101 = load i8*, i8** %file.addr, align 8, !dbg !18137, !tbaa !2645
  %tobool179 = icmp ne i8* %101, null, !dbg !18137
  br i1 %tobool179, label %if.end181, label %if.then180, !dbg !18139

if.then180:                                       ; preds = %if.end178
  store i32 -1, i32* %retval, align 4, !dbg !18140
  br label %return, !dbg !18140

if.end181:                                        ; preds = %if.end178
  %102 = load i8*, i8** %file.addr, align 8, !dbg !18142, !tbaa !2645
  %103 = load %struct.timespec*, %struct.timespec** %t, align 8, !dbg !18143, !tbaa !2645
  %call182 = call i32 @utimes(i8* %102, %struct.timespec* %103) #9, !dbg !18144
  store i32 %call182, i32* %retval, align 4, !dbg !18145
  br label %return, !dbg !18145

return:                                           ; preds = %if.end181, %if.then180, %if.end176, %if.then108, %if.then84, %if.then79, %if.then64, %if.then50, %if.then23, %if.then9, %if.then5
  %104 = load i32, i32* %retval, align 4, !dbg !18146
  ret i32 %104, !dbg !18146
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @validate_timespec(%struct.timespec* %timespec) #4 !dbg !18147 !ctir !1287 {
entry:
  %retval = alloca i32, align 4
  %timespec.addr = alloca %struct.timespec*, align 8
  %result = alloca i32, align 4, !ctir !7
  %utime_omit_count = alloca i32, align 4, !ctir !7
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !18148, metadata !DIExpression()), !dbg !18149
  call void @llvm.dbg.declare(metadata i32* %result, metadata !18150, metadata !DIExpression()), !dbg !18151
  store i32 0, i32* %result, align 4, !dbg !18151, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %utime_omit_count, metadata !18152, metadata !DIExpression()), !dbg !18153
  store i32 0, i32* %utime_omit_count, align 4, !dbg !18153, !tbaa !2632
  %0 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18154, !tbaa !2645
  %arrayidx = getelementptr inbounds %struct.timespec, %struct.timespec* %0, i64 0, !dbg !18154, !ctir !1276
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx, i32 0, i32 1, !dbg !18156, !ctir !1271
  %1 = load i64, i64* %tv_nsec, align 8, !dbg !18156, !tbaa !16995, !ctir !296
  %cmp = icmp ne i64 %1, 1073741823, !dbg !18157
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !18158

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18159, !tbaa !2645
  %arrayidx1 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !18159, !ctir !1276
  %tv_nsec2 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx1, i32 0, i32 1, !dbg !18160, !ctir !1271
  %3 = load i64, i64* %tv_nsec2, align 8, !dbg !18160, !tbaa !16995, !ctir !296
  %cmp3 = icmp ne i64 %3, 1073741822, !dbg !18161
  br i1 %cmp3, label %land.lhs.true4, label %lor.lhs.false, !dbg !18162

land.lhs.true4:                                   ; preds = %land.lhs.true
  %4 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18163, !tbaa !2645
  %arrayidx5 = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i64 0, !dbg !18163, !ctir !1276
  %tv_nsec6 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx5, i32 0, i32 1, !dbg !18164, !ctir !1271
  %5 = load i64, i64* %tv_nsec6, align 8, !dbg !18164, !tbaa !16995, !ctir !296
  %cmp7 = icmp sle i64 0, %5, !dbg !18165
  br i1 %cmp7, label %land.lhs.true8, label %if.then, !dbg !18166

land.lhs.true8:                                   ; preds = %land.lhs.true4
  %6 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18167, !tbaa !2645
  %arrayidx9 = getelementptr inbounds %struct.timespec, %struct.timespec* %6, i64 0, !dbg !18167, !ctir !1276
  %tv_nsec10 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx9, i32 0, i32 1, !dbg !18168, !ctir !1271
  %7 = load i64, i64* %tv_nsec10, align 8, !dbg !18168, !tbaa !16995, !ctir !296
  %cmp11 = icmp slt i64 %7, 1000000000, !dbg !18169
  br i1 %cmp11, label %lor.lhs.false, label %if.then, !dbg !18170

lor.lhs.false:                                    ; preds = %land.lhs.true8, %land.lhs.true, %entry
  %8 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18171, !tbaa !2645
  %arrayidx12 = getelementptr inbounds %struct.timespec, %struct.timespec* %8, i64 1, !dbg !18171, !ctir !1276
  %tv_nsec13 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx12, i32 0, i32 1, !dbg !18172, !ctir !1271
  %9 = load i64, i64* %tv_nsec13, align 8, !dbg !18172, !tbaa !16995, !ctir !296
  %cmp14 = icmp ne i64 %9, 1073741823, !dbg !18173
  br i1 %cmp14, label %land.lhs.true15, label %if.end, !dbg !18174

land.lhs.true15:                                  ; preds = %lor.lhs.false
  %10 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18175, !tbaa !2645
  %arrayidx16 = getelementptr inbounds %struct.timespec, %struct.timespec* %10, i64 1, !dbg !18175, !ctir !1276
  %tv_nsec17 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx16, i32 0, i32 1, !dbg !18176, !ctir !1271
  %11 = load i64, i64* %tv_nsec17, align 8, !dbg !18176, !tbaa !16995, !ctir !296
  %cmp18 = icmp ne i64 %11, 1073741822, !dbg !18177
  br i1 %cmp18, label %land.lhs.true19, label %if.end, !dbg !18178

land.lhs.true19:                                  ; preds = %land.lhs.true15
  %12 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18179, !tbaa !2645
  %arrayidx20 = getelementptr inbounds %struct.timespec, %struct.timespec* %12, i64 1, !dbg !18179, !ctir !1276
  %tv_nsec21 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx20, i32 0, i32 1, !dbg !18180, !ctir !1271
  %13 = load i64, i64* %tv_nsec21, align 8, !dbg !18180, !tbaa !16995, !ctir !296
  %cmp22 = icmp sle i64 0, %13, !dbg !18181
  br i1 %cmp22, label %land.lhs.true23, label %if.then, !dbg !18182

land.lhs.true23:                                  ; preds = %land.lhs.true19
  %14 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18183, !tbaa !2645
  %arrayidx24 = getelementptr inbounds %struct.timespec, %struct.timespec* %14, i64 1, !dbg !18183, !ctir !1276
  %tv_nsec25 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx24, i32 0, i32 1, !dbg !18184, !ctir !1271
  %15 = load i64, i64* %tv_nsec25, align 8, !dbg !18184, !tbaa !16995, !ctir !296
  %cmp26 = icmp slt i64 %15, 1000000000, !dbg !18185
  br i1 %cmp26, label %if.end, label %if.then, !dbg !18186

if.then:                                          ; preds = %land.lhs.true23, %land.lhs.true19, %land.lhs.true8, %land.lhs.true4
  %call = call i32* @__errno_location() #16, !dbg !18187
  store i32 22, i32* %call, align 4, !dbg !18189, !tbaa !2632, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !18190
  br label %return, !dbg !18190

if.end:                                           ; preds = %land.lhs.true23, %land.lhs.true15, %lor.lhs.false
  %16 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18191, !tbaa !2645
  %arrayidx27 = getelementptr inbounds %struct.timespec, %struct.timespec* %16, i64 0, !dbg !18191, !ctir !1276
  %tv_nsec28 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx27, i32 0, i32 1, !dbg !18193, !ctir !1271
  %17 = load i64, i64* %tv_nsec28, align 8, !dbg !18193, !tbaa !16995, !ctir !296
  %cmp29 = icmp eq i64 %17, 1073741823, !dbg !18194
  br i1 %cmp29, label %if.then34, label %lor.lhs.false30, !dbg !18195

lor.lhs.false30:                                  ; preds = %if.end
  %18 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18196, !tbaa !2645
  %arrayidx31 = getelementptr inbounds %struct.timespec, %struct.timespec* %18, i64 0, !dbg !18196, !ctir !1276
  %tv_nsec32 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx31, i32 0, i32 1, !dbg !18197, !ctir !1271
  %19 = load i64, i64* %tv_nsec32, align 8, !dbg !18197, !tbaa !16995, !ctir !296
  %cmp33 = icmp eq i64 %19, 1073741822, !dbg !18198
  br i1 %cmp33, label %if.then34, label %if.end41, !dbg !18199

if.then34:                                        ; preds = %lor.lhs.false30, %if.end
  %20 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18200, !tbaa !2645
  %arrayidx35 = getelementptr inbounds %struct.timespec, %struct.timespec* %20, i64 0, !dbg !18200, !ctir !1276
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx35, i32 0, i32 0, !dbg !18202, !ctir !1271
  store i64 0, i64* %tv_sec, align 8, !dbg !18203, !tbaa !16992, !ctir !294
  store i32 1, i32* %result, align 4, !dbg !18204, !tbaa !2632
  %21 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18205, !tbaa !2645
  %arrayidx36 = getelementptr inbounds %struct.timespec, %struct.timespec* %21, i64 0, !dbg !18205, !ctir !1276
  %tv_nsec37 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx36, i32 0, i32 1, !dbg !18207, !ctir !1271
  %22 = load i64, i64* %tv_nsec37, align 8, !dbg !18207, !tbaa !16995, !ctir !296
  %cmp38 = icmp eq i64 %22, 1073741822, !dbg !18208
  br i1 %cmp38, label %if.then39, label %if.end40, !dbg !18209

if.then39:                                        ; preds = %if.then34
  %23 = load i32, i32* %utime_omit_count, align 4, !dbg !18210, !tbaa !2632
  %inc = add nsw i32 %23, 1, !dbg !18210
  store i32 %inc, i32* %utime_omit_count, align 4, !dbg !18210, !tbaa !2632
  br label %if.end40, !dbg !18211

if.end40:                                         ; preds = %if.then39, %if.then34
  br label %if.end41, !dbg !18212

if.end41:                                         ; preds = %if.end40, %lor.lhs.false30
  %24 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18213, !tbaa !2645
  %arrayidx42 = getelementptr inbounds %struct.timespec, %struct.timespec* %24, i64 1, !dbg !18213, !ctir !1276
  %tv_nsec43 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx42, i32 0, i32 1, !dbg !18215, !ctir !1271
  %25 = load i64, i64* %tv_nsec43, align 8, !dbg !18215, !tbaa !16995, !ctir !296
  %cmp44 = icmp eq i64 %25, 1073741823, !dbg !18216
  br i1 %cmp44, label %if.then49, label %lor.lhs.false45, !dbg !18217

lor.lhs.false45:                                  ; preds = %if.end41
  %26 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18218, !tbaa !2645
  %arrayidx46 = getelementptr inbounds %struct.timespec, %struct.timespec* %26, i64 1, !dbg !18218, !ctir !1276
  %tv_nsec47 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx46, i32 0, i32 1, !dbg !18219, !ctir !1271
  %27 = load i64, i64* %tv_nsec47, align 8, !dbg !18219, !tbaa !16995, !ctir !296
  %cmp48 = icmp eq i64 %27, 1073741822, !dbg !18220
  br i1 %cmp48, label %if.then49, label %if.end58, !dbg !18221

if.then49:                                        ; preds = %lor.lhs.false45, %if.end41
  %28 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18222, !tbaa !2645
  %arrayidx50 = getelementptr inbounds %struct.timespec, %struct.timespec* %28, i64 1, !dbg !18222, !ctir !1276
  %tv_sec51 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx50, i32 0, i32 0, !dbg !18224, !ctir !1271
  store i64 0, i64* %tv_sec51, align 8, !dbg !18225, !tbaa !16992, !ctir !294
  store i32 1, i32* %result, align 4, !dbg !18226, !tbaa !2632
  %29 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18227, !tbaa !2645
  %arrayidx52 = getelementptr inbounds %struct.timespec, %struct.timespec* %29, i64 1, !dbg !18227, !ctir !1276
  %tv_nsec53 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx52, i32 0, i32 1, !dbg !18229, !ctir !1271
  %30 = load i64, i64* %tv_nsec53, align 8, !dbg !18229, !tbaa !16995, !ctir !296
  %cmp54 = icmp eq i64 %30, 1073741822, !dbg !18230
  br i1 %cmp54, label %if.then55, label %if.end57, !dbg !18231

if.then55:                                        ; preds = %if.then49
  %31 = load i32, i32* %utime_omit_count, align 4, !dbg !18232, !tbaa !2632
  %inc56 = add nsw i32 %31, 1, !dbg !18232
  store i32 %inc56, i32* %utime_omit_count, align 4, !dbg !18232, !tbaa !2632
  br label %if.end57, !dbg !18233

if.end57:                                         ; preds = %if.then55, %if.then49
  br label %if.end58, !dbg !18234

if.end58:                                         ; preds = %if.end57, %lor.lhs.false45
  %32 = load i32, i32* %result, align 4, !dbg !18235, !tbaa !2632
  %33 = load i32, i32* %utime_omit_count, align 4, !dbg !18236, !tbaa !2632
  %cmp59 = icmp eq i32 %33, 1, !dbg !18237
  %conv = zext i1 %cmp59 to i32, !dbg !18237
  %add = add nsw i32 %32, %conv, !dbg !18238
  store i32 %add, i32* %retval, align 4, !dbg !18239
  br label %return, !dbg !18239

return:                                           ; preds = %if.end58, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !18240
  ret i32 %34, !dbg !18240
}

; Function Attrs: nounwind
declare dso_local i32 @futimens(i32, %struct.timespec*) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal zeroext i1 @update_timespec(%struct.stat* %statbuf, %struct.timespec** %ts) #4 !dbg !18241 !ctir !1289 {
entry:
  %retval = alloca i1, align 1
  %statbuf.addr = alloca %struct.stat*, align 8
  %ts.addr = alloca %struct.timespec**, align 8
  %timespec = alloca %struct.timespec*, align 8, !ctir !1276
  %tmp = alloca %struct.timespec, align 8
  %tmp30 = alloca %struct.timespec, align 8
  store %struct.stat* %statbuf, %struct.stat** %statbuf.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.stat** %statbuf.addr, metadata !18242, metadata !DIExpression()), !dbg !18243
  store %struct.timespec** %ts, %struct.timespec*** %ts.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.timespec*** %ts.addr, metadata !18244, metadata !DIExpression()), !dbg !18245
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec, metadata !18246, metadata !DIExpression()), !dbg !18247
  %0 = load %struct.timespec**, %struct.timespec*** %ts.addr, align 8, !dbg !18248, !tbaa !2645
  %1 = load %struct.timespec*, %struct.timespec** %0, align 8, !dbg !18249, !tbaa !2645, !ctir !1276
  store %struct.timespec* %1, %struct.timespec** %timespec, align 8, !dbg !18247, !tbaa !2645
  %2 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18250, !tbaa !2645
  %arrayidx = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !18250, !ctir !1276
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx, i32 0, i32 1, !dbg !18252, !ctir !1271
  %3 = load i64, i64* %tv_nsec, align 8, !dbg !18252, !tbaa !16995, !ctir !296
  %cmp = icmp eq i64 %3, 1073741822, !dbg !18253
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !18254

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18255, !tbaa !2645
  %arrayidx1 = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i64 1, !dbg !18255, !ctir !1276
  %tv_nsec2 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx1, i32 0, i32 1, !dbg !18256, !ctir !1271
  %5 = load i64, i64* %tv_nsec2, align 8, !dbg !18256, !tbaa !16995, !ctir !296
  %cmp3 = icmp eq i64 %5, 1073741822, !dbg !18257
  br i1 %cmp3, label %if.then, label %if.end, !dbg !18258

if.then:                                          ; preds = %land.lhs.true
  store i1 true, i1* %retval, align 1, !dbg !18259
  br label %return, !dbg !18259

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18260, !tbaa !2645
  %arrayidx4 = getelementptr inbounds %struct.timespec, %struct.timespec* %6, i64 0, !dbg !18260, !ctir !1276
  %tv_nsec5 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx4, i32 0, i32 1, !dbg !18262, !ctir !1271
  %7 = load i64, i64* %tv_nsec5, align 8, !dbg !18262, !tbaa !16995, !ctir !296
  %cmp6 = icmp eq i64 %7, 1073741823, !dbg !18263
  br i1 %cmp6, label %land.lhs.true7, label %if.end12, !dbg !18264

land.lhs.true7:                                   ; preds = %if.end
  %8 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18265, !tbaa !2645
  %arrayidx8 = getelementptr inbounds %struct.timespec, %struct.timespec* %8, i64 1, !dbg !18265, !ctir !1276
  %tv_nsec9 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx8, i32 0, i32 1, !dbg !18266, !ctir !1271
  %9 = load i64, i64* %tv_nsec9, align 8, !dbg !18266, !tbaa !16995, !ctir !296
  %cmp10 = icmp eq i64 %9, 1073741823, !dbg !18267
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !18268

if.then11:                                        ; preds = %land.lhs.true7
  %10 = load %struct.timespec**, %struct.timespec*** %ts.addr, align 8, !dbg !18269, !tbaa !2645
  store %struct.timespec* null, %struct.timespec** %10, align 8, !dbg !18271, !tbaa !2645, !ctir !1276
  store i1 false, i1* %retval, align 1, !dbg !18272
  br label %return, !dbg !18272

if.end12:                                         ; preds = %land.lhs.true7, %if.end
  %11 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18273, !tbaa !2645
  %arrayidx13 = getelementptr inbounds %struct.timespec, %struct.timespec* %11, i64 0, !dbg !18273, !ctir !1276
  %tv_nsec14 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx13, i32 0, i32 1, !dbg !18275, !ctir !1271
  %12 = load i64, i64* %tv_nsec14, align 8, !dbg !18275, !tbaa !16995, !ctir !296
  %cmp15 = icmp eq i64 %12, 1073741822, !dbg !18276
  br i1 %cmp15, label %if.then16, label %if.else, !dbg !18277

if.then16:                                        ; preds = %if.end12
  %13 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18278, !tbaa !2645
  %arrayidx17 = getelementptr inbounds %struct.timespec, %struct.timespec* %13, i64 0, !dbg !18278, !ctir !1276
  %14 = load %struct.stat*, %struct.stat** %statbuf.addr, align 8, !dbg !18279, !tbaa !2645
  %call = call { i64, i64 } @get_stat_atime(%struct.stat* %14) #14, !dbg !18280
  %15 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !18280
  %16 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i32 0, i32 0, !dbg !18280
  %17 = extractvalue { i64, i64 } %call, 0, !dbg !18280
  store i64 %17, i64* %16, align 8, !dbg !18280
  %18 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %15, i32 0, i32 1, !dbg !18280
  %19 = extractvalue { i64, i64 } %call, 1, !dbg !18280
  store i64 %19, i64* %18, align 8, !dbg !18280
  %20 = bitcast %struct.timespec* %arrayidx17 to i8*, !dbg !18280
  %21 = bitcast %struct.timespec* %tmp to i8*, !dbg !18280
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 16, i1 false), !dbg !18280, !tbaa.struct !3795
  br label %if.end24, !dbg !18278

if.else:                                          ; preds = %if.end12
  %22 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18281, !tbaa !2645
  %arrayidx18 = getelementptr inbounds %struct.timespec, %struct.timespec* %22, i64 0, !dbg !18281, !ctir !1276
  %tv_nsec19 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx18, i32 0, i32 1, !dbg !18283, !ctir !1271
  %23 = load i64, i64* %tv_nsec19, align 8, !dbg !18283, !tbaa !16995, !ctir !296
  %cmp20 = icmp eq i64 %23, 1073741823, !dbg !18284
  br i1 %cmp20, label %if.then21, label %if.end23, !dbg !18285

if.then21:                                        ; preds = %if.else
  %24 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18286, !tbaa !2645
  %arrayidx22 = getelementptr inbounds %struct.timespec, %struct.timespec* %24, i64 0, !dbg !18286, !ctir !1276
  call void @gettime(%struct.timespec* %arrayidx22), !dbg !18287
  br label %if.end23, !dbg !18287

if.end23:                                         ; preds = %if.then21, %if.else
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then16
  %25 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18288, !tbaa !2645
  %arrayidx25 = getelementptr inbounds %struct.timespec, %struct.timespec* %25, i64 1, !dbg !18288, !ctir !1276
  %tv_nsec26 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx25, i32 0, i32 1, !dbg !18290, !ctir !1271
  %26 = load i64, i64* %tv_nsec26, align 8, !dbg !18290, !tbaa !16995, !ctir !296
  %cmp27 = icmp eq i64 %26, 1073741822, !dbg !18291
  br i1 %cmp27, label %if.then28, label %if.else32, !dbg !18292

if.then28:                                        ; preds = %if.end24
  %27 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18293, !tbaa !2645
  %arrayidx29 = getelementptr inbounds %struct.timespec, %struct.timespec* %27, i64 1, !dbg !18293, !ctir !1276
  %28 = load %struct.stat*, %struct.stat** %statbuf.addr, align 8, !dbg !18294, !tbaa !2645
  %call31 = call { i64, i64 } @get_stat_mtime(%struct.stat* %28) #14, !dbg !18295
  %29 = bitcast %struct.timespec* %tmp30 to { i64, i64 }*, !dbg !18295
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 0, !dbg !18295
  %31 = extractvalue { i64, i64 } %call31, 0, !dbg !18295
  store i64 %31, i64* %30, align 8, !dbg !18295
  %32 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %29, i32 0, i32 1, !dbg !18295
  %33 = extractvalue { i64, i64 } %call31, 1, !dbg !18295
  store i64 %33, i64* %32, align 8, !dbg !18295
  %34 = bitcast %struct.timespec* %arrayidx29 to i8*, !dbg !18295
  %35 = bitcast %struct.timespec* %tmp30 to i8*, !dbg !18295
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 16, i1 false), !dbg !18295, !tbaa.struct !3795
  br label %if.end39, !dbg !18293

if.else32:                                        ; preds = %if.end24
  %36 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18296, !tbaa !2645
  %arrayidx33 = getelementptr inbounds %struct.timespec, %struct.timespec* %36, i64 1, !dbg !18296, !ctir !1276
  %tv_nsec34 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx33, i32 0, i32 1, !dbg !18298, !ctir !1271
  %37 = load i64, i64* %tv_nsec34, align 8, !dbg !18298, !tbaa !16995, !ctir !296
  %cmp35 = icmp eq i64 %37, 1073741823, !dbg !18299
  br i1 %cmp35, label %if.then36, label %if.end38, !dbg !18300

if.then36:                                        ; preds = %if.else32
  %38 = load %struct.timespec*, %struct.timespec** %timespec, align 8, !dbg !18301, !tbaa !2645
  %arrayidx37 = getelementptr inbounds %struct.timespec, %struct.timespec* %38, i64 1, !dbg !18301, !ctir !1276
  call void @gettime(%struct.timespec* %arrayidx37), !dbg !18302
  br label %if.end38, !dbg !18302

if.end38:                                         ; preds = %if.then36, %if.else32
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then28
  store i1 false, i1* %retval, align 1, !dbg !18303
  br label %return, !dbg !18303

return:                                           ; preds = %if.end39, %if.then11, %if.then
  %39 = load i1, i1* %retval, align 1, !dbg !18304
  ret i1 %39, !dbg !18304
}

; Function Attrs: nounwind
declare dso_local i32 @futimesat(i32, i8*, %struct.timespec*) #2

; Function Attrs: nounwind
declare dso_local i32 @utimes(i8*, %struct.timespec*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @utimens(i8* %file, %struct.timespec* %timespec) #4 !dbg !18305 !ctir !1285 {
entry:
  %file.addr = alloca i8*, align 8
  %timespec.addr = alloca %struct.timespec*, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !18306, metadata !DIExpression()), !dbg !18307
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !18308, metadata !DIExpression()), !dbg !18309
  %0 = load i8*, i8** %file.addr, align 8, !dbg !18310, !tbaa !2645
  %1 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18311, !tbaa !2645
  %call = call i32 @fdutimens(i32 -1, i8* %0, %struct.timespec* %1), !dbg !18312
  ret i32 %call, !dbg !18313
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lutimens(i8* %file, %struct.timespec* %timespec) #4 !dbg !18314 !ctir !1285 {
entry:
  %retval = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %timespec.addr = alloca %struct.timespec*, align 8
  %adjusted_timespec = alloca [2 x %struct.timespec], align 16, !ctir !1275
  %ts = alloca %struct.timespec*, align 8, !ctir !1276
  %adjustment_needed = alloca i32, align 4, !ctir !7
  %st = alloca %struct.stat, align 8, !ctir !1293
  %result = alloca i32, align 4, !ctir !7
  %tmp = alloca %struct.timespec, align 8
  %tmp25 = alloca %struct.timespec, align 8
  store i8* %file, i8** %file.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !18315, metadata !DIExpression()), !dbg !18316
  store %struct.timespec* %timespec, %struct.timespec** %timespec.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.timespec** %timespec.addr, metadata !18317, metadata !DIExpression()), !dbg !18318
  call void @llvm.dbg.declare(metadata [2 x %struct.timespec]* %adjusted_timespec, metadata !18319, metadata !DIExpression()), !dbg !18320
  call void @llvm.dbg.declare(metadata %struct.timespec** %ts, metadata !18321, metadata !DIExpression()), !dbg !18322
  %0 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18323, !tbaa !2645
  %tobool = icmp ne %struct.timespec* %0, null, !dbg !18323
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !18323

cond.true:                                        ; preds = %entry
  %arraydecay = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !18324
  br label %cond.end, !dbg !18323

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !18323

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.timespec* [ %arraydecay, %cond.true ], [ null, %cond.false ], !dbg !18323
  store %struct.timespec* %cond, %struct.timespec** %ts, align 8, !dbg !18322, !tbaa !2645
  call void @llvm.dbg.declare(metadata i32* %adjustment_needed, metadata !18325, metadata !DIExpression()), !dbg !18326
  store i32 0, i32* %adjustment_needed, align 4, !dbg !18326, !tbaa !2632
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !18327, metadata !DIExpression()), !dbg !18328
  %1 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18329, !tbaa !2645
  %tobool1 = icmp ne %struct.timespec* %1, null, !dbg !18329
  br i1 %tobool1, label %if.then, label %if.end, !dbg !18331

if.then:                                          ; preds = %cond.end
  %arrayidx = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0, !dbg !18332, !ctir !1275
  %2 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18334, !tbaa !2645
  %arrayidx2 = getelementptr inbounds %struct.timespec, %struct.timespec* %2, i64 0, !dbg !18334, !ctir !1269
  %3 = bitcast %struct.timespec* %arrayidx to i8*, !dbg !18334
  %4 = bitcast %struct.timespec* %arrayidx2 to i8*, !dbg !18334
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %3, i8* align 8 %4, i64 16, i1 false), !dbg !18334, !tbaa.struct !3795
  %arrayidx3 = getelementptr inbounds [2 x %struct.timespec], [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 1, !dbg !18335, !ctir !1275
  %5 = load %struct.timespec*, %struct.timespec** %timespec.addr, align 8, !dbg !18336, !tbaa !2645
  %arrayidx4 = getelementptr inbounds %struct.timespec, %struct.timespec* %5, i64 1, !dbg !18336, !ctir !1269
  %6 = bitcast %struct.timespec* %arrayidx3 to i8*, !dbg !18336
  %7 = bitcast %struct.timespec* %arrayidx4 to i8*, !dbg !18336
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %6, i8* align 8 %7, i64 16, i1 false), !dbg !18336, !tbaa.struct !3795
  %8 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18337, !tbaa !2645
  %call = call i32 @validate_timespec(%struct.timespec* %8), !dbg !18338
  store i32 %call, i32* %adjustment_needed, align 4, !dbg !18339, !tbaa !2632
  br label %if.end, !dbg !18340

if.end:                                           ; preds = %if.then, %cond.end
  %9 = load i32, i32* %adjustment_needed, align 4, !dbg !18341, !tbaa !2632
  %cmp = icmp slt i32 %9, 0, !dbg !18343
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !18344

if.then5:                                         ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !18345
  br label %return, !dbg !18345

if.end6:                                          ; preds = %if.end
  %10 = load i32, i32* @lutimensat_works_really, align 4, !dbg !18346, !tbaa !2632
  %cmp7 = icmp sle i32 0, %10, !dbg !18348
  br i1 %cmp7, label %if.then8, label %if.end40, !dbg !18349

if.then8:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata i32* %result, metadata !18350, metadata !DIExpression()), !dbg !18352
  %11 = load i32, i32* %adjustment_needed, align 4, !dbg !18353, !tbaa !2632
  %cmp9 = icmp eq i32 %11, 2, !dbg !18355
  br i1 %cmp9, label %if.then10, label %if.end29, !dbg !18356

if.then10:                                        ; preds = %if.then8
  %12 = load i8*, i8** %file.addr, align 8, !dbg !18357, !tbaa !2645
  %call11 = call i32 @lstat(i8* %12, %struct.stat* %st) #9, !dbg !18360
  %tobool12 = icmp ne i32 %call11, 0, !dbg !18360
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !18361

if.then13:                                        ; preds = %if.then10
  store i32 -1, i32* %retval, align 4, !dbg !18362
  br label %return, !dbg !18362

if.end14:                                         ; preds = %if.then10
  %13 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18363, !tbaa !2645
  %arrayidx15 = getelementptr inbounds %struct.timespec, %struct.timespec* %13, i64 0, !dbg !18363, !ctir !1276
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx15, i32 0, i32 1, !dbg !18365, !ctir !1271
  %14 = load i64, i64* %tv_nsec, align 8, !dbg !18365, !tbaa !16995, !ctir !296
  %cmp16 = icmp eq i64 %14, 1073741822, !dbg !18366
  br i1 %cmp16, label %if.then17, label %if.else, !dbg !18367

if.then17:                                        ; preds = %if.end14
  %15 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18368, !tbaa !2645
  %arrayidx18 = getelementptr inbounds %struct.timespec, %struct.timespec* %15, i64 0, !dbg !18368, !ctir !1276
  %call19 = call { i64, i64 } @get_stat_atime(%struct.stat* %st) #14, !dbg !18369
  %16 = bitcast %struct.timespec* %tmp to { i64, i64 }*, !dbg !18369
  %17 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 0, !dbg !18369
  %18 = extractvalue { i64, i64 } %call19, 0, !dbg !18369
  store i64 %18, i64* %17, align 8, !dbg !18369
  %19 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %16, i32 0, i32 1, !dbg !18369
  %20 = extractvalue { i64, i64 } %call19, 1, !dbg !18369
  store i64 %20, i64* %19, align 8, !dbg !18369
  %21 = bitcast %struct.timespec* %arrayidx18 to i8*, !dbg !18369
  %22 = bitcast %struct.timespec* %tmp to i8*, !dbg !18369
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 16, i1 false), !dbg !18369, !tbaa.struct !3795
  br label %if.end28, !dbg !18368

if.else:                                          ; preds = %if.end14
  %23 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18370, !tbaa !2645
  %arrayidx20 = getelementptr inbounds %struct.timespec, %struct.timespec* %23, i64 1, !dbg !18370, !ctir !1276
  %tv_nsec21 = getelementptr inbounds %struct.timespec, %struct.timespec* %arrayidx20, i32 0, i32 1, !dbg !18372, !ctir !1271
  %24 = load i64, i64* %tv_nsec21, align 8, !dbg !18372, !tbaa !16995, !ctir !296
  %cmp22 = icmp eq i64 %24, 1073741822, !dbg !18373
  br i1 %cmp22, label %if.then23, label %if.end27, !dbg !18374

if.then23:                                        ; preds = %if.else
  %25 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18375, !tbaa !2645
  %arrayidx24 = getelementptr inbounds %struct.timespec, %struct.timespec* %25, i64 1, !dbg !18375, !ctir !1276
  %call26 = call { i64, i64 } @get_stat_mtime(%struct.stat* %st) #14, !dbg !18376
  %26 = bitcast %struct.timespec* %tmp25 to { i64, i64 }*, !dbg !18376
  %27 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i32 0, i32 0, !dbg !18376
  %28 = extractvalue { i64, i64 } %call26, 0, !dbg !18376
  store i64 %28, i64* %27, align 8, !dbg !18376
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %26, i32 0, i32 1, !dbg !18376
  %30 = extractvalue { i64, i64 } %call26, 1, !dbg !18376
  store i64 %30, i64* %29, align 8, !dbg !18376
  %31 = bitcast %struct.timespec* %arrayidx24 to i8*, !dbg !18376
  %32 = bitcast %struct.timespec* %tmp25 to i8*, !dbg !18376
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 16, i1 false), !dbg !18376, !tbaa.struct !3795
  br label %if.end27, !dbg !18375

if.end27:                                         ; preds = %if.then23, %if.else
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then17
  %33 = load i32, i32* %adjustment_needed, align 4, !dbg !18377, !tbaa !2632
  %inc = add nsw i32 %33, 1, !dbg !18377
  store i32 %inc, i32* %adjustment_needed, align 4, !dbg !18377, !tbaa !2632
  br label %if.end29, !dbg !18378

if.end29:                                         ; preds = %if.end28, %if.then8
  %34 = load i8*, i8** %file.addr, align 8, !dbg !18379, !tbaa !2645
  %35 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18380, !tbaa !2645
  %call30 = call i32 @utimensat(i32 -100, i8* %34, %struct.timespec* %35, i32 256) #9, !dbg !18381
  store i32 %call30, i32* %result, align 4, !dbg !18382, !tbaa !2632
  %36 = load i32, i32* %result, align 4, !dbg !18383, !tbaa !2632
  %cmp31 = icmp slt i32 0, %36, !dbg !18385
  br i1 %cmp31, label %if.then32, label %if.end34, !dbg !18386

if.then32:                                        ; preds = %if.end29
  %call33 = call i32* @__errno_location() #16, !dbg !18387
  store i32 38, i32* %call33, align 4, !dbg !18388, !tbaa !2632, !ctir !7
  br label %if.end34, !dbg !18387

if.end34:                                         ; preds = %if.then32, %if.end29
  %37 = load i32, i32* %result, align 4, !dbg !18389, !tbaa !2632
  %cmp35 = icmp eq i32 %37, 0, !dbg !18391
  br i1 %cmp35, label %if.then38, label %lor.lhs.false, !dbg !18392

lor.lhs.false:                                    ; preds = %if.end34
  %call36 = call i32* @__errno_location() #16, !dbg !18393
  %38 = load i32, i32* %call36, align 4, !dbg !18393, !tbaa !2632, !ctir !7
  %cmp37 = icmp ne i32 %38, 38, !dbg !18394
  br i1 %cmp37, label %if.then38, label %if.end39, !dbg !18395

if.then38:                                        ; preds = %lor.lhs.false, %if.end34
  store i32 1, i32* @utimensat_works_really, align 4, !dbg !18396, !tbaa !2632
  store i32 1, i32* @lutimensat_works_really, align 4, !dbg !18398, !tbaa !2632
  %39 = load i32, i32* %result, align 4, !dbg !18399, !tbaa !2632
  store i32 %39, i32* %retval, align 4, !dbg !18400
  br label %return, !dbg !18400

if.end39:                                         ; preds = %lor.lhs.false
  br label %if.end40, !dbg !18401

if.end40:                                         ; preds = %if.end39, %if.end6
  store i32 -1, i32* @lutimensat_works_really, align 4, !dbg !18402, !tbaa !2632
  %40 = load i32, i32* %adjustment_needed, align 4, !dbg !18403, !tbaa !2632
  %tobool41 = icmp ne i32 %40, 0, !dbg !18403
  br i1 %tobool41, label %if.then42, label %if.end53, !dbg !18405

if.then42:                                        ; preds = %if.end40
  %41 = load i32, i32* %adjustment_needed, align 4, !dbg !18406, !tbaa !2632
  %cmp43 = icmp ne i32 %41, 3, !dbg !18409
  br i1 %cmp43, label %land.lhs.true, label %if.end47, !dbg !18410

land.lhs.true:                                    ; preds = %if.then42
  %42 = load i8*, i8** %file.addr, align 8, !dbg !18411, !tbaa !2645
  %call44 = call i32 @lstat(i8* %42, %struct.stat* %st) #9, !dbg !18412
  %tobool45 = icmp ne i32 %call44, 0, !dbg !18412
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !18413

if.then46:                                        ; preds = %land.lhs.true
  store i32 -1, i32* %retval, align 4, !dbg !18414
  br label %return, !dbg !18414

if.end47:                                         ; preds = %land.lhs.true, %if.then42
  %43 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18415, !tbaa !2645
  %tobool48 = icmp ne %struct.timespec* %43, null, !dbg !18415
  br i1 %tobool48, label %land.lhs.true49, label %if.end52, !dbg !18417

land.lhs.true49:                                  ; preds = %if.end47
  %call50 = call zeroext i1 @update_timespec(%struct.stat* %st, %struct.timespec** %ts), !dbg !18418
  br i1 %call50, label %if.then51, label %if.end52, !dbg !18419

if.then51:                                        ; preds = %land.lhs.true49
  store i32 0, i32* %retval, align 4, !dbg !18420
  br label %return, !dbg !18420

if.end52:                                         ; preds = %land.lhs.true49, %if.end47
  br label %if.end53, !dbg !18421

if.end53:                                         ; preds = %if.end52, %if.end40
  %44 = load i32, i32* %adjustment_needed, align 4, !dbg !18422, !tbaa !2632
  %tobool54 = icmp ne i32 %44, 0, !dbg !18422
  br i1 %tobool54, label %if.end59, label %land.lhs.true55, !dbg !18424

land.lhs.true55:                                  ; preds = %if.end53
  %45 = load i8*, i8** %file.addr, align 8, !dbg !18425, !tbaa !2645
  %call56 = call i32 @lstat(i8* %45, %struct.stat* %st) #9, !dbg !18426
  %tobool57 = icmp ne i32 %call56, 0, !dbg !18426
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !18427

if.then58:                                        ; preds = %land.lhs.true55
  store i32 -1, i32* %retval, align 4, !dbg !18428
  br label %return, !dbg !18428

if.end59:                                         ; preds = %land.lhs.true55, %if.end53
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !18429, !ctir !1293
  %46 = load i32, i32* %st_mode, align 8, !dbg !18429, !tbaa !2911, !ctir !140
  %and = and i32 %46, 61440, !dbg !18429
  %cmp60 = icmp eq i32 %and, 40960, !dbg !18429
  br i1 %cmp60, label %if.end63, label %if.then61, !dbg !18431

if.then61:                                        ; preds = %if.end59
  %47 = load i8*, i8** %file.addr, align 8, !dbg !18432, !tbaa !2645
  %48 = load %struct.timespec*, %struct.timespec** %ts, align 8, !dbg !18433, !tbaa !2645
  %call62 = call i32 @fdutimens(i32 -1, i8* %47, %struct.timespec* %48), !dbg !18434
  store i32 %call62, i32* %retval, align 4, !dbg !18435
  br label %return, !dbg !18435

if.end63:                                         ; preds = %if.end59
  %call64 = call i32* @__errno_location() #16, !dbg !18436
  store i32 38, i32* %call64, align 4, !dbg !18437, !tbaa !2632, !ctir !7
  store i32 -1, i32* %retval, align 4, !dbg !18438
  br label %return, !dbg !18438

return:                                           ; preds = %if.end63, %if.then61, %if.then58, %if.then51, %if.then46, %if.then38, %if.then13, %if.then5
  %49 = load i32, i32* %retval, align 4, !dbg !18439
  ret i32 %49, !dbg !18439
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @verror(i32 %status, i32 %errnum, i8* %format, %struct.__va_list_tag* %args) #4 !dbg !18440 !ctir !1928 {
entry:
  %status.addr = alloca i32, align 4
  %errnum.addr = alloca i32, align 4
  %format.addr = alloca i8*, align 8
  %args.addr = alloca %struct.__va_list_tag*, align 8
  store i32 %status, i32* %status.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !18442, metadata !DIExpression()), !dbg !18443
  store i32 %errnum, i32* %errnum.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %errnum.addr, metadata !18444, metadata !DIExpression()), !dbg !18445
  store i8* %format, i8** %format.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !18446, metadata !DIExpression()), !dbg !18447
  store %struct.__va_list_tag* %args, %struct.__va_list_tag** %args.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %args.addr, metadata !18448, metadata !DIExpression()), !dbg !18449
  %0 = load i32, i32* %status.addr, align 4, !dbg !18450, !tbaa !2632
  %1 = load i32, i32* %errnum.addr, align 4, !dbg !18451, !tbaa !2632
  %2 = load i8*, i8** %format.addr, align 8, !dbg !18452, !tbaa !2645
  %3 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !18453, !tbaa !2645
  call void @verror_at_line(i32 %0, i32 %1, i8* null, i32 0, i8* %2, %struct.__va_list_tag* %3), !dbg !18454
  ret void, !dbg !18455
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @verror_at_line(i32 %status, i32 %errnum, i8* %file, i32 %line_number, i8* %format, %struct.__va_list_tag* %args) #4 !dbg !18456 !ctir !1937 {
entry:
  %status.addr = alloca i32, align 4
  %errnum.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %line_number.addr = alloca i32, align 4
  %format.addr = alloca i8*, align 8
  %args.addr = alloca %struct.__va_list_tag*, align 8
  %message = alloca i8*, align 8, !ctir !9
  store i32 %status, i32* %status.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !18457, metadata !DIExpression()), !dbg !18458
  store i32 %errnum, i32* %errnum.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %errnum.addr, metadata !18459, metadata !DIExpression()), !dbg !18460
  store i8* %file, i8** %file.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !18461, metadata !DIExpression()), !dbg !18462
  store i32 %line_number, i32* %line_number.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %line_number.addr, metadata !18463, metadata !DIExpression()), !dbg !18464
  store i8* %format, i8** %format.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !18465, metadata !DIExpression()), !dbg !18466
  store %struct.__va_list_tag* %args, %struct.__va_list_tag** %args.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %args.addr, metadata !18467, metadata !DIExpression()), !dbg !18468
  call void @llvm.dbg.declare(metadata i8** %message, metadata !18469, metadata !DIExpression()), !dbg !18470
  %0 = load i8*, i8** %format.addr, align 8, !dbg !18471, !tbaa !2645
  %1 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !18472, !tbaa !2645
  %call = call i8* @xvasprintf(i8* %0, %struct.__va_list_tag* %1), !dbg !18473
  store i8* %call, i8** %message, align 8, !dbg !18470, !tbaa !2645
  %2 = load i8*, i8** %message, align 8, !dbg !18474, !tbaa !2645
  %tobool = icmp ne i8* %2, null, !dbg !18474
  br i1 %tobool, label %if.then, label %if.else3, !dbg !18476

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %file.addr, align 8, !dbg !18477, !tbaa !2645
  %tobool1 = icmp ne i8* %3, null, !dbg !18477
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !18480

if.then2:                                         ; preds = %if.then
  %4 = load i32, i32* %status.addr, align 4, !dbg !18481, !tbaa !2632
  %5 = load i32, i32* %errnum.addr, align 4, !dbg !18482, !tbaa !2632
  %6 = load i8*, i8** %file.addr, align 8, !dbg !18483, !tbaa !2645
  %7 = load i32, i32* %line_number.addr, align 4, !dbg !18484, !tbaa !2632
  %8 = load i8*, i8** %message, align 8, !dbg !18485, !tbaa !2645
  call void (i32, i32, i8*, i32, i8*, ...) @error_at_line(i32 %4, i32 %5, i8* %6, i32 %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.413, i64 0, i64 0), i8* %8), !dbg !18486
  br label %if.end, !dbg !18486

if.else:                                          ; preds = %if.then
  %9 = load i32, i32* %status.addr, align 4, !dbg !18487, !tbaa !2632
  %10 = load i32, i32* %errnum.addr, align 4, !dbg !18488, !tbaa !2632
  %11 = load i8*, i8** %message, align 8, !dbg !18489, !tbaa !2645
  call void (i32, i32, i8*, ...) @error(i32 %9, i32 %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.413, i64 0, i64 0), i8* %11), !dbg !18490
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  br label %if.end6, !dbg !18491

if.else3:                                         ; preds = %entry
  %call4 = call i32* @__errno_location() #16, !dbg !18492
  %12 = load i32, i32* %call4, align 4, !dbg !18492, !tbaa !2632, !ctir !7
  %call5 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.414, i64 0, i64 0)) #9, !dbg !18494
  call void (i32, i32, i8*, ...) @error(i32 0, i32 %12, i8* %call5), !dbg !18495
  call void @abort() #13, !dbg !18496
  unreachable, !dbg !18496

if.end6:                                          ; preds = %if.end
  %13 = load i8*, i8** %message, align 8, !dbg !18497, !tbaa !2645
  call void @free(i8* %13) #9, !dbg !18498
  ret void, !dbg !18499
}

declare dso_local void @error_at_line(i32, i32, i8*, i32, i8*, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_arn(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors, i64 %n_authors) #4 !dbg !18500 !ctir !1942 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca i8**, align 8
  %n_authors.addr = alloca i64, align 8
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !18502, metadata !DIExpression()), !dbg !18503
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !18504, metadata !DIExpression()), !dbg !18505
  store i8* %package, i8** %package.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !18506, metadata !DIExpression()), !dbg !18507
  store i8* %version, i8** %version.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !18508, metadata !DIExpression()), !dbg !18509
  store i8** %authors, i8*** %authors.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8*** %authors.addr, metadata !18510, metadata !DIExpression()), !dbg !18511
  store i64 %n_authors, i64* %n_authors.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %n_authors.addr, metadata !18512, metadata !DIExpression()), !dbg !18513
  %0 = load i8*, i8** %command_name.addr, align 8, !dbg !18514, !tbaa !2645
  %tobool = icmp ne i8* %0, null, !dbg !18514
  br i1 %tobool, label %if.then, label %if.else, !dbg !18516

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18517, !tbaa !2645
  %2 = load i8*, i8** %command_name.addr, align 8, !dbg !18518, !tbaa !2645
  %3 = load i8*, i8** %package.addr, align 8, !dbg !18519, !tbaa !2645
  %4 = load i8*, i8** %version.addr, align 8, !dbg !18520, !tbaa !2645
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.415, i64 0, i64 0), i8* %2, i8* %3, i8* %4), !dbg !18521
  br label %if.end, !dbg !18521

if.else:                                          ; preds = %entry
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18522, !tbaa !2645
  %6 = load i8*, i8** %package.addr, align 8, !dbg !18523, !tbaa !2645
  %7 = load i8*, i8** %version.addr, align 8, !dbg !18524, !tbaa !2645
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1.416, i64 0, i64 0), i8* %6, i8* %7), !dbg !18525
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18526, !tbaa !2645
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2.417, i64 0, i64 0)) #9, !dbg !18527
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* %call2, i32 2019), !dbg !18528
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([204 x i8], [204 x i8]* @.str.3.418, i64 0, i64 0)) #9, !dbg !18529
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18529, !tbaa !2645
  %call5 = call i32 @fputs_unlocked(i8* %call4, %struct._IO_FILE* %9), !dbg !18529
  %10 = load i64, i64* %n_authors.addr, align 8, !dbg !18530, !tbaa !3285
  switch i64 %10, label %sw.default [
    i64 0, label %sw.bb
    i64 1, label %sw.bb6
    i64 2, label %sw.bb9
    i64 3, label %sw.bb14
    i64 4, label %sw.bb20
    i64 5, label %sw.bb27
    i64 6, label %sw.bb35
    i64 7, label %sw.bb44
    i64 8, label %sw.bb54
    i64 9, label %sw.bb65
  ], !dbg !18531

sw.bb:                                            ; preds = %if.end
  br label %sw.epilog, !dbg !18532

sw.bb6:                                           ; preds = %if.end
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18534, !tbaa !2645
  %call7 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.419, i64 0, i64 0)) #9, !dbg !18535
  %12 = load i8**, i8*** %authors.addr, align 8, !dbg !18536, !tbaa !2645
  %arrayidx = getelementptr inbounds i8*, i8** %12, i64 0, !dbg !18536, !ctir !1344
  %13 = load i8*, i8** %arrayidx, align 8, !dbg !18536, !tbaa !2645
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* %call7, i8* %13), !dbg !18537
  br label %sw.epilog, !dbg !18538

sw.bb9:                                           ; preds = %if.end
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18539, !tbaa !2645
  %call10 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5.420, i64 0, i64 0)) #9, !dbg !18540
  %15 = load i8**, i8*** %authors.addr, align 8, !dbg !18541, !tbaa !2645
  %arrayidx11 = getelementptr inbounds i8*, i8** %15, i64 0, !dbg !18541, !ctir !1344
  %16 = load i8*, i8** %arrayidx11, align 8, !dbg !18541, !tbaa !2645
  %17 = load i8**, i8*** %authors.addr, align 8, !dbg !18542, !tbaa !2645
  %arrayidx12 = getelementptr inbounds i8*, i8** %17, i64 1, !dbg !18542, !ctir !1344
  %18 = load i8*, i8** %arrayidx12, align 8, !dbg !18542, !tbaa !2645
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* %call10, i8* %16, i8* %18), !dbg !18543
  br label %sw.epilog, !dbg !18544

sw.bb14:                                          ; preds = %if.end
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18545, !tbaa !2645
  %call15 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6.421, i64 0, i64 0)) #9, !dbg !18546
  %20 = load i8**, i8*** %authors.addr, align 8, !dbg !18547, !tbaa !2645
  %arrayidx16 = getelementptr inbounds i8*, i8** %20, i64 0, !dbg !18547, !ctir !1344
  %21 = load i8*, i8** %arrayidx16, align 8, !dbg !18547, !tbaa !2645
  %22 = load i8**, i8*** %authors.addr, align 8, !dbg !18548, !tbaa !2645
  %arrayidx17 = getelementptr inbounds i8*, i8** %22, i64 1, !dbg !18548, !ctir !1344
  %23 = load i8*, i8** %arrayidx17, align 8, !dbg !18548, !tbaa !2645
  %24 = load i8**, i8*** %authors.addr, align 8, !dbg !18549, !tbaa !2645
  %arrayidx18 = getelementptr inbounds i8*, i8** %24, i64 2, !dbg !18549, !ctir !1344
  %25 = load i8*, i8** %arrayidx18, align 8, !dbg !18549, !tbaa !2645
  %call19 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* %call15, i8* %21, i8* %23, i8* %25), !dbg !18550
  br label %sw.epilog, !dbg !18551

sw.bb20:                                          ; preds = %if.end
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18552, !tbaa !2645
  %call21 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7.422, i64 0, i64 0)) #9, !dbg !18553
  %27 = load i8**, i8*** %authors.addr, align 8, !dbg !18554, !tbaa !2645
  %arrayidx22 = getelementptr inbounds i8*, i8** %27, i64 0, !dbg !18554, !ctir !1344
  %28 = load i8*, i8** %arrayidx22, align 8, !dbg !18554, !tbaa !2645
  %29 = load i8**, i8*** %authors.addr, align 8, !dbg !18555, !tbaa !2645
  %arrayidx23 = getelementptr inbounds i8*, i8** %29, i64 1, !dbg !18555, !ctir !1344
  %30 = load i8*, i8** %arrayidx23, align 8, !dbg !18555, !tbaa !2645
  %31 = load i8**, i8*** %authors.addr, align 8, !dbg !18556, !tbaa !2645
  %arrayidx24 = getelementptr inbounds i8*, i8** %31, i64 2, !dbg !18556, !ctir !1344
  %32 = load i8*, i8** %arrayidx24, align 8, !dbg !18556, !tbaa !2645
  %33 = load i8**, i8*** %authors.addr, align 8, !dbg !18557, !tbaa !2645
  %arrayidx25 = getelementptr inbounds i8*, i8** %33, i64 3, !dbg !18557, !ctir !1344
  %34 = load i8*, i8** %arrayidx25, align 8, !dbg !18557, !tbaa !2645
  %call26 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %26, i8* %call21, i8* %28, i8* %30, i8* %32, i8* %34), !dbg !18558
  br label %sw.epilog, !dbg !18559

sw.bb27:                                          ; preds = %if.end
  %35 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18560, !tbaa !2645
  %call28 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8.423, i64 0, i64 0)) #9, !dbg !18561
  %36 = load i8**, i8*** %authors.addr, align 8, !dbg !18562, !tbaa !2645
  %arrayidx29 = getelementptr inbounds i8*, i8** %36, i64 0, !dbg !18562, !ctir !1344
  %37 = load i8*, i8** %arrayidx29, align 8, !dbg !18562, !tbaa !2645
  %38 = load i8**, i8*** %authors.addr, align 8, !dbg !18563, !tbaa !2645
  %arrayidx30 = getelementptr inbounds i8*, i8** %38, i64 1, !dbg !18563, !ctir !1344
  %39 = load i8*, i8** %arrayidx30, align 8, !dbg !18563, !tbaa !2645
  %40 = load i8**, i8*** %authors.addr, align 8, !dbg !18564, !tbaa !2645
  %arrayidx31 = getelementptr inbounds i8*, i8** %40, i64 2, !dbg !18564, !ctir !1344
  %41 = load i8*, i8** %arrayidx31, align 8, !dbg !18564, !tbaa !2645
  %42 = load i8**, i8*** %authors.addr, align 8, !dbg !18565, !tbaa !2645
  %arrayidx32 = getelementptr inbounds i8*, i8** %42, i64 3, !dbg !18565, !ctir !1344
  %43 = load i8*, i8** %arrayidx32, align 8, !dbg !18565, !tbaa !2645
  %44 = load i8**, i8*** %authors.addr, align 8, !dbg !18566, !tbaa !2645
  %arrayidx33 = getelementptr inbounds i8*, i8** %44, i64 4, !dbg !18566, !ctir !1344
  %45 = load i8*, i8** %arrayidx33, align 8, !dbg !18566, !tbaa !2645
  %call34 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* %call28, i8* %37, i8* %39, i8* %41, i8* %43, i8* %45), !dbg !18567
  br label %sw.epilog, !dbg !18568

sw.bb35:                                          ; preds = %if.end
  %46 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18569, !tbaa !2645
  %call36 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.9.424, i64 0, i64 0)) #9, !dbg !18570
  %47 = load i8**, i8*** %authors.addr, align 8, !dbg !18571, !tbaa !2645
  %arrayidx37 = getelementptr inbounds i8*, i8** %47, i64 0, !dbg !18571, !ctir !1344
  %48 = load i8*, i8** %arrayidx37, align 8, !dbg !18571, !tbaa !2645
  %49 = load i8**, i8*** %authors.addr, align 8, !dbg !18572, !tbaa !2645
  %arrayidx38 = getelementptr inbounds i8*, i8** %49, i64 1, !dbg !18572, !ctir !1344
  %50 = load i8*, i8** %arrayidx38, align 8, !dbg !18572, !tbaa !2645
  %51 = load i8**, i8*** %authors.addr, align 8, !dbg !18573, !tbaa !2645
  %arrayidx39 = getelementptr inbounds i8*, i8** %51, i64 2, !dbg !18573, !ctir !1344
  %52 = load i8*, i8** %arrayidx39, align 8, !dbg !18573, !tbaa !2645
  %53 = load i8**, i8*** %authors.addr, align 8, !dbg !18574, !tbaa !2645
  %arrayidx40 = getelementptr inbounds i8*, i8** %53, i64 3, !dbg !18574, !ctir !1344
  %54 = load i8*, i8** %arrayidx40, align 8, !dbg !18574, !tbaa !2645
  %55 = load i8**, i8*** %authors.addr, align 8, !dbg !18575, !tbaa !2645
  %arrayidx41 = getelementptr inbounds i8*, i8** %55, i64 4, !dbg !18575, !ctir !1344
  %56 = load i8*, i8** %arrayidx41, align 8, !dbg !18575, !tbaa !2645
  %57 = load i8**, i8*** %authors.addr, align 8, !dbg !18576, !tbaa !2645
  %arrayidx42 = getelementptr inbounds i8*, i8** %57, i64 5, !dbg !18576, !ctir !1344
  %58 = load i8*, i8** %arrayidx42, align 8, !dbg !18576, !tbaa !2645
  %call43 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %46, i8* %call36, i8* %48, i8* %50, i8* %52, i8* %54, i8* %56, i8* %58), !dbg !18577
  br label %sw.epilog, !dbg !18578

sw.bb44:                                          ; preds = %if.end
  %59 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18579, !tbaa !2645
  %call45 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10.425, i64 0, i64 0)) #9, !dbg !18580
  %60 = load i8**, i8*** %authors.addr, align 8, !dbg !18581, !tbaa !2645
  %arrayidx46 = getelementptr inbounds i8*, i8** %60, i64 0, !dbg !18581, !ctir !1344
  %61 = load i8*, i8** %arrayidx46, align 8, !dbg !18581, !tbaa !2645
  %62 = load i8**, i8*** %authors.addr, align 8, !dbg !18582, !tbaa !2645
  %arrayidx47 = getelementptr inbounds i8*, i8** %62, i64 1, !dbg !18582, !ctir !1344
  %63 = load i8*, i8** %arrayidx47, align 8, !dbg !18582, !tbaa !2645
  %64 = load i8**, i8*** %authors.addr, align 8, !dbg !18583, !tbaa !2645
  %arrayidx48 = getelementptr inbounds i8*, i8** %64, i64 2, !dbg !18583, !ctir !1344
  %65 = load i8*, i8** %arrayidx48, align 8, !dbg !18583, !tbaa !2645
  %66 = load i8**, i8*** %authors.addr, align 8, !dbg !18584, !tbaa !2645
  %arrayidx49 = getelementptr inbounds i8*, i8** %66, i64 3, !dbg !18584, !ctir !1344
  %67 = load i8*, i8** %arrayidx49, align 8, !dbg !18584, !tbaa !2645
  %68 = load i8**, i8*** %authors.addr, align 8, !dbg !18585, !tbaa !2645
  %arrayidx50 = getelementptr inbounds i8*, i8** %68, i64 4, !dbg !18585, !ctir !1344
  %69 = load i8*, i8** %arrayidx50, align 8, !dbg !18585, !tbaa !2645
  %70 = load i8**, i8*** %authors.addr, align 8, !dbg !18586, !tbaa !2645
  %arrayidx51 = getelementptr inbounds i8*, i8** %70, i64 5, !dbg !18586, !ctir !1344
  %71 = load i8*, i8** %arrayidx51, align 8, !dbg !18586, !tbaa !2645
  %72 = load i8**, i8*** %authors.addr, align 8, !dbg !18587, !tbaa !2645
  %arrayidx52 = getelementptr inbounds i8*, i8** %72, i64 6, !dbg !18587, !ctir !1344
  %73 = load i8*, i8** %arrayidx52, align 8, !dbg !18587, !tbaa !2645
  %call53 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %59, i8* %call45, i8* %61, i8* %63, i8* %65, i8* %67, i8* %69, i8* %71, i8* %73), !dbg !18588
  br label %sw.epilog, !dbg !18589

sw.bb54:                                          ; preds = %if.end
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18590, !tbaa !2645
  %call55 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.11.426, i64 0, i64 0)) #9, !dbg !18591
  %75 = load i8**, i8*** %authors.addr, align 8, !dbg !18592, !tbaa !2645
  %arrayidx56 = getelementptr inbounds i8*, i8** %75, i64 0, !dbg !18592, !ctir !1344
  %76 = load i8*, i8** %arrayidx56, align 8, !dbg !18592, !tbaa !2645
  %77 = load i8**, i8*** %authors.addr, align 8, !dbg !18593, !tbaa !2645
  %arrayidx57 = getelementptr inbounds i8*, i8** %77, i64 1, !dbg !18593, !ctir !1344
  %78 = load i8*, i8** %arrayidx57, align 8, !dbg !18593, !tbaa !2645
  %79 = load i8**, i8*** %authors.addr, align 8, !dbg !18594, !tbaa !2645
  %arrayidx58 = getelementptr inbounds i8*, i8** %79, i64 2, !dbg !18594, !ctir !1344
  %80 = load i8*, i8** %arrayidx58, align 8, !dbg !18594, !tbaa !2645
  %81 = load i8**, i8*** %authors.addr, align 8, !dbg !18595, !tbaa !2645
  %arrayidx59 = getelementptr inbounds i8*, i8** %81, i64 3, !dbg !18595, !ctir !1344
  %82 = load i8*, i8** %arrayidx59, align 8, !dbg !18595, !tbaa !2645
  %83 = load i8**, i8*** %authors.addr, align 8, !dbg !18596, !tbaa !2645
  %arrayidx60 = getelementptr inbounds i8*, i8** %83, i64 4, !dbg !18596, !ctir !1344
  %84 = load i8*, i8** %arrayidx60, align 8, !dbg !18596, !tbaa !2645
  %85 = load i8**, i8*** %authors.addr, align 8, !dbg !18597, !tbaa !2645
  %arrayidx61 = getelementptr inbounds i8*, i8** %85, i64 5, !dbg !18597, !ctir !1344
  %86 = load i8*, i8** %arrayidx61, align 8, !dbg !18597, !tbaa !2645
  %87 = load i8**, i8*** %authors.addr, align 8, !dbg !18598, !tbaa !2645
  %arrayidx62 = getelementptr inbounds i8*, i8** %87, i64 6, !dbg !18598, !ctir !1344
  %88 = load i8*, i8** %arrayidx62, align 8, !dbg !18598, !tbaa !2645
  %89 = load i8**, i8*** %authors.addr, align 8, !dbg !18599, !tbaa !2645
  %arrayidx63 = getelementptr inbounds i8*, i8** %89, i64 7, !dbg !18599, !ctir !1344
  %90 = load i8*, i8** %arrayidx63, align 8, !dbg !18599, !tbaa !2645
  %call64 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %74, i8* %call55, i8* %76, i8* %78, i8* %80, i8* %82, i8* %84, i8* %86, i8* %88, i8* %90), !dbg !18600
  br label %sw.epilog, !dbg !18601

sw.bb65:                                          ; preds = %if.end
  %91 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18602, !tbaa !2645
  %call66 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.12.427, i64 0, i64 0)) #9, !dbg !18603
  %92 = load i8**, i8*** %authors.addr, align 8, !dbg !18604, !tbaa !2645
  %arrayidx67 = getelementptr inbounds i8*, i8** %92, i64 0, !dbg !18604, !ctir !1344
  %93 = load i8*, i8** %arrayidx67, align 8, !dbg !18604, !tbaa !2645
  %94 = load i8**, i8*** %authors.addr, align 8, !dbg !18605, !tbaa !2645
  %arrayidx68 = getelementptr inbounds i8*, i8** %94, i64 1, !dbg !18605, !ctir !1344
  %95 = load i8*, i8** %arrayidx68, align 8, !dbg !18605, !tbaa !2645
  %96 = load i8**, i8*** %authors.addr, align 8, !dbg !18606, !tbaa !2645
  %arrayidx69 = getelementptr inbounds i8*, i8** %96, i64 2, !dbg !18606, !ctir !1344
  %97 = load i8*, i8** %arrayidx69, align 8, !dbg !18606, !tbaa !2645
  %98 = load i8**, i8*** %authors.addr, align 8, !dbg !18607, !tbaa !2645
  %arrayidx70 = getelementptr inbounds i8*, i8** %98, i64 3, !dbg !18607, !ctir !1344
  %99 = load i8*, i8** %arrayidx70, align 8, !dbg !18607, !tbaa !2645
  %100 = load i8**, i8*** %authors.addr, align 8, !dbg !18608, !tbaa !2645
  %arrayidx71 = getelementptr inbounds i8*, i8** %100, i64 4, !dbg !18608, !ctir !1344
  %101 = load i8*, i8** %arrayidx71, align 8, !dbg !18608, !tbaa !2645
  %102 = load i8**, i8*** %authors.addr, align 8, !dbg !18609, !tbaa !2645
  %arrayidx72 = getelementptr inbounds i8*, i8** %102, i64 5, !dbg !18609, !ctir !1344
  %103 = load i8*, i8** %arrayidx72, align 8, !dbg !18609, !tbaa !2645
  %104 = load i8**, i8*** %authors.addr, align 8, !dbg !18610, !tbaa !2645
  %arrayidx73 = getelementptr inbounds i8*, i8** %104, i64 6, !dbg !18610, !ctir !1344
  %105 = load i8*, i8** %arrayidx73, align 8, !dbg !18610, !tbaa !2645
  %106 = load i8**, i8*** %authors.addr, align 8, !dbg !18611, !tbaa !2645
  %arrayidx74 = getelementptr inbounds i8*, i8** %106, i64 7, !dbg !18611, !ctir !1344
  %107 = load i8*, i8** %arrayidx74, align 8, !dbg !18611, !tbaa !2645
  %108 = load i8**, i8*** %authors.addr, align 8, !dbg !18612, !tbaa !2645
  %arrayidx75 = getelementptr inbounds i8*, i8** %108, i64 8, !dbg !18612, !ctir !1344
  %109 = load i8*, i8** %arrayidx75, align 8, !dbg !18612, !tbaa !2645
  %call76 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %91, i8* %call66, i8* %93, i8* %95, i8* %97, i8* %99, i8* %101, i8* %103, i8* %105, i8* %107, i8* %109), !dbg !18613
  br label %sw.epilog, !dbg !18614

sw.default:                                       ; preds = %if.end
  %110 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18615, !tbaa !2645
  %call77 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.13.428, i64 0, i64 0)) #9, !dbg !18616
  %111 = load i8**, i8*** %authors.addr, align 8, !dbg !18617, !tbaa !2645
  %arrayidx78 = getelementptr inbounds i8*, i8** %111, i64 0, !dbg !18617, !ctir !1344
  %112 = load i8*, i8** %arrayidx78, align 8, !dbg !18617, !tbaa !2645
  %113 = load i8**, i8*** %authors.addr, align 8, !dbg !18618, !tbaa !2645
  %arrayidx79 = getelementptr inbounds i8*, i8** %113, i64 1, !dbg !18618, !ctir !1344
  %114 = load i8*, i8** %arrayidx79, align 8, !dbg !18618, !tbaa !2645
  %115 = load i8**, i8*** %authors.addr, align 8, !dbg !18619, !tbaa !2645
  %arrayidx80 = getelementptr inbounds i8*, i8** %115, i64 2, !dbg !18619, !ctir !1344
  %116 = load i8*, i8** %arrayidx80, align 8, !dbg !18619, !tbaa !2645
  %117 = load i8**, i8*** %authors.addr, align 8, !dbg !18620, !tbaa !2645
  %arrayidx81 = getelementptr inbounds i8*, i8** %117, i64 3, !dbg !18620, !ctir !1344
  %118 = load i8*, i8** %arrayidx81, align 8, !dbg !18620, !tbaa !2645
  %119 = load i8**, i8*** %authors.addr, align 8, !dbg !18621, !tbaa !2645
  %arrayidx82 = getelementptr inbounds i8*, i8** %119, i64 4, !dbg !18621, !ctir !1344
  %120 = load i8*, i8** %arrayidx82, align 8, !dbg !18621, !tbaa !2645
  %121 = load i8**, i8*** %authors.addr, align 8, !dbg !18622, !tbaa !2645
  %arrayidx83 = getelementptr inbounds i8*, i8** %121, i64 5, !dbg !18622, !ctir !1344
  %122 = load i8*, i8** %arrayidx83, align 8, !dbg !18622, !tbaa !2645
  %123 = load i8**, i8*** %authors.addr, align 8, !dbg !18623, !tbaa !2645
  %arrayidx84 = getelementptr inbounds i8*, i8** %123, i64 6, !dbg !18623, !ctir !1344
  %124 = load i8*, i8** %arrayidx84, align 8, !dbg !18623, !tbaa !2645
  %125 = load i8**, i8*** %authors.addr, align 8, !dbg !18624, !tbaa !2645
  %arrayidx85 = getelementptr inbounds i8*, i8** %125, i64 7, !dbg !18624, !ctir !1344
  %126 = load i8*, i8** %arrayidx85, align 8, !dbg !18624, !tbaa !2645
  %127 = load i8**, i8*** %authors.addr, align 8, !dbg !18625, !tbaa !2645
  %arrayidx86 = getelementptr inbounds i8*, i8** %127, i64 8, !dbg !18625, !ctir !1344
  %128 = load i8*, i8** %arrayidx86, align 8, !dbg !18625, !tbaa !2645
  %call87 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %110, i8* %call77, i8* %112, i8* %114, i8* %116, i8* %118, i8* %120, i8* %122, i8* %124, i8* %126, i8* %128), !dbg !18626
  br label %sw.epilog, !dbg !18627

sw.epilog:                                        ; preds = %sw.default, %sw.bb65, %sw.bb54, %sw.bb44, %sw.bb35, %sw.bb27, %sw.bb20, %sw.bb14, %sw.bb9, %sw.bb6, %sw.bb
  ret void, !dbg !18628
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_ar(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors) #4 !dbg !18629 !ctir !1981 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca i8**, align 8
  %n_authors = alloca i64, align 8, !ctir !55
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !18630, metadata !DIExpression()), !dbg !18631
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !18632, metadata !DIExpression()), !dbg !18633
  store i8* %package, i8** %package.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !18634, metadata !DIExpression()), !dbg !18635
  store i8* %version, i8** %version.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !18636, metadata !DIExpression()), !dbg !18637
  store i8** %authors, i8*** %authors.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8*** %authors.addr, metadata !18638, metadata !DIExpression()), !dbg !18639
  call void @llvm.dbg.declare(metadata i64* %n_authors, metadata !18640, metadata !DIExpression()), !dbg !18641
  store i64 0, i64* %n_authors, align 8, !dbg !18642, !tbaa !3285
  br label %for.cond, !dbg !18644

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8**, i8*** %authors.addr, align 8, !dbg !18645, !tbaa !2645
  %1 = load i64, i64* %n_authors, align 8, !dbg !18647, !tbaa !3285
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 %1, !dbg !18645, !ctir !1344
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !18645, !tbaa !2645
  %tobool = icmp ne i8* %2, null, !dbg !18648
  br i1 %tobool, label %for.body, label %for.end, !dbg !18648

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !18648

for.inc:                                          ; preds = %for.body
  %3 = load i64, i64* %n_authors, align 8, !dbg !18649, !tbaa !3285
  %inc = add i64 %3, 1, !dbg !18649
  store i64 %inc, i64* %n_authors, align 8, !dbg !18649, !tbaa !3285
  br label %for.cond, !dbg !18650, !llvm.loop !18651

for.end:                                          ; preds = %for.cond
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18653, !tbaa !2645
  %5 = load i8*, i8** %command_name.addr, align 8, !dbg !18654, !tbaa !2645
  %6 = load i8*, i8** %package.addr, align 8, !dbg !18655, !tbaa !2645
  %7 = load i8*, i8** %version.addr, align 8, !dbg !18656, !tbaa !2645
  %8 = load i8**, i8*** %authors.addr, align 8, !dbg !18657, !tbaa !2645
  %9 = load i64, i64* %n_authors, align 8, !dbg !18658, !tbaa !3285
  call void @version_etc_arn(%struct._IO_FILE* %4, i8* %5, i8* %6, i8* %7, i8** %8, i64 %9), !dbg !18659
  ret void, !dbg !18660
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc_va(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, %struct.__va_list_tag* %authors) #4 !dbg !18661 !ctir !1983 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors.addr = alloca %struct.__va_list_tag*, align 8
  %n_authors = alloca i64, align 8, !ctir !55
  %authtab = alloca [10 x i8*], align 16, !ctir !1992
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !18662, metadata !DIExpression()), !dbg !18663
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !18664, metadata !DIExpression()), !dbg !18665
  store i8* %package, i8** %package.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !18666, metadata !DIExpression()), !dbg !18667
  store i8* %version, i8** %version.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !18668, metadata !DIExpression()), !dbg !18669
  store %struct.__va_list_tag* %authors, %struct.__va_list_tag** %authors.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %authors.addr, metadata !18670, metadata !DIExpression()), !dbg !18671
  call void @llvm.dbg.declare(metadata i64* %n_authors, metadata !18672, metadata !DIExpression()), !dbg !18673
  call void @llvm.dbg.declare(metadata [10 x i8*]* %authtab, metadata !18674, metadata !DIExpression()), !dbg !18675
  store i64 0, i64* %n_authors, align 8, !dbg !18676, !tbaa !3285
  br label %for.cond, !dbg !18678

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %n_authors, align 8, !dbg !18679, !tbaa !3285
  %cmp = icmp ult i64 %0, 10, !dbg !18681
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !18682

land.rhs:                                         ; preds = %for.cond
  %1 = load %struct.__va_list_tag*, %struct.__va_list_tag** %authors.addr, align 8, !dbg !18683, !tbaa !2645
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 0, !dbg !18683
  %gp_offset = load i32, i32* %gp_offset_p, align 8, !dbg !18683
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !18683
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !18683

vaarg.in_reg:                                     ; preds = %land.rhs
  %2 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 3, !dbg !18683
  %reg_save_area = load i8*, i8** %2, align 8, !dbg !18683
  %3 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !18683
  %4 = bitcast i8* %3 to i8**, !dbg !18683
  %5 = add i32 %gp_offset, 8, !dbg !18683
  store i32 %5, i32* %gp_offset_p, align 8, !dbg !18683
  br label %vaarg.end, !dbg !18683

vaarg.in_mem:                                     ; preds = %land.rhs
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %1, i32 0, i32 2, !dbg !18683
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !18683
  %6 = bitcast i8* %overflow_arg_area to i8**, !dbg !18683
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !18683
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !18683
  br label %vaarg.end, !dbg !18683

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i8** [ %4, %vaarg.in_reg ], [ %6, %vaarg.in_mem ], !dbg !18683
  %7 = load i8*, i8** %vaarg.addr, align 8, !dbg !18683
  %8 = load i64, i64* %n_authors, align 8, !dbg !18684, !tbaa !3285
  %arrayidx = getelementptr inbounds [10 x i8*], [10 x i8*]* %authtab, i64 0, i64 %8, !dbg !18685, !ctir !1992
  store i8* %7, i8** %arrayidx, align 8, !dbg !18686, !tbaa !2645
  %cmp1 = icmp ne i8* %7, null, !dbg !18687
  br label %land.end

land.end:                                         ; preds = %vaarg.end, %for.cond
  %9 = phi i1 [ false, %for.cond ], [ %cmp1, %vaarg.end ], !dbg !18688
  br i1 %9, label %for.body, label %for.end, !dbg !18689

for.body:                                         ; preds = %land.end
  br label %for.inc, !dbg !18689

for.inc:                                          ; preds = %for.body
  %10 = load i64, i64* %n_authors, align 8, !dbg !18690, !tbaa !3285
  %inc = add i64 %10, 1, !dbg !18690
  store i64 %inc, i64* %n_authors, align 8, !dbg !18690, !tbaa !3285
  br label %for.cond, !dbg !18691, !llvm.loop !18692

for.end:                                          ; preds = %land.end
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18694, !tbaa !2645
  %12 = load i8*, i8** %command_name.addr, align 8, !dbg !18695, !tbaa !2645
  %13 = load i8*, i8** %package.addr, align 8, !dbg !18696, !tbaa !2645
  %14 = load i8*, i8** %version.addr, align 8, !dbg !18697, !tbaa !2645
  %arraydecay = getelementptr inbounds [10 x i8*], [10 x i8*]* %authtab, i64 0, i64 0, !dbg !18698
  %15 = load i64, i64* %n_authors, align 8, !dbg !18699, !tbaa !3285
  call void @version_etc_arn(%struct._IO_FILE* %11, i8* %12, i8* %13, i8* %14, i8** %arraydecay, i64 %15), !dbg !18700
  ret void, !dbg !18701
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @version_etc(%struct._IO_FILE* %stream, i8* %command_name, i8* %package, i8* %version, ...) #4 !dbg !18702 !ctir !1993 {
entry:
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %command_name.addr = alloca i8*, align 8
  %package.addr = alloca i8*, align 8
  %version.addr = alloca i8*, align 8
  %authors = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1995
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !18705, metadata !DIExpression()), !dbg !18706
  store i8* %command_name, i8** %command_name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %command_name.addr, metadata !18707, metadata !DIExpression()), !dbg !18708
  store i8* %package, i8** %package.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %package.addr, metadata !18709, metadata !DIExpression()), !dbg !18710
  store i8* %version, i8** %version.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %version.addr, metadata !18711, metadata !DIExpression()), !dbg !18712
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %authors, metadata !18713, metadata !DIExpression()), !dbg !18714
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !18715
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !18715
  call void @llvm.va_start(i8* %arraydecay1), !dbg !18715
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !18716, !tbaa !2645
  %1 = load i8*, i8** %command_name.addr, align 8, !dbg !18717, !tbaa !2645
  %2 = load i8*, i8** %package.addr, align 8, !dbg !18718, !tbaa !2645
  %3 = load i8*, i8** %version.addr, align 8, !dbg !18719, !tbaa !2645
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !18720
  call void @version_etc_va(%struct._IO_FILE* %0, i8* %1, i8* %2, i8* %3, %struct.__va_list_tag* %arraydecay2), !dbg !18721
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %authors, i64 0, i64 0, !dbg !18722
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !18722
  call void @llvm.va_end(i8* %arraydecay34), !dbg !18722
  ret void, !dbg !18723
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @emit_bug_reporting_address() #4 !dbg !18724 !ctir !200 {
entry:
  %call = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14.431, i64 0, i64 0)) #9, !dbg !18725
  %call1 = call i32 (i8*, ...) @printf(i8* %call, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.15.432, i64 0, i64 0)), !dbg !18726
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16.433, i64 0, i64 0)) #9, !dbg !18727
  %call3 = call i32 (i8*, ...) @printf(i8* %call2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17.434, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.18.435, i64 0, i64 0)), !dbg !18728
  %call4 = call i8* @gettext(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.19.436, i64 0, i64 0)) #9, !dbg !18729
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !18729, !tbaa !2645
  %call5 = call i32 @fputs_unlocked(i8* %call4, %struct._IO_FILE* %0), !dbg !18729
  ret void, !dbg !18730
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @can_write_any_file() #4 !dbg !1327 !ctir !1329 {
entry:
  %can = alloca i8, align 1, !ctir !142
  %0 = load i8, i8* @can_write_any_file.initialized, align 1, !dbg !18731, !tbaa !2739
  %tobool = trunc i8 %0 to i1, !dbg !18731
  br i1 %tobool, label %if.end, label %if.then, !dbg !18733

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %can, metadata !18734, metadata !DIExpression()), !dbg !18736
  store i8 0, i8* %can, align 1, !dbg !18736, !tbaa !2739
  %call = call i32 @geteuid() #9, !dbg !18737
  %cmp = icmp eq i32 %call, 0, !dbg !18738
  %frombool = zext i1 %cmp to i8, !dbg !18739
  store i8 %frombool, i8* %can, align 1, !dbg !18739, !tbaa !2739
  %1 = load i8, i8* %can, align 1, !dbg !18740, !tbaa !2739
  %tobool1 = trunc i8 %1 to i1, !dbg !18740
  %frombool2 = zext i1 %tobool1 to i8, !dbg !18741
  store i8 %frombool2, i8* @can_write_any_file.can_write, align 1, !dbg !18741, !tbaa !2739
  store i8 1, i8* @can_write_any_file.initialized, align 1, !dbg !18742, !tbaa !2739
  br label %if.end, !dbg !18743

if.end:                                           ; preds = %if.then, %entry
  %2 = load i8, i8* @can_write_any_file.can_write, align 1, !dbg !18744, !tbaa !2739
  %tobool3 = trunc i8 %2 to i1, !dbg !18744
  ret i1 %tobool3, !dbg !18745
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xnmalloc(i64 %n, i64 %s) #4 !dbg !18746 !ctir !2002 {
entry:
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18748, metadata !DIExpression()), !dbg !18749
  store i64 %s, i64* %s.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !18750, metadata !DIExpression()), !dbg !18751
  %0 = load i64, i64* %s.addr, align 8, !dbg !18752, !tbaa !3285
  %div = udiv i64 9223372036854775807, %0, !dbg !18752
  %1 = load i64, i64* %n.addr, align 8, !dbg !18752, !tbaa !3285
  %cmp = icmp ult i64 %div, %1, !dbg !18752
  br i1 %cmp, label %if.then, label %if.end, !dbg !18754

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !18755
  unreachable, !dbg !18755

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !18756, !tbaa !3285
  %3 = load i64, i64* %s.addr, align 8, !dbg !18757, !tbaa !3285
  %mul = mul i64 %2, %3, !dbg !18758
  %call = call noalias i8* @xmalloc(i64 %mul), !dbg !18759
  ret i8* %call, !dbg !18760
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xmalloc(i64 %n) #4 !dbg !18761 !ctir !2010 {
entry:
  %n.addr = alloca i64, align 8
  %p = alloca i8*, align 8, !ctir !53
  store i64 %n, i64* %n.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18763, metadata !DIExpression()), !dbg !18764
  call void @llvm.dbg.declare(metadata i8** %p, metadata !18765, metadata !DIExpression()), !dbg !18766
  %0 = load i64, i64* %n.addr, align 8, !dbg !18767, !tbaa !3285
  %call = call noalias i8* @malloc(i64 %0) #9, !dbg !18768
  store i8* %call, i8** %p, align 8, !dbg !18766, !tbaa !2645
  %1 = load i8*, i8** %p, align 8, !dbg !18769, !tbaa !2645
  %tobool = icmp ne i8* %1, null, !dbg !18769
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !18771

land.lhs.true:                                    ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !18772, !tbaa !3285
  %cmp = icmp ne i64 %2, 0, !dbg !18773
  br i1 %cmp, label %if.then, label %if.end, !dbg !18774

if.then:                                          ; preds = %land.lhs.true
  call void @xalloc_die() #15, !dbg !18775
  unreachable, !dbg !18775

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i8*, i8** %p, align 8, !dbg !18776, !tbaa !2645
  ret i8* %3, !dbg !18777
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xnrealloc(i8* %p, i64 %n, i64 %s) #4 !dbg !18778 !ctir !2004 {
entry:
  %p.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !18779, metadata !DIExpression()), !dbg !18780
  store i64 %n, i64* %n.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18781, metadata !DIExpression()), !dbg !18782
  store i64 %s, i64* %s.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !18783, metadata !DIExpression()), !dbg !18784
  %0 = load i64, i64* %s.addr, align 8, !dbg !18785, !tbaa !3285
  %div = udiv i64 9223372036854775807, %0, !dbg !18785
  %1 = load i64, i64* %n.addr, align 8, !dbg !18785, !tbaa !3285
  %cmp = icmp ult i64 %div, %1, !dbg !18785
  br i1 %cmp, label %if.then, label %if.end, !dbg !18787

if.then:                                          ; preds = %entry
  call void @xalloc_die() #15, !dbg !18788
  unreachable, !dbg !18788

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %p.addr, align 8, !dbg !18789, !tbaa !2645
  %3 = load i64, i64* %n.addr, align 8, !dbg !18790, !tbaa !3285
  %4 = load i64, i64* %s.addr, align 8, !dbg !18791, !tbaa !3285
  %mul = mul i64 %3, %4, !dbg !18792
  %call = call i8* @xrealloc(i8* %2, i64 %mul), !dbg !18793
  ret i8* %call, !dbg !18794
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xrealloc(i8* %p, i64 %n) #4 !dbg !18795 !ctir !2012 {
entry:
  %retval = alloca i8*, align 8
  %p.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !18796, metadata !DIExpression()), !dbg !18797
  store i64 %n, i64* %n.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18798, metadata !DIExpression()), !dbg !18799
  %0 = load i64, i64* %n.addr, align 8, !dbg !18800, !tbaa !3285
  %tobool = icmp ne i64 %0, 0, !dbg !18800
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !18802

land.lhs.true:                                    ; preds = %entry
  %1 = load i8*, i8** %p.addr, align 8, !dbg !18803, !tbaa !2645
  %tobool1 = icmp ne i8* %1, null, !dbg !18803
  br i1 %tobool1, label %if.then, label %if.end, !dbg !18804

if.then:                                          ; preds = %land.lhs.true
  %2 = load i8*, i8** %p.addr, align 8, !dbg !18805, !tbaa !2645
  call void @free(i8* %2) #9, !dbg !18807
  store i8* null, i8** %retval, align 8, !dbg !18808
  br label %return, !dbg !18808

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i8*, i8** %p.addr, align 8, !dbg !18809, !tbaa !2645
  %4 = load i64, i64* %n.addr, align 8, !dbg !18810, !tbaa !3285
  %call = call i8* @realloc(i8* %3, i64 %4) #9, !dbg !18811
  store i8* %call, i8** %p.addr, align 8, !dbg !18812, !tbaa !2645
  %5 = load i8*, i8** %p.addr, align 8, !dbg !18813, !tbaa !2645
  %tobool2 = icmp ne i8* %5, null, !dbg !18813
  br i1 %tobool2, label %if.end6, label %land.lhs.true3, !dbg !18815

land.lhs.true3:                                   ; preds = %if.end
  %6 = load i64, i64* %n.addr, align 8, !dbg !18816, !tbaa !3285
  %tobool4 = icmp ne i64 %6, 0, !dbg !18816
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !18817

if.then5:                                         ; preds = %land.lhs.true3
  call void @xalloc_die() #15, !dbg !18818
  unreachable, !dbg !18818

if.end6:                                          ; preds = %land.lhs.true3, %if.end
  %7 = load i8*, i8** %p.addr, align 8, !dbg !18819, !tbaa !2645
  store i8* %7, i8** %retval, align 8, !dbg !18820
  br label %return, !dbg !18820

return:                                           ; preds = %if.end6, %if.then
  %8 = load i8*, i8** %retval, align 8, !dbg !18821
  ret i8* %8, !dbg !18821
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @x2nrealloc(i8* %p, i64* %pn, i64 %s) #4 !dbg !18822 !ctir !2006 {
entry:
  %p.addr = alloca i8*, align 8
  %pn.addr = alloca i64*, align 8
  %s.addr = alloca i64, align 8
  %n = alloca i64, align 8, !ctir !55
  store i8* %p, i8** %p.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !18823, metadata !DIExpression()), !dbg !18824
  store i64* %pn, i64** %pn.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i64** %pn.addr, metadata !18825, metadata !DIExpression()), !dbg !18826
  store i64 %s, i64* %s.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !18827, metadata !DIExpression()), !dbg !18828
  call void @llvm.dbg.declare(metadata i64* %n, metadata !18829, metadata !DIExpression()), !dbg !18830
  %0 = load i64*, i64** %pn.addr, align 8, !dbg !18831, !tbaa !2645
  %1 = load i64, i64* %0, align 8, !dbg !18832, !tbaa !3285, !ctir !55
  store i64 %1, i64* %n, align 8, !dbg !18830, !tbaa !3285
  %2 = load i8*, i8** %p.addr, align 8, !dbg !18833, !tbaa !2645
  %tobool = icmp ne i8* %2, null, !dbg !18833
  br i1 %tobool, label %if.else, label %if.then, !dbg !18835

if.then:                                          ; preds = %entry
  %3 = load i64, i64* %n, align 8, !dbg !18836, !tbaa !3285
  %tobool1 = icmp ne i64 %3, 0, !dbg !18836
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !18839

if.then2:                                         ; preds = %if.then
  %4 = load i64, i64* %s.addr, align 8, !dbg !18840, !tbaa !3285
  %div = udiv i64 128, %4, !dbg !18842
  store i64 %div, i64* %n, align 8, !dbg !18843, !tbaa !3285
  %5 = load i64, i64* %n, align 8, !dbg !18844, !tbaa !3285
  %tobool3 = icmp ne i64 %5, 0, !dbg !18845
  %lnot = xor i1 %tobool3, true, !dbg !18845
  %lnot.ext = zext i1 %lnot to i32, !dbg !18845
  %conv = sext i32 %lnot.ext to i64, !dbg !18845
  %6 = load i64, i64* %n, align 8, !dbg !18846, !tbaa !3285
  %add = add i64 %6, %conv, !dbg !18846
  store i64 %add, i64* %n, align 8, !dbg !18846, !tbaa !3285
  br label %if.end, !dbg !18847

if.end:                                           ; preds = %if.then2, %if.then
  %7 = load i64, i64* %s.addr, align 8, !dbg !18848, !tbaa !3285
  %div4 = udiv i64 9223372036854775807, %7, !dbg !18848
  %8 = load i64, i64* %n, align 8, !dbg !18848, !tbaa !3285
  %cmp = icmp ult i64 %div4, %8, !dbg !18848
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !18850

if.then6:                                         ; preds = %if.end
  call void @xalloc_die() #15, !dbg !18851
  unreachable, !dbg !18851

if.end7:                                          ; preds = %if.end
  br label %if.end16, !dbg !18852

if.else:                                          ; preds = %entry
  %9 = load i64, i64* %s.addr, align 8, !dbg !18853, !tbaa !3285
  %div8 = udiv i64 6148914691236517204, %9, !dbg !18856
  %10 = load i64, i64* %n, align 8, !dbg !18857, !tbaa !3285
  %cmp9 = icmp ule i64 %div8, %10, !dbg !18858
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !18859

if.then11:                                        ; preds = %if.else
  call void @xalloc_die() #15, !dbg !18860
  unreachable, !dbg !18860

if.end12:                                         ; preds = %if.else
  %11 = load i64, i64* %n, align 8, !dbg !18861, !tbaa !3285
  %div13 = udiv i64 %11, 2, !dbg !18862
  %add14 = add i64 %div13, 1, !dbg !18863
  %12 = load i64, i64* %n, align 8, !dbg !18864, !tbaa !3285
  %add15 = add i64 %12, %add14, !dbg !18864
  store i64 %add15, i64* %n, align 8, !dbg !18864, !tbaa !3285
  br label %if.end16

if.end16:                                         ; preds = %if.end12, %if.end7
  %13 = load i64, i64* %n, align 8, !dbg !18865, !tbaa !3285
  %14 = load i64*, i64** %pn.addr, align 8, !dbg !18866, !tbaa !2645
  store i64 %13, i64* %14, align 8, !dbg !18867, !tbaa !3285, !ctir !55
  %15 = load i8*, i8** %p.addr, align 8, !dbg !18868, !tbaa !2645
  %16 = load i64, i64* %n, align 8, !dbg !18869, !tbaa !3285
  %17 = load i64, i64* %s.addr, align 8, !dbg !18870, !tbaa !3285
  %mul = mul i64 %16, %17, !dbg !18871
  %call = call i8* @xrealloc(i8* %15, i64 %mul), !dbg !18872
  ret i8* %call, !dbg !18873
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xcharalloc(i64 %n) #4 !dbg !18874 !ctir !2008 {
entry:
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18875, metadata !DIExpression()), !dbg !18876
  %0 = load i64, i64* %n.addr, align 8, !dbg !18877, !tbaa !3285
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !18877
  ret i8* %call, !dbg !18878
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @x2realloc(i8* %p, i64* %pn) #4 !dbg !18879 !ctir !2014 {
entry:
  %p.addr = alloca i8*, align 8
  %pn.addr = alloca i64*, align 8
  store i8* %p, i8** %p.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !18880, metadata !DIExpression()), !dbg !18881
  store i64* %pn, i64** %pn.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i64** %pn.addr, metadata !18882, metadata !DIExpression()), !dbg !18883
  %0 = load i8*, i8** %p.addr, align 8, !dbg !18884, !tbaa !2645
  %1 = load i64*, i64** %pn.addr, align 8, !dbg !18885, !tbaa !2645
  %call = call i8* @x2nrealloc(i8* %0, i64* %1, i64 1), !dbg !18886
  ret i8* %call, !dbg !18887
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xzalloc(i64 %s) #4 !dbg !18888 !ctir !2010 {
entry:
  %s.addr = alloca i64, align 8
  store i64 %s, i64* %s.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !18889, metadata !DIExpression()), !dbg !18890
  %0 = load i64, i64* %s.addr, align 8, !dbg !18891, !tbaa !3285
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !18892
  %1 = load i64, i64* %s.addr, align 8, !dbg !18893, !tbaa !3285
  call void @llvm.memset.p0i8.i64(i8* align 1 %call, i8 0, i64 %1, i1 false), !dbg !18894
  ret i8* %call, !dbg !18895
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xcalloc(i64 %n, i64 %s) #4 !dbg !18896 !ctir !2002 {
entry:
  %n.addr = alloca i64, align 8
  %s.addr = alloca i64, align 8
  %p = alloca i8*, align 8, !ctir !53
  store i64 %n, i64* %n.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !18897, metadata !DIExpression()), !dbg !18898
  store i64 %s, i64* %s.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !18899, metadata !DIExpression()), !dbg !18900
  call void @llvm.dbg.declare(metadata i8** %p, metadata !18901, metadata !DIExpression()), !dbg !18902
  %0 = load i64, i64* %s.addr, align 8, !dbg !18903, !tbaa !3285
  %div = udiv i64 9223372036854775807, %0, !dbg !18903
  %1 = load i64, i64* %n.addr, align 8, !dbg !18903, !tbaa !3285
  %cmp = icmp ult i64 %div, %1, !dbg !18903
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !18905

lor.lhs.false:                                    ; preds = %entry
  %2 = load i64, i64* %n.addr, align 8, !dbg !18906, !tbaa !3285
  %3 = load i64, i64* %s.addr, align 8, !dbg !18907, !tbaa !3285
  %call = call noalias i8* @calloc(i64 %2, i64 %3) #9, !dbg !18908
  store i8* %call, i8** %p, align 8, !dbg !18909, !tbaa !2645
  %tobool = icmp ne i8* %call, null, !dbg !18909
  br i1 %tobool, label %if.end, label %if.then, !dbg !18910

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @xalloc_die() #15, !dbg !18911
  unreachable, !dbg !18911

if.end:                                           ; preds = %lor.lhs.false
  %4 = load i8*, i8** %p, align 8, !dbg !18912, !tbaa !2645
  ret i8* %4, !dbg !18913
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xmemdup(i8* %p, i64 %s) #4 !dbg !18914 !ctir !511 {
entry:
  %p.addr = alloca i8*, align 8
  %s.addr = alloca i64, align 8
  store i8* %p, i8** %p.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !18915, metadata !DIExpression()), !dbg !18916
  store i64 %s, i64* %s.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %s.addr, metadata !18917, metadata !DIExpression()), !dbg !18918
  %0 = load i64, i64* %s.addr, align 8, !dbg !18919, !tbaa !3285
  %call = call noalias i8* @xmalloc(i64 %0), !dbg !18920
  %1 = load i8*, i8** %p.addr, align 8, !dbg !18921, !tbaa !2645
  %2 = load i64, i64* %s.addr, align 8, !dbg !18922, !tbaa !3285
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %call, i8* align 1 %1, i64 %2, i1 false), !dbg !18923
  ret i8* %call, !dbg !18924
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local noalias i8* @xstrdup(i8* %string) #4 !dbg !18925 !ctir !218 {
entry:
  %string.addr = alloca i8*, align 8
  store i8* %string, i8** %string.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !18926, metadata !DIExpression()), !dbg !18927
  %0 = load i8*, i8** %string.addr, align 8, !dbg !18928, !tbaa !2645
  %1 = load i8*, i8** %string.addr, align 8, !dbg !18929, !tbaa !2645
  %call = call i64 @strlen(i8* %1) #14, !dbg !18930
  %add = add i64 %call, 1, !dbg !18931
  %call1 = call i8* @xmemdup(i8* %0, i64 %add), !dbg !18932
  ret i8* %call1, !dbg !18933
}

; Function Attrs: noinline noreturn nounwind optnone uwtable
define dso_local void @xalloc_die() #0 !dbg !18934 !ctir !200 {
entry:
  %0 = load volatile i32, i32* @exit_failure, align 4, !dbg !18936, !tbaa !2632
  %call = call i8* @gettext(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1.459, i64 0, i64 0)) #9, !dbg !18937
  call void (i32, i32, i8*, ...) @error(i32 %0, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.460, i64 0, i64 0), i8* %call), !dbg !18938
  call void @abort() #13, !dbg !18939
  unreachable, !dbg !18939
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @xstrtoul(i8* %s, i8** %ptr, i32 %strtol_base, i64* %val, i8* %valid_suffixes) #4 !dbg !18940 !ctir !2031 {
entry:
  %retval = alloca i32, align 4
  %s.addr = alloca i8*, align 8
  %ptr.addr = alloca i8**, align 8
  %strtol_base.addr = alloca i32, align 4
  %val.addr = alloca i64*, align 8
  %valid_suffixes.addr = alloca i8*, align 8
  %t_ptr = alloca i8*, align 8, !ctir !9
  %p = alloca i8**, align 8, !ctir !184
  %tmp = alloca i64, align 8, !ctir !57
  %err = alloca i32, align 4, !ctir !2033
  %q = alloca i8*, align 8, !ctir !180
  %ch = alloca i8, align 1, !ctir !554
  %base = alloca i32, align 4, !ctir !7
  %suffixes = alloca i32, align 4, !ctir !7
  %overflow = alloca i32, align 4, !ctir !2033
  store i8* %s, i8** %s.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !18942, metadata !DIExpression()), !dbg !18943
  store i8** %ptr, i8*** %ptr.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8*** %ptr.addr, metadata !18944, metadata !DIExpression()), !dbg !18945
  store i32 %strtol_base, i32* %strtol_base.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %strtol_base.addr, metadata !18946, metadata !DIExpression()), !dbg !18947
  store i64* %val, i64** %val.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i64** %val.addr, metadata !18948, metadata !DIExpression()), !dbg !18949
  store i8* %valid_suffixes, i8** %valid_suffixes.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %valid_suffixes.addr, metadata !18950, metadata !DIExpression()), !dbg !18951
  call void @llvm.dbg.declare(metadata i8** %t_ptr, metadata !18952, metadata !DIExpression()), !dbg !18953
  call void @llvm.dbg.declare(metadata i8*** %p, metadata !18954, metadata !DIExpression()), !dbg !18955
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !18956, metadata !DIExpression()), !dbg !18957
  call void @llvm.dbg.declare(metadata i32* %err, metadata !18958, metadata !DIExpression()), !dbg !18959
  store i32 0, i32* %err, align 4, !dbg !18959, !tbaa !3292
  %0 = load i32, i32* %strtol_base.addr, align 4, !dbg !18960, !tbaa !2632
  %cmp = icmp sle i32 0, %0, !dbg !18960
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !18960

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %strtol_base.addr, align 4, !dbg !18960, !tbaa !2632
  %cmp1 = icmp sle i32 %1, 36, !dbg !18960
  br i1 %cmp1, label %if.then, label %if.else, !dbg !18963

if.then:                                          ; preds = %land.lhs.true
  br label %if.end, !dbg !18963

if.else:                                          ; preds = %land.lhs.true, %entry
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.463, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.464, i64 0, i64 0), i32 84, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @__PRETTY_FUNCTION__.xstrtoul, i64 0, i64 0)) #13, !dbg !18960
  unreachable, !dbg !18960

if.end:                                           ; preds = %if.then
  %2 = load i8**, i8*** %ptr.addr, align 8, !dbg !18964, !tbaa !2645
  %tobool = icmp ne i8** %2, null, !dbg !18964
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !18964

cond.true:                                        ; preds = %if.end
  %3 = load i8**, i8*** %ptr.addr, align 8, !dbg !18965, !tbaa !2645
  br label %cond.end, !dbg !18964

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !18964

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8** [ %3, %cond.true ], [ %t_ptr, %cond.false ], !dbg !18964
  store i8** %cond, i8*** %p, align 8, !dbg !18966, !tbaa !2645
  %call = call i32* @__errno_location() #16, !dbg !18967
  store i32 0, i32* %call, align 4, !dbg !18968, !tbaa !2632, !ctir !7
  call void @llvm.dbg.declare(metadata i8** %q, metadata !18969, metadata !DIExpression()), !dbg !18972
  %4 = load i8*, i8** %s.addr, align 8, !dbg !18973, !tbaa !2645
  store i8* %4, i8** %q, align 8, !dbg !18972, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8* %ch, metadata !18974, metadata !DIExpression()), !dbg !18975
  %5 = load i8*, i8** %q, align 8, !dbg !18976, !tbaa !2645
  %6 = load i8, i8* %5, align 1, !dbg !18977, !tbaa !3292, !ctir !181
  store i8 %6, i8* %ch, align 1, !dbg !18975, !tbaa !3292
  br label %while.cond, !dbg !18978

while.cond:                                       ; preds = %while.body, %cond.end
  %call2 = call i16** @__ctype_b_loc() #16, !dbg !18979
  %7 = load i16*, i16** %call2, align 8, !dbg !18979, !tbaa !2645, !ctir !1108
  %8 = load i8, i8* %ch, align 1, !dbg !18979, !tbaa !3292
  %conv = zext i8 %8 to i32, !dbg !18979
  %idxprom = sext i32 %conv to i64, !dbg !18979
  %arrayidx = getelementptr inbounds i16, i16* %7, i64 %idxprom, !dbg !18979, !ctir !1108
  %9 = load i16, i16* %arrayidx, align 2, !dbg !18979, !tbaa !14634
  %conv3 = zext i16 %9 to i32, !dbg !18979
  %and = and i32 %conv3, 8192, !dbg !18979
  %tobool4 = icmp ne i32 %and, 0, !dbg !18978
  br i1 %tobool4, label %while.body, label %while.end, !dbg !18978

while.body:                                       ; preds = %while.cond
  %10 = load i8*, i8** %q, align 8, !dbg !18980, !tbaa !2645
  %incdec.ptr = getelementptr inbounds i8, i8* %10, i32 1, !dbg !18980
  store i8* %incdec.ptr, i8** %q, align 8, !dbg !18980, !tbaa !2645
  %11 = load i8, i8* %incdec.ptr, align 1, !dbg !18981, !tbaa !3292, !ctir !181
  store i8 %11, i8* %ch, align 1, !dbg !18982, !tbaa !3292
  br label %while.cond, !dbg !18978, !llvm.loop !18983

while.end:                                        ; preds = %while.cond
  %12 = load i8, i8* %ch, align 1, !dbg !18985, !tbaa !3292
  %conv5 = zext i8 %12 to i32, !dbg !18985
  %cmp6 = icmp eq i32 %conv5, 45, !dbg !18987
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !18988

if.then8:                                         ; preds = %while.end
  store i32 4, i32* %retval, align 4, !dbg !18989
  br label %return, !dbg !18989

if.end9:                                          ; preds = %while.end
  %13 = load i8*, i8** %s.addr, align 8, !dbg !18990, !tbaa !2645
  %14 = load i8**, i8*** %p, align 8, !dbg !18991, !tbaa !2645
  %15 = load i32, i32* %strtol_base.addr, align 4, !dbg !18992, !tbaa !2632
  %call10 = call i64 @strtoul(i8* %13, i8** %14, i32 %15) #9, !dbg !18993
  store i64 %call10, i64* %tmp, align 8, !dbg !18994, !tbaa !3285
  %16 = load i8**, i8*** %p, align 8, !dbg !18995, !tbaa !2645
  %17 = load i8*, i8** %16, align 8, !dbg !18997, !tbaa !2645, !ctir !9
  %18 = load i8*, i8** %s.addr, align 8, !dbg !18998, !tbaa !2645
  %cmp11 = icmp eq i8* %17, %18, !dbg !18999
  br i1 %cmp11, label %if.then13, label %if.else25, !dbg !19000

if.then13:                                        ; preds = %if.end9
  %19 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !19001, !tbaa !2645
  %tobool14 = icmp ne i8* %19, null, !dbg !19001
  br i1 %tobool14, label %land.lhs.true15, label %if.else23, !dbg !19004

land.lhs.true15:                                  ; preds = %if.then13
  %20 = load i8**, i8*** %p, align 8, !dbg !19005, !tbaa !2645
  %21 = load i8*, i8** %20, align 8, !dbg !19006, !tbaa !2645, !ctir !9
  %22 = load i8, i8* %21, align 1, !dbg !19007, !tbaa !3292, !ctir !10
  %conv16 = sext i8 %22 to i32, !dbg !19007
  %tobool17 = icmp ne i32 %conv16, 0, !dbg !19007
  br i1 %tobool17, label %land.lhs.true18, label %if.else23, !dbg !19008

land.lhs.true18:                                  ; preds = %land.lhs.true15
  %23 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !19009, !tbaa !2645
  %24 = load i8**, i8*** %p, align 8, !dbg !19010, !tbaa !2645
  %25 = load i8*, i8** %24, align 8, !dbg !19011, !tbaa !2645, !ctir !9
  %26 = load i8, i8* %25, align 1, !dbg !19012, !tbaa !3292, !ctir !10
  %conv19 = sext i8 %26 to i32, !dbg !19012
  %call20 = call i8* @strchr(i8* %23, i32 %conv19) #14, !dbg !19013
  %tobool21 = icmp ne i8* %call20, null, !dbg !19013
  br i1 %tobool21, label %if.then22, label %if.else23, !dbg !19014

if.then22:                                        ; preds = %land.lhs.true18
  store i64 1, i64* %tmp, align 8, !dbg !19015, !tbaa !3285
  br label %if.end24, !dbg !19016

if.else23:                                        ; preds = %land.lhs.true18, %land.lhs.true15, %if.then13
  store i32 4, i32* %retval, align 4, !dbg !19017
  br label %return, !dbg !19017

if.end24:                                         ; preds = %if.then22
  br label %if.end36, !dbg !19018

if.else25:                                        ; preds = %if.end9
  %call26 = call i32* @__errno_location() #16, !dbg !19019
  %27 = load i32, i32* %call26, align 4, !dbg !19019, !tbaa !2632, !ctir !7
  %cmp27 = icmp ne i32 %27, 0, !dbg !19021
  br i1 %cmp27, label %if.then29, label %if.end35, !dbg !19022

if.then29:                                        ; preds = %if.else25
  %call30 = call i32* @__errno_location() #16, !dbg !19023
  %28 = load i32, i32* %call30, align 4, !dbg !19023, !tbaa !2632, !ctir !7
  %cmp31 = icmp ne i32 %28, 34, !dbg !19026
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !19027

if.then33:                                        ; preds = %if.then29
  store i32 4, i32* %retval, align 4, !dbg !19028
  br label %return, !dbg !19028

if.end34:                                         ; preds = %if.then29
  store i32 1, i32* %err, align 4, !dbg !19029, !tbaa !3292
  br label %if.end35, !dbg !19030

if.end35:                                         ; preds = %if.end34, %if.else25
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.end24
  %29 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !19031, !tbaa !2645
  %tobool37 = icmp ne i8* %29, null, !dbg !19031
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !19033

if.then38:                                        ; preds = %if.end36
  %30 = load i64, i64* %tmp, align 8, !dbg !19034, !tbaa !3285
  %31 = load i64*, i64** %val.addr, align 8, !dbg !19036, !tbaa !2645
  store i64 %30, i64* %31, align 8, !dbg !19037, !tbaa !3285, !ctir !57
  %32 = load i32, i32* %err, align 4, !dbg !19038, !tbaa !3292
  store i32 %32, i32* %retval, align 4, !dbg !19039
  br label %return, !dbg !19039

if.end39:                                         ; preds = %if.end36
  %33 = load i8**, i8*** %p, align 8, !dbg !19040, !tbaa !2645
  %34 = load i8*, i8** %33, align 8, !dbg !19042, !tbaa !2645, !ctir !9
  %35 = load i8, i8* %34, align 1, !dbg !19043, !tbaa !3292, !ctir !10
  %conv40 = sext i8 %35 to i32, !dbg !19043
  %cmp41 = icmp ne i32 %conv40, 0, !dbg !19044
  br i1 %cmp41, label %if.then43, label %if.end98, !dbg !19045

if.then43:                                        ; preds = %if.end39
  call void @llvm.dbg.declare(metadata i32* %base, metadata !19046, metadata !DIExpression()), !dbg !19048
  store i32 1024, i32* %base, align 4, !dbg !19048, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %suffixes, metadata !19049, metadata !DIExpression()), !dbg !19050
  store i32 1, i32* %suffixes, align 4, !dbg !19050, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %overflow, metadata !19051, metadata !DIExpression()), !dbg !19052
  %36 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !19053, !tbaa !2645
  %37 = load i8**, i8*** %p, align 8, !dbg !19055, !tbaa !2645
  %38 = load i8*, i8** %37, align 8, !dbg !19056, !tbaa !2645, !ctir !9
  %39 = load i8, i8* %38, align 1, !dbg !19057, !tbaa !3292, !ctir !10
  %conv44 = sext i8 %39 to i32, !dbg !19057
  %call45 = call i8* @strchr(i8* %36, i32 %conv44) #14, !dbg !19058
  %tobool46 = icmp ne i8* %call45, null, !dbg !19058
  br i1 %tobool46, label %if.end48, label %if.then47, !dbg !19059

if.then47:                                        ; preds = %if.then43
  %40 = load i64, i64* %tmp, align 8, !dbg !19060, !tbaa !3285
  %41 = load i64*, i64** %val.addr, align 8, !dbg !19062, !tbaa !2645
  store i64 %40, i64* %41, align 8, !dbg !19063, !tbaa !3285, !ctir !57
  %42 = load i32, i32* %err, align 4, !dbg !19064, !tbaa !3292
  %or = or i32 %42, 2, !dbg !19065
  store i32 %or, i32* %retval, align 4, !dbg !19066
  br label %return, !dbg !19066

if.end48:                                         ; preds = %if.then43
  %43 = load i8**, i8*** %p, align 8, !dbg !19067, !tbaa !2645
  %44 = load i8*, i8** %43, align 8, !dbg !19068, !tbaa !2645, !ctir !9
  %45 = load i8, i8* %44, align 1, !dbg !19069, !tbaa !3292, !ctir !10
  %conv49 = sext i8 %45 to i32, !dbg !19069
  switch i32 %conv49, label %sw.epilog66 [
    i32 69, label %sw.bb
    i32 71, label %sw.bb
    i32 103, label %sw.bb
    i32 107, label %sw.bb
    i32 75, label %sw.bb
    i32 77, label %sw.bb
    i32 109, label %sw.bb
    i32 80, label %sw.bb
    i32 84, label %sw.bb
    i32 116, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !19070

sw.bb:                                            ; preds = %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48, %if.end48
  %46 = load i8*, i8** %valid_suffixes.addr, align 8, !dbg !19071, !tbaa !2645
  %call50 = call i8* @strchr(i8* %46, i32 48) #14, !dbg !19074
  %tobool51 = icmp ne i8* %call50, null, !dbg !19074
  br i1 %tobool51, label %if.then52, label %if.end65, !dbg !19075

if.then52:                                        ; preds = %sw.bb
  %47 = load i8**, i8*** %p, align 8, !dbg !19076, !tbaa !2645
  %arrayidx53 = getelementptr inbounds i8*, i8** %47, i64 0, !dbg !19076, !ctir !184
  %48 = load i8*, i8** %arrayidx53, align 8, !dbg !19076, !tbaa !2645
  %arrayidx54 = getelementptr inbounds i8, i8* %48, i64 1, !dbg !19076, !ctir !9
  %49 = load i8, i8* %arrayidx54, align 1, !dbg !19076, !tbaa !3292
  %conv55 = sext i8 %49 to i32, !dbg !19076
  switch i32 %conv55, label %sw.epilog [
    i32 105, label %sw.bb56
    i32 66, label %sw.bb64
    i32 68, label %sw.bb64
  ], !dbg !19077

sw.bb56:                                          ; preds = %if.then52
  %50 = load i8**, i8*** %p, align 8, !dbg !19078, !tbaa !2645
  %arrayidx57 = getelementptr inbounds i8*, i8** %50, i64 0, !dbg !19078, !ctir !184
  %51 = load i8*, i8** %arrayidx57, align 8, !dbg !19078, !tbaa !2645
  %arrayidx58 = getelementptr inbounds i8, i8* %51, i64 2, !dbg !19078, !ctir !9
  %52 = load i8, i8* %arrayidx58, align 1, !dbg !19078, !tbaa !3292
  %conv59 = sext i8 %52 to i32, !dbg !19078
  %cmp60 = icmp eq i32 %conv59, 66, !dbg !19081
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !19082

if.then62:                                        ; preds = %sw.bb56
  %53 = load i32, i32* %suffixes, align 4, !dbg !19083, !tbaa !2632
  %add = add nsw i32 %53, 2, !dbg !19083
  store i32 %add, i32* %suffixes, align 4, !dbg !19083, !tbaa !2632
  br label %if.end63, !dbg !19084

if.end63:                                         ; preds = %if.then62, %sw.bb56
  br label %sw.epilog, !dbg !19085

sw.bb64:                                          ; preds = %if.then52, %if.then52
  store i32 1000, i32* %base, align 4, !dbg !19086, !tbaa !2632
  %54 = load i32, i32* %suffixes, align 4, !dbg !19087, !tbaa !2632
  %inc = add nsw i32 %54, 1, !dbg !19087
  store i32 %inc, i32* %suffixes, align 4, !dbg !19087, !tbaa !2632
  br label %sw.epilog, !dbg !19088

sw.epilog:                                        ; preds = %if.then52, %sw.bb64, %if.end63
  br label %if.end65, !dbg !19089

if.end65:                                         ; preds = %sw.epilog, %sw.bb
  br label %sw.epilog66, !dbg !19090

sw.epilog66:                                      ; preds = %if.end65, %if.end48
  %55 = load i8**, i8*** %p, align 8, !dbg !19091, !tbaa !2645
  %56 = load i8*, i8** %55, align 8, !dbg !19092, !tbaa !2645, !ctir !9
  %57 = load i8, i8* %56, align 1, !dbg !19093, !tbaa !3292, !ctir !10
  %conv67 = sext i8 %57 to i32, !dbg !19093
  switch i32 %conv67, label %sw.default [
    i32 98, label %sw.bb68
    i32 66, label %sw.bb70
    i32 99, label %sw.bb72
    i32 69, label %sw.bb73
    i32 71, label %sw.bb75
    i32 103, label %sw.bb75
    i32 107, label %sw.bb77
    i32 75, label %sw.bb77
    i32 77, label %sw.bb79
    i32 109, label %sw.bb79
    i32 80, label %sw.bb81
    i32 84, label %sw.bb83
    i32 116, label %sw.bb83
    i32 119, label %sw.bb85
    i32 89, label %sw.bb87
    i32 90, label %sw.bb89
  ], !dbg !19094

sw.bb68:                                          ; preds = %sw.epilog66
  %call69 = call i32 @bkm_scale(i64* %tmp, i32 512), !dbg !19095
  store i32 %call69, i32* %overflow, align 4, !dbg !19097, !tbaa !3292
  br label %sw.epilog92, !dbg !19098

sw.bb70:                                          ; preds = %sw.epilog66
  %call71 = call i32 @bkm_scale(i64* %tmp, i32 1024), !dbg !19099
  store i32 %call71, i32* %overflow, align 4, !dbg !19100, !tbaa !3292
  br label %sw.epilog92, !dbg !19101

sw.bb72:                                          ; preds = %sw.epilog66
  store i32 0, i32* %overflow, align 4, !dbg !19102, !tbaa !3292
  br label %sw.epilog92, !dbg !19103

sw.bb73:                                          ; preds = %sw.epilog66
  %58 = load i32, i32* %base, align 4, !dbg !19104, !tbaa !2632
  %call74 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %58, i32 6), !dbg !19105
  store i32 %call74, i32* %overflow, align 4, !dbg !19106, !tbaa !3292
  br label %sw.epilog92, !dbg !19107

sw.bb75:                                          ; preds = %sw.epilog66, %sw.epilog66
  %59 = load i32, i32* %base, align 4, !dbg !19108, !tbaa !2632
  %call76 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %59, i32 3), !dbg !19109
  store i32 %call76, i32* %overflow, align 4, !dbg !19110, !tbaa !3292
  br label %sw.epilog92, !dbg !19111

sw.bb77:                                          ; preds = %sw.epilog66, %sw.epilog66
  %60 = load i32, i32* %base, align 4, !dbg !19112, !tbaa !2632
  %call78 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %60, i32 1), !dbg !19113
  store i32 %call78, i32* %overflow, align 4, !dbg !19114, !tbaa !3292
  br label %sw.epilog92, !dbg !19115

sw.bb79:                                          ; preds = %sw.epilog66, %sw.epilog66
  %61 = load i32, i32* %base, align 4, !dbg !19116, !tbaa !2632
  %call80 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %61, i32 2), !dbg !19117
  store i32 %call80, i32* %overflow, align 4, !dbg !19118, !tbaa !3292
  br label %sw.epilog92, !dbg !19119

sw.bb81:                                          ; preds = %sw.epilog66
  %62 = load i32, i32* %base, align 4, !dbg !19120, !tbaa !2632
  %call82 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %62, i32 5), !dbg !19121
  store i32 %call82, i32* %overflow, align 4, !dbg !19122, !tbaa !3292
  br label %sw.epilog92, !dbg !19123

sw.bb83:                                          ; preds = %sw.epilog66, %sw.epilog66
  %63 = load i32, i32* %base, align 4, !dbg !19124, !tbaa !2632
  %call84 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %63, i32 4), !dbg !19125
  store i32 %call84, i32* %overflow, align 4, !dbg !19126, !tbaa !3292
  br label %sw.epilog92, !dbg !19127

sw.bb85:                                          ; preds = %sw.epilog66
  %call86 = call i32 @bkm_scale(i64* %tmp, i32 2), !dbg !19128
  store i32 %call86, i32* %overflow, align 4, !dbg !19129, !tbaa !3292
  br label %sw.epilog92, !dbg !19130

sw.bb87:                                          ; preds = %sw.epilog66
  %64 = load i32, i32* %base, align 4, !dbg !19131, !tbaa !2632
  %call88 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %64, i32 8), !dbg !19132
  store i32 %call88, i32* %overflow, align 4, !dbg !19133, !tbaa !3292
  br label %sw.epilog92, !dbg !19134

sw.bb89:                                          ; preds = %sw.epilog66
  %65 = load i32, i32* %base, align 4, !dbg !19135, !tbaa !2632
  %call90 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %65, i32 7), !dbg !19136
  store i32 %call90, i32* %overflow, align 4, !dbg !19137, !tbaa !3292
  br label %sw.epilog92, !dbg !19138

sw.default:                                       ; preds = %sw.epilog66
  %66 = load i64, i64* %tmp, align 8, !dbg !19139, !tbaa !3285
  %67 = load i64*, i64** %val.addr, align 8, !dbg !19140, !tbaa !2645
  store i64 %66, i64* %67, align 8, !dbg !19141, !tbaa !3285, !ctir !57
  %68 = load i32, i32* %err, align 4, !dbg !19142, !tbaa !3292
  %or91 = or i32 %68, 2, !dbg !19143
  store i32 %or91, i32* %retval, align 4, !dbg !19144
  br label %return, !dbg !19144

sw.epilog92:                                      ; preds = %sw.bb89, %sw.bb87, %sw.bb85, %sw.bb83, %sw.bb81, %sw.bb79, %sw.bb77, %sw.bb75, %sw.bb73, %sw.bb72, %sw.bb70, %sw.bb68
  %69 = load i32, i32* %overflow, align 4, !dbg !19145, !tbaa !3292
  %70 = load i32, i32* %err, align 4, !dbg !19146, !tbaa !3292
  %or93 = or i32 %70, %69, !dbg !19146
  store i32 %or93, i32* %err, align 4, !dbg !19146, !tbaa !3292
  %71 = load i32, i32* %suffixes, align 4, !dbg !19147, !tbaa !2632
  %72 = load i8**, i8*** %p, align 8, !dbg !19148, !tbaa !2645
  %73 = load i8*, i8** %72, align 8, !dbg !19149, !tbaa !2645, !ctir !9
  %idx.ext = sext i32 %71 to i64, !dbg !19149
  %add.ptr = getelementptr inbounds i8, i8* %73, i64 %idx.ext, !dbg !19149
  store i8* %add.ptr, i8** %72, align 8, !dbg !19149, !tbaa !2645, !ctir !9
  %74 = load i8**, i8*** %p, align 8, !dbg !19150, !tbaa !2645
  %75 = load i8*, i8** %74, align 8, !dbg !19152, !tbaa !2645, !ctir !9
  %76 = load i8, i8* %75, align 1, !dbg !19153, !tbaa !3292, !ctir !10
  %tobool94 = icmp ne i8 %76, 0, !dbg !19153
  br i1 %tobool94, label %if.then95, label %if.end97, !dbg !19154

if.then95:                                        ; preds = %sw.epilog92
  %77 = load i32, i32* %err, align 4, !dbg !19155, !tbaa !3292
  %or96 = or i32 %77, 2, !dbg !19155
  store i32 %or96, i32* %err, align 4, !dbg !19155, !tbaa !3292
  br label %if.end97, !dbg !19156

if.end97:                                         ; preds = %if.then95, %sw.epilog92
  br label %if.end98, !dbg !19157

if.end98:                                         ; preds = %if.end97, %if.end39
  %78 = load i64, i64* %tmp, align 8, !dbg !19158, !tbaa !3285
  %79 = load i64*, i64** %val.addr, align 8, !dbg !19159, !tbaa !2645
  store i64 %78, i64* %79, align 8, !dbg !19160, !tbaa !3285, !ctir !57
  %80 = load i32, i32* %err, align 4, !dbg !19161, !tbaa !3292
  store i32 %80, i32* %retval, align 4, !dbg !19162
  br label %return, !dbg !19162

return:                                           ; preds = %if.end98, %sw.default, %if.then47, %if.then38, %if.then33, %if.else23, %if.then8
  %81 = load i32, i32* %retval, align 4, !dbg !19163
  ret i32 %81, !dbg !19163
}

; Function Attrs: nounwind
declare dso_local i64 @strtoul(i8*, i8**, i32) #2

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #7

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale(i64* %x, i32 %scale_factor) #4 !dbg !19164 !ctir !2035 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca i64*, align 8
  %scale_factor.addr = alloca i32, align 4
  store i64* %x, i64** %x.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i64** %x.addr, metadata !19165, metadata !DIExpression()), !dbg !19166
  store i32 %scale_factor, i32* %scale_factor.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %scale_factor.addr, metadata !19167, metadata !DIExpression()), !dbg !19168
  %0 = load i32, i32* %scale_factor.addr, align 4, !dbg !19169, !tbaa !2632
  %conv = sext i32 %0 to i64, !dbg !19169
  %div = udiv i64 -1, %conv, !dbg !19171
  %1 = load i64*, i64** %x.addr, align 8, !dbg !19172, !tbaa !2645
  %2 = load i64, i64* %1, align 8, !dbg !19173, !tbaa !3285, !ctir !57
  %cmp = icmp ult i64 %div, %2, !dbg !19174
  br i1 %cmp, label %if.then, label %if.end, !dbg !19175

if.then:                                          ; preds = %entry
  %3 = load i64*, i64** %x.addr, align 8, !dbg !19176, !tbaa !2645
  store i64 -1, i64* %3, align 8, !dbg !19178, !tbaa !3285, !ctir !57
  store i32 1, i32* %retval, align 4, !dbg !19179
  br label %return, !dbg !19179

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %scale_factor.addr, align 4, !dbg !19180, !tbaa !2632
  %conv2 = sext i32 %4 to i64, !dbg !19180
  %5 = load i64*, i64** %x.addr, align 8, !dbg !19181, !tbaa !2645
  %6 = load i64, i64* %5, align 8, !dbg !19182, !tbaa !3285, !ctir !57
  %mul = mul i64 %6, %conv2, !dbg !19182
  store i64 %mul, i64* %5, align 8, !dbg !19182, !tbaa !3285, !ctir !57
  store i32 0, i32* %retval, align 4, !dbg !19183
  br label %return, !dbg !19183

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !19184
  ret i32 %7, !dbg !19184
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @bkm_scale_by_power(i64* %x, i32 %base, i32 %power) #4 !dbg !19185 !ctir !2037 {
entry:
  %x.addr = alloca i64*, align 8
  %base.addr = alloca i32, align 4
  %power.addr = alloca i32, align 4
  %err = alloca i32, align 4, !ctir !2033
  store i64* %x, i64** %x.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i64** %x.addr, metadata !19186, metadata !DIExpression()), !dbg !19187
  store i32 %base, i32* %base.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %base.addr, metadata !19188, metadata !DIExpression()), !dbg !19189
  store i32 %power, i32* %power.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %power.addr, metadata !19190, metadata !DIExpression()), !dbg !19191
  call void @llvm.dbg.declare(metadata i32* %err, metadata !19192, metadata !DIExpression()), !dbg !19193
  store i32 0, i32* %err, align 4, !dbg !19193, !tbaa !3292
  br label %while.cond, !dbg !19194

while.cond:                                       ; preds = %while.body, %entry
  %0 = load i32, i32* %power.addr, align 4, !dbg !19195, !tbaa !2632
  %dec = add nsw i32 %0, -1, !dbg !19195
  store i32 %dec, i32* %power.addr, align 4, !dbg !19195, !tbaa !2632
  %tobool = icmp ne i32 %0, 0, !dbg !19194
  br i1 %tobool, label %while.body, label %while.end, !dbg !19194

while.body:                                       ; preds = %while.cond
  %1 = load i64*, i64** %x.addr, align 8, !dbg !19196, !tbaa !2645
  %2 = load i32, i32* %base.addr, align 4, !dbg !19197, !tbaa !2632
  %call = call i32 @bkm_scale(i64* %1, i32 %2), !dbg !19198
  %3 = load i32, i32* %err, align 4, !dbg !19199, !tbaa !3292
  %or = or i32 %3, %call, !dbg !19199
  store i32 %or, i32* %err, align 4, !dbg !19199, !tbaa !3292
  br label %while.cond, !dbg !19194, !llvm.loop !19200

while.end:                                        ; preds = %while.cond
  %4 = load i32, i32* %err, align 4, !dbg !19202, !tbaa !3292
  ret i32 %4, !dbg !19203
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @xvasprintf(i8* %format, %struct.__va_list_tag* %args) #4 !dbg !19204 !ctir !2042 {
entry:
  %retval = alloca i8*, align 8
  %format.addr = alloca i8*, align 8
  %args.addr = alloca %struct.__va_list_tag*, align 8
  %result = alloca i8*, align 8, !ctir !9
  %argcount = alloca i64, align 8, !ctir !55
  %f = alloca i8*, align 8, !ctir !180
  store i8* %format, i8** %format.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !19206, metadata !DIExpression()), !dbg !19207
  store %struct.__va_list_tag* %args, %struct.__va_list_tag** %args.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %args.addr, metadata !19208, metadata !DIExpression()), !dbg !19209
  call void @llvm.dbg.declare(metadata i8** %result, metadata !19210, metadata !DIExpression()), !dbg !19211
  call void @llvm.dbg.declare(metadata i64* %argcount, metadata !19212, metadata !DIExpression()), !dbg !19214
  store i64 0, i64* %argcount, align 8, !dbg !19214, !tbaa !3285
  call void @llvm.dbg.declare(metadata i8** %f, metadata !19215, metadata !DIExpression()), !dbg !19216
  %0 = load i8*, i8** %format.addr, align 8, !dbg !19217, !tbaa !2645
  store i8* %0, i8** %f, align 8, !dbg !19219, !tbaa !2645
  br label %for.cond, !dbg !19220

for.cond:                                         ; preds = %if.end11, %entry
  %1 = load i8*, i8** %f, align 8, !dbg !19221, !tbaa !2645
  %2 = load i8, i8* %1, align 1, !dbg !19225, !tbaa !3292, !ctir !181
  %conv = sext i8 %2 to i32, !dbg !19225
  %cmp = icmp eq i32 %conv, 0, !dbg !19226
  br i1 %cmp, label %if.then, label %if.end, !dbg !19227

if.then:                                          ; preds = %for.cond
  %3 = load i64, i64* %argcount, align 8, !dbg !19228, !tbaa !3285
  %4 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !19229, !tbaa !2645
  %call = call i8* @xstrcat(i64 %3, %struct.__va_list_tag* %4), !dbg !19230
  store i8* %call, i8** %retval, align 8, !dbg !19231
  br label %return, !dbg !19231

if.end:                                           ; preds = %for.cond
  %5 = load i8*, i8** %f, align 8, !dbg !19232, !tbaa !2645
  %6 = load i8, i8* %5, align 1, !dbg !19234, !tbaa !3292, !ctir !181
  %conv2 = sext i8 %6 to i32, !dbg !19234
  %cmp3 = icmp ne i32 %conv2, 37, !dbg !19235
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !19236

if.then5:                                         ; preds = %if.end
  br label %for.end, !dbg !19237

if.end6:                                          ; preds = %if.end
  %7 = load i8*, i8** %f, align 8, !dbg !19238, !tbaa !2645
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !19238
  store i8* %incdec.ptr, i8** %f, align 8, !dbg !19238, !tbaa !2645
  %8 = load i8*, i8** %f, align 8, !dbg !19239, !tbaa !2645
  %9 = load i8, i8* %8, align 1, !dbg !19241, !tbaa !3292, !ctir !181
  %conv7 = sext i8 %9 to i32, !dbg !19241
  %cmp8 = icmp ne i32 %conv7, 115, !dbg !19242
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !19243

if.then10:                                        ; preds = %if.end6
  br label %for.end, !dbg !19244

if.end11:                                         ; preds = %if.end6
  %10 = load i8*, i8** %f, align 8, !dbg !19245, !tbaa !2645
  %incdec.ptr12 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !19245
  store i8* %incdec.ptr12, i8** %f, align 8, !dbg !19245, !tbaa !2645
  %11 = load i64, i64* %argcount, align 8, !dbg !19246, !tbaa !3285
  %inc = add i64 %11, 1, !dbg !19246
  store i64 %inc, i64* %argcount, align 8, !dbg !19246, !tbaa !3285
  br label %for.cond, !dbg !19247, !llvm.loop !19248

for.end:                                          ; preds = %if.then10, %if.then5
  %12 = load i8*, i8** %format.addr, align 8, !dbg !19251, !tbaa !2645
  %13 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !19253, !tbaa !2645
  %call13 = call i32 @vasprintf(i8** %result, i8* %12, %struct.__va_list_tag* %13) #9, !dbg !19254
  %cmp14 = icmp slt i32 %call13, 0, !dbg !19255
  br i1 %cmp14, label %if.then16, label %if.end22, !dbg !19256

if.then16:                                        ; preds = %for.end
  %call17 = call i32* @__errno_location() #16, !dbg !19257
  %14 = load i32, i32* %call17, align 4, !dbg !19257, !tbaa !2632, !ctir !7
  %cmp18 = icmp eq i32 %14, 12, !dbg !19260
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !19261

if.then20:                                        ; preds = %if.then16
  call void @xalloc_die() #15, !dbg !19262
  unreachable, !dbg !19262

if.end21:                                         ; preds = %if.then16
  store i8* null, i8** %retval, align 8, !dbg !19263
  br label %return, !dbg !19263

if.end22:                                         ; preds = %for.end
  %15 = load i8*, i8** %result, align 8, !dbg !19264, !tbaa !2645
  store i8* %15, i8** %retval, align 8, !dbg !19265
  br label %return, !dbg !19265

return:                                           ; preds = %if.end22, %if.end21, %if.then
  %16 = load i8*, i8** %retval, align 8, !dbg !19266
  ret i8* %16, !dbg !19266
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @xstrcat(i64 %argcount, %struct.__va_list_tag* %args) #4 !dbg !19267 !ctir !2051 {
entry:
  %retval = alloca i8*, align 8
  %argcount.addr = alloca i64, align 8
  %args.addr = alloca %struct.__va_list_tag*, align 8
  %result = alloca i8*, align 8, !ctir !9
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !2053
  %totalsize = alloca i64, align 8, !ctir !55
  %i = alloca i64, align 8, !ctir !55
  %p = alloca i8*, align 8, !ctir !9
  %next = alloca i8*, align 8, !ctir !180
  %next12 = alloca i8*, align 8, !ctir !180
  %len = alloca i64, align 8, !ctir !55
  store i64 %argcount, i64* %argcount.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %argcount.addr, metadata !19268, metadata !DIExpression()), !dbg !19269
  store %struct.__va_list_tag* %args, %struct.__va_list_tag** %args.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %args.addr, metadata !19270, metadata !DIExpression()), !dbg !19271
  call void @llvm.dbg.declare(metadata i8** %result, metadata !19272, metadata !DIExpression()), !dbg !19273
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !19274, metadata !DIExpression()), !dbg !19275
  call void @llvm.dbg.declare(metadata i64* %totalsize, metadata !19276, metadata !DIExpression()), !dbg !19277
  call void @llvm.dbg.declare(metadata i64* %i, metadata !19278, metadata !DIExpression()), !dbg !19279
  call void @llvm.dbg.declare(metadata i8** %p, metadata !19280, metadata !DIExpression()), !dbg !19281
  store i64 0, i64* %totalsize, align 8, !dbg !19282, !tbaa !3285
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !19283
  %0 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !19283, !tbaa !2645
  %1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !19283
  %2 = bitcast %struct.__va_list_tag* %0 to i8*, !dbg !19283
  call void @llvm.va_copy(i8* %1, i8* %2), !dbg !19283
  %3 = load i64, i64* %argcount.addr, align 8, !dbg !19284, !tbaa !3285
  store i64 %3, i64* %i, align 8, !dbg !19286, !tbaa !3285
  br label %for.cond, !dbg !19287

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i64, i64* %i, align 8, !dbg !19288, !tbaa !3285
  %cmp = icmp ugt i64 %4, 0, !dbg !19290
  br i1 %cmp, label %for.body, label %for.end, !dbg !19291

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %next, metadata !19292, metadata !DIExpression()), !dbg !19294
  %arraydecay1 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !19295
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay1, i32 0, i32 0, !dbg !19295
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !19295
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !19295
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !19295

vaarg.in_reg:                                     ; preds = %for.body
  %5 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay1, i32 0, i32 3, !dbg !19295
  %reg_save_area = load i8*, i8** %5, align 16, !dbg !19295
  %6 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !19295
  %7 = bitcast i8* %6 to i8**, !dbg !19295
  %8 = add i32 %gp_offset, 8, !dbg !19295
  store i32 %8, i32* %gp_offset_p, align 16, !dbg !19295
  br label %vaarg.end, !dbg !19295

vaarg.in_mem:                                     ; preds = %for.body
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay1, i32 0, i32 2, !dbg !19295
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !19295
  %9 = bitcast i8* %overflow_arg_area to i8**, !dbg !19295
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !19295
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !19295
  br label %vaarg.end, !dbg !19295

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i8** [ %7, %vaarg.in_reg ], [ %9, %vaarg.in_mem ], !dbg !19295
  %10 = load i8*, i8** %vaarg.addr, align 8, !dbg !19295
  store i8* %10, i8** %next, align 8, !dbg !19294, !tbaa !2645
  %11 = load i64, i64* %totalsize, align 8, !dbg !19296, !tbaa !3285
  %12 = load i8*, i8** %next, align 8, !dbg !19297, !tbaa !2645
  %call = call i64 @strlen(i8* %12) #14, !dbg !19298
  %call2 = call i64 @xsum(i64 %11, i64 %call) #14, !dbg !19299
  store i64 %call2, i64* %totalsize, align 8, !dbg !19300, !tbaa !3285
  br label %for.inc, !dbg !19301

for.inc:                                          ; preds = %vaarg.end
  %13 = load i64, i64* %i, align 8, !dbg !19302, !tbaa !3285
  %dec = add i64 %13, -1, !dbg !19302
  store i64 %dec, i64* %i, align 8, !dbg !19302, !tbaa !3285
  br label %for.cond, !dbg !19303, !llvm.loop !19304

for.end:                                          ; preds = %for.cond
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !19306
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !19306
  call void @llvm.va_end(i8* %arraydecay34), !dbg !19306
  %14 = load i64, i64* %totalsize, align 8, !dbg !19307, !tbaa !3285
  %cmp5 = icmp eq i64 %14, -1, !dbg !19309
  br i1 %cmp5, label %if.then, label %lor.lhs.false, !dbg !19310

lor.lhs.false:                                    ; preds = %for.end
  %15 = load i64, i64* %totalsize, align 8, !dbg !19311, !tbaa !3285
  %cmp6 = icmp ugt i64 %15, 2147483647, !dbg !19312
  br i1 %cmp6, label %if.then, label %if.end, !dbg !19313

if.then:                                          ; preds = %lor.lhs.false, %for.end
  %call7 = call i32* @__errno_location() #16, !dbg !19314
  store i32 75, i32* %call7, align 4, !dbg !19316, !tbaa !2632, !ctir !7
  store i8* null, i8** %retval, align 8, !dbg !19317
  br label %return, !dbg !19317

if.end:                                           ; preds = %lor.lhs.false
  %16 = load i64, i64* %totalsize, align 8, !dbg !19318, !tbaa !3285
  %add = add i64 %16, 1, !dbg !19318
  %call8 = call noalias i8* @xmalloc(i64 %add), !dbg !19318
  store i8* %call8, i8** %result, align 8, !dbg !19319, !tbaa !2645
  %17 = load i8*, i8** %result, align 8, !dbg !19320, !tbaa !2645
  store i8* %17, i8** %p, align 8, !dbg !19321, !tbaa !2645
  %18 = load i64, i64* %argcount.addr, align 8, !dbg !19322, !tbaa !3285
  store i64 %18, i64* %i, align 8, !dbg !19324, !tbaa !3285
  br label %for.cond9, !dbg !19325

for.cond9:                                        ; preds = %for.inc25, %if.end
  %19 = load i64, i64* %i, align 8, !dbg !19326, !tbaa !3285
  %cmp10 = icmp ugt i64 %19, 0, !dbg !19328
  br i1 %cmp10, label %for.body11, label %for.end27, !dbg !19329

for.body11:                                       ; preds = %for.cond9
  call void @llvm.dbg.declare(metadata i8** %next12, metadata !19330, metadata !DIExpression()), !dbg !19332
  %20 = load %struct.__va_list_tag*, %struct.__va_list_tag** %args.addr, align 8, !dbg !19333, !tbaa !2645
  %gp_offset_p13 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %20, i32 0, i32 0, !dbg !19333
  %gp_offset14 = load i32, i32* %gp_offset_p13, align 8, !dbg !19333
  %fits_in_gp15 = icmp ule i32 %gp_offset14, 40, !dbg !19333
  br i1 %fits_in_gp15, label %vaarg.in_reg16, label %vaarg.in_mem18, !dbg !19333

vaarg.in_reg16:                                   ; preds = %for.body11
  %21 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %20, i32 0, i32 3, !dbg !19333
  %reg_save_area17 = load i8*, i8** %21, align 8, !dbg !19333
  %22 = getelementptr i8, i8* %reg_save_area17, i32 %gp_offset14, !dbg !19333
  %23 = bitcast i8* %22 to i8**, !dbg !19333
  %24 = add i32 %gp_offset14, 8, !dbg !19333
  store i32 %24, i32* %gp_offset_p13, align 8, !dbg !19333
  br label %vaarg.end22, !dbg !19333

vaarg.in_mem18:                                   ; preds = %for.body11
  %overflow_arg_area_p19 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %20, i32 0, i32 2, !dbg !19333
  %overflow_arg_area20 = load i8*, i8** %overflow_arg_area_p19, align 8, !dbg !19333
  %25 = bitcast i8* %overflow_arg_area20 to i8**, !dbg !19333
  %overflow_arg_area.next21 = getelementptr i8, i8* %overflow_arg_area20, i32 8, !dbg !19333
  store i8* %overflow_arg_area.next21, i8** %overflow_arg_area_p19, align 8, !dbg !19333
  br label %vaarg.end22, !dbg !19333

vaarg.end22:                                      ; preds = %vaarg.in_mem18, %vaarg.in_reg16
  %vaarg.addr23 = phi i8** [ %23, %vaarg.in_reg16 ], [ %25, %vaarg.in_mem18 ], !dbg !19333
  %26 = load i8*, i8** %vaarg.addr23, align 8, !dbg !19333
  store i8* %26, i8** %next12, align 8, !dbg !19332, !tbaa !2645
  call void @llvm.dbg.declare(metadata i64* %len, metadata !19334, metadata !DIExpression()), !dbg !19335
  %27 = load i8*, i8** %next12, align 8, !dbg !19336, !tbaa !2645
  %call24 = call i64 @strlen(i8* %27) #14, !dbg !19337
  store i64 %call24, i64* %len, align 8, !dbg !19335, !tbaa !3285
  %28 = load i8*, i8** %p, align 8, !dbg !19338, !tbaa !2645
  %29 = load i8*, i8** %next12, align 8, !dbg !19339, !tbaa !2645
  %30 = load i64, i64* %len, align 8, !dbg !19340, !tbaa !3285
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %28, i8* align 1 %29, i64 %30, i1 false), !dbg !19341
  %31 = load i64, i64* %len, align 8, !dbg !19342, !tbaa !3285
  %32 = load i8*, i8** %p, align 8, !dbg !19343, !tbaa !2645
  %add.ptr = getelementptr inbounds i8, i8* %32, i64 %31, !dbg !19343
  store i8* %add.ptr, i8** %p, align 8, !dbg !19343, !tbaa !2645
  br label %for.inc25, !dbg !19344

for.inc25:                                        ; preds = %vaarg.end22
  %33 = load i64, i64* %i, align 8, !dbg !19345, !tbaa !3285
  %dec26 = add i64 %33, -1, !dbg !19345
  store i64 %dec26, i64* %i, align 8, !dbg !19345, !tbaa !3285
  br label %for.cond9, !dbg !19346, !llvm.loop !19347

for.end27:                                        ; preds = %for.cond9
  %34 = load i8*, i8** %p, align 8, !dbg !19349, !tbaa !2645
  store i8 0, i8* %34, align 1, !dbg !19350, !tbaa !3292, !ctir !10
  %35 = load i8*, i8** %result, align 8, !dbg !19351, !tbaa !2645
  store i8* %35, i8** %retval, align 8, !dbg !19352
  br label %return, !dbg !19352

return:                                           ; preds = %for.end27, %if.then
  %36 = load i8*, i8** %retval, align 8, !dbg !19353
  ret i8* %36, !dbg !19353
}

; Function Attrs: nounwind
declare dso_local i32 @vasprintf(i8**, i8*, %struct.__va_list_tag*) #2

; Function Attrs: nounwind
declare void @llvm.va_copy(i8*, i8*) #9

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @yesno() #4 !dbg !19354 !ctir !1329 {
entry:
  %yes = alloca i8, align 1, !ctir !142
  %response = alloca i8*, align 8, !ctir !9
  %response_size = alloca i64, align 8, !ctir !55
  %response_len = alloca i64, align 8, !ctir !692
  call void @llvm.dbg.declare(metadata i8* %yes, metadata !19356, metadata !DIExpression()), !dbg !19357
  call void @llvm.dbg.declare(metadata i8** %response, metadata !19358, metadata !DIExpression()), !dbg !19359
  store i8* null, i8** %response, align 8, !dbg !19359, !tbaa !2645
  call void @llvm.dbg.declare(metadata i64* %response_size, metadata !19360, metadata !DIExpression()), !dbg !19361
  store i64 0, i64* %response_size, align 8, !dbg !19361, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %response_len, metadata !19362, metadata !DIExpression()), !dbg !19363
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !19364, !tbaa !2645
  %call = call i64 @getline(i8** %response, i64* %response_size, %struct._IO_FILE* %0), !dbg !19365
  store i64 %call, i64* %response_len, align 8, !dbg !19363, !tbaa !3285
  %1 = load i64, i64* %response_len, align 8, !dbg !19366, !tbaa !3285
  %cmp = icmp sle i64 %1, 0, !dbg !19368
  br i1 %cmp, label %if.then, label %if.else, !dbg !19369

if.then:                                          ; preds = %entry
  store i8 0, i8* %yes, align 1, !dbg !19370, !tbaa !2739
  br label %if.end9, !dbg !19371

if.else:                                          ; preds = %entry
  %2 = load i8*, i8** %response, align 8, !dbg !19372, !tbaa !2645
  %3 = load i64, i64* %response_len, align 8, !dbg !19375, !tbaa !3285
  %sub = sub nsw i64 %3, 1, !dbg !19376
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 %sub, !dbg !19372, !ctir !9
  %4 = load i8, i8* %arrayidx, align 1, !dbg !19372, !tbaa !3292
  %conv = sext i8 %4 to i32, !dbg !19372
  %cmp1 = icmp eq i32 %conv, 10, !dbg !19377
  br i1 %cmp1, label %if.then3, label %if.end, !dbg !19378

if.then3:                                         ; preds = %if.else
  %5 = load i8*, i8** %response, align 8, !dbg !19379, !tbaa !2645
  %6 = load i64, i64* %response_len, align 8, !dbg !19380, !tbaa !3285
  %sub4 = sub nsw i64 %6, 1, !dbg !19381
  %arrayidx5 = getelementptr inbounds i8, i8* %5, i64 %sub4, !dbg !19379, !ctir !9
  store i8 0, i8* %arrayidx5, align 1, !dbg !19382, !tbaa !3292
  br label %if.end, !dbg !19379

if.end:                                           ; preds = %if.then3, %if.else
  %7 = load i8*, i8** %response, align 8, !dbg !19383, !tbaa !2645
  %call6 = call i32 @rpmatch(i8* %7) #9, !dbg !19384
  %cmp7 = icmp slt i32 0, %call6, !dbg !19385
  %frombool = zext i1 %cmp7 to i8, !dbg !19386
  store i8 %frombool, i8* %yes, align 1, !dbg !19386, !tbaa !2739
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.then
  %8 = load i8*, i8** %response, align 8, !dbg !19387, !tbaa !2645
  call void @free(i8* %8) #9, !dbg !19388
  %9 = load i8, i8* %yes, align 1, !dbg !19389, !tbaa !2739
  %tobool = trunc i8 %9 to i1, !dbg !19389
  ret i1 %tobool, !dbg !19390
}

declare dso_local i64 @getline(i8**, i64*, %struct._IO_FILE*) #3

; Function Attrs: nounwind
declare dso_local i32 @rpmatch(i8*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fflush(%struct._IO_FILE* %stream) #4 !dbg !19391 !ctir !2097 {
entry:
  %retval = alloca i32, align 4
  %stream.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !19393, metadata !DIExpression()), !dbg !19394
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19395, !tbaa !2645
  %cmp = icmp eq %struct._IO_FILE* %0, null, !dbg !19397
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !19398

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19399, !tbaa !2645
  %call = call i32 @__freading(%struct._IO_FILE* %1) #9, !dbg !19399
  %cmp1 = icmp ne i32 %call, 0, !dbg !19399
  br i1 %cmp1, label %if.end, label %if.then, !dbg !19400

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19401, !tbaa !2645
  %call2 = call i32 @fflush(%struct._IO_FILE* %2), !dbg !19402
  store i32 %call2, i32* %retval, align 4, !dbg !19403
  br label %return, !dbg !19403

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19404, !tbaa !2645
  call void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %3), !dbg !19405
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !19406, !tbaa !2645
  %call3 = call i32 @fflush(%struct._IO_FILE* %4), !dbg !19407
  store i32 %call3, i32* %retval, align 4, !dbg !19408
  br label %return, !dbg !19408

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !19409
  ret i32 %5, !dbg !19409
}

; Function Attrs: nounwind
declare dso_local i32 @__freading(%struct._IO_FILE*) #2

declare dso_local i32 @fflush(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @clear_ungetc_buffer_preserving_position(%struct._IO_FILE* %fp) #4 !dbg !19410 !ctir !2133 {
entry:
  %fp.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !19411, metadata !DIExpression()), !dbg !19412
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19413, !tbaa !2645
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 0, !dbg !19415, !ctir !2100
  %1 = load i32, i32* %_flags, align 8, !dbg !19415, !tbaa !19416, !ctir !7
  %and = and i32 %1, 256, !dbg !19418
  %tobool = icmp ne i32 %and, 0, !dbg !19418
  br i1 %tobool, label %if.then, label %if.end, !dbg !19419

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19420, !tbaa !2645
  %call = call i32 @rpl_fseeko(%struct._IO_FILE* %2, i64 0, i32 1), !dbg !19421
  br label %if.end, !dbg !19421

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !19422
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @freadahead(%struct._IO_FILE* %fp) #10 !dbg !19423 !ctir !2138 {
entry:
  %retval = alloca i64, align 8
  %fp.addr = alloca %struct._IO_FILE*, align 8
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !19425, metadata !DIExpression()), !dbg !19426
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19427, !tbaa !2645
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 5, !dbg !19429, !ctir !2141
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !19429, !tbaa !19430, !ctir !9
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19431, !tbaa !2645
  %_IO_write_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %2, i32 0, i32 4, !dbg !19432, !ctir !2141
  %3 = load i8*, i8** %_IO_write_base, align 8, !dbg !19432, !tbaa !19433, !ctir !9
  %cmp = icmp ugt i8* %1, %3, !dbg !19434
  br i1 %cmp, label %if.then, label %if.end, !dbg !19435

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !19436
  br label %return, !dbg !19436

if.end:                                           ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19437, !tbaa !2645
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %4, i32 0, i32 2, !dbg !19438, !ctir !2141
  %5 = load i8*, i8** %_IO_read_end, align 8, !dbg !19438, !tbaa !19439, !ctir !9
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19440, !tbaa !2645
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %6, i32 0, i32 1, !dbg !19441, !ctir !2141
  %7 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !19441, !tbaa !19442, !ctir !9
  %sub.ptr.lhs.cast = ptrtoint i8* %5 to i64, !dbg !19443
  %sub.ptr.rhs.cast = ptrtoint i8* %7 to i64, !dbg !19443
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !19443
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19444, !tbaa !2645
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %8, i32 0, i32 0, !dbg !19445, !ctir !2141
  %9 = load i32, i32* %_flags, align 8, !dbg !19445, !tbaa !19416, !ctir !7
  %and = and i32 %9, 256, !dbg !19446
  %tobool = icmp ne i32 %and, 0, !dbg !19446
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !19444

cond.true:                                        ; preds = %if.end
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19447, !tbaa !2645
  %_IO_save_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %10, i32 0, i32 11, !dbg !19448, !ctir !2141
  %11 = load i8*, i8** %_IO_save_end, align 8, !dbg !19448, !tbaa !19449, !ctir !9
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19450, !tbaa !2645
  %_IO_save_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %12, i32 0, i32 9, !dbg !19451, !ctir !2141
  %13 = load i8*, i8** %_IO_save_base, align 8, !dbg !19451, !tbaa !19452, !ctir !9
  %sub.ptr.lhs.cast1 = ptrtoint i8* %11 to i64, !dbg !19453
  %sub.ptr.rhs.cast2 = ptrtoint i8* %13 to i64, !dbg !19453
  %sub.ptr.sub3 = sub i64 %sub.ptr.lhs.cast1, %sub.ptr.rhs.cast2, !dbg !19453
  br label %cond.end, !dbg !19444

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !19444

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub.ptr.sub3, %cond.true ], [ 0, %cond.false ], !dbg !19444
  %add = add nsw i64 %sub.ptr.sub, %cond, !dbg !19454
  store i64 %add, i64* %retval, align 8, !dbg !19455
  br label %return, !dbg !19455

return:                                           ; preds = %cond.end, %if.then
  %14 = load i64, i64* %retval, align 8, !dbg !19456
  ret i64 %14, !dbg !19456
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fseeko(%struct._IO_FILE* nonnull %fp, i64 %offset, i32 %whence) #4 !dbg !19457 !ctir !2177 {
entry:
  %retval = alloca i32, align 4
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %offset.addr = alloca i64, align 8
  %whence.addr = alloca i32, align 4
  %pos = alloca i64, align 8, !ctir !352
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !19459, metadata !DIExpression()), !dbg !19460
  store i64 %offset, i64* %offset.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !19461, metadata !DIExpression()), !dbg !19462
  store i32 %whence, i32* %whence.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %whence.addr, metadata !19463, metadata !DIExpression()), !dbg !19464
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19465, !tbaa !2645
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i32 0, i32 2, !dbg !19467, !ctir !2180
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !19467, !tbaa !19439, !ctir !9
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19468, !tbaa !2645
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %2, i32 0, i32 1, !dbg !19469, !ctir !2180
  %3 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !19469, !tbaa !19442, !ctir !9
  %cmp = icmp eq i8* %1, %3, !dbg !19470
  br i1 %cmp, label %land.lhs.true, label %if.end7, !dbg !19471

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19472, !tbaa !2645
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %4, i32 0, i32 5, !dbg !19473, !ctir !2180
  %5 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !19473, !tbaa !19430, !ctir !9
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19474, !tbaa !2645
  %_IO_write_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %6, i32 0, i32 4, !dbg !19475, !ctir !2180
  %7 = load i8*, i8** %_IO_write_base, align 8, !dbg !19475, !tbaa !19433, !ctir !9
  %cmp1 = icmp eq i8* %5, %7, !dbg !19476
  br i1 %cmp1, label %land.lhs.true2, label %if.end7, !dbg !19477

land.lhs.true2:                                   ; preds = %land.lhs.true
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19478, !tbaa !2645
  %_IO_save_base = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %8, i32 0, i32 9, !dbg !19479, !ctir !2180
  %9 = load i8*, i8** %_IO_save_base, align 8, !dbg !19479, !tbaa !19452, !ctir !9
  %cmp3 = icmp eq i8* %9, null, !dbg !19480
  br i1 %cmp3, label %if.then, label %if.end7, !dbg !19481

if.then:                                          ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata i64* %pos, metadata !19482, metadata !DIExpression()), !dbg !19484
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19485, !tbaa !2645
  %call = call i32 @fileno(%struct._IO_FILE* %10) #9, !dbg !19486
  %11 = load i64, i64* %offset.addr, align 8, !dbg !19487, !tbaa !3285
  %12 = load i32, i32* %whence.addr, align 4, !dbg !19488, !tbaa !2632
  %call4 = call i64 @lseek(i32 %call, i64 %11, i32 %12) #9, !dbg !19489
  store i64 %call4, i64* %pos, align 8, !dbg !19484, !tbaa !3285
  %13 = load i64, i64* %pos, align 8, !dbg !19490, !tbaa !3285
  %cmp5 = icmp eq i64 %13, -1, !dbg !19492
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !19493

if.then6:                                         ; preds = %if.then
  store i32 -1, i32* %retval, align 4, !dbg !19494
  br label %return, !dbg !19494

if.end:                                           ; preds = %if.then
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19496, !tbaa !2645
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %14, i32 0, i32 0, !dbg !19497, !ctir !2180
  %15 = load i32, i32* %_flags, align 8, !dbg !19498, !tbaa !19416, !ctir !7
  %and = and i32 %15, -17, !dbg !19498
  store i32 %and, i32* %_flags, align 8, !dbg !19498, !tbaa !19416, !ctir !7
  %16 = load i64, i64* %pos, align 8, !dbg !19499, !tbaa !3285
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19500, !tbaa !2645
  %_offset = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %17, i32 0, i32 21, !dbg !19501, !ctir !2180
  store i64 %16, i64* %_offset, align 8, !dbg !19502, !tbaa !19503, !ctir !44
  store i32 0, i32* %retval, align 4, !dbg !19504
  br label %return, !dbg !19504

if.end7:                                          ; preds = %land.lhs.true2, %land.lhs.true, %entry
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !19505, !tbaa !2645
  %19 = load i64, i64* %offset.addr, align 8, !dbg !19506, !tbaa !3285
  %20 = load i32, i32* %whence.addr, align 4, !dbg !19507, !tbaa !2632
  %call8 = call i32 @fseeko(%struct._IO_FILE* %18, i64 %19, i32 %20), !dbg !19508
  store i32 %call8, i32* %retval, align 4, !dbg !19509
  br label %return, !dbg !19509

return:                                           ; preds = %if.end7, %if.end, %if.then6
  %21 = load i32, i32* %retval, align 4, !dbg !19510
  ret i32 %21, !dbg !19510
}

declare dso_local i32 @fseeko(%struct._IO_FILE*, i64, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rpl_mbrtowc(i32* %pwc, i8* %s, i64 %n, %struct.savewd* %ps) #4 !dbg !19511 !ctir !2216 {
entry:
  %retval = alloca i64, align 8
  %pwc.addr = alloca i32*, align 8
  %s.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %ps.addr = alloca %struct.savewd*, align 8
  %ret = alloca i64, align 8, !ctir !55
  %wc = alloca i32, align 4, !ctir !1125
  %uc = alloca i8, align 1, !ctir !554
  store i32* %pwc, i32** %pwc.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i32** %pwc.addr, metadata !19513, metadata !DIExpression()), !dbg !19514
  store i8* %s, i8** %s.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %s.addr, metadata !19515, metadata !DIExpression()), !dbg !19516
  store i64 %n, i64* %n.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !19517, metadata !DIExpression()), !dbg !19518
  store %struct.savewd* %ps, %struct.savewd** %ps.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.savewd** %ps.addr, metadata !19519, metadata !DIExpression()), !dbg !19520
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !19521, metadata !DIExpression()), !dbg !19522
  call void @llvm.dbg.declare(metadata i32* %wc, metadata !19523, metadata !DIExpression()), !dbg !19524
  %0 = load i32*, i32** %pwc.addr, align 8, !dbg !19525, !tbaa !2645
  %tobool = icmp ne i32* %0, null, !dbg !19525
  br i1 %tobool, label %if.end, label %if.then, !dbg !19527

if.then:                                          ; preds = %entry
  store i32* %wc, i32** %pwc.addr, align 8, !dbg !19528, !tbaa !2645
  br label %if.end, !dbg !19529

if.end:                                           ; preds = %if.then, %entry
  %1 = load i32*, i32** %pwc.addr, align 8, !dbg !19530, !tbaa !2645
  %2 = load i8*, i8** %s.addr, align 8, !dbg !19531, !tbaa !2645
  %3 = load i64, i64* %n.addr, align 8, !dbg !19532, !tbaa !3285
  %4 = load %struct.savewd*, %struct.savewd** %ps.addr, align 8, !dbg !19533, !tbaa !2645
  %call = call i64 @mbrtowc(i32* %1, i8* %2, i64 %3, %struct.savewd* %4) #9, !dbg !19534
  store i64 %call, i64* %ret, align 8, !dbg !19535, !tbaa !3285
  %5 = load i64, i64* %ret, align 8, !dbg !19536, !tbaa !3285
  %cmp = icmp ule i64 -2, %5, !dbg !19538
  br i1 %cmp, label %land.lhs.true, label %if.end5, !dbg !19539

land.lhs.true:                                    ; preds = %if.end
  %6 = load i64, i64* %n.addr, align 8, !dbg !19540, !tbaa !3285
  %cmp1 = icmp ne i64 %6, 0, !dbg !19541
  br i1 %cmp1, label %land.lhs.true2, label %if.end5, !dbg !19542

land.lhs.true2:                                   ; preds = %land.lhs.true
  %call3 = call zeroext i1 @hard_locale(i32 0), !dbg !19543
  br i1 %call3, label %if.end5, label %if.then4, !dbg !19544

if.then4:                                         ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata i8* %uc, metadata !19545, metadata !DIExpression()), !dbg !19547
  %7 = load i8*, i8** %s.addr, align 8, !dbg !19548, !tbaa !2645
  %8 = load i8, i8* %7, align 1, !dbg !19549, !tbaa !3292, !ctir !181
  store i8 %8, i8* %uc, align 1, !dbg !19547, !tbaa !3292
  %9 = load i8, i8* %uc, align 1, !dbg !19550, !tbaa !3292
  %conv = zext i8 %9 to i32, !dbg !19550
  %10 = load i32*, i32** %pwc.addr, align 8, !dbg !19551, !tbaa !2645
  store i32 %conv, i32* %10, align 4, !dbg !19552, !tbaa !2632, !ctir !1125
  store i64 1, i64* %retval, align 8, !dbg !19553
  br label %return, !dbg !19553

if.end5:                                          ; preds = %land.lhs.true2, %land.lhs.true, %if.end
  %11 = load i64, i64* %ret, align 8, !dbg !19554, !tbaa !3285
  store i64 %11, i64* %retval, align 8, !dbg !19555
  br label %return, !dbg !19555

return:                                           ; preds = %if.end5, %if.then4
  %12 = load i64, i64* %retval, align 8, !dbg !19556
  ret i64 %12, !dbg !19556
}

; Function Attrs: nounwind
declare dso_local i64 @mbrtowc(i32*, i8*, i64, %struct.savewd*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @acl_access_nontrivial(%struct.__acl_ext* %acl) #4 !dbg !19557 !ctir !2233 {
entry:
  %retval = alloca i32, align 4
  %acl.addr = alloca %struct.__acl_ext*, align 8
  %ace = alloca %struct.__acl_entry_ext*, align 8, !ctir !2239
  %got_one = alloca i32, align 4, !ctir !7
  %tag = alloca i32, align 4, !ctir !2242
  store %struct.__acl_ext* %acl, %struct.__acl_ext** %acl.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.__acl_ext** %acl.addr, metadata !19559, metadata !DIExpression()), !dbg !19560
  call void @llvm.dbg.declare(metadata %struct.__acl_entry_ext** %ace, metadata !19561, metadata !DIExpression()), !dbg !19562
  call void @llvm.dbg.declare(metadata i32* %got_one, metadata !19563, metadata !DIExpression()), !dbg !19564
  %0 = load %struct.__acl_ext*, %struct.__acl_ext** %acl.addr, align 8, !dbg !19565, !tbaa !2645
  %call = call i32 @acl_get_entry(%struct.__acl_ext* %0, i32 0, %struct.__acl_entry_ext** %ace), !dbg !19567
  store i32 %call, i32* %got_one, align 4, !dbg !19568, !tbaa !2632
  br label %for.cond, !dbg !19569

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %got_one, align 4, !dbg !19570, !tbaa !2632
  %cmp = icmp sgt i32 %1, 0, !dbg !19572
  br i1 %cmp, label %for.body, label %for.end, !dbg !19573

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %tag, metadata !19574, metadata !DIExpression()), !dbg !19576
  %2 = load %struct.__acl_entry_ext*, %struct.__acl_entry_ext** %ace, align 8, !dbg !19577, !tbaa !2645
  %call1 = call i32 @acl_get_tag_type(%struct.__acl_entry_ext* %2, i32* %tag), !dbg !19579
  %cmp2 = icmp slt i32 %call1, 0, !dbg !19580
  br i1 %cmp2, label %if.then, label %if.end, !dbg !19581

if.then:                                          ; preds = %for.body
  store i32 -1, i32* %retval, align 4, !dbg !19582
  br label %return, !dbg !19582

if.end:                                           ; preds = %for.body
  %3 = load i32, i32* %tag, align 4, !dbg !19583, !tbaa !2632
  %cmp3 = icmp eq i32 %3, 1, !dbg !19585
  br i1 %cmp3, label %if.end8, label %lor.lhs.false, !dbg !19586

lor.lhs.false:                                    ; preds = %if.end
  %4 = load i32, i32* %tag, align 4, !dbg !19587, !tbaa !2632
  %cmp4 = icmp eq i32 %4, 4, !dbg !19588
  br i1 %cmp4, label %if.end8, label %lor.lhs.false5, !dbg !19589

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %5 = load i32, i32* %tag, align 4, !dbg !19590, !tbaa !2632
  %cmp6 = icmp eq i32 %5, 32, !dbg !19591
  br i1 %cmp6, label %if.end8, label %if.then7, !dbg !19592

if.then7:                                         ; preds = %lor.lhs.false5
  store i32 1, i32* %retval, align 4, !dbg !19593
  br label %return, !dbg !19593

if.end8:                                          ; preds = %lor.lhs.false5, %lor.lhs.false, %if.end
  br label %for.inc, !dbg !19594

for.inc:                                          ; preds = %if.end8
  %6 = load %struct.__acl_ext*, %struct.__acl_ext** %acl.addr, align 8, !dbg !19595, !tbaa !2645
  %call9 = call i32 @acl_get_entry(%struct.__acl_ext* %6, i32 1, %struct.__acl_entry_ext** %ace), !dbg !19596
  store i32 %call9, i32* %got_one, align 4, !dbg !19597, !tbaa !2632
  br label %for.cond, !dbg !19598, !llvm.loop !19599

for.end:                                          ; preds = %for.cond
  %7 = load i32, i32* %got_one, align 4, !dbg !19601, !tbaa !2632
  store i32 %7, i32* %retval, align 4, !dbg !19602
  br label %return, !dbg !19602

return:                                           ; preds = %for.end, %if.then7, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !19603
  ret i32 %8, !dbg !19603
}

declare dso_local i32 @acl_get_entry(%struct.__acl_ext*, i32, %struct.__acl_entry_ext**) #3

declare dso_local i32 @acl_get_tag_type(%struct.__acl_entry_ext*, i32*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @acl_default_nontrivial(%struct.__acl_ext* %acl) #4 !dbg !19604 !ctir !2233 {
entry:
  %acl.addr = alloca %struct.__acl_ext*, align 8
  store %struct.__acl_ext* %acl, %struct.__acl_ext** %acl.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.__acl_ext** %acl.addr, metadata !19605, metadata !DIExpression()), !dbg !19606
  %0 = load %struct.__acl_ext*, %struct.__acl_ext** %acl.addr, align 8, !dbg !19607, !tbaa !2645
  %call = call i32 @acl_entries(%struct.__acl_ext* %0), !dbg !19608
  %cmp = icmp sgt i32 %call, 0, !dbg !19609
  %conv = zext i1 %cmp to i32, !dbg !19609
  ret i32 %conv, !dbg !19610
}

declare dso_local i32 @acl_entries(%struct.__acl_ext*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @free_permission_context(%struct.permission_context* %ctx) #4 !dbg !19611 !ctir !2243 {
entry:
  %ctx.addr = alloca %struct.permission_context*, align 8
  store %struct.permission_context* %ctx, %struct.permission_context** %ctx.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.permission_context** %ctx.addr, metadata !19612, metadata !DIExpression()), !dbg !19613
  %0 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19614, !tbaa !2645
  %acl = getelementptr inbounds %struct.permission_context, %struct.permission_context* %0, i32 0, i32 1, !dbg !19616, !ctir !2246
  %1 = load %struct.__acl_ext*, %struct.__acl_ext** %acl, align 8, !dbg !19616, !tbaa !19617, !ctir !2235
  %tobool = icmp ne %struct.__acl_ext* %1, null, !dbg !19614
  br i1 %tobool, label %if.then, label %if.end, !dbg !19618

if.then:                                          ; preds = %entry
  %2 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19619, !tbaa !2645
  %acl1 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %2, i32 0, i32 1, !dbg !19620, !ctir !2246
  %3 = load %struct.__acl_ext*, %struct.__acl_ext** %acl1, align 8, !dbg !19620, !tbaa !19617, !ctir !2235
  %4 = bitcast %struct.__acl_ext* %3 to i8*, !dbg !19619
  %call = call i32 @acl_free(i8* %4), !dbg !19621
  br label %if.end, !dbg !19621

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19622, !tbaa !2645
  %default_acl = getelementptr inbounds %struct.permission_context, %struct.permission_context* %5, i32 0, i32 2, !dbg !19624, !ctir !2246
  %6 = load %struct.__acl_ext*, %struct.__acl_ext** %default_acl, align 8, !dbg !19624, !tbaa !19625, !ctir !2235
  %tobool2 = icmp ne %struct.__acl_ext* %6, null, !dbg !19622
  br i1 %tobool2, label %if.then3, label %if.end6, !dbg !19626

if.then3:                                         ; preds = %if.end
  %7 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19627, !tbaa !2645
  %default_acl4 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %7, i32 0, i32 2, !dbg !19628, !ctir !2246
  %8 = load %struct.__acl_ext*, %struct.__acl_ext** %default_acl4, align 8, !dbg !19628, !tbaa !19625, !ctir !2235
  %9 = bitcast %struct.__acl_ext* %8 to i8*, !dbg !19627
  %call5 = call i32 @acl_free(i8* %9), !dbg !19629
  br label %if.end6, !dbg !19629

if.end6:                                          ; preds = %if.then3, %if.end
  ret void, !dbg !19630
}

declare dso_local i32 @acl_free(i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_permissions(i8* %name, i32 %desc, i32 %mode, %struct.permission_context* %ctx) #4 !dbg !19631 !ctir !2256 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %ctx.addr = alloca %struct.permission_context*, align 8
  store i8* %name, i8** %name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !19633, metadata !DIExpression()), !dbg !19634
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !19635, metadata !DIExpression()), !dbg !19636
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !19637, metadata !DIExpression()), !dbg !19638
  store %struct.permission_context* %ctx, %struct.permission_context** %ctx.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.permission_context** %ctx.addr, metadata !19639, metadata !DIExpression()), !dbg !19640
  %0 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19641, !tbaa !2645
  %1 = bitcast %struct.permission_context* %0 to i8*, !dbg !19642
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 32, i1 false), !dbg !19642
  %2 = load i32, i32* %mode.addr, align 4, !dbg !19643, !tbaa !2632
  %3 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19644, !tbaa !2645
  %mode1 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %3, i32 0, i32 0, !dbg !19645, !ctir !2259
  store i32 %2, i32* %mode1, align 8, !dbg !19646, !tbaa !13991, !ctir !139
  %4 = load i32, i32* %desc.addr, align 4, !dbg !19647, !tbaa !2632
  %cmp = icmp ne i32 %4, -1, !dbg !19649
  br i1 %cmp, label %if.then, label %if.else, !dbg !19650

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %desc.addr, align 4, !dbg !19651, !tbaa !2632
  %call = call %struct.__acl_ext* @acl_get_fd(i32 %5), !dbg !19652
  %6 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19653, !tbaa !2645
  %acl = getelementptr inbounds %struct.permission_context, %struct.permission_context* %6, i32 0, i32 1, !dbg !19654, !ctir !2259
  store %struct.__acl_ext* %call, %struct.__acl_ext** %acl, align 8, !dbg !19655, !tbaa !19617, !ctir !2235
  br label %if.end, !dbg !19653

if.else:                                          ; preds = %entry
  %7 = load i8*, i8** %name.addr, align 8, !dbg !19656, !tbaa !2645
  %call2 = call %struct.__acl_ext* @acl_get_file(i8* %7, i32 32768), !dbg !19657
  %8 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19658, !tbaa !2645
  %acl3 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %8, i32 0, i32 1, !dbg !19659, !ctir !2259
  store %struct.__acl_ext* %call2, %struct.__acl_ext** %acl3, align 8, !dbg !19660, !tbaa !19617, !ctir !2235
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19661, !tbaa !2645
  %acl4 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %9, i32 0, i32 1, !dbg !19663, !ctir !2259
  %10 = load %struct.__acl_ext*, %struct.__acl_ext** %acl4, align 8, !dbg !19663, !tbaa !19617, !ctir !2235
  %cmp5 = icmp eq %struct.__acl_ext* %10, null, !dbg !19664
  br i1 %cmp5, label %if.then6, label %if.end9, !dbg !19665

if.then6:                                         ; preds = %if.end
  %call7 = call i32* @__errno_location() #16, !dbg !19666
  %11 = load i32, i32* %call7, align 4, !dbg !19666, !tbaa !2632, !ctir !7
  %call8 = call zeroext i1 @acl_errno_valid(i32 %11) #16, !dbg !19667
  %12 = zext i1 %call8 to i64, !dbg !19667
  %cond = select i1 %call8, i32 -1, i32 0, !dbg !19667
  store i32 %cond, i32* %retval, align 4, !dbg !19668
  br label %return, !dbg !19668

if.end9:                                          ; preds = %if.end
  %13 = load i32, i32* %mode.addr, align 4, !dbg !19669, !tbaa !2632
  %and = and i32 %13, 61440, !dbg !19669
  %cmp10 = icmp eq i32 %and, 16384, !dbg !19669
  br i1 %cmp10, label %if.then11, label %if.end17, !dbg !19671

if.then11:                                        ; preds = %if.end9
  %14 = load i8*, i8** %name.addr, align 8, !dbg !19672, !tbaa !2645
  %call12 = call %struct.__acl_ext* @acl_get_file(i8* %14, i32 16384), !dbg !19674
  %15 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19675, !tbaa !2645
  %default_acl = getelementptr inbounds %struct.permission_context, %struct.permission_context* %15, i32 0, i32 2, !dbg !19676, !ctir !2259
  store %struct.__acl_ext* %call12, %struct.__acl_ext** %default_acl, align 8, !dbg !19677, !tbaa !19625, !ctir !2235
  %16 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19678, !tbaa !2645
  %default_acl13 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %16, i32 0, i32 2, !dbg !19680, !ctir !2259
  %17 = load %struct.__acl_ext*, %struct.__acl_ext** %default_acl13, align 8, !dbg !19680, !tbaa !19625, !ctir !2235
  %cmp14 = icmp eq %struct.__acl_ext* %17, null, !dbg !19681
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !19682

if.then15:                                        ; preds = %if.then11
  store i32 -1, i32* %retval, align 4, !dbg !19683
  br label %return, !dbg !19683

if.end16:                                         ; preds = %if.then11
  br label %if.end17, !dbg !19684

if.end17:                                         ; preds = %if.end16, %if.end9
  store i32 0, i32* %retval, align 4, !dbg !19685
  br label %return, !dbg !19685

return:                                           ; preds = %if.end17, %if.then15, %if.then6
  %18 = load i32, i32* %retval, align 4, !dbg !19686
  ret i32 %18, !dbg !19686
}

declare dso_local %struct.__acl_ext* @acl_get_fd(i32) #3

declare dso_local %struct.__acl_ext* @acl_get_file(i8*, i32) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @chmod_or_fchmod(i8* %name, i32 %desc, i32 %mode) #4 !dbg !19687 !ctir !1519 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  store i8* %name, i8** %name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !19689, metadata !DIExpression()), !dbg !19690
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !19691, metadata !DIExpression()), !dbg !19692
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !19693, metadata !DIExpression()), !dbg !19694
  %0 = load i32, i32* %desc.addr, align 4, !dbg !19695, !tbaa !2632
  %cmp = icmp ne i32 %0, -1, !dbg !19697
  br i1 %cmp, label %if.then, label %if.else, !dbg !19698

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %desc.addr, align 4, !dbg !19699, !tbaa !2632
  %2 = load i32, i32* %mode.addr, align 4, !dbg !19700, !tbaa !2632
  %call = call i32 @fchmod(i32 %1, i32 %2) #9, !dbg !19701
  store i32 %call, i32* %retval, align 4, !dbg !19702
  br label %return, !dbg !19702

if.else:                                          ; preds = %entry
  %3 = load i8*, i8** %name.addr, align 8, !dbg !19703, !tbaa !2645
  %4 = load i32, i32* %mode.addr, align 4, !dbg !19704, !tbaa !2632
  %call1 = call i32 @chmod(i8* %3, i32 %4) #9, !dbg !19705
  store i32 %call1, i32* %retval, align 4, !dbg !19706
  br label %return, !dbg !19706

return:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !19707
  ret i32 %5, !dbg !19707
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_permissions(%struct.permission_context* %ctx, i8* %name, i32 %desc) #4 !dbg !19708 !ctir !2268 {
entry:
  %retval = alloca i32, align 4
  %ctx.addr = alloca %struct.permission_context*, align 8
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %acls_set = alloca i8, align 1, !ctir !142
  %early_chmod = alloca i8, align 1, !ctir !142
  %must_chmod = alloca i8, align 1, !ctir !142
  %ret = alloca i32, align 4, !ctir !7
  %saved_errno = alloca i32, align 4, !ctir !7
  %saved_errno22 = alloca i32, align 4, !ctir !7
  store %struct.permission_context* %ctx, %struct.permission_context** %ctx.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.permission_context** %ctx.addr, metadata !19709, metadata !DIExpression()), !dbg !19710
  store i8* %name, i8** %name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !19711, metadata !DIExpression()), !dbg !19712
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !19713, metadata !DIExpression()), !dbg !19714
  call void @llvm.dbg.declare(metadata i8* %acls_set, metadata !19715, metadata !DIExpression()), !dbg !19716
  store i8 0, i8* %acls_set, align 1, !dbg !19716, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %early_chmod, metadata !19717, metadata !DIExpression()), !dbg !19718
  call void @llvm.dbg.declare(metadata i8* %must_chmod, metadata !19719, metadata !DIExpression()), !dbg !19720
  store i8 0, i8* %must_chmod, align 1, !dbg !19720, !tbaa !2739
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !19721, metadata !DIExpression()), !dbg !19722
  store i32 0, i32* %ret, align 4, !dbg !19722, !tbaa !2632
  %0 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19723, !tbaa !2645
  %mode = getelementptr inbounds %struct.permission_context, %struct.permission_context* %0, i32 0, i32 0, !dbg !19724, !ctir !2271
  %1 = load i32, i32* %mode, align 8, !dbg !19724, !tbaa !13991, !ctir !139
  %and = and i32 %1, 3584, !dbg !19725
  %tobool = icmp ne i32 %and, 0, !dbg !19726
  %frombool = zext i1 %tobool to i8, !dbg !19727
  store i8 %frombool, i8* %early_chmod, align 1, !dbg !19727, !tbaa !2739
  %2 = load i8, i8* %early_chmod, align 1, !dbg !19728, !tbaa !2739
  %tobool1 = trunc i8 %2 to i1, !dbg !19728
  br i1 %tobool1, label %if.then, label %if.end4, !dbg !19730

if.then:                                          ; preds = %entry
  %3 = load i8*, i8** %name.addr, align 8, !dbg !19731, !tbaa !2645
  %4 = load i32, i32* %desc.addr, align 4, !dbg !19733, !tbaa !2632
  %5 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19734, !tbaa !2645
  %mode2 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %5, i32 0, i32 0, !dbg !19735, !ctir !2271
  %6 = load i32, i32* %mode2, align 8, !dbg !19735, !tbaa !13991, !ctir !139
  %call = call i32 @chmod_or_fchmod(i8* %3, i32 %4, i32 %6), !dbg !19736
  store i32 %call, i32* %ret, align 4, !dbg !19737, !tbaa !2632
  %7 = load i32, i32* %ret, align 4, !dbg !19738, !tbaa !2632
  %cmp = icmp ne i32 %7, 0, !dbg !19740
  br i1 %cmp, label %if.then3, label %if.end, !dbg !19741

if.then3:                                         ; preds = %if.then
  store i32 -1, i32* %retval, align 4, !dbg !19742
  br label %return, !dbg !19742

if.end:                                           ; preds = %if.then
  br label %if.end4, !dbg !19743

if.end4:                                          ; preds = %if.end, %entry
  %8 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19744, !tbaa !2645
  %9 = load i8*, i8** %name.addr, align 8, !dbg !19745, !tbaa !2645
  %10 = load i32, i32* %desc.addr, align 4, !dbg !19746, !tbaa !2632
  %call5 = call i32 @set_acls(%struct.permission_context* %8, i8* %9, i32 %10, i32 0, i8* %must_chmod, i8* %acls_set), !dbg !19747
  store i32 %call5, i32* %ret, align 4, !dbg !19748, !tbaa !2632
  %11 = load i8, i8* %acls_set, align 1, !dbg !19749, !tbaa !2739
  %tobool6 = trunc i8 %11 to i1, !dbg !19749
  br i1 %tobool6, label %if.end18, label %if.then7, !dbg !19751

if.then7:                                         ; preds = %if.end4
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !19752, metadata !DIExpression()), !dbg !19754
  %12 = load i32, i32* %ret, align 4, !dbg !19755, !tbaa !2632
  %tobool8 = icmp ne i32 %12, 0, !dbg !19755
  br i1 %tobool8, label %cond.true, label %cond.false, !dbg !19755

cond.true:                                        ; preds = %if.then7
  %call9 = call i32* @__errno_location() #16, !dbg !19756
  %13 = load i32, i32* %call9, align 4, !dbg !19756, !tbaa !2632, !ctir !7
  br label %cond.end, !dbg !19755

cond.false:                                       ; preds = %if.then7
  br label %cond.end, !dbg !19755

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %13, %cond.true ], [ 0, %cond.false ], !dbg !19755
  store i32 %cond, i32* %saved_errno, align 4, !dbg !19754, !tbaa !2632
  %14 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19757, !tbaa !2645
  %15 = load i8*, i8** %name.addr, align 8, !dbg !19758, !tbaa !2645
  %16 = load i32, i32* %desc.addr, align 4, !dbg !19759, !tbaa !2632
  %call10 = call i32 @set_acls(%struct.permission_context* %14, i8* %15, i32 %16, i32 1, i8* %must_chmod, i8* %acls_set), !dbg !19760
  store i32 %call10, i32* %ret, align 4, !dbg !19761, !tbaa !2632
  %17 = load i8, i8* %acls_set, align 1, !dbg !19762, !tbaa !2739
  %tobool11 = trunc i8 %17 to i1, !dbg !19762
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !19764

if.then12:                                        ; preds = %cond.end
  store i8 1, i8* %must_chmod, align 1, !dbg !19765, !tbaa !2739
  br label %if.end13, !dbg !19766

if.end13:                                         ; preds = %if.then12, %cond.end
  %18 = load i32, i32* %saved_errno, align 4, !dbg !19767, !tbaa !2632
  %tobool14 = icmp ne i32 %18, 0, !dbg !19767
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !19769

if.then15:                                        ; preds = %if.end13
  %19 = load i32, i32* %saved_errno, align 4, !dbg !19770, !tbaa !2632
  %call16 = call i32* @__errno_location() #16, !dbg !19772
  store i32 %19, i32* %call16, align 4, !dbg !19773, !tbaa !2632, !ctir !7
  store i32 -1, i32* %ret, align 4, !dbg !19774, !tbaa !2632
  br label %if.end17, !dbg !19775

if.end17:                                         ; preds = %if.then15, %if.end13
  br label %if.end18, !dbg !19776

if.end18:                                         ; preds = %if.end17, %if.end4
  %20 = load i8, i8* %must_chmod, align 1, !dbg !19777, !tbaa !2739
  %tobool19 = trunc i8 %20 to i1, !dbg !19777
  br i1 %tobool19, label %land.lhs.true, label %if.end35, !dbg !19779

land.lhs.true:                                    ; preds = %if.end18
  %21 = load i8, i8* %early_chmod, align 1, !dbg !19780, !tbaa !2739
  %tobool20 = trunc i8 %21 to i1, !dbg !19780
  br i1 %tobool20, label %if.end35, label %if.then21, !dbg !19781

if.then21:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %saved_errno22, metadata !19782, metadata !DIExpression()), !dbg !19784
  %22 = load i32, i32* %ret, align 4, !dbg !19785, !tbaa !2632
  %tobool23 = icmp ne i32 %22, 0, !dbg !19785
  br i1 %tobool23, label %cond.true24, label %cond.false26, !dbg !19785

cond.true24:                                      ; preds = %if.then21
  %call25 = call i32* @__errno_location() #16, !dbg !19786
  %23 = load i32, i32* %call25, align 4, !dbg !19786, !tbaa !2632, !ctir !7
  br label %cond.end27, !dbg !19785

cond.false26:                                     ; preds = %if.then21
  br label %cond.end27, !dbg !19785

cond.end27:                                       ; preds = %cond.false26, %cond.true24
  %cond28 = phi i32 [ %23, %cond.true24 ], [ 0, %cond.false26 ], !dbg !19785
  store i32 %cond28, i32* %saved_errno22, align 4, !dbg !19784, !tbaa !2632
  %24 = load i8*, i8** %name.addr, align 8, !dbg !19787, !tbaa !2645
  %25 = load i32, i32* %desc.addr, align 4, !dbg !19788, !tbaa !2632
  %26 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19789, !tbaa !2645
  %mode29 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %26, i32 0, i32 0, !dbg !19790, !ctir !2271
  %27 = load i32, i32* %mode29, align 8, !dbg !19790, !tbaa !13991, !ctir !139
  %call30 = call i32 @chmod_or_fchmod(i8* %24, i32 %25, i32 %27), !dbg !19791
  store i32 %call30, i32* %ret, align 4, !dbg !19792, !tbaa !2632
  %28 = load i32, i32* %saved_errno22, align 4, !dbg !19793, !tbaa !2632
  %tobool31 = icmp ne i32 %28, 0, !dbg !19793
  br i1 %tobool31, label %if.then32, label %if.end34, !dbg !19795

if.then32:                                        ; preds = %cond.end27
  %29 = load i32, i32* %saved_errno22, align 4, !dbg !19796, !tbaa !2632
  %call33 = call i32* @__errno_location() #16, !dbg !19798
  store i32 %29, i32* %call33, align 4, !dbg !19799, !tbaa !2632, !ctir !7
  store i32 -1, i32* %ret, align 4, !dbg !19800, !tbaa !2632
  br label %if.end34, !dbg !19801

if.end34:                                         ; preds = %if.then32, %cond.end27
  br label %if.end35, !dbg !19802

if.end35:                                         ; preds = %if.end34, %land.lhs.true, %if.end18
  %30 = load i32, i32* %ret, align 4, !dbg !19803, !tbaa !2632
  store i32 %30, i32* %retval, align 4, !dbg !19804
  br label %return, !dbg !19804

return:                                           ; preds = %if.end35, %if.then3
  %31 = load i32, i32* %retval, align 4, !dbg !19805
  ret i32 %31, !dbg !19805
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @set_acls(%struct.permission_context* %ctx, i8* %name, i32 %desc, i32 %from_mode, i8* %must_chmod, i8* %acls_set) #4 !dbg !19806 !ctir !2277 {
entry:
  %ctx.addr = alloca %struct.permission_context*, align 8
  %name.addr = alloca i8*, align 8
  %desc.addr = alloca i32, align 4
  %from_mode.addr = alloca i32, align 4
  %must_chmod.addr = alloca i8*, align 8
  %acls_set.addr = alloca i8*, align 8
  %ret = alloca i32, align 4, !ctir !7
  store %struct.permission_context* %ctx, %struct.permission_context** %ctx.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.permission_context** %ctx.addr, metadata !19807, metadata !DIExpression()), !dbg !19808
  store i8* %name, i8** %name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !19809, metadata !DIExpression()), !dbg !19810
  store i32 %desc, i32* %desc.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %desc.addr, metadata !19811, metadata !DIExpression()), !dbg !19812
  store i32 %from_mode, i32* %from_mode.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %from_mode.addr, metadata !19813, metadata !DIExpression()), !dbg !19814
  store i8* %must_chmod, i8** %must_chmod.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %must_chmod.addr, metadata !19815, metadata !DIExpression()), !dbg !19816
  store i8* %acls_set, i8** %acls_set.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %acls_set.addr, metadata !19817, metadata !DIExpression()), !dbg !19818
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !19819, metadata !DIExpression()), !dbg !19820
  store i32 0, i32* %ret, align 4, !dbg !19820, !tbaa !2632
  %0 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19821, !tbaa !2645
  %acls_not_supported = getelementptr inbounds %struct.permission_context, %struct.permission_context* %0, i32 0, i32 3, !dbg !19823, !ctir !2271
  %1 = load i8, i8* %acls_not_supported, align 8, !dbg !19823, !tbaa !19824
  %tobool = trunc i8 %1 to i1, !dbg !19823, !ctir !142
  br i1 %tobool, label %if.end58, label %if.then, !dbg !19825

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ret, align 4, !dbg !19826, !tbaa !2632
  %cmp = icmp eq i32 %2, 0, !dbg !19829
  br i1 %cmp, label %land.lhs.true, label %if.end12, !dbg !19830

land.lhs.true:                                    ; preds = %if.then
  %3 = load i32, i32* %from_mode.addr, align 4, !dbg !19831, !tbaa !2632
  %tobool1 = icmp ne i32 %3, 0, !dbg !19831
  br i1 %tobool1, label %if.then2, label %if.end12, !dbg !19832

if.then2:                                         ; preds = %land.lhs.true
  %4 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19833, !tbaa !2645
  %acl = getelementptr inbounds %struct.permission_context, %struct.permission_context* %4, i32 0, i32 1, !dbg !19836, !ctir !2271
  %5 = load %struct.__acl_ext*, %struct.__acl_ext** %acl, align 8, !dbg !19836, !tbaa !19617, !ctir !2235
  %tobool3 = icmp ne %struct.__acl_ext* %5, null, !dbg !19833
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !19837

if.then4:                                         ; preds = %if.then2
  %6 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19838, !tbaa !2645
  %acl5 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %6, i32 0, i32 1, !dbg !19839, !ctir !2271
  %7 = load %struct.__acl_ext*, %struct.__acl_ext** %acl5, align 8, !dbg !19839, !tbaa !19617, !ctir !2235
  %8 = bitcast %struct.__acl_ext* %7 to i8*, !dbg !19838
  %call = call i32 @acl_free(i8* %8), !dbg !19840
  br label %if.end, !dbg !19840

if.end:                                           ; preds = %if.then4, %if.then2
  %9 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19841, !tbaa !2645
  %mode = getelementptr inbounds %struct.permission_context, %struct.permission_context* %9, i32 0, i32 0, !dbg !19842, !ctir !2271
  %10 = load i32, i32* %mode, align 8, !dbg !19842, !tbaa !13991, !ctir !139
  %call6 = call %struct.__acl_ext* @acl_from_mode(i32 %10), !dbg !19843
  %11 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19844, !tbaa !2645
  %acl7 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %11, i32 0, i32 1, !dbg !19845, !ctir !2271
  store %struct.__acl_ext* %call6, %struct.__acl_ext** %acl7, align 8, !dbg !19846, !tbaa !19617, !ctir !2235
  %12 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19847, !tbaa !2645
  %acl8 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %12, i32 0, i32 1, !dbg !19849, !ctir !2271
  %13 = load %struct.__acl_ext*, %struct.__acl_ext** %acl8, align 8, !dbg !19849, !tbaa !19617, !ctir !2235
  %cmp9 = icmp eq %struct.__acl_ext* %13, null, !dbg !19850
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !19851

if.then10:                                        ; preds = %if.end
  store i32 -1, i32* %ret, align 4, !dbg !19852, !tbaa !2632
  br label %if.end11, !dbg !19853

if.end11:                                         ; preds = %if.then10, %if.end
  br label %if.end12, !dbg !19854

if.end12:                                         ; preds = %if.end11, %land.lhs.true, %if.then
  %14 = load i32, i32* %ret, align 4, !dbg !19855, !tbaa !2632
  %cmp13 = icmp eq i32 %14, 0, !dbg !19857
  br i1 %cmp13, label %land.lhs.true14, label %if.end57, !dbg !19858

land.lhs.true14:                                  ; preds = %if.end12
  %15 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19859, !tbaa !2645
  %acl15 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %15, i32 0, i32 1, !dbg !19860, !ctir !2271
  %16 = load %struct.__acl_ext*, %struct.__acl_ext** %acl15, align 8, !dbg !19860, !tbaa !19617, !ctir !2235
  %tobool16 = icmp ne %struct.__acl_ext* %16, null, !dbg !19859
  br i1 %tobool16, label %if.then17, label %if.end57, !dbg !19861

if.then17:                                        ; preds = %land.lhs.true14
  %17 = load i32, i32* %desc.addr, align 4, !dbg !19862, !tbaa !2632
  %cmp18 = icmp ne i32 %17, -1, !dbg !19865
  br i1 %cmp18, label %if.then19, label %if.else, !dbg !19866

if.then19:                                        ; preds = %if.then17
  %18 = load i32, i32* %desc.addr, align 4, !dbg !19867, !tbaa !2632
  %19 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19868, !tbaa !2645
  %acl20 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %19, i32 0, i32 1, !dbg !19869, !ctir !2271
  %20 = load %struct.__acl_ext*, %struct.__acl_ext** %acl20, align 8, !dbg !19869, !tbaa !19617, !ctir !2235
  %call21 = call i32 @acl_set_fd(i32 %18, %struct.__acl_ext* %20), !dbg !19870
  store i32 %call21, i32* %ret, align 4, !dbg !19871, !tbaa !2632
  br label %if.end24, !dbg !19872

if.else:                                          ; preds = %if.then17
  %21 = load i8*, i8** %name.addr, align 8, !dbg !19873, !tbaa !2645
  %22 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19874, !tbaa !2645
  %acl22 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %22, i32 0, i32 1, !dbg !19875, !ctir !2271
  %23 = load %struct.__acl_ext*, %struct.__acl_ext** %acl22, align 8, !dbg !19875, !tbaa !19617, !ctir !2235
  %call23 = call i32 @acl_set_file(i8* %21, i32 32768, %struct.__acl_ext* %23), !dbg !19876
  store i32 %call23, i32* %ret, align 4, !dbg !19877, !tbaa !2632
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then19
  %24 = load i32, i32* %ret, align 4, !dbg !19878, !tbaa !2632
  %cmp25 = icmp ne i32 %24, 0, !dbg !19880
  br i1 %cmp25, label %if.then26, label %if.else38, !dbg !19881

if.then26:                                        ; preds = %if.end24
  %call27 = call i32* @__errno_location() #16, !dbg !19882
  %25 = load i32, i32* %call27, align 4, !dbg !19882, !tbaa !2632, !ctir !7
  %call28 = call zeroext i1 @acl_errno_valid(i32 %25) #16, !dbg !19885
  br i1 %call28, label %if.end37, label %if.then29, !dbg !19886

if.then29:                                        ; preds = %if.then26
  %26 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19887, !tbaa !2645
  %acls_not_supported30 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %26, i32 0, i32 3, !dbg !19889, !ctir !2271
  store i8 1, i8* %acls_not_supported30, align 8, !dbg !19890, !tbaa !19824, !ctir !142
  %27 = load i32, i32* %from_mode.addr, align 4, !dbg !19891, !tbaa !2632
  %tobool31 = icmp ne i32 %27, 0, !dbg !19891
  br i1 %tobool31, label %if.then35, label %lor.lhs.false, !dbg !19893

lor.lhs.false:                                    ; preds = %if.then29
  %28 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19894, !tbaa !2645
  %acl32 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %28, i32 0, i32 1, !dbg !19895, !ctir !2271
  %29 = load %struct.__acl_ext*, %struct.__acl_ext** %acl32, align 8, !dbg !19895, !tbaa !19617, !ctir !2235
  %call33 = call i32 @acl_access_nontrivial(%struct.__acl_ext* %29), !dbg !19896
  %cmp34 = icmp eq i32 %call33, 0, !dbg !19897
  br i1 %cmp34, label %if.then35, label %if.end36, !dbg !19898

if.then35:                                        ; preds = %lor.lhs.false, %if.then29
  store i32 0, i32* %ret, align 4, !dbg !19899, !tbaa !2632
  br label %if.end36, !dbg !19900

if.end36:                                         ; preds = %if.then35, %lor.lhs.false
  br label %if.end37, !dbg !19901

if.end37:                                         ; preds = %if.end36, %if.then26
  br label %if.end56, !dbg !19902

if.else38:                                        ; preds = %if.end24
  %30 = load i8*, i8** %acls_set.addr, align 8, !dbg !19903, !tbaa !2645
  store i8 1, i8* %30, align 1, !dbg !19905, !tbaa !2739, !ctir !142
  %31 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19906, !tbaa !2645
  %mode39 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %31, i32 0, i32 0, !dbg !19906, !ctir !2271
  %32 = load i32, i32* %mode39, align 8, !dbg !19906, !tbaa !13991, !ctir !139
  %and = and i32 %32, 61440, !dbg !19906
  %cmp40 = icmp eq i32 %and, 16384, !dbg !19906
  br i1 %cmp40, label %if.then41, label %if.end55, !dbg !19908

if.then41:                                        ; preds = %if.else38
  %33 = load i32, i32* %from_mode.addr, align 4, !dbg !19909, !tbaa !2632
  %tobool42 = icmp ne i32 %33, 0, !dbg !19909
  br i1 %tobool42, label %if.else52, label %land.lhs.true43, !dbg !19912

land.lhs.true43:                                  ; preds = %if.then41
  %34 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19913, !tbaa !2645
  %default_acl = getelementptr inbounds %struct.permission_context, %struct.permission_context* %34, i32 0, i32 2, !dbg !19914, !ctir !2271
  %35 = load %struct.__acl_ext*, %struct.__acl_ext** %default_acl, align 8, !dbg !19914, !tbaa !19625, !ctir !2235
  %tobool44 = icmp ne %struct.__acl_ext* %35, null, !dbg !19913
  br i1 %tobool44, label %land.lhs.true45, label %if.else52, !dbg !19915

land.lhs.true45:                                  ; preds = %land.lhs.true43
  %36 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19916, !tbaa !2645
  %default_acl46 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %36, i32 0, i32 2, !dbg !19917, !ctir !2271
  %37 = load %struct.__acl_ext*, %struct.__acl_ext** %default_acl46, align 8, !dbg !19917, !tbaa !19625, !ctir !2235
  %call47 = call i32 @acl_default_nontrivial(%struct.__acl_ext* %37), !dbg !19918
  %tobool48 = icmp ne i32 %call47, 0, !dbg !19918
  br i1 %tobool48, label %if.then49, label %if.else52, !dbg !19919

if.then49:                                        ; preds = %land.lhs.true45
  %38 = load i8*, i8** %name.addr, align 8, !dbg !19920, !tbaa !2645
  %39 = load %struct.permission_context*, %struct.permission_context** %ctx.addr, align 8, !dbg !19921, !tbaa !2645
  %default_acl50 = getelementptr inbounds %struct.permission_context, %struct.permission_context* %39, i32 0, i32 2, !dbg !19922, !ctir !2271
  %40 = load %struct.__acl_ext*, %struct.__acl_ext** %default_acl50, align 8, !dbg !19922, !tbaa !19625, !ctir !2235
  %call51 = call i32 @acl_set_file(i8* %38, i32 16384, %struct.__acl_ext* %40), !dbg !19923
  store i32 %call51, i32* %ret, align 4, !dbg !19924, !tbaa !2632
  br label %if.end54, !dbg !19925

if.else52:                                        ; preds = %land.lhs.true45, %land.lhs.true43, %if.then41
  %41 = load i8*, i8** %name.addr, align 8, !dbg !19926, !tbaa !2645
  %call53 = call i32 @acl_delete_def_file(i8* %41), !dbg !19927
  store i32 %call53, i32* %ret, align 4, !dbg !19928, !tbaa !2632
  br label %if.end54

if.end54:                                         ; preds = %if.else52, %if.then49
  br label %if.end55, !dbg !19929

if.end55:                                         ; preds = %if.end54, %if.else38
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.end37
  br label %if.end57, !dbg !19930

if.end57:                                         ; preds = %if.end56, %land.lhs.true14, %if.end12
  br label %if.end58, !dbg !19931

if.end58:                                         ; preds = %if.end57, %entry
  %42 = load i32, i32* %ret, align 4, !dbg !19932, !tbaa !2632
  ret i32 %42, !dbg !19933
}

declare dso_local %struct.__acl_ext* @acl_from_mode(i32) #3

declare dso_local i32 @acl_set_fd(i32, %struct.__acl_ext*) #3

declare dso_local i32 @acl_set_file(i8*, i32, %struct.__acl_ext*) #3

declare dso_local i32 @acl_delete_def_file(i8*) #3

; Function Attrs: noinline nounwind optnone uwtable
define internal void @__argmatch_die() #4 !dbg !19934 !ctir !200 {
entry:
  call void @usage(i32 1), !dbg !19935
  ret void, !dbg !19936
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @argmatch(i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize) #10 !dbg !19937 !ctir !1342 {
entry:
  %retval = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8, !ctir !55
  %arglen = alloca i64, align 8, !ctir !55
  %matchind = alloca i64, align 8, !ctir !652
  %ambiguous = alloca i8, align 1, !ctir !142
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !19938, metadata !DIExpression()), !dbg !19939
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !19940, metadata !DIExpression()), !dbg !19941
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !19942, metadata !DIExpression()), !dbg !19943
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !19944, metadata !DIExpression()), !dbg !19945
  call void @llvm.dbg.declare(metadata i64* %i, metadata !19946, metadata !DIExpression()), !dbg !19947
  call void @llvm.dbg.declare(metadata i64* %arglen, metadata !19948, metadata !DIExpression()), !dbg !19949
  call void @llvm.dbg.declare(metadata i64* %matchind, metadata !19950, metadata !DIExpression()), !dbg !19951
  store i64 -1, i64* %matchind, align 8, !dbg !19951, !tbaa !3285
  call void @llvm.dbg.declare(metadata i8* %ambiguous, metadata !19952, metadata !DIExpression()), !dbg !19953
  store i8 0, i8* %ambiguous, align 1, !dbg !19953, !tbaa !2739
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !19954, !tbaa !2645
  %call = call i64 @strlen(i8* %0) #14, !dbg !19955
  store i64 %call, i64* %arglen, align 8, !dbg !19956, !tbaa !3285
  store i64 0, i64* %i, align 8, !dbg !19957, !tbaa !3285
  br label %for.cond, !dbg !19959

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !19960, !tbaa !2645
  %2 = load i64, i64* %i, align 8, !dbg !19962, !tbaa !3285
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %2, !dbg !19960, !ctir !1344
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !19960, !tbaa !2645
  %tobool = icmp ne i8* %3, null, !dbg !19963
  br i1 %tobool, label %for.body, label %for.end, !dbg !19963

for.body:                                         ; preds = %for.cond
  %4 = load i8**, i8*** %arglist.addr, align 8, !dbg !19964, !tbaa !2645
  %5 = load i64, i64* %i, align 8, !dbg !19967, !tbaa !3285
  %arrayidx1 = getelementptr inbounds i8*, i8** %4, i64 %5, !dbg !19964, !ctir !1344
  %6 = load i8*, i8** %arrayidx1, align 8, !dbg !19964, !tbaa !2645
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !19968, !tbaa !2645
  %8 = load i64, i64* %arglen, align 8, !dbg !19969, !tbaa !3285
  %call2 = call i32 @strncmp(i8* %6, i8* %7, i64 %8) #14, !dbg !19970
  %tobool3 = icmp ne i32 %call2, 0, !dbg !19970
  br i1 %tobool3, label %if.end18, label %if.then, !dbg !19971

if.then:                                          ; preds = %for.body
  %9 = load i8**, i8*** %arglist.addr, align 8, !dbg !19972, !tbaa !2645
  %10 = load i64, i64* %i, align 8, !dbg !19975, !tbaa !3285
  %arrayidx4 = getelementptr inbounds i8*, i8** %9, i64 %10, !dbg !19972, !ctir !1344
  %11 = load i8*, i8** %arrayidx4, align 8, !dbg !19972, !tbaa !2645
  %call5 = call i64 @strlen(i8* %11) #14, !dbg !19976
  %12 = load i64, i64* %arglen, align 8, !dbg !19977, !tbaa !3285
  %cmp = icmp eq i64 %call5, %12, !dbg !19978
  br i1 %cmp, label %if.then6, label %if.else, !dbg !19979

if.then6:                                         ; preds = %if.then
  %13 = load i64, i64* %i, align 8, !dbg !19980, !tbaa !3285
  store i64 %13, i64* %retval, align 8, !dbg !19981
  br label %return, !dbg !19981

if.else:                                          ; preds = %if.then
  %14 = load i64, i64* %matchind, align 8, !dbg !19982, !tbaa !3285
  %cmp7 = icmp eq i64 %14, -1, !dbg !19984
  br i1 %cmp7, label %if.then8, label %if.else9, !dbg !19985

if.then8:                                         ; preds = %if.else
  %15 = load i64, i64* %i, align 8, !dbg !19986, !tbaa !3285
  store i64 %15, i64* %matchind, align 8, !dbg !19987, !tbaa !3285
  br label %if.end16, !dbg !19988

if.else9:                                         ; preds = %if.else
  %16 = load i8*, i8** %vallist.addr, align 8, !dbg !19989, !tbaa !2645
  %cmp10 = icmp eq i8* %16, null, !dbg !19992
  br i1 %cmp10, label %if.then15, label %lor.lhs.false, !dbg !19993

lor.lhs.false:                                    ; preds = %if.else9
  %17 = load i8*, i8** %vallist.addr, align 8, !dbg !19994, !tbaa !2645
  %18 = load i64, i64* %valsize.addr, align 8, !dbg !19995, !tbaa !3285
  %19 = load i64, i64* %matchind, align 8, !dbg !19996, !tbaa !3285
  %mul = mul i64 %18, %19, !dbg !19997
  %add.ptr = getelementptr inbounds i8, i8* %17, i64 %mul, !dbg !19998
  %20 = load i8*, i8** %vallist.addr, align 8, !dbg !19999, !tbaa !2645
  %21 = load i64, i64* %valsize.addr, align 8, !dbg !20000, !tbaa !3285
  %22 = load i64, i64* %i, align 8, !dbg !20001, !tbaa !3285
  %mul11 = mul i64 %21, %22, !dbg !20002
  %add.ptr12 = getelementptr inbounds i8, i8* %20, i64 %mul11, !dbg !20003
  %23 = load i64, i64* %valsize.addr, align 8, !dbg !20004, !tbaa !3285
  %call13 = call i32 @memcmp(i8* %add.ptr, i8* %add.ptr12, i64 %23) #14, !dbg !20005
  %tobool14 = icmp ne i32 %call13, 0, !dbg !20005
  br i1 %tobool14, label %if.then15, label %if.end, !dbg !20006

if.then15:                                        ; preds = %lor.lhs.false, %if.else9
  store i8 1, i8* %ambiguous, align 1, !dbg !20007, !tbaa !2739
  br label %if.end, !dbg !20009

if.end:                                           ; preds = %if.then15, %lor.lhs.false
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then8
  br label %if.end17

if.end17:                                         ; preds = %if.end16
  br label %if.end18, !dbg !20010

if.end18:                                         ; preds = %if.end17, %for.body
  br label %for.inc, !dbg !20011

for.inc:                                          ; preds = %if.end18
  %24 = load i64, i64* %i, align 8, !dbg !20012, !tbaa !3285
  %inc = add i64 %24, 1, !dbg !20012
  store i64 %inc, i64* %i, align 8, !dbg !20012, !tbaa !3285
  br label %for.cond, !dbg !20013, !llvm.loop !20014

for.end:                                          ; preds = %for.cond
  %25 = load i8, i8* %ambiguous, align 1, !dbg !20016, !tbaa !2739
  %tobool19 = trunc i8 %25 to i1, !dbg !20016
  br i1 %tobool19, label %if.then20, label %if.else21, !dbg !20018

if.then20:                                        ; preds = %for.end
  store i64 -2, i64* %retval, align 8, !dbg !20019
  br label %return, !dbg !20019

if.else21:                                        ; preds = %for.end
  %26 = load i64, i64* %matchind, align 8, !dbg !20020, !tbaa !3285
  store i64 %26, i64* %retval, align 8, !dbg !20021
  br label %return, !dbg !20021

return:                                           ; preds = %if.else21, %if.then20, %if.then6
  %27 = load i64, i64* %retval, align 8, !dbg !20022
  ret i64 %27, !dbg !20022
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @argmatch_invalid(i8* %context, i8* %value, i64 %problem) #4 !dbg !20023 !ctir !1345 {
entry:
  %context.addr = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %problem.addr = alloca i64, align 8
  %format = alloca i8*, align 8, !ctir !180
  store i8* %context, i8** %context.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !20024, metadata !DIExpression()), !dbg !20025
  store i8* %value, i8** %value.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !20026, metadata !DIExpression()), !dbg !20027
  store i64 %problem, i64* %problem.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %problem.addr, metadata !20028, metadata !DIExpression()), !dbg !20029
  call void @llvm.dbg.declare(metadata i8** %format, metadata !20030, metadata !DIExpression()), !dbg !20031
  %0 = load i64, i64* %problem.addr, align 8, !dbg !20032, !tbaa !3285
  %cmp = icmp eq i64 %0, -1, !dbg !20033
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !20032

cond.true:                                        ; preds = %entry
  %call = call i8* @gettext(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.485, i64 0, i64 0)) #9, !dbg !20034
  br label %cond.end, !dbg !20032

cond.false:                                       ; preds = %entry
  %call1 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1.486, i64 0, i64 0)) #9, !dbg !20035
  br label %cond.end, !dbg !20032

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !20032
  store i8* %cond, i8** %format, align 8, !dbg !20031, !tbaa !2645
  %1 = load i8*, i8** %format, align 8, !dbg !20036, !tbaa !2645
  %2 = load i8*, i8** %value.addr, align 8, !dbg !20037, !tbaa !2645
  %call2 = call i8* @quotearg_n_style(i32 0, i32 8, i8* %2), !dbg !20038
  %3 = load i8*, i8** %context.addr, align 8, !dbg !20039, !tbaa !2645
  %call3 = call i8* @quote_n(i32 1, i8* %3), !dbg !20040
  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %1, i8* %call2, i8* %call3), !dbg !20041
  ret void, !dbg !20042
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @argmatch_valid(i8** %arglist, i8* %vallist, i64 %valsize) #4 !dbg !20043 !ctir !1347 {
entry:
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8, !ctir !55
  %last_val = alloca i8*, align 8, !ctir !180
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !20044, metadata !DIExpression()), !dbg !20045
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !20046, metadata !DIExpression()), !dbg !20047
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !20048, metadata !DIExpression()), !dbg !20049
  call void @llvm.dbg.declare(metadata i64* %i, metadata !20050, metadata !DIExpression()), !dbg !20051
  call void @llvm.dbg.declare(metadata i8** %last_val, metadata !20052, metadata !DIExpression()), !dbg !20053
  store i8* null, i8** %last_val, align 8, !dbg !20053, !tbaa !2645
  %call = call i8* @gettext(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2.487, i64 0, i64 0)) #9, !dbg !20054
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !20054, !tbaa !2645
  %call1 = call i32 @fputs_unlocked(i8* %call, %struct._IO_FILE* %0), !dbg !20054
  store i64 0, i64* %i, align 8, !dbg !20055, !tbaa !3285
  br label %for.cond, !dbg !20057

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !20058, !tbaa !2645
  %2 = load i64, i64* %i, align 8, !dbg !20060, !tbaa !3285
  %arrayidx = getelementptr inbounds i8*, i8** %1, i64 %2, !dbg !20058, !ctir !1344
  %3 = load i8*, i8** %arrayidx, align 8, !dbg !20058, !tbaa !2645
  %tobool = icmp ne i8* %3, null, !dbg !20061
  br i1 %tobool, label %for.body, label %for.end, !dbg !20061

for.body:                                         ; preds = %for.cond
  %4 = load i64, i64* %i, align 8, !dbg !20062, !tbaa !3285
  %cmp = icmp eq i64 %4, 0, !dbg !20064
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !20065

lor.lhs.false:                                    ; preds = %for.body
  %5 = load i8*, i8** %last_val, align 8, !dbg !20066, !tbaa !2645
  %6 = load i8*, i8** %vallist.addr, align 8, !dbg !20067, !tbaa !2645
  %7 = load i64, i64* %valsize.addr, align 8, !dbg !20068, !tbaa !3285
  %8 = load i64, i64* %i, align 8, !dbg !20069, !tbaa !3285
  %mul = mul i64 %7, %8, !dbg !20070
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %mul, !dbg !20071
  %9 = load i64, i64* %valsize.addr, align 8, !dbg !20072, !tbaa !3285
  %call2 = call i32 @memcmp(i8* %5, i8* %add.ptr, i64 %9) #14, !dbg !20073
  %tobool3 = icmp ne i32 %call2, 0, !dbg !20073
  br i1 %tobool3, label %if.then, label %if.else, !dbg !20074

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !20075, !tbaa !2645
  %11 = load i8**, i8*** %arglist.addr, align 8, !dbg !20077, !tbaa !2645
  %12 = load i64, i64* %i, align 8, !dbg !20078, !tbaa !3285
  %arrayidx4 = getelementptr inbounds i8*, i8** %11, i64 %12, !dbg !20077, !ctir !1344
  %13 = load i8*, i8** %arrayidx4, align 8, !dbg !20077, !tbaa !2645
  %call5 = call i8* @quote(i8* %13), !dbg !20079
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3.488, i64 0, i64 0), i8* %call5), !dbg !20080
  %14 = load i8*, i8** %vallist.addr, align 8, !dbg !20081, !tbaa !2645
  %15 = load i64, i64* %valsize.addr, align 8, !dbg !20082, !tbaa !3285
  %16 = load i64, i64* %i, align 8, !dbg !20083, !tbaa !3285
  %mul7 = mul i64 %15, %16, !dbg !20084
  %add.ptr8 = getelementptr inbounds i8, i8* %14, i64 %mul7, !dbg !20085
  store i8* %add.ptr8, i8** %last_val, align 8, !dbg !20086, !tbaa !2645
  br label %if.end, !dbg !20087

if.else:                                          ; preds = %lor.lhs.false
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !20088, !tbaa !2645
  %18 = load i8**, i8*** %arglist.addr, align 8, !dbg !20090, !tbaa !2645
  %19 = load i64, i64* %i, align 8, !dbg !20091, !tbaa !3285
  %arrayidx9 = getelementptr inbounds i8*, i8** %18, i64 %19, !dbg !20090, !ctir !1344
  %20 = load i8*, i8** %arrayidx9, align 8, !dbg !20090, !tbaa !2645
  %call10 = call i8* @quote(i8* %20), !dbg !20092
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4.489, i64 0, i64 0), i8* %call10), !dbg !20093
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !20094

for.inc:                                          ; preds = %if.end
  %21 = load i64, i64* %i, align 8, !dbg !20095, !tbaa !3285
  %inc = add i64 %21, 1, !dbg !20095
  store i64 %inc, i64* %i, align 8, !dbg !20095, !tbaa !3285
  br label %for.cond, !dbg !20096, !llvm.loop !20097

for.end:                                          ; preds = %for.cond
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !20099, !tbaa !2645
  %call12 = call i32 @putc_unlocked(i32 10, %struct._IO_FILE* %22), !dbg !20099
  ret void, !dbg !20100
}

declare dso_local i32 @putc_unlocked(i32, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @__xargmatch_internal(i8* %context, i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize, void ()* %exit_fn) #4 !dbg !20101 !ctir !1383 {
entry:
  %retval = alloca i64, align 8
  %context.addr = alloca i8*, align 8
  %arg.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %exit_fn.addr = alloca void ()*, align 8
  %res = alloca i64, align 8, !ctir !652
  store i8* %context, i8** %context.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %context.addr, metadata !20102, metadata !DIExpression()), !dbg !20103
  store i8* %arg, i8** %arg.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !20104, metadata !DIExpression()), !dbg !20105
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !20106, metadata !DIExpression()), !dbg !20107
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !20108, metadata !DIExpression()), !dbg !20109
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !20110, metadata !DIExpression()), !dbg !20111
  store void ()* %exit_fn, void ()** %exit_fn.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata void ()** %exit_fn.addr, metadata !20112, metadata !DIExpression()), !dbg !20113
  call void @llvm.dbg.declare(metadata i64* %res, metadata !20114, metadata !DIExpression()), !dbg !20115
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !20116, !tbaa !2645
  %1 = load i8**, i8*** %arglist.addr, align 8, !dbg !20117, !tbaa !2645
  %2 = load i8*, i8** %vallist.addr, align 8, !dbg !20118, !tbaa !2645
  %3 = load i64, i64* %valsize.addr, align 8, !dbg !20119, !tbaa !3285
  %call = call i64 @argmatch(i8* %0, i8** %1, i8* %2, i64 %3) #14, !dbg !20120
  store i64 %call, i64* %res, align 8, !dbg !20115, !tbaa !3285
  %4 = load i64, i64* %res, align 8, !dbg !20121, !tbaa !3285
  %cmp = icmp sge i64 %4, 0, !dbg !20123
  br i1 %cmp, label %if.then, label %if.end, !dbg !20124

if.then:                                          ; preds = %entry
  %5 = load i64, i64* %res, align 8, !dbg !20125, !tbaa !3285
  store i64 %5, i64* %retval, align 8, !dbg !20126
  br label %return, !dbg !20126

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %context.addr, align 8, !dbg !20127, !tbaa !2645
  %7 = load i8*, i8** %arg.addr, align 8, !dbg !20128, !tbaa !2645
  %8 = load i64, i64* %res, align 8, !dbg !20129, !tbaa !3285
  call void @argmatch_invalid(i8* %6, i8* %7, i64 %8), !dbg !20130
  %9 = load i8**, i8*** %arglist.addr, align 8, !dbg !20131, !tbaa !2645
  %10 = load i8*, i8** %vallist.addr, align 8, !dbg !20132, !tbaa !2645
  %11 = load i64, i64* %valsize.addr, align 8, !dbg !20133, !tbaa !3285
  call void @argmatch_valid(i8** %9, i8* %10, i64 %11), !dbg !20134
  %12 = load void ()*, void ()** %exit_fn.addr, align 8, !dbg !20135, !tbaa !2645
  call void %12(), !dbg !20136
  store i64 -1, i64* %retval, align 8, !dbg !20137
  br label %return, !dbg !20137

return:                                           ; preds = %if.end, %if.then
  %13 = load i64, i64* %retval, align 8, !dbg !20138
  ret i64 %13, !dbg !20138
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i8* @argmatch_to_argument(i8* %value, i8** %arglist, i8* %vallist, i64 %valsize) #10 !dbg !20139 !ctir !1385 {
entry:
  %retval = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  %arglist.addr = alloca i8**, align 8
  %vallist.addr = alloca i8*, align 8
  %valsize.addr = alloca i64, align 8
  %i = alloca i64, align 8, !ctir !55
  store i8* %value, i8** %value.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !20140, metadata !DIExpression()), !dbg !20141
  store i8** %arglist, i8*** %arglist.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8*** %arglist.addr, metadata !20142, metadata !DIExpression()), !dbg !20143
  store i8* %vallist, i8** %vallist.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %vallist.addr, metadata !20144, metadata !DIExpression()), !dbg !20145
  store i64 %valsize, i64* %valsize.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %valsize.addr, metadata !20146, metadata !DIExpression()), !dbg !20147
  call void @llvm.dbg.declare(metadata i64* %i, metadata !20148, metadata !DIExpression()), !dbg !20149
  store i64 0, i64* %i, align 8, !dbg !20150, !tbaa !3285
  br label %for.cond, !dbg !20152

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i8**, i8*** %arglist.addr, align 8, !dbg !20153, !tbaa !2645
  %1 = load i64, i64* %i, align 8, !dbg !20155, !tbaa !3285
  %arrayidx = getelementptr inbounds i8*, i8** %0, i64 %1, !dbg !20153, !ctir !1344
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !20153, !tbaa !2645
  %tobool = icmp ne i8* %2, null, !dbg !20156
  br i1 %tobool, label %for.body, label %for.end, !dbg !20156

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %value.addr, align 8, !dbg !20157, !tbaa !2645
  %4 = load i8*, i8** %vallist.addr, align 8, !dbg !20159, !tbaa !2645
  %5 = load i64, i64* %valsize.addr, align 8, !dbg !20160, !tbaa !3285
  %6 = load i64, i64* %i, align 8, !dbg !20161, !tbaa !3285
  %mul = mul i64 %5, %6, !dbg !20162
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %mul, !dbg !20163
  %7 = load i64, i64* %valsize.addr, align 8, !dbg !20164, !tbaa !3285
  %call = call i32 @memcmp(i8* %3, i8* %add.ptr, i64 %7) #14, !dbg !20165
  %tobool1 = icmp ne i32 %call, 0, !dbg !20165
  br i1 %tobool1, label %if.end, label %if.then, !dbg !20166

if.then:                                          ; preds = %for.body
  %8 = load i8**, i8*** %arglist.addr, align 8, !dbg !20167, !tbaa !2645
  %9 = load i64, i64* %i, align 8, !dbg !20168, !tbaa !3285
  %arrayidx2 = getelementptr inbounds i8*, i8** %8, i64 %9, !dbg !20167, !ctir !1344
  %10 = load i8*, i8** %arrayidx2, align 8, !dbg !20167, !tbaa !2645
  store i8* %10, i8** %retval, align 8, !dbg !20169
  br label %return, !dbg !20169

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !20170

for.inc:                                          ; preds = %if.end
  %11 = load i64, i64* %i, align 8, !dbg !20171, !tbaa !3285
  %inc = add i64 %11, 1, !dbg !20171
  store i64 %inc, i64* %i, align 8, !dbg !20171, !tbaa !3285
  br label %for.cond, !dbg !20172, !llvm.loop !20173

for.end:                                          ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !20175
  br label %return, !dbg !20175

return:                                           ; preds = %for.end, %if.then
  %12 = load i8*, i8** %retval, align 8, !dbg !20176
  ret i8* %12, !dbg !20176
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotl64(i64 %x, i32 %n) #4 !dbg !20177 !ctir !2282 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !20179, metadata !DIExpression()), !dbg !20180
  store i32 %n, i32* %n.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !20181, metadata !DIExpression()), !dbg !20182
  %0 = load i64, i64* %x.addr, align 8, !dbg !20183, !tbaa !3285
  %1 = load i32, i32* %n.addr, align 4, !dbg !20184, !tbaa !2632
  %sh_prom = zext i32 %1 to i64, !dbg !20185
  %shl = shl i64 %0, %sh_prom, !dbg !20185
  %2 = load i64, i64* %x.addr, align 8, !dbg !20186, !tbaa !3285
  %3 = load i32, i32* %n.addr, align 4, !dbg !20187, !tbaa !2632
  %sub = sub nsw i32 64, %3, !dbg !20188
  %sh_prom1 = zext i32 %sub to i64, !dbg !20189
  %shr = lshr i64 %2, %sh_prom1, !dbg !20189
  %or = or i64 %shl, %shr, !dbg !20190
  ret i64 %or, !dbg !20191
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotr64(i64 %x, i32 %n) #4 !dbg !20192 !ctir !2282 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !20193, metadata !DIExpression()), !dbg !20194
  store i32 %n, i32* %n.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !20195, metadata !DIExpression()), !dbg !20196
  %0 = load i64, i64* %x.addr, align 8, !dbg !20197, !tbaa !3285
  %1 = load i32, i32* %n.addr, align 4, !dbg !20198, !tbaa !2632
  %sh_prom = zext i32 %1 to i64, !dbg !20199
  %shr = lshr i64 %0, %sh_prom, !dbg !20199
  %2 = load i64, i64* %x.addr, align 8, !dbg !20200, !tbaa !3285
  %3 = load i32, i32* %n.addr, align 4, !dbg !20201, !tbaa !2632
  %sub = sub nsw i32 64, %3, !dbg !20202
  %sh_prom1 = zext i32 %sub to i64, !dbg !20203
  %shl = shl i64 %2, %sh_prom1, !dbg !20203
  %or = or i64 %shr, %shl, !dbg !20204
  ret i64 %or, !dbg !20205
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rotl32(i32 %x, i32 %n) #4 !dbg !20206 !ctir !2284 {
entry:
  %x.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !20207, metadata !DIExpression()), !dbg !20208
  store i32 %n, i32* %n.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !20209, metadata !DIExpression()), !dbg !20210
  %0 = load i32, i32* %x.addr, align 4, !dbg !20211, !tbaa !2632
  %1 = load i32, i32* %n.addr, align 4, !dbg !20212, !tbaa !2632
  %shl = shl i32 %0, %1, !dbg !20213
  %2 = load i32, i32* %x.addr, align 4, !dbg !20214, !tbaa !2632
  %3 = load i32, i32* %n.addr, align 4, !dbg !20215, !tbaa !2632
  %sub = sub nsw i32 32, %3, !dbg !20216
  %shr = lshr i32 %2, %sub, !dbg !20217
  %or = or i32 %shl, %shr, !dbg !20218
  ret i32 %or, !dbg !20219
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rotr32(i32 %x, i32 %n) #4 !dbg !20220 !ctir !2284 {
entry:
  %x.addr = alloca i32, align 4
  %n.addr = alloca i32, align 4
  store i32 %x, i32* %x.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !20221, metadata !DIExpression()), !dbg !20222
  store i32 %n, i32* %n.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !20223, metadata !DIExpression()), !dbg !20224
  %0 = load i32, i32* %x.addr, align 4, !dbg !20225, !tbaa !2632
  %1 = load i32, i32* %n.addr, align 4, !dbg !20226, !tbaa !2632
  %shr = lshr i32 %0, %1, !dbg !20227
  %2 = load i32, i32* %x.addr, align 4, !dbg !20228, !tbaa !2632
  %3 = load i32, i32* %n.addr, align 4, !dbg !20229, !tbaa !2632
  %sub = sub nsw i32 32, %3, !dbg !20230
  %shl = shl i32 %2, %sub, !dbg !20231
  %or = or i32 %shr, %shl, !dbg !20232
  ret i32 %or, !dbg !20233
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotl_sz(i64 %x, i32 %n) #4 !dbg !20234 !ctir !2286 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !20235, metadata !DIExpression()), !dbg !20236
  store i32 %n, i32* %n.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !20237, metadata !DIExpression()), !dbg !20238
  %0 = load i64, i64* %x.addr, align 8, !dbg !20239, !tbaa !3285
  %1 = load i32, i32* %n.addr, align 4, !dbg !20240, !tbaa !2632
  %sh_prom = zext i32 %1 to i64, !dbg !20241
  %shl = shl i64 %0, %sh_prom, !dbg !20241
  %2 = load i64, i64* %x.addr, align 8, !dbg !20242, !tbaa !3285
  %3 = load i32, i32* %n.addr, align 4, !dbg !20243, !tbaa !2632
  %conv = sext i32 %3 to i64, !dbg !20243
  %sub = sub i64 64, %conv, !dbg !20244
  %shr = lshr i64 %2, %sub, !dbg !20245
  %or = or i64 %shl, %shr, !dbg !20246
  ret i64 %or, !dbg !20247
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @rotr_sz(i64 %x, i32 %n) #4 !dbg !20248 !ctir !2286 {
entry:
  %x.addr = alloca i64, align 8
  %n.addr = alloca i32, align 4
  store i64 %x, i64* %x.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !20249, metadata !DIExpression()), !dbg !20250
  store i32 %n, i32* %n.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !20251, metadata !DIExpression()), !dbg !20252
  %0 = load i64, i64* %x.addr, align 8, !dbg !20253, !tbaa !3285
  %1 = load i32, i32* %n.addr, align 4, !dbg !20254, !tbaa !2632
  %sh_prom = zext i32 %1 to i64, !dbg !20255
  %shr = lshr i64 %0, %sh_prom, !dbg !20255
  %2 = load i64, i64* %x.addr, align 8, !dbg !20256, !tbaa !3285
  %3 = load i32, i32* %n.addr, align 4, !dbg !20257, !tbaa !2632
  %conv = sext i32 %3 to i64, !dbg !20257
  %sub = sub i64 64, %conv, !dbg !20258
  %shl = shl i64 %2, %sub, !dbg !20259
  %or = or i64 %shr, %shl, !dbg !20260
  ret i64 %or, !dbg !20261
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @rotl16(i16 zeroext %x, i32 %n) #4 !dbg !20262 !ctir !2288 {
entry:
  %x.addr = alloca i16, align 2
  %n.addr = alloca i32, align 4
  store i16 %x, i16* %x.addr, align 2, !tbaa !14634
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !20263, metadata !DIExpression()), !dbg !20264
  store i32 %n, i32* %n.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !20265, metadata !DIExpression()), !dbg !20266
  %0 = load i16, i16* %x.addr, align 2, !dbg !20267, !tbaa !14634
  %conv = zext i16 %0 to i32, !dbg !20267
  %1 = load i32, i32* %n.addr, align 4, !dbg !20268, !tbaa !2632
  %shl = shl i32 %conv, %1, !dbg !20269
  %2 = load i16, i16* %x.addr, align 2, !dbg !20270, !tbaa !14634
  %conv1 = zext i16 %2 to i32, !dbg !20270
  %3 = load i32, i32* %n.addr, align 4, !dbg !20271, !tbaa !2632
  %sub = sub nsw i32 16, %3, !dbg !20272
  %shr = ashr i32 %conv1, %sub, !dbg !20273
  %or = or i32 %shl, %shr, !dbg !20274
  %and = and i32 %or, 65535, !dbg !20275
  %conv2 = trunc i32 %and to i16, !dbg !20276
  ret i16 %conv2, !dbg !20277
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @rotr16(i16 zeroext %x, i32 %n) #4 !dbg !20278 !ctir !2288 {
entry:
  %x.addr = alloca i16, align 2
  %n.addr = alloca i32, align 4
  store i16 %x, i16* %x.addr, align 2, !tbaa !14634
  call void @llvm.dbg.declare(metadata i16* %x.addr, metadata !20279, metadata !DIExpression()), !dbg !20280
  store i32 %n, i32* %n.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !20281, metadata !DIExpression()), !dbg !20282
  %0 = load i16, i16* %x.addr, align 2, !dbg !20283, !tbaa !14634
  %conv = zext i16 %0 to i32, !dbg !20283
  %1 = load i32, i32* %n.addr, align 4, !dbg !20284, !tbaa !2632
  %shr = ashr i32 %conv, %1, !dbg !20285
  %2 = load i16, i16* %x.addr, align 2, !dbg !20286, !tbaa !14634
  %conv1 = zext i16 %2 to i32, !dbg !20286
  %3 = load i32, i32* %n.addr, align 4, !dbg !20287, !tbaa !2632
  %sub = sub nsw i32 16, %3, !dbg !20288
  %shl = shl i32 %conv1, %sub, !dbg !20289
  %or = or i32 %shr, %shl, !dbg !20290
  %and = and i32 %or, 65535, !dbg !20291
  %conv2 = trunc i32 %and to i16, !dbg !20292
  ret i16 %conv2, !dbg !20293
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i8 @rotl8(i8 zeroext %x, i32 %n) #4 !dbg !20294 !ctir !2292 {
entry:
  %x.addr = alloca i8, align 1
  %n.addr = alloca i32, align 4
  store i8 %x, i8* %x.addr, align 1, !tbaa !3292
  call void @llvm.dbg.declare(metadata i8* %x.addr, metadata !20295, metadata !DIExpression()), !dbg !20296
  store i32 %n, i32* %n.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !20297, metadata !DIExpression()), !dbg !20298
  %0 = load i8, i8* %x.addr, align 1, !dbg !20299, !tbaa !3292
  %conv = zext i8 %0 to i32, !dbg !20299
  %1 = load i32, i32* %n.addr, align 4, !dbg !20300, !tbaa !2632
  %shl = shl i32 %conv, %1, !dbg !20301
  %2 = load i8, i8* %x.addr, align 1, !dbg !20302, !tbaa !3292
  %conv1 = zext i8 %2 to i32, !dbg !20302
  %3 = load i32, i32* %n.addr, align 4, !dbg !20303, !tbaa !2632
  %sub = sub nsw i32 8, %3, !dbg !20304
  %shr = ashr i32 %conv1, %sub, !dbg !20305
  %or = or i32 %shl, %shr, !dbg !20306
  %and = and i32 %or, 255, !dbg !20307
  %conv2 = trunc i32 %and to i8, !dbg !20308
  ret i8 %conv2, !dbg !20309
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i8 @rotr8(i8 zeroext %x, i32 %n) #4 !dbg !20310 !ctir !2292 {
entry:
  %x.addr = alloca i8, align 1
  %n.addr = alloca i32, align 4
  store i8 %x, i8* %x.addr, align 1, !tbaa !3292
  call void @llvm.dbg.declare(metadata i8* %x.addr, metadata !20311, metadata !DIExpression()), !dbg !20312
  store i32 %n, i32* %n.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !20313, metadata !DIExpression()), !dbg !20314
  %0 = load i8, i8* %x.addr, align 1, !dbg !20315, !tbaa !3292
  %conv = zext i8 %0 to i32, !dbg !20315
  %1 = load i32, i32* %n.addr, align 4, !dbg !20316, !tbaa !2632
  %shr = ashr i32 %conv, %1, !dbg !20317
  %2 = load i8, i8* %x.addr, align 1, !dbg !20318, !tbaa !3292
  %conv1 = zext i8 %2 to i32, !dbg !20318
  %3 = load i32, i32* %n.addr, align 4, !dbg !20319, !tbaa !2632
  %sub = sub nsw i32 8, %3, !dbg !20320
  %shl = shl i32 %conv1, %sub, !dbg !20321
  %or = or i32 %shr, %shl, !dbg !20322
  %and = and i32 %or, 255, !dbg !20323
  %conv2 = trunc i32 %and to i8, !dbg !20324
  ret i8 %conv2, !dbg !20325
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i32 @c_strcasecmp(i8* %s1, i8* %s2) #10 !dbg !20326 !ctir !1860 {
entry:
  %retval = alloca i32, align 4
  %s1.addr = alloca i8*, align 8
  %s2.addr = alloca i8*, align 8
  %p1 = alloca i8*, align 8, !ctir !552
  %p2 = alloca i8*, align 8, !ctir !552
  %c1 = alloca i8, align 1, !ctir !554
  %c2 = alloca i8, align 1, !ctir !554
  store i8* %s1, i8** %s1.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %s1.addr, metadata !20328, metadata !DIExpression()), !dbg !20329
  store i8* %s2, i8** %s2.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %s2.addr, metadata !20330, metadata !DIExpression()), !dbg !20331
  call void @llvm.dbg.declare(metadata i8** %p1, metadata !20332, metadata !DIExpression()), !dbg !20333
  %0 = load i8*, i8** %s1.addr, align 8, !dbg !20334, !tbaa !2645
  store i8* %0, i8** %p1, align 8, !dbg !20333, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %p2, metadata !20335, metadata !DIExpression()), !dbg !20336
  %1 = load i8*, i8** %s2.addr, align 8, !dbg !20337, !tbaa !2645
  store i8* %1, i8** %p2, align 8, !dbg !20336, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8* %c1, metadata !20338, metadata !DIExpression()), !dbg !20339
  call void @llvm.dbg.declare(metadata i8* %c2, metadata !20340, metadata !DIExpression()), !dbg !20341
  %2 = load i8*, i8** %p1, align 8, !dbg !20342, !tbaa !2645
  %3 = load i8*, i8** %p2, align 8, !dbg !20344, !tbaa !2645
  %cmp = icmp eq i8* %2, %3, !dbg !20345
  br i1 %cmp, label %if.then, label %if.end, !dbg !20346

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !20347
  br label %return, !dbg !20347

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !20348

do.body:                                          ; preds = %do.cond, %if.end
  %4 = load i8*, i8** %p1, align 8, !dbg !20349, !tbaa !2645
  %5 = load i8, i8* %4, align 1, !dbg !20351, !tbaa !3292, !ctir !553
  %conv = zext i8 %5 to i32, !dbg !20351
  %call = call i32 @c_tolower(i32 %conv), !dbg !20352
  %conv1 = trunc i32 %call to i8, !dbg !20352
  store i8 %conv1, i8* %c1, align 1, !dbg !20353, !tbaa !3292
  %6 = load i8*, i8** %p2, align 8, !dbg !20354, !tbaa !2645
  %7 = load i8, i8* %6, align 1, !dbg !20355, !tbaa !3292, !ctir !553
  %conv2 = zext i8 %7 to i32, !dbg !20355
  %call3 = call i32 @c_tolower(i32 %conv2), !dbg !20356
  %conv4 = trunc i32 %call3 to i8, !dbg !20356
  store i8 %conv4, i8* %c2, align 1, !dbg !20357, !tbaa !3292
  %8 = load i8, i8* %c1, align 1, !dbg !20358, !tbaa !3292
  %conv5 = zext i8 %8 to i32, !dbg !20358
  %cmp6 = icmp eq i32 %conv5, 0, !dbg !20360
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !20361

if.then8:                                         ; preds = %do.body
  br label %do.end, !dbg !20362

if.end9:                                          ; preds = %do.body
  %9 = load i8*, i8** %p1, align 8, !dbg !20363, !tbaa !2645
  %incdec.ptr = getelementptr inbounds i8, i8* %9, i32 1, !dbg !20363
  store i8* %incdec.ptr, i8** %p1, align 8, !dbg !20363, !tbaa !2645
  %10 = load i8*, i8** %p2, align 8, !dbg !20364, !tbaa !2645
  %incdec.ptr10 = getelementptr inbounds i8, i8* %10, i32 1, !dbg !20364
  store i8* %incdec.ptr10, i8** %p2, align 8, !dbg !20364, !tbaa !2645
  br label %do.cond, !dbg !20365

do.cond:                                          ; preds = %if.end9
  %11 = load i8, i8* %c1, align 1, !dbg !20366, !tbaa !3292
  %conv11 = zext i8 %11 to i32, !dbg !20366
  %12 = load i8, i8* %c2, align 1, !dbg !20367, !tbaa !3292
  %conv12 = zext i8 %12 to i32, !dbg !20367
  %cmp13 = icmp eq i32 %conv11, %conv12, !dbg !20368
  br i1 %cmp13, label %do.body, label %do.end, !dbg !20365, !llvm.loop !20369

do.end:                                           ; preds = %do.cond, %if.then8
  %13 = load i8, i8* %c1, align 1, !dbg !20371, !tbaa !3292
  %conv15 = zext i8 %13 to i32, !dbg !20371
  %14 = load i8, i8* %c2, align 1, !dbg !20373, !tbaa !3292
  %conv16 = zext i8 %14 to i32, !dbg !20373
  %sub = sub nsw i32 %conv15, %conv16, !dbg !20374
  store i32 %sub, i32* %retval, align 4, !dbg !20375
  br label %return, !dbg !20375

return:                                           ; preds = %do.end, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !20376
  ret i32 %15, !dbg !20376
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @close_stream(%struct._IO_FILE* %stream) #4 !dbg !20377 !ctir !2302 {
entry:
  %retval = alloca i32, align 4
  %stream.addr = alloca %struct._IO_FILE*, align 8
  %some_pending = alloca i8, align 1, !ctir !2338
  %prev_fail = alloca i8, align 1, !ctir !2338
  %fclose_fail = alloca i8, align 1, !ctir !2338
  store %struct._IO_FILE* %stream, %struct._IO_FILE** %stream.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %stream.addr, metadata !20379, metadata !DIExpression()), !dbg !20380
  call void @llvm.dbg.declare(metadata i8* %some_pending, metadata !20381, metadata !DIExpression()), !dbg !20382
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !20383, !tbaa !2645
  %call = call i64 @__fpending(%struct._IO_FILE* %0) #9, !dbg !20384
  %cmp = icmp ne i64 %call, 0, !dbg !20385
  %frombool = zext i1 %cmp to i8, !dbg !20382
  store i8 %frombool, i8* %some_pending, align 1, !dbg !20382, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %prev_fail, metadata !20386, metadata !DIExpression()), !dbg !20387
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !20388, !tbaa !2645
  %call1 = call i32 @ferror_unlocked(%struct._IO_FILE* %1) #9, !dbg !20388
  %cmp2 = icmp ne i32 %call1, 0, !dbg !20389
  %frombool3 = zext i1 %cmp2 to i8, !dbg !20387
  store i8 %frombool3, i8* %prev_fail, align 1, !dbg !20387, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8* %fclose_fail, metadata !20390, metadata !DIExpression()), !dbg !20391
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %stream.addr, align 8, !dbg !20392, !tbaa !2645
  %call4 = call i32 @rpl_fclose(%struct._IO_FILE* %2), !dbg !20393
  %cmp5 = icmp ne i32 %call4, 0, !dbg !20394
  %frombool6 = zext i1 %cmp5 to i8, !dbg !20391
  store i8 %frombool6, i8* %fclose_fail, align 1, !dbg !20391, !tbaa !2739
  %3 = load i8, i8* %prev_fail, align 1, !dbg !20395, !tbaa !2739
  %tobool = trunc i8 %3 to i1, !dbg !20395
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !20397

lor.lhs.false:                                    ; preds = %entry
  %4 = load i8, i8* %fclose_fail, align 1, !dbg !20398, !tbaa !2739
  %tobool7 = trunc i8 %4 to i1, !dbg !20398
  br i1 %tobool7, label %land.lhs.true, label %if.end15, !dbg !20399

land.lhs.true:                                    ; preds = %lor.lhs.false
  %5 = load i8, i8* %some_pending, align 1, !dbg !20400, !tbaa !2739
  %tobool8 = trunc i8 %5 to i1, !dbg !20400
  br i1 %tobool8, label %if.then, label %lor.lhs.false9, !dbg !20401

lor.lhs.false9:                                   ; preds = %land.lhs.true
  %call10 = call i32* @__errno_location() #16, !dbg !20402
  %6 = load i32, i32* %call10, align 4, !dbg !20402, !tbaa !2632, !ctir !7
  %cmp11 = icmp ne i32 %6, 9, !dbg !20403
  br i1 %cmp11, label %if.then, label %if.end15, !dbg !20404

if.then:                                          ; preds = %lor.lhs.false9, %land.lhs.true, %entry
  %7 = load i8, i8* %fclose_fail, align 1, !dbg !20405, !tbaa !2739
  %tobool12 = trunc i8 %7 to i1, !dbg !20405
  br i1 %tobool12, label %if.end, label %if.then13, !dbg !20408

if.then13:                                        ; preds = %if.then
  %call14 = call i32* @__errno_location() #16, !dbg !20409
  store i32 0, i32* %call14, align 4, !dbg !20410, !tbaa !2632, !ctir !7
  br label %if.end, !dbg !20409

if.end:                                           ; preds = %if.then13, %if.then
  store i32 -1, i32* %retval, align 4, !dbg !20411
  br label %return, !dbg !20411

if.end15:                                         ; preds = %lor.lhs.false9, %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !20412
  br label %return, !dbg !20412

return:                                           ; preds = %if.end15, %if.end
  %8 = load i32, i32* %retval, align 4, !dbg !20413
  ret i32 %8, !dbg !20413
}

; Function Attrs: nounwind
declare dso_local i64 @__fpending(%struct._IO_FILE*) #2

; Function Attrs: nounwind
declare dso_local i32 @ferror_unlocked(%struct._IO_FILE*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.__dirstream* @opendir_safer(i8* %name) #4 !dbg !20414 !ctir !2342 {
entry:
  %name.addr = alloca i8*, align 8
  %dp = alloca %struct.__dirstream*, align 8, !ctir !693
  %fd = alloca i32, align 4, !ctir !7
  %newdp = alloca %struct.__dirstream*, align 8, !ctir !693
  %e = alloca i32, align 4, !ctir !7
  %f = alloca i32, align 4, !ctir !7
  store i8* %name, i8** %name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !20416, metadata !DIExpression()), !dbg !20417
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %dp, metadata !20418, metadata !DIExpression()), !dbg !20419
  %0 = load i8*, i8** %name.addr, align 8, !dbg !20420, !tbaa !2645
  %call = call %struct.__dirstream* @opendir(i8* %0), !dbg !20421
  store %struct.__dirstream* %call, %struct.__dirstream** %dp, align 8, !dbg !20419, !tbaa !2645
  %1 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !20422, !tbaa !2645
  %tobool = icmp ne %struct.__dirstream* %1, null, !dbg !20422
  br i1 %tobool, label %if.then, label %if.end17, !dbg !20424

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !20425, metadata !DIExpression()), !dbg !20427
  %2 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !20428, !tbaa !2645
  %call1 = call i32 @dirfd(%struct.__dirstream* %2) #9, !dbg !20429
  store i32 %call1, i32* %fd, align 4, !dbg !20427, !tbaa !2632
  %3 = load i32, i32* %fd, align 4, !dbg !20430, !tbaa !2632
  %cmp = icmp sle i32 0, %3, !dbg !20432
  br i1 %cmp, label %land.lhs.true, label %if.end16, !dbg !20433

land.lhs.true:                                    ; preds = %if.then
  %4 = load i32, i32* %fd, align 4, !dbg !20434, !tbaa !2632
  %cmp2 = icmp sle i32 %4, 2, !dbg !20435
  br i1 %cmp2, label %if.then3, label %if.end16, !dbg !20436

if.then3:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.__dirstream** %newdp, metadata !20437, metadata !DIExpression()), !dbg !20439
  call void @llvm.dbg.declare(metadata i32* %e, metadata !20440, metadata !DIExpression()), !dbg !20441
  call void @llvm.dbg.declare(metadata i32* %f, metadata !20442, metadata !DIExpression()), !dbg !20443
  %5 = load i32, i32* %fd, align 4, !dbg !20444, !tbaa !2632
  %call4 = call i32 (i32, i32, ...) @rpl_fcntl(i32 %5, i32 1030, i32 3), !dbg !20445
  store i32 %call4, i32* %f, align 4, !dbg !20443, !tbaa !2632
  %6 = load i32, i32* %f, align 4, !dbg !20446, !tbaa !2632
  %cmp5 = icmp slt i32 %6, 0, !dbg !20448
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !20449

if.then6:                                         ; preds = %if.then3
  %call7 = call i32* @__errno_location() #16, !dbg !20450
  %7 = load i32, i32* %call7, align 4, !dbg !20450, !tbaa !2632, !ctir !7
  store i32 %7, i32* %e, align 4, !dbg !20452, !tbaa !2632
  store %struct.__dirstream* null, %struct.__dirstream** %newdp, align 8, !dbg !20453, !tbaa !2645
  br label %if.end13, !dbg !20454

if.else:                                          ; preds = %if.then3
  %8 = load i32, i32* %f, align 4, !dbg !20455, !tbaa !2632
  %call8 = call %struct.__dirstream* @fdopendir(i32 %8), !dbg !20457
  store %struct.__dirstream* %call8, %struct.__dirstream** %newdp, align 8, !dbg !20458, !tbaa !2645
  %call9 = call i32* @__errno_location() #16, !dbg !20459
  %9 = load i32, i32* %call9, align 4, !dbg !20459, !tbaa !2632, !ctir !7
  store i32 %9, i32* %e, align 4, !dbg !20460, !tbaa !2632
  %10 = load %struct.__dirstream*, %struct.__dirstream** %newdp, align 8, !dbg !20461, !tbaa !2645
  %tobool10 = icmp ne %struct.__dirstream* %10, null, !dbg !20461
  br i1 %tobool10, label %if.end, label %if.then11, !dbg !20463

if.then11:                                        ; preds = %if.else
  %11 = load i32, i32* %f, align 4, !dbg !20464, !tbaa !2632
  %call12 = call i32 @close(i32 %11), !dbg !20465
  br label %if.end, !dbg !20465

if.end:                                           ; preds = %if.then11, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end, %if.then6
  %12 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !20466, !tbaa !2645
  %call14 = call i32 @closedir(%struct.__dirstream* %12), !dbg !20467
  %13 = load i32, i32* %e, align 4, !dbg !20468, !tbaa !2632
  %call15 = call i32* @__errno_location() #16, !dbg !20469
  store i32 %13, i32* %call15, align 4, !dbg !20470, !tbaa !2632, !ctir !7
  %14 = load %struct.__dirstream*, %struct.__dirstream** %newdp, align 8, !dbg !20471, !tbaa !2645
  store %struct.__dirstream* %14, %struct.__dirstream** %dp, align 8, !dbg !20472, !tbaa !2645
  br label %if.end16, !dbg !20473

if.end16:                                         ; preds = %if.end13, %land.lhs.true, %if.then
  br label %if.end17, !dbg !20474

if.end17:                                         ; preds = %if.end16, %entry
  %15 = load %struct.__dirstream*, %struct.__dirstream** %dp, align 8, !dbg !20475, !tbaa !2645
  ret %struct.__dirstream* %15, !dbg !20476
}

declare dso_local %struct.__dirstream* @opendir(i8*) #3

; Function Attrs: nounwind
declare dso_local i32 @dirfd(%struct.__dirstream*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @gettime(%struct.timespec* nonnull %ts) #4 !dbg !20477 !ctir !2347 {
entry:
  %ts.addr = alloca %struct.timespec*, align 8
  store %struct.timespec* %ts, %struct.timespec** %ts.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.timespec** %ts.addr, metadata !20479, metadata !DIExpression()), !dbg !20480
  %0 = load %struct.timespec*, %struct.timespec** %ts.addr, align 8, !dbg !20481, !tbaa !2645
  %call = call i32 @clock_gettime(i32 0, %struct.timespec* %0) #9, !dbg !20482
  ret void, !dbg !20483
}

; Function Attrs: nounwind
declare dso_local i32 @clock_gettime(i32, %struct.timespec*) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local { i64, i64 } @current_timespec() #4 !dbg !20484 !ctir !2354 {
entry:
  %retval = alloca %struct.timespec, align 8
  call void @llvm.dbg.declare(metadata %struct.timespec* %retval, metadata !20485, metadata !DIExpression()), !dbg !20486
  call void @gettime(%struct.timespec* %retval), !dbg !20487
  %0 = bitcast %struct.timespec* %retval to { i64, i64 }*, !dbg !20488
  %1 = load { i64, i64 }, { i64, i64 }* %0, align 8, !dbg !20488
  ret { i64, i64 } %1, !dbg !20488
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @hard_locale(i32 %category) #4 !dbg !20489 !ctir !256 {
entry:
  %category.addr = alloca i32, align 4
  %hard = alloca i8, align 1, !ctir !142
  %p = alloca i8*, align 8, !ctir !180
  store i32 %category, i32* %category.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %category.addr, metadata !20491, metadata !DIExpression()), !dbg !20492
  call void @llvm.dbg.declare(metadata i8* %hard, metadata !20493, metadata !DIExpression()), !dbg !20494
  store i8 1, i8* %hard, align 1, !dbg !20494, !tbaa !2739
  call void @llvm.dbg.declare(metadata i8** %p, metadata !20495, metadata !DIExpression()), !dbg !20496
  %0 = load i32, i32* %category.addr, align 4, !dbg !20497, !tbaa !2632
  %call = call i8* @setlocale(i32 %0, i8* null) #9, !dbg !20498
  store i8* %call, i8** %p, align 8, !dbg !20496, !tbaa !2645
  %1 = load i8*, i8** %p, align 8, !dbg !20499, !tbaa !2645
  %tobool = icmp ne i8* %1, null, !dbg !20499
  br i1 %tobool, label %if.then, label %if.end5, !dbg !20501

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %p, align 8, !dbg !20502, !tbaa !2645
  %call1 = call i32 @strcmp(i8* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.504, i64 0, i64 0)) #14, !dbg !20507
  %cmp = icmp eq i32 %call1, 0, !dbg !20508
  br i1 %cmp, label %if.then4, label %lor.lhs.false, !dbg !20509

lor.lhs.false:                                    ; preds = %if.then
  %3 = load i8*, i8** %p, align 8, !dbg !20510, !tbaa !2645
  %call2 = call i32 @strcmp(i8* %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.505, i64 0, i64 0)) #14, !dbg !20511
  %cmp3 = icmp eq i32 %call2, 0, !dbg !20512
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !20513

if.then4:                                         ; preds = %lor.lhs.false, %if.then
  store i8 0, i8* %hard, align 1, !dbg !20514, !tbaa !2739
  br label %if.end, !dbg !20515

if.end:                                           ; preds = %if.then4, %lor.lhs.false
  br label %if.end5, !dbg !20516

if.end5:                                          ; preds = %if.end, %entry
  %4 = load i8, i8* %hard, align 1, !dbg !20517, !tbaa !2739
  %tobool6 = trunc i8 %4 to i1, !dbg !20517
  ret i1 %tobool6, !dbg !20518
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @hash_pjw(i8* %x, i64 %tablesize) #10 !dbg !20519 !ctir !633 {
entry:
  %x.addr = alloca i8*, align 8
  %tablesize.addr = alloca i64, align 8
  %s = alloca i8*, align 8, !ctir !180
  %h = alloca i64, align 8, !ctir !55
  store i8* %x, i8** %x.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !20521, metadata !DIExpression()), !dbg !20522
  store i64 %tablesize, i64* %tablesize.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %tablesize.addr, metadata !20523, metadata !DIExpression()), !dbg !20524
  call void @llvm.dbg.declare(metadata i8** %s, metadata !20525, metadata !DIExpression()), !dbg !20526
  call void @llvm.dbg.declare(metadata i64* %h, metadata !20527, metadata !DIExpression()), !dbg !20528
  store i64 0, i64* %h, align 8, !dbg !20528, !tbaa !3285
  %0 = load i8*, i8** %x.addr, align 8, !dbg !20529, !tbaa !2645
  store i8* %0, i8** %s, align 8, !dbg !20531, !tbaa !2645
  br label %for.cond, !dbg !20532

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i8*, i8** %s, align 8, !dbg !20533, !tbaa !2645
  %2 = load i8, i8* %1, align 1, !dbg !20535, !tbaa !3292, !ctir !181
  %tobool = icmp ne i8 %2, 0, !dbg !20536
  br i1 %tobool, label %for.body, label %for.end, !dbg !20536

for.body:                                         ; preds = %for.cond
  %3 = load i8*, i8** %s, align 8, !dbg !20537, !tbaa !2645
  %4 = load i8, i8* %3, align 1, !dbg !20538, !tbaa !3292, !ctir !181
  %conv = sext i8 %4 to i64, !dbg !20538
  %5 = load i64, i64* %h, align 8, !dbg !20539, !tbaa !3285
  %shl = shl i64 %5, 9, !dbg !20540
  %6 = load i64, i64* %h, align 8, !dbg !20541, !tbaa !3285
  %shr = lshr i64 %6, 55, !dbg !20542
  %or = or i64 %shl, %shr, !dbg !20543
  %add = add i64 %conv, %or, !dbg !20544
  store i64 %add, i64* %h, align 8, !dbg !20545, !tbaa !3285
  br label %for.inc, !dbg !20546

for.inc:                                          ; preds = %for.body
  %7 = load i8*, i8** %s, align 8, !dbg !20547, !tbaa !2645
  %incdec.ptr = getelementptr inbounds i8, i8* %7, i32 1, !dbg !20547
  store i8* %incdec.ptr, i8** %s, align 8, !dbg !20547, !tbaa !2645
  br label %for.cond, !dbg !20548, !llvm.loop !20549

for.end:                                          ; preds = %for.cond
  %8 = load i64, i64* %h, align 8, !dbg !20551, !tbaa !3285
  %9 = load i64, i64* %tablesize.addr, align 8, !dbg !20552, !tbaa !3285
  %rem = urem i64 %8, %9, !dbg !20553
  ret i64 %rem, !dbg !20554
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @locale_charset() #4 !dbg !20555 !ctir !2365 {
entry:
  %codeset = alloca i8*, align 8, !ctir !180
  call void @llvm.dbg.declare(metadata i8** %codeset, metadata !20557, metadata !DIExpression()), !dbg !20558
  %call = call i8* @nl_langinfo(i32 14) #9, !dbg !20559
  store i8* %call, i8** %codeset, align 8, !dbg !20560, !tbaa !2645
  %0 = load i8*, i8** %codeset, align 8, !dbg !20561, !tbaa !2645
  %cmp = icmp eq i8* %0, null, !dbg !20563
  br i1 %cmp, label %if.then, label %if.end, !dbg !20564

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.510, i64 0, i64 0), i8** %codeset, align 8, !dbg !20565, !tbaa !2645
  br label %if.end, !dbg !20566

if.end:                                           ; preds = %if.then, %entry
  %1 = load i8*, i8** %codeset, align 8, !dbg !20567, !tbaa !2645
  %arrayidx = getelementptr inbounds i8, i8* %1, i64 0, !dbg !20567, !ctir !180
  %2 = load i8, i8* %arrayidx, align 1, !dbg !20567, !tbaa !3292
  %conv = sext i8 %2 to i32, !dbg !20567
  %cmp1 = icmp eq i32 %conv, 0, !dbg !20571
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !20572

if.then3:                                         ; preds = %if.end
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.511, i64 0, i64 0), i8** %codeset, align 8, !dbg !20573, !tbaa !2645
  br label %if.end4, !dbg !20574

if.end4:                                          ; preds = %if.then3, %if.end
  %3 = load i8*, i8** %codeset, align 8, !dbg !20575, !tbaa !2645
  ret i8* %3, !dbg !20576
}

; Function Attrs: nounwind
declare dso_local i8* @nl_langinfo(i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @dirchownmod(i32 %fd, i8* %dir, i32 %mkdir_mode, i32 %owner, i32 %group, i32 %mode, i32 %mode_bits) #4 !dbg !20577 !ctir !2369 {
entry:
  %fd.addr = alloca i32, align 4
  %dir.addr = alloca i8*, align 8
  %mkdir_mode.addr = alloca i32, align 4
  %owner.addr = alloca i32, align 4
  %group.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %mode_bits.addr = alloca i32, align 4
  %st = alloca %struct.stat, align 8, !ctir !20579
  %result = alloca i32, align 4, !ctir !7
  %dir_mode = alloca i32, align 4, !ctir !139
  %indeterminate = alloca i32, align 4, !ctir !139
  %chmod_mode = alloca i32, align 4, !ctir !139
  %e = alloca i32, align 4, !ctir !7
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !20600, metadata !DIExpression()), !dbg !20601
  store i8* %dir, i8** %dir.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %dir.addr, metadata !20602, metadata !DIExpression()), !dbg !20603
  store i32 %mkdir_mode, i32* %mkdir_mode.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %mkdir_mode.addr, metadata !20604, metadata !DIExpression()), !dbg !20605
  store i32 %owner, i32* %owner.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %owner.addr, metadata !20606, metadata !DIExpression()), !dbg !20607
  store i32 %group, i32* %group.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %group.addr, metadata !20608, metadata !DIExpression()), !dbg !20609
  store i32 %mode, i32* %mode.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !20610, metadata !DIExpression()), !dbg !20611
  store i32 %mode_bits, i32* %mode_bits.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %mode_bits.addr, metadata !20612, metadata !DIExpression()), !dbg !20613
  call void @llvm.dbg.declare(metadata %struct.stat* %st, metadata !20614, metadata !DIExpression()), !dbg !20615
  call void @llvm.dbg.declare(metadata i32* %result, metadata !20616, metadata !DIExpression()), !dbg !20617
  %0 = load i32, i32* %fd.addr, align 4, !dbg !20618, !tbaa !2632
  %cmp = icmp slt i32 %0, 0, !dbg !20619
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !20618

cond.true:                                        ; preds = %entry
  %1 = load i8*, i8** %dir.addr, align 8, !dbg !20620, !tbaa !2645
  %call = call i32 @stat(i8* %1, %struct.stat* %st) #9, !dbg !20621
  br label %cond.end, !dbg !20618

cond.false:                                       ; preds = %entry
  %2 = load i32, i32* %fd.addr, align 4, !dbg !20622, !tbaa !2632
  %call1 = call i32 @fstat(i32 %2, %struct.stat* %st) #9, !dbg !20623
  br label %cond.end, !dbg !20618

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !20618
  store i32 %cond, i32* %result, align 4, !dbg !20617, !tbaa !2632
  %3 = load i32, i32* %result, align 4, !dbg !20624, !tbaa !2632
  %cmp2 = icmp eq i32 %3, 0, !dbg !20626
  br i1 %cmp2, label %if.then, label %if.end54, !dbg !20627

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i32* %dir_mode, metadata !20628, metadata !DIExpression()), !dbg !20630
  %st_mode = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 3, !dbg !20631, !ctir !20579
  %4 = load i32, i32* %st_mode, align 8, !dbg !20631, !tbaa !2911, !ctir !140
  store i32 %4, i32* %dir_mode, align 4, !dbg !20630, !tbaa !2632
  %5 = load i32, i32* %dir_mode, align 4, !dbg !20632, !tbaa !2632
  %and = and i32 %5, 61440, !dbg !20632
  %cmp3 = icmp eq i32 %and, 16384, !dbg !20632
  br i1 %cmp3, label %if.else, label %if.then4, !dbg !20634

if.then4:                                         ; preds = %if.then
  %call5 = call i32* @__errno_location() #16, !dbg !20635
  store i32 20, i32* %call5, align 4, !dbg !20637, !tbaa !2632, !ctir !7
  store i32 -1, i32* %result, align 4, !dbg !20638, !tbaa !2632
  br label %if.end53, !dbg !20639

if.else:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %indeterminate, metadata !20640, metadata !DIExpression()), !dbg !20642
  store i32 0, i32* %indeterminate, align 4, !dbg !20642, !tbaa !2632
  %6 = load i32, i32* %owner.addr, align 4, !dbg !20643, !tbaa !2632
  %cmp6 = icmp ne i32 %6, -1, !dbg !20645
  br i1 %cmp6, label %land.lhs.true, label %lor.lhs.false, !dbg !20646

land.lhs.true:                                    ; preds = %if.else
  %7 = load i32, i32* %owner.addr, align 4, !dbg !20647, !tbaa !2632
  %st_uid = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 4, !dbg !20648, !ctir !20579
  %8 = load i32, i32* %st_uid, align 4, !dbg !20648, !tbaa !4042, !ctir !128
  %cmp7 = icmp ne i32 %7, %8, !dbg !20649
  br i1 %cmp7, label %if.then11, label %lor.lhs.false, !dbg !20650

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.else
  %9 = load i32, i32* %group.addr, align 4, !dbg !20651, !tbaa !2632
  %cmp8 = icmp ne i32 %9, -1, !dbg !20652
  br i1 %cmp8, label %land.lhs.true9, label %if.end30, !dbg !20653

land.lhs.true9:                                   ; preds = %lor.lhs.false
  %10 = load i32, i32* %group.addr, align 4, !dbg !20654, !tbaa !2632
  %st_gid = getelementptr inbounds %struct.stat, %struct.stat* %st, i32 0, i32 5, !dbg !20655, !ctir !20579
  %11 = load i32, i32* %st_gid, align 8, !dbg !20655, !tbaa !4071, !ctir !130
  %cmp10 = icmp ne i32 %10, %11, !dbg !20656
  br i1 %cmp10, label %if.then11, label %if.end30, !dbg !20657

if.then11:                                        ; preds = %land.lhs.true9, %land.lhs.true
  %12 = load i32, i32* %fd.addr, align 4, !dbg !20658, !tbaa !2632
  %cmp12 = icmp sle i32 0, %12, !dbg !20660
  br i1 %cmp12, label %cond.true13, label %cond.false15, !dbg !20661

cond.true13:                                      ; preds = %if.then11
  %13 = load i32, i32* %fd.addr, align 4, !dbg !20662, !tbaa !2632
  %14 = load i32, i32* %owner.addr, align 4, !dbg !20663, !tbaa !2632
  %15 = load i32, i32* %group.addr, align 4, !dbg !20664, !tbaa !2632
  %call14 = call i32 @fchown(i32 %13, i32 %14, i32 %15) #9, !dbg !20665
  br label %cond.end23, !dbg !20661

cond.false15:                                     ; preds = %if.then11
  %16 = load i32, i32* %mkdir_mode.addr, align 4, !dbg !20666, !tbaa !2632
  %cmp16 = icmp ne i32 %16, -1, !dbg !20667
  br i1 %cmp16, label %cond.true17, label %cond.false19, !dbg !20666

cond.true17:                                      ; preds = %cond.false15
  %17 = load i8*, i8** %dir.addr, align 8, !dbg !20668, !tbaa !2645
  %18 = load i32, i32* %owner.addr, align 4, !dbg !20669, !tbaa !2632
  %19 = load i32, i32* %group.addr, align 4, !dbg !20670, !tbaa !2632
  %call18 = call i32 @lchown(i8* %17, i32 %18, i32 %19) #9, !dbg !20671
  br label %cond.end21, !dbg !20666

cond.false19:                                     ; preds = %cond.false15
  %20 = load i8*, i8** %dir.addr, align 8, !dbg !20672, !tbaa !2645
  %21 = load i32, i32* %owner.addr, align 4, !dbg !20673, !tbaa !2632
  %22 = load i32, i32* %group.addr, align 4, !dbg !20674, !tbaa !2632
  %call20 = call i32 @chown(i8* %20, i32 %21, i32 %22) #9, !dbg !20675
  br label %cond.end21, !dbg !20666

cond.end21:                                       ; preds = %cond.false19, %cond.true17
  %cond22 = phi i32 [ %call18, %cond.true17 ], [ %call20, %cond.false19 ], !dbg !20666
  br label %cond.end23, !dbg !20661

cond.end23:                                       ; preds = %cond.end21, %cond.true13
  %cond24 = phi i32 [ %call14, %cond.true13 ], [ %cond22, %cond.end21 ], !dbg !20661
  store i32 %cond24, i32* %result, align 4, !dbg !20676, !tbaa !2632
  %23 = load i32, i32* %result, align 4, !dbg !20677, !tbaa !2632
  %cmp25 = icmp eq i32 %23, 0, !dbg !20679
  br i1 %cmp25, label %land.lhs.true26, label %if.end, !dbg !20680

land.lhs.true26:                                  ; preds = %cond.end23
  %24 = load i32, i32* %dir_mode, align 4, !dbg !20681, !tbaa !2632
  %and27 = and i32 %24, 73, !dbg !20682
  %tobool = icmp ne i32 %and27, 0, !dbg !20682
  br i1 %tobool, label %if.then28, label %if.end, !dbg !20683

if.then28:                                        ; preds = %land.lhs.true26
  %25 = load i32, i32* %dir_mode, align 4, !dbg !20684, !tbaa !2632
  %and29 = and i32 %25, 3072, !dbg !20685
  store i32 %and29, i32* %indeterminate, align 4, !dbg !20686, !tbaa !2632
  br label %if.end, !dbg !20687

if.end:                                           ; preds = %if.then28, %land.lhs.true26, %cond.end23
  br label %if.end30, !dbg !20688

if.end30:                                         ; preds = %if.end, %land.lhs.true9, %lor.lhs.false
  %26 = load i32, i32* %result, align 4, !dbg !20689, !tbaa !2632
  %cmp31 = icmp eq i32 %26, 0, !dbg !20691
  br i1 %cmp31, label %land.lhs.true32, label %if.end52, !dbg !20692

land.lhs.true32:                                  ; preds = %if.end30
  %27 = load i32, i32* %dir_mode, align 4, !dbg !20693, !tbaa !2632
  %28 = load i32, i32* %mode.addr, align 4, !dbg !20694, !tbaa !2632
  %xor = xor i32 %27, %28, !dbg !20695
  %29 = load i32, i32* %indeterminate, align 4, !dbg !20696, !tbaa !2632
  %or = or i32 %xor, %29, !dbg !20697
  %30 = load i32, i32* %mode_bits.addr, align 4, !dbg !20698, !tbaa !2632
  %and33 = and i32 %or, %30, !dbg !20699
  %tobool34 = icmp ne i32 %and33, 0, !dbg !20699
  br i1 %tobool34, label %if.then35, label %if.end52, !dbg !20700

if.then35:                                        ; preds = %land.lhs.true32
  call void @llvm.dbg.declare(metadata i32* %chmod_mode, metadata !20701, metadata !DIExpression()), !dbg !20703
  %31 = load i32, i32* %mode.addr, align 4, !dbg !20704, !tbaa !2632
  %32 = load i32, i32* %dir_mode, align 4, !dbg !20705, !tbaa !2632
  %and36 = and i32 %32, 4095, !dbg !20706
  %33 = load i32, i32* %mode_bits.addr, align 4, !dbg !20707, !tbaa !2632
  %neg = xor i32 %33, -1, !dbg !20708
  %and37 = and i32 %and36, %neg, !dbg !20709
  %or38 = or i32 %31, %and37, !dbg !20710
  store i32 %or38, i32* %chmod_mode, align 4, !dbg !20703, !tbaa !2632
  %34 = load i32, i32* %fd.addr, align 4, !dbg !20711, !tbaa !2632
  %cmp39 = icmp sle i32 0, %34, !dbg !20712
  br i1 %cmp39, label %cond.true40, label %cond.false42, !dbg !20713

cond.true40:                                      ; preds = %if.then35
  %35 = load i32, i32* %fd.addr, align 4, !dbg !20714, !tbaa !2632
  %36 = load i32, i32* %chmod_mode, align 4, !dbg !20715, !tbaa !2632
  %call41 = call i32 @fchmod(i32 %35, i32 %36) #9, !dbg !20716
  br label %cond.end50, !dbg !20713

cond.false42:                                     ; preds = %if.then35
  %37 = load i32, i32* %mkdir_mode.addr, align 4, !dbg !20717, !tbaa !2632
  %cmp43 = icmp ne i32 %37, -1, !dbg !20718
  br i1 %cmp43, label %cond.true44, label %cond.false46, !dbg !20717

cond.true44:                                      ; preds = %cond.false42
  %38 = load i8*, i8** %dir.addr, align 8, !dbg !20719, !tbaa !2645
  %39 = load i32, i32* %chmod_mode, align 4, !dbg !20720, !tbaa !2632
  %call45 = call i32 @chmod(i8* %38, i32 %39) #9, !dbg !20721
  br label %cond.end48, !dbg !20717

cond.false46:                                     ; preds = %cond.false42
  %40 = load i8*, i8** %dir.addr, align 8, !dbg !20722, !tbaa !2645
  %41 = load i32, i32* %chmod_mode, align 4, !dbg !20723, !tbaa !2632
  %call47 = call i32 @chmod(i8* %40, i32 %41) #9, !dbg !20724
  br label %cond.end48, !dbg !20717

cond.end48:                                       ; preds = %cond.false46, %cond.true44
  %cond49 = phi i32 [ %call45, %cond.true44 ], [ %call47, %cond.false46 ], !dbg !20717
  br label %cond.end50, !dbg !20713

cond.end50:                                       ; preds = %cond.end48, %cond.true40
  %cond51 = phi i32 [ %call41, %cond.true40 ], [ %cond49, %cond.end48 ], !dbg !20713
  store i32 %cond51, i32* %result, align 4, !dbg !20725, !tbaa !2632
  br label %if.end52, !dbg !20726

if.end52:                                         ; preds = %cond.end50, %land.lhs.true32, %if.end30
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.then4
  br label %if.end54, !dbg !20727

if.end54:                                         ; preds = %if.end53, %cond.end
  %42 = load i32, i32* %fd.addr, align 4, !dbg !20728, !tbaa !2632
  %cmp55 = icmp sle i32 0, %42, !dbg !20730
  br i1 %cmp55, label %if.then56, label %if.end65, !dbg !20731

if.then56:                                        ; preds = %if.end54
  %43 = load i32, i32* %result, align 4, !dbg !20732, !tbaa !2632
  %cmp57 = icmp eq i32 %43, 0, !dbg !20735
  br i1 %cmp57, label %if.then58, label %if.else60, !dbg !20736

if.then58:                                        ; preds = %if.then56
  %44 = load i32, i32* %fd.addr, align 4, !dbg !20737, !tbaa !2632
  %call59 = call i32 @close(i32 %44), !dbg !20738
  store i32 %call59, i32* %result, align 4, !dbg !20739, !tbaa !2632
  br label %if.end64, !dbg !20740

if.else60:                                        ; preds = %if.then56
  call void @llvm.dbg.declare(metadata i32* %e, metadata !20741, metadata !DIExpression()), !dbg !20743
  %call61 = call i32* @__errno_location() #16, !dbg !20744
  %45 = load i32, i32* %call61, align 4, !dbg !20744, !tbaa !2632, !ctir !7
  store i32 %45, i32* %e, align 4, !dbg !20743, !tbaa !2632
  %46 = load i32, i32* %fd.addr, align 4, !dbg !20745, !tbaa !2632
  %call62 = call i32 @close(i32 %46), !dbg !20746
  %47 = load i32, i32* %e, align 4, !dbg !20747, !tbaa !2632
  %call63 = call i32* @__errno_location() #16, !dbg !20748
  store i32 %47, i32* %call63, align 4, !dbg !20749, !tbaa !2632, !ctir !7
  br label %if.end64

if.end64:                                         ; preds = %if.else60, %if.then58
  br label %if.end65, !dbg !20750

if.end65:                                         ; preds = %if.end64, %if.end54
  %48 = load i32, i32* %result, align 4, !dbg !20751, !tbaa !2632
  ret i32 %48, !dbg !20752
}

; Function Attrs: nounwind
declare dso_local i32 @chown(i8*, i32, i32) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @openat_safer(i32 %fd, i8* %file, i32 %flags, ...) #4 !dbg !20753 !ctir !2374 {
entry:
  %fd.addr = alloca i32, align 4
  %file.addr = alloca i8*, align 8
  %flags.addr = alloca i32, align 4
  %mode = alloca i32, align 4, !ctir !139
  %ap = alloca [1 x %struct.__va_list_tag], align 16, !ctir !2376
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !20757, metadata !DIExpression()), !dbg !20758
  store i8* %file, i8** %file.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !20759, metadata !DIExpression()), !dbg !20760
  store i32 %flags, i32* %flags.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !20761, metadata !DIExpression()), !dbg !20762
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !20763, metadata !DIExpression()), !dbg !20764
  store i32 0, i32* %mode, align 4, !dbg !20764, !tbaa !2632
  %0 = load i32, i32* %flags.addr, align 4, !dbg !20765, !tbaa !2632
  %and = and i32 %0, 64, !dbg !20767
  %tobool = icmp ne i32 %and, 0, !dbg !20767
  br i1 %tobool, label %if.then, label %if.end, !dbg !20768

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !20769, metadata !DIExpression()), !dbg !20771
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !20772
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !20772
  call void @llvm.va_start(i8* %arraydecay1), !dbg !20772
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !20773
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0, !dbg !20773
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !20773
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !20773
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !20773

vaarg.in_reg:                                     ; preds = %if.then
  %1 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3, !dbg !20773
  %reg_save_area = load i8*, i8** %1, align 16, !dbg !20773
  %2 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !20773
  %3 = bitcast i8* %2 to i32*, !dbg !20773
  %4 = add i32 %gp_offset, 8, !dbg !20773
  store i32 %4, i32* %gp_offset_p, align 16, !dbg !20773
  br label %vaarg.end, !dbg !20773

vaarg.in_mem:                                     ; preds = %if.then
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !20773
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !20773
  %5 = bitcast i8* %overflow_arg_area to i32*, !dbg !20773
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !20773
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !20773
  br label %vaarg.end, !dbg !20773

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %3, %vaarg.in_reg ], [ %5, %vaarg.in_mem ], !dbg !20773
  %6 = load i32, i32* %vaarg.addr, align 4, !dbg !20773
  store i32 %6, i32* %mode, align 4, !dbg !20774, !tbaa !2632
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, !dbg !20775
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !20775
  call void @llvm.va_end(i8* %arraydecay34), !dbg !20775
  br label %if.end, !dbg !20776

if.end:                                           ; preds = %vaarg.end, %entry
  %7 = load i32, i32* %fd.addr, align 4, !dbg !20777, !tbaa !2632
  %8 = load i8*, i8** %file.addr, align 8, !dbg !20778, !tbaa !2645
  %9 = load i32, i32* %flags.addr, align 4, !dbg !20779, !tbaa !2632
  %10 = load i32, i32* %mode, align 4, !dbg !20780, !tbaa !2632
  %call = call i32 (i32, i8*, i32, ...) @openat(i32 %7, i8* %8, i32 %9, i32 %10), !dbg !20781
  %call5 = call i32 @fd_safer(i32 %call), !dbg !20782
  ret i32 %call5, !dbg !20783
}

declare dso_local i32 @openat(i32, i8*, i32, ...) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.randint_source* @randint_new(%struct.randread_source* %source) #4 !dbg !20784 !ctir !2388 {
entry:
  %source.addr = alloca %struct.randread_source*, align 8
  %s = alloca %struct.randint_source*, align 8, !ctir !2390
  store %struct.randread_source* %source, %struct.randread_source** %source.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.randread_source** %source.addr, metadata !20785, metadata !DIExpression()), !dbg !20786
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s, metadata !20787, metadata !DIExpression()), !dbg !20788
  %call = call noalias i8* @xmalloc(i64 24), !dbg !20789
  %0 = bitcast i8* %call to %struct.randint_source*, !dbg !20789
  store %struct.randint_source* %0, %struct.randint_source** %s, align 8, !dbg !20788, !tbaa !2645
  %1 = load %struct.randread_source*, %struct.randread_source** %source.addr, align 8, !dbg !20790, !tbaa !2645
  %2 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !20791, !tbaa !2645
  %source1 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %2, i32 0, i32 0, !dbg !20792, !ctir !2391
  store %struct.randread_source* %1, %struct.randread_source** %source1, align 8, !dbg !20793, !tbaa !20794, !ctir !2395
  %3 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !20796, !tbaa !2645
  %randmax = getelementptr inbounds %struct.randint_source, %struct.randint_source* %3, i32 0, i32 2, !dbg !20797, !ctir !2391
  store i64 0, i64* %randmax, align 8, !dbg !20798, !tbaa !20799, !ctir !2399
  %4 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !20800, !tbaa !2645
  %randnum = getelementptr inbounds %struct.randint_source, %struct.randint_source* %4, i32 0, i32 1, !dbg !20801, !ctir !2391
  store i64 0, i64* %randnum, align 8, !dbg !20802, !tbaa !20803, !ctir !2399
  %5 = load %struct.randint_source*, %struct.randint_source** %s, align 8, !dbg !20804, !tbaa !2645
  ret %struct.randint_source* %5, !dbg !20805
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.randint_source* @randint_all_new(i8* %name, i64 %bytes_bound) #4 !dbg !20806 !ctir !2401 {
entry:
  %name.addr = alloca i8*, align 8
  %bytes_bound.addr = alloca i64, align 8
  %source = alloca %struct.randread_source*, align 8, !ctir !2395
  store i8* %name, i8** %name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !20807, metadata !DIExpression()), !dbg !20808
  store i64 %bytes_bound, i64* %bytes_bound.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %bytes_bound.addr, metadata !20809, metadata !DIExpression()), !dbg !20810
  call void @llvm.dbg.declare(metadata %struct.randread_source** %source, metadata !20811, metadata !DIExpression()), !dbg !20812
  %0 = load i8*, i8** %name.addr, align 8, !dbg !20813, !tbaa !2645
  %1 = load i64, i64* %bytes_bound.addr, align 8, !dbg !20814, !tbaa !3285
  %call = call %struct.randread_source* @randread_new(i8* %0, i64 %1), !dbg !20815
  store %struct.randread_source* %call, %struct.randread_source** %source, align 8, !dbg !20812, !tbaa !2645
  %2 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !20816, !tbaa !2645
  %tobool = icmp ne %struct.randread_source* %2, null, !dbg !20816
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !20816

cond.true:                                        ; preds = %entry
  %3 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !20817, !tbaa !2645
  %call1 = call %struct.randint_source* @randint_new(%struct.randread_source* %3), !dbg !20818
  br label %cond.end, !dbg !20816

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !20816

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.randint_source* [ %call1, %cond.true ], [ null, %cond.false ], !dbg !20816
  ret %struct.randint_source* %cond, !dbg !20819
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local %struct.randread_source* @randint_get_source(%struct.randint_source* %s) #10 !dbg !20820 !ctir !2403 {
entry:
  %s.addr = alloca %struct.randint_source*, align 8
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !20821, metadata !DIExpression()), !dbg !20822
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20823, !tbaa !2645
  %source = getelementptr inbounds %struct.randint_source, %struct.randint_source* %0, i32 0, i32 0, !dbg !20824, !ctir !2406
  %1 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !20824, !tbaa !20794, !ctir !2395
  ret %struct.randread_source* %1, !dbg !20825
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @randint_genmax(%struct.randint_source* %s, i64 %genmax) #4 !dbg !20826 !ctir !2407 {
entry:
  %retval = alloca i64, align 8
  %s.addr = alloca %struct.randint_source*, align 8
  %genmax.addr = alloca i64, align 8
  %source = alloca %struct.randread_source*, align 8, !ctir !2395
  %randnum = alloca i64, align 8, !ctir !2399
  %randmax = alloca i64, align 8, !ctir !2399
  %choices = alloca i64, align 8, !ctir !2399
  %i = alloca i64, align 8, !ctir !55
  %rmax = alloca i64, align 8, !ctir !2399
  %buf = alloca [8 x i8], align 1, !ctir !2409
  %excess_choices = alloca i64, align 8, !ctir !2399
  %unusable_choices = alloca i64, align 8, !ctir !2399
  %last_usable_choice = alloca i64, align 8, !ctir !2399
  %reduced_randnum = alloca i64, align 8, !ctir !2399
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !20827, metadata !DIExpression()), !dbg !20828
  store i64 %genmax, i64* %genmax.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %genmax.addr, metadata !20829, metadata !DIExpression()), !dbg !20830
  call void @llvm.dbg.declare(metadata %struct.randread_source** %source, metadata !20831, metadata !DIExpression()), !dbg !20832
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20833, !tbaa !2645
  %source1 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %0, i32 0, i32 0, !dbg !20834, !ctir !2391
  %1 = load %struct.randread_source*, %struct.randread_source** %source1, align 8, !dbg !20834, !tbaa !20794, !ctir !2395
  store %struct.randread_source* %1, %struct.randread_source** %source, align 8, !dbg !20832, !tbaa !2645
  call void @llvm.dbg.declare(metadata i64* %randnum, metadata !20835, metadata !DIExpression()), !dbg !20836
  %2 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20837, !tbaa !2645
  %randnum2 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %2, i32 0, i32 1, !dbg !20838, !ctir !2391
  %3 = load i64, i64* %randnum2, align 8, !dbg !20838, !tbaa !20803, !ctir !2399
  store i64 %3, i64* %randnum, align 8, !dbg !20836, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %randmax, metadata !20839, metadata !DIExpression()), !dbg !20840
  %4 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20841, !tbaa !2645
  %randmax3 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %4, i32 0, i32 2, !dbg !20842, !ctir !2391
  %5 = load i64, i64* %randmax3, align 8, !dbg !20842, !tbaa !20799, !ctir !2399
  store i64 %5, i64* %randmax, align 8, !dbg !20840, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %choices, metadata !20843, metadata !DIExpression()), !dbg !20844
  %6 = load i64, i64* %genmax.addr, align 8, !dbg !20845, !tbaa !3285
  %add = add i64 %6, 1, !dbg !20846
  store i64 %add, i64* %choices, align 8, !dbg !20844, !tbaa !3285
  br label %while.body, !dbg !20847

while.body:                                       ; preds = %entry, %if.end31
  %7 = load i64, i64* %randmax, align 8, !dbg !20848, !tbaa !3285
  %8 = load i64, i64* %genmax.addr, align 8, !dbg !20851, !tbaa !3285
  %cmp = icmp ult i64 %7, %8, !dbg !20852
  br i1 %cmp, label %if.then, label %if.end, !dbg !20853

if.then:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata i64* %i, metadata !20854, metadata !DIExpression()), !dbg !20856
  store i64 0, i64* %i, align 8, !dbg !20856, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %rmax, metadata !20857, metadata !DIExpression()), !dbg !20858
  %9 = load i64, i64* %randmax, align 8, !dbg !20859, !tbaa !3285
  store i64 %9, i64* %rmax, align 8, !dbg !20858, !tbaa !3285
  call void @llvm.dbg.declare(metadata [8 x i8]* %buf, metadata !20860, metadata !DIExpression()), !dbg !20861
  br label %do.body, !dbg !20862

do.body:                                          ; preds = %do.cond, %if.then
  %10 = load i64, i64* %rmax, align 8, !dbg !20863, !tbaa !3285
  %call = call i64 @shift_left(i64 %10), !dbg !20865
  %add4 = add i64 %call, 255, !dbg !20866
  store i64 %add4, i64* %rmax, align 8, !dbg !20867, !tbaa !3285
  %11 = load i64, i64* %i, align 8, !dbg !20868, !tbaa !3285
  %inc = add i64 %11, 1, !dbg !20868
  store i64 %inc, i64* %i, align 8, !dbg !20868, !tbaa !3285
  br label %do.cond, !dbg !20869

do.cond:                                          ; preds = %do.body
  %12 = load i64, i64* %rmax, align 8, !dbg !20870, !tbaa !3285
  %13 = load i64, i64* %genmax.addr, align 8, !dbg !20871, !tbaa !3285
  %cmp5 = icmp ult i64 %12, %13, !dbg !20872
  br i1 %cmp5, label %do.body, label %do.end, !dbg !20869, !llvm.loop !20873

do.end:                                           ; preds = %do.cond
  %14 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !20875, !tbaa !2645
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %buf, i64 0, i64 0, !dbg !20876
  %15 = load i64, i64* %i, align 8, !dbg !20877, !tbaa !3285
  call void @randread(%struct.randread_source* %14, i8* %arraydecay, i64 %15), !dbg !20878
  store i64 0, i64* %i, align 8, !dbg !20879, !tbaa !3285
  br label %do.body6, !dbg !20880

do.body6:                                         ; preds = %do.cond12, %do.end
  %16 = load i64, i64* %randnum, align 8, !dbg !20881, !tbaa !3285
  %call7 = call i64 @shift_left(i64 %16), !dbg !20883
  %17 = load i64, i64* %i, align 8, !dbg !20884, !tbaa !3285
  %arrayidx = getelementptr inbounds [8 x i8], [8 x i8]* %buf, i64 0, i64 %17, !dbg !20885, !ctir !2409
  %18 = load i8, i8* %arrayidx, align 1, !dbg !20885, !tbaa !3292
  %conv = zext i8 %18 to i64, !dbg !20885
  %add8 = add i64 %call7, %conv, !dbg !20886
  store i64 %add8, i64* %randnum, align 8, !dbg !20887, !tbaa !3285
  %19 = load i64, i64* %randmax, align 8, !dbg !20888, !tbaa !3285
  %call9 = call i64 @shift_left(i64 %19), !dbg !20889
  %add10 = add i64 %call9, 255, !dbg !20890
  store i64 %add10, i64* %randmax, align 8, !dbg !20891, !tbaa !3285
  %20 = load i64, i64* %i, align 8, !dbg !20892, !tbaa !3285
  %inc11 = add i64 %20, 1, !dbg !20892
  store i64 %inc11, i64* %i, align 8, !dbg !20892, !tbaa !3285
  br label %do.cond12, !dbg !20893

do.cond12:                                        ; preds = %do.body6
  %21 = load i64, i64* %randmax, align 8, !dbg !20894, !tbaa !3285
  %22 = load i64, i64* %genmax.addr, align 8, !dbg !20895, !tbaa !3285
  %cmp13 = icmp ult i64 %21, %22, !dbg !20896
  br i1 %cmp13, label %do.body6, label %do.end15, !dbg !20893, !llvm.loop !20897

do.end15:                                         ; preds = %do.cond12
  br label %if.end, !dbg !20899

if.end:                                           ; preds = %do.end15, %while.body
  %23 = load i64, i64* %randmax, align 8, !dbg !20900, !tbaa !3285
  %24 = load i64, i64* %genmax.addr, align 8, !dbg !20902, !tbaa !3285
  %cmp16 = icmp eq i64 %23, %24, !dbg !20903
  br i1 %cmp16, label %if.then18, label %if.else, !dbg !20904

if.then18:                                        ; preds = %if.end
  %25 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20905, !tbaa !2645
  %randmax19 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %25, i32 0, i32 2, !dbg !20907, !ctir !2391
  store i64 0, i64* %randmax19, align 8, !dbg !20908, !tbaa !20799, !ctir !2399
  %26 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20909, !tbaa !2645
  %randnum20 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %26, i32 0, i32 1, !dbg !20910, !ctir !2391
  store i64 0, i64* %randnum20, align 8, !dbg !20911, !tbaa !20803, !ctir !2399
  %27 = load i64, i64* %randnum, align 8, !dbg !20912, !tbaa !3285
  store i64 %27, i64* %retval, align 8, !dbg !20913
  br label %return, !dbg !20913

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %excess_choices, metadata !20914, metadata !DIExpression()), !dbg !20916
  %28 = load i64, i64* %randmax, align 8, !dbg !20917, !tbaa !3285
  %29 = load i64, i64* %genmax.addr, align 8, !dbg !20918, !tbaa !3285
  %sub = sub i64 %28, %29, !dbg !20919
  store i64 %sub, i64* %excess_choices, align 8, !dbg !20916, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %unusable_choices, metadata !20920, metadata !DIExpression()), !dbg !20921
  %30 = load i64, i64* %excess_choices, align 8, !dbg !20922, !tbaa !3285
  %31 = load i64, i64* %choices, align 8, !dbg !20923, !tbaa !3285
  %rem = urem i64 %30, %31, !dbg !20924
  store i64 %rem, i64* %unusable_choices, align 8, !dbg !20921, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %last_usable_choice, metadata !20925, metadata !DIExpression()), !dbg !20926
  %32 = load i64, i64* %randmax, align 8, !dbg !20927, !tbaa !3285
  %33 = load i64, i64* %unusable_choices, align 8, !dbg !20928, !tbaa !3285
  %sub21 = sub i64 %32, %33, !dbg !20929
  store i64 %sub21, i64* %last_usable_choice, align 8, !dbg !20926, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %reduced_randnum, metadata !20930, metadata !DIExpression()), !dbg !20931
  %34 = load i64, i64* %randnum, align 8, !dbg !20932, !tbaa !3285
  %35 = load i64, i64* %choices, align 8, !dbg !20933, !tbaa !3285
  %rem22 = urem i64 %34, %35, !dbg !20934
  store i64 %rem22, i64* %reduced_randnum, align 8, !dbg !20931, !tbaa !3285
  %36 = load i64, i64* %randnum, align 8, !dbg !20935, !tbaa !3285
  %37 = load i64, i64* %last_usable_choice, align 8, !dbg !20937, !tbaa !3285
  %cmp23 = icmp ule i64 %36, %37, !dbg !20938
  br i1 %cmp23, label %if.then25, label %if.end29, !dbg !20939

if.then25:                                        ; preds = %if.else
  %38 = load i64, i64* %randnum, align 8, !dbg !20940, !tbaa !3285
  %39 = load i64, i64* %choices, align 8, !dbg !20942, !tbaa !3285
  %div = udiv i64 %38, %39, !dbg !20943
  %40 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20944, !tbaa !2645
  %randnum26 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %40, i32 0, i32 1, !dbg !20945, !ctir !2391
  store i64 %div, i64* %randnum26, align 8, !dbg !20946, !tbaa !20803, !ctir !2399
  %41 = load i64, i64* %excess_choices, align 8, !dbg !20947, !tbaa !3285
  %42 = load i64, i64* %choices, align 8, !dbg !20948, !tbaa !3285
  %div27 = udiv i64 %41, %42, !dbg !20949
  %43 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20950, !tbaa !2645
  %randmax28 = getelementptr inbounds %struct.randint_source, %struct.randint_source* %43, i32 0, i32 2, !dbg !20951, !ctir !2391
  store i64 %div27, i64* %randmax28, align 8, !dbg !20952, !tbaa !20799, !ctir !2399
  %44 = load i64, i64* %reduced_randnum, align 8, !dbg !20953, !tbaa !3285
  store i64 %44, i64* %retval, align 8, !dbg !20954
  br label %return, !dbg !20954

if.end29:                                         ; preds = %if.else
  %45 = load i64, i64* %reduced_randnum, align 8, !dbg !20955, !tbaa !3285
  store i64 %45, i64* %randnum, align 8, !dbg !20956, !tbaa !3285
  %46 = load i64, i64* %unusable_choices, align 8, !dbg !20957, !tbaa !3285
  %sub30 = sub i64 %46, 1, !dbg !20958
  store i64 %sub30, i64* %randmax, align 8, !dbg !20959, !tbaa !3285
  br label %if.end31

if.end31:                                         ; preds = %if.end29
  br label %while.body, !dbg !20847, !llvm.loop !20960

return:                                           ; preds = %if.then25, %if.then18
  %47 = load i64, i64* %retval, align 8, !dbg !20962
  ret i64 %47, !dbg !20962
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @shift_left(i64 %x) #4 !dbg !20963 !ctir !2414 {
entry:
  %x.addr = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !20964, metadata !DIExpression()), !dbg !20965
  %0 = load i64, i64* %x.addr, align 8, !dbg !20966, !tbaa !3285
  %shl = shl i64 %0, 8, !dbg !20967
  ret i64 %shl, !dbg !20968
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randint_free(%struct.randint_source* %s) #4 !dbg !20969 !ctir !2410 {
entry:
  %s.addr = alloca %struct.randint_source*, align 8
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !20970, metadata !DIExpression()), !dbg !20971
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20972, !tbaa !2645
  %1 = bitcast %struct.randint_source* %0 to i8*, !dbg !20972
  call void @explicit_bzero(i8* %1, i64 24) #9, !dbg !20973
  %2 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20974, !tbaa !2645
  %3 = bitcast %struct.randint_source* %2 to i8*, !dbg !20974
  call void @free(i8* %3) #9, !dbg !20975
  ret void, !dbg !20976
}

; Function Attrs: nounwind
declare dso_local void @explicit_bzero(i8*, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @randint_all_free(%struct.randint_source* %s) #4 !dbg !20977 !ctir !2412 {
entry:
  %s.addr = alloca %struct.randint_source*, align 8
  %r = alloca i32, align 4, !ctir !7
  %e = alloca i32, align 4, !ctir !7
  store %struct.randint_source* %s, %struct.randint_source** %s.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.randint_source** %s.addr, metadata !20978, metadata !DIExpression()), !dbg !20979
  call void @llvm.dbg.declare(metadata i32* %r, metadata !20980, metadata !DIExpression()), !dbg !20981
  %0 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20982, !tbaa !2645
  %source = getelementptr inbounds %struct.randint_source, %struct.randint_source* %0, i32 0, i32 0, !dbg !20983, !ctir !2391
  %1 = load %struct.randread_source*, %struct.randread_source** %source, align 8, !dbg !20983, !tbaa !20794, !ctir !2395
  %call = call i32 @randread_free(%struct.randread_source* %1), !dbg !20984
  store i32 %call, i32* %r, align 4, !dbg !20981, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %e, metadata !20985, metadata !DIExpression()), !dbg !20986
  %call1 = call i32* @__errno_location() #16, !dbg !20987
  %2 = load i32, i32* %call1, align 4, !dbg !20987, !tbaa !2632, !ctir !7
  store i32 %2, i32* %e, align 4, !dbg !20986, !tbaa !2632
  %3 = load %struct.randint_source*, %struct.randint_source** %s.addr, align 8, !dbg !20988, !tbaa !2645
  call void @randint_free(%struct.randint_source* %3), !dbg !20989
  %4 = load i32, i32* %e, align 4, !dbg !20990, !tbaa !2632
  %call2 = call i32* @__errno_location() #16, !dbg !20991
  store i32 %4, i32* %call2, align 4, !dbg !20992, !tbaa !2632, !ctir !7
  %5 = load i32, i32* %r, align 4, !dbg !20993, !tbaa !2632
  ret i32 %5, !dbg !20994
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.randread_source* @randread_new(i8* %name, i64 %bytes_bound) #4 !dbg !20995 !ctir !2419 {
entry:
  %retval = alloca %struct.randread_source*, align 8
  %name.addr = alloca i8*, align 8
  %bytes_bound.addr = alloca i64, align 8
  %source = alloca %struct._IO_FILE*, align 8, !ctir !2426
  %s = alloca %struct.randread_source*, align 8, !ctir !2421
  store i8* %name, i8** %name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !20996, metadata !DIExpression()), !dbg !20997
  store i64 %bytes_bound, i64* %bytes_bound.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %bytes_bound.addr, metadata !20998, metadata !DIExpression()), !dbg !20999
  %0 = load i64, i64* %bytes_bound.addr, align 8, !dbg !21000, !tbaa !3285
  %cmp = icmp eq i64 %0, 0, !dbg !21002
  br i1 %cmp, label %if.then, label %if.else, !dbg !21003

if.then:                                          ; preds = %entry
  %call = call %struct.randread_source* @simple_new(%struct._IO_FILE* null, i8* null), !dbg !21004
  store %struct.randread_source* %call, %struct.randread_source** %retval, align 8, !dbg !21005
  br label %return, !dbg !21005

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %source, metadata !21006, metadata !DIExpression()), !dbg !21008
  store %struct._IO_FILE* null, %struct._IO_FILE** %source, align 8, !dbg !21008, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s, metadata !21009, metadata !DIExpression()), !dbg !21010
  %1 = load i8*, i8** %name.addr, align 8, !dbg !21011, !tbaa !2645
  %tobool = icmp ne i8* %1, null, !dbg !21011
  br i1 %tobool, label %if.then1, label %if.end5, !dbg !21013

if.then1:                                         ; preds = %if.else
  %2 = load i8*, i8** %name.addr, align 8, !dbg !21014, !tbaa !2645
  %call2 = call %struct._IO_FILE* @fopen_safer(i8* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.524, i64 0, i64 0)), !dbg !21016
  store %struct._IO_FILE* %call2, %struct._IO_FILE** %source, align 8, !dbg !21017, !tbaa !2645
  %tobool3 = icmp ne %struct._IO_FILE* %call2, null, !dbg !21017
  br i1 %tobool3, label %if.end, label %if.then4, !dbg !21018

if.then4:                                         ; preds = %if.then1
  store %struct.randread_source* null, %struct.randread_source** %retval, align 8, !dbg !21019
  br label %return, !dbg !21019

if.end:                                           ; preds = %if.then1
  br label %if.end5, !dbg !21020

if.end5:                                          ; preds = %if.end, %if.else
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !21021, !tbaa !2645
  %4 = load i8*, i8** %name.addr, align 8, !dbg !21022, !tbaa !2645
  %call6 = call %struct.randread_source* @simple_new(%struct._IO_FILE* %3, i8* %4), !dbg !21023
  store %struct.randread_source* %call6, %struct.randread_source** %s, align 8, !dbg !21024, !tbaa !2645
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !21025, !tbaa !2645
  %tobool7 = icmp ne %struct._IO_FILE* %5, null, !dbg !21025
  br i1 %tobool7, label %if.then8, label %if.else11, !dbg !21027

if.then8:                                         ; preds = %if.end5
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !21028, !tbaa !2645
  %7 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !21029, !tbaa !2645
  %buf = getelementptr inbounds %struct.randread_source, %struct.randread_source* %7, i32 0, i32 3, !dbg !21030, !ctir !2422
  %c = bitcast %union.anon.128* %buf to [4096 x i8]*, !dbg !21031
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %c, i64 0, i64 0, !dbg !21029
  %8 = load i64, i64* %bytes_bound.addr, align 8, !dbg !21032, !tbaa !3285
  %cmp9 = icmp ult i64 4096, %8, !dbg !21032
  br i1 %cmp9, label %cond.true, label %cond.false, !dbg !21032

cond.true:                                        ; preds = %if.then8
  br label %cond.end, !dbg !21032

cond.false:                                       ; preds = %if.then8
  %9 = load i64, i64* %bytes_bound.addr, align 8, !dbg !21032, !tbaa !3285
  br label %cond.end, !dbg !21032

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ 4096, %cond.true ], [ %9, %cond.false ], !dbg !21032
  %call10 = call i32 @setvbuf(%struct._IO_FILE* %6, i8* %arraydecay, i32 0, i64 %cond) #9, !dbg !21033
  br label %if.end19, !dbg !21033

if.else11:                                        ; preds = %if.end5
  %10 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !21034, !tbaa !2645
  %buf12 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %10, i32 0, i32 3, !dbg !21036, !ctir !2422
  %isaac = bitcast %union.anon.128* %buf12 to %struct.isaac*, !dbg !21037
  %buffered = getelementptr inbounds %struct.isaac, %struct.isaac* %isaac, i32 0, i32 0, !dbg !21038, !ctir !2470
  store i64 0, i64* %buffered, align 8, !dbg !21039, !tbaa !3292, !ctir !55
  %11 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !21040, !tbaa !2645
  %buf13 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %11, i32 0, i32 3, !dbg !21041, !ctir !2422
  %isaac14 = bitcast %union.anon.128* %buf13 to %struct.isaac*, !dbg !21042
  %state = getelementptr inbounds %struct.isaac, %struct.isaac* %isaac14, i32 0, i32 1, !dbg !21043, !ctir !2470
  %m = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %state, i32 0, i32 0, !dbg !21044, !ctir !2474
  %arraydecay15 = getelementptr inbounds [256 x i64], [256 x i64]* %m, i64 0, i64 0, !dbg !21040
  %12 = bitcast i64* %arraydecay15 to i8*, !dbg !21040
  %13 = load i64, i64* %bytes_bound.addr, align 8, !dbg !21045, !tbaa !3285
  call void @get_nonce(i8* %12, i64 2048, i64 %13), !dbg !21046
  %14 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !21047, !tbaa !2645
  %buf16 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %14, i32 0, i32 3, !dbg !21048, !ctir !2422
  %isaac17 = bitcast %union.anon.128* %buf16 to %struct.isaac*, !dbg !21049
  %state18 = getelementptr inbounds %struct.isaac, %struct.isaac* %isaac17, i32 0, i32 1, !dbg !21050, !ctir !2470
  call void @isaac_seed(%struct.isaac_state* %state18), !dbg !21051
  br label %if.end19

if.end19:                                         ; preds = %if.else11, %cond.end
  %15 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !21052, !tbaa !2645
  store %struct.randread_source* %15, %struct.randread_source** %retval, align 8, !dbg !21053
  br label %return, !dbg !21053

return:                                           ; preds = %if.end19, %if.then4, %if.then
  %16 = load %struct.randread_source*, %struct.randread_source** %retval, align 8, !dbg !21054
  ret %struct.randread_source* %16, !dbg !21054
}

; Function Attrs: noinline nounwind optnone uwtable
define internal %struct.randread_source* @simple_new(%struct._IO_FILE* %source, i8* %handler_arg) #4 !dbg !21055 !ctir !2501 {
entry:
  %source.addr = alloca %struct._IO_FILE*, align 8
  %handler_arg.addr = alloca i8*, align 8
  %s = alloca %struct.randread_source*, align 8, !ctir !2421
  store %struct._IO_FILE* %source, %struct._IO_FILE** %source.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %source.addr, metadata !21056, metadata !DIExpression()), !dbg !21057
  store i8* %handler_arg, i8** %handler_arg.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %handler_arg.addr, metadata !21058, metadata !DIExpression()), !dbg !21059
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s, metadata !21060, metadata !DIExpression()), !dbg !21061
  %call = call noalias i8* @xmalloc(i64 4152), !dbg !21062
  %0 = bitcast i8* %call to %struct.randread_source*, !dbg !21062
  store %struct.randread_source* %0, %struct.randread_source** %s, align 8, !dbg !21061, !tbaa !2645
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %source.addr, align 8, !dbg !21063, !tbaa !2645
  %2 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !21064, !tbaa !2645
  %source1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %2, i32 0, i32 0, !dbg !21065, !ctir !2422
  store %struct._IO_FILE* %1, %struct._IO_FILE** %source1, align 8, !dbg !21066, !tbaa !21067, !ctir !2426
  %3 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !21069, !tbaa !2645
  %handler = getelementptr inbounds %struct.randread_source, %struct.randread_source* %3, i32 0, i32 1, !dbg !21070, !ctir !2422
  store void (i8*)* @randread_error, void (i8*)** %handler, align 8, !dbg !21071, !tbaa !21072, !ctir !2461
  %4 = load i8*, i8** %handler_arg.addr, align 8, !dbg !21073, !tbaa !2645
  %5 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !21074, !tbaa !2645
  %handler_arg2 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %5, i32 0, i32 2, !dbg !21075, !ctir !2422
  store i8* %4, i8** %handler_arg2, align 8, !dbg !21076, !tbaa !21077, !ctir !513
  %6 = load %struct.randread_source*, %struct.randread_source** %s, align 8, !dbg !21078, !tbaa !2645
  ret %struct.randread_source* %6, !dbg !21079
}

; Function Attrs: nounwind
declare dso_local i32 @setvbuf(%struct._IO_FILE*, i8*, i32, i64) #2

; Function Attrs: noinline nounwind optnone uwtable
define internal void @get_nonce(i8* %buffer, i64 %bufsize, i64 %bytes_bound) #4 !dbg !21080 !ctir !2503 {
entry:
  %buffer.addr = alloca i8*, align 8
  %bufsize.addr = alloca i64, align 8
  %bytes_bound.addr = alloca i64, align 8
  %buf = alloca i8*, align 8, !ctir !9
  %seeded = alloca i64, align 8, !ctir !692
  %fd = alloca i32, align 4, !ctir !7
  %v = alloca %struct.timespec, align 8, !ctir !21081
  %nbytes = alloca i64, align 8, !ctir !55
  %v19 = alloca i32, align 4, !ctir !111
  %nbytes20 = alloca i64, align 8, !ctir !55
  %v34 = alloca i32, align 4, !ctir !111
  %nbytes35 = alloca i64, align 8, !ctir !55
  %v49 = alloca i32, align 4, !ctir !127
  %nbytes50 = alloca i64, align 8, !ctir !55
  %v64 = alloca i32, align 4, !ctir !127
  %nbytes65 = alloca i64, align 8, !ctir !55
  store i8* %buffer, i8** %buffer.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !21085, metadata !DIExpression()), !dbg !21086
  store i64 %bufsize, i64* %bufsize.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %bufsize.addr, metadata !21087, metadata !DIExpression()), !dbg !21088
  store i64 %bytes_bound, i64* %bytes_bound.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %bytes_bound.addr, metadata !21089, metadata !DIExpression()), !dbg !21090
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !21091, metadata !DIExpression()), !dbg !21092
  %0 = load i8*, i8** %buffer.addr, align 8, !dbg !21093, !tbaa !2645
  store i8* %0, i8** %buf, align 8, !dbg !21092, !tbaa !2645
  call void @llvm.dbg.declare(metadata i64* %seeded, metadata !21094, metadata !DIExpression()), !dbg !21095
  store i64 0, i64* %seeded, align 8, !dbg !21095, !tbaa !3285
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !21096, metadata !DIExpression()), !dbg !21097
  %call = call i32 (i8*, i32, ...) @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.525, i64 0, i64 0), i32 0), !dbg !21098
  store i32 %call, i32* %fd, align 4, !dbg !21097, !tbaa !2632
  %1 = load i32, i32* %fd, align 4, !dbg !21099, !tbaa !2632
  %cmp = icmp sle i32 0, %1, !dbg !21101
  br i1 %cmp, label %if.then, label %if.end6, !dbg !21102

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %fd, align 4, !dbg !21103, !tbaa !2632
  %3 = load i8*, i8** %buf, align 8, !dbg !21105, !tbaa !2645
  %4 = load i64, i64* %bufsize.addr, align 8, !dbg !21106, !tbaa !3285
  %5 = load i64, i64* %bytes_bound.addr, align 8, !dbg !21106, !tbaa !3285
  %cmp1 = icmp ult i64 %4, %5, !dbg !21106
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !21106

cond.true:                                        ; preds = %if.then
  %6 = load i64, i64* %bufsize.addr, align 8, !dbg !21106, !tbaa !3285
  br label %cond.end, !dbg !21106

cond.false:                                       ; preds = %if.then
  %7 = load i64, i64* %bytes_bound.addr, align 8, !dbg !21106, !tbaa !3285
  br label %cond.end, !dbg !21106

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %6, %cond.true ], [ %7, %cond.false ], !dbg !21106
  %call2 = call i64 @read(i32 %2, i8* %3, i64 %cond), !dbg !21107
  store i64 %call2, i64* %seeded, align 8, !dbg !21108, !tbaa !3285
  %8 = load i64, i64* %seeded, align 8, !dbg !21109, !tbaa !3285
  %cmp3 = icmp slt i64 %8, 0, !dbg !21111
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !21112

if.then4:                                         ; preds = %cond.end
  store i64 0, i64* %seeded, align 8, !dbg !21113, !tbaa !3285
  br label %if.end, !dbg !21114

if.end:                                           ; preds = %if.then4, %cond.end
  %9 = load i32, i32* %fd, align 4, !dbg !21115, !tbaa !2632
  %call5 = call i32 @close(i32 %9), !dbg !21116
  br label %if.end6, !dbg !21117

if.end6:                                          ; preds = %if.end, %entry
  %10 = load i64, i64* %seeded, align 8, !dbg !21118, !tbaa !3285
  %11 = load i64, i64* %bufsize.addr, align 8, !dbg !21118, !tbaa !3285
  %cmp7 = icmp ult i64 %10, %11, !dbg !21118
  br i1 %cmp7, label %if.then8, label %if.end16, !dbg !21120

if.then8:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata %struct.timespec* %v, metadata !21121, metadata !DIExpression()), !dbg !21123
  call void @llvm.dbg.declare(metadata i64* %nbytes, metadata !21124, metadata !DIExpression()), !dbg !21123
  %12 = load i64, i64* %bufsize.addr, align 8, !dbg !21123, !tbaa !3285
  %13 = load i64, i64* %seeded, align 8, !dbg !21123, !tbaa !3285
  %sub = sub i64 %12, %13, !dbg !21123
  %cmp9 = icmp ult i64 16, %sub, !dbg !21123
  br i1 %cmp9, label %cond.true10, label %cond.false11, !dbg !21123

cond.true10:                                      ; preds = %if.then8
  br label %cond.end13, !dbg !21123

cond.false11:                                     ; preds = %if.then8
  %14 = load i64, i64* %bufsize.addr, align 8, !dbg !21123, !tbaa !3285
  %15 = load i64, i64* %seeded, align 8, !dbg !21123, !tbaa !3285
  %sub12 = sub i64 %14, %15, !dbg !21123
  br label %cond.end13, !dbg !21123

cond.end13:                                       ; preds = %cond.false11, %cond.true10
  %cond14 = phi i64 [ 16, %cond.true10 ], [ %sub12, %cond.false11 ], !dbg !21123
  store i64 %cond14, i64* %nbytes, align 8, !dbg !21123, !tbaa !3285
  %call15 = call i32 @gettimeofday(%struct.timespec* %v, %struct.timezone* null) #9, !dbg !21123
  %16 = load i8*, i8** %buf, align 8, !dbg !21123, !tbaa !2645
  %17 = load i64, i64* %seeded, align 8, !dbg !21123, !tbaa !3285
  %add.ptr = getelementptr inbounds i8, i8* %16, i64 %17, !dbg !21123
  %18 = bitcast %struct.timespec* %v to i8*, !dbg !21123
  %19 = load i64, i64* %nbytes, align 8, !dbg !21123, !tbaa !3285
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr, i8* align 8 %18, i64 %19, i1 false), !dbg !21123
  %20 = load i64, i64* %nbytes, align 8, !dbg !21123, !tbaa !3285
  %21 = load i64, i64* %seeded, align 8, !dbg !21123, !tbaa !3285
  %add = add i64 %21, %20, !dbg !21123
  store i64 %add, i64* %seeded, align 8, !dbg !21123, !tbaa !3285
  br label %if.end16, !dbg !21123

if.end16:                                         ; preds = %cond.end13, %if.end6
  %22 = load i64, i64* %seeded, align 8, !dbg !21125, !tbaa !3285
  %23 = load i64, i64* %bufsize.addr, align 8, !dbg !21125, !tbaa !3285
  %cmp17 = icmp ult i64 %22, %23, !dbg !21125
  br i1 %cmp17, label %if.then18, label %if.end31, !dbg !21127

if.then18:                                        ; preds = %if.end16
  call void @llvm.dbg.declare(metadata i32* %v19, metadata !21128, metadata !DIExpression()), !dbg !21130
  call void @llvm.dbg.declare(metadata i64* %nbytes20, metadata !21131, metadata !DIExpression()), !dbg !21130
  %24 = load i64, i64* %bufsize.addr, align 8, !dbg !21130, !tbaa !3285
  %25 = load i64, i64* %seeded, align 8, !dbg !21130, !tbaa !3285
  %sub21 = sub i64 %24, %25, !dbg !21130
  %cmp22 = icmp ult i64 4, %sub21, !dbg !21130
  br i1 %cmp22, label %cond.true23, label %cond.false24, !dbg !21130

cond.true23:                                      ; preds = %if.then18
  br label %cond.end26, !dbg !21130

cond.false24:                                     ; preds = %if.then18
  %26 = load i64, i64* %bufsize.addr, align 8, !dbg !21130, !tbaa !3285
  %27 = load i64, i64* %seeded, align 8, !dbg !21130, !tbaa !3285
  %sub25 = sub i64 %26, %27, !dbg !21130
  br label %cond.end26, !dbg !21130

cond.end26:                                       ; preds = %cond.false24, %cond.true23
  %cond27 = phi i64 [ 4, %cond.true23 ], [ %sub25, %cond.false24 ], !dbg !21130
  store i64 %cond27, i64* %nbytes20, align 8, !dbg !21130, !tbaa !3285
  %call28 = call i32 @getpid() #9, !dbg !21130
  store i32 %call28, i32* %v19, align 4, !dbg !21130, !tbaa !2632
  %28 = load i8*, i8** %buf, align 8, !dbg !21130, !tbaa !2645
  %29 = load i64, i64* %seeded, align 8, !dbg !21130, !tbaa !3285
  %add.ptr29 = getelementptr inbounds i8, i8* %28, i64 %29, !dbg !21130
  %30 = bitcast i32* %v19 to i8*, !dbg !21130
  %31 = load i64, i64* %nbytes20, align 8, !dbg !21130, !tbaa !3285
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr29, i8* align 4 %30, i64 %31, i1 false), !dbg !21130
  %32 = load i64, i64* %nbytes20, align 8, !dbg !21130, !tbaa !3285
  %33 = load i64, i64* %seeded, align 8, !dbg !21130, !tbaa !3285
  %add30 = add i64 %33, %32, !dbg !21130
  store i64 %add30, i64* %seeded, align 8, !dbg !21130, !tbaa !3285
  br label %if.end31, !dbg !21130

if.end31:                                         ; preds = %cond.end26, %if.end16
  %34 = load i64, i64* %seeded, align 8, !dbg !21132, !tbaa !3285
  %35 = load i64, i64* %bufsize.addr, align 8, !dbg !21132, !tbaa !3285
  %cmp32 = icmp ult i64 %34, %35, !dbg !21132
  br i1 %cmp32, label %if.then33, label %if.end46, !dbg !21134

if.then33:                                        ; preds = %if.end31
  call void @llvm.dbg.declare(metadata i32* %v34, metadata !21135, metadata !DIExpression()), !dbg !21137
  call void @llvm.dbg.declare(metadata i64* %nbytes35, metadata !21138, metadata !DIExpression()), !dbg !21137
  %36 = load i64, i64* %bufsize.addr, align 8, !dbg !21137, !tbaa !3285
  %37 = load i64, i64* %seeded, align 8, !dbg !21137, !tbaa !3285
  %sub36 = sub i64 %36, %37, !dbg !21137
  %cmp37 = icmp ult i64 4, %sub36, !dbg !21137
  br i1 %cmp37, label %cond.true38, label %cond.false39, !dbg !21137

cond.true38:                                      ; preds = %if.then33
  br label %cond.end41, !dbg !21137

cond.false39:                                     ; preds = %if.then33
  %38 = load i64, i64* %bufsize.addr, align 8, !dbg !21137, !tbaa !3285
  %39 = load i64, i64* %seeded, align 8, !dbg !21137, !tbaa !3285
  %sub40 = sub i64 %38, %39, !dbg !21137
  br label %cond.end41, !dbg !21137

cond.end41:                                       ; preds = %cond.false39, %cond.true38
  %cond42 = phi i64 [ 4, %cond.true38 ], [ %sub40, %cond.false39 ], !dbg !21137
  store i64 %cond42, i64* %nbytes35, align 8, !dbg !21137, !tbaa !3285
  %call43 = call i32 @getppid() #9, !dbg !21137
  store i32 %call43, i32* %v34, align 4, !dbg !21137, !tbaa !2632
  %40 = load i8*, i8** %buf, align 8, !dbg !21137, !tbaa !2645
  %41 = load i64, i64* %seeded, align 8, !dbg !21137, !tbaa !3285
  %add.ptr44 = getelementptr inbounds i8, i8* %40, i64 %41, !dbg !21137
  %42 = bitcast i32* %v34 to i8*, !dbg !21137
  %43 = load i64, i64* %nbytes35, align 8, !dbg !21137, !tbaa !3285
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr44, i8* align 4 %42, i64 %43, i1 false), !dbg !21137
  %44 = load i64, i64* %nbytes35, align 8, !dbg !21137, !tbaa !3285
  %45 = load i64, i64* %seeded, align 8, !dbg !21137, !tbaa !3285
  %add45 = add i64 %45, %44, !dbg !21137
  store i64 %add45, i64* %seeded, align 8, !dbg !21137, !tbaa !3285
  br label %if.end46, !dbg !21137

if.end46:                                         ; preds = %cond.end41, %if.end31
  %46 = load i64, i64* %seeded, align 8, !dbg !21139, !tbaa !3285
  %47 = load i64, i64* %bufsize.addr, align 8, !dbg !21139, !tbaa !3285
  %cmp47 = icmp ult i64 %46, %47, !dbg !21139
  br i1 %cmp47, label %if.then48, label %if.end61, !dbg !21141

if.then48:                                        ; preds = %if.end46
  call void @llvm.dbg.declare(metadata i32* %v49, metadata !21142, metadata !DIExpression()), !dbg !21144
  call void @llvm.dbg.declare(metadata i64* %nbytes50, metadata !21145, metadata !DIExpression()), !dbg !21144
  %48 = load i64, i64* %bufsize.addr, align 8, !dbg !21144, !tbaa !3285
  %49 = load i64, i64* %seeded, align 8, !dbg !21144, !tbaa !3285
  %sub51 = sub i64 %48, %49, !dbg !21144
  %cmp52 = icmp ult i64 4, %sub51, !dbg !21144
  br i1 %cmp52, label %cond.true53, label %cond.false54, !dbg !21144

cond.true53:                                      ; preds = %if.then48
  br label %cond.end56, !dbg !21144

cond.false54:                                     ; preds = %if.then48
  %50 = load i64, i64* %bufsize.addr, align 8, !dbg !21144, !tbaa !3285
  %51 = load i64, i64* %seeded, align 8, !dbg !21144, !tbaa !3285
  %sub55 = sub i64 %50, %51, !dbg !21144
  br label %cond.end56, !dbg !21144

cond.end56:                                       ; preds = %cond.false54, %cond.true53
  %cond57 = phi i64 [ 4, %cond.true53 ], [ %sub55, %cond.false54 ], !dbg !21144
  store i64 %cond57, i64* %nbytes50, align 8, !dbg !21144, !tbaa !3285
  %call58 = call i32 @getuid() #9, !dbg !21144
  store i32 %call58, i32* %v49, align 4, !dbg !21144, !tbaa !2632
  %52 = load i8*, i8** %buf, align 8, !dbg !21144, !tbaa !2645
  %53 = load i64, i64* %seeded, align 8, !dbg !21144, !tbaa !3285
  %add.ptr59 = getelementptr inbounds i8, i8* %52, i64 %53, !dbg !21144
  %54 = bitcast i32* %v49 to i8*, !dbg !21144
  %55 = load i64, i64* %nbytes50, align 8, !dbg !21144, !tbaa !3285
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr59, i8* align 4 %54, i64 %55, i1 false), !dbg !21144
  %56 = load i64, i64* %nbytes50, align 8, !dbg !21144, !tbaa !3285
  %57 = load i64, i64* %seeded, align 8, !dbg !21144, !tbaa !3285
  %add60 = add i64 %57, %56, !dbg !21144
  store i64 %add60, i64* %seeded, align 8, !dbg !21144, !tbaa !3285
  br label %if.end61, !dbg !21144

if.end61:                                         ; preds = %cond.end56, %if.end46
  %58 = load i64, i64* %seeded, align 8, !dbg !21146, !tbaa !3285
  %59 = load i64, i64* %bufsize.addr, align 8, !dbg !21146, !tbaa !3285
  %cmp62 = icmp ult i64 %58, %59, !dbg !21146
  br i1 %cmp62, label %if.then63, label %if.end76, !dbg !21148

if.then63:                                        ; preds = %if.end61
  call void @llvm.dbg.declare(metadata i32* %v64, metadata !21149, metadata !DIExpression()), !dbg !21151
  call void @llvm.dbg.declare(metadata i64* %nbytes65, metadata !21152, metadata !DIExpression()), !dbg !21151
  %60 = load i64, i64* %bufsize.addr, align 8, !dbg !21151, !tbaa !3285
  %61 = load i64, i64* %seeded, align 8, !dbg !21151, !tbaa !3285
  %sub66 = sub i64 %60, %61, !dbg !21151
  %cmp67 = icmp ult i64 4, %sub66, !dbg !21151
  br i1 %cmp67, label %cond.true68, label %cond.false69, !dbg !21151

cond.true68:                                      ; preds = %if.then63
  br label %cond.end71, !dbg !21151

cond.false69:                                     ; preds = %if.then63
  %62 = load i64, i64* %bufsize.addr, align 8, !dbg !21151, !tbaa !3285
  %63 = load i64, i64* %seeded, align 8, !dbg !21151, !tbaa !3285
  %sub70 = sub i64 %62, %63, !dbg !21151
  br label %cond.end71, !dbg !21151

cond.end71:                                       ; preds = %cond.false69, %cond.true68
  %cond72 = phi i64 [ 4, %cond.true68 ], [ %sub70, %cond.false69 ], !dbg !21151
  store i64 %cond72, i64* %nbytes65, align 8, !dbg !21151, !tbaa !3285
  %call73 = call i32 @getgid() #9, !dbg !21151
  store i32 %call73, i32* %v64, align 4, !dbg !21151, !tbaa !2632
  %64 = load i8*, i8** %buf, align 8, !dbg !21151, !tbaa !2645
  %65 = load i64, i64* %seeded, align 8, !dbg !21151, !tbaa !3285
  %add.ptr74 = getelementptr inbounds i8, i8* %64, i64 %65, !dbg !21151
  %66 = bitcast i32* %v64 to i8*, !dbg !21151
  %67 = load i64, i64* %nbytes65, align 8, !dbg !21151, !tbaa !3285
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr74, i8* align 4 %66, i64 %67, i1 false), !dbg !21151
  %68 = load i64, i64* %nbytes65, align 8, !dbg !21151, !tbaa !3285
  %69 = load i64, i64* %seeded, align 8, !dbg !21151, !tbaa !3285
  %add75 = add i64 %69, %68, !dbg !21151
  store i64 %add75, i64* %seeded, align 8, !dbg !21151, !tbaa !3285
  br label %if.end76, !dbg !21151

if.end76:                                         ; preds = %cond.end71, %if.end61
  ret void, !dbg !21153
}

; Function Attrs: nounwind
declare dso_local i32 @gettimeofday(%struct.timespec*, %struct.timezone*) #2

; Function Attrs: nounwind
declare dso_local i32 @getpid() #2

; Function Attrs: nounwind
declare dso_local i32 @getppid() #2

; Function Attrs: noinline noreturn nounwind optnone uwtable
define internal void @randread_error(i8* %file_name) #0 !dbg !21154 !ctir !2462 {
entry:
  %file_name.addr = alloca i8*, align 8
  store i8* %file_name, i8** %file_name.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %file_name.addr, metadata !21155, metadata !DIExpression()), !dbg !21156
  %0 = load i8*, i8** %file_name.addr, align 8, !dbg !21157, !tbaa !2645
  %tobool = icmp ne i8* %0, null, !dbg !21157
  br i1 %tobool, label %if.then, label %if.end, !dbg !21159

if.then:                                          ; preds = %entry
  %1 = load volatile i32, i32* @exit_failure, align 4, !dbg !21160, !tbaa !2632
  %call = call i32* @__errno_location() #16, !dbg !21161
  %2 = load i32, i32* %call, align 4, !dbg !21161, !tbaa !2632, !ctir !7
  %call1 = call i32* @__errno_location() #16, !dbg !21162
  %3 = load i32, i32* %call1, align 4, !dbg !21162, !tbaa !2632, !ctir !7
  %cmp = icmp eq i32 %3, 0, !dbg !21163
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !21162

cond.true:                                        ; preds = %if.then
  %call2 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.526, i64 0, i64 0)) #9, !dbg !21164
  br label %cond.end, !dbg !21162

cond.false:                                       ; preds = %if.then
  %call3 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2.527, i64 0, i64 0)) #9, !dbg !21165
  br label %cond.end, !dbg !21162

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call2, %cond.true ], [ %call3, %cond.false ], !dbg !21162
  %4 = load i8*, i8** %file_name.addr, align 8, !dbg !21166, !tbaa !2645
  %call4 = call i8* @quote(i8* %4), !dbg !21167
  call void (i32, i32, i8*, ...) @error(i32 %1, i32 %2, i8* %cond, i8* %call4), !dbg !21168
  br label %if.end, !dbg !21168

if.end:                                           ; preds = %cond.end, %entry
  call void @abort() #13, !dbg !21169
  unreachable, !dbg !21169
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randread_set_handler(%struct.randread_source* %s, void (i8*)* %handler) #4 !dbg !21170 !ctir !2493 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %handler.addr = alloca void (i8*)*, align 8
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !21171, metadata !DIExpression()), !dbg !21172
  store void (i8*)* %handler, void (i8*)** %handler.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata void (i8*)** %handler.addr, metadata !21173, metadata !DIExpression()), !dbg !21174
  %0 = load void (i8*)*, void (i8*)** %handler.addr, align 8, !dbg !21175, !tbaa !2645
  %1 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !21176, !tbaa !2645
  %handler1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %1, i32 0, i32 1, !dbg !21177, !ctir !2422
  store void (i8*)* %0, void (i8*)** %handler1, align 8, !dbg !21178, !tbaa !21072, !ctir !2461
  ret void, !dbg !21179
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randread_set_handler_arg(%struct.randread_source* %s, i8* %handler_arg) #4 !dbg !21180 !ctir !2495 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %handler_arg.addr = alloca i8*, align 8
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !21181, metadata !DIExpression()), !dbg !21182
  store i8* %handler_arg, i8** %handler_arg.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %handler_arg.addr, metadata !21183, metadata !DIExpression()), !dbg !21184
  %0 = load i8*, i8** %handler_arg.addr, align 8, !dbg !21185, !tbaa !2645
  %1 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !21186, !tbaa !2645
  %handler_arg1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %1, i32 0, i32 2, !dbg !21187, !ctir !2422
  store i8* %0, i8** %handler_arg1, align 8, !dbg !21188, !tbaa !21077, !ctir !513
  ret void, !dbg !21189
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @randread(%struct.randread_source* %s, i8* %buf, i64 %size) #4 !dbg !21190 !ctir !2497 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %buf.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !21191, metadata !DIExpression()), !dbg !21192
  store i8* %buf, i8** %buf.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !21193, metadata !DIExpression()), !dbg !21194
  store i64 %size, i64* %size.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !21195, metadata !DIExpression()), !dbg !21196
  %0 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !21197, !tbaa !2645
  %source = getelementptr inbounds %struct.randread_source, %struct.randread_source* %0, i32 0, i32 0, !dbg !21199, !ctir !2422
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !21199, !tbaa !21067, !ctir !2426
  %tobool = icmp ne %struct._IO_FILE* %1, null, !dbg !21197
  br i1 %tobool, label %if.then, label %if.else, !dbg !21200

if.then:                                          ; preds = %entry
  %2 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !21201, !tbaa !2645
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !21202, !tbaa !2645
  %4 = load i64, i64* %size.addr, align 8, !dbg !21203, !tbaa !3285
  call void @readsource(%struct.randread_source* %2, i8* %3, i64 %4), !dbg !21204
  br label %if.end, !dbg !21204

if.else:                                          ; preds = %entry
  %5 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !21205, !tbaa !2645
  %buf1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %5, i32 0, i32 3, !dbg !21206, !ctir !2422
  %isaac = bitcast %union.anon.128* %buf1 to %struct.isaac*, !dbg !21207
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !21208, !tbaa !2645
  %7 = load i64, i64* %size.addr, align 8, !dbg !21209, !tbaa !3285
  call void @readisaac(%struct.isaac* %isaac, i8* %6, i64 %7), !dbg !21210
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !21211
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @readsource(%struct.randread_source* %s, i8* %p, i64 %size) #4 !dbg !21212 !ctir !2505 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %inbytes = alloca i64, align 8, !ctir !55
  %fread_errno = alloca i32, align 4, !ctir !7
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !21213, metadata !DIExpression()), !dbg !21214
  store i8* %p, i8** %p.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !21215, metadata !DIExpression()), !dbg !21216
  store i64 %size, i64* %size.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !21217, metadata !DIExpression()), !dbg !21218
  br label %while.body, !dbg !21219

while.body:                                       ; preds = %entry, %cond.end
  call void @llvm.dbg.declare(metadata i64* %inbytes, metadata !21220, metadata !DIExpression()), !dbg !21222
  %0 = load i8*, i8** %p.addr, align 8, !dbg !21223, !tbaa !2645
  %1 = load i64, i64* %size.addr, align 8, !dbg !21223, !tbaa !3285
  %2 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !21223, !tbaa !2645
  %source = getelementptr inbounds %struct.randread_source, %struct.randread_source* %2, i32 0, i32 0, !dbg !21223, !ctir !2422
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !21223, !tbaa !21067, !ctir !2426
  %call = call i64 @fread_unlocked(i8* %0, i64 1, i64 %1, %struct._IO_FILE* %3), !dbg !21223
  store i64 %call, i64* %inbytes, align 8, !dbg !21222, !tbaa !3285
  call void @llvm.dbg.declare(metadata i32* %fread_errno, metadata !21224, metadata !DIExpression()), !dbg !21225
  %call1 = call i32* @__errno_location() #16, !dbg !21226
  %4 = load i32, i32* %call1, align 4, !dbg !21226, !tbaa !2632, !ctir !7
  store i32 %4, i32* %fread_errno, align 4, !dbg !21225, !tbaa !2632
  %5 = load i64, i64* %inbytes, align 8, !dbg !21227, !tbaa !3285
  %6 = load i8*, i8** %p.addr, align 8, !dbg !21228, !tbaa !2645
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 %5, !dbg !21228
  store i8* %add.ptr, i8** %p.addr, align 8, !dbg !21228, !tbaa !2645
  %7 = load i64, i64* %inbytes, align 8, !dbg !21229, !tbaa !3285
  %8 = load i64, i64* %size.addr, align 8, !dbg !21230, !tbaa !3285
  %sub = sub i64 %8, %7, !dbg !21230
  store i64 %sub, i64* %size.addr, align 8, !dbg !21230, !tbaa !3285
  %9 = load i64, i64* %size.addr, align 8, !dbg !21231, !tbaa !3285
  %cmp = icmp eq i64 %9, 0, !dbg !21233
  br i1 %cmp, label %if.then, label %if.end, !dbg !21234

if.then:                                          ; preds = %while.body
  br label %while.end, !dbg !21235

if.end:                                           ; preds = %while.body
  %10 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !21236, !tbaa !2645
  %source2 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %10, i32 0, i32 0, !dbg !21236, !ctir !2422
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %source2, align 8, !dbg !21236, !tbaa !21067, !ctir !2426
  %call3 = call i32 @ferror_unlocked(%struct._IO_FILE* %11) #9, !dbg !21236
  %tobool = icmp ne i32 %call3, 0, !dbg !21236
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !21236

cond.true:                                        ; preds = %if.end
  %12 = load i32, i32* %fread_errno, align 4, !dbg !21237, !tbaa !2632
  br label %cond.end, !dbg !21236

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !21236

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %12, %cond.true ], [ 0, %cond.false ], !dbg !21236
  %call4 = call i32* @__errno_location() #16, !dbg !21238
  store i32 %cond, i32* %call4, align 4, !dbg !21239, !tbaa !2632, !ctir !7
  %13 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !21240, !tbaa !2645
  %handler = getelementptr inbounds %struct.randread_source, %struct.randread_source* %13, i32 0, i32 1, !dbg !21241, !ctir !2422
  %14 = load void (i8*)*, void (i8*)** %handler, align 8, !dbg !21241, !tbaa !21072, !ctir !2461
  %15 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !21242, !tbaa !2645
  %handler_arg = getelementptr inbounds %struct.randread_source, %struct.randread_source* %15, i32 0, i32 2, !dbg !21243, !ctir !2422
  %16 = load i8*, i8** %handler_arg, align 8, !dbg !21243, !tbaa !21077, !ctir !513
  call void %14(i8* %16), !dbg !21240
  br label %while.body, !dbg !21219, !llvm.loop !21244

while.end:                                        ; preds = %if.then
  ret void, !dbg !21246
}

; Function Attrs: noinline nounwind optnone uwtable
define internal void @readisaac(%struct.isaac* %isaac, i8* %p, i64 %size) #4 !dbg !21247 !ctir !2508 {
entry:
  %isaac.addr = alloca %struct.isaac*, align 8
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %inbytes = alloca i64, align 8, !ctir !55
  %char_p = alloca i8*, align 8, !ctir !9
  %wp = alloca i64*, align 8, !ctir !2511
  store %struct.isaac* %isaac, %struct.isaac** %isaac.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.isaac** %isaac.addr, metadata !21248, metadata !DIExpression()), !dbg !21249
  store i8* %p, i8** %p.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !21250, metadata !DIExpression()), !dbg !21251
  store i64 %size, i64* %size.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !21252, metadata !DIExpression()), !dbg !21253
  call void @llvm.dbg.declare(metadata i64* %inbytes, metadata !21254, metadata !DIExpression()), !dbg !21255
  %0 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !21256, !tbaa !2645
  %buffered = getelementptr inbounds %struct.isaac, %struct.isaac* %0, i32 0, i32 0, !dbg !21257, !ctir !2470
  %1 = load i64, i64* %buffered, align 8, !dbg !21257, !tbaa !21258, !ctir !55
  store i64 %1, i64* %inbytes, align 8, !dbg !21255, !tbaa !3285
  br label %while.body, !dbg !21261

while.body:                                       ; preds = %entry, %if.end22
  call void @llvm.dbg.declare(metadata i8** %char_p, metadata !21262, metadata !DIExpression()), !dbg !21264
  %2 = load i8*, i8** %p.addr, align 8, !dbg !21265, !tbaa !2645
  store i8* %2, i8** %char_p, align 8, !dbg !21264, !tbaa !2645
  %3 = load i64, i64* %size.addr, align 8, !dbg !21266, !tbaa !3285
  %4 = load i64, i64* %inbytes, align 8, !dbg !21268, !tbaa !3285
  %cmp = icmp ule i64 %3, %4, !dbg !21269
  br i1 %cmp, label %if.then, label %if.end, !dbg !21270

if.then:                                          ; preds = %while.body
  %5 = load i8*, i8** %p.addr, align 8, !dbg !21271, !tbaa !2645
  %6 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !21273, !tbaa !2645
  %data = getelementptr inbounds %struct.isaac, %struct.isaac* %6, i32 0, i32 2, !dbg !21274, !ctir !2470
  %b = bitcast %union.anon.0* %data to [2048 x i8]*, !dbg !21275
  %arraydecay = getelementptr inbounds [2048 x i8], [2048 x i8]* %b, i64 0, i64 0, !dbg !21273
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 2048, !dbg !21276
  %7 = load i64, i64* %inbytes, align 8, !dbg !21277, !tbaa !3285
  %idx.neg = sub i64 0, %7, !dbg !21278
  %add.ptr1 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.neg, !dbg !21278
  %8 = load i64, i64* %size.addr, align 8, !dbg !21279, !tbaa !3285
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %add.ptr1, i64 %8, i1 false), !dbg !21280
  %9 = load i64, i64* %inbytes, align 8, !dbg !21281, !tbaa !3285
  %10 = load i64, i64* %size.addr, align 8, !dbg !21282, !tbaa !3285
  %sub = sub i64 %9, %10, !dbg !21283
  %11 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !21284, !tbaa !2645
  %buffered2 = getelementptr inbounds %struct.isaac, %struct.isaac* %11, i32 0, i32 0, !dbg !21285, !ctir !2470
  store i64 %sub, i64* %buffered2, align 8, !dbg !21286, !tbaa !21258, !ctir !55
  br label %return, !dbg !21287

if.end:                                           ; preds = %while.body
  %12 = load i8*, i8** %p.addr, align 8, !dbg !21288, !tbaa !2645
  %13 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !21289, !tbaa !2645
  %data3 = getelementptr inbounds %struct.isaac, %struct.isaac* %13, i32 0, i32 2, !dbg !21290, !ctir !2470
  %b4 = bitcast %union.anon.0* %data3 to [2048 x i8]*, !dbg !21291
  %arraydecay5 = getelementptr inbounds [2048 x i8], [2048 x i8]* %b4, i64 0, i64 0, !dbg !21289
  %add.ptr6 = getelementptr inbounds i8, i8* %arraydecay5, i64 2048, !dbg !21292
  %14 = load i64, i64* %inbytes, align 8, !dbg !21293, !tbaa !3285
  %idx.neg7 = sub i64 0, %14, !dbg !21294
  %add.ptr8 = getelementptr inbounds i8, i8* %add.ptr6, i64 %idx.neg7, !dbg !21294
  %15 = load i64, i64* %inbytes, align 8, !dbg !21295, !tbaa !3285
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 1 %add.ptr8, i64 %15, i1 false), !dbg !21296
  %16 = load i8*, i8** %char_p, align 8, !dbg !21297, !tbaa !2645
  %17 = load i64, i64* %inbytes, align 8, !dbg !21298, !tbaa !3285
  %add.ptr9 = getelementptr inbounds i8, i8* %16, i64 %17, !dbg !21299
  store i8* %add.ptr9, i8** %p.addr, align 8, !dbg !21300, !tbaa !2645
  %18 = load i64, i64* %inbytes, align 8, !dbg !21301, !tbaa !3285
  %19 = load i64, i64* %size.addr, align 8, !dbg !21302, !tbaa !3285
  %sub10 = sub i64 %19, %18, !dbg !21302
  store i64 %sub10, i64* %size.addr, align 8, !dbg !21302, !tbaa !3285
  %20 = load i8*, i8** %p.addr, align 8, !dbg !21303, !tbaa !2645
  %21 = ptrtoint i8* %20 to i64, !dbg !21303
  %rem = urem i64 %21, 8, !dbg !21303
  %cmp11 = icmp eq i64 %rem, 0, !dbg !21303
  br i1 %cmp11, label %if.then12, label %if.end22, !dbg !21305

if.then12:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64** %wp, metadata !21306, metadata !DIExpression()), !dbg !21308
  %22 = load i8*, i8** %p.addr, align 8, !dbg !21309, !tbaa !2645
  %23 = bitcast i8* %22 to i64*, !dbg !21309
  store i64* %23, i64** %wp, align 8, !dbg !21308, !tbaa !2645
  br label %while.cond13, !dbg !21310

while.cond13:                                     ; preds = %if.end21, %if.then12
  %24 = load i64, i64* %size.addr, align 8, !dbg !21311, !tbaa !3285
  %cmp14 = icmp ule i64 2048, %24, !dbg !21312
  br i1 %cmp14, label %while.body15, label %while.end, !dbg !21310

while.body15:                                     ; preds = %while.cond13
  %25 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !21313, !tbaa !2645
  %state = getelementptr inbounds %struct.isaac, %struct.isaac* %25, i32 0, i32 1, !dbg !21315, !ctir !2470
  %26 = load i64*, i64** %wp, align 8, !dbg !21316, !tbaa !2645
  call void @isaac_refill(%struct.isaac_state* %state, i64* %26), !dbg !21317
  %27 = load i64*, i64** %wp, align 8, !dbg !21318, !tbaa !2645
  %add.ptr16 = getelementptr inbounds i64, i64* %27, i64 256, !dbg !21318
  store i64* %add.ptr16, i64** %wp, align 8, !dbg !21318, !tbaa !2645
  %28 = load i64, i64* %size.addr, align 8, !dbg !21319, !tbaa !3285
  %sub17 = sub i64 %28, 2048, !dbg !21319
  store i64 %sub17, i64* %size.addr, align 8, !dbg !21319, !tbaa !3285
  %29 = load i64, i64* %size.addr, align 8, !dbg !21320, !tbaa !3285
  %cmp18 = icmp eq i64 %29, 0, !dbg !21322
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !21323

if.then19:                                        ; preds = %while.body15
  %30 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !21324, !tbaa !2645
  %buffered20 = getelementptr inbounds %struct.isaac, %struct.isaac* %30, i32 0, i32 0, !dbg !21326, !ctir !2470
  store i64 0, i64* %buffered20, align 8, !dbg !21327, !tbaa !21258, !ctir !55
  br label %return, !dbg !21328

if.end21:                                         ; preds = %while.body15
  br label %while.cond13, !dbg !21310, !llvm.loop !21329

while.end:                                        ; preds = %while.cond13
  %31 = load i64*, i64** %wp, align 8, !dbg !21331, !tbaa !2645
  %32 = bitcast i64* %31 to i8*, !dbg !21331
  store i8* %32, i8** %p.addr, align 8, !dbg !21332, !tbaa !2645
  br label %if.end22, !dbg !21333

if.end22:                                         ; preds = %while.end, %if.end
  %33 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !21334, !tbaa !2645
  %state23 = getelementptr inbounds %struct.isaac, %struct.isaac* %33, i32 0, i32 1, !dbg !21335, !ctir !2470
  %34 = load %struct.isaac*, %struct.isaac** %isaac.addr, align 8, !dbg !21336, !tbaa !2645
  %data24 = getelementptr inbounds %struct.isaac, %struct.isaac* %34, i32 0, i32 2, !dbg !21337, !ctir !2470
  %w = bitcast %union.anon.0* %data24 to [256 x i64]*, !dbg !21338
  %arraydecay25 = getelementptr inbounds [256 x i64], [256 x i64]* %w, i64 0, i64 0, !dbg !21336
  call void @isaac_refill(%struct.isaac_state* %state23, i64* %arraydecay25), !dbg !21339
  store i64 2048, i64* %inbytes, align 8, !dbg !21340, !tbaa !3285
  br label %while.body, !dbg !21261, !llvm.loop !21341

return:                                           ; preds = %if.then19, %if.then
  ret void, !dbg !21343
}

declare dso_local i64 @fread_unlocked(i8*, i64, i64, %struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @randread_free(%struct.randread_source* %s) #4 !dbg !21344 !ctir !2499 {
entry:
  %s.addr = alloca %struct.randread_source*, align 8
  %source = alloca %struct._IO_FILE*, align 8, !ctir !2426
  store %struct.randread_source* %s, %struct.randread_source** %s.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.randread_source** %s.addr, metadata !21345, metadata !DIExpression()), !dbg !21346
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %source, metadata !21347, metadata !DIExpression()), !dbg !21348
  %0 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !21349, !tbaa !2645
  %source1 = getelementptr inbounds %struct.randread_source, %struct.randread_source* %0, i32 0, i32 0, !dbg !21350, !ctir !2422
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %source1, align 8, !dbg !21350, !tbaa !21067, !ctir !2426
  store %struct._IO_FILE* %1, %struct._IO_FILE** %source, align 8, !dbg !21348, !tbaa !2645
  %2 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !21351, !tbaa !2645
  %3 = bitcast %struct.randread_source* %2 to i8*, !dbg !21351
  call void @explicit_bzero(i8* %3, i64 4152) #9, !dbg !21352
  %4 = load %struct.randread_source*, %struct.randread_source** %s.addr, align 8, !dbg !21353, !tbaa !2645
  %5 = bitcast %struct.randread_source* %4 to i8*, !dbg !21353
  call void @free(i8* %5) #9, !dbg !21354
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !21355, !tbaa !2645
  %tobool = icmp ne %struct._IO_FILE* %6, null, !dbg !21355
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !21355

cond.true:                                        ; preds = %entry
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %source, align 8, !dbg !21356, !tbaa !2645
  %call = call i32 @rpl_fclose(%struct._IO_FILE* %7), !dbg !21357
  br label %cond.end, !dbg !21355

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !21355

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ 0, %cond.false ], !dbg !21355
  ret i32 %cond, !dbg !21358
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @isaac_refill(%struct.isaac_state* %s, i64* %result) #4 !dbg !21359 !ctir !2515 {
entry:
  %s.addr = alloca %struct.isaac_state*, align 8
  %result.addr = alloca i64*, align 8
  %a = alloca i64, align 8, !ctir !2479
  %b = alloca i64, align 8, !ctir !2479
  %m = alloca i64*, align 8, !ctir !2511
  %r = alloca i64*, align 8, !ctir !2511
  %x = alloca i64, align 8, !ctir !2479
  %y = alloca i64, align 8, !ctir !2479
  %x18 = alloca i64, align 8, !ctir !2479
  %y19 = alloca i64, align 8, !ctir !2479
  %x40 = alloca i64, align 8, !ctir !2479
  %y41 = alloca i64, align 8, !ctir !2479
  %x61 = alloca i64, align 8, !ctir !2479
  %y62 = alloca i64, align 8, !ctir !2479
  %x88 = alloca i64, align 8, !ctir !2479
  %y89 = alloca i64, align 8, !ctir !2479
  %x110 = alloca i64, align 8, !ctir !2479
  %y111 = alloca i64, align 8, !ctir !2479
  %x132 = alloca i64, align 8, !ctir !2479
  %y133 = alloca i64, align 8, !ctir !2479
  %x153 = alloca i64, align 8, !ctir !2479
  %y154 = alloca i64, align 8, !ctir !2479
  store %struct.isaac_state* %s, %struct.isaac_state** %s.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.isaac_state** %s.addr, metadata !21361, metadata !DIExpression()), !dbg !21362
  store i64* %result, i64** %result.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i64** %result.addr, metadata !21363, metadata !DIExpression()), !dbg !21364
  call void @llvm.dbg.declare(metadata i64* %a, metadata !21365, metadata !DIExpression()), !dbg !21366
  %0 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21367, !tbaa !2645
  %a1 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %0, i32 0, i32 1, !dbg !21368, !ctir !2518
  %1 = load i64, i64* %a1, align 8, !dbg !21368, !tbaa !21369, !ctir !2479
  store i64 %1, i64* %a, align 8, !dbg !21366, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %b, metadata !21370, metadata !DIExpression()), !dbg !21371
  %2 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21372, !tbaa !2645
  %b2 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %2, i32 0, i32 2, !dbg !21373, !ctir !2518
  %3 = load i64, i64* %b2, align 8, !dbg !21373, !tbaa !21374, !ctir !2479
  %4 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21375, !tbaa !2645
  %c = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %4, i32 0, i32 3, !dbg !21376, !ctir !2518
  %5 = load i64, i64* %c, align 8, !dbg !21377, !tbaa !21378, !ctir !2479
  %inc = add i64 %5, 1, !dbg !21377
  store i64 %inc, i64* %c, align 8, !dbg !21377, !tbaa !21378, !ctir !2479
  %add = add i64 %3, %inc, !dbg !21379
  store i64 %add, i64* %b, align 8, !dbg !21371, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64** %m, metadata !21380, metadata !DIExpression()), !dbg !21381
  %6 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21382, !tbaa !2645
  %m3 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %6, i32 0, i32 0, !dbg !21383, !ctir !2518
  %arraydecay = getelementptr inbounds [256 x i64], [256 x i64]* %m3, i64 0, i64 0, !dbg !21382
  store i64* %arraydecay, i64** %m, align 8, !dbg !21381, !tbaa !2645
  call void @llvm.dbg.declare(metadata i64** %r, metadata !21384, metadata !DIExpression()), !dbg !21385
  %7 = load i64*, i64** %result.addr, align 8, !dbg !21386, !tbaa !2645
  store i64* %7, i64** %r, align 8, !dbg !21385, !tbaa !2645
  br label %do.body, !dbg !21387

do.body:                                          ; preds = %do.cond, %entry
  call void @llvm.dbg.declare(metadata i64* %x, metadata !21388, metadata !DIExpression()), !dbg !21391
  call void @llvm.dbg.declare(metadata i64* %y, metadata !21392, metadata !DIExpression()), !dbg !21391
  %8 = load i64, i64* %a, align 8, !dbg !21391, !tbaa !3285
  %9 = load i64, i64* %a, align 8, !dbg !21391, !tbaa !3285
  %shl = shl i64 %9, 21, !dbg !21391
  %xor = xor i64 %8, %shl, !dbg !21391
  %neg = xor i64 %xor, -1, !dbg !21391
  %xor4 = xor i64 0, %neg, !dbg !21391
  %10 = load i64*, i64** %m, align 8, !dbg !21391, !tbaa !2645
  %arrayidx = getelementptr inbounds i64, i64* %10, i64 128, !dbg !21391, !ctir !2511
  %11 = load i64, i64* %arrayidx, align 8, !dbg !21391, !tbaa !3285
  %add5 = add i64 %xor4, %11, !dbg !21391
  store i64 %add5, i64* %a, align 8, !dbg !21391, !tbaa !3285
  %12 = load i64*, i64** %m, align 8, !dbg !21391, !tbaa !2645
  %arrayidx6 = getelementptr inbounds i64, i64* %12, i64 0, !dbg !21391, !ctir !2511
  %13 = load i64, i64* %arrayidx6, align 8, !dbg !21391, !tbaa !3285
  store i64 %13, i64* %x, align 8, !dbg !21391, !tbaa !3285
  %14 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21391, !tbaa !2645
  %m7 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %14, i32 0, i32 0, !dbg !21391, !ctir !2518
  %arraydecay8 = getelementptr inbounds [256 x i64], [256 x i64]* %m7, i64 0, i64 0, !dbg !21391
  %15 = load i64, i64* %x, align 8, !dbg !21391, !tbaa !3285
  %call = call i64 @ind(i64* %arraydecay8, i64 %15), !dbg !21391
  %16 = load i64, i64* %a, align 8, !dbg !21391, !tbaa !3285
  %add9 = add i64 %call, %16, !dbg !21391
  %17 = load i64, i64* %b, align 8, !dbg !21391, !tbaa !3285
  %add10 = add i64 %add9, %17, !dbg !21391
  store i64 %add10, i64* %y, align 8, !dbg !21391, !tbaa !3285
  %18 = load i64*, i64** %m, align 8, !dbg !21391, !tbaa !2645
  %arrayidx11 = getelementptr inbounds i64, i64* %18, i64 0, !dbg !21391, !ctir !2511
  store i64 %add10, i64* %arrayidx11, align 8, !dbg !21391, !tbaa !3285
  %19 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21391, !tbaa !2645
  %m12 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %19, i32 0, i32 0, !dbg !21391, !ctir !2518
  %arraydecay13 = getelementptr inbounds [256 x i64], [256 x i64]* %m12, i64 0, i64 0, !dbg !21391
  %20 = load i64, i64* %y, align 8, !dbg !21391, !tbaa !3285
  %shr = lshr i64 %20, 8, !dbg !21391
  %call14 = call i64 @ind(i64* %arraydecay13, i64 %shr), !dbg !21391
  %21 = load i64, i64* %x, align 8, !dbg !21391, !tbaa !3285
  %add15 = add i64 %call14, %21, !dbg !21391
  %call16 = call i64 @just(i64 %add15), !dbg !21391
  store i64 %call16, i64* %b, align 8, !dbg !21391, !tbaa !3285
  %22 = load i64*, i64** %r, align 8, !dbg !21391, !tbaa !2645
  %arrayidx17 = getelementptr inbounds i64, i64* %22, i64 0, !dbg !21391, !ctir !2511
  store i64 %call16, i64* %arrayidx17, align 8, !dbg !21391, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %x18, metadata !21393, metadata !DIExpression()), !dbg !21395
  call void @llvm.dbg.declare(metadata i64* %y19, metadata !21396, metadata !DIExpression()), !dbg !21395
  %23 = load i64, i64* %a, align 8, !dbg !21395, !tbaa !3285
  %24 = load i64, i64* %a, align 8, !dbg !21395, !tbaa !3285
  %call20 = call i64 @just(i64 %24), !dbg !21395
  %shr21 = lshr i64 %call20, 5, !dbg !21395
  %xor22 = xor i64 %23, %shr21, !dbg !21395
  %xor23 = xor i64 0, %xor22, !dbg !21395
  %25 = load i64*, i64** %m, align 8, !dbg !21395, !tbaa !2645
  %arrayidx24 = getelementptr inbounds i64, i64* %25, i64 129, !dbg !21395, !ctir !2511
  %26 = load i64, i64* %arrayidx24, align 8, !dbg !21395, !tbaa !3285
  %add25 = add i64 %xor23, %26, !dbg !21395
  store i64 %add25, i64* %a, align 8, !dbg !21395, !tbaa !3285
  %27 = load i64*, i64** %m, align 8, !dbg !21395, !tbaa !2645
  %arrayidx26 = getelementptr inbounds i64, i64* %27, i64 1, !dbg !21395, !ctir !2511
  %28 = load i64, i64* %arrayidx26, align 8, !dbg !21395, !tbaa !3285
  store i64 %28, i64* %x18, align 8, !dbg !21395, !tbaa !3285
  %29 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21395, !tbaa !2645
  %m27 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %29, i32 0, i32 0, !dbg !21395, !ctir !2518
  %arraydecay28 = getelementptr inbounds [256 x i64], [256 x i64]* %m27, i64 0, i64 0, !dbg !21395
  %30 = load i64, i64* %x18, align 8, !dbg !21395, !tbaa !3285
  %call29 = call i64 @ind(i64* %arraydecay28, i64 %30), !dbg !21395
  %31 = load i64, i64* %a, align 8, !dbg !21395, !tbaa !3285
  %add30 = add i64 %call29, %31, !dbg !21395
  %32 = load i64, i64* %b, align 8, !dbg !21395, !tbaa !3285
  %add31 = add i64 %add30, %32, !dbg !21395
  store i64 %add31, i64* %y19, align 8, !dbg !21395, !tbaa !3285
  %33 = load i64*, i64** %m, align 8, !dbg !21395, !tbaa !2645
  %arrayidx32 = getelementptr inbounds i64, i64* %33, i64 1, !dbg !21395, !ctir !2511
  store i64 %add31, i64* %arrayidx32, align 8, !dbg !21395, !tbaa !3285
  %34 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21395, !tbaa !2645
  %m33 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %34, i32 0, i32 0, !dbg !21395, !ctir !2518
  %arraydecay34 = getelementptr inbounds [256 x i64], [256 x i64]* %m33, i64 0, i64 0, !dbg !21395
  %35 = load i64, i64* %y19, align 8, !dbg !21395, !tbaa !3285
  %shr35 = lshr i64 %35, 8, !dbg !21395
  %call36 = call i64 @ind(i64* %arraydecay34, i64 %shr35), !dbg !21395
  %36 = load i64, i64* %x18, align 8, !dbg !21395, !tbaa !3285
  %add37 = add i64 %call36, %36, !dbg !21395
  %call38 = call i64 @just(i64 %add37), !dbg !21395
  store i64 %call38, i64* %b, align 8, !dbg !21395, !tbaa !3285
  %37 = load i64*, i64** %r, align 8, !dbg !21395, !tbaa !2645
  %arrayidx39 = getelementptr inbounds i64, i64* %37, i64 1, !dbg !21395, !ctir !2511
  store i64 %call38, i64* %arrayidx39, align 8, !dbg !21395, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %x40, metadata !21397, metadata !DIExpression()), !dbg !21399
  call void @llvm.dbg.declare(metadata i64* %y41, metadata !21400, metadata !DIExpression()), !dbg !21399
  %38 = load i64, i64* %a, align 8, !dbg !21399, !tbaa !3285
  %39 = load i64, i64* %a, align 8, !dbg !21399, !tbaa !3285
  %shl42 = shl i64 %39, 12, !dbg !21399
  %xor43 = xor i64 %38, %shl42, !dbg !21399
  %xor44 = xor i64 0, %xor43, !dbg !21399
  %40 = load i64*, i64** %m, align 8, !dbg !21399, !tbaa !2645
  %arrayidx45 = getelementptr inbounds i64, i64* %40, i64 130, !dbg !21399, !ctir !2511
  %41 = load i64, i64* %arrayidx45, align 8, !dbg !21399, !tbaa !3285
  %add46 = add i64 %xor44, %41, !dbg !21399
  store i64 %add46, i64* %a, align 8, !dbg !21399, !tbaa !3285
  %42 = load i64*, i64** %m, align 8, !dbg !21399, !tbaa !2645
  %arrayidx47 = getelementptr inbounds i64, i64* %42, i64 2, !dbg !21399, !ctir !2511
  %43 = load i64, i64* %arrayidx47, align 8, !dbg !21399, !tbaa !3285
  store i64 %43, i64* %x40, align 8, !dbg !21399, !tbaa !3285
  %44 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21399, !tbaa !2645
  %m48 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %44, i32 0, i32 0, !dbg !21399, !ctir !2518
  %arraydecay49 = getelementptr inbounds [256 x i64], [256 x i64]* %m48, i64 0, i64 0, !dbg !21399
  %45 = load i64, i64* %x40, align 8, !dbg !21399, !tbaa !3285
  %call50 = call i64 @ind(i64* %arraydecay49, i64 %45), !dbg !21399
  %46 = load i64, i64* %a, align 8, !dbg !21399, !tbaa !3285
  %add51 = add i64 %call50, %46, !dbg !21399
  %47 = load i64, i64* %b, align 8, !dbg !21399, !tbaa !3285
  %add52 = add i64 %add51, %47, !dbg !21399
  store i64 %add52, i64* %y41, align 8, !dbg !21399, !tbaa !3285
  %48 = load i64*, i64** %m, align 8, !dbg !21399, !tbaa !2645
  %arrayidx53 = getelementptr inbounds i64, i64* %48, i64 2, !dbg !21399, !ctir !2511
  store i64 %add52, i64* %arrayidx53, align 8, !dbg !21399, !tbaa !3285
  %49 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21399, !tbaa !2645
  %m54 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %49, i32 0, i32 0, !dbg !21399, !ctir !2518
  %arraydecay55 = getelementptr inbounds [256 x i64], [256 x i64]* %m54, i64 0, i64 0, !dbg !21399
  %50 = load i64, i64* %y41, align 8, !dbg !21399, !tbaa !3285
  %shr56 = lshr i64 %50, 8, !dbg !21399
  %call57 = call i64 @ind(i64* %arraydecay55, i64 %shr56), !dbg !21399
  %51 = load i64, i64* %x40, align 8, !dbg !21399, !tbaa !3285
  %add58 = add i64 %call57, %51, !dbg !21399
  %call59 = call i64 @just(i64 %add58), !dbg !21399
  store i64 %call59, i64* %b, align 8, !dbg !21399, !tbaa !3285
  %52 = load i64*, i64** %r, align 8, !dbg !21399, !tbaa !2645
  %arrayidx60 = getelementptr inbounds i64, i64* %52, i64 2, !dbg !21399, !ctir !2511
  store i64 %call59, i64* %arrayidx60, align 8, !dbg !21399, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %x61, metadata !21401, metadata !DIExpression()), !dbg !21403
  call void @llvm.dbg.declare(metadata i64* %y62, metadata !21404, metadata !DIExpression()), !dbg !21403
  %53 = load i64, i64* %a, align 8, !dbg !21403, !tbaa !3285
  %54 = load i64, i64* %a, align 8, !dbg !21403, !tbaa !3285
  %call63 = call i64 @just(i64 %54), !dbg !21403
  %shr64 = lshr i64 %call63, 33, !dbg !21403
  %xor65 = xor i64 %53, %shr64, !dbg !21403
  %xor66 = xor i64 0, %xor65, !dbg !21403
  %55 = load i64*, i64** %m, align 8, !dbg !21403, !tbaa !2645
  %arrayidx67 = getelementptr inbounds i64, i64* %55, i64 131, !dbg !21403, !ctir !2511
  %56 = load i64, i64* %arrayidx67, align 8, !dbg !21403, !tbaa !3285
  %add68 = add i64 %xor66, %56, !dbg !21403
  store i64 %add68, i64* %a, align 8, !dbg !21403, !tbaa !3285
  %57 = load i64*, i64** %m, align 8, !dbg !21403, !tbaa !2645
  %arrayidx69 = getelementptr inbounds i64, i64* %57, i64 3, !dbg !21403, !ctir !2511
  %58 = load i64, i64* %arrayidx69, align 8, !dbg !21403, !tbaa !3285
  store i64 %58, i64* %x61, align 8, !dbg !21403, !tbaa !3285
  %59 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21403, !tbaa !2645
  %m70 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %59, i32 0, i32 0, !dbg !21403, !ctir !2518
  %arraydecay71 = getelementptr inbounds [256 x i64], [256 x i64]* %m70, i64 0, i64 0, !dbg !21403
  %60 = load i64, i64* %x61, align 8, !dbg !21403, !tbaa !3285
  %call72 = call i64 @ind(i64* %arraydecay71, i64 %60), !dbg !21403
  %61 = load i64, i64* %a, align 8, !dbg !21403, !tbaa !3285
  %add73 = add i64 %call72, %61, !dbg !21403
  %62 = load i64, i64* %b, align 8, !dbg !21403, !tbaa !3285
  %add74 = add i64 %add73, %62, !dbg !21403
  store i64 %add74, i64* %y62, align 8, !dbg !21403, !tbaa !3285
  %63 = load i64*, i64** %m, align 8, !dbg !21403, !tbaa !2645
  %arrayidx75 = getelementptr inbounds i64, i64* %63, i64 3, !dbg !21403, !ctir !2511
  store i64 %add74, i64* %arrayidx75, align 8, !dbg !21403, !tbaa !3285
  %64 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21403, !tbaa !2645
  %m76 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %64, i32 0, i32 0, !dbg !21403, !ctir !2518
  %arraydecay77 = getelementptr inbounds [256 x i64], [256 x i64]* %m76, i64 0, i64 0, !dbg !21403
  %65 = load i64, i64* %y62, align 8, !dbg !21403, !tbaa !3285
  %shr78 = lshr i64 %65, 8, !dbg !21403
  %call79 = call i64 @ind(i64* %arraydecay77, i64 %shr78), !dbg !21403
  %66 = load i64, i64* %x61, align 8, !dbg !21403, !tbaa !3285
  %add80 = add i64 %call79, %66, !dbg !21403
  %call81 = call i64 @just(i64 %add80), !dbg !21403
  store i64 %call81, i64* %b, align 8, !dbg !21403, !tbaa !3285
  %67 = load i64*, i64** %r, align 8, !dbg !21403, !tbaa !2645
  %arrayidx82 = getelementptr inbounds i64, i64* %67, i64 3, !dbg !21403, !ctir !2511
  store i64 %call81, i64* %arrayidx82, align 8, !dbg !21403, !tbaa !3285
  %68 = load i64*, i64** %r, align 8, !dbg !21405, !tbaa !2645
  %add.ptr = getelementptr inbounds i64, i64* %68, i64 4, !dbg !21405
  store i64* %add.ptr, i64** %r, align 8, !dbg !21405, !tbaa !2645
  br label %do.cond, !dbg !21406

do.cond:                                          ; preds = %do.body
  %69 = load i64*, i64** %m, align 8, !dbg !21407, !tbaa !2645
  %add.ptr83 = getelementptr inbounds i64, i64* %69, i64 4, !dbg !21407
  store i64* %add.ptr83, i64** %m, align 8, !dbg !21407, !tbaa !2645
  %70 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21408, !tbaa !2645
  %m84 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %70, i32 0, i32 0, !dbg !21409, !ctir !2518
  %arraydecay85 = getelementptr inbounds [256 x i64], [256 x i64]* %m84, i64 0, i64 0, !dbg !21408
  %add.ptr86 = getelementptr inbounds i64, i64* %arraydecay85, i64 128, !dbg !21410
  %cmp = icmp ult i64* %add.ptr83, %add.ptr86, !dbg !21411
  br i1 %cmp, label %do.body, label %do.end, !dbg !21406, !llvm.loop !21412

do.end:                                           ; preds = %do.cond
  br label %do.body87, !dbg !21414

do.body87:                                        ; preds = %do.cond176, %do.end
  call void @llvm.dbg.declare(metadata i64* %x88, metadata !21415, metadata !DIExpression()), !dbg !21418
  call void @llvm.dbg.declare(metadata i64* %y89, metadata !21419, metadata !DIExpression()), !dbg !21418
  %71 = load i64, i64* %a, align 8, !dbg !21418, !tbaa !3285
  %72 = load i64, i64* %a, align 8, !dbg !21418, !tbaa !3285
  %shl90 = shl i64 %72, 21, !dbg !21418
  %xor91 = xor i64 %71, %shl90, !dbg !21418
  %neg92 = xor i64 %xor91, -1, !dbg !21418
  %xor93 = xor i64 0, %neg92, !dbg !21418
  %73 = load i64*, i64** %m, align 8, !dbg !21418, !tbaa !2645
  %arrayidx94 = getelementptr inbounds i64, i64* %73, i64 -128, !dbg !21418, !ctir !2511
  %74 = load i64, i64* %arrayidx94, align 8, !dbg !21418, !tbaa !3285
  %add95 = add i64 %xor93, %74, !dbg !21418
  store i64 %add95, i64* %a, align 8, !dbg !21418, !tbaa !3285
  %75 = load i64*, i64** %m, align 8, !dbg !21418, !tbaa !2645
  %arrayidx96 = getelementptr inbounds i64, i64* %75, i64 0, !dbg !21418, !ctir !2511
  %76 = load i64, i64* %arrayidx96, align 8, !dbg !21418, !tbaa !3285
  store i64 %76, i64* %x88, align 8, !dbg !21418, !tbaa !3285
  %77 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21418, !tbaa !2645
  %m97 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %77, i32 0, i32 0, !dbg !21418, !ctir !2518
  %arraydecay98 = getelementptr inbounds [256 x i64], [256 x i64]* %m97, i64 0, i64 0, !dbg !21418
  %78 = load i64, i64* %x88, align 8, !dbg !21418, !tbaa !3285
  %call99 = call i64 @ind(i64* %arraydecay98, i64 %78), !dbg !21418
  %79 = load i64, i64* %a, align 8, !dbg !21418, !tbaa !3285
  %add100 = add i64 %call99, %79, !dbg !21418
  %80 = load i64, i64* %b, align 8, !dbg !21418, !tbaa !3285
  %add101 = add i64 %add100, %80, !dbg !21418
  store i64 %add101, i64* %y89, align 8, !dbg !21418, !tbaa !3285
  %81 = load i64*, i64** %m, align 8, !dbg !21418, !tbaa !2645
  %arrayidx102 = getelementptr inbounds i64, i64* %81, i64 0, !dbg !21418, !ctir !2511
  store i64 %add101, i64* %arrayidx102, align 8, !dbg !21418, !tbaa !3285
  %82 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21418, !tbaa !2645
  %m103 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %82, i32 0, i32 0, !dbg !21418, !ctir !2518
  %arraydecay104 = getelementptr inbounds [256 x i64], [256 x i64]* %m103, i64 0, i64 0, !dbg !21418
  %83 = load i64, i64* %y89, align 8, !dbg !21418, !tbaa !3285
  %shr105 = lshr i64 %83, 8, !dbg !21418
  %call106 = call i64 @ind(i64* %arraydecay104, i64 %shr105), !dbg !21418
  %84 = load i64, i64* %x88, align 8, !dbg !21418, !tbaa !3285
  %add107 = add i64 %call106, %84, !dbg !21418
  %call108 = call i64 @just(i64 %add107), !dbg !21418
  store i64 %call108, i64* %b, align 8, !dbg !21418, !tbaa !3285
  %85 = load i64*, i64** %r, align 8, !dbg !21418, !tbaa !2645
  %arrayidx109 = getelementptr inbounds i64, i64* %85, i64 0, !dbg !21418, !ctir !2511
  store i64 %call108, i64* %arrayidx109, align 8, !dbg !21418, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %x110, metadata !21420, metadata !DIExpression()), !dbg !21422
  call void @llvm.dbg.declare(metadata i64* %y111, metadata !21423, metadata !DIExpression()), !dbg !21422
  %86 = load i64, i64* %a, align 8, !dbg !21422, !tbaa !3285
  %87 = load i64, i64* %a, align 8, !dbg !21422, !tbaa !3285
  %call112 = call i64 @just(i64 %87), !dbg !21422
  %shr113 = lshr i64 %call112, 5, !dbg !21422
  %xor114 = xor i64 %86, %shr113, !dbg !21422
  %xor115 = xor i64 0, %xor114, !dbg !21422
  %88 = load i64*, i64** %m, align 8, !dbg !21422, !tbaa !2645
  %arrayidx116 = getelementptr inbounds i64, i64* %88, i64 -127, !dbg !21422, !ctir !2511
  %89 = load i64, i64* %arrayidx116, align 8, !dbg !21422, !tbaa !3285
  %add117 = add i64 %xor115, %89, !dbg !21422
  store i64 %add117, i64* %a, align 8, !dbg !21422, !tbaa !3285
  %90 = load i64*, i64** %m, align 8, !dbg !21422, !tbaa !2645
  %arrayidx118 = getelementptr inbounds i64, i64* %90, i64 1, !dbg !21422, !ctir !2511
  %91 = load i64, i64* %arrayidx118, align 8, !dbg !21422, !tbaa !3285
  store i64 %91, i64* %x110, align 8, !dbg !21422, !tbaa !3285
  %92 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21422, !tbaa !2645
  %m119 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %92, i32 0, i32 0, !dbg !21422, !ctir !2518
  %arraydecay120 = getelementptr inbounds [256 x i64], [256 x i64]* %m119, i64 0, i64 0, !dbg !21422
  %93 = load i64, i64* %x110, align 8, !dbg !21422, !tbaa !3285
  %call121 = call i64 @ind(i64* %arraydecay120, i64 %93), !dbg !21422
  %94 = load i64, i64* %a, align 8, !dbg !21422, !tbaa !3285
  %add122 = add i64 %call121, %94, !dbg !21422
  %95 = load i64, i64* %b, align 8, !dbg !21422, !tbaa !3285
  %add123 = add i64 %add122, %95, !dbg !21422
  store i64 %add123, i64* %y111, align 8, !dbg !21422, !tbaa !3285
  %96 = load i64*, i64** %m, align 8, !dbg !21422, !tbaa !2645
  %arrayidx124 = getelementptr inbounds i64, i64* %96, i64 1, !dbg !21422, !ctir !2511
  store i64 %add123, i64* %arrayidx124, align 8, !dbg !21422, !tbaa !3285
  %97 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21422, !tbaa !2645
  %m125 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %97, i32 0, i32 0, !dbg !21422, !ctir !2518
  %arraydecay126 = getelementptr inbounds [256 x i64], [256 x i64]* %m125, i64 0, i64 0, !dbg !21422
  %98 = load i64, i64* %y111, align 8, !dbg !21422, !tbaa !3285
  %shr127 = lshr i64 %98, 8, !dbg !21422
  %call128 = call i64 @ind(i64* %arraydecay126, i64 %shr127), !dbg !21422
  %99 = load i64, i64* %x110, align 8, !dbg !21422, !tbaa !3285
  %add129 = add i64 %call128, %99, !dbg !21422
  %call130 = call i64 @just(i64 %add129), !dbg !21422
  store i64 %call130, i64* %b, align 8, !dbg !21422, !tbaa !3285
  %100 = load i64*, i64** %r, align 8, !dbg !21422, !tbaa !2645
  %arrayidx131 = getelementptr inbounds i64, i64* %100, i64 1, !dbg !21422, !ctir !2511
  store i64 %call130, i64* %arrayidx131, align 8, !dbg !21422, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %x132, metadata !21424, metadata !DIExpression()), !dbg !21426
  call void @llvm.dbg.declare(metadata i64* %y133, metadata !21427, metadata !DIExpression()), !dbg !21426
  %101 = load i64, i64* %a, align 8, !dbg !21426, !tbaa !3285
  %102 = load i64, i64* %a, align 8, !dbg !21426, !tbaa !3285
  %shl134 = shl i64 %102, 12, !dbg !21426
  %xor135 = xor i64 %101, %shl134, !dbg !21426
  %xor136 = xor i64 0, %xor135, !dbg !21426
  %103 = load i64*, i64** %m, align 8, !dbg !21426, !tbaa !2645
  %arrayidx137 = getelementptr inbounds i64, i64* %103, i64 -126, !dbg !21426, !ctir !2511
  %104 = load i64, i64* %arrayidx137, align 8, !dbg !21426, !tbaa !3285
  %add138 = add i64 %xor136, %104, !dbg !21426
  store i64 %add138, i64* %a, align 8, !dbg !21426, !tbaa !3285
  %105 = load i64*, i64** %m, align 8, !dbg !21426, !tbaa !2645
  %arrayidx139 = getelementptr inbounds i64, i64* %105, i64 2, !dbg !21426, !ctir !2511
  %106 = load i64, i64* %arrayidx139, align 8, !dbg !21426, !tbaa !3285
  store i64 %106, i64* %x132, align 8, !dbg !21426, !tbaa !3285
  %107 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21426, !tbaa !2645
  %m140 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %107, i32 0, i32 0, !dbg !21426, !ctir !2518
  %arraydecay141 = getelementptr inbounds [256 x i64], [256 x i64]* %m140, i64 0, i64 0, !dbg !21426
  %108 = load i64, i64* %x132, align 8, !dbg !21426, !tbaa !3285
  %call142 = call i64 @ind(i64* %arraydecay141, i64 %108), !dbg !21426
  %109 = load i64, i64* %a, align 8, !dbg !21426, !tbaa !3285
  %add143 = add i64 %call142, %109, !dbg !21426
  %110 = load i64, i64* %b, align 8, !dbg !21426, !tbaa !3285
  %add144 = add i64 %add143, %110, !dbg !21426
  store i64 %add144, i64* %y133, align 8, !dbg !21426, !tbaa !3285
  %111 = load i64*, i64** %m, align 8, !dbg !21426, !tbaa !2645
  %arrayidx145 = getelementptr inbounds i64, i64* %111, i64 2, !dbg !21426, !ctir !2511
  store i64 %add144, i64* %arrayidx145, align 8, !dbg !21426, !tbaa !3285
  %112 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21426, !tbaa !2645
  %m146 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %112, i32 0, i32 0, !dbg !21426, !ctir !2518
  %arraydecay147 = getelementptr inbounds [256 x i64], [256 x i64]* %m146, i64 0, i64 0, !dbg !21426
  %113 = load i64, i64* %y133, align 8, !dbg !21426, !tbaa !3285
  %shr148 = lshr i64 %113, 8, !dbg !21426
  %call149 = call i64 @ind(i64* %arraydecay147, i64 %shr148), !dbg !21426
  %114 = load i64, i64* %x132, align 8, !dbg !21426, !tbaa !3285
  %add150 = add i64 %call149, %114, !dbg !21426
  %call151 = call i64 @just(i64 %add150), !dbg !21426
  store i64 %call151, i64* %b, align 8, !dbg !21426, !tbaa !3285
  %115 = load i64*, i64** %r, align 8, !dbg !21426, !tbaa !2645
  %arrayidx152 = getelementptr inbounds i64, i64* %115, i64 2, !dbg !21426, !ctir !2511
  store i64 %call151, i64* %arrayidx152, align 8, !dbg !21426, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %x153, metadata !21428, metadata !DIExpression()), !dbg !21430
  call void @llvm.dbg.declare(metadata i64* %y154, metadata !21431, metadata !DIExpression()), !dbg !21430
  %116 = load i64, i64* %a, align 8, !dbg !21430, !tbaa !3285
  %117 = load i64, i64* %a, align 8, !dbg !21430, !tbaa !3285
  %call155 = call i64 @just(i64 %117), !dbg !21430
  %shr156 = lshr i64 %call155, 33, !dbg !21430
  %xor157 = xor i64 %116, %shr156, !dbg !21430
  %xor158 = xor i64 0, %xor157, !dbg !21430
  %118 = load i64*, i64** %m, align 8, !dbg !21430, !tbaa !2645
  %arrayidx159 = getelementptr inbounds i64, i64* %118, i64 -125, !dbg !21430, !ctir !2511
  %119 = load i64, i64* %arrayidx159, align 8, !dbg !21430, !tbaa !3285
  %add160 = add i64 %xor158, %119, !dbg !21430
  store i64 %add160, i64* %a, align 8, !dbg !21430, !tbaa !3285
  %120 = load i64*, i64** %m, align 8, !dbg !21430, !tbaa !2645
  %arrayidx161 = getelementptr inbounds i64, i64* %120, i64 3, !dbg !21430, !ctir !2511
  %121 = load i64, i64* %arrayidx161, align 8, !dbg !21430, !tbaa !3285
  store i64 %121, i64* %x153, align 8, !dbg !21430, !tbaa !3285
  %122 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21430, !tbaa !2645
  %m162 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %122, i32 0, i32 0, !dbg !21430, !ctir !2518
  %arraydecay163 = getelementptr inbounds [256 x i64], [256 x i64]* %m162, i64 0, i64 0, !dbg !21430
  %123 = load i64, i64* %x153, align 8, !dbg !21430, !tbaa !3285
  %call164 = call i64 @ind(i64* %arraydecay163, i64 %123), !dbg !21430
  %124 = load i64, i64* %a, align 8, !dbg !21430, !tbaa !3285
  %add165 = add i64 %call164, %124, !dbg !21430
  %125 = load i64, i64* %b, align 8, !dbg !21430, !tbaa !3285
  %add166 = add i64 %add165, %125, !dbg !21430
  store i64 %add166, i64* %y154, align 8, !dbg !21430, !tbaa !3285
  %126 = load i64*, i64** %m, align 8, !dbg !21430, !tbaa !2645
  %arrayidx167 = getelementptr inbounds i64, i64* %126, i64 3, !dbg !21430, !ctir !2511
  store i64 %add166, i64* %arrayidx167, align 8, !dbg !21430, !tbaa !3285
  %127 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21430, !tbaa !2645
  %m168 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %127, i32 0, i32 0, !dbg !21430, !ctir !2518
  %arraydecay169 = getelementptr inbounds [256 x i64], [256 x i64]* %m168, i64 0, i64 0, !dbg !21430
  %128 = load i64, i64* %y154, align 8, !dbg !21430, !tbaa !3285
  %shr170 = lshr i64 %128, 8, !dbg !21430
  %call171 = call i64 @ind(i64* %arraydecay169, i64 %shr170), !dbg !21430
  %129 = load i64, i64* %x153, align 8, !dbg !21430, !tbaa !3285
  %add172 = add i64 %call171, %129, !dbg !21430
  %call173 = call i64 @just(i64 %add172), !dbg !21430
  store i64 %call173, i64* %b, align 8, !dbg !21430, !tbaa !3285
  %130 = load i64*, i64** %r, align 8, !dbg !21430, !tbaa !2645
  %arrayidx174 = getelementptr inbounds i64, i64* %130, i64 3, !dbg !21430, !ctir !2511
  store i64 %call173, i64* %arrayidx174, align 8, !dbg !21430, !tbaa !3285
  %131 = load i64*, i64** %r, align 8, !dbg !21432, !tbaa !2645
  %add.ptr175 = getelementptr inbounds i64, i64* %131, i64 4, !dbg !21432
  store i64* %add.ptr175, i64** %r, align 8, !dbg !21432, !tbaa !2645
  br label %do.cond176, !dbg !21433

do.cond176:                                       ; preds = %do.body87
  %132 = load i64*, i64** %m, align 8, !dbg !21434, !tbaa !2645
  %add.ptr177 = getelementptr inbounds i64, i64* %132, i64 4, !dbg !21434
  store i64* %add.ptr177, i64** %m, align 8, !dbg !21434, !tbaa !2645
  %133 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21435, !tbaa !2645
  %m178 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %133, i32 0, i32 0, !dbg !21436, !ctir !2518
  %arraydecay179 = getelementptr inbounds [256 x i64], [256 x i64]* %m178, i64 0, i64 0, !dbg !21435
  %add.ptr180 = getelementptr inbounds i64, i64* %arraydecay179, i64 256, !dbg !21437
  %cmp181 = icmp ult i64* %add.ptr177, %add.ptr180, !dbg !21438
  br i1 %cmp181, label %do.body87, label %do.end182, !dbg !21433, !llvm.loop !21439

do.end182:                                        ; preds = %do.cond176
  %134 = load i64, i64* %a, align 8, !dbg !21441, !tbaa !3285
  %135 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21442, !tbaa !2645
  %a183 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %135, i32 0, i32 1, !dbg !21443, !ctir !2518
  store i64 %134, i64* %a183, align 8, !dbg !21444, !tbaa !21369, !ctir !2479
  %136 = load i64, i64* %b, align 8, !dbg !21445, !tbaa !3285
  %137 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21446, !tbaa !2645
  %b184 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %137, i32 0, i32 2, !dbg !21447, !ctir !2518
  store i64 %136, i64* %b184, align 8, !dbg !21448, !tbaa !21374, !ctir !2479
  ret void, !dbg !21449
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @ind(i64* %m, i64 %x) #4 !dbg !21450 !ctir !2526 {
entry:
  %m.addr = alloca i64*, align 8
  %x.addr = alloca i64, align 8
  %void_m = alloca i8*, align 8, !ctir !513
  %base_p = alloca i8*, align 8, !ctir !180
  %word_p = alloca i8*, align 8, !ctir !513
  %p = alloca i64*, align 8, !ctir !2528
  store i64* %m, i64** %m.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i64** %m.addr, metadata !21451, metadata !DIExpression()), !dbg !21452
  store i64 %x, i64* %x.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !21453, metadata !DIExpression()), !dbg !21454
  call void @llvm.dbg.declare(metadata i8** %void_m, metadata !21455, metadata !DIExpression()), !dbg !21458
  %0 = load i64*, i64** %m.addr, align 8, !dbg !21459, !tbaa !2645
  %1 = bitcast i64* %0 to i8*, !dbg !21459
  store i8* %1, i8** %void_m, align 8, !dbg !21458, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %base_p, metadata !21460, metadata !DIExpression()), !dbg !21461
  %2 = load i8*, i8** %void_m, align 8, !dbg !21462, !tbaa !2645
  store i8* %2, i8** %base_p, align 8, !dbg !21461, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %word_p, metadata !21463, metadata !DIExpression()), !dbg !21464
  %3 = load i8*, i8** %base_p, align 8, !dbg !21465, !tbaa !2645
  %4 = load i64, i64* %x.addr, align 8, !dbg !21466, !tbaa !3285
  %and = and i64 %4, 2040, !dbg !21467
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %and, !dbg !21468
  store i8* %add.ptr, i8** %word_p, align 8, !dbg !21464, !tbaa !2645
  call void @llvm.dbg.declare(metadata i64** %p, metadata !21469, metadata !DIExpression()), !dbg !21470
  %5 = load i8*, i8** %word_p, align 8, !dbg !21471, !tbaa !2645
  %6 = bitcast i8* %5 to i64*, !dbg !21471
  store i64* %6, i64** %p, align 8, !dbg !21470, !tbaa !2645
  %7 = load i64*, i64** %p, align 8, !dbg !21472, !tbaa !2645
  %8 = load i64, i64* %7, align 8, !dbg !21473, !tbaa !3285, !ctir !2529
  ret i64 %8, !dbg !21474
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @just(i64 %a) #4 !dbg !21475 !ctir !2530 {
entry:
  %a.addr = alloca i64, align 8
  %desired_bits = alloca i64, align 8, !ctir !2479
  store i64 %a, i64* %a.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !21476, metadata !DIExpression()), !dbg !21477
  call void @llvm.dbg.declare(metadata i64* %desired_bits, metadata !21478, metadata !DIExpression()), !dbg !21479
  store i64 -1, i64* %desired_bits, align 8, !dbg !21479, !tbaa !3285
  %0 = load i64, i64* %a.addr, align 8, !dbg !21480, !tbaa !3285
  %1 = load i64, i64* %desired_bits, align 8, !dbg !21481, !tbaa !3285
  %and = and i64 %0, %1, !dbg !21482
  ret i64 %and, !dbg !21483
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @isaac_seed(%struct.isaac_state* %s) #4 !dbg !21484 !ctir !2524 {
entry:
  %s.addr = alloca %struct.isaac_state*, align 8
  %a = alloca i64, align 8, !ctir !2479
  %b = alloca i64, align 8, !ctir !2479
  %c = alloca i64, align 8, !ctir !2479
  %d = alloca i64, align 8, !ctir !2479
  %e = alloca i64, align 8, !ctir !2479
  %f = alloca i64, align 8, !ctir !2479
  %g = alloca i64, align 8, !ctir !2479
  %h = alloca i64, align 8, !ctir !2479
  %i = alloca i32, align 4, !ctir !7
  %i99 = alloca i32, align 4, !ctir !7
  store %struct.isaac_state* %s, %struct.isaac_state** %s.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct.isaac_state** %s.addr, metadata !21485, metadata !DIExpression()), !dbg !21486
  call void @llvm.dbg.declare(metadata i64* %a, metadata !21487, metadata !DIExpression()), !dbg !21488
  store i64 7240739780546808700, i64* %a, align 8, !dbg !21488, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %b, metadata !21489, metadata !DIExpression()), !dbg !21490
  store i64 -5046086420515862430, i64* %b, align 8, !dbg !21490, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %c, metadata !21491, metadata !DIExpression()), !dbg !21492
  store i64 -8354558816804203872, i64* %c, align 8, !dbg !21492, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %d, metadata !21493, metadata !DIExpression()), !dbg !21494
  store i64 -5576812576440232668, i64* %d, align 8, !dbg !21494, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %e, metadata !21495, metadata !DIExpression()), !dbg !21496
  store i64 -9011610652101975858, i64* %e, align 8, !dbg !21496, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %f, metadata !21497, metadata !DIExpression()), !dbg !21498
  store i64 5259722845879046933, i64* %f, align 8, !dbg !21498, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %g, metadata !21499, metadata !DIExpression()), !dbg !21500
  store i64 -5865837416287532563, i64* %g, align 8, !dbg !21500, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %h, metadata !21501, metadata !DIExpression()), !dbg !21502
  store i64 -7424904924229222229, i64* %h, align 8, !dbg !21502, !tbaa !3285
  call void @llvm.dbg.declare(metadata i32* %i, metadata !21503, metadata !DIExpression()), !dbg !21505
  store i32 0, i32* %i, align 4, !dbg !21506, !tbaa !2632
  br label %for.cond, !dbg !21506

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !21508, !tbaa !2632
  %cmp = icmp slt i32 %0, 256, !dbg !21508
  br i1 %cmp, label %for.body, label %for.end, !dbg !21506

for.body:                                         ; preds = %for.cond
  %1 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21510, !tbaa !2645
  %m = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %1, i32 0, i32 0, !dbg !21510, !ctir !2518
  %2 = load i32, i32* %i, align 4, !dbg !21510, !tbaa !2632
  %idxprom = sext i32 %2 to i64, !dbg !21510
  %arrayidx = getelementptr inbounds [256 x i64], [256 x i64]* %m, i64 0, i64 %idxprom, !dbg !21510, !ctir !2478
  %3 = load i64, i64* %arrayidx, align 8, !dbg !21510, !tbaa !3285
  %4 = load i64, i64* %a, align 8, !dbg !21510, !tbaa !3285
  %add = add i64 %4, %3, !dbg !21510
  store i64 %add, i64* %a, align 8, !dbg !21510, !tbaa !3285
  %5 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21510, !tbaa !2645
  %m1 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %5, i32 0, i32 0, !dbg !21510, !ctir !2518
  %6 = load i32, i32* %i, align 4, !dbg !21510, !tbaa !2632
  %add2 = add nsw i32 %6, 1, !dbg !21510
  %idxprom3 = sext i32 %add2 to i64, !dbg !21510
  %arrayidx4 = getelementptr inbounds [256 x i64], [256 x i64]* %m1, i64 0, i64 %idxprom3, !dbg !21510, !ctir !2478
  %7 = load i64, i64* %arrayidx4, align 8, !dbg !21510, !tbaa !3285
  %8 = load i64, i64* %b, align 8, !dbg !21510, !tbaa !3285
  %add5 = add i64 %8, %7, !dbg !21510
  store i64 %add5, i64* %b, align 8, !dbg !21510, !tbaa !3285
  %9 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21510, !tbaa !2645
  %m6 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %9, i32 0, i32 0, !dbg !21510, !ctir !2518
  %10 = load i32, i32* %i, align 4, !dbg !21510, !tbaa !2632
  %add7 = add nsw i32 %10, 2, !dbg !21510
  %idxprom8 = sext i32 %add7 to i64, !dbg !21510
  %arrayidx9 = getelementptr inbounds [256 x i64], [256 x i64]* %m6, i64 0, i64 %idxprom8, !dbg !21510, !ctir !2478
  %11 = load i64, i64* %arrayidx9, align 8, !dbg !21510, !tbaa !3285
  %12 = load i64, i64* %c, align 8, !dbg !21510, !tbaa !3285
  %add10 = add i64 %12, %11, !dbg !21510
  store i64 %add10, i64* %c, align 8, !dbg !21510, !tbaa !3285
  %13 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21510, !tbaa !2645
  %m11 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %13, i32 0, i32 0, !dbg !21510, !ctir !2518
  %14 = load i32, i32* %i, align 4, !dbg !21510, !tbaa !2632
  %add12 = add nsw i32 %14, 3, !dbg !21510
  %idxprom13 = sext i32 %add12 to i64, !dbg !21510
  %arrayidx14 = getelementptr inbounds [256 x i64], [256 x i64]* %m11, i64 0, i64 %idxprom13, !dbg !21510, !ctir !2478
  %15 = load i64, i64* %arrayidx14, align 8, !dbg !21510, !tbaa !3285
  %16 = load i64, i64* %d, align 8, !dbg !21510, !tbaa !3285
  %add15 = add i64 %16, %15, !dbg !21510
  store i64 %add15, i64* %d, align 8, !dbg !21510, !tbaa !3285
  %17 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21510, !tbaa !2645
  %m16 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %17, i32 0, i32 0, !dbg !21510, !ctir !2518
  %18 = load i32, i32* %i, align 4, !dbg !21510, !tbaa !2632
  %add17 = add nsw i32 %18, 4, !dbg !21510
  %idxprom18 = sext i32 %add17 to i64, !dbg !21510
  %arrayidx19 = getelementptr inbounds [256 x i64], [256 x i64]* %m16, i64 0, i64 %idxprom18, !dbg !21510, !ctir !2478
  %19 = load i64, i64* %arrayidx19, align 8, !dbg !21510, !tbaa !3285
  %20 = load i64, i64* %e, align 8, !dbg !21510, !tbaa !3285
  %add20 = add i64 %20, %19, !dbg !21510
  store i64 %add20, i64* %e, align 8, !dbg !21510, !tbaa !3285
  %21 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21510, !tbaa !2645
  %m21 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %21, i32 0, i32 0, !dbg !21510, !ctir !2518
  %22 = load i32, i32* %i, align 4, !dbg !21510, !tbaa !2632
  %add22 = add nsw i32 %22, 5, !dbg !21510
  %idxprom23 = sext i32 %add22 to i64, !dbg !21510
  %arrayidx24 = getelementptr inbounds [256 x i64], [256 x i64]* %m21, i64 0, i64 %idxprom23, !dbg !21510, !ctir !2478
  %23 = load i64, i64* %arrayidx24, align 8, !dbg !21510, !tbaa !3285
  %24 = load i64, i64* %f, align 8, !dbg !21510, !tbaa !3285
  %add25 = add i64 %24, %23, !dbg !21510
  store i64 %add25, i64* %f, align 8, !dbg !21510, !tbaa !3285
  %25 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21510, !tbaa !2645
  %m26 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %25, i32 0, i32 0, !dbg !21510, !ctir !2518
  %26 = load i32, i32* %i, align 4, !dbg !21510, !tbaa !2632
  %add27 = add nsw i32 %26, 6, !dbg !21510
  %idxprom28 = sext i32 %add27 to i64, !dbg !21510
  %arrayidx29 = getelementptr inbounds [256 x i64], [256 x i64]* %m26, i64 0, i64 %idxprom28, !dbg !21510, !ctir !2478
  %27 = load i64, i64* %arrayidx29, align 8, !dbg !21510, !tbaa !3285
  %28 = load i64, i64* %g, align 8, !dbg !21510, !tbaa !3285
  %add30 = add i64 %28, %27, !dbg !21510
  store i64 %add30, i64* %g, align 8, !dbg !21510, !tbaa !3285
  %29 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21510, !tbaa !2645
  %m31 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %29, i32 0, i32 0, !dbg !21510, !ctir !2518
  %30 = load i32, i32* %i, align 4, !dbg !21510, !tbaa !2632
  %add32 = add nsw i32 %30, 7, !dbg !21510
  %idxprom33 = sext i32 %add32 to i64, !dbg !21510
  %arrayidx34 = getelementptr inbounds [256 x i64], [256 x i64]* %m31, i64 0, i64 %idxprom33, !dbg !21510, !ctir !2478
  %31 = load i64, i64* %arrayidx34, align 8, !dbg !21510, !tbaa !3285
  %32 = load i64, i64* %h, align 8, !dbg !21510, !tbaa !3285
  %add35 = add i64 %32, %31, !dbg !21510
  store i64 %add35, i64* %h, align 8, !dbg !21510, !tbaa !3285
  %33 = load i64, i64* %e, align 8, !dbg !21512, !tbaa !3285
  %34 = load i64, i64* %a, align 8, !dbg !21512, !tbaa !3285
  %sub = sub i64 %34, %33, !dbg !21512
  store i64 %sub, i64* %a, align 8, !dbg !21512, !tbaa !3285
  %35 = load i64, i64* %h, align 8, !dbg !21512, !tbaa !3285
  %call = call i64 @just(i64 %35), !dbg !21512
  %shr = lshr i64 %call, 9, !dbg !21512
  %36 = load i64, i64* %f, align 8, !dbg !21512, !tbaa !3285
  %xor = xor i64 %36, %shr, !dbg !21512
  store i64 %xor, i64* %f, align 8, !dbg !21512, !tbaa !3285
  %37 = load i64, i64* %a, align 8, !dbg !21512, !tbaa !3285
  %38 = load i64, i64* %h, align 8, !dbg !21512, !tbaa !3285
  %add36 = add i64 %38, %37, !dbg !21512
  store i64 %add36, i64* %h, align 8, !dbg !21512, !tbaa !3285
  %39 = load i64, i64* %f, align 8, !dbg !21512, !tbaa !3285
  %40 = load i64, i64* %b, align 8, !dbg !21512, !tbaa !3285
  %sub37 = sub i64 %40, %39, !dbg !21512
  store i64 %sub37, i64* %b, align 8, !dbg !21512, !tbaa !3285
  %41 = load i64, i64* %a, align 8, !dbg !21512, !tbaa !3285
  %shl = shl i64 %41, 9, !dbg !21512
  %42 = load i64, i64* %g, align 8, !dbg !21512, !tbaa !3285
  %xor38 = xor i64 %42, %shl, !dbg !21512
  store i64 %xor38, i64* %g, align 8, !dbg !21512, !tbaa !3285
  %43 = load i64, i64* %b, align 8, !dbg !21512, !tbaa !3285
  %44 = load i64, i64* %a, align 8, !dbg !21512, !tbaa !3285
  %add39 = add i64 %44, %43, !dbg !21512
  store i64 %add39, i64* %a, align 8, !dbg !21512, !tbaa !3285
  %45 = load i64, i64* %g, align 8, !dbg !21512, !tbaa !3285
  %46 = load i64, i64* %c, align 8, !dbg !21512, !tbaa !3285
  %sub40 = sub i64 %46, %45, !dbg !21512
  store i64 %sub40, i64* %c, align 8, !dbg !21512, !tbaa !3285
  %47 = load i64, i64* %b, align 8, !dbg !21512, !tbaa !3285
  %call41 = call i64 @just(i64 %47), !dbg !21512
  %shr42 = lshr i64 %call41, 23, !dbg !21512
  %48 = load i64, i64* %h, align 8, !dbg !21512, !tbaa !3285
  %xor43 = xor i64 %48, %shr42, !dbg !21512
  store i64 %xor43, i64* %h, align 8, !dbg !21512, !tbaa !3285
  %49 = load i64, i64* %c, align 8, !dbg !21512, !tbaa !3285
  %50 = load i64, i64* %b, align 8, !dbg !21512, !tbaa !3285
  %add44 = add i64 %50, %49, !dbg !21512
  store i64 %add44, i64* %b, align 8, !dbg !21512, !tbaa !3285
  %51 = load i64, i64* %h, align 8, !dbg !21512, !tbaa !3285
  %52 = load i64, i64* %d, align 8, !dbg !21512, !tbaa !3285
  %sub45 = sub i64 %52, %51, !dbg !21512
  store i64 %sub45, i64* %d, align 8, !dbg !21512, !tbaa !3285
  %53 = load i64, i64* %c, align 8, !dbg !21512, !tbaa !3285
  %shl46 = shl i64 %53, 15, !dbg !21512
  %54 = load i64, i64* %a, align 8, !dbg !21512, !tbaa !3285
  %xor47 = xor i64 %54, %shl46, !dbg !21512
  store i64 %xor47, i64* %a, align 8, !dbg !21512, !tbaa !3285
  %55 = load i64, i64* %d, align 8, !dbg !21512, !tbaa !3285
  %56 = load i64, i64* %c, align 8, !dbg !21512, !tbaa !3285
  %add48 = add i64 %56, %55, !dbg !21512
  store i64 %add48, i64* %c, align 8, !dbg !21512, !tbaa !3285
  %57 = load i64, i64* %a, align 8, !dbg !21512, !tbaa !3285
  %58 = load i64, i64* %e, align 8, !dbg !21512, !tbaa !3285
  %sub49 = sub i64 %58, %57, !dbg !21512
  store i64 %sub49, i64* %e, align 8, !dbg !21512, !tbaa !3285
  %59 = load i64, i64* %d, align 8, !dbg !21512, !tbaa !3285
  %call50 = call i64 @just(i64 %59), !dbg !21512
  %shr51 = lshr i64 %call50, 14, !dbg !21512
  %60 = load i64, i64* %b, align 8, !dbg !21512, !tbaa !3285
  %xor52 = xor i64 %60, %shr51, !dbg !21512
  store i64 %xor52, i64* %b, align 8, !dbg !21512, !tbaa !3285
  %61 = load i64, i64* %e, align 8, !dbg !21512, !tbaa !3285
  %62 = load i64, i64* %d, align 8, !dbg !21512, !tbaa !3285
  %add53 = add i64 %62, %61, !dbg !21512
  store i64 %add53, i64* %d, align 8, !dbg !21512, !tbaa !3285
  %63 = load i64, i64* %b, align 8, !dbg !21512, !tbaa !3285
  %64 = load i64, i64* %f, align 8, !dbg !21512, !tbaa !3285
  %sub54 = sub i64 %64, %63, !dbg !21512
  store i64 %sub54, i64* %f, align 8, !dbg !21512, !tbaa !3285
  %65 = load i64, i64* %e, align 8, !dbg !21512, !tbaa !3285
  %shl55 = shl i64 %65, 20, !dbg !21512
  %66 = load i64, i64* %c, align 8, !dbg !21512, !tbaa !3285
  %xor56 = xor i64 %66, %shl55, !dbg !21512
  store i64 %xor56, i64* %c, align 8, !dbg !21512, !tbaa !3285
  %67 = load i64, i64* %f, align 8, !dbg !21512, !tbaa !3285
  %68 = load i64, i64* %e, align 8, !dbg !21512, !tbaa !3285
  %add57 = add i64 %68, %67, !dbg !21512
  store i64 %add57, i64* %e, align 8, !dbg !21512, !tbaa !3285
  %69 = load i64, i64* %c, align 8, !dbg !21512, !tbaa !3285
  %70 = load i64, i64* %g, align 8, !dbg !21512, !tbaa !3285
  %sub58 = sub i64 %70, %69, !dbg !21512
  store i64 %sub58, i64* %g, align 8, !dbg !21512, !tbaa !3285
  %71 = load i64, i64* %f, align 8, !dbg !21512, !tbaa !3285
  %call59 = call i64 @just(i64 %71), !dbg !21512
  %shr60 = lshr i64 %call59, 17, !dbg !21512
  %72 = load i64, i64* %d, align 8, !dbg !21512, !tbaa !3285
  %xor61 = xor i64 %72, %shr60, !dbg !21512
  store i64 %xor61, i64* %d, align 8, !dbg !21512, !tbaa !3285
  %73 = load i64, i64* %g, align 8, !dbg !21512, !tbaa !3285
  %74 = load i64, i64* %f, align 8, !dbg !21512, !tbaa !3285
  %add62 = add i64 %74, %73, !dbg !21512
  store i64 %add62, i64* %f, align 8, !dbg !21512, !tbaa !3285
  %75 = load i64, i64* %d, align 8, !dbg !21512, !tbaa !3285
  %76 = load i64, i64* %h, align 8, !dbg !21512, !tbaa !3285
  %sub63 = sub i64 %76, %75, !dbg !21512
  store i64 %sub63, i64* %h, align 8, !dbg !21512, !tbaa !3285
  %77 = load i64, i64* %g, align 8, !dbg !21512, !tbaa !3285
  %shl64 = shl i64 %77, 14, !dbg !21512
  %78 = load i64, i64* %e, align 8, !dbg !21512, !tbaa !3285
  %xor65 = xor i64 %78, %shl64, !dbg !21512
  store i64 %xor65, i64* %e, align 8, !dbg !21512, !tbaa !3285
  %79 = load i64, i64* %h, align 8, !dbg !21512, !tbaa !3285
  %80 = load i64, i64* %g, align 8, !dbg !21512, !tbaa !3285
  %add66 = add i64 %80, %79, !dbg !21512
  store i64 %add66, i64* %g, align 8, !dbg !21512, !tbaa !3285
  %81 = load i64, i64* %a, align 8, !dbg !21510, !tbaa !3285
  %82 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21510, !tbaa !2645
  %m67 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %82, i32 0, i32 0, !dbg !21510, !ctir !2518
  %83 = load i32, i32* %i, align 4, !dbg !21510, !tbaa !2632
  %idxprom68 = sext i32 %83 to i64, !dbg !21510
  %arrayidx69 = getelementptr inbounds [256 x i64], [256 x i64]* %m67, i64 0, i64 %idxprom68, !dbg !21510, !ctir !2478
  store i64 %81, i64* %arrayidx69, align 8, !dbg !21510, !tbaa !3285
  %84 = load i64, i64* %b, align 8, !dbg !21510, !tbaa !3285
  %85 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21510, !tbaa !2645
  %m70 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %85, i32 0, i32 0, !dbg !21510, !ctir !2518
  %86 = load i32, i32* %i, align 4, !dbg !21510, !tbaa !2632
  %add71 = add nsw i32 %86, 1, !dbg !21510
  %idxprom72 = sext i32 %add71 to i64, !dbg !21510
  %arrayidx73 = getelementptr inbounds [256 x i64], [256 x i64]* %m70, i64 0, i64 %idxprom72, !dbg !21510, !ctir !2478
  store i64 %84, i64* %arrayidx73, align 8, !dbg !21510, !tbaa !3285
  %87 = load i64, i64* %c, align 8, !dbg !21510, !tbaa !3285
  %88 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21510, !tbaa !2645
  %m74 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %88, i32 0, i32 0, !dbg !21510, !ctir !2518
  %89 = load i32, i32* %i, align 4, !dbg !21510, !tbaa !2632
  %add75 = add nsw i32 %89, 2, !dbg !21510
  %idxprom76 = sext i32 %add75 to i64, !dbg !21510
  %arrayidx77 = getelementptr inbounds [256 x i64], [256 x i64]* %m74, i64 0, i64 %idxprom76, !dbg !21510, !ctir !2478
  store i64 %87, i64* %arrayidx77, align 8, !dbg !21510, !tbaa !3285
  %90 = load i64, i64* %d, align 8, !dbg !21510, !tbaa !3285
  %91 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21510, !tbaa !2645
  %m78 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %91, i32 0, i32 0, !dbg !21510, !ctir !2518
  %92 = load i32, i32* %i, align 4, !dbg !21510, !tbaa !2632
  %add79 = add nsw i32 %92, 3, !dbg !21510
  %idxprom80 = sext i32 %add79 to i64, !dbg !21510
  %arrayidx81 = getelementptr inbounds [256 x i64], [256 x i64]* %m78, i64 0, i64 %idxprom80, !dbg !21510, !ctir !2478
  store i64 %90, i64* %arrayidx81, align 8, !dbg !21510, !tbaa !3285
  %93 = load i64, i64* %e, align 8, !dbg !21510, !tbaa !3285
  %94 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21510, !tbaa !2645
  %m82 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %94, i32 0, i32 0, !dbg !21510, !ctir !2518
  %95 = load i32, i32* %i, align 4, !dbg !21510, !tbaa !2632
  %add83 = add nsw i32 %95, 4, !dbg !21510
  %idxprom84 = sext i32 %add83 to i64, !dbg !21510
  %arrayidx85 = getelementptr inbounds [256 x i64], [256 x i64]* %m82, i64 0, i64 %idxprom84, !dbg !21510, !ctir !2478
  store i64 %93, i64* %arrayidx85, align 8, !dbg !21510, !tbaa !3285
  %96 = load i64, i64* %f, align 8, !dbg !21510, !tbaa !3285
  %97 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21510, !tbaa !2645
  %m86 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %97, i32 0, i32 0, !dbg !21510, !ctir !2518
  %98 = load i32, i32* %i, align 4, !dbg !21510, !tbaa !2632
  %add87 = add nsw i32 %98, 5, !dbg !21510
  %idxprom88 = sext i32 %add87 to i64, !dbg !21510
  %arrayidx89 = getelementptr inbounds [256 x i64], [256 x i64]* %m86, i64 0, i64 %idxprom88, !dbg !21510, !ctir !2478
  store i64 %96, i64* %arrayidx89, align 8, !dbg !21510, !tbaa !3285
  %99 = load i64, i64* %g, align 8, !dbg !21510, !tbaa !3285
  %100 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21510, !tbaa !2645
  %m90 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %100, i32 0, i32 0, !dbg !21510, !ctir !2518
  %101 = load i32, i32* %i, align 4, !dbg !21510, !tbaa !2632
  %add91 = add nsw i32 %101, 6, !dbg !21510
  %idxprom92 = sext i32 %add91 to i64, !dbg !21510
  %arrayidx93 = getelementptr inbounds [256 x i64], [256 x i64]* %m90, i64 0, i64 %idxprom92, !dbg !21510, !ctir !2478
  store i64 %99, i64* %arrayidx93, align 8, !dbg !21510, !tbaa !3285
  %102 = load i64, i64* %h, align 8, !dbg !21510, !tbaa !3285
  %103 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21510, !tbaa !2645
  %m94 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %103, i32 0, i32 0, !dbg !21510, !ctir !2518
  %104 = load i32, i32* %i, align 4, !dbg !21510, !tbaa !2632
  %add95 = add nsw i32 %104, 7, !dbg !21510
  %idxprom96 = sext i32 %add95 to i64, !dbg !21510
  %arrayidx97 = getelementptr inbounds [256 x i64], [256 x i64]* %m94, i64 0, i64 %idxprom96, !dbg !21510, !ctir !2478
  store i64 %102, i64* %arrayidx97, align 8, !dbg !21510, !tbaa !3285
  br label %for.inc, !dbg !21510

for.inc:                                          ; preds = %for.body
  %105 = load i32, i32* %i, align 4, !dbg !21508, !tbaa !2632
  %add98 = add nsw i32 %105, 8, !dbg !21508
  store i32 %add98, i32* %i, align 4, !dbg !21508, !tbaa !2632
  br label %for.cond, !dbg !21508, !llvm.loop !21514

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i99, metadata !21515, metadata !DIExpression()), !dbg !21517
  store i32 0, i32* %i99, align 4, !dbg !21518, !tbaa !2632
  br label %for.cond100, !dbg !21518

for.cond100:                                      ; preds = %for.inc209, %for.end
  %106 = load i32, i32* %i99, align 4, !dbg !21520, !tbaa !2632
  %cmp101 = icmp slt i32 %106, 256, !dbg !21520
  br i1 %cmp101, label %for.body102, label %for.end211, !dbg !21518

for.body102:                                      ; preds = %for.cond100
  %107 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21522, !tbaa !2645
  %m103 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %107, i32 0, i32 0, !dbg !21522, !ctir !2518
  %108 = load i32, i32* %i99, align 4, !dbg !21522, !tbaa !2632
  %idxprom104 = sext i32 %108 to i64, !dbg !21522
  %arrayidx105 = getelementptr inbounds [256 x i64], [256 x i64]* %m103, i64 0, i64 %idxprom104, !dbg !21522, !ctir !2478
  %109 = load i64, i64* %arrayidx105, align 8, !dbg !21522, !tbaa !3285
  %110 = load i64, i64* %a, align 8, !dbg !21522, !tbaa !3285
  %add106 = add i64 %110, %109, !dbg !21522
  store i64 %add106, i64* %a, align 8, !dbg !21522, !tbaa !3285
  %111 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21522, !tbaa !2645
  %m107 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %111, i32 0, i32 0, !dbg !21522, !ctir !2518
  %112 = load i32, i32* %i99, align 4, !dbg !21522, !tbaa !2632
  %add108 = add nsw i32 %112, 1, !dbg !21522
  %idxprom109 = sext i32 %add108 to i64, !dbg !21522
  %arrayidx110 = getelementptr inbounds [256 x i64], [256 x i64]* %m107, i64 0, i64 %idxprom109, !dbg !21522, !ctir !2478
  %113 = load i64, i64* %arrayidx110, align 8, !dbg !21522, !tbaa !3285
  %114 = load i64, i64* %b, align 8, !dbg !21522, !tbaa !3285
  %add111 = add i64 %114, %113, !dbg !21522
  store i64 %add111, i64* %b, align 8, !dbg !21522, !tbaa !3285
  %115 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21522, !tbaa !2645
  %m112 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %115, i32 0, i32 0, !dbg !21522, !ctir !2518
  %116 = load i32, i32* %i99, align 4, !dbg !21522, !tbaa !2632
  %add113 = add nsw i32 %116, 2, !dbg !21522
  %idxprom114 = sext i32 %add113 to i64, !dbg !21522
  %arrayidx115 = getelementptr inbounds [256 x i64], [256 x i64]* %m112, i64 0, i64 %idxprom114, !dbg !21522, !ctir !2478
  %117 = load i64, i64* %arrayidx115, align 8, !dbg !21522, !tbaa !3285
  %118 = load i64, i64* %c, align 8, !dbg !21522, !tbaa !3285
  %add116 = add i64 %118, %117, !dbg !21522
  store i64 %add116, i64* %c, align 8, !dbg !21522, !tbaa !3285
  %119 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21522, !tbaa !2645
  %m117 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %119, i32 0, i32 0, !dbg !21522, !ctir !2518
  %120 = load i32, i32* %i99, align 4, !dbg !21522, !tbaa !2632
  %add118 = add nsw i32 %120, 3, !dbg !21522
  %idxprom119 = sext i32 %add118 to i64, !dbg !21522
  %arrayidx120 = getelementptr inbounds [256 x i64], [256 x i64]* %m117, i64 0, i64 %idxprom119, !dbg !21522, !ctir !2478
  %121 = load i64, i64* %arrayidx120, align 8, !dbg !21522, !tbaa !3285
  %122 = load i64, i64* %d, align 8, !dbg !21522, !tbaa !3285
  %add121 = add i64 %122, %121, !dbg !21522
  store i64 %add121, i64* %d, align 8, !dbg !21522, !tbaa !3285
  %123 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21522, !tbaa !2645
  %m122 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %123, i32 0, i32 0, !dbg !21522, !ctir !2518
  %124 = load i32, i32* %i99, align 4, !dbg !21522, !tbaa !2632
  %add123 = add nsw i32 %124, 4, !dbg !21522
  %idxprom124 = sext i32 %add123 to i64, !dbg !21522
  %arrayidx125 = getelementptr inbounds [256 x i64], [256 x i64]* %m122, i64 0, i64 %idxprom124, !dbg !21522, !ctir !2478
  %125 = load i64, i64* %arrayidx125, align 8, !dbg !21522, !tbaa !3285
  %126 = load i64, i64* %e, align 8, !dbg !21522, !tbaa !3285
  %add126 = add i64 %126, %125, !dbg !21522
  store i64 %add126, i64* %e, align 8, !dbg !21522, !tbaa !3285
  %127 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21522, !tbaa !2645
  %m127 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %127, i32 0, i32 0, !dbg !21522, !ctir !2518
  %128 = load i32, i32* %i99, align 4, !dbg !21522, !tbaa !2632
  %add128 = add nsw i32 %128, 5, !dbg !21522
  %idxprom129 = sext i32 %add128 to i64, !dbg !21522
  %arrayidx130 = getelementptr inbounds [256 x i64], [256 x i64]* %m127, i64 0, i64 %idxprom129, !dbg !21522, !ctir !2478
  %129 = load i64, i64* %arrayidx130, align 8, !dbg !21522, !tbaa !3285
  %130 = load i64, i64* %f, align 8, !dbg !21522, !tbaa !3285
  %add131 = add i64 %130, %129, !dbg !21522
  store i64 %add131, i64* %f, align 8, !dbg !21522, !tbaa !3285
  %131 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21522, !tbaa !2645
  %m132 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %131, i32 0, i32 0, !dbg !21522, !ctir !2518
  %132 = load i32, i32* %i99, align 4, !dbg !21522, !tbaa !2632
  %add133 = add nsw i32 %132, 6, !dbg !21522
  %idxprom134 = sext i32 %add133 to i64, !dbg !21522
  %arrayidx135 = getelementptr inbounds [256 x i64], [256 x i64]* %m132, i64 0, i64 %idxprom134, !dbg !21522, !ctir !2478
  %133 = load i64, i64* %arrayidx135, align 8, !dbg !21522, !tbaa !3285
  %134 = load i64, i64* %g, align 8, !dbg !21522, !tbaa !3285
  %add136 = add i64 %134, %133, !dbg !21522
  store i64 %add136, i64* %g, align 8, !dbg !21522, !tbaa !3285
  %135 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21522, !tbaa !2645
  %m137 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %135, i32 0, i32 0, !dbg !21522, !ctir !2518
  %136 = load i32, i32* %i99, align 4, !dbg !21522, !tbaa !2632
  %add138 = add nsw i32 %136, 7, !dbg !21522
  %idxprom139 = sext i32 %add138 to i64, !dbg !21522
  %arrayidx140 = getelementptr inbounds [256 x i64], [256 x i64]* %m137, i64 0, i64 %idxprom139, !dbg !21522, !ctir !2478
  %137 = load i64, i64* %arrayidx140, align 8, !dbg !21522, !tbaa !3285
  %138 = load i64, i64* %h, align 8, !dbg !21522, !tbaa !3285
  %add141 = add i64 %138, %137, !dbg !21522
  store i64 %add141, i64* %h, align 8, !dbg !21522, !tbaa !3285
  %139 = load i64, i64* %e, align 8, !dbg !21524, !tbaa !3285
  %140 = load i64, i64* %a, align 8, !dbg !21524, !tbaa !3285
  %sub142 = sub i64 %140, %139, !dbg !21524
  store i64 %sub142, i64* %a, align 8, !dbg !21524, !tbaa !3285
  %141 = load i64, i64* %h, align 8, !dbg !21524, !tbaa !3285
  %call143 = call i64 @just(i64 %141), !dbg !21524
  %shr144 = lshr i64 %call143, 9, !dbg !21524
  %142 = load i64, i64* %f, align 8, !dbg !21524, !tbaa !3285
  %xor145 = xor i64 %142, %shr144, !dbg !21524
  store i64 %xor145, i64* %f, align 8, !dbg !21524, !tbaa !3285
  %143 = load i64, i64* %a, align 8, !dbg !21524, !tbaa !3285
  %144 = load i64, i64* %h, align 8, !dbg !21524, !tbaa !3285
  %add146 = add i64 %144, %143, !dbg !21524
  store i64 %add146, i64* %h, align 8, !dbg !21524, !tbaa !3285
  %145 = load i64, i64* %f, align 8, !dbg !21524, !tbaa !3285
  %146 = load i64, i64* %b, align 8, !dbg !21524, !tbaa !3285
  %sub147 = sub i64 %146, %145, !dbg !21524
  store i64 %sub147, i64* %b, align 8, !dbg !21524, !tbaa !3285
  %147 = load i64, i64* %a, align 8, !dbg !21524, !tbaa !3285
  %shl148 = shl i64 %147, 9, !dbg !21524
  %148 = load i64, i64* %g, align 8, !dbg !21524, !tbaa !3285
  %xor149 = xor i64 %148, %shl148, !dbg !21524
  store i64 %xor149, i64* %g, align 8, !dbg !21524, !tbaa !3285
  %149 = load i64, i64* %b, align 8, !dbg !21524, !tbaa !3285
  %150 = load i64, i64* %a, align 8, !dbg !21524, !tbaa !3285
  %add150 = add i64 %150, %149, !dbg !21524
  store i64 %add150, i64* %a, align 8, !dbg !21524, !tbaa !3285
  %151 = load i64, i64* %g, align 8, !dbg !21524, !tbaa !3285
  %152 = load i64, i64* %c, align 8, !dbg !21524, !tbaa !3285
  %sub151 = sub i64 %152, %151, !dbg !21524
  store i64 %sub151, i64* %c, align 8, !dbg !21524, !tbaa !3285
  %153 = load i64, i64* %b, align 8, !dbg !21524, !tbaa !3285
  %call152 = call i64 @just(i64 %153), !dbg !21524
  %shr153 = lshr i64 %call152, 23, !dbg !21524
  %154 = load i64, i64* %h, align 8, !dbg !21524, !tbaa !3285
  %xor154 = xor i64 %154, %shr153, !dbg !21524
  store i64 %xor154, i64* %h, align 8, !dbg !21524, !tbaa !3285
  %155 = load i64, i64* %c, align 8, !dbg !21524, !tbaa !3285
  %156 = load i64, i64* %b, align 8, !dbg !21524, !tbaa !3285
  %add155 = add i64 %156, %155, !dbg !21524
  store i64 %add155, i64* %b, align 8, !dbg !21524, !tbaa !3285
  %157 = load i64, i64* %h, align 8, !dbg !21524, !tbaa !3285
  %158 = load i64, i64* %d, align 8, !dbg !21524, !tbaa !3285
  %sub156 = sub i64 %158, %157, !dbg !21524
  store i64 %sub156, i64* %d, align 8, !dbg !21524, !tbaa !3285
  %159 = load i64, i64* %c, align 8, !dbg !21524, !tbaa !3285
  %shl157 = shl i64 %159, 15, !dbg !21524
  %160 = load i64, i64* %a, align 8, !dbg !21524, !tbaa !3285
  %xor158 = xor i64 %160, %shl157, !dbg !21524
  store i64 %xor158, i64* %a, align 8, !dbg !21524, !tbaa !3285
  %161 = load i64, i64* %d, align 8, !dbg !21524, !tbaa !3285
  %162 = load i64, i64* %c, align 8, !dbg !21524, !tbaa !3285
  %add159 = add i64 %162, %161, !dbg !21524
  store i64 %add159, i64* %c, align 8, !dbg !21524, !tbaa !3285
  %163 = load i64, i64* %a, align 8, !dbg !21524, !tbaa !3285
  %164 = load i64, i64* %e, align 8, !dbg !21524, !tbaa !3285
  %sub160 = sub i64 %164, %163, !dbg !21524
  store i64 %sub160, i64* %e, align 8, !dbg !21524, !tbaa !3285
  %165 = load i64, i64* %d, align 8, !dbg !21524, !tbaa !3285
  %call161 = call i64 @just(i64 %165), !dbg !21524
  %shr162 = lshr i64 %call161, 14, !dbg !21524
  %166 = load i64, i64* %b, align 8, !dbg !21524, !tbaa !3285
  %xor163 = xor i64 %166, %shr162, !dbg !21524
  store i64 %xor163, i64* %b, align 8, !dbg !21524, !tbaa !3285
  %167 = load i64, i64* %e, align 8, !dbg !21524, !tbaa !3285
  %168 = load i64, i64* %d, align 8, !dbg !21524, !tbaa !3285
  %add164 = add i64 %168, %167, !dbg !21524
  store i64 %add164, i64* %d, align 8, !dbg !21524, !tbaa !3285
  %169 = load i64, i64* %b, align 8, !dbg !21524, !tbaa !3285
  %170 = load i64, i64* %f, align 8, !dbg !21524, !tbaa !3285
  %sub165 = sub i64 %170, %169, !dbg !21524
  store i64 %sub165, i64* %f, align 8, !dbg !21524, !tbaa !3285
  %171 = load i64, i64* %e, align 8, !dbg !21524, !tbaa !3285
  %shl166 = shl i64 %171, 20, !dbg !21524
  %172 = load i64, i64* %c, align 8, !dbg !21524, !tbaa !3285
  %xor167 = xor i64 %172, %shl166, !dbg !21524
  store i64 %xor167, i64* %c, align 8, !dbg !21524, !tbaa !3285
  %173 = load i64, i64* %f, align 8, !dbg !21524, !tbaa !3285
  %174 = load i64, i64* %e, align 8, !dbg !21524, !tbaa !3285
  %add168 = add i64 %174, %173, !dbg !21524
  store i64 %add168, i64* %e, align 8, !dbg !21524, !tbaa !3285
  %175 = load i64, i64* %c, align 8, !dbg !21524, !tbaa !3285
  %176 = load i64, i64* %g, align 8, !dbg !21524, !tbaa !3285
  %sub169 = sub i64 %176, %175, !dbg !21524
  store i64 %sub169, i64* %g, align 8, !dbg !21524, !tbaa !3285
  %177 = load i64, i64* %f, align 8, !dbg !21524, !tbaa !3285
  %call170 = call i64 @just(i64 %177), !dbg !21524
  %shr171 = lshr i64 %call170, 17, !dbg !21524
  %178 = load i64, i64* %d, align 8, !dbg !21524, !tbaa !3285
  %xor172 = xor i64 %178, %shr171, !dbg !21524
  store i64 %xor172, i64* %d, align 8, !dbg !21524, !tbaa !3285
  %179 = load i64, i64* %g, align 8, !dbg !21524, !tbaa !3285
  %180 = load i64, i64* %f, align 8, !dbg !21524, !tbaa !3285
  %add173 = add i64 %180, %179, !dbg !21524
  store i64 %add173, i64* %f, align 8, !dbg !21524, !tbaa !3285
  %181 = load i64, i64* %d, align 8, !dbg !21524, !tbaa !3285
  %182 = load i64, i64* %h, align 8, !dbg !21524, !tbaa !3285
  %sub174 = sub i64 %182, %181, !dbg !21524
  store i64 %sub174, i64* %h, align 8, !dbg !21524, !tbaa !3285
  %183 = load i64, i64* %g, align 8, !dbg !21524, !tbaa !3285
  %shl175 = shl i64 %183, 14, !dbg !21524
  %184 = load i64, i64* %e, align 8, !dbg !21524, !tbaa !3285
  %xor176 = xor i64 %184, %shl175, !dbg !21524
  store i64 %xor176, i64* %e, align 8, !dbg !21524, !tbaa !3285
  %185 = load i64, i64* %h, align 8, !dbg !21524, !tbaa !3285
  %186 = load i64, i64* %g, align 8, !dbg !21524, !tbaa !3285
  %add177 = add i64 %186, %185, !dbg !21524
  store i64 %add177, i64* %g, align 8, !dbg !21524, !tbaa !3285
  %187 = load i64, i64* %a, align 8, !dbg !21522, !tbaa !3285
  %188 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21522, !tbaa !2645
  %m178 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %188, i32 0, i32 0, !dbg !21522, !ctir !2518
  %189 = load i32, i32* %i99, align 4, !dbg !21522, !tbaa !2632
  %idxprom179 = sext i32 %189 to i64, !dbg !21522
  %arrayidx180 = getelementptr inbounds [256 x i64], [256 x i64]* %m178, i64 0, i64 %idxprom179, !dbg !21522, !ctir !2478
  store i64 %187, i64* %arrayidx180, align 8, !dbg !21522, !tbaa !3285
  %190 = load i64, i64* %b, align 8, !dbg !21522, !tbaa !3285
  %191 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21522, !tbaa !2645
  %m181 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %191, i32 0, i32 0, !dbg !21522, !ctir !2518
  %192 = load i32, i32* %i99, align 4, !dbg !21522, !tbaa !2632
  %add182 = add nsw i32 %192, 1, !dbg !21522
  %idxprom183 = sext i32 %add182 to i64, !dbg !21522
  %arrayidx184 = getelementptr inbounds [256 x i64], [256 x i64]* %m181, i64 0, i64 %idxprom183, !dbg !21522, !ctir !2478
  store i64 %190, i64* %arrayidx184, align 8, !dbg !21522, !tbaa !3285
  %193 = load i64, i64* %c, align 8, !dbg !21522, !tbaa !3285
  %194 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21522, !tbaa !2645
  %m185 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %194, i32 0, i32 0, !dbg !21522, !ctir !2518
  %195 = load i32, i32* %i99, align 4, !dbg !21522, !tbaa !2632
  %add186 = add nsw i32 %195, 2, !dbg !21522
  %idxprom187 = sext i32 %add186 to i64, !dbg !21522
  %arrayidx188 = getelementptr inbounds [256 x i64], [256 x i64]* %m185, i64 0, i64 %idxprom187, !dbg !21522, !ctir !2478
  store i64 %193, i64* %arrayidx188, align 8, !dbg !21522, !tbaa !3285
  %196 = load i64, i64* %d, align 8, !dbg !21522, !tbaa !3285
  %197 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21522, !tbaa !2645
  %m189 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %197, i32 0, i32 0, !dbg !21522, !ctir !2518
  %198 = load i32, i32* %i99, align 4, !dbg !21522, !tbaa !2632
  %add190 = add nsw i32 %198, 3, !dbg !21522
  %idxprom191 = sext i32 %add190 to i64, !dbg !21522
  %arrayidx192 = getelementptr inbounds [256 x i64], [256 x i64]* %m189, i64 0, i64 %idxprom191, !dbg !21522, !ctir !2478
  store i64 %196, i64* %arrayidx192, align 8, !dbg !21522, !tbaa !3285
  %199 = load i64, i64* %e, align 8, !dbg !21522, !tbaa !3285
  %200 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21522, !tbaa !2645
  %m193 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %200, i32 0, i32 0, !dbg !21522, !ctir !2518
  %201 = load i32, i32* %i99, align 4, !dbg !21522, !tbaa !2632
  %add194 = add nsw i32 %201, 4, !dbg !21522
  %idxprom195 = sext i32 %add194 to i64, !dbg !21522
  %arrayidx196 = getelementptr inbounds [256 x i64], [256 x i64]* %m193, i64 0, i64 %idxprom195, !dbg !21522, !ctir !2478
  store i64 %199, i64* %arrayidx196, align 8, !dbg !21522, !tbaa !3285
  %202 = load i64, i64* %f, align 8, !dbg !21522, !tbaa !3285
  %203 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21522, !tbaa !2645
  %m197 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %203, i32 0, i32 0, !dbg !21522, !ctir !2518
  %204 = load i32, i32* %i99, align 4, !dbg !21522, !tbaa !2632
  %add198 = add nsw i32 %204, 5, !dbg !21522
  %idxprom199 = sext i32 %add198 to i64, !dbg !21522
  %arrayidx200 = getelementptr inbounds [256 x i64], [256 x i64]* %m197, i64 0, i64 %idxprom199, !dbg !21522, !ctir !2478
  store i64 %202, i64* %arrayidx200, align 8, !dbg !21522, !tbaa !3285
  %205 = load i64, i64* %g, align 8, !dbg !21522, !tbaa !3285
  %206 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21522, !tbaa !2645
  %m201 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %206, i32 0, i32 0, !dbg !21522, !ctir !2518
  %207 = load i32, i32* %i99, align 4, !dbg !21522, !tbaa !2632
  %add202 = add nsw i32 %207, 6, !dbg !21522
  %idxprom203 = sext i32 %add202 to i64, !dbg !21522
  %arrayidx204 = getelementptr inbounds [256 x i64], [256 x i64]* %m201, i64 0, i64 %idxprom203, !dbg !21522, !ctir !2478
  store i64 %205, i64* %arrayidx204, align 8, !dbg !21522, !tbaa !3285
  %208 = load i64, i64* %h, align 8, !dbg !21522, !tbaa !3285
  %209 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21522, !tbaa !2645
  %m205 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %209, i32 0, i32 0, !dbg !21522, !ctir !2518
  %210 = load i32, i32* %i99, align 4, !dbg !21522, !tbaa !2632
  %add206 = add nsw i32 %210, 7, !dbg !21522
  %idxprom207 = sext i32 %add206 to i64, !dbg !21522
  %arrayidx208 = getelementptr inbounds [256 x i64], [256 x i64]* %m205, i64 0, i64 %idxprom207, !dbg !21522, !ctir !2478
  store i64 %208, i64* %arrayidx208, align 8, !dbg !21522, !tbaa !3285
  br label %for.inc209, !dbg !21522

for.inc209:                                       ; preds = %for.body102
  %211 = load i32, i32* %i99, align 4, !dbg !21520, !tbaa !2632
  %add210 = add nsw i32 %211, 8, !dbg !21520
  store i32 %add210, i32* %i99, align 4, !dbg !21520, !tbaa !2632
  br label %for.cond100, !dbg !21520, !llvm.loop !21526

for.end211:                                       ; preds = %for.cond100
  %212 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21527, !tbaa !2645
  %c212 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %212, i32 0, i32 3, !dbg !21528, !ctir !2518
  store i64 0, i64* %c212, align 8, !dbg !21529, !tbaa !21378, !ctir !2479
  %213 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21530, !tbaa !2645
  %b213 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %213, i32 0, i32 2, !dbg !21531, !ctir !2518
  store i64 0, i64* %b213, align 8, !dbg !21532, !tbaa !21374, !ctir !2479
  %214 = load %struct.isaac_state*, %struct.isaac_state** %s.addr, align 8, !dbg !21533, !tbaa !2645
  %a214 = getelementptr inbounds %struct.isaac_state, %struct.isaac_state* %214, i32 0, i32 1, !dbg !21534, !ctir !2518
  store i64 0, i64* %a214, align 8, !dbg !21535, !tbaa !21369, !ctir !2479
  ret void, !dbg !21536
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @dup_safer(i32 %fd) #4 !dbg !21537 !ctir !1784 {
entry:
  %fd.addr = alloca i32, align 4
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !21539, metadata !DIExpression()), !dbg !21540
  %0 = load i32, i32* %fd.addr, align 4, !dbg !21541, !tbaa !2632
  %call = call i32 (i32, i32, ...) @rpl_fcntl(i32 %0, i32 0, i32 3), !dbg !21542
  ret i32 %call, !dbg !21543
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @xsum(i64 %size1, i64 %size2) #10 !dbg !21544 !ctir !2538 {
entry:
  %size1.addr = alloca i64, align 8
  %size2.addr = alloca i64, align 8
  %sum = alloca i64, align 8, !ctir !55
  store i64 %size1, i64* %size1.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %size1.addr, metadata !21546, metadata !DIExpression()), !dbg !21547
  store i64 %size2, i64* %size2.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %size2.addr, metadata !21548, metadata !DIExpression()), !dbg !21549
  call void @llvm.dbg.declare(metadata i64* %sum, metadata !21550, metadata !DIExpression()), !dbg !21551
  %0 = load i64, i64* %size1.addr, align 8, !dbg !21552, !tbaa !3285
  %1 = load i64, i64* %size2.addr, align 8, !dbg !21553, !tbaa !3285
  %add = add i64 %0, %1, !dbg !21554
  store i64 %add, i64* %sum, align 8, !dbg !21551, !tbaa !3285
  %2 = load i64, i64* %sum, align 8, !dbg !21555, !tbaa !3285
  %3 = load i64, i64* %size1.addr, align 8, !dbg !21556, !tbaa !3285
  %cmp = icmp uge i64 %2, %3, !dbg !21557
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !21555

cond.true:                                        ; preds = %entry
  %4 = load i64, i64* %sum, align 8, !dbg !21558, !tbaa !3285
  br label %cond.end, !dbg !21555

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !21555

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ -1, %cond.false ], !dbg !21555
  ret i64 %cond, !dbg !21559
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @xsum3(i64 %size1, i64 %size2, i64 %size3) #10 !dbg !21560 !ctir !1530 {
entry:
  %size1.addr = alloca i64, align 8
  %size2.addr = alloca i64, align 8
  %size3.addr = alloca i64, align 8
  store i64 %size1, i64* %size1.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %size1.addr, metadata !21561, metadata !DIExpression()), !dbg !21562
  store i64 %size2, i64* %size2.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %size2.addr, metadata !21563, metadata !DIExpression()), !dbg !21564
  store i64 %size3, i64* %size3.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %size3.addr, metadata !21565, metadata !DIExpression()), !dbg !21566
  %0 = load i64, i64* %size1.addr, align 8, !dbg !21567, !tbaa !3285
  %1 = load i64, i64* %size2.addr, align 8, !dbg !21568, !tbaa !3285
  %call = call i64 @xsum(i64 %0, i64 %1) #14, !dbg !21569
  %2 = load i64, i64* %size3.addr, align 8, !dbg !21570, !tbaa !3285
  %call1 = call i64 @xsum(i64 %call, i64 %2) #14, !dbg !21571
  ret i64 %call1, !dbg !21572
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @xsum4(i64 %size1, i64 %size2, i64 %size3, i64 %size4) #10 !dbg !21573 !ctir !2540 {
entry:
  %size1.addr = alloca i64, align 8
  %size2.addr = alloca i64, align 8
  %size3.addr = alloca i64, align 8
  %size4.addr = alloca i64, align 8
  store i64 %size1, i64* %size1.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %size1.addr, metadata !21574, metadata !DIExpression()), !dbg !21575
  store i64 %size2, i64* %size2.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %size2.addr, metadata !21576, metadata !DIExpression()), !dbg !21577
  store i64 %size3, i64* %size3.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %size3.addr, metadata !21578, metadata !DIExpression()), !dbg !21579
  store i64 %size4, i64* %size4.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %size4.addr, metadata !21580, metadata !DIExpression()), !dbg !21581
  %0 = load i64, i64* %size1.addr, align 8, !dbg !21582, !tbaa !3285
  %1 = load i64, i64* %size2.addr, align 8, !dbg !21583, !tbaa !3285
  %call = call i64 @xsum(i64 %0, i64 %1) #14, !dbg !21584
  %2 = load i64, i64* %size3.addr, align 8, !dbg !21585, !tbaa !3285
  %call1 = call i64 @xsum(i64 %call, i64 %2) #14, !dbg !21586
  %3 = load i64, i64* %size4.addr, align 8, !dbg !21587, !tbaa !3285
  %call2 = call i64 @xsum(i64 %call1, i64 %3) #14, !dbg !21588
  ret i64 %call2, !dbg !21589
}

; Function Attrs: noinline nounwind optnone readonly uwtable
define dso_local i64 @xmax(i64 %size1, i64 %size2) #10 !dbg !21590 !ctir !2538 {
entry:
  %size1.addr = alloca i64, align 8
  %size2.addr = alloca i64, align 8
  store i64 %size1, i64* %size1.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %size1.addr, metadata !21591, metadata !DIExpression()), !dbg !21592
  store i64 %size2, i64* %size2.addr, align 8, !tbaa !3285
  call void @llvm.dbg.declare(metadata i64* %size2.addr, metadata !21593, metadata !DIExpression()), !dbg !21594
  %0 = load i64, i64* %size1.addr, align 8, !dbg !21595, !tbaa !3285
  %1 = load i64, i64* %size2.addr, align 8, !dbg !21596, !tbaa !3285
  %cmp = icmp uge i64 %0, %1, !dbg !21597
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !21595

cond.true:                                        ; preds = %entry
  %2 = load i64, i64* %size1.addr, align 8, !dbg !21598, !tbaa !3285
  br label %cond.end, !dbg !21595

cond.false:                                       ; preds = %entry
  %3 = load i64, i64* %size2.addr, align 8, !dbg !21599, !tbaa !3285
  br label %cond.end, !dbg !21595

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !21595
  ret i64 %cond, !dbg !21600
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fclose(%struct._IO_FILE* nonnull %fp) #4 !dbg !21601 !ctir !2545 {
entry:
  %retval = alloca i32, align 4
  %fp.addr = alloca %struct._IO_FILE*, align 8
  %saved_errno = alloca i32, align 4, !ctir !7
  %fd = alloca i32, align 4, !ctir !7
  %result = alloca i32, align 4, !ctir !7
  store %struct._IO_FILE* %fp, %struct._IO_FILE** %fp.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp.addr, metadata !21603, metadata !DIExpression()), !dbg !21604
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !21605, metadata !DIExpression()), !dbg !21606
  store i32 0, i32* %saved_errno, align 4, !dbg !21606, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !21607, metadata !DIExpression()), !dbg !21608
  call void @llvm.dbg.declare(metadata i32* %result, metadata !21609, metadata !DIExpression()), !dbg !21610
  store i32 0, i32* %result, align 4, !dbg !21610, !tbaa !2632
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21611, !tbaa !2645
  %call = call i32 @fileno(%struct._IO_FILE* %0) #9, !dbg !21612
  store i32 %call, i32* %fd, align 4, !dbg !21613, !tbaa !2632
  %1 = load i32, i32* %fd, align 4, !dbg !21614, !tbaa !2632
  %cmp = icmp slt i32 %1, 0, !dbg !21616
  br i1 %cmp, label %if.then, label %if.end, !dbg !21617

if.then:                                          ; preds = %entry
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21618, !tbaa !2645
  %call1 = call i32 @fclose(%struct._IO_FILE* %2), !dbg !21619
  store i32 %call1, i32* %retval, align 4, !dbg !21620
  br label %return, !dbg !21620

if.end:                                           ; preds = %entry
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21621, !tbaa !2645
  %call2 = call i32 @__freading(%struct._IO_FILE* %3) #9, !dbg !21621
  %cmp3 = icmp ne i32 %call2, 0, !dbg !21621
  br i1 %cmp3, label %lor.lhs.false, label %land.lhs.true, !dbg !21623

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21624, !tbaa !2645
  %call4 = call i32 @fileno(%struct._IO_FILE* %4) #9, !dbg !21625
  %call5 = call i64 @lseek(i32 %call4, i64 0, i32 1) #9, !dbg !21626
  %cmp6 = icmp ne i64 %call5, -1, !dbg !21627
  br i1 %cmp6, label %land.lhs.true, label %if.end10, !dbg !21628

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21629, !tbaa !2645
  %call7 = call i32 @rpl_fflush(%struct._IO_FILE* %5), !dbg !21630
  %tobool = icmp ne i32 %call7, 0, !dbg !21630
  br i1 %tobool, label %if.then8, label %if.end10, !dbg !21631

if.then8:                                         ; preds = %land.lhs.true
  %call9 = call i32* @__errno_location() #16, !dbg !21632
  %6 = load i32, i32* %call9, align 4, !dbg !21632, !tbaa !2632, !ctir !7
  store i32 %6, i32* %saved_errno, align 4, !dbg !21633, !tbaa !2632
  br label %if.end10, !dbg !21634

if.end10:                                         ; preds = %if.then8, %land.lhs.true, %lor.lhs.false
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** %fp.addr, align 8, !dbg !21635, !tbaa !2645
  %call11 = call i32 @fclose(%struct._IO_FILE* %7), !dbg !21636
  store i32 %call11, i32* %result, align 4, !dbg !21637, !tbaa !2632
  %8 = load i32, i32* %saved_errno, align 4, !dbg !21638, !tbaa !2632
  %cmp12 = icmp ne i32 %8, 0, !dbg !21640
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !21641

if.then13:                                        ; preds = %if.end10
  %9 = load i32, i32* %saved_errno, align 4, !dbg !21642, !tbaa !2632
  %call14 = call i32* @__errno_location() #16, !dbg !21644
  store i32 %9, i32* %call14, align 4, !dbg !21645, !tbaa !2632, !ctir !7
  store i32 -1, i32* %result, align 4, !dbg !21646, !tbaa !2632
  br label %if.end15, !dbg !21647

if.end15:                                         ; preds = %if.then13, %if.end10
  %10 = load i32, i32* %result, align 4, !dbg !21648, !tbaa !2632
  store i32 %10, i32* %retval, align 4, !dbg !21649
  br label %return, !dbg !21649

return:                                           ; preds = %if.end15, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !21650
  ret i32 %11, !dbg !21650
}

declare dso_local i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @rpl_fcntl(i32 %fd, i32 %action, ...) #4 !dbg !21651 !ctir !505 {
entry:
  %fd.addr = alloca i32, align 4
  %action.addr = alloca i32, align 4
  %arg = alloca [1 x %struct.__va_list_tag], align 16, !ctir !1396
  %result = alloca i32, align 4, !ctir !7
  %target = alloca i32, align 4, !ctir !7
  %target4 = alloca i32, align 4, !ctir !7
  %x = alloca i32, align 4, !ctir !7
  %p = alloca i8*, align 8, !ctir !53
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !21654, metadata !DIExpression()), !dbg !21655
  store i32 %action, i32* %action.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %action.addr, metadata !21656, metadata !DIExpression()), !dbg !21657
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %arg, metadata !21658, metadata !DIExpression()), !dbg !21659
  call void @llvm.dbg.declare(metadata i32* %result, metadata !21660, metadata !DIExpression()), !dbg !21661
  store i32 -1, i32* %result, align 4, !dbg !21661, !tbaa !2632
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !21662
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !21662
  call void @llvm.va_start(i8* %arraydecay1), !dbg !21662
  %0 = load i32, i32* %action.addr, align 4, !dbg !21663, !tbaa !2632
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1030, label %sw.bb3
  ], !dbg !21664

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %target, metadata !21665, metadata !DIExpression()), !dbg !21668
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !21669
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0, !dbg !21669
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !21669
  %fits_in_gp = icmp ule i32 %gp_offset, 40, !dbg !21669
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !21669

vaarg.in_reg:                                     ; preds = %sw.bb
  %1 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3, !dbg !21669
  %reg_save_area = load i8*, i8** %1, align 16, !dbg !21669
  %2 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset, !dbg !21669
  %3 = bitcast i8* %2 to i32*, !dbg !21669
  %4 = add i32 %gp_offset, 8, !dbg !21669
  store i32 %4, i32* %gp_offset_p, align 16, !dbg !21669
  br label %vaarg.end, !dbg !21669

vaarg.in_mem:                                     ; preds = %sw.bb
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2, !dbg !21669
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !21669
  %5 = bitcast i8* %overflow_arg_area to i32*, !dbg !21669
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8, !dbg !21669
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !21669
  br label %vaarg.end, !dbg !21669

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %3, %vaarg.in_reg ], [ %5, %vaarg.in_mem ], !dbg !21669
  %6 = load i32, i32* %vaarg.addr, align 4, !dbg !21669
  store i32 %6, i32* %target, align 4, !dbg !21668, !tbaa !2632
  %7 = load i32, i32* %fd.addr, align 4, !dbg !21670, !tbaa !2632
  %8 = load i32, i32* %target, align 4, !dbg !21671, !tbaa !2632
  %call = call i32 @rpl_fcntl_DUPFD(i32 %7, i32 %8), !dbg !21672
  store i32 %call, i32* %result, align 4, !dbg !21673, !tbaa !2632
  br label %sw.epilog48, !dbg !21674

sw.bb3:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %target4, metadata !21675, metadata !DIExpression()), !dbg !21677
  %arraydecay5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !21678
  %gp_offset_p6 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay5, i32 0, i32 0, !dbg !21678
  %gp_offset7 = load i32, i32* %gp_offset_p6, align 16, !dbg !21678
  %fits_in_gp8 = icmp ule i32 %gp_offset7, 40, !dbg !21678
  br i1 %fits_in_gp8, label %vaarg.in_reg9, label %vaarg.in_mem11, !dbg !21678

vaarg.in_reg9:                                    ; preds = %sw.bb3
  %9 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay5, i32 0, i32 3, !dbg !21678
  %reg_save_area10 = load i8*, i8** %9, align 16, !dbg !21678
  %10 = getelementptr i8, i8* %reg_save_area10, i32 %gp_offset7, !dbg !21678
  %11 = bitcast i8* %10 to i32*, !dbg !21678
  %12 = add i32 %gp_offset7, 8, !dbg !21678
  store i32 %12, i32* %gp_offset_p6, align 16, !dbg !21678
  br label %vaarg.end15, !dbg !21678

vaarg.in_mem11:                                   ; preds = %sw.bb3
  %overflow_arg_area_p12 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay5, i32 0, i32 2, !dbg !21678
  %overflow_arg_area13 = load i8*, i8** %overflow_arg_area_p12, align 8, !dbg !21678
  %13 = bitcast i8* %overflow_arg_area13 to i32*, !dbg !21678
  %overflow_arg_area.next14 = getelementptr i8, i8* %overflow_arg_area13, i32 8, !dbg !21678
  store i8* %overflow_arg_area.next14, i8** %overflow_arg_area_p12, align 8, !dbg !21678
  br label %vaarg.end15, !dbg !21678

vaarg.end15:                                      ; preds = %vaarg.in_mem11, %vaarg.in_reg9
  %vaarg.addr16 = phi i32* [ %11, %vaarg.in_reg9 ], [ %13, %vaarg.in_mem11 ], !dbg !21678
  %14 = load i32, i32* %vaarg.addr16, align 4, !dbg !21678
  store i32 %14, i32* %target4, align 4, !dbg !21677, !tbaa !2632
  %15 = load i32, i32* %fd.addr, align 4, !dbg !21679, !tbaa !2632
  %16 = load i32, i32* %target4, align 4, !dbg !21680, !tbaa !2632
  %call17 = call i32 @rpl_fcntl_DUPFD_CLOEXEC(i32 %15, i32 %16), !dbg !21681
  store i32 %call17, i32* %result, align 4, !dbg !21682, !tbaa !2632
  br label %sw.epilog48, !dbg !21683

sw.default:                                       ; preds = %entry
  %17 = load i32, i32* %action.addr, align 4, !dbg !21684, !tbaa !2632
  switch i32 %17, label %sw.default34 [
    i32 1, label %sw.bb18
    i32 3, label %sw.bb18
    i32 1025, label %sw.bb18
    i32 9, label %sw.bb18
    i32 1032, label %sw.bb18
    i32 1034, label %sw.bb18
    i32 11, label %sw.bb18
    i32 1033, label %sw.bb20
    i32 0, label %sw.bb20
    i32 1030, label %sw.bb20
    i32 1026, label %sw.bb20
    i32 2, label %sw.bb20
    i32 4, label %sw.bb20
    i32 1024, label %sw.bb20
    i32 8, label %sw.bb20
    i32 1031, label %sw.bb20
    i32 10, label %sw.bb20
  ], !dbg !21686

sw.bb18:                                          ; preds = %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default
  %18 = load i32, i32* %fd.addr, align 4, !dbg !21687, !tbaa !2632
  %19 = load i32, i32* %action.addr, align 4, !dbg !21689, !tbaa !2632
  %call19 = call i32 (i32, i32, ...) @fcntl(i32 %18, i32 %19), !dbg !21690
  store i32 %call19, i32* %result, align 4, !dbg !21691, !tbaa !2632
  br label %sw.epilog, !dbg !21692

sw.bb20:                                          ; preds = %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default, %sw.default
  call void @llvm.dbg.declare(metadata i32* %x, metadata !21693, metadata !DIExpression()), !dbg !21695
  %arraydecay21 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !21696
  %gp_offset_p22 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay21, i32 0, i32 0, !dbg !21696
  %gp_offset23 = load i32, i32* %gp_offset_p22, align 16, !dbg !21696
  %fits_in_gp24 = icmp ule i32 %gp_offset23, 40, !dbg !21696
  br i1 %fits_in_gp24, label %vaarg.in_reg25, label %vaarg.in_mem27, !dbg !21696

vaarg.in_reg25:                                   ; preds = %sw.bb20
  %20 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay21, i32 0, i32 3, !dbg !21696
  %reg_save_area26 = load i8*, i8** %20, align 16, !dbg !21696
  %21 = getelementptr i8, i8* %reg_save_area26, i32 %gp_offset23, !dbg !21696
  %22 = bitcast i8* %21 to i32*, !dbg !21696
  %23 = add i32 %gp_offset23, 8, !dbg !21696
  store i32 %23, i32* %gp_offset_p22, align 16, !dbg !21696
  br label %vaarg.end31, !dbg !21696

vaarg.in_mem27:                                   ; preds = %sw.bb20
  %overflow_arg_area_p28 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay21, i32 0, i32 2, !dbg !21696
  %overflow_arg_area29 = load i8*, i8** %overflow_arg_area_p28, align 8, !dbg !21696
  %24 = bitcast i8* %overflow_arg_area29 to i32*, !dbg !21696
  %overflow_arg_area.next30 = getelementptr i8, i8* %overflow_arg_area29, i32 8, !dbg !21696
  store i8* %overflow_arg_area.next30, i8** %overflow_arg_area_p28, align 8, !dbg !21696
  br label %vaarg.end31, !dbg !21696

vaarg.end31:                                      ; preds = %vaarg.in_mem27, %vaarg.in_reg25
  %vaarg.addr32 = phi i32* [ %22, %vaarg.in_reg25 ], [ %24, %vaarg.in_mem27 ], !dbg !21696
  %25 = load i32, i32* %vaarg.addr32, align 4, !dbg !21696
  store i32 %25, i32* %x, align 4, !dbg !21695, !tbaa !2632
  %26 = load i32, i32* %fd.addr, align 4, !dbg !21697, !tbaa !2632
  %27 = load i32, i32* %action.addr, align 4, !dbg !21698, !tbaa !2632
  %28 = load i32, i32* %x, align 4, !dbg !21699, !tbaa !2632
  %call33 = call i32 (i32, i32, ...) @fcntl(i32 %26, i32 %27, i32 %28), !dbg !21700
  store i32 %call33, i32* %result, align 4, !dbg !21701, !tbaa !2632
  br label %sw.epilog, !dbg !21702

sw.default34:                                     ; preds = %sw.default
  call void @llvm.dbg.declare(metadata i8** %p, metadata !21703, metadata !DIExpression()), !dbg !21705
  %arraydecay35 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !21706
  %gp_offset_p36 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay35, i32 0, i32 0, !dbg !21706
  %gp_offset37 = load i32, i32* %gp_offset_p36, align 16, !dbg !21706
  %fits_in_gp38 = icmp ule i32 %gp_offset37, 40, !dbg !21706
  br i1 %fits_in_gp38, label %vaarg.in_reg39, label %vaarg.in_mem41, !dbg !21706

vaarg.in_reg39:                                   ; preds = %sw.default34
  %29 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay35, i32 0, i32 3, !dbg !21706
  %reg_save_area40 = load i8*, i8** %29, align 16, !dbg !21706
  %30 = getelementptr i8, i8* %reg_save_area40, i32 %gp_offset37, !dbg !21706
  %31 = bitcast i8* %30 to i8**, !dbg !21706
  %32 = add i32 %gp_offset37, 8, !dbg !21706
  store i32 %32, i32* %gp_offset_p36, align 16, !dbg !21706
  br label %vaarg.end45, !dbg !21706

vaarg.in_mem41:                                   ; preds = %sw.default34
  %overflow_arg_area_p42 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay35, i32 0, i32 2, !dbg !21706
  %overflow_arg_area43 = load i8*, i8** %overflow_arg_area_p42, align 8, !dbg !21706
  %33 = bitcast i8* %overflow_arg_area43 to i8**, !dbg !21706
  %overflow_arg_area.next44 = getelementptr i8, i8* %overflow_arg_area43, i32 8, !dbg !21706
  store i8* %overflow_arg_area.next44, i8** %overflow_arg_area_p42, align 8, !dbg !21706
  br label %vaarg.end45, !dbg !21706

vaarg.end45:                                      ; preds = %vaarg.in_mem41, %vaarg.in_reg39
  %vaarg.addr46 = phi i8** [ %31, %vaarg.in_reg39 ], [ %33, %vaarg.in_mem41 ], !dbg !21706
  %34 = load i8*, i8** %vaarg.addr46, align 8, !dbg !21706
  store i8* %34, i8** %p, align 8, !dbg !21705, !tbaa !2645
  %35 = load i32, i32* %fd.addr, align 4, !dbg !21707, !tbaa !2632
  %36 = load i32, i32* %action.addr, align 4, !dbg !21708, !tbaa !2632
  %37 = load i8*, i8** %p, align 8, !dbg !21709, !tbaa !2645
  %call47 = call i32 (i32, i32, ...) @fcntl(i32 %35, i32 %36, i8* %37), !dbg !21710
  store i32 %call47, i32* %result, align 4, !dbg !21711, !tbaa !2632
  br label %sw.epilog, !dbg !21712

sw.epilog:                                        ; preds = %vaarg.end45, %vaarg.end31, %sw.bb18
  br label %sw.epilog48, !dbg !21713

sw.epilog48:                                      ; preds = %sw.epilog, %vaarg.end15, %vaarg.end
  %arraydecay49 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0, !dbg !21714
  %arraydecay4950 = bitcast %struct.__va_list_tag* %arraydecay49 to i8*, !dbg !21714
  call void @llvm.va_end(i8* %arraydecay4950), !dbg !21714
  %38 = load i32, i32* %result, align 4, !dbg !21715, !tbaa !2632
  ret i32 %38, !dbg !21716
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fcntl_DUPFD(i32 %fd, i32 %target) #4 !dbg !21717 !ctir !505 {
entry:
  %fd.addr = alloca i32, align 4
  %target.addr = alloca i32, align 4
  %result = alloca i32, align 4, !ctir !7
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !21718, metadata !DIExpression()), !dbg !21719
  store i32 %target, i32* %target.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %target.addr, metadata !21720, metadata !DIExpression()), !dbg !21721
  call void @llvm.dbg.declare(metadata i32* %result, metadata !21722, metadata !DIExpression()), !dbg !21723
  %0 = load i32, i32* %fd.addr, align 4, !dbg !21724, !tbaa !2632
  %1 = load i32, i32* %target.addr, align 4, !dbg !21725, !tbaa !2632
  %call = call i32 (i32, i32, ...) @fcntl(i32 %0, i32 0, i32 %1), !dbg !21726
  store i32 %call, i32* %result, align 4, !dbg !21727, !tbaa !2632
  %2 = load i32, i32* %result, align 4, !dbg !21728, !tbaa !2632
  ret i32 %2, !dbg !21729
}

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rpl_fcntl_DUPFD_CLOEXEC(i32 %fd, i32 %target) #4 !dbg !1391 !ctir !505 {
entry:
  %fd.addr = alloca i32, align 4
  %target.addr = alloca i32, align 4
  %result = alloca i32, align 4, !ctir !7
  %flags = alloca i32, align 4, !ctir !7
  %saved_errno = alloca i32, align 4, !ctir !7
  store i32 %fd, i32* %fd.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %fd.addr, metadata !21730, metadata !DIExpression()), !dbg !21731
  store i32 %target, i32* %target.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %target.addr, metadata !21732, metadata !DIExpression()), !dbg !21733
  call void @llvm.dbg.declare(metadata i32* %result, metadata !21734, metadata !DIExpression()), !dbg !21735
  %0 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !21736, !tbaa !2632
  %cmp = icmp sle i32 0, %0, !dbg !21738
  br i1 %cmp, label %if.then, label %if.else9, !dbg !21739

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %fd.addr, align 4, !dbg !21740, !tbaa !2632
  %2 = load i32, i32* %target.addr, align 4, !dbg !21742, !tbaa !2632
  %call = call i32 (i32, i32, ...) @fcntl(i32 %1, i32 1030, i32 %2), !dbg !21743
  store i32 %call, i32* %result, align 4, !dbg !21744, !tbaa !2632
  %3 = load i32, i32* %result, align 4, !dbg !21745, !tbaa !2632
  %cmp1 = icmp sle i32 0, %3, !dbg !21747
  br i1 %cmp1, label %if.then4, label %lor.lhs.false, !dbg !21748

lor.lhs.false:                                    ; preds = %if.then
  %call2 = call i32* @__errno_location() #16, !dbg !21749
  %4 = load i32, i32* %call2, align 4, !dbg !21749, !tbaa !2632, !ctir !7
  %cmp3 = icmp ne i32 %4, 22, !dbg !21750
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !21751

if.then4:                                         ; preds = %lor.lhs.false, %if.then
  store i32 1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !21752, !tbaa !2632
  br label %if.end8, !dbg !21754

if.else:                                          ; preds = %lor.lhs.false
  %5 = load i32, i32* %fd.addr, align 4, !dbg !21755, !tbaa !2632
  %6 = load i32, i32* %target.addr, align 4, !dbg !21757, !tbaa !2632
  %call5 = call i32 @rpl_fcntl_DUPFD(i32 %5, i32 %6), !dbg !21758
  store i32 %call5, i32* %result, align 4, !dbg !21759, !tbaa !2632
  %7 = load i32, i32* %result, align 4, !dbg !21760, !tbaa !2632
  %cmp6 = icmp sge i32 %7, 0, !dbg !21762
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !21763

if.then7:                                         ; preds = %if.else
  store i32 -1, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !21764, !tbaa !2632
  br label %if.end, !dbg !21765

if.end:                                           ; preds = %if.then7, %if.else
  br label %if.end8

if.end8:                                          ; preds = %if.end, %if.then4
  br label %if.end11, !dbg !21766

if.else9:                                         ; preds = %entry
  %8 = load i32, i32* %fd.addr, align 4, !dbg !21767, !tbaa !2632
  %9 = load i32, i32* %target.addr, align 4, !dbg !21768, !tbaa !2632
  %call10 = call i32 @rpl_fcntl_DUPFD(i32 %8, i32 %9), !dbg !21769
  store i32 %call10, i32* %result, align 4, !dbg !21770, !tbaa !2632
  br label %if.end11

if.end11:                                         ; preds = %if.else9, %if.end8
  %10 = load i32, i32* %result, align 4, !dbg !21771, !tbaa !2632
  %cmp12 = icmp sle i32 0, %10, !dbg !21773
  br i1 %cmp12, label %land.lhs.true, label %if.end25, !dbg !21774

land.lhs.true:                                    ; preds = %if.end11
  %11 = load i32, i32* @rpl_fcntl_DUPFD_CLOEXEC.have_dupfd_cloexec, align 4, !dbg !21775, !tbaa !2632
  %cmp13 = icmp eq i32 %11, -1, !dbg !21776
  br i1 %cmp13, label %if.then14, label %if.end25, !dbg !21777

if.then14:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !21778, metadata !DIExpression()), !dbg !21780
  %12 = load i32, i32* %result, align 4, !dbg !21781, !tbaa !2632
  %call15 = call i32 (i32, i32, ...) @fcntl(i32 %12, i32 1), !dbg !21782
  store i32 %call15, i32* %flags, align 4, !dbg !21780, !tbaa !2632
  %13 = load i32, i32* %flags, align 4, !dbg !21783, !tbaa !2632
  %cmp16 = icmp slt i32 %13, 0, !dbg !21785
  br i1 %cmp16, label %if.then20, label %lor.lhs.false17, !dbg !21786

lor.lhs.false17:                                  ; preds = %if.then14
  %14 = load i32, i32* %result, align 4, !dbg !21787, !tbaa !2632
  %15 = load i32, i32* %flags, align 4, !dbg !21788, !tbaa !2632
  %or = or i32 %15, 1, !dbg !21789
  %call18 = call i32 (i32, i32, ...) @fcntl(i32 %14, i32 2, i32 %or), !dbg !21790
  %cmp19 = icmp eq i32 %call18, -1, !dbg !21791
  br i1 %cmp19, label %if.then20, label %if.end24, !dbg !21792

if.then20:                                        ; preds = %lor.lhs.false17, %if.then14
  call void @llvm.dbg.declare(metadata i32* %saved_errno, metadata !21793, metadata !DIExpression()), !dbg !21795
  %call21 = call i32* @__errno_location() #16, !dbg !21796
  %16 = load i32, i32* %call21, align 4, !dbg !21796, !tbaa !2632, !ctir !7
  store i32 %16, i32* %saved_errno, align 4, !dbg !21795, !tbaa !2632
  %17 = load i32, i32* %result, align 4, !dbg !21797, !tbaa !2632
  %call22 = call i32 @close(i32 %17), !dbg !21798
  %18 = load i32, i32* %saved_errno, align 4, !dbg !21799, !tbaa !2632
  %call23 = call i32* @__errno_location() #16, !dbg !21800
  store i32 %18, i32* %call23, align 4, !dbg !21801, !tbaa !2632, !ctir !7
  store i32 -1, i32* %result, align 4, !dbg !21802, !tbaa !2632
  br label %if.end24, !dbg !21803

if.end24:                                         ; preds = %if.then20, %lor.lhs.false17
  br label %if.end25, !dbg !21804

if.end25:                                         ; preds = %if.end24, %land.lhs.true, %if.end11
  %19 = load i32, i32* %result, align 4, !dbg !21805, !tbaa !2632
  ret i32 %19, !dbg !21806
}

declare dso_local i32 @fcntl(i32, i32, ...) #3

; Function Attrs: noinline nounwind optnone readnone uwtable
define dso_local zeroext i1 @acl_errno_valid(i32 %errnum) #11 !dbg !21807 !ctir !256 {
entry:
  %retval = alloca i1, align 1
  %errnum.addr = alloca i32, align 4
  store i32 %errnum, i32* %errnum.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %errnum.addr, metadata !21809, metadata !DIExpression()), !dbg !21810
  %0 = load i32, i32* %errnum.addr, align 4, !dbg !21811, !tbaa !2632
  switch i32 %0, label %sw.default [
    i32 16, label %sw.bb
    i32 22, label %sw.bb1
    i32 38, label %sw.bb2
    i32 95, label %sw.bb3
  ], !dbg !21812

sw.bb:                                            ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21813
  br label %return, !dbg !21813

sw.bb1:                                           ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21815
  br label %return, !dbg !21815

sw.bb2:                                           ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21816
  br label %return, !dbg !21816

sw.bb3:                                           ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21817
  br label %return, !dbg !21817

sw.default:                                       ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !21818
  br label %return, !dbg !21818

return:                                           ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21819
  ret i1 %1, !dbg !21819
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isalnum(i32 %c) #4 !dbg !21820 !ctir !256 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21822, metadata !DIExpression()), !dbg !21823
  %0 = load i32, i32* %c.addr, align 4, !dbg !21824, !tbaa !2632
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !21825

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21826
  br label %return, !dbg !21826

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21828
  br label %return, !dbg !21828

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21829
  ret i1 %1, !dbg !21829
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isalpha(i32 %c) #4 !dbg !21830 !ctir !256 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21831, metadata !DIExpression()), !dbg !21832
  %0 = load i32, i32* %c.addr, align 4, !dbg !21833, !tbaa !2632
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !21834

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21835
  br label %return, !dbg !21835

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21837
  br label %return, !dbg !21837

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21838
  ret i1 %1, !dbg !21838
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isascii(i32 %c) #4 !dbg !21839 !ctir !256 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21840, metadata !DIExpression()), !dbg !21841
  %0 = load i32, i32* %c.addr, align 4, !dbg !21842, !tbaa !2632
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 7, label %sw.bb
    i32 8, label %sw.bb
    i32 12, label %sw.bb
    i32 10, label %sw.bb
    i32 13, label %sw.bb
    i32 9, label %sw.bb
    i32 11, label %sw.bb
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb
    i32 16, label %sw.bb
    i32 17, label %sw.bb
    i32 18, label %sw.bb
    i32 19, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 22, label %sw.bb
    i32 23, label %sw.bb
    i32 24, label %sw.bb
    i32 25, label %sw.bb
    i32 26, label %sw.bb
    i32 27, label %sw.bb
    i32 28, label %sw.bb
    i32 29, label %sw.bb
    i32 30, label %sw.bb
    i32 31, label %sw.bb
    i32 127, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !21843

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21844
  br label %return, !dbg !21844

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21846
  br label %return, !dbg !21846

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21847
  ret i1 %1, !dbg !21847
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isblank(i32 %c) #4 !dbg !21848 !ctir !256 {
entry:
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21849, metadata !DIExpression()), !dbg !21850
  %0 = load i32, i32* %c.addr, align 4, !dbg !21851, !tbaa !2632
  %cmp = icmp eq i32 %0, 32, !dbg !21852
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !21853

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !21854, !tbaa !2632
  %cmp1 = icmp eq i32 %1, 9, !dbg !21855
  br label %lor.end, !dbg !21853

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  ret i1 %2, !dbg !21856
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_iscntrl(i32 %c) #4 !dbg !21857 !ctir !256 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21858, metadata !DIExpression()), !dbg !21859
  %0 = load i32, i32* %c.addr, align 4, !dbg !21860, !tbaa !2632
  switch i32 %0, label %sw.default [
    i32 7, label %sw.bb
    i32 8, label %sw.bb
    i32 12, label %sw.bb
    i32 10, label %sw.bb
    i32 13, label %sw.bb
    i32 9, label %sw.bb
    i32 11, label %sw.bb
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 14, label %sw.bb
    i32 15, label %sw.bb
    i32 16, label %sw.bb
    i32 17, label %sw.bb
    i32 18, label %sw.bb
    i32 19, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 22, label %sw.bb
    i32 23, label %sw.bb
    i32 24, label %sw.bb
    i32 25, label %sw.bb
    i32 26, label %sw.bb
    i32 27, label %sw.bb
    i32 28, label %sw.bb
    i32 29, label %sw.bb
    i32 30, label %sw.bb
    i32 31, label %sw.bb
    i32 127, label %sw.bb
  ], !dbg !21861

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21862
  br label %return, !dbg !21862

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21864
  br label %return, !dbg !21864

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21865
  ret i1 %1, !dbg !21865
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isdigit(i32 %c) #4 !dbg !21866 !ctir !256 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21867, metadata !DIExpression()), !dbg !21868
  %0 = load i32, i32* %c.addr, align 4, !dbg !21869, !tbaa !2632
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
  ], !dbg !21870

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21871
  br label %return, !dbg !21871

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21873
  br label %return, !dbg !21873

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21874
  ret i1 %1, !dbg !21874
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isgraph(i32 %c) #4 !dbg !21875 !ctir !256 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21876, metadata !DIExpression()), !dbg !21877
  %0 = load i32, i32* %c.addr, align 4, !dbg !21878, !tbaa !2632
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !21879

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21880
  br label %return, !dbg !21880

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21882
  br label %return, !dbg !21882

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21883
  ret i1 %1, !dbg !21883
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_islower(i32 %c) #4 !dbg !21884 !ctir !256 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21885, metadata !DIExpression()), !dbg !21886
  %0 = load i32, i32* %c.addr, align 4, !dbg !21887, !tbaa !2632
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
  ], !dbg !21888

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21889
  br label %return, !dbg !21889

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21891
  br label %return, !dbg !21891

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21892
  ret i1 %1, !dbg !21892
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isprint(i32 %c) #4 !dbg !21893 !ctir !256 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21894, metadata !DIExpression()), !dbg !21895
  %0 = load i32, i32* %c.addr, align 4, !dbg !21896, !tbaa !2632
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !21897

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21898
  br label %return, !dbg !21898

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21900
  br label %return, !dbg !21900

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21901
  ret i1 %1, !dbg !21901
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_ispunct(i32 %c) #4 !dbg !21902 !ctir !256 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21903, metadata !DIExpression()), !dbg !21904
  %0 = load i32, i32* %c.addr, align 4, !dbg !21905, !tbaa !2632
  switch i32 %0, label %sw.default [
    i32 33, label %sw.bb
    i32 34, label %sw.bb
    i32 35, label %sw.bb
    i32 36, label %sw.bb
    i32 37, label %sw.bb
    i32 38, label %sw.bb
    i32 39, label %sw.bb
    i32 40, label %sw.bb
    i32 41, label %sw.bb
    i32 42, label %sw.bb
    i32 43, label %sw.bb
    i32 44, label %sw.bb
    i32 45, label %sw.bb
    i32 46, label %sw.bb
    i32 47, label %sw.bb
    i32 58, label %sw.bb
    i32 59, label %sw.bb
    i32 60, label %sw.bb
    i32 61, label %sw.bb
    i32 62, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 91, label %sw.bb
    i32 92, label %sw.bb
    i32 93, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 96, label %sw.bb
    i32 123, label %sw.bb
    i32 124, label %sw.bb
    i32 125, label %sw.bb
    i32 126, label %sw.bb
  ], !dbg !21906

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21907
  br label %return, !dbg !21907

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21909
  br label %return, !dbg !21909

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21910
  ret i1 %1, !dbg !21910
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isspace(i32 %c) #4 !dbg !21911 !ctir !256 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21912, metadata !DIExpression()), !dbg !21913
  %0 = load i32, i32* %c.addr, align 4, !dbg !21914, !tbaa !2632
  switch i32 %0, label %sw.default [
    i32 32, label %sw.bb
    i32 9, label %sw.bb
    i32 10, label %sw.bb
    i32 11, label %sw.bb
    i32 12, label %sw.bb
    i32 13, label %sw.bb
  ], !dbg !21915

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21916
  br label %return, !dbg !21916

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21918
  br label %return, !dbg !21918

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21919
  ret i1 %1, !dbg !21919
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isupper(i32 %c) #4 !dbg !21920 !ctir !256 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21921, metadata !DIExpression()), !dbg !21922
  %0 = load i32, i32* %c.addr, align 4, !dbg !21923, !tbaa !2632
  switch i32 %0, label %sw.default [
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !21924

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21925
  br label %return, !dbg !21925

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21927
  br label %return, !dbg !21927

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21928
  ret i1 %1, !dbg !21928
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i1 @c_isxdigit(i32 %c) #4 !dbg !21929 !ctir !256 {
entry:
  %retval = alloca i1, align 1
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21930, metadata !DIExpression()), !dbg !21931
  %0 = load i32, i32* %c.addr, align 4, !dbg !21932, !tbaa !2632
  switch i32 %0, label %sw.default [
    i32 48, label %sw.bb
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb
    i32 52, label %sw.bb
    i32 53, label %sw.bb
    i32 54, label %sw.bb
    i32 55, label %sw.bb
    i32 56, label %sw.bb
    i32 57, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
  ], !dbg !21933

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !21934
  br label %return, !dbg !21934

sw.default:                                       ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !21936
  br label %return, !dbg !21936

return:                                           ; preds = %sw.default, %sw.bb
  %1 = load i1, i1* %retval, align 1, !dbg !21937
  ret i1 %1, !dbg !21937
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @c_tolower(i32 %c) #4 !dbg !21938 !ctir !1784 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21939, metadata !DIExpression()), !dbg !21940
  %0 = load i32, i32* %c.addr, align 4, !dbg !21941, !tbaa !2632
  switch i32 %0, label %sw.default [
    i32 65, label %sw.bb
    i32 66, label %sw.bb
    i32 67, label %sw.bb
    i32 68, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 81, label %sw.bb
    i32 82, label %sw.bb
    i32 83, label %sw.bb
    i32 84, label %sw.bb
    i32 85, label %sw.bb
    i32 86, label %sw.bb
    i32 87, label %sw.bb
    i32 88, label %sw.bb
    i32 89, label %sw.bb
    i32 90, label %sw.bb
  ], !dbg !21942

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !21943, !tbaa !2632
  %sub = sub nsw i32 %1, 65, !dbg !21945
  %add = add nsw i32 %sub, 97, !dbg !21946
  store i32 %add, i32* %retval, align 4, !dbg !21947
  br label %return, !dbg !21947

sw.default:                                       ; preds = %entry
  %2 = load i32, i32* %c.addr, align 4, !dbg !21948, !tbaa !2632
  store i32 %2, i32* %retval, align 4, !dbg !21949
  br label %return, !dbg !21949

return:                                           ; preds = %sw.default, %sw.bb
  %3 = load i32, i32* %retval, align 4, !dbg !21950
  ret i32 %3, !dbg !21950
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @c_toupper(i32 %c) #4 !dbg !21951 !ctir !1784 {
entry:
  %retval = alloca i32, align 4
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4, !tbaa !2632
  call void @llvm.dbg.declare(metadata i32* %c.addr, metadata !21952, metadata !DIExpression()), !dbg !21953
  %0 = load i32, i32* %c.addr, align 4, !dbg !21954, !tbaa !2632
  switch i32 %0, label %sw.default [
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 102, label %sw.bb
    i32 103, label %sw.bb
    i32 104, label %sw.bb
    i32 105, label %sw.bb
    i32 106, label %sw.bb
    i32 107, label %sw.bb
    i32 108, label %sw.bb
    i32 109, label %sw.bb
    i32 110, label %sw.bb
    i32 111, label %sw.bb
    i32 112, label %sw.bb
    i32 113, label %sw.bb
    i32 114, label %sw.bb
    i32 115, label %sw.bb
    i32 116, label %sw.bb
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 121, label %sw.bb
    i32 122, label %sw.bb
  ], !dbg !21955

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %1 = load i32, i32* %c.addr, align 4, !dbg !21956, !tbaa !2632
  %sub = sub nsw i32 %1, 97, !dbg !21958
  %add = add nsw i32 %sub, 65, !dbg !21959
  store i32 %add, i32* %retval, align 4, !dbg !21960
  br label %return, !dbg !21960

sw.default:                                       ; preds = %entry
  %2 = load i32, i32* %c.addr, align 4, !dbg !21961, !tbaa !2632
  store i32 %2, i32* %retval, align 4, !dbg !21962
  br label %return, !dbg !21962

return:                                           ; preds = %sw.default, %sw.bb
  %3 = load i32, i32* %retval, align 4, !dbg !21963
  ret i32 %3, !dbg !21963
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct._IO_FILE* @fopen_safer(i8* %file, i8* %mode) #4 !dbg !21964 !ctir !2590 {
entry:
  %retval = alloca %struct._IO_FILE*, align 8
  %file.addr = alloca i8*, align 8
  %mode.addr = alloca i8*, align 8
  %fp = alloca %struct._IO_FILE*, align 8, !ctir !2592
  %fd = alloca i32, align 4, !ctir !7
  %f = alloca i32, align 4, !ctir !7
  %e = alloca i32, align 4, !ctir !7
  %e15 = alloca i32, align 4, !ctir !7
  store i8* %file, i8** %file.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !21966, metadata !DIExpression()), !dbg !21967
  store i8* %mode, i8** %mode.addr, align 8, !tbaa !2645
  call void @llvm.dbg.declare(metadata i8** %mode.addr, metadata !21968, metadata !DIExpression()), !dbg !21969
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %fp, metadata !21970, metadata !DIExpression()), !dbg !21971
  %0 = load i8*, i8** %file.addr, align 8, !dbg !21972, !tbaa !2645
  %1 = load i8*, i8** %mode.addr, align 8, !dbg !21973, !tbaa !2645
  %call = call %struct._IO_FILE* @fopen(i8* %0, i8* %1), !dbg !21974
  store %struct._IO_FILE* %call, %struct._IO_FILE** %fp, align 8, !dbg !21971, !tbaa !2645
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !21975, !tbaa !2645
  %tobool = icmp ne %struct._IO_FILE* %2, null, !dbg !21975
  br i1 %tobool, label %if.then, label %if.end21, !dbg !21977

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %fd, metadata !21978, metadata !DIExpression()), !dbg !21980
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !21981, !tbaa !2645
  %call1 = call i32 @fileno(%struct._IO_FILE* %3) #9, !dbg !21982
  store i32 %call1, i32* %fd, align 4, !dbg !21980, !tbaa !2632
  %4 = load i32, i32* %fd, align 4, !dbg !21983, !tbaa !2632
  %cmp = icmp sle i32 0, %4, !dbg !21985
  br i1 %cmp, label %land.lhs.true, label %if.end20, !dbg !21986

land.lhs.true:                                    ; preds = %if.then
  %5 = load i32, i32* %fd, align 4, !dbg !21987, !tbaa !2632
  %cmp2 = icmp sle i32 %5, 2, !dbg !21988
  br i1 %cmp2, label %if.then3, label %if.end20, !dbg !21989

if.then3:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %f, metadata !21990, metadata !DIExpression()), !dbg !21992
  %6 = load i32, i32* %fd, align 4, !dbg !21993, !tbaa !2632
  %call4 = call i32 @dup_safer(i32 %6), !dbg !21994
  store i32 %call4, i32* %f, align 4, !dbg !21992, !tbaa !2632
  %7 = load i32, i32* %f, align 4, !dbg !21995, !tbaa !2632
  %cmp5 = icmp slt i32 %7, 0, !dbg !21997
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !21998

if.then6:                                         ; preds = %if.then3
  call void @llvm.dbg.declare(metadata i32* %e, metadata !21999, metadata !DIExpression()), !dbg !22001
  %call7 = call i32* @__errno_location() #16, !dbg !22002
  %8 = load i32, i32* %call7, align 4, !dbg !22002, !tbaa !2632, !ctir !7
  store i32 %8, i32* %e, align 4, !dbg !22001, !tbaa !2632
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !22003, !tbaa !2645
  %call8 = call i32 @rpl_fclose(%struct._IO_FILE* %9), !dbg !22004
  %10 = load i32, i32* %e, align 4, !dbg !22005, !tbaa !2632
  %call9 = call i32* @__errno_location() #16, !dbg !22006
  store i32 %10, i32* %call9, align 4, !dbg !22007, !tbaa !2632, !ctir !7
  store %struct._IO_FILE* null, %struct._IO_FILE** %retval, align 8, !dbg !22008
  br label %return, !dbg !22008

if.end:                                           ; preds = %if.then3
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !22009, !tbaa !2645
  %call10 = call i32 @rpl_fclose(%struct._IO_FILE* %11), !dbg !22011
  %cmp11 = icmp ne i32 %call10, 0, !dbg !22012
  br i1 %cmp11, label %if.then14, label %lor.lhs.false, !dbg !22013

lor.lhs.false:                                    ; preds = %if.end
  %12 = load i32, i32* %f, align 4, !dbg !22014, !tbaa !2632
  %13 = load i8*, i8** %mode.addr, align 8, !dbg !22015, !tbaa !2645
  %call12 = call %struct._IO_FILE* @fdopen(i32 %12, i8* %13) #9, !dbg !22016
  store %struct._IO_FILE* %call12, %struct._IO_FILE** %fp, align 8, !dbg !22017, !tbaa !2645
  %tobool13 = icmp ne %struct._IO_FILE* %call12, null, !dbg !22017
  br i1 %tobool13, label %if.end19, label %if.then14, !dbg !22018

if.then14:                                        ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata i32* %e15, metadata !22019, metadata !DIExpression()), !dbg !22021
  %call16 = call i32* @__errno_location() #16, !dbg !22022
  %14 = load i32, i32* %call16, align 4, !dbg !22022, !tbaa !2632, !ctir !7
  store i32 %14, i32* %e15, align 4, !dbg !22021, !tbaa !2632
  %15 = load i32, i32* %f, align 4, !dbg !22023, !tbaa !2632
  %call17 = call i32 @close(i32 %15), !dbg !22024
  %16 = load i32, i32* %e15, align 4, !dbg !22025, !tbaa !2632
  %call18 = call i32* @__errno_location() #16, !dbg !22026
  store i32 %16, i32* %call18, align 4, !dbg !22027, !tbaa !2632, !ctir !7
  store %struct._IO_FILE* null, %struct._IO_FILE** %retval, align 8, !dbg !22028
  br label %return, !dbg !22028

if.end19:                                         ; preds = %lor.lhs.false
  br label %if.end20, !dbg !22029

if.end20:                                         ; preds = %if.end19, %land.lhs.true, %if.then
  br label %if.end21, !dbg !22030

if.end21:                                         ; preds = %if.end20, %entry
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %fp, align 8, !dbg !22031, !tbaa !2645
  store %struct._IO_FILE* %17, %struct._IO_FILE** %retval, align 8, !dbg !22032
  br label %return, !dbg !22032

return:                                           ; preds = %if.end21, %if.then14, %if.then6
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** %retval, align 8, !dbg !22033
  ret %struct._IO_FILE* %18, !dbg !22033
}

declare dso_local %struct._IO_FILE* @fopen(i8*, i8*) #3

; Function Attrs: nounwind
declare dso_local %struct._IO_FILE* @fdopen(i32, i8*) #2

attributes #0 = { noinline noreturn nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { noinline nounwind optnone readonly uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noinline nounwind optnone readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn nounwind }
attributes #14 = { nounwind readonly }
attributes #15 = { noreturn }
attributes #16 = { nounwind readnone }

!llvm.dbg.cu = !{!65, !1406, !348, !614, !1455, !640, !1509, !673, !1511, !1516, !1521, !679, !1524, !716, !1527, !739, !781, !1532, !1535, !1540, !826, !1543, !1595, !1609, !1648, !1680, !1685, !1688, !1693, !833, !1698, !1709, !1727, !1746, !1769, !968, !1774, !1776, !1009, !1779, !1786, !1789, !1792, !1149, !1799, !1833, !1862, !1895, !1192, !1922, !1243, !1264, !1925, !1939, !1317, !1331, !1999, !2016, !2019, !2039, !2057, !2094, !2135, !2174, !2213, !2230, !2253, !2265, !1339, !2279, !2296, !2299, !2339, !2344, !2356, !2359, !2362, !2366, !2371, !2385, !2416, !2512, !2532, !2535, !2542, !1393, !2581, !2584, !2587}
!llvm.ident = !{}
!llvm.module.flags = !{!2627, !2628, !2629, !2630}

!0 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1, size: 64)
!1 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !3)
!2 = !DIFile(filename: "/usr/include/bits/types/FILE.h", directory: "")
!3 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !5)
!4 = !DIFile(filename: "/usr/include/bits/types/struct_FILE.h", directory: "")
!5 = !{!6, !8, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !24, !26, !27, !28, !32, !34, !36, !40, !43, !45, !48, !51, !52, !54, !58, !59}
!6 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3, file: !4, line: 51, baseType: !7, size: 32)
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !3, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!9 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64)
!10 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!11 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !3, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!12 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !3, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!13 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !3, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!14 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !3, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !3, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !3, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !3, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !3, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !3, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!20 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !3, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !3, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!22 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 64)
!23 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !4, line: 36, flags: DIFlagFwdDecl)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !3, file: !4, line: 70, baseType: !25, size: 64, offset: 832)
!25 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3, size: 64)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !3, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !3, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !3, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!29 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !30, line: 152, baseType: !31)
!30 = !DIFile(filename: "/usr/include/bits/types.h", directory: "")
!31 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !3, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!33 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!34 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !3, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!35 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !3, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!37 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 8, elements: !38)
!38 = !{!39}
!39 = !DISubrange(count: 1)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !3, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!41 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !42, size: 64)
!42 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !4, line: 43, baseType: null)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !3, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!44 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !30, line: 153, baseType: !31)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !3, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!46 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !47, size: 64)
!47 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !4, line: 37, flags: DIFlagFwdDecl)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !3, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!49 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !50, size: 64)
!50 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !4, line: 38, flags: DIFlagFwdDecl)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !3, file: !4, line: 93, baseType: !25, size: 64, offset: 1344)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !3, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!53 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !3, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !56, line: 46, baseType: !57)
!56 = !DIFile(filename: "llvm9/build/lib/clang/9.0.0/include/stddef.h", directory: "/home/mbarbar/software")
!57 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !3, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !3, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!60 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 160, elements: !61)
!61 = !{!62}
!62 = !DISubrange(count: 20)
!63 = !DIGlobalVariableExpression(var: !64, expr: !DIExpression())
!64 = distinct !DIGlobalVariable(name: "selinux_enabled", scope: !65, file: !66, line: 53, type: !7, isLocal: true, isDefinition: true)
!65 = distinct !DICompileUnit(language: DW_LANG_C99, file: !66, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !67, retainedTypes: !121, globals: !308, nameTableKind: None)
!66 = !DIFile(filename: "src/install.c", directory: "/home/mbarbar/software/coreutils-8.31")
!67 = !{!68, !76, !83, !89, !95, !100}
!68 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "backup_type", file: !69, line: 30, baseType: !70, size: 32, elements: !71)
!69 = !DIFile(filename: "./lib/backupfile.h", directory: "/home/mbarbar/software/coreutils-8.31")
!70 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!71 = !{!72, !73, !74, !75}
!72 = !DIEnumerator(name: "no_backups", value: 0, isUnsigned: true)
!73 = !DIEnumerator(name: "simple_backups", value: 1, isUnsigned: true)
!74 = !DIEnumerator(name: "numbered_existing_backups", value: 2, isUnsigned: true)
!75 = !DIEnumerator(name: "numbered_backups", value: 3, isUnsigned: true)
!76 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Dereference_symlink", file: !77, line: 69, baseType: !70, size: 32, elements: !78)
!77 = !DIFile(filename: "src/copy.h", directory: "/home/mbarbar/software/coreutils-8.31")
!78 = !{!79, !80, !81, !82}
!79 = !DIEnumerator(name: "DEREF_UNDEFINED", value: 1, isUnsigned: true)
!80 = !DIEnumerator(name: "DEREF_NEVER", value: 2, isUnsigned: true)
!81 = !DIEnumerator(name: "DEREF_COMMAND_LINE_ARGUMENTS", value: 3, isUnsigned: true)
!82 = !DIEnumerator(name: "DEREF_ALWAYS", value: 4, isUnsigned: true)
!83 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Interactive", file: !77, line: 60, baseType: !70, size: 32, elements: !84)
!84 = !{!85, !86, !87, !88}
!85 = !DIEnumerator(name: "I_ALWAYS_YES", value: 1, isUnsigned: true)
!86 = !DIEnumerator(name: "I_ALWAYS_NO", value: 2, isUnsigned: true)
!87 = !DIEnumerator(name: "I_ASK_USER", value: 3, isUnsigned: true)
!88 = !DIEnumerator(name: "I_UNSPECIFIED", value: 4, isUnsigned: true)
!89 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Sparse_type", file: !77, line: 26, baseType: !70, size: 32, elements: !90)
!90 = !{!91, !92, !93, !94}
!91 = !DIEnumerator(name: "SPARSE_UNUSED", value: 0, isUnsigned: true)
!92 = !DIEnumerator(name: "SPARSE_NEVER", value: 1, isUnsigned: true)
!93 = !DIEnumerator(name: "SPARSE_AUTO", value: 2, isUnsigned: true)
!94 = !DIEnumerator(name: "SPARSE_ALWAYS", value: 3, isUnsigned: true)
!95 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "Reflink_type", file: !77, line: 47, baseType: !70, size: 32, elements: !96)
!96 = !{!97, !98, !99}
!97 = !DIEnumerator(name: "REFLINK_NEVER", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "REFLINK_AUTO", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "REFLINK_ALWAYS", value: 2, isUnsigned: true)
!100 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !102, file: !101, line: 39, baseType: !70, size: 32, elements: !114)
!101 = !DIFile(filename: "./lib/savewd.h", directory: "/home/mbarbar/software/coreutils-8.31")
!102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "savewd", file: !101, line: 36, size: 64, elements: !103)
!103 = !{!104, !105}
!104 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !102, file: !101, line: 66, baseType: !100, size: 32)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !102, file: !101, line: 74, baseType: !106, size: 32, offset: 32)
!106 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !102, file: !101, line: 69, size: 32, elements: !107)
!107 = !{!108, !109, !110}
!108 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !106, file: !101, line: 71, baseType: !7, size: 32)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "errnum", scope: !106, file: !101, line: 72, baseType: !7, size: 32)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !106, file: !101, line: 73, baseType: !111, size: 32)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !112, line: 97, baseType: !113)
!112 = !DIFile(filename: "/usr/include/sys/types.h", directory: "")
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "__pid_t", file: !30, line: 154, baseType: !7)
!114 = !{!115, !116, !117, !118, !119, !120}
!115 = !DIEnumerator(name: "INITIAL_STATE", value: 0, isUnsigned: true)
!116 = !DIEnumerator(name: "FD_STATE", value: 1, isUnsigned: true)
!117 = !DIEnumerator(name: "FD_POST_CHDIR_STATE", value: 2, isUnsigned: true)
!118 = !DIEnumerator(name: "FORKING_STATE", value: 3, isUnsigned: true)
!119 = !DIEnumerator(name: "ERROR_STATE", value: 4, isUnsigned: true)
!120 = !DIEnumerator(name: "FINAL_STATE", value: 5, isUnsigned: true)
!121 = !{!122, !9, !53, !127, !129, !131, !125, !0, !180, !182, !7, !142, !184, !185, !140, !197, !139, !200, !202, !204, !215, !216, !175, !218, !220, !55, !222, !224, !235, !57, !128, !130, !243, !246, !248, !250, !252, !254, !256, !258, !260, !262, !29, !264, !111, !266, !303, !181, !306}
!122 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !123, line: 72, baseType: !124)
!123 = !DIFile(filename: "/usr/include/signal.h", directory: "")
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 64)
!125 = !DISubroutineType(types: !126)
!126 = !{null, !7}
!127 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !112, line: 79, baseType: !128)
!128 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !30, line: 146, baseType: !70)
!129 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !112, line: 64, baseType: !130)
!130 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !30, line: 147, baseType: !70)
!131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 64)
!132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cp_options", file: !77, line: 98, size: 640, elements: !133)
!133 = !{!134, !135, !136, !137, !138, !141, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !179}
!134 = !DIDerivedType(tag: DW_TAG_member, name: "backup_type", scope: !132, file: !77, line: 100, baseType: !68, size: 32)
!135 = !DIDerivedType(tag: DW_TAG_member, name: "dereference", scope: !132, file: !77, line: 103, baseType: !76, size: 32, offset: 32)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "interactive", scope: !132, file: !77, line: 108, baseType: !83, size: 32, offset: 64)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "sparse_mode", scope: !132, file: !77, line: 111, baseType: !89, size: 32, offset: 96)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !132, file: !77, line: 115, baseType: !139, size: 32, offset: 128)
!139 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !112, line: 69, baseType: !140)
!140 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !30, line: 150, baseType: !70)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "copy_as_regular", scope: !132, file: !77, line: 119, baseType: !142, size: 8, offset: 160)
!142 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_before_opening", scope: !132, file: !77, line: 123, baseType: !142, size: 8, offset: 168)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_after_failed_open", scope: !132, file: !77, line: 130, baseType: !142, size: 8, offset: 176)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "hard_link", scope: !132, file: !77, line: 134, baseType: !142, size: 8, offset: 184)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "move_mode", scope: !132, file: !77, line: 138, baseType: !142, size: 8, offset: 192)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "install_mode", scope: !132, file: !77, line: 141, baseType: !142, size: 8, offset: 200)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "chown_privileges", scope: !132, file: !77, line: 145, baseType: !142, size: 8, offset: 208)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "owner_privileges", scope: !132, file: !77, line: 152, baseType: !142, size: 8, offset: 216)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "one_file_system", scope: !132, file: !77, line: 156, baseType: !142, size: 8, offset: 224)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_ownership", scope: !132, file: !77, line: 160, baseType: !142, size: 8, offset: 232)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_mode", scope: !132, file: !77, line: 161, baseType: !142, size: 8, offset: 240)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_timestamps", scope: !132, file: !77, line: 162, baseType: !142, size: 8, offset: 248)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_no_preserve_mode", scope: !132, file: !77, line: 163, baseType: !142, size: 8, offset: 256)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "set_security_context", scope: !132, file: !77, line: 166, baseType: !142, size: 8, offset: 264)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_links", scope: !132, file: !77, line: 178, baseType: !142, size: 8, offset: 272)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "data_copy_required", scope: !132, file: !77, line: 182, baseType: !142, size: 8, offset: 280)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve", scope: !132, file: !77, line: 188, baseType: !142, size: 8, offset: 288)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_security_context", scope: !132, file: !77, line: 192, baseType: !142, size: 8, offset: 296)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_context", scope: !132, file: !77, line: 201, baseType: !142, size: 8, offset: 304)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_xattr", scope: !132, file: !77, line: 205, baseType: !142, size: 8, offset: 312)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_xattr", scope: !132, file: !77, line: 214, baseType: !142, size: 8, offset: 320)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "reduce_diagnostics", scope: !132, file: !77, line: 223, baseType: !142, size: 8, offset: 328)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "recursive", scope: !132, file: !77, line: 227, baseType: !142, size: 8, offset: 336)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "set_mode", scope: !132, file: !77, line: 231, baseType: !142, size: 8, offset: 344)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "symbolic_link", scope: !132, file: !77, line: 235, baseType: !142, size: 8, offset: 352)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !132, file: !77, line: 239, baseType: !142, size: 8, offset: 360)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !132, file: !77, line: 242, baseType: !142, size: 8, offset: 368)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "stdin_tty", scope: !132, file: !77, line: 245, baseType: !142, size: 8, offset: 376)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "open_dangling_dest_symlink", scope: !132, file: !77, line: 250, baseType: !142, size: 8, offset: 384)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "last_file", scope: !132, file: !77, line: 254, baseType: !142, size: 8, offset: 392)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "rename_errno", scope: !132, file: !77, line: 259, baseType: !7, size: 32, offset: 416)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "reflink_mode", scope: !132, file: !77, line: 262, baseType: !95, size: 32, offset: 448)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "dest_info", scope: !132, file: !77, line: 273, baseType: !175, size: 64, offset: 512)
!175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 64)
!176 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !177, line: 69, baseType: !178)
!177 = !DIFile(filename: "./lib/hash.h", directory: "/home/mbarbar/software/coreutils-8.31")
!178 = !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !177, line: 67, flags: DIFlagFwdDecl)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "src_info", scope: !132, file: !77, line: 276, baseType: !175, size: 64, offset: 576)
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 64)
!181 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10)
!182 = !DISubroutineType(types: !183)
!183 = !{!7, !7, !184}
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64)
!185 = !DICompositeType(tag: DW_TAG_array_type, baseType: !186, size: 4608, elements: !195)
!186 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !187)
!187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "option", file: !188, line: 50, size: 256, elements: !189)
!188 = !DIFile(filename: "/usr/include/bits/getopt_ext.h", directory: "")
!189 = !{!190, !191, !192, !194}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !187, file: !188, line: 52, baseType: !180, size: 64)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "has_arg", scope: !187, file: !188, line: 55, baseType: !7, size: 32, offset: 64)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !187, file: !188, line: 56, baseType: !193, size: 64, offset: 128)
!193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !187, file: !188, line: 57, baseType: !7, size: 32, offset: 192)
!195 = !{!196}
!196 = !DISubrange(count: 18)
!197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !198, size: 64)
!198 = !DICompositeType(tag: DW_TAG_structure_type, name: "mode_change", file: !199, line: 25, flags: DIFlagFwdDecl)
!199 = !DIFile(filename: "./lib/modechange.h", directory: "/home/mbarbar/software/coreutils-8.31")
!200 = !DISubroutineType(types: !201)
!201 = !{null}
!202 = !DISubroutineType(types: !203)
!203 = !{null, !180}
!204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !205, size: 896, elements: !213)
!205 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !206)
!206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "infomap", scope: !208, file: !207, line: 633, size: 128, elements: !210)
!207 = !DIFile(filename: "src/system.h", directory: "/home/mbarbar/software/coreutils-8.31")
!208 = distinct !DISubprogram(name: "emit_ancillary_info", scope: !207, file: !207, line: 631, type: !202, scopeLine: 632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!209 = !{}
!210 = !{!211, !212}
!211 = !DIDerivedType(tag: DW_TAG_member, name: "program", scope: !206, file: !207, line: 633, baseType: !180, size: 64)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !206, file: !207, line: 633, baseType: !180, size: 64, offset: 64)
!213 = !{!214}
!214 = !DISubrange(count: 7)
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !205, size: 64)
!216 = !DISubroutineType(types: !217)
!217 = !{null, !131}
!218 = !DISubroutineType(types: !219)
!219 = !{!9, !180}
!220 = !DISubroutineType(types: !221)
!221 = !{!142, !180}
!222 = !DISubroutineType(types: !223)
!223 = !{!142, !139}
!224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !225, size: 64)
!225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "passwd", file: !226, line: 49, size: 384, elements: !227)
!226 = !DIFile(filename: "/usr/include/pwd.h", directory: "")
!227 = !{!228, !229, !230, !231, !232, !233, !234}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "pw_name", scope: !225, file: !226, line: 51, baseType: !9, size: 64)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "pw_passwd", scope: !225, file: !226, line: 52, baseType: !9, size: 64, offset: 64)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "pw_uid", scope: !225, file: !226, line: 54, baseType: !128, size: 32, offset: 128)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gid", scope: !225, file: !226, line: 55, baseType: !130, size: 32, offset: 160)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "pw_gecos", scope: !225, file: !226, line: 56, baseType: !9, size: 64, offset: 192)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "pw_dir", scope: !225, file: !226, line: 57, baseType: !9, size: 64, offset: 256)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "pw_shell", scope: !225, file: !226, line: 58, baseType: !9, size: 64, offset: 320)
!235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !236, size: 64)
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group", file: !237, line: 42, size: 256, elements: !238)
!237 = !DIFile(filename: "/usr/include/grp.h", directory: "")
!238 = !{!239, !240, !241, !242}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "gr_name", scope: !236, file: !237, line: 44, baseType: !9, size: 64)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "gr_passwd", scope: !236, file: !237, line: 45, baseType: !9, size: 64, offset: 64)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "gr_gid", scope: !236, file: !237, line: 46, baseType: !130, size: 32, offset: 128)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "gr_mem", scope: !236, file: !237, line: 47, baseType: !184, size: 64, offset: 192)
!243 = !DISubroutineType(types: !244)
!244 = !{!7, !9, !245, !53}
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 64)
!246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 64)
!247 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !132)
!248 = !DISubroutineType(types: !249)
!249 = !{!7, !180, !180, !53}
!250 = !DISubroutineType(types: !251)
!251 = !{!7, !180, !139}
!252 = !DISubroutineType(types: !253)
!253 = !{null, !180, !53}
!254 = !DISubroutineType(types: !255)
!255 = !{!142, !180, !142, !142}
!256 = !DISubroutineType(types: !257)
!257 = !{!142, !7}
!258 = !DISubroutineType(types: !259)
!259 = !{!142, !180, !9, !246}
!260 = !DISubroutineType(types: !261)
!261 = !{!142, !180, !9, !131, !142}
!262 = !DISubroutineType(types: !263)
!263 = !{!142, !180, !180, !246}
!264 = !DISubroutineType(types: !265)
!265 = !{!142, !7, !7}
!266 = !DISubroutineType(types: !267)
!267 = !{!142, !268, !180}
!268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !269, size: 64)
!269 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !270)
!270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !271, line: 46, size: 1152, elements: !272)
!271 = !DIFile(filename: "/usr/include/bits/stat.h", directory: "")
!272 = !{!273, !275, !277, !279, !280, !281, !282, !283, !284, !285, !287, !289, !297, !298, !299}
!273 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !270, file: !271, line: 48, baseType: !274, size: 64)
!274 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !30, line: 145, baseType: !57)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !270, file: !271, line: 53, baseType: !276, size: 64, offset: 64)
!276 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !30, line: 148, baseType: !57)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !270, file: !271, line: 61, baseType: !278, size: 64, offset: 128)
!278 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !30, line: 151, baseType: !57)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !270, file: !271, line: 62, baseType: !140, size: 32, offset: 192)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !270, file: !271, line: 64, baseType: !128, size: 32, offset: 224)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !270, file: !271, line: 65, baseType: !130, size: 32, offset: 256)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !270, file: !271, line: 67, baseType: !7, size: 32, offset: 288)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !270, file: !271, line: 69, baseType: !274, size: 64, offset: 320)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !270, file: !271, line: 74, baseType: !29, size: 64, offset: 384)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !270, file: !271, line: 78, baseType: !286, size: 64, offset: 448)
!286 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !30, line: 174, baseType: !31)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !270, file: !271, line: 80, baseType: !288, size: 64, offset: 512)
!288 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !30, line: 179, baseType: !31)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !270, file: !271, line: 91, baseType: !290, size: 128, offset: 576)
!290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !291, line: 9, size: 128, elements: !292)
!291 = !DIFile(filename: "/usr/include/bits/types/struct_timespec.h", directory: "")
!292 = !{!293, !295}
!293 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !290, file: !291, line: 11, baseType: !294, size: 64)
!294 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !30, line: 160, baseType: !31)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !290, file: !291, line: 12, baseType: !296, size: 64, offset: 64)
!296 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !30, line: 196, baseType: !31)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !270, file: !271, line: 92, baseType: !290, size: 128, offset: 704)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !270, file: !271, line: 93, baseType: !290, size: 128, offset: 832)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !270, file: !271, line: 106, baseType: !300, size: 192, offset: 960)
!300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !296, size: 192, elements: !301)
!301 = !{!302}
!302 = !DISubrange(count: 3)
!303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !290, size: 256, elements: !304)
!304 = !{!305}
!305 = !DISubrange(count: 2)
!306 = !DISubroutineType(types: !307)
!307 = !{!142, !180, !180, !246, !142}
!308 = !{!309, !311, !313, !315, !317, !63, !319, !321, !323, !325, !327, !329, !331, !333, !335, !341, !343}
!309 = !DIGlobalVariableExpression(var: !310, expr: !DIExpression())
!310 = distinct !DIGlobalVariable(name: "owner_name", scope: !65, file: !66, line: 74, type: !9, isLocal: true, isDefinition: true)
!311 = !DIGlobalVariableExpression(var: !312, expr: !DIExpression())
!312 = distinct !DIGlobalVariable(name: "group_name", scope: !65, file: !66, line: 81, type: !9, isLocal: true, isDefinition: true)
!313 = !DIGlobalVariableExpression(var: !314, expr: !DIExpression())
!314 = distinct !DIGlobalVariable(name: "copy_only_if_needed", scope: !65, file: !66, line: 102, type: !142, isLocal: true, isDefinition: true)
!315 = !DIGlobalVariableExpression(var: !316, expr: !DIExpression())
!316 = distinct !DIGlobalVariable(name: "strip_files", scope: !65, file: !66, line: 105, type: !142, isLocal: true, isDefinition: true)
!317 = !DIGlobalVariableExpression(var: !318, expr: !DIExpression())
!318 = distinct !DIGlobalVariable(name: "dir_arg", scope: !65, file: !66, line: 108, type: !142, isLocal: true, isDefinition: true)
!319 = !DIGlobalVariableExpression(var: !320, expr: !DIExpression())
!320 = distinct !DIGlobalVariable(name: "long_options", scope: !65, file: !66, line: 121, type: !185, isLocal: true, isDefinition: true)
!321 = !DIGlobalVariableExpression(var: !322, expr: !DIExpression())
!322 = distinct !DIGlobalVariable(name: "strip_program", scope: !65, file: !66, line: 111, type: !180, isLocal: true, isDefinition: true)
!323 = !DIGlobalVariableExpression(var: !324, expr: !DIExpression())
!324 = distinct !DIGlobalVariable(name: "use_default_selinux_context", scope: !65, file: !66, line: 54, type: !142, isLocal: true, isDefinition: true)
!325 = !DIGlobalVariableExpression(var: !326, expr: !DIExpression())
!326 = distinct !DIGlobalVariable(name: "mode", scope: !65, file: !66, line: 90, type: !139, isLocal: true, isDefinition: true)
!327 = !DIGlobalVariableExpression(var: !328, expr: !DIExpression())
!328 = distinct !DIGlobalVariable(name: "dir_mode_bits", scope: !65, file: !66, line: 99, type: !139, isLocal: true, isDefinition: true)
!329 = !DIGlobalVariableExpression(var: !330, expr: !DIExpression())
!330 = distinct !DIGlobalVariable(name: "dir_mode", scope: !65, file: !66, line: 93, type: !139, isLocal: true, isDefinition: true)
!331 = !DIGlobalVariableExpression(var: !332, expr: !DIExpression())
!332 = distinct !DIGlobalVariable(name: "owner_id", scope: !65, file: !66, line: 77, type: !127, isLocal: true, isDefinition: true)
!333 = !DIGlobalVariableExpression(var: !334, expr: !DIExpression())
!334 = distinct !DIGlobalVariable(name: "group_id", scope: !65, file: !66, line: 84, type: !129, isLocal: true, isDefinition: true)
!335 = !DIGlobalVariableExpression(var: !336, expr: !DIExpression())
!336 = distinct !DIGlobalVariable(name: "a_buff", scope: !337, file: !66, line: 149, type: !338, isLocal: true, isDefinition: true)
!337 = distinct !DISubprogram(name: "have_same_content", scope: !66, file: !66, line: 146, type: !264, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 32768, elements: !339)
!339 = !{!340}
!340 = !DISubrange(count: 4096)
!341 = !DIGlobalVariableExpression(var: !342, expr: !DIExpression())
!342 = distinct !DIGlobalVariable(name: "b_buff", scope: !337, file: !66, line: 150, type: !338, isLocal: true, isDefinition: true)
!343 = !DIGlobalVariableExpression(var: !344, expr: !DIExpression())
!344 = distinct !DIGlobalVariable(name: "first_call", scope: !345, file: !66, line: 318, type: !142, isLocal: true, isDefinition: true)
!345 = distinct !DISubprogram(name: "setdefaultfilecon", scope: !66, file: !66, line: 314, type: !202, scopeLine: 315, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!346 = !DIGlobalVariableExpression(var: !347, expr: !DIExpression())
!347 = distinct !DIGlobalVariable(name: "top_level_src_name", scope: !348, file: !349, line: 147, type: !180, isLocal: true, isDefinition: true)
!348 = distinct !DICompileUnit(language: DW_LANG_C99, file: !349, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !350, retainedTypes: !351, globals: !596, nameTableKind: None)
!349 = !DIFile(filename: "src/copy.c", directory: "/home/mbarbar/software/coreutils-8.31")
!350 = !{!68, !76, !83, !89, !95}
!351 = !{!139, !53, !70, !9, !57, !55, !352, !354, !142, !7, !399, !401, !175, !404, !180, !407, !409, !256, !250, !254, !411, !140, !274, !276, !278, !444, !436, !441, !443, !181, !29, !128, !130, !445, !446, !448, !413, !450, !452, !454, !456, !459, !220, !10, !493, !495, !497, !501, !503, !286, !505, !507, !509, !288, !511, !515, !517, !524, !536, !538, !540, !542, !548, !550, !552, !554, !553, !555, !200, !557, !561, !127, !129, !563, !565, !581, !577, !592, !594}
!352 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !353, line: 63, baseType: !29)
!353 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!354 = !DISubroutineType(types: !355)
!355 = !{!142, !180, !180, !139, !142, !356}
!356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !357, size: 64)
!357 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !358)
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cp_options", file: !77, line: 98, size: 640, elements: !359)
!359 = !{!360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398}
!360 = !DIDerivedType(tag: DW_TAG_member, name: "backup_type", scope: !358, file: !77, line: 100, baseType: !68, size: 32)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "dereference", scope: !358, file: !77, line: 103, baseType: !76, size: 32, offset: 32)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "interactive", scope: !358, file: !77, line: 108, baseType: !83, size: 32, offset: 64)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "sparse_mode", scope: !358, file: !77, line: 111, baseType: !89, size: 32, offset: 96)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !358, file: !77, line: 115, baseType: !139, size: 32, offset: 128)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "copy_as_regular", scope: !358, file: !77, line: 119, baseType: !142, size: 8, offset: 160)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_before_opening", scope: !358, file: !77, line: 123, baseType: !142, size: 8, offset: 168)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "unlink_dest_after_failed_open", scope: !358, file: !77, line: 130, baseType: !142, size: 8, offset: 176)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "hard_link", scope: !358, file: !77, line: 134, baseType: !142, size: 8, offset: 184)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "move_mode", scope: !358, file: !77, line: 138, baseType: !142, size: 8, offset: 192)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "install_mode", scope: !358, file: !77, line: 141, baseType: !142, size: 8, offset: 200)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "chown_privileges", scope: !358, file: !77, line: 145, baseType: !142, size: 8, offset: 208)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "owner_privileges", scope: !358, file: !77, line: 152, baseType: !142, size: 8, offset: 216)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "one_file_system", scope: !358, file: !77, line: 156, baseType: !142, size: 8, offset: 224)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_ownership", scope: !358, file: !77, line: 160, baseType: !142, size: 8, offset: 232)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_mode", scope: !358, file: !77, line: 161, baseType: !142, size: 8, offset: 240)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_timestamps", scope: !358, file: !77, line: 162, baseType: !142, size: 8, offset: 248)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_no_preserve_mode", scope: !358, file: !77, line: 163, baseType: !142, size: 8, offset: 256)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "set_security_context", scope: !358, file: !77, line: 166, baseType: !142, size: 8, offset: 264)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_links", scope: !358, file: !77, line: 178, baseType: !142, size: 8, offset: 272)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "data_copy_required", scope: !358, file: !77, line: 182, baseType: !142, size: 8, offset: 280)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve", scope: !358, file: !77, line: 188, baseType: !142, size: 8, offset: 288)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_security_context", scope: !358, file: !77, line: 192, baseType: !142, size: 8, offset: 296)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_context", scope: !358, file: !77, line: 201, baseType: !142, size: 8, offset: 304)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_xattr", scope: !358, file: !77, line: 205, baseType: !142, size: 8, offset: 312)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "require_preserve_xattr", scope: !358, file: !77, line: 214, baseType: !142, size: 8, offset: 320)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "reduce_diagnostics", scope: !358, file: !77, line: 223, baseType: !142, size: 8, offset: 328)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "recursive", scope: !358, file: !77, line: 227, baseType: !142, size: 8, offset: 336)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "set_mode", scope: !358, file: !77, line: 231, baseType: !142, size: 8, offset: 344)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "symbolic_link", scope: !358, file: !77, line: 235, baseType: !142, size: 8, offset: 352)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !358, file: !77, line: 239, baseType: !142, size: 8, offset: 360)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !358, file: !77, line: 242, baseType: !142, size: 8, offset: 368)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "stdin_tty", scope: !358, file: !77, line: 245, baseType: !142, size: 8, offset: 376)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "open_dangling_dest_symlink", scope: !358, file: !77, line: 250, baseType: !142, size: 8, offset: 384)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "last_file", scope: !358, file: !77, line: 254, baseType: !142, size: 8, offset: 392)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "rename_errno", scope: !358, file: !77, line: 259, baseType: !7, size: 32, offset: 416)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "reflink_mode", scope: !358, file: !77, line: 262, baseType: !95, size: 32, offset: 448)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "dest_info", scope: !358, file: !77, line: 273, baseType: !175, size: 64, offset: 512)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "src_info", scope: !358, file: !77, line: 276, baseType: !175, size: 64, offset: 576)
!399 = !DISubroutineType(types: !400)
!400 = !{!142, !180, !142, !142, !356}
!401 = !DISubroutineType(types: !402)
!402 = !{null, !403}
!403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 64)
!404 = !DISubroutineType(types: !405)
!405 = !{!142, !180, !180, !142, !356, !406, !406}
!406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 64)
!407 = !DISubroutineType(types: !408)
!408 = !{!142, !356}
!409 = !DISubroutineType(types: !410)
!410 = !{!139}
!411 = !DISubroutineType(types: !412)
!412 = !{!142, !180, !180, !142, !413, !436, !356, !142, !406, !406, !406}
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 64)
!414 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !415)
!415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !271, line: 46, size: 1152, elements: !416)
!416 = !{!417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !433, !434, !435}
!417 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !415, file: !271, line: 48, baseType: !274, size: 64)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !415, file: !271, line: 53, baseType: !276, size: 64, offset: 64)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !415, file: !271, line: 61, baseType: !278, size: 64, offset: 128)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !415, file: !271, line: 62, baseType: !140, size: 32, offset: 192)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !415, file: !271, line: 64, baseType: !128, size: 32, offset: 224)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !415, file: !271, line: 65, baseType: !130, size: 32, offset: 256)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !415, file: !271, line: 67, baseType: !7, size: 32, offset: 288)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !415, file: !271, line: 69, baseType: !274, size: 64, offset: 320)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !415, file: !271, line: 74, baseType: !29, size: 64, offset: 384)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !415, file: !271, line: 78, baseType: !286, size: 64, offset: 448)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !415, file: !271, line: 80, baseType: !288, size: 64, offset: 512)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !415, file: !271, line: 91, baseType: !429, size: 128, offset: 576)
!429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !291, line: 9, size: 128, elements: !430)
!430 = !{!431, !432}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !429, file: !291, line: 11, baseType: !294, size: 64)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !429, file: !291, line: 12, baseType: !296, size: 64, offset: 64)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !415, file: !271, line: 92, baseType: !429, size: 128, offset: 704)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !415, file: !271, line: 93, baseType: !429, size: 128, offset: 832)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !415, file: !271, line: 106, baseType: !300, size: 192, offset: 960)
!436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 64)
!437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_list", file: !349, line: 125, size: 192, elements: !438)
!438 = !{!439, !440, !442}
!439 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !437, file: !349, line: 127, baseType: !436, size: 64)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !437, file: !349, line: 128, baseType: !441, size: 64, offset: 64)
!441 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !112, line: 47, baseType: !276)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !437, file: !349, line: 129, baseType: !443, size: 64, offset: 128)
!443 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !112, line: 59, baseType: !274)
!444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64)
!445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !429, size: 256, elements: !304)
!446 = !DISubroutineType(types: !447)
!447 = !{!142, !356, !142}
!448 = !DISubroutineType(types: !449)
!449 = !{!142, !180, !413, !180, !413, !356, !406}
!450 = !DISubroutineType(types: !451)
!451 = !{!142, !180, !180, !142, !142, !142}
!452 = !DISubroutineType(types: !453)
!453 = !{!142, !356, !180, !413}
!454 = !DISubroutineType(types: !455)
!455 = !{!142, !180, !139}
!456 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 96, elements: !457)
!457 = !{!458}
!458 = !DISubrange(count: 12)
!459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !460, size: 64)
!460 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !461)
!461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !462)
!462 = !{!463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492}
!463 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !461, file: !4, line: 51, baseType: !7, size: 32)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !461, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !461, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !461, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !461, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !461, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !461, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !461, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !461, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !461, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !461, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !461, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !461, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !461, file: !4, line: 70, baseType: !477, size: 64, offset: 832)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 64)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !461, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !461, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !461, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !461, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !461, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !461, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !461, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !461, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !461, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !461, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !461, file: !4, line: 93, baseType: !477, size: 64, offset: 1344)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !461, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !461, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !461, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !461, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!493 = !DISubroutineType(types: !494)
!494 = !{!142, !180, !413, !180}
!495 = !DISubroutineType(types: !496)
!496 = !{null, !180, !180, !180}
!497 = !DISubroutineType(types: !498)
!498 = !{!142, !413, !499}
!499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !500, size: 64)
!500 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !437)
!501 = !DISubroutineType(types: !502)
!502 = !{!142, !180, !180, !142, !413, !436, !356, !406, !406}
!503 = !DISubroutineType(types: !504)
!504 = !{!142, !180, !180, !356, !139, !139, !406, !413}
!505 = !DISubroutineType(types: !506)
!506 = !{!7, !7, !7}
!507 = !DISubroutineType(types: !508)
!508 = !{!55, !415}
!509 = !DISubroutineType(types: !510)
!510 = !{!142, !413}
!511 = !DISubroutineType(types: !512)
!512 = !{!53, !513, !55}
!513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !514, size: 64)
!514 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!515 = !DISubroutineType(types: !516)
!516 = !{!142, !7, !7, !9, !55, !55, !352, !89, !180, !180, !406}
!517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !518, size: 64)
!518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_info", file: !519, line: 23, size: 192, elements: !520)
!519 = !DIFile(filename: "src/extent-scan.h", directory: "/home/mbarbar/software/coreutils-8.31")
!520 = !{!521, !522, !523}
!521 = !DIDerivedType(tag: DW_TAG_member, name: "ext_logical", scope: !518, file: !519, line: 26, baseType: !352, size: 64)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "ext_length", scope: !518, file: !519, line: 29, baseType: !352, size: 64, offset: 64)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "ext_flags", scope: !518, file: !519, line: 32, baseType: !70, size: 32, offset: 128)
!524 = !DISubroutineType(types: !525)
!525 = !{null, !526}
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 64)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_scan", file: !519, line: 36, size: 384, elements: !528)
!528 = !{!529, !530, !531, !532, !533, !534, !535}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !527, file: !519, line: 39, baseType: !7, size: 32)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "scan_start", scope: !527, file: !519, line: 42, baseType: !352, size: 64, offset: 64)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "fm_flags", scope: !527, file: !519, line: 45, baseType: !70, size: 32, offset: 128)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "ei_count", scope: !527, file: !519, line: 48, baseType: !55, size: 64, offset: 192)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "initial_scan_failed", scope: !527, file: !519, line: 52, baseType: !142, size: 8, offset: 256)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "hit_final_extent", scope: !527, file: !519, line: 55, baseType: !142, size: 8, offset: 264)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "ext_info", scope: !527, file: !519, line: 58, baseType: !517, size: 64, offset: 320)
!536 = !DISubroutineType(types: !537)
!537 = !{!142, !7, !180, !142, !352}
!538 = !DISubroutineType(types: !539)
!539 = !{!142, !7, !352}
!540 = !DISubroutineType(types: !541)
!541 = !{!7, !7, !352, !352}
!542 = !DISubroutineType(types: !543)
!543 = !{!142, !7, !7, !9, !55, !55, !142, !180, !180, !544, !547, !406}
!544 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !545, line: 102, baseType: !546)
!545 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!546 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !30, line: 73, baseType: !57)
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 64)
!548 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !353, line: 77, baseType: !549)
!549 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !30, line: 193, baseType: !31)
!550 = !DISubroutineType(types: !551)
!551 = !{!142, !513, !55}
!552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !553, size: 64)
!553 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !554)
!554 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!555 = !DISubroutineType(types: !556)
!556 = !{!7, !7, !180, !139}
!557 = !DISubroutineType(types: !558)
!558 = !{!7, !180, !559}
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !560, size: 64)
!560 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !429)
!561 = !DISubroutineType(types: !562)
!562 = !{!7, !356, !180, !7, !413, !142, !413}
!563 = !DISubroutineType(types: !564)
!564 = !{!142, !180, !7, !180, !7, !356}
!565 = !DISubroutineType(types: !566)
!566 = !{null, !567, !180}
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 64)
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "error_context", file: !569, line: 25, size: 192, elements: !570)
!569 = !DIFile(filename: "/usr/include/attr/error_context.h", directory: "")
!570 = !{!571, !575, !579}
!571 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !568, file: !569, line: 27, baseType: !572, size: 64)
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 64)
!573 = !DISubroutineType(types: !574)
!574 = !{null, !567, !180, null}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "quote", scope: !568, file: !569, line: 30, baseType: !576, size: 64, offset: 64)
!576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !577, size: 64)
!577 = !DISubroutineType(types: !578)
!578 = !{!180, !567, !180}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "quote_free", scope: !568, file: !569, line: 33, baseType: !580, size: 64, offset: 128)
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 64)
!581 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !353, line: 52, baseType: !582)
!582 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !583, line: 32, baseType: !584)
!583 = !DIFile(filename: "llvm9/build/lib/clang/9.0.0/include/stdarg.h", directory: "/home/mbarbar/software")
!584 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !349, line: 623, baseType: !585)
!585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !586, size: 192, elements: !38)
!586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !349, line: 623, size: 192, elements: !587)
!587 = !{!588, !589, !590, !591}
!588 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !586, file: !349, line: 623, baseType: !70, size: 32)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !586, file: !349, line: 623, baseType: !70, size: 32, offset: 32)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !586, file: !349, line: 623, baseType: !53, size: 64, offset: 64)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !586, file: !349, line: 623, baseType: !53, size: 64, offset: 128)
!592 = !DISubroutineType(types: !593)
!593 = !{!7, !180, !567}
!594 = !DISubroutineType(types: !595)
!595 = !{null, !180, !7, !413}
!596 = !{!597, !346, !600, !602, !605, !607}
!597 = !DIGlobalVariableExpression(var: !598, expr: !DIExpression())
!598 = distinct !DIGlobalVariable(name: "mask", scope: !599, file: !349, line: 3051, type: !139, isLocal: true, isDefinition: true)
!599 = distinct !DISubprogram(name: "cached_umask", scope: !349, file: !349, line: 3049, type: !409, scopeLine: 3050, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !348, retainedNodes: !209)
!600 = !DIGlobalVariableExpression(var: !601, expr: !DIExpression())
!601 = distinct !DIGlobalVariable(name: "top_level_dst_name", scope: !348, file: !349, line: 148, type: !180, isLocal: true, isDefinition: true)
!602 = !DIGlobalVariableExpression(var: !603, expr: !DIExpression())
!603 = distinct !DIGlobalVariable(name: "zeros", scope: !604, file: !349, line: 351, type: !9, isLocal: true, isDefinition: true)
!604 = distinct !DISubprogram(name: "write_zeros", scope: !349, file: !349, line: 349, type: !538, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!605 = !DIGlobalVariableExpression(var: !606, expr: !DIExpression())
!606 = distinct !DIGlobalVariable(name: "nz", scope: !604, file: !349, line: 352, type: !55, isLocal: true, isDefinition: true)
!607 = !DIGlobalVariableExpression(var: !608, expr: !DIExpression())
!608 = distinct !DIGlobalVariable(name: "fallback", scope: !604, file: !349, line: 359, type: !609, isLocal: true, isDefinition: true)
!609 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 8192, elements: !610)
!610 = !{!611}
!611 = !DISubrange(count: 1024)
!612 = !DIGlobalVariableExpression(var: !613, expr: !DIExpression())
!613 = distinct !DIGlobalVariable(name: "src_to_dest", scope: !614, file: !615, line: 45, type: !175, isLocal: true, isDefinition: true)
!614 = distinct !DICompileUnit(language: DW_LANG_C99, file: !615, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !616, globals: !637, nameTableKind: None)
!615 = !DIFile(filename: "src/cp-hash.c", directory: "/home/mbarbar/software/coreutils-8.31")
!616 = !{!53, !9, !544, !617, !619, !441, !443, !175, !625, !627, !629, !200, !631, !633, !635}
!617 = !DISubroutineType(types: !618)
!618 = !{null, !441, !443}
!619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !620, size: 64)
!620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Src_to_dest", file: !615, line: 33, size: 192, elements: !621)
!621 = !{!622, !623, !624}
!622 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !620, file: !615, line: 35, baseType: !441, size: 64)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !620, file: !615, line: 36, baseType: !443, size: 64, offset: 64)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !620, file: !615, line: 40, baseType: !9, size: 64, offset: 128)
!625 = !DISubroutineType(types: !626)
!626 = !{!9, !441, !443}
!627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !628, size: 64)
!628 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !620)
!629 = !DISubroutineType(types: !630)
!630 = !{!9, !180, !441, !443}
!631 = !DISubroutineType(types: !632)
!632 = !{null, !53}
!633 = !DISubroutineType(types: !634)
!634 = !{!55, !513, !55}
!635 = !DISubroutineType(types: !636)
!636 = !{!142, !513, !513}
!637 = !{!612}
!638 = !DIGlobalVariableExpression(var: !639, expr: !DIExpression())
!639 = distinct !DIGlobalVariable(name: "simple_pattern", scope: !640, file: !641, line: 38, type: !653, isLocal: true, isDefinition: true)
!640 = distinct !DICompileUnit(language: DW_LANG_C99, file: !641, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !642, globals: !670, nameTableKind: None)
!641 = !DIFile(filename: "src/force-link.c", directory: "/home/mbarbar/software/coreutils-8.31")
!642 = !{!643, !7, !645, !9, !648, !650, !652, !55, !653, !656, !658, !180, !665}
!643 = !DISubroutineType(types: !644)
!644 = !{!7, !7, !180, !7, !180, !7, !142, !7}
!645 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 2048, elements: !646)
!646 = !{!647}
!647 = !DISubrange(count: 256)
!648 = !DISubroutineType(types: !649)
!649 = !{!7, !180, !7, !180, !142, !7}
!650 = !DISubroutineType(types: !651)
!651 = !{!9, !180, !9}
!652 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !56, line: 35, baseType: !31)
!653 = !DICompositeType(tag: DW_TAG_array_type, baseType: !181, size: 72, elements: !654)
!654 = !{!655}
!655 = !DISubrange(count: 9)
!656 = !DISubroutineType(types: !657)
!657 = !{!7, !9, !53}
!658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !659, size: 64)
!659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "link_arg", file: !641, line: 71, size: 192, elements: !660)
!660 = !{!661, !662, !663, !664}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "srcdir", scope: !659, file: !641, line: 73, baseType: !7, size: 32)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "srcname", scope: !659, file: !641, line: 74, baseType: !180, size: 64, offset: 64)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "dstdir", scope: !659, file: !641, line: 75, baseType: !7, size: 32, offset: 128)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !659, file: !641, line: 76, baseType: !7, size: 32, offset: 160)
!665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 64)
!666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "symlink_arg", file: !641, line: 131, size: 128, elements: !667)
!667 = !{!668, !669}
!668 = !DIDerivedType(tag: DW_TAG_member, name: "srcname", scope: !666, file: !641, line: 133, baseType: !180, size: 64)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "dstdir", scope: !666, file: !641, line: 134, baseType: !7, size: 32, offset: 64)
!670 = !{!638}
!671 = !DIGlobalVariableExpression(var: !672, expr: !DIExpression())
!672 = distinct !DIGlobalVariable(name: "Version", scope: !673, file: !674, line: 2, type: !180, isLocal: false, isDefinition: true)
!673 = distinct !DICompileUnit(language: DW_LANG_C99, file: !674, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !675, globals: !676, nameTableKind: None)
!674 = !DIFile(filename: "src/version.c", directory: "/home/mbarbar/software/coreutils-8.31")
!675 = !{!180}
!676 = !{!671}
!677 = !DIGlobalVariableExpression(var: !678, expr: !DIExpression())
!678 = distinct !DIGlobalVariable(name: "simple_backup_suffix", scope: !679, file: !683, line: 82, type: !180, isLocal: false, isDefinition: true)
!679 = distinct !DICompileUnit(language: DW_LANG_C99, file: !680, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !681, retainedTypes: !689, globals: !713, nameTableKind: None)
!680 = !DIFile(filename: "./lib/backupfile.c", directory: "/home/mbarbar/software/coreutils-8.31")
!681 = !{!68, !682}
!682 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "numbered_backup_result", file: !683, line: 172, baseType: !70, size: 32, elements: !684)
!683 = !DIFile(filename: "lib/backupfile.c", directory: "/home/mbarbar/software/coreutils-8.31")
!684 = !{!685, !686, !687, !688}
!685 = !DIEnumerator(name: "BACKUP_IS_SAME_LENGTH", value: 0, isUnsigned: true)
!686 = !DIEnumerator(name: "BACKUP_IS_LONGER", value: 1, isUnsigned: true)
!687 = !DIEnumerator(name: "BACKUP_IS_NEW", value: 2, isUnsigned: true)
!688 = !DIEnumerator(name: "BACKUP_NOMEM", value: 3, isUnsigned: true)
!689 = !{!53, !70, !55, !180, !202, !181, !690, !652, !692, !9, !693, !7, !697, !700, !709, !142, !10, !710, !31}
!690 = !DISubroutineType(types: !691)
!691 = !{!9, !7, !180, !68, !142}
!692 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !112, line: 108, baseType: !549)
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 64)
!694 = !DIDerivedType(tag: DW_TAG_typedef, name: "DIR", file: !695, line: 127, baseType: !696)
!695 = !DIFile(filename: "/usr/include/dirent.h", directory: "")
!696 = !DICompositeType(tag: DW_TAG_structure_type, name: "__dirstream", file: !695, line: 127, flags: DIFlagFwdDecl)
!697 = !DISubroutineType(types: !698)
!698 = !{!682, !7, !184, !55, !55, !652, !699, !193}
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 64)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !702, line: 22, size: 2240, elements: !703)
!702 = !DIFile(filename: "/usr/include/bits/dirent.h", directory: "")
!703 = !{!704, !705, !706, !707, !708}
!704 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !701, file: !702, line: 25, baseType: !276, size: 64)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !701, file: !702, line: 26, baseType: !29, size: 64, offset: 64)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !701, file: !702, line: 31, baseType: !33, size: 16, offset: 128)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !701, file: !702, line: 32, baseType: !554, size: 8, offset: 144)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !701, file: !702, line: 33, baseType: !645, size: 2048, offset: 152)
!709 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 16, elements: !304)
!710 = !DISubroutineType(types: !711)
!711 = !{null, !9, !55, !10, !7, !712}
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 64)
!713 = !{!677}
!714 = !DIGlobalVariableExpression(var: !715, expr: !DIExpression())
!715 = distinct !DIGlobalVariable(name: "backup_args", scope: !716, file: !736, line: 42, type: !728, isLocal: true, isDefinition: true)
!716 = distinct !DICompileUnit(language: DW_LANG_C99, file: !717, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !718, retainedTypes: !719, globals: !733, nameTableKind: None)
!717 = !DIFile(filename: "./lib/backup-find.c", directory: "/home/mbarbar/software/coreutils-8.31")
!718 = !{!68}
!719 = !{!180, !720, !9, !722, !181, !724, !728, !730}
!720 = !DISubroutineType(types: !721)
!721 = !{!9, !7, !180, !68}
!722 = !DISubroutineType(types: !723)
!723 = !{!68, !180, !180}
!724 = !DICompositeType(tag: DW_TAG_array_type, baseType: !725, size: 256, elements: !726)
!725 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !68)
!726 = !{!727}
!727 = !DISubrange(count: 8)
!728 = !DICompositeType(tag: DW_TAG_array_type, baseType: !729, size: 576, elements: !654)
!729 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !180)
!730 = !DIDerivedType(tag: DW_TAG_typedef, name: "argmatch_exit_fn", file: !731, line: 55, baseType: !732)
!731 = !DIFile(filename: "./lib/argmatch.h", directory: "/home/mbarbar/software/coreutils-8.31")
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !200, size: 64)
!733 = !{!734, !714}
!734 = !DIGlobalVariableExpression(var: !735, expr: !DIExpression())
!735 = distinct !DIGlobalVariable(name: "backup_types", scope: !716, file: !736, line: 53, type: !724, isLocal: true, isDefinition: true)
!736 = !DIFile(filename: "lib/backup-find.c", directory: "/home/mbarbar/software/coreutils-8.31")
!737 = !DIGlobalVariableExpression(var: !738, expr: !DIExpression())
!738 = distinct !DIGlobalVariable(name: "file_name", scope: !739, file: !778, line: 37, type: !180, isLocal: true, isDefinition: true)
!739 = distinct !DICompileUnit(language: DW_LANG_C99, file: !740, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !741, globals: !777, nameTableKind: None)
!740 = !DIFile(filename: "./lib/closein.c", directory: "/home/mbarbar/software/coreutils-8.31")
!741 = !{!202, !180, !200, !142, !742, !7, !776}
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !743, size: 64)
!743 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !744)
!744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !745)
!745 = !{!746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775}
!746 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !744, file: !4, line: 51, baseType: !7, size: 32)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !744, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !744, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !744, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !744, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !744, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !744, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !744, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !744, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !744, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !744, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !744, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !744, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !744, file: !4, line: 70, baseType: !760, size: 64, offset: 832)
!760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !744, size: 64)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !744, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !744, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !744, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !744, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !744, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !744, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !744, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !744, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !744, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !744, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !744, file: !4, line: 93, baseType: !760, size: 64, offset: 1344)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !744, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !744, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !744, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !744, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!776 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!777 = !{!737}
!778 = !DIFile(filename: "lib/closein.c", directory: "/home/mbarbar/software/coreutils-8.31")
!779 = !DIGlobalVariableExpression(var: !780, expr: !DIExpression())
!780 = distinct !DIGlobalVariable(name: "file_name", scope: !781, file: !823, line: 46, type: !180, isLocal: true, isDefinition: true)
!781 = distinct !DICompileUnit(language: DW_LANG_C99, file: !782, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !783, globals: !820, nameTableKind: None)
!782 = !DIFile(filename: "./lib/closeout.c", directory: "/home/mbarbar/software/coreutils-8.31")
!783 = !{!202, !180, !784, !142, !200, !786, !7, !776}
!784 = !DISubroutineType(types: !785)
!785 = !{null, !142}
!786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 64)
!787 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !788)
!788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !789)
!789 = !{!790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819}
!790 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !788, file: !4, line: 51, baseType: !7, size: 32)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !788, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !788, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !788, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !788, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !788, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !788, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !788, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !788, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !788, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !788, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !788, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !788, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !788, file: !4, line: 70, baseType: !804, size: 64, offset: 832)
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !788, size: 64)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !788, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !788, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !788, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !788, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !788, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !788, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !788, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !788, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !788, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !788, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !788, file: !4, line: 93, baseType: !804, size: 64, offset: 1344)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !788, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !788, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !788, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !788, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!820 = !{!779, !821}
!821 = !DIGlobalVariableExpression(var: !822, expr: !DIExpression())
!822 = distinct !DIGlobalVariable(name: "ignore_EPIPE", scope: !781, file: !823, line: 56, type: !142, isLocal: true, isDefinition: true)
!823 = !DIFile(filename: "lib/closeout.c", directory: "/home/mbarbar/software/coreutils-8.31")
!824 = !DIGlobalVariableExpression(var: !825, expr: !DIExpression())
!825 = distinct !DIGlobalVariable(name: "exit_failure", scope: !826, file: !830, line: 24, type: !776, isLocal: false, isDefinition: true)
!826 = distinct !DICompileUnit(language: DW_LANG_C99, file: !827, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !828, globals: !829, nameTableKind: None)
!827 = !DIFile(filename: "./lib/exitfail.c", directory: "/home/mbarbar/software/coreutils-8.31")
!828 = !{!776}
!829 = !{!824}
!830 = !DIFile(filename: "lib/exitfail.c", directory: "/home/mbarbar/software/coreutils-8.31")
!831 = !DIGlobalVariableExpression(var: !832, expr: !DIExpression())
!832 = distinct !DIGlobalVariable(name: "default_tuning", scope: !833, file: !842, line: 130, type: !858, isLocal: true, isDefinition: true)
!833 = distinct !DICompileUnit(language: DW_LANG_C99, file: !834, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !835, globals: !965, nameTableKind: None)
!834 = !DIFile(filename: "./lib/hash.c", directory: "/home/mbarbar/software/coreutils-8.31")
!835 = !{!57, !53, !55, !836, !839, !851, !845, !878, !880, !916, !872, !918, !920, !922, !923, !929, !554, !181, !931, !858, !934, !936, !840, !857, !869, !875, !937, !939, !941, !513, !863, !142, !944, !7, !946, !633, !635, !948, !950, !952, !954, !956, !958, !960, !963}
!836 = !DISubroutineType(types: !837)
!837 = !{!55, !838}
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 64)
!839 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !840)
!840 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_table", file: !177, line: 69, baseType: !841)
!841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_table", file: !842, line: 52, size: 640, elements: !843)
!842 = !DIFile(filename: "lib/hash.c", directory: "/home/mbarbar/software/coreutils-8.31")
!843 = !{!844, !850, !853, !854, !855, !856, !868, !871, !874, !877}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "bucket", scope: !841, file: !842, line: 57, baseType: !845, size: 64)
!845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !846, size: 64)
!846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_entry", file: !842, line: 46, size: 128, elements: !847)
!847 = !{!848, !849}
!848 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !846, file: !842, line: 48, baseType: !53, size: 64)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !846, file: !842, line: 49, baseType: !845, size: 64, offset: 64)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "bucket_limit", scope: !841, file: !842, line: 58, baseType: !851, size: 64, offset: 64)
!851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !852, size: 64)
!852 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !846)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "n_buckets", scope: !841, file: !842, line: 59, baseType: !55, size: 64, offset: 128)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "n_buckets_used", scope: !841, file: !842, line: 60, baseType: !55, size: 64, offset: 192)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "n_entries", scope: !841, file: !842, line: 61, baseType: !55, size: 64, offset: 256)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "tuning", scope: !841, file: !842, line: 64, baseType: !857, size: 64, offset: 320)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 64)
!858 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !859)
!859 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_tuning", file: !177, line: 65, baseType: !860)
!860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hash_tuning", file: !177, line: 53, size: 160, elements: !861)
!861 = !{!862, !864, !865, !866, !867}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_threshold", scope: !860, file: !177, line: 58, baseType: !863, size: 32)
!863 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_factor", scope: !860, file: !177, line: 59, baseType: !863, size: 32, offset: 32)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "growth_threshold", scope: !860, file: !177, line: 60, baseType: !863, size: 32, offset: 64)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "growth_factor", scope: !860, file: !177, line: 61, baseType: !863, size: 32, offset: 96)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "is_n_buckets", scope: !860, file: !177, line: 62, baseType: !142, size: 8, offset: 128)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "hasher", scope: !841, file: !842, line: 71, baseType: !869, size: 64, offset: 384)
!869 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_hasher", file: !177, line: 48, baseType: !870)
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !633, size: 64)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "comparator", scope: !841, file: !842, line: 72, baseType: !872, size: 64, offset: 448)
!872 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_comparator", file: !177, line: 49, baseType: !873)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !635, size: 64)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "data_freer", scope: !841, file: !842, line: 73, baseType: !875, size: 64, offset: 512)
!875 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_data_freer", file: !177, line: 50, baseType: !876)
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !631, size: 64)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "free_entry_list", scope: !841, file: !842, line: 76, baseType: !845, size: 64, offset: 576)
!878 = !DISubroutineType(types: !879)
!879 = !{!142, !838}
!880 = !DISubroutineType(types: !881)
!881 = !{null, !838, !882}
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !883, size: 64)
!883 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !884)
!884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !885)
!885 = !{!886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !884, file: !4, line: 51, baseType: !7, size: 32)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !884, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !884, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !884, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !884, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !884, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !884, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !884, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !884, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !884, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !884, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !884, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !884, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !884, file: !4, line: 70, baseType: !900, size: 64, offset: 832)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !884, size: 64)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !884, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !884, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !884, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !884, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !884, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !884, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !884, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !884, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !884, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !884, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !884, file: !4, line: 93, baseType: !900, size: 64, offset: 1344)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !884, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !884, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !884, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !884, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!916 = !DISubroutineType(types: !917)
!917 = !{!53, !838, !513}
!918 = !DISubroutineType(types: !919)
!919 = !{!53, !838}
!920 = !DISubroutineType(types: !921)
!921 = !{!55, !838, !922, !55}
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !53, size: 64)
!923 = !DISubroutineType(types: !924)
!924 = !{!55, !838, !925, !53}
!925 = !DIDerivedType(tag: DW_TAG_typedef, name: "Hash_processor", file: !177, line: 51, baseType: !926)
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 64)
!927 = !DISubroutineType(types: !928)
!928 = !{!142, !53, !53}
!929 = !DISubroutineType(types: !930)
!930 = !{!55, !180, !55}
!931 = !DISubroutineType(types: !932)
!932 = !{null, !933}
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 64)
!934 = !DISubroutineType(types: !935)
!935 = !{!936, !55, !857, !869, !872, !875}
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 64)
!937 = !DISubroutineType(types: !938)
!938 = !{null, !936}
!939 = !DISubroutineType(types: !940)
!940 = !{!142, !936, !55}
!941 = !DISubroutineType(types: !942)
!942 = !{!7, !936, !513, !943}
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !513, size: 64)
!944 = !DISubroutineType(types: !945)
!945 = !{!53, !936, !513}
!946 = !DISubroutineType(types: !947)
!947 = !{!845, !838, !513}
!948 = !DISubroutineType(types: !949)
!949 = !{!142, !936}
!950 = !DISubroutineType(types: !951)
!951 = !{!55, !55, !857}
!952 = !DISubroutineType(types: !953)
!953 = !{!55, !55}
!954 = !DISubroutineType(types: !955)
!955 = !{!142, !55}
!956 = !DISubroutineType(types: !957)
!957 = !{!142, !936, !936, !142}
!958 = !DISubroutineType(types: !959)
!959 = !{null, !936, !845}
!960 = !DISubroutineType(types: !961)
!961 = !{!53, !936, !513, !962, !142}
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !845, size: 64)
!963 = !DISubroutineType(types: !964)
!964 = !{!845, !936}
!965 = !{!831}
!966 = !DIGlobalVariableExpression(var: !967, expr: !DIExpression())
!967 = distinct !DIGlobalVariable(name: "program_name", scope: !968, file: !1006, line: 33, type: !180, isLocal: false, isDefinition: true)
!968 = distinct !DICompileUnit(language: DW_LANG_C99, file: !969, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !970, globals: !1005, nameTableKind: None)
!969 = !DIFile(filename: "./lib/progname.c", directory: "/home/mbarbar/software/coreutils-8.31")
!970 = !{!53, !9, !180, !202, !971}
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !973)
!973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !974)
!974 = !{!975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004}
!975 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !973, file: !4, line: 51, baseType: !7, size: 32)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !973, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !973, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !973, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !973, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !973, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !973, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !973, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !973, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !973, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !973, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !973, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !973, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !973, file: !4, line: 70, baseType: !989, size: 64, offset: 832)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !973, size: 64)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !973, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !973, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !973, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !973, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !973, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !973, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !973, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !973, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !973, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !973, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !973, file: !4, line: 93, baseType: !989, size: 64, offset: 1344)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !973, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !973, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !973, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !973, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1005 = !{!966}
!1006 = !DIFile(filename: "lib/progname.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1007 = !DIGlobalVariableExpression(var: !1008, expr: !DIExpression())
!1008 = distinct !DIGlobalVariable(name: "quoting_style_args", scope: !1009, file: !1038, line: 85, type: !1027, isLocal: false, isDefinition: true)
!1009 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1010, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1011, retainedTypes: !1026, globals: !1132, nameTableKind: None)
!1010 = !DIFile(filename: "./lib/quotearg.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1011 = !{!1012}
!1012 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quoting_style", file: !1013, line: 32, baseType: !70, size: 32, elements: !1014)
!1013 = !DIFile(filename: "./lib/quotearg.h", directory: "/home/mbarbar/software/coreutils-8.31")
!1014 = !{!1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025}
!1015 = !DIEnumerator(name: "literal_quoting_style", value: 0, isUnsigned: true)
!1016 = !DIEnumerator(name: "shell_quoting_style", value: 1, isUnsigned: true)
!1017 = !DIEnumerator(name: "shell_always_quoting_style", value: 2, isUnsigned: true)
!1018 = !DIEnumerator(name: "shell_escape_quoting_style", value: 3, isUnsigned: true)
!1019 = !DIEnumerator(name: "shell_escape_always_quoting_style", value: 4, isUnsigned: true)
!1020 = !DIEnumerator(name: "c_quoting_style", value: 5, isUnsigned: true)
!1021 = !DIEnumerator(name: "c_maybe_quoting_style", value: 6, isUnsigned: true)
!1022 = !DIEnumerator(name: "escape_quoting_style", value: 7, isUnsigned: true)
!1023 = !DIEnumerator(name: "locale_quoting_style", value: 8, isUnsigned: true)
!1024 = !DIEnumerator(name: "clocale_quoting_style", value: 9, isUnsigned: true)
!1025 = !DIEnumerator(name: "custom_quoting_style", value: 10, isUnsigned: true)
!1026 = !{!7, !33, !55, !1027, !1030, !1034, !1036, !1046, !1050, !1052, !554, !1054, !70, !1055, !1057, !180, !1059, !1048, !1061, !1063, !9, !200, !1065, !645, !1070, !1072, !218, !1074, !1076, !1078, !1080, !1082, !1084, !1086, !1088, !1090, !1092, !1094, !1096, !1098, !1100, !1102, !1104, !142, !181, !1108, !1110, !1125, !1106, !1126, !1128, !1130}
!1027 = !DICompositeType(tag: DW_TAG_array_type, baseType: !729, size: 704, elements: !1028)
!1028 = !{!1029}
!1029 = !DISubrange(count: 11)
!1030 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1031, size: 320, elements: !1032)
!1031 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1012)
!1032 = !{!1033}
!1033 = !DISubrange(count: 10)
!1034 = !DISubroutineType(types: !1035)
!1035 = !{!1036, !1036}
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 64)
!1037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quoting_options", file: !1038, line: 65, size: 448, elements: !1039)
!1038 = !DIFile(filename: "lib/quotearg.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1039 = !{!1040, !1041, !1042, !1044, !1045}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !1037, file: !1038, line: 68, baseType: !1012, size: 32)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1037, file: !1038, line: 71, baseType: !7, size: 32, offset: 32)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "quote_these_too", scope: !1037, file: !1038, line: 75, baseType: !1043, size: 256, offset: 64)
!1043 = !DICompositeType(tag: DW_TAG_array_type, baseType: !70, size: 256, elements: !726)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "left_quote", scope: !1037, file: !1038, line: 78, baseType: !180, size: 64, offset: 320)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "right_quote", scope: !1037, file: !1038, line: 81, baseType: !180, size: 64, offset: 384)
!1046 = !DISubroutineType(types: !1047)
!1047 = !{!1012, !1048}
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64)
!1049 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1037)
!1050 = !DISubroutineType(types: !1051)
!1051 = !{null, !1036, !1012}
!1052 = !DISubroutineType(types: !1053)
!1053 = !{!7, !1036, !10, !7}
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !70, size: 64)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{!7, !1036, !7}
!1057 = !DISubroutineType(types: !1058)
!1058 = !{null, !1036, !180, !180}
!1059 = !DISubroutineType(types: !1060)
!1060 = !{!55, !9, !55, !180, !55, !1048}
!1061 = !DISubroutineType(types: !1062)
!1062 = !{!9, !180, !55, !1048}
!1063 = !DISubroutineType(types: !1064)
!1064 = !{!9, !180, !55, !712, !1048}
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1066, size: 64)
!1066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "slotvec", file: !1038, line: 834, size: 128, elements: !1067)
!1067 = !{!1068, !1069}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1066, file: !1038, line: 836, baseType: !55, size: 64)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1066, file: !1038, line: 837, baseType: !9, size: 64, offset: 64)
!1070 = !DISubroutineType(types: !1071)
!1071 = !{!9, !7, !180}
!1072 = !DISubroutineType(types: !1073)
!1073 = !{!9, !7, !180, !55}
!1074 = !DISubroutineType(types: !1075)
!1075 = !{!9, !180, !55}
!1076 = !DISubroutineType(types: !1077)
!1077 = !{!9, !7, !1012, !180}
!1078 = !DISubroutineType(types: !1079)
!1079 = !{!9, !7, !1012, !180, !55}
!1080 = !DISubroutineType(types: !1081)
!1081 = !{!9, !1012, !180}
!1082 = !DISubroutineType(types: !1083)
!1083 = !{!9, !1012, !180, !55}
!1084 = !DISubroutineType(types: !1085)
!1085 = !{!9, !180, !55, !10}
!1086 = !DISubroutineType(types: !1087)
!1087 = !{!9, !180, !10}
!1088 = !DISubroutineType(types: !1089)
!1089 = !{!9, !7, !180, !180, !180}
!1090 = !DISubroutineType(types: !1091)
!1091 = !{!9, !7, !180, !180, !180, !55}
!1092 = !DISubroutineType(types: !1093)
!1093 = !{!9, !180, !180, !180}
!1094 = !DISubroutineType(types: !1095)
!1095 = !{!9, !180, !180, !180, !55}
!1096 = !DISubroutineType(types: !1097)
!1097 = !{!180, !7, !180, !55}
!1098 = !DISubroutineType(types: !1099)
!1099 = !{!180, !180, !55}
!1100 = !DISubroutineType(types: !1101)
!1101 = !{!180, !7, !180}
!1102 = !DISubroutineType(types: !1103)
!1103 = !{!180, !180}
!1104 = !DISubroutineType(types: !1105)
!1105 = !{!55, !9, !55, !180, !55, !1012, !7, !1106, !180, !180}
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64)
!1107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !70)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 64)
!1109 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !33)
!1110 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !1111, line: 6, baseType: !1112)
!1111 = !DIFile(filename: "/usr/include/bits/types/mbstate_t.h", directory: "")
!1112 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !1113, line: 21, baseType: !1114)
!1113 = !DIFile(filename: "/usr/include/bits/types/__mbstate_t.h", directory: "")
!1114 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1113, line: 13, size: 64, elements: !1115)
!1115 = !{!1116, !1117}
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1114, file: !1113, line: 15, baseType: !7, size: 32)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !1114, file: !1113, line: 20, baseType: !1118, size: 32, offset: 32)
!1118 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1114, file: !1113, line: 16, size: 32, elements: !1119)
!1119 = !{!1120, !1121}
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !1118, file: !1113, line: 18, baseType: !70, size: 32)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !1118, file: !1113, line: 19, baseType: !1122, size: 32)
!1122 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 32, elements: !1123)
!1123 = !{!1124}
!1124 = !DISubrange(count: 4)
!1125 = !DIDerivedType(tag: DW_TAG_typedef, name: "wchar_t", file: !56, line: 74, baseType: !7)
!1126 = !DISubroutineType(types: !1127)
!1127 = !{!180, !180, !1012}
!1128 = !DISubroutineType(types: !1129)
!1129 = !{!9, !7, !180, !55, !1048}
!1130 = !DISubroutineType(types: !1131)
!1131 = !{!1037, !1012}
!1132 = !{!1007, !1133, !1135, !1137, !1139, !1141, !1143, !1145}
!1133 = !DIGlobalVariableExpression(var: !1134, expr: !DIExpression())
!1134 = distinct !DIGlobalVariable(name: "quoting_style_vals", scope: !1009, file: !1038, line: 101, type: !1030, isLocal: false, isDefinition: true)
!1135 = !DIGlobalVariableExpression(var: !1136, expr: !DIExpression())
!1136 = distinct !DIGlobalVariable(name: "quote_quoting_options", scope: !1009, file: !1038, line: 1052, type: !1037, isLocal: false, isDefinition: true)
!1137 = !DIGlobalVariableExpression(var: !1138, expr: !DIExpression())
!1138 = distinct !DIGlobalVariable(name: "default_quoting_options", scope: !1009, file: !1038, line: 116, type: !1037, isLocal: true, isDefinition: true)
!1139 = !DIGlobalVariableExpression(var: !1140, expr: !DIExpression())
!1140 = distinct !DIGlobalVariable(name: "slot0", scope: !1009, file: !1038, line: 842, type: !645, isLocal: true, isDefinition: true)
!1141 = !DIGlobalVariableExpression(var: !1142, expr: !DIExpression())
!1142 = distinct !DIGlobalVariable(name: "slotvec", scope: !1009, file: !1038, line: 845, type: !1065, isLocal: true, isDefinition: true)
!1143 = !DIGlobalVariableExpression(var: !1144, expr: !DIExpression())
!1144 = distinct !DIGlobalVariable(name: "nslots", scope: !1009, file: !1038, line: 843, type: !7, isLocal: true, isDefinition: true)
!1145 = !DIGlobalVariableExpression(var: !1146, expr: !DIExpression())
!1146 = distinct !DIGlobalVariable(name: "slotvec0", scope: !1009, file: !1038, line: 844, type: !1066, isLocal: true, isDefinition: true)
!1147 = !DIGlobalVariableExpression(var: !1148, expr: !DIExpression())
!1148 = distinct !DIGlobalVariable(name: "comparison_function_table", scope: !1149, file: !1164, line: 74, type: !1174, isLocal: true, isDefinition: true)
!1149 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1150, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1151, retainedTypes: !1159, globals: !1189, nameTableKind: None)
!1150 = !DIFile(filename: "./lib/savedir.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1151 = !{!1152}
!1152 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "savedir_option", file: !1153, line: 26, baseType: !70, size: 32, elements: !1154)
!1153 = !DIFile(filename: "./lib/savedir.h", directory: "/home/mbarbar/software/coreutils-8.31")
!1154 = !{!1155, !1156, !1157, !1158}
!1155 = !DIEnumerator(name: "SAVEDIR_SORT_NONE", value: 0, isUnsigned: true)
!1156 = !DIEnumerator(name: "SAVEDIR_SORT_NAME", value: 1, isUnsigned: true)
!1157 = !DIEnumerator(name: "SAVEDIR_SORT_INODE", value: 2, isUnsigned: true)
!1158 = !DIEnumerator(name: "SAVEDIR_SORT_FASTREAD", value: 2, isUnsigned: true)
!1159 = !{!53, !1160, !9, !55, !1162, !7, !1170, !1174, !1176, !180, !1163, !276, !1169, !1185, !693, !1172, !1187, !1188}
!1160 = !DISubroutineType(types: !1161)
!1161 = !{!9, !693, !1152}
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 64)
!1163 = !DIDerivedType(tag: DW_TAG_typedef, name: "direntry_t", file: !1164, line: 46, baseType: !1165)
!1164 = !DIFile(filename: "lib/savedir.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1165 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1164, line: 40, size: 128, elements: !1166)
!1166 = !{!1167, !1168}
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1165, file: !1164, line: 42, baseType: !9, size: 64)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1165, file: !1164, line: 44, baseType: !1169, size: 64, offset: 64)
!1169 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !695, line: 34, baseType: !276)
!1170 = !DIDerivedType(tag: DW_TAG_typedef, name: "comparison_function", file: !1164, line: 72, baseType: !1171)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 64)
!1172 = !DISubroutineType(types: !1173)
!1173 = !{!7, !513, !513}
!1174 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1175, size: 192, elements: !301)
!1175 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1170)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 64)
!1177 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1178)
!1178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dirent", file: !702, line: 22, size: 2240, elements: !1179)
!1179 = !{!1180, !1181, !1182, !1183, !1184}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino", scope: !1178, file: !702, line: 25, baseType: !276, size: 64)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "d_off", scope: !1178, file: !702, line: 26, baseType: !29, size: 64, offset: 64)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "d_reclen", scope: !1178, file: !702, line: 31, baseType: !33, size: 16, offset: 128)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "d_type", scope: !1178, file: !702, line: 32, baseType: !554, size: 8, offset: 144)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !1178, file: !702, line: 33, baseType: !645, size: 2048, offset: 152)
!1185 = !DISubroutineType(types: !1186)
!1186 = !{!9, !180, !1152}
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 64)
!1188 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1163)
!1189 = !{!1147}
!1190 = !DIGlobalVariableExpression(var: !1191, expr: !DIExpression())
!1191 = distinct !DIGlobalVariable(name: "letters", scope: !1192, file: !1213, line: 184, type: !1201, isLocal: true, isDefinition: true)
!1192 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1193, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1194, globals: !1212, nameTableKind: None)
!1193 = !DIFile(filename: "./lib/tempname.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1194 = !{!1195, !55, !9, !70, !7, !1198, !1201, !1204, !1197, !1206, !1208, !1210, !656, !193}
!1195 = !DISubroutineType(types: !1196)
!1196 = !{!7, !9, !7, !53, !1197, !55}
!1197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !656, size: 64)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 64)
!1199 = !DICompositeType(tag: DW_TAG_structure_type, name: "randint_source", file: !1200, line: 33, flags: DIFlagFwdDecl)
!1200 = !DIFile(filename: "./lib/randint.h", directory: "/home/mbarbar/software/coreutils-8.31")
!1201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !181, size: 504, elements: !1202)
!1202 = !{!1203}
!1203 = !DISubrange(count: 63)
!1204 = !DISubroutineType(types: !1205)
!1205 = !{!7, !9, !7, !7, !7, !55}
!1206 = !DISubroutineType(types: !1207)
!1207 = !{!7, !9, !7, !7, !7}
!1208 = !DISubroutineType(types: !1209)
!1209 = !{!7, !9, !7, !53, !1197}
!1210 = !DISubroutineType(types: !1211)
!1211 = !{!142, !180, !55}
!1212 = !{!1190}
!1213 = !DIFile(filename: "lib/tempname.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1214 = !DIGlobalVariableExpression(var: !1215, expr: !DIExpression())
!1215 = distinct !DIGlobalVariable(name: "ht", scope: !1216, file: !1217, line: 163, type: !175, isLocal: true, isDefinition: true)
!1216 = distinct !DISubprogram(name: "utimecmpat", scope: !1217, file: !1217, line: 132, type: !1218, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1243, retainedNodes: !209)
!1217 = !DIFile(filename: "lib/utimecmp.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1218 = !DISubroutineType(types: !1219)
!1219 = !{!7, !7, !180, !1220, !1220, !7}
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 64)
!1221 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1222)
!1222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !271, line: 46, size: 1152, elements: !1223)
!1223 = !{!1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1240, !1241, !1242}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1222, file: !271, line: 48, baseType: !274, size: 64)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1222, file: !271, line: 53, baseType: !276, size: 64, offset: 64)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1222, file: !271, line: 61, baseType: !278, size: 64, offset: 128)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1222, file: !271, line: 62, baseType: !140, size: 32, offset: 192)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1222, file: !271, line: 64, baseType: !128, size: 32, offset: 224)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1222, file: !271, line: 65, baseType: !130, size: 32, offset: 256)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1222, file: !271, line: 67, baseType: !7, size: 32, offset: 288)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1222, file: !271, line: 69, baseType: !274, size: 64, offset: 320)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1222, file: !271, line: 74, baseType: !29, size: 64, offset: 384)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1222, file: !271, line: 78, baseType: !286, size: 64, offset: 448)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1222, file: !271, line: 80, baseType: !288, size: 64, offset: 512)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1222, file: !271, line: 91, baseType: !1236, size: 128, offset: 576)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !291, line: 9, size: 128, elements: !1237)
!1237 = !{!1238, !1239}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1236, file: !291, line: 11, baseType: !294, size: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1236, file: !291, line: 12, baseType: !296, size: 64, offset: 64)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1222, file: !271, line: 92, baseType: !1236, size: 128, offset: 704)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1222, file: !271, line: 93, baseType: !1236, size: 128, offset: 832)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1222, file: !271, line: 106, baseType: !300, size: 192, offset: 960)
!1243 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1244, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1245, globals: !1259, nameTableKind: None)
!1244 = !DIFile(filename: "./lib/utimecmp.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1245 = !{!1246, !1218, !1248, !294, !7, !1250, !142, !274, !443, !1256, !296, !633, !1257, !635}
!1246 = !DISubroutineType(types: !1247)
!1247 = !{!7, !180, !1220, !1220, !7}
!1248 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !1249, line: 7, baseType: !294)
!1249 = !DIFile(filename: "/usr/include/bits/types/time_t.h", directory: "")
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1251, size: 64)
!1251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fs_res", file: !1217, line: 66, size: 128, elements: !1252)
!1252 = !{!1253, !1254, !1255}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1251, file: !1217, line: 69, baseType: !443, size: 64)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "resolution", scope: !1251, file: !1217, line: 76, baseType: !7, size: 32, offset: 64)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "exact", scope: !1251, file: !1217, line: 80, baseType: !142, size: 8, offset: 96)
!1256 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1236, size: 256, elements: !304)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 64)
!1258 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1251)
!1259 = !{!1214, !1260}
!1260 = !DIGlobalVariableExpression(var: !1261, expr: !DIExpression())
!1261 = distinct !DIGlobalVariable(name: "new_dst_res", scope: !1216, file: !1217, line: 166, type: !1250, isLocal: true, isDefinition: true)
!1262 = !DIGlobalVariableExpression(var: !1263, expr: !DIExpression())
!1263 = distinct !DIGlobalVariable(name: "utimensat_works_really", scope: !1264, file: !1314, line: 75, type: !7, isLocal: true, isDefinition: true)
!1264 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1265, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1266, globals: !1311, nameTableKind: None)
!1265 = !DIFile(filename: "./lib/utimens.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1266 = !{!1267, !1275, !1276, !7, !296, !1277, !1284, !294, !1283, !142, !1248, !1285, !140, !1287, !1289}
!1267 = !DISubroutineType(types: !1268)
!1268 = !{!7, !7, !180, !1269}
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 64)
!1270 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1271)
!1271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !291, line: 9, size: 128, elements: !1272)
!1272 = !{!1273, !1274}
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1271, file: !291, line: 11, baseType: !294, size: 64)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1271, file: !291, line: 12, baseType: !296, size: 64, offset: 64)
!1275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1271, size: 256, elements: !304)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 64)
!1277 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1278, size: 256, elements: !304)
!1278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !1279, line: 8, size: 128, elements: !1280)
!1279 = !DIFile(filename: "/usr/include/bits/types/struct_timeval.h", directory: "")
!1280 = !{!1281, !1282}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1278, file: !1279, line: 10, baseType: !294, size: 64)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !1278, file: !1279, line: 11, baseType: !1283, size: 64, offset: 64)
!1283 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !30, line: 162, baseType: !31)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 64)
!1285 = !DISubroutineType(types: !1286)
!1286 = !{!7, !180, !1269}
!1287 = !DISubroutineType(types: !1288)
!1288 = !{!7, !1276}
!1289 = !DISubroutineType(types: !1290)
!1290 = !{!142, !1291, !1310}
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 64)
!1292 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1293)
!1293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !271, line: 46, size: 1152, elements: !1294)
!1294 = !{!1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1293, file: !271, line: 48, baseType: !274, size: 64)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1293, file: !271, line: 53, baseType: !276, size: 64, offset: 64)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1293, file: !271, line: 61, baseType: !278, size: 64, offset: 128)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1293, file: !271, line: 62, baseType: !140, size: 32, offset: 192)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1293, file: !271, line: 64, baseType: !128, size: 32, offset: 224)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1293, file: !271, line: 65, baseType: !130, size: 32, offset: 256)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1293, file: !271, line: 67, baseType: !7, size: 32, offset: 288)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1293, file: !271, line: 69, baseType: !274, size: 64, offset: 320)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1293, file: !271, line: 74, baseType: !29, size: 64, offset: 384)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1293, file: !271, line: 78, baseType: !286, size: 64, offset: 448)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1293, file: !271, line: 80, baseType: !288, size: 64, offset: 512)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1293, file: !271, line: 91, baseType: !1271, size: 128, offset: 576)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1293, file: !271, line: 92, baseType: !1271, size: 128, offset: 704)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1293, file: !271, line: 93, baseType: !1271, size: 128, offset: 832)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1293, file: !271, line: 106, baseType: !300, size: 192, offset: 960)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 64)
!1311 = !{!1262, !1312}
!1312 = !DIGlobalVariableExpression(var: !1313, expr: !DIExpression())
!1313 = distinct !DIGlobalVariable(name: "lutimensat_works_really", scope: !1264, file: !1314, line: 76, type: !7, isLocal: true, isDefinition: true)
!1314 = !DIFile(filename: "lib/utimens.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1315 = !DIGlobalVariableExpression(var: !1316, expr: !DIExpression())
!1316 = distinct !DIGlobalVariable(name: "version_etc_copyright", scope: !1317, file: !1324, line: 26, type: !1320, isLocal: false, isDefinition: true)
!1317 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1318, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1319, globals: !1323, nameTableKind: None)
!1318 = !DIFile(filename: "./lib/version-etc-fsf.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1319 = !{!1320}
!1320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !181, size: 376, elements: !1321)
!1321 = !{!1322}
!1322 = !DISubrange(count: 47)
!1323 = !{!1315}
!1324 = !DIFile(filename: "lib/version-etc-fsf.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1325 = !DIGlobalVariableExpression(var: !1326, expr: !DIExpression())
!1326 = distinct !DIGlobalVariable(name: "initialized", scope: !1327, file: !1328, line: 34, type: !142, isLocal: true, isDefinition: true)
!1327 = distinct !DISubprogram(name: "can_write_any_file", scope: !1328, file: !1328, line: 32, type: !1329, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1331, retainedNodes: !209)
!1328 = !DIFile(filename: "lib/write-any-file.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1329 = !DISubroutineType(types: !1330)
!1330 = !{!142}
!1331 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1332, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1333, globals: !1334, nameTableKind: None)
!1332 = !DIFile(filename: "./lib/write-any-file.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1333 = !{!1329, !142}
!1334 = !{!1325, !1335}
!1335 = !DIGlobalVariableExpression(var: !1336, expr: !DIExpression())
!1336 = distinct !DIGlobalVariable(name: "can_write", scope: !1327, file: !1328, line: 35, type: !142, isLocal: true, isDefinition: true)
!1337 = !DIGlobalVariableExpression(var: !1338, expr: !DIExpression())
!1338 = distinct !DIGlobalVariable(name: "argmatch_die", scope: !1339, file: !1388, line: 69, type: !730, isLocal: false, isDefinition: true)
!1339 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1340, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1341, globals: !1387, nameTableKind: None)
!1340 = !DIFile(filename: "./lib/argmatch.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1341 = !{!53, !730, !1342, !55, !652, !142, !1344, !1345, !180, !1347, !1349, !1383, !1385, !200}
!1342 = !DISubroutineType(types: !1343)
!1343 = !{!652, !180, !1344, !180, !55}
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 64)
!1345 = !DISubroutineType(types: !1346)
!1346 = !{null, !180, !180, !652}
!1347 = !DISubroutineType(types: !1348)
!1348 = !{null, !1344, !180, !55}
!1349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1350, size: 64)
!1350 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !1351)
!1351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !1352)
!1352 = !{!1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1351, file: !4, line: 51, baseType: !7, size: 32)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1351, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1351, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1351, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1351, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1351, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1351, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1351, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1351, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1351, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1351, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1351, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1351, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1351, file: !4, line: 70, baseType: !1367, size: 64, offset: 832)
!1367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 64)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1351, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1351, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1351, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1351, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1351, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1351, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1351, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1351, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1351, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1351, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1351, file: !4, line: 93, baseType: !1367, size: 64, offset: 1344)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1351, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1351, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1351, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1351, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1383 = !DISubroutineType(types: !1384)
!1384 = !{!652, !180, !180, !1344, !180, !55, !730}
!1385 = !DISubroutineType(types: !1386)
!1386 = !{!180, !180, !1344, !180, !55}
!1387 = !{!1337}
!1388 = !DIFile(filename: "lib/argmatch.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1389 = !DIGlobalVariableExpression(var: !1390, expr: !DIExpression())
!1390 = distinct !DIGlobalVariable(name: "have_dupfd_cloexec", scope: !1391, file: !1392, line: 506, type: !7, isLocal: true, isDefinition: true)
!1391 = distinct !DISubprogram(name: "rpl_fcntl_DUPFD_CLOEXEC", scope: !1392, file: !1392, line: 487, type: !505, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1393, retainedNodes: !209)
!1392 = !DIFile(filename: "lib/fcntl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1393 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1394, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1395, globals: !1405, nameTableKind: None)
!1394 = !DIFile(filename: "./lib/fcntl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1395 = !{!505, !1396, !7, !53}
!1396 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !583, line: 14, baseType: !1397)
!1397 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1394, line: 207, baseType: !1398)
!1398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1399, size: 192, elements: !38)
!1399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1394, line: 207, size: 192, elements: !1400)
!1400 = !{!1401, !1402, !1403, !1404}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1399, file: !1394, line: 207, baseType: !70, size: 32)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1399, file: !1394, line: 207, baseType: !70, size: 32, offset: 32)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1399, file: !1394, line: 207, baseType: !53, size: 64, offset: 64)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1399, file: !1394, line: 207, baseType: !53, size: 64, offset: 128)
!1405 = !{!1389}
!1406 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1407, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1408, nameTableKind: None)
!1407 = !DIFile(filename: "src/prog-fprintf.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1408 = !{!1409, !1445, !180}
!1409 = !DISubroutineType(types: !1410)
!1410 = !{null, !1411, !180}
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 64)
!1412 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !1413)
!1413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !1414)
!1414 = !{!1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444}
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1413, file: !4, line: 51, baseType: !7, size: 32)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1413, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1413, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1413, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1413, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1413, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1413, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1413, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1413, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1413, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1413, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1413, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1413, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1413, file: !4, line: 70, baseType: !1429, size: 64, offset: 832)
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1413, size: 64)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1413, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1413, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1413, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1413, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1413, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1413, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1413, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1413, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1413, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1413, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1413, file: !4, line: 93, baseType: !1429, size: 64, offset: 1344)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1413, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1413, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1413, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1413, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1445 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !353, line: 52, baseType: !1446)
!1446 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !583, line: 32, baseType: !1447)
!1447 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1407, line: 30, baseType: !1448)
!1448 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1449, size: 192, elements: !38)
!1449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1407, line: 30, size: 192, elements: !1450)
!1450 = !{!1451, !1452, !1453, !1454}
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1449, file: !1407, line: 30, baseType: !70, size: 32)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1449, file: !1407, line: 30, baseType: !70, size: 32, offset: 32)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1449, file: !1407, line: 30, baseType: !53, size: 64, offset: 64)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1449, file: !1407, line: 30, baseType: !53, size: 64, offset: 128)
!1455 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1456, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1457, nameTableKind: None)
!1456 = !DIFile(filename: "src/extent-scan.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1457 = !{!1458, !1459, !7, !55, !1471, !142, !70, !1477, !1479, !1508, !1495, !1484, !1489, !1329}
!1458 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !112, line: 85, baseType: !29)
!1459 = !DISubroutineType(types: !1460)
!1460 = !{null, !7, !1461}
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 64)
!1462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_scan", file: !519, line: 36, size: 384, elements: !1463)
!1463 = !{!1464, !1465, !1466, !1467, !1468, !1469, !1470}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1462, file: !519, line: 39, baseType: !7, size: 32)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "scan_start", scope: !1462, file: !519, line: 42, baseType: !1458, size: 64, offset: 64)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "fm_flags", scope: !1462, file: !519, line: 45, baseType: !70, size: 32, offset: 128)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "ei_count", scope: !1462, file: !519, line: 48, baseType: !55, size: 64, offset: 192)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "initial_scan_failed", scope: !1462, file: !519, line: 52, baseType: !142, size: 8, offset: 256)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "hit_final_extent", scope: !1462, file: !519, line: 55, baseType: !142, size: 8, offset: 264)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "ext_info", scope: !1462, file: !519, line: 58, baseType: !1471, size: 64, offset: 320)
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 64)
!1472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "extent_info", file: !519, line: 23, size: 192, elements: !1473)
!1473 = !{!1474, !1475, !1476}
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "ext_logical", scope: !1472, file: !519, line: 26, baseType: !1458, size: 64)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "ext_length", scope: !1472, file: !519, line: 29, baseType: !1458, size: 64, offset: 64)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "ext_flags", scope: !1472, file: !519, line: 32, baseType: !70, size: 32, offset: 128)
!1477 = !DISubroutineType(types: !1478)
!1478 = !{!142, !1461}
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 64)
!1480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap", file: !1481, line: 35, size: 256, elements: !1482)
!1481 = !DIFile(filename: "src/fiemap.h", directory: "/home/mbarbar/software/coreutils-8.31")
!1482 = !{!1483, !1487, !1488, !1491, !1492, !1493, !1494}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "fm_start", scope: !1480, file: !1481, line: 38, baseType: !1484, size: 64)
!1484 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1485, line: 27, baseType: !1486)
!1485 = !DIFile(filename: "/usr/include/bits/stdint-uintn.h", directory: "")
!1486 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !30, line: 45, baseType: !57)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "fm_length", scope: !1480, file: !1481, line: 41, baseType: !1484, size: 64, offset: 64)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "fm_flags", scope: !1480, file: !1481, line: 44, baseType: !1489, size: 32, offset: 128)
!1489 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !1485, line: 26, baseType: !1490)
!1490 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !30, line: 42, baseType: !70)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "fm_mapped_extents", scope: !1480, file: !1481, line: 47, baseType: !1489, size: 32, offset: 160)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "fm_extent_count", scope: !1480, file: !1481, line: 50, baseType: !1489, size: 32, offset: 192)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "fm_reserved", scope: !1480, file: !1481, line: 52, baseType: !1489, size: 32, offset: 224)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "fm_extents", scope: !1480, file: !1481, line: 59, baseType: !1495, offset: 256)
!1495 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1496, elements: !1506)
!1496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent", file: !1481, line: 14, size: 448, elements: !1497)
!1497 = !{!1498, !1499, !1500, !1501, !1503, !1504}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "fe_logical", scope: !1496, file: !1481, line: 18, baseType: !1484, size: 64)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "fe_physical", scope: !1496, file: !1481, line: 22, baseType: !1484, size: 64, offset: 64)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "fe_length", scope: !1496, file: !1481, line: 25, baseType: !1484, size: 64, offset: 128)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "fe_reserved64", scope: !1496, file: !1481, line: 27, baseType: !1502, size: 128, offset: 192)
!1502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1484, size: 128, elements: !304)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "fe_flags", scope: !1496, file: !1481, line: 30, baseType: !1489, size: 32, offset: 320)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "fe_reserved", scope: !1496, file: !1481, line: 32, baseType: !1505, size: 96, offset: 352)
!1505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1489, size: 96, elements: !301)
!1506 = !{!1507}
!1507 = !DISubrange(count: 0)
!1508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 64)
!1509 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1510, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, nameTableKind: None)
!1510 = !DIFile(filename: "src/selinux.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1511 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1512, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1513, nameTableKind: None)
!1512 = !DIFile(filename: "./lib/copy-acl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1513 = !{!1514, !7}
!1514 = !DISubroutineType(types: !1515)
!1515 = !{!7, !180, !7, !180, !7, !139}
!1516 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1517, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1518, nameTableKind: None)
!1517 = !DIFile(filename: "./lib/set-acl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1518 = !{!1519, !7}
!1519 = !DISubroutineType(types: !1520)
!1520 = !{!7, !180, !7, !139}
!1521 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1522, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1523, nameTableKind: None)
!1522 = !DIFile(filename: "./lib/areadlink-with-size.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1523 = !{!53, !1074, !55, !692, !9, !7}
!1524 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1525, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !718, retainedTypes: !1526, nameTableKind: None)
!1525 = !DIFile(filename: "./lib/backup-rename.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1526 = !{!720}
!1527 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1528, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1529, nameTableKind: None)
!1528 = !DIFile(filename: "./lib/buffer-lcm.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1529 = !{!1530, !55}
!1530 = !DISubroutineType(types: !1531)
!1531 = !{!55, !55, !55, !55}
!1532 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1533, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1534, nameTableKind: None)
!1533 = !DIFile(filename: "./lib/dirname.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1534 = !{!218, !9}
!1535 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1536, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1537, nameTableKind: None)
!1536 = !DIFile(filename: "./lib/dirname-lgpl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1537 = !{!1538, !55, !180, !218, !142, !9}
!1538 = !DISubroutineType(types: !1539)
!1539 = !{!55, !180}
!1540 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1541, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1542, nameTableKind: None)
!1541 = !DIFile(filename: "./lib/basename-lgpl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1542 = !{!9, !218, !180, !142, !181, !1538, !55}
!1543 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1544, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1545, retainedTypes: !1555, nameTableKind: None)
!1544 = !DIFile(filename: "./lib/fadvise.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1545 = !{!1546}
!1546 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1547, line: 45, baseType: !70, size: 32, elements: !1548)
!1547 = !DIFile(filename: "./lib/fadvise.h", directory: "/home/mbarbar/software/coreutils-8.31")
!1548 = !{!1549, !1550, !1551, !1552, !1553, !1554}
!1549 = !DIEnumerator(name: "FADVISE_NORMAL", value: 0, isUnsigned: true)
!1550 = !DIEnumerator(name: "FADVISE_SEQUENTIAL", value: 2, isUnsigned: true)
!1551 = !DIEnumerator(name: "FADVISE_NOREUSE", value: 5, isUnsigned: true)
!1552 = !DIEnumerator(name: "FADVISE_DONTNEED", value: 4, isUnsigned: true)
!1553 = !DIEnumerator(name: "FADVISE_WILLNEED", value: 3, isUnsigned: true)
!1554 = !DIEnumerator(name: "FADVISE_RANDOM", value: 1, isUnsigned: true)
!1555 = !{!1556, !1559}
!1556 = !DISubroutineType(types: !1557)
!1557 = !{null, !7, !352, !352, !1558}
!1558 = !DIDerivedType(tag: DW_TAG_typedef, name: "fadvice_t", file: !1547, line: 52, baseType: !1546)
!1559 = !DISubroutineType(types: !1560)
!1560 = !{null, !1561, !1558}
!1561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1562, size: 64)
!1562 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !1563)
!1563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !1564)
!1564 = !{!1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594}
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1563, file: !4, line: 51, baseType: !7, size: 32)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1563, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1563, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1563, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1563, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1563, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1563, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1563, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1563, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1563, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1563, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1563, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1563, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1563, file: !4, line: 70, baseType: !1579, size: 64, offset: 832)
!1579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 64)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1563, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1563, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1563, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1563, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1563, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1563, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1563, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1563, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1563, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1563, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1563, file: !4, line: 93, baseType: !1579, size: 64, offset: 1344)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1563, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1563, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1563, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1563, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1595 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1596, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1597, nameTableKind: None)
!1596 = !DIFile(filename: "./lib/open-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1597 = !{!1598, !139, !1600}
!1598 = !DISubroutineType(types: !1599)
!1599 = !{!7, !180, !7}
!1600 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !583, line: 14, baseType: !1601)
!1601 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1596, line: 35, baseType: !1602)
!1602 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1603, size: 192, elements: !38)
!1603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1596, line: 35, size: 192, elements: !1604)
!1604 = !{!1605, !1606, !1607, !1608}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1603, file: !1596, line: 35, baseType: !70, size: 32)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1603, file: !1596, line: 35, baseType: !70, size: 32, offset: 32)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1603, file: !1596, line: 35, baseType: !53, size: 64, offset: 64)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1603, file: !1596, line: 35, baseType: !53, size: 64, offset: 128)
!1609 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1610, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1611, nameTableKind: None)
!1610 = !DIFile(filename: "./lib/file-set.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1611 = !{!53, !9, !1612, !1637, !276, !441, !274, !443, !1644}
!1612 = !DISubroutineType(types: !1613)
!1613 = !{null, !175, !180, !1614}
!1614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1615, size: 64)
!1615 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1616)
!1616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !271, line: 46, size: 1152, elements: !1617)
!1617 = !{!1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1634, !1635, !1636}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1616, file: !271, line: 48, baseType: !274, size: 64)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1616, file: !271, line: 53, baseType: !276, size: 64, offset: 64)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1616, file: !271, line: 61, baseType: !278, size: 64, offset: 128)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1616, file: !271, line: 62, baseType: !140, size: 32, offset: 192)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1616, file: !271, line: 64, baseType: !128, size: 32, offset: 224)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1616, file: !271, line: 65, baseType: !130, size: 32, offset: 256)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1616, file: !271, line: 67, baseType: !7, size: 32, offset: 288)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1616, file: !271, line: 69, baseType: !274, size: 64, offset: 320)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1616, file: !271, line: 74, baseType: !29, size: 64, offset: 384)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1616, file: !271, line: 78, baseType: !286, size: 64, offset: 448)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1616, file: !271, line: 80, baseType: !288, size: 64, offset: 512)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1616, file: !271, line: 91, baseType: !1630, size: 128, offset: 576)
!1630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !291, line: 9, size: 128, elements: !1631)
!1631 = !{!1632, !1633}
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1630, file: !291, line: 11, baseType: !294, size: 64)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1630, file: !291, line: 12, baseType: !296, size: 64, offset: 64)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1616, file: !271, line: 92, baseType: !1630, size: 128, offset: 704)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1616, file: !271, line: 93, baseType: !1630, size: 128, offset: 832)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1616, file: !271, line: 106, baseType: !300, size: 192, offset: 960)
!1637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1638, size: 64)
!1638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "F_triple", file: !1639, line: 9, size: 192, elements: !1640)
!1639 = !DIFile(filename: "./lib/hash-triple.h", directory: "/home/mbarbar/software/coreutils-8.31")
!1640 = !{!1641, !1642, !1643}
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1638, file: !1639, line: 11, baseType: !9, size: 64)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1638, file: !1639, line: 12, baseType: !441, size: 64, offset: 64)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1638, file: !1639, line: 13, baseType: !443, size: 64, offset: 128)
!1644 = !DISubroutineType(types: !1645)
!1645 = !{!142, !1646, !180, !1614}
!1646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1647, size: 64)
!1647 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !176)
!1648 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1649, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1650, nameTableKind: None)
!1649 = !DIFile(filename: "./lib/filemode.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1650 = !{!1651, !9, !1653, !140, !1678}
!1651 = !DISubroutineType(types: !1652)
!1652 = !{null, !139, !9}
!1653 = !DISubroutineType(types: !1654)
!1654 = !{null, !1655, !9}
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1656, size: 64)
!1656 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1657)
!1657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !271, line: 46, size: 1152, elements: !1658)
!1658 = !{!1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1675, !1676, !1677}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1657, file: !271, line: 48, baseType: !274, size: 64)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1657, file: !271, line: 53, baseType: !276, size: 64, offset: 64)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1657, file: !271, line: 61, baseType: !278, size: 64, offset: 128)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1657, file: !271, line: 62, baseType: !140, size: 32, offset: 192)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1657, file: !271, line: 64, baseType: !128, size: 32, offset: 224)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1657, file: !271, line: 65, baseType: !130, size: 32, offset: 256)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1657, file: !271, line: 67, baseType: !7, size: 32, offset: 288)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1657, file: !271, line: 69, baseType: !274, size: 64, offset: 320)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1657, file: !271, line: 74, baseType: !29, size: 64, offset: 384)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1657, file: !271, line: 78, baseType: !286, size: 64, offset: 448)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1657, file: !271, line: 80, baseType: !288, size: 64, offset: 512)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1657, file: !271, line: 91, baseType: !1671, size: 128, offset: 576)
!1671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !291, line: 9, size: 128, elements: !1672)
!1672 = !{!1673, !1674}
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1671, file: !291, line: 11, baseType: !294, size: 64)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1671, file: !291, line: 12, baseType: !296, size: 64, offset: 64)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1657, file: !271, line: 92, baseType: !1671, size: 128, offset: 704)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1657, file: !271, line: 93, baseType: !1671, size: 128, offset: 832)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1657, file: !271, line: 106, baseType: !300, size: 192, offset: 960)
!1678 = !DISubroutineType(types: !1679)
!1679 = !{!10, !139}
!1680 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1681, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1682, nameTableKind: None)
!1681 = !DIFile(filename: "./lib/filenamecat.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1682 = !{!53, !1683, !9}
!1683 = !DISubroutineType(types: !1684)
!1684 = !{!9, !180, !180, !184}
!1685 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1686, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1687, nameTableKind: None)
!1686 = !DIFile(filename: "./lib/filenamecat-lgpl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1687 = !{!53, !1683, !180, !55, !10, !181, !9}
!1688 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1689, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1690, nameTableKind: None)
!1689 = !DIFile(filename: "./lib/full-read.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1690 = !{!9, !55, !1691, !7}
!1691 = !DISubroutineType(types: !1692)
!1692 = !{!55, !7, !53, !55}
!1693 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1694, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1695, nameTableKind: None)
!1694 = !DIFile(filename: "./lib/full-write.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1695 = !{!180, !55, !1696, !7}
!1696 = !DISubroutineType(types: !1697)
!1697 = !{!55, !7, !513, !55}
!1698 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1699, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1700, nameTableKind: None)
!1699 = !DIFile(filename: "./lib/hash-triple.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1700 = !{!633, !1701, !55, !9, !441, !635, !443, !631, !1708}
!1701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1702, size: 64)
!1702 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1703)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "F_triple", file: !1639, line: 9, size: 192, elements: !1704)
!1704 = !{!1705, !1706, !1707}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1703, file: !1639, line: 11, baseType: !9, size: 64)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1703, file: !1639, line: 12, baseType: !441, size: 64, offset: 64)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1703, file: !1639, line: 13, baseType: !443, size: 64, offset: 128)
!1708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 64)
!1709 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1710, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1711, retainedTypes: !1722, nameTableKind: None)
!1710 = !DIFile(filename: "./lib/mkancesdirs.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1711 = !{!1712}
!1712 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !1713, file: !101, line: 39, baseType: !70, size: 32, elements: !114)
!1713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "savewd", file: !101, line: 36, size: 64, elements: !1714)
!1714 = !{!1715, !1716}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1713, file: !101, line: 66, baseType: !1712, size: 32)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1713, file: !101, line: 74, baseType: !1717, size: 32, offset: 32)
!1717 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1713, file: !101, line: 69, size: 32, elements: !1718)
!1718 = !{!1719, !1720, !1721}
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1717, file: !101, line: 71, baseType: !7, size: 32)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "errnum", scope: !1717, file: !101, line: 72, baseType: !7, size: 32)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1717, file: !101, line: 73, baseType: !111, size: 32)
!1722 = !{!1723, !9, !10, !142, !7}
!1723 = !DISubroutineType(types: !1724)
!1724 = !{!652, !9, !1725, !1726, !53}
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 64)
!1726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !248, size: 64)
!1727 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1728, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1729, retainedTypes: !1740, nameTableKind: None)
!1728 = !DIFile(filename: "./lib/mkdir-p.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1729 = !{!1730}
!1730 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !1731, file: !101, line: 39, baseType: !70, size: 32, elements: !114)
!1731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "savewd", file: !101, line: 36, size: 64, elements: !1732)
!1732 = !{!1733, !1734}
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1731, file: !101, line: 66, baseType: !1730, size: 32)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1731, file: !101, line: 74, baseType: !1735, size: 32, offset: 32)
!1735 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1731, file: !101, line: 69, size: 32, elements: !1736)
!1736 = !{!1737, !1738, !1739}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1735, file: !101, line: 71, baseType: !7, size: 32)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "errnum", scope: !1735, file: !101, line: 72, baseType: !7, size: 32)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1735, file: !101, line: 73, baseType: !111, size: 32)
!1740 = !{!127, !129, !1741, !7, !9, !652, !142, !139, !140, !1745, !180}
!1741 = !DISubroutineType(types: !1742)
!1742 = !{!142, !9, !1743, !1726, !53, !139, !1744, !139, !127, !129, !142}
!1743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 64)
!1744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 64)
!1745 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !304)
!1746 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1747, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1748, nameTableKind: None)
!1747 = !DIFile(filename: "./lib/modechange.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1748 = !{!1749, !1751, !55, !180, !181, !70, !139, !10, !140, !1760, !1765, !1767}
!1749 = !DISubroutineType(types: !1750)
!1750 = !{!1751, !180}
!1751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 64)
!1752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mode_change", file: !1753, line: 98, size: 128, elements: !1754)
!1753 = !DIFile(filename: "lib/modechange.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1754 = !{!1755, !1756, !1757, !1758, !1759}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1752, file: !1753, line: 100, baseType: !10, size: 8)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1752, file: !1753, line: 101, baseType: !10, size: 8, offset: 8)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "affected", scope: !1752, file: !1753, line: 102, baseType: !139, size: 32, offset: 32)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1752, file: !1753, line: 103, baseType: !139, size: 32, offset: 64)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "mentioned", scope: !1752, file: !1753, line: 104, baseType: !139, size: 32, offset: 96)
!1760 = !DISubroutineType(types: !1761)
!1761 = !{!139, !139, !142, !139, !1762, !1764}
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 64)
!1763 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1752)
!1764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 64)
!1765 = !DISubroutineType(types: !1766)
!1766 = !{!139, !70}
!1767 = !DISubroutineType(types: !1768)
!1768 = !{!1751, !139, !139}
!1769 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1770, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1771, nameTableKind: None)
!1770 = !DIFile(filename: "./lib/opendirat.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1771 = !{!1772, !7, !693}
!1772 = !DISubroutineType(types: !1773)
!1773 = !{!693, !7, !180, !7, !193}
!1774 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1775, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1513, nameTableKind: None)
!1775 = !DIFile(filename: "./lib/qcopy-acl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1776 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1777, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1778, nameTableKind: None)
!1777 = !DIFile(filename: "./lib/qset-acl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1778 = !{!1519, !7, !139}
!1779 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1780, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1781, nameTableKind: None)
!1780 = !DIFile(filename: "./lib/renameatu.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1781 = !{!9, !1782, !7, !55, !142, !180, !140, !1784}
!1782 = !DISubroutineType(types: !1783)
!1783 = !{!7, !7, !180, !7, !180, !70}
!1784 = !DISubroutineType(types: !1785)
!1785 = !{!7, !7}
!1786 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1787, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1788, nameTableKind: None)
!1787 = !DIFile(filename: "./lib/safe-read.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1788 = !{!1691, !692, !7}
!1789 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1790, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1791, nameTableKind: None)
!1790 = !DIFile(filename: "./lib/safe-write.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1791 = !{!1696, !692, !7}
!1792 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1793, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1794, nameTableKind: None)
!1793 = !DIFile(filename: "./lib/same.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1794 = !{!1795, !1797, !180, !55, !142, !9, !7, !276, !274}
!1795 = !DISubroutineType(types: !1796)
!1796 = !{!142, !180, !180}
!1797 = !DISubroutineType(types: !1798)
!1798 = !{!142, !7, !180, !7, !180}
!1799 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1800, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1801, retainedTypes: !1812, nameTableKind: None)
!1800 = !DIFile(filename: "./lib/savewd.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1801 = !{!1802}
!1802 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !1803, file: !101, line: 39, baseType: !70, size: 32, elements: !114)
!1803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "savewd", file: !101, line: 36, size: 64, elements: !1804)
!1804 = !{!1805, !1806}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1803, file: !101, line: 66, baseType: !1802, size: 32)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1803, file: !101, line: 74, baseType: !1807, size: 32, offset: 32)
!1807 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1803, file: !101, line: 69, size: 32, elements: !1808)
!1808 = !{!1809, !1810, !1811}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1807, file: !101, line: 71, baseType: !7, size: 32)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "errnum", scope: !1807, file: !101, line: 72, baseType: !7, size: 32)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1807, file: !101, line: 73, baseType: !111, size: 32)
!1812 = !{!1813, !1816, !1807, !1820, !7, !1822, !111, !1824, !184, !9, !1829, !1831}
!1813 = !DISubroutineType(types: !1814)
!1814 = !{null, !1815}
!1815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 64)
!1816 = !DISubroutineType(types: !1817)
!1817 = !{!7, !1818}
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 64)
!1819 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1803)
!1820 = !DISubroutineType(types: !1821)
!1821 = !{!7, !1815, !180, !7, !193}
!1822 = !DISubroutineType(types: !1823)
!1823 = !{!7, !1815, !7}
!1824 = !DISubroutineType(types: !1825)
!1825 = !{!7, !7, !184, !1826, !53}
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1827, size: 64)
!1827 = !DISubroutineType(types: !1828)
!1828 = !{!7, !9, !1815, !53}
!1829 = !DISubroutineType(types: !1830)
!1830 = !{!142, !1815}
!1831 = !DISubroutineType(types: !1832)
!1832 = !{!142, !1818}
!1833 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1834, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1835, nameTableKind: None)
!1834 = !DIFile(filename: "./lib/se-selinux.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1835 = !{!1836, !7, !1841, !1843, !1845, !1847, !1849, !1851, !1853, !1855, !1858, !1860}
!1836 = !DISubroutineType(types: !1837)
!1837 = !{!7, !1838}
!1838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1839, size: 64)
!1839 = !DIDerivedType(tag: DW_TAG_typedef, name: "security_context_t", file: !1840, line: 83, baseType: !9)
!1840 = !DIFile(filename: "./lib/selinux/selinux.h", directory: "/home/mbarbar/software/coreutils-8.31")
!1841 = !DISubroutineType(types: !1842)
!1842 = !{null, !1839}
!1843 = !DISubroutineType(types: !1844)
!1844 = !{!7, !1839}
!1845 = !DISubroutineType(types: !1846)
!1846 = !{!7, !180, !139, !1838}
!1847 = !DISubroutineType(types: !1848)
!1848 = !{!7, !180, !1838}
!1849 = !DISubroutineType(types: !1850)
!1850 = !{!7, !7, !1838}
!1851 = !DISubroutineType(types: !1852)
!1852 = !{!7, !180, !1839}
!1853 = !DISubroutineType(types: !1854)
!1854 = !{!7, !7, !1839}
!1855 = !DISubroutineType(types: !1856)
!1856 = !{!7, !1839, !1839, !1857, !1838}
!1857 = !DIDerivedType(tag: DW_TAG_typedef, name: "security_class_t", file: !1840, line: 82, baseType: !33)
!1858 = !DISubroutineType(types: !1859)
!1859 = !{!1857, !180}
!1860 = !DISubroutineType(types: !1861)
!1861 = !{!7, !180, !180}
!1862 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1863, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1864, nameTableKind: None)
!1863 = !DIFile(filename: "./lib/stat-time.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1864 = !{!1865, !296, !1890, !294, !1892}
!1865 = !DISubroutineType(types: !1866)
!1866 = !{!31, !1867}
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 64)
!1868 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1869)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !271, line: 46, size: 1152, elements: !1870)
!1870 = !{!1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1887, !1888, !1889}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1869, file: !271, line: 48, baseType: !274, size: 64)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1869, file: !271, line: 53, baseType: !276, size: 64, offset: 64)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1869, file: !271, line: 61, baseType: !278, size: 64, offset: 128)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1869, file: !271, line: 62, baseType: !140, size: 32, offset: 192)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1869, file: !271, line: 64, baseType: !128, size: 32, offset: 224)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1869, file: !271, line: 65, baseType: !130, size: 32, offset: 256)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1869, file: !271, line: 67, baseType: !7, size: 32, offset: 288)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1869, file: !271, line: 69, baseType: !274, size: 64, offset: 320)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1869, file: !271, line: 74, baseType: !29, size: 64, offset: 384)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1869, file: !271, line: 78, baseType: !286, size: 64, offset: 448)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1869, file: !271, line: 80, baseType: !288, size: 64, offset: 512)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1869, file: !271, line: 91, baseType: !1883, size: 128, offset: 576)
!1883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !291, line: 9, size: 128, elements: !1884)
!1884 = !{!1885, !1886}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1883, file: !291, line: 11, baseType: !294, size: 64)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1883, file: !291, line: 12, baseType: !296, size: 64, offset: 64)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1869, file: !271, line: 92, baseType: !1883, size: 128, offset: 704)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1869, file: !271, line: 93, baseType: !1883, size: 128, offset: 832)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1869, file: !271, line: 106, baseType: !300, size: 192, offset: 960)
!1890 = !DISubroutineType(types: !1891)
!1891 = !{!1883, !1867}
!1892 = !DISubroutineType(types: !1893)
!1893 = !{!7, !7, !1894}
!1894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 64)
!1895 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1896, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1897, nameTableKind: None)
!1896 = !DIFile(filename: "./lib/statat.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1897 = !{!1898}
!1898 = !DISubroutineType(types: !1899)
!1899 = !{!7, !7, !180, !1900}
!1900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1901, size: 64)
!1901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !271, line: 46, size: 1152, elements: !1902)
!1902 = !{!1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1919, !1920, !1921}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !1901, file: !271, line: 48, baseType: !274, size: 64)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !1901, file: !271, line: 53, baseType: !276, size: 64, offset: 64)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !1901, file: !271, line: 61, baseType: !278, size: 64, offset: 128)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !1901, file: !271, line: 62, baseType: !140, size: 32, offset: 192)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !1901, file: !271, line: 64, baseType: !128, size: 32, offset: 224)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !1901, file: !271, line: 65, baseType: !130, size: 32, offset: 256)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !1901, file: !271, line: 67, baseType: !7, size: 32, offset: 288)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !1901, file: !271, line: 69, baseType: !274, size: 64, offset: 320)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !1901, file: !271, line: 74, baseType: !29, size: 64, offset: 384)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !1901, file: !271, line: 78, baseType: !286, size: 64, offset: 448)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !1901, file: !271, line: 80, baseType: !288, size: 64, offset: 512)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !1901, file: !271, line: 91, baseType: !1915, size: 128, offset: 576)
!1915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !291, line: 9, size: 128, elements: !1916)
!1916 = !{!1917, !1918}
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1915, file: !291, line: 11, baseType: !294, size: 64)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1915, file: !291, line: 12, baseType: !296, size: 64, offset: 64)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !1901, file: !271, line: 92, baseType: !1915, size: 128, offset: 704)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !1901, file: !271, line: 93, baseType: !1915, size: 128, offset: 832)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !1901, file: !271, line: 106, baseType: !300, size: 192, offset: 960)
!1922 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1923, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1924, nameTableKind: None)
!1923 = !DIFile(filename: "./lib/fd-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1924 = !{!1784, !7}
!1925 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1926, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1927, nameTableKind: None)
!1926 = !DIFile(filename: "./lib/verror.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1927 = !{!1928, !1937, !9, !7}
!1928 = !DISubroutineType(types: !1929)
!1929 = !{null, !7, !7, !180, !1930}
!1930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 64)
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1926, size: 192, elements: !1932)
!1932 = !{!1933, !1934, !1935, !1936}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1931, file: !1926, baseType: !70, size: 32)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1931, file: !1926, baseType: !70, size: 32, offset: 32)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1931, file: !1926, baseType: !53, size: 64, offset: 64)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1931, file: !1926, baseType: !53, size: 64, offset: 128)
!1937 = !DISubroutineType(types: !1938)
!1938 = !{null, !7, !7, !180, !70, !180, !1930}
!1939 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1940, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !1941, nameTableKind: None)
!1940 = !DIFile(filename: "./lib/version-etc.c", directory: "/home/mbarbar/software/coreutils-8.31")
!1941 = !{!53, !1942, !1978, !1344, !1981, !55, !1983, !1992, !1993, !1995, !200, !1944}
!1942 = !DISubroutineType(types: !1943)
!1943 = !{null, !1944, !180, !180, !180, !1344, !55}
!1944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1945, size: 64)
!1945 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !1946)
!1946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !1947)
!1947 = !{!1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1946, file: !4, line: 51, baseType: !7, size: 32)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1946, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1946, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1946, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1946, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1946, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1946, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1946, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1946, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1946, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1946, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1946, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1946, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1946, file: !4, line: 70, baseType: !1962, size: 64, offset: 832)
!1962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1946, size: 64)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1946, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1946, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1946, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1946, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1946, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1946, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1946, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1946, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1946, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1946, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1946, file: !4, line: 93, baseType: !1962, size: 64, offset: 1344)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1946, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1946, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1946, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1946, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!1978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !181, elements: !1979)
!1979 = !{!1980}
!1980 = !DISubrange(count: -1)
!1981 = !DISubroutineType(types: !1982)
!1982 = !{null, !1944, !180, !180, !180, !1344}
!1983 = !DISubroutineType(types: !1984)
!1984 = !{null, !1944, !180, !180, !180, !1985}
!1985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1986, size: 64)
!1986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !1940, line: 189, size: 192, elements: !1987)
!1987 = !{!1988, !1989, !1990, !1991}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !1986, file: !1940, line: 189, baseType: !70, size: 32)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !1986, file: !1940, line: 189, baseType: !70, size: 32, offset: 32)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !1986, file: !1940, line: 189, baseType: !53, size: 64, offset: 64)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !1986, file: !1940, line: 189, baseType: !53, size: 64, offset: 128)
!1992 = !DICompositeType(tag: DW_TAG_array_type, baseType: !180, size: 640, elements: !1032)
!1993 = !DISubroutineType(types: !1994)
!1994 = !{null, !1944, !180, !180, !180}
!1995 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !353, line: 52, baseType: !1996)
!1996 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !583, line: 32, baseType: !1997)
!1997 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !1940, line: 231, baseType: !1998)
!1998 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1986, size: 192, elements: !38)
!1999 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2000, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2001, nameTableKind: None)
!2000 = !DIFile(filename: "./lib/xmalloc.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2001 = !{!55, !9, !53, !2002, !2004, !2006, !2008, !2010, !2012, !2014, !511, !218}
!2002 = !DISubroutineType(types: !2003)
!2003 = !{!53, !55, !55}
!2004 = !DISubroutineType(types: !2005)
!2005 = !{!53, !53, !55, !55}
!2006 = !DISubroutineType(types: !2007)
!2007 = !{!53, !53, !712, !55}
!2008 = !DISubroutineType(types: !2009)
!2009 = !{!9, !55}
!2010 = !DISubroutineType(types: !2011)
!2011 = !{!53, !55}
!2012 = !DISubroutineType(types: !2013)
!2013 = !{!53, !53, !55}
!2014 = !DISubroutineType(types: !2015)
!2015 = !{!53, !53, !712}
!2016 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2017, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2018, nameTableKind: None)
!2017 = !DIFile(filename: "./lib/xalloc-die.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2018 = !{!200, !776}
!2019 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2020, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2021, retainedTypes: !2030, nameTableKind: None)
!2020 = !DIFile(filename: "./lib/xstrtoul.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2021 = !{!2022}
!2022 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "strtol_error", file: !2023, line: 26, baseType: !70, size: 32, elements: !2024)
!2023 = !DIFile(filename: "./lib/xstrtol.h", directory: "/home/mbarbar/software/coreutils-8.31")
!2024 = !{!2025, !2026, !2027, !2028, !2029}
!2025 = !DIEnumerator(name: "LONGINT_OK", value: 0, isUnsigned: true)
!2026 = !DIEnumerator(name: "LONGINT_OVERFLOW", value: 1, isUnsigned: true)
!2027 = !DIEnumerator(name: "LONGINT_INVALID_SUFFIX_CHAR", value: 2, isUnsigned: true)
!2028 = !DIEnumerator(name: "LONGINT_INVALID_SUFFIX_CHAR_WITH_OVERFLOW", value: 3, isUnsigned: true)
!2029 = !DIEnumerator(name: "LONGINT_INVALID", value: 4, isUnsigned: true)
!2030 = !{!7, !33, !2031, !9, !184, !57, !2033, !180, !554, !181, !1108, !10, !2035, !2037}
!2031 = !DISubroutineType(types: !2032)
!2032 = !{!2033, !180, !184, !7, !2034, !180}
!2033 = !DIDerivedType(tag: DW_TAG_typedef, name: "strtol_error", file: !2023, line: 39, baseType: !2022)
!2034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !57, size: 64)
!2035 = !DISubroutineType(types: !2036)
!2036 = !{!2033, !2034, !7}
!2037 = !DISubroutineType(types: !2038)
!2038 = !{!2033, !2034, !7, !7}
!2039 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2040, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2041, nameTableKind: None)
!2040 = !DIFile(filename: "./lib/xvasprintf.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2041 = !{!9, !2042, !55, !180, !181, !7, !2051, !2053, !10}
!2042 = !DISubroutineType(types: !2043)
!2043 = !{!9, !180, !2044}
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 64)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !2040, size: 192, elements: !2046)
!2046 = !{!2047, !2048, !2049, !2050}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2045, file: !2040, baseType: !70, size: 32)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2045, file: !2040, baseType: !70, size: 32, offset: 32)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2045, file: !2040, baseType: !53, size: 64, offset: 64)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2045, file: !2040, baseType: !53, size: 64, offset: 128)
!2051 = !DISubroutineType(types: !2052)
!2052 = !{!9, !55, !2044}
!2053 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !353, line: 52, baseType: !2054)
!2054 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !583, line: 32, baseType: !2055)
!2055 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2040, line: 36, baseType: !2056)
!2056 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2045, size: 192, elements: !38)
!2057 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2058, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2059, nameTableKind: None)
!2058 = !DIFile(filename: "./lib/yesno.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2059 = !{!1329, !142, !9, !55, !692, !2060}
!2060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2061, size: 64)
!2061 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !2062)
!2062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !2063)
!2063 = !{!2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093}
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2062, file: !4, line: 51, baseType: !7, size: 32)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2062, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2062, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2062, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2062, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2062, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2062, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2062, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2062, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2062, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2062, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2062, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2062, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2062, file: !4, line: 70, baseType: !2078, size: 64, offset: 832)
!2078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 64)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2062, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2062, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2062, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2062, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2062, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2062, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2062, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2062, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2062, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2062, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2062, file: !4, line: 93, baseType: !2078, size: 64, offset: 1344)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2062, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2062, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2062, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2062, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!2094 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2095, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2096, nameTableKind: None)
!2095 = !DIFile(filename: "./lib/fflush.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2096 = !{!53, !2097, !2133, !2100, !7}
!2097 = !DISubroutineType(types: !2098)
!2098 = !{!7, !2099}
!2099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2100, size: 64)
!2100 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !2101)
!2101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !2102)
!2102 = !{!2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132}
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2101, file: !4, line: 51, baseType: !7, size: 32)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2101, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2101, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2101, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2101, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2101, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2101, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2101, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2101, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2101, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2101, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2101, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2101, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2101, file: !4, line: 70, baseType: !2117, size: 64, offset: 832)
!2117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2101, size: 64)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2101, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2101, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2101, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2101, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2101, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2101, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2101, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2101, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2101, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2101, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2101, file: !4, line: 93, baseType: !2117, size: 64, offset: 1344)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2101, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2101, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2101, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2101, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!2133 = !DISubroutineType(types: !2134)
!2134 = !{null, !2099}
!2135 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2136, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2137, nameTableKind: None)
!2136 = !DIFile(filename: "./lib/freadahead.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2137 = !{!2138, !2141, !9, !7}
!2138 = !DISubroutineType(types: !2139)
!2139 = !{!55, !2140}
!2140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 64)
!2141 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !2142)
!2142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !2143)
!2143 = !{!2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173}
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2142, file: !4, line: 51, baseType: !7, size: 32)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2142, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2142, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2142, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2142, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2142, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2142, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2142, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2142, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2142, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2142, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2142, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2142, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2142, file: !4, line: 70, baseType: !2158, size: 64, offset: 832)
!2158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 64)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2142, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2142, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2142, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2142, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2142, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2142, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2142, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2142, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2142, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2142, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2142, file: !4, line: 93, baseType: !2158, size: 64, offset: 1344)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2142, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2142, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2142, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2142, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!2174 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2175, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2176, nameTableKind: None)
!2175 = !DIFile(filename: "./lib/fseeko.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2176 = !{!53, !2177, !2180, !9, !352, !7, !44}
!2177 = !DISubroutineType(types: !2178)
!2178 = !{!7, !2179, !352, !7}
!2179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2180, size: 64)
!2180 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !2181)
!2181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !2182)
!2182 = !{!2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212}
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2181, file: !4, line: 51, baseType: !7, size: 32)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2181, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2181, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2181, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2181, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2181, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2181, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2181, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2181, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2181, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2181, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2181, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2181, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2181, file: !4, line: 70, baseType: !2197, size: 64, offset: 832)
!2197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2181, size: 64)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2181, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2181, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2181, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2181, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2181, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2181, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2181, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2181, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2181, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2181, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2181, file: !4, line: 93, baseType: !2197, size: 64, offset: 1344)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2181, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2181, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2181, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2181, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!2213 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2214, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2215, nameTableKind: None)
!2214 = !DIFile(filename: "./lib/mbrtowc.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2215 = !{!55, !2216, !1125, !554, !181}
!2216 = !DISubroutineType(types: !2217)
!2217 = !{!55, !2218, !180, !55, !2219}
!2218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 64)
!2219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2220, size: 64)
!2220 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbstate_t", file: !1111, line: 6, baseType: !2221)
!2221 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mbstate_t", file: !1113, line: 21, baseType: !2222)
!2222 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1113, line: 13, size: 64, elements: !2223)
!2223 = !{!2224, !2225}
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2222, file: !1113, line: 15, baseType: !7, size: 32)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !2222, file: !1113, line: 20, baseType: !2226, size: 32, offset: 32)
!2226 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2222, file: !1113, line: 16, size: 32, elements: !2227)
!2227 = !{!2228, !2229}
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !2226, file: !1113, line: 18, baseType: !70, size: 32)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !2226, file: !1113, line: 19, baseType: !1122, size: 32)
!2230 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2231, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2232, nameTableKind: None)
!2231 = !DIFile(filename: "./lib/acl-internal.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2232 = !{!2233, !2239, !7, !2242, !2243, !2235}
!2233 = !DISubroutineType(types: !2234)
!2234 = !{!7, !2235}
!2235 = !DIDerivedType(tag: DW_TAG_typedef, name: "acl_t", file: !2236, line: 40, baseType: !2237)
!2236 = !DIFile(filename: "/usr/include/sys/acl.h", directory: "")
!2237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2238, size: 64)
!2238 = !DICompositeType(tag: DW_TAG_structure_type, name: "__acl_ext", file: !2236, line: 32, flags: DIFlagFwdDecl)
!2239 = !DIDerivedType(tag: DW_TAG_typedef, name: "acl_entry_t", file: !2236, line: 41, baseType: !2240)
!2240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2241, size: 64)
!2241 = !DICompositeType(tag: DW_TAG_structure_type, name: "__acl_entry_ext", file: !2236, line: 33, flags: DIFlagFwdDecl)
!2242 = !DIDerivedType(tag: DW_TAG_typedef, name: "acl_tag_t", file: !2236, line: 37, baseType: !7)
!2243 = !DISubroutineType(types: !2244)
!2244 = !{null, !2245}
!2245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2246, size: 64)
!2246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !2247, line: 260, size: 256, elements: !2248)
!2247 = !DIFile(filename: "./lib/acl-internal.h", directory: "/home/mbarbar/software/coreutils-8.31")
!2248 = !{!2249, !2250, !2251, !2252}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2246, file: !2247, line: 261, baseType: !139, size: 32)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "acl", scope: !2246, file: !2247, line: 264, baseType: !2235, size: 64, offset: 64)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "default_acl", scope: !2246, file: !2247, line: 266, baseType: !2235, size: 64, offset: 128)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "acls_not_supported", scope: !2246, file: !2247, line: 268, baseType: !142, size: 8, offset: 192)
!2253 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2254, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2255, nameTableKind: None)
!2254 = !DIFile(filename: "./lib/get-permissions.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2255 = !{!53, !2256, !139, !2235, !7}
!2256 = !DISubroutineType(types: !2257)
!2257 = !{!7, !180, !7, !139, !2258}
!2258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2259, size: 64)
!2259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !2247, line: 260, size: 256, elements: !2260)
!2260 = !{!2261, !2262, !2263, !2264}
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2259, file: !2247, line: 261, baseType: !139, size: 32)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "acl", scope: !2259, file: !2247, line: 264, baseType: !2235, size: 64, offset: 64)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "default_acl", scope: !2259, file: !2247, line: 266, baseType: !2235, size: 64, offset: 128)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "acls_not_supported", scope: !2259, file: !2247, line: 268, baseType: !142, size: 8, offset: 192)
!2265 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2266, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2267, nameTableKind: None)
!2266 = !DIFile(filename: "./lib/set-permissions.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2267 = !{!53, !1519, !2268, !142, !7, !139, !2277, !2235}
!2268 = !DISubroutineType(types: !2269)
!2269 = !{!7, !2270, !180, !7}
!2270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2271, size: 64)
!2271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !2247, line: 260, size: 256, elements: !2272)
!2272 = !{!2273, !2274, !2275, !2276}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2271, file: !2247, line: 261, baseType: !139, size: 32)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "acl", scope: !2271, file: !2247, line: 264, baseType: !2235, size: 64, offset: 64)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "default_acl", scope: !2271, file: !2247, line: 266, baseType: !2235, size: 64, offset: 128)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "acls_not_supported", scope: !2271, file: !2247, line: 268, baseType: !142, size: 8, offset: 192)
!2277 = !DISubroutineType(types: !2278)
!2278 = !{!7, !2270, !180, !7, !7, !406, !406}
!2279 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2280, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2281, nameTableKind: None)
!2280 = !DIFile(filename: "./lib/bitrotate.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2281 = !{!2282, !2284, !2286, !2288, !2292}
!2282 = !DISubroutineType(types: !2283)
!2283 = !{!1484, !1484, !7}
!2284 = !DISubroutineType(types: !2285)
!2285 = !{!1489, !1489, !7}
!2286 = !DISubroutineType(types: !2287)
!2287 = !{!55, !55, !7}
!2288 = !DISubroutineType(types: !2289)
!2289 = !{!2290, !2290, !7}
!2290 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !1485, line: 25, baseType: !2291)
!2291 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !30, line: 40, baseType: !33)
!2292 = !DISubroutineType(types: !2293)
!2293 = !{!2294, !2294, !7}
!2294 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !1485, line: 24, baseType: !2295)
!2295 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !30, line: 38, baseType: !554)
!2296 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2297, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2298, nameTableKind: None)
!2297 = !DIFile(filename: "./lib/c-strcasecmp.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2298 = !{!552, !1860, !554, !553}
!2299 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2300, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2301, nameTableKind: None)
!2300 = !DIFile(filename: "./lib/close-stream.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2301 = !{!2302, !2338, !7}
!2302 = !DISubroutineType(types: !2303)
!2303 = !{!7, !2304}
!2304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2305, size: 64)
!2305 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !2306)
!2306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !2307)
!2307 = !{!2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337}
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2306, file: !4, line: 51, baseType: !7, size: 32)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2306, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2306, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2306, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2306, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2306, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2306, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2306, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2306, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2306, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2306, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2306, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2306, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2306, file: !4, line: 70, baseType: !2322, size: 64, offset: 832)
!2322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2306, size: 64)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2306, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2306, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2306, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2306, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2306, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2306, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2306, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2306, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2306, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2306, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2306, file: !4, line: 93, baseType: !2322, size: 64, offset: 1344)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2306, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2306, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2306, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2306, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!2338 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !142)
!2339 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2340, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2341, nameTableKind: None)
!2340 = !DIFile(filename: "./lib/opendir-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2341 = !{!2342, !693, !7}
!2342 = !DISubroutineType(types: !2343)
!2343 = !{!693, !180}
!2344 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2345, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2346, nameTableKind: None)
!2345 = !DIFile(filename: "./lib/gettime.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2346 = !{!2347, !2354}
!2347 = !DISubroutineType(types: !2348)
!2348 = !{null, !2349}
!2349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2350, size: 64)
!2350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !291, line: 9, size: 128, elements: !2351)
!2351 = !{!2352, !2353}
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2350, file: !291, line: 11, baseType: !294, size: 64)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2350, file: !291, line: 12, baseType: !296, size: 64, offset: 64)
!2354 = !DISubroutineType(types: !2355)
!2355 = !{!2350}
!2356 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2357, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2358, nameTableKind: None)
!2357 = !DIFile(filename: "./lib/hard-locale.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2358 = !{!256, !142, !180}
!2359 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2360, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2361, nameTableKind: None)
!2360 = !DIFile(filename: "./lib/hash-pjw.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2361 = !{!633, !180, !55, !181}
!2362 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2363, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2364, nameTableKind: None)
!2363 = !DIFile(filename: "./lib/localcharset.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2364 = !{!53, !2365, !180}
!2365 = !DISubroutineType(types: !675)
!2366 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2367, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2368, nameTableKind: None)
!2367 = !DIFile(filename: "./lib/dirchownmod.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2368 = !{!127, !129, !139, !2369, !7, !140, !128, !130}
!2369 = !DISubroutineType(types: !2370)
!2370 = !{!7, !7, !180, !139, !127, !129, !139, !139}
!2371 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2372, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2373, nameTableKind: None)
!2372 = !DIFile(filename: "./lib/openat-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2373 = !{!2374, !139, !2376}
!2374 = !DISubroutineType(types: !2375)
!2375 = !{!7, !7, !180, !7}
!2376 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !583, line: 14, baseType: !2377)
!2377 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2372, line: 35, baseType: !2378)
!2378 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2379, size: 192, elements: !38)
!2379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !2372, line: 35, size: 192, elements: !2380)
!2380 = !{!2381, !2382, !2383, !2384}
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2379, file: !2372, line: 35, baseType: !70, size: 32)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2379, file: !2372, line: 35, baseType: !70, size: 32, offset: 32)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2379, file: !2372, line: 35, baseType: !53, size: 64, offset: 64)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2379, file: !2372, line: 35, baseType: !53, size: 64, offset: 128)
!2385 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2386, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2387, nameTableKind: None)
!2386 = !DIFile(filename: "./lib/randint.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2387 = !{!2388, !2390, !2395, !2399, !2401, !2403, !2407, !55, !2409, !2410, !2412, !7, !2414}
!2388 = !DISubroutineType(types: !2389)
!2389 = !{!2390, !2395}
!2390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2391, size: 64)
!2391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "randint_source", file: !2392, line: 54, size: 192, elements: !2393)
!2392 = !DIFile(filename: "lib/randint.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2393 = !{!2394, !2398, !2400}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2391, file: !2392, line: 57, baseType: !2395, size: 64)
!2395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2396, size: 64)
!2396 = !DICompositeType(tag: DW_TAG_structure_type, name: "randread_source", file: !2397, line: 25, flags: DIFlagFwdDecl)
!2397 = !DIFile(filename: "./lib/randread.h", directory: "/home/mbarbar/software/coreutils-8.31")
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "randnum", scope: !2391, file: !2392, line: 64, baseType: !2399, size: 64, offset: 64)
!2399 = !DIDerivedType(tag: DW_TAG_typedef, name: "randint", file: !1200, line: 30, baseType: !544)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "randmax", scope: !2391, file: !2392, line: 65, baseType: !2399, size: 64, offset: 128)
!2401 = !DISubroutineType(types: !2402)
!2402 = !{!2390, !180, !55}
!2403 = !DISubroutineType(types: !2404)
!2404 = !{!2395, !2405}
!2405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2406, size: 64)
!2406 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2391)
!2407 = !DISubroutineType(types: !2408)
!2408 = !{!2399, !2390, !2399}
!2409 = !DICompositeType(tag: DW_TAG_array_type, baseType: !554, size: 64, elements: !726)
!2410 = !DISubroutineType(types: !2411)
!2411 = !{null, !2390}
!2412 = !DISubroutineType(types: !2413)
!2413 = !{!7, !2390}
!2414 = !DISubroutineType(types: !2415)
!2415 = !{!2399, !2399}
!2416 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2417, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2418, nameTableKind: None)
!2417 = !DIFile(filename: "./lib/randread.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2418 = !{!55, !2419, !2426, !2421, !2493, !2461, !2495, !513, !2497, !2499, !2501, !2462, !776, !7, !2503, !9, !692, !111, !127, !2505, !2508, !2511}
!2419 = !DISubroutineType(types: !2420)
!2420 = !{!2421, !180, !55}
!2421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2422, size: 64)
!2422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "randread_source", file: !2423, line: 79, size: 33216, elements: !2424)
!2423 = !DIFile(filename: "lib/randread.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2424 = !{!2425, !2460, !2464, !2465}
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2422, file: !2423, line: 83, baseType: !2426, size: 64)
!2426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2427, size: 64)
!2427 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !2428)
!2428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !2429)
!2429 = !{!2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459}
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2428, file: !4, line: 51, baseType: !7, size: 32)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2428, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2428, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2428, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2428, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2428, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2428, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2428, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2428, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2428, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2428, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2428, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2428, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2428, file: !4, line: 70, baseType: !2444, size: 64, offset: 832)
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2428, size: 64)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2428, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2428, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2428, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2428, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2428, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2428, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2428, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2428, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2428, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2428, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2428, file: !4, line: 93, baseType: !2444, size: 64, offset: 1344)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2428, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2428, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2428, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2428, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !2422, file: !2423, line: 90, baseType: !2461, size: 64, offset: 64)
!2461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2462, size: 64)
!2462 = !DISubroutineType(types: !2463)
!2463 = !{null, !513}
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "handler_arg", scope: !2422, file: !2423, line: 91, baseType: !513, size: 64, offset: 128)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2422, file: !2423, line: 117, baseType: !2466, size: 33024, offset: 192)
!2466 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2422, file: !2423, line: 96, size: 33024, elements: !2467)
!2467 = !{!2468, !2469}
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !2466, file: !2423, line: 99, baseType: !338, size: 32768)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "isaac", scope: !2466, file: !2423, line: 116, baseType: !2470, size: 33024)
!2470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isaac", file: !2423, line: 102, size: 33024, elements: !2471)
!2471 = !{!2472, !2473, !2485}
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "buffered", scope: !2470, file: !2423, line: 105, baseType: !55, size: 64)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2470, file: !2423, line: 108, baseType: !2474, size: 16576, offset: 64)
!2474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isaac_state", file: !2475, line: 56, size: 16576, elements: !2476)
!2475 = !DIFile(filename: "./lib/rand-isaac.h", directory: "/home/mbarbar/software/coreutils-8.31")
!2476 = !{!2477, !2482, !2483, !2484}
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !2474, file: !2475, line: 58, baseType: !2478, size: 16384)
!2478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2479, size: 16384, elements: !646)
!2479 = !DIDerivedType(tag: DW_TAG_typedef, name: "isaac_word", file: !2475, line: 44, baseType: !2480)
!2480 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint_least64_t", file: !545, line: 52, baseType: !2481)
!2481 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint_least64_t", file: !30, line: 59, baseType: !1486)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2474, file: !2475, line: 59, baseType: !2479, size: 64, offset: 16384)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2474, file: !2475, line: 59, baseType: !2479, size: 64, offset: 16448)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !2474, file: !2475, line: 59, baseType: !2479, size: 64, offset: 16512)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2470, file: !2423, line: 115, baseType: !2486, size: 16384, offset: 16640)
!2486 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2470, file: !2423, line: 111, size: 16384, elements: !2487)
!2487 = !{!2488, !2489}
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !2486, file: !2423, line: 113, baseType: !2478, size: 16384)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2486, file: !2423, line: 114, baseType: !2490, size: 16384)
!2490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !554, size: 16384, elements: !2491)
!2491 = !{!2492}
!2492 = !DISubrange(count: 2048)
!2493 = !DISubroutineType(types: !2494)
!2494 = !{null, !2421, !2461}
!2495 = !DISubroutineType(types: !2496)
!2496 = !{null, !2421, !513}
!2497 = !DISubroutineType(types: !2498)
!2498 = !{null, !2421, !53, !55}
!2499 = !DISubroutineType(types: !2500)
!2500 = !{!7, !2421}
!2501 = !DISubroutineType(types: !2502)
!2502 = !{!2421, !2426, !513}
!2503 = !DISubroutineType(types: !2504)
!2504 = !{null, !53, !55, !55}
!2505 = !DISubroutineType(types: !2506)
!2506 = !{null, !2421, !2507, !55}
!2507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !554, size: 64)
!2508 = !DISubroutineType(types: !2509)
!2509 = !{null, !2510, !53, !55}
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2470, size: 64)
!2511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2479, size: 64)
!2512 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2513, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2514, nameTableKind: None)
!2513 = !DIFile(filename: "./lib/rand-isaac.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2514 = !{!2479, !2515, !2511, !2524, !7, !2478, !2526, !513, !180, !2528, !2529, !2530}
!2515 = !DISubroutineType(types: !2516)
!2516 = !{null, !2517, !2511}
!2517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2518, size: 64)
!2518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "isaac_state", file: !2475, line: 56, size: 16576, elements: !2519)
!2519 = !{!2520, !2521, !2522, !2523}
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !2518, file: !2475, line: 58, baseType: !2478, size: 16384)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2518, file: !2475, line: 59, baseType: !2479, size: 64, offset: 16384)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2518, file: !2475, line: 59, baseType: !2479, size: 64, offset: 16448)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !2518, file: !2475, line: 59, baseType: !2479, size: 64, offset: 16512)
!2524 = !DISubroutineType(types: !2525)
!2525 = !{null, !2517}
!2526 = !DISubroutineType(types: !2527)
!2527 = !{!2479, !2528, !2479}
!2528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2529, size: 64)
!2529 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2479)
!2530 = !DISubroutineType(types: !2531)
!2531 = !{!2479, !2479}
!2532 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2533, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2534, nameTableKind: None)
!2533 = !DIFile(filename: "./lib/dup-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2534 = !{!1784}
!2535 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2536, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2537, nameTableKind: None)
!2536 = !DIFile(filename: "./lib/xsize.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2537 = !{!2538, !55, !1530, !2540}
!2538 = !DISubroutineType(types: !2539)
!2539 = !{!55, !55, !55}
!2540 = !DISubroutineType(types: !2541)
!2541 = !{!55, !55, !55, !55, !55}
!2542 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2543, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2544, nameTableKind: None)
!2543 = !DIFile(filename: "./lib/fclose.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2544 = !{!2545, !7}
!2545 = !DISubroutineType(types: !2546)
!2546 = !{!7, !2547}
!2547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2548, size: 64)
!2548 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !2549)
!2549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !2550)
!2550 = !{!2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580}
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2549, file: !4, line: 51, baseType: !7, size: 32)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2549, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2549, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2549, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2549, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2549, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2549, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2549, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2549, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2549, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2549, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2549, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2549, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2549, file: !4, line: 70, baseType: !2565, size: 64, offset: 832)
!2565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2549, size: 64)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2549, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2549, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2549, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2549, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2549, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2549, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2549, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2549, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2549, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2549, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2549, file: !4, line: 93, baseType: !2565, size: 64, offset: 1344)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2549, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2549, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2549, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2549, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!2581 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2582, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2583, nameTableKind: None)
!2582 = !DIFile(filename: "./lib/acl-errno-valid.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2583 = !{!256}
!2584 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2585, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2586, nameTableKind: None)
!2585 = !DIFile(filename: "./lib/c-ctype.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2586 = !{!256, !1784}
!2587 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2588, producer: "clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !209, retainedTypes: !2589, nameTableKind: None)
!2588 = !DIFile(filename: "./lib/fopen-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!2589 = !{!2590, !2592, !7}
!2590 = !DISubroutineType(types: !2591)
!2591 = !{!2592, !180, !180}
!2592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2593, size: 64)
!2593 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2, line: 7, baseType: !2594)
!2594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4, line: 49, size: 1728, elements: !2595)
!2595 = !{!2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625}
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2594, file: !4, line: 51, baseType: !7, size: 32)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2594, file: !4, line: 54, baseType: !9, size: 64, offset: 64)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2594, file: !4, line: 55, baseType: !9, size: 64, offset: 128)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2594, file: !4, line: 56, baseType: !9, size: 64, offset: 192)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2594, file: !4, line: 57, baseType: !9, size: 64, offset: 256)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2594, file: !4, line: 58, baseType: !9, size: 64, offset: 320)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2594, file: !4, line: 59, baseType: !9, size: 64, offset: 384)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2594, file: !4, line: 60, baseType: !9, size: 64, offset: 448)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2594, file: !4, line: 61, baseType: !9, size: 64, offset: 512)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2594, file: !4, line: 64, baseType: !9, size: 64, offset: 576)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2594, file: !4, line: 65, baseType: !9, size: 64, offset: 640)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2594, file: !4, line: 66, baseType: !9, size: 64, offset: 704)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2594, file: !4, line: 68, baseType: !22, size: 64, offset: 768)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2594, file: !4, line: 70, baseType: !2610, size: 64, offset: 832)
!2610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2594, size: 64)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2594, file: !4, line: 72, baseType: !7, size: 32, offset: 896)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2594, file: !4, line: 73, baseType: !7, size: 32, offset: 928)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2594, file: !4, line: 74, baseType: !29, size: 64, offset: 960)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2594, file: !4, line: 77, baseType: !33, size: 16, offset: 1024)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2594, file: !4, line: 78, baseType: !35, size: 8, offset: 1040)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2594, file: !4, line: 79, baseType: !37, size: 8, offset: 1048)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2594, file: !4, line: 81, baseType: !41, size: 64, offset: 1088)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2594, file: !4, line: 89, baseType: !44, size: 64, offset: 1152)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2594, file: !4, line: 91, baseType: !46, size: 64, offset: 1216)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2594, file: !4, line: 92, baseType: !49, size: 64, offset: 1280)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2594, file: !4, line: 93, baseType: !2610, size: 64, offset: 1344)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2594, file: !4, line: 94, baseType: !53, size: 64, offset: 1408)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2594, file: !4, line: 95, baseType: !55, size: 64, offset: 1472)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2594, file: !4, line: 96, baseType: !7, size: 32, offset: 1536)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2594, file: !4, line: 98, baseType: !60, size: 160, offset: 1568)
!2626 = !{!"clang version 9.0.0 (git@github.com:mbarbar/tir-clang 965159bbccee6f3dcd2e68d793559c8aa75c7480)"}
!2627 = !{i32 2, !"ctir", i32 1}
!2628 = !{i32 2, !"Dwarf Version", i32 4}
!2629 = !{i32 2, !"Debug Info Version", i32 3}
!2630 = !{i32 1, !"wchar_size", i32 4}
!2631 = distinct !DISubprogram(name: "usage", scope: !66, file: !66, line: 621, type: !125, scopeLine: 622, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !209)
!2632 = !{!2633, !2633, i64 0}
!2633 = !{!"int", !2634, i64 0}
!2634 = !{!"omnipotent char", !2635, i64 0}
!2635 = !{!"Simple C/C++ TBAA"}
!2636 = !DILocalVariable(name: "status", arg: 1, scope: !2631, file: !66, line: 621, type: !7)
!2637 = !DILocation(line: 621, column: 12, scope: !2631)
!2638 = !DILocation(line: 623, column: 7, scope: !2639)
!2639 = distinct !DILexicalBlock(scope: !2631, file: !66, line: 623, column: 7)
!2640 = !DILocation(line: 623, column: 14, scope: !2639)
!2641 = !DILocation(line: 623, column: 7, scope: !2631)
!2642 = !DILocation(line: 624, column: 5, scope: !2639)
!2643 = !DILocation(line: 624, column: 5, scope: !2644)
!2644 = distinct !DILexicalBlock(scope: !2639, file: !66, line: 624, column: 5)
!2645 = !{!2646, !2646, i64 0}
!2646 = !{!"any pointer", !2634, i64 0}
!2647 = !DILocation(line: 627, column: 15, scope: !2648)
!2648 = distinct !DILexicalBlock(scope: !2639, file: !66, line: 626, column: 5)
!2649 = !DILocation(line: 633, column: 15, scope: !2648)
!2650 = !DILocation(line: 633, column: 29, scope: !2648)
!2651 = !DILocation(line: 633, column: 43, scope: !2648)
!2652 = !DILocation(line: 633, column: 57, scope: !2648)
!2653 = !DILocation(line: 627, column: 7, scope: !2648)
!2654 = !DILocation(line: 634, column: 7, scope: !2648)
!2655 = !DILocation(line: 646, column: 7, scope: !2648)
!2656 = !DILocation(line: 648, column: 7, scope: !2648)
!2657 = !DILocation(line: 657, column: 7, scope: !2648)
!2658 = !DILocation(line: 665, column: 7, scope: !2648)
!2659 = !DILocation(line: 675, column: 7, scope: !2648)
!2660 = !DILocation(line: 683, column: 7, scope: !2648)
!2661 = !DILocation(line: 684, column: 7, scope: !2648)
!2662 = !DILocation(line: 685, column: 7, scope: !2648)
!2663 = !DILocation(line: 686, column: 7, scope: !2648)
!2664 = !DILocation(line: 688, column: 9, scope: !2631)
!2665 = !DILocation(line: 688, column: 3, scope: !2631)
!2666 = distinct !DISubprogram(name: "emit_mandatory_arg_note", scope: !207, file: !207, line: 585, type: !200, scopeLine: 586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!2667 = !DILocation(line: 587, column: 3, scope: !2666)
!2668 = !DILocation(line: 590, column: 1, scope: !2666)
!2669 = distinct !DISubprogram(name: "emit_backup_suffix_note", scope: !207, file: !207, line: 613, type: !200, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!2670 = !DILocation(line: 615, column: 3, scope: !2669)
!2671 = !DILocation(line: 622, column: 3, scope: !2669)
!2672 = !DILocation(line: 628, column: 1, scope: !2669)
!2673 = !DILocalVariable(name: "program", arg: 1, scope: !208, file: !207, line: 631, type: !180)
!2674 = !DILocation(line: 631, column: 34, scope: !208)
!2675 = !DILocalVariable(name: "infomap", scope: !208, file: !207, line: 633, type: !204)
!2676 = !DILocation(line: 633, column: 67, scope: !208)
!2677 = !DILocalVariable(name: "node", scope: !208, file: !207, line: 643, type: !180)
!2678 = !DILocation(line: 643, column: 15, scope: !208)
!2679 = !DILocation(line: 643, column: 22, scope: !208)
!2680 = !DILocalVariable(name: "map_prog", scope: !208, file: !207, line: 644, type: !215)
!2681 = !DILocation(line: 644, column: 25, scope: !208)
!2682 = !DILocation(line: 644, column: 36, scope: !208)
!2683 = !DILocation(line: 646, column: 3, scope: !208)
!2684 = !DILocation(line: 646, column: 10, scope: !208)
!2685 = !DILocation(line: 646, column: 20, scope: !208)
!2686 = !{!2687, !2646, i64 0}
!2687 = !{!"infomap", !2646, i64 0, !2646, i64 8}
!2688 = !DILocation(line: 646, column: 28, scope: !208)
!2689 = !DILocation(line: 646, column: 33, scope: !208)
!2690 = !DILocation(line: 646, column: 31, scope: !208)
!2691 = !DILocation(line: 0, scope: !208)
!2692 = !DILocation(line: 647, column: 13, scope: !208)
!2693 = distinct !{!2693, !2683, !2692}
!2694 = !DILocation(line: 649, column: 7, scope: !2695)
!2695 = distinct !DILexicalBlock(scope: !208, file: !207, line: 649, column: 7)
!2696 = !DILocation(line: 649, column: 17, scope: !2695)
!2697 = !{!2687, !2646, i64 8}
!2698 = !DILocation(line: 649, column: 7, scope: !208)
!2699 = !DILocation(line: 650, column: 12, scope: !2695)
!2700 = !DILocation(line: 650, column: 22, scope: !2695)
!2701 = !DILocation(line: 650, column: 10, scope: !2695)
!2702 = !DILocation(line: 650, column: 5, scope: !2695)
!2703 = !DILocation(line: 652, column: 11, scope: !208)
!2704 = !DILocation(line: 652, column: 3, scope: !208)
!2705 = !DILocalVariable(name: "lc_messages", scope: !208, file: !207, line: 656, type: !180)
!2706 = !DILocation(line: 656, column: 15, scope: !208)
!2707 = !DILocation(line: 656, column: 29, scope: !208)
!2708 = !DILocation(line: 657, column: 7, scope: !2709)
!2709 = distinct !DILexicalBlock(scope: !208, file: !207, line: 657, column: 7)
!2710 = !DILocation(line: 657, column: 19, scope: !2709)
!2711 = !DILocation(line: 657, column: 22, scope: !2709)
!2712 = !DILocation(line: 657, column: 7, scope: !208)
!2713 = !DILocation(line: 663, column: 7, scope: !2714)
!2714 = distinct !DILexicalBlock(scope: !2709, file: !207, line: 658, column: 5)
!2715 = !DILocation(line: 665, column: 5, scope: !2714)
!2716 = !DILocation(line: 666, column: 11, scope: !208)
!2717 = !DILocation(line: 667, column: 24, scope: !208)
!2718 = !DILocation(line: 666, column: 3, scope: !208)
!2719 = !DILocation(line: 668, column: 11, scope: !208)
!2720 = !DILocation(line: 669, column: 11, scope: !208)
!2721 = !DILocation(line: 669, column: 17, scope: !208)
!2722 = !DILocation(line: 669, column: 25, scope: !208)
!2723 = !DILocation(line: 669, column: 22, scope: !208)
!2724 = !DILocation(line: 668, column: 3, scope: !208)
!2725 = !DILocation(line: 670, column: 1, scope: !208)
!2726 = distinct !DISubprogram(name: "main", scope: !66, file: !66, line: 793, type: !182, scopeLine: 794, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !65, retainedNodes: !209)
!2727 = !DILocalVariable(name: "argc", arg: 1, scope: !2726, file: !66, line: 793, type: !7)
!2728 = !DILocation(line: 793, column: 11, scope: !2726)
!2729 = !DILocalVariable(name: "argv", arg: 2, scope: !2726, file: !66, line: 793, type: !184)
!2730 = !DILocation(line: 793, column: 24, scope: !2726)
!2731 = !DILocalVariable(name: "optc", scope: !2726, file: !66, line: 795, type: !7)
!2732 = !DILocation(line: 795, column: 7, scope: !2726)
!2733 = !DILocalVariable(name: "exit_status", scope: !2726, file: !66, line: 796, type: !7)
!2734 = !DILocation(line: 796, column: 7, scope: !2726)
!2735 = !DILocalVariable(name: "specified_mode", scope: !2726, file: !66, line: 797, type: !180)
!2736 = !DILocation(line: 797, column: 15, scope: !2726)
!2737 = !DILocalVariable(name: "make_backups", scope: !2726, file: !66, line: 798, type: !142)
!2738 = !DILocation(line: 798, column: 8, scope: !2726)
!2739 = !{!2740, !2740, i64 0}
!2740 = !{!"_Bool", !2634, i64 0}
!2741 = !DILocalVariable(name: "backup_suffix", scope: !2726, file: !66, line: 799, type: !180)
!2742 = !DILocation(line: 799, column: 15, scope: !2726)
!2743 = !DILocalVariable(name: "version_control_string", scope: !2726, file: !66, line: 800, type: !9)
!2744 = !DILocation(line: 800, column: 9, scope: !2726)
!2745 = !DILocalVariable(name: "mkdir_and_install", scope: !2726, file: !66, line: 801, type: !142)
!2746 = !DILocation(line: 801, column: 8, scope: !2726)
!2747 = !DILocalVariable(name: "x", scope: !2726, file: !66, line: 802, type: !132)
!2748 = !DILocation(line: 802, column: 21, scope: !2726)
!2749 = !DILocalVariable(name: "target_directory", scope: !2726, file: !66, line: 803, type: !180)
!2750 = !DILocation(line: 803, column: 15, scope: !2726)
!2751 = !DILocalVariable(name: "no_target_directory", scope: !2726, file: !66, line: 804, type: !142)
!2752 = !DILocation(line: 804, column: 8, scope: !2726)
!2753 = !DILocalVariable(name: "n_files", scope: !2726, file: !66, line: 805, type: !7)
!2754 = !DILocation(line: 805, column: 7, scope: !2726)
!2755 = !DILocalVariable(name: "file", scope: !2726, file: !66, line: 806, type: !184)
!2756 = !DILocation(line: 806, column: 10, scope: !2726)
!2757 = !DILocalVariable(name: "strip_program_specified", scope: !2726, file: !66, line: 807, type: !142)
!2758 = !DILocation(line: 807, column: 8, scope: !2726)
!2759 = !DILocalVariable(name: "scontext", scope: !2726, file: !66, line: 808, type: !180)
!2760 = !DILocation(line: 808, column: 15, scope: !2726)
!2761 = !DILocation(line: 810, column: 19, scope: !2726)
!2762 = !DILocation(line: 813, column: 21, scope: !2726)
!2763 = !DILocation(line: 813, column: 3, scope: !2726)
!2764 = !DILocation(line: 814, column: 3, scope: !2726)
!2765 = !DILocation(line: 815, column: 3, scope: !2726)
!2766 = !DILocation(line: 816, column: 3, scope: !2726)
!2767 = !DILocation(line: 818, column: 3, scope: !2726)
!2768 = !DILocation(line: 820, column: 3, scope: !2726)
!2769 = !DILocation(line: 822, column: 14, scope: !2726)
!2770 = !DILocation(line: 823, column: 14, scope: !2726)
!2771 = !DILocation(line: 824, column: 15, scope: !2726)
!2772 = !DILocation(line: 825, column: 11, scope: !2726)
!2773 = !DILocation(line: 826, column: 3, scope: !2726)
!2774 = !DILocation(line: 828, column: 3, scope: !2726)
!2775 = !DILocation(line: 828, column: 31, scope: !2726)
!2776 = !DILocation(line: 828, column: 37, scope: !2726)
!2777 = !DILocation(line: 828, column: 18, scope: !2726)
!2778 = !DILocation(line: 828, column: 16, scope: !2726)
!2779 = !DILocation(line: 829, column: 38, scope: !2726)
!2780 = !DILocation(line: 831, column: 15, scope: !2781)
!2781 = distinct !DILexicalBlock(scope: !2726, file: !66, line: 830, column: 5)
!2782 = !DILocation(line: 831, column: 7, scope: !2781)
!2783 = !DILocation(line: 834, column: 24, scope: !2784)
!2784 = distinct !DILexicalBlock(scope: !2781, file: !66, line: 832, column: 9)
!2785 = !DILocation(line: 835, column: 15, scope: !2786)
!2786 = distinct !DILexicalBlock(scope: !2784, file: !66, line: 835, column: 15)
!2787 = !DILocation(line: 835, column: 15, scope: !2784)
!2788 = !DILocation(line: 836, column: 38, scope: !2786)
!2789 = !DILocation(line: 836, column: 36, scope: !2786)
!2790 = !DILocation(line: 836, column: 13, scope: !2786)
!2791 = !DILocation(line: 837, column: 11, scope: !2784)
!2792 = !DILocation(line: 839, column: 11, scope: !2784)
!2793 = !DILocation(line: 841, column: 31, scope: !2784)
!2794 = !DILocation(line: 842, column: 11, scope: !2784)
!2795 = !DILocation(line: 844, column: 23, scope: !2784)
!2796 = !DILocation(line: 847, column: 11, scope: !2784)
!2797 = !DILocation(line: 849, column: 11, scope: !2784)
!2798 = !DILocation(line: 851, column: 36, scope: !2784)
!2799 = !DILocation(line: 851, column: 27, scope: !2784)
!2800 = !DILocation(line: 851, column: 25, scope: !2784)
!2801 = !DILocation(line: 852, column: 35, scope: !2784)
!2802 = !DILocation(line: 853, column: 11, scope: !2784)
!2803 = !DILocation(line: 855, column: 19, scope: !2784)
!2804 = !DILocation(line: 856, column: 11, scope: !2784)
!2805 = !DILocation(line: 858, column: 29, scope: !2784)
!2806 = !DILocation(line: 859, column: 11, scope: !2784)
!2807 = !DILocation(line: 861, column: 13, scope: !2784)
!2808 = !DILocation(line: 861, column: 21, scope: !2784)
!2809 = !{!2810, !2740, i64 46}
!2810 = !{!"cp_options", !2634, i64 0, !2634, i64 4, !2634, i64 8, !2634, i64 12, !2633, i64 16, !2740, i64 20, !2740, i64 21, !2740, i64 22, !2740, i64 23, !2740, i64 24, !2740, i64 25, !2740, i64 26, !2740, i64 27, !2740, i64 28, !2740, i64 29, !2740, i64 30, !2740, i64 31, !2740, i64 32, !2740, i64 33, !2740, i64 34, !2740, i64 35, !2740, i64 36, !2740, i64 37, !2740, i64 38, !2740, i64 39, !2740, i64 40, !2740, i64 41, !2740, i64 42, !2740, i64 43, !2740, i64 44, !2740, i64 45, !2740, i64 46, !2740, i64 47, !2740, i64 48, !2740, i64 49, !2633, i64 52, !2634, i64 56, !2646, i64 64, !2646, i64 72}
!2811 = !DILocation(line: 862, column: 11, scope: !2784)
!2812 = !DILocation(line: 864, column: 24, scope: !2784)
!2813 = !DILocation(line: 864, column: 22, scope: !2784)
!2814 = !DILocation(line: 865, column: 11, scope: !2784)
!2815 = !DILocation(line: 867, column: 28, scope: !2784)
!2816 = !DILocation(line: 867, column: 26, scope: !2784)
!2817 = !DILocation(line: 868, column: 11, scope: !2784)
!2818 = !DILocation(line: 870, column: 24, scope: !2784)
!2819 = !DILocation(line: 870, column: 22, scope: !2784)
!2820 = !DILocation(line: 871, column: 11, scope: !2784)
!2821 = !DILocation(line: 873, column: 13, scope: !2784)
!2822 = !DILocation(line: 873, column: 33, scope: !2784)
!2823 = !{!2810, !2740, i64 31}
!2824 = !DILocation(line: 874, column: 11, scope: !2784)
!2825 = !DILocation(line: 876, column: 24, scope: !2784)
!2826 = !DILocation(line: 877, column: 27, scope: !2784)
!2827 = !DILocation(line: 877, column: 25, scope: !2784)
!2828 = !DILocation(line: 878, column: 11, scope: !2784)
!2829 = !DILocation(line: 880, column: 15, scope: !2830)
!2830 = distinct !DILexicalBlock(scope: !2784, file: !66, line: 880, column: 15)
!2831 = !DILocation(line: 880, column: 15, scope: !2784)
!2832 = !DILocation(line: 881, column: 13, scope: !2830)
!2833 = !DILocation(line: 883, column: 30, scope: !2784)
!2834 = !DILocation(line: 883, column: 28, scope: !2784)
!2835 = !DILocation(line: 884, column: 11, scope: !2784)
!2836 = !DILocation(line: 886, column: 31, scope: !2784)
!2837 = !DILocation(line: 887, column: 11, scope: !2784)
!2838 = !DILocation(line: 890, column: 17, scope: !2839)
!2839 = distinct !DILexicalBlock(scope: !2784, file: !66, line: 890, column: 15)
!2840 = !DILocation(line: 890, column: 15, scope: !2784)
!2841 = !DILocation(line: 892, column: 28, scope: !2842)
!2842 = distinct !DILexicalBlock(scope: !2839, file: !66, line: 891, column: 13)
!2843 = !DILocation(line: 892, column: 15, scope: !2842)
!2844 = !DILocation(line: 894, column: 15, scope: !2842)
!2845 = !DILocation(line: 896, column: 13, scope: !2784)
!2846 = !DILocation(line: 896, column: 39, scope: !2784)
!2847 = !{!2810, !2740, i64 37}
!2848 = !DILocation(line: 897, column: 39, scope: !2784)
!2849 = !DILocation(line: 898, column: 11, scope: !2784)
!2850 = !DILocation(line: 900, column: 15, scope: !2851)
!2851 = distinct !DILexicalBlock(scope: !2784, file: !66, line: 900, column: 15)
!2852 = !DILocation(line: 900, column: 15, scope: !2784)
!2853 = !DILocation(line: 908, column: 43, scope: !2854)
!2854 = distinct !DILexicalBlock(scope: !2851, file: !66, line: 901, column: 13)
!2855 = !DILocation(line: 910, column: 19, scope: !2856)
!2856 = distinct !DILexicalBlock(scope: !2854, file: !66, line: 910, column: 19)
!2857 = !DILocation(line: 910, column: 19, scope: !2854)
!2858 = !DILocation(line: 911, column: 28, scope: !2856)
!2859 = !DILocation(line: 911, column: 26, scope: !2856)
!2860 = !DILocation(line: 911, column: 17, scope: !2856)
!2861 = !DILocation(line: 913, column: 19, scope: !2856)
!2862 = !DILocation(line: 913, column: 40, scope: !2856)
!2863 = !{!2810, !2740, i64 33}
!2864 = !DILocation(line: 914, column: 13, scope: !2854)
!2865 = !DILocation(line: 915, column: 20, scope: !2866)
!2866 = distinct !DILexicalBlock(scope: !2851, file: !66, line: 915, column: 20)
!2867 = !DILocation(line: 915, column: 20, scope: !2851)
!2868 = !DILocation(line: 918, column: 22, scope: !2869)
!2869 = distinct !DILexicalBlock(scope: !2866, file: !66, line: 916, column: 13)
!2870 = !DILocation(line: 917, column: 15, scope: !2869)
!2871 = !DILocation(line: 920, column: 13, scope: !2869)
!2872 = !DILocation(line: 921, column: 11, scope: !2784)
!2873 = !DILocation(line: 922, column: 9, scope: !2784)
!2874 = !DILocation(line: 923, column: 9, scope: !2784)
!2875 = !DILocation(line: 925, column: 11, scope: !2784)
!2876 = distinct !{!2876, !2774, !2877}
!2877 = !DILocation(line: 927, column: 5, scope: !2726)
!2878 = !DILocation(line: 930, column: 7, scope: !2879)
!2879 = distinct !DILexicalBlock(scope: !2726, file: !66, line: 930, column: 7)
!2880 = !DILocation(line: 930, column: 15, scope: !2879)
!2881 = !DILocation(line: 930, column: 18, scope: !2879)
!2882 = !DILocation(line: 930, column: 7, scope: !2726)
!2883 = !DILocation(line: 931, column: 5, scope: !2879)
!2884 = !DILocation(line: 933, column: 7, scope: !2885)
!2885 = distinct !DILexicalBlock(scope: !2726, file: !66, line: 933, column: 7)
!2886 = !DILocation(line: 933, column: 15, scope: !2885)
!2887 = !DILocation(line: 933, column: 18, scope: !2885)
!2888 = !DILocation(line: 933, column: 7, scope: !2726)
!2889 = !DILocation(line: 934, column: 5, scope: !2885)
!2890 = !DILocation(line: 937, column: 7, scope: !2891)
!2891 = distinct !DILexicalBlock(scope: !2726, file: !66, line: 937, column: 7)
!2892 = !DILocation(line: 937, column: 7, scope: !2726)
!2893 = !DILocalVariable(name: "st", scope: !2894, file: !66, line: 939, type: !270)
!2894 = distinct !DILexicalBlock(scope: !2891, file: !66, line: 938, column: 5)
!2895 = !DILocation(line: 939, column: 19, scope: !2894)
!2896 = !DILocalVariable(name: "stat_success", scope: !2894, file: !66, line: 940, type: !142)
!2897 = !DILocation(line: 940, column: 12, scope: !2894)
!2898 = !DILocation(line: 940, column: 33, scope: !2894)
!2899 = !DILocation(line: 940, column: 27, scope: !2894)
!2900 = !DILocation(line: 940, column: 56, scope: !2894)
!2901 = !DILocation(line: 941, column: 13, scope: !2902)
!2902 = distinct !DILexicalBlock(scope: !2894, file: !66, line: 941, column: 11)
!2903 = !DILocation(line: 941, column: 31, scope: !2902)
!2904 = !DILocation(line: 941, column: 36, scope: !2902)
!2905 = !DILocation(line: 941, column: 11, scope: !2894)
!2906 = !DILocation(line: 942, column: 9, scope: !2902)
!2907 = !DILocation(line: 944, column: 11, scope: !2908)
!2908 = distinct !DILexicalBlock(scope: !2894, file: !66, line: 944, column: 11)
!2909 = !DILocation(line: 944, column: 24, scope: !2908)
!2910 = !DILocation(line: 944, column: 29, scope: !2908)
!2911 = !{!2912, !2633, i64 24}
!2912 = !{!"stat", !2913, i64 0, !2913, i64 8, !2913, i64 16, !2633, i64 24, !2633, i64 28, !2633, i64 32, !2633, i64 36, !2913, i64 40, !2913, i64 48, !2913, i64 56, !2913, i64 64, !2914, i64 72, !2914, i64 88, !2914, i64 104, !2634, i64 120}
!2913 = !{!"long", !2634, i64 0}
!2914 = !{!"timespec", !2913, i64 0, !2913, i64 8}
!2915 = !DILocation(line: 944, column: 11, scope: !2894)
!2916 = !DILocation(line: 945, column: 9, scope: !2908)
!2917 = !DILocation(line: 947, column: 5, scope: !2894)
!2918 = !DILocation(line: 949, column: 20, scope: !2726)
!2919 = !DILocation(line: 950, column: 36, scope: !2726)
!2920 = !DILocation(line: 951, column: 36, scope: !2726)
!2921 = !DILocation(line: 950, column: 22, scope: !2726)
!2922 = !DILocation(line: 949, column: 5, scope: !2726)
!2923 = !DILocation(line: 949, column: 17, scope: !2726)
!2924 = !{!2810, !2634, i64 0}
!2925 = !DILocation(line: 953, column: 29, scope: !2726)
!2926 = !DILocation(line: 953, column: 3, scope: !2726)
!2927 = !DILocation(line: 955, column: 9, scope: !2928)
!2928 = distinct !DILexicalBlock(scope: !2726, file: !66, line: 955, column: 7)
!2929 = !DILocation(line: 955, column: 35, scope: !2928)
!2930 = !DILocation(line: 955, column: 41, scope: !2928)
!2931 = !DILocation(line: 955, column: 62, scope: !2928)
!2932 = !DILocation(line: 955, column: 65, scope: !2928)
!2933 = !DILocation(line: 955, column: 7, scope: !2726)
!2934 = !DILocation(line: 956, column: 5, scope: !2928)
!2935 = !DILocation(line: 959, column: 7, scope: !2936)
!2936 = distinct !DILexicalBlock(scope: !2726, file: !66, line: 959, column: 7)
!2937 = !DILocation(line: 959, column: 16, scope: !2936)
!2938 = !DILocation(line: 959, column: 45, scope: !2936)
!2939 = !DILocation(line: 959, column: 35, scope: !2936)
!2940 = !DILocation(line: 959, column: 19, scope: !2936)
!2941 = !DILocation(line: 959, column: 56, scope: !2936)
!2942 = !DILocation(line: 959, column: 7, scope: !2726)
!2943 = !DILocation(line: 960, column: 5, scope: !2936)
!2944 = !DILocation(line: 964, column: 13, scope: !2726)
!2945 = !DILocation(line: 964, column: 20, scope: !2726)
!2946 = !DILocation(line: 964, column: 18, scope: !2726)
!2947 = !DILocation(line: 964, column: 11, scope: !2726)
!2948 = !DILocation(line: 965, column: 10, scope: !2726)
!2949 = !DILocation(line: 965, column: 17, scope: !2726)
!2950 = !DILocation(line: 965, column: 15, scope: !2726)
!2951 = !DILocation(line: 965, column: 8, scope: !2726)
!2952 = !DILocation(line: 967, column: 7, scope: !2953)
!2953 = distinct !DILexicalBlock(scope: !2726, file: !66, line: 967, column: 7)
!2954 = !DILocation(line: 967, column: 21, scope: !2953)
!2955 = !DILocation(line: 967, column: 29, scope: !2953)
!2956 = !DILocation(line: 967, column: 32, scope: !2953)
!2957 = !DILocation(line: 967, column: 18, scope: !2953)
!2958 = !DILocation(line: 967, column: 15, scope: !2953)
!2959 = !DILocation(line: 967, column: 7, scope: !2726)
!2960 = !DILocation(line: 969, column: 11, scope: !2961)
!2961 = distinct !DILexicalBlock(scope: !2962, file: !66, line: 969, column: 11)
!2962 = distinct !DILexicalBlock(scope: !2953, file: !66, line: 968, column: 5)
!2963 = !DILocation(line: 969, column: 19, scope: !2961)
!2964 = !DILocation(line: 969, column: 11, scope: !2962)
!2965 = !DILocation(line: 970, column: 22, scope: !2961)
!2966 = !DILocation(line: 970, column: 9, scope: !2961)
!2967 = !DILocation(line: 972, column: 22, scope: !2961)
!2968 = !DILocation(line: 973, column: 16, scope: !2961)
!2969 = !DILocation(line: 972, column: 9, scope: !2961)
!2970 = !DILocation(line: 974, column: 7, scope: !2962)
!2971 = !DILocation(line: 977, column: 7, scope: !2972)
!2972 = distinct !DILexicalBlock(scope: !2726, file: !66, line: 977, column: 7)
!2973 = !DILocation(line: 977, column: 7, scope: !2726)
!2974 = !DILocation(line: 979, column: 11, scope: !2975)
!2975 = distinct !DILexicalBlock(scope: !2976, file: !66, line: 979, column: 11)
!2976 = distinct !DILexicalBlock(scope: !2972, file: !66, line: 978, column: 5)
!2977 = !DILocation(line: 979, column: 11, scope: !2976)
!2978 = !DILocation(line: 980, column: 9, scope: !2975)
!2979 = !DILocation(line: 983, column: 15, scope: !2980)
!2980 = distinct !DILexicalBlock(scope: !2976, file: !66, line: 983, column: 11)
!2981 = !DILocation(line: 983, column: 13, scope: !2980)
!2982 = !DILocation(line: 983, column: 11, scope: !2976)
!2983 = !DILocation(line: 985, column: 24, scope: !2984)
!2984 = distinct !DILexicalBlock(scope: !2980, file: !66, line: 984, column: 9)
!2985 = !DILocation(line: 985, column: 47, scope: !2984)
!2986 = !DILocation(line: 985, column: 11, scope: !2984)
!2987 = !DILocation(line: 986, column: 11, scope: !2984)
!2988 = !DILocation(line: 988, column: 5, scope: !2976)
!2989 = !DILocation(line: 989, column: 15, scope: !2990)
!2990 = distinct !DILexicalBlock(scope: !2972, file: !66, line: 989, column: 12)
!2991 = !DILocation(line: 989, column: 23, scope: !2990)
!2992 = !DILocation(line: 989, column: 26, scope: !2990)
!2993 = !DILocation(line: 989, column: 12, scope: !2972)
!2994 = !DILocation(line: 991, column: 16, scope: !2995)
!2995 = distinct !DILexicalBlock(scope: !2996, file: !66, line: 991, column: 11)
!2996 = distinct !DILexicalBlock(scope: !2990, file: !66, line: 990, column: 5)
!2997 = !DILocation(line: 991, column: 13, scope: !2995)
!2998 = !DILocation(line: 991, column: 24, scope: !2995)
!2999 = !DILocation(line: 991, column: 53, scope: !2995)
!3000 = !DILocation(line: 991, column: 58, scope: !2995)
!3001 = !DILocation(line: 991, column: 66, scope: !2995)
!3002 = !DILocation(line: 991, column: 27, scope: !2995)
!3003 = !DILocation(line: 991, column: 11, scope: !2996)
!3004 = !DILocation(line: 992, column: 28, scope: !2995)
!3005 = !DILocation(line: 992, column: 33, scope: !2995)
!3006 = !DILocation(line: 992, column: 26, scope: !2995)
!3007 = !DILocation(line: 992, column: 9, scope: !2995)
!3008 = !DILocation(line: 993, column: 20, scope: !3009)
!3009 = distinct !DILexicalBlock(scope: !2995, file: !66, line: 993, column: 16)
!3010 = !DILocation(line: 993, column: 18, scope: !3009)
!3011 = !DILocation(line: 993, column: 16, scope: !2995)
!3012 = !DILocation(line: 994, column: 9, scope: !3009)
!3013 = !DILocation(line: 996, column: 5, scope: !2996)
!3014 = !DILocation(line: 998, column: 7, scope: !3015)
!3015 = distinct !DILexicalBlock(scope: !2726, file: !66, line: 998, column: 7)
!3016 = !DILocation(line: 998, column: 7, scope: !2726)
!3017 = !DILocalVariable(name: "change", scope: !3018, file: !66, line: 1000, type: !197)
!3018 = distinct !DILexicalBlock(scope: !3015, file: !66, line: 999, column: 5)
!3019 = !DILocation(line: 1000, column: 27, scope: !3018)
!3020 = !DILocation(line: 1000, column: 50, scope: !3018)
!3021 = !DILocation(line: 1000, column: 36, scope: !3018)
!3022 = !DILocation(line: 1001, column: 12, scope: !3023)
!3023 = distinct !DILexicalBlock(scope: !3018, file: !66, line: 1001, column: 11)
!3024 = !DILocation(line: 1001, column: 11, scope: !3018)
!3025 = !DILocation(line: 1002, column: 9, scope: !3023)
!3026 = !DILocation(line: 1003, column: 40, scope: !3018)
!3027 = !DILocation(line: 1003, column: 14, scope: !3018)
!3028 = !DILocation(line: 1003, column: 12, scope: !3018)
!3029 = !DILocation(line: 1004, column: 43, scope: !3018)
!3030 = !DILocation(line: 1004, column: 18, scope: !3018)
!3031 = !DILocation(line: 1004, column: 16, scope: !3018)
!3032 = !DILocation(line: 1005, column: 13, scope: !3018)
!3033 = !DILocation(line: 1005, column: 7, scope: !3018)
!3034 = !DILocation(line: 1006, column: 5, scope: !3018)
!3035 = !DILocation(line: 1008, column: 7, scope: !3036)
!3036 = distinct !DILexicalBlock(scope: !2726, file: !66, line: 1008, column: 7)
!3037 = !DILocation(line: 1008, column: 31, scope: !3036)
!3038 = !DILocation(line: 1008, column: 35, scope: !3036)
!3039 = !DILocation(line: 1008, column: 7, scope: !2726)
!3040 = !DILocation(line: 1009, column: 18, scope: !3036)
!3041 = !DILocation(line: 1009, column: 5, scope: !3036)
!3042 = !DILocation(line: 1012, column: 7, scope: !3043)
!3043 = distinct !DILexicalBlock(scope: !2726, file: !66, line: 1012, column: 7)
!3044 = !DILocation(line: 1012, column: 27, scope: !3043)
!3045 = !DILocation(line: 1012, column: 32, scope: !3043)
!3046 = !DILocation(line: 1012, column: 7, scope: !2726)
!3047 = !DILocation(line: 1014, column: 20, scope: !3048)
!3048 = distinct !DILexicalBlock(scope: !3043, file: !66, line: 1013, column: 5)
!3049 = !DILocation(line: 1014, column: 7, scope: !3048)
!3050 = !DILocation(line: 1016, column: 7, scope: !3048)
!3051 = !DILocation(line: 1019, column: 7, scope: !3052)
!3052 = distinct !DILexicalBlock(scope: !2726, file: !66, line: 1019, column: 7)
!3053 = !DILocation(line: 1019, column: 27, scope: !3052)
!3054 = !DILocation(line: 1019, column: 30, scope: !3052)
!3055 = !DILocation(line: 1019, column: 7, scope: !2726)
!3056 = !DILocation(line: 1021, column: 20, scope: !3057)
!3057 = distinct !DILexicalBlock(scope: !3052, file: !66, line: 1020, column: 5)
!3058 = !DILocation(line: 1021, column: 7, scope: !3057)
!3059 = !DILocation(line: 1023, column: 7, scope: !3057)
!3060 = !DILocation(line: 1026, column: 7, scope: !3061)
!3061 = distinct !DILexicalBlock(scope: !2726, file: !66, line: 1026, column: 7)
!3062 = !DILocation(line: 1026, column: 27, scope: !3061)
!3063 = !DILocation(line: 1026, column: 42, scope: !3061)
!3064 = !DILocation(line: 1026, column: 30, scope: !3061)
!3065 = !DILocation(line: 1026, column: 7, scope: !2726)
!3066 = !DILocation(line: 1027, column: 18, scope: !3061)
!3067 = !DILocation(line: 1027, column: 5, scope: !3061)
!3068 = !DILocation(line: 1030, column: 3, scope: !2726)
!3069 = !DILocation(line: 1032, column: 7, scope: !3070)
!3070 = distinct !DILexicalBlock(scope: !2726, file: !66, line: 1032, column: 7)
!3071 = !DILocation(line: 1032, column: 7, scope: !2726)
!3072 = !DILocation(line: 1033, column: 41, scope: !3070)
!3073 = !DILocation(line: 1033, column: 50, scope: !3070)
!3074 = !DILocation(line: 1033, column: 69, scope: !3070)
!3075 = !DILocation(line: 1033, column: 19, scope: !3070)
!3076 = !DILocation(line: 1033, column: 17, scope: !3070)
!3077 = !DILocation(line: 1033, column: 5, scope: !3070)
!3078 = !DILocation(line: 1038, column: 7, scope: !3079)
!3079 = distinct !DILexicalBlock(scope: !3070, file: !66, line: 1035, column: 5)
!3080 = !DILocation(line: 1040, column: 12, scope: !3081)
!3081 = distinct !DILexicalBlock(scope: !3079, file: !66, line: 1040, column: 11)
!3082 = !DILocation(line: 1040, column: 11, scope: !3079)
!3083 = !DILocation(line: 1042, column: 18, scope: !3084)
!3084 = distinct !DILexicalBlock(scope: !3085, file: !66, line: 1042, column: 15)
!3085 = distinct !DILexicalBlock(scope: !3081, file: !66, line: 1041, column: 9)
!3086 = !DILocation(line: 1042, column: 15, scope: !3085)
!3087 = !DILocation(line: 1043, column: 50, scope: !3084)
!3088 = !DILocation(line: 1043, column: 59, scope: !3084)
!3089 = !DILocation(line: 1043, column: 20, scope: !3084)
!3090 = !DILocation(line: 1044, column: 42, scope: !3084)
!3091 = !DILocation(line: 1044, column: 51, scope: !3084)
!3092 = !DILocation(line: 1044, column: 20, scope: !3084)
!3093 = !DILocation(line: 1045, column: 25, scope: !3084)
!3094 = !DILocation(line: 1045, column: 13, scope: !3084)
!3095 = !DILocation(line: 1046, column: 9, scope: !3085)
!3096 = !DILocalVariable(name: "i", scope: !3097, file: !66, line: 1049, type: !7)
!3097 = distinct !DILexicalBlock(scope: !3081, file: !66, line: 1048, column: 9)
!3098 = !DILocation(line: 1049, column: 15, scope: !3097)
!3099 = !DILocation(line: 1050, column: 11, scope: !3097)
!3100 = !DILocation(line: 1051, column: 18, scope: !3101)
!3101 = distinct !DILexicalBlock(scope: !3097, file: !66, line: 1051, column: 11)
!3102 = !DILocation(line: 1051, column: 16, scope: !3101)
!3103 = !DILocation(line: 1051, column: 23, scope: !3104)
!3104 = distinct !DILexicalBlock(scope: !3101, file: !66, line: 1051, column: 11)
!3105 = !DILocation(line: 1051, column: 27, scope: !3104)
!3106 = !DILocation(line: 1051, column: 25, scope: !3104)
!3107 = !DILocation(line: 1051, column: 11, scope: !3101)
!3108 = !DILocation(line: 1052, column: 40, scope: !3109)
!3109 = distinct !DILexicalBlock(scope: !3104, file: !66, line: 1052, column: 17)
!3110 = !DILocation(line: 1052, column: 45, scope: !3109)
!3111 = !DILocation(line: 1052, column: 49, scope: !3109)
!3112 = !DILocation(line: 1053, column: 40, scope: !3109)
!3113 = !DILocation(line: 1053, column: 42, scope: !3109)
!3114 = !DILocation(line: 1053, column: 47, scope: !3109)
!3115 = !DILocation(line: 1053, column: 50, scope: !3109)
!3116 = !DILocation(line: 0, scope: !3109)
!3117 = !DILocation(line: 1052, column: 19, scope: !3109)
!3118 = !DILocation(line: 1052, column: 17, scope: !3104)
!3119 = !DILocation(line: 1054, column: 27, scope: !3109)
!3120 = !DILocation(line: 1054, column: 15, scope: !3109)
!3121 = !DILocation(line: 1053, column: 67, scope: !3109)
!3122 = !DILocation(line: 1051, column: 37, scope: !3104)
!3123 = !DILocation(line: 1051, column: 11, scope: !3104)
!3124 = distinct !{!3124, !3107, !3125}
!3125 = !DILocation(line: 1054, column: 29, scope: !3101)
!3126 = !DILocation(line: 1058, column: 10, scope: !2726)
!3127 = !DILocation(line: 1058, column: 3, scope: !2726)
!3128 = distinct !DISubprogram(name: "cp_option_init", scope: !66, file: !66, line: 263, type: !216, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!3129 = !DILocalVariable(name: "x", arg: 1, scope: !3128, file: !66, line: 263, type: !131)
!3130 = !DILocation(line: 263, column: 36, scope: !3128)
!3131 = !DILocation(line: 265, column: 23, scope: !3128)
!3132 = !DILocation(line: 265, column: 3, scope: !3128)
!3133 = !DILocation(line: 266, column: 3, scope: !3128)
!3134 = !DILocation(line: 266, column: 6, scope: !3128)
!3135 = !DILocation(line: 266, column: 22, scope: !3128)
!3136 = !{!2810, !2740, i64 20}
!3137 = !DILocation(line: 267, column: 3, scope: !3128)
!3138 = !DILocation(line: 267, column: 6, scope: !3128)
!3139 = !DILocation(line: 267, column: 19, scope: !3128)
!3140 = !{!2810, !2634, i64 56}
!3141 = !DILocation(line: 268, column: 3, scope: !3128)
!3142 = !DILocation(line: 268, column: 6, scope: !3128)
!3143 = !DILocation(line: 268, column: 18, scope: !3128)
!3144 = !{!2810, !2634, i64 4}
!3145 = !DILocation(line: 269, column: 3, scope: !3128)
!3146 = !DILocation(line: 269, column: 6, scope: !3128)
!3147 = !DILocation(line: 269, column: 33, scope: !3128)
!3148 = !{!2810, !2740, i64 21}
!3149 = !DILocation(line: 270, column: 3, scope: !3128)
!3150 = !DILocation(line: 270, column: 6, scope: !3128)
!3151 = !DILocation(line: 270, column: 36, scope: !3128)
!3152 = !{!2810, !2740, i64 22}
!3153 = !DILocation(line: 271, column: 3, scope: !3128)
!3154 = !DILocation(line: 271, column: 6, scope: !3128)
!3155 = !DILocation(line: 271, column: 16, scope: !3128)
!3156 = !{!2810, !2740, i64 23}
!3157 = !DILocation(line: 272, column: 3, scope: !3128)
!3158 = !DILocation(line: 272, column: 6, scope: !3128)
!3159 = !DILocation(line: 272, column: 18, scope: !3128)
!3160 = !{!2810, !2634, i64 8}
!3161 = !DILocation(line: 273, column: 3, scope: !3128)
!3162 = !DILocation(line: 273, column: 6, scope: !3128)
!3163 = !DILocation(line: 273, column: 16, scope: !3128)
!3164 = !{!2810, !2740, i64 24}
!3165 = !DILocation(line: 274, column: 3, scope: !3128)
!3166 = !DILocation(line: 274, column: 6, scope: !3128)
!3167 = !DILocation(line: 274, column: 19, scope: !3128)
!3168 = !{!2810, !2740, i64 25}
!3169 = !DILocation(line: 275, column: 3, scope: !3128)
!3170 = !DILocation(line: 275, column: 6, scope: !3128)
!3171 = !DILocation(line: 275, column: 22, scope: !3128)
!3172 = !{!2810, !2740, i64 28}
!3173 = !DILocation(line: 276, column: 3, scope: !3128)
!3174 = !DILocation(line: 276, column: 6, scope: !3128)
!3175 = !DILocation(line: 276, column: 25, scope: !3128)
!3176 = !{!2810, !2740, i64 29}
!3177 = !DILocation(line: 277, column: 3, scope: !3128)
!3178 = !DILocation(line: 277, column: 6, scope: !3128)
!3179 = !DILocation(line: 277, column: 21, scope: !3128)
!3180 = !{!2810, !2740, i64 34}
!3181 = !DILocation(line: 278, column: 3, scope: !3128)
!3182 = !DILocation(line: 278, column: 6, scope: !3128)
!3183 = !DILocation(line: 278, column: 20, scope: !3128)
!3184 = !{!2810, !2740, i64 30}
!3185 = !DILocation(line: 279, column: 3, scope: !3128)
!3186 = !DILocation(line: 279, column: 6, scope: !3128)
!3187 = !DILocation(line: 279, column: 26, scope: !3128)
!3188 = !DILocation(line: 280, column: 3, scope: !3128)
!3189 = !DILocation(line: 280, column: 6, scope: !3128)
!3190 = !DILocation(line: 280, column: 32, scope: !3128)
!3191 = !{!2810, !2740, i64 32}
!3192 = !DILocation(line: 281, column: 3, scope: !3128)
!3193 = !DILocation(line: 281, column: 6, scope: !3128)
!3194 = !DILocation(line: 281, column: 24, scope: !3128)
!3195 = !{!2810, !2740, i64 41}
!3196 = !DILocation(line: 282, column: 3, scope: !3128)
!3197 = !DILocation(line: 282, column: 6, scope: !3128)
!3198 = !DILocation(line: 282, column: 25, scope: !3128)
!3199 = !{!2810, !2740, i64 35}
!3200 = !DILocation(line: 283, column: 3, scope: !3128)
!3201 = !DILocation(line: 283, column: 6, scope: !3128)
!3202 = !DILocation(line: 283, column: 23, scope: !3128)
!3203 = !{!2810, !2740, i64 36}
!3204 = !DILocation(line: 284, column: 3, scope: !3128)
!3205 = !DILocation(line: 284, column: 6, scope: !3128)
!3206 = !DILocation(line: 284, column: 29, scope: !3128)
!3207 = !{!2810, !2740, i64 40}
!3208 = !DILocation(line: 285, column: 3, scope: !3128)
!3209 = !DILocation(line: 285, column: 6, scope: !3128)
!3210 = !DILocation(line: 285, column: 16, scope: !3128)
!3211 = !{!2810, !2740, i64 42}
!3212 = !DILocation(line: 286, column: 3, scope: !3128)
!3213 = !DILocation(line: 286, column: 6, scope: !3128)
!3214 = !DILocation(line: 286, column: 18, scope: !3128)
!3215 = !{!2810, !2634, i64 12}
!3216 = !DILocation(line: 287, column: 3, scope: !3128)
!3217 = !DILocation(line: 287, column: 6, scope: !3128)
!3218 = !DILocation(line: 287, column: 20, scope: !3128)
!3219 = !{!2810, !2740, i64 44}
!3220 = !DILocation(line: 288, column: 3, scope: !3128)
!3221 = !DILocation(line: 288, column: 6, scope: !3128)
!3222 = !DILocation(line: 288, column: 18, scope: !3128)
!3223 = !DILocation(line: 293, column: 3, scope: !3128)
!3224 = !DILocation(line: 293, column: 6, scope: !3128)
!3225 = !DILocation(line: 293, column: 15, scope: !3128)
!3226 = !{!2810, !2740, i64 43}
!3227 = !DILocation(line: 294, column: 3, scope: !3128)
!3228 = !DILocation(line: 294, column: 6, scope: !3128)
!3229 = !DILocation(line: 294, column: 11, scope: !3128)
!3230 = !{!2810, !2633, i64 16}
!3231 = !DILocation(line: 295, column: 3, scope: !3128)
!3232 = !DILocation(line: 295, column: 6, scope: !3128)
!3233 = !DILocation(line: 295, column: 16, scope: !3128)
!3234 = !{!2810, !2740, i64 47}
!3235 = !DILocation(line: 297, column: 3, scope: !3128)
!3236 = !DILocation(line: 297, column: 6, scope: !3128)
!3237 = !DILocation(line: 297, column: 33, scope: !3128)
!3238 = !{!2810, !2740, i64 48}
!3239 = !DILocation(line: 298, column: 3, scope: !3128)
!3240 = !DILocation(line: 298, column: 6, scope: !3128)
!3241 = !DILocation(line: 298, column: 13, scope: !3128)
!3242 = !{!2810, !2740, i64 45}
!3243 = !DILocation(line: 299, column: 3, scope: !3128)
!3244 = !DILocation(line: 299, column: 6, scope: !3128)
!3245 = !DILocation(line: 299, column: 31, scope: !3128)
!3246 = !{!2810, !2740, i64 38}
!3247 = !DILocation(line: 300, column: 3, scope: !3128)
!3248 = !DILocation(line: 300, column: 6, scope: !3128)
!3249 = !DILocation(line: 300, column: 32, scope: !3128)
!3250 = !DILocation(line: 301, column: 3, scope: !3128)
!3251 = !DILocation(line: 301, column: 6, scope: !3128)
!3252 = !DILocation(line: 301, column: 27, scope: !3128)
!3253 = !DILocation(line: 302, column: 3, scope: !3128)
!3254 = !DILocation(line: 302, column: 6, scope: !3128)
!3255 = !DILocation(line: 302, column: 21, scope: !3128)
!3256 = !{!2810, !2740, i64 39}
!3257 = !DILocation(line: 303, column: 3, scope: !3128)
!3258 = !DILocation(line: 303, column: 6, scope: !3128)
!3259 = !DILocation(line: 303, column: 14, scope: !3128)
!3260 = !DILocation(line: 304, column: 3, scope: !3128)
!3261 = !DILocation(line: 304, column: 6, scope: !3128)
!3262 = !DILocation(line: 304, column: 16, scope: !3128)
!3263 = !{!2810, !2646, i64 64}
!3264 = !DILocation(line: 305, column: 3, scope: !3128)
!3265 = !DILocation(line: 305, column: 6, scope: !3128)
!3266 = !DILocation(line: 305, column: 15, scope: !3128)
!3267 = !{!2810, !2646, i64 72}
!3268 = !DILocation(line: 306, column: 1, scope: !3128)
!3269 = distinct !DISubprogram(name: "se_const", scope: !207, file: !207, line: 755, type: !218, scopeLine: 755, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!3270 = !DILocalVariable(name: "sctx", arg: 1, scope: !3269, file: !207, line: 755, type: !180)
!3271 = !DILocation(line: 755, column: 45, scope: !3269)
!3272 = !DILocation(line: 755, column: 69, scope: !3269)
!3273 = !DILocation(line: 755, column: 53, scope: !3269)
!3274 = distinct !DISubprogram(name: "target_directory_operand", scope: !66, file: !66, line: 398, type: !220, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!3275 = !DILocalVariable(name: "file", arg: 1, scope: !3274, file: !66, line: 398, type: !180)
!3276 = !DILocation(line: 398, column: 39, scope: !3274)
!3277 = !DILocalVariable(name: "b", scope: !3274, file: !66, line: 400, type: !180)
!3278 = !DILocation(line: 400, column: 15, scope: !3274)
!3279 = !DILocation(line: 400, column: 35, scope: !3274)
!3280 = !DILocation(line: 400, column: 19, scope: !3274)
!3281 = !DILocalVariable(name: "blen", scope: !3274, file: !66, line: 401, type: !55)
!3282 = !DILocation(line: 401, column: 10, scope: !3274)
!3283 = !DILocation(line: 401, column: 25, scope: !3274)
!3284 = !DILocation(line: 401, column: 17, scope: !3274)
!3285 = !{!2913, !2913, i64 0}
!3286 = !DILocalVariable(name: "looks_like_a_dir", scope: !3274, file: !66, line: 402, type: !142)
!3287 = !DILocation(line: 402, column: 8, scope: !3274)
!3288 = !DILocation(line: 402, column: 28, scope: !3274)
!3289 = !DILocation(line: 402, column: 33, scope: !3274)
!3290 = !DILocation(line: 402, column: 38, scope: !3274)
!3291 = !DILocation(line: 402, column: 41, scope: !3274)
!3292 = !{!2634, !2634, i64 0}
!3293 = !DILocalVariable(name: "st", scope: !3274, file: !66, line: 403, type: !270)
!3294 = !DILocation(line: 403, column: 15, scope: !3274)
!3295 = !DILocalVariable(name: "err", scope: !3274, file: !66, line: 404, type: !7)
!3296 = !DILocation(line: 404, column: 7, scope: !3274)
!3297 = !DILocation(line: 404, column: 20, scope: !3274)
!3298 = !DILocation(line: 404, column: 14, scope: !3274)
!3299 = !DILocation(line: 404, column: 31, scope: !3274)
!3300 = !DILocation(line: 404, column: 42, scope: !3274)
!3301 = !DILocalVariable(name: "is_a_dir", scope: !3274, file: !66, line: 405, type: !142)
!3302 = !DILocation(line: 405, column: 8, scope: !3274)
!3303 = !DILocation(line: 405, column: 20, scope: !3274)
!3304 = !DILocation(line: 405, column: 24, scope: !3274)
!3305 = !DILocation(line: 405, column: 27, scope: !3274)
!3306 = !DILocation(line: 0, scope: !3274)
!3307 = !DILocation(line: 406, column: 7, scope: !3308)
!3308 = distinct !DILexicalBlock(scope: !3274, file: !66, line: 406, column: 7)
!3309 = !DILocation(line: 406, column: 11, scope: !3308)
!3310 = !DILocation(line: 406, column: 14, scope: !3308)
!3311 = !DILocation(line: 406, column: 18, scope: !3308)
!3312 = !DILocation(line: 406, column: 7, scope: !3274)
!3313 = !DILocation(line: 407, column: 5, scope: !3308)
!3314 = !DILocation(line: 408, column: 7, scope: !3315)
!3315 = distinct !DILexicalBlock(scope: !3274, file: !66, line: 408, column: 7)
!3316 = !DILocation(line: 408, column: 18, scope: !3315)
!3317 = !DILocation(line: 408, column: 16, scope: !3315)
!3318 = !DILocation(line: 408, column: 7, scope: !3274)
!3319 = !DILocation(line: 409, column: 5, scope: !3315)
!3320 = !DILocation(line: 411, column: 10, scope: !3274)
!3321 = !DILocation(line: 411, column: 3, scope: !3274)
!3322 = distinct !DISubprogram(name: "extra_mode", scope: !66, file: !66, line: 166, type: !222, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!3323 = !DILocalVariable(name: "input", arg: 1, scope: !3322, file: !66, line: 166, type: !139)
!3324 = !DILocation(line: 166, column: 20, scope: !3322)
!3325 = !DILocalVariable(name: "mask", scope: !3322, file: !66, line: 168, type: !139)
!3326 = !DILocation(line: 168, column: 10, scope: !3322)
!3327 = !DILocation(line: 169, column: 14, scope: !3322)
!3328 = !DILocation(line: 169, column: 24, scope: !3322)
!3329 = !DILocation(line: 169, column: 22, scope: !3322)
!3330 = !DILocation(line: 169, column: 20, scope: !3322)
!3331 = !DILocation(line: 169, column: 11, scope: !3322)
!3332 = !DILocation(line: 169, column: 10, scope: !3322)
!3333 = !DILocation(line: 169, column: 3, scope: !3322)
!3334 = distinct !DISubprogram(name: "get_ids", scope: !66, file: !66, line: 576, type: !200, scopeLine: 577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!3335 = !DILocalVariable(name: "pw", scope: !3334, file: !66, line: 578, type: !224)
!3336 = !DILocation(line: 578, column: 18, scope: !3334)
!3337 = !DILocalVariable(name: "gr", scope: !3334, file: !66, line: 579, type: !235)
!3338 = !DILocation(line: 579, column: 17, scope: !3334)
!3339 = !DILocation(line: 581, column: 7, scope: !3340)
!3340 = distinct !DILexicalBlock(scope: !3334, file: !66, line: 581, column: 7)
!3341 = !DILocation(line: 581, column: 7, scope: !3334)
!3342 = !DILocation(line: 583, column: 22, scope: !3343)
!3343 = distinct !DILexicalBlock(scope: !3340, file: !66, line: 582, column: 5)
!3344 = !DILocation(line: 583, column: 12, scope: !3343)
!3345 = !DILocation(line: 583, column: 10, scope: !3343)
!3346 = !DILocation(line: 584, column: 11, scope: !3347)
!3347 = distinct !DILexicalBlock(scope: !3343, file: !66, line: 584, column: 11)
!3348 = !DILocation(line: 584, column: 14, scope: !3347)
!3349 = !DILocation(line: 584, column: 11, scope: !3343)
!3350 = !DILocalVariable(name: "tmp", scope: !3351, file: !66, line: 586, type: !57)
!3351 = distinct !DILexicalBlock(scope: !3347, file: !66, line: 585, column: 9)
!3352 = !DILocation(line: 586, column: 29, scope: !3351)
!3353 = !DILocation(line: 587, column: 25, scope: !3354)
!3354 = distinct !DILexicalBlock(scope: !3351, file: !66, line: 587, column: 15)
!3355 = !DILocation(line: 587, column: 15, scope: !3354)
!3356 = !DILocation(line: 587, column: 58, scope: !3354)
!3357 = !DILocation(line: 588, column: 15, scope: !3354)
!3358 = !DILocation(line: 588, column: 30, scope: !3354)
!3359 = !DILocation(line: 588, column: 28, scope: !3354)
!3360 = !DILocation(line: 587, column: 15, scope: !3351)
!3361 = !DILocation(line: 589, column: 13, scope: !3354)
!3362 = !DILocation(line: 591, column: 22, scope: !3351)
!3363 = !DILocation(line: 591, column: 20, scope: !3351)
!3364 = !DILocation(line: 592, column: 9, scope: !3351)
!3365 = !DILocation(line: 594, column: 20, scope: !3347)
!3366 = !DILocation(line: 594, column: 24, scope: !3347)
!3367 = !{!3368, !2633, i64 16}
!3368 = !{!"passwd", !2646, i64 0, !2646, i64 8, !2633, i64 16, !2633, i64 20, !2646, i64 24, !2646, i64 32, !2646, i64 40}
!3369 = !DILocation(line: 594, column: 18, scope: !3347)
!3370 = !DILocation(line: 595, column: 7, scope: !3343)
!3371 = !DILocation(line: 596, column: 5, scope: !3343)
!3372 = !DILocation(line: 598, column: 14, scope: !3340)
!3373 = !DILocation(line: 600, column: 7, scope: !3374)
!3374 = distinct !DILexicalBlock(scope: !3334, file: !66, line: 600, column: 7)
!3375 = !DILocation(line: 600, column: 7, scope: !3334)
!3376 = !DILocation(line: 602, column: 22, scope: !3377)
!3377 = distinct !DILexicalBlock(scope: !3374, file: !66, line: 601, column: 5)
!3378 = !DILocation(line: 602, column: 12, scope: !3377)
!3379 = !DILocation(line: 602, column: 10, scope: !3377)
!3380 = !DILocation(line: 603, column: 11, scope: !3381)
!3381 = distinct !DILexicalBlock(scope: !3377, file: !66, line: 603, column: 11)
!3382 = !DILocation(line: 603, column: 14, scope: !3381)
!3383 = !DILocation(line: 603, column: 11, scope: !3377)
!3384 = !DILocalVariable(name: "tmp", scope: !3385, file: !66, line: 605, type: !57)
!3385 = distinct !DILexicalBlock(scope: !3381, file: !66, line: 604, column: 9)
!3386 = !DILocation(line: 605, column: 29, scope: !3385)
!3387 = !DILocation(line: 606, column: 25, scope: !3388)
!3388 = distinct !DILexicalBlock(scope: !3385, file: !66, line: 606, column: 15)
!3389 = !DILocation(line: 606, column: 15, scope: !3388)
!3390 = !DILocation(line: 606, column: 58, scope: !3388)
!3391 = !DILocation(line: 607, column: 15, scope: !3388)
!3392 = !DILocation(line: 607, column: 30, scope: !3388)
!3393 = !DILocation(line: 607, column: 28, scope: !3388)
!3394 = !DILocation(line: 606, column: 15, scope: !3385)
!3395 = !DILocation(line: 608, column: 13, scope: !3388)
!3396 = !DILocation(line: 610, column: 22, scope: !3385)
!3397 = !DILocation(line: 610, column: 20, scope: !3385)
!3398 = !DILocation(line: 611, column: 9, scope: !3385)
!3399 = !DILocation(line: 613, column: 20, scope: !3381)
!3400 = !DILocation(line: 613, column: 24, scope: !3381)
!3401 = !{!3402, !2633, i64 16}
!3402 = !{!"group", !2646, i64 0, !2646, i64 8, !2633, i64 16, !2646, i64 24}
!3403 = !DILocation(line: 613, column: 18, scope: !3381)
!3404 = !DILocation(line: 614, column: 7, scope: !3377)
!3405 = !DILocation(line: 615, column: 5, scope: !3377)
!3406 = !DILocation(line: 617, column: 14, scope: !3374)
!3407 = !DILocation(line: 618, column: 1, scope: !3334)
!3408 = distinct !DISubprogram(name: "process_dir", scope: !66, file: !66, line: 443, type: !243, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!3409 = !DILocalVariable(name: "dir", arg: 1, scope: !3408, file: !66, line: 443, type: !9)
!3410 = !DILocation(line: 443, column: 20, scope: !3408)
!3411 = !DILocalVariable(name: "wd", arg: 2, scope: !3408, file: !66, line: 443, type: !245)
!3412 = !DILocation(line: 443, column: 40, scope: !3408)
!3413 = !DILocalVariable(name: "options", arg: 3, scope: !3408, file: !66, line: 443, type: !53)
!3414 = !DILocation(line: 443, column: 50, scope: !3408)
!3415 = !DILocalVariable(name: "x", scope: !3408, file: !66, line: 445, type: !246)
!3416 = !DILocation(line: 445, column: 28, scope: !3408)
!3417 = !DILocation(line: 445, column: 32, scope: !3408)
!3418 = !DILocalVariable(name: "ret", scope: !3408, file: !66, line: 447, type: !7)
!3419 = !DILocation(line: 447, column: 7, scope: !3408)
!3420 = !DILocation(line: 447, column: 32, scope: !3408)
!3421 = !DILocation(line: 447, column: 37, scope: !3408)
!3422 = !DILocation(line: 447, column: 56, scope: !3408)
!3423 = !DILocation(line: 448, column: 32, scope: !3408)
!3424 = !DILocation(line: 449, column: 32, scope: !3408)
!3425 = !DILocation(line: 449, column: 47, scope: !3408)
!3426 = !DILocation(line: 449, column: 57, scope: !3408)
!3427 = !DILocation(line: 447, column: 14, scope: !3408)
!3428 = !DILocation(line: 458, column: 7, scope: !3429)
!3429 = distinct !DILexicalBlock(scope: !3408, file: !66, line: 458, column: 7)
!3430 = !DILocation(line: 458, column: 11, scope: !3429)
!3431 = !DILocation(line: 458, column: 27, scope: !3429)
!3432 = !DILocation(line: 458, column: 30, scope: !3429)
!3433 = !DILocation(line: 458, column: 33, scope: !3429)
!3434 = !DILocation(line: 458, column: 7, scope: !3408)
!3435 = !DILocation(line: 460, column: 41, scope: !3436)
!3436 = distinct !DILexicalBlock(scope: !3437, file: !66, line: 460, column: 11)
!3437 = distinct !DILexicalBlock(scope: !3429, file: !66, line: 459, column: 5)
!3438 = !DILocation(line: 460, column: 25, scope: !3436)
!3439 = !DILocation(line: 460, column: 13, scope: !3436)
!3440 = !DILocation(line: 461, column: 11, scope: !3436)
!3441 = !DILocation(line: 461, column: 35, scope: !3436)
!3442 = !DILocation(line: 461, column: 16, scope: !3436)
!3443 = !DILocation(line: 460, column: 11, scope: !3437)
!3444 = !DILocation(line: 462, column: 19, scope: !3436)
!3445 = !DILocation(line: 462, column: 26, scope: !3436)
!3446 = !DILocation(line: 463, column: 16, scope: !3436)
!3447 = !DILocation(line: 462, column: 9, scope: !3436)
!3448 = !DILocation(line: 464, column: 5, scope: !3437)
!3449 = !DILocation(line: 466, column: 10, scope: !3408)
!3450 = !DILocation(line: 466, column: 3, scope: !3408)
!3451 = distinct !DISubprogram(name: "install_file_in_file_parents", scope: !66, file: !66, line: 765, type: !258, scopeLine: 767, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!3452 = !DILocalVariable(name: "from", arg: 1, scope: !3451, file: !66, line: 765, type: !180)
!3453 = !DILocation(line: 765, column: 43, scope: !3451)
!3454 = !DILocalVariable(name: "to", arg: 2, scope: !3451, file: !66, line: 765, type: !9)
!3455 = !DILocation(line: 765, column: 55, scope: !3451)
!3456 = !DILocalVariable(name: "x", arg: 3, scope: !3451, file: !66, line: 766, type: !246)
!3457 = !DILocation(line: 766, column: 56, scope: !3451)
!3458 = !DILocation(line: 768, column: 32, scope: !3451)
!3459 = !DILocation(line: 768, column: 38, scope: !3451)
!3460 = !DILocation(line: 768, column: 63, scope: !3451)
!3461 = !DILocation(line: 768, column: 11, scope: !3451)
!3462 = !DILocation(line: 769, column: 11, scope: !3451)
!3463 = !DILocation(line: 769, column: 36, scope: !3451)
!3464 = !DILocation(line: 769, column: 42, scope: !3451)
!3465 = !DILocation(line: 769, column: 46, scope: !3451)
!3466 = !DILocation(line: 769, column: 14, scope: !3451)
!3467 = !DILocation(line: 0, scope: !3451)
!3468 = !DILocation(line: 768, column: 3, scope: !3451)
!3469 = distinct !DISubprogram(name: "install_file_in_file", scope: !66, file: !66, line: 696, type: !262, scopeLine: 698, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!3470 = !DILocalVariable(name: "from", arg: 1, scope: !3469, file: !66, line: 696, type: !180)
!3471 = !DILocation(line: 696, column: 35, scope: !3469)
!3472 = !DILocalVariable(name: "to", arg: 2, scope: !3469, file: !66, line: 696, type: !180)
!3473 = !DILocation(line: 696, column: 53, scope: !3469)
!3474 = !DILocalVariable(name: "x", arg: 3, scope: !3469, file: !66, line: 697, type: !246)
!3475 = !DILocation(line: 697, column: 48, scope: !3469)
!3476 = !DILocalVariable(name: "from_sb", scope: !3469, file: !66, line: 699, type: !270)
!3477 = !DILocation(line: 699, column: 15, scope: !3469)
!3478 = !DILocation(line: 700, column: 7, scope: !3479)
!3479 = distinct !DILexicalBlock(scope: !3469, file: !66, line: 700, column: 7)
!3480 = !DILocation(line: 700, column: 10, scope: !3479)
!3481 = !DILocation(line: 700, column: 30, scope: !3479)
!3482 = !DILocation(line: 700, column: 39, scope: !3479)
!3483 = !DILocation(line: 700, column: 33, scope: !3479)
!3484 = !DILocation(line: 700, column: 55, scope: !3479)
!3485 = !DILocation(line: 700, column: 7, scope: !3469)
!3486 = !DILocation(line: 702, column: 17, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !3479, file: !66, line: 701, column: 5)
!3488 = !DILocation(line: 702, column: 24, scope: !3487)
!3489 = !DILocation(line: 702, column: 45, scope: !3487)
!3490 = !DILocation(line: 702, column: 7, scope: !3487)
!3491 = !DILocation(line: 703, column: 7, scope: !3487)
!3492 = !DILocation(line: 705, column: 20, scope: !3493)
!3493 = distinct !DILexicalBlock(scope: !3469, file: !66, line: 705, column: 7)
!3494 = !DILocation(line: 705, column: 26, scope: !3493)
!3495 = !DILocation(line: 705, column: 30, scope: !3493)
!3496 = !DILocation(line: 705, column: 9, scope: !3493)
!3497 = !DILocation(line: 705, column: 7, scope: !3469)
!3498 = !DILocation(line: 706, column: 5, scope: !3493)
!3499 = !DILocation(line: 707, column: 7, scope: !3500)
!3500 = distinct !DILexicalBlock(scope: !3469, file: !66, line: 707, column: 7)
!3501 = !DILocation(line: 707, column: 7, scope: !3469)
!3502 = !DILocation(line: 708, column: 18, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3500, file: !66, line: 708, column: 9)
!3504 = !DILocation(line: 708, column: 11, scope: !3503)
!3505 = !DILocation(line: 708, column: 9, scope: !3500)
!3506 = !DILocation(line: 710, column: 21, scope: !3507)
!3507 = distinct !DILexicalBlock(scope: !3508, file: !66, line: 710, column: 13)
!3508 = distinct !DILexicalBlock(scope: !3503, file: !66, line: 709, column: 7)
!3509 = !DILocation(line: 710, column: 13, scope: !3507)
!3510 = !DILocation(line: 710, column: 25, scope: !3507)
!3511 = !DILocation(line: 710, column: 13, scope: !3508)
!3512 = !DILocation(line: 711, column: 11, scope: !3507)
!3513 = !DILocation(line: 712, column: 9, scope: !3508)
!3514 = !DILocation(line: 708, column: 20, scope: !3503)
!3515 = !DILocation(line: 714, column: 7, scope: !3516)
!3516 = distinct !DILexicalBlock(scope: !3469, file: !66, line: 714, column: 7)
!3517 = !DILocation(line: 714, column: 10, scope: !3516)
!3518 = !DILocation(line: 714, column: 30, scope: !3516)
!3519 = !DILocation(line: 714, column: 34, scope: !3516)
!3520 = !DILocation(line: 714, column: 46, scope: !3516)
!3521 = !DILocation(line: 714, column: 51, scope: !3516)
!3522 = !DILocation(line: 715, column: 7, scope: !3516)
!3523 = !DILocation(line: 715, column: 41, scope: !3516)
!3524 = !DILocation(line: 715, column: 12, scope: !3516)
!3525 = !DILocation(line: 714, column: 7, scope: !3469)
!3526 = !DILocation(line: 716, column: 5, scope: !3516)
!3527 = !DILocation(line: 717, column: 29, scope: !3469)
!3528 = !DILocation(line: 717, column: 10, scope: !3469)
!3529 = !DILocation(line: 717, column: 3, scope: !3469)
!3530 = !DILocation(line: 718, column: 1, scope: !3469)
!3531 = distinct !DISubprogram(name: "install_file_in_dir", scope: !66, file: !66, line: 777, type: !306, scopeLine: 779, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!3532 = !DILocalVariable(name: "from", arg: 1, scope: !3531, file: !66, line: 777, type: !180)
!3533 = !DILocation(line: 777, column: 34, scope: !3531)
!3534 = !DILocalVariable(name: "to_dir", arg: 2, scope: !3531, file: !66, line: 777, type: !180)
!3535 = !DILocation(line: 777, column: 52, scope: !3531)
!3536 = !DILocalVariable(name: "x", arg: 3, scope: !3531, file: !66, line: 778, type: !246)
!3537 = !DILocation(line: 778, column: 47, scope: !3531)
!3538 = !DILocalVariable(name: "mkdir_and_install", arg: 4, scope: !3531, file: !66, line: 778, type: !142)
!3539 = !DILocation(line: 778, column: 55, scope: !3531)
!3540 = !DILocalVariable(name: "from_base", scope: !3531, file: !66, line: 780, type: !180)
!3541 = !DILocation(line: 780, column: 15, scope: !3531)
!3542 = !DILocation(line: 780, column: 43, scope: !3531)
!3543 = !DILocation(line: 780, column: 27, scope: !3531)
!3544 = !DILocalVariable(name: "to", scope: !3531, file: !66, line: 781, type: !9)
!3545 = !DILocation(line: 781, column: 9, scope: !3531)
!3546 = !DILocation(line: 781, column: 32, scope: !3531)
!3547 = !DILocation(line: 781, column: 40, scope: !3531)
!3548 = !DILocation(line: 781, column: 14, scope: !3531)
!3549 = !DILocalVariable(name: "ret", scope: !3531, file: !66, line: 782, type: !142)
!3550 = !DILocation(line: 782, column: 8, scope: !3531)
!3551 = !DILocation(line: 784, column: 7, scope: !3552)
!3552 = distinct !DILexicalBlock(scope: !3531, file: !66, line: 784, column: 7)
!3553 = !DILocation(line: 784, column: 7, scope: !3531)
!3554 = !DILocation(line: 785, column: 32, scope: !3552)
!3555 = !DILocation(line: 785, column: 38, scope: !3552)
!3556 = !DILocation(line: 785, column: 63, scope: !3552)
!3557 = !DILocation(line: 785, column: 11, scope: !3552)
!3558 = !DILocation(line: 785, column: 9, scope: !3552)
!3559 = !DILocation(line: 785, column: 5, scope: !3552)
!3560 = !DILocation(line: 787, column: 9, scope: !3531)
!3561 = !DILocation(line: 787, column: 13, scope: !3531)
!3562 = !DILocation(line: 787, column: 38, scope: !3531)
!3563 = !DILocation(line: 787, column: 44, scope: !3531)
!3564 = !DILocation(line: 787, column: 48, scope: !3531)
!3565 = !DILocation(line: 787, column: 16, scope: !3531)
!3566 = !DILocation(line: 0, scope: !3531)
!3567 = !DILocation(line: 787, column: 7, scope: !3531)
!3568 = !DILocation(line: 788, column: 9, scope: !3531)
!3569 = !DILocation(line: 788, column: 3, scope: !3531)
!3570 = !DILocation(line: 789, column: 10, scope: !3531)
!3571 = !DILocation(line: 789, column: 3, scope: !3531)
!3572 = distinct !DISubprogram(name: "mkancesdirs_safe_wd", scope: !66, file: !66, line: 725, type: !260, scopeLine: 727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!3573 = !DILocalVariable(name: "from", arg: 1, scope: !3572, file: !66, line: 725, type: !180)
!3574 = !DILocation(line: 725, column: 34, scope: !3572)
!3575 = !DILocalVariable(name: "to", arg: 2, scope: !3572, file: !66, line: 725, type: !9)
!3576 = !DILocation(line: 725, column: 46, scope: !3572)
!3577 = !DILocalVariable(name: "x", arg: 3, scope: !3572, file: !66, line: 725, type: !131)
!3578 = !DILocation(line: 725, column: 69, scope: !3572)
!3579 = !DILocalVariable(name: "save_always", arg: 4, scope: !3572, file: !66, line: 726, type: !142)
!3580 = !DILocation(line: 726, column: 27, scope: !3572)
!3581 = !DILocalVariable(name: "save_working_directory", scope: !3572, file: !66, line: 728, type: !142)
!3582 = !DILocation(line: 728, column: 8, scope: !3572)
!3583 = !DILocation(line: 729, column: 5, scope: !3572)
!3584 = !DILocation(line: 730, column: 5, scope: !3572)
!3585 = !DILocation(line: 730, column: 11, scope: !3572)
!3586 = !DILocation(line: 730, column: 40, scope: !3572)
!3587 = !DILocation(line: 730, column: 43, scope: !3572)
!3588 = !DILocation(line: 0, scope: !3572)
!3589 = !DILocation(line: 730, column: 8, scope: !3572)
!3590 = !DILocalVariable(name: "status", scope: !3572, file: !66, line: 731, type: !7)
!3591 = !DILocation(line: 731, column: 7, scope: !3572)
!3592 = !DILocalVariable(name: "wd", scope: !3572, file: !66, line: 733, type: !102)
!3593 = !DILocation(line: 733, column: 17, scope: !3572)
!3594 = !DILocation(line: 734, column: 3, scope: !3572)
!3595 = !DILocation(line: 735, column: 9, scope: !3596)
!3596 = distinct !DILexicalBlock(scope: !3572, file: !66, line: 735, column: 7)
!3597 = !DILocation(line: 735, column: 7, scope: !3572)
!3598 = !DILocation(line: 736, column: 5, scope: !3596)
!3599 = !DILocation(line: 738, column: 20, scope: !3600)
!3600 = distinct !DILexicalBlock(scope: !3572, file: !66, line: 738, column: 7)
!3601 = !DILocation(line: 738, column: 44, scope: !3600)
!3602 = !DILocation(line: 738, column: 7, scope: !3600)
!3603 = !DILocation(line: 738, column: 47, scope: !3600)
!3604 = !DILocation(line: 738, column: 7, scope: !3572)
!3605 = !DILocation(line: 740, column: 17, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !3600, file: !66, line: 739, column: 5)
!3607 = !DILocation(line: 740, column: 24, scope: !3606)
!3608 = !DILocation(line: 740, column: 57, scope: !3606)
!3609 = !DILocation(line: 740, column: 7, scope: !3606)
!3610 = !DILocation(line: 741, column: 14, scope: !3606)
!3611 = !DILocation(line: 742, column: 5, scope: !3606)
!3612 = !DILocation(line: 744, column: 7, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3572, file: !66, line: 744, column: 7)
!3614 = !DILocation(line: 744, column: 7, scope: !3572)
!3615 = !DILocalVariable(name: "restore_result", scope: !3616, file: !66, line: 746, type: !7)
!3616 = distinct !DILexicalBlock(scope: !3613, file: !66, line: 745, column: 5)
!3617 = !DILocation(line: 746, column: 11, scope: !3616)
!3618 = !DILocation(line: 746, column: 49, scope: !3616)
!3619 = !DILocation(line: 746, column: 28, scope: !3616)
!3620 = !DILocalVariable(name: "restore_errno", scope: !3616, file: !66, line: 747, type: !7)
!3621 = !DILocation(line: 747, column: 11, scope: !3616)
!3622 = !DILocation(line: 747, column: 27, scope: !3616)
!3623 = !DILocation(line: 748, column: 7, scope: !3616)
!3624 = !DILocation(line: 749, column: 26, scope: !3625)
!3625 = distinct !DILexicalBlock(scope: !3616, file: !66, line: 749, column: 11)
!3626 = !DILocation(line: 749, column: 24, scope: !3625)
!3627 = !DILocation(line: 749, column: 11, scope: !3616)
!3628 = !DILocation(line: 750, column: 9, scope: !3625)
!3629 = !DILocation(line: 751, column: 11, scope: !3630)
!3630 = distinct !DILexicalBlock(scope: !3616, file: !66, line: 751, column: 11)
!3631 = !DILocation(line: 751, column: 26, scope: !3630)
!3632 = !DILocation(line: 751, column: 30, scope: !3630)
!3633 = !DILocation(line: 751, column: 33, scope: !3630)
!3634 = !DILocation(line: 751, column: 40, scope: !3630)
!3635 = !DILocation(line: 751, column: 11, scope: !3616)
!3636 = !DILocation(line: 753, column: 21, scope: !3637)
!3637 = distinct !DILexicalBlock(scope: !3630, file: !66, line: 752, column: 9)
!3638 = !DILocation(line: 753, column: 36, scope: !3637)
!3639 = !DILocation(line: 754, column: 18, scope: !3637)
!3640 = !DILocation(line: 753, column: 11, scope: !3637)
!3641 = !DILocation(line: 755, column: 11, scope: !3637)
!3642 = !DILocation(line: 757, column: 5, scope: !3616)
!3643 = !DILocation(line: 758, column: 10, scope: !3572)
!3644 = !DILocation(line: 758, column: 17, scope: !3572)
!3645 = !DILocation(line: 758, column: 3, scope: !3572)
!3646 = !DILocation(line: 759, column: 1, scope: !3572)
!3647 = distinct !DISubprogram(name: "make_ancestor", scope: !66, file: !66, line: 427, type: !248, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!3648 = !DILocalVariable(name: "dir", arg: 1, scope: !3647, file: !66, line: 427, type: !180)
!3649 = !DILocation(line: 427, column: 28, scope: !3647)
!3650 = !DILocalVariable(name: "component", arg: 2, scope: !3647, file: !66, line: 427, type: !180)
!3651 = !DILocation(line: 427, column: 45, scope: !3647)
!3652 = !DILocalVariable(name: "options", arg: 3, scope: !3647, file: !66, line: 427, type: !53)
!3653 = !DILocation(line: 427, column: 62, scope: !3647)
!3654 = !DILocalVariable(name: "x", scope: !3647, file: !66, line: 429, type: !246)
!3655 = !DILocation(line: 429, column: 28, scope: !3647)
!3656 = !DILocation(line: 429, column: 32, scope: !3647)
!3657 = !DILocation(line: 430, column: 7, scope: !3658)
!3658 = distinct !DILexicalBlock(scope: !3647, file: !66, line: 430, column: 7)
!3659 = !DILocation(line: 430, column: 10, scope: !3658)
!3660 = !DILocation(line: 430, column: 31, scope: !3658)
!3661 = !DILocation(line: 430, column: 46, scope: !3658)
!3662 = !DILocation(line: 430, column: 34, scope: !3658)
!3663 = !DILocation(line: 430, column: 66, scope: !3658)
!3664 = !DILocation(line: 431, column: 7, scope: !3658)
!3665 = !DILocation(line: 431, column: 31, scope: !3658)
!3666 = !DILocation(line: 431, column: 12, scope: !3658)
!3667 = !DILocation(line: 430, column: 7, scope: !3647)
!3668 = !DILocation(line: 432, column: 15, scope: !3658)
!3669 = !DILocation(line: 432, column: 22, scope: !3658)
!3670 = !DILocation(line: 433, column: 12, scope: !3658)
!3671 = !DILocation(line: 432, column: 5, scope: !3658)
!3672 = !DILocalVariable(name: "r", scope: !3647, file: !66, line: 435, type: !7)
!3673 = !DILocation(line: 435, column: 7, scope: !3647)
!3674 = !DILocation(line: 435, column: 18, scope: !3647)
!3675 = !DILocation(line: 435, column: 11, scope: !3647)
!3676 = !DILocation(line: 436, column: 7, scope: !3677)
!3677 = distinct !DILexicalBlock(scope: !3647, file: !66, line: 436, column: 7)
!3678 = !DILocation(line: 436, column: 9, scope: !3677)
!3679 = !DILocation(line: 436, column: 7, scope: !3647)
!3680 = !DILocation(line: 437, column: 21, scope: !3677)
!3681 = !DILocation(line: 437, column: 26, scope: !3677)
!3682 = !DILocation(line: 437, column: 5, scope: !3677)
!3683 = !DILocation(line: 438, column: 10, scope: !3647)
!3684 = !DILocation(line: 438, column: 3, scope: !3647)
!3685 = distinct !DISubprogram(name: "defaultcon", scope: !3686, file: !3686, line: 44, type: !250, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!3686 = !DIFile(filename: "src/selinux.h", directory: "/home/mbarbar/software/coreutils-8.31")
!3687 = !DILocalVariable(name: "path", arg: 1, scope: !3685, file: !3686, line: 44, type: !180)
!3688 = !DILocation(line: 44, column: 25, scope: !3685)
!3689 = !DILocalVariable(name: "mode", arg: 2, scope: !3685, file: !3686, line: 44, type: !139)
!3690 = !DILocation(line: 44, column: 38, scope: !3685)
!3691 = !DILocation(line: 45, column: 3, scope: !3685)
!3692 = !DILocation(line: 45, column: 9, scope: !3685)
!3693 = !DILocation(line: 45, column: 20, scope: !3685)
!3694 = distinct !DISubprogram(name: "ignorable_ctx_err", scope: !3686, file: !3686, line: 25, type: !256, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!3695 = !DILocalVariable(name: "err", arg: 1, scope: !3694, file: !3686, line: 25, type: !7)
!3696 = !DILocation(line: 25, column: 24, scope: !3694)
!3697 = !DILocation(line: 27, column: 10, scope: !3694)
!3698 = !DILocation(line: 27, column: 14, scope: !3694)
!3699 = !DILocation(line: 27, column: 25, scope: !3694)
!3700 = !DILocation(line: 27, column: 28, scope: !3694)
!3701 = !DILocation(line: 27, column: 32, scope: !3694)
!3702 = !DILocation(line: 27, column: 3, scope: !3694)
!3703 = distinct !DISubprogram(name: "announce_mkdir", scope: !66, file: !66, line: 416, type: !252, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!3704 = !DILocalVariable(name: "dir", arg: 1, scope: !3703, file: !66, line: 416, type: !180)
!3705 = !DILocation(line: 416, column: 29, scope: !3703)
!3706 = !DILocalVariable(name: "options", arg: 2, scope: !3703, file: !66, line: 416, type: !53)
!3707 = !DILocation(line: 416, column: 40, scope: !3703)
!3708 = !DILocalVariable(name: "x", scope: !3703, file: !66, line: 418, type: !246)
!3709 = !DILocation(line: 418, column: 28, scope: !3703)
!3710 = !DILocation(line: 418, column: 32, scope: !3703)
!3711 = !DILocation(line: 419, column: 7, scope: !3712)
!3712 = distinct !DILexicalBlock(scope: !3703, file: !66, line: 419, column: 7)
!3713 = !DILocation(line: 419, column: 10, scope: !3712)
!3714 = !DILocation(line: 419, column: 7, scope: !3703)
!3715 = !DILocation(line: 420, column: 19, scope: !3712)
!3716 = !DILocation(line: 420, column: 27, scope: !3712)
!3717 = !DILocation(line: 420, column: 55, scope: !3712)
!3718 = !DILocation(line: 420, column: 5, scope: !3712)
!3719 = !DILocation(line: 421, column: 1, scope: !3703)
!3720 = distinct !DISubprogram(name: "copy_file", scope: !66, file: !66, line: 473, type: !262, scopeLine: 474, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!3721 = !DILocalVariable(name: "from", arg: 1, scope: !3720, file: !66, line: 473, type: !180)
!3722 = !DILocation(line: 473, column: 24, scope: !3720)
!3723 = !DILocalVariable(name: "to", arg: 2, scope: !3720, file: !66, line: 473, type: !180)
!3724 = !DILocation(line: 473, column: 42, scope: !3720)
!3725 = !DILocalVariable(name: "x", arg: 3, scope: !3720, file: !66, line: 473, type: !246)
!3726 = !DILocation(line: 473, column: 71, scope: !3720)
!3727 = !DILocalVariable(name: "copy_into_self", scope: !3720, file: !66, line: 475, type: !142)
!3728 = !DILocation(line: 475, column: 8, scope: !3720)
!3729 = !DILocation(line: 477, column: 7, scope: !3730)
!3730 = distinct !DILexicalBlock(scope: !3720, file: !66, line: 477, column: 7)
!3731 = !DILocation(line: 477, column: 27, scope: !3730)
!3732 = !DILocation(line: 477, column: 42, scope: !3730)
!3733 = !DILocation(line: 477, column: 48, scope: !3730)
!3734 = !DILocation(line: 477, column: 52, scope: !3730)
!3735 = !DILocation(line: 477, column: 31, scope: !3730)
!3736 = !DILocation(line: 477, column: 7, scope: !3720)
!3737 = !DILocation(line: 478, column: 5, scope: !3730)
!3738 = !DILocation(line: 486, column: 16, scope: !3720)
!3739 = !DILocation(line: 486, column: 22, scope: !3720)
!3740 = !DILocation(line: 486, column: 33, scope: !3720)
!3741 = !DILocation(line: 486, column: 10, scope: !3720)
!3742 = !DILocation(line: 486, column: 3, scope: !3720)
!3743 = !DILocation(line: 487, column: 1, scope: !3720)
!3744 = distinct !DISubprogram(name: "strip", scope: !66, file: !66, line: 547, type: !220, scopeLine: 548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!3745 = !DILocalVariable(name: "name", arg: 1, scope: !3744, file: !66, line: 547, type: !180)
!3746 = !DILocation(line: 547, column: 20, scope: !3744)
!3747 = !DILocalVariable(name: "status", scope: !3744, file: !66, line: 549, type: !7)
!3748 = !DILocation(line: 549, column: 7, scope: !3744)
!3749 = !DILocalVariable(name: "ok", scope: !3744, file: !66, line: 550, type: !142)
!3750 = !DILocation(line: 550, column: 8, scope: !3744)
!3751 = !DILocalVariable(name: "pid", scope: !3744, file: !66, line: 551, type: !111)
!3752 = !DILocation(line: 551, column: 9, scope: !3744)
!3753 = !DILocation(line: 551, column: 15, scope: !3744)
!3754 = !DILocation(line: 553, column: 11, scope: !3744)
!3755 = !DILocation(line: 553, column: 3, scope: !3744)
!3756 = !DILocation(line: 556, column: 17, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3744, file: !66, line: 554, column: 5)
!3758 = !DILocation(line: 556, column: 24, scope: !3757)
!3759 = !DILocation(line: 556, column: 7, scope: !3757)
!3760 = !DILocation(line: 557, column: 7, scope: !3757)
!3761 = !DILocation(line: 559, column: 15, scope: !3757)
!3762 = !DILocation(line: 559, column: 30, scope: !3757)
!3763 = !DILocation(line: 559, column: 45, scope: !3757)
!3764 = !DILocation(line: 559, column: 7, scope: !3757)
!3765 = !DILocation(line: 560, column: 7, scope: !3757)
!3766 = !DILocation(line: 562, column: 20, scope: !3767)
!3767 = distinct !DILexicalBlock(scope: !3757, file: !66, line: 562, column: 11)
!3768 = !DILocation(line: 562, column: 11, scope: !3767)
!3769 = !DILocation(line: 562, column: 37, scope: !3767)
!3770 = !DILocation(line: 562, column: 11, scope: !3757)
!3771 = !DILocation(line: 563, column: 19, scope: !3767)
!3772 = !DILocation(line: 563, column: 26, scope: !3767)
!3773 = !DILocation(line: 563, column: 9, scope: !3767)
!3774 = !DILocation(line: 564, column: 18, scope: !3775)
!3775 = distinct !DILexicalBlock(scope: !3767, file: !66, line: 564, column: 16)
!3776 = !DILocation(line: 564, column: 37, scope: !3775)
!3777 = !DILocation(line: 564, column: 40, scope: !3775)
!3778 = !DILocation(line: 564, column: 16, scope: !3767)
!3779 = !DILocation(line: 565, column: 22, scope: !3775)
!3780 = !DILocation(line: 565, column: 9, scope: !3775)
!3781 = !DILocation(line: 567, column: 12, scope: !3775)
!3782 = !DILocation(line: 568, column: 7, scope: !3757)
!3783 = !DILocation(line: 570, column: 10, scope: !3744)
!3784 = !DILocation(line: 570, column: 3, scope: !3744)
!3785 = distinct !DISubprogram(name: "change_timestamps", scope: !66, file: !66, line: 526, type: !266, scopeLine: 527, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!3786 = !DILocalVariable(name: "src_sb", arg: 1, scope: !3785, file: !66, line: 526, type: !268)
!3787 = !DILocation(line: 526, column: 39, scope: !3785)
!3788 = !DILocalVariable(name: "dest", arg: 2, scope: !3785, file: !66, line: 526, type: !180)
!3789 = !DILocation(line: 526, column: 59, scope: !3785)
!3790 = !DILocalVariable(name: "timespec", scope: !3785, file: !66, line: 528, type: !303)
!3791 = !DILocation(line: 528, column: 19, scope: !3785)
!3792 = !DILocation(line: 529, column: 3, scope: !3785)
!3793 = !DILocation(line: 529, column: 33, scope: !3785)
!3794 = !DILocation(line: 529, column: 17, scope: !3785)
!3795 = !{i64 0, i64 8, !3285, i64 8, i64 8, !3285}
!3796 = !DILocation(line: 530, column: 3, scope: !3785)
!3797 = !DILocation(line: 530, column: 33, scope: !3785)
!3798 = !DILocation(line: 530, column: 17, scope: !3785)
!3799 = !DILocation(line: 532, column: 16, scope: !3800)
!3800 = distinct !DILexicalBlock(scope: !3785, file: !66, line: 532, column: 7)
!3801 = !DILocation(line: 532, column: 22, scope: !3800)
!3802 = !DILocation(line: 532, column: 7, scope: !3800)
!3803 = !DILocation(line: 532, column: 7, scope: !3785)
!3804 = !DILocation(line: 534, column: 17, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3800, file: !66, line: 533, column: 5)
!3806 = !DILocation(line: 534, column: 24, scope: !3805)
!3807 = !DILocation(line: 534, column: 59, scope: !3805)
!3808 = !DILocation(line: 534, column: 7, scope: !3805)
!3809 = !DILocation(line: 535, column: 7, scope: !3805)
!3810 = !DILocation(line: 537, column: 3, scope: !3785)
!3811 = !DILocation(line: 538, column: 1, scope: !3785)
!3812 = distinct !DISubprogram(name: "change_attributes", scope: !66, file: !66, line: 493, type: !220, scopeLine: 494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!3813 = !DILocalVariable(name: "name", arg: 1, scope: !3812, file: !66, line: 493, type: !180)
!3814 = !DILocation(line: 493, column: 32, scope: !3812)
!3815 = !DILocalVariable(name: "ok", scope: !3812, file: !66, line: 495, type: !142)
!3816 = !DILocation(line: 495, column: 8, scope: !3812)
!3817 = !DILocation(line: 508, column: 10, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3812, file: !66, line: 508, column: 7)
!3819 = !DILocation(line: 508, column: 19, scope: !3818)
!3820 = !DILocation(line: 508, column: 33, scope: !3818)
!3821 = !DILocation(line: 508, column: 36, scope: !3818)
!3822 = !DILocation(line: 508, column: 45, scope: !3818)
!3823 = !DILocation(line: 509, column: 7, scope: !3818)
!3824 = !DILocation(line: 509, column: 18, scope: !3818)
!3825 = !DILocation(line: 509, column: 24, scope: !3818)
!3826 = !DILocation(line: 509, column: 34, scope: !3818)
!3827 = !DILocation(line: 509, column: 10, scope: !3818)
!3828 = !DILocation(line: 509, column: 44, scope: !3818)
!3829 = !DILocation(line: 508, column: 7, scope: !3812)
!3830 = !DILocation(line: 510, column: 15, scope: !3818)
!3831 = !DILocation(line: 510, column: 22, scope: !3818)
!3832 = !DILocation(line: 510, column: 58, scope: !3818)
!3833 = !DILocation(line: 510, column: 5, scope: !3818)
!3834 = !DILocation(line: 511, column: 19, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !3818, file: !66, line: 511, column: 12)
!3836 = !DILocation(line: 511, column: 25, scope: !3835)
!3837 = !DILocation(line: 511, column: 12, scope: !3835)
!3838 = !DILocation(line: 511, column: 31, scope: !3835)
!3839 = !DILocation(line: 511, column: 12, scope: !3818)
!3840 = !DILocation(line: 512, column: 15, scope: !3835)
!3841 = !DILocation(line: 512, column: 22, scope: !3835)
!3842 = !DILocation(line: 512, column: 60, scope: !3835)
!3843 = !DILocation(line: 512, column: 5, scope: !3835)
!3844 = !DILocation(line: 514, column: 8, scope: !3835)
!3845 = !DILocation(line: 516, column: 7, scope: !3846)
!3846 = distinct !DILexicalBlock(scope: !3812, file: !66, line: 516, column: 7)
!3847 = !DILocation(line: 516, column: 7, scope: !3812)
!3848 = !DILocation(line: 517, column: 24, scope: !3846)
!3849 = !DILocation(line: 517, column: 5, scope: !3846)
!3850 = !DILocation(line: 519, column: 10, scope: !3812)
!3851 = !DILocation(line: 519, column: 3, scope: !3812)
!3852 = !DILocalVariable(name: "file", arg: 1, scope: !345, file: !66, line: 314, type: !180)
!3853 = !DILocation(line: 314, column: 32, scope: !345)
!3854 = !DILocalVariable(name: "st", scope: !345, file: !66, line: 316, type: !270)
!3855 = !DILocation(line: 316, column: 15, scope: !345)
!3856 = !DILocalVariable(name: "scontext", scope: !345, file: !66, line: 317, type: !9)
!3857 = !DILocation(line: 317, column: 9, scope: !345)
!3858 = !DILocation(line: 320, column: 7, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !345, file: !66, line: 320, column: 7)
!3860 = !DILocation(line: 320, column: 23, scope: !3859)
!3861 = !DILocation(line: 320, column: 7, scope: !345)
!3862 = !DILocation(line: 323, column: 7, scope: !3863)
!3863 = distinct !DILexicalBlock(scope: !3859, file: !66, line: 321, column: 5)
!3864 = !DILocation(line: 325, column: 14, scope: !3865)
!3865 = distinct !DILexicalBlock(scope: !345, file: !66, line: 325, column: 7)
!3866 = !DILocation(line: 325, column: 7, scope: !3865)
!3867 = !DILocation(line: 325, column: 25, scope: !3865)
!3868 = !DILocation(line: 325, column: 7, scope: !345)
!3869 = !DILocation(line: 326, column: 5, scope: !3865)
!3870 = !DILocation(line: 328, column: 7, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !345, file: !66, line: 328, column: 7)
!3872 = !DILocation(line: 328, column: 18, scope: !3871)
!3873 = !DILocation(line: 328, column: 21, scope: !3871)
!3874 = !DILocation(line: 328, column: 7, scope: !345)
!3875 = !DILocalVariable(name: "p0", scope: !3876, file: !66, line: 337, type: !180)
!3876 = distinct !DILexicalBlock(scope: !3871, file: !66, line: 329, column: 5)
!3877 = !DILocation(line: 337, column: 19, scope: !3876)
!3878 = !DILocalVariable(name: "p", scope: !3876, file: !66, line: 338, type: !180)
!3879 = !DILocation(line: 338, column: 19, scope: !3876)
!3880 = !DILocation(line: 338, column: 23, scope: !3876)
!3881 = !DILocation(line: 338, column: 28, scope: !3876)
!3882 = !DILocation(line: 339, column: 7, scope: !3876)
!3883 = !DILocation(line: 339, column: 14, scope: !3876)
!3884 = !DILocation(line: 340, column: 9, scope: !3876)
!3885 = distinct !{!3885, !3882, !3886}
!3886 = !DILocation(line: 340, column: 11, scope: !3876)
!3887 = !DILocation(line: 343, column: 12, scope: !3876)
!3888 = !DILocation(line: 343, column: 14, scope: !3876)
!3889 = !DILocation(line: 343, column: 10, scope: !3876)
!3890 = !DILocation(line: 345, column: 12, scope: !3891)
!3891 = distinct !DILexicalBlock(scope: !3876, file: !66, line: 345, column: 11)
!3892 = !DILocation(line: 345, column: 11, scope: !3891)
!3893 = !DILocation(line: 345, column: 11, scope: !3876)
!3894 = !DILocalVariable(name: "prefix", scope: !3895, file: !66, line: 347, type: !9)
!3895 = distinct !DILexicalBlock(scope: !3891, file: !66, line: 346, column: 9)
!3896 = !DILocation(line: 347, column: 17, scope: !3895)
!3897 = !DILocation(line: 348, column: 11, scope: !3895)
!3898 = !DILocation(line: 350, column: 15, scope: !3899)
!3899 = distinct !DILexicalBlock(scope: !3895, file: !66, line: 349, column: 13)
!3900 = !DILocation(line: 351, column: 13, scope: !3899)
!3901 = !DILocation(line: 352, column: 19, scope: !3895)
!3902 = !DILocation(line: 352, column: 18, scope: !3895)
!3903 = !DILocation(line: 352, column: 21, scope: !3895)
!3904 = !DILocation(line: 352, column: 25, scope: !3895)
!3905 = !DILocation(line: 352, column: 24, scope: !3895)
!3906 = !DILocation(line: 0, scope: !3895)
!3907 = distinct !{!3907, !3897, !3908}
!3908 = !DILocation(line: 352, column: 37, scope: !3895)
!3909 = !DILocation(line: 354, column: 28, scope: !3895)
!3910 = !DILocation(line: 354, column: 32, scope: !3895)
!3911 = !DILocation(line: 354, column: 30, scope: !3895)
!3912 = !DILocation(line: 354, column: 35, scope: !3895)
!3913 = !DILocation(line: 354, column: 20, scope: !3895)
!3914 = !DILocation(line: 354, column: 18, scope: !3895)
!3915 = !DILocation(line: 355, column: 15, scope: !3916)
!3916 = distinct !DILexicalBlock(scope: !3895, file: !66, line: 355, column: 15)
!3917 = !DILocation(line: 355, column: 15, scope: !3895)
!3918 = !DILocation(line: 357, column: 32, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3916, file: !66, line: 356, column: 13)
!3920 = !DILocation(line: 357, column: 40, scope: !3919)
!3921 = !DILocation(line: 357, column: 44, scope: !3919)
!3922 = !DILocation(line: 357, column: 48, scope: !3919)
!3923 = !DILocation(line: 357, column: 46, scope: !3919)
!3924 = !DILocation(line: 357, column: 23, scope: !3919)
!3925 = !DILocation(line: 357, column: 15, scope: !3919)
!3926 = !DILocation(line: 359, column: 21, scope: !3919)
!3927 = !DILocation(line: 359, column: 15, scope: !3919)
!3928 = !DILocation(line: 360, column: 13, scope: !3919)
!3929 = !DILocation(line: 361, column: 9, scope: !3895)
!3930 = !DILocation(line: 362, column: 5, scope: !3876)
!3931 = !DILocation(line: 363, column: 14, scope: !345)
!3932 = !DILocation(line: 368, column: 22, scope: !3933)
!3933 = distinct !DILexicalBlock(scope: !345, file: !66, line: 368, column: 7)
!3934 = !DILocation(line: 368, column: 31, scope: !3933)
!3935 = !DILocation(line: 368, column: 8, scope: !3933)
!3936 = !DILocation(line: 368, column: 51, scope: !3933)
!3937 = !DILocation(line: 369, column: 7, scope: !3933)
!3938 = !DILocation(line: 369, column: 10, scope: !3933)
!3939 = !DILocation(line: 368, column: 7, scope: !345)
!3940 = !DILocation(line: 371, column: 11, scope: !3941)
!3941 = distinct !DILexicalBlock(scope: !3942, file: !66, line: 371, column: 11)
!3942 = distinct !DILexicalBlock(scope: !3933, file: !66, line: 370, column: 5)
!3943 = !DILocation(line: 371, column: 20, scope: !3941)
!3944 = !DILocation(line: 371, column: 11, scope: !3942)
!3945 = !DILocation(line: 372, column: 18, scope: !3941)
!3946 = !DILocation(line: 372, column: 9, scope: !3941)
!3947 = !DILocation(line: 373, column: 7, scope: !3942)
!3948 = !DILocation(line: 376, column: 20, scope: !3949)
!3949 = distinct !DILexicalBlock(scope: !345, file: !66, line: 376, column: 7)
!3950 = !DILocation(line: 376, column: 26, scope: !3949)
!3951 = !DILocation(line: 376, column: 7, scope: !3949)
!3952 = !DILocation(line: 376, column: 36, scope: !3949)
!3953 = !DILocation(line: 376, column: 40, scope: !3949)
!3954 = !DILocation(line: 376, column: 43, scope: !3949)
!3955 = !DILocation(line: 376, column: 49, scope: !3949)
!3956 = !DILocation(line: 376, column: 7, scope: !345)
!3957 = !DILocation(line: 377, column: 15, scope: !3949)
!3958 = !DILocation(line: 378, column: 12, scope: !3949)
!3959 = !DILocation(line: 379, column: 12, scope: !3949)
!3960 = !DILocation(line: 379, column: 44, scope: !3949)
!3961 = !DILocation(line: 379, column: 32, scope: !3949)
!3962 = !DILocation(line: 377, column: 5, scope: !3949)
!3963 = !DILocation(line: 381, column: 12, scope: !345)
!3964 = !DILocation(line: 381, column: 3, scope: !345)
!3965 = !DILocation(line: 382, column: 3, scope: !345)
!3966 = !DILocation(line: 383, column: 1, scope: !345)
!3967 = distinct !DISubprogram(name: "need_copy", scope: !66, file: !66, line: 174, type: !262, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!3968 = !DILocalVariable(name: "src_name", arg: 1, scope: !3967, file: !66, line: 174, type: !180)
!3969 = !DILocation(line: 174, column: 24, scope: !3967)
!3970 = !DILocalVariable(name: "dest_name", arg: 2, scope: !3967, file: !66, line: 174, type: !180)
!3971 = !DILocation(line: 174, column: 46, scope: !3967)
!3972 = !DILocalVariable(name: "x", arg: 3, scope: !3967, file: !66, line: 175, type: !246)
!3973 = !DILocation(line: 175, column: 37, scope: !3967)
!3974 = !DILocalVariable(name: "src_sb", scope: !3967, file: !66, line: 177, type: !270)
!3975 = !DILocation(line: 177, column: 15, scope: !3967)
!3976 = !DILocalVariable(name: "dest_sb", scope: !3967, file: !66, line: 177, type: !270)
!3977 = !DILocation(line: 177, column: 23, scope: !3967)
!3978 = !DILocalVariable(name: "src_fd", scope: !3967, file: !66, line: 178, type: !7)
!3979 = !DILocation(line: 178, column: 7, scope: !3967)
!3980 = !DILocalVariable(name: "dest_fd", scope: !3967, file: !66, line: 178, type: !7)
!3981 = !DILocation(line: 178, column: 15, scope: !3967)
!3982 = !DILocalVariable(name: "content_match", scope: !3967, file: !66, line: 179, type: !142)
!3983 = !DILocation(line: 179, column: 8, scope: !3967)
!3984 = !DILocation(line: 181, column: 19, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3967, file: !66, line: 181, column: 7)
!3986 = !DILocation(line: 181, column: 7, scope: !3985)
!3987 = !DILocation(line: 181, column: 7, scope: !3967)
!3988 = !DILocation(line: 182, column: 5, scope: !3985)
!3989 = !DILocation(line: 185, column: 14, scope: !3990)
!3990 = distinct !DILexicalBlock(scope: !3967, file: !66, line: 185, column: 7)
!3991 = !DILocation(line: 185, column: 7, scope: !3990)
!3992 = !DILocation(line: 185, column: 33, scope: !3990)
!3993 = !DILocation(line: 185, column: 7, scope: !3967)
!3994 = !DILocation(line: 186, column: 5, scope: !3990)
!3995 = !DILocation(line: 188, column: 14, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3967, file: !66, line: 188, column: 7)
!3997 = !DILocation(line: 188, column: 7, scope: !3996)
!3998 = !DILocation(line: 188, column: 35, scope: !3996)
!3999 = !DILocation(line: 188, column: 7, scope: !3967)
!4000 = !DILocation(line: 189, column: 5, scope: !3996)
!4001 = !DILocation(line: 191, column: 8, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !3967, file: !66, line: 191, column: 7)
!4003 = !DILocation(line: 191, column: 33, scope: !4002)
!4004 = !DILocation(line: 191, column: 37, scope: !4002)
!4005 = !DILocation(line: 192, column: 7, scope: !4002)
!4006 = !DILocation(line: 192, column: 29, scope: !4002)
!4007 = !DILocation(line: 192, column: 10, scope: !4002)
!4008 = !DILocation(line: 192, column: 38, scope: !4002)
!4009 = !DILocation(line: 192, column: 61, scope: !4002)
!4010 = !DILocation(line: 192, column: 41, scope: !4002)
!4011 = !DILocation(line: 191, column: 7, scope: !3967)
!4012 = !DILocation(line: 193, column: 5, scope: !4002)
!4013 = !DILocation(line: 195, column: 14, scope: !4014)
!4014 = distinct !DILexicalBlock(scope: !3967, file: !66, line: 195, column: 7)
!4015 = !{!2912, !2913, i64 48}
!4016 = !DILocation(line: 195, column: 33, scope: !4014)
!4017 = !DILocation(line: 195, column: 22, scope: !4014)
!4018 = !DILocation(line: 196, column: 7, scope: !4014)
!4019 = !DILocation(line: 196, column: 19, scope: !4014)
!4020 = !DILocation(line: 196, column: 27, scope: !4014)
!4021 = !DILocation(line: 196, column: 49, scope: !4014)
!4022 = !DILocation(line: 196, column: 46, scope: !4014)
!4023 = !DILocation(line: 195, column: 7, scope: !3967)
!4024 = !DILocation(line: 197, column: 5, scope: !4014)
!4025 = !DILocation(line: 199, column: 7, scope: !4026)
!4026 = distinct !DILexicalBlock(scope: !3967, file: !66, line: 199, column: 7)
!4027 = !DILocation(line: 199, column: 16, scope: !4026)
!4028 = !DILocation(line: 199, column: 7, scope: !3967)
!4029 = !DILocation(line: 201, column: 7, scope: !4030)
!4030 = distinct !DILexicalBlock(scope: !4026, file: !66, line: 200, column: 5)
!4031 = !DILocation(line: 201, column: 13, scope: !4030)
!4032 = !DILocalVariable(name: "ruid", scope: !4030, file: !66, line: 202, type: !127)
!4033 = !DILocation(line: 202, column: 13, scope: !4030)
!4034 = !DILocation(line: 202, column: 20, scope: !4030)
!4035 = !DILocation(line: 203, column: 12, scope: !4036)
!4036 = distinct !DILexicalBlock(scope: !4030, file: !66, line: 203, column: 11)
!4037 = !DILocation(line: 203, column: 17, scope: !4036)
!4038 = !DILocation(line: 203, column: 31, scope: !4036)
!4039 = !DILocation(line: 203, column: 34, scope: !4036)
!4040 = !DILocation(line: 203, column: 41, scope: !4036)
!4041 = !DILocation(line: 203, column: 52, scope: !4036)
!4042 = !{!2912, !2633, i64 28}
!4043 = !DILocation(line: 203, column: 62, scope: !4036)
!4044 = !DILocation(line: 203, column: 59, scope: !4036)
!4045 = !DILocation(line: 203, column: 11, scope: !4030)
!4046 = !DILocation(line: 204, column: 9, scope: !4036)
!4047 = !DILocation(line: 205, column: 5, scope: !4030)
!4048 = !DILocation(line: 206, column: 20, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !4026, file: !66, line: 206, column: 12)
!4050 = !DILocation(line: 206, column: 30, scope: !4049)
!4051 = !DILocation(line: 206, column: 27, scope: !4049)
!4052 = !DILocation(line: 206, column: 12, scope: !4026)
!4053 = !DILocation(line: 207, column: 5, scope: !4049)
!4054 = !DILocation(line: 209, column: 7, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !3967, file: !66, line: 209, column: 7)
!4056 = !DILocation(line: 209, column: 16, scope: !4055)
!4057 = !DILocation(line: 209, column: 7, scope: !3967)
!4058 = !DILocation(line: 211, column: 7, scope: !4059)
!4059 = distinct !DILexicalBlock(scope: !4055, file: !66, line: 210, column: 5)
!4060 = !DILocation(line: 211, column: 13, scope: !4059)
!4061 = !DILocalVariable(name: "rgid", scope: !4059, file: !66, line: 212, type: !129)
!4062 = !DILocation(line: 212, column: 13, scope: !4059)
!4063 = !DILocation(line: 212, column: 20, scope: !4059)
!4064 = !DILocation(line: 213, column: 12, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !4059, file: !66, line: 213, column: 11)
!4066 = !DILocation(line: 213, column: 17, scope: !4065)
!4067 = !DILocation(line: 213, column: 31, scope: !4065)
!4068 = !DILocation(line: 213, column: 34, scope: !4065)
!4069 = !DILocation(line: 213, column: 41, scope: !4065)
!4070 = !DILocation(line: 213, column: 52, scope: !4065)
!4071 = !{!2912, !2633, i64 32}
!4072 = !DILocation(line: 213, column: 62, scope: !4065)
!4073 = !DILocation(line: 213, column: 59, scope: !4065)
!4074 = !DILocation(line: 213, column: 11, scope: !4059)
!4075 = !DILocation(line: 214, column: 9, scope: !4065)
!4076 = !DILocation(line: 215, column: 5, scope: !4059)
!4077 = !DILocation(line: 216, column: 20, scope: !4078)
!4078 = distinct !DILexicalBlock(scope: !4055, file: !66, line: 216, column: 12)
!4079 = !DILocation(line: 216, column: 30, scope: !4078)
!4080 = !DILocation(line: 216, column: 27, scope: !4078)
!4081 = !DILocation(line: 216, column: 12, scope: !4055)
!4082 = !DILocation(line: 217, column: 5, scope: !4078)
!4083 = !DILocation(line: 220, column: 7, scope: !4084)
!4084 = distinct !DILexicalBlock(scope: !3967, file: !66, line: 220, column: 7)
!4085 = !DILocation(line: 220, column: 23, scope: !4084)
!4086 = !DILocation(line: 220, column: 26, scope: !4084)
!4087 = !DILocation(line: 220, column: 29, scope: !4084)
!4088 = !DILocation(line: 220, column: 7, scope: !3967)
!4089 = !DILocalVariable(name: "file_scontext", scope: !4090, file: !66, line: 222, type: !9)
!4090 = distinct !DILexicalBlock(scope: !4084, file: !66, line: 221, column: 5)
!4091 = !DILocation(line: 222, column: 13, scope: !4090)
!4092 = !DILocalVariable(name: "to_scontext", scope: !4090, file: !66, line: 223, type: !9)
!4093 = !DILocation(line: 223, column: 13, scope: !4090)
!4094 = !DILocalVariable(name: "scontext_match", scope: !4090, file: !66, line: 224, type: !142)
!4095 = !DILocation(line: 224, column: 12, scope: !4090)
!4096 = !DILocation(line: 226, column: 23, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !4090, file: !66, line: 226, column: 11)
!4098 = !DILocation(line: 226, column: 11, scope: !4097)
!4099 = !DILocation(line: 226, column: 49, scope: !4097)
!4100 = !DILocation(line: 226, column: 11, scope: !4090)
!4101 = !DILocation(line: 227, column: 9, scope: !4097)
!4102 = !DILocation(line: 229, column: 23, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4090, file: !66, line: 229, column: 11)
!4104 = !DILocation(line: 229, column: 11, scope: !4103)
!4105 = !DILocation(line: 229, column: 48, scope: !4103)
!4106 = !DILocation(line: 229, column: 11, scope: !4090)
!4107 = !DILocation(line: 231, column: 20, scope: !4108)
!4108 = distinct !DILexicalBlock(scope: !4103, file: !66, line: 230, column: 9)
!4109 = !DILocation(line: 231, column: 11, scope: !4108)
!4110 = !DILocation(line: 232, column: 11, scope: !4108)
!4111 = !DILocation(line: 235, column: 24, scope: !4090)
!4112 = !DILocation(line: 235, column: 22, scope: !4090)
!4113 = !DILocation(line: 237, column: 16, scope: !4090)
!4114 = !DILocation(line: 237, column: 7, scope: !4090)
!4115 = !DILocation(line: 238, column: 16, scope: !4090)
!4116 = !DILocation(line: 238, column: 7, scope: !4090)
!4117 = !DILocation(line: 239, column: 12, scope: !4118)
!4118 = distinct !DILexicalBlock(scope: !4090, file: !66, line: 239, column: 11)
!4119 = !DILocation(line: 239, column: 11, scope: !4090)
!4120 = !DILocation(line: 240, column: 9, scope: !4118)
!4121 = !DILocation(line: 241, column: 5, scope: !4090)
!4122 = !DILocation(line: 244, column: 18, scope: !3967)
!4123 = !DILocation(line: 244, column: 12, scope: !3967)
!4124 = !DILocation(line: 244, column: 10, scope: !3967)
!4125 = !DILocation(line: 245, column: 7, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !3967, file: !66, line: 245, column: 7)
!4127 = !DILocation(line: 245, column: 14, scope: !4126)
!4128 = !DILocation(line: 245, column: 7, scope: !3967)
!4129 = !DILocation(line: 246, column: 5, scope: !4126)
!4130 = !DILocation(line: 248, column: 19, scope: !3967)
!4131 = !DILocation(line: 248, column: 13, scope: !3967)
!4132 = !DILocation(line: 248, column: 11, scope: !3967)
!4133 = !DILocation(line: 249, column: 7, scope: !4134)
!4134 = distinct !DILexicalBlock(scope: !3967, file: !66, line: 249, column: 7)
!4135 = !DILocation(line: 249, column: 15, scope: !4134)
!4136 = !DILocation(line: 249, column: 7, scope: !3967)
!4137 = !DILocation(line: 251, column: 14, scope: !4138)
!4138 = distinct !DILexicalBlock(scope: !4134, file: !66, line: 250, column: 5)
!4139 = !DILocation(line: 251, column: 7, scope: !4138)
!4140 = !DILocation(line: 252, column: 7, scope: !4138)
!4141 = !DILocation(line: 255, column: 38, scope: !3967)
!4142 = !DILocation(line: 255, column: 46, scope: !3967)
!4143 = !DILocation(line: 255, column: 19, scope: !3967)
!4144 = !DILocation(line: 255, column: 17, scope: !3967)
!4145 = !DILocation(line: 257, column: 10, scope: !3967)
!4146 = !DILocation(line: 257, column: 3, scope: !3967)
!4147 = !DILocation(line: 258, column: 10, scope: !3967)
!4148 = !DILocation(line: 258, column: 3, scope: !3967)
!4149 = !DILocation(line: 259, column: 11, scope: !3967)
!4150 = !DILocation(line: 259, column: 10, scope: !3967)
!4151 = !DILocation(line: 259, column: 3, scope: !3967)
!4152 = !DILocation(line: 260, column: 1, scope: !3967)
!4153 = !DILocalVariable(name: "a_fd", arg: 1, scope: !337, file: !66, line: 146, type: !7)
!4154 = !DILocation(line: 146, column: 24, scope: !337)
!4155 = !DILocalVariable(name: "b_fd", arg: 2, scope: !337, file: !66, line: 146, type: !7)
!4156 = !DILocation(line: 146, column: 34, scope: !337)
!4157 = !DILocalVariable(name: "size", scope: !337, file: !66, line: 152, type: !55)
!4158 = !DILocation(line: 152, column: 10, scope: !337)
!4159 = !DILocation(line: 153, column: 3, scope: !337)
!4160 = !DILocation(line: 153, column: 33, scope: !337)
!4161 = !DILocation(line: 153, column: 22, scope: !337)
!4162 = !DILocation(line: 153, column: 20, scope: !337)
!4163 = !DILocation(line: 153, column: 12, scope: !337)
!4164 = !DILocation(line: 154, column: 9, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4166, file: !66, line: 154, column: 9)
!4166 = distinct !DILexicalBlock(scope: !337, file: !66, line: 153, column: 64)
!4167 = !DILocation(line: 154, column: 28, scope: !4165)
!4168 = !DILocation(line: 154, column: 17, scope: !4165)
!4169 = !DILocation(line: 154, column: 14, scope: !4165)
!4170 = !DILocation(line: 154, column: 9, scope: !4166)
!4171 = !DILocation(line: 155, column: 7, scope: !4165)
!4172 = !DILocation(line: 157, column: 33, scope: !4173)
!4173 = distinct !DILexicalBlock(scope: !4166, file: !66, line: 157, column: 9)
!4174 = !DILocation(line: 157, column: 9, scope: !4173)
!4175 = !DILocation(line: 157, column: 39, scope: !4173)
!4176 = !DILocation(line: 157, column: 9, scope: !4166)
!4177 = !DILocation(line: 158, column: 7, scope: !4173)
!4178 = distinct !{!4178, !4159, !4179}
!4179 = !DILocation(line: 159, column: 3, scope: !337)
!4180 = !DILocation(line: 161, column: 10, scope: !337)
!4181 = !DILocation(line: 161, column: 15, scope: !337)
!4182 = !DILocation(line: 161, column: 3, scope: !337)
!4183 = !DILocation(line: 162, column: 1, scope: !337)
!4184 = distinct !DISubprogram(name: "restorecon", scope: !3686, file: !3686, line: 40, type: !254, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !65, retainedNodes: !209)
!4185 = !DILocalVariable(name: "path", arg: 1, scope: !4184, file: !3686, line: 40, type: !180)
!4186 = !DILocation(line: 40, column: 25, scope: !4184)
!4187 = !DILocalVariable(name: "recurse", arg: 2, scope: !4184, file: !3686, line: 40, type: !142)
!4188 = !DILocation(line: 40, column: 36, scope: !4184)
!4189 = !DILocalVariable(name: "preserve", arg: 3, scope: !4184, file: !3686, line: 40, type: !142)
!4190 = !DILocation(line: 40, column: 50, scope: !4184)
!4191 = !DILocation(line: 41, column: 3, scope: !4184)
!4192 = !DILocation(line: 41, column: 9, scope: !4184)
!4193 = !DILocation(line: 41, column: 20, scope: !4184)
!4194 = distinct !DISubprogram(name: "prog_fprintf", scope: !1407, file: !1407, line: 28, type: !4195, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1406, retainedNodes: !209)
!4195 = !DISubroutineType(types: !4196)
!4196 = !{null, !1411, !180, null}
!4197 = !DILocalVariable(name: "fp", arg: 1, scope: !4194, file: !1407, line: 28, type: !1411)
!4198 = !DILocation(line: 28, column: 21, scope: !4194)
!4199 = !DILocalVariable(name: "fmt", arg: 2, scope: !4194, file: !1407, line: 28, type: !180)
!4200 = !DILocation(line: 28, column: 37, scope: !4194)
!4201 = !DILocalVariable(name: "ap", scope: !4194, file: !1407, line: 30, type: !1445)
!4202 = !DILocation(line: 30, column: 11, scope: !4194)
!4203 = !DILocation(line: 31, column: 3, scope: !4194)
!4204 = !DILocation(line: 32, column: 3, scope: !4194)
!4205 = !DILocation(line: 33, column: 3, scope: !4194)
!4206 = !DILocation(line: 34, column: 13, scope: !4194)
!4207 = !DILocation(line: 34, column: 17, scope: !4194)
!4208 = !DILocation(line: 34, column: 22, scope: !4194)
!4209 = !DILocation(line: 34, column: 3, scope: !4194)
!4210 = !DILocation(line: 35, column: 3, scope: !4194)
!4211 = !DILocation(line: 36, column: 3, scope: !4194)
!4212 = !DILocation(line: 37, column: 1, scope: !4194)
!4213 = distinct !DISubprogram(name: "set_process_security_ctx", scope: !349, file: !349, line: 893, type: !354, scopeLine: 895, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !348, retainedNodes: !209)
!4214 = !DILocalVariable(name: "src_name", arg: 1, scope: !4213, file: !349, line: 893, type: !180)
!4215 = !DILocation(line: 893, column: 39, scope: !4213)
!4216 = !DILocalVariable(name: "dst_name", arg: 2, scope: !4213, file: !349, line: 893, type: !180)
!4217 = !DILocation(line: 893, column: 61, scope: !4213)
!4218 = !DILocalVariable(name: "mode", arg: 3, scope: !4213, file: !349, line: 894, type: !139)
!4219 = !DILocation(line: 894, column: 34, scope: !4213)
!4220 = !DILocalVariable(name: "new_dst", arg: 4, scope: !4213, file: !349, line: 894, type: !142)
!4221 = !DILocation(line: 894, column: 45, scope: !4213)
!4222 = !DILocalVariable(name: "x", arg: 5, scope: !4213, file: !349, line: 894, type: !356)
!4223 = !DILocation(line: 894, column: 79, scope: !4213)
!4224 = !DILocation(line: 896, column: 7, scope: !4225)
!4225 = distinct !DILexicalBlock(scope: !4213, file: !349, line: 896, column: 7)
!4226 = !DILocation(line: 896, column: 10, scope: !4225)
!4227 = !DILocation(line: 896, column: 7, scope: !4213)
!4228 = !DILocalVariable(name: "all_errors", scope: !4229, file: !349, line: 899, type: !142)
!4229 = distinct !DILexicalBlock(scope: !4225, file: !349, line: 897, column: 5)
!4230 = !DILocation(line: 899, column: 12, scope: !4229)
!4231 = !DILocation(line: 899, column: 26, scope: !4229)
!4232 = !DILocation(line: 899, column: 29, scope: !4229)
!4233 = !DILocation(line: 899, column: 48, scope: !4229)
!4234 = !DILocation(line: 899, column: 51, scope: !4229)
!4235 = !DILocation(line: 899, column: 54, scope: !4229)
!4236 = !DILocalVariable(name: "some_errors", scope: !4229, file: !349, line: 900, type: !142)
!4237 = !DILocation(line: 900, column: 12, scope: !4229)
!4238 = !DILocation(line: 900, column: 27, scope: !4229)
!4239 = !DILocation(line: 900, column: 38, scope: !4229)
!4240 = !DILocation(line: 900, column: 42, scope: !4229)
!4241 = !DILocation(line: 900, column: 45, scope: !4229)
!4242 = !DILocation(line: 900, column: 41, scope: !4229)
!4243 = !DILocation(line: 0, scope: !4229)
!4244 = !DILocalVariable(name: "con", scope: !4229, file: !349, line: 901, type: !9)
!4245 = !DILocation(line: 901, column: 13, scope: !4229)
!4246 = !DILocation(line: 903, column: 29, scope: !4247)
!4247 = distinct !DILexicalBlock(scope: !4229, file: !349, line: 903, column: 11)
!4248 = !DILocation(line: 903, column: 16, scope: !4247)
!4249 = !DILocation(line: 903, column: 13, scope: !4247)
!4250 = !DILocation(line: 903, column: 11, scope: !4229)
!4251 = !DILocation(line: 905, column: 31, scope: !4252)
!4252 = distinct !DILexicalBlock(scope: !4253, file: !349, line: 905, column: 15)
!4253 = distinct !DILexicalBlock(scope: !4247, file: !349, line: 904, column: 9)
!4254 = !DILocation(line: 905, column: 15, scope: !4252)
!4255 = !DILocation(line: 905, column: 36, scope: !4252)
!4256 = !DILocation(line: 905, column: 15, scope: !4253)
!4257 = !DILocation(line: 907, column: 19, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4259, file: !349, line: 907, column: 19)
!4259 = distinct !DILexicalBlock(scope: !4252, file: !349, line: 906, column: 13)
!4260 = !DILocation(line: 907, column: 30, scope: !4258)
!4261 = !DILocation(line: 907, column: 34, scope: !4258)
!4262 = !DILocation(line: 907, column: 46, scope: !4258)
!4263 = !DILocation(line: 907, column: 69, scope: !4258)
!4264 = !DILocation(line: 907, column: 50, scope: !4258)
!4265 = !DILocation(line: 907, column: 19, scope: !4259)
!4266 = !DILocation(line: 908, column: 27, scope: !4258)
!4267 = !DILocation(line: 909, column: 24, scope: !4258)
!4268 = !DILocation(line: 910, column: 31, scope: !4258)
!4269 = !DILocation(line: 910, column: 24, scope: !4258)
!4270 = !DILocation(line: 908, column: 17, scope: !4258)
!4271 = !DILocation(line: 911, column: 19, scope: !4272)
!4272 = distinct !DILexicalBlock(scope: !4259, file: !349, line: 911, column: 19)
!4273 = !DILocation(line: 911, column: 22, scope: !4272)
!4274 = !DILocation(line: 911, column: 19, scope: !4259)
!4275 = !DILocation(line: 913, column: 28, scope: !4276)
!4276 = distinct !DILexicalBlock(scope: !4272, file: !349, line: 912, column: 17)
!4277 = !DILocation(line: 913, column: 19, scope: !4276)
!4278 = !DILocation(line: 914, column: 19, scope: !4276)
!4279 = !DILocation(line: 916, column: 13, scope: !4259)
!4280 = !DILocation(line: 917, column: 20, scope: !4253)
!4281 = !DILocation(line: 917, column: 11, scope: !4253)
!4282 = !DILocation(line: 918, column: 9, scope: !4253)
!4283 = !DILocation(line: 921, column: 15, scope: !4284)
!4284 = distinct !DILexicalBlock(scope: !4285, file: !349, line: 921, column: 15)
!4285 = distinct !DILexicalBlock(scope: !4247, file: !349, line: 920, column: 9)
!4286 = !DILocation(line: 921, column: 26, scope: !4284)
!4287 = !DILocation(line: 921, column: 30, scope: !4284)
!4288 = !DILocation(line: 921, column: 42, scope: !4284)
!4289 = !DILocation(line: 921, column: 65, scope: !4284)
!4290 = !DILocation(line: 921, column: 46, scope: !4284)
!4291 = !DILocation(line: 921, column: 15, scope: !4285)
!4292 = !DILocation(line: 923, column: 25, scope: !4293)
!4293 = distinct !DILexicalBlock(scope: !4284, file: !349, line: 922, column: 13)
!4294 = !DILocation(line: 924, column: 22, scope: !4293)
!4295 = !DILocation(line: 925, column: 22, scope: !4293)
!4296 = !DILocation(line: 923, column: 15, scope: !4293)
!4297 = !DILocation(line: 926, column: 13, scope: !4293)
!4298 = !DILocation(line: 927, column: 15, scope: !4299)
!4299 = distinct !DILexicalBlock(scope: !4285, file: !349, line: 927, column: 15)
!4300 = !DILocation(line: 927, column: 18, scope: !4299)
!4301 = !DILocation(line: 927, column: 15, scope: !4285)
!4302 = !DILocation(line: 928, column: 13, scope: !4299)
!4303 = !DILocation(line: 930, column: 5, scope: !4229)
!4304 = !DILocation(line: 931, column: 12, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !4225, file: !349, line: 931, column: 12)
!4306 = !DILocation(line: 931, column: 15, scope: !4305)
!4307 = !DILocation(line: 931, column: 12, scope: !4225)
!4308 = !DILocation(line: 935, column: 11, scope: !4309)
!4309 = distinct !DILexicalBlock(scope: !4310, file: !349, line: 935, column: 11)
!4310 = distinct !DILexicalBlock(scope: !4305, file: !349, line: 932, column: 5)
!4311 = !DILocation(line: 935, column: 19, scope: !4309)
!4312 = !DILocation(line: 935, column: 34, scope: !4309)
!4313 = !DILocation(line: 935, column: 44, scope: !4309)
!4314 = !DILocation(line: 935, column: 22, scope: !4309)
!4315 = !DILocation(line: 935, column: 50, scope: !4309)
!4316 = !DILocation(line: 936, column: 11, scope: !4309)
!4317 = !DILocation(line: 936, column: 35, scope: !4309)
!4318 = !DILocation(line: 936, column: 16, scope: !4309)
!4319 = !DILocation(line: 935, column: 11, scope: !4310)
!4320 = !DILocation(line: 938, column: 21, scope: !4321)
!4321 = distinct !DILexicalBlock(scope: !4309, file: !349, line: 937, column: 9)
!4322 = !DILocation(line: 939, column: 18, scope: !4321)
!4323 = !DILocation(line: 940, column: 18, scope: !4321)
!4324 = !DILocation(line: 938, column: 11, scope: !4321)
!4325 = !DILocation(line: 941, column: 9, scope: !4321)
!4326 = !DILocation(line: 942, column: 5, scope: !4310)
!4327 = !DILocation(line: 944, column: 3, scope: !4213)
!4328 = !DILocation(line: 945, column: 1, scope: !4213)
!4329 = distinct !DISubprogram(name: "errno_unsupported", scope: !349, file: !349, line: 596, type: !256, scopeLine: 597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!4330 = !DILocalVariable(name: "err", arg: 1, scope: !4329, file: !349, line: 596, type: !7)
!4331 = !DILocation(line: 596, column: 24, scope: !4329)
!4332 = !DILocation(line: 598, column: 10, scope: !4329)
!4333 = !DILocation(line: 598, column: 14, scope: !4329)
!4334 = !DILocation(line: 598, column: 25, scope: !4329)
!4335 = !DILocation(line: 598, column: 28, scope: !4329)
!4336 = !DILocation(line: 598, column: 32, scope: !4329)
!4337 = !DILocation(line: 598, column: 3, scope: !4329)
!4338 = distinct !DISubprogram(name: "defaultcon", scope: !3686, file: !3686, line: 44, type: !250, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!4339 = !DILocalVariable(name: "path", arg: 1, scope: !4338, file: !3686, line: 44, type: !180)
!4340 = !DILocation(line: 44, column: 25, scope: !4338)
!4341 = !DILocalVariable(name: "mode", arg: 2, scope: !4338, file: !3686, line: 44, type: !139)
!4342 = !DILocation(line: 44, column: 38, scope: !4338)
!4343 = !DILocation(line: 45, column: 3, scope: !4338)
!4344 = !DILocation(line: 45, column: 9, scope: !4338)
!4345 = !DILocation(line: 45, column: 20, scope: !4338)
!4346 = distinct !DISubprogram(name: "ignorable_ctx_err", scope: !3686, file: !3686, line: 25, type: !256, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!4347 = !DILocalVariable(name: "err", arg: 1, scope: !4346, file: !3686, line: 25, type: !7)
!4348 = !DILocation(line: 25, column: 24, scope: !4346)
!4349 = !DILocation(line: 27, column: 10, scope: !4346)
!4350 = !DILocation(line: 27, column: 14, scope: !4346)
!4351 = !DILocation(line: 27, column: 25, scope: !4346)
!4352 = !DILocation(line: 27, column: 28, scope: !4346)
!4353 = !DILocation(line: 27, column: 32, scope: !4346)
!4354 = !DILocation(line: 27, column: 3, scope: !4346)
!4355 = distinct !DISubprogram(name: "set_file_security_ctx", scope: !349, file: !349, line: 955, type: !399, scopeLine: 957, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !348, retainedNodes: !209)
!4356 = !DILocalVariable(name: "dst_name", arg: 1, scope: !4355, file: !349, line: 955, type: !180)
!4357 = !DILocation(line: 955, column: 36, scope: !4355)
!4358 = !DILocalVariable(name: "process_local", arg: 2, scope: !4355, file: !349, line: 955, type: !142)
!4359 = !DILocation(line: 955, column: 51, scope: !4355)
!4360 = !DILocalVariable(name: "recurse", arg: 3, scope: !4355, file: !349, line: 956, type: !142)
!4361 = !DILocation(line: 956, column: 29, scope: !4355)
!4362 = !DILocalVariable(name: "x", arg: 4, scope: !4355, file: !349, line: 956, type: !356)
!4363 = !DILocation(line: 956, column: 63, scope: !4355)
!4364 = !DILocalVariable(name: "all_errors", scope: !4355, file: !349, line: 958, type: !142)
!4365 = !DILocation(line: 958, column: 8, scope: !4355)
!4366 = !DILocation(line: 958, column: 23, scope: !4355)
!4367 = !DILocation(line: 958, column: 26, scope: !4355)
!4368 = !DILocation(line: 959, column: 22, scope: !4355)
!4369 = !DILocation(line: 959, column: 25, scope: !4355)
!4370 = !DILocation(line: 959, column: 28, scope: !4355)
!4371 = !DILocalVariable(name: "some_errors", scope: !4355, file: !349, line: 960, type: !142)
!4372 = !DILocation(line: 960, column: 8, scope: !4355)
!4373 = !DILocation(line: 960, column: 23, scope: !4355)
!4374 = !DILocation(line: 960, column: 34, scope: !4355)
!4375 = !DILocation(line: 960, column: 38, scope: !4355)
!4376 = !DILocation(line: 960, column: 41, scope: !4355)
!4377 = !DILocation(line: 960, column: 37, scope: !4355)
!4378 = !DILocation(line: 0, scope: !4355)
!4379 = !DILocation(line: 962, column: 21, scope: !4380)
!4380 = distinct !DILexicalBlock(scope: !4355, file: !349, line: 962, column: 7)
!4381 = !DILocation(line: 962, column: 31, scope: !4380)
!4382 = !DILocation(line: 962, column: 40, scope: !4380)
!4383 = !DILocation(line: 962, column: 9, scope: !4380)
!4384 = !DILocation(line: 962, column: 7, scope: !4355)
!4385 = !DILocation(line: 964, column: 11, scope: !4386)
!4386 = distinct !DILexicalBlock(scope: !4387, file: !349, line: 964, column: 11)
!4387 = distinct !DILexicalBlock(scope: !4380, file: !349, line: 963, column: 5)
!4388 = !DILocation(line: 964, column: 22, scope: !4386)
!4389 = !DILocation(line: 964, column: 26, scope: !4386)
!4390 = !DILocation(line: 964, column: 38, scope: !4386)
!4391 = !DILocation(line: 964, column: 61, scope: !4386)
!4392 = !DILocation(line: 964, column: 42, scope: !4386)
!4393 = !DILocation(line: 964, column: 11, scope: !4387)
!4394 = !DILocation(line: 965, column: 19, scope: !4386)
!4395 = !DILocation(line: 965, column: 26, scope: !4386)
!4396 = !DILocation(line: 966, column: 16, scope: !4386)
!4397 = !DILocation(line: 965, column: 9, scope: !4386)
!4398 = !DILocation(line: 967, column: 7, scope: !4387)
!4399 = !DILocation(line: 970, column: 3, scope: !4355)
!4400 = !DILocation(line: 971, column: 1, scope: !4355)
!4401 = distinct !DISubprogram(name: "restorecon", scope: !3686, file: !3686, line: 40, type: !254, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!4402 = !DILocalVariable(name: "path", arg: 1, scope: !4401, file: !3686, line: 40, type: !180)
!4403 = !DILocation(line: 40, column: 25, scope: !4401)
!4404 = !DILocalVariable(name: "recurse", arg: 2, scope: !4401, file: !3686, line: 40, type: !142)
!4405 = !DILocation(line: 40, column: 36, scope: !4401)
!4406 = !DILocalVariable(name: "preserve", arg: 3, scope: !4401, file: !3686, line: 40, type: !142)
!4407 = !DILocation(line: 40, column: 50, scope: !4401)
!4408 = !DILocation(line: 41, column: 3, scope: !4401)
!4409 = !DILocation(line: 41, column: 9, scope: !4401)
!4410 = !DILocation(line: 41, column: 20, scope: !4401)
!4411 = distinct !DISubprogram(name: "dest_info_init", scope: !349, file: !349, line: 1703, type: !401, scopeLine: 1704, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !348, retainedNodes: !209)
!4412 = !DILocalVariable(name: "x", arg: 1, scope: !4411, file: !349, line: 1703, type: !403)
!4413 = !DILocation(line: 1703, column: 36, scope: !4411)
!4414 = !DILocation(line: 1706, column: 7, scope: !4411)
!4415 = !DILocation(line: 1705, column: 3, scope: !4411)
!4416 = !DILocation(line: 1705, column: 6, scope: !4411)
!4417 = !DILocation(line: 1706, column: 5, scope: !4411)
!4418 = !DILocation(line: 1711, column: 1, scope: !4411)
!4419 = distinct !DISubprogram(name: "src_info_init", scope: !349, file: !349, line: 1716, type: !401, scopeLine: 1717, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !348, retainedNodes: !209)
!4420 = !DILocalVariable(name: "x", arg: 1, scope: !4419, file: !349, line: 1716, type: !403)
!4421 = !DILocation(line: 1716, column: 35, scope: !4419)
!4422 = !DILocation(line: 1728, column: 7, scope: !4419)
!4423 = !DILocation(line: 1727, column: 3, scope: !4419)
!4424 = !DILocation(line: 1727, column: 6, scope: !4419)
!4425 = !DILocation(line: 1728, column: 5, scope: !4419)
!4426 = !DILocation(line: 1733, column: 1, scope: !4419)
!4427 = distinct !DISubprogram(name: "copy", scope: !349, file: !349, line: 2971, type: !404, scopeLine: 2974, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !348, retainedNodes: !209)
!4428 = !DILocalVariable(name: "src_name", arg: 1, scope: !4427, file: !349, line: 2971, type: !180)
!4429 = !DILocation(line: 2971, column: 19, scope: !4427)
!4430 = !DILocalVariable(name: "dst_name", arg: 2, scope: !4427, file: !349, line: 2971, type: !180)
!4431 = !DILocation(line: 2971, column: 41, scope: !4427)
!4432 = !DILocalVariable(name: "nonexistent_dst", arg: 3, scope: !4427, file: !349, line: 2972, type: !142)
!4433 = !DILocation(line: 2972, column: 12, scope: !4427)
!4434 = !DILocalVariable(name: "options", arg: 4, scope: !4427, file: !349, line: 2972, type: !356)
!4435 = !DILocation(line: 2972, column: 54, scope: !4427)
!4436 = !DILocalVariable(name: "copy_into_self", arg: 5, scope: !4427, file: !349, line: 2973, type: !406)
!4437 = !DILocation(line: 2973, column: 13, scope: !4427)
!4438 = !DILocalVariable(name: "rename_succeeded", arg: 6, scope: !4427, file: !349, line: 2973, type: !406)
!4439 = !DILocation(line: 2973, column: 35, scope: !4427)
!4440 = !DILocation(line: 2975, column: 3, scope: !4441)
!4441 = distinct !DILexicalBlock(scope: !4442, file: !349, line: 2975, column: 3)
!4442 = distinct !DILexicalBlock(scope: !4427, file: !349, line: 2975, column: 3)
!4443 = !DILocation(line: 2975, column: 3, scope: !4442)
!4444 = !DILocation(line: 2984, column: 24, scope: !4427)
!4445 = !DILocation(line: 2984, column: 22, scope: !4427)
!4446 = !DILocation(line: 2985, column: 24, scope: !4427)
!4447 = !DILocation(line: 2985, column: 22, scope: !4427)
!4448 = !DILocalVariable(name: "first_dir_created_per_command_line_arg", scope: !4427, file: !349, line: 2987, type: !142)
!4449 = !DILocation(line: 2987, column: 8, scope: !4427)
!4450 = !DILocation(line: 2988, column: 25, scope: !4427)
!4451 = !DILocation(line: 2988, column: 35, scope: !4427)
!4452 = !DILocation(line: 2988, column: 45, scope: !4427)
!4453 = !DILocation(line: 2989, column: 25, scope: !4427)
!4454 = !DILocation(line: 2991, column: 25, scope: !4427)
!4455 = !DILocation(line: 2991, column: 41, scope: !4427)
!4456 = !DILocation(line: 2988, column: 10, scope: !4427)
!4457 = !DILocation(line: 2988, column: 3, scope: !4427)
!4458 = distinct !DISubprogram(name: "valid_options", scope: !349, file: !349, line: 2948, type: !407, scopeLine: 2949, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!4459 = !DILocalVariable(name: "co", arg: 1, scope: !4458, file: !349, line: 2948, type: !356)
!4460 = !DILocation(line: 2948, column: 41, scope: !4458)
!4461 = !DILocation(line: 2950, column: 3, scope: !4462)
!4462 = distinct !DILexicalBlock(scope: !4463, file: !349, line: 2950, column: 3)
!4463 = distinct !DILexicalBlock(scope: !4458, file: !349, line: 2950, column: 3)
!4464 = !DILocation(line: 2950, column: 3, scope: !4463)
!4465 = !DILocation(line: 2951, column: 3, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4467, file: !349, line: 2951, column: 3)
!4467 = distinct !DILexicalBlock(scope: !4458, file: !349, line: 2951, column: 3)
!4468 = !DILocation(line: 2951, column: 3, scope: !4467)
!4469 = !DILocation(line: 2952, column: 3, scope: !4470)
!4470 = distinct !DILexicalBlock(scope: !4471, file: !349, line: 2952, column: 3)
!4471 = distinct !DILexicalBlock(scope: !4458, file: !349, line: 2952, column: 3)
!4472 = !DILocation(line: 2952, column: 3, scope: !4471)
!4473 = !DILocation(line: 2953, column: 3, scope: !4474)
!4474 = distinct !DILexicalBlock(scope: !4475, file: !349, line: 2953, column: 3)
!4475 = distinct !DILexicalBlock(scope: !4458, file: !349, line: 2953, column: 3)
!4476 = !DILocation(line: 2953, column: 3, scope: !4475)
!4477 = !DILocation(line: 2954, column: 3, scope: !4478)
!4478 = distinct !DILexicalBlock(scope: !4479, file: !349, line: 2954, column: 3)
!4479 = distinct !DILexicalBlock(scope: !4458, file: !349, line: 2954, column: 3)
!4480 = !DILocation(line: 2954, column: 3, scope: !4479)
!4481 = !DILocation(line: 2955, column: 3, scope: !4482)
!4482 = distinct !DILexicalBlock(scope: !4483, file: !349, line: 2955, column: 3)
!4483 = distinct !DILexicalBlock(scope: !4458, file: !349, line: 2955, column: 3)
!4484 = !DILocation(line: 2955, column: 3, scope: !4483)
!4485 = !DILocation(line: 2958, column: 3, scope: !4458)
!4486 = distinct !DISubprogram(name: "copy_internal", scope: !349, file: !349, line: 1846, type: !411, scopeLine: 1855, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!4487 = !DILocalVariable(name: "src_name", arg: 1, scope: !4486, file: !349, line: 1846, type: !180)
!4488 = !DILocation(line: 1846, column: 28, scope: !4486)
!4489 = !DILocalVariable(name: "dst_name", arg: 2, scope: !4486, file: !349, line: 1846, type: !180)
!4490 = !DILocation(line: 1846, column: 50, scope: !4486)
!4491 = !DILocalVariable(name: "new_dst", arg: 3, scope: !4486, file: !349, line: 1847, type: !142)
!4492 = !DILocation(line: 1847, column: 21, scope: !4486)
!4493 = !DILocalVariable(name: "parent", arg: 4, scope: !4486, file: !349, line: 1848, type: !413)
!4494 = !DILocation(line: 1848, column: 35, scope: !4486)
!4495 = !DILocalVariable(name: "ancestors", arg: 5, scope: !4486, file: !349, line: 1849, type: !436)
!4496 = !DILocation(line: 1849, column: 33, scope: !4486)
!4497 = !DILocalVariable(name: "x", arg: 6, scope: !4486, file: !349, line: 1850, type: !356)
!4498 = !DILocation(line: 1850, column: 41, scope: !4486)
!4499 = !DILocalVariable(name: "command_line_arg", arg: 7, scope: !4486, file: !349, line: 1851, type: !142)
!4500 = !DILocation(line: 1851, column: 21, scope: !4486)
!4501 = !DILocalVariable(name: "first_dir_created_per_command_line_arg", arg: 8, scope: !4486, file: !349, line: 1852, type: !406)
!4502 = !DILocation(line: 1852, column: 22, scope: !4486)
!4503 = !DILocalVariable(name: "copy_into_self", arg: 9, scope: !4486, file: !349, line: 1853, type: !406)
!4504 = !DILocation(line: 1853, column: 22, scope: !4486)
!4505 = !DILocalVariable(name: "rename_succeeded", arg: 10, scope: !4486, file: !349, line: 1854, type: !406)
!4506 = !DILocation(line: 1854, column: 22, scope: !4486)
!4507 = !DILocalVariable(name: "src_sb", scope: !4486, file: !349, line: 1856, type: !415)
!4508 = !DILocation(line: 1856, column: 15, scope: !4486)
!4509 = !DILocalVariable(name: "dst_sb", scope: !4486, file: !349, line: 1857, type: !415)
!4510 = !DILocation(line: 1857, column: 15, scope: !4486)
!4511 = !DILocalVariable(name: "src_mode", scope: !4486, file: !349, line: 1858, type: !139)
!4512 = !DILocation(line: 1858, column: 10, scope: !4486)
!4513 = !DILocalVariable(name: "dst_mode", scope: !4486, file: !349, line: 1859, type: !139)
!4514 = !DILocation(line: 1859, column: 10, scope: !4486)
!4515 = !DILocalVariable(name: "dst_mode_bits", scope: !4486, file: !349, line: 1860, type: !139)
!4516 = !DILocation(line: 1860, column: 10, scope: !4486)
!4517 = !DILocalVariable(name: "omitted_permissions", scope: !4486, file: !349, line: 1861, type: !139)
!4518 = !DILocation(line: 1861, column: 10, scope: !4486)
!4519 = !DILocalVariable(name: "restore_dst_mode", scope: !4486, file: !349, line: 1862, type: !142)
!4520 = !DILocation(line: 1862, column: 8, scope: !4486)
!4521 = !DILocalVariable(name: "earlier_file", scope: !4486, file: !349, line: 1863, type: !9)
!4522 = !DILocation(line: 1863, column: 9, scope: !4486)
!4523 = !DILocalVariable(name: "dst_backup", scope: !4486, file: !349, line: 1864, type: !9)
!4524 = !DILocation(line: 1864, column: 9, scope: !4486)
!4525 = !DILocalVariable(name: "delayed_ok", scope: !4486, file: !349, line: 1865, type: !142)
!4526 = !DILocation(line: 1865, column: 8, scope: !4486)
!4527 = !DILocalVariable(name: "copied_as_regular", scope: !4486, file: !349, line: 1866, type: !142)
!4528 = !DILocation(line: 1866, column: 8, scope: !4486)
!4529 = !DILocalVariable(name: "dest_is_symlink", scope: !4486, file: !349, line: 1867, type: !142)
!4530 = !DILocation(line: 1867, column: 8, scope: !4486)
!4531 = !DILocalVariable(name: "have_dst_lstat", scope: !4486, file: !349, line: 1868, type: !142)
!4532 = !DILocation(line: 1868, column: 8, scope: !4486)
!4533 = !DILocation(line: 1870, column: 4, scope: !4486)
!4534 = !DILocation(line: 1870, column: 19, scope: !4486)
!4535 = !DILocalVariable(name: "rename_errno", scope: !4486, file: !349, line: 1872, type: !7)
!4536 = !DILocation(line: 1872, column: 7, scope: !4486)
!4537 = !DILocation(line: 1872, column: 22, scope: !4486)
!4538 = !DILocation(line: 1872, column: 25, scope: !4486)
!4539 = !{!2810, !2633, i64 52}
!4540 = !DILocation(line: 1873, column: 7, scope: !4541)
!4541 = distinct !DILexicalBlock(scope: !4486, file: !349, line: 1873, column: 7)
!4542 = !DILocation(line: 1873, column: 10, scope: !4541)
!4543 = !DILocation(line: 1873, column: 7, scope: !4486)
!4544 = !DILocation(line: 1875, column: 11, scope: !4545)
!4545 = distinct !DILexicalBlock(scope: !4546, file: !349, line: 1875, column: 11)
!4546 = distinct !DILexicalBlock(scope: !4541, file: !349, line: 1874, column: 5)
!4547 = !DILocation(line: 1875, column: 24, scope: !4545)
!4548 = !DILocation(line: 1875, column: 11, scope: !4546)
!4549 = !DILocation(line: 1876, column: 46, scope: !4545)
!4550 = !DILocation(line: 1876, column: 66, scope: !4545)
!4551 = !DILocation(line: 1876, column: 25, scope: !4545)
!4552 = !DILocation(line: 1878, column: 27, scope: !4545)
!4553 = !DILocation(line: 1876, column: 22, scope: !4545)
!4554 = !DILocation(line: 1876, column: 9, scope: !4545)
!4555 = !DILocation(line: 1879, column: 17, scope: !4546)
!4556 = !DILocation(line: 1879, column: 30, scope: !4546)
!4557 = !DILocation(line: 1879, column: 15, scope: !4546)
!4558 = !DILocation(line: 1880, column: 11, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4546, file: !349, line: 1880, column: 11)
!4560 = !DILocation(line: 1880, column: 11, scope: !4546)
!4561 = !DILocation(line: 1881, column: 29, scope: !4559)
!4562 = !DILocation(line: 1881, column: 10, scope: !4559)
!4563 = !DILocation(line: 1881, column: 27, scope: !4559)
!4564 = !DILocation(line: 1881, column: 9, scope: !4559)
!4565 = !DILocation(line: 1882, column: 5, scope: !4546)
!4566 = !DILocation(line: 1884, column: 7, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !4486, file: !349, line: 1884, column: 7)
!4568 = !DILocation(line: 1884, column: 20, scope: !4567)
!4569 = !DILocation(line: 1884, column: 7, scope: !4486)
!4570 = !DILocation(line: 1885, column: 10, scope: !4567)
!4571 = !DILocation(line: 1885, column: 13, scope: !4567)
!4572 = !{!2810, !2740, i64 49}
!4573 = !DILocation(line: 1886, column: 9, scope: !4567)
!4574 = !DILocation(line: 1886, column: 22, scope: !4567)
!4575 = !DILocation(line: 1886, column: 32, scope: !4567)
!4576 = !DILocation(line: 1886, column: 35, scope: !4567)
!4577 = !DILocation(line: 1886, column: 38, scope: !4567)
!4578 = !DILocation(line: 1886, column: 50, scope: !4567)
!4579 = !DILocalVariable(name: "name", scope: !4580, file: !349, line: 1888, type: !180)
!4580 = distinct !DILexicalBlock(scope: !4567, file: !349, line: 1887, column: 5)
!4581 = !DILocation(line: 1888, column: 19, scope: !4580)
!4582 = !DILocation(line: 1888, column: 26, scope: !4580)
!4583 = !DILocation(line: 1888, column: 39, scope: !4580)
!4584 = !DILocation(line: 1888, column: 46, scope: !4580)
!4585 = !DILocation(line: 1888, column: 57, scope: !4580)
!4586 = !DILocation(line: 1889, column: 11, scope: !4587)
!4587 = distinct !DILexicalBlock(scope: !4580, file: !349, line: 1889, column: 11)
!4588 = !DILocation(line: 1889, column: 36, scope: !4587)
!4589 = !DILocation(line: 1889, column: 11, scope: !4580)
!4590 = !DILocation(line: 1891, column: 21, scope: !4591)
!4591 = distinct !DILexicalBlock(scope: !4587, file: !349, line: 1890, column: 9)
!4592 = !DILocation(line: 1891, column: 28, scope: !4591)
!4593 = !DILocation(line: 1891, column: 49, scope: !4591)
!4594 = !DILocation(line: 1891, column: 11, scope: !4591)
!4595 = !DILocation(line: 1892, column: 11, scope: !4591)
!4596 = !DILocation(line: 1895, column: 25, scope: !4580)
!4597 = !DILocation(line: 1895, column: 16, scope: !4580)
!4598 = !DILocation(line: 1897, column: 11, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !4580, file: !349, line: 1897, column: 11)
!4600 = !DILocation(line: 1897, column: 30, scope: !4599)
!4601 = !DILocation(line: 1897, column: 34, scope: !4599)
!4602 = !DILocation(line: 1897, column: 37, scope: !4599)
!4603 = !DILocation(line: 1897, column: 11, scope: !4580)
!4604 = !DILocation(line: 1899, column: 26, scope: !4605)
!4605 = distinct !DILexicalBlock(scope: !4599, file: !349, line: 1898, column: 9)
!4606 = !DILocation(line: 1899, column: 29, scope: !4605)
!4607 = !DILocation(line: 1899, column: 24, scope: !4605)
!4608 = !DILocation(line: 1900, column: 20, scope: !4605)
!4609 = !DILocation(line: 1901, column: 20, scope: !4605)
!4610 = !DILocation(line: 1902, column: 18, scope: !4605)
!4611 = !DILocation(line: 1899, column: 11, scope: !4605)
!4612 = !DILocation(line: 1903, column: 11, scope: !4605)
!4613 = !DILocation(line: 1905, column: 5, scope: !4580)
!4614 = !DILocation(line: 1918, column: 7, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4486, file: !349, line: 1918, column: 7)
!4616 = !DILocation(line: 1918, column: 24, scope: !4615)
!4617 = !DILocation(line: 1918, column: 27, scope: !4615)
!4618 = !DILocation(line: 1918, column: 30, scope: !4615)
!4619 = !DILocation(line: 1918, column: 7, scope: !4486)
!4620 = !DILocation(line: 1920, column: 14, scope: !4621)
!4621 = distinct !DILexicalBlock(scope: !4622, file: !349, line: 1920, column: 12)
!4622 = distinct !DILexicalBlock(scope: !4615, file: !349, line: 1919, column: 5)
!4623 = !DILocation(line: 1921, column: 12, scope: !4621)
!4624 = !DILocation(line: 1921, column: 15, scope: !4621)
!4625 = !DILocation(line: 1921, column: 18, scope: !4621)
!4626 = !DILocation(line: 1921, column: 30, scope: !4621)
!4627 = !DILocation(line: 1922, column: 12, scope: !4621)
!4628 = !DILocation(line: 1922, column: 26, scope: !4621)
!4629 = !DILocation(line: 1922, column: 29, scope: !4621)
!4630 = !DILocation(line: 1922, column: 39, scope: !4621)
!4631 = !DILocation(line: 1922, column: 15, scope: !4621)
!4632 = !DILocation(line: 1920, column: 12, scope: !4622)
!4633 = !DILocation(line: 1924, column: 24, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4621, file: !349, line: 1923, column: 9)
!4635 = !DILocation(line: 1925, column: 18, scope: !4634)
!4636 = !DILocation(line: 1924, column: 11, scope: !4634)
!4637 = !DILocation(line: 1926, column: 11, scope: !4634)
!4638 = !DILocation(line: 1929, column: 20, scope: !4622)
!4639 = !DILocation(line: 1929, column: 23, scope: !4622)
!4640 = !DILocation(line: 1929, column: 33, scope: !4622)
!4641 = !DILocation(line: 1929, column: 7, scope: !4622)
!4642 = !DILocation(line: 1930, column: 5, scope: !4622)
!4643 = !DILocalVariable(name: "dereference", scope: !4486, file: !349, line: 1932, type: !142)
!4644 = !DILocation(line: 1932, column: 8, scope: !4486)
!4645 = !DILocation(line: 1932, column: 42, scope: !4486)
!4646 = !DILocation(line: 1932, column: 45, scope: !4486)
!4647 = !DILocation(line: 1932, column: 22, scope: !4486)
!4648 = !DILocation(line: 1934, column: 8, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !4486, file: !349, line: 1934, column: 7)
!4650 = !DILocation(line: 1934, column: 7, scope: !4486)
!4651 = !DILocation(line: 1936, column: 14, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4653, file: !349, line: 1936, column: 11)
!4653 = distinct !DILexicalBlock(scope: !4649, file: !349, line: 1935, column: 5)
!4654 = !DILocation(line: 1936, column: 27, scope: !4652)
!4655 = !DILocation(line: 1936, column: 37, scope: !4652)
!4656 = !DILocation(line: 1936, column: 40, scope: !4652)
!4657 = !DILocation(line: 1936, column: 43, scope: !4652)
!4658 = !DILocation(line: 1936, column: 55, scope: !4652)
!4659 = !DILocation(line: 1936, column: 11, scope: !4653)
!4660 = !DILocalVariable(name: "use_lstat", scope: !4661, file: !349, line: 1944, type: !142)
!4661 = distinct !DILexicalBlock(scope: !4652, file: !349, line: 1937, column: 9)
!4662 = !DILocation(line: 1944, column: 16, scope: !4661)
!4663 = !DILocation(line: 1945, column: 19, scope: !4661)
!4664 = !DILocation(line: 1946, column: 17, scope: !4661)
!4665 = !DILocation(line: 1946, column: 23, scope: !4661)
!4666 = !DILocation(line: 1946, column: 26, scope: !4661)
!4667 = !DILocation(line: 1947, column: 21, scope: !4661)
!4668 = !DILocation(line: 1947, column: 24, scope: !4661)
!4669 = !DILocation(line: 1947, column: 43, scope: !4661)
!4670 = !DILocation(line: 1947, column: 46, scope: !4661)
!4671 = !DILocation(line: 1948, column: 16, scope: !4661)
!4672 = !DILocation(line: 1948, column: 19, scope: !4661)
!4673 = !DILocation(line: 1948, column: 22, scope: !4661)
!4674 = !DILocation(line: 1948, column: 32, scope: !4661)
!4675 = !DILocation(line: 1948, column: 35, scope: !4661)
!4676 = !DILocation(line: 1948, column: 38, scope: !4661)
!4677 = !DILocation(line: 1948, column: 52, scope: !4661)
!4678 = !DILocation(line: 1948, column: 55, scope: !4661)
!4679 = !DILocation(line: 1948, column: 58, scope: !4661)
!4680 = !DILocation(line: 1949, column: 16, scope: !4661)
!4681 = !DILocation(line: 1949, column: 19, scope: !4661)
!4682 = !DILocation(line: 1949, column: 22, scope: !4661)
!4683 = !DILocation(line: 1949, column: 34, scope: !4661)
!4684 = !DILocation(line: 1950, column: 16, scope: !4661)
!4685 = !DILocation(line: 1950, column: 19, scope: !4661)
!4686 = !DILocation(line: 1950, column: 22, scope: !4661)
!4687 = !DILocalVariable(name: "fstatat_flags", scope: !4661, file: !349, line: 1951, type: !7)
!4688 = !DILocation(line: 1951, column: 15, scope: !4661)
!4689 = !DILocation(line: 1951, column: 31, scope: !4661)
!4690 = !DILocation(line: 1952, column: 34, scope: !4691)
!4691 = distinct !DILexicalBlock(scope: !4661, file: !349, line: 1952, column: 15)
!4692 = !DILocation(line: 1952, column: 53, scope: !4691)
!4693 = !DILocation(line: 1952, column: 15, scope: !4691)
!4694 = !DILocation(line: 1952, column: 68, scope: !4691)
!4695 = !DILocation(line: 1952, column: 15, scope: !4661)
!4696 = !DILocation(line: 1954, column: 32, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4691, file: !349, line: 1953, column: 13)
!4698 = !DILocation(line: 1954, column: 30, scope: !4697)
!4699 = !DILocation(line: 1955, column: 28, scope: !4697)
!4700 = !DILocation(line: 1956, column: 13, scope: !4697)
!4701 = !DILocation(line: 1959, column: 19, scope: !4702)
!4702 = distinct !DILexicalBlock(scope: !4703, file: !349, line: 1959, column: 19)
!4703 = distinct !DILexicalBlock(scope: !4691, file: !349, line: 1958, column: 13)
!4704 = !DILocation(line: 1959, column: 25, scope: !4702)
!4705 = !DILocation(line: 1959, column: 34, scope: !4702)
!4706 = !DILocation(line: 1959, column: 37, scope: !4702)
!4707 = !DILocation(line: 1959, column: 40, scope: !4702)
!4708 = !DILocation(line: 1959, column: 19, scope: !4703)
!4709 = !DILocation(line: 1961, column: 24, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4702, file: !349, line: 1961, column: 24)
!4711 = !DILocation(line: 1961, column: 30, scope: !4710)
!4712 = !DILocation(line: 1961, column: 24, scope: !4702)
!4713 = !DILocation(line: 1963, column: 29, scope: !4714)
!4714 = distinct !DILexicalBlock(scope: !4710, file: !349, line: 1962, column: 17)
!4715 = !DILocation(line: 1963, column: 36, scope: !4714)
!4716 = !DILocation(line: 1963, column: 57, scope: !4714)
!4717 = !DILocation(line: 1963, column: 19, scope: !4714)
!4718 = !DILocation(line: 1964, column: 19, scope: !4714)
!4719 = !DILocation(line: 1967, column: 25, scope: !4710)
!4720 = !DILocation(line: 1969, column: 9, scope: !4661)
!4721 = !DILocation(line: 1971, column: 11, scope: !4722)
!4722 = distinct !DILexicalBlock(scope: !4653, file: !349, line: 1971, column: 11)
!4723 = !DILocation(line: 1971, column: 24, scope: !4722)
!4724 = !DILocation(line: 1971, column: 11, scope: !4653)
!4725 = !DILocalVariable(name: "return_now", scope: !4726, file: !349, line: 1973, type: !142)
!4726 = distinct !DILexicalBlock(scope: !4722, file: !349, line: 1972, column: 9)
!4727 = !DILocation(line: 1973, column: 16, scope: !4726)
!4728 = !DILocation(line: 1975, column: 15, scope: !4729)
!4729 = distinct !DILexicalBlock(scope: !4726, file: !349, line: 1975, column: 15)
!4730 = !DILocation(line: 1975, column: 18, scope: !4729)
!4731 = !DILocation(line: 1975, column: 30, scope: !4729)
!4732 = !DILocation(line: 1976, column: 15, scope: !4729)
!4733 = !DILocation(line: 1976, column: 34, scope: !4729)
!4734 = !DILocation(line: 1976, column: 53, scope: !4729)
!4735 = !DILocation(line: 1977, column: 34, scope: !4729)
!4736 = !DILocation(line: 1976, column: 20, scope: !4729)
!4737 = !DILocation(line: 1975, column: 15, scope: !4726)
!4738 = !DILocation(line: 1979, column: 28, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4729, file: !349, line: 1978, column: 13)
!4740 = !DILocation(line: 1980, column: 22, scope: !4739)
!4741 = !DILocation(line: 1980, column: 47, scope: !4739)
!4742 = !DILocation(line: 1979, column: 15, scope: !4739)
!4743 = !DILocation(line: 1981, column: 15, scope: !4739)
!4744 = !DILocation(line: 1984, column: 15, scope: !4745)
!4745 = distinct !DILexicalBlock(scope: !4726, file: !349, line: 1984, column: 15)
!4746 = !DILocation(line: 1984, column: 18, scope: !4745)
!4747 = !DILocation(line: 1984, column: 25, scope: !4745)
!4748 = !DILocation(line: 1984, column: 29, scope: !4745)
!4749 = !DILocation(line: 1984, column: 15, scope: !4726)
!4750 = !DILocalVariable(name: "options", scope: !4751, file: !349, line: 1990, type: !7)
!4751 = distinct !DILexicalBlock(scope: !4745, file: !349, line: 1985, column: 13)
!4752 = !DILocation(line: 1990, column: 19, scope: !4751)
!4753 = !DILocation(line: 1990, column: 31, scope: !4751)
!4754 = !DILocation(line: 1990, column: 34, scope: !4751)
!4755 = !DILocation(line: 1991, column: 31, scope: !4751)
!4756 = !DILocation(line: 1991, column: 37, scope: !4751)
!4757 = !DILocation(line: 1991, column: 40, scope: !4751)
!4758 = !DILocation(line: 1992, column: 37, scope: !4751)
!4759 = !DILocation(line: 1992, column: 47, scope: !4751)
!4760 = !{!2912, !2913, i64 0}
!4761 = !DILocation(line: 1992, column: 64, scope: !4751)
!4762 = !DILocation(line: 1992, column: 54, scope: !4751)
!4763 = !DILocation(line: 0, scope: !4751)
!4764 = !DILocation(line: 1991, column: 34, scope: !4751)
!4765 = !DILocation(line: 1990, column: 30, scope: !4751)
!4766 = !DILocation(line: 1996, column: 34, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !4751, file: !349, line: 1996, column: 19)
!4768 = !DILocation(line: 1996, column: 62, scope: !4767)
!4769 = !DILocation(line: 1996, column: 24, scope: !4767)
!4770 = !DILocation(line: 1996, column: 21, scope: !4767)
!4771 = !DILocation(line: 1996, column: 19, scope: !4751)
!4772 = !DILocation(line: 2002, column: 23, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4774, file: !349, line: 2002, column: 23)
!4774 = distinct !DILexicalBlock(scope: !4767, file: !349, line: 1997, column: 17)
!4775 = !DILocation(line: 2002, column: 23, scope: !4774)
!4776 = !DILocation(line: 2003, column: 22, scope: !4773)
!4777 = !DILocation(line: 2003, column: 39, scope: !4773)
!4778 = !DILocation(line: 2003, column: 21, scope: !4773)
!4779 = !DILocation(line: 2010, column: 51, scope: !4774)
!4780 = !DILocation(line: 2010, column: 68, scope: !4774)
!4781 = !{!2912, !2913, i64 8}
!4782 = !DILocation(line: 2011, column: 58, scope: !4774)
!4783 = !DILocation(line: 2010, column: 34, scope: !4774)
!4784 = !DILocation(line: 2010, column: 32, scope: !4774)
!4785 = !DILocation(line: 2012, column: 23, scope: !4786)
!4786 = distinct !DILexicalBlock(scope: !4774, file: !349, line: 2012, column: 23)
!4787 = !DILocation(line: 2012, column: 23, scope: !4774)
!4788 = !DILocation(line: 2016, column: 47, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4790, file: !349, line: 2016, column: 27)
!4790 = distinct !DILexicalBlock(scope: !4786, file: !349, line: 2013, column: 21)
!4791 = !DILocation(line: 2016, column: 61, scope: !4789)
!4792 = !DILocation(line: 2017, column: 47, scope: !4789)
!4793 = !DILocation(line: 2017, column: 50, scope: !4789)
!4794 = !DILocation(line: 2017, column: 59, scope: !4789)
!4795 = !DILocation(line: 2016, column: 29, scope: !4789)
!4796 = !DILocation(line: 2016, column: 27, scope: !4790)
!4797 = !DILocation(line: 2019, column: 27, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4789, file: !349, line: 2018, column: 25)
!4799 = !DILocation(line: 2021, column: 21, scope: !4790)
!4800 = !DILocation(line: 2023, column: 19, scope: !4774)
!4801 = !DILocation(line: 2025, column: 13, scope: !4751)
!4802 = !DILocation(line: 2034, column: 15, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4726, file: !349, line: 2034, column: 15)
!4804 = !DILocation(line: 2034, column: 18, scope: !4803)
!4805 = !DILocation(line: 2034, column: 15, scope: !4726)
!4806 = !DILocation(line: 2036, column: 33, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4808, file: !349, line: 2036, column: 19)
!4808 = distinct !DILexicalBlock(scope: !4803, file: !349, line: 2035, column: 13)
!4809 = !DILocation(line: 2036, column: 36, scope: !4807)
!4810 = !DILocation(line: 2036, column: 19, scope: !4807)
!4811 = !DILocation(line: 2036, column: 19, scope: !4808)
!4812 = !DILocation(line: 2040, column: 23, scope: !4813)
!4813 = distinct !DILexicalBlock(scope: !4814, file: !349, line: 2040, column: 23)
!4814 = distinct !DILexicalBlock(scope: !4807, file: !349, line: 2037, column: 17)
!4815 = !DILocation(line: 2040, column: 23, scope: !4814)
!4816 = !DILocation(line: 2041, column: 22, scope: !4813)
!4817 = !DILocation(line: 2041, column: 39, scope: !4813)
!4818 = !DILocation(line: 2041, column: 21, scope: !4813)
!4819 = !DILocation(line: 2042, column: 19, scope: !4814)
!4820 = !DILocation(line: 2044, column: 13, scope: !4808)
!4821 = !DILocation(line: 2047, column: 21, scope: !4822)
!4822 = distinct !DILexicalBlock(scope: !4823, file: !349, line: 2047, column: 19)
!4823 = distinct !DILexicalBlock(scope: !4803, file: !349, line: 2046, column: 13)
!4824 = !DILocation(line: 2048, column: 19, scope: !4822)
!4825 = !DILocation(line: 2048, column: 23, scope: !4822)
!4826 = !DILocation(line: 2048, column: 26, scope: !4822)
!4827 = !DILocation(line: 2048, column: 38, scope: !4822)
!4828 = !DILocation(line: 2049, column: 23, scope: !4822)
!4829 = !DILocation(line: 2049, column: 27, scope: !4822)
!4830 = !DILocation(line: 2049, column: 30, scope: !4822)
!4831 = !DILocation(line: 2049, column: 42, scope: !4822)
!4832 = !DILocation(line: 2050, column: 27, scope: !4822)
!4833 = !DILocation(line: 2050, column: 46, scope: !4822)
!4834 = !DILocation(line: 2050, column: 49, scope: !4822)
!4835 = !DILocation(line: 2050, column: 32, scope: !4822)
!4836 = !DILocation(line: 2047, column: 19, scope: !4823)
!4837 = !DILocation(line: 2051, column: 17, scope: !4822)
!4838 = !DILocation(line: 2054, column: 15, scope: !4839)
!4839 = distinct !DILexicalBlock(scope: !4726, file: !349, line: 2054, column: 15)
!4840 = !DILocation(line: 2054, column: 15, scope: !4726)
!4841 = !DILocation(line: 2055, column: 13, scope: !4839)
!4842 = !DILocation(line: 2057, column: 16, scope: !4843)
!4843 = distinct !DILexicalBlock(scope: !4726, file: !349, line: 2057, column: 15)
!4844 = !DILocation(line: 2057, column: 15, scope: !4726)
!4845 = !DILocation(line: 2059, column: 19, scope: !4846)
!4846 = distinct !DILexicalBlock(scope: !4847, file: !349, line: 2059, column: 19)
!4847 = distinct !DILexicalBlock(scope: !4843, file: !349, line: 2058, column: 13)
!4848 = !DILocation(line: 2059, column: 19, scope: !4847)
!4849 = !DILocation(line: 2061, column: 23, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4851, file: !349, line: 2061, column: 23)
!4851 = distinct !DILexicalBlock(scope: !4846, file: !349, line: 2060, column: 17)
!4852 = !DILocation(line: 2061, column: 26, scope: !4850)
!4853 = !DILocation(line: 2061, column: 36, scope: !4850)
!4854 = !DILocation(line: 2061, column: 39, scope: !4850)
!4855 = !DILocation(line: 2061, column: 42, scope: !4850)
!4856 = !DILocation(line: 2061, column: 54, scope: !4850)
!4857 = !DILocation(line: 2061, column: 23, scope: !4851)
!4858 = !DILocation(line: 2065, column: 21, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4850, file: !349, line: 2062, column: 21)
!4860 = !DILocation(line: 2069, column: 24, scope: !4861)
!4861 = distinct !DILexicalBlock(scope: !4850, file: !349, line: 2067, column: 21)
!4862 = !DILocation(line: 2070, column: 30, scope: !4861)
!4863 = !DILocation(line: 2070, column: 55, scope: !4861)
!4864 = !DILocation(line: 2068, column: 23, scope: !4861)
!4865 = !DILocation(line: 2071, column: 23, scope: !4861)
!4866 = !DILocation(line: 2073, column: 17, scope: !4851)
!4867 = !DILocation(line: 2082, column: 19, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4847, file: !349, line: 2082, column: 19)
!4869 = !DILocation(line: 2083, column: 19, scope: !4868)
!4870 = !DILocation(line: 2083, column: 22, scope: !4868)
!4871 = !DILocation(line: 2083, column: 25, scope: !4868)
!4872 = !DILocation(line: 2083, column: 37, scope: !4868)
!4873 = !DILocation(line: 2084, column: 19, scope: !4868)
!4874 = !DILocation(line: 2084, column: 33, scope: !4868)
!4875 = !DILocation(line: 2084, column: 36, scope: !4868)
!4876 = !DILocation(line: 2084, column: 47, scope: !4868)
!4877 = !DILocation(line: 2084, column: 22, scope: !4868)
!4878 = !DILocation(line: 2082, column: 19, scope: !4847)
!4879 = !DILocation(line: 2087, column: 26, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4868, file: !349, line: 2085, column: 17)
!4881 = !DILocation(line: 2088, column: 26, scope: !4880)
!4882 = !DILocation(line: 2088, column: 51, scope: !4880)
!4883 = !DILocation(line: 2086, column: 19, scope: !4880)
!4884 = !DILocation(line: 2089, column: 19, scope: !4880)
!4885 = !DILocation(line: 2091, column: 13, scope: !4847)
!4886 = !DILocation(line: 2093, column: 16, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4726, file: !349, line: 2093, column: 15)
!4888 = !DILocation(line: 2093, column: 15, scope: !4726)
!4889 = !DILocation(line: 2095, column: 19, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4891, file: !349, line: 2095, column: 19)
!4891 = distinct !DILexicalBlock(scope: !4887, file: !349, line: 2094, column: 13)
!4892 = !DILocation(line: 2095, column: 19, scope: !4891)
!4893 = !DILocation(line: 2097, column: 23, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4895, file: !349, line: 2097, column: 23)
!4895 = distinct !DILexicalBlock(scope: !4890, file: !349, line: 2096, column: 17)
!4896 = !DILocation(line: 2097, column: 26, scope: !4894)
!4897 = !DILocation(line: 2097, column: 36, scope: !4894)
!4898 = !DILocation(line: 2097, column: 39, scope: !4894)
!4899 = !DILocation(line: 2097, column: 42, scope: !4894)
!4900 = !DILocation(line: 2097, column: 54, scope: !4894)
!4901 = !DILocation(line: 2097, column: 23, scope: !4895)
!4902 = !DILocation(line: 2101, column: 21, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4894, file: !349, line: 2098, column: 21)
!4904 = !DILocation(line: 2105, column: 26, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4894, file: !349, line: 2103, column: 21)
!4906 = !DILocation(line: 2106, column: 30, scope: !4905)
!4907 = !DILocation(line: 2104, column: 23, scope: !4905)
!4908 = !DILocation(line: 2107, column: 23, scope: !4905)
!4909 = !DILocation(line: 2109, column: 17, scope: !4895)
!4910 = !DILocation(line: 2110, column: 13, scope: !4891)
!4911 = !DILocation(line: 2112, column: 15, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4726, file: !349, line: 2112, column: 15)
!4913 = !DILocation(line: 2112, column: 18, scope: !4912)
!4914 = !DILocation(line: 2112, column: 15, scope: !4726)
!4915 = !DILocation(line: 2115, column: 19, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4917, file: !349, line: 2115, column: 19)
!4917 = distinct !DILexicalBlock(scope: !4912, file: !349, line: 2113, column: 13)
!4918 = !DILocation(line: 2115, column: 44, scope: !4916)
!4919 = !DILocation(line: 2115, column: 48, scope: !4916)
!4920 = !DILocation(line: 2116, column: 19, scope: !4916)
!4921 = !DILocation(line: 2116, column: 22, scope: !4916)
!4922 = !DILocation(line: 2116, column: 25, scope: !4916)
!4923 = !DILocation(line: 2116, column: 37, scope: !4916)
!4924 = !DILocation(line: 2115, column: 19, scope: !4917)
!4925 = !DILocation(line: 2119, column: 24, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4916, file: !349, line: 2117, column: 17)
!4927 = !DILocation(line: 2120, column: 26, scope: !4926)
!4928 = !DILocation(line: 2120, column: 50, scope: !4926)
!4929 = !DILocation(line: 2118, column: 19, scope: !4926)
!4930 = !DILocation(line: 2121, column: 19, scope: !4926)
!4931 = !DILocation(line: 2123, column: 13, scope: !4917)
!4932 = !DILocalVariable(name: "srcbase", scope: !4726, file: !349, line: 2125, type: !180)
!4933 = !DILocation(line: 2125, column: 23, scope: !4726)
!4934 = !DILocation(line: 2126, column: 15, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4726, file: !349, line: 2126, column: 15)
!4936 = !DILocation(line: 2126, column: 18, scope: !4935)
!4937 = !DILocation(line: 2126, column: 30, scope: !4935)
!4938 = !DILocation(line: 2129, column: 15, scope: !4935)
!4939 = !DILocation(line: 2129, column: 61, scope: !4935)
!4940 = !DILocation(line: 2129, column: 45, scope: !4935)
!4941 = !DILocation(line: 2129, column: 43, scope: !4935)
!4942 = !DILocation(line: 2129, column: 20, scope: !4935)
!4943 = !DILocation(line: 2135, column: 15, scope: !4935)
!4944 = !DILocation(line: 2135, column: 19, scope: !4935)
!4945 = !DILocation(line: 2135, column: 22, scope: !4935)
!4946 = !DILocation(line: 2135, column: 32, scope: !4935)
!4947 = !DILocation(line: 2135, column: 37, scope: !4935)
!4948 = !DILocation(line: 2126, column: 15, scope: !4726)
!4949 = !DILocation(line: 2141, column: 19, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4951, file: !349, line: 2141, column: 19)
!4951 = distinct !DILexicalBlock(scope: !4935, file: !349, line: 2136, column: 13)
!4952 = !DILocation(line: 2141, column: 22, scope: !4950)
!4953 = !DILocation(line: 2141, column: 34, scope: !4950)
!4954 = !DILocation(line: 2142, column: 19, scope: !4950)
!4955 = !DILocation(line: 2142, column: 44, scope: !4950)
!4956 = !DILocation(line: 2142, column: 62, scope: !4950)
!4957 = !DILocation(line: 2142, column: 22, scope: !4950)
!4958 = !DILocation(line: 2141, column: 19, scope: !4951)
!4959 = !DILocalVariable(name: "fmt", scope: !4960, file: !349, line: 2144, type: !180)
!4960 = distinct !DILexicalBlock(scope: !4950, file: !349, line: 2143, column: 17)
!4961 = !DILocation(line: 2144, column: 31, scope: !4960)
!4962 = !DILocation(line: 2145, column: 26, scope: !4960)
!4963 = !DILocation(line: 2145, column: 29, scope: !4960)
!4964 = !DILocation(line: 2146, column: 20, scope: !4960)
!4965 = !DILocation(line: 2147, column: 20, scope: !4960)
!4966 = !DILocation(line: 2145, column: 23, scope: !4960)
!4967 = !DILocation(line: 2148, column: 32, scope: !4960)
!4968 = !DILocation(line: 2149, column: 26, scope: !4960)
!4969 = !DILocation(line: 2150, column: 26, scope: !4960)
!4970 = !DILocation(line: 2148, column: 19, scope: !4960)
!4971 = !DILocation(line: 2151, column: 19, scope: !4960)
!4972 = !DILocalVariable(name: "tmp_backup", scope: !4951, file: !349, line: 2154, type: !9)
!4973 = !DILocation(line: 2154, column: 21, scope: !4951)
!4974 = !DILocation(line: 2154, column: 64, scope: !4951)
!4975 = !DILocation(line: 2155, column: 54, scope: !4951)
!4976 = !DILocation(line: 2155, column: 57, scope: !4951)
!4977 = !DILocation(line: 2154, column: 34, scope: !4951)
!4978 = !DILocation(line: 2162, column: 19, scope: !4979)
!4979 = distinct !DILexicalBlock(scope: !4951, file: !349, line: 2162, column: 19)
!4980 = !DILocation(line: 2162, column: 19, scope: !4951)
!4981 = !DILocation(line: 2164, column: 19, scope: !4982)
!4982 = distinct !DILexicalBlock(scope: !4979, file: !349, line: 2163, column: 17)
!4983 = !DILocalVariable(name: "__old", scope: !4984, file: !349, line: 2164, type: !180)
!4984 = distinct !DILexicalBlock(scope: !4985, file: !349, line: 2164, column: 19)
!4985 = distinct !DILexicalBlock(scope: !4982, file: !349, line: 2164, column: 19)
!4986 = !DILocation(line: 2164, column: 19, scope: !4984)
!4987 = !DILocalVariable(name: "__len", scope: !4984, file: !349, line: 2164, type: !55)
!4988 = !DILocalVariable(name: "__new", scope: !4984, file: !349, line: 2164, type: !9)
!4989 = !DILocation(line: 2164, column: 19, scope: !4985)
!4990 = !DILocation(line: 2165, column: 25, scope: !4982)
!4991 = !DILocation(line: 2165, column: 19, scope: !4982)
!4992 = !DILocation(line: 2166, column: 17, scope: !4982)
!4993 = !DILocation(line: 2167, column: 24, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !4979, file: !349, line: 2167, column: 24)
!4995 = !DILocation(line: 2167, column: 30, scope: !4994)
!4996 = !DILocation(line: 2167, column: 24, scope: !4979)
!4997 = !DILocation(line: 2169, column: 29, scope: !4998)
!4998 = distinct !DILexicalBlock(scope: !4994, file: !349, line: 2168, column: 17)
!4999 = !DILocation(line: 2169, column: 36, scope: !4998)
!5000 = !DILocation(line: 2169, column: 59, scope: !4998)
!5001 = !DILocation(line: 2169, column: 19, scope: !4998)
!5002 = !DILocation(line: 2170, column: 19, scope: !4998)
!5003 = !DILocation(line: 2172, column: 23, scope: !4951)
!5004 = !DILocation(line: 2173, column: 13, scope: !4951)
!5005 = !DILocation(line: 2174, column: 22, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !4935, file: !349, line: 2174, column: 20)
!5007 = !DILocation(line: 2176, column: 20, scope: !5006)
!5008 = !DILocation(line: 2176, column: 25, scope: !5006)
!5009 = !DILocation(line: 2176, column: 28, scope: !5006)
!5010 = !DILocation(line: 2177, column: 20, scope: !5006)
!5011 = !DILocation(line: 2177, column: 24, scope: !5006)
!5012 = !DILocation(line: 2177, column: 27, scope: !5006)
!5013 = !DILocation(line: 2178, column: 24, scope: !5006)
!5014 = !DILocation(line: 2178, column: 28, scope: !5006)
!5015 = !DILocation(line: 2178, column: 31, scope: !5006)
!5016 = !DILocation(line: 2178, column: 46, scope: !5006)
!5017 = !DILocation(line: 2178, column: 60, scope: !5006)
!5018 = !{!2912, !2913, i64 16}
!5019 = !DILocation(line: 2178, column: 51, scope: !5006)
!5020 = !DILocation(line: 2179, column: 24, scope: !5006)
!5021 = !DILocation(line: 2179, column: 28, scope: !5006)
!5022 = !DILocation(line: 2179, column: 31, scope: !5006)
!5023 = !DILocation(line: 2179, column: 43, scope: !5006)
!5024 = !DILocation(line: 2180, column: 28, scope: !5006)
!5025 = !DILocation(line: 2180, column: 33, scope: !5006)
!5026 = !DILocation(line: 2174, column: 20, scope: !4935)
!5027 = !DILocation(line: 2183, column: 27, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !5029, file: !349, line: 2183, column: 19)
!5029 = distinct !DILexicalBlock(scope: !5006, file: !349, line: 2182, column: 13)
!5030 = !DILocation(line: 2183, column: 19, scope: !5028)
!5031 = !DILocation(line: 2183, column: 37, scope: !5028)
!5032 = !DILocation(line: 2183, column: 42, scope: !5028)
!5033 = !DILocation(line: 2183, column: 45, scope: !5028)
!5034 = !DILocation(line: 2183, column: 51, scope: !5028)
!5035 = !DILocation(line: 2183, column: 19, scope: !5029)
!5036 = !DILocation(line: 2185, column: 29, scope: !5037)
!5037 = distinct !DILexicalBlock(scope: !5028, file: !349, line: 2184, column: 17)
!5038 = !DILocation(line: 2185, column: 36, scope: !5037)
!5039 = !DILocation(line: 2185, column: 59, scope: !5037)
!5040 = !DILocation(line: 2185, column: 19, scope: !5037)
!5041 = !DILocation(line: 2186, column: 19, scope: !5037)
!5042 = !DILocation(line: 2188, column: 23, scope: !5029)
!5043 = !DILocation(line: 2189, column: 19, scope: !5044)
!5044 = distinct !DILexicalBlock(scope: !5029, file: !349, line: 2189, column: 19)
!5045 = !DILocation(line: 2189, column: 22, scope: !5044)
!5046 = !DILocation(line: 2189, column: 19, scope: !5029)
!5047 = !DILocation(line: 2190, column: 25, scope: !5044)
!5048 = !DILocation(line: 2190, column: 44, scope: !5044)
!5049 = !DILocation(line: 2190, column: 17, scope: !5044)
!5050 = !DILocation(line: 2191, column: 13, scope: !5029)
!5051 = !DILocation(line: 2192, column: 9, scope: !4726)
!5052 = !DILocation(line: 2193, column: 5, scope: !4653)
!5053 = !DILocation(line: 2197, column: 7, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !4486, file: !349, line: 2197, column: 7)
!5055 = !DILocation(line: 2198, column: 7, scope: !5054)
!5056 = !DILocation(line: 2198, column: 10, scope: !5054)
!5057 = !DILocation(line: 2198, column: 13, scope: !5054)
!5058 = !DILocation(line: 2199, column: 7, scope: !5054)
!5059 = !DILocation(line: 2199, column: 12, scope: !5054)
!5060 = !DILocation(line: 2199, column: 15, scope: !5054)
!5061 = !DILocation(line: 2200, column: 7, scope: !5054)
!5062 = !DILocation(line: 2200, column: 10, scope: !5054)
!5063 = !DILocation(line: 2200, column: 13, scope: !5054)
!5064 = !DILocation(line: 2200, column: 25, scope: !5054)
!5065 = !DILocation(line: 2197, column: 7, scope: !4486)
!5066 = !DILocalVariable(name: "lstat_ok", scope: !5067, file: !349, line: 2202, type: !142)
!5067 = distinct !DILexicalBlock(scope: !5054, file: !349, line: 2201, column: 5)
!5068 = !DILocation(line: 2202, column: 12, scope: !5067)
!5069 = !DILocalVariable(name: "tmp_buf", scope: !5067, file: !349, line: 2203, type: !415)
!5070 = !DILocation(line: 2203, column: 19, scope: !5067)
!5071 = !DILocalVariable(name: "dst_lstat_sb", scope: !5067, file: !349, line: 2204, type: !444)
!5072 = !DILocation(line: 2204, column: 20, scope: !5067)
!5073 = !DILocation(line: 2208, column: 11, scope: !5074)
!5074 = distinct !DILexicalBlock(scope: !5067, file: !349, line: 2208, column: 11)
!5075 = !DILocation(line: 2208, column: 11, scope: !5067)
!5076 = !DILocation(line: 2209, column: 22, scope: !5074)
!5077 = !DILocation(line: 2209, column: 9, scope: !5074)
!5078 = !DILocation(line: 2212, column: 22, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !5080, file: !349, line: 2212, column: 15)
!5080 = distinct !DILexicalBlock(scope: !5074, file: !349, line: 2211, column: 9)
!5081 = !DILocation(line: 2212, column: 15, scope: !5079)
!5082 = !DILocation(line: 2212, column: 42, scope: !5079)
!5083 = !DILocation(line: 2212, column: 15, scope: !5080)
!5084 = !DILocation(line: 2213, column: 26, scope: !5079)
!5085 = !DILocation(line: 2213, column: 13, scope: !5079)
!5086 = !DILocation(line: 2215, column: 22, scope: !5079)
!5087 = !DILocation(line: 2219, column: 11, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !5067, file: !349, line: 2219, column: 11)
!5089 = !DILocation(line: 2220, column: 11, scope: !5088)
!5090 = !DILocation(line: 2220, column: 14, scope: !5088)
!5091 = !DILocation(line: 2221, column: 11, scope: !5088)
!5092 = !DILocation(line: 2221, column: 25, scope: !5088)
!5093 = !DILocation(line: 2221, column: 28, scope: !5088)
!5094 = !DILocation(line: 2221, column: 39, scope: !5088)
!5095 = !DILocation(line: 2221, column: 49, scope: !5088)
!5096 = !DILocation(line: 2221, column: 14, scope: !5088)
!5097 = !DILocation(line: 2219, column: 11, scope: !5067)
!5098 = !DILocation(line: 2224, column: 18, scope: !5099)
!5099 = distinct !DILexicalBlock(scope: !5088, file: !349, line: 2222, column: 9)
!5100 = !DILocation(line: 2225, column: 18, scope: !5099)
!5101 = !DILocation(line: 2225, column: 43, scope: !5099)
!5102 = !DILocation(line: 2223, column: 11, scope: !5099)
!5103 = !DILocation(line: 2226, column: 11, scope: !5099)
!5104 = !DILocation(line: 2228, column: 5, scope: !5067)
!5105 = !DILocation(line: 2234, column: 7, scope: !5106)
!5106 = distinct !DILexicalBlock(scope: !4486, file: !349, line: 2234, column: 7)
!5107 = !DILocation(line: 2234, column: 10, scope: !5106)
!5108 = !DILocation(line: 2234, column: 18, scope: !5106)
!5109 = !DILocation(line: 2234, column: 22, scope: !5106)
!5110 = !DILocation(line: 2234, column: 25, scope: !5106)
!5111 = !DILocation(line: 2234, column: 35, scope: !5106)
!5112 = !DILocation(line: 2234, column: 39, scope: !5106)
!5113 = !DILocation(line: 2234, column: 7, scope: !4486)
!5114 = !DILocation(line: 2235, column: 19, scope: !5106)
!5115 = !DILocation(line: 2235, column: 29, scope: !5106)
!5116 = !DILocation(line: 2235, column: 39, scope: !5106)
!5117 = !DILocation(line: 2235, column: 5, scope: !5106)
!5118 = !DILocation(line: 2267, column: 7, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !4486, file: !349, line: 2267, column: 7)
!5120 = !DILocation(line: 2267, column: 20, scope: !5119)
!5121 = !DILocation(line: 2267, column: 7, scope: !4486)
!5122 = !DILocation(line: 2268, column: 18, scope: !5119)
!5123 = !DILocation(line: 2268, column: 5, scope: !5119)
!5124 = !DILocation(line: 2269, column: 12, scope: !5125)
!5125 = distinct !DILexicalBlock(scope: !5119, file: !349, line: 2269, column: 12)
!5126 = !DILocation(line: 2269, column: 15, scope: !5125)
!5127 = !DILocation(line: 2269, column: 25, scope: !5125)
!5128 = !DILocation(line: 2269, column: 28, scope: !5125)
!5129 = !DILocation(line: 2269, column: 12, scope: !5119)
!5130 = !DILocation(line: 2271, column: 11, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5132, file: !349, line: 2271, column: 11)
!5132 = distinct !DILexicalBlock(scope: !5125, file: !349, line: 2270, column: 5)
!5133 = !DILocation(line: 2271, column: 11, scope: !5132)
!5134 = !DILocation(line: 2272, column: 41, scope: !5131)
!5135 = !DILocation(line: 2272, column: 58, scope: !5131)
!5136 = !DILocation(line: 2272, column: 73, scope: !5131)
!5137 = !DILocation(line: 2272, column: 24, scope: !5131)
!5138 = !DILocation(line: 2272, column: 22, scope: !5131)
!5139 = !DILocation(line: 2272, column: 9, scope: !5131)
!5140 = !DILocation(line: 2274, column: 51, scope: !5131)
!5141 = !DILocation(line: 2274, column: 66, scope: !5131)
!5142 = !DILocation(line: 2274, column: 24, scope: !5131)
!5143 = !DILocation(line: 2274, column: 22, scope: !5131)
!5144 = !DILocation(line: 2275, column: 5, scope: !5132)
!5145 = !DILocation(line: 2276, column: 12, scope: !5146)
!5146 = distinct !DILexicalBlock(scope: !5125, file: !349, line: 2276, column: 12)
!5147 = !DILocation(line: 2276, column: 15, scope: !5146)
!5148 = !DILocation(line: 2276, column: 25, scope: !5146)
!5149 = !DILocation(line: 2276, column: 35, scope: !5146)
!5150 = !DILocation(line: 2276, column: 44, scope: !5146)
!5151 = !DILocation(line: 2276, column: 12, scope: !5125)
!5152 = !DILocation(line: 2278, column: 49, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5146, file: !349, line: 2277, column: 5)
!5154 = !DILocation(line: 2278, column: 64, scope: !5153)
!5155 = !DILocation(line: 2278, column: 22, scope: !5153)
!5156 = !DILocation(line: 2278, column: 20, scope: !5153)
!5157 = !DILocation(line: 2279, column: 5, scope: !5153)
!5158 = !DILocation(line: 2280, column: 12, scope: !5159)
!5159 = distinct !DILexicalBlock(scope: !5146, file: !349, line: 2280, column: 12)
!5160 = !DILocation(line: 2280, column: 15, scope: !5159)
!5161 = !DILocation(line: 2281, column: 12, scope: !5159)
!5162 = !DILocation(line: 2281, column: 16, scope: !5159)
!5163 = !DILocation(line: 2281, column: 19, scope: !5159)
!5164 = !DILocation(line: 2282, column: 12, scope: !5159)
!5165 = !DILocation(line: 2282, column: 27, scope: !5159)
!5166 = !DILocation(line: 2282, column: 18, scope: !5159)
!5167 = !DILocation(line: 2283, column: 16, scope: !5159)
!5168 = !DILocation(line: 2283, column: 20, scope: !5159)
!5169 = !DILocation(line: 2284, column: 20, scope: !5159)
!5170 = !DILocation(line: 2284, column: 23, scope: !5159)
!5171 = !DILocation(line: 2284, column: 26, scope: !5159)
!5172 = !DILocation(line: 2284, column: 38, scope: !5159)
!5173 = !DILocation(line: 2285, column: 16, scope: !5159)
!5174 = !DILocation(line: 2285, column: 19, scope: !5159)
!5175 = !DILocation(line: 2285, column: 22, scope: !5159)
!5176 = !DILocation(line: 2285, column: 34, scope: !5159)
!5177 = !DILocation(line: 2280, column: 12, scope: !5146)
!5178 = !DILocation(line: 2287, column: 39, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5159, file: !349, line: 2286, column: 5)
!5180 = !DILocation(line: 2287, column: 56, scope: !5179)
!5181 = !DILocation(line: 2287, column: 71, scope: !5179)
!5182 = !DILocation(line: 2287, column: 22, scope: !5179)
!5183 = !DILocation(line: 2287, column: 20, scope: !5179)
!5184 = !DILocation(line: 2288, column: 5, scope: !5179)
!5185 = !DILocation(line: 2293, column: 7, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !4486, file: !349, line: 2293, column: 7)
!5187 = !DILocation(line: 2293, column: 7, scope: !4486)
!5188 = !DILocation(line: 2298, column: 11, scope: !5189)
!5189 = distinct !DILexicalBlock(scope: !5190, file: !349, line: 2298, column: 11)
!5190 = distinct !DILexicalBlock(scope: !5186, file: !349, line: 2294, column: 5)
!5191 = !DILocation(line: 2298, column: 11, scope: !5190)
!5192 = !DILocation(line: 2302, column: 26, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5194, file: !349, line: 2302, column: 15)
!5194 = distinct !DILexicalBlock(scope: !5189, file: !349, line: 2299, column: 9)
!5195 = !DILocation(line: 2302, column: 36, scope: !5193)
!5196 = !DILocation(line: 2302, column: 15, scope: !5193)
!5197 = !DILocation(line: 2302, column: 15, scope: !5194)
!5198 = !DILocation(line: 2304, column: 28, scope: !5199)
!5199 = distinct !DILexicalBlock(scope: !5193, file: !349, line: 2303, column: 13)
!5200 = !DILocation(line: 2305, column: 22, scope: !5199)
!5201 = !DILocation(line: 2306, column: 22, scope: !5199)
!5202 = !DILocation(line: 2304, column: 15, scope: !5199)
!5203 = !DILocation(line: 2307, column: 16, scope: !5199)
!5204 = !DILocation(line: 2307, column: 31, scope: !5199)
!5205 = !DILocation(line: 2308, column: 15, scope: !5199)
!5206 = !DILocation(line: 2310, column: 31, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5193, file: !349, line: 2310, column: 20)
!5208 = !DILocation(line: 2310, column: 41, scope: !5207)
!5209 = !DILocation(line: 2310, column: 20, scope: !5207)
!5210 = !DILocation(line: 2310, column: 20, scope: !5193)
!5211 = !DILocation(line: 2312, column: 28, scope: !5212)
!5212 = distinct !DILexicalBlock(scope: !5207, file: !349, line: 2311, column: 13)
!5213 = !DILocation(line: 2314, column: 22, scope: !5212)
!5214 = !DILocation(line: 2312, column: 15, scope: !5212)
!5215 = !DILocation(line: 2319, column: 19, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !5212, file: !349, line: 2319, column: 19)
!5217 = !DILocation(line: 2319, column: 22, scope: !5216)
!5218 = !DILocation(line: 2319, column: 32, scope: !5216)
!5219 = !DILocation(line: 2319, column: 35, scope: !5216)
!5220 = !DILocation(line: 2319, column: 19, scope: !5212)
!5221 = !DILocation(line: 2320, column: 18, scope: !5216)
!5222 = !DILocation(line: 2320, column: 35, scope: !5216)
!5223 = !DILocation(line: 2320, column: 17, scope: !5216)
!5224 = !DILocation(line: 2323, column: 15, scope: !5212)
!5225 = !DILocation(line: 2325, column: 20, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !5207, file: !349, line: 2325, column: 20)
!5227 = !DILocation(line: 2325, column: 23, scope: !5226)
!5228 = !DILocation(line: 2325, column: 35, scope: !5226)
!5229 = !DILocation(line: 2326, column: 20, scope: !5226)
!5230 = !DILocation(line: 2326, column: 24, scope: !5226)
!5231 = !DILocation(line: 2327, column: 24, scope: !5226)
!5232 = !DILocation(line: 2327, column: 27, scope: !5226)
!5233 = !DILocation(line: 2327, column: 30, scope: !5226)
!5234 = !DILocation(line: 2327, column: 42, scope: !5226)
!5235 = !DILocation(line: 2325, column: 20, scope: !5207)
!5236 = !DILocation(line: 2335, column: 13, scope: !5237)
!5237 = distinct !DILexicalBlock(scope: !5226, file: !349, line: 2328, column: 13)
!5238 = !DILocation(line: 2338, column: 28, scope: !5239)
!5239 = distinct !DILexicalBlock(scope: !5226, file: !349, line: 2337, column: 13)
!5240 = !DILocation(line: 2339, column: 22, scope: !5239)
!5241 = !DILocation(line: 2339, column: 47, scope: !5239)
!5242 = !DILocation(line: 2338, column: 15, scope: !5239)
!5243 = !DILocation(line: 2340, column: 15, scope: !5239)
!5244 = !DILocation(line: 2342, column: 9, scope: !5194)
!5245 = !DILocation(line: 2345, column: 35, scope: !5246)
!5246 = distinct !DILexicalBlock(scope: !5247, file: !349, line: 2345, column: 15)
!5247 = distinct !DILexicalBlock(scope: !5189, file: !349, line: 2344, column: 9)
!5248 = !DILocation(line: 2345, column: 49, scope: !5246)
!5249 = !DILocation(line: 2345, column: 65, scope: !5246)
!5250 = !DILocation(line: 2345, column: 68, scope: !5246)
!5251 = !DILocation(line: 2346, column: 35, scope: !5246)
!5252 = !DILocation(line: 2345, column: 17, scope: !5246)
!5253 = !DILocation(line: 2345, column: 15, scope: !5247)
!5254 = !DILocation(line: 2347, column: 13, scope: !5246)
!5255 = !DILocation(line: 2349, column: 11, scope: !5247)
!5256 = !DILocation(line: 2351, column: 5, scope: !5190)
!5257 = !DILocation(line: 2353, column: 7, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !4486, file: !349, line: 2353, column: 7)
!5259 = !DILocation(line: 2353, column: 10, scope: !5258)
!5260 = !DILocation(line: 2353, column: 7, scope: !4486)
!5261 = !DILocation(line: 2355, column: 11, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5263, file: !349, line: 2355, column: 11)
!5263 = distinct !DILexicalBlock(scope: !5258, file: !349, line: 2354, column: 5)
!5264 = !DILocation(line: 2355, column: 24, scope: !5262)
!5265 = !DILocation(line: 2355, column: 11, scope: !5263)
!5266 = !DILocation(line: 2356, column: 32, scope: !5262)
!5267 = !DILocation(line: 2356, column: 42, scope: !5262)
!5268 = !DILocation(line: 2356, column: 24, scope: !5262)
!5269 = !DILocation(line: 2356, column: 52, scope: !5262)
!5270 = !DILocation(line: 2356, column: 63, scope: !5262)
!5271 = !DILocation(line: 2356, column: 22, scope: !5262)
!5272 = !DILocation(line: 2356, column: 9, scope: !5262)
!5273 = !DILocation(line: 2358, column: 11, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5263, file: !349, line: 2358, column: 11)
!5275 = !DILocation(line: 2358, column: 24, scope: !5274)
!5276 = !DILocation(line: 2358, column: 11, scope: !5263)
!5277 = !DILocation(line: 2360, column: 15, scope: !5278)
!5278 = distinct !DILexicalBlock(scope: !5279, file: !349, line: 2360, column: 15)
!5279 = distinct !DILexicalBlock(scope: !5274, file: !349, line: 2359, column: 9)
!5280 = !DILocation(line: 2360, column: 18, scope: !5278)
!5281 = !DILocation(line: 2360, column: 15, scope: !5279)
!5282 = !DILocation(line: 2362, column: 23, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5278, file: !349, line: 2361, column: 13)
!5284 = !DILocation(line: 2362, column: 15, scope: !5283)
!5285 = !DILocation(line: 2363, column: 29, scope: !5283)
!5286 = !DILocation(line: 2363, column: 39, scope: !5283)
!5287 = !DILocation(line: 2363, column: 49, scope: !5283)
!5288 = !DILocation(line: 2363, column: 15, scope: !5283)
!5289 = !DILocation(line: 2364, column: 13, scope: !5283)
!5290 = !DILocation(line: 2366, column: 15, scope: !5291)
!5291 = distinct !DILexicalBlock(scope: !5279, file: !349, line: 2366, column: 15)
!5292 = !DILocation(line: 2366, column: 18, scope: !5291)
!5293 = !DILocation(line: 2366, column: 15, scope: !5279)
!5294 = !DILocation(line: 2369, column: 45, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !5291, file: !349, line: 2367, column: 13)
!5296 = !DILocation(line: 2369, column: 68, scope: !5295)
!5297 = !DILocation(line: 2369, column: 22, scope: !5295)
!5298 = !DILocation(line: 2370, column: 13, scope: !5295)
!5299 = !DILocation(line: 2372, column: 15, scope: !5300)
!5300 = distinct !DILexicalBlock(scope: !5279, file: !349, line: 2372, column: 15)
!5301 = !DILocation(line: 2372, column: 15, scope: !5279)
!5302 = !DILocation(line: 2373, column: 14, scope: !5300)
!5303 = !DILocation(line: 2373, column: 31, scope: !5300)
!5304 = !DILocation(line: 2373, column: 13, scope: !5300)
!5305 = !DILocation(line: 2375, column: 15, scope: !5306)
!5306 = distinct !DILexicalBlock(scope: !5279, file: !349, line: 2375, column: 15)
!5307 = !DILocation(line: 2375, column: 32, scope: !5306)
!5308 = !DILocation(line: 2375, column: 36, scope: !5306)
!5309 = !DILocation(line: 2375, column: 39, scope: !5306)
!5310 = !DILocation(line: 2375, column: 15, scope: !5279)
!5311 = !DILocation(line: 2384, column: 28, scope: !5312)
!5312 = distinct !DILexicalBlock(scope: !5306, file: !349, line: 2376, column: 13)
!5313 = !DILocation(line: 2384, column: 31, scope: !5312)
!5314 = !DILocation(line: 2384, column: 42, scope: !5312)
!5315 = !DILocation(line: 2384, column: 15, scope: !5312)
!5316 = !DILocation(line: 2385, column: 13, scope: !5312)
!5317 = !DILocation(line: 2387, column: 11, scope: !5279)
!5318 = !DILocation(line: 2395, column: 11, scope: !5319)
!5319 = distinct !DILexicalBlock(scope: !5263, file: !349, line: 2395, column: 11)
!5320 = !DILocation(line: 2395, column: 24, scope: !5319)
!5321 = !DILocation(line: 2395, column: 11, scope: !5263)
!5322 = !DILocation(line: 2400, column: 24, scope: !5323)
!5323 = distinct !DILexicalBlock(scope: !5319, file: !349, line: 2396, column: 9)
!5324 = !DILocation(line: 2401, column: 18, scope: !5323)
!5325 = !DILocation(line: 2402, column: 18, scope: !5323)
!5326 = !DILocation(line: 2400, column: 11, scope: !5323)
!5327 = !DILocation(line: 2408, column: 12, scope: !5323)
!5328 = !DILocation(line: 2408, column: 27, scope: !5323)
!5329 = !DILocation(line: 2412, column: 11, scope: !5323)
!5330 = !DILocation(line: 2430, column: 11, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5263, file: !349, line: 2430, column: 11)
!5332 = !DILocation(line: 2430, column: 24, scope: !5331)
!5333 = !DILocation(line: 2430, column: 11, scope: !5263)
!5334 = !DILocation(line: 2442, column: 21, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5331, file: !349, line: 2431, column: 9)
!5336 = !DILocation(line: 2443, column: 18, scope: !5335)
!5337 = !DILocation(line: 2444, column: 18, scope: !5335)
!5338 = !DILocation(line: 2444, column: 43, scope: !5335)
!5339 = !DILocation(line: 2442, column: 11, scope: !5335)
!5340 = !DILocation(line: 2445, column: 34, scope: !5335)
!5341 = !DILocation(line: 2445, column: 49, scope: !5335)
!5342 = !DILocation(line: 2445, column: 11, scope: !5335)
!5343 = !DILocation(line: 2446, column: 11, scope: !5335)
!5344 = !DILocation(line: 2455, column: 12, scope: !5345)
!5345 = distinct !DILexicalBlock(scope: !5263, file: !349, line: 2455, column: 11)
!5346 = !DILocation(line: 2455, column: 40, scope: !5345)
!5347 = !DILocation(line: 2455, column: 33, scope: !5345)
!5348 = !DILocation(line: 2455, column: 60, scope: !5345)
!5349 = !DILocation(line: 2455, column: 52, scope: !5345)
!5350 = !DILocation(line: 2455, column: 71, scope: !5345)
!5351 = !DILocation(line: 2456, column: 11, scope: !5345)
!5352 = !DILocation(line: 2456, column: 14, scope: !5345)
!5353 = !DILocation(line: 2456, column: 20, scope: !5345)
!5354 = !DILocation(line: 2455, column: 11, scope: !5263)
!5355 = !DILocation(line: 2458, column: 21, scope: !5356)
!5356 = distinct !DILexicalBlock(scope: !5345, file: !349, line: 2457, column: 9)
!5357 = !DILocation(line: 2459, column: 14, scope: !5356)
!5358 = !DILocation(line: 2460, column: 18, scope: !5356)
!5359 = !DILocation(line: 2460, column: 43, scope: !5356)
!5360 = !DILocation(line: 2458, column: 11, scope: !5356)
!5361 = !DILocation(line: 2461, column: 34, scope: !5356)
!5362 = !DILocation(line: 2461, column: 49, scope: !5356)
!5363 = !DILocation(line: 2461, column: 11, scope: !5356)
!5364 = !DILocation(line: 2462, column: 11, scope: !5356)
!5365 = !DILocation(line: 2465, column: 11, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !5263, file: !349, line: 2465, column: 11)
!5367 = !DILocation(line: 2465, column: 14, scope: !5366)
!5368 = !DILocation(line: 2465, column: 22, scope: !5366)
!5369 = !DILocation(line: 2465, column: 26, scope: !5366)
!5370 = !DILocation(line: 2465, column: 11, scope: !5263)
!5371 = !DILocation(line: 2467, column: 19, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5366, file: !349, line: 2466, column: 9)
!5373 = !DILocation(line: 2467, column: 11, scope: !5372)
!5374 = !DILocation(line: 2468, column: 25, scope: !5372)
!5375 = !DILocation(line: 2468, column: 35, scope: !5372)
!5376 = !DILocation(line: 2468, column: 45, scope: !5372)
!5377 = !DILocation(line: 2468, column: 11, scope: !5372)
!5378 = !DILocation(line: 2469, column: 9, scope: !5372)
!5379 = !DILocation(line: 2470, column: 15, scope: !5263)
!5380 = !DILocation(line: 2471, column: 5, scope: !5263)
!5381 = !DILocation(line: 2477, column: 20, scope: !4486)
!5382 = !DILocation(line: 2477, column: 23, scope: !4486)
!5383 = !DILocation(line: 2477, column: 34, scope: !4486)
!5384 = !DILocation(line: 2477, column: 37, scope: !4486)
!5385 = !DILocation(line: 2477, column: 44, scope: !4486)
!5386 = !DILocation(line: 2477, column: 54, scope: !4486)
!5387 = !DILocation(line: 2477, column: 17, scope: !4486)
!5388 = !DILocation(line: 2479, column: 6, scope: !4486)
!5389 = !DILocation(line: 2480, column: 9, scope: !4486)
!5390 = !DILocation(line: 2480, column: 12, scope: !4486)
!5391 = !DILocation(line: 2481, column: 11, scope: !4486)
!5392 = !DILocation(line: 2480, column: 6, scope: !4486)
!5393 = !DILocation(line: 2478, column: 23, scope: !4486)
!5394 = !DILocation(line: 2484, column: 14, scope: !4486)
!5395 = !DILocation(line: 2490, column: 35, scope: !5396)
!5396 = distinct !DILexicalBlock(scope: !4486, file: !349, line: 2490, column: 7)
!5397 = !DILocation(line: 2490, column: 45, scope: !5396)
!5398 = !DILocation(line: 2490, column: 55, scope: !5396)
!5399 = !DILocation(line: 2490, column: 65, scope: !5396)
!5400 = !DILocation(line: 2490, column: 74, scope: !5396)
!5401 = !DILocation(line: 2490, column: 9, scope: !5396)
!5402 = !DILocation(line: 2490, column: 7, scope: !4486)
!5403 = !DILocation(line: 2491, column: 5, scope: !5396)
!5404 = !DILocation(line: 2493, column: 7, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !4486, file: !349, line: 2493, column: 7)
!5406 = !DILocation(line: 2493, column: 7, scope: !4486)
!5407 = !DILocalVariable(name: "dir", scope: !5408, file: !349, line: 2495, type: !436)
!5408 = distinct !DILexicalBlock(scope: !5405, file: !349, line: 2494, column: 5)
!5409 = !DILocation(line: 2495, column: 24, scope: !5408)
!5410 = !DILocation(line: 2502, column: 33, scope: !5411)
!5411 = distinct !DILexicalBlock(scope: !5408, file: !349, line: 2502, column: 11)
!5412 = !DILocation(line: 2502, column: 11, scope: !5411)
!5413 = !DILocation(line: 2502, column: 11, scope: !5408)
!5414 = !DILocation(line: 2504, column: 24, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5411, file: !349, line: 2503, column: 9)
!5416 = !DILocation(line: 2505, column: 18, scope: !5415)
!5417 = !DILocation(line: 2504, column: 11, scope: !5415)
!5418 = !DILocation(line: 2506, column: 11, scope: !5415)
!5419 = !DILocation(line: 2511, column: 13, scope: !5408)
!5420 = !DILocation(line: 2511, column: 11, scope: !5408)
!5421 = !DILocation(line: 2512, column: 21, scope: !5408)
!5422 = !DILocation(line: 2512, column: 7, scope: !5408)
!5423 = !DILocation(line: 2512, column: 12, scope: !5408)
!5424 = !DILocation(line: 2512, column: 19, scope: !5408)
!5425 = !{!5426, !2646, i64 0}
!5426 = !{!"dir_list", !2646, i64 0, !2913, i64 8, !2913, i64 16}
!5427 = !DILocation(line: 2513, column: 25, scope: !5408)
!5428 = !DILocation(line: 2513, column: 7, scope: !5408)
!5429 = !DILocation(line: 2513, column: 12, scope: !5408)
!5430 = !DILocation(line: 2513, column: 16, scope: !5408)
!5431 = !{!5426, !2913, i64 8}
!5432 = !DILocation(line: 2514, column: 25, scope: !5408)
!5433 = !DILocation(line: 2514, column: 7, scope: !5408)
!5434 = !DILocation(line: 2514, column: 12, scope: !5408)
!5435 = !DILocation(line: 2514, column: 16, scope: !5408)
!5436 = !{!5426, !2913, i64 16}
!5437 = !DILocation(line: 2516, column: 11, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5408, file: !349, line: 2516, column: 11)
!5439 = !DILocation(line: 2516, column: 19, scope: !5438)
!5440 = !DILocation(line: 2516, column: 23, scope: !5438)
!5441 = !DILocation(line: 2516, column: 11, scope: !5408)
!5442 = !DILocation(line: 2522, column: 22, scope: !5443)
!5443 = distinct !DILexicalBlock(scope: !5444, file: !349, line: 2522, column: 15)
!5444 = distinct !DILexicalBlock(scope: !5438, file: !349, line: 2517, column: 9)
!5445 = !DILocation(line: 2522, column: 32, scope: !5443)
!5446 = !DILocation(line: 2522, column: 49, scope: !5443)
!5447 = !DILocation(line: 2522, column: 48, scope: !5443)
!5448 = !DILocation(line: 2522, column: 46, scope: !5443)
!5449 = !DILocation(line: 2522, column: 15, scope: !5443)
!5450 = !DILocation(line: 2522, column: 70, scope: !5443)
!5451 = !DILocation(line: 2522, column: 15, scope: !5444)
!5452 = !DILocation(line: 2524, column: 25, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5443, file: !349, line: 2523, column: 13)
!5454 = !DILocation(line: 2524, column: 32, scope: !5453)
!5455 = !DILocation(line: 2525, column: 22, scope: !5453)
!5456 = !DILocation(line: 2524, column: 15, scope: !5453)
!5457 = !DILocation(line: 2526, column: 15, scope: !5453)
!5458 = !DILocation(line: 2533, column: 22, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !5444, file: !349, line: 2533, column: 15)
!5460 = !DILocation(line: 2533, column: 15, scope: !5459)
!5461 = !DILocation(line: 2533, column: 41, scope: !5459)
!5462 = !DILocation(line: 2533, column: 15, scope: !5444)
!5463 = !DILocation(line: 2535, column: 25, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !5459, file: !349, line: 2534, column: 13)
!5465 = !DILocation(line: 2535, column: 32, scope: !5464)
!5466 = !DILocation(line: 2535, column: 53, scope: !5464)
!5467 = !DILocation(line: 2535, column: 15, scope: !5464)
!5468 = !DILocation(line: 2536, column: 15, scope: !5464)
!5469 = !DILocation(line: 2538, column: 28, scope: !5470)
!5470 = distinct !DILexicalBlock(scope: !5459, file: !349, line: 2538, column: 20)
!5471 = !DILocation(line: 2538, column: 36, scope: !5470)
!5472 = !DILocation(line: 2538, column: 47, scope: !5470)
!5473 = !DILocation(line: 2538, column: 20, scope: !5459)
!5474 = !DILocation(line: 2542, column: 33, scope: !5475)
!5475 = distinct !DILexicalBlock(scope: !5470, file: !349, line: 2539, column: 13)
!5476 = !DILocation(line: 2542, column: 24, scope: !5475)
!5477 = !DILocation(line: 2543, column: 32, scope: !5475)
!5478 = !DILocation(line: 2545, column: 27, scope: !5479)
!5479 = distinct !DILexicalBlock(scope: !5475, file: !349, line: 2545, column: 19)
!5480 = !DILocation(line: 2545, column: 37, scope: !5479)
!5481 = !DILocation(line: 2545, column: 46, scope: !5479)
!5482 = !DILocation(line: 2545, column: 19, scope: !5479)
!5483 = !DILocation(line: 2545, column: 57, scope: !5479)
!5484 = !DILocation(line: 2545, column: 19, scope: !5475)
!5485 = !DILocation(line: 2547, column: 29, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5479, file: !349, line: 2546, column: 17)
!5487 = !DILocation(line: 2547, column: 36, scope: !5486)
!5488 = !DILocation(line: 2548, column: 26, scope: !5486)
!5489 = !DILocation(line: 2547, column: 19, scope: !5486)
!5490 = !DILocation(line: 2549, column: 19, scope: !5486)
!5491 = !DILocation(line: 2551, column: 13, scope: !5475)
!5492 = !DILocation(line: 2557, column: 17, scope: !5493)
!5493 = distinct !DILexicalBlock(scope: !5444, file: !349, line: 2557, column: 15)
!5494 = !DILocation(line: 2557, column: 16, scope: !5493)
!5495 = !DILocation(line: 2557, column: 15, scope: !5444)
!5496 = !DILocation(line: 2559, column: 32, scope: !5497)
!5497 = distinct !DILexicalBlock(scope: !5493, file: !349, line: 2558, column: 13)
!5498 = !DILocation(line: 2559, column: 49, scope: !5497)
!5499 = !DILocation(line: 2559, column: 64, scope: !5497)
!5500 = !DILocation(line: 2559, column: 15, scope: !5497)
!5501 = !DILocation(line: 2560, column: 16, scope: !5497)
!5502 = !DILocation(line: 2560, column: 55, scope: !5497)
!5503 = !DILocation(line: 2561, column: 13, scope: !5497)
!5504 = !DILocation(line: 2563, column: 15, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5444, file: !349, line: 2563, column: 15)
!5506 = !DILocation(line: 2563, column: 18, scope: !5505)
!5507 = !DILocation(line: 2563, column: 15, scope: !5444)
!5508 = !DILocation(line: 2565, column: 19, scope: !5509)
!5509 = distinct !DILexicalBlock(scope: !5510, file: !349, line: 2565, column: 19)
!5510 = distinct !DILexicalBlock(scope: !5505, file: !349, line: 2564, column: 13)
!5511 = !DILocation(line: 2565, column: 22, scope: !5509)
!5512 = !DILocation(line: 2565, column: 19, scope: !5510)
!5513 = !DILocation(line: 2566, column: 25, scope: !5509)
!5514 = !DILocation(line: 2566, column: 54, scope: !5509)
!5515 = !DILocation(line: 2566, column: 17, scope: !5509)
!5516 = !DILocation(line: 2568, column: 31, scope: !5509)
!5517 = !DILocation(line: 2568, column: 41, scope: !5509)
!5518 = !DILocation(line: 2568, column: 17, scope: !5509)
!5519 = !DILocation(line: 2569, column: 13, scope: !5510)
!5520 = !DILocation(line: 2570, column: 9, scope: !5444)
!5521 = !DILocation(line: 2573, column: 31, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !5438, file: !349, line: 2572, column: 9)
!5523 = !DILocation(line: 2578, column: 15, scope: !5524)
!5524 = distinct !DILexicalBlock(scope: !5522, file: !349, line: 2578, column: 15)
!5525 = !DILocation(line: 2578, column: 18, scope: !5524)
!5526 = !DILocation(line: 2578, column: 39, scope: !5524)
!5527 = !DILocation(line: 2578, column: 42, scope: !5524)
!5528 = !DILocation(line: 2578, column: 45, scope: !5524)
!5529 = !DILocation(line: 2578, column: 15, scope: !5522)
!5530 = !DILocation(line: 2579, column: 42, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5524, file: !349, line: 2579, column: 17)
!5532 = !DILocation(line: 2579, column: 52, scope: !5531)
!5533 = !DILocation(line: 2579, column: 55, scope: !5531)
!5534 = !DILocation(line: 2580, column: 49, scope: !5531)
!5535 = !DILocation(line: 2579, column: 19, scope: !5531)
!5536 = !DILocation(line: 2579, column: 17, scope: !5524)
!5537 = !DILocation(line: 2582, column: 21, scope: !5538)
!5538 = distinct !DILexicalBlock(scope: !5539, file: !349, line: 2582, column: 21)
!5539 = distinct !DILexicalBlock(scope: !5531, file: !349, line: 2581, column: 15)
!5540 = !DILocation(line: 2582, column: 24, scope: !5538)
!5541 = !DILocation(line: 2582, column: 21, scope: !5539)
!5542 = !DILocation(line: 2583, column: 19, scope: !5538)
!5543 = !DILocation(line: 2584, column: 15, scope: !5539)
!5544 = !DILocation(line: 2580, column: 50, scope: !5531)
!5545 = !DILocation(line: 2588, column: 11, scope: !5546)
!5546 = distinct !DILexicalBlock(scope: !5408, file: !349, line: 2588, column: 11)
!5547 = !DILocation(line: 2588, column: 14, scope: !5546)
!5548 = !DILocation(line: 2588, column: 30, scope: !5546)
!5549 = !DILocation(line: 2588, column: 33, scope: !5546)
!5550 = !DILocation(line: 2588, column: 40, scope: !5546)
!5551 = !DILocation(line: 2588, column: 43, scope: !5546)
!5552 = !DILocation(line: 2588, column: 51, scope: !5546)
!5553 = !DILocation(line: 2588, column: 68, scope: !5546)
!5554 = !DILocation(line: 2588, column: 58, scope: !5546)
!5555 = !DILocation(line: 2588, column: 11, scope: !5408)
!5556 = !DILocation(line: 2592, column: 9, scope: !5557)
!5557 = distinct !DILexicalBlock(scope: !5546, file: !349, line: 2589, column: 9)
!5558 = !DILocation(line: 2599, column: 34, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5546, file: !349, line: 2594, column: 9)
!5560 = !DILocation(line: 2599, column: 44, scope: !5559)
!5561 = !DILocation(line: 2599, column: 54, scope: !5559)
!5562 = !DILocation(line: 2599, column: 72, scope: !5559)
!5563 = !DILocation(line: 2599, column: 77, scope: !5559)
!5564 = !DILocation(line: 2600, column: 34, scope: !5559)
!5565 = !DILocation(line: 2601, column: 34, scope: !5559)
!5566 = !DILocation(line: 2599, column: 24, scope: !5559)
!5567 = !DILocation(line: 2599, column: 22, scope: !5559)
!5568 = !DILocation(line: 2603, column: 5, scope: !5408)
!5569 = !DILocation(line: 2604, column: 12, scope: !5570)
!5570 = distinct !DILexicalBlock(scope: !5405, file: !349, line: 2604, column: 12)
!5571 = !DILocation(line: 2604, column: 15, scope: !5570)
!5572 = !DILocation(line: 2604, column: 12, scope: !5405)
!5573 = !DILocation(line: 2606, column: 23, scope: !5574)
!5574 = distinct !DILexicalBlock(scope: !5570, file: !349, line: 2605, column: 5)
!5575 = !DILocation(line: 2607, column: 12, scope: !5576)
!5576 = distinct !DILexicalBlock(scope: !5574, file: !349, line: 2607, column: 11)
!5577 = !DILocation(line: 2607, column: 11, scope: !5576)
!5578 = !DILocation(line: 2607, column: 21, scope: !5576)
!5579 = !DILocation(line: 2607, column: 11, scope: !5574)
!5580 = !DILocalVariable(name: "dot_sb", scope: !5581, file: !349, line: 2610, type: !415)
!5581 = distinct !DILexicalBlock(scope: !5576, file: !349, line: 2608, column: 9)
!5582 = !DILocation(line: 2610, column: 23, scope: !5581)
!5583 = !DILocalVariable(name: "dst_parent_sb", scope: !5581, file: !349, line: 2611, type: !415)
!5584 = !DILocation(line: 2611, column: 23, scope: !5581)
!5585 = !DILocalVariable(name: "dst_parent", scope: !5581, file: !349, line: 2612, type: !9)
!5586 = !DILocation(line: 2612, column: 17, scope: !5581)
!5587 = !DILocalVariable(name: "in_current_dir", scope: !5581, file: !349, line: 2613, type: !142)
!5588 = !DILocation(line: 2613, column: 16, scope: !5581)
!5589 = !DILocation(line: 2615, column: 34, scope: !5581)
!5590 = !DILocation(line: 2615, column: 24, scope: !5581)
!5591 = !DILocation(line: 2615, column: 22, scope: !5581)
!5592 = !DILocation(line: 2617, column: 29, scope: !5581)
!5593 = !DILocation(line: 2621, column: 29, scope: !5581)
!5594 = !DILocation(line: 2621, column: 32, scope: !5581)
!5595 = !DILocation(line: 2621, column: 52, scope: !5581)
!5596 = !DILocation(line: 2622, column: 29, scope: !5581)
!5597 = !DILocation(line: 2622, column: 38, scope: !5581)
!5598 = !DILocation(line: 2622, column: 32, scope: !5581)
!5599 = !DILocation(line: 2622, column: 66, scope: !5581)
!5600 = !DILocation(line: 2623, column: 29, scope: !5581)
!5601 = !DILocation(line: 2623, column: 32, scope: !5581)
!5602 = !DILocation(line: 0, scope: !5581)
!5603 = !DILocation(line: 2617, column: 26, scope: !5581)
!5604 = !DILocation(line: 2624, column: 17, scope: !5581)
!5605 = !DILocation(line: 2624, column: 11, scope: !5581)
!5606 = !DILocation(line: 2626, column: 17, scope: !5607)
!5607 = distinct !DILexicalBlock(scope: !5581, file: !349, line: 2626, column: 15)
!5608 = !DILocation(line: 2626, column: 15, scope: !5581)
!5609 = !DILocation(line: 2629, column: 12, scope: !5610)
!5610 = distinct !DILexicalBlock(scope: !5607, file: !349, line: 2627, column: 13)
!5611 = !DILocation(line: 2630, column: 22, scope: !5610)
!5612 = !DILocation(line: 2628, column: 15, scope: !5610)
!5613 = !DILocation(line: 2631, column: 15, scope: !5610)
!5614 = !DILocation(line: 2633, column: 9, scope: !5581)
!5615 = !DILocalVariable(name: "err", scope: !5574, file: !349, line: 2635, type: !7)
!5616 = !DILocation(line: 2635, column: 11, scope: !5574)
!5617 = !DILocation(line: 2635, column: 34, scope: !5574)
!5618 = !DILocation(line: 2635, column: 54, scope: !5574)
!5619 = !DILocation(line: 2636, column: 34, scope: !5574)
!5620 = !DILocation(line: 2636, column: 37, scope: !5574)
!5621 = !DILocation(line: 2635, column: 17, scope: !5574)
!5622 = !DILocation(line: 2637, column: 15, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !5574, file: !349, line: 2637, column: 11)
!5624 = !DILocation(line: 2637, column: 13, scope: !5623)
!5625 = !DILocation(line: 2637, column: 11, scope: !5574)
!5626 = !DILocation(line: 2639, column: 21, scope: !5627)
!5627 = distinct !DILexicalBlock(scope: !5623, file: !349, line: 2638, column: 9)
!5628 = !DILocation(line: 2639, column: 26, scope: !5627)
!5629 = !DILocation(line: 2640, column: 18, scope: !5627)
!5630 = !DILocation(line: 2640, column: 43, scope: !5627)
!5631 = !DILocation(line: 2639, column: 11, scope: !5627)
!5632 = !DILocation(line: 2641, column: 11, scope: !5627)
!5633 = !DILocation(line: 2643, column: 5, scope: !5574)
!5634 = !DILocation(line: 2658, column: 12, scope: !5635)
!5635 = distinct !DILexicalBlock(scope: !5570, file: !349, line: 2658, column: 12)
!5636 = !DILocation(line: 2658, column: 15, scope: !5635)
!5637 = !DILocation(line: 2658, column: 12, scope: !5570)
!5638 = !DILocalVariable(name: "replace", scope: !5639, file: !349, line: 2662, type: !142)
!5639 = distinct !DILexicalBlock(scope: !5635, file: !349, line: 2661, column: 5)
!5640 = !DILocation(line: 2662, column: 12, scope: !5639)
!5641 = !DILocation(line: 2662, column: 23, scope: !5639)
!5642 = !DILocation(line: 2662, column: 26, scope: !5639)
!5643 = !DILocation(line: 2663, column: 23, scope: !5639)
!5644 = !DILocation(line: 2663, column: 26, scope: !5639)
!5645 = !DILocation(line: 2663, column: 29, scope: !5639)
!5646 = !DILocation(line: 2663, column: 41, scope: !5639)
!5647 = !DILocation(line: 2664, column: 31, scope: !5648)
!5648 = distinct !DILexicalBlock(scope: !5639, file: !349, line: 2664, column: 11)
!5649 = !DILocation(line: 2664, column: 41, scope: !5648)
!5650 = !DILocation(line: 2664, column: 51, scope: !5648)
!5651 = !DILocation(line: 2664, column: 67, scope: !5648)
!5652 = !DILocation(line: 2664, column: 13, scope: !5648)
!5653 = !DILocation(line: 2664, column: 11, scope: !5639)
!5654 = !DILocation(line: 2665, column: 9, scope: !5648)
!5655 = !DILocation(line: 2666, column: 5, scope: !5639)
!5656 = !DILocation(line: 2667, column: 12, scope: !5657)
!5657 = distinct !DILexicalBlock(scope: !5635, file: !349, line: 2667, column: 12)
!5658 = !DILocation(line: 2668, column: 12, scope: !5657)
!5659 = !DILocation(line: 2668, column: 16, scope: !5657)
!5660 = !DILocation(line: 2668, column: 19, scope: !5657)
!5661 = !DILocation(line: 2668, column: 35, scope: !5657)
!5662 = !DILocation(line: 2668, column: 39, scope: !5657)
!5663 = !DILocation(line: 2667, column: 12, scope: !5635)
!5664 = !DILocation(line: 2670, column: 25, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !5657, file: !349, line: 2669, column: 5)
!5666 = !DILocation(line: 2680, column: 23, scope: !5667)
!5667 = distinct !DILexicalBlock(scope: !5665, file: !349, line: 2680, column: 11)
!5668 = !DILocation(line: 2680, column: 33, scope: !5667)
!5669 = !DILocation(line: 2680, column: 43, scope: !5667)
!5670 = !DILocation(line: 2680, column: 46, scope: !5667)
!5671 = !DILocation(line: 2680, column: 60, scope: !5667)
!5672 = !DILocation(line: 2681, column: 23, scope: !5667)
!5673 = !DILocation(line: 2680, column: 13, scope: !5667)
!5674 = !DILocation(line: 2680, column: 11, scope: !5665)
!5675 = !DILocation(line: 2682, column: 9, scope: !5667)
!5676 = !DILocation(line: 2683, column: 5, scope: !5665)
!5677 = !DILocation(line: 2684, column: 12, scope: !5678)
!5678 = distinct !DILexicalBlock(scope: !5657, file: !349, line: 2684, column: 12)
!5679 = !DILocation(line: 2684, column: 12, scope: !5657)
!5680 = !DILocation(line: 2690, column: 18, scope: !5681)
!5681 = distinct !DILexicalBlock(scope: !5682, file: !349, line: 2690, column: 11)
!5682 = distinct !DILexicalBlock(scope: !5678, file: !349, line: 2685, column: 5)
!5683 = !DILocation(line: 2690, column: 28, scope: !5681)
!5684 = !DILocation(line: 2690, column: 40, scope: !5681)
!5685 = !DILocation(line: 2690, column: 39, scope: !5681)
!5686 = !DILocation(line: 2690, column: 37, scope: !5681)
!5687 = !DILocation(line: 2690, column: 11, scope: !5681)
!5688 = !DILocation(line: 2690, column: 64, scope: !5681)
!5689 = !DILocation(line: 2690, column: 11, scope: !5682)
!5690 = !DILocation(line: 2691, column: 21, scope: !5691)
!5691 = distinct !DILexicalBlock(scope: !5681, file: !349, line: 2691, column: 13)
!5692 = !DILocation(line: 2691, column: 31, scope: !5691)
!5693 = !DILocation(line: 2691, column: 40, scope: !5691)
!5694 = !DILocation(line: 2691, column: 54, scope: !5691)
!5695 = !DILocation(line: 2691, column: 53, scope: !5691)
!5696 = !DILocation(line: 2691, column: 51, scope: !5691)
!5697 = !DILocation(line: 2691, column: 13, scope: !5691)
!5698 = !DILocation(line: 2691, column: 75, scope: !5691)
!5699 = !DILocation(line: 2691, column: 13, scope: !5681)
!5700 = !DILocation(line: 2693, column: 23, scope: !5701)
!5701 = distinct !DILexicalBlock(scope: !5691, file: !349, line: 2692, column: 11)
!5702 = !DILocation(line: 2693, column: 30, scope: !5701)
!5703 = !DILocation(line: 2693, column: 58, scope: !5701)
!5704 = !DILocation(line: 2693, column: 13, scope: !5701)
!5705 = !DILocation(line: 2694, column: 13, scope: !5701)
!5706 = !DILocation(line: 2691, column: 78, scope: !5691)
!5707 = !DILocation(line: 2696, column: 5, scope: !5682)
!5708 = !DILocation(line: 2697, column: 12, scope: !5709)
!5709 = distinct !DILexicalBlock(scope: !5678, file: !349, line: 2697, column: 12)
!5710 = !DILocation(line: 2697, column: 31, scope: !5709)
!5711 = !DILocation(line: 2697, column: 34, scope: !5709)
!5712 = !DILocation(line: 2697, column: 53, scope: !5709)
!5713 = !DILocation(line: 2697, column: 56, scope: !5709)
!5714 = !DILocation(line: 2697, column: 12, scope: !5678)
!5715 = !DILocation(line: 2699, column: 18, scope: !5716)
!5716 = distinct !DILexicalBlock(scope: !5717, file: !349, line: 2699, column: 11)
!5717 = distinct !DILexicalBlock(scope: !5709, file: !349, line: 2698, column: 5)
!5718 = !DILocation(line: 2699, column: 28, scope: !5716)
!5719 = !DILocation(line: 2699, column: 40, scope: !5716)
!5720 = !DILocation(line: 2699, column: 39, scope: !5716)
!5721 = !DILocation(line: 2699, column: 37, scope: !5716)
!5722 = !DILocation(line: 2699, column: 68, scope: !5716)
!5723 = !{!2912, !2913, i64 40}
!5724 = !DILocation(line: 2699, column: 11, scope: !5716)
!5725 = !DILocation(line: 2700, column: 11, scope: !5716)
!5726 = !DILocation(line: 2699, column: 11, scope: !5717)
!5727 = !DILocation(line: 2702, column: 21, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !5716, file: !349, line: 2701, column: 9)
!5729 = !DILocation(line: 2702, column: 28, scope: !5728)
!5730 = !DILocation(line: 2703, column: 18, scope: !5728)
!5731 = !DILocation(line: 2702, column: 11, scope: !5728)
!5732 = !DILocation(line: 2704, column: 11, scope: !5728)
!5733 = !DILocation(line: 2706, column: 5, scope: !5717)
!5734 = !DILocation(line: 2707, column: 12, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5709, file: !349, line: 2707, column: 12)
!5736 = !DILocation(line: 2707, column: 12, scope: !5709)
!5737 = !DILocalVariable(name: "src_link_val", scope: !5738, file: !349, line: 2709, type: !9)
!5738 = distinct !DILexicalBlock(scope: !5735, file: !349, line: 2708, column: 5)
!5739 = !DILocation(line: 2709, column: 13, scope: !5738)
!5740 = !DILocation(line: 2709, column: 49, scope: !5738)
!5741 = !DILocation(line: 2709, column: 66, scope: !5738)
!5742 = !DILocation(line: 2709, column: 28, scope: !5738)
!5743 = !DILocation(line: 2710, column: 23, scope: !5738)
!5744 = !DILocation(line: 2711, column: 11, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5738, file: !349, line: 2711, column: 11)
!5746 = !DILocation(line: 2711, column: 24, scope: !5745)
!5747 = !DILocation(line: 2711, column: 11, scope: !5738)
!5748 = !DILocation(line: 2713, column: 21, scope: !5749)
!5749 = distinct !DILexicalBlock(scope: !5745, file: !349, line: 2712, column: 9)
!5750 = !DILocation(line: 2713, column: 28, scope: !5749)
!5751 = !DILocation(line: 2714, column: 18, scope: !5749)
!5752 = !DILocation(line: 2713, column: 11, scope: !5749)
!5753 = !DILocation(line: 2715, column: 11, scope: !5749)
!5754 = !DILocalVariable(name: "symlink_err", scope: !5738, file: !349, line: 2718, type: !7)
!5755 = !DILocation(line: 2718, column: 11, scope: !5738)
!5756 = !DILocation(line: 2718, column: 42, scope: !5738)
!5757 = !DILocation(line: 2718, column: 66, scope: !5738)
!5758 = !DILocation(line: 2719, column: 42, scope: !5738)
!5759 = !DILocation(line: 2719, column: 45, scope: !5738)
!5760 = !DILocation(line: 2718, column: 25, scope: !5738)
!5761 = !DILocation(line: 2720, column: 15, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5738, file: !349, line: 2720, column: 11)
!5763 = !DILocation(line: 2720, column: 13, scope: !5762)
!5764 = !DILocation(line: 2720, column: 27, scope: !5762)
!5765 = !DILocation(line: 2720, column: 30, scope: !5762)
!5766 = !DILocation(line: 2720, column: 33, scope: !5762)
!5767 = !DILocation(line: 2720, column: 40, scope: !5762)
!5768 = !DILocation(line: 2720, column: 44, scope: !5762)
!5769 = !DILocation(line: 2720, column: 52, scope: !5762)
!5770 = !DILocation(line: 2720, column: 55, scope: !5762)
!5771 = !DILocation(line: 2721, column: 11, scope: !5762)
!5772 = !DILocation(line: 2721, column: 21, scope: !5762)
!5773 = !DILocation(line: 2721, column: 40, scope: !5762)
!5774 = !DILocation(line: 2721, column: 32, scope: !5762)
!5775 = !DILocation(line: 2721, column: 29, scope: !5762)
!5776 = !DILocation(line: 2720, column: 11, scope: !5738)
!5777 = !DILocalVariable(name: "dest_link_val", scope: !5778, file: !349, line: 2727, type: !9)
!5778 = distinct !DILexicalBlock(scope: !5762, file: !349, line: 2722, column: 9)
!5779 = !DILocation(line: 2727, column: 17, scope: !5778)
!5780 = !DILocation(line: 2728, column: 34, scope: !5778)
!5781 = !DILocation(line: 2728, column: 51, scope: !5778)
!5782 = !DILocation(line: 2728, column: 13, scope: !5778)
!5783 = !DILocation(line: 2729, column: 15, scope: !5784)
!5784 = distinct !DILexicalBlock(scope: !5778, file: !349, line: 2729, column: 15)
!5785 = !DILocation(line: 2729, column: 15, scope: !5778)
!5786 = !DILocation(line: 2731, column: 19, scope: !5787)
!5787 = distinct !DILexicalBlock(scope: !5788, file: !349, line: 2731, column: 19)
!5788 = distinct !DILexicalBlock(scope: !5784, file: !349, line: 2730, column: 13)
!5789 = !DILocation(line: 2731, column: 19, scope: !5788)
!5790 = !DILocation(line: 2732, column: 29, scope: !5787)
!5791 = !DILocation(line: 2732, column: 17, scope: !5787)
!5792 = !DILocation(line: 2733, column: 21, scope: !5788)
!5793 = !DILocation(line: 2733, column: 15, scope: !5788)
!5794 = !DILocation(line: 2734, column: 13, scope: !5788)
!5795 = !DILocation(line: 2735, column: 9, scope: !5778)
!5796 = !DILocation(line: 2736, column: 13, scope: !5738)
!5797 = !DILocation(line: 2736, column: 7, scope: !5738)
!5798 = !DILocation(line: 2737, column: 15, scope: !5799)
!5799 = distinct !DILexicalBlock(scope: !5738, file: !349, line: 2737, column: 11)
!5800 = !DILocation(line: 2737, column: 13, scope: !5799)
!5801 = !DILocation(line: 2737, column: 11, scope: !5738)
!5802 = !DILocation(line: 2739, column: 21, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5799, file: !349, line: 2738, column: 9)
!5804 = !DILocation(line: 2739, column: 34, scope: !5803)
!5805 = !DILocation(line: 2740, column: 18, scope: !5803)
!5806 = !DILocation(line: 2739, column: 11, scope: !5803)
!5807 = !DILocation(line: 2741, column: 11, scope: !5803)
!5808 = !DILocation(line: 2744, column: 11, scope: !5809)
!5809 = distinct !DILexicalBlock(scope: !5738, file: !349, line: 2744, column: 11)
!5810 = !DILocation(line: 2744, column: 14, scope: !5809)
!5811 = !DILocation(line: 2744, column: 11, scope: !5738)
!5812 = !DILocation(line: 2745, column: 9, scope: !5809)
!5813 = !DILocation(line: 2747, column: 11, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5738, file: !349, line: 2747, column: 11)
!5815 = !DILocation(line: 2747, column: 14, scope: !5814)
!5816 = !DILocation(line: 2747, column: 11, scope: !5738)
!5817 = !DILocation(line: 2752, column: 26, scope: !5818)
!5818 = distinct !DILexicalBlock(scope: !5819, file: !349, line: 2751, column: 15)
!5819 = distinct !DILexicalBlock(scope: !5814, file: !349, line: 2748, column: 9)
!5820 = !DILocation(line: 2752, column: 43, scope: !5818)
!5821 = !DILocation(line: 2752, column: 58, scope: !5818)
!5822 = !DILocation(line: 2752, column: 18, scope: !5818)
!5823 = !DILocation(line: 2752, column: 66, scope: !5818)
!5824 = !DILocation(line: 2753, column: 15, scope: !5818)
!5825 = !DILocation(line: 2753, column: 38, scope: !5818)
!5826 = !DILocation(line: 2753, column: 20, scope: !5818)
!5827 = !DILocation(line: 2751, column: 15, scope: !5819)
!5828 = !DILocation(line: 2755, column: 25, scope: !5829)
!5829 = distinct !DILexicalBlock(scope: !5818, file: !349, line: 2754, column: 13)
!5830 = !DILocation(line: 2755, column: 32, scope: !5829)
!5831 = !DILocation(line: 2756, column: 22, scope: !5829)
!5832 = !DILocation(line: 2755, column: 15, scope: !5829)
!5833 = !DILocation(line: 2757, column: 19, scope: !5834)
!5834 = distinct !DILexicalBlock(scope: !5829, file: !349, line: 2757, column: 19)
!5835 = !DILocation(line: 2757, column: 22, scope: !5834)
!5836 = !DILocation(line: 2757, column: 19, scope: !5829)
!5837 = !DILocation(line: 2758, column: 17, scope: !5834)
!5838 = !DILocation(line: 2759, column: 13, scope: !5829)
!5839 = !DILocation(line: 2767, column: 9, scope: !5819)
!5840 = !DILocation(line: 2768, column: 5, scope: !5738)
!5841 = !DILocation(line: 2771, column: 20, scope: !5842)
!5842 = distinct !DILexicalBlock(scope: !5735, file: !349, line: 2770, column: 5)
!5843 = !DILocation(line: 2771, column: 51, scope: !5842)
!5844 = !DILocation(line: 2771, column: 7, scope: !5842)
!5845 = !DILocation(line: 2772, column: 7, scope: !5842)
!5846 = !DILocation(line: 2777, column: 8, scope: !5847)
!5847 = distinct !DILexicalBlock(scope: !4486, file: !349, line: 2777, column: 7)
!5848 = !DILocation(line: 2777, column: 16, scope: !5847)
!5849 = !DILocation(line: 2777, column: 20, scope: !5847)
!5850 = !DILocation(line: 2777, column: 23, scope: !5847)
!5851 = !DILocation(line: 2777, column: 39, scope: !5847)
!5852 = !DILocation(line: 2777, column: 43, scope: !5847)
!5853 = !DILocation(line: 2778, column: 7, scope: !5847)
!5854 = !DILocation(line: 2778, column: 11, scope: !5847)
!5855 = !DILocation(line: 2778, column: 14, scope: !5847)
!5856 = !DILocation(line: 2778, column: 35, scope: !5847)
!5857 = !DILocation(line: 2778, column: 38, scope: !5847)
!5858 = !DILocation(line: 2778, column: 41, scope: !5847)
!5859 = !DILocation(line: 2777, column: 7, scope: !4486)
!5860 = !DILocation(line: 2780, column: 36, scope: !5861)
!5861 = distinct !DILexicalBlock(scope: !5862, file: !349, line: 2780, column: 11)
!5862 = distinct !DILexicalBlock(scope: !5847, file: !349, line: 2779, column: 5)
!5863 = !DILocation(line: 2780, column: 46, scope: !5861)
!5864 = !DILocation(line: 2780, column: 49, scope: !5861)
!5865 = !DILocation(line: 2781, column: 43, scope: !5861)
!5866 = !DILocation(line: 2780, column: 13, scope: !5861)
!5867 = !DILocation(line: 2780, column: 11, scope: !5862)
!5868 = !DILocation(line: 2783, column: 16, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5870, file: !349, line: 2783, column: 16)
!5870 = distinct !DILexicalBlock(scope: !5861, file: !349, line: 2782, column: 9)
!5871 = !DILocation(line: 2783, column: 19, scope: !5869)
!5872 = !DILocation(line: 2783, column: 16, scope: !5870)
!5873 = !DILocation(line: 2784, column: 14, scope: !5869)
!5874 = !DILocation(line: 2785, column: 9, scope: !5870)
!5875 = !DILocation(line: 2786, column: 5, scope: !5862)
!5876 = !DILocation(line: 2788, column: 7, scope: !5877)
!5877 = distinct !DILexicalBlock(scope: !4486, file: !349, line: 2788, column: 7)
!5878 = !DILocation(line: 2788, column: 24, scope: !5877)
!5879 = !DILocation(line: 2788, column: 27, scope: !5877)
!5880 = !DILocation(line: 2788, column: 30, scope: !5877)
!5881 = !DILocation(line: 2788, column: 7, scope: !4486)
!5882 = !DILocalVariable(name: "sb", scope: !5883, file: !349, line: 2792, type: !415)
!5883 = distinct !DILexicalBlock(scope: !5877, file: !349, line: 2789, column: 5)
!5884 = !DILocation(line: 2792, column: 19, scope: !5883)
!5885 = !DILocation(line: 2793, column: 18, scope: !5886)
!5886 = distinct !DILexicalBlock(scope: !5883, file: !349, line: 2793, column: 11)
!5887 = !DILocation(line: 2793, column: 11, scope: !5886)
!5888 = !DILocation(line: 2793, column: 33, scope: !5886)
!5889 = !DILocation(line: 2793, column: 11, scope: !5883)
!5890 = !DILocation(line: 2794, column: 22, scope: !5886)
!5891 = !DILocation(line: 2794, column: 25, scope: !5886)
!5892 = !DILocation(line: 2794, column: 36, scope: !5886)
!5893 = !DILocation(line: 2794, column: 9, scope: !5886)
!5894 = !DILocation(line: 2795, column: 5, scope: !5883)
!5895 = !DILocation(line: 2799, column: 7, scope: !5896)
!5896 = distinct !DILexicalBlock(scope: !4486, file: !349, line: 2799, column: 7)
!5897 = !DILocation(line: 2799, column: 10, scope: !5896)
!5898 = !DILocation(line: 2799, column: 20, scope: !5896)
!5899 = !DILocation(line: 2799, column: 25, scope: !5896)
!5900 = !DILocation(line: 2799, column: 7, scope: !4486)
!5901 = !DILocation(line: 2802, column: 12, scope: !5896)
!5902 = !DILocation(line: 2802, column: 5, scope: !5896)
!5903 = !DILocation(line: 2804, column: 7, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !4486, file: !349, line: 2804, column: 7)
!5905 = !DILocation(line: 2804, column: 7, scope: !4486)
!5906 = !DILocation(line: 2805, column: 12, scope: !5904)
!5907 = !DILocation(line: 2805, column: 5, scope: !5904)
!5908 = !DILocation(line: 2819, column: 7, scope: !5909)
!5909 = distinct !DILexicalBlock(scope: !4486, file: !349, line: 2819, column: 7)
!5910 = !DILocation(line: 2819, column: 10, scope: !5909)
!5911 = !DILocation(line: 2819, column: 7, scope: !4486)
!5912 = !DILocalVariable(name: "timespec", scope: !5913, file: !349, line: 2821, type: !445)
!5913 = distinct !DILexicalBlock(scope: !5909, file: !349, line: 2820, column: 5)
!5914 = !DILocation(line: 2821, column: 23, scope: !5913)
!5915 = !DILocation(line: 2822, column: 7, scope: !5913)
!5916 = !DILocation(line: 2822, column: 21, scope: !5913)
!5917 = !DILocation(line: 2823, column: 7, scope: !5913)
!5918 = !DILocation(line: 2823, column: 21, scope: !5913)
!5919 = !DILocation(line: 2825, column: 12, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !5913, file: !349, line: 2825, column: 11)
!5921 = !DILocation(line: 2826, column: 31, scope: !5920)
!5922 = !DILocation(line: 2826, column: 41, scope: !5920)
!5923 = !DILocation(line: 2826, column: 14, scope: !5920)
!5924 = !DILocation(line: 2827, column: 23, scope: !5920)
!5925 = !DILocation(line: 2827, column: 33, scope: !5920)
!5926 = !DILocation(line: 2827, column: 14, scope: !5920)
!5927 = !DILocation(line: 2828, column: 11, scope: !5920)
!5928 = !DILocation(line: 2825, column: 11, scope: !5913)
!5929 = !DILocation(line: 2830, column: 21, scope: !5930)
!5930 = distinct !DILexicalBlock(scope: !5920, file: !349, line: 2829, column: 9)
!5931 = !DILocation(line: 2830, column: 28, scope: !5930)
!5932 = !DILocation(line: 2830, column: 58, scope: !5930)
!5933 = !DILocation(line: 2830, column: 11, scope: !5930)
!5934 = !DILocation(line: 2831, column: 15, scope: !5935)
!5935 = distinct !DILexicalBlock(scope: !5930, file: !349, line: 2831, column: 15)
!5936 = !DILocation(line: 2831, column: 18, scope: !5935)
!5937 = !DILocation(line: 2831, column: 15, scope: !5930)
!5938 = !DILocation(line: 2832, column: 13, scope: !5935)
!5939 = !DILocation(line: 2833, column: 9, scope: !5930)
!5940 = !DILocation(line: 2834, column: 5, scope: !5913)
!5941 = !DILocation(line: 2837, column: 8, scope: !5942)
!5942 = distinct !DILexicalBlock(scope: !4486, file: !349, line: 2837, column: 7)
!5943 = !DILocation(line: 2837, column: 24, scope: !5942)
!5944 = !DILocation(line: 2837, column: 27, scope: !5942)
!5945 = !DILocation(line: 2837, column: 30, scope: !5942)
!5946 = !DILocation(line: 2838, column: 7, scope: !5942)
!5947 = !DILocation(line: 2838, column: 11, scope: !5942)
!5948 = !DILocation(line: 2838, column: 19, scope: !5942)
!5949 = !DILocation(line: 2838, column: 23, scope: !5942)
!5950 = !DILocation(line: 2837, column: 7, scope: !4486)
!5951 = !DILocation(line: 2840, column: 26, scope: !5952)
!5952 = distinct !DILexicalBlock(scope: !5942, file: !349, line: 2839, column: 5)
!5953 = !DILocation(line: 2840, column: 29, scope: !5952)
!5954 = !DILocation(line: 2840, column: 52, scope: !5952)
!5955 = !DILocation(line: 2840, column: 15, scope: !5952)
!5956 = !DILocation(line: 2840, column: 7, scope: !5952)
!5957 = !DILocation(line: 2843, column: 11, scope: !5958)
!5958 = distinct !DILexicalBlock(scope: !5952, file: !349, line: 2841, column: 9)
!5959 = !DILocation(line: 2846, column: 20, scope: !5958)
!5960 = !DILocation(line: 2847, column: 11, scope: !5958)
!5961 = !DILocation(line: 2849, column: 5, scope: !5952)
!5962 = !DILocation(line: 2852, column: 7, scope: !5963)
!5963 = distinct !DILexicalBlock(scope: !4486, file: !349, line: 2852, column: 7)
!5964 = !DILocation(line: 2852, column: 10, scope: !5963)
!5965 = !DILocation(line: 2852, column: 25, scope: !5963)
!5966 = !DILocation(line: 2852, column: 41, scope: !5963)
!5967 = !DILocation(line: 2852, column: 55, scope: !5963)
!5968 = !DILocation(line: 2852, column: 69, scope: !5963)
!5969 = !DILocation(line: 2852, column: 30, scope: !5963)
!5970 = !DILocation(line: 2853, column: 7, scope: !5963)
!5971 = !DILocation(line: 2853, column: 10, scope: !5963)
!5972 = !DILocation(line: 2853, column: 13, scope: !5963)
!5973 = !DILocation(line: 2852, column: 7, scope: !4486)
!5974 = !DILocation(line: 2854, column: 5, scope: !5963)
!5975 = !DILocation(line: 2857, column: 7, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !4486, file: !349, line: 2857, column: 7)
!5977 = !DILocation(line: 2857, column: 7, scope: !4486)
!5978 = !DILocation(line: 2858, column: 12, scope: !5976)
!5979 = !DILocation(line: 2858, column: 5, scope: !5976)
!5980 = !DILocation(line: 2860, column: 15, scope: !4486)
!5981 = !DILocation(line: 2860, column: 3, scope: !4486)
!5982 = !DILocation(line: 2862, column: 7, scope: !5983)
!5983 = distinct !DILexicalBlock(scope: !4486, file: !349, line: 2862, column: 7)
!5984 = !DILocation(line: 2862, column: 10, scope: !5983)
!5985 = !DILocation(line: 2862, column: 24, scope: !5983)
!5986 = !DILocation(line: 2862, column: 27, scope: !5983)
!5987 = !DILocation(line: 2862, column: 30, scope: !5983)
!5988 = !DILocation(line: 2862, column: 7, scope: !4486)
!5989 = !DILocation(line: 2864, column: 21, scope: !5990)
!5990 = distinct !DILexicalBlock(scope: !5991, file: !349, line: 2864, column: 11)
!5991 = distinct !DILexicalBlock(scope: !5983, file: !349, line: 2863, column: 5)
!5992 = !DILocation(line: 2864, column: 35, scope: !5990)
!5993 = !DILocation(line: 2864, column: 49, scope: !5990)
!5994 = !DILocation(line: 2864, column: 11, scope: !5990)
!5995 = !DILocation(line: 2864, column: 59, scope: !5990)
!5996 = !DILocation(line: 2865, column: 11, scope: !5990)
!5997 = !DILocation(line: 2865, column: 14, scope: !5990)
!5998 = !DILocation(line: 2865, column: 17, scope: !5990)
!5999 = !DILocation(line: 2864, column: 11, scope: !5991)
!6000 = !DILocation(line: 2866, column: 9, scope: !5990)
!6001 = !DILocation(line: 2867, column: 5, scope: !5991)
!6002 = !DILocation(line: 2868, column: 12, scope: !6003)
!6003 = distinct !DILexicalBlock(scope: !5983, file: !349, line: 2868, column: 12)
!6004 = !DILocation(line: 2868, column: 15, scope: !6003)
!6005 = !DILocation(line: 2868, column: 12, scope: !5983)
!6006 = !DILocation(line: 2870, column: 20, scope: !6007)
!6007 = distinct !DILexicalBlock(scope: !6008, file: !349, line: 2870, column: 11)
!6008 = distinct !DILexicalBlock(scope: !6003, file: !349, line: 2869, column: 5)
!6009 = !DILocation(line: 2870, column: 34, scope: !6007)
!6010 = !DILocation(line: 2870, column: 37, scope: !6007)
!6011 = !DILocation(line: 2870, column: 11, scope: !6007)
!6012 = !DILocation(line: 2870, column: 43, scope: !6007)
!6013 = !DILocation(line: 2870, column: 11, scope: !6008)
!6014 = !DILocation(line: 2871, column: 9, scope: !6007)
!6015 = !DILocation(line: 2872, column: 5, scope: !6008)
!6016 = !DILocation(line: 2873, column: 12, scope: !6017)
!6017 = distinct !DILexicalBlock(scope: !6003, file: !349, line: 2873, column: 12)
!6018 = !DILocation(line: 2873, column: 15, scope: !6017)
!6019 = !DILocation(line: 2873, column: 41, scope: !6017)
!6020 = !DILocation(line: 2873, column: 44, scope: !6017)
!6021 = !DILocation(line: 2873, column: 12, scope: !6003)
!6022 = !DILocalVariable(name: "default_permissions", scope: !6023, file: !349, line: 2875, type: !7)
!6023 = distinct !DILexicalBlock(scope: !6017, file: !349, line: 2874, column: 5)
!6024 = !DILocation(line: 2875, column: 11, scope: !6023)
!6025 = !DILocation(line: 2875, column: 33, scope: !6023)
!6026 = !DILocation(line: 2875, column: 52, scope: !6023)
!6027 = !DILocation(line: 2875, column: 55, scope: !6023)
!6028 = !DILocation(line: 2877, column: 20, scope: !6029)
!6029 = distinct !DILexicalBlock(scope: !6023, file: !349, line: 2877, column: 11)
!6030 = !DILocation(line: 2877, column: 34, scope: !6029)
!6031 = !DILocation(line: 2877, column: 57, scope: !6029)
!6032 = !DILocation(line: 2877, column: 56, scope: !6029)
!6033 = !DILocation(line: 2877, column: 54, scope: !6029)
!6034 = !DILocation(line: 2877, column: 11, scope: !6029)
!6035 = !DILocation(line: 2877, column: 74, scope: !6029)
!6036 = !DILocation(line: 2877, column: 11, scope: !6023)
!6037 = !DILocation(line: 2878, column: 9, scope: !6029)
!6038 = !DILocation(line: 2879, column: 5, scope: !6023)
!6039 = !DILocation(line: 2882, column: 11, scope: !6040)
!6040 = distinct !DILexicalBlock(scope: !6041, file: !349, line: 2882, column: 11)
!6041 = distinct !DILexicalBlock(scope: !6017, file: !349, line: 2881, column: 5)
!6042 = !DILocation(line: 2882, column: 11, scope: !6041)
!6043 = !DILocation(line: 2884, column: 36, scope: !6044)
!6044 = distinct !DILexicalBlock(scope: !6040, file: !349, line: 2883, column: 9)
!6045 = !DILocation(line: 2884, column: 34, scope: !6044)
!6046 = !DILocation(line: 2884, column: 31, scope: !6044)
!6047 = !DILocation(line: 2886, column: 15, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !6044, file: !349, line: 2886, column: 15)
!6049 = !DILocation(line: 2886, column: 35, scope: !6048)
!6050 = !DILocation(line: 2886, column: 39, scope: !6048)
!6051 = !DILocation(line: 2886, column: 15, scope: !6044)
!6052 = !DILocation(line: 2894, column: 19, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !6054, file: !349, line: 2894, column: 19)
!6054 = distinct !DILexicalBlock(scope: !6048, file: !349, line: 2887, column: 13)
!6055 = !DILocation(line: 2894, column: 27, scope: !6053)
!6056 = !DILocation(line: 2894, column: 37, scope: !6053)
!6057 = !DILocation(line: 2894, column: 30, scope: !6053)
!6058 = !DILocation(line: 2894, column: 56, scope: !6053)
!6059 = !DILocation(line: 2894, column: 19, scope: !6054)
!6060 = !DILocation(line: 2896, column: 29, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6053, file: !349, line: 2895, column: 17)
!6062 = !DILocation(line: 2896, column: 36, scope: !6061)
!6063 = !DILocation(line: 2896, column: 57, scope: !6061)
!6064 = !DILocation(line: 2896, column: 19, scope: !6061)
!6065 = !DILocation(line: 2897, column: 19, scope: !6061)
!6066 = !DILocation(line: 2899, column: 33, scope: !6054)
!6067 = !DILocation(line: 2899, column: 24, scope: !6054)
!6068 = !DILocation(line: 2900, column: 19, scope: !6069)
!6069 = distinct !DILexicalBlock(scope: !6054, file: !349, line: 2900, column: 19)
!6070 = !DILocation(line: 2900, column: 42, scope: !6069)
!6071 = !DILocation(line: 2900, column: 41, scope: !6069)
!6072 = !DILocation(line: 2900, column: 39, scope: !6069)
!6073 = !DILocation(line: 2900, column: 19, scope: !6054)
!6074 = !DILocation(line: 2901, column: 34, scope: !6069)
!6075 = !DILocation(line: 2901, column: 17, scope: !6069)
!6076 = !DILocation(line: 2902, column: 13, scope: !6054)
!6077 = !DILocation(line: 2903, column: 9, scope: !6044)
!6078 = !DILocation(line: 2905, column: 11, scope: !6079)
!6079 = distinct !DILexicalBlock(scope: !6041, file: !349, line: 2905, column: 11)
!6080 = !DILocation(line: 2905, column: 11, scope: !6041)
!6081 = !DILocation(line: 2907, column: 23, scope: !6082)
!6082 = distinct !DILexicalBlock(scope: !6083, file: !349, line: 2907, column: 15)
!6083 = distinct !DILexicalBlock(scope: !6079, file: !349, line: 2906, column: 9)
!6084 = !DILocation(line: 2907, column: 33, scope: !6082)
!6085 = !DILocation(line: 2907, column: 44, scope: !6082)
!6086 = !DILocation(line: 2907, column: 42, scope: !6082)
!6087 = !DILocation(line: 2907, column: 15, scope: !6082)
!6088 = !DILocation(line: 2907, column: 65, scope: !6082)
!6089 = !DILocation(line: 2907, column: 15, scope: !6083)
!6090 = !DILocation(line: 2909, column: 25, scope: !6091)
!6091 = distinct !DILexicalBlock(scope: !6082, file: !349, line: 2908, column: 13)
!6092 = !DILocation(line: 2909, column: 32, scope: !6091)
!6093 = !DILocation(line: 2910, column: 22, scope: !6091)
!6094 = !DILocation(line: 2909, column: 15, scope: !6091)
!6095 = !DILocation(line: 2911, column: 19, scope: !6096)
!6096 = distinct !DILexicalBlock(scope: !6091, file: !349, line: 2911, column: 19)
!6097 = !DILocation(line: 2911, column: 22, scope: !6096)
!6098 = !DILocation(line: 2911, column: 19, scope: !6091)
!6099 = !DILocation(line: 2912, column: 17, scope: !6096)
!6100 = !DILocation(line: 2913, column: 13, scope: !6091)
!6101 = !DILocation(line: 2914, column: 9, scope: !6083)
!6102 = !DILocation(line: 2917, column: 10, scope: !4486)
!6103 = !DILocation(line: 2917, column: 3, scope: !4486)
!6104 = !DILabel(scope: !4486, name: "un_backup", file: !349, line: 2919)
!6105 = !DILocation(line: 2919, column: 1, scope: !4486)
!6106 = !DILocation(line: 2921, column: 7, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !4486, file: !349, line: 2921, column: 7)
!6108 = !DILocation(line: 2921, column: 10, scope: !6107)
!6109 = !DILocation(line: 2921, column: 7, scope: !4486)
!6110 = !DILocation(line: 2922, column: 5, scope: !6107)
!6111 = !DILocation(line: 2930, column: 7, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !4486, file: !349, line: 2930, column: 7)
!6113 = !DILocation(line: 2930, column: 20, scope: !6112)
!6114 = !DILocation(line: 2930, column: 7, scope: !4486)
!6115 = !DILocation(line: 2931, column: 28, scope: !6112)
!6116 = !DILocation(line: 2931, column: 43, scope: !6112)
!6117 = !DILocation(line: 2931, column: 5, scope: !6112)
!6118 = !DILocation(line: 2933, column: 7, scope: !6119)
!6119 = distinct !DILexicalBlock(scope: !4486, file: !349, line: 2933, column: 7)
!6120 = !DILocation(line: 2933, column: 7, scope: !4486)
!6121 = !DILocation(line: 2935, column: 19, scope: !6122)
!6122 = distinct !DILexicalBlock(scope: !6123, file: !349, line: 2935, column: 11)
!6123 = distinct !DILexicalBlock(scope: !6119, file: !349, line: 2934, column: 5)
!6124 = !DILocation(line: 2935, column: 31, scope: !6122)
!6125 = !DILocation(line: 2935, column: 11, scope: !6122)
!6126 = !DILocation(line: 2935, column: 41, scope: !6122)
!6127 = !DILocation(line: 2935, column: 11, scope: !6123)
!6128 = !DILocation(line: 2936, column: 19, scope: !6122)
!6129 = !DILocation(line: 2936, column: 26, scope: !6122)
!6130 = !DILocation(line: 2936, column: 52, scope: !6122)
!6131 = !DILocation(line: 2936, column: 9, scope: !6122)
!6132 = !DILocation(line: 2939, column: 15, scope: !6133)
!6133 = distinct !DILexicalBlock(scope: !6134, file: !349, line: 2939, column: 15)
!6134 = distinct !DILexicalBlock(scope: !6122, file: !349, line: 2938, column: 9)
!6135 = !DILocation(line: 2939, column: 18, scope: !6133)
!6136 = !DILocation(line: 2939, column: 15, scope: !6134)
!6137 = !DILocation(line: 2940, column: 21, scope: !6133)
!6138 = !DILocation(line: 2941, column: 21, scope: !6133)
!6139 = !DILocation(line: 2941, column: 48, scope: !6133)
!6140 = !DILocation(line: 2940, column: 13, scope: !6133)
!6141 = !DILocation(line: 2943, column: 5, scope: !6123)
!6142 = !DILocation(line: 2944, column: 3, scope: !4486)
!6143 = !DILocation(line: 2945, column: 1, scope: !4486)
!6144 = distinct !DISubprogram(name: "should_dereference", scope: !349, file: !349, line: 1804, type: !446, scopeLine: 1805, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!6145 = !DILocalVariable(name: "x", arg: 1, scope: !6144, file: !349, line: 1804, type: !356)
!6146 = !DILocation(line: 1804, column: 46, scope: !6144)
!6147 = !DILocalVariable(name: "command_line_arg", arg: 2, scope: !6144, file: !349, line: 1804, type: !142)
!6148 = !DILocation(line: 1804, column: 54, scope: !6144)
!6149 = !DILocation(line: 1806, column: 10, scope: !6144)
!6150 = !DILocation(line: 1806, column: 13, scope: !6144)
!6151 = !DILocation(line: 1806, column: 25, scope: !6144)
!6152 = !DILocation(line: 1807, column: 10, scope: !6144)
!6153 = !DILocation(line: 1807, column: 14, scope: !6144)
!6154 = !DILocation(line: 1807, column: 17, scope: !6144)
!6155 = !DILocation(line: 1807, column: 29, scope: !6144)
!6156 = !DILocation(line: 1808, column: 14, scope: !6144)
!6157 = !DILocation(line: 1808, column: 17, scope: !6144)
!6158 = !DILocation(line: 0, scope: !6144)
!6159 = !DILocation(line: 1806, column: 3, scope: !6144)
!6160 = distinct !DISubprogram(name: "same_file_ok", scope: !349, file: !349, line: 1428, type: !448, scopeLine: 1431, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!6161 = !DILocalVariable(name: "src_name", arg: 1, scope: !6160, file: !349, line: 1428, type: !180)
!6162 = !DILocation(line: 1428, column: 27, scope: !6160)
!6163 = !DILocalVariable(name: "src_sb", arg: 2, scope: !6160, file: !349, line: 1428, type: !413)
!6164 = !DILocation(line: 1428, column: 56, scope: !6160)
!6165 = !DILocalVariable(name: "dst_name", arg: 3, scope: !6160, file: !349, line: 1429, type: !180)
!6166 = !DILocation(line: 1429, column: 27, scope: !6160)
!6167 = !DILocalVariable(name: "dst_sb", arg: 4, scope: !6160, file: !349, line: 1429, type: !413)
!6168 = !DILocation(line: 1429, column: 56, scope: !6160)
!6169 = !DILocalVariable(name: "x", arg: 5, scope: !6160, file: !349, line: 1430, type: !356)
!6170 = !DILocation(line: 1430, column: 40, scope: !6160)
!6171 = !DILocalVariable(name: "return_now", arg: 6, scope: !6160, file: !349, line: 1430, type: !406)
!6172 = !DILocation(line: 1430, column: 49, scope: !6160)
!6173 = !DILocalVariable(name: "src_sb_link", scope: !6160, file: !349, line: 1432, type: !413)
!6174 = !DILocation(line: 1432, column: 22, scope: !6160)
!6175 = !DILocalVariable(name: "dst_sb_link", scope: !6160, file: !349, line: 1433, type: !413)
!6176 = !DILocation(line: 1433, column: 22, scope: !6160)
!6177 = !DILocalVariable(name: "tmp_dst_sb", scope: !6160, file: !349, line: 1434, type: !415)
!6178 = !DILocation(line: 1434, column: 15, scope: !6160)
!6179 = !DILocalVariable(name: "tmp_src_sb", scope: !6160, file: !349, line: 1435, type: !415)
!6180 = !DILocation(line: 1435, column: 15, scope: !6160)
!6181 = !DILocalVariable(name: "same_link", scope: !6160, file: !349, line: 1437, type: !142)
!6182 = !DILocation(line: 1437, column: 8, scope: !6160)
!6183 = !DILocalVariable(name: "same", scope: !6160, file: !349, line: 1438, type: !142)
!6184 = !DILocation(line: 1438, column: 8, scope: !6160)
!6185 = !DILocation(line: 1438, column: 15, scope: !6160)
!6186 = !DILocation(line: 0, scope: !6160)
!6187 = !DILocation(line: 1440, column: 4, scope: !6160)
!6188 = !DILocation(line: 1440, column: 15, scope: !6160)
!6189 = !DILocation(line: 1447, column: 7, scope: !6190)
!6190 = distinct !DILexicalBlock(scope: !6160, file: !349, line: 1447, column: 7)
!6191 = !DILocation(line: 1447, column: 12, scope: !6190)
!6192 = !DILocation(line: 1447, column: 15, scope: !6190)
!6193 = !DILocation(line: 1447, column: 18, scope: !6190)
!6194 = !DILocation(line: 1447, column: 7, scope: !6160)
!6195 = !DILocation(line: 1449, column: 8, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6190, file: !349, line: 1448, column: 5)
!6197 = !DILocation(line: 1449, column: 19, scope: !6196)
!6198 = !DILocation(line: 1450, column: 7, scope: !6196)
!6199 = !DILocation(line: 1453, column: 7, scope: !6200)
!6200 = distinct !DILexicalBlock(scope: !6160, file: !349, line: 1453, column: 7)
!6201 = !DILocation(line: 1453, column: 10, scope: !6200)
!6202 = !DILocation(line: 1453, column: 22, scope: !6200)
!6203 = !DILocation(line: 1453, column: 7, scope: !6160)
!6204 = !DILocation(line: 1455, column: 19, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !6200, file: !349, line: 1454, column: 5)
!6206 = !DILocation(line: 1455, column: 17, scope: !6205)
!6207 = !DILocation(line: 1460, column: 11, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !6205, file: !349, line: 1460, column: 11)
!6209 = !DILocation(line: 1460, column: 37, scope: !6208)
!6210 = !DILocation(line: 1460, column: 40, scope: !6208)
!6211 = !DILocation(line: 1460, column: 11, scope: !6205)
!6212 = !DILocalVariable(name: "sn", scope: !6213, file: !349, line: 1462, type: !142)
!6213 = distinct !DILexicalBlock(scope: !6208, file: !349, line: 1461, column: 9)
!6214 = !DILocation(line: 1462, column: 16, scope: !6213)
!6215 = !DILocation(line: 1462, column: 32, scope: !6213)
!6216 = !DILocation(line: 1462, column: 42, scope: !6213)
!6217 = !DILocation(line: 1462, column: 21, scope: !6213)
!6218 = !DILocation(line: 1463, column: 18, scope: !6219)
!6219 = distinct !DILexicalBlock(scope: !6213, file: !349, line: 1463, column: 16)
!6220 = !DILocation(line: 1463, column: 16, scope: !6213)
!6221 = !DILocation(line: 1466, column: 19, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !6223, file: !349, line: 1466, column: 19)
!6223 = distinct !DILexicalBlock(scope: !6219, file: !349, line: 1464, column: 13)
!6224 = !DILocation(line: 1466, column: 22, scope: !6222)
!6225 = !DILocation(line: 1466, column: 34, scope: !6222)
!6226 = !DILocation(line: 1466, column: 19, scope: !6223)
!6227 = !DILocation(line: 1467, column: 17, scope: !6222)
!6228 = !DILocation(line: 1473, column: 19, scope: !6229)
!6229 = distinct !DILexicalBlock(scope: !6223, file: !349, line: 1473, column: 19)
!6230 = !DILocation(line: 1473, column: 19, scope: !6223)
!6231 = !DILocation(line: 1475, column: 20, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6229, file: !349, line: 1474, column: 17)
!6233 = !DILocation(line: 1475, column: 31, scope: !6232)
!6234 = !DILocation(line: 1476, column: 28, scope: !6232)
!6235 = !DILocation(line: 1476, column: 31, scope: !6232)
!6236 = !DILocation(line: 1476, column: 26, scope: !6232)
!6237 = !DILocation(line: 1476, column: 19, scope: !6232)
!6238 = !DILocation(line: 1478, column: 13, scope: !6223)
!6239 = !DILocation(line: 1480, column: 20, scope: !6213)
!6240 = !DILocation(line: 1480, column: 18, scope: !6213)
!6241 = !DILocation(line: 1480, column: 11, scope: !6213)
!6242 = !DILocation(line: 1483, column: 21, scope: !6205)
!6243 = !DILocation(line: 1483, column: 19, scope: !6205)
!6244 = !DILocation(line: 1484, column: 21, scope: !6205)
!6245 = !DILocation(line: 1484, column: 19, scope: !6205)
!6246 = !DILocation(line: 1485, column: 5, scope: !6205)
!6247 = !DILocation(line: 1488, column: 12, scope: !6248)
!6248 = distinct !DILexicalBlock(scope: !6249, file: !349, line: 1488, column: 11)
!6249 = distinct !DILexicalBlock(scope: !6200, file: !349, line: 1487, column: 5)
!6250 = !DILocation(line: 1488, column: 11, scope: !6249)
!6251 = !DILocation(line: 1489, column: 9, scope: !6248)
!6252 = !DILocation(line: 1491, column: 18, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !6249, file: !349, line: 1491, column: 11)
!6254 = !DILocation(line: 1491, column: 11, scope: !6253)
!6255 = !DILocation(line: 1491, column: 41, scope: !6253)
!6256 = !DILocation(line: 1492, column: 11, scope: !6253)
!6257 = !DILocation(line: 1492, column: 21, scope: !6253)
!6258 = !DILocation(line: 1492, column: 14, scope: !6253)
!6259 = !DILocation(line: 1492, column: 44, scope: !6253)
!6260 = !DILocation(line: 1491, column: 11, scope: !6249)
!6261 = !DILocation(line: 1493, column: 9, scope: !6253)
!6262 = !DILocation(line: 1495, column: 19, scope: !6249)
!6263 = !DILocation(line: 1496, column: 19, scope: !6249)
!6264 = !DILocation(line: 1498, column: 19, scope: !6249)
!6265 = !DILocation(line: 0, scope: !6249)
!6266 = !DILocation(line: 1498, column: 17, scope: !6249)
!6267 = !DILocation(line: 1505, column: 11, scope: !6268)
!6268 = distinct !DILexicalBlock(scope: !6249, file: !349, line: 1505, column: 11)
!6269 = !DILocation(line: 1505, column: 42, scope: !6268)
!6270 = !DILocation(line: 1505, column: 45, scope: !6268)
!6271 = !DILocation(line: 1506, column: 11, scope: !6268)
!6272 = !DILocation(line: 1506, column: 14, scope: !6268)
!6273 = !DILocation(line: 1506, column: 17, scope: !6268)
!6274 = !DILocation(line: 1505, column: 11, scope: !6249)
!6275 = !DILocation(line: 1507, column: 9, scope: !6268)
!6276 = !DILocation(line: 1515, column: 7, scope: !6277)
!6277 = distinct !DILexicalBlock(scope: !6160, file: !349, line: 1515, column: 7)
!6278 = !DILocation(line: 1515, column: 10, scope: !6277)
!6279 = !DILocation(line: 1515, column: 22, scope: !6277)
!6280 = !DILocation(line: 1515, column: 7, scope: !6160)
!6281 = !DILocation(line: 1517, column: 12, scope: !6282)
!6282 = distinct !DILexicalBlock(scope: !6283, file: !349, line: 1517, column: 11)
!6283 = distinct !DILexicalBlock(scope: !6277, file: !349, line: 1516, column: 5)
!6284 = !DILocation(line: 1517, column: 11, scope: !6283)
!6285 = !DILocation(line: 1535, column: 18, scope: !6286)
!6286 = distinct !DILexicalBlock(scope: !6287, file: !349, line: 1535, column: 16)
!6287 = distinct !DILexicalBlock(scope: !6282, file: !349, line: 1518, column: 9)
!6288 = !DILocation(line: 1535, column: 21, scope: !6286)
!6289 = !DILocation(line: 1536, column: 16, scope: !6286)
!6290 = !DILocation(line: 1536, column: 19, scope: !6286)
!6291 = !DILocation(line: 1536, column: 22, scope: !6286)
!6292 = !DILocation(line: 1536, column: 34, scope: !6286)
!6293 = !DILocation(line: 1537, column: 16, scope: !6286)
!6294 = !DILocation(line: 1537, column: 19, scope: !6286)
!6295 = !DILocation(line: 1538, column: 16, scope: !6286)
!6296 = !DILocation(line: 1538, column: 21, scope: !6286)
!6297 = !DILocation(line: 1535, column: 16, scope: !6287)
!6298 = !DILocation(line: 1539, column: 13, scope: !6286)
!6299 = !DILocation(line: 1541, column: 11, scope: !6287)
!6300 = !DILocation(line: 1545, column: 27, scope: !6283)
!6301 = !DILocation(line: 1545, column: 37, scope: !6283)
!6302 = !DILocation(line: 1545, column: 16, scope: !6283)
!6303 = !DILocation(line: 1545, column: 14, scope: !6283)
!6304 = !DILocation(line: 1545, column: 7, scope: !6283)
!6305 = !DILocation(line: 1565, column: 7, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !6160, file: !349, line: 1565, column: 7)
!6307 = !DILocation(line: 1565, column: 10, scope: !6306)
!6308 = !DILocation(line: 1565, column: 20, scope: !6306)
!6309 = !DILocation(line: 1565, column: 23, scope: !6306)
!6310 = !DILocation(line: 1565, column: 26, scope: !6306)
!6311 = !DILocation(line: 1565, column: 7, scope: !6160)
!6312 = !DILocation(line: 1571, column: 11, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !6314, file: !349, line: 1571, column: 11)
!6314 = distinct !DILexicalBlock(scope: !6306, file: !349, line: 1566, column: 5)
!6315 = !DILocation(line: 1571, column: 11, scope: !6314)
!6316 = !DILocation(line: 1572, column: 9, scope: !6313)
!6317 = !DILocation(line: 1576, column: 11, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6314, file: !349, line: 1576, column: 11)
!6319 = !DILocation(line: 1577, column: 11, scope: !6318)
!6320 = !DILocation(line: 1577, column: 18, scope: !6318)
!6321 = !DILocation(line: 1577, column: 31, scope: !6318)
!6322 = !DILocation(line: 1577, column: 16, scope: !6318)
!6323 = !DILocation(line: 1578, column: 11, scope: !6318)
!6324 = !DILocation(line: 1578, column: 27, scope: !6318)
!6325 = !DILocation(line: 1578, column: 37, scope: !6318)
!6326 = !DILocation(line: 1578, column: 16, scope: !6318)
!6327 = !DILocation(line: 1576, column: 11, scope: !6314)
!6328 = !DILocation(line: 1579, column: 18, scope: !6318)
!6329 = !DILocation(line: 1579, column: 21, scope: !6318)
!6330 = !DILocation(line: 1579, column: 16, scope: !6318)
!6331 = !DILocation(line: 1579, column: 9, scope: !6318)
!6332 = !DILocation(line: 1580, column: 5, scope: !6314)
!6333 = !DILocation(line: 1584, column: 8, scope: !6334)
!6334 = distinct !DILexicalBlock(scope: !6160, file: !349, line: 1584, column: 7)
!6335 = !DILocation(line: 1584, column: 39, scope: !6334)
!6336 = !DILocation(line: 1584, column: 43, scope: !6334)
!6337 = !DILocation(line: 1584, column: 7, scope: !6160)
!6338 = !DILocation(line: 1586, column: 12, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !6340, file: !349, line: 1586, column: 11)
!6340 = distinct !DILexicalBlock(scope: !6334, file: !349, line: 1585, column: 5)
!6341 = !DILocation(line: 1586, column: 11, scope: !6340)
!6342 = !DILocation(line: 1587, column: 9, scope: !6339)
!6343 = !DILocation(line: 1590, column: 11, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !6340, file: !349, line: 1590, column: 11)
!6345 = !DILocation(line: 1590, column: 14, scope: !6344)
!6346 = !DILocation(line: 1590, column: 11, scope: !6340)
!6347 = !DILocation(line: 1592, column: 12, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6344, file: !349, line: 1591, column: 9)
!6349 = !DILocation(line: 1592, column: 23, scope: !6348)
!6350 = !DILocation(line: 1593, column: 11, scope: !6348)
!6351 = !DILocation(line: 1595, column: 5, scope: !6340)
!6352 = !DILocation(line: 1617, column: 7, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6160, file: !349, line: 1617, column: 7)
!6354 = !DILocation(line: 1617, column: 10, scope: !6353)
!6355 = !DILocation(line: 1618, column: 7, scope: !6353)
!6356 = !DILocation(line: 1618, column: 10, scope: !6353)
!6357 = !DILocation(line: 1619, column: 7, scope: !6353)
!6358 = !DILocation(line: 1619, column: 14, scope: !6353)
!6359 = !DILocation(line: 1619, column: 27, scope: !6353)
!6360 = !DILocation(line: 1619, column: 12, scope: !6353)
!6361 = !DILocation(line: 1617, column: 7, scope: !6160)
!6362 = !DILocalVariable(name: "abs_src", scope: !6363, file: !349, line: 1621, type: !9)
!6363 = distinct !DILexicalBlock(scope: !6353, file: !349, line: 1620, column: 5)
!6364 = !DILocation(line: 1621, column: 13, scope: !6363)
!6365 = !DILocation(line: 1621, column: 47, scope: !6363)
!6366 = !DILocation(line: 1621, column: 23, scope: !6363)
!6367 = !DILocation(line: 1622, column: 11, scope: !6368)
!6368 = distinct !DILexicalBlock(scope: !6363, file: !349, line: 1622, column: 11)
!6369 = !DILocation(line: 1622, column: 11, scope: !6363)
!6370 = !DILocalVariable(name: "result", scope: !6371, file: !349, line: 1624, type: !142)
!6371 = distinct !DILexicalBlock(scope: !6368, file: !349, line: 1623, column: 9)
!6372 = !DILocation(line: 1624, column: 16, scope: !6371)
!6373 = !DILocation(line: 1624, column: 38, scope: !6371)
!6374 = !DILocation(line: 1624, column: 47, scope: !6371)
!6375 = !DILocation(line: 1624, column: 27, scope: !6371)
!6376 = !DILocation(line: 1624, column: 25, scope: !6371)
!6377 = !DILocation(line: 1625, column: 17, scope: !6371)
!6378 = !DILocation(line: 1625, column: 11, scope: !6371)
!6379 = !DILocation(line: 1626, column: 18, scope: !6371)
!6380 = !DILocation(line: 1626, column: 11, scope: !6371)
!6381 = !DILocation(line: 1628, column: 5, scope: !6363)
!6382 = !DILocation(line: 1631, column: 7, scope: !6383)
!6383 = distinct !DILexicalBlock(scope: !6160, file: !349, line: 1631, column: 7)
!6384 = !DILocation(line: 1631, column: 10, scope: !6383)
!6385 = !DILocation(line: 1631, column: 24, scope: !6383)
!6386 = !DILocation(line: 1631, column: 27, scope: !6383)
!6387 = !DILocation(line: 1631, column: 7, scope: !6160)
!6388 = !DILocation(line: 1632, column: 5, scope: !6383)
!6389 = !DILocation(line: 1634, column: 7, scope: !6390)
!6390 = distinct !DILexicalBlock(scope: !6160, file: !349, line: 1634, column: 7)
!6391 = !DILocation(line: 1634, column: 10, scope: !6390)
!6392 = !DILocation(line: 1634, column: 22, scope: !6390)
!6393 = !DILocation(line: 1634, column: 7, scope: !6160)
!6394 = !DILocation(line: 1636, column: 14, scope: !6395)
!6395 = distinct !DILexicalBlock(scope: !6396, file: !349, line: 1636, column: 12)
!6396 = distinct !DILexicalBlock(scope: !6390, file: !349, line: 1635, column: 5)
!6397 = !DILocation(line: 1636, column: 12, scope: !6396)
!6398 = !DILocation(line: 1637, column: 23, scope: !6395)
!6399 = !DILocation(line: 1637, column: 22, scope: !6395)
!6400 = !{i64 0, i64 8, !3285, i64 8, i64 8, !3285, i64 16, i64 8, !3285, i64 24, i64 4, !2632, i64 28, i64 4, !2632, i64 32, i64 4, !2632, i64 36, i64 4, !2632, i64 40, i64 8, !3285, i64 48, i64 8, !3285, i64 56, i64 8, !3285, i64 64, i64 8, !3285, i64 72, i64 8, !3285, i64 80, i64 8, !3285, i64 88, i64 8, !3285, i64 96, i64 8, !3285, i64 104, i64 8, !3285, i64 112, i64 8, !3285, i64 120, i64 24, !3292}
!6401 = !DILocation(line: 1637, column: 9, scope: !6395)
!6402 = !DILocation(line: 1638, column: 22, scope: !6403)
!6403 = distinct !DILexicalBlock(scope: !6395, file: !349, line: 1638, column: 16)
!6404 = !DILocation(line: 1638, column: 16, scope: !6403)
!6405 = !DILocation(line: 1638, column: 45, scope: !6403)
!6406 = !DILocation(line: 1638, column: 16, scope: !6395)
!6407 = !DILocation(line: 1639, column: 9, scope: !6403)
!6408 = !DILocation(line: 1641, column: 14, scope: !6409)
!6409 = distinct !DILexicalBlock(scope: !6396, file: !349, line: 1641, column: 12)
!6410 = !DILocation(line: 1641, column: 12, scope: !6396)
!6411 = !DILocation(line: 1642, column: 23, scope: !6409)
!6412 = !DILocation(line: 1642, column: 22, scope: !6409)
!6413 = !DILocation(line: 1642, column: 9, scope: !6409)
!6414 = !DILocation(line: 1643, column: 22, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6409, file: !349, line: 1643, column: 16)
!6416 = !DILocation(line: 1643, column: 16, scope: !6415)
!6417 = !DILocation(line: 1643, column: 45, scope: !6415)
!6418 = !DILocation(line: 1643, column: 16, scope: !6409)
!6419 = !DILocation(line: 1644, column: 9, scope: !6415)
!6420 = !DILocation(line: 1646, column: 14, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6396, file: !349, line: 1646, column: 12)
!6422 = !DILocation(line: 1646, column: 12, scope: !6396)
!6423 = !DILocation(line: 1647, column: 9, scope: !6421)
!6424 = !DILocation(line: 1649, column: 11, scope: !6425)
!6425 = distinct !DILexicalBlock(scope: !6396, file: !349, line: 1649, column: 11)
!6426 = !DILocation(line: 1649, column: 14, scope: !6425)
!6427 = !DILocation(line: 1649, column: 11, scope: !6396)
!6428 = !DILocation(line: 1655, column: 27, scope: !6429)
!6429 = distinct !DILexicalBlock(scope: !6425, file: !349, line: 1650, column: 9)
!6430 = !DILocation(line: 1655, column: 25, scope: !6429)
!6431 = !DILocation(line: 1655, column: 12, scope: !6429)
!6432 = !DILocation(line: 1655, column: 23, scope: !6429)
!6433 = !DILocation(line: 1656, column: 11, scope: !6429)
!6434 = !DILocation(line: 1658, column: 5, scope: !6396)
!6435 = !DILocation(line: 1660, column: 3, scope: !6160)
!6436 = !DILocation(line: 1661, column: 1, scope: !6160)
!6437 = distinct !DISubprogram(name: "create_hard_link", scope: !349, file: !349, line: 1783, type: !450, scopeLine: 1785, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!6438 = !DILocalVariable(name: "src_name", arg: 1, scope: !6437, file: !349, line: 1783, type: !180)
!6439 = !DILocation(line: 1783, column: 31, scope: !6437)
!6440 = !DILocalVariable(name: "dst_name", arg: 2, scope: !6437, file: !349, line: 1783, type: !180)
!6441 = !DILocation(line: 1783, column: 53, scope: !6437)
!6442 = !DILocalVariable(name: "replace", arg: 3, scope: !6437, file: !349, line: 1784, type: !142)
!6443 = !DILocation(line: 1784, column: 24, scope: !6437)
!6444 = !DILocalVariable(name: "verbose", arg: 4, scope: !6437, file: !349, line: 1784, type: !142)
!6445 = !DILocation(line: 1784, column: 38, scope: !6437)
!6446 = !DILocalVariable(name: "dereference", arg: 5, scope: !6437, file: !349, line: 1784, type: !142)
!6447 = !DILocation(line: 1784, column: 52, scope: !6437)
!6448 = !DILocalVariable(name: "err", scope: !6437, file: !349, line: 1786, type: !7)
!6449 = !DILocation(line: 1786, column: 7, scope: !6437)
!6450 = !DILocation(line: 1786, column: 37, scope: !6437)
!6451 = !DILocation(line: 1786, column: 57, scope: !6437)
!6452 = !DILocation(line: 1787, column: 27, scope: !6437)
!6453 = !DILocation(line: 1788, column: 27, scope: !6437)
!6454 = !DILocation(line: 1786, column: 13, scope: !6437)
!6455 = !DILocation(line: 1789, column: 11, scope: !6456)
!6456 = distinct !DILexicalBlock(scope: !6437, file: !349, line: 1789, column: 7)
!6457 = !DILocation(line: 1789, column: 9, scope: !6456)
!6458 = !DILocation(line: 1789, column: 7, scope: !6437)
!6459 = !DILocation(line: 1791, column: 17, scope: !6460)
!6460 = distinct !DILexicalBlock(scope: !6456, file: !349, line: 1790, column: 5)
!6461 = !DILocation(line: 1791, column: 22, scope: !6460)
!6462 = !DILocation(line: 1792, column: 14, scope: !6460)
!6463 = !DILocation(line: 1792, column: 39, scope: !6460)
!6464 = !DILocation(line: 1791, column: 7, scope: !6460)
!6465 = !DILocation(line: 1793, column: 7, scope: !6460)
!6466 = !DILocation(line: 1795, column: 7, scope: !6467)
!6467 = distinct !DILexicalBlock(scope: !6437, file: !349, line: 1795, column: 7)
!6468 = !DILocation(line: 1795, column: 11, scope: !6467)
!6469 = !DILocation(line: 1795, column: 15, scope: !6467)
!6470 = !DILocation(line: 1795, column: 18, scope: !6467)
!6471 = !DILocation(line: 1795, column: 7, scope: !6437)
!6472 = !DILocation(line: 1796, column: 13, scope: !6467)
!6473 = !DILocation(line: 1796, column: 32, scope: !6467)
!6474 = !DILocation(line: 1796, column: 5, scope: !6467)
!6475 = !DILocation(line: 1797, column: 3, scope: !6437)
!6476 = !DILocation(line: 1798, column: 1, scope: !6437)
!6477 = distinct !DISubprogram(name: "abandon_move", scope: !349, file: !349, line: 1742, type: !452, scopeLine: 1745, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!6478 = !DILocalVariable(name: "x", arg: 1, scope: !6477, file: !349, line: 1742, type: !356)
!6479 = !DILocation(line: 1742, column: 40, scope: !6477)
!6480 = !DILocalVariable(name: "dst_name", arg: 2, scope: !6477, file: !349, line: 1743, type: !180)
!6481 = !DILocation(line: 1743, column: 27, scope: !6477)
!6482 = !DILocalVariable(name: "dst_sb", arg: 3, scope: !6477, file: !349, line: 1744, type: !413)
!6483 = !DILocation(line: 1744, column: 34, scope: !6477)
!6484 = !DILocation(line: 1746, column: 3, scope: !6485)
!6485 = distinct !DILexicalBlock(scope: !6486, file: !349, line: 1746, column: 3)
!6486 = distinct !DILexicalBlock(scope: !6477, file: !349, line: 1746, column: 3)
!6487 = !DILocation(line: 1746, column: 3, scope: !6486)
!6488 = !DILocation(line: 1747, column: 11, scope: !6477)
!6489 = !DILocation(line: 1747, column: 14, scope: !6477)
!6490 = !DILocation(line: 1747, column: 26, scope: !6477)
!6491 = !DILocation(line: 1748, column: 11, scope: !6477)
!6492 = !DILocation(line: 1748, column: 16, scope: !6477)
!6493 = !DILocation(line: 1748, column: 19, scope: !6477)
!6494 = !DILocation(line: 1748, column: 31, scope: !6477)
!6495 = !DILocation(line: 1749, column: 16, scope: !6477)
!6496 = !DILocation(line: 1749, column: 20, scope: !6477)
!6497 = !DILocation(line: 1749, column: 23, scope: !6477)
!6498 = !DILocation(line: 1749, column: 35, scope: !6477)
!6499 = !DILocation(line: 1750, column: 20, scope: !6477)
!6500 = !DILocation(line: 1750, column: 23, scope: !6477)
!6501 = !DILocation(line: 1750, column: 26, scope: !6477)
!6502 = !DILocation(line: 1751, column: 20, scope: !6477)
!6503 = !DILocation(line: 1751, column: 47, scope: !6477)
!6504 = !DILocation(line: 1751, column: 57, scope: !6477)
!6505 = !DILocation(line: 1751, column: 65, scope: !6477)
!6506 = !DILocation(line: 1751, column: 25, scope: !6477)
!6507 = !DILocation(line: 1752, column: 15, scope: !6477)
!6508 = !DILocation(line: 1752, column: 34, scope: !6477)
!6509 = !DILocation(line: 1752, column: 37, scope: !6477)
!6510 = !DILocation(line: 1752, column: 47, scope: !6477)
!6511 = !DILocation(line: 1752, column: 20, scope: !6477)
!6512 = !DILocation(line: 1752, column: 18, scope: !6477)
!6513 = !DILocation(line: 0, scope: !6477)
!6514 = !DILocation(line: 1747, column: 3, scope: !6477)
!6515 = distinct !DISubprogram(name: "overwrite_ok", scope: !349, file: !349, line: 1674, type: !452, scopeLine: 1676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!6516 = !DILocalVariable(name: "x", arg: 1, scope: !6515, file: !349, line: 1674, type: !356)
!6517 = !DILocation(line: 1674, column: 40, scope: !6515)
!6518 = !DILocalVariable(name: "dst_name", arg: 2, scope: !6515, file: !349, line: 1674, type: !180)
!6519 = !DILocation(line: 1674, column: 55, scope: !6515)
!6520 = !DILocalVariable(name: "dst_sb", arg: 3, scope: !6515, file: !349, line: 1675, type: !413)
!6521 = !DILocation(line: 1675, column: 34, scope: !6515)
!6522 = !DILocation(line: 1677, column: 31, scope: !6523)
!6523 = distinct !DILexicalBlock(scope: !6515, file: !349, line: 1677, column: 7)
!6524 = !DILocation(line: 1677, column: 41, scope: !6523)
!6525 = !DILocation(line: 1677, column: 49, scope: !6523)
!6526 = !DILocation(line: 1677, column: 9, scope: !6523)
!6527 = !DILocation(line: 1677, column: 7, scope: !6515)
!6528 = !DILocalVariable(name: "perms", scope: !6529, file: !349, line: 1679, type: !456)
!6529 = distinct !DILexicalBlock(scope: !6523, file: !349, line: 1678, column: 5)
!6530 = !DILocation(line: 1679, column: 12, scope: !6529)
!6531 = !DILocation(line: 1680, column: 16, scope: !6529)
!6532 = !DILocation(line: 1680, column: 24, scope: !6529)
!6533 = !DILocation(line: 1680, column: 33, scope: !6529)
!6534 = !DILocation(line: 1680, column: 7, scope: !6529)
!6535 = !DILocation(line: 1681, column: 7, scope: !6529)
!6536 = !DILocation(line: 1681, column: 17, scope: !6529)
!6537 = !DILocation(line: 1682, column: 16, scope: !6529)
!6538 = !DILocation(line: 1683, column: 17, scope: !6529)
!6539 = !DILocation(line: 1683, column: 20, scope: !6529)
!6540 = !DILocation(line: 1683, column: 30, scope: !6529)
!6541 = !DILocation(line: 1683, column: 33, scope: !6529)
!6542 = !DILocation(line: 1683, column: 36, scope: !6529)
!6543 = !DILocation(line: 1684, column: 17, scope: !6529)
!6544 = !DILocation(line: 1684, column: 20, scope: !6529)
!6545 = !DILocation(line: 1684, column: 23, scope: !6529)
!6546 = !DILocation(line: 1683, column: 16, scope: !6529)
!6547 = !DILocation(line: 1685, column: 18, scope: !6529)
!6548 = !DILocation(line: 1686, column: 18, scope: !6529)
!6549 = !DILocation(line: 1687, column: 16, scope: !6529)
!6550 = !DILocation(line: 1687, column: 30, scope: !6529)
!6551 = !DILocation(line: 1688, column: 37, scope: !6529)
!6552 = !DILocation(line: 1688, column: 45, scope: !6529)
!6553 = !DILocation(line: 1688, column: 53, scope: !6529)
!6554 = !DILocation(line: 1688, column: 16, scope: !6529)
!6555 = !DILocation(line: 1689, column: 17, scope: !6529)
!6556 = !DILocation(line: 1682, column: 7, scope: !6529)
!6557 = !DILocation(line: 1690, column: 5, scope: !6529)
!6558 = !DILocation(line: 1693, column: 16, scope: !6559)
!6559 = distinct !DILexicalBlock(scope: !6523, file: !349, line: 1692, column: 5)
!6560 = !DILocation(line: 1693, column: 24, scope: !6559)
!6561 = !DILocation(line: 1694, column: 16, scope: !6559)
!6562 = !DILocation(line: 1694, column: 30, scope: !6559)
!6563 = !DILocation(line: 1693, column: 7, scope: !6559)
!6564 = !DILocation(line: 1697, column: 10, scope: !6515)
!6565 = !DILocation(line: 1697, column: 3, scope: !6515)
!6566 = distinct !DISubprogram(name: "dot_or_dotdot", scope: !207, file: !207, line: 265, type: !220, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!6567 = !DILocalVariable(name: "file_name", arg: 1, scope: !6566, file: !207, line: 265, type: !180)
!6568 = !DILocation(line: 265, column: 28, scope: !6566)
!6569 = !DILocation(line: 267, column: 7, scope: !6570)
!6570 = distinct !DILexicalBlock(scope: !6566, file: !207, line: 267, column: 7)
!6571 = !DILocation(line: 267, column: 20, scope: !6570)
!6572 = !DILocation(line: 267, column: 7, scope: !6566)
!6573 = !DILocalVariable(name: "sep", scope: !6574, file: !207, line: 269, type: !10)
!6574 = distinct !DILexicalBlock(scope: !6570, file: !207, line: 268, column: 5)
!6575 = !DILocation(line: 269, column: 12, scope: !6574)
!6576 = !DILocation(line: 269, column: 18, scope: !6574)
!6577 = !DILocation(line: 269, column: 29, scope: !6574)
!6578 = !DILocation(line: 269, column: 42, scope: !6574)
!6579 = !DILocation(line: 269, column: 50, scope: !6574)
!6580 = !DILocation(line: 270, column: 17, scope: !6574)
!6581 = !DILocation(line: 270, column: 21, scope: !6574)
!6582 = !DILocation(line: 270, column: 24, scope: !6574)
!6583 = !DILocation(line: 270, column: 7, scope: !6574)
!6584 = !DILocation(line: 273, column: 5, scope: !6570)
!6585 = !DILocation(line: 274, column: 1, scope: !6566)
!6586 = distinct !DISubprogram(name: "source_is_dst_backup", scope: !349, file: !349, line: 1814, type: !493, scopeLine: 1816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!6587 = !DILocalVariable(name: "srcbase", arg: 1, scope: !6586, file: !349, line: 1814, type: !180)
!6588 = !DILocation(line: 1814, column: 35, scope: !6586)
!6589 = !DILocalVariable(name: "src_st", arg: 2, scope: !6586, file: !349, line: 1814, type: !413)
!6590 = !DILocation(line: 1814, column: 63, scope: !6586)
!6591 = !DILocalVariable(name: "dst_name", arg: 3, scope: !6586, file: !349, line: 1815, type: !180)
!6592 = !DILocation(line: 1815, column: 35, scope: !6586)
!6593 = !DILocalVariable(name: "srcbaselen", scope: !6586, file: !349, line: 1817, type: !55)
!6594 = !DILocation(line: 1817, column: 10, scope: !6586)
!6595 = !DILocation(line: 1817, column: 31, scope: !6586)
!6596 = !DILocation(line: 1817, column: 23, scope: !6586)
!6597 = !DILocalVariable(name: "dstbase", scope: !6586, file: !349, line: 1818, type: !180)
!6598 = !DILocation(line: 1818, column: 15, scope: !6586)
!6599 = !DILocation(line: 1818, column: 41, scope: !6586)
!6600 = !DILocation(line: 1818, column: 25, scope: !6586)
!6601 = !DILocalVariable(name: "dstbaselen", scope: !6586, file: !349, line: 1819, type: !55)
!6602 = !DILocation(line: 1819, column: 10, scope: !6586)
!6603 = !DILocation(line: 1819, column: 31, scope: !6586)
!6604 = !DILocation(line: 1819, column: 23, scope: !6586)
!6605 = !DILocalVariable(name: "suffixlen", scope: !6586, file: !349, line: 1820, type: !55)
!6606 = !DILocation(line: 1820, column: 10, scope: !6586)
!6607 = !DILocation(line: 1820, column: 30, scope: !6586)
!6608 = !DILocation(line: 1820, column: 22, scope: !6586)
!6609 = !DILocation(line: 1821, column: 10, scope: !6610)
!6610 = distinct !DILexicalBlock(scope: !6586, file: !349, line: 1821, column: 7)
!6611 = !DILocation(line: 1821, column: 24, scope: !6610)
!6612 = !DILocation(line: 1821, column: 37, scope: !6610)
!6613 = !DILocation(line: 1821, column: 35, scope: !6610)
!6614 = !DILocation(line: 1821, column: 21, scope: !6610)
!6615 = !DILocation(line: 1822, column: 10, scope: !6610)
!6616 = !DILocation(line: 1822, column: 21, scope: !6610)
!6617 = !DILocation(line: 1822, column: 30, scope: !6610)
!6618 = !DILocation(line: 1822, column: 39, scope: !6610)
!6619 = !DILocation(line: 1822, column: 13, scope: !6610)
!6620 = !DILocation(line: 1822, column: 51, scope: !6610)
!6621 = !DILocation(line: 1823, column: 10, scope: !6610)
!6622 = !DILocation(line: 1823, column: 13, scope: !6610)
!6623 = !DILocation(line: 1821, column: 7, scope: !6586)
!6624 = !DILocation(line: 1824, column: 5, scope: !6610)
!6625 = !DILocalVariable(name: "dstlen", scope: !6586, file: !349, line: 1825, type: !55)
!6626 = !DILocation(line: 1825, column: 10, scope: !6586)
!6627 = !DILocation(line: 1825, column: 27, scope: !6586)
!6628 = !DILocation(line: 1825, column: 19, scope: !6586)
!6629 = !DILocalVariable(name: "dst_back", scope: !6586, file: !349, line: 1826, type: !9)
!6630 = !DILocation(line: 1826, column: 9, scope: !6586)
!6631 = !DILocation(line: 1826, column: 29, scope: !6586)
!6632 = !DILocation(line: 1826, column: 38, scope: !6586)
!6633 = !DILocation(line: 1826, column: 36, scope: !6586)
!6634 = !DILocation(line: 1826, column: 48, scope: !6586)
!6635 = !DILocation(line: 1826, column: 20, scope: !6586)
!6636 = !DILocation(line: 1827, column: 20, scope: !6586)
!6637 = !DILocation(line: 1827, column: 30, scope: !6586)
!6638 = !DILocation(line: 1827, column: 40, scope: !6586)
!6639 = !DILocation(line: 1827, column: 11, scope: !6586)
!6640 = !DILocation(line: 1827, column: 49, scope: !6586)
!6641 = !DILocation(line: 1827, column: 3, scope: !6586)
!6642 = !DILocalVariable(name: "dst_back_sb", scope: !6586, file: !349, line: 1828, type: !415)
!6643 = !DILocation(line: 1828, column: 15, scope: !6586)
!6644 = !DILocalVariable(name: "dst_back_status", scope: !6586, file: !349, line: 1829, type: !7)
!6645 = !DILocation(line: 1829, column: 7, scope: !6586)
!6646 = !DILocation(line: 1829, column: 31, scope: !6586)
!6647 = !DILocation(line: 1829, column: 25, scope: !6586)
!6648 = !DILocation(line: 1830, column: 9, scope: !6586)
!6649 = !DILocation(line: 1830, column: 3, scope: !6586)
!6650 = !DILocation(line: 1831, column: 10, scope: !6586)
!6651 = !DILocation(line: 1831, column: 26, scope: !6586)
!6652 = !DILocation(line: 1831, column: 31, scope: !6586)
!6653 = !DILocation(line: 1831, column: 34, scope: !6586)
!6654 = !DILocation(line: 0, scope: !6586)
!6655 = !DILocation(line: 1831, column: 3, scope: !6586)
!6656 = !DILocation(line: 1832, column: 1, scope: !6586)
!6657 = distinct !DISubprogram(name: "emit_verbose", scope: !349, file: !349, line: 1759, type: !495, scopeLine: 1760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!6658 = !DILocalVariable(name: "src", arg: 1, scope: !6657, file: !349, line: 1759, type: !180)
!6659 = !DILocation(line: 1759, column: 27, scope: !6657)
!6660 = !DILocalVariable(name: "dst", arg: 2, scope: !6657, file: !349, line: 1759, type: !180)
!6661 = !DILocation(line: 1759, column: 44, scope: !6657)
!6662 = !DILocalVariable(name: "backup_dst_name", arg: 3, scope: !6657, file: !349, line: 1759, type: !180)
!6663 = !DILocation(line: 1759, column: 61, scope: !6657)
!6664 = !DILocation(line: 1761, column: 23, scope: !6657)
!6665 = !DILocation(line: 1761, column: 43, scope: !6657)
!6666 = !DILocation(line: 1761, column: 3, scope: !6657)
!6667 = !DILocation(line: 1762, column: 7, scope: !6668)
!6668 = distinct !DILexicalBlock(scope: !6657, file: !349, line: 1762, column: 7)
!6669 = !DILocation(line: 1762, column: 7, scope: !6657)
!6670 = !DILocation(line: 1763, column: 13, scope: !6668)
!6671 = !DILocation(line: 1763, column: 33, scope: !6668)
!6672 = !DILocation(line: 1763, column: 5, scope: !6668)
!6673 = !DILocation(line: 1764, column: 3, scope: !6657)
!6674 = !DILocation(line: 1765, column: 1, scope: !6657)
!6675 = distinct !DISubprogram(name: "is_ancestor", scope: !349, file: !349, line: 584, type: !497, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!6676 = !DILocalVariable(name: "sb", arg: 1, scope: !6675, file: !349, line: 584, type: !413)
!6677 = !DILocation(line: 584, column: 33, scope: !6675)
!6678 = !DILocalVariable(name: "ancestors", arg: 2, scope: !6675, file: !349, line: 584, type: !499)
!6679 = !DILocation(line: 584, column: 60, scope: !6675)
!6680 = !DILocation(line: 586, column: 3, scope: !6675)
!6681 = !DILocation(line: 586, column: 10, scope: !6675)
!6682 = !DILocation(line: 586, column: 20, scope: !6675)
!6683 = !DILocation(line: 588, column: 11, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6685, file: !349, line: 588, column: 11)
!6685 = distinct !DILexicalBlock(scope: !6675, file: !349, line: 587, column: 5)
!6686 = !DILocation(line: 588, column: 22, scope: !6684)
!6687 = !DILocation(line: 588, column: 29, scope: !6684)
!6688 = !DILocation(line: 588, column: 33, scope: !6684)
!6689 = !DILocation(line: 588, column: 26, scope: !6684)
!6690 = !DILocation(line: 588, column: 40, scope: !6684)
!6691 = !DILocation(line: 588, column: 43, scope: !6684)
!6692 = !DILocation(line: 588, column: 54, scope: !6684)
!6693 = !DILocation(line: 588, column: 61, scope: !6684)
!6694 = !DILocation(line: 588, column: 65, scope: !6684)
!6695 = !DILocation(line: 588, column: 58, scope: !6684)
!6696 = !DILocation(line: 588, column: 11, scope: !6685)
!6697 = !DILocation(line: 589, column: 9, scope: !6684)
!6698 = !DILocation(line: 590, column: 19, scope: !6685)
!6699 = !DILocation(line: 590, column: 30, scope: !6685)
!6700 = !DILocation(line: 590, column: 17, scope: !6685)
!6701 = distinct !{!6701, !6680, !6702}
!6702 = !DILocation(line: 591, column: 5, scope: !6675)
!6703 = !DILocation(line: 592, column: 3, scope: !6675)
!6704 = !DILocation(line: 593, column: 1, scope: !6675)
!6705 = distinct !DISubprogram(name: "copy_dir", scope: !349, file: !349, line: 709, type: !501, scopeLine: 714, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!6706 = !DILocalVariable(name: "src_name_in", arg: 1, scope: !6705, file: !349, line: 709, type: !180)
!6707 = !DILocation(line: 709, column: 23, scope: !6705)
!6708 = !DILocalVariable(name: "dst_name_in", arg: 2, scope: !6705, file: !349, line: 709, type: !180)
!6709 = !DILocation(line: 709, column: 48, scope: !6705)
!6710 = !DILocalVariable(name: "new_dst", arg: 3, scope: !6705, file: !349, line: 709, type: !142)
!6711 = !DILocation(line: 709, column: 66, scope: !6705)
!6712 = !DILocalVariable(name: "src_sb", arg: 4, scope: !6705, file: !349, line: 710, type: !413)
!6713 = !DILocation(line: 710, column: 30, scope: !6705)
!6714 = !DILocalVariable(name: "ancestors", arg: 5, scope: !6705, file: !349, line: 710, type: !436)
!6715 = !DILocation(line: 710, column: 55, scope: !6705)
!6716 = !DILocalVariable(name: "x", arg: 6, scope: !6705, file: !349, line: 711, type: !356)
!6717 = !DILocation(line: 711, column: 36, scope: !6705)
!6718 = !DILocalVariable(name: "first_dir_created_per_command_line_arg", arg: 7, scope: !6705, file: !349, line: 712, type: !406)
!6719 = !DILocation(line: 712, column: 17, scope: !6705)
!6720 = !DILocalVariable(name: "copy_into_self", arg: 8, scope: !6705, file: !349, line: 713, type: !406)
!6721 = !DILocation(line: 713, column: 17, scope: !6705)
!6722 = !DILocalVariable(name: "name_space", scope: !6705, file: !349, line: 715, type: !9)
!6723 = !DILocation(line: 715, column: 9, scope: !6705)
!6724 = !DILocalVariable(name: "namep", scope: !6705, file: !349, line: 716, type: !9)
!6725 = !DILocation(line: 716, column: 9, scope: !6705)
!6726 = !DILocalVariable(name: "non_command_line_options", scope: !6705, file: !349, line: 717, type: !358)
!6727 = !DILocation(line: 717, column: 21, scope: !6705)
!6728 = !DILocation(line: 717, column: 49, scope: !6705)
!6729 = !DILocation(line: 717, column: 48, scope: !6705)
!6730 = !{i64 0, i64 4, !3292, i64 4, i64 4, !3292, i64 8, i64 4, !3292, i64 12, i64 4, !3292, i64 16, i64 4, !2632, i64 20, i64 1, !2739, i64 21, i64 1, !2739, i64 22, i64 1, !2739, i64 23, i64 1, !2739, i64 24, i64 1, !2739, i64 25, i64 1, !2739, i64 26, i64 1, !2739, i64 27, i64 1, !2739, i64 28, i64 1, !2739, i64 29, i64 1, !2739, i64 30, i64 1, !2739, i64 31, i64 1, !2739, i64 32, i64 1, !2739, i64 33, i64 1, !2739, i64 34, i64 1, !2739, i64 35, i64 1, !2739, i64 36, i64 1, !2739, i64 37, i64 1, !2739, i64 38, i64 1, !2739, i64 39, i64 1, !2739, i64 40, i64 1, !2739, i64 41, i64 1, !2739, i64 42, i64 1, !2739, i64 43, i64 1, !2739, i64 44, i64 1, !2739, i64 45, i64 1, !2739, i64 46, i64 1, !2739, i64 47, i64 1, !2739, i64 48, i64 1, !2739, i64 49, i64 1, !2739, i64 52, i64 4, !2632, i64 56, i64 4, !3292, i64 64, i64 8, !2645, i64 72, i64 8, !2645}
!6731 = !DILocalVariable(name: "ok", scope: !6705, file: !349, line: 718, type: !142)
!6732 = !DILocation(line: 718, column: 8, scope: !6705)
!6733 = !DILocation(line: 720, column: 25, scope: !6705)
!6734 = !DILocation(line: 720, column: 16, scope: !6705)
!6735 = !DILocation(line: 720, column: 14, scope: !6705)
!6736 = !DILocation(line: 721, column: 7, scope: !6737)
!6737 = distinct !DILexicalBlock(scope: !6705, file: !349, line: 721, column: 7)
!6738 = !DILocation(line: 721, column: 18, scope: !6737)
!6739 = !DILocation(line: 721, column: 7, scope: !6705)
!6740 = !DILocation(line: 725, column: 17, scope: !6741)
!6741 = distinct !DILexicalBlock(scope: !6737, file: !349, line: 722, column: 5)
!6742 = !DILocation(line: 725, column: 24, scope: !6741)
!6743 = !DILocation(line: 725, column: 47, scope: !6741)
!6744 = !DILocation(line: 725, column: 7, scope: !6741)
!6745 = !DILocation(line: 726, column: 7, scope: !6741)
!6746 = !DILocation(line: 731, column: 7, scope: !6747)
!6747 = distinct !DILexicalBlock(scope: !6705, file: !349, line: 731, column: 7)
!6748 = !DILocation(line: 731, column: 10, scope: !6747)
!6749 = !DILocation(line: 731, column: 22, scope: !6747)
!6750 = !DILocation(line: 731, column: 7, scope: !6705)
!6751 = !DILocation(line: 732, column: 30, scope: !6747)
!6752 = !DILocation(line: 732, column: 42, scope: !6747)
!6753 = !DILocation(line: 732, column: 5, scope: !6747)
!6754 = !DILocalVariable(name: "new_first_dir_created", scope: !6705, file: !349, line: 734, type: !142)
!6755 = !DILocation(line: 734, column: 8, scope: !6705)
!6756 = !DILocation(line: 735, column: 11, scope: !6705)
!6757 = !DILocation(line: 735, column: 9, scope: !6705)
!6758 = !DILocation(line: 736, column: 3, scope: !6705)
!6759 = !DILocation(line: 736, column: 11, scope: !6705)
!6760 = !DILocation(line: 736, column: 10, scope: !6705)
!6761 = !DILocation(line: 736, column: 17, scope: !6705)
!6762 = !DILocalVariable(name: "local_copy_into_self", scope: !6763, file: !349, line: 738, type: !142)
!6763 = distinct !DILexicalBlock(scope: !6705, file: !349, line: 737, column: 5)
!6764 = !DILocation(line: 738, column: 12, scope: !6763)
!6765 = !DILocalVariable(name: "src_name", scope: !6763, file: !349, line: 739, type: !9)
!6766 = !DILocation(line: 739, column: 13, scope: !6763)
!6767 = !DILocation(line: 739, column: 42, scope: !6763)
!6768 = !DILocation(line: 739, column: 55, scope: !6763)
!6769 = !DILocation(line: 739, column: 24, scope: !6763)
!6770 = !DILocalVariable(name: "dst_name", scope: !6763, file: !349, line: 740, type: !9)
!6771 = !DILocation(line: 740, column: 13, scope: !6763)
!6772 = !DILocation(line: 740, column: 42, scope: !6763)
!6773 = !DILocation(line: 740, column: 55, scope: !6763)
!6774 = !DILocation(line: 740, column: 24, scope: !6763)
!6775 = !DILocalVariable(name: "first_dir_created", scope: !6763, file: !349, line: 741, type: !142)
!6776 = !DILocation(line: 741, column: 12, scope: !6763)
!6777 = !DILocation(line: 741, column: 33, scope: !6763)
!6778 = !DILocation(line: 741, column: 32, scope: !6763)
!6779 = !DILocation(line: 743, column: 28, scope: !6763)
!6780 = !DILocation(line: 743, column: 38, scope: !6763)
!6781 = !DILocation(line: 743, column: 48, scope: !6763)
!6782 = !DILocation(line: 743, column: 57, scope: !6763)
!6783 = !DILocation(line: 744, column: 28, scope: !6763)
!6784 = !DILocation(line: 743, column: 13, scope: !6763)
!6785 = !DILocation(line: 743, column: 10, scope: !6763)
!6786 = !DILocation(line: 747, column: 26, scope: !6763)
!6787 = !DILocation(line: 747, column: 8, scope: !6763)
!6788 = !DILocation(line: 747, column: 23, scope: !6763)
!6789 = !DILocation(line: 749, column: 13, scope: !6763)
!6790 = !DILocation(line: 749, column: 7, scope: !6763)
!6791 = !DILocation(line: 750, column: 13, scope: !6763)
!6792 = !DILocation(line: 750, column: 7, scope: !6763)
!6793 = !DILocation(line: 755, column: 11, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6763, file: !349, line: 755, column: 11)
!6795 = !DILocation(line: 755, column: 11, scope: !6763)
!6796 = !DILocation(line: 756, column: 9, scope: !6794)
!6797 = !DILocation(line: 758, column: 32, scope: !6763)
!6798 = !DILocation(line: 758, column: 29, scope: !6763)
!6799 = !DILocation(line: 759, column: 24, scope: !6763)
!6800 = !DILocation(line: 759, column: 16, scope: !6763)
!6801 = !DILocation(line: 759, column: 31, scope: !6763)
!6802 = !DILocation(line: 759, column: 13, scope: !6763)
!6803 = distinct !{!6803, !6758, !6804}
!6804 = !DILocation(line: 760, column: 5, scope: !6705)
!6805 = !DILocation(line: 761, column: 9, scope: !6705)
!6806 = !DILocation(line: 761, column: 3, scope: !6705)
!6807 = !DILocation(line: 762, column: 45, scope: !6705)
!6808 = !DILocation(line: 762, column: 4, scope: !6705)
!6809 = !DILocation(line: 762, column: 43, scope: !6705)
!6810 = !DILocation(line: 764, column: 10, scope: !6705)
!6811 = !DILocation(line: 764, column: 3, scope: !6705)
!6812 = !DILocation(line: 765, column: 1, scope: !6705)
!6813 = distinct !DISubprogram(name: "copy_reg", scope: !349, file: !349, line: 1016, type: !503, scopeLine: 1020, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!6814 = !DILocalVariable(name: "src_name", arg: 1, scope: !6813, file: !349, line: 1016, type: !180)
!6815 = !DILocation(line: 1016, column: 23, scope: !6813)
!6816 = !DILocalVariable(name: "dst_name", arg: 2, scope: !6813, file: !349, line: 1016, type: !180)
!6817 = !DILocation(line: 1016, column: 45, scope: !6813)
!6818 = !DILocalVariable(name: "x", arg: 3, scope: !6813, file: !349, line: 1017, type: !356)
!6819 = !DILocation(line: 1017, column: 36, scope: !6813)
!6820 = !DILocalVariable(name: "dst_mode", arg: 4, scope: !6813, file: !349, line: 1018, type: !139)
!6821 = !DILocation(line: 1018, column: 18, scope: !6813)
!6822 = !DILocalVariable(name: "omitted_permissions", arg: 5, scope: !6813, file: !349, line: 1018, type: !139)
!6823 = !DILocation(line: 1018, column: 35, scope: !6813)
!6824 = !DILocalVariable(name: "new_dst", arg: 6, scope: !6813, file: !349, line: 1018, type: !406)
!6825 = !DILocation(line: 1018, column: 62, scope: !6813)
!6826 = !DILocalVariable(name: "src_sb", arg: 7, scope: !6813, file: !349, line: 1019, type: !413)
!6827 = !DILocation(line: 1019, column: 30, scope: !6813)
!6828 = !DILocalVariable(name: "buf", scope: !6813, file: !349, line: 1021, type: !9)
!6829 = !DILocation(line: 1021, column: 9, scope: !6813)
!6830 = !DILocalVariable(name: "buf_alloc", scope: !6813, file: !349, line: 1022, type: !9)
!6831 = !DILocation(line: 1022, column: 9, scope: !6813)
!6832 = !DILocalVariable(name: "name_alloc", scope: !6813, file: !349, line: 1023, type: !9)
!6833 = !DILocation(line: 1023, column: 9, scope: !6813)
!6834 = !DILocalVariable(name: "dest_desc", scope: !6813, file: !349, line: 1024, type: !7)
!6835 = !DILocation(line: 1024, column: 7, scope: !6813)
!6836 = !DILocalVariable(name: "dest_errno", scope: !6813, file: !349, line: 1025, type: !7)
!6837 = !DILocation(line: 1025, column: 7, scope: !6813)
!6838 = !DILocalVariable(name: "source_desc", scope: !6813, file: !349, line: 1026, type: !7)
!6839 = !DILocation(line: 1026, column: 7, scope: !6813)
!6840 = !DILocalVariable(name: "src_mode", scope: !6813, file: !349, line: 1027, type: !139)
!6841 = !DILocation(line: 1027, column: 10, scope: !6813)
!6842 = !DILocation(line: 1027, column: 21, scope: !6813)
!6843 = !DILocation(line: 1027, column: 29, scope: !6813)
!6844 = !DILocalVariable(name: "sb", scope: !6813, file: !349, line: 1028, type: !415)
!6845 = !DILocation(line: 1028, column: 15, scope: !6813)
!6846 = !DILocalVariable(name: "src_open_sb", scope: !6813, file: !349, line: 1029, type: !415)
!6847 = !DILocation(line: 1029, column: 15, scope: !6813)
!6848 = !DILocalVariable(name: "return_val", scope: !6813, file: !349, line: 1030, type: !142)
!6849 = !DILocation(line: 1030, column: 8, scope: !6813)
!6850 = !DILocalVariable(name: "data_copy_required", scope: !6813, file: !349, line: 1031, type: !142)
!6851 = !DILocation(line: 1031, column: 8, scope: !6813)
!6852 = !DILocation(line: 1031, column: 29, scope: !6813)
!6853 = !DILocation(line: 1031, column: 32, scope: !6813)
!6854 = !DILocation(line: 1033, column: 23, scope: !6813)
!6855 = !DILocation(line: 1035, column: 27, scope: !6813)
!6856 = !DILocation(line: 1035, column: 30, scope: !6813)
!6857 = !DILocation(line: 1035, column: 42, scope: !6813)
!6858 = !DILocation(line: 1035, column: 24, scope: !6813)
!6859 = !DILocation(line: 1033, column: 17, scope: !6813)
!6860 = !DILocation(line: 1033, column: 15, scope: !6813)
!6861 = !DILocation(line: 1036, column: 7, scope: !6862)
!6862 = distinct !DILexicalBlock(scope: !6813, file: !349, line: 1036, column: 7)
!6863 = !DILocation(line: 1036, column: 19, scope: !6862)
!6864 = !DILocation(line: 1036, column: 7, scope: !6813)
!6865 = !DILocation(line: 1038, column: 17, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6862, file: !349, line: 1037, column: 5)
!6867 = !DILocation(line: 1038, column: 24, scope: !6866)
!6868 = !DILocation(line: 1038, column: 57, scope: !6866)
!6869 = !DILocation(line: 1038, column: 7, scope: !6866)
!6870 = !DILocation(line: 1039, column: 7, scope: !6866)
!6871 = !DILocation(line: 1042, column: 14, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6813, file: !349, line: 1042, column: 7)
!6873 = !DILocation(line: 1042, column: 7, scope: !6872)
!6874 = !DILocation(line: 1042, column: 41, scope: !6872)
!6875 = !DILocation(line: 1042, column: 7, scope: !6813)
!6876 = !DILocation(line: 1044, column: 17, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6872, file: !349, line: 1043, column: 5)
!6878 = !DILocation(line: 1044, column: 24, scope: !6877)
!6879 = !DILocation(line: 1044, column: 46, scope: !6877)
!6880 = !DILocation(line: 1044, column: 7, scope: !6877)
!6881 = !DILocation(line: 1045, column: 18, scope: !6877)
!6882 = !DILocation(line: 1046, column: 7, scope: !6877)
!6883 = !DILocation(line: 1051, column: 9, scope: !6884)
!6884 = distinct !DILexicalBlock(scope: !6813, file: !349, line: 1051, column: 7)
!6885 = !DILocation(line: 1051, column: 7, scope: !6813)
!6886 = !DILocation(line: 1054, column: 14, scope: !6887)
!6887 = distinct !DILexicalBlock(scope: !6884, file: !349, line: 1052, column: 5)
!6888 = !DILocation(line: 1055, column: 14, scope: !6887)
!6889 = !DILocation(line: 1053, column: 7, scope: !6887)
!6890 = !DILocation(line: 1056, column: 18, scope: !6887)
!6891 = !DILocation(line: 1057, column: 7, scope: !6887)
!6892 = !DILocation(line: 1062, column: 10, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6813, file: !349, line: 1062, column: 7)
!6894 = !DILocation(line: 1062, column: 9, scope: !6893)
!6895 = !DILocation(line: 1062, column: 7, scope: !6813)
!6896 = !DILocalVariable(name: "open_flags", scope: !6897, file: !349, line: 1064, type: !7)
!6897 = distinct !DILexicalBlock(scope: !6893, file: !349, line: 1063, column: 5)
!6898 = !DILocation(line: 1064, column: 11, scope: !6897)
!6899 = !DILocation(line: 1065, column: 32, scope: !6897)
!6900 = !DILocation(line: 1065, column: 35, scope: !6897)
!6901 = !DILocation(line: 1065, column: 29, scope: !6897)
!6902 = !DILocation(line: 1066, column: 25, scope: !6897)
!6903 = !DILocation(line: 1066, column: 35, scope: !6897)
!6904 = !DILocation(line: 1066, column: 19, scope: !6897)
!6905 = !DILocation(line: 1066, column: 17, scope: !6897)
!6906 = !DILocation(line: 1067, column: 20, scope: !6897)
!6907 = !DILocation(line: 1067, column: 18, scope: !6897)
!6908 = !DILocation(line: 1076, column: 12, scope: !6909)
!6909 = distinct !DILexicalBlock(scope: !6897, file: !349, line: 1076, column: 11)
!6910 = !DILocation(line: 1076, column: 15, scope: !6909)
!6911 = !DILocation(line: 1076, column: 36, scope: !6909)
!6912 = !DILocation(line: 1076, column: 39, scope: !6909)
!6913 = !DILocation(line: 1076, column: 42, scope: !6909)
!6914 = !DILocation(line: 1077, column: 11, scope: !6909)
!6915 = !DILocation(line: 1077, column: 19, scope: !6909)
!6916 = !DILocation(line: 1077, column: 16, scope: !6909)
!6917 = !DILocation(line: 1076, column: 11, scope: !6897)
!6918 = !DILocation(line: 1079, column: 40, scope: !6919)
!6919 = distinct !DILexicalBlock(scope: !6920, file: !349, line: 1079, column: 15)
!6920 = distinct !DILexicalBlock(scope: !6909, file: !349, line: 1078, column: 9)
!6921 = !DILocation(line: 1079, column: 50, scope: !6919)
!6922 = !DILocation(line: 1079, column: 53, scope: !6919)
!6923 = !DILocation(line: 1080, column: 47, scope: !6919)
!6924 = !DILocation(line: 1079, column: 17, scope: !6919)
!6925 = !DILocation(line: 1079, column: 15, scope: !6920)
!6926 = !DILocation(line: 1082, column: 19, scope: !6927)
!6927 = distinct !DILexicalBlock(scope: !6928, file: !349, line: 1082, column: 19)
!6928 = distinct !DILexicalBlock(scope: !6919, file: !349, line: 1081, column: 13)
!6929 = !DILocation(line: 1082, column: 22, scope: !6927)
!6930 = !DILocation(line: 1082, column: 19, scope: !6928)
!6931 = !DILocation(line: 1084, column: 30, scope: !6932)
!6932 = distinct !DILexicalBlock(scope: !6927, file: !349, line: 1083, column: 17)
!6933 = !DILocation(line: 1085, column: 19, scope: !6932)
!6934 = !DILocation(line: 1087, column: 13, scope: !6928)
!6935 = !DILocation(line: 1088, column: 9, scope: !6920)
!6936 = !DILocation(line: 1090, column: 11, scope: !6937)
!6937 = distinct !DILexicalBlock(scope: !6897, file: !349, line: 1090, column: 11)
!6938 = !DILocation(line: 1090, column: 21, scope: !6937)
!6939 = !DILocation(line: 1090, column: 25, scope: !6937)
!6940 = !DILocation(line: 1090, column: 28, scope: !6937)
!6941 = !DILocation(line: 1090, column: 31, scope: !6937)
!6942 = !DILocation(line: 1090, column: 11, scope: !6897)
!6943 = !DILocation(line: 1092, column: 23, scope: !6944)
!6944 = distinct !DILexicalBlock(scope: !6945, file: !349, line: 1092, column: 15)
!6945 = distinct !DILexicalBlock(scope: !6937, file: !349, line: 1091, column: 9)
!6946 = !DILocation(line: 1092, column: 15, scope: !6944)
!6947 = !DILocation(line: 1092, column: 33, scope: !6944)
!6948 = !DILocation(line: 1092, column: 15, scope: !6945)
!6949 = !DILocation(line: 1094, column: 25, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !6944, file: !349, line: 1093, column: 13)
!6951 = !DILocation(line: 1094, column: 32, scope: !6950)
!6952 = !DILocation(line: 1094, column: 55, scope: !6950)
!6953 = !DILocation(line: 1094, column: 15, scope: !6950)
!6954 = !DILocation(line: 1095, column: 26, scope: !6950)
!6955 = !DILocation(line: 1096, column: 15, scope: !6950)
!6956 = !DILocation(line: 1098, column: 15, scope: !6957)
!6957 = distinct !DILexicalBlock(scope: !6945, file: !349, line: 1098, column: 15)
!6958 = !DILocation(line: 1098, column: 18, scope: !6957)
!6959 = !DILocation(line: 1098, column: 15, scope: !6945)
!6960 = !DILocation(line: 1099, column: 21, scope: !6957)
!6961 = !DILocation(line: 1099, column: 40, scope: !6957)
!6962 = !DILocation(line: 1099, column: 13, scope: !6957)
!6963 = !DILocation(line: 1102, column: 12, scope: !6945)
!6964 = !DILocation(line: 1102, column: 20, scope: !6945)
!6965 = !DILocation(line: 1106, column: 15, scope: !6966)
!6966 = distinct !DILexicalBlock(scope: !6945, file: !349, line: 1106, column: 15)
!6967 = !DILocation(line: 1106, column: 18, scope: !6966)
!6968 = !DILocation(line: 1106, column: 15, scope: !6945)
!6969 = !DILocation(line: 1108, column: 47, scope: !6970)
!6970 = distinct !DILexicalBlock(scope: !6971, file: !349, line: 1108, column: 19)
!6971 = distinct !DILexicalBlock(scope: !6966, file: !349, line: 1107, column: 13)
!6972 = !DILocation(line: 1108, column: 57, scope: !6970)
!6973 = !DILocation(line: 1108, column: 67, scope: !6970)
!6974 = !DILocation(line: 1109, column: 48, scope: !6970)
!6975 = !DILocation(line: 1109, column: 47, scope: !6970)
!6976 = !DILocation(line: 1109, column: 57, scope: !6970)
!6977 = !DILocation(line: 1108, column: 21, scope: !6970)
!6978 = !DILocation(line: 1108, column: 19, scope: !6971)
!6979 = !DILocation(line: 1111, column: 30, scope: !6980)
!6980 = distinct !DILexicalBlock(scope: !6970, file: !349, line: 1110, column: 17)
!6981 = !DILocation(line: 1112, column: 19, scope: !6980)
!6982 = !DILocation(line: 1114, column: 13, scope: !6971)
!6983 = !DILocation(line: 1115, column: 9, scope: !6945)
!6984 = !DILocation(line: 1116, column: 5, scope: !6897)
!6985 = !DILocation(line: 1118, column: 8, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6813, file: !349, line: 1118, column: 7)
!6987 = !DILocation(line: 1118, column: 7, scope: !6986)
!6988 = !DILocation(line: 1118, column: 7, scope: !6813)
!6989 = !DILocation(line: 1119, column: 5, scope: !6986)
!6990 = !DILabel(scope: !6991, name: "open_with_O_CREAT", file: !349, line: 1120)
!6991 = distinct !DILexicalBlock(scope: !6986, file: !349, line: 1119, column: 5)
!6992 = !DILocation(line: 1120, column: 5, scope: !6991)
!6993 = !DILocalVariable(name: "open_flags", scope: !6991, file: !349, line: 1122, type: !7)
!6994 = !DILocation(line: 1122, column: 11, scope: !6991)
!6995 = !DILocation(line: 1123, column: 25, scope: !6991)
!6996 = !DILocation(line: 1123, column: 35, scope: !6991)
!6997 = !DILocation(line: 1123, column: 46, scope: !6991)
!6998 = !DILocation(line: 1124, column: 25, scope: !6991)
!6999 = !DILocation(line: 1124, column: 37, scope: !6991)
!7000 = !DILocation(line: 1124, column: 36, scope: !6991)
!7001 = !DILocation(line: 1124, column: 34, scope: !6991)
!7002 = !DILocation(line: 1123, column: 19, scope: !6991)
!7003 = !DILocation(line: 1123, column: 17, scope: !6991)
!7004 = !DILocation(line: 1125, column: 20, scope: !6991)
!7005 = !DILocation(line: 1125, column: 18, scope: !6991)
!7006 = !DILocation(line: 1137, column: 11, scope: !7007)
!7007 = distinct !DILexicalBlock(scope: !6991, file: !349, line: 1137, column: 11)
!7008 = !DILocation(line: 1137, column: 21, scope: !7007)
!7009 = !DILocation(line: 1137, column: 25, scope: !7007)
!7010 = !DILocation(line: 1137, column: 28, scope: !7007)
!7011 = !DILocation(line: 1137, column: 39, scope: !7007)
!7012 = !DILocation(line: 1137, column: 49, scope: !7007)
!7013 = !DILocation(line: 1137, column: 54, scope: !7007)
!7014 = !DILocation(line: 1137, column: 57, scope: !7007)
!7015 = !DILocation(line: 1137, column: 11, scope: !6991)
!7016 = !DILocalVariable(name: "dangling_link_sb", scope: !7017, file: !349, line: 1139, type: !415)
!7017 = distinct !DILexicalBlock(scope: !7007, file: !349, line: 1138, column: 9)
!7018 = !DILocation(line: 1139, column: 23, scope: !7017)
!7019 = !DILocation(line: 1140, column: 22, scope: !7020)
!7020 = distinct !DILexicalBlock(scope: !7017, file: !349, line: 1140, column: 15)
!7021 = !DILocation(line: 1140, column: 15, scope: !7020)
!7022 = !DILocation(line: 1140, column: 51, scope: !7020)
!7023 = !DILocation(line: 1141, column: 15, scope: !7020)
!7024 = !DILocation(line: 1141, column: 18, scope: !7020)
!7025 = !DILocation(line: 1140, column: 15, scope: !7017)
!7026 = !DILocation(line: 1143, column: 19, scope: !7027)
!7027 = distinct !DILexicalBlock(scope: !7028, file: !349, line: 1143, column: 19)
!7028 = distinct !DILexicalBlock(scope: !7020, file: !349, line: 1142, column: 13)
!7029 = !DILocation(line: 1143, column: 22, scope: !7027)
!7030 = !DILocation(line: 1143, column: 19, scope: !7028)
!7031 = !DILocation(line: 1145, column: 37, scope: !7032)
!7032 = distinct !DILexicalBlock(scope: !7027, file: !349, line: 1144, column: 17)
!7033 = !DILocation(line: 1145, column: 47, scope: !7032)
!7034 = !DILocation(line: 1146, column: 37, scope: !7032)
!7035 = !DILocation(line: 1146, column: 49, scope: !7032)
!7036 = !DILocation(line: 1146, column: 48, scope: !7032)
!7037 = !DILocation(line: 1146, column: 46, scope: !7032)
!7038 = !DILocation(line: 1145, column: 31, scope: !7032)
!7039 = !DILocation(line: 1145, column: 29, scope: !7032)
!7040 = !DILocation(line: 1147, column: 32, scope: !7032)
!7041 = !DILocation(line: 1147, column: 30, scope: !7032)
!7042 = !DILocation(line: 1148, column: 17, scope: !7032)
!7043 = !DILocation(line: 1151, column: 32, scope: !7044)
!7044 = distinct !DILexicalBlock(scope: !7027, file: !349, line: 1150, column: 17)
!7045 = !DILocation(line: 1152, column: 26, scope: !7044)
!7046 = !DILocation(line: 1151, column: 19, scope: !7044)
!7047 = !DILocation(line: 1153, column: 30, scope: !7044)
!7048 = !DILocation(line: 1154, column: 19, scope: !7044)
!7049 = !DILocation(line: 1156, column: 13, scope: !7028)
!7050 = !DILocation(line: 1157, column: 9, scope: !7017)
!7051 = !DILocation(line: 1161, column: 11, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !6991, file: !349, line: 1161, column: 11)
!7053 = !DILocation(line: 1161, column: 21, scope: !7052)
!7054 = !DILocation(line: 1161, column: 25, scope: !7052)
!7055 = !DILocation(line: 1161, column: 28, scope: !7052)
!7056 = !DILocation(line: 1161, column: 39, scope: !7052)
!7057 = !DILocation(line: 1162, column: 11, scope: !7052)
!7058 = !DILocation(line: 1162, column: 15, scope: !7052)
!7059 = !DILocation(line: 1162, column: 14, scope: !7052)
!7060 = !DILocation(line: 1162, column: 24, scope: !7052)
!7061 = !DILocation(line: 1162, column: 27, scope: !7052)
!7062 = !DILocation(line: 1162, column: 44, scope: !7052)
!7063 = !DILocation(line: 1162, column: 36, scope: !7052)
!7064 = !DILocation(line: 1162, column: 54, scope: !7052)
!7065 = !DILocation(line: 1162, column: 59, scope: !7052)
!7066 = !DILocation(line: 1161, column: 11, scope: !6991)
!7067 = !DILocation(line: 1163, column: 20, scope: !7052)
!7068 = !DILocation(line: 1163, column: 9, scope: !7052)
!7069 = !DILocation(line: 1164, column: 5, scope: !6991)
!7070 = !DILocation(line: 1167, column: 27, scope: !7071)
!7071 = distinct !DILexicalBlock(scope: !6986, file: !349, line: 1166, column: 5)
!7072 = !DILocation(line: 1170, column: 7, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !6813, file: !349, line: 1170, column: 7)
!7074 = !DILocation(line: 1170, column: 17, scope: !7073)
!7075 = !DILocation(line: 1170, column: 7, scope: !6813)
!7076 = !DILocation(line: 1182, column: 11, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7078, file: !349, line: 1182, column: 11)
!7078 = distinct !DILexicalBlock(scope: !7073, file: !349, line: 1171, column: 5)
!7079 = !DILocation(line: 1182, column: 22, scope: !7077)
!7080 = !DILocation(line: 1182, column: 32, scope: !7077)
!7081 = !DILocation(line: 1182, column: 38, scope: !7077)
!7082 = !DILocation(line: 1182, column: 37, scope: !7077)
!7083 = !DILocation(line: 1182, column: 46, scope: !7077)
!7084 = !DILocation(line: 1182, column: 51, scope: !7077)
!7085 = !DILocation(line: 1182, column: 54, scope: !7077)
!7086 = !DILocation(line: 1182, column: 11, scope: !7078)
!7087 = !DILocation(line: 1184, column: 12, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7077, file: !349, line: 1183, column: 9)
!7089 = !DILocation(line: 1184, column: 20, scope: !7088)
!7090 = !DILocation(line: 1185, column: 11, scope: !7088)
!7091 = !DILocation(line: 1189, column: 17, scope: !7078)
!7092 = !DILocation(line: 1189, column: 29, scope: !7078)
!7093 = !DILocation(line: 1190, column: 14, scope: !7078)
!7094 = !DILocation(line: 1189, column: 7, scope: !7078)
!7095 = !DILocation(line: 1191, column: 18, scope: !7078)
!7096 = !DILocation(line: 1192, column: 7, scope: !7078)
!7097 = !DILocation(line: 1195, column: 14, scope: !7098)
!7098 = distinct !DILexicalBlock(scope: !6813, file: !349, line: 1195, column: 7)
!7099 = !DILocation(line: 1195, column: 7, scope: !7098)
!7100 = !DILocation(line: 1195, column: 30, scope: !7098)
!7101 = !DILocation(line: 1195, column: 7, scope: !6813)
!7102 = !DILocation(line: 1197, column: 17, scope: !7103)
!7103 = distinct !DILexicalBlock(scope: !7098, file: !349, line: 1196, column: 5)
!7104 = !DILocation(line: 1197, column: 24, scope: !7103)
!7105 = !DILocation(line: 1197, column: 46, scope: !7103)
!7106 = !DILocation(line: 1197, column: 7, scope: !7103)
!7107 = !DILocation(line: 1198, column: 18, scope: !7103)
!7108 = !DILocation(line: 1199, column: 7, scope: !7103)
!7109 = !DILocation(line: 1203, column: 7, scope: !7110)
!7110 = distinct !DILexicalBlock(scope: !6813, file: !349, line: 1203, column: 7)
!7111 = !DILocation(line: 1203, column: 26, scope: !7110)
!7112 = !DILocation(line: 1203, column: 29, scope: !7110)
!7113 = !DILocation(line: 1203, column: 32, scope: !7110)
!7114 = !DILocation(line: 1203, column: 7, scope: !6813)
!7115 = !DILocalVariable(name: "clone_ok", scope: !7116, file: !349, line: 1205, type: !142)
!7116 = distinct !DILexicalBlock(scope: !7110, file: !349, line: 1204, column: 5)
!7117 = !DILocation(line: 1205, column: 12, scope: !7116)
!7118 = !DILocation(line: 1205, column: 35, scope: !7116)
!7119 = !DILocation(line: 1205, column: 46, scope: !7116)
!7120 = !DILocation(line: 1205, column: 23, scope: !7116)
!7121 = !DILocation(line: 1205, column: 59, scope: !7116)
!7122 = !DILocation(line: 1206, column: 11, scope: !7123)
!7123 = distinct !DILexicalBlock(scope: !7116, file: !349, line: 1206, column: 11)
!7124 = !DILocation(line: 1206, column: 20, scope: !7123)
!7125 = !DILocation(line: 1206, column: 23, scope: !7123)
!7126 = !DILocation(line: 1206, column: 26, scope: !7123)
!7127 = !DILocation(line: 1206, column: 39, scope: !7123)
!7128 = !DILocation(line: 1206, column: 11, scope: !7116)
!7129 = !DILocation(line: 1208, column: 16, scope: !7130)
!7130 = distinct !DILexicalBlock(scope: !7131, file: !349, line: 1208, column: 15)
!7131 = distinct !DILexicalBlock(scope: !7123, file: !349, line: 1207, column: 9)
!7132 = !DILocation(line: 1208, column: 15, scope: !7131)
!7133 = !DILocation(line: 1210, column: 25, scope: !7134)
!7134 = distinct !DILexicalBlock(scope: !7130, file: !349, line: 1209, column: 13)
!7135 = !DILocation(line: 1210, column: 32, scope: !7134)
!7136 = !DILocation(line: 1211, column: 22, scope: !7134)
!7137 = !DILocation(line: 1211, column: 47, scope: !7134)
!7138 = !DILocation(line: 1210, column: 15, scope: !7134)
!7139 = !DILocation(line: 1212, column: 26, scope: !7134)
!7140 = !DILocation(line: 1213, column: 15, scope: !7134)
!7141 = !DILocation(line: 1215, column: 30, scope: !7131)
!7142 = !DILocation(line: 1216, column: 9, scope: !7131)
!7143 = !DILocation(line: 1217, column: 5, scope: !7116)
!7144 = !DILocation(line: 1219, column: 7, scope: !7145)
!7145 = distinct !DILexicalBlock(scope: !6813, file: !349, line: 1219, column: 7)
!7146 = !DILocation(line: 1219, column: 7, scope: !6813)
!7147 = !DILocalVariable(name: "buf_alignment", scope: !7148, file: !349, line: 1222, type: !55)
!7148 = distinct !DILexicalBlock(scope: !7145, file: !349, line: 1220, column: 5)
!7149 = !DILocation(line: 1222, column: 14, scope: !7148)
!7150 = !DILocation(line: 1222, column: 30, scope: !7148)
!7151 = !DILocalVariable(name: "buf_size", scope: !7148, file: !349, line: 1223, type: !55)
!7152 = !DILocation(line: 1223, column: 14, scope: !7148)
!7153 = !DILocation(line: 1223, column: 25, scope: !7148)
!7154 = !DILocalVariable(name: "hole_size", scope: !7148, file: !349, line: 1224, type: !55)
!7155 = !DILocation(line: 1224, column: 14, scope: !7148)
!7156 = !DILocation(line: 1224, column: 26, scope: !7148)
!7157 = !{!2912, !2913, i64 56}
!7158 = !DILocation(line: 1226, column: 17, scope: !7148)
!7159 = !DILocation(line: 1226, column: 7, scope: !7148)
!7160 = !DILocalVariable(name: "make_holes", scope: !7148, file: !349, line: 1229, type: !142)
!7161 = !DILocation(line: 1229, column: 12, scope: !7148)
!7162 = !DILocalVariable(name: "sparse_src", scope: !7148, file: !349, line: 1230, type: !142)
!7163 = !DILocation(line: 1230, column: 12, scope: !7148)
!7164 = !DILocation(line: 1230, column: 25, scope: !7148)
!7165 = !DILocation(line: 1232, column: 11, scope: !7166)
!7166 = distinct !DILexicalBlock(scope: !7148, file: !349, line: 1232, column: 11)
!7167 = !DILocation(line: 1232, column: 11, scope: !7148)
!7168 = !DILocation(line: 1236, column: 15, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7170, file: !349, line: 1236, column: 15)
!7170 = distinct !DILexicalBlock(scope: !7166, file: !349, line: 1233, column: 9)
!7171 = !DILocation(line: 1236, column: 18, scope: !7169)
!7172 = !DILocation(line: 1236, column: 30, scope: !7169)
!7173 = !DILocation(line: 1236, column: 15, scope: !7170)
!7174 = !DILocation(line: 1237, column: 24, scope: !7169)
!7175 = !DILocation(line: 1237, column: 13, scope: !7169)
!7176 = !DILocation(line: 1243, column: 15, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7170, file: !349, line: 1243, column: 15)
!7178 = !DILocation(line: 1243, column: 18, scope: !7177)
!7179 = !DILocation(line: 1243, column: 30, scope: !7177)
!7180 = !DILocation(line: 1243, column: 45, scope: !7177)
!7181 = !DILocation(line: 1243, column: 48, scope: !7177)
!7182 = !DILocation(line: 1243, column: 15, scope: !7170)
!7183 = !DILocation(line: 1244, column: 24, scope: !7177)
!7184 = !DILocation(line: 1244, column: 13, scope: !7177)
!7185 = !DILocation(line: 1245, column: 9, scope: !7170)
!7186 = !DILocation(line: 1249, column: 13, scope: !7187)
!7187 = distinct !DILexicalBlock(scope: !7148, file: !349, line: 1249, column: 11)
!7188 = !DILocation(line: 1249, column: 11, scope: !7148)
!7189 = !DILocalVariable(name: "blcm_max", scope: !7190, file: !349, line: 1253, type: !55)
!7190 = distinct !DILexicalBlock(scope: !7187, file: !349, line: 1250, column: 9)
!7191 = !DILocation(line: 1253, column: 18, scope: !7190)
!7192 = !DILocation(line: 1253, column: 57, scope: !7190)
!7193 = !DILocation(line: 1253, column: 55, scope: !7190)
!7194 = !DILocalVariable(name: "blcm", scope: !7190, file: !349, line: 1254, type: !55)
!7195 = !DILocation(line: 1254, column: 18, scope: !7190)
!7196 = !DILocation(line: 1254, column: 37, scope: !7190)
!7197 = !DILocation(line: 1254, column: 63, scope: !7190)
!7198 = !DILocation(line: 1255, column: 37, scope: !7190)
!7199 = !DILocation(line: 1254, column: 25, scope: !7190)
!7200 = !DILocation(line: 1259, column: 15, scope: !7201)
!7201 = distinct !DILexicalBlock(scope: !7190, file: !349, line: 1259, column: 15)
!7202 = !DILocation(line: 1259, column: 45, scope: !7201)
!7203 = !DILocation(line: 1259, column: 60, scope: !7201)
!7204 = !DILocation(line: 1259, column: 70, scope: !7201)
!7205 = !DILocation(line: 1259, column: 68, scope: !7201)
!7206 = !DILocation(line: 1259, column: 15, scope: !7190)
!7207 = !DILocation(line: 1260, column: 36, scope: !7201)
!7208 = !DILocation(line: 1260, column: 44, scope: !7201)
!7209 = !DILocation(line: 1260, column: 22, scope: !7201)
!7210 = !DILocation(line: 1260, column: 13, scope: !7201)
!7211 = !DILocation(line: 1265, column: 23, scope: !7190)
!7212 = !DILocation(line: 1265, column: 28, scope: !7190)
!7213 = !DILocation(line: 1265, column: 20, scope: !7190)
!7214 = !DILocation(line: 1266, column: 23, scope: !7190)
!7215 = !DILocation(line: 1266, column: 34, scope: !7190)
!7216 = !DILocation(line: 1266, column: 32, scope: !7190)
!7217 = !DILocation(line: 1266, column: 20, scope: !7190)
!7218 = !DILocation(line: 1267, column: 15, scope: !7219)
!7219 = distinct !DILexicalBlock(scope: !7190, file: !349, line: 1267, column: 15)
!7220 = !DILocation(line: 1267, column: 24, scope: !7219)
!7221 = !DILocation(line: 1267, column: 29, scope: !7219)
!7222 = !DILocation(line: 1267, column: 32, scope: !7219)
!7223 = !DILocation(line: 1267, column: 43, scope: !7219)
!7224 = !DILocation(line: 1267, column: 41, scope: !7219)
!7225 = !DILocation(line: 1267, column: 15, scope: !7190)
!7226 = !DILocation(line: 1268, column: 24, scope: !7219)
!7227 = !DILocation(line: 1268, column: 22, scope: !7219)
!7228 = !DILocation(line: 1268, column: 13, scope: !7219)
!7229 = !DILocation(line: 1269, column: 9, scope: !7190)
!7230 = !DILocation(line: 1271, column: 28, scope: !7148)
!7231 = !DILocation(line: 1271, column: 39, scope: !7148)
!7232 = !DILocation(line: 1271, column: 37, scope: !7148)
!7233 = !DILocation(line: 1271, column: 19, scope: !7148)
!7234 = !DILocation(line: 1271, column: 17, scope: !7148)
!7235 = !DILocation(line: 1272, column: 24, scope: !7148)
!7236 = !DILocation(line: 1272, column: 35, scope: !7148)
!7237 = !DILocation(line: 1272, column: 13, scope: !7148)
!7238 = !DILocation(line: 1272, column: 11, scope: !7148)
!7239 = !DILocation(line: 1274, column: 11, scope: !7240)
!7240 = distinct !DILexicalBlock(scope: !7148, file: !349, line: 1274, column: 11)
!7241 = !DILocation(line: 1274, column: 11, scope: !7148)
!7242 = !DILocalVariable(name: "normal_copy_required", scope: !7243, file: !349, line: 1276, type: !142)
!7243 = distinct !DILexicalBlock(scope: !7240, file: !349, line: 1275, column: 9)
!7244 = !DILocation(line: 1276, column: 16, scope: !7243)
!7245 = !DILocation(line: 1282, column: 28, scope: !7246)
!7246 = distinct !DILexicalBlock(scope: !7243, file: !349, line: 1282, column: 15)
!7247 = !DILocation(line: 1282, column: 41, scope: !7246)
!7248 = !DILocation(line: 1282, column: 52, scope: !7246)
!7249 = !DILocation(line: 1282, column: 57, scope: !7246)
!7250 = !DILocation(line: 1282, column: 67, scope: !7246)
!7251 = !DILocation(line: 1283, column: 40, scope: !7246)
!7252 = !DILocation(line: 1284, column: 28, scope: !7246)
!7253 = !DILocation(line: 1284, column: 41, scope: !7246)
!7254 = !DILocation(line: 1284, column: 44, scope: !7246)
!7255 = !DILocation(line: 1285, column: 28, scope: !7246)
!7256 = !DILocation(line: 1285, column: 38, scope: !7246)
!7257 = !DILocation(line: 1282, column: 15, scope: !7246)
!7258 = !DILocation(line: 1282, column: 15, scope: !7243)
!7259 = !DILocation(line: 1286, column: 13, scope: !7246)
!7260 = !DILocation(line: 1288, column: 17, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7243, file: !349, line: 1288, column: 15)
!7262 = !DILocation(line: 1288, column: 15, scope: !7243)
!7263 = !DILocation(line: 1290, column: 26, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !7261, file: !349, line: 1289, column: 13)
!7265 = !DILocation(line: 1291, column: 15, scope: !7264)
!7266 = !DILocation(line: 1293, column: 9, scope: !7243)
!7267 = !DILocalVariable(name: "n_read", scope: !7148, file: !349, line: 1295, type: !352)
!7268 = !DILocation(line: 1295, column: 13, scope: !7148)
!7269 = !DILocalVariable(name: "wrote_hole_at_eof", scope: !7148, file: !349, line: 1296, type: !142)
!7270 = !DILocation(line: 1296, column: 12, scope: !7148)
!7271 = !DILocation(line: 1297, column: 26, scope: !7272)
!7272 = distinct !DILexicalBlock(scope: !7148, file: !349, line: 1297, column: 11)
!7273 = !DILocation(line: 1297, column: 39, scope: !7272)
!7274 = !DILocation(line: 1297, column: 50, scope: !7272)
!7275 = !DILocation(line: 1297, column: 55, scope: !7272)
!7276 = !DILocation(line: 1298, column: 26, scope: !7272)
!7277 = !DILocation(line: 1298, column: 39, scope: !7272)
!7278 = !DILocation(line: 1299, column: 26, scope: !7272)
!7279 = !DILocation(line: 1299, column: 29, scope: !7272)
!7280 = !DILocation(line: 1299, column: 41, scope: !7272)
!7281 = !DILocation(line: 1299, column: 59, scope: !7272)
!7282 = !DILocation(line: 1299, column: 69, scope: !7272)
!7283 = !DILocation(line: 1297, column: 13, scope: !7272)
!7284 = !DILocation(line: 1297, column: 11, scope: !7148)
!7285 = !DILocation(line: 1303, column: 22, scope: !7286)
!7286 = distinct !DILexicalBlock(scope: !7272, file: !349, line: 1302, column: 9)
!7287 = !DILocation(line: 1304, column: 11, scope: !7286)
!7288 = !DILocation(line: 1306, column: 16, scope: !7289)
!7289 = distinct !DILexicalBlock(scope: !7272, file: !349, line: 1306, column: 16)
!7290 = !DILocation(line: 1306, column: 34, scope: !7289)
!7291 = !DILocation(line: 1306, column: 48, scope: !7289)
!7292 = !DILocation(line: 1306, column: 59, scope: !7289)
!7293 = !DILocation(line: 1306, column: 37, scope: !7289)
!7294 = !DILocation(line: 1306, column: 67, scope: !7289)
!7295 = !DILocation(line: 1306, column: 16, scope: !7272)
!7296 = !DILocation(line: 1308, column: 21, scope: !7297)
!7297 = distinct !DILexicalBlock(scope: !7289, file: !349, line: 1307, column: 9)
!7298 = !DILocation(line: 1308, column: 28, scope: !7297)
!7299 = !DILocation(line: 1308, column: 54, scope: !7297)
!7300 = !DILocation(line: 1308, column: 11, scope: !7297)
!7301 = !DILocation(line: 1309, column: 22, scope: !7297)
!7302 = !DILocation(line: 1310, column: 11, scope: !7297)
!7303 = !DILocation(line: 1312, column: 5, scope: !7148)
!7304 = !DILabel(scope: !6813, name: "preserve_metadata", file: !349, line: 1314)
!7305 = !DILocation(line: 1314, column: 1, scope: !6813)
!7306 = !DILocation(line: 1315, column: 7, scope: !7307)
!7307 = distinct !DILexicalBlock(scope: !6813, file: !349, line: 1315, column: 7)
!7308 = !DILocation(line: 1315, column: 10, scope: !7307)
!7309 = !DILocation(line: 1315, column: 7, scope: !6813)
!7310 = !DILocalVariable(name: "timespec", scope: !7311, file: !349, line: 1317, type: !445)
!7311 = distinct !DILexicalBlock(scope: !7307, file: !349, line: 1316, column: 5)
!7312 = !DILocation(line: 1317, column: 23, scope: !7311)
!7313 = !DILocation(line: 1318, column: 7, scope: !7311)
!7314 = !DILocation(line: 1318, column: 37, scope: !7311)
!7315 = !DILocation(line: 1318, column: 21, scope: !7311)
!7316 = !DILocation(line: 1319, column: 7, scope: !7311)
!7317 = !DILocation(line: 1319, column: 37, scope: !7311)
!7318 = !DILocation(line: 1319, column: 21, scope: !7311)
!7319 = !DILocation(line: 1321, column: 22, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7311, file: !349, line: 1321, column: 11)
!7321 = !DILocation(line: 1321, column: 33, scope: !7320)
!7322 = !DILocation(line: 1321, column: 43, scope: !7320)
!7323 = !DILocation(line: 1321, column: 11, scope: !7320)
!7324 = !DILocation(line: 1321, column: 53, scope: !7320)
!7325 = !DILocation(line: 1321, column: 11, scope: !7311)
!7326 = !DILocation(line: 1323, column: 21, scope: !7327)
!7327 = distinct !DILexicalBlock(scope: !7320, file: !349, line: 1322, column: 9)
!7328 = !DILocation(line: 1323, column: 28, scope: !7327)
!7329 = !DILocation(line: 1323, column: 58, scope: !7327)
!7330 = !DILocation(line: 1323, column: 11, scope: !7327)
!7331 = !DILocation(line: 1324, column: 15, scope: !7332)
!7332 = distinct !DILexicalBlock(scope: !7327, file: !349, line: 1324, column: 15)
!7333 = !DILocation(line: 1324, column: 18, scope: !7332)
!7334 = !DILocation(line: 1324, column: 15, scope: !7327)
!7335 = !DILocation(line: 1326, column: 26, scope: !7336)
!7336 = distinct !DILexicalBlock(scope: !7332, file: !349, line: 1325, column: 13)
!7337 = !DILocation(line: 1327, column: 15, scope: !7336)
!7338 = !DILocation(line: 1329, column: 9, scope: !7327)
!7339 = !DILocation(line: 1330, column: 5, scope: !7311)
!7340 = !DILocation(line: 1334, column: 7, scope: !7341)
!7341 = distinct !DILexicalBlock(scope: !6813, file: !349, line: 1334, column: 7)
!7342 = !DILocation(line: 1334, column: 10, scope: !7341)
!7343 = !DILocation(line: 1334, column: 29, scope: !7341)
!7344 = !DILocation(line: 1334, column: 34, scope: !7341)
!7345 = !DILocation(line: 1334, column: 7, scope: !6813)
!7346 = !DILocation(line: 1336, column: 26, scope: !7347)
!7347 = distinct !DILexicalBlock(scope: !7341, file: !349, line: 1335, column: 5)
!7348 = !DILocation(line: 1336, column: 29, scope: !7347)
!7349 = !DILocation(line: 1336, column: 39, scope: !7347)
!7350 = !DILocation(line: 1336, column: 50, scope: !7347)
!7351 = !DILocation(line: 1336, column: 59, scope: !7347)
!7352 = !DILocation(line: 1336, column: 58, scope: !7347)
!7353 = !DILocation(line: 1336, column: 15, scope: !7347)
!7354 = !DILocation(line: 1336, column: 7, scope: !7347)
!7355 = !DILocation(line: 1339, column: 22, scope: !7356)
!7356 = distinct !DILexicalBlock(scope: !7347, file: !349, line: 1337, column: 9)
!7357 = !DILocation(line: 1340, column: 11, scope: !7356)
!7358 = !DILocation(line: 1343, column: 20, scope: !7356)
!7359 = !DILocation(line: 1344, column: 11, scope: !7356)
!7360 = !DILocation(line: 1346, column: 5, scope: !7347)
!7361 = !DILocation(line: 1351, column: 7, scope: !7362)
!7362 = distinct !DILexicalBlock(scope: !6813, file: !349, line: 1351, column: 7)
!7363 = !DILocation(line: 1351, column: 10, scope: !7362)
!7364 = !DILocation(line: 1351, column: 7, scope: !6813)
!7365 = !DILocalVariable(name: "access_changed", scope: !7366, file: !349, line: 1353, type: !142)
!7366 = distinct !DILexicalBlock(scope: !7362, file: !349, line: 1352, column: 5)
!7367 = !DILocation(line: 1353, column: 12, scope: !7366)
!7368 = !DILocation(line: 1355, column: 16, scope: !7369)
!7369 = distinct !DILexicalBlock(scope: !7366, file: !349, line: 1355, column: 11)
!7370 = !DILocation(line: 1355, column: 24, scope: !7369)
!7371 = !DILocation(line: 1355, column: 35, scope: !7369)
!7372 = !DILocation(line: 1355, column: 38, scope: !7369)
!7373 = !DILocation(line: 1355, column: 49, scope: !7369)
!7374 = !DILocation(line: 1355, column: 11, scope: !7366)
!7375 = !DILocation(line: 1357, column: 46, scope: !7376)
!7376 = distinct !DILexicalBlock(scope: !7369, file: !349, line: 1356, column: 9)
!7377 = !DILocation(line: 1357, column: 57, scope: !7376)
!7378 = !DILocation(line: 1357, column: 28, scope: !7376)
!7379 = !DILocation(line: 1358, column: 65, scope: !7376)
!7380 = !DILocation(line: 1357, column: 26, scope: !7376)
!7381 = !DILocation(line: 1359, column: 9, scope: !7376)
!7382 = !DILocation(line: 1361, column: 23, scope: !7383)
!7383 = distinct !DILexicalBlock(scope: !7366, file: !349, line: 1361, column: 11)
!7384 = !DILocation(line: 1361, column: 33, scope: !7383)
!7385 = !DILocation(line: 1361, column: 46, scope: !7383)
!7386 = !DILocation(line: 1361, column: 56, scope: !7383)
!7387 = !DILocation(line: 1361, column: 67, scope: !7383)
!7388 = !DILocation(line: 1361, column: 12, scope: !7383)
!7389 = !DILocation(line: 1362, column: 11, scope: !7383)
!7390 = !DILocation(line: 1362, column: 14, scope: !7383)
!7391 = !DILocation(line: 1362, column: 17, scope: !7383)
!7392 = !DILocation(line: 1361, column: 11, scope: !7366)
!7393 = !DILocation(line: 1363, column: 20, scope: !7383)
!7394 = !DILocation(line: 1363, column: 9, scope: !7383)
!7395 = !DILocation(line: 1365, column: 11, scope: !7396)
!7396 = distinct !DILexicalBlock(scope: !7366, file: !349, line: 1365, column: 11)
!7397 = !DILocation(line: 1365, column: 11, scope: !7366)
!7398 = !DILocation(line: 1366, column: 27, scope: !7396)
!7399 = !DILocation(line: 1366, column: 38, scope: !7396)
!7400 = !DILocation(line: 1366, column: 48, scope: !7396)
!7401 = !DILocation(line: 1366, column: 60, scope: !7396)
!7402 = !DILocation(line: 1366, column: 59, scope: !7396)
!7403 = !DILocation(line: 1366, column: 57, scope: !7396)
!7404 = !DILocation(line: 1366, column: 9, scope: !7396)
!7405 = !DILocation(line: 1367, column: 5, scope: !7366)
!7406 = !DILocation(line: 1369, column: 15, scope: !6813)
!7407 = !DILocation(line: 1369, column: 25, scope: !6813)
!7408 = !DILocation(line: 1369, column: 36, scope: !6813)
!7409 = !DILocation(line: 1369, column: 3, scope: !6813)
!7410 = !DILocation(line: 1371, column: 7, scope: !7411)
!7411 = distinct !DILexicalBlock(scope: !6813, file: !349, line: 1371, column: 7)
!7412 = !DILocation(line: 1371, column: 10, scope: !7411)
!7413 = !DILocation(line: 1371, column: 24, scope: !7411)
!7414 = !DILocation(line: 1371, column: 27, scope: !7411)
!7415 = !DILocation(line: 1371, column: 30, scope: !7411)
!7416 = !DILocation(line: 1371, column: 7, scope: !6813)
!7417 = !DILocation(line: 1373, column: 21, scope: !7418)
!7418 = distinct !DILexicalBlock(scope: !7419, file: !349, line: 1373, column: 11)
!7419 = distinct !DILexicalBlock(scope: !7411, file: !349, line: 1372, column: 5)
!7420 = !DILocation(line: 1373, column: 31, scope: !7418)
!7421 = !DILocation(line: 1373, column: 44, scope: !7418)
!7422 = !DILocation(line: 1373, column: 54, scope: !7418)
!7423 = !DILocation(line: 1373, column: 65, scope: !7418)
!7424 = !DILocation(line: 1373, column: 11, scope: !7418)
!7425 = !DILocation(line: 1373, column: 75, scope: !7418)
!7426 = !DILocation(line: 1374, column: 11, scope: !7418)
!7427 = !DILocation(line: 1374, column: 14, scope: !7418)
!7428 = !DILocation(line: 1374, column: 17, scope: !7418)
!7429 = !DILocation(line: 1373, column: 11, scope: !7419)
!7430 = !DILocation(line: 1375, column: 20, scope: !7418)
!7431 = !DILocation(line: 1375, column: 9, scope: !7418)
!7432 = !DILocation(line: 1376, column: 5, scope: !7419)
!7433 = !DILocation(line: 1377, column: 12, scope: !7434)
!7434 = distinct !DILexicalBlock(scope: !7411, file: !349, line: 1377, column: 12)
!7435 = !DILocation(line: 1377, column: 15, scope: !7434)
!7436 = !DILocation(line: 1377, column: 12, scope: !7411)
!7437 = !DILocation(line: 1379, column: 20, scope: !7438)
!7438 = distinct !DILexicalBlock(scope: !7439, file: !349, line: 1379, column: 11)
!7439 = distinct !DILexicalBlock(scope: !7434, file: !349, line: 1378, column: 5)
!7440 = !DILocation(line: 1379, column: 30, scope: !7438)
!7441 = !DILocation(line: 1379, column: 41, scope: !7438)
!7442 = !DILocation(line: 1379, column: 44, scope: !7438)
!7443 = !DILocation(line: 1379, column: 11, scope: !7438)
!7444 = !DILocation(line: 1379, column: 50, scope: !7438)
!7445 = !DILocation(line: 1379, column: 11, scope: !7439)
!7446 = !DILocation(line: 1380, column: 20, scope: !7438)
!7447 = !DILocation(line: 1380, column: 9, scope: !7438)
!7448 = !DILocation(line: 1381, column: 5, scope: !7439)
!7449 = !DILocation(line: 1382, column: 12, scope: !7450)
!7450 = distinct !DILexicalBlock(scope: !7434, file: !349, line: 1382, column: 12)
!7451 = !DILocation(line: 1382, column: 15, scope: !7450)
!7452 = !DILocation(line: 1382, column: 41, scope: !7450)
!7453 = !DILocation(line: 1382, column: 45, scope: !7450)
!7454 = !DILocation(line: 1382, column: 44, scope: !7450)
!7455 = !DILocation(line: 1382, column: 12, scope: !7434)
!7456 = !DILocation(line: 1384, column: 20, scope: !7457)
!7457 = distinct !DILexicalBlock(scope: !7458, file: !349, line: 1384, column: 11)
!7458 = distinct !DILexicalBlock(scope: !7450, file: !349, line: 1383, column: 5)
!7459 = !DILocation(line: 1384, column: 30, scope: !7457)
!7460 = !DILocation(line: 1384, column: 56, scope: !7457)
!7461 = !DILocation(line: 1384, column: 55, scope: !7457)
!7462 = !DILocation(line: 1384, column: 53, scope: !7457)
!7463 = !DILocation(line: 1384, column: 11, scope: !7457)
!7464 = !DILocation(line: 1384, column: 73, scope: !7457)
!7465 = !DILocation(line: 1384, column: 11, scope: !7458)
!7466 = !DILocation(line: 1385, column: 20, scope: !7457)
!7467 = !DILocation(line: 1385, column: 9, scope: !7457)
!7468 = !DILocation(line: 1386, column: 5, scope: !7458)
!7469 = !DILocation(line: 1387, column: 12, scope: !7470)
!7470 = distinct !DILexicalBlock(scope: !7450, file: !349, line: 1387, column: 12)
!7471 = !DILocation(line: 1387, column: 12, scope: !7450)
!7472 = !DILocation(line: 1389, column: 32, scope: !7473)
!7473 = distinct !DILexicalBlock(scope: !7470, file: !349, line: 1388, column: 5)
!7474 = !DILocation(line: 1389, column: 30, scope: !7473)
!7475 = !DILocation(line: 1389, column: 27, scope: !7473)
!7476 = !DILocation(line: 1390, column: 11, scope: !7477)
!7477 = distinct !DILexicalBlock(scope: !7473, file: !349, line: 1390, column: 11)
!7478 = !DILocation(line: 1391, column: 11, scope: !7477)
!7479 = !DILocation(line: 1391, column: 32, scope: !7477)
!7480 = !DILocation(line: 1391, column: 43, scope: !7477)
!7481 = !DILocation(line: 1391, column: 53, scope: !7477)
!7482 = !DILocation(line: 1391, column: 14, scope: !7477)
!7483 = !DILocation(line: 1391, column: 63, scope: !7477)
!7484 = !DILocation(line: 1390, column: 11, scope: !7473)
!7485 = !DILocation(line: 1393, column: 21, scope: !7486)
!7486 = distinct !DILexicalBlock(scope: !7477, file: !349, line: 1392, column: 9)
!7487 = !DILocation(line: 1393, column: 28, scope: !7486)
!7488 = !DILocation(line: 1394, column: 18, scope: !7486)
!7489 = !DILocation(line: 1393, column: 11, scope: !7486)
!7490 = !DILocation(line: 1395, column: 15, scope: !7491)
!7491 = distinct !DILexicalBlock(scope: !7486, file: !349, line: 1395, column: 15)
!7492 = !DILocation(line: 1395, column: 18, scope: !7491)
!7493 = !DILocation(line: 1395, column: 15, scope: !7486)
!7494 = !DILocation(line: 1396, column: 24, scope: !7491)
!7495 = !DILocation(line: 1396, column: 13, scope: !7491)
!7496 = !DILocation(line: 1397, column: 9, scope: !7486)
!7497 = !DILocation(line: 1398, column: 5, scope: !7473)
!7498 = !DILabel(scope: !6813, name: "close_src_and_dst_desc", file: !349, line: 1400)
!7499 = !DILocation(line: 1400, column: 1, scope: !6813)
!7500 = !DILocation(line: 1401, column: 14, scope: !7501)
!7501 = distinct !DILexicalBlock(scope: !6813, file: !349, line: 1401, column: 7)
!7502 = !DILocation(line: 1401, column: 7, scope: !7501)
!7503 = !DILocation(line: 1401, column: 25, scope: !7501)
!7504 = !DILocation(line: 1401, column: 7, scope: !6813)
!7505 = !DILocation(line: 1403, column: 17, scope: !7506)
!7506 = distinct !DILexicalBlock(scope: !7501, file: !349, line: 1402, column: 5)
!7507 = !DILocation(line: 1403, column: 24, scope: !7506)
!7508 = !DILocation(line: 1403, column: 49, scope: !7506)
!7509 = !DILocation(line: 1403, column: 7, scope: !7506)
!7510 = !DILocation(line: 1404, column: 18, scope: !7506)
!7511 = !DILocation(line: 1405, column: 5, scope: !7506)
!7512 = !DILocation(line: 1401, column: 27, scope: !7501)
!7513 = !DILabel(scope: !6813, name: "close_src_desc", file: !349, line: 1406)
!7514 = !DILocation(line: 1406, column: 1, scope: !6813)
!7515 = !DILocation(line: 1407, column: 14, scope: !7516)
!7516 = distinct !DILexicalBlock(scope: !6813, file: !349, line: 1407, column: 7)
!7517 = !DILocation(line: 1407, column: 7, scope: !7516)
!7518 = !DILocation(line: 1407, column: 27, scope: !7516)
!7519 = !DILocation(line: 1407, column: 7, scope: !6813)
!7520 = !DILocation(line: 1409, column: 17, scope: !7521)
!7521 = distinct !DILexicalBlock(scope: !7516, file: !349, line: 1408, column: 5)
!7522 = !DILocation(line: 1409, column: 24, scope: !7521)
!7523 = !DILocation(line: 1409, column: 49, scope: !7521)
!7524 = !DILocation(line: 1409, column: 7, scope: !7521)
!7525 = !DILocation(line: 1410, column: 18, scope: !7521)
!7526 = !DILocation(line: 1411, column: 5, scope: !7521)
!7527 = !DILocation(line: 1413, column: 9, scope: !6813)
!7528 = !DILocation(line: 1413, column: 3, scope: !6813)
!7529 = !DILocation(line: 1414, column: 9, scope: !6813)
!7530 = !DILocation(line: 1414, column: 3, scope: !6813)
!7531 = !DILocation(line: 1415, column: 10, scope: !6813)
!7532 = !DILocation(line: 1415, column: 3, scope: !6813)
!7533 = !DILocation(line: 1416, column: 1, scope: !6813)
!7534 = distinct !DISubprogram(name: "restore_default_fscreatecon_or_die", scope: !349, file: !349, line: 1769, type: !200, scopeLine: 1770, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!7535 = !DILocation(line: 1771, column: 7, scope: !7536)
!7536 = distinct !DILexicalBlock(scope: !7534, file: !349, line: 1771, column: 7)
!7537 = !DILocation(line: 1771, column: 29, scope: !7536)
!7538 = !DILocation(line: 1771, column: 7, scope: !7534)
!7539 = !DILocation(line: 1772, column: 5, scope: !7536)
!7540 = !DILocation(line: 1774, column: 1, scope: !7534)
!7541 = distinct !DISubprogram(name: "chown_failure_ok", scope: !349, file: !349, line: 3023, type: !407, scopeLine: 3024, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !348, retainedNodes: !209)
!7542 = !DILocalVariable(name: "x", arg: 1, scope: !7541, file: !349, line: 3023, type: !356)
!7543 = !DILocation(line: 3023, column: 44, scope: !7541)
!7544 = !DILocation(line: 3029, column: 12, scope: !7541)
!7545 = !DILocation(line: 3029, column: 18, scope: !7541)
!7546 = !DILocation(line: 3029, column: 27, scope: !7541)
!7547 = !DILocation(line: 3029, column: 30, scope: !7541)
!7548 = !DILocation(line: 3029, column: 36, scope: !7541)
!7549 = !DILocation(line: 3029, column: 47, scope: !7541)
!7550 = !DILocation(line: 3029, column: 51, scope: !7541)
!7551 = !DILocation(line: 3029, column: 54, scope: !7541)
!7552 = !{!2810, !2740, i64 26}
!7553 = !DILocation(line: 3029, column: 50, scope: !7541)
!7554 = !DILocation(line: 0, scope: !7541)
!7555 = !DILocation(line: 3029, column: 3, scope: !7541)
!7556 = distinct !DISubprogram(name: "utimens_symlink", scope: !349, file: !349, line: 153, type: !557, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!7557 = !DILocalVariable(name: "file", arg: 1, scope: !7556, file: !349, line: 153, type: !180)
!7558 = !DILocation(line: 153, column: 30, scope: !7556)
!7559 = !DILocalVariable(name: "timespec", arg: 2, scope: !7556, file: !349, line: 153, type: !559)
!7560 = !DILocation(line: 153, column: 59, scope: !7556)
!7561 = !DILocalVariable(name: "err", scope: !7556, file: !349, line: 155, type: !7)
!7562 = !DILocation(line: 155, column: 7, scope: !7556)
!7563 = !DILocation(line: 155, column: 23, scope: !7556)
!7564 = !DILocation(line: 155, column: 29, scope: !7556)
!7565 = !DILocation(line: 155, column: 13, scope: !7556)
!7566 = !DILocation(line: 159, column: 7, scope: !7567)
!7567 = distinct !DILexicalBlock(scope: !7556, file: !349, line: 159, column: 7)
!7568 = !DILocation(line: 159, column: 11, scope: !7567)
!7569 = !DILocation(line: 159, column: 14, scope: !7567)
!7570 = !DILocation(line: 159, column: 20, scope: !7567)
!7571 = !DILocation(line: 159, column: 7, scope: !7556)
!7572 = !DILocation(line: 160, column: 9, scope: !7567)
!7573 = !DILocation(line: 160, column: 5, scope: !7567)
!7574 = !DILocation(line: 161, column: 10, scope: !7556)
!7575 = !DILocation(line: 161, column: 3, scope: !7556)
!7576 = distinct !DISubprogram(name: "set_owner", scope: !349, file: !349, line: 780, type: !561, scopeLine: 783, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!7577 = !DILocalVariable(name: "x", arg: 1, scope: !7576, file: !349, line: 780, type: !356)
!7578 = !DILocation(line: 780, column: 37, scope: !7576)
!7579 = !DILocalVariable(name: "dst_name", arg: 2, scope: !7576, file: !349, line: 780, type: !180)
!7580 = !DILocation(line: 780, column: 52, scope: !7576)
!7581 = !DILocalVariable(name: "dest_desc", arg: 3, scope: !7576, file: !349, line: 780, type: !7)
!7582 = !DILocation(line: 780, column: 66, scope: !7576)
!7583 = !DILocalVariable(name: "src_sb", arg: 4, scope: !7576, file: !349, line: 781, type: !413)
!7584 = !DILocation(line: 781, column: 31, scope: !7576)
!7585 = !DILocalVariable(name: "new_dst", arg: 5, scope: !7576, file: !349, line: 781, type: !142)
!7586 = !DILocation(line: 781, column: 44, scope: !7576)
!7587 = !DILocalVariable(name: "dst_sb", arg: 6, scope: !7576, file: !349, line: 782, type: !413)
!7588 = !DILocation(line: 782, column: 31, scope: !7576)
!7589 = !DILocalVariable(name: "uid", scope: !7576, file: !349, line: 784, type: !127)
!7590 = !DILocation(line: 784, column: 9, scope: !7576)
!7591 = !DILocation(line: 784, column: 15, scope: !7576)
!7592 = !DILocation(line: 784, column: 23, scope: !7576)
!7593 = !DILocalVariable(name: "gid", scope: !7576, file: !349, line: 785, type: !129)
!7594 = !DILocation(line: 785, column: 9, scope: !7576)
!7595 = !DILocation(line: 785, column: 15, scope: !7576)
!7596 = !DILocation(line: 785, column: 23, scope: !7576)
!7597 = !DILocation(line: 793, column: 8, scope: !7598)
!7598 = distinct !DILexicalBlock(scope: !7576, file: !349, line: 793, column: 7)
!7599 = !DILocation(line: 793, column: 16, scope: !7598)
!7600 = !DILocation(line: 793, column: 20, scope: !7598)
!7601 = !DILocation(line: 793, column: 23, scope: !7598)
!7602 = !DILocation(line: 793, column: 37, scope: !7598)
!7603 = !DILocation(line: 793, column: 40, scope: !7598)
!7604 = !DILocation(line: 793, column: 43, scope: !7598)
!7605 = !DILocation(line: 793, column: 53, scope: !7598)
!7606 = !DILocation(line: 793, column: 56, scope: !7598)
!7607 = !DILocation(line: 793, column: 59, scope: !7598)
!7608 = !DILocation(line: 793, column: 7, scope: !7576)
!7609 = !DILocalVariable(name: "old_mode", scope: !7610, file: !349, line: 795, type: !139)
!7610 = distinct !DILexicalBlock(scope: !7598, file: !349, line: 794, column: 5)
!7611 = !DILocation(line: 795, column: 14, scope: !7610)
!7612 = !DILocation(line: 795, column: 25, scope: !7610)
!7613 = !DILocation(line: 795, column: 33, scope: !7610)
!7614 = !DILocalVariable(name: "new_mode", scope: !7610, file: !349, line: 796, type: !139)
!7615 = !DILocation(line: 796, column: 14, scope: !7610)
!7616 = !DILocation(line: 797, column: 10, scope: !7610)
!7617 = !DILocation(line: 797, column: 13, scope: !7610)
!7618 = !DILocation(line: 797, column: 27, scope: !7610)
!7619 = !DILocation(line: 797, column: 30, scope: !7610)
!7620 = !DILocation(line: 797, column: 33, scope: !7610)
!7621 = !DILocation(line: 797, column: 45, scope: !7610)
!7622 = !DILocation(line: 797, column: 53, scope: !7610)
!7623 = !DILocation(line: 797, column: 63, scope: !7610)
!7624 = !DILocation(line: 797, column: 66, scope: !7610)
!7625 = !DILocalVariable(name: "restrictive_temp_mode", scope: !7610, file: !349, line: 798, type: !139)
!7626 = !DILocation(line: 798, column: 14, scope: !7610)
!7627 = !DILocation(line: 798, column: 38, scope: !7610)
!7628 = !DILocation(line: 798, column: 49, scope: !7610)
!7629 = !DILocation(line: 798, column: 47, scope: !7610)
!7630 = !DILocation(line: 798, column: 58, scope: !7610)
!7631 = !DILocation(line: 803, column: 24, scope: !7632)
!7632 = distinct !DILexicalBlock(scope: !7610, file: !349, line: 800, column: 11)
!7633 = !DILocation(line: 803, column: 34, scope: !7632)
!7634 = !DILocation(line: 803, column: 45, scope: !7632)
!7635 = !DILocation(line: 803, column: 14, scope: !7632)
!7636 = !DILocation(line: 803, column: 68, scope: !7632)
!7637 = !DILocation(line: 800, column: 11, scope: !7610)
!7638 = !DILocation(line: 805, column: 35, scope: !7639)
!7639 = distinct !DILexicalBlock(scope: !7640, file: !349, line: 805, column: 15)
!7640 = distinct !DILexicalBlock(scope: !7632, file: !349, line: 804, column: 9)
!7641 = !DILocation(line: 805, column: 17, scope: !7639)
!7642 = !DILocation(line: 805, column: 15, scope: !7640)
!7643 = !DILocation(line: 806, column: 23, scope: !7639)
!7644 = !DILocation(line: 806, column: 30, scope: !7639)
!7645 = !DILocation(line: 807, column: 20, scope: !7639)
!7646 = !DILocation(line: 806, column: 13, scope: !7639)
!7647 = !DILocation(line: 808, column: 19, scope: !7640)
!7648 = !DILocation(line: 808, column: 22, scope: !7640)
!7649 = !DILocation(line: 808, column: 18, scope: !7640)
!7650 = !DILocation(line: 808, column: 11, scope: !7640)
!7651 = !DILocation(line: 810, column: 5, scope: !7610)
!7652 = !DILocation(line: 812, column: 22, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !7576, file: !349, line: 812, column: 7)
!7654 = !DILocation(line: 812, column: 32, scope: !7653)
!7655 = !DILocation(line: 812, column: 7, scope: !7576)
!7656 = !DILocation(line: 814, column: 19, scope: !7657)
!7657 = distinct !DILexicalBlock(scope: !7658, file: !349, line: 814, column: 11)
!7658 = distinct !DILexicalBlock(scope: !7653, file: !349, line: 813, column: 5)
!7659 = !DILocation(line: 814, column: 30, scope: !7657)
!7660 = !DILocation(line: 814, column: 35, scope: !7657)
!7661 = !DILocation(line: 814, column: 11, scope: !7657)
!7662 = !DILocation(line: 814, column: 40, scope: !7657)
!7663 = !DILocation(line: 814, column: 11, scope: !7658)
!7664 = !DILocation(line: 815, column: 9, scope: !7657)
!7665 = !DILocation(line: 816, column: 11, scope: !7666)
!7666 = distinct !DILexicalBlock(scope: !7658, file: !349, line: 816, column: 11)
!7667 = !DILocation(line: 816, column: 17, scope: !7666)
!7668 = !DILocation(line: 816, column: 26, scope: !7666)
!7669 = !DILocation(line: 816, column: 29, scope: !7666)
!7670 = !DILocation(line: 816, column: 35, scope: !7666)
!7671 = !DILocation(line: 816, column: 11, scope: !7658)
!7672 = !DILocalVariable(name: "saved_errno", scope: !7673, file: !349, line: 820, type: !7)
!7673 = distinct !DILexicalBlock(scope: !7666, file: !349, line: 817, column: 9)
!7674 = !DILocation(line: 820, column: 15, scope: !7673)
!7675 = !DILocation(line: 820, column: 29, scope: !7673)
!7676 = !DILocalVariable(name: "__x", scope: !7677, file: !349, line: 821, type: !7)
!7677 = distinct !DILexicalBlock(scope: !7673, file: !349, line: 821, column: 11)
!7678 = !DILocation(line: 821, column: 11, scope: !7677)
!7679 = !DILocation(line: 822, column: 19, scope: !7673)
!7680 = !DILocation(line: 822, column: 11, scope: !7673)
!7681 = !DILocation(line: 822, column: 17, scope: !7673)
!7682 = !DILocation(line: 823, column: 9, scope: !7673)
!7683 = !DILocation(line: 824, column: 5, scope: !7658)
!7684 = !DILocation(line: 827, column: 19, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7686, file: !349, line: 827, column: 11)
!7686 = distinct !DILexicalBlock(scope: !7653, file: !349, line: 826, column: 5)
!7687 = !DILocation(line: 827, column: 29, scope: !7685)
!7688 = !DILocation(line: 827, column: 34, scope: !7685)
!7689 = !DILocation(line: 827, column: 11, scope: !7685)
!7690 = !DILocation(line: 827, column: 39, scope: !7685)
!7691 = !DILocation(line: 827, column: 11, scope: !7686)
!7692 = !DILocation(line: 828, column: 9, scope: !7685)
!7693 = !DILocation(line: 829, column: 11, scope: !7694)
!7694 = distinct !DILexicalBlock(scope: !7686, file: !349, line: 829, column: 11)
!7695 = !DILocation(line: 829, column: 17, scope: !7694)
!7696 = !DILocation(line: 829, column: 26, scope: !7694)
!7697 = !DILocation(line: 829, column: 29, scope: !7694)
!7698 = !DILocation(line: 829, column: 35, scope: !7694)
!7699 = !DILocation(line: 829, column: 11, scope: !7686)
!7700 = !DILocalVariable(name: "saved_errno", scope: !7701, file: !349, line: 833, type: !7)
!7701 = distinct !DILexicalBlock(scope: !7694, file: !349, line: 830, column: 9)
!7702 = !DILocation(line: 833, column: 15, scope: !7701)
!7703 = !DILocation(line: 833, column: 29, scope: !7701)
!7704 = !DILocalVariable(name: "__x", scope: !7705, file: !349, line: 834, type: !7)
!7705 = distinct !DILexicalBlock(scope: !7701, file: !349, line: 834, column: 11)
!7706 = !DILocation(line: 834, column: 11, scope: !7705)
!7707 = !DILocation(line: 835, column: 19, scope: !7701)
!7708 = !DILocation(line: 835, column: 11, scope: !7701)
!7709 = !DILocation(line: 835, column: 17, scope: !7701)
!7710 = !DILocation(line: 836, column: 9, scope: !7701)
!7711 = !DILocation(line: 839, column: 27, scope: !7712)
!7712 = distinct !DILexicalBlock(scope: !7576, file: !349, line: 839, column: 7)
!7713 = !DILocation(line: 839, column: 9, scope: !7712)
!7714 = !DILocation(line: 839, column: 7, scope: !7576)
!7715 = !DILocation(line: 841, column: 17, scope: !7716)
!7716 = distinct !DILexicalBlock(scope: !7712, file: !349, line: 840, column: 5)
!7717 = !DILocation(line: 841, column: 24, scope: !7716)
!7718 = !DILocation(line: 842, column: 14, scope: !7716)
!7719 = !DILocation(line: 841, column: 7, scope: !7716)
!7720 = !DILocation(line: 843, column: 11, scope: !7721)
!7721 = distinct !DILexicalBlock(scope: !7716, file: !349, line: 843, column: 11)
!7722 = !DILocation(line: 843, column: 14, scope: !7721)
!7723 = !DILocation(line: 843, column: 11, scope: !7716)
!7724 = !DILocation(line: 844, column: 9, scope: !7721)
!7725 = !DILocation(line: 845, column: 5, scope: !7716)
!7726 = !DILocation(line: 847, column: 3, scope: !7576)
!7727 = !DILocation(line: 848, column: 1, scope: !7576)
!7728 = distinct !DISubprogram(name: "copy_attr", scope: !349, file: !349, line: 659, type: !563, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!7729 = !DILocalVariable(name: "src_path", arg: 1, scope: !7728, file: !349, line: 659, type: !180)
!7730 = !DILocation(line: 659, column: 24, scope: !7728)
!7731 = !DILocalVariable(name: "src_fd", arg: 2, scope: !7728, file: !349, line: 659, type: !7)
!7732 = !DILocation(line: 659, column: 38, scope: !7728)
!7733 = !DILocalVariable(name: "dst_path", arg: 3, scope: !7728, file: !349, line: 660, type: !180)
!7734 = !DILocation(line: 660, column: 24, scope: !7728)
!7735 = !DILocalVariable(name: "dst_fd", arg: 4, scope: !7728, file: !349, line: 660, type: !7)
!7736 = !DILocation(line: 660, column: 38, scope: !7728)
!7737 = !DILocalVariable(name: "x", arg: 5, scope: !7728, file: !349, line: 660, type: !356)
!7738 = !DILocation(line: 660, column: 71, scope: !7728)
!7739 = !DILocalVariable(name: "ret", scope: !7728, file: !349, line: 662, type: !7)
!7740 = !DILocation(line: 662, column: 7, scope: !7728)
!7741 = !DILocalVariable(name: "all_errors", scope: !7728, file: !349, line: 663, type: !142)
!7742 = !DILocation(line: 663, column: 8, scope: !7728)
!7743 = !DILocation(line: 663, column: 23, scope: !7728)
!7744 = !DILocation(line: 663, column: 26, scope: !7728)
!7745 = !DILocation(line: 663, column: 45, scope: !7728)
!7746 = !DILocation(line: 663, column: 48, scope: !7728)
!7747 = !DILocation(line: 663, column: 51, scope: !7728)
!7748 = !DILocalVariable(name: "some_errors", scope: !7728, file: !349, line: 664, type: !142)
!7749 = !DILocation(line: 664, column: 8, scope: !7728)
!7750 = !DILocation(line: 664, column: 24, scope: !7728)
!7751 = !DILocation(line: 664, column: 35, scope: !7728)
!7752 = !DILocation(line: 664, column: 39, scope: !7728)
!7753 = !DILocation(line: 664, column: 42, scope: !7728)
!7754 = !DILocation(line: 664, column: 38, scope: !7728)
!7755 = !DILocation(line: 0, scope: !7728)
!7756 = !DILocalVariable(name: "selinux_done", scope: !7728, file: !349, line: 665, type: !142)
!7757 = !DILocation(line: 665, column: 8, scope: !7728)
!7758 = !DILocation(line: 665, column: 24, scope: !7728)
!7759 = !DILocation(line: 665, column: 27, scope: !7728)
!7760 = !DILocation(line: 665, column: 53, scope: !7728)
!7761 = !DILocation(line: 665, column: 56, scope: !7728)
!7762 = !DILocation(line: 665, column: 59, scope: !7728)
!7763 = !DILocalVariable(name: "ctx", scope: !7728, file: !349, line: 666, type: !568)
!7764 = !DILocation(line: 666, column: 24, scope: !7728)
!7765 = !DILocation(line: 667, column: 3, scope: !7728)
!7766 = !DILocation(line: 668, column: 14, scope: !7728)
!7767 = !{!7768, !2646, i64 0}
!7768 = !{!"error_context", !2646, i64 0, !2646, i64 8, !2646, i64 16}
!7769 = !{!7768, !2646, i64 8}
!7770 = !{!7768, !2646, i64 16}
!7771 = !DILocation(line: 672, column: 12, scope: !7772)
!7772 = distinct !DILexicalBlock(scope: !7728, file: !349, line: 672, column: 7)
!7773 = !DILocation(line: 672, column: 9, scope: !7772)
!7774 = !DILocation(line: 672, column: 19, scope: !7772)
!7775 = !DILocation(line: 672, column: 27, scope: !7772)
!7776 = !DILocation(line: 672, column: 24, scope: !7772)
!7777 = !DILocation(line: 672, column: 7, scope: !7728)
!7778 = !DILocation(line: 673, column: 25, scope: !7772)
!7779 = !DILocation(line: 673, column: 35, scope: !7772)
!7780 = !DILocation(line: 673, column: 43, scope: !7772)
!7781 = !DILocation(line: 673, column: 53, scope: !7772)
!7782 = !DILocation(line: 674, column: 25, scope: !7772)
!7783 = !DILocation(line: 675, column: 26, scope: !7772)
!7784 = !DILocation(line: 675, column: 37, scope: !7772)
!7785 = !DILocation(line: 675, column: 40, scope: !7772)
!7786 = !DILocation(line: 673, column: 11, scope: !7772)
!7787 = !DILocation(line: 673, column: 9, scope: !7772)
!7788 = !DILocation(line: 673, column: 5, scope: !7772)
!7789 = !DILocation(line: 677, column: 27, scope: !7772)
!7790 = !DILocation(line: 677, column: 37, scope: !7772)
!7791 = !DILocation(line: 678, column: 27, scope: !7772)
!7792 = !DILocation(line: 679, column: 28, scope: !7772)
!7793 = !DILocation(line: 679, column: 39, scope: !7772)
!7794 = !DILocation(line: 679, column: 42, scope: !7772)
!7795 = !DILocation(line: 677, column: 11, scope: !7772)
!7796 = !DILocation(line: 677, column: 9, scope: !7772)
!7797 = !DILocation(line: 681, column: 10, scope: !7728)
!7798 = !DILocation(line: 681, column: 14, scope: !7728)
!7799 = !DILocation(line: 681, column: 3, scope: !7728)
!7800 = distinct !DISubprogram(name: "set_author", scope: !349, file: !349, line: 856, type: !594, scopeLine: 857, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!7801 = !DILocalVariable(name: "dst_name", arg: 1, scope: !7800, file: !349, line: 856, type: !180)
!7802 = !DILocation(line: 856, column: 25, scope: !7800)
!7803 = !DILocalVariable(name: "dest_desc", arg: 2, scope: !7800, file: !349, line: 856, type: !7)
!7804 = !DILocation(line: 856, column: 39, scope: !7800)
!7805 = !DILocalVariable(name: "src_sb", arg: 3, scope: !7800, file: !349, line: 856, type: !413)
!7806 = !DILocation(line: 856, column: 69, scope: !7800)
!7807 = !DILocation(line: 877, column: 10, scope: !7800)
!7808 = !DILocation(line: 878, column: 10, scope: !7800)
!7809 = !DILocation(line: 879, column: 10, scope: !7800)
!7810 = !DILocation(line: 881, column: 1, scope: !7800)
!7811 = !DILocation(line: 3052, column: 7, scope: !7812)
!7812 = distinct !DILexicalBlock(scope: !599, file: !349, line: 3052, column: 7)
!7813 = !DILocation(line: 3052, column: 12, scope: !7812)
!7814 = !DILocation(line: 3052, column: 7, scope: !599)
!7815 = !DILocation(line: 3054, column: 14, scope: !7816)
!7816 = distinct !DILexicalBlock(scope: !7812, file: !349, line: 3053, column: 5)
!7817 = !DILocation(line: 3054, column: 12, scope: !7816)
!7818 = !DILocation(line: 3055, column: 14, scope: !7816)
!7819 = !DILocation(line: 3055, column: 7, scope: !7816)
!7820 = !DILocation(line: 3056, column: 5, scope: !7816)
!7821 = !DILocation(line: 3057, column: 10, scope: !599)
!7822 = !DILocation(line: 3057, column: 3, scope: !599)
!7823 = distinct !DISubprogram(name: "copy_attr_allerror", scope: !349, file: !349, line: 619, type: !573, scopeLine: 621, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!7824 = !DILocalVariable(name: "ctx", arg: 1, scope: !7823, file: !349, line: 619, type: !567)
!7825 = !DILocation(line: 619, column: 43, scope: !7823)
!7826 = !DILocalVariable(name: "fmt", arg: 2, scope: !7823, file: !349, line: 620, type: !180)
!7827 = !DILocation(line: 620, column: 30, scope: !7823)
!7828 = !DILocalVariable(name: "err", scope: !7823, file: !349, line: 622, type: !7)
!7829 = !DILocation(line: 622, column: 7, scope: !7823)
!7830 = !DILocation(line: 622, column: 13, scope: !7823)
!7831 = !DILocalVariable(name: "ap", scope: !7823, file: !349, line: 623, type: !581)
!7832 = !DILocation(line: 623, column: 11, scope: !7823)
!7833 = !DILocation(line: 626, column: 3, scope: !7823)
!7834 = !DILocation(line: 627, column: 14, scope: !7823)
!7835 = !DILocation(line: 627, column: 19, scope: !7823)
!7836 = !DILocation(line: 627, column: 24, scope: !7823)
!7837 = !DILocation(line: 627, column: 3, scope: !7823)
!7838 = !DILocation(line: 628, column: 3, scope: !7823)
!7839 = !DILocation(line: 629, column: 1, scope: !7823)
!7840 = distinct !DISubprogram(name: "copy_attr_error", scope: !349, file: !349, line: 603, type: !573, scopeLine: 605, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!7841 = !DILocalVariable(name: "ctx", arg: 1, scope: !7840, file: !349, line: 603, type: !567)
!7842 = !DILocation(line: 603, column: 40, scope: !7840)
!7843 = !DILocalVariable(name: "fmt", arg: 2, scope: !7840, file: !349, line: 604, type: !180)
!7844 = !DILocation(line: 604, column: 30, scope: !7840)
!7845 = !DILocation(line: 606, column: 27, scope: !7846)
!7846 = distinct !DILexicalBlock(scope: !7840, file: !349, line: 606, column: 7)
!7847 = !DILocation(line: 606, column: 8, scope: !7846)
!7848 = !DILocation(line: 606, column: 7, scope: !7840)
!7849 = !DILocalVariable(name: "err", scope: !7850, file: !349, line: 608, type: !7)
!7850 = distinct !DILexicalBlock(scope: !7846, file: !349, line: 607, column: 5)
!7851 = !DILocation(line: 608, column: 11, scope: !7850)
!7852 = !DILocation(line: 608, column: 17, scope: !7850)
!7853 = !DILocalVariable(name: "ap", scope: !7850, file: !349, line: 609, type: !581)
!7854 = !DILocation(line: 609, column: 15, scope: !7850)
!7855 = !DILocation(line: 612, column: 7, scope: !7850)
!7856 = !DILocation(line: 613, column: 18, scope: !7850)
!7857 = !DILocation(line: 613, column: 23, scope: !7850)
!7858 = !DILocation(line: 613, column: 28, scope: !7850)
!7859 = !DILocation(line: 613, column: 7, scope: !7850)
!7860 = !DILocation(line: 614, column: 7, scope: !7850)
!7861 = !DILocation(line: 615, column: 5, scope: !7850)
!7862 = !DILocation(line: 616, column: 1, scope: !7840)
!7863 = distinct !DISubprogram(name: "copy_attr_quote", scope: !349, file: !349, line: 632, type: !577, scopeLine: 633, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!7864 = !DILocalVariable(name: "ctx", arg: 1, scope: !7863, file: !349, line: 632, type: !567)
!7865 = !DILocation(line: 632, column: 40, scope: !7863)
!7866 = !DILocalVariable(name: "str", arg: 2, scope: !7863, file: !349, line: 632, type: !180)
!7867 = !DILocation(line: 632, column: 68, scope: !7863)
!7868 = !DILocation(line: 634, column: 10, scope: !7863)
!7869 = !DILocation(line: 634, column: 3, scope: !7863)
!7870 = distinct !DISubprogram(name: "copy_attr_free", scope: !349, file: !349, line: 638, type: !565, scopeLine: 640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!7871 = !DILocalVariable(name: "ctx", arg: 1, scope: !7870, file: !349, line: 638, type: !567)
!7872 = !DILocation(line: 638, column: 39, scope: !7870)
!7873 = !DILocalVariable(name: "str", arg: 2, scope: !7870, file: !349, line: 639, type: !180)
!7874 = !DILocation(line: 639, column: 29, scope: !7870)
!7875 = !DILocation(line: 641, column: 1, scope: !7870)
!7876 = distinct !DISubprogram(name: "check_selinux_attr", scope: !349, file: !349, line: 649, type: !592, scopeLine: 650, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!7877 = !DILocalVariable(name: "name", arg: 1, scope: !7876, file: !349, line: 649, type: !180)
!7878 = !DILocation(line: 649, column: 33, scope: !7876)
!7879 = !DILocalVariable(name: "ctx", arg: 2, scope: !7876, file: !349, line: 649, type: !567)
!7880 = !DILocation(line: 649, column: 61, scope: !7876)
!7881 = !DILocation(line: 651, column: 10, scope: !7876)
!7882 = !DILocation(line: 652, column: 10, scope: !7876)
!7883 = !DILocation(line: 652, column: 42, scope: !7876)
!7884 = !DILocation(line: 652, column: 48, scope: !7876)
!7885 = !DILocation(line: 652, column: 13, scope: !7876)
!7886 = !DILocation(line: 0, scope: !7876)
!7887 = !DILocation(line: 651, column: 3, scope: !7876)
!7888 = distinct !DISubprogram(name: "owner_failure_ok", scope: !349, file: !349, line: 3037, type: !407, scopeLine: 3038, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!7889 = !DILocalVariable(name: "x", arg: 1, scope: !7888, file: !349, line: 3037, type: !356)
!7890 = !DILocation(line: 3037, column: 44, scope: !7888)
!7891 = !DILocation(line: 3039, column: 12, scope: !7888)
!7892 = !DILocation(line: 3039, column: 18, scope: !7888)
!7893 = !DILocation(line: 3039, column: 27, scope: !7888)
!7894 = !DILocation(line: 3039, column: 30, scope: !7888)
!7895 = !DILocation(line: 3039, column: 36, scope: !7888)
!7896 = !DILocation(line: 3039, column: 47, scope: !7888)
!7897 = !DILocation(line: 3039, column: 51, scope: !7888)
!7898 = !DILocation(line: 3039, column: 54, scope: !7888)
!7899 = !{!2810, !2740, i64 27}
!7900 = !DILocation(line: 3039, column: 50, scope: !7888)
!7901 = !DILocation(line: 0, scope: !7888)
!7902 = !DILocation(line: 3039, column: 3, scope: !7888)
!7903 = distinct !DISubprogram(name: "clone_file", scope: !349, file: !349, line: 334, type: !505, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!7904 = !DILocalVariable(name: "dest_fd", arg: 1, scope: !7903, file: !349, line: 334, type: !7)
!7905 = !DILocation(line: 334, column: 17, scope: !7903)
!7906 = !DILocalVariable(name: "src_fd", arg: 2, scope: !7903, file: !349, line: 334, type: !7)
!7907 = !DILocation(line: 334, column: 30, scope: !7903)
!7908 = !DILocation(line: 337, column: 17, scope: !7903)
!7909 = !DILocation(line: 337, column: 35, scope: !7903)
!7910 = !DILocation(line: 337, column: 10, scope: !7903)
!7911 = !DILocation(line: 337, column: 3, scope: !7903)
!7912 = distinct !DISubprogram(name: "io_blksize", scope: !7913, file: !7913, line: 75, type: !507, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!7913 = !DIFile(filename: "src/ioblksize.h", directory: "/home/mbarbar/software/coreutils-8.31")
!7914 = !DILocalVariable(name: "sb", arg: 1, scope: !7912, file: !7913, line: 75, type: !415)
!7915 = !DILocation(line: 75, column: 25, scope: !7912)
!7916 = !DILocation(line: 77, column: 10, scope: !7912)
!7917 = !DILocation(line: 77, column: 3, scope: !7912)
!7918 = distinct !DISubprogram(name: "is_probably_sparse", scope: !349, file: !349, line: 995, type: !509, scopeLine: 996, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!7919 = !DILocalVariable(name: "sb", arg: 1, scope: !7918, file: !349, line: 995, type: !413)
!7920 = !DILocation(line: 995, column: 40, scope: !7918)
!7921 = !DILocation(line: 998, column: 14, scope: !7918)
!7922 = !DILocation(line: 999, column: 11, scope: !7918)
!7923 = !DILocation(line: 999, column: 14, scope: !7918)
!7924 = !{!2912, !2913, i64 64}
!7925 = !DILocation(line: 999, column: 33, scope: !7918)
!7926 = !DILocation(line: 999, column: 37, scope: !7918)
!7927 = !DILocation(line: 999, column: 45, scope: !7918)
!7928 = !DILocation(line: 999, column: 31, scope: !7918)
!7929 = !DILocation(line: 0, scope: !7918)
!7930 = !DILocation(line: 997, column: 3, scope: !7918)
!7931 = distinct !DISubprogram(name: "ptr_align", scope: !207, file: !207, line: 498, type: !511, scopeLine: 499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!7932 = !DILocalVariable(name: "ptr", arg: 1, scope: !7931, file: !207, line: 498, type: !513)
!7933 = !DILocation(line: 498, column: 24, scope: !7931)
!7934 = !DILocalVariable(name: "alignment", arg: 2, scope: !7931, file: !207, line: 498, type: !55)
!7935 = !DILocation(line: 498, column: 36, scope: !7931)
!7936 = !DILocalVariable(name: "p0", scope: !7931, file: !207, line: 500, type: !180)
!7937 = !DILocation(line: 500, column: 15, scope: !7931)
!7938 = !DILocation(line: 500, column: 20, scope: !7931)
!7939 = !DILocalVariable(name: "p1", scope: !7931, file: !207, line: 501, type: !180)
!7940 = !DILocation(line: 501, column: 15, scope: !7931)
!7941 = !DILocation(line: 501, column: 20, scope: !7931)
!7942 = !DILocation(line: 501, column: 25, scope: !7931)
!7943 = !DILocation(line: 501, column: 23, scope: !7931)
!7944 = !DILocation(line: 501, column: 35, scope: !7931)
!7945 = !DILocation(line: 502, column: 20, scope: !7931)
!7946 = !DILocation(line: 502, column: 34, scope: !7931)
!7947 = !DILocation(line: 502, column: 25, scope: !7931)
!7948 = !DILocation(line: 502, column: 39, scope: !7931)
!7949 = !DILocation(line: 502, column: 37, scope: !7931)
!7950 = !DILocation(line: 502, column: 23, scope: !7931)
!7951 = !DILocation(line: 502, column: 3, scope: !7931)
!7952 = distinct !DISubprogram(name: "extent_copy", scope: !349, file: !349, line: 387, type: !515, scopeLine: 392, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!7953 = !DILocalVariable(name: "src_fd", arg: 1, scope: !7952, file: !349, line: 387, type: !7)
!7954 = !DILocation(line: 387, column: 18, scope: !7952)
!7955 = !DILocalVariable(name: "dest_fd", arg: 2, scope: !7952, file: !349, line: 387, type: !7)
!7956 = !DILocation(line: 387, column: 30, scope: !7952)
!7957 = !DILocalVariable(name: "buf", arg: 3, scope: !7952, file: !349, line: 387, type: !9)
!7958 = !DILocation(line: 387, column: 45, scope: !7952)
!7959 = !DILocalVariable(name: "buf_size", arg: 4, scope: !7952, file: !349, line: 387, type: !55)
!7960 = !DILocation(line: 387, column: 57, scope: !7952)
!7961 = !DILocalVariable(name: "hole_size", arg: 5, scope: !7952, file: !349, line: 388, type: !55)
!7962 = !DILocation(line: 388, column: 21, scope: !7952)
!7963 = !DILocalVariable(name: "src_total_size", arg: 6, scope: !7952, file: !349, line: 388, type: !352)
!7964 = !DILocation(line: 388, column: 38, scope: !7952)
!7965 = !DILocalVariable(name: "sparse_mode", arg: 7, scope: !7952, file: !349, line: 389, type: !89)
!7966 = !DILocation(line: 389, column: 31, scope: !7952)
!7967 = !DILocalVariable(name: "src_name", arg: 8, scope: !7952, file: !349, line: 390, type: !180)
!7968 = !DILocation(line: 390, column: 26, scope: !7952)
!7969 = !DILocalVariable(name: "dst_name", arg: 9, scope: !7952, file: !349, line: 390, type: !180)
!7970 = !DILocation(line: 390, column: 48, scope: !7952)
!7971 = !DILocalVariable(name: "require_normal_copy", arg: 10, scope: !7952, file: !349, line: 391, type: !406)
!7972 = !DILocation(line: 391, column: 20, scope: !7952)
!7973 = !DILocalVariable(name: "scan", scope: !7952, file: !349, line: 393, type: !527)
!7974 = !DILocation(line: 393, column: 22, scope: !7952)
!7975 = !DILocalVariable(name: "last_ext_start", scope: !7952, file: !349, line: 394, type: !352)
!7976 = !DILocation(line: 394, column: 9, scope: !7952)
!7977 = !DILocalVariable(name: "last_ext_len", scope: !7952, file: !349, line: 395, type: !352)
!7978 = !DILocation(line: 395, column: 9, scope: !7952)
!7979 = !DILocalVariable(name: "dest_pos", scope: !7952, file: !349, line: 399, type: !352)
!7980 = !DILocation(line: 399, column: 9, scope: !7952)
!7981 = !DILocation(line: 401, column: 21, scope: !7952)
!7982 = !DILocation(line: 401, column: 3, scope: !7952)
!7983 = !DILocation(line: 403, column: 4, scope: !7952)
!7984 = !DILocation(line: 403, column: 24, scope: !7952)
!7985 = !DILocalVariable(name: "wrote_hole_at_eof", scope: !7952, file: !349, line: 404, type: !142)
!7986 = !DILocation(line: 404, column: 8, scope: !7952)
!7987 = !DILocation(line: 405, column: 3, scope: !7952)
!7988 = !DILocalVariable(name: "ok", scope: !7989, file: !349, line: 407, type: !142)
!7989 = distinct !DILexicalBlock(scope: !7952, file: !349, line: 406, column: 5)
!7990 = !DILocation(line: 407, column: 12, scope: !7989)
!7991 = !DILocation(line: 407, column: 17, scope: !7989)
!7992 = !DILocation(line: 408, column: 13, scope: !7993)
!7993 = distinct !DILexicalBlock(scope: !7989, file: !349, line: 408, column: 11)
!7994 = !DILocation(line: 408, column: 11, scope: !7989)
!7995 = !DILocation(line: 410, column: 20, scope: !7996)
!7996 = distinct !DILexicalBlock(scope: !7997, file: !349, line: 410, column: 15)
!7997 = distinct !DILexicalBlock(scope: !7993, file: !349, line: 409, column: 9)
!7998 = !{!7999, !2740, i64 33}
!7999 = !{!"extent_scan", !2633, i64 0, !2913, i64 8, !2633, i64 16, !2913, i64 24, !2740, i64 32, !2740, i64 33, !2646, i64 40}
!8000 = !DILocation(line: 410, column: 15, scope: !7997)
!8001 = !DILocation(line: 411, column: 13, scope: !7996)
!8002 = !DILocation(line: 413, column: 20, scope: !8003)
!8003 = distinct !DILexicalBlock(scope: !7997, file: !349, line: 413, column: 15)
!8004 = !{!7999, !2740, i64 32}
!8005 = !DILocation(line: 413, column: 15, scope: !7997)
!8006 = !DILocation(line: 415, column: 16, scope: !8007)
!8007 = distinct !DILexicalBlock(scope: !8003, file: !349, line: 414, column: 13)
!8008 = !DILocation(line: 415, column: 36, scope: !8007)
!8009 = !DILocation(line: 416, column: 15, scope: !8007)
!8010 = !DILocation(line: 419, column: 21, scope: !7997)
!8011 = !DILocation(line: 419, column: 28, scope: !7997)
!8012 = !DILocation(line: 420, column: 18, scope: !7997)
!8013 = !DILocation(line: 419, column: 11, scope: !7997)
!8014 = !DILocation(line: 421, column: 11, scope: !7997)
!8015 = !DILocalVariable(name: "empty_extent", scope: !7989, file: !349, line: 424, type: !142)
!8016 = !DILocation(line: 424, column: 12, scope: !7989)
!8017 = !DILocalVariable(name: "i", scope: !8018, file: !349, line: 425, type: !70)
!8018 = distinct !DILexicalBlock(scope: !7989, file: !349, line: 425, column: 7)
!8019 = !DILocation(line: 425, column: 25, scope: !8018)
!8020 = !DILocation(line: 425, column: 12, scope: !8018)
!8021 = !DILocation(line: 425, column: 32, scope: !8022)
!8022 = distinct !DILexicalBlock(scope: !8018, file: !349, line: 425, column: 7)
!8023 = !DILocation(line: 425, column: 41, scope: !8022)
!8024 = !{!7999, !2913, i64 24}
!8025 = !DILocation(line: 425, column: 34, scope: !8022)
!8026 = !DILocation(line: 425, column: 50, scope: !8022)
!8027 = !DILocation(line: 425, column: 53, scope: !8022)
!8028 = !DILocation(line: 425, column: 7, scope: !8018)
!8029 = !DILocalVariable(name: "ext_start", scope: !8030, file: !349, line: 427, type: !352)
!8030 = distinct !DILexicalBlock(scope: !8022, file: !349, line: 426, column: 9)
!8031 = !DILocation(line: 427, column: 17, scope: !8030)
!8032 = !DILocalVariable(name: "ext_len", scope: !8030, file: !349, line: 428, type: !352)
!8033 = !DILocation(line: 428, column: 17, scope: !8030)
!8034 = !DILocalVariable(name: "ext_hole_size", scope: !8030, file: !349, line: 429, type: !352)
!8035 = !DILocation(line: 429, column: 17, scope: !8030)
!8036 = !DILocation(line: 431, column: 15, scope: !8037)
!8037 = distinct !DILexicalBlock(scope: !8030, file: !349, line: 431, column: 15)
!8038 = !DILocation(line: 431, column: 24, scope: !8037)
!8039 = !DILocation(line: 431, column: 17, scope: !8037)
!8040 = !DILocation(line: 431, column: 15, scope: !8030)
!8041 = !DILocation(line: 433, column: 32, scope: !8042)
!8042 = distinct !DILexicalBlock(scope: !8037, file: !349, line: 432, column: 13)
!8043 = !{!7999, !2646, i64 40}
!8044 = !DILocation(line: 433, column: 41, scope: !8042)
!8045 = !DILocation(line: 433, column: 27, scope: !8042)
!8046 = !DILocation(line: 433, column: 44, scope: !8042)
!8047 = !{!8048, !2913, i64 0}
!8048 = !{!"extent_info", !2913, i64 0, !2913, i64 8, !2633, i64 16}
!8049 = !DILocation(line: 433, column: 25, scope: !8042)
!8050 = !DILocation(line: 434, column: 30, scope: !8042)
!8051 = !DILocation(line: 434, column: 39, scope: !8042)
!8052 = !DILocation(line: 434, column: 25, scope: !8042)
!8053 = !DILocation(line: 434, column: 42, scope: !8042)
!8054 = !{!8048, !2913, i64 8}
!8055 = !DILocation(line: 434, column: 23, scope: !8042)
!8056 = !DILocation(line: 435, column: 13, scope: !8042)
!8057 = !DILocation(line: 438, column: 16, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !8037, file: !349, line: 437, column: 13)
!8059 = !DILocation(line: 439, column: 27, scope: !8058)
!8060 = !DILocation(line: 439, column: 49, scope: !8058)
!8061 = !DILocation(line: 439, column: 58, scope: !8058)
!8062 = !DILocation(line: 439, column: 44, scope: !8058)
!8063 = !DILocation(line: 439, column: 61, scope: !8058)
!8064 = !DILocation(line: 439, column: 42, scope: !8058)
!8065 = !DILocation(line: 439, column: 25, scope: !8058)
!8066 = !DILocation(line: 440, column: 23, scope: !8058)
!8067 = !DILocation(line: 450, column: 15, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !8030, file: !349, line: 450, column: 15)
!8069 = !DILocation(line: 450, column: 32, scope: !8068)
!8070 = !DILocation(line: 450, column: 44, scope: !8068)
!8071 = !DILocation(line: 450, column: 42, scope: !8068)
!8072 = !DILocation(line: 450, column: 30, scope: !8068)
!8073 = !DILocation(line: 450, column: 15, scope: !8030)
!8074 = !DILocation(line: 452, column: 19, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !8076, file: !349, line: 452, column: 19)
!8076 = distinct !DILexicalBlock(scope: !8068, file: !349, line: 451, column: 13)
!8077 = !DILocation(line: 452, column: 36, scope: !8075)
!8078 = !DILocation(line: 452, column: 34, scope: !8075)
!8079 = !DILocation(line: 452, column: 19, scope: !8076)
!8080 = !DILocation(line: 453, column: 29, scope: !8075)
!8081 = !DILocation(line: 453, column: 27, scope: !8075)
!8082 = !DILocation(line: 453, column: 17, scope: !8075)
!8083 = !DILocation(line: 454, column: 25, scope: !8076)
!8084 = !DILocation(line: 454, column: 42, scope: !8076)
!8085 = !DILocation(line: 454, column: 40, scope: !8076)
!8086 = !DILocation(line: 454, column: 23, scope: !8076)
!8087 = !DILocation(line: 455, column: 13, scope: !8076)
!8088 = !DILocation(line: 457, column: 27, scope: !8030)
!8089 = !DILocation(line: 457, column: 39, scope: !8030)
!8090 = !DILocation(line: 457, column: 37, scope: !8030)
!8091 = !DILocation(line: 457, column: 56, scope: !8030)
!8092 = !DILocation(line: 457, column: 54, scope: !8030)
!8093 = !DILocation(line: 457, column: 25, scope: !8030)
!8094 = !DILocation(line: 459, column: 29, scope: !8030)
!8095 = !DILocation(line: 461, column: 15, scope: !8096)
!8096 = distinct !DILexicalBlock(scope: !8030, file: !349, line: 461, column: 15)
!8097 = !DILocation(line: 461, column: 15, scope: !8030)
!8098 = !DILocation(line: 463, column: 26, scope: !8099)
!8099 = distinct !DILexicalBlock(scope: !8100, file: !349, line: 463, column: 19)
!8100 = distinct !DILexicalBlock(scope: !8096, file: !349, line: 462, column: 13)
!8101 = !DILocation(line: 463, column: 34, scope: !8099)
!8102 = !DILocation(line: 463, column: 19, scope: !8099)
!8103 = !DILocation(line: 463, column: 55, scope: !8099)
!8104 = !DILocation(line: 463, column: 19, scope: !8100)
!8105 = !DILocation(line: 465, column: 29, scope: !8106)
!8106 = distinct !DILexicalBlock(scope: !8099, file: !349, line: 464, column: 17)
!8107 = !DILocation(line: 465, column: 36, scope: !8106)
!8108 = !DILocation(line: 465, column: 58, scope: !8106)
!8109 = !DILocation(line: 465, column: 19, scope: !8106)
!8110 = !DILabel(scope: !8106, name: "fail", file: !349, line: 466)
!8111 = !DILocation(line: 466, column: 17, scope: !8106)
!8112 = !DILocation(line: 467, column: 19, scope: !8106)
!8113 = !DILocation(line: 468, column: 19, scope: !8106)
!8114 = !DILocation(line: 471, column: 20, scope: !8115)
!8115 = distinct !DILexicalBlock(scope: !8100, file: !349, line: 471, column: 19)
!8116 = !DILocation(line: 471, column: 33, scope: !8115)
!8117 = !DILocation(line: 471, column: 36, scope: !8115)
!8118 = !DILocation(line: 471, column: 48, scope: !8115)
!8119 = !DILocation(line: 472, column: 19, scope: !8115)
!8120 = !DILocation(line: 472, column: 24, scope: !8115)
!8121 = !DILocation(line: 472, column: 37, scope: !8115)
!8122 = !DILocation(line: 472, column: 40, scope: !8115)
!8123 = !DILocation(line: 472, column: 52, scope: !8115)
!8124 = !DILocation(line: 471, column: 19, scope: !8100)
!8125 = !DILocation(line: 474, column: 38, scope: !8126)
!8126 = distinct !DILexicalBlock(scope: !8127, file: !349, line: 474, column: 23)
!8127 = distinct !DILexicalBlock(scope: !8115, file: !349, line: 473, column: 17)
!8128 = !DILocation(line: 474, column: 47, scope: !8126)
!8129 = !DILocation(line: 475, column: 38, scope: !8126)
!8130 = !DILocation(line: 475, column: 50, scope: !8126)
!8131 = !DILocation(line: 476, column: 38, scope: !8126)
!8132 = !DILocation(line: 474, column: 25, scope: !8126)
!8133 = !DILocation(line: 474, column: 23, scope: !8127)
!8134 = !DILocation(line: 477, column: 21, scope: !8126)
!8135 = !DILocation(line: 478, column: 37, scope: !8127)
!8136 = !DILocation(line: 479, column: 17, scope: !8127)
!8137 = !DILocalVariable(name: "nzeros", scope: !8138, file: !349, line: 485, type: !352)
!8138 = distinct !DILexicalBlock(scope: !8115, file: !349, line: 481, column: 17)
!8139 = !DILocation(line: 485, column: 25, scope: !8138)
!8140 = !DILocation(line: 485, column: 34, scope: !8138)
!8141 = !DILocation(line: 486, column: 23, scope: !8142)
!8142 = distinct !DILexicalBlock(scope: !8138, file: !349, line: 486, column: 23)
!8143 = !DILocation(line: 486, column: 23, scope: !8138)
!8144 = !DILocation(line: 487, column: 30, scope: !8142)
!8145 = !DILocation(line: 487, column: 28, scope: !8142)
!8146 = !DILocation(line: 487, column: 21, scope: !8142)
!8147 = !DILocation(line: 489, column: 38, scope: !8148)
!8148 = distinct !DILexicalBlock(scope: !8138, file: !349, line: 489, column: 23)
!8149 = !DILocation(line: 489, column: 47, scope: !8148)
!8150 = !DILocation(line: 489, column: 25, scope: !8148)
!8151 = !DILocation(line: 489, column: 23, scope: !8138)
!8152 = !DILocation(line: 491, column: 33, scope: !8153)
!8153 = distinct !DILexicalBlock(scope: !8148, file: !349, line: 490, column: 21)
!8154 = !DILocation(line: 491, column: 40, scope: !8153)
!8155 = !DILocation(line: 492, column: 30, scope: !8153)
!8156 = !DILocation(line: 491, column: 23, scope: !8153)
!8157 = !DILocation(line: 493, column: 23, scope: !8153)
!8158 = !DILocation(line: 496, column: 30, scope: !8138)
!8159 = !DILocation(line: 496, column: 28, scope: !8138)
!8160 = !DILocation(line: 498, column: 13, scope: !8100)
!8161 = !DILocation(line: 500, column: 28, scope: !8030)
!8162 = !DILocation(line: 500, column: 26, scope: !8030)
!8163 = !DILocalVariable(name: "n_read", scope: !8164, file: !349, line: 517, type: !352)
!8164 = distinct !DILexicalBlock(scope: !8165, file: !349, line: 516, column: 13)
!8165 = distinct !DILexicalBlock(scope: !8030, file: !349, line: 508, column: 15)
!8166 = !DILocation(line: 517, column: 21, scope: !8164)
!8167 = !DILocation(line: 518, column: 28, scope: !8164)
!8168 = !DILocation(line: 519, column: 30, scope: !8164)
!8169 = !DILocation(line: 519, column: 28, scope: !8164)
!8170 = !DILocalVariable(name: "read_hole", scope: !8164, file: !349, line: 520, type: !142)
!8171 = !DILocation(line: 520, column: 20, scope: !8164)
!8172 = !DILocation(line: 522, column: 35, scope: !8173)
!8173 = distinct !DILexicalBlock(scope: !8164, file: !349, line: 522, column: 20)
!8174 = !DILocation(line: 522, column: 43, scope: !8173)
!8175 = !DILocation(line: 522, column: 52, scope: !8173)
!8176 = !DILocation(line: 522, column: 57, scope: !8173)
!8177 = !DILocation(line: 523, column: 35, scope: !8173)
!8178 = !DILocation(line: 523, column: 47, scope: !8173)
!8179 = !DILocation(line: 523, column: 66, scope: !8173)
!8180 = !DILocation(line: 524, column: 41, scope: !8173)
!8181 = !DILocation(line: 524, column: 51, scope: !8173)
!8182 = !DILocation(line: 524, column: 61, scope: !8173)
!8183 = !DILocation(line: 522, column: 22, scope: !8173)
!8184 = !DILocation(line: 522, column: 20, scope: !8164)
!8185 = !DILocation(line: 526, column: 17, scope: !8173)
!8186 = !DILocation(line: 528, column: 26, scope: !8164)
!8187 = !DILocation(line: 528, column: 38, scope: !8164)
!8188 = !DILocation(line: 528, column: 36, scope: !8164)
!8189 = !DILocation(line: 528, column: 24, scope: !8164)
!8190 = !DILocation(line: 529, column: 19, scope: !8191)
!8191 = distinct !DILexicalBlock(scope: !8164, file: !349, line: 529, column: 19)
!8192 = !DILocation(line: 529, column: 19, scope: !8164)
!8193 = !DILocation(line: 530, column: 37, scope: !8191)
!8194 = !DILocation(line: 530, column: 35, scope: !8191)
!8195 = !DILocation(line: 530, column: 17, scope: !8191)
!8196 = !DILocation(line: 538, column: 15, scope: !8197)
!8197 = distinct !DILexicalBlock(scope: !8030, file: !349, line: 538, column: 15)
!8198 = !DILocation(line: 538, column: 27, scope: !8197)
!8199 = !DILocation(line: 538, column: 24, scope: !8197)
!8200 = !DILocation(line: 538, column: 15, scope: !8030)
!8201 = !DILocation(line: 540, column: 20, scope: !8202)
!8202 = distinct !DILexicalBlock(scope: !8197, file: !349, line: 539, column: 13)
!8203 = !DILocation(line: 540, column: 37, scope: !8202)
!8204 = !DILocation(line: 541, column: 15, scope: !8202)
!8205 = !DILocation(line: 543, column: 9, scope: !8030)
!8206 = !DILocation(line: 425, column: 68, scope: !8022)
!8207 = !DILocation(line: 425, column: 7, scope: !8022)
!8208 = distinct !{!8208, !8028, !8209}
!8209 = !DILocation(line: 543, column: 9, scope: !8018)
!8210 = !DILocation(line: 546, column: 7, scope: !7989)
!8211 = !DILocation(line: 548, column: 5, scope: !7989)
!8212 = !DILocation(line: 549, column: 17, scope: !7952)
!8213 = !DILocation(line: 549, column: 10, scope: !7952)
!8214 = distinct !{!8214, !7987, !8215}
!8215 = !DILocation(line: 549, column: 33, scope: !7952)
!8216 = !DILocation(line: 559, column: 8, scope: !8217)
!8217 = distinct !DILexicalBlock(scope: !7952, file: !349, line: 559, column: 7)
!8218 = !DILocation(line: 559, column: 19, scope: !8217)
!8219 = !DILocation(line: 559, column: 17, scope: !8217)
!8220 = !DILocation(line: 559, column: 34, scope: !8217)
!8221 = !DILocation(line: 559, column: 37, scope: !8217)
!8222 = !DILocation(line: 560, column: 7, scope: !8217)
!8223 = !DILocation(line: 560, column: 11, scope: !8217)
!8224 = !DILocation(line: 560, column: 23, scope: !8217)
!8225 = !DILocation(line: 559, column: 7, scope: !7952)
!8226 = !DILocation(line: 561, column: 24, scope: !8217)
!8227 = !DILocation(line: 561, column: 33, scope: !8217)
!8228 = !DILocation(line: 561, column: 13, scope: !8217)
!8229 = !DILocation(line: 562, column: 28, scope: !8217)
!8230 = !DILocation(line: 562, column: 37, scope: !8217)
!8231 = !DILocation(line: 562, column: 54, scope: !8217)
!8232 = !DILocation(line: 562, column: 52, scope: !8217)
!8233 = !DILocation(line: 562, column: 15, scope: !8217)
!8234 = !DILocation(line: 564, column: 17, scope: !8235)
!8235 = distinct !DILexicalBlock(scope: !8217, file: !349, line: 563, column: 5)
!8236 = !DILocation(line: 564, column: 24, scope: !8235)
!8237 = !DILocation(line: 564, column: 50, scope: !8235)
!8238 = !DILocation(line: 564, column: 7, scope: !8235)
!8239 = !DILocation(line: 565, column: 7, scope: !8235)
!8240 = !DILocation(line: 568, column: 7, scope: !8241)
!8241 = distinct !DILexicalBlock(scope: !7952, file: !349, line: 568, column: 7)
!8242 = !DILocation(line: 568, column: 19, scope: !8241)
!8243 = !DILocation(line: 568, column: 36, scope: !8241)
!8244 = !DILocation(line: 568, column: 39, scope: !8241)
!8245 = !DILocation(line: 568, column: 50, scope: !8241)
!8246 = !DILocation(line: 568, column: 48, scope: !8241)
!8247 = !DILocation(line: 569, column: 7, scope: !8241)
!8248 = !DILocation(line: 569, column: 22, scope: !8241)
!8249 = !DILocation(line: 569, column: 31, scope: !8241)
!8250 = !DILocation(line: 569, column: 41, scope: !8241)
!8251 = !DILocation(line: 569, column: 58, scope: !8241)
!8252 = !DILocation(line: 569, column: 56, scope: !8241)
!8253 = !DILocation(line: 569, column: 10, scope: !8241)
!8254 = !DILocation(line: 569, column: 68, scope: !8241)
!8255 = !DILocation(line: 568, column: 7, scope: !7952)
!8256 = !DILocation(line: 571, column: 17, scope: !8257)
!8257 = distinct !DILexicalBlock(scope: !8241, file: !349, line: 570, column: 5)
!8258 = !DILocation(line: 571, column: 24, scope: !8257)
!8259 = !DILocation(line: 571, column: 52, scope: !8257)
!8260 = !DILocation(line: 571, column: 7, scope: !8257)
!8261 = !DILocation(line: 572, column: 7, scope: !8257)
!8262 = !DILocation(line: 575, column: 3, scope: !7952)
!8263 = !DILocation(line: 576, column: 1, scope: !7952)
!8264 = distinct !DISubprogram(name: "sparse_copy", scope: !349, file: !349, line: 224, type: !542, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!8265 = !DILocalVariable(name: "src_fd", arg: 1, scope: !8264, file: !349, line: 224, type: !7)
!8266 = !DILocation(line: 224, column: 18, scope: !8264)
!8267 = !DILocalVariable(name: "dest_fd", arg: 2, scope: !8264, file: !349, line: 224, type: !7)
!8268 = !DILocation(line: 224, column: 30, scope: !8264)
!8269 = !DILocalVariable(name: "buf", arg: 3, scope: !8264, file: !349, line: 224, type: !9)
!8270 = !DILocation(line: 224, column: 45, scope: !8264)
!8271 = !DILocalVariable(name: "buf_size", arg: 4, scope: !8264, file: !349, line: 224, type: !55)
!8272 = !DILocation(line: 224, column: 57, scope: !8264)
!8273 = !DILocalVariable(name: "hole_size", arg: 5, scope: !8264, file: !349, line: 225, type: !55)
!8274 = !DILocation(line: 225, column: 21, scope: !8264)
!8275 = !DILocalVariable(name: "punch_holes", arg: 6, scope: !8264, file: !349, line: 225, type: !142)
!8276 = !DILocation(line: 225, column: 37, scope: !8264)
!8277 = !DILocalVariable(name: "src_name", arg: 7, scope: !8264, file: !349, line: 226, type: !180)
!8278 = !DILocation(line: 226, column: 26, scope: !8264)
!8279 = !DILocalVariable(name: "dst_name", arg: 8, scope: !8264, file: !349, line: 226, type: !180)
!8280 = !DILocation(line: 226, column: 48, scope: !8264)
!8281 = !DILocalVariable(name: "max_n_read", arg: 9, scope: !8264, file: !349, line: 227, type: !544)
!8282 = !DILocation(line: 227, column: 24, scope: !8264)
!8283 = !DILocalVariable(name: "total_n_read", arg: 10, scope: !8264, file: !349, line: 227, type: !547)
!8284 = !DILocation(line: 227, column: 43, scope: !8264)
!8285 = !DILocalVariable(name: "last_write_made_hole", arg: 11, scope: !8264, file: !349, line: 228, type: !406)
!8286 = !DILocation(line: 228, column: 20, scope: !8264)
!8287 = !DILocation(line: 230, column: 4, scope: !8264)
!8288 = !DILocation(line: 230, column: 25, scope: !8264)
!8289 = !DILocation(line: 231, column: 4, scope: !8264)
!8290 = !DILocation(line: 231, column: 17, scope: !8264)
!8291 = !DILocalVariable(name: "make_hole", scope: !8264, file: !349, line: 232, type: !142)
!8292 = !DILocation(line: 232, column: 8, scope: !8264)
!8293 = !DILocalVariable(name: "psize", scope: !8264, file: !349, line: 233, type: !352)
!8294 = !DILocation(line: 233, column: 9, scope: !8264)
!8295 = !DILocation(line: 235, column: 3, scope: !8264)
!8296 = !DILocation(line: 235, column: 10, scope: !8264)
!8297 = !DILocalVariable(name: "n_read", scope: !8298, file: !349, line: 237, type: !548)
!8298 = distinct !DILexicalBlock(scope: !8264, file: !349, line: 236, column: 5)
!8299 = !DILocation(line: 237, column: 15, scope: !8298)
!8300 = !DILocation(line: 237, column: 30, scope: !8298)
!8301 = !DILocation(line: 237, column: 38, scope: !8298)
!8302 = !DILocation(line: 237, column: 43, scope: !8298)
!8303 = !DILocation(line: 237, column: 24, scope: !8298)
!8304 = !DILocation(line: 238, column: 11, scope: !8305)
!8305 = distinct !DILexicalBlock(scope: !8298, file: !349, line: 238, column: 11)
!8306 = !DILocation(line: 238, column: 18, scope: !8305)
!8307 = !DILocation(line: 238, column: 11, scope: !8298)
!8308 = !DILocation(line: 240, column: 15, scope: !8309)
!8309 = distinct !DILexicalBlock(scope: !8310, file: !349, line: 240, column: 15)
!8310 = distinct !DILexicalBlock(scope: !8305, file: !349, line: 239, column: 9)
!8311 = !DILocation(line: 240, column: 21, scope: !8309)
!8312 = !DILocation(line: 240, column: 15, scope: !8310)
!8313 = !DILocation(line: 241, column: 13, scope: !8309)
!8314 = distinct !{!8314, !8295, !8315}
!8315 = !DILocation(line: 321, column: 5, scope: !8264)
!8316 = !DILocation(line: 242, column: 21, scope: !8310)
!8317 = !DILocation(line: 242, column: 28, scope: !8310)
!8318 = !DILocation(line: 242, column: 51, scope: !8310)
!8319 = !DILocation(line: 242, column: 11, scope: !8310)
!8320 = !DILocation(line: 243, column: 11, scope: !8310)
!8321 = !DILocation(line: 245, column: 11, scope: !8322)
!8322 = distinct !DILexicalBlock(scope: !8298, file: !349, line: 245, column: 11)
!8323 = !DILocation(line: 245, column: 18, scope: !8322)
!8324 = !DILocation(line: 245, column: 11, scope: !8298)
!8325 = !DILocation(line: 246, column: 9, scope: !8322)
!8326 = !DILocation(line: 247, column: 21, scope: !8298)
!8327 = !DILocation(line: 247, column: 18, scope: !8298)
!8328 = !DILocation(line: 248, column: 24, scope: !8298)
!8329 = !DILocation(line: 248, column: 8, scope: !8298)
!8330 = !DILocation(line: 248, column: 21, scope: !8298)
!8331 = !DILocalVariable(name: "csize", scope: !8298, file: !349, line: 251, type: !55)
!8332 = !DILocation(line: 251, column: 14, scope: !8298)
!8333 = !DILocation(line: 251, column: 22, scope: !8298)
!8334 = !DILocation(line: 251, column: 34, scope: !8298)
!8335 = !DILocation(line: 251, column: 46, scope: !8298)
!8336 = !DILocalVariable(name: "cbuf", scope: !8298, file: !349, line: 252, type: !9)
!8337 = !DILocation(line: 252, column: 13, scope: !8298)
!8338 = !DILocation(line: 252, column: 20, scope: !8298)
!8339 = !DILocalVariable(name: "pbuf", scope: !8298, file: !349, line: 253, type: !9)
!8340 = !DILocation(line: 253, column: 13, scope: !8298)
!8341 = !DILocation(line: 253, column: 20, scope: !8298)
!8342 = !DILocation(line: 255, column: 7, scope: !8298)
!8343 = !DILocation(line: 255, column: 14, scope: !8298)
!8344 = !DILocalVariable(name: "prev_hole", scope: !8345, file: !349, line: 257, type: !142)
!8345 = distinct !DILexicalBlock(scope: !8298, file: !349, line: 256, column: 9)
!8346 = !DILocation(line: 257, column: 16, scope: !8345)
!8347 = !DILocation(line: 257, column: 28, scope: !8345)
!8348 = !DILocation(line: 258, column: 19, scope: !8345)
!8349 = !DILocation(line: 258, column: 17, scope: !8345)
!8350 = !DILocation(line: 260, column: 15, scope: !8351)
!8351 = distinct !DILexicalBlock(scope: !8345, file: !349, line: 260, column: 15)
!8352 = !DILocation(line: 260, column: 25, scope: !8351)
!8353 = !DILocation(line: 260, column: 28, scope: !8351)
!8354 = !DILocation(line: 260, column: 15, scope: !8345)
!8355 = !DILocation(line: 261, column: 33, scope: !8351)
!8356 = !DILocation(line: 261, column: 39, scope: !8351)
!8357 = !DILocation(line: 261, column: 25, scope: !8351)
!8358 = !DILocation(line: 261, column: 23, scope: !8351)
!8359 = !DILocation(line: 261, column: 13, scope: !8351)
!8360 = !DILocalVariable(name: "transition", scope: !8345, file: !349, line: 263, type: !142)
!8361 = !DILocation(line: 263, column: 16, scope: !8345)
!8362 = !DILocation(line: 263, column: 30, scope: !8345)
!8363 = !DILocation(line: 263, column: 43, scope: !8345)
!8364 = !DILocation(line: 263, column: 40, scope: !8345)
!8365 = !DILocation(line: 263, column: 54, scope: !8345)
!8366 = !DILocation(line: 263, column: 57, scope: !8345)
!8367 = !DILocation(line: 0, scope: !8345)
!8368 = !DILocalVariable(name: "last_chunk", scope: !8345, file: !349, line: 264, type: !142)
!8369 = !DILocation(line: 264, column: 16, scope: !8345)
!8370 = !DILocation(line: 264, column: 30, scope: !8345)
!8371 = !DILocation(line: 264, column: 40, scope: !8345)
!8372 = !DILocation(line: 264, column: 37, scope: !8345)
!8373 = !DILocation(line: 264, column: 46, scope: !8345)
!8374 = !DILocation(line: 264, column: 51, scope: !8345)
!8375 = !DILocation(line: 264, column: 62, scope: !8345)
!8376 = !DILocation(line: 264, column: 67, scope: !8345)
!8377 = !DILocation(line: 264, column: 65, scope: !8345)
!8378 = !DILocation(line: 266, column: 15, scope: !8379)
!8379 = distinct !DILexicalBlock(scope: !8345, file: !349, line: 266, column: 15)
!8380 = !DILocation(line: 266, column: 26, scope: !8379)
!8381 = !DILocation(line: 266, column: 29, scope: !8379)
!8382 = !DILocation(line: 266, column: 15, scope: !8345)
!8383 = !DILocation(line: 268, column: 21, scope: !8384)
!8384 = distinct !DILexicalBlock(scope: !8385, file: !349, line: 268, column: 19)
!8385 = distinct !DILexicalBlock(scope: !8379, file: !349, line: 267, column: 13)
!8386 = !DILocation(line: 268, column: 19, scope: !8385)
!8387 = !DILocation(line: 269, column: 26, scope: !8384)
!8388 = !DILocation(line: 269, column: 23, scope: !8384)
!8389 = !DILocation(line: 269, column: 17, scope: !8384)
!8390 = !DILocation(line: 271, column: 21, scope: !8391)
!8391 = distinct !DILexicalBlock(scope: !8385, file: !349, line: 271, column: 19)
!8392 = !DILocation(line: 271, column: 19, scope: !8385)
!8393 = !DILocation(line: 273, column: 35, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !8395, file: !349, line: 273, column: 23)
!8395 = distinct !DILexicalBlock(scope: !8391, file: !349, line: 272, column: 17)
!8396 = !DILocation(line: 273, column: 44, scope: !8394)
!8397 = !DILocation(line: 273, column: 50, scope: !8394)
!8398 = !DILocation(line: 273, column: 23, scope: !8394)
!8399 = !DILocation(line: 273, column: 60, scope: !8394)
!8400 = !DILocation(line: 273, column: 57, scope: !8394)
!8401 = !DILocation(line: 273, column: 23, scope: !8395)
!8402 = !DILocation(line: 275, column: 33, scope: !8403)
!8403 = distinct !DILexicalBlock(scope: !8394, file: !349, line: 274, column: 21)
!8404 = !DILocation(line: 275, column: 40, scope: !8403)
!8405 = !DILocation(line: 276, column: 30, scope: !8403)
!8406 = !DILocation(line: 275, column: 23, scope: !8403)
!8407 = !DILocation(line: 277, column: 23, scope: !8403)
!8408 = !DILocation(line: 279, column: 17, scope: !8395)
!8409 = !DILocation(line: 282, column: 38, scope: !8410)
!8410 = distinct !DILexicalBlock(scope: !8411, file: !349, line: 282, column: 23)
!8411 = distinct !DILexicalBlock(scope: !8391, file: !349, line: 281, column: 17)
!8412 = !DILocation(line: 282, column: 47, scope: !8410)
!8413 = !DILocation(line: 282, column: 57, scope: !8410)
!8414 = !DILocation(line: 282, column: 70, scope: !8410)
!8415 = !DILocation(line: 282, column: 25, scope: !8410)
!8416 = !DILocation(line: 282, column: 23, scope: !8411)
!8417 = !DILocation(line: 283, column: 21, scope: !8410)
!8418 = !DILocation(line: 286, column: 22, scope: !8385)
!8419 = !DILocation(line: 286, column: 20, scope: !8385)
!8420 = !DILocation(line: 287, column: 23, scope: !8385)
!8421 = !DILocation(line: 287, column: 21, scope: !8385)
!8422 = !DILocation(line: 289, column: 19, scope: !8423)
!8423 = distinct !DILexicalBlock(scope: !8385, file: !349, line: 289, column: 19)
!8424 = !DILocation(line: 289, column: 19, scope: !8385)
!8425 = !DILocation(line: 291, column: 25, scope: !8426)
!8426 = distinct !DILexicalBlock(scope: !8427, file: !349, line: 291, column: 23)
!8427 = distinct !DILexicalBlock(scope: !8423, file: !349, line: 290, column: 17)
!8428 = !DILocation(line: 291, column: 23, scope: !8427)
!8429 = !DILocation(line: 292, column: 28, scope: !8426)
!8430 = !DILocation(line: 292, column: 21, scope: !8426)
!8431 = !DILocation(line: 294, column: 23, scope: !8432)
!8432 = distinct !DILexicalBlock(scope: !8427, file: !349, line: 294, column: 23)
!8433 = !DILocation(line: 294, column: 23, scope: !8427)
!8434 = !DILocation(line: 295, column: 27, scope: !8432)
!8435 = !DILocation(line: 295, column: 21, scope: !8432)
!8436 = !DILocation(line: 297, column: 27, scope: !8432)
!8437 = !DILocation(line: 298, column: 17, scope: !8427)
!8438 = !DILocation(line: 299, column: 13, scope: !8385)
!8439 = !DILocation(line: 302, column: 19, scope: !8440)
!8440 = distinct !DILexicalBlock(scope: !8441, file: !349, line: 302, column: 19)
!8441 = distinct !DILexicalBlock(scope: !8379, file: !349, line: 301, column: 13)
!8442 = !DILocation(line: 302, column: 40, scope: !8440)
!8443 = !DILocation(line: 302, column: 38, scope: !8440)
!8444 = !DILocation(line: 302, column: 25, scope: !8440)
!8445 = !DILocation(line: 302, column: 19, scope: !8441)
!8446 = !DILocation(line: 303, column: 26, scope: !8440)
!8447 = !DILocation(line: 303, column: 23, scope: !8440)
!8448 = !DILocation(line: 303, column: 17, scope: !8440)
!8449 = !DILocation(line: 306, column: 32, scope: !8450)
!8450 = distinct !DILexicalBlock(scope: !8440, file: !349, line: 305, column: 17)
!8451 = !DILocation(line: 306, column: 58, scope: !8450)
!8452 = !DILocation(line: 306, column: 19, scope: !8450)
!8453 = !DILocation(line: 307, column: 19, scope: !8450)
!8454 = !DILocation(line: 311, column: 21, scope: !8345)
!8455 = !DILocation(line: 311, column: 18, scope: !8345)
!8456 = !DILocation(line: 312, column: 19, scope: !8345)
!8457 = !DILocation(line: 312, column: 16, scope: !8345)
!8458 = distinct !{!8458, !8342, !8459}
!8459 = !DILocation(line: 313, column: 9, scope: !8298)
!8460 = !DILocation(line: 315, column: 31, scope: !8298)
!8461 = !DILocation(line: 315, column: 8, scope: !8298)
!8462 = !DILocation(line: 315, column: 29, scope: !8298)
!8463 = !DILocation(line: 325, column: 7, scope: !8464)
!8464 = distinct !DILexicalBlock(scope: !8264, file: !349, line: 325, column: 7)
!8465 = !DILocation(line: 325, column: 17, scope: !8464)
!8466 = !DILocation(line: 325, column: 35, scope: !8464)
!8467 = !DILocation(line: 325, column: 44, scope: !8464)
!8468 = !DILocation(line: 325, column: 54, scope: !8464)
!8469 = !DILocation(line: 325, column: 67, scope: !8464)
!8470 = !DILocation(line: 325, column: 22, scope: !8464)
!8471 = !DILocation(line: 325, column: 7, scope: !8264)
!8472 = !DILocation(line: 326, column: 5, scope: !8464)
!8473 = !DILocation(line: 328, column: 5, scope: !8464)
!8474 = !DILocation(line: 329, column: 1, scope: !8264)
!8475 = distinct !DISubprogram(name: "fchmod_or_lchmod", scope: !349, file: !349, line: 977, type: !555, scopeLine: 978, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!8476 = !DILocalVariable(name: "desc", arg: 1, scope: !8475, file: !349, line: 977, type: !7)
!8477 = !DILocation(line: 977, column: 23, scope: !8475)
!8478 = !DILocalVariable(name: "name", arg: 2, scope: !8475, file: !349, line: 977, type: !180)
!8479 = !DILocation(line: 977, column: 41, scope: !8475)
!8480 = !DILocalVariable(name: "mode", arg: 3, scope: !8475, file: !349, line: 977, type: !139)
!8481 = !DILocation(line: 977, column: 54, scope: !8475)
!8482 = !DILocation(line: 980, column: 12, scope: !8483)
!8483 = distinct !DILexicalBlock(scope: !8475, file: !349, line: 980, column: 7)
!8484 = !DILocation(line: 980, column: 9, scope: !8483)
!8485 = !DILocation(line: 980, column: 7, scope: !8475)
!8486 = !DILocation(line: 981, column: 20, scope: !8483)
!8487 = !DILocation(line: 981, column: 26, scope: !8483)
!8488 = !DILocation(line: 981, column: 12, scope: !8483)
!8489 = !DILocation(line: 981, column: 5, scope: !8483)
!8490 = !DILocation(line: 983, column: 18, scope: !8475)
!8491 = !DILocation(line: 983, column: 24, scope: !8475)
!8492 = !DILocation(line: 983, column: 10, scope: !8475)
!8493 = !DILocation(line: 983, column: 3, scope: !8475)
!8494 = !DILocation(line: 984, column: 1, scope: !8475)
!8495 = distinct !DISubprogram(name: "is_nul", scope: !207, file: !207, line: 509, type: !550, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!8496 = !DILocalVariable(name: "buf", arg: 1, scope: !8495, file: !207, line: 509, type: !513)
!8497 = !DILocation(line: 509, column: 21, scope: !8495)
!8498 = !DILocalVariable(name: "length", arg: 2, scope: !8495, file: !207, line: 509, type: !55)
!8499 = !DILocation(line: 509, column: 33, scope: !8495)
!8500 = !DILocalVariable(name: "p", scope: !8495, file: !207, line: 511, type: !552)
!8501 = !DILocation(line: 511, column: 24, scope: !8495)
!8502 = !DILocation(line: 511, column: 28, scope: !8495)
!8503 = !DILocalVariable(name: "word", scope: !8495, file: !207, line: 521, type: !554)
!8504 = !DILocation(line: 521, column: 17, scope: !8495)
!8505 = !DILocation(line: 524, column: 9, scope: !8506)
!8506 = distinct !DILexicalBlock(scope: !8495, file: !207, line: 524, column: 7)
!8507 = !DILocation(line: 524, column: 7, scope: !8495)
!8508 = !DILocation(line: 525, column: 7, scope: !8506)
!8509 = !DILocation(line: 528, column: 3, scope: !8495)
!8510 = !DILocation(line: 528, column: 10, scope: !8495)
!8511 = !DILocation(line: 530, column: 12, scope: !8512)
!8512 = distinct !DILexicalBlock(scope: !8513, file: !207, line: 530, column: 11)
!8513 = distinct !DILexicalBlock(scope: !8495, file: !207, line: 529, column: 5)
!8514 = !DILocation(line: 530, column: 11, scope: !8512)
!8515 = !DILocation(line: 530, column: 11, scope: !8513)
!8516 = !DILocation(line: 531, column: 9, scope: !8512)
!8517 = !DILocation(line: 532, column: 8, scope: !8513)
!8518 = !DILocation(line: 533, column: 13, scope: !8513)
!8519 = !DILocation(line: 534, column: 13, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8513, file: !207, line: 534, column: 11)
!8521 = !DILocation(line: 534, column: 11, scope: !8513)
!8522 = !DILocation(line: 535, column: 9, scope: !8520)
!8523 = distinct !{!8523, !8509, !8524}
!8524 = !DILocation(line: 536, column: 4, scope: !8495)
!8525 = !DILocation(line: 539, column: 3, scope: !8495)
!8526 = !DILocation(line: 541, column: 22, scope: !8527)
!8527 = distinct !DILexicalBlock(scope: !8528, file: !207, line: 540, column: 5)
!8528 = distinct !DILexicalBlock(scope: !8529, file: !207, line: 539, column: 3)
!8529 = distinct !DILexicalBlock(scope: !8495, file: !207, line: 539, column: 3)
!8530 = !DILocation(line: 541, column: 7, scope: !8527)
!8531 = !DILocation(line: 542, column: 11, scope: !8532)
!8532 = distinct !DILexicalBlock(scope: !8527, file: !207, line: 542, column: 11)
!8533 = !DILocation(line: 542, column: 11, scope: !8527)
!8534 = !DILocation(line: 543, column: 9, scope: !8532)
!8535 = !DILocation(line: 544, column: 9, scope: !8527)
!8536 = !DILocation(line: 545, column: 14, scope: !8527)
!8537 = !DILocation(line: 546, column: 13, scope: !8538)
!8538 = distinct !DILexicalBlock(scope: !8527, file: !207, line: 546, column: 11)
!8539 = !DILocation(line: 546, column: 11, scope: !8527)
!8540 = !DILocation(line: 547, column: 9, scope: !8538)
!8541 = !DILocation(line: 548, column: 11, scope: !8542)
!8542 = distinct !DILexicalBlock(scope: !8527, file: !207, line: 548, column: 11)
!8543 = !DILocation(line: 548, column: 34, scope: !8542)
!8544 = !DILocation(line: 548, column: 11, scope: !8527)
!8545 = !DILocation(line: 549, column: 9, scope: !8542)
!8546 = !DILocation(line: 539, column: 3, scope: !8528)
!8547 = distinct !{!8547, !8548, !8549}
!8548 = !DILocation(line: 539, column: 3, scope: !8529)
!8549 = !DILocation(line: 550, column: 4, scope: !8529)
!8550 = !DILocation(line: 553, column: 19, scope: !8495)
!8551 = !DILocation(line: 553, column: 24, scope: !8495)
!8552 = !DILocation(line: 553, column: 27, scope: !8495)
!8553 = !DILocation(line: 553, column: 11, scope: !8495)
!8554 = !DILocation(line: 553, column: 35, scope: !8495)
!8555 = !DILocation(line: 553, column: 4, scope: !8495)
!8556 = !DILocation(line: 554, column: 1, scope: !8495)
!8557 = distinct !DISubprogram(name: "create_hole", scope: !349, file: !349, line: 188, type: !536, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!8558 = !DILocalVariable(name: "fd", arg: 1, scope: !8557, file: !349, line: 188, type: !7)
!8559 = !DILocation(line: 188, column: 18, scope: !8557)
!8560 = !DILocalVariable(name: "name", arg: 2, scope: !8557, file: !349, line: 188, type: !180)
!8561 = !DILocation(line: 188, column: 34, scope: !8557)
!8562 = !DILocalVariable(name: "punch_holes", arg: 3, scope: !8557, file: !349, line: 188, type: !142)
!8563 = !DILocation(line: 188, column: 45, scope: !8557)
!8564 = !DILocalVariable(name: "size", arg: 4, scope: !8557, file: !349, line: 188, type: !352)
!8565 = !DILocation(line: 188, column: 64, scope: !8557)
!8566 = !DILocalVariable(name: "file_end", scope: !8557, file: !349, line: 190, type: !352)
!8567 = !DILocation(line: 190, column: 9, scope: !8557)
!8568 = !DILocation(line: 190, column: 27, scope: !8557)
!8569 = !DILocation(line: 190, column: 31, scope: !8557)
!8570 = !DILocation(line: 190, column: 20, scope: !8557)
!8571 = !DILocation(line: 192, column: 7, scope: !8572)
!8572 = distinct !DILexicalBlock(scope: !8557, file: !349, line: 192, column: 7)
!8573 = !DILocation(line: 192, column: 16, scope: !8572)
!8574 = !DILocation(line: 192, column: 7, scope: !8557)
!8575 = !DILocation(line: 194, column: 17, scope: !8576)
!8576 = distinct !DILexicalBlock(scope: !8572, file: !349, line: 193, column: 5)
!8577 = !DILocation(line: 194, column: 24, scope: !8576)
!8578 = !DILocation(line: 194, column: 46, scope: !8576)
!8579 = !DILocation(line: 194, column: 7, scope: !8576)
!8580 = !DILocation(line: 195, column: 7, scope: !8576)
!8581 = !DILocation(line: 202, column: 7, scope: !8582)
!8582 = distinct !DILexicalBlock(scope: !8557, file: !349, line: 202, column: 7)
!8583 = !DILocation(line: 202, column: 19, scope: !8582)
!8584 = !DILocation(line: 202, column: 34, scope: !8582)
!8585 = !DILocation(line: 202, column: 38, scope: !8582)
!8586 = !DILocation(line: 202, column: 49, scope: !8582)
!8587 = !DILocation(line: 202, column: 47, scope: !8582)
!8588 = !DILocation(line: 202, column: 55, scope: !8582)
!8589 = !DILocation(line: 202, column: 22, scope: !8582)
!8590 = !DILocation(line: 202, column: 61, scope: !8582)
!8591 = !DILocation(line: 202, column: 7, scope: !8557)
!8592 = !DILocation(line: 204, column: 17, scope: !8593)
!8593 = distinct !DILexicalBlock(scope: !8582, file: !349, line: 203, column: 5)
!8594 = !DILocation(line: 204, column: 24, scope: !8593)
!8595 = !DILocation(line: 204, column: 52, scope: !8593)
!8596 = !DILocation(line: 204, column: 7, scope: !8593)
!8597 = !DILocation(line: 205, column: 7, scope: !8593)
!8598 = !DILocation(line: 208, column: 3, scope: !8557)
!8599 = !DILocation(line: 209, column: 1, scope: !8557)
!8600 = distinct !DISubprogram(name: "punch_hole", scope: !349, file: !349, line: 169, type: !540, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!8601 = !DILocalVariable(name: "fd", arg: 1, scope: !8600, file: !349, line: 169, type: !7)
!8602 = !DILocation(line: 169, column: 17, scope: !8600)
!8603 = !DILocalVariable(name: "offset", arg: 2, scope: !8600, file: !349, line: 169, type: !352)
!8604 = !DILocation(line: 169, column: 27, scope: !8600)
!8605 = !DILocalVariable(name: "length", arg: 3, scope: !8600, file: !349, line: 169, type: !352)
!8606 = !DILocation(line: 169, column: 41, scope: !8600)
!8607 = !DILocalVariable(name: "ret", scope: !8600, file: !349, line: 171, type: !7)
!8608 = !DILocation(line: 171, column: 7, scope: !8600)
!8609 = !DILocation(line: 175, column: 20, scope: !8600)
!8610 = !DILocation(line: 176, column: 20, scope: !8600)
!8611 = !DILocation(line: 176, column: 28, scope: !8600)
!8612 = !DILocation(line: 175, column: 9, scope: !8600)
!8613 = !DILocation(line: 175, column: 7, scope: !8600)
!8614 = !DILocation(line: 177, column: 7, scope: !8615)
!8615 = distinct !DILexicalBlock(scope: !8600, file: !349, line: 177, column: 7)
!8616 = !DILocation(line: 177, column: 11, scope: !8615)
!8617 = !DILocation(line: 177, column: 15, scope: !8615)
!8618 = !DILocation(line: 177, column: 31, scope: !8615)
!8619 = !DILocation(line: 177, column: 19, scope: !8615)
!8620 = !DILocation(line: 177, column: 38, scope: !8615)
!8621 = !DILocation(line: 177, column: 41, scope: !8615)
!8622 = !DILocation(line: 177, column: 47, scope: !8615)
!8623 = !DILocation(line: 177, column: 7, scope: !8600)
!8624 = !DILocation(line: 178, column: 9, scope: !8615)
!8625 = !DILocation(line: 178, column: 5, scope: !8615)
!8626 = !DILocation(line: 181, column: 10, scope: !8600)
!8627 = !DILocation(line: 181, column: 3, scope: !8600)
!8628 = distinct !DISubprogram(name: "is_ENOTSUP", scope: !207, file: !207, line: 762, type: !256, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!8629 = !DILocalVariable(name: "err", arg: 1, scope: !8628, file: !207, line: 762, type: !7)
!8630 = !DILocation(line: 762, column: 17, scope: !8628)
!8631 = !DILocation(line: 764, column: 10, scope: !8628)
!8632 = !DILocation(line: 764, column: 14, scope: !8628)
!8633 = !DILocation(line: 764, column: 28, scope: !8628)
!8634 = !DILocation(line: 764, column: 3, scope: !8628)
!8635 = distinct !DISubprogram(name: "extent_scan_free", scope: !519, file: !519, line: 66, type: !524, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!8636 = !DILocalVariable(name: "scan", arg: 1, scope: !8635, file: !519, line: 66, type: !526)
!8637 = !DILocation(line: 66, column: 39, scope: !8635)
!8638 = !DILocation(line: 68, column: 9, scope: !8635)
!8639 = !DILocation(line: 68, column: 15, scope: !8635)
!8640 = !DILocation(line: 68, column: 3, scope: !8635)
!8641 = !DILocation(line: 69, column: 3, scope: !8635)
!8642 = !DILocation(line: 69, column: 9, scope: !8635)
!8643 = !DILocation(line: 69, column: 18, scope: !8635)
!8644 = !DILocation(line: 70, column: 3, scope: !8635)
!8645 = !DILocation(line: 70, column: 9, scope: !8635)
!8646 = !DILocation(line: 70, column: 18, scope: !8635)
!8647 = !DILocation(line: 71, column: 1, scope: !8635)
!8648 = !DILocalVariable(name: "fd", arg: 1, scope: !604, file: !349, line: 349, type: !7)
!8649 = !DILocation(line: 349, column: 18, scope: !604)
!8650 = !DILocalVariable(name: "n_bytes", arg: 2, scope: !604, file: !349, line: 349, type: !352)
!8651 = !DILocation(line: 349, column: 28, scope: !604)
!8652 = !DILocation(line: 357, column: 7, scope: !8653)
!8653 = distinct !DILexicalBlock(scope: !604, file: !349, line: 357, column: 7)
!8654 = !DILocation(line: 357, column: 13, scope: !8653)
!8655 = !DILocation(line: 357, column: 7, scope: !604)
!8656 = !DILocation(line: 360, column: 23, scope: !8657)
!8657 = distinct !DILexicalBlock(scope: !8653, file: !349, line: 358, column: 5)
!8658 = !DILocation(line: 360, column: 15, scope: !8657)
!8659 = !DILocation(line: 360, column: 13, scope: !8657)
!8660 = !DILocation(line: 361, column: 11, scope: !8661)
!8661 = distinct !DILexicalBlock(scope: !8657, file: !349, line: 361, column: 11)
!8662 = !DILocation(line: 361, column: 17, scope: !8661)
!8663 = !DILocation(line: 361, column: 11, scope: !8657)
!8664 = !DILocation(line: 363, column: 17, scope: !8665)
!8665 = distinct !DILexicalBlock(scope: !8661, file: !349, line: 362, column: 9)
!8666 = !DILocation(line: 364, column: 14, scope: !8665)
!8667 = !DILocation(line: 365, column: 9, scope: !8665)
!8668 = !DILocation(line: 366, column: 5, scope: !8657)
!8669 = !DILocation(line: 368, column: 3, scope: !604)
!8670 = !DILocation(line: 368, column: 10, scope: !604)
!8671 = !DILocalVariable(name: "n", scope: !8672, file: !349, line: 370, type: !55)
!8672 = distinct !DILexicalBlock(scope: !604, file: !349, line: 369, column: 5)
!8673 = !DILocation(line: 370, column: 14, scope: !8672)
!8674 = !DILocation(line: 370, column: 18, scope: !8672)
!8675 = !DILocation(line: 371, column: 24, scope: !8676)
!8676 = distinct !DILexicalBlock(scope: !8672, file: !349, line: 371, column: 11)
!8677 = !DILocation(line: 371, column: 28, scope: !8676)
!8678 = !DILocation(line: 371, column: 35, scope: !8676)
!8679 = !DILocation(line: 371, column: 12, scope: !8676)
!8680 = !DILocation(line: 371, column: 42, scope: !8676)
!8681 = !DILocation(line: 371, column: 39, scope: !8676)
!8682 = !DILocation(line: 371, column: 11, scope: !8672)
!8683 = !DILocation(line: 372, column: 9, scope: !8676)
!8684 = !DILocation(line: 373, column: 18, scope: !8672)
!8685 = !DILocation(line: 373, column: 15, scope: !8672)
!8686 = distinct !{!8686, !8669, !8687}
!8687 = !DILocation(line: 374, column: 5, scope: !604)
!8688 = !DILocation(line: 376, column: 3, scope: !604)
!8689 = !DILocation(line: 377, column: 1, scope: !604)
!8690 = distinct !DISubprogram(name: "writable_destination", scope: !349, file: !349, line: 1666, type: !454, scopeLine: 1667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !348, retainedNodes: !209)
!8691 = !DILocalVariable(name: "file", arg: 1, scope: !8690, file: !349, line: 1666, type: !180)
!8692 = !DILocation(line: 1666, column: 35, scope: !8690)
!8693 = !DILocalVariable(name: "mode", arg: 2, scope: !8690, file: !349, line: 1666, type: !139)
!8694 = !DILocation(line: 1666, column: 48, scope: !8690)
!8695 = !DILocation(line: 1668, column: 11, scope: !8690)
!8696 = !DILocation(line: 1669, column: 11, scope: !8690)
!8697 = !DILocation(line: 1669, column: 14, scope: !8690)
!8698 = !DILocation(line: 1670, column: 11, scope: !8690)
!8699 = !DILocation(line: 1670, column: 26, scope: !8690)
!8700 = !DILocation(line: 1670, column: 14, scope: !8690)
!8701 = !DILocation(line: 1670, column: 38, scope: !8690)
!8702 = !DILocation(line: 1668, column: 3, scope: !8690)
!8703 = distinct !DISubprogram(name: "cp_options_default", scope: !349, file: !349, line: 2997, type: !401, scopeLine: 2998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !348, retainedNodes: !209)
!8704 = !DILocalVariable(name: "x", arg: 1, scope: !8703, file: !349, line: 2997, type: !403)
!8705 = !DILocation(line: 2997, column: 40, scope: !8703)
!8706 = !DILocation(line: 2999, column: 11, scope: !8703)
!8707 = !DILocation(line: 2999, column: 3, scope: !8703)
!8708 = !DILocation(line: 3013, column: 48, scope: !8703)
!8709 = !DILocation(line: 3013, column: 59, scope: !8703)
!8710 = !DILocation(line: 3013, column: 25, scope: !8703)
!8711 = !DILocation(line: 3013, column: 28, scope: !8703)
!8712 = !DILocation(line: 3013, column: 45, scope: !8703)
!8713 = !DILocation(line: 3013, column: 3, scope: !8703)
!8714 = !DILocation(line: 3013, column: 6, scope: !8703)
!8715 = !DILocation(line: 3013, column: 23, scope: !8703)
!8716 = !DILocation(line: 3015, column: 3, scope: !8703)
!8717 = !DILocation(line: 3015, column: 6, scope: !8703)
!8718 = !DILocation(line: 3015, column: 19, scope: !8703)
!8719 = !DILocation(line: 3016, column: 1, scope: !8703)
!8720 = distinct !DISubprogram(name: "forget_created", scope: !615, file: !615, line: 82, type: !617, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !614, retainedNodes: !209)
!8721 = !DILocalVariable(name: "ino", arg: 1, scope: !8720, file: !615, line: 82, type: !441)
!8722 = !DILocation(line: 82, column: 23, scope: !8720)
!8723 = !DILocalVariable(name: "dev", arg: 2, scope: !8720, file: !615, line: 82, type: !443)
!8724 = !DILocation(line: 82, column: 34, scope: !8720)
!8725 = !DILocalVariable(name: "probe", scope: !8720, file: !615, line: 84, type: !620)
!8726 = !DILocation(line: 84, column: 22, scope: !8720)
!8727 = !DILocalVariable(name: "ent", scope: !8720, file: !615, line: 85, type: !619)
!8728 = !DILocation(line: 85, column: 23, scope: !8720)
!8729 = !DILocation(line: 87, column: 18, scope: !8720)
!8730 = !DILocation(line: 87, column: 9, scope: !8720)
!8731 = !DILocation(line: 87, column: 16, scope: !8720)
!8732 = !{!8733, !2913, i64 0}
!8733 = !{!"Src_to_dest", !2913, i64 0, !2913, i64 8, !2646, i64 16}
!8734 = !DILocation(line: 88, column: 18, scope: !8720)
!8735 = !DILocation(line: 88, column: 9, scope: !8720)
!8736 = !DILocation(line: 88, column: 16, scope: !8720)
!8737 = !{!8733, !2913, i64 8}
!8738 = !DILocation(line: 89, column: 9, scope: !8720)
!8739 = !DILocation(line: 89, column: 14, scope: !8720)
!8740 = !{!8733, !2646, i64 16}
!8741 = !DILocation(line: 91, column: 22, scope: !8720)
!8742 = !DILocation(line: 91, column: 35, scope: !8720)
!8743 = !DILocation(line: 91, column: 9, scope: !8720)
!8744 = !DILocation(line: 91, column: 7, scope: !8720)
!8745 = !DILocation(line: 92, column: 7, scope: !8746)
!8746 = distinct !DILexicalBlock(scope: !8720, file: !615, line: 92, column: 7)
!8747 = !DILocation(line: 92, column: 7, scope: !8720)
!8748 = !DILocation(line: 93, column: 23, scope: !8746)
!8749 = !DILocation(line: 93, column: 5, scope: !8746)
!8750 = !DILocation(line: 94, column: 1, scope: !8720)
!8751 = distinct !DISubprogram(name: "src_to_dest_free", scope: !615, file: !615, line: 72, type: !631, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !614, retainedNodes: !209)
!8752 = !DILocalVariable(name: "x", arg: 1, scope: !8751, file: !615, line: 72, type: !53)
!8753 = !DILocation(line: 72, column: 25, scope: !8751)
!8754 = !DILocalVariable(name: "a", scope: !8751, file: !615, line: 74, type: !619)
!8755 = !DILocation(line: 74, column: 23, scope: !8751)
!8756 = !DILocation(line: 74, column: 27, scope: !8751)
!8757 = !DILocation(line: 75, column: 9, scope: !8751)
!8758 = !DILocation(line: 75, column: 12, scope: !8751)
!8759 = !DILocation(line: 75, column: 3, scope: !8751)
!8760 = !DILocation(line: 76, column: 9, scope: !8751)
!8761 = !DILocation(line: 76, column: 3, scope: !8751)
!8762 = !DILocation(line: 77, column: 1, scope: !8751)
!8763 = distinct !DISubprogram(name: "src_to_dest_lookup", scope: !615, file: !615, line: 100, type: !625, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !614, retainedNodes: !209)
!8764 = !DILocalVariable(name: "ino", arg: 1, scope: !8763, file: !615, line: 100, type: !441)
!8765 = !DILocation(line: 100, column: 27, scope: !8763)
!8766 = !DILocalVariable(name: "dev", arg: 2, scope: !8763, file: !615, line: 100, type: !443)
!8767 = !DILocation(line: 100, column: 38, scope: !8763)
!8768 = !DILocalVariable(name: "ent", scope: !8763, file: !615, line: 102, type: !620)
!8769 = !DILocation(line: 102, column: 22, scope: !8763)
!8770 = !DILocalVariable(name: "e", scope: !8763, file: !615, line: 103, type: !627)
!8771 = !DILocation(line: 103, column: 29, scope: !8763)
!8772 = !DILocation(line: 104, column: 16, scope: !8763)
!8773 = !DILocation(line: 104, column: 7, scope: !8763)
!8774 = !DILocation(line: 104, column: 14, scope: !8763)
!8775 = !DILocation(line: 105, column: 16, scope: !8763)
!8776 = !DILocation(line: 105, column: 7, scope: !8763)
!8777 = !DILocation(line: 105, column: 14, scope: !8763)
!8778 = !DILocation(line: 106, column: 20, scope: !8763)
!8779 = !DILocation(line: 106, column: 33, scope: !8763)
!8780 = !DILocation(line: 106, column: 7, scope: !8763)
!8781 = !DILocation(line: 106, column: 5, scope: !8763)
!8782 = !DILocation(line: 107, column: 10, scope: !8763)
!8783 = !DILocation(line: 107, column: 14, scope: !8763)
!8784 = !DILocation(line: 107, column: 17, scope: !8763)
!8785 = !DILocation(line: 107, column: 3, scope: !8763)
!8786 = distinct !DISubprogram(name: "remember_copied", scope: !615, file: !615, line: 115, type: !629, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !614, retainedNodes: !209)
!8787 = !DILocalVariable(name: "name", arg: 1, scope: !8786, file: !615, line: 115, type: !180)
!8788 = !DILocation(line: 115, column: 30, scope: !8786)
!8789 = !DILocalVariable(name: "ino", arg: 2, scope: !8786, file: !615, line: 115, type: !441)
!8790 = !DILocation(line: 115, column: 42, scope: !8786)
!8791 = !DILocalVariable(name: "dev", arg: 3, scope: !8786, file: !615, line: 115, type: !443)
!8792 = !DILocation(line: 115, column: 53, scope: !8786)
!8793 = !DILocalVariable(name: "ent", scope: !8786, file: !615, line: 117, type: !619)
!8794 = !DILocation(line: 117, column: 23, scope: !8786)
!8795 = !DILocalVariable(name: "ent_from_table", scope: !8786, file: !615, line: 118, type: !619)
!8796 = !DILocation(line: 118, column: 23, scope: !8786)
!8797 = !DILocation(line: 120, column: 9, scope: !8786)
!8798 = !DILocation(line: 120, column: 7, scope: !8786)
!8799 = !DILocation(line: 121, column: 24, scope: !8786)
!8800 = !DILocation(line: 121, column: 15, scope: !8786)
!8801 = !DILocation(line: 121, column: 3, scope: !8786)
!8802 = !DILocation(line: 121, column: 8, scope: !8786)
!8803 = !DILocation(line: 121, column: 13, scope: !8786)
!8804 = !DILocation(line: 122, column: 17, scope: !8786)
!8805 = !DILocation(line: 122, column: 3, scope: !8786)
!8806 = !DILocation(line: 122, column: 8, scope: !8786)
!8807 = !DILocation(line: 122, column: 15, scope: !8786)
!8808 = !DILocation(line: 123, column: 17, scope: !8786)
!8809 = !DILocation(line: 123, column: 3, scope: !8786)
!8810 = !DILocation(line: 123, column: 8, scope: !8786)
!8811 = !DILocation(line: 123, column: 15, scope: !8786)
!8812 = !DILocation(line: 125, column: 33, scope: !8786)
!8813 = !DILocation(line: 125, column: 46, scope: !8786)
!8814 = !DILocation(line: 125, column: 20, scope: !8786)
!8815 = !DILocation(line: 125, column: 18, scope: !8786)
!8816 = !DILocation(line: 126, column: 7, scope: !8817)
!8817 = distinct !DILexicalBlock(scope: !8786, file: !615, line: 126, column: 7)
!8818 = !DILocation(line: 126, column: 22, scope: !8817)
!8819 = !DILocation(line: 126, column: 7, scope: !8786)
!8820 = !DILocation(line: 129, column: 7, scope: !8821)
!8821 = distinct !DILexicalBlock(scope: !8817, file: !615, line: 127, column: 5)
!8822 = !DILocation(line: 135, column: 7, scope: !8823)
!8823 = distinct !DILexicalBlock(scope: !8786, file: !615, line: 135, column: 7)
!8824 = !DILocation(line: 135, column: 25, scope: !8823)
!8825 = !DILocation(line: 135, column: 22, scope: !8823)
!8826 = !DILocation(line: 135, column: 7, scope: !8786)
!8827 = !DILocation(line: 137, column: 25, scope: !8828)
!8828 = distinct !DILexicalBlock(scope: !8823, file: !615, line: 136, column: 5)
!8829 = !DILocation(line: 137, column: 7, scope: !8828)
!8830 = !DILocation(line: 138, column: 23, scope: !8828)
!8831 = !DILocation(line: 138, column: 39, scope: !8828)
!8832 = !DILocation(line: 138, column: 7, scope: !8828)
!8833 = !DILocation(line: 142, column: 3, scope: !8786)
!8834 = !DILocation(line: 143, column: 1, scope: !8786)
!8835 = distinct !DISubprogram(name: "hash_init", scope: !615, file: !615, line: 147, type: !200, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !614, retainedNodes: !209)
!8836 = !DILocation(line: 149, column: 17, scope: !8835)
!8837 = !DILocation(line: 149, column: 15, scope: !8835)
!8838 = !DILocation(line: 153, column: 7, scope: !8839)
!8839 = distinct !DILexicalBlock(scope: !8835, file: !615, line: 153, column: 7)
!8840 = !DILocation(line: 153, column: 19, scope: !8839)
!8841 = !DILocation(line: 153, column: 7, scope: !8835)
!8842 = !DILocation(line: 154, column: 5, scope: !8839)
!8843 = !DILocation(line: 155, column: 1, scope: !8835)
!8844 = distinct !DISubprogram(name: "src_to_dest_hash", scope: !615, file: !615, line: 51, type: !633, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !614, retainedNodes: !209)
!8845 = !DILocalVariable(name: "x", arg: 1, scope: !8844, file: !615, line: 51, type: !513)
!8846 = !DILocation(line: 51, column: 31, scope: !8844)
!8847 = !DILocalVariable(name: "table_size", arg: 2, scope: !8844, file: !615, line: 51, type: !55)
!8848 = !DILocation(line: 51, column: 41, scope: !8844)
!8849 = !DILocalVariable(name: "p", scope: !8844, file: !615, line: 53, type: !627)
!8850 = !DILocation(line: 53, column: 29, scope: !8844)
!8851 = !DILocation(line: 53, column: 33, scope: !8844)
!8852 = !DILocation(line: 58, column: 22, scope: !8844)
!8853 = !DILocation(line: 58, column: 25, scope: !8844)
!8854 = !DILocation(line: 58, column: 34, scope: !8844)
!8855 = !DILocation(line: 58, column: 32, scope: !8844)
!8856 = !DILocation(line: 58, column: 3, scope: !8844)
!8857 = distinct !DISubprogram(name: "src_to_dest_compare", scope: !615, file: !615, line: 64, type: !635, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !614, retainedNodes: !209)
!8858 = !DILocalVariable(name: "x", arg: 1, scope: !8857, file: !615, line: 64, type: !513)
!8859 = !DILocation(line: 64, column: 34, scope: !8857)
!8860 = !DILocalVariable(name: "y", arg: 2, scope: !8857, file: !615, line: 64, type: !513)
!8861 = !DILocation(line: 64, column: 49, scope: !8857)
!8862 = !DILocalVariable(name: "a", scope: !8857, file: !615, line: 66, type: !627)
!8863 = !DILocation(line: 66, column: 29, scope: !8857)
!8864 = !DILocation(line: 66, column: 33, scope: !8857)
!8865 = !DILocalVariable(name: "b", scope: !8857, file: !615, line: 67, type: !627)
!8866 = !DILocation(line: 67, column: 29, scope: !8857)
!8867 = !DILocation(line: 67, column: 33, scope: !8857)
!8868 = !DILocation(line: 68, column: 10, scope: !8857)
!8869 = !DILocation(line: 0, scope: !8857)
!8870 = !DILocation(line: 68, column: 3, scope: !8857)
!8871 = distinct !DISubprogram(name: "forget_all", scope: !615, file: !615, line: 161, type: !200, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !614, retainedNodes: !209)
!8872 = !DILocation(line: 163, column: 14, scope: !8871)
!8873 = !DILocation(line: 163, column: 3, scope: !8871)
!8874 = !DILocation(line: 164, column: 1, scope: !8871)
!8875 = distinct !DISubprogram(name: "extent_scan_init", scope: !1456, file: !1456, line: 69, type: !1459, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1455, retainedNodes: !209)
!8876 = !DILocalVariable(name: "src_fd", arg: 1, scope: !8875, file: !1456, line: 69, type: !7)
!8877 = !DILocation(line: 69, column: 23, scope: !8875)
!8878 = !DILocalVariable(name: "scan", arg: 2, scope: !8875, file: !1456, line: 69, type: !1461)
!8879 = !DILocation(line: 69, column: 51, scope: !8875)
!8880 = !DILocation(line: 71, column: 14, scope: !8875)
!8881 = !DILocation(line: 71, column: 3, scope: !8875)
!8882 = !DILocation(line: 71, column: 9, scope: !8875)
!8883 = !DILocation(line: 71, column: 12, scope: !8875)
!8884 = !{!7999, !2633, i64 0}
!8885 = !DILocation(line: 72, column: 3, scope: !8875)
!8886 = !DILocation(line: 72, column: 9, scope: !8875)
!8887 = !DILocation(line: 72, column: 18, scope: !8875)
!8888 = !DILocation(line: 73, column: 3, scope: !8875)
!8889 = !DILocation(line: 73, column: 9, scope: !8875)
!8890 = !DILocation(line: 73, column: 18, scope: !8875)
!8891 = !DILocation(line: 74, column: 3, scope: !8875)
!8892 = !DILocation(line: 74, column: 9, scope: !8875)
!8893 = !DILocation(line: 74, column: 20, scope: !8875)
!8894 = !{!7999, !2913, i64 8}
!8895 = !DILocation(line: 75, column: 3, scope: !8875)
!8896 = !DILocation(line: 75, column: 9, scope: !8875)
!8897 = !DILocation(line: 75, column: 29, scope: !8875)
!8898 = !DILocation(line: 76, column: 3, scope: !8875)
!8899 = !DILocation(line: 76, column: 9, scope: !8875)
!8900 = !DILocation(line: 76, column: 26, scope: !8875)
!8901 = !DILocation(line: 77, column: 20, scope: !8875)
!8902 = !DILocation(line: 77, column: 3, scope: !8875)
!8903 = !DILocation(line: 77, column: 9, scope: !8875)
!8904 = !DILocation(line: 77, column: 18, scope: !8875)
!8905 = !{!7999, !2633, i64 16}
!8906 = !DILocation(line: 78, column: 1, scope: !8875)
!8907 = distinct !DISubprogram(name: "extent_need_sync", scope: !1456, file: !1456, line: 33, type: !1329, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1455, retainedNodes: !209)
!8908 = !DILocation(line: 39, column: 3, scope: !8907)
!8909 = distinct !DISubprogram(name: "extent_scan_read", scope: !1456, file: !1456, line: 87, type: !1477, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1455, retainedNodes: !209)
!8910 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8909, file: !1456, line: 94, size: 32768, elements: !8911)
!8911 = !{!8912, !8913}
!8912 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !8910, file: !1456, line: 94, baseType: !1480, size: 256)
!8913 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !8910, file: !1456, line: 94, baseType: !338, size: 32768)
!8914 = !DILocalVariable(name: "scan", arg: 1, scope: !8909, file: !1456, line: 87, type: !1461)
!8915 = !DILocation(line: 87, column: 39, scope: !8909)
!8916 = !DILocalVariable(name: "si", scope: !8909, file: !1456, line: 89, type: !70)
!8917 = !DILocation(line: 89, column: 16, scope: !8909)
!8918 = !DILocalVariable(name: "last_ei", scope: !8909, file: !1456, line: 90, type: !1471)
!8919 = !DILocation(line: 90, column: 23, scope: !8909)
!8920 = !DILocation(line: 90, column: 33, scope: !8909)
!8921 = !DILocation(line: 90, column: 39, scope: !8909)
!8922 = !DILocation(line: 92, column: 3, scope: !8909)
!8923 = !DILocalVariable(name: "fiemap_buf", scope: !8924, file: !1456, line: 94, type: !8910)
!8924 = distinct !DILexicalBlock(scope: !8909, file: !1456, line: 93, column: 5)
!8925 = !DILocation(line: 94, column: 48, scope: !8924)
!8926 = !DILocalVariable(name: "fiemap", scope: !8924, file: !1456, line: 95, type: !1479)
!8927 = !DILocation(line: 95, column: 22, scope: !8924)
!8928 = !DILocation(line: 95, column: 43, scope: !8924)
!8929 = !DILocalVariable(name: "fm_extents", scope: !8924, file: !1456, line: 96, type: !1508)
!8930 = !DILocation(line: 96, column: 29, scope: !8924)
!8931 = !DILocation(line: 96, column: 43, scope: !8924)
!8932 = !DILocation(line: 96, column: 51, scope: !8924)
!8933 = !DILocation(line: 103, column: 7, scope: !8924)
!8934 = !DILocation(line: 105, column: 26, scope: !8924)
!8935 = !DILocation(line: 105, column: 32, scope: !8924)
!8936 = !DILocation(line: 105, column: 7, scope: !8924)
!8937 = !DILocation(line: 105, column: 15, scope: !8924)
!8938 = !DILocation(line: 105, column: 24, scope: !8924)
!8939 = !{!8940, !2913, i64 0}
!8940 = !{!"fiemap", !2913, i64 0, !2913, i64 8, !2633, i64 16, !2633, i64 20, !2633, i64 24, !2633, i64 28, !2634, i64 32}
!8941 = !DILocation(line: 106, column: 26, scope: !8924)
!8942 = !DILocation(line: 106, column: 32, scope: !8924)
!8943 = !DILocation(line: 106, column: 7, scope: !8924)
!8944 = !DILocation(line: 106, column: 15, scope: !8924)
!8945 = !DILocation(line: 106, column: 24, scope: !8924)
!8946 = !{!8940, !2633, i64 16}
!8947 = !DILocation(line: 107, column: 7, scope: !8924)
!8948 = !DILocation(line: 107, column: 15, scope: !8924)
!8949 = !DILocation(line: 107, column: 31, scope: !8924)
!8950 = !{!8940, !2633, i64 24}
!8951 = !DILocation(line: 108, column: 47, scope: !8924)
!8952 = !DILocation(line: 108, column: 53, scope: !8924)
!8953 = !DILocation(line: 108, column: 45, scope: !8924)
!8954 = !DILocation(line: 108, column: 7, scope: !8924)
!8955 = !DILocation(line: 108, column: 15, scope: !8924)
!8956 = !DILocation(line: 108, column: 25, scope: !8924)
!8957 = !{!8940, !2913, i64 8}
!8958 = !DILocation(line: 112, column: 18, scope: !8959)
!8959 = distinct !DILexicalBlock(scope: !8924, file: !1456, line: 112, column: 11)
!8960 = !DILocation(line: 112, column: 24, scope: !8959)
!8961 = !DILocation(line: 112, column: 43, scope: !8959)
!8962 = !DILocation(line: 112, column: 11, scope: !8959)
!8963 = !DILocation(line: 112, column: 51, scope: !8959)
!8964 = !DILocation(line: 112, column: 11, scope: !8924)
!8965 = !DILocation(line: 114, column: 15, scope: !8966)
!8966 = distinct !DILexicalBlock(scope: !8967, file: !1456, line: 114, column: 15)
!8967 = distinct !DILexicalBlock(scope: !8959, file: !1456, line: 113, column: 9)
!8968 = !DILocation(line: 114, column: 21, scope: !8966)
!8969 = !DILocation(line: 114, column: 32, scope: !8966)
!8970 = !DILocation(line: 114, column: 15, scope: !8967)
!8971 = !DILocation(line: 115, column: 13, scope: !8966)
!8972 = !DILocation(line: 115, column: 19, scope: !8966)
!8973 = !DILocation(line: 115, column: 39, scope: !8966)
!8974 = !DILocation(line: 116, column: 11, scope: !8967)
!8975 = !DILocation(line: 120, column: 11, scope: !8976)
!8976 = distinct !DILexicalBlock(scope: !8924, file: !1456, line: 120, column: 11)
!8977 = !DILocation(line: 120, column: 19, scope: !8976)
!8978 = !{!8940, !2633, i64 20}
!8979 = !DILocation(line: 120, column: 37, scope: !8976)
!8980 = !DILocation(line: 120, column: 11, scope: !8924)
!8981 = !DILocation(line: 122, column: 11, scope: !8982)
!8982 = distinct !DILexicalBlock(scope: !8976, file: !1456, line: 121, column: 9)
!8983 = !DILocation(line: 122, column: 17, scope: !8982)
!8984 = !DILocation(line: 122, column: 34, scope: !8982)
!8985 = !DILocation(line: 123, column: 18, scope: !8982)
!8986 = !DILocation(line: 123, column: 24, scope: !8982)
!8987 = !DILocation(line: 123, column: 35, scope: !8982)
!8988 = !DILocation(line: 123, column: 11, scope: !8982)
!8989 = !DILocation(line: 126, column: 7, scope: !8990)
!8990 = distinct !DILexicalBlock(scope: !8991, file: !1456, line: 126, column: 7)
!8991 = distinct !DILexicalBlock(scope: !8924, file: !1456, line: 126, column: 7)
!8992 = !DILocation(line: 126, column: 7, scope: !8991)
!8993 = !DILocation(line: 127, column: 25, scope: !8924)
!8994 = !DILocation(line: 127, column: 33, scope: !8924)
!8995 = !DILocation(line: 127, column: 7, scope: !8924)
!8996 = !DILocation(line: 127, column: 13, scope: !8924)
!8997 = !DILocation(line: 127, column: 22, scope: !8924)
!8998 = !DILocalVariable(name: "prev_idx", scope: !8999, file: !1456, line: 131, type: !55)
!8999 = distinct !DILexicalBlock(scope: !8924, file: !1456, line: 128, column: 7)
!9000 = !DILocation(line: 131, column: 16, scope: !8999)
!9001 = !DILocation(line: 131, column: 27, scope: !8999)
!9002 = !DILocation(line: 131, column: 37, scope: !8999)
!9003 = !DILocation(line: 131, column: 43, scope: !8999)
!9004 = !DILocation(line: 131, column: 35, scope: !8999)
!9005 = !DILocation(line: 132, column: 37, scope: !8999)
!9006 = !DILocation(line: 132, column: 43, scope: !8999)
!9007 = !DILocation(line: 132, column: 53, scope: !8999)
!9008 = !DILocation(line: 132, column: 59, scope: !8999)
!9009 = !DILocation(line: 132, column: 26, scope: !8999)
!9010 = !DILocation(line: 132, column: 9, scope: !8999)
!9011 = !DILocation(line: 132, column: 15, scope: !8999)
!9012 = !DILocation(line: 132, column: 24, scope: !8999)
!9013 = !DILocation(line: 134, column: 19, scope: !8999)
!9014 = !DILocation(line: 134, column: 25, scope: !8999)
!9015 = !DILocation(line: 134, column: 36, scope: !8999)
!9016 = !DILocation(line: 134, column: 34, scope: !8999)
!9017 = !DILocation(line: 134, column: 17, scope: !8999)
!9018 = !DILocalVariable(name: "i", scope: !8924, file: !1456, line: 137, type: !70)
!9019 = !DILocation(line: 137, column: 20, scope: !8924)
!9020 = !DILocation(line: 138, column: 14, scope: !9021)
!9021 = distinct !DILexicalBlock(scope: !8924, file: !1456, line: 138, column: 7)
!9022 = !DILocation(line: 138, column: 12, scope: !9021)
!9023 = !DILocation(line: 138, column: 19, scope: !9024)
!9024 = distinct !DILexicalBlock(scope: !9021, file: !1456, line: 138, column: 7)
!9025 = !DILocation(line: 138, column: 23, scope: !9024)
!9026 = !DILocation(line: 138, column: 31, scope: !9024)
!9027 = !DILocation(line: 138, column: 21, scope: !9024)
!9028 = !DILocation(line: 138, column: 7, scope: !9021)
!9029 = !DILocation(line: 140, column: 11, scope: !9030)
!9030 = distinct !DILexicalBlock(scope: !9031, file: !1456, line: 140, column: 11)
!9031 = distinct !DILexicalBlock(scope: !9032, file: !1456, line: 140, column: 11)
!9032 = distinct !DILexicalBlock(scope: !9024, file: !1456, line: 139, column: 9)
!9033 = !{!9034, !2913, i64 0}
!9034 = !{!"fiemap_extent", !2913, i64 0, !2913, i64 8, !2913, i64 16, !2634, i64 24, !2633, i64 40, !2634, i64 44}
!9035 = !{!9034, !2913, i64 16}
!9036 = !DILocation(line: 140, column: 11, scope: !9031)
!9037 = !DILocation(line: 145, column: 15, scope: !9038)
!9038 = distinct !DILexicalBlock(scope: !9032, file: !1456, line: 145, column: 15)
!9039 = !DILocation(line: 145, column: 18, scope: !9038)
!9040 = !DILocation(line: 145, column: 21, scope: !9038)
!9041 = !DILocation(line: 145, column: 30, scope: !9038)
!9042 = !{!8048, !2633, i64 16}
!9043 = !DILocation(line: 146, column: 19, scope: !9038)
!9044 = !DILocation(line: 146, column: 30, scope: !9038)
!9045 = !DILocation(line: 146, column: 33, scope: !9038)
!9046 = !{!9034, !2633, i64 40}
!9047 = !DILocation(line: 146, column: 42, scope: !9038)
!9048 = !DILocation(line: 146, column: 15, scope: !9038)
!9049 = !DILocation(line: 147, column: 15, scope: !9038)
!9050 = !DILocation(line: 147, column: 19, scope: !9038)
!9051 = !DILocation(line: 147, column: 28, scope: !9038)
!9052 = !DILocation(line: 147, column: 42, scope: !9038)
!9053 = !DILocation(line: 147, column: 51, scope: !9038)
!9054 = !DILocation(line: 147, column: 40, scope: !9038)
!9055 = !DILocation(line: 148, column: 22, scope: !9038)
!9056 = !DILocation(line: 148, column: 33, scope: !9038)
!9057 = !DILocation(line: 148, column: 36, scope: !9038)
!9058 = !DILocation(line: 148, column: 19, scope: !9038)
!9059 = !DILocation(line: 145, column: 15, scope: !9032)
!9060 = !DILocation(line: 151, column: 38, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !9038, file: !1456, line: 149, column: 13)
!9062 = !DILocation(line: 151, column: 49, scope: !9061)
!9063 = !DILocation(line: 151, column: 52, scope: !9061)
!9064 = !DILocation(line: 151, column: 15, scope: !9061)
!9065 = !DILocation(line: 151, column: 24, scope: !9061)
!9066 = !DILocation(line: 151, column: 35, scope: !9061)
!9067 = !DILocation(line: 153, column: 36, scope: !9061)
!9068 = !DILocation(line: 153, column: 47, scope: !9061)
!9069 = !DILocation(line: 153, column: 50, scope: !9061)
!9070 = !DILocation(line: 153, column: 15, scope: !9061)
!9071 = !DILocation(line: 153, column: 24, scope: !9061)
!9072 = !DILocation(line: 153, column: 34, scope: !9061)
!9073 = !DILocation(line: 154, column: 13, scope: !9061)
!9074 = !DILocation(line: 155, column: 21, scope: !9075)
!9075 = distinct !DILexicalBlock(scope: !9038, file: !1456, line: 155, column: 20)
!9076 = !DILocation(line: 155, column: 24, scope: !9075)
!9077 = !DILocation(line: 155, column: 29, scope: !9075)
!9078 = !DILocation(line: 155, column: 32, scope: !9075)
!9079 = !DILocation(line: 155, column: 38, scope: !9075)
!9080 = !DILocation(line: 155, column: 51, scope: !9075)
!9081 = !DILocation(line: 155, column: 62, scope: !9075)
!9082 = !DILocation(line: 155, column: 65, scope: !9075)
!9083 = !DILocation(line: 155, column: 49, scope: !9075)
!9084 = !DILocation(line: 156, column: 20, scope: !9075)
!9085 = !DILocation(line: 156, column: 24, scope: !9075)
!9086 = !DILocation(line: 156, column: 27, scope: !9075)
!9087 = !DILocation(line: 156, column: 31, scope: !9075)
!9088 = !DILocation(line: 156, column: 40, scope: !9075)
!9089 = !DILocation(line: 156, column: 54, scope: !9075)
!9090 = !DILocation(line: 156, column: 63, scope: !9075)
!9091 = !DILocation(line: 156, column: 52, scope: !9075)
!9092 = !DILocation(line: 157, column: 33, scope: !9075)
!9093 = !DILocation(line: 157, column: 44, scope: !9075)
!9094 = !DILocation(line: 157, column: 47, scope: !9075)
!9095 = !DILocation(line: 157, column: 31, scope: !9075)
!9096 = !DILocation(line: 155, column: 20, scope: !9038)
!9097 = !DILocalVariable(name: "new_logical", scope: !9098, file: !1456, line: 163, type: !1484)
!9098 = distinct !DILexicalBlock(scope: !9075, file: !1456, line: 158, column: 13)
!9099 = !DILocation(line: 163, column: 24, scope: !9098)
!9100 = !DILocalVariable(name: "length_adjust", scope: !9098, file: !1456, line: 164, type: !1484)
!9101 = !DILocation(line: 164, column: 24, scope: !9098)
!9102 = !DILocation(line: 165, column: 19, scope: !9103)
!9103 = distinct !DILexicalBlock(scope: !9098, file: !1456, line: 165, column: 19)
!9104 = !DILocation(line: 165, column: 22, scope: !9103)
!9105 = !DILocation(line: 165, column: 19, scope: !9098)
!9106 = !DILocation(line: 166, column: 31, scope: !9103)
!9107 = !DILocation(line: 166, column: 37, scope: !9103)
!9108 = !DILocation(line: 166, column: 29, scope: !9103)
!9109 = !DILocation(line: 166, column: 17, scope: !9103)
!9110 = !DILocation(line: 171, column: 33, scope: !9111)
!9111 = distinct !DILexicalBlock(scope: !9103, file: !1456, line: 168, column: 17)
!9112 = !DILocation(line: 171, column: 42, scope: !9111)
!9113 = !DILocation(line: 171, column: 56, scope: !9111)
!9114 = !DILocation(line: 171, column: 65, scope: !9111)
!9115 = !DILocation(line: 171, column: 54, scope: !9111)
!9116 = !DILocation(line: 171, column: 31, scope: !9111)
!9117 = !DILocation(line: 173, column: 31, scope: !9098)
!9118 = !DILocation(line: 173, column: 45, scope: !9098)
!9119 = !DILocation(line: 173, column: 56, scope: !9098)
!9120 = !DILocation(line: 173, column: 59, scope: !9098)
!9121 = !DILocation(line: 173, column: 43, scope: !9098)
!9122 = !DILocation(line: 173, column: 29, scope: !9098)
!9123 = !DILocation(line: 175, column: 19, scope: !9124)
!9124 = distinct !DILexicalBlock(scope: !9098, file: !1456, line: 175, column: 19)
!9125 = !DILocation(line: 175, column: 35, scope: !9124)
!9126 = !DILocation(line: 175, column: 46, scope: !9124)
!9127 = !DILocation(line: 175, column: 49, scope: !9124)
!9128 = !DILocation(line: 175, column: 33, scope: !9124)
!9129 = !DILocation(line: 175, column: 19, scope: !9098)
!9130 = !DILocation(line: 177, column: 23, scope: !9131)
!9131 = distinct !DILexicalBlock(scope: !9132, file: !1456, line: 177, column: 23)
!9132 = distinct !DILexicalBlock(scope: !9124, file: !1456, line: 176, column: 17)
!9133 = !DILocation(line: 177, column: 29, scope: !9131)
!9134 = !DILocation(line: 177, column: 40, scope: !9131)
!9135 = !DILocation(line: 177, column: 23, scope: !9132)
!9136 = !DILocation(line: 178, column: 21, scope: !9131)
!9137 = !DILocation(line: 178, column: 27, scope: !9131)
!9138 = !DILocation(line: 178, column: 47, scope: !9131)
!9139 = !DILocation(line: 179, column: 19, scope: !9132)
!9140 = !DILocation(line: 181, column: 42, scope: !9098)
!9141 = !DILocation(line: 181, column: 15, scope: !9098)
!9142 = !DILocation(line: 181, column: 26, scope: !9098)
!9143 = !DILocation(line: 181, column: 29, scope: !9098)
!9144 = !DILocation(line: 181, column: 40, scope: !9098)
!9145 = !DILocation(line: 182, column: 42, scope: !9098)
!9146 = !DILocation(line: 182, column: 15, scope: !9098)
!9147 = !DILocation(line: 182, column: 26, scope: !9098)
!9148 = !DILocation(line: 182, column: 29, scope: !9098)
!9149 = !DILocation(line: 182, column: 39, scope: !9098)
!9150 = !DILocation(line: 184, column: 16, scope: !9098)
!9151 = !DILocation(line: 185, column: 15, scope: !9098)
!9152 = !DILocation(line: 189, column: 25, scope: !9153)
!9153 = distinct !DILexicalBlock(scope: !9075, file: !1456, line: 188, column: 13)
!9154 = !DILocation(line: 189, column: 31, scope: !9153)
!9155 = !DILocation(line: 189, column: 42, scope: !9153)
!9156 = !DILocation(line: 189, column: 40, scope: !9153)
!9157 = !DILocation(line: 189, column: 23, scope: !9153)
!9158 = !DILocation(line: 190, column: 38, scope: !9153)
!9159 = !DILocation(line: 190, column: 49, scope: !9153)
!9160 = !DILocation(line: 190, column: 52, scope: !9153)
!9161 = !DILocation(line: 190, column: 15, scope: !9153)
!9162 = !DILocation(line: 190, column: 24, scope: !9153)
!9163 = !DILocation(line: 190, column: 36, scope: !9153)
!9164 = !DILocation(line: 191, column: 37, scope: !9153)
!9165 = !DILocation(line: 191, column: 48, scope: !9153)
!9166 = !DILocation(line: 191, column: 51, scope: !9153)
!9167 = !DILocation(line: 191, column: 15, scope: !9153)
!9168 = !DILocation(line: 191, column: 24, scope: !9153)
!9169 = !DILocation(line: 191, column: 35, scope: !9153)
!9170 = !DILocation(line: 192, column: 36, scope: !9153)
!9171 = !DILocation(line: 192, column: 47, scope: !9153)
!9172 = !DILocation(line: 192, column: 50, scope: !9153)
!9173 = !DILocation(line: 192, column: 15, scope: !9153)
!9174 = !DILocation(line: 192, column: 24, scope: !9153)
!9175 = !DILocation(line: 192, column: 34, scope: !9153)
!9176 = !DILocation(line: 193, column: 17, scope: !9153)
!9177 = !DILocation(line: 195, column: 9, scope: !9032)
!9178 = !DILocation(line: 138, column: 51, scope: !9024)
!9179 = !DILocation(line: 138, column: 7, scope: !9024)
!9180 = distinct !{!9180, !9028, !9181}
!9181 = !DILocation(line: 195, column: 9, scope: !9021)
!9182 = !DILocation(line: 197, column: 11, scope: !9183)
!9183 = distinct !DILexicalBlock(scope: !8924, file: !1456, line: 197, column: 11)
!9184 = !DILocation(line: 197, column: 20, scope: !9183)
!9185 = !DILocation(line: 197, column: 30, scope: !9183)
!9186 = !DILocation(line: 197, column: 11, scope: !8924)
!9187 = !DILocation(line: 198, column: 9, scope: !9183)
!9188 = !DILocation(line: 198, column: 15, scope: !9183)
!9189 = !DILocation(line: 198, column: 32, scope: !9183)
!9190 = !DILocation(line: 202, column: 11, scope: !9191)
!9191 = distinct !DILexicalBlock(scope: !8924, file: !1456, line: 202, column: 11)
!9192 = !DILocation(line: 202, column: 14, scope: !9191)
!9193 = !DILocation(line: 202, column: 22, scope: !9191)
!9194 = !DILocation(line: 202, column: 26, scope: !9191)
!9195 = !DILocation(line: 202, column: 32, scope: !9191)
!9196 = !DILocation(line: 202, column: 11, scope: !8924)
!9197 = !DILocation(line: 203, column: 19, scope: !9191)
!9198 = !DILocation(line: 203, column: 25, scope: !9191)
!9199 = !DILocation(line: 203, column: 36, scope: !9191)
!9200 = !DILocation(line: 203, column: 34, scope: !9191)
!9201 = !DILocation(line: 203, column: 41, scope: !9191)
!9202 = !DILocation(line: 203, column: 17, scope: !9191)
!9203 = !DILocation(line: 203, column: 9, scope: !9191)
!9204 = !DILocation(line: 206, column: 24, scope: !8924)
!9205 = !DILocation(line: 206, column: 7, scope: !8924)
!9206 = !DILocation(line: 206, column: 13, scope: !8924)
!9207 = !DILocation(line: 206, column: 22, scope: !8924)
!9208 = !DILocation(line: 208, column: 11, scope: !9209)
!9209 = distinct !DILexicalBlock(scope: !8924, file: !1456, line: 208, column: 11)
!9210 = !DILocation(line: 208, column: 17, scope: !9209)
!9211 = !DILocation(line: 208, column: 11, scope: !8924)
!9212 = !DILocation(line: 209, column: 9, scope: !9209)
!9213 = !DILocation(line: 211, column: 28, scope: !9209)
!9214 = !DILocation(line: 211, column: 37, scope: !9209)
!9215 = !DILocation(line: 211, column: 51, scope: !9209)
!9216 = !DILocation(line: 211, column: 60, scope: !9209)
!9217 = !DILocation(line: 211, column: 49, scope: !9209)
!9218 = !DILocation(line: 211, column: 9, scope: !9209)
!9219 = !DILocation(line: 211, column: 15, scope: !9209)
!9220 = !DILocation(line: 211, column: 26, scope: !9209)
!9221 = !DILocation(line: 213, column: 11, scope: !9222)
!9222 = distinct !DILexicalBlock(scope: !8924, file: !1456, line: 213, column: 11)
!9223 = !DILocation(line: 213, column: 14, scope: !9222)
!9224 = !DILocation(line: 213, column: 11, scope: !8924)
!9225 = !DILocation(line: 214, column: 9, scope: !9222)
!9226 = distinct !{!9226, !8922, !9227}
!9227 = !DILocation(line: 215, column: 5, scope: !8909)
!9228 = !DILocation(line: 217, column: 3, scope: !8909)
!9229 = !DILocation(line: 218, column: 1, scope: !8909)
!9230 = distinct !DISubprogram(name: "force_linkat", scope: !641, file: !641, line: 95, type: !643, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !640, retainedNodes: !209)
!9231 = !DILocalVariable(name: "srcdir", arg: 1, scope: !9230, file: !641, line: 95, type: !7)
!9232 = !DILocation(line: 95, column: 19, scope: !9230)
!9233 = !DILocalVariable(name: "srcname", arg: 2, scope: !9230, file: !641, line: 95, type: !180)
!9234 = !DILocation(line: 95, column: 39, scope: !9230)
!9235 = !DILocalVariable(name: "dstdir", arg: 3, scope: !9230, file: !641, line: 96, type: !7)
!9236 = !DILocation(line: 96, column: 19, scope: !9230)
!9237 = !DILocalVariable(name: "dstname", arg: 4, scope: !9230, file: !641, line: 96, type: !180)
!9238 = !DILocation(line: 96, column: 39, scope: !9230)
!9239 = !DILocalVariable(name: "flags", arg: 5, scope: !9230, file: !641, line: 96, type: !7)
!9240 = !DILocation(line: 96, column: 52, scope: !9230)
!9241 = !DILocalVariable(name: "force", arg: 6, scope: !9230, file: !641, line: 96, type: !142)
!9242 = !DILocation(line: 96, column: 64, scope: !9230)
!9243 = !DILocalVariable(name: "linkat_errno", arg: 7, scope: !9230, file: !641, line: 97, type: !7)
!9244 = !DILocation(line: 97, column: 19, scope: !9230)
!9245 = !DILocation(line: 99, column: 7, scope: !9246)
!9246 = distinct !DILexicalBlock(scope: !9230, file: !641, line: 99, column: 7)
!9247 = !DILocation(line: 99, column: 20, scope: !9246)
!9248 = !DILocation(line: 99, column: 7, scope: !9230)
!9249 = !DILocation(line: 100, column: 29, scope: !9246)
!9250 = !DILocation(line: 100, column: 37, scope: !9246)
!9251 = !DILocation(line: 100, column: 46, scope: !9246)
!9252 = !DILocation(line: 100, column: 54, scope: !9246)
!9253 = !DILocation(line: 100, column: 63, scope: !9246)
!9254 = !DILocation(line: 100, column: 21, scope: !9246)
!9255 = !DILocation(line: 100, column: 70, scope: !9246)
!9256 = !DILocation(line: 101, column: 27, scope: !9246)
!9257 = !DILocation(line: 100, column: 18, scope: !9246)
!9258 = !DILocation(line: 100, column: 5, scope: !9246)
!9259 = !DILocation(line: 102, column: 8, scope: !9260)
!9260 = distinct !DILexicalBlock(scope: !9230, file: !641, line: 102, column: 7)
!9261 = !DILocation(line: 102, column: 14, scope: !9260)
!9262 = !DILocation(line: 102, column: 17, scope: !9260)
!9263 = !DILocation(line: 102, column: 30, scope: !9260)
!9264 = !DILocation(line: 102, column: 7, scope: !9230)
!9265 = !DILocation(line: 103, column: 12, scope: !9260)
!9266 = !DILocation(line: 103, column: 5, scope: !9260)
!9267 = !DILocalVariable(name: "buf", scope: !9230, file: !641, line: 105, type: !645)
!9268 = !DILocation(line: 105, column: 8, scope: !9230)
!9269 = !DILocalVariable(name: "dsttmp", scope: !9230, file: !641, line: 106, type: !9)
!9270 = !DILocation(line: 106, column: 9, scope: !9230)
!9271 = !DILocation(line: 106, column: 36, scope: !9230)
!9272 = !DILocation(line: 106, column: 45, scope: !9230)
!9273 = !DILocation(line: 106, column: 18, scope: !9230)
!9274 = !DILocation(line: 107, column: 9, scope: !9275)
!9275 = distinct !DILexicalBlock(scope: !9230, file: !641, line: 107, column: 7)
!9276 = !DILocation(line: 107, column: 7, scope: !9230)
!9277 = !DILocation(line: 108, column: 12, scope: !9275)
!9278 = !DILocation(line: 108, column: 5, scope: !9275)
!9279 = !DILocalVariable(name: "arg", scope: !9230, file: !641, line: 109, type: !659)
!9280 = !DILocation(line: 109, column: 19, scope: !9230)
!9281 = !DILocation(line: 109, column: 25, scope: !9230)
!9282 = !DILocation(line: 109, column: 27, scope: !9230)
!9283 = !{!9284, !2633, i64 0}
!9284 = !{!"link_arg", !2633, i64 0, !2646, i64 8, !2633, i64 16, !2633, i64 20}
!9285 = !DILocation(line: 109, column: 35, scope: !9230)
!9286 = !{!9284, !2646, i64 8}
!9287 = !DILocation(line: 109, column: 44, scope: !9230)
!9288 = !{!9284, !2633, i64 16}
!9289 = !DILocation(line: 109, column: 52, scope: !9230)
!9290 = !{!9284, !2633, i64 20}
!9291 = !DILocalVariable(name: "err", scope: !9230, file: !641, line: 110, type: !7)
!9292 = !DILocation(line: 110, column: 7, scope: !9230)
!9293 = !DILocation(line: 112, column: 25, scope: !9294)
!9294 = distinct !DILexicalBlock(scope: !9230, file: !641, line: 112, column: 7)
!9295 = !DILocation(line: 112, column: 36, scope: !9294)
!9296 = !DILocation(line: 112, column: 7, scope: !9294)
!9297 = !DILocation(line: 112, column: 66, scope: !9294)
!9298 = !DILocation(line: 112, column: 7, scope: !9230)
!9299 = !DILocation(line: 113, column: 11, scope: !9294)
!9300 = !DILocation(line: 113, column: 9, scope: !9294)
!9301 = !DILocation(line: 113, column: 5, scope: !9294)
!9302 = !DILocation(line: 116, column: 23, scope: !9303)
!9303 = distinct !DILexicalBlock(scope: !9294, file: !641, line: 115, column: 5)
!9304 = !DILocation(line: 116, column: 31, scope: !9303)
!9305 = !DILocation(line: 116, column: 39, scope: !9303)
!9306 = !DILocation(line: 116, column: 47, scope: !9303)
!9307 = !DILocation(line: 116, column: 13, scope: !9303)
!9308 = !DILocation(line: 116, column: 56, scope: !9303)
!9309 = !DILocation(line: 116, column: 68, scope: !9303)
!9310 = !DILocation(line: 116, column: 11, scope: !9303)
!9311 = !DILocation(line: 120, column: 17, scope: !9303)
!9312 = !DILocation(line: 120, column: 25, scope: !9303)
!9313 = !DILocation(line: 120, column: 7, scope: !9303)
!9314 = !DILocation(line: 123, column: 7, scope: !9315)
!9315 = distinct !DILexicalBlock(scope: !9230, file: !641, line: 123, column: 7)
!9316 = !DILocation(line: 123, column: 17, scope: !9315)
!9317 = !DILocation(line: 123, column: 14, scope: !9315)
!9318 = !DILocation(line: 123, column: 7, scope: !9230)
!9319 = !DILocation(line: 124, column: 11, scope: !9315)
!9320 = !DILocation(line: 124, column: 5, scope: !9315)
!9321 = !DILocation(line: 125, column: 10, scope: !9230)
!9322 = !DILocation(line: 125, column: 3, scope: !9230)
!9323 = !DILocation(line: 126, column: 1, scope: !9230)
!9324 = distinct !DISubprogram(name: "samedir_template", scope: !641, file: !641, line: 51, type: !650, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !640, retainedNodes: !209)
!9325 = !DILocalVariable(name: "dstname", arg: 1, scope: !9324, file: !641, line: 51, type: !180)
!9326 = !DILocation(line: 51, column: 31, scope: !9324)
!9327 = !DILocalVariable(name: "buf", arg: 2, scope: !9324, file: !641, line: 51, type: !9)
!9328 = !DILocation(line: 51, column: 45, scope: !9324)
!9329 = !DILocalVariable(name: "dstdirlen", scope: !9324, file: !641, line: 53, type: !652)
!9330 = !DILocation(line: 53, column: 13, scope: !9324)
!9331 = !DILocation(line: 53, column: 41, scope: !9324)
!9332 = !DILocation(line: 53, column: 25, scope: !9324)
!9333 = !DILocation(line: 53, column: 52, scope: !9324)
!9334 = !DILocation(line: 53, column: 50, scope: !9324)
!9335 = !DILocalVariable(name: "dsttmpsize", scope: !9324, file: !641, line: 54, type: !55)
!9336 = !DILocation(line: 54, column: 10, scope: !9324)
!9337 = !DILocation(line: 54, column: 23, scope: !9324)
!9338 = !DILocation(line: 54, column: 33, scope: !9324)
!9339 = !DILocalVariable(name: "dsttmp", scope: !9324, file: !641, line: 55, type: !9)
!9340 = !DILocation(line: 55, column: 9, scope: !9324)
!9341 = !DILocation(line: 56, column: 7, scope: !9342)
!9342 = distinct !DILexicalBlock(scope: !9324, file: !641, line: 56, column: 7)
!9343 = !DILocation(line: 56, column: 18, scope: !9342)
!9344 = !DILocation(line: 56, column: 7, scope: !9324)
!9345 = !DILocation(line: 57, column: 14, scope: !9342)
!9346 = !DILocation(line: 57, column: 12, scope: !9342)
!9347 = !DILocation(line: 57, column: 5, scope: !9342)
!9348 = !DILocation(line: 60, column: 24, scope: !9349)
!9349 = distinct !DILexicalBlock(scope: !9342, file: !641, line: 59, column: 5)
!9350 = !DILocation(line: 60, column: 16, scope: !9349)
!9351 = !DILocation(line: 60, column: 14, scope: !9349)
!9352 = !DILocation(line: 61, column: 12, scope: !9353)
!9353 = distinct !DILexicalBlock(scope: !9349, file: !641, line: 61, column: 11)
!9354 = !DILocation(line: 61, column: 11, scope: !9349)
!9355 = !DILocation(line: 62, column: 16, scope: !9353)
!9356 = !DILocation(line: 62, column: 9, scope: !9353)
!9357 = !DILocation(line: 64, column: 20, scope: !9324)
!9358 = !DILocation(line: 64, column: 28, scope: !9324)
!9359 = !DILocation(line: 64, column: 37, scope: !9324)
!9360 = !DILocation(line: 64, column: 11, scope: !9324)
!9361 = !DILocation(line: 64, column: 3, scope: !9324)
!9362 = !DILocation(line: 65, column: 10, scope: !9324)
!9363 = !DILocation(line: 65, column: 3, scope: !9324)
!9364 = !DILocation(line: 66, column: 1, scope: !9324)
!9365 = distinct !DISubprogram(name: "try_link", scope: !641, file: !641, line: 80, type: !656, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !640, retainedNodes: !209)
!9366 = !DILocalVariable(name: "dest", arg: 1, scope: !9365, file: !641, line: 80, type: !9)
!9367 = !DILocation(line: 80, column: 17, scope: !9365)
!9368 = !DILocalVariable(name: "arg", arg: 2, scope: !9365, file: !641, line: 80, type: !53)
!9369 = !DILocation(line: 80, column: 29, scope: !9365)
!9370 = !DILocalVariable(name: "a", scope: !9365, file: !641, line: 82, type: !658)
!9371 = !DILocation(line: 82, column: 20, scope: !9365)
!9372 = !DILocation(line: 82, column: 24, scope: !9365)
!9373 = !DILocation(line: 83, column: 18, scope: !9365)
!9374 = !DILocation(line: 83, column: 21, scope: !9365)
!9375 = !DILocation(line: 83, column: 29, scope: !9365)
!9376 = !DILocation(line: 83, column: 32, scope: !9365)
!9377 = !DILocation(line: 83, column: 41, scope: !9365)
!9378 = !DILocation(line: 83, column: 44, scope: !9365)
!9379 = !DILocation(line: 83, column: 52, scope: !9365)
!9380 = !DILocation(line: 83, column: 58, scope: !9365)
!9381 = !DILocation(line: 83, column: 61, scope: !9365)
!9382 = !DILocation(line: 83, column: 10, scope: !9365)
!9383 = !DILocation(line: 83, column: 3, scope: !9365)
!9384 = distinct !DISubprogram(name: "force_symlinkat", scope: !641, file: !641, line: 152, type: !648, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !640, retainedNodes: !209)
!9385 = !DILocalVariable(name: "srcname", arg: 1, scope: !9384, file: !641, line: 152, type: !180)
!9386 = !DILocation(line: 152, column: 30, scope: !9384)
!9387 = !DILocalVariable(name: "dstdir", arg: 2, scope: !9384, file: !641, line: 152, type: !7)
!9388 = !DILocation(line: 152, column: 43, scope: !9384)
!9389 = !DILocalVariable(name: "dstname", arg: 3, scope: !9384, file: !641, line: 152, type: !180)
!9390 = !DILocation(line: 152, column: 63, scope: !9384)
!9391 = !DILocalVariable(name: "force", arg: 4, scope: !9384, file: !641, line: 153, type: !142)
!9392 = !DILocation(line: 153, column: 23, scope: !9384)
!9393 = !DILocalVariable(name: "symlinkat_errno", arg: 5, scope: !9384, file: !641, line: 153, type: !7)
!9394 = !DILocation(line: 153, column: 34, scope: !9384)
!9395 = !DILocation(line: 155, column: 7, scope: !9396)
!9396 = distinct !DILexicalBlock(scope: !9384, file: !641, line: 155, column: 7)
!9397 = !DILocation(line: 155, column: 23, scope: !9396)
!9398 = !DILocation(line: 155, column: 7, scope: !9384)
!9399 = !DILocation(line: 156, column: 34, scope: !9396)
!9400 = !DILocation(line: 156, column: 43, scope: !9396)
!9401 = !DILocation(line: 156, column: 51, scope: !9396)
!9402 = !DILocation(line: 156, column: 23, scope: !9396)
!9403 = !DILocation(line: 156, column: 60, scope: !9396)
!9404 = !DILocation(line: 156, column: 71, scope: !9396)
!9405 = !DILocation(line: 156, column: 21, scope: !9396)
!9406 = !DILocation(line: 156, column: 5, scope: !9396)
!9407 = !DILocation(line: 157, column: 8, scope: !9408)
!9408 = distinct !DILexicalBlock(scope: !9384, file: !641, line: 157, column: 7)
!9409 = !DILocation(line: 157, column: 14, scope: !9408)
!9410 = !DILocation(line: 157, column: 17, scope: !9408)
!9411 = !DILocation(line: 157, column: 33, scope: !9408)
!9412 = !DILocation(line: 157, column: 7, scope: !9384)
!9413 = !DILocation(line: 158, column: 12, scope: !9408)
!9414 = !DILocation(line: 158, column: 5, scope: !9408)
!9415 = !DILocalVariable(name: "buf", scope: !9384, file: !641, line: 160, type: !645)
!9416 = !DILocation(line: 160, column: 8, scope: !9384)
!9417 = !DILocalVariable(name: "dsttmp", scope: !9384, file: !641, line: 161, type: !9)
!9418 = !DILocation(line: 161, column: 9, scope: !9384)
!9419 = !DILocation(line: 161, column: 36, scope: !9384)
!9420 = !DILocation(line: 161, column: 45, scope: !9384)
!9421 = !DILocation(line: 161, column: 18, scope: !9384)
!9422 = !DILocation(line: 162, column: 8, scope: !9423)
!9423 = distinct !DILexicalBlock(scope: !9384, file: !641, line: 162, column: 7)
!9424 = !DILocation(line: 162, column: 7, scope: !9384)
!9425 = !DILocation(line: 163, column: 12, scope: !9423)
!9426 = !DILocation(line: 163, column: 5, scope: !9423)
!9427 = !DILocalVariable(name: "arg", scope: !9384, file: !641, line: 164, type: !666)
!9428 = !DILocation(line: 164, column: 22, scope: !9384)
!9429 = !DILocation(line: 164, column: 28, scope: !9384)
!9430 = !DILocation(line: 164, column: 30, scope: !9384)
!9431 = !{!9432, !2646, i64 0}
!9432 = !{!"symlink_arg", !2646, i64 0, !2633, i64 8}
!9433 = !DILocation(line: 164, column: 39, scope: !9384)
!9434 = !{!9432, !2633, i64 8}
!9435 = !DILocalVariable(name: "err", scope: !9384, file: !641, line: 165, type: !7)
!9436 = !DILocation(line: 165, column: 7, scope: !9384)
!9437 = !DILocation(line: 167, column: 25, scope: !9438)
!9438 = distinct !DILexicalBlock(scope: !9384, file: !641, line: 167, column: 7)
!9439 = !DILocation(line: 167, column: 36, scope: !9438)
!9440 = !DILocation(line: 167, column: 7, scope: !9438)
!9441 = !DILocation(line: 167, column: 69, scope: !9438)
!9442 = !DILocation(line: 167, column: 7, scope: !9384)
!9443 = !DILocation(line: 168, column: 11, scope: !9438)
!9444 = !DILocation(line: 168, column: 9, scope: !9438)
!9445 = !DILocation(line: 168, column: 5, scope: !9438)
!9446 = !DILocation(line: 169, column: 22, scope: !9447)
!9447 = distinct !DILexicalBlock(scope: !9438, file: !641, line: 169, column: 12)
!9448 = !DILocation(line: 169, column: 30, scope: !9447)
!9449 = !DILocation(line: 169, column: 38, scope: !9447)
!9450 = !DILocation(line: 169, column: 46, scope: !9447)
!9451 = !DILocation(line: 169, column: 12, scope: !9447)
!9452 = !DILocation(line: 169, column: 55, scope: !9447)
!9453 = !DILocation(line: 169, column: 12, scope: !9438)
!9454 = !DILocation(line: 171, column: 13, scope: !9455)
!9455 = distinct !DILexicalBlock(scope: !9447, file: !641, line: 170, column: 5)
!9456 = !DILocation(line: 171, column: 11, scope: !9455)
!9457 = !DILocation(line: 172, column: 17, scope: !9455)
!9458 = !DILocation(line: 172, column: 25, scope: !9455)
!9459 = !DILocation(line: 172, column: 7, scope: !9455)
!9460 = !DILocation(line: 173, column: 5, scope: !9455)
!9461 = !DILocation(line: 178, column: 11, scope: !9462)
!9462 = distinct !DILexicalBlock(scope: !9447, file: !641, line: 175, column: 5)
!9463 = !DILocation(line: 181, column: 7, scope: !9464)
!9464 = distinct !DILexicalBlock(scope: !9384, file: !641, line: 181, column: 7)
!9465 = !DILocation(line: 181, column: 17, scope: !9464)
!9466 = !DILocation(line: 181, column: 14, scope: !9464)
!9467 = !DILocation(line: 181, column: 7, scope: !9384)
!9468 = !DILocation(line: 182, column: 11, scope: !9464)
!9469 = !DILocation(line: 182, column: 5, scope: !9464)
!9470 = !DILocation(line: 183, column: 10, scope: !9384)
!9471 = !DILocation(line: 183, column: 3, scope: !9384)
!9472 = !DILocation(line: 184, column: 1, scope: !9384)
!9473 = distinct !DISubprogram(name: "try_symlink", scope: !641, file: !641, line: 138, type: !656, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !640, retainedNodes: !209)
!9474 = !DILocalVariable(name: "dest", arg: 1, scope: !9473, file: !641, line: 138, type: !9)
!9475 = !DILocation(line: 138, column: 20, scope: !9473)
!9476 = !DILocalVariable(name: "arg", arg: 2, scope: !9473, file: !641, line: 138, type: !53)
!9477 = !DILocation(line: 138, column: 32, scope: !9473)
!9478 = !DILocalVariable(name: "a", scope: !9473, file: !641, line: 140, type: !665)
!9479 = !DILocation(line: 140, column: 23, scope: !9473)
!9480 = !DILocation(line: 140, column: 27, scope: !9473)
!9481 = !DILocation(line: 141, column: 21, scope: !9473)
!9482 = !DILocation(line: 141, column: 24, scope: !9473)
!9483 = !DILocation(line: 141, column: 33, scope: !9473)
!9484 = !DILocation(line: 141, column: 36, scope: !9473)
!9485 = !DILocation(line: 141, column: 44, scope: !9473)
!9486 = !DILocation(line: 141, column: 10, scope: !9473)
!9487 = !DILocation(line: 141, column: 3, scope: !9473)
!9488 = distinct !DISubprogram(name: "copy_acl", scope: !9489, file: !9489, line: 43, type: !1514, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1511, retainedNodes: !209)
!9489 = !DIFile(filename: "lib/copy-acl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!9490 = !DILocalVariable(name: "src_name", arg: 1, scope: !9488, file: !9489, line: 43, type: !180)
!9491 = !DILocation(line: 43, column: 23, scope: !9488)
!9492 = !DILocalVariable(name: "source_desc", arg: 2, scope: !9488, file: !9489, line: 43, type: !7)
!9493 = !DILocation(line: 43, column: 37, scope: !9488)
!9494 = !DILocalVariable(name: "dst_name", arg: 3, scope: !9488, file: !9489, line: 43, type: !180)
!9495 = !DILocation(line: 43, column: 62, scope: !9488)
!9496 = !DILocalVariable(name: "dest_desc", arg: 4, scope: !9488, file: !9489, line: 44, type: !7)
!9497 = !DILocation(line: 44, column: 15, scope: !9488)
!9498 = !DILocalVariable(name: "mode", arg: 5, scope: !9488, file: !9489, line: 44, type: !139)
!9499 = !DILocation(line: 44, column: 33, scope: !9488)
!9500 = !DILocalVariable(name: "ret", scope: !9488, file: !9489, line: 46, type: !7)
!9501 = !DILocation(line: 46, column: 7, scope: !9488)
!9502 = !DILocation(line: 46, column: 24, scope: !9488)
!9503 = !DILocation(line: 46, column: 34, scope: !9488)
!9504 = !DILocation(line: 46, column: 47, scope: !9488)
!9505 = !DILocation(line: 46, column: 57, scope: !9488)
!9506 = !DILocation(line: 46, column: 68, scope: !9488)
!9507 = !DILocation(line: 46, column: 13, scope: !9488)
!9508 = !DILocation(line: 47, column: 11, scope: !9488)
!9509 = !DILocation(line: 47, column: 3, scope: !9488)
!9510 = !DILocation(line: 50, column: 17, scope: !9511)
!9511 = distinct !DILexicalBlock(scope: !9488, file: !9489, line: 48, column: 5)
!9512 = !DILocation(line: 50, column: 37, scope: !9511)
!9513 = !DILocation(line: 50, column: 30, scope: !9511)
!9514 = !DILocation(line: 50, column: 7, scope: !9511)
!9515 = !DILocation(line: 51, column: 7, scope: !9511)
!9516 = !DILocation(line: 54, column: 17, scope: !9511)
!9517 = !DILocation(line: 54, column: 24, scope: !9511)
!9518 = !DILocation(line: 54, column: 67, scope: !9511)
!9519 = !DILocation(line: 54, column: 60, scope: !9511)
!9520 = !DILocation(line: 54, column: 7, scope: !9511)
!9521 = !DILocation(line: 55, column: 7, scope: !9511)
!9522 = !DILocation(line: 58, column: 7, scope: !9511)
!9523 = !DILocation(line: 60, column: 10, scope: !9488)
!9524 = !DILocation(line: 60, column: 3, scope: !9488)
!9525 = distinct !DISubprogram(name: "set_acl", scope: !9526, file: !9526, line: 42, type: !1519, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1516, retainedNodes: !209)
!9526 = !DIFile(filename: "lib/set-acl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!9527 = !DILocalVariable(name: "name", arg: 1, scope: !9525, file: !9526, line: 42, type: !180)
!9528 = !DILocation(line: 42, column: 22, scope: !9525)
!9529 = !DILocalVariable(name: "desc", arg: 2, scope: !9525, file: !9526, line: 42, type: !7)
!9530 = !DILocation(line: 42, column: 32, scope: !9525)
!9531 = !DILocalVariable(name: "mode", arg: 3, scope: !9525, file: !9526, line: 42, type: !139)
!9532 = !DILocation(line: 42, column: 45, scope: !9525)
!9533 = !DILocalVariable(name: "ret", scope: !9525, file: !9526, line: 44, type: !7)
!9534 = !DILocation(line: 44, column: 7, scope: !9525)
!9535 = !DILocation(line: 44, column: 23, scope: !9525)
!9536 = !DILocation(line: 44, column: 29, scope: !9525)
!9537 = !DILocation(line: 44, column: 35, scope: !9525)
!9538 = !DILocation(line: 44, column: 13, scope: !9525)
!9539 = !DILocation(line: 45, column: 7, scope: !9540)
!9540 = distinct !DILexicalBlock(scope: !9525, file: !9526, line: 45, column: 7)
!9541 = !DILocation(line: 45, column: 11, scope: !9540)
!9542 = !DILocation(line: 45, column: 7, scope: !9525)
!9543 = !DILocation(line: 46, column: 15, scope: !9540)
!9544 = !DILocation(line: 46, column: 22, scope: !9540)
!9545 = !DILocation(line: 46, column: 62, scope: !9540)
!9546 = !DILocation(line: 46, column: 55, scope: !9540)
!9547 = !DILocation(line: 46, column: 5, scope: !9540)
!9548 = !DILocation(line: 47, column: 10, scope: !9525)
!9549 = !DILocation(line: 47, column: 3, scope: !9525)
!9550 = distinct !DISubprogram(name: "areadlink_with_size", scope: !9551, file: !9551, line: 52, type: !1074, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1521, retainedNodes: !209)
!9551 = !DIFile(filename: "lib/areadlink-with-size.c", directory: "/home/mbarbar/software/coreutils-8.31")
!9552 = !DILocalVariable(name: "file", arg: 1, scope: !9550, file: !9551, line: 52, type: !180)
!9553 = !DILocation(line: 52, column: 34, scope: !9550)
!9554 = !DILocalVariable(name: "size", arg: 2, scope: !9550, file: !9551, line: 52, type: !55)
!9555 = !DILocation(line: 52, column: 47, scope: !9550)
!9556 = !DILocalVariable(name: "symlink_max", scope: !9550, file: !9551, line: 57, type: !55)
!9557 = !DILocation(line: 57, column: 10, scope: !9550)
!9558 = !DILocalVariable(name: "INITIAL_LIMIT_BOUND", scope: !9550, file: !9551, line: 58, type: !55)
!9559 = !DILocation(line: 58, column: 10, scope: !9550)
!9560 = !DILocalVariable(name: "initial_limit", scope: !9550, file: !9551, line: 59, type: !55)
!9561 = !DILocation(line: 59, column: 10, scope: !9550)
!9562 = !DILocation(line: 59, column: 27, scope: !9550)
!9563 = !DILocation(line: 59, column: 41, scope: !9550)
!9564 = !DILocation(line: 59, column: 39, scope: !9550)
!9565 = !DILocation(line: 60, column: 29, scope: !9550)
!9566 = !DILocation(line: 60, column: 41, scope: !9550)
!9567 = !DILocation(line: 61, column: 29, scope: !9550)
!9568 = !DILocalVariable(name: "buf_size", scope: !9550, file: !9551, line: 64, type: !55)
!9569 = !DILocation(line: 64, column: 10, scope: !9550)
!9570 = !DILocation(line: 64, column: 21, scope: !9550)
!9571 = !DILocation(line: 64, column: 28, scope: !9550)
!9572 = !DILocation(line: 64, column: 26, scope: !9550)
!9573 = !DILocation(line: 64, column: 44, scope: !9550)
!9574 = !DILocation(line: 64, column: 49, scope: !9550)
!9575 = !DILocation(line: 64, column: 55, scope: !9550)
!9576 = !DILocation(line: 66, column: 3, scope: !9550)
!9577 = !DILocalVariable(name: "r", scope: !9578, file: !9551, line: 68, type: !692)
!9578 = distinct !DILexicalBlock(scope: !9550, file: !9551, line: 67, column: 5)
!9579 = !DILocation(line: 68, column: 15, scope: !9578)
!9580 = !DILocalVariable(name: "link_length", scope: !9578, file: !9551, line: 69, type: !55)
!9581 = !DILocation(line: 69, column: 14, scope: !9578)
!9582 = !DILocalVariable(name: "buffer", scope: !9578, file: !9551, line: 70, type: !9)
!9583 = !DILocation(line: 70, column: 13, scope: !9578)
!9584 = !DILocation(line: 70, column: 30, scope: !9578)
!9585 = !DILocation(line: 70, column: 22, scope: !9578)
!9586 = !DILocation(line: 72, column: 11, scope: !9587)
!9587 = distinct !DILexicalBlock(scope: !9578, file: !9551, line: 72, column: 11)
!9588 = !DILocation(line: 72, column: 18, scope: !9587)
!9589 = !DILocation(line: 72, column: 11, scope: !9578)
!9590 = !DILocation(line: 73, column: 9, scope: !9587)
!9591 = !DILocation(line: 74, column: 21, scope: !9578)
!9592 = !DILocation(line: 74, column: 27, scope: !9578)
!9593 = !DILocation(line: 74, column: 35, scope: !9578)
!9594 = !DILocation(line: 74, column: 11, scope: !9578)
!9595 = !DILocation(line: 74, column: 9, scope: !9578)
!9596 = !DILocation(line: 75, column: 21, scope: !9578)
!9597 = !DILocation(line: 75, column: 19, scope: !9578)
!9598 = !DILocation(line: 79, column: 11, scope: !9599)
!9599 = distinct !DILexicalBlock(scope: !9578, file: !9551, line: 79, column: 11)
!9600 = !DILocation(line: 79, column: 13, scope: !9599)
!9601 = !DILocation(line: 79, column: 17, scope: !9599)
!9602 = !DILocation(line: 79, column: 20, scope: !9599)
!9603 = !DILocation(line: 79, column: 26, scope: !9599)
!9604 = !DILocation(line: 79, column: 11, scope: !9578)
!9605 = !DILocalVariable(name: "saved_errno", scope: !9606, file: !9551, line: 81, type: !7)
!9606 = distinct !DILexicalBlock(scope: !9599, file: !9551, line: 80, column: 9)
!9607 = !DILocation(line: 81, column: 15, scope: !9606)
!9608 = !DILocation(line: 81, column: 29, scope: !9606)
!9609 = !DILocation(line: 82, column: 17, scope: !9606)
!9610 = !DILocation(line: 82, column: 11, scope: !9606)
!9611 = !DILocation(line: 83, column: 19, scope: !9606)
!9612 = !DILocation(line: 83, column: 11, scope: !9606)
!9613 = !DILocation(line: 83, column: 17, scope: !9606)
!9614 = !DILocation(line: 84, column: 11, scope: !9606)
!9615 = !DILocation(line: 87, column: 11, scope: !9616)
!9616 = distinct !DILexicalBlock(scope: !9578, file: !9551, line: 87, column: 11)
!9617 = !DILocation(line: 87, column: 25, scope: !9616)
!9618 = !DILocation(line: 87, column: 23, scope: !9616)
!9619 = !DILocation(line: 87, column: 11, scope: !9578)
!9620 = !DILocation(line: 89, column: 11, scope: !9621)
!9621 = distinct !DILexicalBlock(scope: !9616, file: !9551, line: 88, column: 9)
!9622 = !DILocation(line: 89, column: 18, scope: !9621)
!9623 = !DILocation(line: 89, column: 31, scope: !9621)
!9624 = !DILocation(line: 90, column: 18, scope: !9621)
!9625 = !DILocation(line: 90, column: 11, scope: !9621)
!9626 = !DILocation(line: 93, column: 13, scope: !9578)
!9627 = !DILocation(line: 93, column: 7, scope: !9578)
!9628 = !DILocation(line: 94, column: 11, scope: !9629)
!9629 = distinct !DILexicalBlock(scope: !9578, file: !9551, line: 94, column: 11)
!9630 = !DILocation(line: 94, column: 20, scope: !9629)
!9631 = !DILocation(line: 94, column: 11, scope: !9578)
!9632 = !DILocation(line: 95, column: 18, scope: !9629)
!9633 = !DILocation(line: 95, column: 9, scope: !9629)
!9634 = !DILocation(line: 96, column: 16, scope: !9635)
!9635 = distinct !DILexicalBlock(scope: !9629, file: !9551, line: 96, column: 16)
!9636 = !DILocation(line: 96, column: 25, scope: !9635)
!9637 = !DILocation(line: 96, column: 16, scope: !9629)
!9638 = !DILocation(line: 97, column: 18, scope: !9635)
!9639 = !DILocation(line: 97, column: 9, scope: !9635)
!9640 = !DILocation(line: 100, column: 11, scope: !9641)
!9641 = distinct !DILexicalBlock(scope: !9635, file: !9551, line: 99, column: 9)
!9642 = !DILocation(line: 100, column: 17, scope: !9641)
!9643 = !DILocation(line: 101, column: 11, scope: !9641)
!9644 = distinct !{!9644, !9576, !9645}
!9645 = !DILocation(line: 103, column: 5, scope: !9550)
!9646 = !DILocation(line: 104, column: 1, scope: !9550)
!9647 = distinct !DISubprogram(name: "set_simple_backup_suffix", scope: !683, file: !683, line: 88, type: !202, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !679, retainedNodes: !209)
!9648 = !DILocalVariable(name: "s", arg: 1, scope: !9647, file: !683, line: 88, type: !180)
!9649 = !DILocation(line: 88, column: 39, scope: !9647)
!9650 = !DILocation(line: 90, column: 8, scope: !9651)
!9651 = distinct !DILexicalBlock(scope: !9647, file: !683, line: 90, column: 7)
!9652 = !DILocation(line: 90, column: 7, scope: !9647)
!9653 = !DILocation(line: 91, column: 9, scope: !9651)
!9654 = !DILocation(line: 91, column: 7, scope: !9651)
!9655 = !DILocation(line: 91, column: 5, scope: !9651)
!9656 = !DILocation(line: 92, column: 26, scope: !9647)
!9657 = !DILocation(line: 92, column: 28, scope: !9647)
!9658 = !DILocation(line: 92, column: 32, scope: !9647)
!9659 = !DILocation(line: 92, column: 31, scope: !9647)
!9660 = !DILocation(line: 92, column: 34, scope: !9647)
!9661 = !DILocation(line: 92, column: 37, scope: !9647)
!9662 = !DILocation(line: 92, column: 58, scope: !9647)
!9663 = !DILocation(line: 92, column: 42, scope: !9647)
!9664 = !DILocation(line: 92, column: 39, scope: !9647)
!9665 = !DILocation(line: 92, column: 63, scope: !9647)
!9666 = !DILocation(line: 92, column: 24, scope: !9647)
!9667 = !DILocation(line: 93, column: 1, scope: !9647)
!9668 = distinct !DISubprogram(name: "backupfile_internal", scope: !683, file: !683, line: 314, type: !690, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !679, retainedNodes: !209)
!9669 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !9668, file: !683, line: 314, type: !7)
!9670 = !DILocation(line: 314, column: 26, scope: !9668)
!9671 = !DILocalVariable(name: "file", arg: 2, scope: !9668, file: !683, line: 314, type: !180)
!9672 = !DILocation(line: 314, column: 46, scope: !9668)
!9673 = !DILocalVariable(name: "backup_type", arg: 3, scope: !9668, file: !683, line: 315, type: !68)
!9674 = !DILocation(line: 315, column: 39, scope: !9668)
!9675 = !DILocalVariable(name: "rename", arg: 4, scope: !9668, file: !683, line: 315, type: !142)
!9676 = !DILocation(line: 315, column: 57, scope: !9668)
!9677 = !DILocalVariable(name: "base_offset", scope: !9668, file: !683, line: 317, type: !652)
!9678 = !DILocation(line: 317, column: 13, scope: !9668)
!9679 = !DILocation(line: 317, column: 43, scope: !9668)
!9680 = !DILocation(line: 317, column: 27, scope: !9668)
!9681 = !DILocation(line: 317, column: 51, scope: !9668)
!9682 = !DILocation(line: 317, column: 49, scope: !9668)
!9683 = !DILocalVariable(name: "filelen", scope: !9668, file: !683, line: 318, type: !55)
!9684 = !DILocation(line: 318, column: 10, scope: !9668)
!9685 = !DILocation(line: 318, column: 20, scope: !9668)
!9686 = !DILocation(line: 318, column: 42, scope: !9668)
!9687 = !DILocation(line: 318, column: 49, scope: !9668)
!9688 = !DILocation(line: 318, column: 47, scope: !9668)
!9689 = !DILocation(line: 318, column: 34, scope: !9668)
!9690 = !DILocation(line: 318, column: 32, scope: !9668)
!9691 = !DILocation(line: 320, column: 9, scope: !9692)
!9692 = distinct !DILexicalBlock(scope: !9668, file: !683, line: 320, column: 7)
!9693 = !DILocation(line: 320, column: 7, scope: !9668)
!9694 = !DILocation(line: 321, column: 5, scope: !9692)
!9695 = !DILocalVariable(name: "simple_backup_suffix_size", scope: !9668, file: !683, line: 325, type: !55)
!9696 = !DILocation(line: 325, column: 10, scope: !9668)
!9697 = !DILocation(line: 325, column: 46, scope: !9668)
!9698 = !DILocation(line: 325, column: 38, scope: !9668)
!9699 = !DILocation(line: 325, column: 68, scope: !9668)
!9700 = !DILocalVariable(name: "backup_suffix_size_guess", scope: !9668, file: !683, line: 326, type: !55)
!9701 = !DILocation(line: 326, column: 10, scope: !9668)
!9702 = !DILocation(line: 326, column: 37, scope: !9668)
!9703 = !DILocation(line: 328, column: 7, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9668, file: !683, line: 328, column: 7)
!9705 = !DILocation(line: 328, column: 32, scope: !9704)
!9706 = !DILocation(line: 328, column: 7, scope: !9668)
!9707 = !DILocation(line: 329, column: 30, scope: !9704)
!9708 = !DILocation(line: 329, column: 5, scope: !9704)
!9709 = !DILocalVariable(name: "ssize", scope: !9668, file: !683, line: 331, type: !692)
!9710 = !DILocation(line: 331, column: 11, scope: !9668)
!9711 = !DILocation(line: 331, column: 19, scope: !9668)
!9712 = !DILocation(line: 331, column: 29, scope: !9668)
!9713 = !DILocation(line: 331, column: 27, scope: !9668)
!9714 = !DILocation(line: 331, column: 54, scope: !9668)
!9715 = !DILocalVariable(name: "s", scope: !9668, file: !683, line: 332, type: !9)
!9716 = !DILocation(line: 332, column: 9, scope: !9668)
!9717 = !DILocation(line: 332, column: 21, scope: !9668)
!9718 = !DILocation(line: 332, column: 13, scope: !9668)
!9719 = !DILocation(line: 333, column: 8, scope: !9720)
!9720 = distinct !DILexicalBlock(scope: !9668, file: !683, line: 333, column: 7)
!9721 = !DILocation(line: 333, column: 7, scope: !9668)
!9722 = !DILocation(line: 334, column: 12, scope: !9720)
!9723 = !DILocation(line: 334, column: 5, scope: !9720)
!9724 = !DILocalVariable(name: "dirp", scope: !9668, file: !683, line: 336, type: !693)
!9725 = !DILocation(line: 336, column: 8, scope: !9668)
!9726 = !DILocalVariable(name: "sdir", scope: !9668, file: !683, line: 337, type: !7)
!9727 = !DILocation(line: 337, column: 7, scope: !9668)
!9728 = !DILocalVariable(name: "base_max", scope: !9668, file: !683, line: 338, type: !55)
!9729 = !DILocation(line: 338, column: 10, scope: !9668)
!9730 = !DILocation(line: 339, column: 3, scope: !9668)
!9731 = !DILocation(line: 341, column: 15, scope: !9732)
!9732 = distinct !DILexicalBlock(scope: !9668, file: !683, line: 340, column: 5)
!9733 = !DILocation(line: 341, column: 18, scope: !9732)
!9734 = !DILocation(line: 341, column: 24, scope: !9732)
!9735 = !DILocation(line: 341, column: 32, scope: !9732)
!9736 = !DILocation(line: 341, column: 7, scope: !9732)
!9737 = !DILocation(line: 343, column: 11, scope: !9738)
!9738 = distinct !DILexicalBlock(scope: !9732, file: !683, line: 343, column: 11)
!9739 = !DILocation(line: 343, column: 23, scope: !9738)
!9740 = !DILocation(line: 343, column: 11, scope: !9732)
!9741 = !DILocation(line: 344, column: 17, scope: !9738)
!9742 = !DILocation(line: 344, column: 21, scope: !9738)
!9743 = !DILocation(line: 344, column: 19, scope: !9738)
!9744 = !DILocation(line: 344, column: 30, scope: !9738)
!9745 = !DILocation(line: 344, column: 52, scope: !9738)
!9746 = !DILocation(line: 344, column: 9, scope: !9738)
!9747 = !DILocation(line: 346, column: 34, scope: !9738)
!9748 = !DILocation(line: 346, column: 46, scope: !9738)
!9749 = !DILocation(line: 346, column: 53, scope: !9738)
!9750 = !DILocation(line: 346, column: 62, scope: !9738)
!9751 = !DILocation(line: 346, column: 17, scope: !9738)
!9752 = !DILocation(line: 346, column: 9, scope: !9738)
!9753 = !DILocation(line: 350, column: 13, scope: !9754)
!9754 = distinct !DILexicalBlock(scope: !9738, file: !683, line: 348, column: 11)
!9755 = !DILocation(line: 353, column: 17, scope: !9756)
!9756 = distinct !DILexicalBlock(scope: !9754, file: !683, line: 353, column: 17)
!9757 = !DILocation(line: 353, column: 29, scope: !9756)
!9758 = !DILocation(line: 353, column: 17, scope: !9754)
!9759 = !DILocation(line: 355, column: 29, scope: !9760)
!9760 = distinct !DILexicalBlock(scope: !9756, file: !683, line: 354, column: 15)
!9761 = !DILocation(line: 356, column: 25, scope: !9760)
!9762 = !DILocation(line: 356, column: 29, scope: !9760)
!9763 = !DILocation(line: 356, column: 27, scope: !9760)
!9764 = !DILocation(line: 356, column: 38, scope: !9760)
!9765 = !DILocation(line: 357, column: 25, scope: !9760)
!9766 = !DILocation(line: 356, column: 17, scope: !9760)
!9767 = !DILocation(line: 358, column: 15, scope: !9760)
!9768 = !DILocation(line: 359, column: 13, scope: !9754)
!9769 = !DILocation(line: 361, column: 30, scope: !9754)
!9770 = !DILocation(line: 361, column: 33, scope: !9754)
!9771 = !DILocation(line: 361, column: 47, scope: !9754)
!9772 = !DILocation(line: 361, column: 13, scope: !9754)
!9773 = !DILocation(line: 362, column: 13, scope: !9754)
!9774 = !DILocation(line: 365, column: 19, scope: !9754)
!9775 = !DILocation(line: 365, column: 13, scope: !9754)
!9776 = !DILocation(line: 366, column: 13, scope: !9754)
!9777 = !DILocation(line: 366, column: 19, scope: !9754)
!9778 = !DILocation(line: 367, column: 13, scope: !9754)
!9779 = !DILocation(line: 370, column: 13, scope: !9780)
!9780 = distinct !DILexicalBlock(scope: !9732, file: !683, line: 370, column: 11)
!9781 = !DILocation(line: 370, column: 11, scope: !9732)
!9782 = !DILocation(line: 371, column: 9, scope: !9780)
!9783 = !DILocation(line: 373, column: 11, scope: !9784)
!9784 = distinct !DILexicalBlock(scope: !9732, file: !683, line: 373, column: 11)
!9785 = !DILocation(line: 373, column: 16, scope: !9784)
!9786 = !DILocation(line: 373, column: 11, scope: !9732)
!9787 = !DILocation(line: 375, column: 16, scope: !9788)
!9788 = distinct !DILexicalBlock(scope: !9784, file: !683, line: 374, column: 9)
!9789 = !DILocation(line: 376, column: 23, scope: !9788)
!9790 = !DILocation(line: 377, column: 9, scope: !9788)
!9791 = !DILocalVariable(name: "flags", scope: !9732, file: !683, line: 378, type: !70)
!9792 = !DILocation(line: 378, column: 16, scope: !9732)
!9793 = !DILocation(line: 378, column: 24, scope: !9732)
!9794 = !DILocation(line: 378, column: 36, scope: !9732)
!9795 = !DILocation(line: 379, column: 32, scope: !9796)
!9796 = distinct !DILexicalBlock(scope: !9732, file: !683, line: 379, column: 11)
!9797 = !DILocation(line: 379, column: 38, scope: !9796)
!9798 = !DILocation(line: 379, column: 44, scope: !9796)
!9799 = !DILocation(line: 379, column: 48, scope: !9796)
!9800 = !DILocation(line: 379, column: 46, scope: !9796)
!9801 = !DILocation(line: 379, column: 61, scope: !9796)
!9802 = !DILocation(line: 379, column: 11, scope: !9796)
!9803 = !DILocation(line: 379, column: 68, scope: !9796)
!9804 = !DILocation(line: 379, column: 11, scope: !9732)
!9805 = !DILocation(line: 380, column: 9, scope: !9796)
!9806 = !DILocalVariable(name: "e", scope: !9732, file: !683, line: 381, type: !7)
!9807 = !DILocation(line: 381, column: 11, scope: !9732)
!9808 = !DILocation(line: 381, column: 15, scope: !9732)
!9809 = !DILocation(line: 382, column: 11, scope: !9810)
!9810 = distinct !DILexicalBlock(scope: !9732, file: !683, line: 382, column: 11)
!9811 = !DILocation(line: 382, column: 13, scope: !9810)
!9812 = !DILocation(line: 382, column: 11, scope: !9732)
!9813 = !DILocation(line: 384, column: 15, scope: !9814)
!9814 = distinct !DILexicalBlock(scope: !9815, file: !683, line: 384, column: 15)
!9815 = distinct !DILexicalBlock(scope: !9810, file: !683, line: 383, column: 9)
!9816 = !DILocation(line: 384, column: 15, scope: !9815)
!9817 = !DILocation(line: 385, column: 23, scope: !9814)
!9818 = !DILocation(line: 385, column: 13, scope: !9814)
!9819 = !DILocation(line: 386, column: 17, scope: !9815)
!9820 = !DILocation(line: 386, column: 11, scope: !9815)
!9821 = !DILocation(line: 387, column: 19, scope: !9815)
!9822 = !DILocation(line: 387, column: 11, scope: !9815)
!9823 = !DILocation(line: 387, column: 17, scope: !9815)
!9824 = !DILocation(line: 388, column: 11, scope: !9815)
!9825 = distinct !{!9825, !9730, !9826}
!9826 = !DILocation(line: 390, column: 5, scope: !9668)
!9827 = !DILocation(line: 392, column: 7, scope: !9828)
!9828 = distinct !DILexicalBlock(scope: !9668, file: !683, line: 392, column: 7)
!9829 = !DILocation(line: 392, column: 7, scope: !9668)
!9830 = !DILocation(line: 393, column: 15, scope: !9828)
!9831 = !DILocation(line: 393, column: 5, scope: !9828)
!9832 = !DILocation(line: 394, column: 10, scope: !9668)
!9833 = !DILocation(line: 394, column: 3, scope: !9668)
!9834 = !DILocation(line: 395, column: 1, scope: !9668)
!9835 = distinct !DISubprogram(name: "numbered_backup", scope: !683, file: !683, line: 207, type: !697, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !679, retainedNodes: !209)
!9836 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !9835, file: !683, line: 207, type: !7)
!9837 = !DILocation(line: 207, column: 22, scope: !9835)
!9838 = !DILocalVariable(name: "buffer", arg: 2, scope: !9835, file: !683, line: 207, type: !184)
!9839 = !DILocation(line: 207, column: 37, scope: !9835)
!9840 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !9835, file: !683, line: 207, type: !55)
!9841 = !DILocation(line: 207, column: 52, scope: !9835)
!9842 = !DILocalVariable(name: "filelen", arg: 4, scope: !9835, file: !683, line: 207, type: !55)
!9843 = !DILocation(line: 207, column: 72, scope: !9835)
!9844 = !DILocalVariable(name: "base_offset", arg: 5, scope: !9835, file: !683, line: 208, type: !652)
!9845 = !DILocation(line: 208, column: 28, scope: !9835)
!9846 = !DILocalVariable(name: "dirpp", arg: 6, scope: !9835, file: !683, line: 208, type: !699)
!9847 = !DILocation(line: 208, column: 47, scope: !9835)
!9848 = !DILocalVariable(name: "pnew_fd", arg: 7, scope: !9835, file: !683, line: 208, type: !193)
!9849 = !DILocation(line: 208, column: 59, scope: !9835)
!9850 = !DILocalVariable(name: "result", scope: !9835, file: !683, line: 210, type: !682)
!9851 = !DILocation(line: 210, column: 31, scope: !9835)
!9852 = !DILocalVariable(name: "dirp", scope: !9835, file: !683, line: 211, type: !693)
!9853 = !DILocation(line: 211, column: 8, scope: !9835)
!9854 = !DILocation(line: 211, column: 16, scope: !9835)
!9855 = !DILocation(line: 211, column: 15, scope: !9835)
!9856 = !DILocalVariable(name: "dp", scope: !9835, file: !683, line: 212, type: !700)
!9857 = !DILocation(line: 212, column: 18, scope: !9835)
!9858 = !DILocalVariable(name: "buf", scope: !9835, file: !683, line: 213, type: !9)
!9859 = !DILocation(line: 213, column: 9, scope: !9835)
!9860 = !DILocation(line: 213, column: 16, scope: !9835)
!9861 = !DILocation(line: 213, column: 15, scope: !9835)
!9862 = !DILocalVariable(name: "versionlenmax", scope: !9835, file: !683, line: 214, type: !55)
!9863 = !DILocation(line: 214, column: 10, scope: !9835)
!9864 = !DILocalVariable(name: "base", scope: !9835, file: !683, line: 215, type: !9)
!9865 = !DILocation(line: 215, column: 9, scope: !9835)
!9866 = !DILocation(line: 215, column: 16, scope: !9835)
!9867 = !DILocation(line: 215, column: 22, scope: !9835)
!9868 = !DILocation(line: 215, column: 20, scope: !9835)
!9869 = !DILocalVariable(name: "baselen", scope: !9835, file: !683, line: 216, type: !55)
!9870 = !DILocation(line: 216, column: 10, scope: !9835)
!9871 = !DILocation(line: 216, column: 30, scope: !9835)
!9872 = !DILocation(line: 216, column: 20, scope: !9835)
!9873 = !DILocation(line: 218, column: 7, scope: !9874)
!9874 = distinct !DILexicalBlock(scope: !9835, file: !683, line: 218, column: 7)
!9875 = !DILocation(line: 218, column: 7, scope: !9835)
!9876 = !DILocation(line: 219, column: 16, scope: !9874)
!9877 = !DILocation(line: 219, column: 5, scope: !9874)
!9878 = !DILocalVariable(name: "tmp", scope: !9879, file: !683, line: 224, type: !709)
!9879 = distinct !DILexicalBlock(scope: !9874, file: !683, line: 221, column: 5)
!9880 = !DILocation(line: 224, column: 12, scope: !9879)
!9881 = !DILocation(line: 225, column: 7, scope: !9879)
!9882 = !DILocation(line: 225, column: 20, scope: !9879)
!9883 = !DILocation(line: 226, column: 15, scope: !9879)
!9884 = !DILocation(line: 226, column: 7, scope: !9879)
!9885 = !DILocation(line: 227, column: 25, scope: !9879)
!9886 = !DILocation(line: 227, column: 33, scope: !9879)
!9887 = !DILocation(line: 227, column: 41, scope: !9879)
!9888 = !DILocation(line: 227, column: 14, scope: !9879)
!9889 = !DILocation(line: 227, column: 12, scope: !9879)
!9890 = !DILocation(line: 228, column: 12, scope: !9891)
!9891 = distinct !DILexicalBlock(scope: !9879, file: !683, line: 228, column: 11)
!9892 = !DILocation(line: 228, column: 17, scope: !9891)
!9893 = !DILocation(line: 228, column: 20, scope: !9891)
!9894 = !DILocation(line: 228, column: 26, scope: !9891)
!9895 = !DILocation(line: 228, column: 11, scope: !9879)
!9896 = !DILocation(line: 229, column: 16, scope: !9891)
!9897 = !DILocation(line: 229, column: 9, scope: !9891)
!9898 = !DILocation(line: 230, column: 15, scope: !9879)
!9899 = !DILocation(line: 230, column: 7, scope: !9879)
!9900 = !DILocation(line: 231, column: 15, scope: !9879)
!9901 = !DILocation(line: 231, column: 22, scope: !9879)
!9902 = !DILocation(line: 231, column: 20, scope: !9879)
!9903 = !DILocation(line: 231, column: 7, scope: !9879)
!9904 = !DILocation(line: 232, column: 12, scope: !9905)
!9905 = distinct !DILexicalBlock(scope: !9879, file: !683, line: 232, column: 11)
!9906 = !DILocation(line: 232, column: 11, scope: !9879)
!9907 = !DILocation(line: 233, column: 16, scope: !9905)
!9908 = !DILocation(line: 233, column: 9, scope: !9905)
!9909 = !DILocation(line: 234, column: 16, scope: !9879)
!9910 = !DILocation(line: 234, column: 8, scope: !9879)
!9911 = !DILocation(line: 234, column: 14, scope: !9879)
!9912 = !DILocation(line: 237, column: 3, scope: !9835)
!9913 = !DILocation(line: 237, column: 25, scope: !9835)
!9914 = !DILocation(line: 237, column: 16, scope: !9835)
!9915 = !DILocation(line: 237, column: 14, scope: !9835)
!9916 = !DILocation(line: 237, column: 32, scope: !9835)
!9917 = !DILocalVariable(name: "p", scope: !9918, file: !683, line: 239, type: !180)
!9918 = distinct !DILexicalBlock(scope: !9835, file: !683, line: 238, column: 5)
!9919 = !DILocation(line: 239, column: 19, scope: !9918)
!9920 = !DILocalVariable(name: "q", scope: !9918, file: !683, line: 240, type: !9)
!9921 = !DILocation(line: 240, column: 13, scope: !9918)
!9922 = !DILocalVariable(name: "all_9s", scope: !9918, file: !683, line: 241, type: !142)
!9923 = !DILocation(line: 241, column: 12, scope: !9918)
!9924 = !DILocalVariable(name: "versionlen", scope: !9918, file: !683, line: 242, type: !55)
!9925 = !DILocation(line: 242, column: 14, scope: !9918)
!9926 = !DILocation(line: 244, column: 11, scope: !9927)
!9927 = distinct !DILexicalBlock(scope: !9918, file: !683, line: 244, column: 11)
!9928 = !DILocation(line: 244, column: 34, scope: !9927)
!9929 = !DILocation(line: 244, column: 42, scope: !9927)
!9930 = !DILocation(line: 244, column: 32, scope: !9927)
!9931 = !DILocation(line: 244, column: 11, scope: !9918)
!9932 = !DILocation(line: 245, column: 9, scope: !9927)
!9933 = distinct !{!9933, !9912, !9934}
!9934 = !DILocation(line: 301, column: 5, scope: !9835)
!9935 = !DILocation(line: 247, column: 19, scope: !9936)
!9936 = distinct !DILexicalBlock(scope: !9918, file: !683, line: 247, column: 11)
!9937 = !DILocation(line: 247, column: 25, scope: !9936)
!9938 = !DILocation(line: 247, column: 23, scope: !9936)
!9939 = !DILocation(line: 247, column: 38, scope: !9936)
!9940 = !DILocation(line: 247, column: 42, scope: !9936)
!9941 = !DILocation(line: 247, column: 50, scope: !9936)
!9942 = !DILocation(line: 247, column: 58, scope: !9936)
!9943 = !DILocation(line: 247, column: 11, scope: !9936)
!9944 = !DILocation(line: 247, column: 63, scope: !9936)
!9945 = !DILocation(line: 247, column: 11, scope: !9918)
!9946 = !DILocation(line: 248, column: 9, scope: !9936)
!9947 = !DILocation(line: 250, column: 11, scope: !9918)
!9948 = !DILocation(line: 250, column: 15, scope: !9918)
!9949 = !DILocation(line: 250, column: 24, scope: !9918)
!9950 = !DILocation(line: 250, column: 22, scope: !9918)
!9951 = !DILocation(line: 250, column: 32, scope: !9918)
!9952 = !DILocation(line: 250, column: 9, scope: !9918)
!9953 = !DILocation(line: 256, column: 22, scope: !9954)
!9954 = distinct !DILexicalBlock(scope: !9918, file: !683, line: 256, column: 11)
!9955 = !DILocation(line: 256, column: 21, scope: !9954)
!9956 = !DILocation(line: 256, column: 18, scope: !9954)
!9957 = !DILocation(line: 256, column: 24, scope: !9954)
!9958 = !DILocation(line: 256, column: 28, scope: !9954)
!9959 = !DILocation(line: 256, column: 27, scope: !9954)
!9960 = !DILocation(line: 256, column: 30, scope: !9954)
!9961 = !DILocation(line: 256, column: 11, scope: !9918)
!9962 = !DILocation(line: 257, column: 9, scope: !9954)
!9963 = !DILocation(line: 258, column: 18, scope: !9918)
!9964 = !DILocation(line: 258, column: 17, scope: !9918)
!9965 = !DILocation(line: 258, column: 20, scope: !9918)
!9966 = !DILocation(line: 258, column: 14, scope: !9918)
!9967 = !DILocation(line: 259, column: 23, scope: !9968)
!9968 = distinct !DILexicalBlock(scope: !9918, file: !683, line: 259, column: 7)
!9969 = !DILocation(line: 259, column: 12, scope: !9968)
!9970 = !DILocation(line: 259, column: 28, scope: !9971)
!9971 = distinct !DILexicalBlock(scope: !9968, file: !683, line: 259, column: 7)
!9972 = !DILocation(line: 259, column: 7, scope: !9968)
!9973 = !DILocation(line: 260, column: 20, scope: !9971)
!9974 = !DILocation(line: 260, column: 22, scope: !9971)
!9975 = !DILocation(line: 260, column: 34, scope: !9971)
!9976 = !DILocation(line: 260, column: 16, scope: !9971)
!9977 = !DILocation(line: 260, column: 9, scope: !9971)
!9978 = !DILocation(line: 259, column: 63, scope: !9971)
!9979 = !DILocation(line: 259, column: 7, scope: !9971)
!9980 = distinct !{!9980, !9972, !9981}
!9981 = !DILocation(line: 260, column: 40, scope: !9968)
!9982 = !DILocation(line: 262, column: 14, scope: !9983)
!9983 = distinct !DILexicalBlock(scope: !9918, file: !683, line: 262, column: 11)
!9984 = !DILocation(line: 262, column: 16, scope: !9983)
!9985 = !DILocation(line: 262, column: 28, scope: !9983)
!9986 = !DILocation(line: 262, column: 35, scope: !9983)
!9987 = !DILocation(line: 262, column: 39, scope: !9983)
!9988 = !DILocation(line: 262, column: 41, scope: !9983)
!9989 = !DILocation(line: 262, column: 52, scope: !9983)
!9990 = !DILocation(line: 263, column: 14, scope: !9983)
!9991 = !DILocation(line: 263, column: 18, scope: !9983)
!9992 = !DILocation(line: 263, column: 34, scope: !9983)
!9993 = !DILocation(line: 263, column: 32, scope: !9983)
!9994 = !DILocation(line: 264, column: 18, scope: !9983)
!9995 = !DILocation(line: 264, column: 22, scope: !9983)
!9996 = !DILocation(line: 264, column: 39, scope: !9983)
!9997 = !DILocation(line: 264, column: 36, scope: !9983)
!9998 = !DILocation(line: 265, column: 22, scope: !9983)
!9999 = !DILocation(line: 265, column: 33, scope: !9983)
!10000 = !DILocation(line: 265, column: 39, scope: !9983)
!10001 = !DILocation(line: 265, column: 37, scope: !9983)
!10002 = !DILocation(line: 265, column: 47, scope: !9983)
!10003 = !DILocation(line: 265, column: 52, scope: !9983)
!10004 = !DILocation(line: 265, column: 55, scope: !9983)
!10005 = !DILocation(line: 265, column: 25, scope: !9983)
!10006 = !DILocation(line: 265, column: 67, scope: !9983)
!10007 = !DILocation(line: 262, column: 11, scope: !9918)
!10008 = !DILocation(line: 266, column: 9, scope: !9983)
!10009 = !DILocation(line: 272, column: 23, scope: !9918)
!10010 = !DILocation(line: 272, column: 32, scope: !9918)
!10011 = !DILocation(line: 272, column: 30, scope: !9918)
!10012 = !DILocation(line: 272, column: 21, scope: !9918)
!10013 = !DILocation(line: 273, column: 17, scope: !9918)
!10014 = !DILocation(line: 273, column: 14, scope: !9918)
!10015 = !DILocalVariable(name: "new_buffer_size", scope: !9918, file: !683, line: 274, type: !55)
!10016 = !DILocation(line: 274, column: 14, scope: !9918)
!10017 = !DILocation(line: 274, column: 32, scope: !9918)
!10018 = !DILocation(line: 274, column: 40, scope: !9918)
!10019 = !DILocation(line: 274, column: 46, scope: !9918)
!10020 = !DILocation(line: 274, column: 44, scope: !9918)
!10021 = !DILocation(line: 274, column: 60, scope: !9918)
!10022 = !DILocation(line: 275, column: 11, scope: !10023)
!10023 = distinct !DILexicalBlock(scope: !9918, file: !683, line: 275, column: 11)
!10024 = !DILocation(line: 275, column: 25, scope: !10023)
!10025 = !DILocation(line: 275, column: 23, scope: !10023)
!10026 = !DILocation(line: 275, column: 11, scope: !9918)
!10027 = !DILocation(line: 277, column: 17, scope: !10028)
!10028 = distinct !DILexicalBlock(scope: !10029, file: !683, line: 277, column: 15)
!10029 = distinct !DILexicalBlock(scope: !10023, file: !683, line: 276, column: 9)
!10030 = !DILocation(line: 277, column: 15, scope: !10029)
!10031 = !DILocation(line: 278, column: 29, scope: !10028)
!10032 = !DILocation(line: 278, column: 13, scope: !10028)
!10033 = !DILocalVariable(name: "new_buf", scope: !10029, file: !683, line: 279, type: !9)
!10034 = !DILocation(line: 279, column: 17, scope: !10029)
!10035 = !DILocation(line: 279, column: 36, scope: !10029)
!10036 = !DILocation(line: 279, column: 41, scope: !10029)
!10037 = !DILocation(line: 279, column: 27, scope: !10029)
!10038 = !DILocation(line: 280, column: 16, scope: !10039)
!10039 = distinct !DILexicalBlock(scope: !10029, file: !683, line: 280, column: 15)
!10040 = !DILocation(line: 280, column: 15, scope: !10029)
!10041 = !DILocation(line: 282, column: 25, scope: !10042)
!10042 = distinct !DILexicalBlock(scope: !10039, file: !683, line: 281, column: 13)
!10043 = !DILocation(line: 282, column: 16, scope: !10042)
!10044 = !DILocation(line: 282, column: 23, scope: !10042)
!10045 = !DILocation(line: 283, column: 15, scope: !10042)
!10046 = !DILocation(line: 285, column: 17, scope: !10029)
!10047 = !DILocation(line: 285, column: 15, scope: !10029)
!10048 = !DILocation(line: 286, column: 25, scope: !10029)
!10049 = !DILocation(line: 286, column: 23, scope: !10029)
!10050 = !DILocation(line: 287, column: 9, scope: !10029)
!10051 = !DILocation(line: 288, column: 11, scope: !9918)
!10052 = !DILocation(line: 288, column: 17, scope: !9918)
!10053 = !DILocation(line: 288, column: 15, scope: !9918)
!10054 = !DILocation(line: 288, column: 9, scope: !9918)
!10055 = !DILocation(line: 289, column: 9, scope: !9918)
!10056 = !DILocation(line: 289, column: 12, scope: !9918)
!10057 = !DILocation(line: 290, column: 9, scope: !9918)
!10058 = !DILocation(line: 290, column: 12, scope: !9918)
!10059 = !DILocation(line: 291, column: 8, scope: !9918)
!10060 = !DILocation(line: 291, column: 10, scope: !9918)
!10061 = !DILocation(line: 292, column: 12, scope: !9918)
!10062 = !DILocation(line: 292, column: 9, scope: !9918)
!10063 = !DILocation(line: 293, column: 15, scope: !9918)
!10064 = !DILocation(line: 293, column: 18, scope: !9918)
!10065 = !DILocation(line: 293, column: 21, scope: !9918)
!10066 = !DILocation(line: 293, column: 32, scope: !9918)
!10067 = !DILocation(line: 293, column: 7, scope: !9918)
!10068 = !DILocation(line: 297, column: 12, scope: !9918)
!10069 = !DILocation(line: 297, column: 9, scope: !9918)
!10070 = !DILocation(line: 298, column: 7, scope: !9918)
!10071 = !DILocation(line: 298, column: 15, scope: !9918)
!10072 = !DILocation(line: 298, column: 14, scope: !9918)
!10073 = !DILocation(line: 298, column: 19, scope: !9918)
!10074 = !DILocation(line: 299, column: 10, scope: !9918)
!10075 = !DILocation(line: 299, column: 12, scope: !9918)
!10076 = distinct !{!10076, !10070, !10077}
!10077 = !DILocation(line: 299, column: 14, scope: !9918)
!10078 = !DILocation(line: 300, column: 10, scope: !9918)
!10079 = !DILocation(line: 300, column: 7, scope: !9918)
!10080 = !DILocation(line: 303, column: 13, scope: !9835)
!10081 = !DILocation(line: 303, column: 4, scope: !9835)
!10082 = !DILocation(line: 303, column: 11, scope: !9835)
!10083 = !DILocation(line: 304, column: 10, scope: !9835)
!10084 = !DILocation(line: 304, column: 3, scope: !9835)
!10085 = !DILocation(line: 305, column: 1, scope: !9835)
!10086 = distinct !DISubprogram(name: "check_extension", scope: !683, file: !683, line: 105, type: !710, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !679, retainedNodes: !209)
!10087 = !DILocalVariable(name: "file", arg: 1, scope: !10086, file: !683, line: 105, type: !9)
!10088 = !DILocation(line: 105, column: 24, scope: !10086)
!10089 = !DILocalVariable(name: "filelen", arg: 2, scope: !10086, file: !683, line: 105, type: !55)
!10090 = !DILocation(line: 105, column: 37, scope: !10086)
!10091 = !DILocalVariable(name: "e", arg: 3, scope: !10086, file: !683, line: 105, type: !10)
!10092 = !DILocation(line: 105, column: 51, scope: !10086)
!10093 = !DILocalVariable(name: "dir_fd", arg: 4, scope: !10086, file: !683, line: 106, type: !7)
!10094 = !DILocation(line: 106, column: 22, scope: !10086)
!10095 = !DILocalVariable(name: "base_max", arg: 5, scope: !10086, file: !683, line: 106, type: !712)
!10096 = !DILocation(line: 106, column: 38, scope: !10086)
!10097 = !DILocalVariable(name: "base", scope: !10086, file: !683, line: 108, type: !9)
!10098 = !DILocation(line: 108, column: 9, scope: !10086)
!10099 = !DILocation(line: 108, column: 32, scope: !10086)
!10100 = !DILocation(line: 108, column: 16, scope: !10086)
!10101 = !DILocalVariable(name: "baselen", scope: !10086, file: !683, line: 109, type: !55)
!10102 = !DILocation(line: 109, column: 10, scope: !10086)
!10103 = !DILocation(line: 109, column: 30, scope: !10086)
!10104 = !DILocation(line: 109, column: 20, scope: !10086)
!10105 = !DILocalVariable(name: "baselen_max", scope: !10086, file: !683, line: 110, type: !55)
!10106 = !DILocation(line: 110, column: 10, scope: !10086)
!10107 = !DILocation(line: 112, column: 49, scope: !10108)
!10108 = distinct !DILexicalBlock(scope: !10086, file: !683, line: 112, column: 7)
!10109 = !DILocation(line: 112, column: 47, scope: !10108)
!10110 = !DILocation(line: 112, column: 7, scope: !10086)
!10111 = !DILocation(line: 115, column: 12, scope: !10112)
!10112 = distinct !DILexicalBlock(scope: !10113, file: !683, line: 115, column: 11)
!10113 = distinct !DILexicalBlock(scope: !10108, file: !683, line: 113, column: 5)
!10114 = !DILocation(line: 115, column: 11, scope: !10112)
!10115 = !DILocation(line: 115, column: 21, scope: !10112)
!10116 = !DILocation(line: 115, column: 11, scope: !10113)
!10117 = !DILocalVariable(name: "name_max", scope: !10118, file: !683, line: 117, type: !31)
!10118 = distinct !DILexicalBlock(scope: !10112, file: !683, line: 116, column: 9)
!10119 = !DILocation(line: 117, column: 16, scope: !10118)
!10120 = !DILocation(line: 118, column: 15, scope: !10121)
!10121 = distinct !DILexicalBlock(scope: !10118, file: !683, line: 118, column: 15)
!10122 = !DILocation(line: 118, column: 22, scope: !10121)
!10123 = !DILocation(line: 118, column: 15, scope: !10118)
!10124 = !DILocalVariable(name: "tmp", scope: !10125, file: !683, line: 123, type: !709)
!10125 = distinct !DILexicalBlock(scope: !10121, file: !683, line: 119, column: 13)
!10126 = !DILocation(line: 123, column: 20, scope: !10125)
!10127 = !DILocation(line: 124, column: 15, scope: !10125)
!10128 = !DILocation(line: 124, column: 28, scope: !10125)
!10129 = !DILocation(line: 125, column: 23, scope: !10125)
!10130 = !DILocation(line: 125, column: 15, scope: !10125)
!10131 = !DILocation(line: 126, column: 15, scope: !10125)
!10132 = !DILocation(line: 126, column: 21, scope: !10125)
!10133 = !DILocation(line: 127, column: 36, scope: !10125)
!10134 = !DILocation(line: 127, column: 26, scope: !10125)
!10135 = !DILocation(line: 127, column: 24, scope: !10125)
!10136 = !DILocation(line: 128, column: 28, scope: !10125)
!10137 = !DILocation(line: 128, column: 27, scope: !10125)
!10138 = !DILocation(line: 128, column: 24, scope: !10125)
!10139 = !DILocation(line: 129, column: 23, scope: !10125)
!10140 = !DILocation(line: 129, column: 15, scope: !10125)
!10141 = !DILocation(line: 130, column: 13, scope: !10125)
!10142 = !DILocation(line: 133, column: 15, scope: !10143)
!10143 = distinct !DILexicalBlock(scope: !10121, file: !683, line: 132, column: 13)
!10144 = !DILocation(line: 133, column: 21, scope: !10143)
!10145 = !DILocation(line: 134, column: 37, scope: !10143)
!10146 = !DILocation(line: 134, column: 26, scope: !10143)
!10147 = !DILocation(line: 134, column: 24, scope: !10143)
!10148 = !DILocation(line: 135, column: 28, scope: !10143)
!10149 = !DILocation(line: 135, column: 27, scope: !10143)
!10150 = !DILocation(line: 135, column: 24, scope: !10143)
!10151 = !DILocation(line: 138, column: 29, scope: !10118)
!10152 = !DILocation(line: 138, column: 26, scope: !10118)
!10153 = !DILocation(line: 138, column: 38, scope: !10118)
!10154 = !DILocation(line: 138, column: 41, scope: !10118)
!10155 = !DILocation(line: 138, column: 50, scope: !10118)
!10156 = !DILocation(line: 138, column: 24, scope: !10118)
!10157 = !DILocation(line: 138, column: 64, scope: !10118)
!10158 = !DILocation(line: 139, column: 26, scope: !10118)
!10159 = !DILocation(line: 139, column: 35, scope: !10118)
!10160 = !DILocation(line: 138, column: 12, scope: !10118)
!10161 = !DILocation(line: 138, column: 21, scope: !10118)
!10162 = !DILocation(line: 140, column: 9, scope: !10118)
!10163 = !DILocation(line: 142, column: 22, scope: !10113)
!10164 = !DILocation(line: 142, column: 21, scope: !10113)
!10165 = !DILocation(line: 142, column: 19, scope: !10113)
!10166 = !DILocation(line: 143, column: 5, scope: !10113)
!10167 = !DILocation(line: 160, column: 7, scope: !10168)
!10168 = distinct !DILexicalBlock(scope: !10086, file: !683, line: 160, column: 7)
!10169 = !DILocation(line: 160, column: 21, scope: !10168)
!10170 = !DILocation(line: 160, column: 19, scope: !10168)
!10171 = !DILocation(line: 160, column: 7, scope: !10086)
!10172 = !DILocation(line: 162, column: 17, scope: !10173)
!10173 = distinct !DILexicalBlock(scope: !10168, file: !683, line: 161, column: 5)
!10174 = !DILocation(line: 162, column: 24, scope: !10173)
!10175 = !DILocation(line: 162, column: 22, scope: !10173)
!10176 = !DILocation(line: 162, column: 34, scope: !10173)
!10177 = !DILocation(line: 162, column: 32, scope: !10173)
!10178 = !DILocation(line: 162, column: 15, scope: !10173)
!10179 = !DILocation(line: 163, column: 11, scope: !10180)
!10180 = distinct !DILexicalBlock(scope: !10173, file: !683, line: 163, column: 11)
!10181 = !DILocation(line: 163, column: 26, scope: !10180)
!10182 = !DILocation(line: 163, column: 23, scope: !10180)
!10183 = !DILocation(line: 163, column: 11, scope: !10173)
!10184 = !DILocation(line: 164, column: 19, scope: !10180)
!10185 = !DILocation(line: 164, column: 31, scope: !10180)
!10186 = !DILocation(line: 164, column: 17, scope: !10180)
!10187 = !DILocation(line: 164, column: 9, scope: !10180)
!10188 = !DILocation(line: 165, column: 23, scope: !10173)
!10189 = !DILocation(line: 165, column: 7, scope: !10173)
!10190 = !DILocation(line: 165, column: 12, scope: !10173)
!10191 = !DILocation(line: 165, column: 21, scope: !10173)
!10192 = !DILocation(line: 166, column: 7, scope: !10173)
!10193 = !DILocation(line: 166, column: 12, scope: !10173)
!10194 = !DILocation(line: 166, column: 20, scope: !10173)
!10195 = !DILocation(line: 166, column: 25, scope: !10173)
!10196 = !DILocation(line: 167, column: 5, scope: !10173)
!10197 = !DILocation(line: 168, column: 1, scope: !10086)
!10198 = distinct !DISubprogram(name: "backup_file_rename", scope: !10199, file: !10199, line: 28, type: !720, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1524, retainedNodes: !209)
!10199 = !DIFile(filename: "lib/backup-rename.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10200 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !10198, file: !10199, line: 28, type: !7)
!10201 = !DILocation(line: 28, column: 25, scope: !10198)
!10202 = !DILocalVariable(name: "file", arg: 2, scope: !10198, file: !10199, line: 28, type: !180)
!10203 = !DILocation(line: 28, column: 45, scope: !10198)
!10204 = !DILocalVariable(name: "backup_type", arg: 3, scope: !10198, file: !10199, line: 28, type: !68)
!10205 = !DILocation(line: 28, column: 68, scope: !10198)
!10206 = !DILocation(line: 30, column: 31, scope: !10198)
!10207 = !DILocation(line: 30, column: 39, scope: !10198)
!10208 = !DILocation(line: 30, column: 45, scope: !10198)
!10209 = !DILocation(line: 30, column: 10, scope: !10198)
!10210 = !DILocation(line: 30, column: 3, scope: !10198)
!10211 = distinct !DISubprogram(name: "find_backup_file_name", scope: !736, file: !736, line: 33, type: !720, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !716, retainedNodes: !209)
!10212 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !10211, file: !736, line: 33, type: !7)
!10213 = !DILocation(line: 33, column: 28, scope: !10211)
!10214 = !DILocalVariable(name: "file", arg: 2, scope: !10211, file: !736, line: 33, type: !180)
!10215 = !DILocation(line: 33, column: 48, scope: !10211)
!10216 = !DILocalVariable(name: "backup_type", arg: 3, scope: !10211, file: !736, line: 34, type: !68)
!10217 = !DILocation(line: 34, column: 41, scope: !10211)
!10218 = !DILocalVariable(name: "result", scope: !10211, file: !736, line: 36, type: !9)
!10219 = !DILocation(line: 36, column: 9, scope: !10211)
!10220 = !DILocation(line: 36, column: 39, scope: !10211)
!10221 = !DILocation(line: 36, column: 47, scope: !10211)
!10222 = !DILocation(line: 36, column: 53, scope: !10211)
!10223 = !DILocation(line: 36, column: 18, scope: !10211)
!10224 = !DILocation(line: 37, column: 8, scope: !10225)
!10225 = distinct !DILexicalBlock(scope: !10211, file: !736, line: 37, column: 7)
!10226 = !DILocation(line: 37, column: 7, scope: !10211)
!10227 = !DILocation(line: 38, column: 5, scope: !10225)
!10228 = !DILocation(line: 39, column: 10, scope: !10211)
!10229 = !DILocation(line: 39, column: 3, scope: !10211)
!10230 = distinct !DISubprogram(name: "get_version", scope: !736, file: !736, line: 71, type: !722, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !716, retainedNodes: !209)
!10231 = !DILocalVariable(name: "context", arg: 1, scope: !10230, file: !736, line: 71, type: !180)
!10232 = !DILocation(line: 71, column: 26, scope: !10230)
!10233 = !DILocalVariable(name: "version", arg: 2, scope: !10230, file: !736, line: 71, type: !180)
!10234 = !DILocation(line: 71, column: 47, scope: !10230)
!10235 = !DILocation(line: 73, column: 7, scope: !10236)
!10236 = distinct !DILexicalBlock(scope: !10230, file: !736, line: 73, column: 7)
!10237 = !DILocation(line: 73, column: 15, scope: !10236)
!10238 = !DILocation(line: 73, column: 20, scope: !10236)
!10239 = !DILocation(line: 73, column: 24, scope: !10236)
!10240 = !DILocation(line: 73, column: 23, scope: !10236)
!10241 = !DILocation(line: 73, column: 32, scope: !10236)
!10242 = !DILocation(line: 73, column: 7, scope: !10230)
!10243 = !DILocation(line: 74, column: 5, scope: !10236)
!10244 = !DILocation(line: 76, column: 12, scope: !10236)
!10245 = !DILocation(line: 76, column: 5, scope: !10236)
!10246 = !DILocation(line: 77, column: 1, scope: !10230)
!10247 = distinct !DISubprogram(name: "xget_version", scope: !736, file: !736, line: 87, type: !722, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !716, retainedNodes: !209)
!10248 = !DILocalVariable(name: "context", arg: 1, scope: !10247, file: !736, line: 87, type: !180)
!10249 = !DILocation(line: 87, column: 27, scope: !10247)
!10250 = !DILocalVariable(name: "version", arg: 2, scope: !10247, file: !736, line: 87, type: !180)
!10251 = !DILocation(line: 87, column: 48, scope: !10247)
!10252 = !DILocation(line: 89, column: 7, scope: !10253)
!10253 = distinct !DILexicalBlock(scope: !10247, file: !736, line: 89, column: 7)
!10254 = !DILocation(line: 89, column: 15, scope: !10253)
!10255 = !DILocation(line: 89, column: 19, scope: !10253)
!10256 = !DILocation(line: 89, column: 18, scope: !10253)
!10257 = !DILocation(line: 89, column: 7, scope: !10247)
!10258 = !DILocation(line: 90, column: 25, scope: !10253)
!10259 = !DILocation(line: 90, column: 34, scope: !10253)
!10260 = !DILocation(line: 90, column: 12, scope: !10253)
!10261 = !DILocation(line: 90, column: 5, scope: !10253)
!10262 = !DILocation(line: 92, column: 45, scope: !10253)
!10263 = !DILocation(line: 92, column: 12, scope: !10253)
!10264 = !DILocation(line: 92, column: 5, scope: !10253)
!10265 = !DILocation(line: 93, column: 1, scope: !10247)
!10266 = distinct !DISubprogram(name: "buffer_lcm", scope: !10267, file: !10267, line: 28, type: !1530, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1527, retainedNodes: !209)
!10267 = !DIFile(filename: "lib/buffer-lcm.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10268 = !DILocalVariable(name: "a", arg: 1, scope: !10266, file: !10267, line: 28, type: !55)
!10269 = !DILocation(line: 28, column: 20, scope: !10266)
!10270 = !DILocalVariable(name: "b", arg: 2, scope: !10266, file: !10267, line: 28, type: !55)
!10271 = !DILocation(line: 28, column: 30, scope: !10266)
!10272 = !DILocalVariable(name: "lcm_max", arg: 3, scope: !10266, file: !10267, line: 28, type: !55)
!10273 = !DILocation(line: 28, column: 40, scope: !10266)
!10274 = !DILocalVariable(name: "size", scope: !10266, file: !10267, line: 30, type: !55)
!10275 = !DILocation(line: 30, column: 10, scope: !10266)
!10276 = !DILocation(line: 33, column: 8, scope: !10277)
!10277 = distinct !DILexicalBlock(scope: !10266, file: !10267, line: 33, column: 7)
!10278 = !DILocation(line: 33, column: 7, scope: !10266)
!10279 = !DILocation(line: 34, column: 12, scope: !10277)
!10280 = !DILocation(line: 34, column: 16, scope: !10277)
!10281 = !DILocation(line: 34, column: 10, scope: !10277)
!10282 = !DILocation(line: 34, column: 5, scope: !10277)
!10283 = !DILocation(line: 37, column: 11, scope: !10284)
!10284 = distinct !DILexicalBlock(scope: !10285, file: !10267, line: 37, column: 11)
!10285 = distinct !DILexicalBlock(scope: !10277, file: !10267, line: 36, column: 5)
!10286 = !DILocation(line: 37, column: 11, scope: !10285)
!10287 = !DILocalVariable(name: "lcm", scope: !10288, file: !10267, line: 42, type: !55)
!10288 = distinct !DILexicalBlock(scope: !10284, file: !10267, line: 38, column: 9)
!10289 = !DILocation(line: 42, column: 18, scope: !10288)
!10290 = !DILocalVariable(name: "m", scope: !10288, file: !10267, line: 42, type: !55)
!10291 = !DILocation(line: 42, column: 23, scope: !10288)
!10292 = !DILocalVariable(name: "n", scope: !10288, file: !10267, line: 42, type: !55)
!10293 = !DILocation(line: 42, column: 26, scope: !10288)
!10294 = !DILocalVariable(name: "q", scope: !10288, file: !10267, line: 42, type: !55)
!10295 = !DILocation(line: 42, column: 29, scope: !10288)
!10296 = !DILocalVariable(name: "r", scope: !10288, file: !10267, line: 42, type: !55)
!10297 = !DILocation(line: 42, column: 32, scope: !10288)
!10298 = !DILocation(line: 45, column: 20, scope: !10299)
!10299 = distinct !DILexicalBlock(scope: !10288, file: !10267, line: 45, column: 11)
!10300 = !DILocation(line: 45, column: 18, scope: !10299)
!10301 = !DILocation(line: 45, column: 27, scope: !10299)
!10302 = !DILocation(line: 45, column: 25, scope: !10299)
!10303 = !DILocation(line: 45, column: 16, scope: !10299)
!10304 = !DILocation(line: 45, column: 36, scope: !10305)
!10305 = distinct !DILexicalBlock(scope: !10299, file: !10267, line: 45, column: 11)
!10306 = !DILocation(line: 45, column: 40, scope: !10305)
!10307 = !DILocation(line: 45, column: 38, scope: !10305)
!10308 = !DILocation(line: 45, column: 34, scope: !10305)
!10309 = !DILocation(line: 45, column: 43, scope: !10305)
!10310 = !DILocation(line: 45, column: 11, scope: !10299)
!10311 = !DILocation(line: 46, column: 13, scope: !10305)
!10312 = !DILocation(line: 45, column: 54, scope: !10305)
!10313 = !DILocation(line: 45, column: 52, scope: !10305)
!10314 = !DILocation(line: 45, column: 61, scope: !10305)
!10315 = !DILocation(line: 45, column: 59, scope: !10305)
!10316 = !DILocation(line: 45, column: 11, scope: !10305)
!10317 = distinct !{!10317, !10310, !10318}
!10318 = !DILocation(line: 46, column: 13, scope: !10299)
!10319 = !DILocation(line: 49, column: 15, scope: !10288)
!10320 = !DILocation(line: 49, column: 19, scope: !10288)
!10321 = !DILocation(line: 49, column: 17, scope: !10288)
!10322 = !DILocation(line: 49, column: 13, scope: !10288)
!10323 = !DILocation(line: 50, column: 17, scope: !10288)
!10324 = !DILocation(line: 50, column: 21, scope: !10288)
!10325 = !DILocation(line: 50, column: 19, scope: !10288)
!10326 = !DILocation(line: 50, column: 15, scope: !10288)
!10327 = !DILocation(line: 51, column: 15, scope: !10328)
!10328 = distinct !DILexicalBlock(scope: !10288, file: !10267, line: 51, column: 15)
!10329 = !DILocation(line: 51, column: 22, scope: !10328)
!10330 = !DILocation(line: 51, column: 19, scope: !10328)
!10331 = !DILocation(line: 51, column: 30, scope: !10328)
!10332 = !DILocation(line: 51, column: 33, scope: !10328)
!10333 = !DILocation(line: 51, column: 39, scope: !10328)
!10334 = !DILocation(line: 51, column: 37, scope: !10328)
!10335 = !DILocation(line: 51, column: 44, scope: !10328)
!10336 = !DILocation(line: 51, column: 41, scope: !10328)
!10337 = !DILocation(line: 51, column: 15, scope: !10288)
!10338 = !DILocation(line: 52, column: 20, scope: !10328)
!10339 = !DILocation(line: 52, column: 13, scope: !10328)
!10340 = !DILocation(line: 53, column: 9, scope: !10288)
!10341 = !DILocation(line: 55, column: 14, scope: !10285)
!10342 = !DILocation(line: 55, column: 12, scope: !10285)
!10343 = !DILocation(line: 58, column: 10, scope: !10266)
!10344 = !DILocation(line: 58, column: 18, scope: !10266)
!10345 = !DILocation(line: 58, column: 15, scope: !10266)
!10346 = !DILocation(line: 58, column: 28, scope: !10266)
!10347 = !DILocation(line: 58, column: 35, scope: !10266)
!10348 = !DILocation(line: 58, column: 3, scope: !10266)
!10349 = !DILocation(line: 59, column: 1, scope: !10266)
!10350 = distinct !DISubprogram(name: "close_stdin_set_file_name", scope: !778, file: !778, line: 43, type: !202, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !739, retainedNodes: !209)
!10351 = !DILocalVariable(name: "file", arg: 1, scope: !10350, file: !778, line: 43, type: !180)
!10352 = !DILocation(line: 43, column: 40, scope: !10350)
!10353 = !DILocation(line: 45, column: 15, scope: !10350)
!10354 = !DILocation(line: 45, column: 13, scope: !10350)
!10355 = !DILocation(line: 46, column: 1, scope: !10350)
!10356 = distinct !DISubprogram(name: "close_stdin", scope: !778, file: !778, line: 79, type: !200, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !739, retainedNodes: !209)
!10357 = !DILocalVariable(name: "fail", scope: !10356, file: !778, line: 81, type: !142)
!10358 = !DILocation(line: 81, column: 8, scope: !10356)
!10359 = !DILocation(line: 87, column: 19, scope: !10360)
!10360 = distinct !DILexicalBlock(scope: !10356, file: !778, line: 87, column: 7)
!10361 = !DILocation(line: 87, column: 7, scope: !10360)
!10362 = !DILocation(line: 87, column: 26, scope: !10360)
!10363 = !DILocation(line: 87, column: 7, scope: !10356)
!10364 = !DILocation(line: 91, column: 19, scope: !10365)
!10365 = distinct !DILexicalBlock(scope: !10366, file: !778, line: 91, column: 11)
!10366 = distinct !DILexicalBlock(scope: !10360, file: !778, line: 88, column: 5)
!10367 = !DILocation(line: 91, column: 11, scope: !10365)
!10368 = !DILocation(line: 91, column: 39, scope: !10365)
!10369 = !DILocation(line: 91, column: 44, scope: !10365)
!10370 = !DILocation(line: 91, column: 55, scope: !10365)
!10371 = !DILocation(line: 91, column: 47, scope: !10365)
!10372 = !DILocation(line: 91, column: 62, scope: !10365)
!10373 = !DILocation(line: 91, column: 11, scope: !10366)
!10374 = !DILocation(line: 92, column: 14, scope: !10365)
!10375 = !DILocation(line: 92, column: 9, scope: !10365)
!10376 = !DILocation(line: 93, column: 5, scope: !10366)
!10377 = !DILocation(line: 94, column: 21, scope: !10378)
!10378 = distinct !DILexicalBlock(scope: !10356, file: !778, line: 94, column: 7)
!10379 = !DILocation(line: 94, column: 7, scope: !10378)
!10380 = !DILocation(line: 94, column: 28, scope: !10378)
!10381 = !DILocation(line: 94, column: 7, scope: !10356)
!10382 = !DILocation(line: 95, column: 10, scope: !10378)
!10383 = !DILocation(line: 95, column: 5, scope: !10378)
!10384 = !DILocation(line: 96, column: 7, scope: !10385)
!10385 = distinct !DILexicalBlock(scope: !10356, file: !778, line: 96, column: 7)
!10386 = !DILocation(line: 96, column: 7, scope: !10356)
!10387 = !DILocalVariable(name: "close_error", scope: !10388, file: !778, line: 100, type: !180)
!10388 = distinct !DILexicalBlock(scope: !10385, file: !778, line: 97, column: 5)
!10389 = !DILocation(line: 100, column: 19, scope: !10388)
!10390 = !DILocation(line: 100, column: 33, scope: !10388)
!10391 = !DILocation(line: 101, column: 11, scope: !10392)
!10392 = distinct !DILexicalBlock(scope: !10388, file: !778, line: 101, column: 11)
!10393 = !DILocation(line: 101, column: 11, scope: !10388)
!10394 = !DILocation(line: 102, column: 19, scope: !10392)
!10395 = !DILocation(line: 102, column: 52, scope: !10392)
!10396 = !DILocation(line: 102, column: 36, scope: !10392)
!10397 = !DILocation(line: 103, column: 16, scope: !10392)
!10398 = !DILocation(line: 102, column: 9, scope: !10392)
!10399 = !DILocation(line: 105, column: 19, scope: !10392)
!10400 = !DILocation(line: 105, column: 32, scope: !10392)
!10401 = !DILocation(line: 105, column: 9, scope: !10392)
!10402 = !DILocation(line: 106, column: 5, scope: !10388)
!10403 = !DILocation(line: 108, column: 3, scope: !10356)
!10404 = !DILocation(line: 110, column: 7, scope: !10405)
!10405 = distinct !DILexicalBlock(scope: !10356, file: !778, line: 110, column: 7)
!10406 = !DILocation(line: 110, column: 7, scope: !10356)
!10407 = !DILocation(line: 111, column: 12, scope: !10405)
!10408 = !DILocation(line: 111, column: 5, scope: !10405)
!10409 = !DILocation(line: 112, column: 1, scope: !10356)
!10410 = distinct !DISubprogram(name: "close_stdout_set_file_name", scope: !823, file: !823, line: 51, type: !202, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !781, retainedNodes: !209)
!10411 = !DILocalVariable(name: "file", arg: 1, scope: !10410, file: !823, line: 51, type: !180)
!10412 = !DILocation(line: 51, column: 41, scope: !10410)
!10413 = !DILocation(line: 53, column: 15, scope: !10410)
!10414 = !DILocation(line: 53, column: 13, scope: !10410)
!10415 = !DILocation(line: 54, column: 1, scope: !10410)
!10416 = distinct !DISubprogram(name: "close_stdout_set_ignore_EPIPE", scope: !823, file: !823, line: 88, type: !784, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !781, retainedNodes: !209)
!10417 = !DILocalVariable(name: "ignore", arg: 1, scope: !10416, file: !823, line: 88, type: !142)
!10418 = !DILocation(line: 88, column: 37, scope: !10416)
!10419 = !DILocation(line: 90, column: 18, scope: !10416)
!10420 = !DILocation(line: 90, column: 16, scope: !10416)
!10421 = !DILocation(line: 91, column: 1, scope: !10416)
!10422 = distinct !DISubprogram(name: "close_stdout", scope: !823, file: !823, line: 117, type: !200, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !781, retainedNodes: !209)
!10423 = !DILocation(line: 119, column: 21, scope: !10424)
!10424 = distinct !DILexicalBlock(scope: !10422, file: !823, line: 119, column: 7)
!10425 = !DILocation(line: 119, column: 7, scope: !10424)
!10426 = !DILocation(line: 119, column: 29, scope: !10424)
!10427 = !DILocation(line: 120, column: 7, scope: !10424)
!10428 = !DILocation(line: 120, column: 12, scope: !10424)
!10429 = !DILocation(line: 120, column: 25, scope: !10424)
!10430 = !DILocation(line: 120, column: 28, scope: !10424)
!10431 = !DILocation(line: 120, column: 34, scope: !10424)
!10432 = !DILocation(line: 119, column: 7, scope: !10422)
!10433 = !DILocalVariable(name: "write_error", scope: !10434, file: !823, line: 122, type: !180)
!10434 = distinct !DILexicalBlock(scope: !10424, file: !823, line: 121, column: 5)
!10435 = !DILocation(line: 122, column: 19, scope: !10434)
!10436 = !DILocation(line: 122, column: 33, scope: !10434)
!10437 = !DILocation(line: 123, column: 11, scope: !10438)
!10438 = distinct !DILexicalBlock(scope: !10434, file: !823, line: 123, column: 11)
!10439 = !DILocation(line: 123, column: 11, scope: !10434)
!10440 = !DILocation(line: 124, column: 19, scope: !10438)
!10441 = !DILocation(line: 124, column: 52, scope: !10438)
!10442 = !DILocation(line: 124, column: 36, scope: !10438)
!10443 = !DILocation(line: 125, column: 16, scope: !10438)
!10444 = !DILocation(line: 124, column: 9, scope: !10438)
!10445 = !DILocation(line: 127, column: 19, scope: !10438)
!10446 = !DILocation(line: 127, column: 32, scope: !10438)
!10447 = !DILocation(line: 127, column: 9, scope: !10438)
!10448 = !DILocation(line: 129, column: 14, scope: !10434)
!10449 = !DILocation(line: 129, column: 7, scope: !10434)
!10450 = !DILocation(line: 134, column: 42, scope: !10451)
!10451 = distinct !DILexicalBlock(scope: !10422, file: !823, line: 134, column: 7)
!10452 = !DILocation(line: 134, column: 28, scope: !10451)
!10453 = !DILocation(line: 134, column: 50, scope: !10451)
!10454 = !DILocation(line: 134, column: 7, scope: !10422)
!10455 = !DILocation(line: 135, column: 12, scope: !10451)
!10456 = !DILocation(line: 135, column: 5, scope: !10451)
!10457 = !DILocation(line: 136, column: 1, scope: !10422)
!10458 = distinct !DISubprogram(name: "dir_name", scope: !10459, file: !10459, line: 32, type: !218, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1532, retainedNodes: !209)
!10459 = !DIFile(filename: "lib/dirname.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10460 = !DILocalVariable(name: "file", arg: 1, scope: !10458, file: !10459, line: 32, type: !180)
!10461 = !DILocation(line: 32, column: 23, scope: !10458)
!10462 = !DILocalVariable(name: "result", scope: !10458, file: !10459, line: 34, type: !9)
!10463 = !DILocation(line: 34, column: 9, scope: !10458)
!10464 = !DILocation(line: 34, column: 29, scope: !10458)
!10465 = !DILocation(line: 34, column: 18, scope: !10458)
!10466 = !DILocation(line: 35, column: 8, scope: !10467)
!10467 = distinct !DILexicalBlock(scope: !10458, file: !10459, line: 35, column: 7)
!10468 = !DILocation(line: 35, column: 7, scope: !10458)
!10469 = !DILocation(line: 36, column: 5, scope: !10467)
!10470 = !DILocation(line: 37, column: 10, scope: !10458)
!10471 = !DILocation(line: 37, column: 3, scope: !10458)
!10472 = distinct !DISubprogram(name: "dir_len", scope: !10473, file: !10473, line: 32, type: !1538, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1535, retainedNodes: !209)
!10473 = !DIFile(filename: "lib/dirname-lgpl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10474 = !DILocalVariable(name: "file", arg: 1, scope: !10472, file: !10473, line: 32, type: !180)
!10475 = !DILocation(line: 32, column: 22, scope: !10472)
!10476 = !DILocalVariable(name: "prefix_length", scope: !10472, file: !10473, line: 34, type: !55)
!10477 = !DILocation(line: 34, column: 10, scope: !10472)
!10478 = !DILocalVariable(name: "length", scope: !10472, file: !10473, line: 35, type: !55)
!10479 = !DILocation(line: 35, column: 10, scope: !10472)
!10480 = !DILocation(line: 38, column: 21, scope: !10472)
!10481 = !DILocation(line: 38, column: 35, scope: !10472)
!10482 = !DILocation(line: 41, column: 24, scope: !10472)
!10483 = !DILocation(line: 38, column: 20, scope: !10472)
!10484 = !DILocation(line: 38, column: 17, scope: !10472)
!10485 = !DILocation(line: 48, column: 33, scope: !10486)
!10486 = distinct !DILexicalBlock(scope: !10472, file: !10473, line: 48, column: 3)
!10487 = !DILocation(line: 48, column: 17, scope: !10486)
!10488 = !DILocation(line: 48, column: 41, scope: !10486)
!10489 = !DILocation(line: 48, column: 39, scope: !10486)
!10490 = !DILocation(line: 48, column: 15, scope: !10486)
!10491 = !DILocation(line: 48, column: 8, scope: !10486)
!10492 = !DILocation(line: 49, column: 8, scope: !10493)
!10493 = distinct !DILexicalBlock(scope: !10486, file: !10473, line: 48, column: 3)
!10494 = !DILocation(line: 49, column: 24, scope: !10493)
!10495 = !DILocation(line: 49, column: 22, scope: !10493)
!10496 = !DILocation(line: 48, column: 3, scope: !10486)
!10497 = !DILocation(line: 50, column: 11, scope: !10498)
!10498 = distinct !DILexicalBlock(scope: !10493, file: !10473, line: 50, column: 9)
!10499 = !DILocation(line: 50, column: 9, scope: !10493)
!10500 = !DILocation(line: 51, column: 7, scope: !10498)
!10501 = !DILocation(line: 49, column: 38, scope: !10493)
!10502 = !DILocation(line: 48, column: 3, scope: !10493)
!10503 = distinct !{!10503, !10496, !10504}
!10504 = !DILocation(line: 51, column: 7, scope: !10486)
!10505 = !DILocation(line: 52, column: 10, scope: !10472)
!10506 = !DILocation(line: 52, column: 3, scope: !10472)
!10507 = distinct !DISubprogram(name: "mdir_name", scope: !10473, file: !10473, line: 71, type: !218, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1535, retainedNodes: !209)
!10508 = !DILocalVariable(name: "file", arg: 1, scope: !10507, file: !10473, line: 71, type: !180)
!10509 = !DILocation(line: 71, column: 24, scope: !10507)
!10510 = !DILocalVariable(name: "length", scope: !10507, file: !10473, line: 73, type: !55)
!10511 = !DILocation(line: 73, column: 10, scope: !10507)
!10512 = !DILocation(line: 73, column: 28, scope: !10507)
!10513 = !DILocation(line: 73, column: 19, scope: !10507)
!10514 = !DILocalVariable(name: "append_dot", scope: !10507, file: !10473, line: 74, type: !142)
!10515 = !DILocation(line: 74, column: 8, scope: !10507)
!10516 = !DILocation(line: 74, column: 22, scope: !10507)
!10517 = !DILocation(line: 74, column: 29, scope: !10507)
!10518 = !DILocation(line: 75, column: 22, scope: !10507)
!10519 = !DILocalVariable(name: "dir", scope: !10507, file: !10473, line: 78, type: !9)
!10520 = !DILocation(line: 78, column: 9, scope: !10507)
!10521 = !DILocation(line: 78, column: 23, scope: !10507)
!10522 = !DILocation(line: 78, column: 32, scope: !10507)
!10523 = !DILocation(line: 78, column: 30, scope: !10507)
!10524 = !DILocation(line: 78, column: 43, scope: !10507)
!10525 = !DILocation(line: 78, column: 15, scope: !10507)
!10526 = !DILocation(line: 79, column: 8, scope: !10527)
!10527 = distinct !DILexicalBlock(scope: !10507, file: !10473, line: 79, column: 7)
!10528 = !DILocation(line: 79, column: 7, scope: !10507)
!10529 = !DILocation(line: 80, column: 5, scope: !10527)
!10530 = !DILocation(line: 81, column: 11, scope: !10507)
!10531 = !DILocation(line: 81, column: 16, scope: !10507)
!10532 = !DILocation(line: 81, column: 22, scope: !10507)
!10533 = !DILocation(line: 81, column: 3, scope: !10507)
!10534 = !DILocation(line: 82, column: 7, scope: !10535)
!10535 = distinct !DILexicalBlock(scope: !10507, file: !10473, line: 82, column: 7)
!10536 = !DILocation(line: 82, column: 7, scope: !10507)
!10537 = !DILocation(line: 83, column: 5, scope: !10535)
!10538 = !DILocation(line: 83, column: 15, scope: !10535)
!10539 = !DILocation(line: 83, column: 19, scope: !10535)
!10540 = !DILocation(line: 84, column: 3, scope: !10507)
!10541 = !DILocation(line: 84, column: 7, scope: !10507)
!10542 = !DILocation(line: 84, column: 15, scope: !10507)
!10543 = !DILocation(line: 85, column: 10, scope: !10507)
!10544 = !DILocation(line: 85, column: 3, scope: !10507)
!10545 = !DILocation(line: 86, column: 1, scope: !10507)
!10546 = distinct !DISubprogram(name: "last_component", scope: !10547, file: !10547, line: 30, type: !218, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1540, retainedNodes: !209)
!10547 = !DIFile(filename: "lib/basename-lgpl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10548 = !DILocalVariable(name: "name", arg: 1, scope: !10546, file: !10547, line: 30, type: !180)
!10549 = !DILocation(line: 30, column: 29, scope: !10546)
!10550 = !DILocalVariable(name: "base", scope: !10546, file: !10547, line: 32, type: !180)
!10551 = !DILocation(line: 32, column: 15, scope: !10546)
!10552 = !DILocation(line: 32, column: 22, scope: !10546)
!10553 = !DILocation(line: 32, column: 27, scope: !10546)
!10554 = !DILocalVariable(name: "p", scope: !10546, file: !10547, line: 33, type: !180)
!10555 = !DILocation(line: 33, column: 15, scope: !10546)
!10556 = !DILocalVariable(name: "saw_slash", scope: !10546, file: !10547, line: 34, type: !142)
!10557 = !DILocation(line: 34, column: 8, scope: !10546)
!10558 = !DILocation(line: 36, column: 3, scope: !10546)
!10559 = !DILocation(line: 36, column: 10, scope: !10546)
!10560 = !DILocation(line: 37, column: 9, scope: !10546)
!10561 = distinct !{!10561, !10558, !10560}
!10562 = !DILocation(line: 39, column: 12, scope: !10563)
!10563 = distinct !DILexicalBlock(scope: !10546, file: !10547, line: 39, column: 3)
!10564 = !DILocation(line: 39, column: 10, scope: !10563)
!10565 = !DILocation(line: 39, column: 8, scope: !10563)
!10566 = !DILocation(line: 39, column: 19, scope: !10567)
!10567 = distinct !DILexicalBlock(scope: !10563, file: !10547, line: 39, column: 3)
!10568 = !DILocation(line: 39, column: 18, scope: !10567)
!10569 = !DILocation(line: 39, column: 3, scope: !10563)
!10570 = !DILocation(line: 41, column: 11, scope: !10571)
!10571 = distinct !DILexicalBlock(scope: !10572, file: !10547, line: 41, column: 11)
!10572 = distinct !DILexicalBlock(scope: !10567, file: !10547, line: 40, column: 5)
!10573 = !DILocation(line: 41, column: 11, scope: !10572)
!10574 = !DILocation(line: 42, column: 19, scope: !10571)
!10575 = !DILocation(line: 42, column: 9, scope: !10571)
!10576 = !DILocation(line: 43, column: 16, scope: !10577)
!10577 = distinct !DILexicalBlock(scope: !10571, file: !10547, line: 43, column: 16)
!10578 = !DILocation(line: 43, column: 16, scope: !10571)
!10579 = !DILocation(line: 45, column: 18, scope: !10580)
!10580 = distinct !DILexicalBlock(scope: !10577, file: !10547, line: 44, column: 9)
!10581 = !DILocation(line: 45, column: 16, scope: !10580)
!10582 = !DILocation(line: 46, column: 21, scope: !10580)
!10583 = !DILocation(line: 47, column: 9, scope: !10580)
!10584 = !DILocation(line: 48, column: 5, scope: !10572)
!10585 = !DILocation(line: 39, column: 23, scope: !10567)
!10586 = !DILocation(line: 39, column: 3, scope: !10567)
!10587 = distinct !{!10587, !10569, !10588}
!10588 = !DILocation(line: 48, column: 5, scope: !10563)
!10589 = !DILocation(line: 50, column: 19, scope: !10546)
!10590 = !DILocation(line: 50, column: 3, scope: !10546)
!10591 = distinct !DISubprogram(name: "base_len", scope: !10547, file: !10547, line: 58, type: !1538, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1540, retainedNodes: !209)
!10592 = !DILocalVariable(name: "name", arg: 1, scope: !10591, file: !10547, line: 58, type: !180)
!10593 = !DILocation(line: 58, column: 23, scope: !10591)
!10594 = !DILocalVariable(name: "len", scope: !10591, file: !10547, line: 60, type: !55)
!10595 = !DILocation(line: 60, column: 10, scope: !10591)
!10596 = !DILocalVariable(name: "prefix_len", scope: !10591, file: !10547, line: 61, type: !55)
!10597 = !DILocation(line: 61, column: 10, scope: !10591)
!10598 = !DILocation(line: 63, column: 22, scope: !10599)
!10599 = distinct !DILexicalBlock(scope: !10591, file: !10547, line: 63, column: 3)
!10600 = !DILocation(line: 63, column: 14, scope: !10599)
!10601 = !DILocation(line: 63, column: 12, scope: !10599)
!10602 = !DILocation(line: 63, column: 8, scope: !10599)
!10603 = !DILocation(line: 63, column: 34, scope: !10604)
!10604 = distinct !DILexicalBlock(scope: !10599, file: !10547, line: 63, column: 3)
!10605 = !DILocation(line: 63, column: 32, scope: !10604)
!10606 = !DILocation(line: 63, column: 38, scope: !10604)
!10607 = !DILocation(line: 63, column: 41, scope: !10604)
!10608 = !DILocation(line: 0, scope: !10604)
!10609 = !DILocation(line: 63, column: 3, scope: !10599)
!10610 = !DILocation(line: 64, column: 5, scope: !10604)
!10611 = !DILocation(line: 63, column: 70, scope: !10604)
!10612 = !DILocation(line: 63, column: 3, scope: !10604)
!10613 = distinct !{!10613, !10609, !10614}
!10614 = !DILocation(line: 64, column: 5, scope: !10599)
!10615 = !DILocation(line: 74, column: 10, scope: !10591)
!10616 = !DILocation(line: 74, column: 3, scope: !10591)
!10617 = distinct !DISubprogram(name: "fdadvise", scope: !10618, file: !10618, line: 31, type: !1556, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1543, retainedNodes: !209)
!10618 = !DIFile(filename: "lib/fadvise.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10619 = !DILocalVariable(name: "fd", arg: 1, scope: !10617, file: !10618, line: 31, type: !7)
!10620 = !DILocation(line: 31, column: 15, scope: !10617)
!10621 = !DILocalVariable(name: "offset", arg: 2, scope: !10617, file: !10618, line: 31, type: !352)
!10622 = !DILocation(line: 31, column: 25, scope: !10617)
!10623 = !DILocalVariable(name: "len", arg: 3, scope: !10617, file: !10618, line: 31, type: !352)
!10624 = !DILocation(line: 31, column: 39, scope: !10617)
!10625 = !DILocalVariable(name: "advice", arg: 4, scope: !10617, file: !10618, line: 31, type: !1558)
!10626 = !DILocation(line: 31, column: 54, scope: !10617)
!10627 = !DILocalVariable(name: "__x", scope: !10628, file: !10618, line: 34, type: !7)
!10628 = distinct !DILexicalBlock(scope: !10617, file: !10618, line: 34, column: 3)
!10629 = !DILocation(line: 34, column: 3, scope: !10628)
!10630 = !DILocation(line: 36, column: 1, scope: !10617)
!10631 = distinct !DISubprogram(name: "fadvise", scope: !10618, file: !10618, line: 39, type: !1559, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1543, retainedNodes: !209)
!10632 = !DILocalVariable(name: "fp", arg: 1, scope: !10631, file: !10618, line: 39, type: !1561)
!10633 = !DILocation(line: 39, column: 16, scope: !10631)
!10634 = !DILocalVariable(name: "advice", arg: 2, scope: !10631, file: !10618, line: 39, type: !1558)
!10635 = !DILocation(line: 39, column: 30, scope: !10631)
!10636 = !DILocation(line: 41, column: 7, scope: !10637)
!10637 = distinct !DILexicalBlock(scope: !10631, file: !10618, line: 41, column: 7)
!10638 = !DILocation(line: 41, column: 7, scope: !10631)
!10639 = !DILocation(line: 42, column: 23, scope: !10637)
!10640 = !DILocation(line: 42, column: 15, scope: !10637)
!10641 = !DILocation(line: 42, column: 34, scope: !10637)
!10642 = !DILocation(line: 42, column: 5, scope: !10637)
!10643 = !DILocation(line: 43, column: 1, scope: !10631)
!10644 = distinct !DISubprogram(name: "open_safer", scope: !10645, file: !10645, line: 29, type: !10646, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1595, retainedNodes: !209)
!10645 = !DIFile(filename: "lib/open-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10646 = !DISubroutineType(types: !10647)
!10647 = !{!7, !180, !7, null}
!10648 = !DILocalVariable(name: "file", arg: 1, scope: !10644, file: !10645, line: 29, type: !180)
!10649 = !DILocation(line: 29, column: 25, scope: !10644)
!10650 = !DILocalVariable(name: "flags", arg: 2, scope: !10644, file: !10645, line: 29, type: !7)
!10651 = !DILocation(line: 29, column: 35, scope: !10644)
!10652 = !DILocalVariable(name: "mode", scope: !10644, file: !10645, line: 31, type: !139)
!10653 = !DILocation(line: 31, column: 10, scope: !10644)
!10654 = !DILocation(line: 33, column: 7, scope: !10655)
!10655 = distinct !DILexicalBlock(scope: !10644, file: !10645, line: 33, column: 7)
!10656 = !DILocation(line: 33, column: 13, scope: !10655)
!10657 = !DILocation(line: 33, column: 7, scope: !10644)
!10658 = !DILocalVariable(name: "ap", scope: !10659, file: !10645, line: 35, type: !1600)
!10659 = distinct !DILexicalBlock(scope: !10655, file: !10645, line: 34, column: 5)
!10660 = !DILocation(line: 35, column: 15, scope: !10659)
!10661 = !DILocation(line: 36, column: 7, scope: !10659)
!10662 = !DILocation(line: 40, column: 14, scope: !10659)
!10663 = !DILocation(line: 40, column: 12, scope: !10659)
!10664 = !DILocation(line: 42, column: 7, scope: !10659)
!10665 = !DILocation(line: 43, column: 5, scope: !10659)
!10666 = !DILocation(line: 45, column: 26, scope: !10644)
!10667 = !DILocation(line: 45, column: 32, scope: !10644)
!10668 = !DILocation(line: 45, column: 39, scope: !10644)
!10669 = !DILocation(line: 45, column: 20, scope: !10644)
!10670 = !DILocation(line: 45, column: 10, scope: !10644)
!10671 = !DILocation(line: 45, column: 3, scope: !10644)
!10672 = distinct !DISubprogram(name: "record_file", scope: !10673, file: !10673, line: 29, type: !1612, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1609, retainedNodes: !209)
!10673 = !DIFile(filename: "lib/file-set.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10674 = !DILocalVariable(name: "ht", arg: 1, scope: !10672, file: !10673, line: 29, type: !175)
!10675 = !DILocation(line: 29, column: 26, scope: !10672)
!10676 = !DILocalVariable(name: "file", arg: 2, scope: !10672, file: !10673, line: 29, type: !180)
!10677 = !DILocation(line: 29, column: 42, scope: !10672)
!10678 = !DILocalVariable(name: "stats", arg: 3, scope: !10672, file: !10673, line: 29, type: !1614)
!10679 = !DILocation(line: 29, column: 67, scope: !10672)
!10680 = !DILocalVariable(name: "ent", scope: !10672, file: !10673, line: 31, type: !1637)
!10681 = !DILocation(line: 31, column: 20, scope: !10672)
!10682 = !DILocation(line: 33, column: 7, scope: !10683)
!10683 = distinct !DILexicalBlock(scope: !10672, file: !10673, line: 33, column: 7)
!10684 = !DILocation(line: 33, column: 10, scope: !10683)
!10685 = !DILocation(line: 33, column: 7, scope: !10672)
!10686 = !DILocation(line: 34, column: 5, scope: !10683)
!10687 = !DILocation(line: 36, column: 9, scope: !10672)
!10688 = !DILocation(line: 36, column: 7, scope: !10672)
!10689 = !DILocation(line: 37, column: 24, scope: !10672)
!10690 = !DILocation(line: 37, column: 15, scope: !10672)
!10691 = !DILocation(line: 37, column: 3, scope: !10672)
!10692 = !DILocation(line: 37, column: 8, scope: !10672)
!10693 = !DILocation(line: 37, column: 13, scope: !10672)
!10694 = !{!10695, !2646, i64 0}
!10695 = !{!"F_triple", !2646, i64 0, !2913, i64 8, !2913, i64 16}
!10696 = !DILocation(line: 38, column: 17, scope: !10672)
!10697 = !DILocation(line: 38, column: 24, scope: !10672)
!10698 = !DILocation(line: 38, column: 3, scope: !10672)
!10699 = !DILocation(line: 38, column: 8, scope: !10672)
!10700 = !DILocation(line: 38, column: 15, scope: !10672)
!10701 = !{!10695, !2913, i64 8}
!10702 = !DILocation(line: 39, column: 17, scope: !10672)
!10703 = !DILocation(line: 39, column: 24, scope: !10672)
!10704 = !DILocation(line: 39, column: 3, scope: !10672)
!10705 = !DILocation(line: 39, column: 8, scope: !10672)
!10706 = !DILocation(line: 39, column: 15, scope: !10672)
!10707 = !{!10695, !2913, i64 16}
!10708 = !DILocalVariable(name: "ent_from_table", scope: !10709, file: !10673, line: 42, type: !1637)
!10709 = distinct !DILexicalBlock(scope: !10672, file: !10673, line: 41, column: 3)
!10710 = !DILocation(line: 42, column: 22, scope: !10709)
!10711 = !DILocation(line: 42, column: 52, scope: !10709)
!10712 = !DILocation(line: 42, column: 56, scope: !10709)
!10713 = !DILocation(line: 42, column: 39, scope: !10709)
!10714 = !DILocation(line: 43, column: 9, scope: !10715)
!10715 = distinct !DILexicalBlock(scope: !10709, file: !10673, line: 43, column: 9)
!10716 = !DILocation(line: 43, column: 24, scope: !10715)
!10717 = !DILocation(line: 43, column: 9, scope: !10709)
!10718 = !DILocation(line: 46, column: 9, scope: !10719)
!10719 = distinct !DILexicalBlock(scope: !10715, file: !10673, line: 44, column: 7)
!10720 = !DILocation(line: 49, column: 9, scope: !10721)
!10721 = distinct !DILexicalBlock(scope: !10709, file: !10673, line: 49, column: 9)
!10722 = !DILocation(line: 49, column: 27, scope: !10721)
!10723 = !DILocation(line: 49, column: 24, scope: !10721)
!10724 = !DILocation(line: 49, column: 9, scope: !10709)
!10725 = !DILocation(line: 53, column: 22, scope: !10726)
!10726 = distinct !DILexicalBlock(scope: !10721, file: !10673, line: 50, column: 7)
!10727 = !DILocation(line: 53, column: 9, scope: !10726)
!10728 = !DILocation(line: 54, column: 7, scope: !10726)
!10729 = !DILocation(line: 56, column: 1, scope: !10672)
!10730 = distinct !DISubprogram(name: "seen_file", scope: !10673, file: !10673, line: 61, type: !1644, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1609, retainedNodes: !209)
!10731 = !DILocalVariable(name: "ht", arg: 1, scope: !10730, file: !10673, line: 61, type: !1646)
!10732 = !DILocation(line: 61, column: 30, scope: !10730)
!10733 = !DILocalVariable(name: "file", arg: 2, scope: !10730, file: !10673, line: 61, type: !180)
!10734 = !DILocation(line: 61, column: 46, scope: !10730)
!10735 = !DILocalVariable(name: "stats", arg: 3, scope: !10730, file: !10673, line: 62, type: !1614)
!10736 = !DILocation(line: 62, column: 31, scope: !10730)
!10737 = !DILocalVariable(name: "new_ent", scope: !10730, file: !10673, line: 64, type: !1638)
!10738 = !DILocation(line: 64, column: 19, scope: !10730)
!10739 = !DILocation(line: 66, column: 7, scope: !10740)
!10740 = distinct !DILexicalBlock(scope: !10730, file: !10673, line: 66, column: 7)
!10741 = !DILocation(line: 66, column: 10, scope: !10740)
!10742 = !DILocation(line: 66, column: 7, scope: !10730)
!10743 = !DILocation(line: 67, column: 5, scope: !10740)
!10744 = !DILocation(line: 69, column: 27, scope: !10730)
!10745 = !DILocation(line: 69, column: 11, scope: !10730)
!10746 = !DILocation(line: 69, column: 16, scope: !10730)
!10747 = !DILocation(line: 70, column: 20, scope: !10730)
!10748 = !DILocation(line: 70, column: 27, scope: !10730)
!10749 = !DILocation(line: 70, column: 11, scope: !10730)
!10750 = !DILocation(line: 70, column: 18, scope: !10730)
!10751 = !DILocation(line: 71, column: 20, scope: !10730)
!10752 = !DILocation(line: 71, column: 27, scope: !10730)
!10753 = !DILocation(line: 71, column: 11, scope: !10730)
!10754 = !DILocation(line: 71, column: 18, scope: !10730)
!10755 = !DILocation(line: 73, column: 25, scope: !10730)
!10756 = !DILocation(line: 73, column: 29, scope: !10730)
!10757 = !DILocation(line: 73, column: 12, scope: !10730)
!10758 = !DILocation(line: 73, column: 11, scope: !10730)
!10759 = !DILocation(line: 73, column: 10, scope: !10730)
!10760 = !DILocation(line: 73, column: 3, scope: !10730)
!10761 = !DILocation(line: 74, column: 1, scope: !10730)
!10762 = distinct !DISubprogram(name: "strmode", scope: !10763, file: !10763, line: 96, type: !1651, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1648, retainedNodes: !209)
!10763 = !DIFile(filename: "lib/filemode.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10764 = !DILocalVariable(name: "mode", arg: 1, scope: !10762, file: !10763, line: 96, type: !139)
!10765 = !DILocation(line: 96, column: 17, scope: !10762)
!10766 = !DILocalVariable(name: "str", arg: 2, scope: !10762, file: !10763, line: 96, type: !9)
!10767 = !DILocation(line: 96, column: 29, scope: !10762)
!10768 = !DILocation(line: 98, column: 22, scope: !10762)
!10769 = !DILocation(line: 98, column: 12, scope: !10762)
!10770 = !DILocation(line: 98, column: 3, scope: !10762)
!10771 = !DILocation(line: 98, column: 10, scope: !10762)
!10772 = !DILocation(line: 99, column: 12, scope: !10762)
!10773 = !DILocation(line: 99, column: 17, scope: !10762)
!10774 = !DILocation(line: 99, column: 3, scope: !10762)
!10775 = !DILocation(line: 99, column: 10, scope: !10762)
!10776 = !DILocation(line: 100, column: 12, scope: !10762)
!10777 = !DILocation(line: 100, column: 17, scope: !10762)
!10778 = !DILocation(line: 100, column: 3, scope: !10762)
!10779 = !DILocation(line: 100, column: 10, scope: !10762)
!10780 = !DILocation(line: 101, column: 13, scope: !10762)
!10781 = !DILocation(line: 101, column: 18, scope: !10762)
!10782 = !DILocation(line: 102, column: 16, scope: !10762)
!10783 = !DILocation(line: 102, column: 21, scope: !10762)
!10784 = !DILocation(line: 103, column: 16, scope: !10762)
!10785 = !DILocation(line: 103, column: 21, scope: !10762)
!10786 = !DILocation(line: 101, column: 12, scope: !10762)
!10787 = !DILocation(line: 101, column: 3, scope: !10762)
!10788 = !DILocation(line: 101, column: 10, scope: !10762)
!10789 = !DILocation(line: 104, column: 12, scope: !10762)
!10790 = !DILocation(line: 104, column: 17, scope: !10762)
!10791 = !DILocation(line: 104, column: 3, scope: !10762)
!10792 = !DILocation(line: 104, column: 10, scope: !10762)
!10793 = !DILocation(line: 105, column: 12, scope: !10762)
!10794 = !DILocation(line: 105, column: 17, scope: !10762)
!10795 = !DILocation(line: 105, column: 3, scope: !10762)
!10796 = !DILocation(line: 105, column: 10, scope: !10762)
!10797 = !DILocation(line: 106, column: 13, scope: !10762)
!10798 = !DILocation(line: 106, column: 18, scope: !10762)
!10799 = !DILocation(line: 107, column: 16, scope: !10762)
!10800 = !DILocation(line: 107, column: 21, scope: !10762)
!10801 = !DILocation(line: 108, column: 16, scope: !10762)
!10802 = !DILocation(line: 108, column: 21, scope: !10762)
!10803 = !DILocation(line: 106, column: 12, scope: !10762)
!10804 = !DILocation(line: 106, column: 3, scope: !10762)
!10805 = !DILocation(line: 106, column: 10, scope: !10762)
!10806 = !DILocation(line: 109, column: 12, scope: !10762)
!10807 = !DILocation(line: 109, column: 17, scope: !10762)
!10808 = !DILocation(line: 109, column: 3, scope: !10762)
!10809 = !DILocation(line: 109, column: 10, scope: !10762)
!10810 = !DILocation(line: 110, column: 12, scope: !10762)
!10811 = !DILocation(line: 110, column: 17, scope: !10762)
!10812 = !DILocation(line: 110, column: 3, scope: !10762)
!10813 = !DILocation(line: 110, column: 10, scope: !10762)
!10814 = !DILocation(line: 111, column: 13, scope: !10762)
!10815 = !DILocation(line: 111, column: 18, scope: !10762)
!10816 = !DILocation(line: 112, column: 16, scope: !10762)
!10817 = !DILocation(line: 112, column: 21, scope: !10762)
!10818 = !DILocation(line: 113, column: 16, scope: !10762)
!10819 = !DILocation(line: 113, column: 21, scope: !10762)
!10820 = !DILocation(line: 111, column: 12, scope: !10762)
!10821 = !DILocation(line: 111, column: 3, scope: !10762)
!10822 = !DILocation(line: 111, column: 10, scope: !10762)
!10823 = !DILocation(line: 114, column: 3, scope: !10762)
!10824 = !DILocation(line: 114, column: 11, scope: !10762)
!10825 = !DILocation(line: 115, column: 3, scope: !10762)
!10826 = !DILocation(line: 115, column: 11, scope: !10762)
!10827 = !DILocation(line: 116, column: 1, scope: !10762)
!10828 = distinct !DISubprogram(name: "ftypelet", scope: !10763, file: !10763, line: 54, type: !1678, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1648, retainedNodes: !209)
!10829 = !DILocalVariable(name: "bits", arg: 1, scope: !10828, file: !10763, line: 54, type: !139)
!10830 = !DILocation(line: 54, column: 18, scope: !10828)
!10831 = !DILocation(line: 57, column: 7, scope: !10832)
!10832 = distinct !DILexicalBlock(scope: !10828, file: !10763, line: 57, column: 7)
!10833 = !DILocation(line: 57, column: 7, scope: !10828)
!10834 = !DILocation(line: 58, column: 5, scope: !10832)
!10835 = !DILocation(line: 59, column: 7, scope: !10836)
!10836 = distinct !DILexicalBlock(scope: !10828, file: !10763, line: 59, column: 7)
!10837 = !DILocation(line: 59, column: 7, scope: !10828)
!10838 = !DILocation(line: 60, column: 5, scope: !10836)
!10839 = !DILocation(line: 63, column: 7, scope: !10840)
!10840 = distinct !DILexicalBlock(scope: !10828, file: !10763, line: 63, column: 7)
!10841 = !DILocation(line: 63, column: 7, scope: !10828)
!10842 = !DILocation(line: 64, column: 5, scope: !10840)
!10843 = !DILocation(line: 65, column: 7, scope: !10844)
!10844 = distinct !DILexicalBlock(scope: !10828, file: !10763, line: 65, column: 7)
!10845 = !DILocation(line: 65, column: 7, scope: !10828)
!10846 = !DILocation(line: 66, column: 5, scope: !10844)
!10847 = !DILocation(line: 67, column: 7, scope: !10848)
!10848 = distinct !DILexicalBlock(scope: !10828, file: !10763, line: 67, column: 7)
!10849 = !DILocation(line: 67, column: 7, scope: !10828)
!10850 = !DILocation(line: 68, column: 5, scope: !10848)
!10851 = !DILocation(line: 69, column: 7, scope: !10852)
!10852 = distinct !DILexicalBlock(scope: !10828, file: !10763, line: 69, column: 7)
!10853 = !DILocation(line: 69, column: 7, scope: !10828)
!10854 = !DILocation(line: 70, column: 5, scope: !10852)
!10855 = !DILocation(line: 73, column: 7, scope: !10856)
!10856 = distinct !DILexicalBlock(scope: !10828, file: !10763, line: 73, column: 7)
!10857 = !DILocation(line: 73, column: 7, scope: !10828)
!10858 = !DILocation(line: 74, column: 5, scope: !10856)
!10859 = !DILocation(line: 90, column: 3, scope: !10828)
!10860 = !DILocation(line: 91, column: 1, scope: !10828)
!10861 = distinct !DISubprogram(name: "filemodestring", scope: !10763, file: !10763, line: 166, type: !1653, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1648, retainedNodes: !209)
!10862 = !DILocalVariable(name: "statp", arg: 1, scope: !10861, file: !10763, line: 166, type: !1655)
!10863 = !DILocation(line: 166, column: 36, scope: !10861)
!10864 = !DILocalVariable(name: "str", arg: 2, scope: !10861, file: !10763, line: 166, type: !9)
!10865 = !DILocation(line: 166, column: 49, scope: !10861)
!10866 = !DILocation(line: 168, column: 12, scope: !10861)
!10867 = !DILocation(line: 168, column: 19, scope: !10861)
!10868 = !DILocation(line: 168, column: 28, scope: !10861)
!10869 = !DILocation(line: 168, column: 3, scope: !10861)
!10870 = !DILocation(line: 170, column: 7, scope: !10871)
!10871 = distinct !DILexicalBlock(scope: !10861, file: !10763, line: 170, column: 7)
!10872 = !DILocation(line: 170, column: 7, scope: !10861)
!10873 = !DILocation(line: 171, column: 5, scope: !10871)
!10874 = !DILocation(line: 171, column: 12, scope: !10871)
!10875 = !DILocation(line: 174, column: 12, scope: !10876)
!10876 = distinct !DILexicalBlock(scope: !10877, file: !10763, line: 174, column: 12)
!10877 = distinct !DILexicalBlock(scope: !10871, file: !10763, line: 172, column: 12)
!10878 = !DILocation(line: 174, column: 12, scope: !10877)
!10879 = !DILocation(line: 175, column: 5, scope: !10876)
!10880 = !DILocation(line: 175, column: 12, scope: !10876)
!10881 = !DILocation(line: 176, column: 12, scope: !10882)
!10882 = distinct !DILexicalBlock(scope: !10876, file: !10763, line: 176, column: 12)
!10883 = !DILocation(line: 176, column: 12, scope: !10876)
!10884 = !DILocation(line: 177, column: 5, scope: !10882)
!10885 = !DILocation(line: 177, column: 12, scope: !10882)
!10886 = !DILocation(line: 180, column: 1, scope: !10861)
!10887 = distinct !DISubprogram(name: "file_name_concat", scope: !10888, file: !10888, line: 35, type: !1683, scopeLine: 36, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1680, retainedNodes: !209)
!10888 = !DIFile(filename: "lib/filenamecat.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10889 = !DILocalVariable(name: "dir", arg: 1, scope: !10887, file: !10888, line: 35, type: !180)
!10890 = !DILocation(line: 35, column: 31, scope: !10887)
!10891 = !DILocalVariable(name: "base", arg: 2, scope: !10887, file: !10888, line: 35, type: !180)
!10892 = !DILocation(line: 35, column: 48, scope: !10887)
!10893 = !DILocalVariable(name: "base_in_result", arg: 3, scope: !10887, file: !10888, line: 35, type: !184)
!10894 = !DILocation(line: 35, column: 61, scope: !10887)
!10895 = !DILocalVariable(name: "p", scope: !10887, file: !10888, line: 37, type: !9)
!10896 = !DILocation(line: 37, column: 9, scope: !10887)
!10897 = !DILocation(line: 37, column: 32, scope: !10887)
!10898 = !DILocation(line: 37, column: 37, scope: !10887)
!10899 = !DILocation(line: 37, column: 43, scope: !10887)
!10900 = !DILocation(line: 37, column: 13, scope: !10887)
!10901 = !DILocation(line: 38, column: 7, scope: !10902)
!10902 = distinct !DILexicalBlock(scope: !10887, file: !10888, line: 38, column: 7)
!10903 = !DILocation(line: 38, column: 9, scope: !10902)
!10904 = !DILocation(line: 38, column: 7, scope: !10887)
!10905 = !DILocation(line: 39, column: 5, scope: !10902)
!10906 = !DILocation(line: 40, column: 10, scope: !10887)
!10907 = !DILocation(line: 40, column: 3, scope: !10887)
!10908 = distinct !DISubprogram(name: "mfile_name_concat", scope: !10909, file: !10909, line: 47, type: !1683, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1685, retainedNodes: !209)
!10909 = !DIFile(filename: "lib/filenamecat-lgpl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!10910 = !DILocalVariable(name: "dir", arg: 1, scope: !10908, file: !10909, line: 47, type: !180)
!10911 = !DILocation(line: 47, column: 32, scope: !10908)
!10912 = !DILocalVariable(name: "base", arg: 2, scope: !10908, file: !10909, line: 47, type: !180)
!10913 = !DILocation(line: 47, column: 49, scope: !10908)
!10914 = !DILocalVariable(name: "base_in_result", arg: 3, scope: !10908, file: !10909, line: 47, type: !184)
!10915 = !DILocation(line: 47, column: 62, scope: !10908)
!10916 = !DILocalVariable(name: "dirbase", scope: !10908, file: !10909, line: 49, type: !180)
!10917 = !DILocation(line: 49, column: 15, scope: !10908)
!10918 = !DILocation(line: 49, column: 41, scope: !10908)
!10919 = !DILocation(line: 49, column: 25, scope: !10908)
!10920 = !DILocalVariable(name: "dirbaselen", scope: !10908, file: !10909, line: 50, type: !55)
!10921 = !DILocation(line: 50, column: 10, scope: !10908)
!10922 = !DILocation(line: 50, column: 33, scope: !10908)
!10923 = !DILocation(line: 50, column: 23, scope: !10908)
!10924 = !DILocalVariable(name: "dirlen", scope: !10908, file: !10909, line: 51, type: !55)
!10925 = !DILocation(line: 51, column: 10, scope: !10908)
!10926 = !DILocation(line: 51, column: 19, scope: !10908)
!10927 = !DILocation(line: 51, column: 29, scope: !10908)
!10928 = !DILocation(line: 51, column: 27, scope: !10908)
!10929 = !DILocation(line: 51, column: 35, scope: !10908)
!10930 = !DILocation(line: 51, column: 33, scope: !10908)
!10931 = !DILocalVariable(name: "baselen", scope: !10908, file: !10909, line: 52, type: !55)
!10932 = !DILocation(line: 52, column: 10, scope: !10908)
!10933 = !DILocation(line: 52, column: 28, scope: !10908)
!10934 = !DILocation(line: 52, column: 20, scope: !10908)
!10935 = !DILocalVariable(name: "sep", scope: !10908, file: !10909, line: 53, type: !10)
!10936 = !DILocation(line: 53, column: 8, scope: !10908)
!10937 = !DILocation(line: 54, column: 7, scope: !10938)
!10938 = distinct !DILexicalBlock(scope: !10908, file: !10909, line: 54, column: 7)
!10939 = !DILocation(line: 54, column: 7, scope: !10908)
!10940 = !DILocation(line: 57, column: 13, scope: !10941)
!10941 = distinct !DILexicalBlock(scope: !10942, file: !10909, line: 57, column: 11)
!10942 = distinct !DILexicalBlock(scope: !10938, file: !10909, line: 55, column: 5)
!10943 = !DILocation(line: 57, column: 39, scope: !10941)
!10944 = !DILocation(line: 57, column: 44, scope: !10941)
!10945 = !DILocation(line: 57, column: 11, scope: !10942)
!10946 = !DILocation(line: 58, column: 13, scope: !10941)
!10947 = !DILocation(line: 58, column: 9, scope: !10941)
!10948 = !DILocation(line: 59, column: 5, scope: !10942)
!10949 = !DILocation(line: 60, column: 12, scope: !10950)
!10950 = distinct !DILexicalBlock(scope: !10938, file: !10909, line: 60, column: 12)
!10951 = !DILocation(line: 60, column: 12, scope: !10938)
!10952 = !DILocation(line: 67, column: 11, scope: !10953)
!10953 = distinct !DILexicalBlock(scope: !10950, file: !10909, line: 61, column: 5)
!10954 = !DILocation(line: 68, column: 5, scope: !10953)
!10955 = !DILocalVariable(name: "p_concat", scope: !10908, file: !10909, line: 70, type: !9)
!10956 = !DILocation(line: 70, column: 9, scope: !10908)
!10957 = !DILocation(line: 70, column: 28, scope: !10908)
!10958 = !DILocation(line: 70, column: 38, scope: !10908)
!10959 = !DILocation(line: 70, column: 42, scope: !10908)
!10960 = !DILocation(line: 70, column: 37, scope: !10908)
!10961 = !DILocation(line: 70, column: 35, scope: !10908)
!10962 = !DILocation(line: 70, column: 54, scope: !10908)
!10963 = !DILocation(line: 70, column: 52, scope: !10908)
!10964 = !DILocation(line: 70, column: 62, scope: !10908)
!10965 = !DILocation(line: 70, column: 20, scope: !10908)
!10966 = !DILocalVariable(name: "p", scope: !10908, file: !10909, line: 71, type: !9)
!10967 = !DILocation(line: 71, column: 9, scope: !10908)
!10968 = !DILocation(line: 73, column: 7, scope: !10969)
!10969 = distinct !DILexicalBlock(scope: !10908, file: !10909, line: 73, column: 7)
!10970 = !DILocation(line: 73, column: 16, scope: !10969)
!10971 = !DILocation(line: 73, column: 7, scope: !10908)
!10972 = !DILocation(line: 74, column: 5, scope: !10969)
!10973 = !DILocation(line: 76, column: 16, scope: !10908)
!10974 = !DILocation(line: 76, column: 26, scope: !10908)
!10975 = !DILocation(line: 76, column: 31, scope: !10908)
!10976 = !DILocation(line: 76, column: 7, scope: !10908)
!10977 = !DILocation(line: 76, column: 5, scope: !10908)
!10978 = !DILocation(line: 77, column: 8, scope: !10908)
!10979 = !DILocation(line: 77, column: 4, scope: !10908)
!10980 = !DILocation(line: 77, column: 6, scope: !10908)
!10981 = !DILocation(line: 78, column: 8, scope: !10908)
!10982 = !DILocation(line: 78, column: 12, scope: !10908)
!10983 = !DILocation(line: 78, column: 5, scope: !10908)
!10984 = !DILocation(line: 80, column: 7, scope: !10985)
!10985 = distinct !DILexicalBlock(scope: !10908, file: !10909, line: 80, column: 7)
!10986 = !DILocation(line: 80, column: 7, scope: !10908)
!10987 = !DILocation(line: 81, column: 23, scope: !10985)
!10988 = !DILocation(line: 81, column: 6, scope: !10985)
!10989 = !DILocation(line: 81, column: 21, scope: !10985)
!10990 = !DILocation(line: 81, column: 5, scope: !10985)
!10991 = !DILocation(line: 83, column: 16, scope: !10908)
!10992 = !DILocation(line: 83, column: 19, scope: !10908)
!10993 = !DILocation(line: 83, column: 25, scope: !10908)
!10994 = !DILocation(line: 83, column: 7, scope: !10908)
!10995 = !DILocation(line: 83, column: 5, scope: !10908)
!10996 = !DILocation(line: 84, column: 4, scope: !10908)
!10997 = !DILocation(line: 84, column: 6, scope: !10908)
!10998 = !DILocation(line: 86, column: 10, scope: !10908)
!10999 = !DILocation(line: 86, column: 3, scope: !10908)
!11000 = !DILocation(line: 87, column: 1, scope: !10908)
!11001 = distinct !DISubprogram(name: "full_read", scope: !1694, file: !1694, line: 58, type: !1691, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1688, retainedNodes: !209)
!11002 = !DILocalVariable(name: "fd", arg: 1, scope: !11001, file: !1694, line: 58, type: !7)
!11003 = !DILocation(line: 58, column: 14, scope: !11001)
!11004 = !DILocalVariable(name: "buf", arg: 2, scope: !11001, file: !1694, line: 58, type: !53)
!11005 = !DILocation(line: 58, column: 30, scope: !11001)
!11006 = !DILocalVariable(name: "count", arg: 3, scope: !11001, file: !1694, line: 58, type: !55)
!11007 = !DILocation(line: 58, column: 42, scope: !11001)
!11008 = !DILocalVariable(name: "total", scope: !11001, file: !1694, line: 60, type: !55)
!11009 = !DILocation(line: 60, column: 10, scope: !11001)
!11010 = !DILocalVariable(name: "ptr", scope: !11001, file: !1694, line: 61, type: !9)
!11011 = !DILocation(line: 61, column: 15, scope: !11001)
!11012 = !DILocation(line: 61, column: 36, scope: !11001)
!11013 = !DILocation(line: 63, column: 3, scope: !11001)
!11014 = !DILocation(line: 63, column: 10, scope: !11001)
!11015 = !DILocation(line: 63, column: 16, scope: !11001)
!11016 = !DILocalVariable(name: "n_rw", scope: !11017, file: !1694, line: 65, type: !55)
!11017 = distinct !DILexicalBlock(scope: !11001, file: !1694, line: 64, column: 5)
!11018 = !DILocation(line: 65, column: 14, scope: !11017)
!11019 = !DILocation(line: 65, column: 30, scope: !11017)
!11020 = !DILocation(line: 65, column: 34, scope: !11017)
!11021 = !DILocation(line: 65, column: 39, scope: !11017)
!11022 = !DILocation(line: 65, column: 21, scope: !11017)
!11023 = !DILocation(line: 66, column: 11, scope: !11024)
!11024 = distinct !DILexicalBlock(scope: !11017, file: !1694, line: 66, column: 11)
!11025 = !DILocation(line: 66, column: 16, scope: !11024)
!11026 = !DILocation(line: 66, column: 11, scope: !11017)
!11027 = !DILocation(line: 67, column: 9, scope: !11024)
!11028 = !DILocation(line: 68, column: 11, scope: !11029)
!11029 = distinct !DILexicalBlock(scope: !11017, file: !1694, line: 68, column: 11)
!11030 = !DILocation(line: 68, column: 16, scope: !11029)
!11031 = !DILocation(line: 68, column: 11, scope: !11017)
!11032 = !DILocation(line: 70, column: 11, scope: !11033)
!11033 = distinct !DILexicalBlock(scope: !11029, file: !1694, line: 69, column: 9)
!11034 = !DILocation(line: 70, column: 17, scope: !11033)
!11035 = !DILocation(line: 71, column: 11, scope: !11033)
!11036 = !DILocation(line: 73, column: 16, scope: !11017)
!11037 = !DILocation(line: 73, column: 13, scope: !11017)
!11038 = !DILocation(line: 74, column: 14, scope: !11017)
!11039 = !DILocation(line: 74, column: 11, scope: !11017)
!11040 = !DILocation(line: 75, column: 16, scope: !11017)
!11041 = !DILocation(line: 75, column: 13, scope: !11017)
!11042 = distinct !{!11042, !11013, !11043}
!11043 = !DILocation(line: 76, column: 5, scope: !11001)
!11044 = !DILocation(line: 78, column: 10, scope: !11001)
!11045 = !DILocation(line: 78, column: 3, scope: !11001)
!11046 = distinct !DISubprogram(name: "full_write", scope: !11047, file: !11047, line: 58, type: !1696, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1693, retainedNodes: !209)
!11047 = !DIFile(filename: "lib/full-write.c", directory: "/home/mbarbar/software/coreutils-8.31")
!11048 = !DILocalVariable(name: "fd", arg: 1, scope: !11046, file: !11047, line: 58, type: !7)
!11049 = !DILocation(line: 58, column: 14, scope: !11046)
!11050 = !DILocalVariable(name: "buf", arg: 2, scope: !11046, file: !11047, line: 58, type: !513)
!11051 = !DILocation(line: 58, column: 30, scope: !11046)
!11052 = !DILocalVariable(name: "count", arg: 3, scope: !11046, file: !11047, line: 58, type: !55)
!11053 = !DILocation(line: 58, column: 42, scope: !11046)
!11054 = !DILocalVariable(name: "total", scope: !11046, file: !11047, line: 60, type: !55)
!11055 = !DILocation(line: 60, column: 10, scope: !11046)
!11056 = !DILocalVariable(name: "ptr", scope: !11046, file: !11047, line: 61, type: !180)
!11057 = !DILocation(line: 61, column: 15, scope: !11046)
!11058 = !DILocation(line: 61, column: 36, scope: !11046)
!11059 = !DILocation(line: 63, column: 3, scope: !11046)
!11060 = !DILocation(line: 63, column: 10, scope: !11046)
!11061 = !DILocation(line: 63, column: 16, scope: !11046)
!11062 = !DILocalVariable(name: "n_rw", scope: !11063, file: !11047, line: 65, type: !55)
!11063 = distinct !DILexicalBlock(scope: !11046, file: !11047, line: 64, column: 5)
!11064 = !DILocation(line: 65, column: 14, scope: !11063)
!11065 = !DILocation(line: 65, column: 30, scope: !11063)
!11066 = !DILocation(line: 65, column: 34, scope: !11063)
!11067 = !DILocation(line: 65, column: 39, scope: !11063)
!11068 = !DILocation(line: 65, column: 21, scope: !11063)
!11069 = !DILocation(line: 66, column: 11, scope: !11070)
!11070 = distinct !DILexicalBlock(scope: !11063, file: !11047, line: 66, column: 11)
!11071 = !DILocation(line: 66, column: 16, scope: !11070)
!11072 = !DILocation(line: 66, column: 11, scope: !11063)
!11073 = !DILocation(line: 67, column: 9, scope: !11070)
!11074 = !DILocation(line: 68, column: 11, scope: !11075)
!11075 = distinct !DILexicalBlock(scope: !11063, file: !11047, line: 68, column: 11)
!11076 = !DILocation(line: 68, column: 16, scope: !11075)
!11077 = !DILocation(line: 68, column: 11, scope: !11063)
!11078 = !DILocation(line: 70, column: 11, scope: !11079)
!11079 = distinct !DILexicalBlock(scope: !11075, file: !11047, line: 69, column: 9)
!11080 = !DILocation(line: 70, column: 17, scope: !11079)
!11081 = !DILocation(line: 71, column: 11, scope: !11079)
!11082 = !DILocation(line: 73, column: 16, scope: !11063)
!11083 = !DILocation(line: 73, column: 13, scope: !11063)
!11084 = !DILocation(line: 74, column: 14, scope: !11063)
!11085 = !DILocation(line: 74, column: 11, scope: !11063)
!11086 = !DILocation(line: 75, column: 16, scope: !11063)
!11087 = !DILocation(line: 75, column: 13, scope: !11063)
!11088 = distinct !{!11088, !11059, !11089}
!11089 = !DILocation(line: 76, column: 5, scope: !11046)
!11090 = !DILocation(line: 78, column: 10, scope: !11046)
!11091 = !DILocation(line: 78, column: 3, scope: !11046)
!11092 = distinct !DISubprogram(name: "hash_get_n_buckets", scope: !842, file: !842, line: 150, type: !836, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !833, retainedNodes: !209)
!11093 = !DILocalVariable(name: "table", arg: 1, scope: !11092, file: !842, line: 150, type: !838)
!11094 = !DILocation(line: 150, column: 39, scope: !11092)
!11095 = !DILocation(line: 152, column: 10, scope: !11092)
!11096 = !DILocation(line: 152, column: 17, scope: !11092)
!11097 = !{!11098, !2913, i64 16}
!11098 = !{!"hash_table", !2646, i64 0, !2646, i64 8, !2913, i64 16, !2913, i64 24, !2913, i64 32, !2646, i64 40, !2646, i64 48, !2646, i64 56, !2646, i64 64, !2646, i64 72}
!11099 = !DILocation(line: 152, column: 3, scope: !11092)
!11100 = distinct !DISubprogram(name: "hash_get_n_buckets_used", scope: !842, file: !842, line: 158, type: !836, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !833, retainedNodes: !209)
!11101 = !DILocalVariable(name: "table", arg: 1, scope: !11100, file: !842, line: 158, type: !838)
!11102 = !DILocation(line: 158, column: 44, scope: !11100)
!11103 = !DILocation(line: 160, column: 10, scope: !11100)
!11104 = !DILocation(line: 160, column: 17, scope: !11100)
!11105 = !{!11098, !2913, i64 24}
!11106 = !DILocation(line: 160, column: 3, scope: !11100)
!11107 = distinct !DISubprogram(name: "hash_get_n_entries", scope: !842, file: !842, line: 166, type: !836, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !833, retainedNodes: !209)
!11108 = !DILocalVariable(name: "table", arg: 1, scope: !11107, file: !842, line: 166, type: !838)
!11109 = !DILocation(line: 166, column: 39, scope: !11107)
!11110 = !DILocation(line: 168, column: 10, scope: !11107)
!11111 = !DILocation(line: 168, column: 17, scope: !11107)
!11112 = !{!11098, !2913, i64 32}
!11113 = !DILocation(line: 168, column: 3, scope: !11107)
!11114 = distinct !DISubprogram(name: "hash_get_max_bucket_length", scope: !842, file: !842, line: 174, type: !836, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !833, retainedNodes: !209)
!11115 = !DILocalVariable(name: "table", arg: 1, scope: !11114, file: !842, line: 174, type: !838)
!11116 = !DILocation(line: 174, column: 47, scope: !11114)
!11117 = !DILocalVariable(name: "bucket", scope: !11114, file: !842, line: 176, type: !851)
!11118 = !DILocation(line: 176, column: 28, scope: !11114)
!11119 = !DILocalVariable(name: "max_bucket_length", scope: !11114, file: !842, line: 177, type: !55)
!11120 = !DILocation(line: 177, column: 10, scope: !11114)
!11121 = !DILocation(line: 179, column: 17, scope: !11122)
!11122 = distinct !DILexicalBlock(scope: !11114, file: !842, line: 179, column: 3)
!11123 = !DILocation(line: 179, column: 24, scope: !11122)
!11124 = !{!11098, !2646, i64 0}
!11125 = !DILocation(line: 179, column: 15, scope: !11122)
!11126 = !DILocation(line: 179, column: 8, scope: !11122)
!11127 = !DILocation(line: 179, column: 32, scope: !11128)
!11128 = distinct !DILexicalBlock(scope: !11122, file: !842, line: 179, column: 3)
!11129 = !DILocation(line: 179, column: 41, scope: !11128)
!11130 = !DILocation(line: 179, column: 48, scope: !11128)
!11131 = !{!11098, !2646, i64 8}
!11132 = !DILocation(line: 179, column: 39, scope: !11128)
!11133 = !DILocation(line: 179, column: 3, scope: !11122)
!11134 = !DILocation(line: 181, column: 11, scope: !11135)
!11135 = distinct !DILexicalBlock(scope: !11136, file: !842, line: 181, column: 11)
!11136 = distinct !DILexicalBlock(scope: !11128, file: !842, line: 180, column: 5)
!11137 = !DILocation(line: 181, column: 19, scope: !11135)
!11138 = !{!11139, !2646, i64 0}
!11139 = !{!"hash_entry", !2646, i64 0, !2646, i64 8}
!11140 = !DILocation(line: 181, column: 11, scope: !11136)
!11141 = !DILocalVariable(name: "cursor", scope: !11142, file: !842, line: 183, type: !851)
!11142 = distinct !DILexicalBlock(scope: !11135, file: !842, line: 182, column: 9)
!11143 = !DILocation(line: 183, column: 36, scope: !11142)
!11144 = !DILocation(line: 183, column: 45, scope: !11142)
!11145 = !DILocalVariable(name: "bucket_length", scope: !11142, file: !842, line: 184, type: !55)
!11146 = !DILocation(line: 184, column: 18, scope: !11142)
!11147 = !DILocation(line: 186, column: 11, scope: !11142)
!11148 = !DILocation(line: 186, column: 27, scope: !11142)
!11149 = !DILocation(line: 186, column: 35, scope: !11142)
!11150 = !{!11139, !2646, i64 8}
!11151 = !DILocation(line: 186, column: 25, scope: !11142)
!11152 = !DILocation(line: 186, column: 41, scope: !11142)
!11153 = !DILocation(line: 187, column: 26, scope: !11142)
!11154 = distinct !{!11154, !11147, !11153}
!11155 = !DILocation(line: 189, column: 15, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !11142, file: !842, line: 189, column: 15)
!11157 = !DILocation(line: 189, column: 31, scope: !11156)
!11158 = !DILocation(line: 189, column: 29, scope: !11156)
!11159 = !DILocation(line: 189, column: 15, scope: !11142)
!11160 = !DILocation(line: 190, column: 33, scope: !11156)
!11161 = !DILocation(line: 190, column: 31, scope: !11156)
!11162 = !DILocation(line: 190, column: 13, scope: !11156)
!11163 = !DILocation(line: 191, column: 9, scope: !11142)
!11164 = !DILocation(line: 192, column: 5, scope: !11136)
!11165 = !DILocation(line: 179, column: 68, scope: !11128)
!11166 = !DILocation(line: 179, column: 3, scope: !11128)
!11167 = distinct !{!11167, !11133, !11168}
!11168 = !DILocation(line: 192, column: 5, scope: !11122)
!11169 = !DILocation(line: 194, column: 10, scope: !11114)
!11170 = !DILocation(line: 194, column: 3, scope: !11114)
!11171 = distinct !DISubprogram(name: "hash_table_ok", scope: !842, file: !842, line: 201, type: !878, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !833, retainedNodes: !209)
!11172 = !DILocalVariable(name: "table", arg: 1, scope: !11171, file: !842, line: 201, type: !838)
!11173 = !DILocation(line: 201, column: 34, scope: !11171)
!11174 = !DILocalVariable(name: "bucket", scope: !11171, file: !842, line: 203, type: !851)
!11175 = !DILocation(line: 203, column: 28, scope: !11171)
!11176 = !DILocalVariable(name: "n_buckets_used", scope: !11171, file: !842, line: 204, type: !55)
!11177 = !DILocation(line: 204, column: 10, scope: !11171)
!11178 = !DILocalVariable(name: "n_entries", scope: !11171, file: !842, line: 205, type: !55)
!11179 = !DILocation(line: 205, column: 10, scope: !11171)
!11180 = !DILocation(line: 207, column: 17, scope: !11181)
!11181 = distinct !DILexicalBlock(scope: !11171, file: !842, line: 207, column: 3)
!11182 = !DILocation(line: 207, column: 24, scope: !11181)
!11183 = !DILocation(line: 207, column: 15, scope: !11181)
!11184 = !DILocation(line: 207, column: 8, scope: !11181)
!11185 = !DILocation(line: 207, column: 32, scope: !11186)
!11186 = distinct !DILexicalBlock(scope: !11181, file: !842, line: 207, column: 3)
!11187 = !DILocation(line: 207, column: 41, scope: !11186)
!11188 = !DILocation(line: 207, column: 48, scope: !11186)
!11189 = !DILocation(line: 207, column: 39, scope: !11186)
!11190 = !DILocation(line: 207, column: 3, scope: !11181)
!11191 = !DILocation(line: 209, column: 11, scope: !11192)
!11192 = distinct !DILexicalBlock(scope: !11193, file: !842, line: 209, column: 11)
!11193 = distinct !DILexicalBlock(scope: !11186, file: !842, line: 208, column: 5)
!11194 = !DILocation(line: 209, column: 19, scope: !11192)
!11195 = !DILocation(line: 209, column: 11, scope: !11193)
!11196 = !DILocalVariable(name: "cursor", scope: !11197, file: !842, line: 211, type: !851)
!11197 = distinct !DILexicalBlock(scope: !11192, file: !842, line: 210, column: 9)
!11198 = !DILocation(line: 211, column: 36, scope: !11197)
!11199 = !DILocation(line: 211, column: 45, scope: !11197)
!11200 = !DILocation(line: 214, column: 25, scope: !11197)
!11201 = !DILocation(line: 215, column: 20, scope: !11197)
!11202 = !DILocation(line: 218, column: 11, scope: !11197)
!11203 = !DILocation(line: 218, column: 27, scope: !11197)
!11204 = !DILocation(line: 218, column: 35, scope: !11197)
!11205 = !DILocation(line: 218, column: 25, scope: !11197)
!11206 = !DILocation(line: 218, column: 41, scope: !11197)
!11207 = !DILocation(line: 219, column: 22, scope: !11197)
!11208 = distinct !{!11208, !11202, !11207}
!11209 = !DILocation(line: 220, column: 9, scope: !11197)
!11210 = !DILocation(line: 221, column: 5, scope: !11193)
!11211 = !DILocation(line: 207, column: 68, scope: !11186)
!11212 = !DILocation(line: 207, column: 3, scope: !11186)
!11213 = distinct !{!11213, !11190, !11214}
!11214 = !DILocation(line: 221, column: 5, scope: !11181)
!11215 = !DILocation(line: 223, column: 7, scope: !11216)
!11216 = distinct !DILexicalBlock(scope: !11171, file: !842, line: 223, column: 7)
!11217 = !DILocation(line: 223, column: 25, scope: !11216)
!11218 = !DILocation(line: 223, column: 32, scope: !11216)
!11219 = !DILocation(line: 223, column: 22, scope: !11216)
!11220 = !DILocation(line: 223, column: 47, scope: !11216)
!11221 = !DILocation(line: 223, column: 50, scope: !11216)
!11222 = !DILocation(line: 223, column: 63, scope: !11216)
!11223 = !DILocation(line: 223, column: 70, scope: !11216)
!11224 = !DILocation(line: 223, column: 60, scope: !11216)
!11225 = !DILocation(line: 223, column: 7, scope: !11171)
!11226 = !DILocation(line: 224, column: 5, scope: !11216)
!11227 = !DILocation(line: 226, column: 3, scope: !11171)
!11228 = !DILocation(line: 227, column: 1, scope: !11171)
!11229 = distinct !DISubprogram(name: "hash_print_statistics", scope: !842, file: !842, line: 230, type: !880, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !833, retainedNodes: !209)
!11230 = !DILocalVariable(name: "table", arg: 1, scope: !11229, file: !842, line: 230, type: !838)
!11231 = !DILocation(line: 230, column: 42, scope: !11229)
!11232 = !DILocalVariable(name: "stream", arg: 2, scope: !11229, file: !842, line: 230, type: !882)
!11233 = !DILocation(line: 230, column: 55, scope: !11229)
!11234 = !DILocalVariable(name: "n_entries", scope: !11229, file: !842, line: 232, type: !55)
!11235 = !DILocation(line: 232, column: 10, scope: !11229)
!11236 = !DILocation(line: 232, column: 42, scope: !11229)
!11237 = !DILocation(line: 232, column: 22, scope: !11229)
!11238 = !DILocalVariable(name: "n_buckets", scope: !11229, file: !842, line: 233, type: !55)
!11239 = !DILocation(line: 233, column: 10, scope: !11229)
!11240 = !DILocation(line: 233, column: 42, scope: !11229)
!11241 = !DILocation(line: 233, column: 22, scope: !11229)
!11242 = !DILocalVariable(name: "n_buckets_used", scope: !11229, file: !842, line: 234, type: !55)
!11243 = !DILocation(line: 234, column: 10, scope: !11229)
!11244 = !DILocation(line: 234, column: 52, scope: !11229)
!11245 = !DILocation(line: 234, column: 27, scope: !11229)
!11246 = !DILocalVariable(name: "max_bucket_length", scope: !11229, file: !842, line: 235, type: !55)
!11247 = !DILocation(line: 235, column: 10, scope: !11229)
!11248 = !DILocation(line: 235, column: 58, scope: !11229)
!11249 = !DILocation(line: 235, column: 30, scope: !11229)
!11250 = !DILocation(line: 237, column: 12, scope: !11229)
!11251 = !DILocation(line: 237, column: 68, scope: !11229)
!11252 = !DILocation(line: 237, column: 3, scope: !11229)
!11253 = !DILocation(line: 238, column: 12, scope: !11229)
!11254 = !DILocation(line: 238, column: 68, scope: !11229)
!11255 = !DILocation(line: 238, column: 3, scope: !11229)
!11256 = !DILocation(line: 239, column: 12, scope: !11229)
!11257 = !DILocation(line: 240, column: 32, scope: !11229)
!11258 = !DILocation(line: 241, column: 21, scope: !11229)
!11259 = !DILocation(line: 241, column: 19, scope: !11229)
!11260 = !DILocation(line: 241, column: 39, scope: !11229)
!11261 = !DILocation(line: 241, column: 37, scope: !11229)
!11262 = !DILocation(line: 239, column: 3, scope: !11229)
!11263 = !DILocation(line: 242, column: 12, scope: !11229)
!11264 = !DILocation(line: 243, column: 32, scope: !11229)
!11265 = !DILocation(line: 242, column: 3, scope: !11229)
!11266 = !DILocation(line: 244, column: 1, scope: !11229)
!11267 = distinct !DISubprogram(name: "hash_lookup", scope: !842, file: !842, line: 261, type: !916, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !833, retainedNodes: !209)
!11268 = !DILocalVariable(name: "table", arg: 1, scope: !11267, file: !842, line: 261, type: !838)
!11269 = !DILocation(line: 261, column: 32, scope: !11267)
!11270 = !DILocalVariable(name: "entry", arg: 2, scope: !11267, file: !842, line: 261, type: !513)
!11271 = !DILocation(line: 261, column: 51, scope: !11267)
!11272 = !DILocalVariable(name: "bucket", scope: !11267, file: !842, line: 263, type: !851)
!11273 = !DILocation(line: 263, column: 28, scope: !11267)
!11274 = !DILocation(line: 263, column: 50, scope: !11267)
!11275 = !DILocation(line: 263, column: 57, scope: !11267)
!11276 = !DILocation(line: 263, column: 37, scope: !11267)
!11277 = !DILocalVariable(name: "cursor", scope: !11267, file: !842, line: 264, type: !851)
!11278 = !DILocation(line: 264, column: 28, scope: !11267)
!11279 = !DILocation(line: 266, column: 7, scope: !11280)
!11280 = distinct !DILexicalBlock(scope: !11267, file: !842, line: 266, column: 7)
!11281 = !DILocation(line: 266, column: 15, scope: !11280)
!11282 = !DILocation(line: 266, column: 20, scope: !11280)
!11283 = !DILocation(line: 266, column: 7, scope: !11267)
!11284 = !DILocation(line: 267, column: 5, scope: !11280)
!11285 = !DILocation(line: 269, column: 17, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11267, file: !842, line: 269, column: 3)
!11287 = !DILocation(line: 269, column: 15, scope: !11286)
!11288 = !DILocation(line: 269, column: 8, scope: !11286)
!11289 = !DILocation(line: 269, column: 25, scope: !11290)
!11290 = distinct !DILexicalBlock(scope: !11286, file: !842, line: 269, column: 3)
!11291 = !DILocation(line: 269, column: 3, scope: !11286)
!11292 = !DILocation(line: 270, column: 9, scope: !11293)
!11293 = distinct !DILexicalBlock(scope: !11290, file: !842, line: 270, column: 9)
!11294 = !DILocation(line: 270, column: 18, scope: !11293)
!11295 = !DILocation(line: 270, column: 26, scope: !11293)
!11296 = !DILocation(line: 270, column: 15, scope: !11293)
!11297 = !DILocation(line: 270, column: 31, scope: !11293)
!11298 = !DILocation(line: 270, column: 34, scope: !11293)
!11299 = !DILocation(line: 270, column: 41, scope: !11293)
!11300 = !{!11098, !2646, i64 56}
!11301 = !DILocation(line: 270, column: 53, scope: !11293)
!11302 = !DILocation(line: 270, column: 60, scope: !11293)
!11303 = !DILocation(line: 270, column: 68, scope: !11293)
!11304 = !DILocation(line: 270, column: 9, scope: !11290)
!11305 = !DILocation(line: 271, column: 14, scope: !11293)
!11306 = !DILocation(line: 271, column: 22, scope: !11293)
!11307 = !DILocation(line: 271, column: 7, scope: !11293)
!11308 = !DILocation(line: 270, column: 72, scope: !11293)
!11309 = !DILocation(line: 269, column: 42, scope: !11290)
!11310 = !DILocation(line: 269, column: 50, scope: !11290)
!11311 = !DILocation(line: 269, column: 40, scope: !11290)
!11312 = !DILocation(line: 269, column: 3, scope: !11290)
!11313 = distinct !{!11313, !11291, !11314}
!11314 = !DILocation(line: 271, column: 22, scope: !11286)
!11315 = !DILocation(line: 273, column: 3, scope: !11267)
!11316 = !DILocation(line: 274, column: 1, scope: !11267)
!11317 = distinct !DISubprogram(name: "safe_hasher", scope: !842, file: !842, line: 249, type: !946, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !833, retainedNodes: !209)
!11318 = !DILocalVariable(name: "table", arg: 1, scope: !11317, file: !842, line: 249, type: !838)
!11319 = !DILocation(line: 249, column: 32, scope: !11317)
!11320 = !DILocalVariable(name: "key", arg: 2, scope: !11317, file: !842, line: 249, type: !513)
!11321 = !DILocation(line: 249, column: 51, scope: !11317)
!11322 = !DILocalVariable(name: "n", scope: !11317, file: !842, line: 251, type: !55)
!11323 = !DILocation(line: 251, column: 10, scope: !11317)
!11324 = !DILocation(line: 251, column: 14, scope: !11317)
!11325 = !DILocation(line: 251, column: 21, scope: !11317)
!11326 = !{!11098, !2646, i64 48}
!11327 = !DILocation(line: 251, column: 29, scope: !11317)
!11328 = !DILocation(line: 251, column: 34, scope: !11317)
!11329 = !DILocation(line: 251, column: 41, scope: !11317)
!11330 = !DILocation(line: 252, column: 10, scope: !11331)
!11331 = distinct !DILexicalBlock(scope: !11317, file: !842, line: 252, column: 7)
!11332 = !DILocation(line: 252, column: 14, scope: !11331)
!11333 = !DILocation(line: 252, column: 21, scope: !11331)
!11334 = !DILocation(line: 252, column: 12, scope: !11331)
!11335 = !DILocation(line: 252, column: 7, scope: !11317)
!11336 = !DILocation(line: 253, column: 5, scope: !11331)
!11337 = !DILocation(line: 254, column: 10, scope: !11317)
!11338 = !DILocation(line: 254, column: 17, scope: !11317)
!11339 = !DILocation(line: 254, column: 26, scope: !11317)
!11340 = !DILocation(line: 254, column: 24, scope: !11317)
!11341 = !DILocation(line: 254, column: 3, scope: !11317)
!11342 = distinct !DISubprogram(name: "hash_get_first", scope: !842, file: !842, line: 288, type: !918, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !833, retainedNodes: !209)
!11343 = !DILocalVariable(name: "table", arg: 1, scope: !11342, file: !842, line: 288, type: !838)
!11344 = !DILocation(line: 288, column: 35, scope: !11342)
!11345 = !DILocalVariable(name: "bucket", scope: !11342, file: !842, line: 290, type: !851)
!11346 = !DILocation(line: 290, column: 28, scope: !11342)
!11347 = !DILocation(line: 292, column: 7, scope: !11348)
!11348 = distinct !DILexicalBlock(scope: !11342, file: !842, line: 292, column: 7)
!11349 = !DILocation(line: 292, column: 14, scope: !11348)
!11350 = !DILocation(line: 292, column: 24, scope: !11348)
!11351 = !DILocation(line: 292, column: 7, scope: !11342)
!11352 = !DILocation(line: 293, column: 5, scope: !11348)
!11353 = !DILocation(line: 295, column: 17, scope: !11354)
!11354 = distinct !DILexicalBlock(scope: !11342, file: !842, line: 295, column: 3)
!11355 = !DILocation(line: 295, column: 24, scope: !11354)
!11356 = !DILocation(line: 295, column: 15, scope: !11354)
!11357 = !DILocation(line: 295, column: 8, scope: !11354)
!11358 = !DILocation(line: 296, column: 12, scope: !11359)
!11359 = distinct !DILexicalBlock(scope: !11360, file: !842, line: 296, column: 9)
!11360 = distinct !DILexicalBlock(scope: !11354, file: !842, line: 295, column: 3)
!11361 = !DILocation(line: 296, column: 21, scope: !11359)
!11362 = !DILocation(line: 296, column: 28, scope: !11359)
!11363 = !DILocation(line: 296, column: 19, scope: !11359)
!11364 = !DILocation(line: 296, column: 9, scope: !11360)
!11365 = !DILocation(line: 297, column: 7, scope: !11359)
!11366 = !DILocation(line: 298, column: 14, scope: !11367)
!11367 = distinct !DILexicalBlock(scope: !11359, file: !842, line: 298, column: 14)
!11368 = !DILocation(line: 298, column: 22, scope: !11367)
!11369 = !DILocation(line: 298, column: 14, scope: !11359)
!11370 = !DILocation(line: 299, column: 14, scope: !11367)
!11371 = !DILocation(line: 299, column: 22, scope: !11367)
!11372 = !DILocation(line: 299, column: 7, scope: !11367)
!11373 = !DILocation(line: 296, column: 40, scope: !11359)
!11374 = !DILocation(line: 295, column: 40, scope: !11360)
!11375 = !DILocation(line: 295, column: 3, scope: !11360)
!11376 = distinct !{!11376, !11377, !11378}
!11377 = !DILocation(line: 295, column: 3, scope: !11354)
!11378 = !DILocation(line: 299, column: 22, scope: !11354)
!11379 = !DILocation(line: 300, column: 1, scope: !11342)
!11380 = distinct !DISubprogram(name: "hash_get_next", scope: !842, file: !842, line: 307, type: !916, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !833, retainedNodes: !209)
!11381 = !DILocalVariable(name: "table", arg: 1, scope: !11380, file: !842, line: 307, type: !838)
!11382 = !DILocation(line: 307, column: 34, scope: !11380)
!11383 = !DILocalVariable(name: "entry", arg: 2, scope: !11380, file: !842, line: 307, type: !513)
!11384 = !DILocation(line: 307, column: 53, scope: !11380)
!11385 = !DILocalVariable(name: "bucket", scope: !11380, file: !842, line: 309, type: !851)
!11386 = !DILocation(line: 309, column: 28, scope: !11380)
!11387 = !DILocation(line: 309, column: 50, scope: !11380)
!11388 = !DILocation(line: 309, column: 57, scope: !11380)
!11389 = !DILocation(line: 309, column: 37, scope: !11380)
!11390 = !DILocalVariable(name: "cursor", scope: !11380, file: !842, line: 310, type: !851)
!11391 = !DILocation(line: 310, column: 28, scope: !11380)
!11392 = !DILocation(line: 313, column: 12, scope: !11380)
!11393 = !DILocation(line: 313, column: 10, scope: !11380)
!11394 = !DILocation(line: 314, column: 3, scope: !11380)
!11395 = !DILocation(line: 316, column: 11, scope: !11396)
!11396 = distinct !DILexicalBlock(scope: !11397, file: !842, line: 316, column: 11)
!11397 = distinct !DILexicalBlock(scope: !11380, file: !842, line: 315, column: 5)
!11398 = !DILocation(line: 316, column: 19, scope: !11396)
!11399 = !DILocation(line: 316, column: 27, scope: !11396)
!11400 = !DILocation(line: 316, column: 24, scope: !11396)
!11401 = !DILocation(line: 316, column: 33, scope: !11396)
!11402 = !DILocation(line: 316, column: 36, scope: !11396)
!11403 = !DILocation(line: 316, column: 44, scope: !11396)
!11404 = !DILocation(line: 316, column: 11, scope: !11397)
!11405 = !DILocation(line: 317, column: 16, scope: !11396)
!11406 = !DILocation(line: 317, column: 24, scope: !11396)
!11407 = !DILocation(line: 317, column: 30, scope: !11396)
!11408 = !DILocation(line: 317, column: 9, scope: !11396)
!11409 = !DILocation(line: 318, column: 16, scope: !11397)
!11410 = !DILocation(line: 318, column: 24, scope: !11397)
!11411 = !DILocation(line: 318, column: 14, scope: !11397)
!11412 = !DILocation(line: 319, column: 5, scope: !11397)
!11413 = !DILocation(line: 320, column: 10, scope: !11380)
!11414 = !DILocation(line: 320, column: 17, scope: !11380)
!11415 = distinct !{!11415, !11394, !11416}
!11416 = !DILocation(line: 320, column: 24, scope: !11380)
!11417 = !DILocation(line: 323, column: 3, scope: !11380)
!11418 = !DILocation(line: 323, column: 10, scope: !11380)
!11419 = !DILocation(line: 323, column: 21, scope: !11380)
!11420 = !DILocation(line: 323, column: 28, scope: !11380)
!11421 = !DILocation(line: 323, column: 19, scope: !11380)
!11422 = !DILocation(line: 324, column: 9, scope: !11423)
!11423 = distinct !DILexicalBlock(scope: !11380, file: !842, line: 324, column: 9)
!11424 = !DILocation(line: 324, column: 17, scope: !11423)
!11425 = !DILocation(line: 324, column: 9, scope: !11380)
!11426 = !DILocation(line: 325, column: 14, scope: !11423)
!11427 = !DILocation(line: 325, column: 22, scope: !11423)
!11428 = !DILocation(line: 325, column: 7, scope: !11423)
!11429 = distinct !{!11429, !11417, !11430}
!11430 = !DILocation(line: 325, column: 22, scope: !11380)
!11431 = !DILocation(line: 328, column: 3, scope: !11380)
!11432 = !DILocation(line: 329, column: 1, scope: !11380)
!11433 = distinct !DISubprogram(name: "hash_get_entries", scope: !842, file: !842, line: 336, type: !920, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !833, retainedNodes: !209)
!11434 = !DILocalVariable(name: "table", arg: 1, scope: !11433, file: !842, line: 336, type: !838)
!11435 = !DILocation(line: 336, column: 37, scope: !11433)
!11436 = !DILocalVariable(name: "buffer", arg: 2, scope: !11433, file: !842, line: 336, type: !922)
!11437 = !DILocation(line: 336, column: 51, scope: !11433)
!11438 = !DILocalVariable(name: "buffer_size", arg: 3, scope: !11433, file: !842, line: 337, type: !55)
!11439 = !DILocation(line: 337, column: 26, scope: !11433)
!11440 = !DILocalVariable(name: "counter", scope: !11433, file: !842, line: 339, type: !55)
!11441 = !DILocation(line: 339, column: 10, scope: !11433)
!11442 = !DILocalVariable(name: "bucket", scope: !11433, file: !842, line: 340, type: !851)
!11443 = !DILocation(line: 340, column: 28, scope: !11433)
!11444 = !DILocalVariable(name: "cursor", scope: !11433, file: !842, line: 341, type: !851)
!11445 = !DILocation(line: 341, column: 28, scope: !11433)
!11446 = !DILocation(line: 343, column: 17, scope: !11447)
!11447 = distinct !DILexicalBlock(scope: !11433, file: !842, line: 343, column: 3)
!11448 = !DILocation(line: 343, column: 24, scope: !11447)
!11449 = !DILocation(line: 343, column: 15, scope: !11447)
!11450 = !DILocation(line: 343, column: 8, scope: !11447)
!11451 = !DILocation(line: 343, column: 32, scope: !11452)
!11452 = distinct !DILexicalBlock(scope: !11447, file: !842, line: 343, column: 3)
!11453 = !DILocation(line: 343, column: 41, scope: !11452)
!11454 = !DILocation(line: 343, column: 48, scope: !11452)
!11455 = !DILocation(line: 343, column: 39, scope: !11452)
!11456 = !DILocation(line: 343, column: 3, scope: !11447)
!11457 = !DILocation(line: 345, column: 11, scope: !11458)
!11458 = distinct !DILexicalBlock(scope: !11459, file: !842, line: 345, column: 11)
!11459 = distinct !DILexicalBlock(scope: !11452, file: !842, line: 344, column: 5)
!11460 = !DILocation(line: 345, column: 19, scope: !11458)
!11461 = !DILocation(line: 345, column: 11, scope: !11459)
!11462 = !DILocation(line: 347, column: 25, scope: !11463)
!11463 = distinct !DILexicalBlock(scope: !11464, file: !842, line: 347, column: 11)
!11464 = distinct !DILexicalBlock(scope: !11458, file: !842, line: 346, column: 9)
!11465 = !DILocation(line: 347, column: 23, scope: !11463)
!11466 = !DILocation(line: 347, column: 16, scope: !11463)
!11467 = !DILocation(line: 347, column: 33, scope: !11468)
!11468 = distinct !DILexicalBlock(scope: !11463, file: !842, line: 347, column: 11)
!11469 = !DILocation(line: 347, column: 11, scope: !11463)
!11470 = !DILocation(line: 349, column: 19, scope: !11471)
!11471 = distinct !DILexicalBlock(scope: !11472, file: !842, line: 349, column: 19)
!11472 = distinct !DILexicalBlock(scope: !11468, file: !842, line: 348, column: 13)
!11473 = !DILocation(line: 349, column: 30, scope: !11471)
!11474 = !DILocation(line: 349, column: 27, scope: !11471)
!11475 = !DILocation(line: 349, column: 19, scope: !11472)
!11476 = !DILocation(line: 350, column: 24, scope: !11471)
!11477 = !DILocation(line: 350, column: 17, scope: !11471)
!11478 = !DILocation(line: 351, column: 35, scope: !11472)
!11479 = !DILocation(line: 351, column: 43, scope: !11472)
!11480 = !DILocation(line: 351, column: 15, scope: !11472)
!11481 = !DILocation(line: 351, column: 29, scope: !11472)
!11482 = !DILocation(line: 351, column: 33, scope: !11472)
!11483 = !DILocation(line: 352, column: 13, scope: !11472)
!11484 = !DILocation(line: 347, column: 50, scope: !11468)
!11485 = !DILocation(line: 347, column: 58, scope: !11468)
!11486 = !DILocation(line: 347, column: 48, scope: !11468)
!11487 = !DILocation(line: 347, column: 11, scope: !11468)
!11488 = distinct !{!11488, !11469, !11489}
!11489 = !DILocation(line: 352, column: 13, scope: !11463)
!11490 = !DILocation(line: 353, column: 9, scope: !11464)
!11491 = !DILocation(line: 354, column: 5, scope: !11459)
!11492 = !DILocation(line: 343, column: 68, scope: !11452)
!11493 = !DILocation(line: 343, column: 3, scope: !11452)
!11494 = distinct !{!11494, !11456, !11495}
!11495 = !DILocation(line: 354, column: 5, scope: !11447)
!11496 = !DILocation(line: 356, column: 10, scope: !11433)
!11497 = !DILocation(line: 356, column: 3, scope: !11433)
!11498 = !DILocation(line: 357, column: 1, scope: !11433)
!11499 = distinct !DISubprogram(name: "hash_do_for_each", scope: !842, file: !842, line: 368, type: !923, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !833, retainedNodes: !209)
!11500 = !DILocalVariable(name: "table", arg: 1, scope: !11499, file: !842, line: 368, type: !838)
!11501 = !DILocation(line: 368, column: 37, scope: !11499)
!11502 = !DILocalVariable(name: "processor", arg: 2, scope: !11499, file: !842, line: 368, type: !925)
!11503 = !DILocation(line: 368, column: 59, scope: !11499)
!11504 = !DILocalVariable(name: "processor_data", arg: 3, scope: !11499, file: !842, line: 369, type: !53)
!11505 = !DILocation(line: 369, column: 25, scope: !11499)
!11506 = !DILocalVariable(name: "counter", scope: !11499, file: !842, line: 371, type: !55)
!11507 = !DILocation(line: 371, column: 10, scope: !11499)
!11508 = !DILocalVariable(name: "bucket", scope: !11499, file: !842, line: 372, type: !851)
!11509 = !DILocation(line: 372, column: 28, scope: !11499)
!11510 = !DILocalVariable(name: "cursor", scope: !11499, file: !842, line: 373, type: !851)
!11511 = !DILocation(line: 373, column: 28, scope: !11499)
!11512 = !DILocation(line: 375, column: 17, scope: !11513)
!11513 = distinct !DILexicalBlock(scope: !11499, file: !842, line: 375, column: 3)
!11514 = !DILocation(line: 375, column: 24, scope: !11513)
!11515 = !DILocation(line: 375, column: 15, scope: !11513)
!11516 = !DILocation(line: 375, column: 8, scope: !11513)
!11517 = !DILocation(line: 375, column: 32, scope: !11518)
!11518 = distinct !DILexicalBlock(scope: !11513, file: !842, line: 375, column: 3)
!11519 = !DILocation(line: 375, column: 41, scope: !11518)
!11520 = !DILocation(line: 375, column: 48, scope: !11518)
!11521 = !DILocation(line: 375, column: 39, scope: !11518)
!11522 = !DILocation(line: 375, column: 3, scope: !11513)
!11523 = !DILocation(line: 377, column: 11, scope: !11524)
!11524 = distinct !DILexicalBlock(scope: !11525, file: !842, line: 377, column: 11)
!11525 = distinct !DILexicalBlock(scope: !11518, file: !842, line: 376, column: 5)
!11526 = !DILocation(line: 377, column: 19, scope: !11524)
!11527 = !DILocation(line: 377, column: 11, scope: !11525)
!11528 = !DILocation(line: 379, column: 25, scope: !11529)
!11529 = distinct !DILexicalBlock(scope: !11530, file: !842, line: 379, column: 11)
!11530 = distinct !DILexicalBlock(scope: !11524, file: !842, line: 378, column: 9)
!11531 = !DILocation(line: 379, column: 23, scope: !11529)
!11532 = !DILocation(line: 379, column: 16, scope: !11529)
!11533 = !DILocation(line: 379, column: 33, scope: !11534)
!11534 = distinct !DILexicalBlock(scope: !11529, file: !842, line: 379, column: 11)
!11535 = !DILocation(line: 379, column: 11, scope: !11529)
!11536 = !DILocation(line: 381, column: 21, scope: !11537)
!11537 = distinct !DILexicalBlock(scope: !11538, file: !842, line: 381, column: 19)
!11538 = distinct !DILexicalBlock(scope: !11534, file: !842, line: 380, column: 13)
!11539 = !DILocation(line: 381, column: 32, scope: !11537)
!11540 = !DILocation(line: 381, column: 40, scope: !11537)
!11541 = !DILocation(line: 381, column: 46, scope: !11537)
!11542 = !DILocation(line: 381, column: 19, scope: !11538)
!11543 = !DILocation(line: 382, column: 24, scope: !11537)
!11544 = !DILocation(line: 382, column: 17, scope: !11537)
!11545 = !DILocation(line: 383, column: 22, scope: !11538)
!11546 = !DILocation(line: 384, column: 13, scope: !11538)
!11547 = !DILocation(line: 379, column: 50, scope: !11534)
!11548 = !DILocation(line: 379, column: 58, scope: !11534)
!11549 = !DILocation(line: 379, column: 48, scope: !11534)
!11550 = !DILocation(line: 379, column: 11, scope: !11534)
!11551 = distinct !{!11551, !11535, !11552}
!11552 = !DILocation(line: 384, column: 13, scope: !11529)
!11553 = !DILocation(line: 385, column: 9, scope: !11530)
!11554 = !DILocation(line: 386, column: 5, scope: !11525)
!11555 = !DILocation(line: 375, column: 68, scope: !11518)
!11556 = !DILocation(line: 375, column: 3, scope: !11518)
!11557 = distinct !{!11557, !11522, !11558}
!11558 = !DILocation(line: 386, column: 5, scope: !11513)
!11559 = !DILocation(line: 388, column: 10, scope: !11499)
!11560 = !DILocation(line: 388, column: 3, scope: !11499)
!11561 = !DILocation(line: 389, column: 1, scope: !11499)
!11562 = distinct !DISubprogram(name: "hash_string", scope: !842, file: !842, line: 428, type: !929, scopeLine: 429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !833, retainedNodes: !209)
!11563 = !DILocalVariable(name: "string", arg: 1, scope: !11562, file: !842, line: 428, type: !180)
!11564 = !DILocation(line: 428, column: 26, scope: !11562)
!11565 = !DILocalVariable(name: "n_buckets", arg: 2, scope: !11562, file: !842, line: 428, type: !55)
!11566 = !DILocation(line: 428, column: 41, scope: !11562)
!11567 = !DILocalVariable(name: "value", scope: !11562, file: !842, line: 430, type: !55)
!11568 = !DILocation(line: 430, column: 10, scope: !11562)
!11569 = !DILocalVariable(name: "ch", scope: !11562, file: !842, line: 431, type: !554)
!11570 = !DILocation(line: 431, column: 17, scope: !11562)
!11571 = !DILocation(line: 433, column: 3, scope: !11562)
!11572 = !DILocation(line: 433, column: 17, scope: !11573)
!11573 = distinct !DILexicalBlock(scope: !11574, file: !842, line: 433, column: 3)
!11574 = distinct !DILexicalBlock(scope: !11562, file: !842, line: 433, column: 3)
!11575 = !DILocation(line: 433, column: 16, scope: !11573)
!11576 = !DILocation(line: 433, column: 14, scope: !11573)
!11577 = !DILocation(line: 433, column: 3, scope: !11574)
!11578 = !DILocation(line: 434, column: 14, scope: !11573)
!11579 = !DILocation(line: 434, column: 20, scope: !11573)
!11580 = !DILocation(line: 434, column: 27, scope: !11573)
!11581 = !DILocation(line: 434, column: 25, scope: !11573)
!11582 = !DILocation(line: 434, column: 33, scope: !11573)
!11583 = !DILocation(line: 434, column: 31, scope: !11573)
!11584 = !DILocation(line: 434, column: 11, scope: !11573)
!11585 = !DILocation(line: 434, column: 5, scope: !11573)
!11586 = !DILocation(line: 433, column: 32, scope: !11573)
!11587 = !DILocation(line: 433, column: 3, scope: !11573)
!11588 = distinct !{!11588, !11577, !11589}
!11589 = !DILocation(line: 434, column: 33, scope: !11574)
!11590 = !DILocation(line: 435, column: 10, scope: !11562)
!11591 = !DILocation(line: 435, column: 3, scope: !11562)
!11592 = distinct !DISubprogram(name: "hash_reset_tuning", scope: !842, file: !842, line: 479, type: !931, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !833, retainedNodes: !209)
!11593 = !DILocalVariable(name: "tuning", arg: 1, scope: !11592, file: !842, line: 479, type: !933)
!11594 = !DILocation(line: 479, column: 33, scope: !11592)
!11595 = !DILocation(line: 481, column: 4, scope: !11592)
!11596 = !DILocation(line: 481, column: 13, scope: !11592)
!11597 = !{i64 0, i64 4, !11598, i64 4, i64 4, !11598, i64 8, i64 4, !11598, i64 12, i64 4, !11598, i64 16, i64 1, !2739}
!11598 = !{!11599, !11599, i64 0}
!11599 = !{!"float", !2634, i64 0}
!11600 = !DILocation(line: 482, column: 1, scope: !11592)
!11601 = distinct !DISubprogram(name: "hash_initialize", scope: !842, file: !842, line: 594, type: !934, scopeLine: 597, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !833, retainedNodes: !209)
!11602 = !DILocalVariable(name: "candidate", arg: 1, scope: !11601, file: !842, line: 594, type: !55)
!11603 = !DILocation(line: 594, column: 25, scope: !11601)
!11604 = !DILocalVariable(name: "tuning", arg: 2, scope: !11601, file: !842, line: 594, type: !857)
!11605 = !DILocation(line: 594, column: 55, scope: !11601)
!11606 = !DILocalVariable(name: "hasher", arg: 3, scope: !11601, file: !842, line: 595, type: !869)
!11607 = !DILocation(line: 595, column: 30, scope: !11601)
!11608 = !DILocalVariable(name: "comparator", arg: 4, scope: !11601, file: !842, line: 595, type: !872)
!11609 = !DILocation(line: 595, column: 54, scope: !11601)
!11610 = !DILocalVariable(name: "data_freer", arg: 5, scope: !11601, file: !842, line: 596, type: !875)
!11611 = !DILocation(line: 596, column: 34, scope: !11601)
!11612 = !DILocalVariable(name: "table", scope: !11601, file: !842, line: 598, type: !936)
!11613 = !DILocation(line: 598, column: 15, scope: !11601)
!11614 = !DILocation(line: 600, column: 7, scope: !11615)
!11615 = distinct !DILexicalBlock(scope: !11601, file: !842, line: 600, column: 7)
!11616 = !DILocation(line: 600, column: 14, scope: !11615)
!11617 = !DILocation(line: 600, column: 7, scope: !11601)
!11618 = !DILocation(line: 601, column: 12, scope: !11615)
!11619 = !DILocation(line: 601, column: 5, scope: !11615)
!11620 = !DILocation(line: 602, column: 7, scope: !11621)
!11621 = distinct !DILexicalBlock(scope: !11601, file: !842, line: 602, column: 7)
!11622 = !DILocation(line: 602, column: 18, scope: !11621)
!11623 = !DILocation(line: 602, column: 7, scope: !11601)
!11624 = !DILocation(line: 603, column: 16, scope: !11621)
!11625 = !DILocation(line: 603, column: 5, scope: !11621)
!11626 = !DILocation(line: 605, column: 11, scope: !11601)
!11627 = !DILocation(line: 605, column: 9, scope: !11601)
!11628 = !DILocation(line: 606, column: 7, scope: !11629)
!11629 = distinct !DILexicalBlock(scope: !11601, file: !842, line: 606, column: 7)
!11630 = !DILocation(line: 606, column: 13, scope: !11629)
!11631 = !DILocation(line: 606, column: 7, scope: !11601)
!11632 = !DILocation(line: 607, column: 5, scope: !11629)
!11633 = !DILocation(line: 609, column: 8, scope: !11634)
!11634 = distinct !DILexicalBlock(scope: !11601, file: !842, line: 609, column: 7)
!11635 = !DILocation(line: 609, column: 7, scope: !11601)
!11636 = !DILocation(line: 610, column: 12, scope: !11634)
!11637 = !DILocation(line: 610, column: 5, scope: !11634)
!11638 = !DILocation(line: 611, column: 19, scope: !11601)
!11639 = !DILocation(line: 611, column: 3, scope: !11601)
!11640 = !DILocation(line: 611, column: 10, scope: !11601)
!11641 = !DILocation(line: 611, column: 17, scope: !11601)
!11642 = !{!11098, !2646, i64 40}
!11643 = !DILocation(line: 612, column: 22, scope: !11644)
!11644 = distinct !DILexicalBlock(scope: !11601, file: !842, line: 612, column: 7)
!11645 = !DILocation(line: 612, column: 8, scope: !11644)
!11646 = !DILocation(line: 612, column: 7, scope: !11601)
!11647 = !DILocation(line: 619, column: 7, scope: !11648)
!11648 = distinct !DILexicalBlock(scope: !11644, file: !842, line: 613, column: 5)
!11649 = !DILocation(line: 622, column: 43, scope: !11601)
!11650 = !DILocation(line: 622, column: 54, scope: !11601)
!11651 = !DILocation(line: 622, column: 22, scope: !11601)
!11652 = !DILocation(line: 622, column: 3, scope: !11601)
!11653 = !DILocation(line: 622, column: 10, scope: !11601)
!11654 = !DILocation(line: 622, column: 20, scope: !11601)
!11655 = !DILocation(line: 623, column: 8, scope: !11656)
!11656 = distinct !DILexicalBlock(scope: !11601, file: !842, line: 623, column: 7)
!11657 = !DILocation(line: 623, column: 15, scope: !11656)
!11658 = !DILocation(line: 623, column: 7, scope: !11601)
!11659 = !DILocation(line: 624, column: 5, scope: !11656)
!11660 = !DILocation(line: 626, column: 27, scope: !11601)
!11661 = !DILocation(line: 626, column: 34, scope: !11601)
!11662 = !DILocation(line: 626, column: 19, scope: !11601)
!11663 = !DILocation(line: 626, column: 3, scope: !11601)
!11664 = !DILocation(line: 626, column: 10, scope: !11601)
!11665 = !DILocation(line: 626, column: 17, scope: !11601)
!11666 = !DILocation(line: 627, column: 7, scope: !11667)
!11667 = distinct !DILexicalBlock(scope: !11601, file: !842, line: 627, column: 7)
!11668 = !DILocation(line: 627, column: 14, scope: !11667)
!11669 = !DILocation(line: 627, column: 21, scope: !11667)
!11670 = !DILocation(line: 627, column: 7, scope: !11601)
!11671 = !DILocation(line: 628, column: 5, scope: !11667)
!11672 = !DILocation(line: 629, column: 25, scope: !11601)
!11673 = !DILocation(line: 629, column: 32, scope: !11601)
!11674 = !DILocation(line: 629, column: 41, scope: !11601)
!11675 = !DILocation(line: 629, column: 48, scope: !11601)
!11676 = !DILocation(line: 629, column: 39, scope: !11601)
!11677 = !DILocation(line: 629, column: 3, scope: !11601)
!11678 = !DILocation(line: 629, column: 10, scope: !11601)
!11679 = !DILocation(line: 629, column: 23, scope: !11601)
!11680 = !DILocation(line: 630, column: 3, scope: !11601)
!11681 = !DILocation(line: 630, column: 10, scope: !11601)
!11682 = !DILocation(line: 630, column: 25, scope: !11601)
!11683 = !DILocation(line: 631, column: 3, scope: !11601)
!11684 = !DILocation(line: 631, column: 10, scope: !11601)
!11685 = !DILocation(line: 631, column: 20, scope: !11601)
!11686 = !DILocation(line: 633, column: 19, scope: !11601)
!11687 = !DILocation(line: 633, column: 3, scope: !11601)
!11688 = !DILocation(line: 633, column: 10, scope: !11601)
!11689 = !DILocation(line: 633, column: 17, scope: !11601)
!11690 = !DILocation(line: 634, column: 23, scope: !11601)
!11691 = !DILocation(line: 634, column: 3, scope: !11601)
!11692 = !DILocation(line: 634, column: 10, scope: !11601)
!11693 = !DILocation(line: 634, column: 21, scope: !11601)
!11694 = !DILocation(line: 635, column: 23, scope: !11601)
!11695 = !DILocation(line: 635, column: 3, scope: !11601)
!11696 = !DILocation(line: 635, column: 10, scope: !11601)
!11697 = !DILocation(line: 635, column: 21, scope: !11601)
!11698 = !{!11098, !2646, i64 64}
!11699 = !DILocation(line: 637, column: 3, scope: !11601)
!11700 = !DILocation(line: 637, column: 10, scope: !11601)
!11701 = !DILocation(line: 637, column: 26, scope: !11601)
!11702 = !{!11098, !2646, i64 72}
!11703 = !DILocation(line: 641, column: 10, scope: !11601)
!11704 = !DILocation(line: 641, column: 3, scope: !11601)
!11705 = !DILabel(scope: !11601, name: "fail", file: !842, line: 643)
!11706 = !DILocation(line: 643, column: 2, scope: !11601)
!11707 = !DILocation(line: 644, column: 9, scope: !11601)
!11708 = !DILocation(line: 644, column: 3, scope: !11601)
!11709 = !DILocation(line: 645, column: 3, scope: !11601)
!11710 = !DILocation(line: 646, column: 1, scope: !11601)
!11711 = distinct !DISubprogram(name: "raw_hasher", scope: !842, file: !842, line: 486, type: !633, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !833, retainedNodes: !209)
!11712 = !DILocalVariable(name: "data", arg: 1, scope: !11711, file: !842, line: 486, type: !513)
!11713 = !DILocation(line: 486, column: 25, scope: !11711)
!11714 = !DILocalVariable(name: "n", arg: 2, scope: !11711, file: !842, line: 486, type: !55)
!11715 = !DILocation(line: 486, column: 38, scope: !11711)
!11716 = !DILocalVariable(name: "val", scope: !11711, file: !842, line: 493, type: !55)
!11717 = !DILocation(line: 493, column: 10, scope: !11711)
!11718 = !DILocation(line: 493, column: 34, scope: !11711)
!11719 = !DILocation(line: 493, column: 25, scope: !11711)
!11720 = !DILocation(line: 493, column: 16, scope: !11711)
!11721 = !DILocation(line: 494, column: 10, scope: !11711)
!11722 = !DILocation(line: 494, column: 16, scope: !11711)
!11723 = !DILocation(line: 494, column: 14, scope: !11711)
!11724 = !DILocation(line: 494, column: 3, scope: !11711)
!11725 = distinct !DISubprogram(name: "raw_comparator", scope: !842, file: !842, line: 499, type: !635, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !833, retainedNodes: !209)
!11726 = !DILocalVariable(name: "a", arg: 1, scope: !11725, file: !842, line: 499, type: !513)
!11727 = !DILocation(line: 499, column: 29, scope: !11725)
!11728 = !DILocalVariable(name: "b", arg: 2, scope: !11725, file: !842, line: 499, type: !513)
!11729 = !DILocation(line: 499, column: 44, scope: !11725)
!11730 = !DILocation(line: 501, column: 10, scope: !11725)
!11731 = !DILocation(line: 501, column: 15, scope: !11725)
!11732 = !DILocation(line: 501, column: 12, scope: !11725)
!11733 = !DILocation(line: 501, column: 3, scope: !11725)
!11734 = distinct !DISubprogram(name: "check_tuning", scope: !842, file: !842, line: 512, type: !948, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !833, retainedNodes: !209)
!11735 = !DILocalVariable(name: "table", arg: 1, scope: !11734, file: !842, line: 512, type: !936)
!11736 = !DILocation(line: 512, column: 27, scope: !11734)
!11737 = !DILocalVariable(name: "tuning", scope: !11734, file: !842, line: 514, type: !857)
!11738 = !DILocation(line: 514, column: 22, scope: !11734)
!11739 = !DILocation(line: 514, column: 31, scope: !11734)
!11740 = !DILocation(line: 514, column: 38, scope: !11734)
!11741 = !DILocalVariable(name: "epsilon", scope: !11734, file: !842, line: 515, type: !863)
!11742 = !DILocation(line: 515, column: 9, scope: !11734)
!11743 = !DILocation(line: 516, column: 7, scope: !11744)
!11744 = distinct !DILexicalBlock(scope: !11734, file: !842, line: 516, column: 7)
!11745 = !DILocation(line: 516, column: 14, scope: !11744)
!11746 = !DILocation(line: 516, column: 7, scope: !11734)
!11747 = !DILocation(line: 517, column: 5, scope: !11744)
!11748 = !DILocation(line: 524, column: 11, scope: !11734)
!11749 = !DILocation(line: 526, column: 7, scope: !11750)
!11750 = distinct !DILexicalBlock(scope: !11734, file: !842, line: 526, column: 7)
!11751 = !DILocation(line: 526, column: 17, scope: !11750)
!11752 = !DILocation(line: 526, column: 25, scope: !11750)
!11753 = !{!11754, !11599, i64 8}
!11754 = !{!"hash_tuning", !11599, i64 0, !11599, i64 4, !11599, i64 8, !11599, i64 12, !2740, i64 16}
!11755 = !DILocation(line: 526, column: 15, scope: !11750)
!11756 = !DILocation(line: 527, column: 7, scope: !11750)
!11757 = !DILocation(line: 527, column: 10, scope: !11750)
!11758 = !DILocation(line: 527, column: 18, scope: !11750)
!11759 = !DILocation(line: 527, column: 41, scope: !11750)
!11760 = !DILocation(line: 527, column: 39, scope: !11750)
!11761 = !DILocation(line: 527, column: 35, scope: !11750)
!11762 = !DILocation(line: 528, column: 7, scope: !11750)
!11763 = !DILocation(line: 528, column: 14, scope: !11750)
!11764 = !DILocation(line: 528, column: 12, scope: !11750)
!11765 = !DILocation(line: 528, column: 24, scope: !11750)
!11766 = !DILocation(line: 528, column: 32, scope: !11750)
!11767 = !{!11754, !11599, i64 12}
!11768 = !DILocation(line: 528, column: 22, scope: !11750)
!11769 = !DILocation(line: 529, column: 7, scope: !11750)
!11770 = !DILocation(line: 529, column: 15, scope: !11750)
!11771 = !DILocation(line: 529, column: 23, scope: !11750)
!11772 = !{!11754, !11599, i64 0}
!11773 = !DILocation(line: 529, column: 12, scope: !11750)
!11774 = !DILocation(line: 530, column: 7, scope: !11750)
!11775 = !DILocation(line: 530, column: 10, scope: !11750)
!11776 = !DILocation(line: 530, column: 18, scope: !11750)
!11777 = !DILocation(line: 530, column: 37, scope: !11750)
!11778 = !DILocation(line: 530, column: 35, scope: !11750)
!11779 = !DILocation(line: 530, column: 47, scope: !11750)
!11780 = !DILocation(line: 530, column: 55, scope: !11750)
!11781 = !{!11754, !11599, i64 4}
!11782 = !DILocation(line: 530, column: 45, scope: !11750)
!11783 = !DILocation(line: 531, column: 7, scope: !11750)
!11784 = !DILocation(line: 531, column: 10, scope: !11750)
!11785 = !DILocation(line: 531, column: 18, scope: !11750)
!11786 = !DILocation(line: 531, column: 32, scope: !11750)
!11787 = !DILocation(line: 532, column: 7, scope: !11750)
!11788 = !DILocation(line: 532, column: 10, scope: !11750)
!11789 = !DILocation(line: 532, column: 18, scope: !11750)
!11790 = !DILocation(line: 532, column: 37, scope: !11750)
!11791 = !DILocation(line: 532, column: 35, scope: !11750)
!11792 = !DILocation(line: 532, column: 47, scope: !11750)
!11793 = !DILocation(line: 532, column: 55, scope: !11750)
!11794 = !DILocation(line: 532, column: 45, scope: !11750)
!11795 = !DILocation(line: 526, column: 7, scope: !11734)
!11796 = !DILocation(line: 533, column: 5, scope: !11750)
!11797 = !DILocation(line: 535, column: 3, scope: !11734)
!11798 = !DILocation(line: 535, column: 10, scope: !11734)
!11799 = !DILocation(line: 535, column: 17, scope: !11734)
!11800 = !DILocation(line: 536, column: 3, scope: !11734)
!11801 = !DILocation(line: 537, column: 1, scope: !11734)
!11802 = distinct !DISubprogram(name: "compute_bucket_size", scope: !842, file: !842, line: 544, type: !950, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !833, retainedNodes: !209)
!11803 = !DILocalVariable(name: "candidate", arg: 1, scope: !11802, file: !842, line: 544, type: !55)
!11804 = !DILocation(line: 544, column: 29, scope: !11802)
!11805 = !DILocalVariable(name: "tuning", arg: 2, scope: !11802, file: !842, line: 544, type: !857)
!11806 = !DILocation(line: 544, column: 59, scope: !11802)
!11807 = !DILocation(line: 546, column: 8, scope: !11808)
!11808 = distinct !DILexicalBlock(scope: !11802, file: !842, line: 546, column: 7)
!11809 = !DILocation(line: 546, column: 16, scope: !11808)
!11810 = !{!11754, !2740, i64 16}
!11811 = !DILocation(line: 546, column: 7, scope: !11802)
!11812 = !DILocalVariable(name: "new_candidate", scope: !11813, file: !842, line: 548, type: !863)
!11813 = distinct !DILexicalBlock(scope: !11808, file: !842, line: 547, column: 5)
!11814 = !DILocation(line: 548, column: 13, scope: !11813)
!11815 = !DILocation(line: 548, column: 29, scope: !11813)
!11816 = !DILocation(line: 548, column: 41, scope: !11813)
!11817 = !DILocation(line: 548, column: 49, scope: !11813)
!11818 = !DILocation(line: 548, column: 39, scope: !11813)
!11819 = !DILocation(line: 549, column: 23, scope: !11820)
!11820 = distinct !DILexicalBlock(scope: !11813, file: !842, line: 549, column: 11)
!11821 = !DILocation(line: 549, column: 20, scope: !11820)
!11822 = !DILocation(line: 549, column: 11, scope: !11813)
!11823 = !DILocation(line: 550, column: 9, scope: !11820)
!11824 = !DILocation(line: 551, column: 19, scope: !11813)
!11825 = !DILocation(line: 551, column: 17, scope: !11813)
!11826 = !DILocation(line: 552, column: 5, scope: !11813)
!11827 = !DILocation(line: 553, column: 27, scope: !11802)
!11828 = !DILocation(line: 553, column: 15, scope: !11802)
!11829 = !DILocation(line: 553, column: 13, scope: !11802)
!11830 = !DILocation(line: 554, column: 7, scope: !11831)
!11831 = distinct !DILexicalBlock(scope: !11802, file: !842, line: 554, column: 7)
!11832 = !DILocation(line: 554, column: 7, scope: !11802)
!11833 = !DILocation(line: 555, column: 5, scope: !11831)
!11834 = !DILocation(line: 556, column: 10, scope: !11802)
!11835 = !DILocation(line: 556, column: 3, scope: !11802)
!11836 = !DILocation(line: 557, column: 1, scope: !11802)
!11837 = distinct !DISubprogram(name: "next_prime", scope: !842, file: !842, line: 463, type: !952, scopeLine: 464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !833, retainedNodes: !209)
!11838 = !DILocalVariable(name: "candidate", arg: 1, scope: !11837, file: !842, line: 463, type: !55)
!11839 = !DILocation(line: 463, column: 20, scope: !11837)
!11840 = !DILocation(line: 466, column: 7, scope: !11841)
!11841 = distinct !DILexicalBlock(scope: !11837, file: !842, line: 466, column: 7)
!11842 = !DILocation(line: 466, column: 17, scope: !11841)
!11843 = !DILocation(line: 466, column: 7, scope: !11837)
!11844 = !DILocation(line: 467, column: 15, scope: !11841)
!11845 = !DILocation(line: 467, column: 5, scope: !11841)
!11846 = !DILocation(line: 470, column: 13, scope: !11837)
!11847 = !DILocation(line: 472, column: 3, scope: !11837)
!11848 = !DILocation(line: 472, column: 22, scope: !11837)
!11849 = !DILocation(line: 472, column: 19, scope: !11837)
!11850 = !DILocation(line: 472, column: 32, scope: !11837)
!11851 = !DILocation(line: 472, column: 46, scope: !11837)
!11852 = !DILocation(line: 472, column: 36, scope: !11837)
!11853 = !DILocation(line: 472, column: 35, scope: !11837)
!11854 = !DILocation(line: 0, scope: !11837)
!11855 = !DILocation(line: 473, column: 15, scope: !11837)
!11856 = distinct !{!11856, !11847, !11857}
!11857 = !DILocation(line: 473, column: 18, scope: !11837)
!11858 = !DILocation(line: 475, column: 10, scope: !11837)
!11859 = !DILocation(line: 475, column: 3, scope: !11837)
!11860 = distinct !DISubprogram(name: "is_prime", scope: !842, file: !842, line: 444, type: !954, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !833, retainedNodes: !209)
!11861 = !DILocalVariable(name: "candidate", arg: 1, scope: !11860, file: !842, line: 444, type: !55)
!11862 = !DILocation(line: 444, column: 18, scope: !11860)
!11863 = !DILocalVariable(name: "divisor", scope: !11860, file: !842, line: 446, type: !55)
!11864 = !DILocation(line: 446, column: 10, scope: !11860)
!11865 = !DILocalVariable(name: "square", scope: !11860, file: !842, line: 447, type: !55)
!11866 = !DILocation(line: 447, column: 10, scope: !11860)
!11867 = !DILocation(line: 447, column: 19, scope: !11860)
!11868 = !DILocation(line: 447, column: 29, scope: !11860)
!11869 = !DILocation(line: 447, column: 27, scope: !11860)
!11870 = !DILocation(line: 449, column: 3, scope: !11860)
!11871 = !DILocation(line: 449, column: 10, scope: !11860)
!11872 = !DILocation(line: 449, column: 19, scope: !11860)
!11873 = !DILocation(line: 449, column: 17, scope: !11860)
!11874 = !DILocation(line: 449, column: 29, scope: !11860)
!11875 = !DILocation(line: 449, column: 33, scope: !11860)
!11876 = !DILocation(line: 449, column: 45, scope: !11860)
!11877 = !DILocation(line: 449, column: 43, scope: !11860)
!11878 = !DILocation(line: 0, scope: !11860)
!11879 = !DILocation(line: 451, column: 14, scope: !11880)
!11880 = distinct !DILexicalBlock(scope: !11860, file: !842, line: 450, column: 5)
!11881 = !DILocation(line: 452, column: 21, scope: !11880)
!11882 = !DILocation(line: 452, column: 19, scope: !11880)
!11883 = !DILocation(line: 452, column: 14, scope: !11880)
!11884 = !DILocation(line: 453, column: 14, scope: !11880)
!11885 = distinct !{!11885, !11870, !11886}
!11886 = !DILocation(line: 454, column: 5, scope: !11860)
!11887 = !DILocation(line: 456, column: 11, scope: !11860)
!11888 = !DILocation(line: 456, column: 23, scope: !11860)
!11889 = !DILocation(line: 456, column: 21, scope: !11860)
!11890 = !DILocation(line: 456, column: 10, scope: !11860)
!11891 = !DILocation(line: 456, column: 3, scope: !11860)
!11892 = distinct !DISubprogram(name: "hash_clear", scope: !842, file: !842, line: 653, type: !937, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !833, retainedNodes: !209)
!11893 = !DILocalVariable(name: "table", arg: 1, scope: !11892, file: !842, line: 653, type: !936)
!11894 = !DILocation(line: 653, column: 25, scope: !11892)
!11895 = !DILocalVariable(name: "bucket", scope: !11892, file: !842, line: 655, type: !845)
!11896 = !DILocation(line: 655, column: 22, scope: !11892)
!11897 = !DILocation(line: 657, column: 17, scope: !11898)
!11898 = distinct !DILexicalBlock(scope: !11892, file: !842, line: 657, column: 3)
!11899 = !DILocation(line: 657, column: 24, scope: !11898)
!11900 = !DILocation(line: 657, column: 15, scope: !11898)
!11901 = !DILocation(line: 657, column: 8, scope: !11898)
!11902 = !DILocation(line: 657, column: 32, scope: !11903)
!11903 = distinct !DILexicalBlock(scope: !11898, file: !842, line: 657, column: 3)
!11904 = !DILocation(line: 657, column: 41, scope: !11903)
!11905 = !DILocation(line: 657, column: 48, scope: !11903)
!11906 = !DILocation(line: 657, column: 39, scope: !11903)
!11907 = !DILocation(line: 657, column: 3, scope: !11898)
!11908 = !DILocation(line: 659, column: 11, scope: !11909)
!11909 = distinct !DILexicalBlock(scope: !11910, file: !842, line: 659, column: 11)
!11910 = distinct !DILexicalBlock(scope: !11903, file: !842, line: 658, column: 5)
!11911 = !DILocation(line: 659, column: 19, scope: !11909)
!11912 = !DILocation(line: 659, column: 11, scope: !11910)
!11913 = !DILocalVariable(name: "cursor", scope: !11914, file: !842, line: 661, type: !845)
!11914 = distinct !DILexicalBlock(scope: !11909, file: !842, line: 660, column: 9)
!11915 = !DILocation(line: 661, column: 30, scope: !11914)
!11916 = !DILocalVariable(name: "next", scope: !11914, file: !842, line: 662, type: !845)
!11917 = !DILocation(line: 662, column: 30, scope: !11914)
!11918 = !DILocation(line: 665, column: 25, scope: !11919)
!11919 = distinct !DILexicalBlock(scope: !11914, file: !842, line: 665, column: 11)
!11920 = !DILocation(line: 665, column: 33, scope: !11919)
!11921 = !DILocation(line: 665, column: 23, scope: !11919)
!11922 = !DILocation(line: 665, column: 16, scope: !11919)
!11923 = !DILocation(line: 665, column: 39, scope: !11924)
!11924 = distinct !DILexicalBlock(scope: !11919, file: !842, line: 665, column: 11)
!11925 = !DILocation(line: 665, column: 11, scope: !11919)
!11926 = !DILocation(line: 667, column: 19, scope: !11927)
!11927 = distinct !DILexicalBlock(scope: !11928, file: !842, line: 667, column: 19)
!11928 = distinct !DILexicalBlock(scope: !11924, file: !842, line: 666, column: 13)
!11929 = !DILocation(line: 667, column: 26, scope: !11927)
!11930 = !DILocation(line: 667, column: 19, scope: !11928)
!11931 = !DILocation(line: 668, column: 17, scope: !11927)
!11932 = !DILocation(line: 668, column: 24, scope: !11927)
!11933 = !DILocation(line: 668, column: 36, scope: !11927)
!11934 = !DILocation(line: 668, column: 44, scope: !11927)
!11935 = !DILocation(line: 669, column: 15, scope: !11928)
!11936 = !DILocation(line: 669, column: 23, scope: !11928)
!11937 = !DILocation(line: 669, column: 28, scope: !11928)
!11938 = !DILocation(line: 671, column: 22, scope: !11928)
!11939 = !DILocation(line: 671, column: 30, scope: !11928)
!11940 = !DILocation(line: 671, column: 20, scope: !11928)
!11941 = !DILocation(line: 674, column: 30, scope: !11928)
!11942 = !DILocation(line: 674, column: 37, scope: !11928)
!11943 = !DILocation(line: 674, column: 15, scope: !11928)
!11944 = !DILocation(line: 674, column: 23, scope: !11928)
!11945 = !DILocation(line: 674, column: 28, scope: !11928)
!11946 = !DILocation(line: 675, column: 40, scope: !11928)
!11947 = !DILocation(line: 675, column: 15, scope: !11928)
!11948 = !DILocation(line: 675, column: 22, scope: !11928)
!11949 = !DILocation(line: 675, column: 38, scope: !11928)
!11950 = !DILocation(line: 676, column: 13, scope: !11928)
!11951 = !DILocation(line: 665, column: 56, scope: !11924)
!11952 = !DILocation(line: 665, column: 54, scope: !11924)
!11953 = !DILocation(line: 665, column: 11, scope: !11924)
!11954 = distinct !{!11954, !11925, !11955}
!11955 = !DILocation(line: 676, column: 13, scope: !11919)
!11956 = !DILocation(line: 679, column: 15, scope: !11957)
!11957 = distinct !DILexicalBlock(scope: !11914, file: !842, line: 679, column: 15)
!11958 = !DILocation(line: 679, column: 22, scope: !11957)
!11959 = !DILocation(line: 679, column: 15, scope: !11914)
!11960 = !DILocation(line: 680, column: 13, scope: !11957)
!11961 = !DILocation(line: 680, column: 20, scope: !11957)
!11962 = !DILocation(line: 680, column: 32, scope: !11957)
!11963 = !DILocation(line: 680, column: 40, scope: !11957)
!11964 = !DILocation(line: 681, column: 11, scope: !11914)
!11965 = !DILocation(line: 681, column: 19, scope: !11914)
!11966 = !DILocation(line: 681, column: 24, scope: !11914)
!11967 = !DILocation(line: 682, column: 11, scope: !11914)
!11968 = !DILocation(line: 682, column: 19, scope: !11914)
!11969 = !DILocation(line: 682, column: 24, scope: !11914)
!11970 = !DILocation(line: 683, column: 9, scope: !11914)
!11971 = !DILocation(line: 684, column: 5, scope: !11910)
!11972 = !DILocation(line: 657, column: 68, scope: !11903)
!11973 = !DILocation(line: 657, column: 3, scope: !11903)
!11974 = distinct !{!11974, !11907, !11975}
!11975 = !DILocation(line: 684, column: 5, scope: !11898)
!11976 = !DILocation(line: 686, column: 3, scope: !11892)
!11977 = !DILocation(line: 686, column: 10, scope: !11892)
!11978 = !DILocation(line: 686, column: 25, scope: !11892)
!11979 = !DILocation(line: 687, column: 3, scope: !11892)
!11980 = !DILocation(line: 687, column: 10, scope: !11892)
!11981 = !DILocation(line: 687, column: 20, scope: !11892)
!11982 = !DILocation(line: 688, column: 1, scope: !11892)
!11983 = distinct !DISubprogram(name: "hash_free", scope: !842, file: !842, line: 696, type: !937, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !833, retainedNodes: !209)
!11984 = !DILocalVariable(name: "table", arg: 1, scope: !11983, file: !842, line: 696, type: !936)
!11985 = !DILocation(line: 696, column: 24, scope: !11983)
!11986 = !DILocalVariable(name: "bucket", scope: !11983, file: !842, line: 698, type: !845)
!11987 = !DILocation(line: 698, column: 22, scope: !11983)
!11988 = !DILocalVariable(name: "cursor", scope: !11983, file: !842, line: 699, type: !845)
!11989 = !DILocation(line: 699, column: 22, scope: !11983)
!11990 = !DILocalVariable(name: "next", scope: !11983, file: !842, line: 700, type: !845)
!11991 = !DILocation(line: 700, column: 22, scope: !11983)
!11992 = !DILocation(line: 703, column: 7, scope: !11993)
!11993 = distinct !DILexicalBlock(scope: !11983, file: !842, line: 703, column: 7)
!11994 = !DILocation(line: 703, column: 14, scope: !11993)
!11995 = !DILocation(line: 703, column: 25, scope: !11993)
!11996 = !DILocation(line: 703, column: 28, scope: !11993)
!11997 = !DILocation(line: 703, column: 35, scope: !11993)
!11998 = !DILocation(line: 703, column: 7, scope: !11983)
!11999 = !DILocation(line: 705, column: 21, scope: !12000)
!12000 = distinct !DILexicalBlock(scope: !12001, file: !842, line: 705, column: 7)
!12001 = distinct !DILexicalBlock(scope: !11993, file: !842, line: 704, column: 5)
!12002 = !DILocation(line: 705, column: 28, scope: !12000)
!12003 = !DILocation(line: 705, column: 19, scope: !12000)
!12004 = !DILocation(line: 705, column: 12, scope: !12000)
!12005 = !DILocation(line: 705, column: 36, scope: !12006)
!12006 = distinct !DILexicalBlock(scope: !12000, file: !842, line: 705, column: 7)
!12007 = !DILocation(line: 705, column: 45, scope: !12006)
!12008 = !DILocation(line: 705, column: 52, scope: !12006)
!12009 = !DILocation(line: 705, column: 43, scope: !12006)
!12010 = !DILocation(line: 705, column: 7, scope: !12000)
!12011 = !DILocation(line: 707, column: 15, scope: !12012)
!12012 = distinct !DILexicalBlock(scope: !12013, file: !842, line: 707, column: 15)
!12013 = distinct !DILexicalBlock(scope: !12006, file: !842, line: 706, column: 9)
!12014 = !DILocation(line: 707, column: 23, scope: !12012)
!12015 = !DILocation(line: 707, column: 15, scope: !12013)
!12016 = !DILocation(line: 709, column: 29, scope: !12017)
!12017 = distinct !DILexicalBlock(scope: !12018, file: !842, line: 709, column: 15)
!12018 = distinct !DILexicalBlock(scope: !12012, file: !842, line: 708, column: 13)
!12019 = !DILocation(line: 709, column: 27, scope: !12017)
!12020 = !DILocation(line: 709, column: 20, scope: !12017)
!12021 = !DILocation(line: 709, column: 37, scope: !12022)
!12022 = distinct !DILexicalBlock(scope: !12017, file: !842, line: 709, column: 15)
!12023 = !DILocation(line: 709, column: 15, scope: !12017)
!12024 = !DILocation(line: 710, column: 17, scope: !12022)
!12025 = !DILocation(line: 710, column: 24, scope: !12022)
!12026 = !DILocation(line: 710, column: 36, scope: !12022)
!12027 = !DILocation(line: 710, column: 44, scope: !12022)
!12028 = !DILocation(line: 709, column: 54, scope: !12022)
!12029 = !DILocation(line: 709, column: 62, scope: !12022)
!12030 = !DILocation(line: 709, column: 52, scope: !12022)
!12031 = !DILocation(line: 709, column: 15, scope: !12022)
!12032 = distinct !{!12032, !12023, !12033}
!12033 = !DILocation(line: 710, column: 48, scope: !12017)
!12034 = !DILocation(line: 711, column: 13, scope: !12018)
!12035 = !DILocation(line: 712, column: 9, scope: !12013)
!12036 = !DILocation(line: 705, column: 72, scope: !12006)
!12037 = !DILocation(line: 705, column: 7, scope: !12006)
!12038 = distinct !{!12038, !12010, !12039}
!12039 = !DILocation(line: 712, column: 9, scope: !12000)
!12040 = !DILocation(line: 713, column: 5, scope: !12001)
!12041 = !DILocation(line: 722, column: 17, scope: !12042)
!12042 = distinct !DILexicalBlock(scope: !11983, file: !842, line: 722, column: 3)
!12043 = !DILocation(line: 722, column: 24, scope: !12042)
!12044 = !DILocation(line: 722, column: 15, scope: !12042)
!12045 = !DILocation(line: 722, column: 8, scope: !12042)
!12046 = !DILocation(line: 722, column: 32, scope: !12047)
!12047 = distinct !DILexicalBlock(scope: !12042, file: !842, line: 722, column: 3)
!12048 = !DILocation(line: 722, column: 41, scope: !12047)
!12049 = !DILocation(line: 722, column: 48, scope: !12047)
!12050 = !DILocation(line: 722, column: 39, scope: !12047)
!12051 = !DILocation(line: 722, column: 3, scope: !12042)
!12052 = !DILocation(line: 724, column: 21, scope: !12053)
!12053 = distinct !DILexicalBlock(scope: !12054, file: !842, line: 724, column: 7)
!12054 = distinct !DILexicalBlock(scope: !12047, file: !842, line: 723, column: 5)
!12055 = !DILocation(line: 724, column: 29, scope: !12053)
!12056 = !DILocation(line: 724, column: 19, scope: !12053)
!12057 = !DILocation(line: 724, column: 12, scope: !12053)
!12058 = !DILocation(line: 724, column: 35, scope: !12059)
!12059 = distinct !DILexicalBlock(scope: !12053, file: !842, line: 724, column: 7)
!12060 = !DILocation(line: 724, column: 7, scope: !12053)
!12061 = !DILocation(line: 726, column: 18, scope: !12062)
!12062 = distinct !DILexicalBlock(scope: !12059, file: !842, line: 725, column: 9)
!12063 = !DILocation(line: 726, column: 26, scope: !12062)
!12064 = !DILocation(line: 726, column: 16, scope: !12062)
!12065 = !DILocation(line: 727, column: 17, scope: !12062)
!12066 = !DILocation(line: 727, column: 11, scope: !12062)
!12067 = !DILocation(line: 728, column: 9, scope: !12062)
!12068 = !DILocation(line: 724, column: 52, scope: !12059)
!12069 = !DILocation(line: 724, column: 50, scope: !12059)
!12070 = !DILocation(line: 724, column: 7, scope: !12059)
!12071 = distinct !{!12071, !12060, !12072}
!12072 = !DILocation(line: 728, column: 9, scope: !12053)
!12073 = !DILocation(line: 729, column: 5, scope: !12054)
!12074 = !DILocation(line: 722, column: 68, scope: !12047)
!12075 = !DILocation(line: 722, column: 3, scope: !12047)
!12076 = distinct !{!12076, !12051, !12077}
!12077 = !DILocation(line: 729, column: 5, scope: !12042)
!12078 = !DILocation(line: 732, column: 17, scope: !12079)
!12079 = distinct !DILexicalBlock(scope: !11983, file: !842, line: 732, column: 3)
!12080 = !DILocation(line: 732, column: 24, scope: !12079)
!12081 = !DILocation(line: 732, column: 15, scope: !12079)
!12082 = !DILocation(line: 732, column: 8, scope: !12079)
!12083 = !DILocation(line: 732, column: 41, scope: !12084)
!12084 = distinct !DILexicalBlock(scope: !12079, file: !842, line: 732, column: 3)
!12085 = !DILocation(line: 732, column: 3, scope: !12079)
!12086 = !DILocation(line: 734, column: 14, scope: !12087)
!12087 = distinct !DILexicalBlock(scope: !12084, file: !842, line: 733, column: 5)
!12088 = !DILocation(line: 734, column: 22, scope: !12087)
!12089 = !DILocation(line: 734, column: 12, scope: !12087)
!12090 = !DILocation(line: 735, column: 13, scope: !12087)
!12091 = !DILocation(line: 735, column: 7, scope: !12087)
!12092 = !DILocation(line: 736, column: 5, scope: !12087)
!12093 = !DILocation(line: 732, column: 58, scope: !12084)
!12094 = !DILocation(line: 732, column: 56, scope: !12084)
!12095 = !DILocation(line: 732, column: 3, scope: !12084)
!12096 = distinct !{!12096, !12085, !12097}
!12097 = !DILocation(line: 736, column: 5, scope: !12079)
!12098 = !DILocation(line: 741, column: 9, scope: !11983)
!12099 = !DILocation(line: 741, column: 16, scope: !11983)
!12100 = !DILocation(line: 741, column: 3, scope: !11983)
!12101 = !DILocation(line: 742, column: 9, scope: !11983)
!12102 = !DILocation(line: 742, column: 3, scope: !11983)
!12103 = !DILocation(line: 743, column: 1, scope: !11983)
!12104 = distinct !DISubprogram(name: "hash_rehash", scope: !842, file: !842, line: 943, type: !939, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !833, retainedNodes: !209)
!12105 = !DILocalVariable(name: "table", arg: 1, scope: !12104, file: !842, line: 943, type: !936)
!12106 = !DILocation(line: 943, column: 26, scope: !12104)
!12107 = !DILocalVariable(name: "candidate", arg: 2, scope: !12104, file: !842, line: 943, type: !55)
!12108 = !DILocation(line: 943, column: 40, scope: !12104)
!12109 = !DILocalVariable(name: "storage", scope: !12104, file: !842, line: 945, type: !840)
!12110 = !DILocation(line: 945, column: 14, scope: !12104)
!12111 = !DILocalVariable(name: "new_table", scope: !12104, file: !842, line: 946, type: !936)
!12112 = !DILocation(line: 946, column: 15, scope: !12104)
!12113 = !DILocalVariable(name: "new_size", scope: !12104, file: !842, line: 947, type: !55)
!12114 = !DILocation(line: 947, column: 10, scope: !12104)
!12115 = !DILocation(line: 947, column: 42, scope: !12104)
!12116 = !DILocation(line: 947, column: 53, scope: !12104)
!12117 = !DILocation(line: 947, column: 60, scope: !12104)
!12118 = !DILocation(line: 947, column: 21, scope: !12104)
!12119 = !DILocation(line: 949, column: 8, scope: !12120)
!12120 = distinct !DILexicalBlock(scope: !12104, file: !842, line: 949, column: 7)
!12121 = !DILocation(line: 949, column: 7, scope: !12104)
!12122 = !DILocation(line: 950, column: 5, scope: !12120)
!12123 = !DILocation(line: 951, column: 7, scope: !12124)
!12124 = distinct !DILexicalBlock(scope: !12104, file: !842, line: 951, column: 7)
!12125 = !DILocation(line: 951, column: 19, scope: !12124)
!12126 = !DILocation(line: 951, column: 26, scope: !12124)
!12127 = !DILocation(line: 951, column: 16, scope: !12124)
!12128 = !DILocation(line: 951, column: 7, scope: !12104)
!12129 = !DILocation(line: 952, column: 5, scope: !12124)
!12130 = !DILocation(line: 953, column: 13, scope: !12104)
!12131 = !DILocation(line: 954, column: 31, scope: !12104)
!12132 = !DILocation(line: 954, column: 23, scope: !12104)
!12133 = !DILocation(line: 954, column: 3, scope: !12104)
!12134 = !DILocation(line: 954, column: 14, scope: !12104)
!12135 = !DILocation(line: 954, column: 21, scope: !12104)
!12136 = !DILocation(line: 955, column: 7, scope: !12137)
!12137 = distinct !DILexicalBlock(scope: !12104, file: !842, line: 955, column: 7)
!12138 = !DILocation(line: 955, column: 18, scope: !12137)
!12139 = !DILocation(line: 955, column: 25, scope: !12137)
!12140 = !DILocation(line: 955, column: 7, scope: !12104)
!12141 = !DILocation(line: 956, column: 5, scope: !12137)
!12142 = !DILocation(line: 957, column: 26, scope: !12104)
!12143 = !DILocation(line: 957, column: 3, scope: !12104)
!12144 = !DILocation(line: 957, column: 14, scope: !12104)
!12145 = !DILocation(line: 957, column: 24, scope: !12104)
!12146 = !DILocation(line: 958, column: 29, scope: !12104)
!12147 = !DILocation(line: 958, column: 40, scope: !12104)
!12148 = !DILocation(line: 958, column: 49, scope: !12104)
!12149 = !DILocation(line: 958, column: 47, scope: !12104)
!12150 = !DILocation(line: 958, column: 3, scope: !12104)
!12151 = !DILocation(line: 958, column: 14, scope: !12104)
!12152 = !DILocation(line: 958, column: 27, scope: !12104)
!12153 = !DILocation(line: 959, column: 3, scope: !12104)
!12154 = !DILocation(line: 959, column: 14, scope: !12104)
!12155 = !DILocation(line: 959, column: 29, scope: !12104)
!12156 = !DILocation(line: 960, column: 3, scope: !12104)
!12157 = !DILocation(line: 960, column: 14, scope: !12104)
!12158 = !DILocation(line: 960, column: 24, scope: !12104)
!12159 = !DILocation(line: 961, column: 23, scope: !12104)
!12160 = !DILocation(line: 961, column: 30, scope: !12104)
!12161 = !DILocation(line: 961, column: 3, scope: !12104)
!12162 = !DILocation(line: 961, column: 14, scope: !12104)
!12163 = !DILocation(line: 961, column: 21, scope: !12104)
!12164 = !DILocation(line: 962, column: 23, scope: !12104)
!12165 = !DILocation(line: 962, column: 30, scope: !12104)
!12166 = !DILocation(line: 962, column: 3, scope: !12104)
!12167 = !DILocation(line: 962, column: 14, scope: !12104)
!12168 = !DILocation(line: 962, column: 21, scope: !12104)
!12169 = !DILocation(line: 963, column: 27, scope: !12104)
!12170 = !DILocation(line: 963, column: 34, scope: !12104)
!12171 = !DILocation(line: 963, column: 3, scope: !12104)
!12172 = !DILocation(line: 963, column: 14, scope: !12104)
!12173 = !DILocation(line: 963, column: 25, scope: !12104)
!12174 = !DILocation(line: 964, column: 27, scope: !12104)
!12175 = !DILocation(line: 964, column: 34, scope: !12104)
!12176 = !DILocation(line: 964, column: 3, scope: !12104)
!12177 = !DILocation(line: 964, column: 14, scope: !12104)
!12178 = !DILocation(line: 964, column: 25, scope: !12104)
!12179 = !DILocation(line: 984, column: 32, scope: !12104)
!12180 = !DILocation(line: 984, column: 39, scope: !12104)
!12181 = !DILocation(line: 984, column: 3, scope: !12104)
!12182 = !DILocation(line: 984, column: 14, scope: !12104)
!12183 = !DILocation(line: 984, column: 30, scope: !12104)
!12184 = !DILocation(line: 986, column: 25, scope: !12185)
!12185 = distinct !DILexicalBlock(scope: !12104, file: !842, line: 986, column: 7)
!12186 = !DILocation(line: 986, column: 36, scope: !12185)
!12187 = !DILocation(line: 986, column: 7, scope: !12185)
!12188 = !DILocation(line: 986, column: 7, scope: !12104)
!12189 = !DILocation(line: 989, column: 13, scope: !12190)
!12190 = distinct !DILexicalBlock(scope: !12185, file: !842, line: 987, column: 5)
!12191 = !DILocation(line: 989, column: 20, scope: !12190)
!12192 = !DILocation(line: 989, column: 7, scope: !12190)
!12193 = !DILocation(line: 990, column: 23, scope: !12190)
!12194 = !DILocation(line: 990, column: 34, scope: !12190)
!12195 = !DILocation(line: 990, column: 7, scope: !12190)
!12196 = !DILocation(line: 990, column: 14, scope: !12190)
!12197 = !DILocation(line: 990, column: 21, scope: !12190)
!12198 = !DILocation(line: 991, column: 29, scope: !12190)
!12199 = !DILocation(line: 991, column: 40, scope: !12190)
!12200 = !DILocation(line: 991, column: 7, scope: !12190)
!12201 = !DILocation(line: 991, column: 14, scope: !12190)
!12202 = !DILocation(line: 991, column: 27, scope: !12190)
!12203 = !DILocation(line: 992, column: 26, scope: !12190)
!12204 = !DILocation(line: 992, column: 37, scope: !12190)
!12205 = !DILocation(line: 992, column: 7, scope: !12190)
!12206 = !DILocation(line: 992, column: 14, scope: !12190)
!12207 = !DILocation(line: 992, column: 24, scope: !12190)
!12208 = !DILocation(line: 993, column: 31, scope: !12190)
!12209 = !DILocation(line: 993, column: 42, scope: !12190)
!12210 = !DILocation(line: 993, column: 7, scope: !12190)
!12211 = !DILocation(line: 993, column: 14, scope: !12190)
!12212 = !DILocation(line: 993, column: 29, scope: !12190)
!12213 = !DILocation(line: 994, column: 32, scope: !12190)
!12214 = !DILocation(line: 994, column: 43, scope: !12190)
!12215 = !DILocation(line: 994, column: 7, scope: !12190)
!12216 = !DILocation(line: 994, column: 14, scope: !12190)
!12217 = !DILocation(line: 994, column: 30, scope: !12190)
!12218 = !DILocation(line: 996, column: 7, scope: !12190)
!12219 = !DILocation(line: 1012, column: 28, scope: !12104)
!12220 = !DILocation(line: 1012, column: 39, scope: !12104)
!12221 = !DILocation(line: 1012, column: 3, scope: !12104)
!12222 = !DILocation(line: 1012, column: 10, scope: !12104)
!12223 = !DILocation(line: 1012, column: 26, scope: !12104)
!12224 = !DILocation(line: 1013, column: 28, scope: !12225)
!12225 = distinct !DILexicalBlock(scope: !12104, file: !842, line: 1013, column: 7)
!12226 = !DILocation(line: 1013, column: 35, scope: !12225)
!12227 = !DILocation(line: 1013, column: 10, scope: !12225)
!12228 = !DILocation(line: 1014, column: 10, scope: !12225)
!12229 = !DILocation(line: 1014, column: 31, scope: !12225)
!12230 = !DILocation(line: 1014, column: 38, scope: !12225)
!12231 = !DILocation(line: 1014, column: 13, scope: !12225)
!12232 = !DILocation(line: 1013, column: 7, scope: !12104)
!12233 = !DILocation(line: 1015, column: 5, scope: !12225)
!12234 = !DILocation(line: 1017, column: 9, scope: !12104)
!12235 = !DILocation(line: 1017, column: 20, scope: !12104)
!12236 = !DILocation(line: 1017, column: 3, scope: !12104)
!12237 = !DILocation(line: 1018, column: 3, scope: !12104)
!12238 = !DILocation(line: 1019, column: 1, scope: !12104)
!12239 = distinct !DISubprogram(name: "transfer_entries", scope: !842, file: !842, line: 860, type: !956, scopeLine: 861, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !833, retainedNodes: !209)
!12240 = !DILocalVariable(name: "dst", arg: 1, scope: !12239, file: !842, line: 860, type: !936)
!12241 = !DILocation(line: 860, column: 31, scope: !12239)
!12242 = !DILocalVariable(name: "src", arg: 2, scope: !12239, file: !842, line: 860, type: !936)
!12243 = !DILocation(line: 860, column: 48, scope: !12239)
!12244 = !DILocalVariable(name: "safe", arg: 3, scope: !12239, file: !842, line: 860, type: !142)
!12245 = !DILocation(line: 860, column: 58, scope: !12239)
!12246 = !DILocalVariable(name: "bucket", scope: !12239, file: !842, line: 862, type: !845)
!12247 = !DILocation(line: 862, column: 22, scope: !12239)
!12248 = !DILocalVariable(name: "cursor", scope: !12239, file: !842, line: 863, type: !845)
!12249 = !DILocation(line: 863, column: 22, scope: !12239)
!12250 = !DILocalVariable(name: "next", scope: !12239, file: !842, line: 864, type: !845)
!12251 = !DILocation(line: 864, column: 22, scope: !12239)
!12252 = !DILocation(line: 865, column: 17, scope: !12253)
!12253 = distinct !DILexicalBlock(scope: !12239, file: !842, line: 865, column: 3)
!12254 = !DILocation(line: 865, column: 22, scope: !12253)
!12255 = !DILocation(line: 865, column: 15, scope: !12253)
!12256 = !DILocation(line: 865, column: 8, scope: !12253)
!12257 = !DILocation(line: 865, column: 30, scope: !12258)
!12258 = distinct !DILexicalBlock(scope: !12253, file: !842, line: 865, column: 3)
!12259 = !DILocation(line: 865, column: 39, scope: !12258)
!12260 = !DILocation(line: 865, column: 44, scope: !12258)
!12261 = !DILocation(line: 865, column: 37, scope: !12258)
!12262 = !DILocation(line: 865, column: 3, scope: !12253)
!12263 = !DILocation(line: 866, column: 9, scope: !12264)
!12264 = distinct !DILexicalBlock(scope: !12258, file: !842, line: 866, column: 9)
!12265 = !DILocation(line: 866, column: 17, scope: !12264)
!12266 = !DILocation(line: 866, column: 9, scope: !12258)
!12267 = !DILocalVariable(name: "data", scope: !12268, file: !842, line: 868, type: !53)
!12268 = distinct !DILexicalBlock(scope: !12264, file: !842, line: 867, column: 7)
!12269 = !DILocation(line: 868, column: 15, scope: !12268)
!12270 = !DILocalVariable(name: "new_bucket", scope: !12268, file: !842, line: 869, type: !845)
!12271 = !DILocation(line: 869, column: 28, scope: !12268)
!12272 = !DILocation(line: 877, column: 23, scope: !12273)
!12273 = distinct !DILexicalBlock(scope: !12268, file: !842, line: 877, column: 9)
!12274 = !DILocation(line: 877, column: 31, scope: !12273)
!12275 = !DILocation(line: 877, column: 21, scope: !12273)
!12276 = !DILocation(line: 877, column: 14, scope: !12273)
!12277 = !DILocation(line: 877, column: 37, scope: !12278)
!12278 = distinct !DILexicalBlock(scope: !12273, file: !842, line: 877, column: 9)
!12279 = !DILocation(line: 877, column: 9, scope: !12273)
!12280 = !DILocation(line: 879, column: 20, scope: !12281)
!12281 = distinct !DILexicalBlock(scope: !12278, file: !842, line: 878, column: 11)
!12282 = !DILocation(line: 879, column: 28, scope: !12281)
!12283 = !DILocation(line: 879, column: 18, scope: !12281)
!12284 = !DILocation(line: 880, column: 39, scope: !12281)
!12285 = !DILocation(line: 880, column: 44, scope: !12281)
!12286 = !DILocation(line: 880, column: 26, scope: !12281)
!12287 = !DILocation(line: 880, column: 24, scope: !12281)
!12288 = !DILocation(line: 882, column: 20, scope: !12281)
!12289 = !DILocation(line: 882, column: 28, scope: !12281)
!12290 = !DILocation(line: 882, column: 18, scope: !12281)
!12291 = !DILocation(line: 884, column: 17, scope: !12292)
!12292 = distinct !DILexicalBlock(scope: !12281, file: !842, line: 884, column: 17)
!12293 = !DILocation(line: 884, column: 29, scope: !12292)
!12294 = !DILocation(line: 884, column: 17, scope: !12281)
!12295 = !DILocation(line: 888, column: 32, scope: !12296)
!12296 = distinct !DILexicalBlock(scope: !12292, file: !842, line: 885, column: 15)
!12297 = !DILocation(line: 888, column: 44, scope: !12296)
!12298 = !DILocation(line: 888, column: 17, scope: !12296)
!12299 = !DILocation(line: 888, column: 25, scope: !12296)
!12300 = !DILocation(line: 888, column: 30, scope: !12296)
!12301 = !DILocation(line: 889, column: 36, scope: !12296)
!12302 = !DILocation(line: 889, column: 17, scope: !12296)
!12303 = !DILocation(line: 889, column: 29, scope: !12296)
!12304 = !DILocation(line: 889, column: 34, scope: !12296)
!12305 = !DILocation(line: 890, column: 15, scope: !12296)
!12306 = !DILocation(line: 895, column: 36, scope: !12307)
!12307 = distinct !DILexicalBlock(scope: !12292, file: !842, line: 892, column: 15)
!12308 = !DILocation(line: 895, column: 17, scope: !12307)
!12309 = !DILocation(line: 895, column: 29, scope: !12307)
!12310 = !DILocation(line: 895, column: 34, scope: !12307)
!12311 = !DILocation(line: 896, column: 17, scope: !12307)
!12312 = !DILocation(line: 896, column: 22, scope: !12307)
!12313 = !DILocation(line: 896, column: 36, scope: !12307)
!12314 = !DILocation(line: 897, column: 29, scope: !12307)
!12315 = !DILocation(line: 897, column: 34, scope: !12307)
!12316 = !DILocation(line: 897, column: 17, scope: !12307)
!12317 = !DILocation(line: 899, column: 11, scope: !12281)
!12318 = !DILocation(line: 877, column: 54, scope: !12278)
!12319 = !DILocation(line: 877, column: 52, scope: !12278)
!12320 = !DILocation(line: 877, column: 9, scope: !12278)
!12321 = distinct !{!12321, !12279, !12322}
!12322 = !DILocation(line: 899, column: 11, scope: !12273)
!12323 = !DILocation(line: 903, column: 16, scope: !12268)
!12324 = !DILocation(line: 903, column: 24, scope: !12268)
!12325 = !DILocation(line: 903, column: 14, scope: !12268)
!12326 = !DILocation(line: 904, column: 9, scope: !12268)
!12327 = !DILocation(line: 904, column: 17, scope: !12268)
!12328 = !DILocation(line: 904, column: 22, scope: !12268)
!12329 = !DILocation(line: 905, column: 13, scope: !12330)
!12330 = distinct !DILexicalBlock(scope: !12268, file: !842, line: 905, column: 13)
!12331 = !DILocation(line: 905, column: 13, scope: !12268)
!12332 = !DILocation(line: 906, column: 11, scope: !12330)
!12333 = !DILocation(line: 907, column: 35, scope: !12268)
!12334 = !DILocation(line: 907, column: 40, scope: !12268)
!12335 = !DILocation(line: 907, column: 22, scope: !12268)
!12336 = !DILocation(line: 907, column: 20, scope: !12268)
!12337 = !DILocation(line: 909, column: 13, scope: !12338)
!12338 = distinct !DILexicalBlock(scope: !12268, file: !842, line: 909, column: 13)
!12339 = !DILocation(line: 909, column: 25, scope: !12338)
!12340 = !DILocation(line: 909, column: 13, scope: !12268)
!12341 = !DILocalVariable(name: "new_entry", scope: !12342, file: !842, line: 913, type: !845)
!12342 = distinct !DILexicalBlock(scope: !12338, file: !842, line: 910, column: 11)
!12343 = !DILocation(line: 913, column: 32, scope: !12342)
!12344 = !DILocation(line: 913, column: 60, scope: !12342)
!12345 = !DILocation(line: 913, column: 44, scope: !12342)
!12346 = !DILocation(line: 915, column: 17, scope: !12347)
!12347 = distinct !DILexicalBlock(scope: !12342, file: !842, line: 915, column: 17)
!12348 = !DILocation(line: 915, column: 27, scope: !12347)
!12349 = !DILocation(line: 915, column: 17, scope: !12342)
!12350 = !DILocation(line: 916, column: 15, scope: !12347)
!12351 = !DILocation(line: 918, column: 31, scope: !12342)
!12352 = !DILocation(line: 918, column: 13, scope: !12342)
!12353 = !DILocation(line: 918, column: 24, scope: !12342)
!12354 = !DILocation(line: 918, column: 29, scope: !12342)
!12355 = !DILocation(line: 919, column: 31, scope: !12342)
!12356 = !DILocation(line: 919, column: 43, scope: !12342)
!12357 = !DILocation(line: 919, column: 13, scope: !12342)
!12358 = !DILocation(line: 919, column: 24, scope: !12342)
!12359 = !DILocation(line: 919, column: 29, scope: !12342)
!12360 = !DILocation(line: 920, column: 32, scope: !12342)
!12361 = !DILocation(line: 920, column: 13, scope: !12342)
!12362 = !DILocation(line: 920, column: 25, scope: !12342)
!12363 = !DILocation(line: 920, column: 30, scope: !12342)
!12364 = !DILocation(line: 921, column: 11, scope: !12342)
!12365 = !DILocation(line: 925, column: 32, scope: !12366)
!12366 = distinct !DILexicalBlock(scope: !12338, file: !842, line: 923, column: 11)
!12367 = !DILocation(line: 925, column: 13, scope: !12366)
!12368 = !DILocation(line: 925, column: 25, scope: !12366)
!12369 = !DILocation(line: 925, column: 30, scope: !12366)
!12370 = !DILocation(line: 926, column: 13, scope: !12366)
!12371 = !DILocation(line: 926, column: 18, scope: !12366)
!12372 = !DILocation(line: 926, column: 32, scope: !12366)
!12373 = !DILocation(line: 928, column: 9, scope: !12268)
!12374 = !DILocation(line: 928, column: 17, scope: !12268)
!12375 = !DILocation(line: 928, column: 22, scope: !12268)
!12376 = !DILocation(line: 929, column: 9, scope: !12268)
!12377 = !DILocation(line: 929, column: 14, scope: !12268)
!12378 = !DILocation(line: 929, column: 28, scope: !12268)
!12379 = !DILocation(line: 930, column: 7, scope: !12268)
!12380 = !DILocation(line: 865, column: 64, scope: !12258)
!12381 = !DILocation(line: 865, column: 3, scope: !12258)
!12382 = distinct !{!12382, !12262, !12383}
!12383 = !DILocation(line: 930, column: 7, scope: !12253)
!12384 = !DILocation(line: 931, column: 3, scope: !12239)
!12385 = !DILocation(line: 932, column: 1, scope: !12239)
!12386 = distinct !DISubprogram(name: "free_entry", scope: !842, file: !842, line: 776, type: !958, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !833, retainedNodes: !209)
!12387 = !DILocalVariable(name: "table", arg: 1, scope: !12386, file: !842, line: 776, type: !936)
!12388 = !DILocation(line: 776, column: 25, scope: !12386)
!12389 = !DILocalVariable(name: "entry", arg: 2, scope: !12386, file: !842, line: 776, type: !845)
!12390 = !DILocation(line: 776, column: 51, scope: !12386)
!12391 = !DILocation(line: 778, column: 3, scope: !12386)
!12392 = !DILocation(line: 778, column: 10, scope: !12386)
!12393 = !DILocation(line: 778, column: 15, scope: !12386)
!12394 = !DILocation(line: 779, column: 17, scope: !12386)
!12395 = !DILocation(line: 779, column: 24, scope: !12386)
!12396 = !DILocation(line: 779, column: 3, scope: !12386)
!12397 = !DILocation(line: 779, column: 10, scope: !12386)
!12398 = !DILocation(line: 779, column: 15, scope: !12386)
!12399 = !DILocation(line: 780, column: 28, scope: !12386)
!12400 = !DILocation(line: 780, column: 3, scope: !12386)
!12401 = !DILocation(line: 780, column: 10, scope: !12386)
!12402 = !DILocation(line: 780, column: 26, scope: !12386)
!12403 = !DILocation(line: 781, column: 1, scope: !12386)
!12404 = distinct !DISubprogram(name: "allocate_entry", scope: !842, file: !842, line: 751, type: !963, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !833, retainedNodes: !209)
!12405 = !DILocalVariable(name: "table", arg: 1, scope: !12404, file: !842, line: 751, type: !936)
!12406 = !DILocation(line: 751, column: 29, scope: !12404)
!12407 = !DILocalVariable(name: "new", scope: !12404, file: !842, line: 753, type: !845)
!12408 = !DILocation(line: 753, column: 22, scope: !12404)
!12409 = !DILocation(line: 755, column: 7, scope: !12410)
!12410 = distinct !DILexicalBlock(scope: !12404, file: !842, line: 755, column: 7)
!12411 = !DILocation(line: 755, column: 14, scope: !12410)
!12412 = !DILocation(line: 755, column: 7, scope: !12404)
!12413 = !DILocation(line: 757, column: 13, scope: !12414)
!12414 = distinct !DILexicalBlock(scope: !12410, file: !842, line: 756, column: 5)
!12415 = !DILocation(line: 757, column: 20, scope: !12414)
!12416 = !DILocation(line: 757, column: 11, scope: !12414)
!12417 = !DILocation(line: 758, column: 32, scope: !12414)
!12418 = !DILocation(line: 758, column: 37, scope: !12414)
!12419 = !DILocation(line: 758, column: 7, scope: !12414)
!12420 = !DILocation(line: 758, column: 14, scope: !12414)
!12421 = !DILocation(line: 758, column: 30, scope: !12414)
!12422 = !DILocation(line: 759, column: 5, scope: !12414)
!12423 = !DILocation(line: 765, column: 13, scope: !12424)
!12424 = distinct !DILexicalBlock(scope: !12410, file: !842, line: 761, column: 5)
!12425 = !DILocation(line: 765, column: 11, scope: !12424)
!12426 = !DILocation(line: 769, column: 10, scope: !12404)
!12427 = !DILocation(line: 769, column: 3, scope: !12404)
!12428 = distinct !DISubprogram(name: "hash_insert_if_absent", scope: !842, file: !842, line: 1038, type: !941, scopeLine: 1040, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !833, retainedNodes: !209)
!12429 = !DILocalVariable(name: "table", arg: 1, scope: !12428, file: !842, line: 1038, type: !936)
!12430 = !DILocation(line: 1038, column: 36, scope: !12428)
!12431 = !DILocalVariable(name: "entry", arg: 2, scope: !12428, file: !842, line: 1038, type: !513)
!12432 = !DILocation(line: 1038, column: 55, scope: !12428)
!12433 = !DILocalVariable(name: "matched_ent", arg: 3, scope: !12428, file: !842, line: 1039, type: !943)
!12434 = !DILocation(line: 1039, column: 37, scope: !12428)
!12435 = !DILocalVariable(name: "data", scope: !12428, file: !842, line: 1041, type: !53)
!12436 = !DILocation(line: 1041, column: 9, scope: !12428)
!12437 = !DILocalVariable(name: "bucket", scope: !12428, file: !842, line: 1042, type: !845)
!12438 = !DILocation(line: 1042, column: 22, scope: !12428)
!12439 = !DILocation(line: 1047, column: 9, scope: !12440)
!12440 = distinct !DILexicalBlock(scope: !12428, file: !842, line: 1047, column: 7)
!12441 = !DILocation(line: 1047, column: 7, scope: !12428)
!12442 = !DILocation(line: 1048, column: 5, scope: !12440)
!12443 = !DILocation(line: 1051, column: 32, scope: !12444)
!12444 = distinct !DILexicalBlock(scope: !12428, file: !842, line: 1051, column: 7)
!12445 = !DILocation(line: 1051, column: 39, scope: !12444)
!12446 = !DILocation(line: 1051, column: 15, scope: !12444)
!12447 = !DILocation(line: 1051, column: 13, scope: !12444)
!12448 = !DILocation(line: 1051, column: 63, scope: !12444)
!12449 = !DILocation(line: 1051, column: 7, scope: !12428)
!12450 = !DILocation(line: 1053, column: 11, scope: !12451)
!12451 = distinct !DILexicalBlock(scope: !12452, file: !842, line: 1053, column: 11)
!12452 = distinct !DILexicalBlock(scope: !12444, file: !842, line: 1052, column: 5)
!12453 = !DILocation(line: 1053, column: 11, scope: !12452)
!12454 = !DILocation(line: 1054, column: 24, scope: !12451)
!12455 = !DILocation(line: 1054, column: 10, scope: !12451)
!12456 = !DILocation(line: 1054, column: 22, scope: !12451)
!12457 = !DILocation(line: 1054, column: 9, scope: !12451)
!12458 = !DILocation(line: 1055, column: 7, scope: !12452)
!12459 = !DILocation(line: 1063, column: 7, scope: !12460)
!12460 = distinct !DILexicalBlock(scope: !12428, file: !842, line: 1063, column: 7)
!12461 = !DILocation(line: 1063, column: 14, scope: !12460)
!12462 = !DILocation(line: 1064, column: 9, scope: !12460)
!12463 = !DILocation(line: 1064, column: 16, scope: !12460)
!12464 = !DILocation(line: 1064, column: 24, scope: !12460)
!12465 = !DILocation(line: 1064, column: 43, scope: !12460)
!12466 = !DILocation(line: 1064, column: 50, scope: !12460)
!12467 = !DILocation(line: 1064, column: 41, scope: !12460)
!12468 = !DILocation(line: 1064, column: 7, scope: !12460)
!12469 = !DILocation(line: 1063, column: 7, scope: !12428)
!12470 = !DILocation(line: 1068, column: 21, scope: !12471)
!12471 = distinct !DILexicalBlock(scope: !12460, file: !842, line: 1065, column: 5)
!12472 = !DILocation(line: 1068, column: 7, scope: !12471)
!12473 = !DILocation(line: 1069, column: 11, scope: !12474)
!12474 = distinct !DILexicalBlock(scope: !12471, file: !842, line: 1069, column: 11)
!12475 = !DILocation(line: 1069, column: 18, scope: !12474)
!12476 = !DILocation(line: 1070, column: 13, scope: !12474)
!12477 = !DILocation(line: 1070, column: 20, scope: !12474)
!12478 = !DILocation(line: 1070, column: 28, scope: !12474)
!12479 = !DILocation(line: 1070, column: 47, scope: !12474)
!12480 = !DILocation(line: 1070, column: 54, scope: !12474)
!12481 = !DILocation(line: 1070, column: 45, scope: !12474)
!12482 = !DILocation(line: 1070, column: 11, scope: !12474)
!12483 = !DILocation(line: 1069, column: 11, scope: !12471)
!12484 = !DILocalVariable(name: "tuning", scope: !12485, file: !842, line: 1072, type: !857)
!12485 = distinct !DILexicalBlock(scope: !12474, file: !842, line: 1071, column: 9)
!12486 = !DILocation(line: 1072, column: 30, scope: !12485)
!12487 = !DILocation(line: 1072, column: 39, scope: !12485)
!12488 = !DILocation(line: 1072, column: 46, scope: !12485)
!12489 = !DILocalVariable(name: "candidate", scope: !12485, file: !842, line: 1073, type: !863)
!12490 = !DILocation(line: 1073, column: 17, scope: !12485)
!12491 = !DILocation(line: 1074, column: 14, scope: !12485)
!12492 = !DILocation(line: 1074, column: 22, scope: !12485)
!12493 = !DILocation(line: 1075, column: 17, scope: !12485)
!12494 = !DILocation(line: 1075, column: 24, scope: !12485)
!12495 = !DILocation(line: 1075, column: 36, scope: !12485)
!12496 = !DILocation(line: 1075, column: 44, scope: !12485)
!12497 = !DILocation(line: 1075, column: 34, scope: !12485)
!12498 = !DILocation(line: 1076, column: 17, scope: !12485)
!12499 = !DILocation(line: 1076, column: 24, scope: !12485)
!12500 = !DILocation(line: 1076, column: 36, scope: !12485)
!12501 = !DILocation(line: 1076, column: 44, scope: !12485)
!12502 = !DILocation(line: 1076, column: 34, scope: !12485)
!12503 = !DILocation(line: 1077, column: 19, scope: !12485)
!12504 = !DILocation(line: 1077, column: 27, scope: !12485)
!12505 = !DILocation(line: 1077, column: 17, scope: !12485)
!12506 = !DILocation(line: 1079, column: 27, scope: !12507)
!12507 = distinct !DILexicalBlock(scope: !12485, file: !842, line: 1079, column: 15)
!12508 = !DILocation(line: 1079, column: 24, scope: !12507)
!12509 = !DILocation(line: 1079, column: 15, scope: !12485)
!12510 = !DILocation(line: 1080, column: 13, scope: !12507)
!12511 = !DILocation(line: 1083, column: 29, scope: !12512)
!12512 = distinct !DILexicalBlock(scope: !12485, file: !842, line: 1083, column: 15)
!12513 = !DILocation(line: 1083, column: 36, scope: !12512)
!12514 = !DILocation(line: 1083, column: 16, scope: !12512)
!12515 = !DILocation(line: 1083, column: 15, scope: !12485)
!12516 = !DILocation(line: 1084, column: 13, scope: !12512)
!12517 = !DILocation(line: 1087, column: 32, scope: !12518)
!12518 = distinct !DILexicalBlock(scope: !12485, file: !842, line: 1087, column: 15)
!12519 = !DILocation(line: 1087, column: 39, scope: !12518)
!12520 = !DILocation(line: 1087, column: 15, scope: !12518)
!12521 = !DILocation(line: 1087, column: 62, scope: !12518)
!12522 = !DILocation(line: 1087, column: 15, scope: !12485)
!12523 = !DILocation(line: 1088, column: 13, scope: !12518)
!12524 = !DILocation(line: 1089, column: 9, scope: !12485)
!12525 = !DILocation(line: 1090, column: 5, scope: !12471)
!12526 = !DILocation(line: 1094, column: 7, scope: !12527)
!12527 = distinct !DILexicalBlock(scope: !12428, file: !842, line: 1094, column: 7)
!12528 = !DILocation(line: 1094, column: 15, scope: !12527)
!12529 = !DILocation(line: 1094, column: 7, scope: !12428)
!12530 = !DILocalVariable(name: "new_entry", scope: !12531, file: !842, line: 1096, type: !845)
!12531 = distinct !DILexicalBlock(scope: !12527, file: !842, line: 1095, column: 5)
!12532 = !DILocation(line: 1096, column: 26, scope: !12531)
!12533 = !DILocation(line: 1096, column: 54, scope: !12531)
!12534 = !DILocation(line: 1096, column: 38, scope: !12531)
!12535 = !DILocation(line: 1098, column: 11, scope: !12536)
!12536 = distinct !DILexicalBlock(scope: !12531, file: !842, line: 1098, column: 11)
!12537 = !DILocation(line: 1098, column: 21, scope: !12536)
!12538 = !DILocation(line: 1098, column: 11, scope: !12531)
!12539 = !DILocation(line: 1099, column: 9, scope: !12536)
!12540 = !DILocation(line: 1103, column: 34, scope: !12531)
!12541 = !DILocation(line: 1103, column: 7, scope: !12531)
!12542 = !DILocation(line: 1103, column: 18, scope: !12531)
!12543 = !DILocation(line: 1103, column: 23, scope: !12531)
!12544 = !DILocation(line: 1104, column: 25, scope: !12531)
!12545 = !DILocation(line: 1104, column: 33, scope: !12531)
!12546 = !DILocation(line: 1104, column: 7, scope: !12531)
!12547 = !DILocation(line: 1104, column: 18, scope: !12531)
!12548 = !DILocation(line: 1104, column: 23, scope: !12531)
!12549 = !DILocation(line: 1105, column: 22, scope: !12531)
!12550 = !DILocation(line: 1105, column: 7, scope: !12531)
!12551 = !DILocation(line: 1105, column: 15, scope: !12531)
!12552 = !DILocation(line: 1105, column: 20, scope: !12531)
!12553 = !DILocation(line: 1106, column: 7, scope: !12531)
!12554 = !DILocation(line: 1106, column: 14, scope: !12531)
!12555 = !DILocation(line: 1106, column: 23, scope: !12531)
!12556 = !DILocation(line: 1107, column: 7, scope: !12531)
!12557 = !DILocation(line: 1112, column: 27, scope: !12428)
!12558 = !DILocation(line: 1112, column: 3, scope: !12428)
!12559 = !DILocation(line: 1112, column: 11, scope: !12428)
!12560 = !DILocation(line: 1112, column: 16, scope: !12428)
!12561 = !DILocation(line: 1113, column: 3, scope: !12428)
!12562 = !DILocation(line: 1113, column: 10, scope: !12428)
!12563 = !DILocation(line: 1113, column: 19, scope: !12428)
!12564 = !DILocation(line: 1114, column: 3, scope: !12428)
!12565 = !DILocation(line: 1114, column: 10, scope: !12428)
!12566 = !DILocation(line: 1114, column: 24, scope: !12428)
!12567 = !DILocation(line: 1116, column: 3, scope: !12428)
!12568 = !DILocation(line: 1117, column: 1, scope: !12428)
!12569 = distinct !DISubprogram(name: "hash_find_entry", scope: !842, file: !842, line: 790, type: !960, scopeLine: 792, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !833, retainedNodes: !209)
!12570 = !DILocalVariable(name: "table", arg: 1, scope: !12569, file: !842, line: 790, type: !936)
!12571 = !DILocation(line: 790, column: 30, scope: !12569)
!12572 = !DILocalVariable(name: "entry", arg: 2, scope: !12569, file: !842, line: 790, type: !513)
!12573 = !DILocation(line: 790, column: 49, scope: !12569)
!12574 = !DILocalVariable(name: "bucket_head", arg: 3, scope: !12569, file: !842, line: 791, type: !962)
!12575 = !DILocation(line: 791, column: 38, scope: !12569)
!12576 = !DILocalVariable(name: "delete", arg: 4, scope: !12569, file: !842, line: 791, type: !142)
!12577 = !DILocation(line: 791, column: 56, scope: !12569)
!12578 = !DILocalVariable(name: "bucket", scope: !12569, file: !842, line: 793, type: !845)
!12579 = !DILocation(line: 793, column: 22, scope: !12569)
!12580 = !DILocation(line: 793, column: 44, scope: !12569)
!12581 = !DILocation(line: 793, column: 51, scope: !12569)
!12582 = !DILocation(line: 793, column: 31, scope: !12569)
!12583 = !DILocalVariable(name: "cursor", scope: !12569, file: !842, line: 794, type: !845)
!12584 = !DILocation(line: 794, column: 22, scope: !12569)
!12585 = !DILocation(line: 796, column: 18, scope: !12569)
!12586 = !DILocation(line: 796, column: 4, scope: !12569)
!12587 = !DILocation(line: 796, column: 16, scope: !12569)
!12588 = !DILocation(line: 799, column: 7, scope: !12589)
!12589 = distinct !DILexicalBlock(scope: !12569, file: !842, line: 799, column: 7)
!12590 = !DILocation(line: 799, column: 15, scope: !12589)
!12591 = !DILocation(line: 799, column: 20, scope: !12589)
!12592 = !DILocation(line: 799, column: 7, scope: !12569)
!12593 = !DILocation(line: 800, column: 5, scope: !12589)
!12594 = !DILocation(line: 803, column: 7, scope: !12595)
!12595 = distinct !DILexicalBlock(scope: !12569, file: !842, line: 803, column: 7)
!12596 = !DILocation(line: 803, column: 16, scope: !12595)
!12597 = !DILocation(line: 803, column: 24, scope: !12595)
!12598 = !DILocation(line: 803, column: 13, scope: !12595)
!12599 = !DILocation(line: 803, column: 29, scope: !12595)
!12600 = !DILocation(line: 803, column: 32, scope: !12595)
!12601 = !DILocation(line: 803, column: 39, scope: !12595)
!12602 = !DILocation(line: 803, column: 51, scope: !12595)
!12603 = !DILocation(line: 803, column: 58, scope: !12595)
!12604 = !DILocation(line: 803, column: 66, scope: !12595)
!12605 = !DILocation(line: 803, column: 7, scope: !12569)
!12606 = !DILocalVariable(name: "data", scope: !12607, file: !842, line: 805, type: !53)
!12607 = distinct !DILexicalBlock(scope: !12595, file: !842, line: 804, column: 5)
!12608 = !DILocation(line: 805, column: 13, scope: !12607)
!12609 = !DILocation(line: 805, column: 20, scope: !12607)
!12610 = !DILocation(line: 805, column: 28, scope: !12607)
!12611 = !DILocation(line: 807, column: 11, scope: !12612)
!12612 = distinct !DILexicalBlock(scope: !12607, file: !842, line: 807, column: 11)
!12613 = !DILocation(line: 807, column: 11, scope: !12607)
!12614 = !DILocation(line: 809, column: 15, scope: !12615)
!12615 = distinct !DILexicalBlock(scope: !12616, file: !842, line: 809, column: 15)
!12616 = distinct !DILexicalBlock(scope: !12612, file: !842, line: 808, column: 9)
!12617 = !DILocation(line: 809, column: 23, scope: !12615)
!12618 = !DILocation(line: 809, column: 15, scope: !12616)
!12619 = !DILocalVariable(name: "next", scope: !12620, file: !842, line: 811, type: !845)
!12620 = distinct !DILexicalBlock(scope: !12615, file: !842, line: 810, column: 13)
!12621 = !DILocation(line: 811, column: 34, scope: !12620)
!12622 = !DILocation(line: 811, column: 41, scope: !12620)
!12623 = !DILocation(line: 811, column: 49, scope: !12620)
!12624 = !DILocation(line: 815, column: 16, scope: !12620)
!12625 = !DILocation(line: 815, column: 26, scope: !12620)
!12626 = !DILocation(line: 815, column: 25, scope: !12620)
!12627 = !{i64 0, i64 8, !2645, i64 8, i64 8, !2645}
!12628 = !DILocation(line: 816, column: 27, scope: !12620)
!12629 = !DILocation(line: 816, column: 34, scope: !12620)
!12630 = !DILocation(line: 816, column: 15, scope: !12620)
!12631 = !DILocation(line: 817, column: 13, scope: !12620)
!12632 = !DILocation(line: 820, column: 15, scope: !12633)
!12633 = distinct !DILexicalBlock(scope: !12615, file: !842, line: 819, column: 13)
!12634 = !DILocation(line: 820, column: 23, scope: !12633)
!12635 = !DILocation(line: 820, column: 28, scope: !12633)
!12636 = !DILocation(line: 822, column: 9, scope: !12616)
!12637 = !DILocation(line: 824, column: 14, scope: !12607)
!12638 = !DILocation(line: 824, column: 7, scope: !12607)
!12639 = !DILocation(line: 828, column: 17, scope: !12640)
!12640 = distinct !DILexicalBlock(scope: !12569, file: !842, line: 828, column: 3)
!12641 = !DILocation(line: 828, column: 15, scope: !12640)
!12642 = !DILocation(line: 828, column: 8, scope: !12640)
!12643 = !DILocation(line: 828, column: 25, scope: !12644)
!12644 = distinct !DILexicalBlock(scope: !12640, file: !842, line: 828, column: 3)
!12645 = !DILocation(line: 828, column: 33, scope: !12644)
!12646 = !DILocation(line: 828, column: 3, scope: !12640)
!12647 = !DILocation(line: 830, column: 11, scope: !12648)
!12648 = distinct !DILexicalBlock(scope: !12649, file: !842, line: 830, column: 11)
!12649 = distinct !DILexicalBlock(scope: !12644, file: !842, line: 829, column: 5)
!12650 = !DILocation(line: 830, column: 20, scope: !12648)
!12651 = !DILocation(line: 830, column: 28, scope: !12648)
!12652 = !DILocation(line: 830, column: 34, scope: !12648)
!12653 = !DILocation(line: 830, column: 17, scope: !12648)
!12654 = !DILocation(line: 831, column: 11, scope: !12648)
!12655 = !DILocation(line: 831, column: 14, scope: !12648)
!12656 = !DILocation(line: 831, column: 21, scope: !12648)
!12657 = !DILocation(line: 831, column: 33, scope: !12648)
!12658 = !DILocation(line: 831, column: 40, scope: !12648)
!12659 = !DILocation(line: 831, column: 48, scope: !12648)
!12660 = !DILocation(line: 831, column: 54, scope: !12648)
!12661 = !DILocation(line: 830, column: 11, scope: !12649)
!12662 = !DILocalVariable(name: "data", scope: !12663, file: !842, line: 833, type: !53)
!12663 = distinct !DILexicalBlock(scope: !12648, file: !842, line: 832, column: 9)
!12664 = !DILocation(line: 833, column: 17, scope: !12663)
!12665 = !DILocation(line: 833, column: 24, scope: !12663)
!12666 = !DILocation(line: 833, column: 32, scope: !12663)
!12667 = !DILocation(line: 833, column: 38, scope: !12663)
!12668 = !DILocation(line: 835, column: 15, scope: !12669)
!12669 = distinct !DILexicalBlock(scope: !12663, file: !842, line: 835, column: 15)
!12670 = !DILocation(line: 835, column: 15, scope: !12663)
!12671 = !DILocalVariable(name: "next", scope: !12672, file: !842, line: 837, type: !845)
!12672 = distinct !DILexicalBlock(scope: !12669, file: !842, line: 836, column: 13)
!12673 = !DILocation(line: 837, column: 34, scope: !12672)
!12674 = !DILocation(line: 837, column: 41, scope: !12672)
!12675 = !DILocation(line: 837, column: 49, scope: !12672)
!12676 = !DILocation(line: 841, column: 30, scope: !12672)
!12677 = !DILocation(line: 841, column: 36, scope: !12672)
!12678 = !DILocation(line: 841, column: 15, scope: !12672)
!12679 = !DILocation(line: 841, column: 23, scope: !12672)
!12680 = !DILocation(line: 841, column: 28, scope: !12672)
!12681 = !DILocation(line: 842, column: 27, scope: !12672)
!12682 = !DILocation(line: 842, column: 34, scope: !12672)
!12683 = !DILocation(line: 842, column: 15, scope: !12672)
!12684 = !DILocation(line: 843, column: 13, scope: !12672)
!12685 = !DILocation(line: 845, column: 18, scope: !12663)
!12686 = !DILocation(line: 845, column: 11, scope: !12663)
!12687 = !DILocation(line: 847, column: 5, scope: !12649)
!12688 = !DILocation(line: 828, column: 48, scope: !12644)
!12689 = !DILocation(line: 828, column: 56, scope: !12644)
!12690 = !DILocation(line: 828, column: 46, scope: !12644)
!12691 = !DILocation(line: 828, column: 3, scope: !12644)
!12692 = distinct !{!12692, !12646, !12693}
!12693 = !DILocation(line: 847, column: 5, scope: !12640)
!12694 = !DILocation(line: 850, column: 3, scope: !12569)
!12695 = !DILocation(line: 851, column: 1, scope: !12569)
!12696 = distinct !DISubprogram(name: "hash_insert", scope: !842, file: !842, line: 1126, type: !944, scopeLine: 1127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !833, retainedNodes: !209)
!12697 = !DILocalVariable(name: "table", arg: 1, scope: !12696, file: !842, line: 1126, type: !936)
!12698 = !DILocation(line: 1126, column: 26, scope: !12696)
!12699 = !DILocalVariable(name: "entry", arg: 2, scope: !12696, file: !842, line: 1126, type: !513)
!12700 = !DILocation(line: 1126, column: 45, scope: !12696)
!12701 = !DILocalVariable(name: "matched_ent", scope: !12696, file: !842, line: 1128, type: !513)
!12702 = !DILocation(line: 1128, column: 15, scope: !12696)
!12703 = !DILocalVariable(name: "err", scope: !12696, file: !842, line: 1129, type: !7)
!12704 = !DILocation(line: 1129, column: 7, scope: !12696)
!12705 = !DILocation(line: 1129, column: 36, scope: !12696)
!12706 = !DILocation(line: 1129, column: 43, scope: !12696)
!12707 = !DILocation(line: 1129, column: 13, scope: !12696)
!12708 = !DILocation(line: 1130, column: 11, scope: !12696)
!12709 = !DILocation(line: 1130, column: 15, scope: !12696)
!12710 = !DILocation(line: 1132, column: 23, scope: !12696)
!12711 = !DILocation(line: 1132, column: 27, scope: !12696)
!12712 = !DILocation(line: 1132, column: 34, scope: !12696)
!12713 = !DILocation(line: 1132, column: 48, scope: !12696)
!12714 = !DILocation(line: 1130, column: 3, scope: !12696)
!12715 = distinct !DISubprogram(name: "hash_delete", scope: !842, file: !842, line: 1140, type: !944, scopeLine: 1141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !833, retainedNodes: !209)
!12716 = !DILocalVariable(name: "table", arg: 1, scope: !12715, file: !842, line: 1140, type: !936)
!12717 = !DILocation(line: 1140, column: 26, scope: !12715)
!12718 = !DILocalVariable(name: "entry", arg: 2, scope: !12715, file: !842, line: 1140, type: !513)
!12719 = !DILocation(line: 1140, column: 45, scope: !12715)
!12720 = !DILocalVariable(name: "data", scope: !12715, file: !842, line: 1142, type: !53)
!12721 = !DILocation(line: 1142, column: 9, scope: !12715)
!12722 = !DILocalVariable(name: "bucket", scope: !12715, file: !842, line: 1143, type: !845)
!12723 = !DILocation(line: 1143, column: 22, scope: !12715)
!12724 = !DILocation(line: 1145, column: 27, scope: !12715)
!12725 = !DILocation(line: 1145, column: 34, scope: !12715)
!12726 = !DILocation(line: 1145, column: 10, scope: !12715)
!12727 = !DILocation(line: 1145, column: 8, scope: !12715)
!12728 = !DILocation(line: 1146, column: 8, scope: !12729)
!12729 = distinct !DILexicalBlock(scope: !12715, file: !842, line: 1146, column: 7)
!12730 = !DILocation(line: 1146, column: 7, scope: !12715)
!12731 = !DILocation(line: 1147, column: 5, scope: !12729)
!12732 = !DILocation(line: 1149, column: 3, scope: !12715)
!12733 = !DILocation(line: 1149, column: 10, scope: !12715)
!12734 = !DILocation(line: 1149, column: 19, scope: !12715)
!12735 = !DILocation(line: 1150, column: 8, scope: !12736)
!12736 = distinct !DILexicalBlock(scope: !12715, file: !842, line: 1150, column: 7)
!12737 = !DILocation(line: 1150, column: 16, scope: !12736)
!12738 = !DILocation(line: 1150, column: 7, scope: !12715)
!12739 = !DILocation(line: 1152, column: 7, scope: !12740)
!12740 = distinct !DILexicalBlock(scope: !12736, file: !842, line: 1151, column: 5)
!12741 = !DILocation(line: 1152, column: 14, scope: !12740)
!12742 = !DILocation(line: 1152, column: 28, scope: !12740)
!12743 = !DILocation(line: 1157, column: 11, scope: !12744)
!12744 = distinct !DILexicalBlock(scope: !12740, file: !842, line: 1157, column: 11)
!12745 = !DILocation(line: 1157, column: 18, scope: !12744)
!12746 = !DILocation(line: 1158, column: 13, scope: !12744)
!12747 = !DILocation(line: 1158, column: 20, scope: !12744)
!12748 = !DILocation(line: 1158, column: 28, scope: !12744)
!12749 = !DILocation(line: 1158, column: 47, scope: !12744)
!12750 = !DILocation(line: 1158, column: 54, scope: !12744)
!12751 = !DILocation(line: 1158, column: 45, scope: !12744)
!12752 = !DILocation(line: 1158, column: 11, scope: !12744)
!12753 = !DILocation(line: 1157, column: 11, scope: !12740)
!12754 = !DILocation(line: 1162, column: 25, scope: !12755)
!12755 = distinct !DILexicalBlock(scope: !12744, file: !842, line: 1159, column: 9)
!12756 = !DILocation(line: 1162, column: 11, scope: !12755)
!12757 = !DILocation(line: 1163, column: 15, scope: !12758)
!12758 = distinct !DILexicalBlock(scope: !12755, file: !842, line: 1163, column: 15)
!12759 = !DILocation(line: 1163, column: 22, scope: !12758)
!12760 = !DILocation(line: 1164, column: 17, scope: !12758)
!12761 = !DILocation(line: 1164, column: 24, scope: !12758)
!12762 = !DILocation(line: 1164, column: 32, scope: !12758)
!12763 = !DILocation(line: 1164, column: 51, scope: !12758)
!12764 = !DILocation(line: 1164, column: 58, scope: !12758)
!12765 = !DILocation(line: 1164, column: 49, scope: !12758)
!12766 = !DILocation(line: 1164, column: 15, scope: !12758)
!12767 = !DILocation(line: 1163, column: 15, scope: !12755)
!12768 = !DILocalVariable(name: "tuning", scope: !12769, file: !842, line: 1166, type: !857)
!12769 = distinct !DILexicalBlock(scope: !12758, file: !842, line: 1165, column: 13)
!12770 = !DILocation(line: 1166, column: 34, scope: !12769)
!12771 = !DILocation(line: 1166, column: 43, scope: !12769)
!12772 = !DILocation(line: 1166, column: 50, scope: !12769)
!12773 = !DILocalVariable(name: "candidate", scope: !12769, file: !842, line: 1167, type: !55)
!12774 = !DILocation(line: 1167, column: 22, scope: !12769)
!12775 = !DILocation(line: 1168, column: 18, scope: !12769)
!12776 = !DILocation(line: 1168, column: 26, scope: !12769)
!12777 = !DILocation(line: 1169, column: 20, scope: !12769)
!12778 = !DILocation(line: 1169, column: 27, scope: !12769)
!12779 = !DILocation(line: 1169, column: 39, scope: !12769)
!12780 = !DILocation(line: 1169, column: 47, scope: !12769)
!12781 = !DILocation(line: 1169, column: 37, scope: !12769)
!12782 = !DILocation(line: 1170, column: 21, scope: !12769)
!12783 = !DILocation(line: 1170, column: 28, scope: !12769)
!12784 = !DILocation(line: 1170, column: 40, scope: !12769)
!12785 = !DILocation(line: 1170, column: 48, scope: !12769)
!12786 = !DILocation(line: 1170, column: 38, scope: !12769)
!12787 = !DILocation(line: 1171, column: 23, scope: !12769)
!12788 = !DILocation(line: 1171, column: 31, scope: !12769)
!12789 = !DILocation(line: 1171, column: 21, scope: !12769)
!12790 = !DILocation(line: 1168, column: 17, scope: !12769)
!12791 = !DILocation(line: 1173, column: 33, scope: !12792)
!12792 = distinct !DILexicalBlock(scope: !12769, file: !842, line: 1173, column: 19)
!12793 = !DILocation(line: 1173, column: 40, scope: !12792)
!12794 = !DILocation(line: 1173, column: 20, scope: !12792)
!12795 = !DILocation(line: 1173, column: 19, scope: !12769)
!12796 = !DILocalVariable(name: "cursor", scope: !12797, file: !842, line: 1181, type: !845)
!12797 = distinct !DILexicalBlock(scope: !12792, file: !842, line: 1174, column: 17)
!12798 = !DILocation(line: 1181, column: 38, scope: !12797)
!12799 = !DILocation(line: 1181, column: 47, scope: !12797)
!12800 = !DILocation(line: 1181, column: 54, scope: !12797)
!12801 = !DILocalVariable(name: "next", scope: !12797, file: !842, line: 1182, type: !845)
!12802 = !DILocation(line: 1182, column: 38, scope: !12797)
!12803 = !DILocation(line: 1183, column: 19, scope: !12797)
!12804 = !DILocation(line: 1183, column: 26, scope: !12797)
!12805 = !DILocation(line: 1185, column: 30, scope: !12806)
!12806 = distinct !DILexicalBlock(scope: !12797, file: !842, line: 1184, column: 21)
!12807 = !DILocation(line: 1185, column: 38, scope: !12806)
!12808 = !DILocation(line: 1185, column: 28, scope: !12806)
!12809 = !DILocation(line: 1186, column: 29, scope: !12806)
!12810 = !DILocation(line: 1186, column: 23, scope: !12806)
!12811 = !DILocation(line: 1187, column: 32, scope: !12806)
!12812 = !DILocation(line: 1187, column: 30, scope: !12806)
!12813 = distinct !{!12813, !12803, !12814}
!12814 = !DILocation(line: 1188, column: 21, scope: !12797)
!12815 = !DILocation(line: 1189, column: 19, scope: !12797)
!12816 = !DILocation(line: 1189, column: 26, scope: !12797)
!12817 = !DILocation(line: 1189, column: 42, scope: !12797)
!12818 = !DILocation(line: 1191, column: 17, scope: !12797)
!12819 = !DILocation(line: 1192, column: 13, scope: !12769)
!12820 = !DILocation(line: 1193, column: 9, scope: !12755)
!12821 = !DILocation(line: 1194, column: 5, scope: !12740)
!12822 = !DILocation(line: 1196, column: 10, scope: !12715)
!12823 = !DILocation(line: 1196, column: 3, scope: !12715)
!12824 = !DILocation(line: 1197, column: 1, scope: !12715)
!12825 = distinct !DISubprogram(name: "triple_hash", scope: !12826, file: !12826, line: 34, type: !633, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1698, retainedNodes: !209)
!12826 = !DIFile(filename: "lib/hash-triple.c", directory: "/home/mbarbar/software/coreutils-8.31")
!12827 = !DILocalVariable(name: "x", arg: 1, scope: !12825, file: !12826, line: 34, type: !513)
!12828 = !DILocation(line: 34, column: 26, scope: !12825)
!12829 = !DILocalVariable(name: "table_size", arg: 2, scope: !12825, file: !12826, line: 34, type: !55)
!12830 = !DILocation(line: 34, column: 36, scope: !12825)
!12831 = !DILocalVariable(name: "p", scope: !12825, file: !12826, line: 36, type: !1701)
!12832 = !DILocation(line: 36, column: 26, scope: !12825)
!12833 = !DILocation(line: 36, column: 30, scope: !12825)
!12834 = !DILocalVariable(name: "tmp", scope: !12825, file: !12826, line: 37, type: !55)
!12835 = !DILocation(line: 37, column: 10, scope: !12825)
!12836 = !DILocation(line: 37, column: 26, scope: !12825)
!12837 = !DILocation(line: 37, column: 29, scope: !12825)
!12838 = !DILocation(line: 37, column: 35, scope: !12825)
!12839 = !DILocation(line: 37, column: 16, scope: !12825)
!12840 = !DILocation(line: 40, column: 11, scope: !12825)
!12841 = !DILocation(line: 40, column: 17, scope: !12825)
!12842 = !DILocation(line: 40, column: 20, scope: !12825)
!12843 = !DILocation(line: 40, column: 15, scope: !12825)
!12844 = !DILocation(line: 40, column: 30, scope: !12825)
!12845 = !DILocation(line: 40, column: 28, scope: !12825)
!12846 = !DILocation(line: 40, column: 3, scope: !12825)
!12847 = distinct !DISubprogram(name: "triple_hash_no_name", scope: !12826, file: !12826, line: 45, type: !633, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1698, retainedNodes: !209)
!12848 = !DILocalVariable(name: "x", arg: 1, scope: !12847, file: !12826, line: 45, type: !513)
!12849 = !DILocation(line: 45, column: 34, scope: !12847)
!12850 = !DILocalVariable(name: "table_size", arg: 2, scope: !12847, file: !12826, line: 45, type: !55)
!12851 = !DILocation(line: 45, column: 44, scope: !12847)
!12852 = !DILocalVariable(name: "p", scope: !12847, file: !12826, line: 47, type: !1701)
!12853 = !DILocation(line: 47, column: 26, scope: !12847)
!12854 = !DILocation(line: 47, column: 30, scope: !12847)
!12855 = !DILocation(line: 50, column: 10, scope: !12847)
!12856 = !DILocation(line: 50, column: 13, scope: !12847)
!12857 = !DILocation(line: 50, column: 22, scope: !12847)
!12858 = !DILocation(line: 50, column: 20, scope: !12847)
!12859 = !DILocation(line: 50, column: 3, scope: !12847)
!12860 = distinct !DISubprogram(name: "triple_compare", scope: !12826, file: !12826, line: 55, type: !635, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1698, retainedNodes: !209)
!12861 = !DILocalVariable(name: "x", arg: 1, scope: !12860, file: !12826, line: 55, type: !513)
!12862 = !DILocation(line: 55, column: 29, scope: !12860)
!12863 = !DILocalVariable(name: "y", arg: 2, scope: !12860, file: !12826, line: 55, type: !513)
!12864 = !DILocation(line: 55, column: 44, scope: !12860)
!12865 = !DILocalVariable(name: "a", scope: !12860, file: !12826, line: 57, type: !1701)
!12866 = !DILocation(line: 57, column: 26, scope: !12860)
!12867 = !DILocation(line: 57, column: 30, scope: !12860)
!12868 = !DILocalVariable(name: "b", scope: !12860, file: !12826, line: 58, type: !1701)
!12869 = !DILocation(line: 58, column: 26, scope: !12860)
!12870 = !DILocation(line: 58, column: 30, scope: !12860)
!12871 = !DILocation(line: 59, column: 11, scope: !12860)
!12872 = !DILocation(line: 59, column: 31, scope: !12860)
!12873 = !DILocation(line: 59, column: 45, scope: !12860)
!12874 = !DILocation(line: 59, column: 48, scope: !12860)
!12875 = !DILocation(line: 59, column: 54, scope: !12860)
!12876 = !DILocation(line: 59, column: 57, scope: !12860)
!12877 = !DILocation(line: 59, column: 34, scope: !12860)
!12878 = !DILocation(line: 0, scope: !12860)
!12879 = !DILocation(line: 59, column: 10, scope: !12860)
!12880 = !DILocation(line: 59, column: 3, scope: !12860)
!12881 = distinct !DISubprogram(name: "triple_compare_ino_str", scope: !12826, file: !12826, line: 63, type: !635, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1698, retainedNodes: !209)
!12882 = !DILocalVariable(name: "x", arg: 1, scope: !12881, file: !12826, line: 63, type: !513)
!12883 = !DILocation(line: 63, column: 37, scope: !12881)
!12884 = !DILocalVariable(name: "y", arg: 2, scope: !12881, file: !12826, line: 63, type: !513)
!12885 = !DILocation(line: 63, column: 52, scope: !12881)
!12886 = !DILocalVariable(name: "a", scope: !12881, file: !12826, line: 65, type: !1701)
!12887 = !DILocation(line: 65, column: 26, scope: !12881)
!12888 = !DILocation(line: 65, column: 30, scope: !12881)
!12889 = !DILocalVariable(name: "b", scope: !12881, file: !12826, line: 66, type: !1701)
!12890 = !DILocation(line: 66, column: 26, scope: !12881)
!12891 = !DILocation(line: 66, column: 30, scope: !12881)
!12892 = !DILocation(line: 67, column: 11, scope: !12881)
!12893 = !DILocation(line: 67, column: 31, scope: !12881)
!12894 = !DILocation(line: 67, column: 34, scope: !12881)
!12895 = !DILocation(line: 0, scope: !12881)
!12896 = !DILocation(line: 67, column: 10, scope: !12881)
!12897 = !DILocation(line: 67, column: 3, scope: !12881)
!12898 = distinct !DISubprogram(name: "triple_free", scope: !12826, file: !12826, line: 72, type: !631, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1698, retainedNodes: !209)
!12899 = !DILocalVariable(name: "x", arg: 1, scope: !12898, file: !12826, line: 72, type: !53)
!12900 = !DILocation(line: 72, column: 20, scope: !12898)
!12901 = !DILocalVariable(name: "a", scope: !12898, file: !12826, line: 74, type: !1708)
!12902 = !DILocation(line: 74, column: 20, scope: !12898)
!12903 = !DILocation(line: 74, column: 24, scope: !12898)
!12904 = !DILocation(line: 75, column: 9, scope: !12898)
!12905 = !DILocation(line: 75, column: 12, scope: !12898)
!12906 = !DILocation(line: 75, column: 3, scope: !12898)
!12907 = !DILocation(line: 76, column: 9, scope: !12898)
!12908 = !DILocation(line: 76, column: 3, scope: !12898)
!12909 = !DILocation(line: 77, column: 1, scope: !12898)
!12910 = distinct !DISubprogram(name: "mkancesdirs", scope: !12911, file: !12911, line: 65, type: !1723, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1709, retainedNodes: !209)
!12911 = !DIFile(filename: "lib/mkancesdirs.c", directory: "/home/mbarbar/software/coreutils-8.31")
!12912 = !DILocalVariable(name: "file", arg: 1, scope: !12910, file: !12911, line: 65, type: !9)
!12913 = !DILocation(line: 65, column: 20, scope: !12910)
!12914 = !DILocalVariable(name: "wd", arg: 2, scope: !12910, file: !12911, line: 65, type: !1725)
!12915 = !DILocation(line: 65, column: 41, scope: !12910)
!12916 = !DILocalVariable(name: "make_dir", arg: 3, scope: !12910, file: !12911, line: 66, type: !1726)
!12917 = !DILocation(line: 66, column: 20, scope: !12910)
!12918 = !DILocalVariable(name: "make_dir_arg", arg: 4, scope: !12910, file: !12911, line: 67, type: !53)
!12919 = !DILocation(line: 67, column: 20, scope: !12910)
!12920 = !DILocalVariable(name: "sep", scope: !12910, file: !12911, line: 72, type: !9)
!12921 = !DILocation(line: 72, column: 9, scope: !12910)
!12922 = !DILocalVariable(name: "component", scope: !12910, file: !12911, line: 76, type: !9)
!12923 = !DILocation(line: 76, column: 9, scope: !12910)
!12924 = !DILocation(line: 76, column: 21, scope: !12910)
!12925 = !DILocalVariable(name: "p", scope: !12910, file: !12911, line: 78, type: !9)
!12926 = !DILocation(line: 78, column: 9, scope: !12910)
!12927 = !DILocation(line: 78, column: 13, scope: !12910)
!12928 = !DILocation(line: 78, column: 18, scope: !12910)
!12929 = !DILocalVariable(name: "c", scope: !12910, file: !12911, line: 79, type: !10)
!12930 = !DILocation(line: 79, column: 8, scope: !12910)
!12931 = !DILocalVariable(name: "made_dir", scope: !12910, file: !12911, line: 80, type: !142)
!12932 = !DILocation(line: 80, column: 8, scope: !12910)
!12933 = !DILocation(line: 88, column: 3, scope: !12910)
!12934 = !DILocation(line: 88, column: 17, scope: !12910)
!12935 = !DILocation(line: 88, column: 15, scope: !12910)
!12936 = !DILocation(line: 88, column: 13, scope: !12910)
!12937 = !DILocation(line: 89, column: 9, scope: !12938)
!12938 = distinct !DILexicalBlock(scope: !12910, file: !12911, line: 89, column: 9)
!12939 = !DILocation(line: 89, column: 9, scope: !12910)
!12940 = !DILocation(line: 91, column: 15, scope: !12941)
!12941 = distinct !DILexicalBlock(scope: !12942, file: !12911, line: 91, column: 13)
!12942 = distinct !DILexicalBlock(scope: !12938, file: !12911, line: 90, column: 7)
!12943 = !DILocation(line: 91, column: 13, scope: !12942)
!12944 = !DILocation(line: 92, column: 17, scope: !12941)
!12945 = !DILocation(line: 92, column: 15, scope: !12941)
!12946 = !DILocation(line: 92, column: 11, scope: !12941)
!12947 = !DILocation(line: 93, column: 7, scope: !12942)
!12948 = !DILocation(line: 94, column: 14, scope: !12949)
!12949 = distinct !DILexicalBlock(scope: !12938, file: !12911, line: 94, column: 14)
!12950 = !DILocation(line: 94, column: 26, scope: !12949)
!12951 = !DILocation(line: 94, column: 30, scope: !12949)
!12952 = !DILocation(line: 94, column: 29, scope: !12949)
!12953 = !DILocation(line: 94, column: 32, scope: !12949)
!12954 = !DILocation(line: 94, column: 35, scope: !12949)
!12955 = !DILocation(line: 94, column: 14, scope: !12938)
!12956 = !DILocation(line: 98, column: 16, scope: !12957)
!12957 = distinct !DILexicalBlock(scope: !12958, file: !12911, line: 98, column: 13)
!12958 = distinct !DILexicalBlock(scope: !12949, file: !12911, line: 95, column: 7)
!12959 = !DILocation(line: 98, column: 22, scope: !12957)
!12960 = !DILocation(line: 98, column: 20, scope: !12957)
!12961 = !DILocation(line: 98, column: 32, scope: !12957)
!12962 = !DILocation(line: 98, column: 37, scope: !12957)
!12963 = !DILocation(line: 98, column: 40, scope: !12957)
!12964 = !DILocation(line: 98, column: 53, scope: !12957)
!12965 = !DILocation(line: 98, column: 13, scope: !12958)
!12966 = !DILocalVariable(name: "make_dir_errno", scope: !12967, file: !12911, line: 100, type: !7)
!12967 = distinct !DILexicalBlock(scope: !12957, file: !12911, line: 99, column: 11)
!12968 = !DILocation(line: 100, column: 17, scope: !12967)
!12969 = !DILocalVariable(name: "savewd_chdir_options", scope: !12967, file: !12911, line: 101, type: !7)
!12970 = !DILocation(line: 101, column: 17, scope: !12967)
!12971 = !DILocalVariable(name: "chdir_result", scope: !12967, file: !12911, line: 102, type: !7)
!12972 = !DILocation(line: 102, column: 17, scope: !12967)
!12973 = !DILocation(line: 106, column: 14, scope: !12967)
!12974 = !DILocation(line: 106, column: 18, scope: !12967)
!12975 = !DILocation(line: 110, column: 17, scope: !12976)
!12976 = distinct !DILexicalBlock(scope: !12967, file: !12911, line: 110, column: 17)
!12977 = !DILocation(line: 110, column: 23, scope: !12976)
!12978 = !DILocation(line: 110, column: 21, scope: !12976)
!12979 = !DILocation(line: 110, column: 33, scope: !12976)
!12980 = !DILocation(line: 111, column: 17, scope: !12976)
!12981 = !DILocation(line: 111, column: 20, scope: !12976)
!12982 = !DILocation(line: 111, column: 33, scope: !12976)
!12983 = !DILocation(line: 111, column: 40, scope: !12976)
!12984 = !DILocation(line: 111, column: 43, scope: !12976)
!12985 = !DILocation(line: 111, column: 56, scope: !12976)
!12986 = !DILocation(line: 110, column: 17, scope: !12967)
!12987 = !DILocation(line: 112, column: 24, scope: !12976)
!12988 = !DILocation(line: 112, column: 15, scope: !12976)
!12989 = !DILocation(line: 113, column: 22, scope: !12990)
!12990 = distinct !DILexicalBlock(scope: !12976, file: !12911, line: 113, column: 22)
!12991 = !DILocation(line: 113, column: 32, scope: !12990)
!12992 = !DILocation(line: 113, column: 38, scope: !12990)
!12993 = !DILocation(line: 113, column: 49, scope: !12990)
!12994 = !DILocation(line: 113, column: 63, scope: !12990)
!12995 = !DILocation(line: 113, column: 22, scope: !12976)
!12996 = !DILocation(line: 114, column: 32, scope: !12990)
!12997 = !DILocation(line: 114, column: 30, scope: !12990)
!12998 = !DILocation(line: 114, column: 15, scope: !12990)
!12999 = !DILocation(line: 116, column: 24, scope: !12990)
!13000 = !DILocation(line: 118, column: 17, scope: !13001)
!13001 = distinct !DILexicalBlock(scope: !12967, file: !12911, line: 118, column: 17)
!13002 = !DILocation(line: 118, column: 17, scope: !12967)
!13003 = !DILocation(line: 119, column: 36, scope: !13001)
!13004 = !DILocation(line: 119, column: 15, scope: !13001)
!13005 = !DILocation(line: 122, column: 29, scope: !12967)
!13006 = !DILocation(line: 122, column: 33, scope: !12967)
!13007 = !DILocation(line: 122, column: 44, scope: !12967)
!13008 = !DILocation(line: 122, column: 15, scope: !12967)
!13009 = !DILocation(line: 121, column: 26, scope: !12967)
!13010 = !DILocation(line: 126, column: 17, scope: !13011)
!13011 = distinct !DILexicalBlock(scope: !12967, file: !12911, line: 126, column: 17)
!13012 = !DILocation(line: 126, column: 30, scope: !13011)
!13013 = !DILocation(line: 126, column: 17, scope: !12967)
!13014 = !DILocation(line: 127, column: 16, scope: !13011)
!13015 = !DILocation(line: 127, column: 20, scope: !13011)
!13016 = !DILocation(line: 127, column: 15, scope: !13011)
!13017 = !DILocation(line: 129, column: 17, scope: !13018)
!13018 = distinct !DILexicalBlock(scope: !12967, file: !12911, line: 129, column: 17)
!13019 = !DILocation(line: 129, column: 30, scope: !13018)
!13020 = !DILocation(line: 129, column: 17, scope: !12967)
!13021 = !DILocation(line: 131, column: 21, scope: !13022)
!13022 = distinct !DILexicalBlock(scope: !13023, file: !12911, line: 131, column: 21)
!13023 = distinct !DILexicalBlock(scope: !13018, file: !12911, line: 130, column: 15)
!13024 = !DILocation(line: 131, column: 36, scope: !13022)
!13025 = !DILocation(line: 131, column: 41, scope: !13022)
!13026 = !DILocation(line: 131, column: 44, scope: !13022)
!13027 = !DILocation(line: 131, column: 50, scope: !13022)
!13028 = !DILocation(line: 131, column: 21, scope: !13023)
!13029 = !DILocation(line: 132, column: 27, scope: !13022)
!13030 = !DILocation(line: 132, column: 19, scope: !13022)
!13031 = !DILocation(line: 132, column: 25, scope: !13022)
!13032 = !DILocation(line: 133, column: 24, scope: !13023)
!13033 = !DILocation(line: 133, column: 17, scope: !13023)
!13034 = !DILocation(line: 135, column: 11, scope: !12967)
!13035 = !DILocation(line: 137, column: 21, scope: !12958)
!13036 = !DILocation(line: 137, column: 19, scope: !12958)
!13037 = !DILocation(line: 138, column: 7, scope: !12958)
!13038 = distinct !{!13038, !12933, !13039}
!13039 = !DILocation(line: 138, column: 7, scope: !12910)
!13040 = !DILocation(line: 140, column: 10, scope: !12910)
!13041 = !DILocation(line: 140, column: 22, scope: !12910)
!13042 = !DILocation(line: 140, column: 20, scope: !12910)
!13043 = !DILocation(line: 140, column: 3, scope: !12910)
!13044 = !DILocation(line: 141, column: 1, scope: !12910)
!13045 = distinct !DISubprogram(name: "make_dir_parents", scope: !13046, file: !13046, line: 85, type: !1741, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1727, retainedNodes: !209)
!13046 = !DIFile(filename: "lib/mkdir-p.c", directory: "/home/mbarbar/software/coreutils-8.31")
!13047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !271, line: 46, size: 1152, elements: !13048)
!13048 = !{!13049, !13050, !13051, !13052, !13053, !13054, !13055, !13056, !13057, !13058, !13059, !13060, !13065, !13066, !13067}
!13049 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !13047, file: !271, line: 48, baseType: !274, size: 64)
!13050 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !13047, file: !271, line: 53, baseType: !276, size: 64, offset: 64)
!13051 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !13047, file: !271, line: 61, baseType: !278, size: 64, offset: 128)
!13052 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !13047, file: !271, line: 62, baseType: !140, size: 32, offset: 192)
!13053 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !13047, file: !271, line: 64, baseType: !128, size: 32, offset: 224)
!13054 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !13047, file: !271, line: 65, baseType: !130, size: 32, offset: 256)
!13055 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !13047, file: !271, line: 67, baseType: !7, size: 32, offset: 288)
!13056 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !13047, file: !271, line: 69, baseType: !274, size: 64, offset: 320)
!13057 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !13047, file: !271, line: 74, baseType: !29, size: 64, offset: 384)
!13058 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !13047, file: !271, line: 78, baseType: !286, size: 64, offset: 448)
!13059 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !13047, file: !271, line: 80, baseType: !288, size: 64, offset: 512)
!13060 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !13047, file: !271, line: 91, baseType: !13061, size: 128, offset: 576)
!13061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !291, line: 9, size: 128, elements: !13062)
!13062 = !{!13063, !13064}
!13063 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !13061, file: !291, line: 11, baseType: !294, size: 64)
!13064 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !13061, file: !291, line: 12, baseType: !296, size: 64, offset: 64)
!13065 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !13047, file: !271, line: 92, baseType: !13061, size: 128, offset: 704)
!13066 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !13047, file: !271, line: 93, baseType: !13061, size: 128, offset: 832)
!13067 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !13047, file: !271, line: 106, baseType: !300, size: 192, offset: 960)
!13068 = !DILocalVariable(name: "dir", arg: 1, scope: !13045, file: !13046, line: 85, type: !9)
!13069 = !DILocation(line: 85, column: 25, scope: !13045)
!13070 = !DILocalVariable(name: "wd", arg: 2, scope: !13045, file: !13046, line: 86, type: !1743)
!13071 = !DILocation(line: 86, column: 34, scope: !13045)
!13072 = !DILocalVariable(name: "make_ancestor", arg: 3, scope: !13045, file: !13046, line: 87, type: !1726)
!13073 = !DILocation(line: 87, column: 25, scope: !13045)
!13074 = !DILocalVariable(name: "options", arg: 4, scope: !13045, file: !13046, line: 88, type: !53)
!13075 = !DILocation(line: 88, column: 25, scope: !13045)
!13076 = !DILocalVariable(name: "mode", arg: 5, scope: !13045, file: !13046, line: 89, type: !139)
!13077 = !DILocation(line: 89, column: 26, scope: !13045)
!13078 = !DILocalVariable(name: "announce", arg: 6, scope: !13045, file: !13046, line: 90, type: !1744)
!13079 = !DILocation(line: 90, column: 26, scope: !13045)
!13080 = !DILocalVariable(name: "mode_bits", arg: 7, scope: !13045, file: !13046, line: 91, type: !139)
!13081 = !DILocation(line: 91, column: 26, scope: !13045)
!13082 = !DILocalVariable(name: "owner", arg: 8, scope: !13045, file: !13046, line: 92, type: !127)
!13083 = !DILocation(line: 92, column: 25, scope: !13045)
!13084 = !DILocalVariable(name: "group", arg: 9, scope: !13045, file: !13046, line: 93, type: !129)
!13085 = !DILocation(line: 93, column: 25, scope: !13045)
!13086 = !DILocalVariable(name: "preserve_existing", arg: 10, scope: !13045, file: !13046, line: 94, type: !142)
!13087 = !DILocation(line: 94, column: 24, scope: !13045)
!13088 = !DILocalVariable(name: "mkdir_errno", scope: !13045, file: !13046, line: 96, type: !7)
!13089 = !DILocation(line: 96, column: 7, scope: !13045)
!13090 = !DILocation(line: 96, column: 22, scope: !13045)
!13091 = !DILocation(line: 96, column: 70, scope: !13045)
!13092 = !DILocation(line: 96, column: 56, scope: !13045)
!13093 = !DILocation(line: 98, column: 7, scope: !13094)
!13094 = distinct !DILexicalBlock(scope: !13045, file: !13046, line: 98, column: 7)
!13095 = !DILocation(line: 98, column: 19, scope: !13094)
!13096 = !DILocation(line: 98, column: 7, scope: !13045)
!13097 = !DILocalVariable(name: "prefix_len", scope: !13098, file: !13046, line: 100, type: !652)
!13098 = distinct !DILexicalBlock(scope: !13094, file: !13046, line: 99, column: 5)
!13099 = !DILocation(line: 100, column: 17, scope: !13098)
!13100 = !DILocalVariable(name: "savewd_chdir_options", scope: !13098, file: !13046, line: 101, type: !7)
!13101 = !DILocation(line: 101, column: 11, scope: !13098)
!13102 = !DILocation(line: 103, column: 11, scope: !13103)
!13103 = distinct !DILexicalBlock(scope: !13098, file: !13046, line: 103, column: 11)
!13104 = !DILocation(line: 103, column: 11, scope: !13098)
!13105 = !DILocation(line: 105, column: 37, scope: !13106)
!13106 = distinct !DILexicalBlock(scope: !13103, file: !13046, line: 104, column: 9)
!13107 = !DILocation(line: 105, column: 42, scope: !13106)
!13108 = !DILocation(line: 105, column: 46, scope: !13106)
!13109 = !DILocation(line: 105, column: 61, scope: !13106)
!13110 = !DILocation(line: 105, column: 24, scope: !13106)
!13111 = !DILocation(line: 105, column: 22, scope: !13106)
!13112 = !DILocation(line: 106, column: 15, scope: !13113)
!13113 = distinct !DILexicalBlock(scope: !13106, file: !13046, line: 106, column: 15)
!13114 = !DILocation(line: 106, column: 26, scope: !13113)
!13115 = !DILocation(line: 106, column: 15, scope: !13106)
!13116 = !DILocation(line: 108, column: 19, scope: !13117)
!13117 = distinct !DILexicalBlock(scope: !13118, file: !13046, line: 108, column: 19)
!13118 = distinct !DILexicalBlock(scope: !13113, file: !13046, line: 107, column: 13)
!13119 = !DILocation(line: 108, column: 30, scope: !13117)
!13120 = !DILocation(line: 108, column: 19, scope: !13118)
!13121 = !DILocation(line: 109, column: 17, scope: !13117)
!13122 = !DILocation(line: 110, column: 29, scope: !13118)
!13123 = !DILocation(line: 110, column: 27, scope: !13118)
!13124 = !DILocation(line: 111, column: 13, scope: !13118)
!13125 = !DILocation(line: 112, column: 9, scope: !13106)
!13126 = !DILocation(line: 114, column: 16, scope: !13127)
!13127 = distinct !DILexicalBlock(scope: !13098, file: !13046, line: 114, column: 11)
!13128 = !DILocation(line: 114, column: 13, scope: !13127)
!13129 = !DILocation(line: 114, column: 11, scope: !13098)
!13130 = !DILocalVariable(name: "keep_owner", scope: !13131, file: !13046, line: 121, type: !142)
!13131 = distinct !DILexicalBlock(scope: !13127, file: !13046, line: 115, column: 9)
!13132 = !DILocation(line: 121, column: 16, scope: !13131)
!13133 = !DILocation(line: 121, column: 29, scope: !13131)
!13134 = !DILocation(line: 121, column: 35, scope: !13131)
!13135 = !DILocation(line: 121, column: 49, scope: !13131)
!13136 = !DILocation(line: 121, column: 52, scope: !13131)
!13137 = !DILocation(line: 121, column: 58, scope: !13131)
!13138 = !DILocation(line: 0, scope: !13131)
!13139 = !DILocalVariable(name: "keep_special_mode_bits", scope: !13131, file: !13046, line: 122, type: !142)
!13140 = !DILocation(line: 122, column: 16, scope: !13131)
!13141 = !DILocation(line: 123, column: 15, scope: !13131)
!13142 = !DILocation(line: 123, column: 25, scope: !13131)
!13143 = !DILocation(line: 123, column: 51, scope: !13131)
!13144 = !DILocation(line: 123, column: 56, scope: !13131)
!13145 = !DILocation(line: 123, column: 48, scope: !13131)
!13146 = !DILocation(line: 123, column: 68, scope: !13131)
!13147 = !DILocalVariable(name: "mkdir_mode", scope: !13131, file: !13046, line: 124, type: !139)
!13148 = !DILocation(line: 124, column: 18, scope: !13131)
!13149 = !DILocation(line: 124, column: 31, scope: !13131)
!13150 = !DILocation(line: 125, column: 17, scope: !13151)
!13151 = distinct !DILexicalBlock(scope: !13131, file: !13046, line: 125, column: 15)
!13152 = !DILocation(line: 125, column: 15, scope: !13131)
!13153 = !DILocation(line: 126, column: 24, scope: !13151)
!13154 = !DILocation(line: 126, column: 13, scope: !13151)
!13155 = !DILocation(line: 127, column: 22, scope: !13156)
!13156 = distinct !DILexicalBlock(scope: !13151, file: !13046, line: 127, column: 20)
!13157 = !DILocation(line: 127, column: 20, scope: !13151)
!13158 = !DILocation(line: 128, column: 24, scope: !13156)
!13159 = !DILocation(line: 128, column: 13, scope: !13156)
!13160 = !DILocation(line: 130, column: 22, scope: !13161)
!13161 = distinct !DILexicalBlock(scope: !13131, file: !13046, line: 130, column: 15)
!13162 = !DILocation(line: 130, column: 28, scope: !13161)
!13163 = !DILocation(line: 130, column: 26, scope: !13161)
!13164 = !DILocation(line: 130, column: 40, scope: !13161)
!13165 = !DILocation(line: 130, column: 15, scope: !13161)
!13166 = !DILocation(line: 130, column: 52, scope: !13161)
!13167 = !DILocation(line: 130, column: 15, scope: !13131)
!13168 = !DILocalVariable(name: "umask_must_be_ok", scope: !13169, file: !13046, line: 134, type: !142)
!13169 = distinct !DILexicalBlock(scope: !13161, file: !13046, line: 131, column: 13)
!13170 = !DILocation(line: 134, column: 20, scope: !13169)
!13171 = !DILocation(line: 134, column: 40, scope: !13169)
!13172 = !DILocation(line: 134, column: 47, scope: !13169)
!13173 = !DILocation(line: 134, column: 45, scope: !13169)
!13174 = !DILocation(line: 134, column: 57, scope: !13169)
!13175 = !DILocation(line: 134, column: 70, scope: !13169)
!13176 = !DILocation(line: 136, column: 15, scope: !13169)
!13177 = !DILocation(line: 136, column: 25, scope: !13169)
!13178 = !DILocation(line: 136, column: 30, scope: !13169)
!13179 = !DILocation(line: 137, column: 36, scope: !13169)
!13180 = !DILocation(line: 137, column: 49, scope: !13169)
!13181 = !DILocation(line: 137, column: 47, scope: !13169)
!13182 = !DILocation(line: 138, column: 38, scope: !13169)
!13183 = !DILocation(line: 138, column: 36, scope: !13169)
!13184 = !DILocation(line: 137, column: 35, scope: !13169)
!13185 = !DILocation(line: 137, column: 33, scope: !13169)
!13186 = !DILocation(line: 139, column: 36, scope: !13169)
!13187 = !DILocation(line: 140, column: 13, scope: !13169)
!13188 = !DILocation(line: 143, column: 29, scope: !13189)
!13189 = distinct !DILexicalBlock(scope: !13161, file: !13046, line: 142, column: 13)
!13190 = !DILocation(line: 143, column: 27, scope: !13189)
!13191 = !DILocation(line: 144, column: 26, scope: !13189)
!13192 = !DILocation(line: 147, column: 15, scope: !13193)
!13193 = distinct !DILexicalBlock(scope: !13131, file: !13046, line: 147, column: 15)
!13194 = !DILocation(line: 147, column: 15, scope: !13131)
!13195 = !DILocation(line: 149, column: 19, scope: !13196)
!13196 = distinct !DILexicalBlock(scope: !13197, file: !13046, line: 149, column: 19)
!13197 = distinct !DILexicalBlock(scope: !13193, file: !13046, line: 148, column: 13)
!13198 = !DILocation(line: 149, column: 31, scope: !13196)
!13199 = !DILocation(line: 149, column: 19, scope: !13197)
!13200 = !DILocation(line: 150, column: 17, scope: !13196)
!13201 = !DILocation(line: 151, column: 19, scope: !13202)
!13202 = distinct !DILexicalBlock(scope: !13197, file: !13046, line: 151, column: 19)
!13203 = !DILocation(line: 151, column: 31, scope: !13202)
!13204 = !DILocation(line: 151, column: 41, scope: !13202)
!13205 = !DILocation(line: 151, column: 44, scope: !13202)
!13206 = !DILocation(line: 151, column: 19, scope: !13197)
!13207 = !DILocalVariable(name: "st", scope: !13208, file: !13046, line: 153, type: !13047)
!13208 = distinct !DILexicalBlock(scope: !13202, file: !13046, line: 152, column: 17)
!13209 = !DILocation(line: 153, column: 31, scope: !13208)
!13210 = !DILocation(line: 154, column: 29, scope: !13211)
!13211 = distinct !DILexicalBlock(scope: !13208, file: !13046, line: 154, column: 23)
!13212 = !DILocation(line: 154, column: 35, scope: !13211)
!13213 = !DILocation(line: 154, column: 33, scope: !13211)
!13214 = !DILocation(line: 154, column: 23, scope: !13211)
!13215 = !DILocation(line: 154, column: 52, scope: !13211)
!13216 = !DILocation(line: 154, column: 23, scope: !13208)
!13217 = !DILocation(line: 156, column: 27, scope: !13218)
!13218 = distinct !DILexicalBlock(scope: !13219, file: !13046, line: 156, column: 27)
!13219 = distinct !DILexicalBlock(scope: !13211, file: !13046, line: 155, column: 21)
!13220 = !DILocation(line: 156, column: 27, scope: !13219)
!13221 = !DILocation(line: 157, column: 25, scope: !13218)
!13222 = !DILocation(line: 158, column: 21, scope: !13219)
!13223 = !DILocation(line: 159, column: 28, scope: !13224)
!13224 = distinct !DILexicalBlock(scope: !13211, file: !13046, line: 159, column: 28)
!13225 = !DILocation(line: 159, column: 40, scope: !13224)
!13226 = !DILocation(line: 160, column: 28, scope: !13224)
!13227 = !DILocation(line: 160, column: 31, scope: !13224)
!13228 = !DILocation(line: 160, column: 37, scope: !13224)
!13229 = !DILocation(line: 160, column: 47, scope: !13224)
!13230 = !DILocation(line: 160, column: 50, scope: !13224)
!13231 = !DILocation(line: 160, column: 56, scope: !13224)
!13232 = !DILocation(line: 159, column: 28, scope: !13211)
!13233 = !DILocation(line: 162, column: 33, scope: !13234)
!13234 = distinct !DILexicalBlock(scope: !13224, file: !13046, line: 161, column: 21)
!13235 = !DILocation(line: 162, column: 40, scope: !13234)
!13236 = !DILocation(line: 162, column: 68, scope: !13234)
!13237 = !DILocation(line: 162, column: 61, scope: !13234)
!13238 = !DILocation(line: 162, column: 23, scope: !13234)
!13239 = !DILocation(line: 163, column: 23, scope: !13234)
!13240 = !DILocation(line: 165, column: 17, scope: !13208)
!13241 = !DILocation(line: 166, column: 13, scope: !13197)
!13242 = !DILocalVariable(name: "open_result", scope: !13243, file: !13046, line: 169, type: !1745)
!13243 = distinct !DILexicalBlock(scope: !13193, file: !13046, line: 168, column: 13)
!13244 = !DILocation(line: 169, column: 19, scope: !13243)
!13245 = !DILocalVariable(name: "chdir_result", scope: !13243, file: !13046, line: 170, type: !7)
!13246 = !DILocation(line: 170, column: 19, scope: !13243)
!13247 = !DILocation(line: 171, column: 31, scope: !13243)
!13248 = !DILocation(line: 171, column: 35, scope: !13243)
!13249 = !DILocation(line: 171, column: 41, scope: !13243)
!13250 = !DILocation(line: 171, column: 39, scope: !13243)
!13251 = !DILocation(line: 172, column: 31, scope: !13243)
!13252 = !DILocation(line: 172, column: 53, scope: !13243)
!13253 = !DILocation(line: 171, column: 17, scope: !13243)
!13254 = !DILocation(line: 173, column: 19, scope: !13255)
!13255 = distinct !DILexicalBlock(scope: !13243, file: !13046, line: 173, column: 19)
!13256 = !DILocation(line: 173, column: 32, scope: !13255)
!13257 = !DILocation(line: 173, column: 19, scope: !13243)
!13258 = !DILocation(line: 174, column: 17, scope: !13255)
!13259 = !DILocalVariable(name: "chdir_ok", scope: !13260, file: !13046, line: 177, type: !142)
!13260 = distinct !DILexicalBlock(scope: !13255, file: !13046, line: 176, column: 17)
!13261 = !DILocation(line: 177, column: 24, scope: !13260)
!13262 = !DILocation(line: 177, column: 36, scope: !13260)
!13263 = !DILocation(line: 177, column: 49, scope: !13260)
!13264 = !DILocalVariable(name: "subdir", scope: !13260, file: !13046, line: 178, type: !180)
!13265 = !DILocation(line: 178, column: 31, scope: !13260)
!13266 = !DILocation(line: 178, column: 41, scope: !13260)
!13267 = !DILocation(line: 178, column: 58, scope: !13260)
!13268 = !DILocation(line: 178, column: 64, scope: !13260)
!13269 = !DILocation(line: 178, column: 62, scope: !13260)
!13270 = !DILocation(line: 179, column: 36, scope: !13271)
!13271 = distinct !DILexicalBlock(scope: !13260, file: !13046, line: 179, column: 23)
!13272 = !DILocation(line: 179, column: 52, scope: !13271)
!13273 = !DILocation(line: 179, column: 60, scope: !13271)
!13274 = !DILocation(line: 180, column: 36, scope: !13271)
!13275 = !DILocation(line: 180, column: 43, scope: !13271)
!13276 = !DILocation(line: 180, column: 50, scope: !13271)
!13277 = !DILocation(line: 180, column: 56, scope: !13271)
!13278 = !DILocation(line: 179, column: 23, scope: !13271)
!13279 = !DILocation(line: 181, column: 23, scope: !13271)
!13280 = !DILocation(line: 179, column: 23, scope: !13260)
!13281 = !DILocation(line: 182, column: 21, scope: !13271)
!13282 = !DILocation(line: 184, column: 23, scope: !13283)
!13283 = distinct !DILexicalBlock(scope: !13260, file: !13046, line: 184, column: 23)
!13284 = !DILocation(line: 184, column: 35, scope: !13283)
!13285 = !DILocation(line: 185, column: 23, scope: !13283)
!13286 = !DILocation(line: 185, column: 27, scope: !13283)
!13287 = !DILocation(line: 185, column: 39, scope: !13283)
!13288 = !DILocation(line: 185, column: 49, scope: !13283)
!13289 = !DILocation(line: 185, column: 52, scope: !13283)
!13290 = !DILocation(line: 186, column: 27, scope: !13283)
!13291 = !DILocation(line: 186, column: 30, scope: !13283)
!13292 = !DILocation(line: 186, column: 36, scope: !13283)
!13293 = !DILocation(line: 184, column: 23, scope: !13260)
!13294 = !DILocation(line: 188, column: 33, scope: !13295)
!13295 = distinct !DILexicalBlock(scope: !13283, file: !13046, line: 187, column: 21)
!13296 = !DILocation(line: 189, column: 30, scope: !13295)
!13297 = !DILocation(line: 192, column: 37, scope: !13295)
!13298 = !DILocation(line: 192, column: 30, scope: !13295)
!13299 = !DILocation(line: 188, column: 23, scope: !13295)
!13300 = !DILocation(line: 193, column: 23, scope: !13295)
!13301 = !DILocation(line: 197, column: 9, scope: !13131)
!13302 = !DILocation(line: 198, column: 5, scope: !13098)
!13303 = !DILocation(line: 200, column: 13, scope: !13045)
!13304 = !DILocation(line: 200, column: 26, scope: !13045)
!13305 = !DILocation(line: 200, column: 66, scope: !13045)
!13306 = !DILocation(line: 200, column: 59, scope: !13045)
!13307 = !DILocation(line: 200, column: 3, scope: !13045)
!13308 = !DILocation(line: 201, column: 3, scope: !13045)
!13309 = !DILocation(line: 202, column: 1, scope: !13045)
!13310 = distinct !DISubprogram(name: "mode_compile", scope: !1753, file: !1753, line: 134, type: !1749, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1746, retainedNodes: !209)
!13311 = !DILocalVariable(name: "mode_string", arg: 1, scope: !13310, file: !1753, line: 134, type: !180)
!13312 = !DILocation(line: 134, column: 27, scope: !13310)
!13313 = !DILocalVariable(name: "mc", scope: !13310, file: !1753, line: 137, type: !1751)
!13314 = !DILocation(line: 137, column: 23, scope: !13310)
!13315 = !DILocalVariable(name: "used", scope: !13310, file: !1753, line: 138, type: !55)
!13316 = !DILocation(line: 138, column: 10, scope: !13310)
!13317 = !DILocalVariable(name: "p", scope: !13310, file: !1753, line: 139, type: !180)
!13318 = !DILocation(line: 139, column: 15, scope: !13310)
!13319 = !DILocation(line: 141, column: 15, scope: !13320)
!13320 = distinct !DILexicalBlock(scope: !13310, file: !1753, line: 141, column: 7)
!13321 = !DILocation(line: 141, column: 14, scope: !13320)
!13322 = !DILocation(line: 141, column: 11, scope: !13320)
!13323 = !DILocation(line: 141, column: 27, scope: !13320)
!13324 = !DILocation(line: 141, column: 31, scope: !13320)
!13325 = !DILocation(line: 141, column: 30, scope: !13320)
!13326 = !DILocation(line: 141, column: 43, scope: !13320)
!13327 = !DILocation(line: 141, column: 7, scope: !13310)
!13328 = !DILocalVariable(name: "octal_mode", scope: !13329, file: !1753, line: 143, type: !70)
!13329 = distinct !DILexicalBlock(scope: !13320, file: !1753, line: 142, column: 5)
!13330 = !DILocation(line: 143, column: 20, scope: !13329)
!13331 = !DILocalVariable(name: "mode", scope: !13329, file: !1753, line: 144, type: !139)
!13332 = !DILocation(line: 144, column: 14, scope: !13329)
!13333 = !DILocalVariable(name: "mentioned", scope: !13329, file: !1753, line: 145, type: !139)
!13334 = !DILocation(line: 145, column: 14, scope: !13329)
!13335 = !DILocation(line: 147, column: 11, scope: !13329)
!13336 = !DILocation(line: 147, column: 9, scope: !13329)
!13337 = !DILocation(line: 148, column: 7, scope: !13329)
!13338 = !DILocation(line: 150, column: 28, scope: !13339)
!13339 = distinct !DILexicalBlock(scope: !13329, file: !1753, line: 149, column: 9)
!13340 = !DILocation(line: 150, column: 26, scope: !13339)
!13341 = !DILocation(line: 150, column: 43, scope: !13339)
!13342 = !DILocation(line: 150, column: 41, scope: !13339)
!13343 = !DILocation(line: 150, column: 39, scope: !13339)
!13344 = !DILocation(line: 150, column: 46, scope: !13339)
!13345 = !DILocation(line: 150, column: 22, scope: !13339)
!13346 = !DILocation(line: 151, column: 22, scope: !13347)
!13347 = distinct !DILexicalBlock(scope: !13339, file: !1753, line: 151, column: 15)
!13348 = !DILocation(line: 151, column: 20, scope: !13347)
!13349 = !DILocation(line: 151, column: 15, scope: !13339)
!13350 = !DILocation(line: 152, column: 13, scope: !13347)
!13351 = !DILocation(line: 153, column: 9, scope: !13339)
!13352 = !DILocation(line: 154, column: 22, scope: !13329)
!13353 = !DILocation(line: 154, column: 21, scope: !13329)
!13354 = !DILocation(line: 154, column: 18, scope: !13329)
!13355 = !DILocation(line: 154, column: 24, scope: !13329)
!13356 = !DILocation(line: 154, column: 28, scope: !13329)
!13357 = !DILocation(line: 154, column: 27, scope: !13329)
!13358 = !DILocation(line: 154, column: 30, scope: !13329)
!13359 = !DILocation(line: 0, scope: !13329)
!13360 = distinct !{!13360, !13337, !13361}
!13361 = !DILocation(line: 154, column: 35, scope: !13329)
!13362 = !DILocation(line: 156, column: 12, scope: !13363)
!13363 = distinct !DILexicalBlock(scope: !13329, file: !1753, line: 156, column: 11)
!13364 = !DILocation(line: 156, column: 11, scope: !13363)
!13365 = !DILocation(line: 156, column: 11, scope: !13329)
!13366 = !DILocation(line: 157, column: 9, scope: !13363)
!13367 = !DILocation(line: 159, column: 29, scope: !13329)
!13368 = !DILocation(line: 159, column: 14, scope: !13329)
!13369 = !DILocation(line: 159, column: 12, scope: !13329)
!13370 = !DILocation(line: 160, column: 20, scope: !13329)
!13371 = !DILocation(line: 160, column: 24, scope: !13329)
!13372 = !DILocation(line: 160, column: 22, scope: !13329)
!13373 = !DILocation(line: 160, column: 36, scope: !13329)
!13374 = !DILocation(line: 161, column: 23, scope: !13329)
!13375 = !DILocation(line: 161, column: 28, scope: !13329)
!13376 = !DILocation(line: 161, column: 51, scope: !13329)
!13377 = !DILocation(line: 161, column: 61, scope: !13329)
!13378 = !DILocation(line: 160, column: 17, scope: !13329)
!13379 = !DILocation(line: 163, column: 35, scope: !13329)
!13380 = !DILocation(line: 163, column: 41, scope: !13329)
!13381 = !DILocation(line: 163, column: 14, scope: !13329)
!13382 = !DILocation(line: 163, column: 7, scope: !13329)
!13383 = !DILocalVariable(name: "needed", scope: !13384, file: !1753, line: 168, type: !55)
!13384 = distinct !DILexicalBlock(scope: !13310, file: !1753, line: 167, column: 3)
!13385 = !DILocation(line: 168, column: 12, scope: !13384)
!13386 = !DILocation(line: 169, column: 14, scope: !13387)
!13387 = distinct !DILexicalBlock(scope: !13384, file: !1753, line: 169, column: 5)
!13388 = !DILocation(line: 169, column: 12, scope: !13387)
!13389 = !DILocation(line: 169, column: 10, scope: !13387)
!13390 = !DILocation(line: 169, column: 28, scope: !13391)
!13391 = distinct !DILexicalBlock(scope: !13387, file: !1753, line: 169, column: 5)
!13392 = !DILocation(line: 169, column: 27, scope: !13391)
!13393 = !DILocation(line: 169, column: 5, scope: !13387)
!13394 = !DILocation(line: 170, column: 19, scope: !13391)
!13395 = !DILocation(line: 170, column: 18, scope: !13391)
!13396 = !DILocation(line: 170, column: 21, scope: !13391)
!13397 = !DILocation(line: 170, column: 28, scope: !13391)
!13398 = !DILocation(line: 170, column: 32, scope: !13391)
!13399 = !DILocation(line: 170, column: 31, scope: !13391)
!13400 = !DILocation(line: 170, column: 34, scope: !13391)
!13401 = !DILocation(line: 170, column: 41, scope: !13391)
!13402 = !DILocation(line: 170, column: 45, scope: !13391)
!13403 = !DILocation(line: 170, column: 44, scope: !13391)
!13404 = !DILocation(line: 170, column: 47, scope: !13391)
!13405 = !DILocation(line: 170, column: 17, scope: !13391)
!13406 = !DILocation(line: 170, column: 14, scope: !13391)
!13407 = !DILocation(line: 170, column: 7, scope: !13391)
!13408 = !DILocation(line: 169, column: 32, scope: !13391)
!13409 = !DILocation(line: 169, column: 5, scope: !13391)
!13410 = distinct !{!13410, !13393, !13411}
!13411 = !DILocation(line: 170, column: 53, scope: !13387)
!13412 = !DILocation(line: 171, column: 20, scope: !13384)
!13413 = !DILocation(line: 171, column: 10, scope: !13384)
!13414 = !DILocation(line: 171, column: 8, scope: !13384)
!13415 = !DILocation(line: 176, column: 12, scope: !13416)
!13416 = distinct !DILexicalBlock(scope: !13310, file: !1753, line: 176, column: 3)
!13417 = !DILocation(line: 176, column: 10, scope: !13416)
!13418 = !DILocation(line: 176, column: 8, scope: !13416)
!13419 = !DILocalVariable(name: "affected", scope: !13420, file: !1753, line: 179, type: !139)
!13420 = distinct !DILexicalBlock(scope: !13421, file: !1753, line: 177, column: 5)
!13421 = distinct !DILexicalBlock(scope: !13416, file: !1753, line: 176, column: 3)
!13422 = !DILocation(line: 179, column: 14, scope: !13420)
!13423 = !DILocation(line: 182, column: 7, scope: !13420)
!13424 = !DILocation(line: 183, column: 18, scope: !13425)
!13425 = distinct !DILexicalBlock(scope: !13426, file: !1753, line: 182, column: 7)
!13426 = distinct !DILexicalBlock(scope: !13420, file: !1753, line: 182, column: 7)
!13427 = !DILocation(line: 183, column: 17, scope: !13425)
!13428 = !DILocation(line: 183, column: 9, scope: !13425)
!13429 = !DILocation(line: 186, column: 13, scope: !13430)
!13430 = distinct !DILexicalBlock(scope: !13425, file: !1753, line: 184, column: 11)
!13431 = !DILocation(line: 188, column: 22, scope: !13430)
!13432 = !DILocation(line: 189, column: 13, scope: !13430)
!13433 = !DILocation(line: 191, column: 22, scope: !13430)
!13434 = !DILocation(line: 192, column: 13, scope: !13430)
!13435 = !DILocation(line: 194, column: 22, scope: !13430)
!13436 = !DILocation(line: 195, column: 13, scope: !13430)
!13437 = !DILocation(line: 197, column: 22, scope: !13430)
!13438 = !DILocation(line: 198, column: 13, scope: !13430)
!13439 = !DILocation(line: 200, column: 13, scope: !13430)
!13440 = !DILocation(line: 201, column: 11, scope: !13430)
!13441 = !DILocation(line: 182, column: 16, scope: !13425)
!13442 = !DILocation(line: 182, column: 7, scope: !13425)
!13443 = distinct !{!13443, !13444, !13445}
!13444 = !DILocation(line: 182, column: 7, scope: !13426)
!13445 = !DILocation(line: 201, column: 11, scope: !13426)
!13446 = !DILabel(scope: !13420, name: "no_more_affected", file: !1753, line: 202)
!13447 = !DILocation(line: 202, column: 5, scope: !13420)
!13448 = !DILocation(line: 204, column: 7, scope: !13420)
!13449 = !DILocalVariable(name: "op", scope: !13450, file: !1753, line: 206, type: !10)
!13450 = distinct !DILexicalBlock(scope: !13420, file: !1753, line: 205, column: 9)
!13451 = !DILocation(line: 206, column: 16, scope: !13450)
!13452 = !DILocation(line: 206, column: 23, scope: !13450)
!13453 = !DILocation(line: 206, column: 21, scope: !13450)
!13454 = !DILocalVariable(name: "value", scope: !13450, file: !1753, line: 207, type: !139)
!13455 = !DILocation(line: 207, column: 18, scope: !13450)
!13456 = !DILocalVariable(name: "mentioned", scope: !13450, file: !1753, line: 208, type: !139)
!13457 = !DILocation(line: 208, column: 18, scope: !13450)
!13458 = !DILocalVariable(name: "flag", scope: !13450, file: !1753, line: 209, type: !10)
!13459 = !DILocation(line: 209, column: 16, scope: !13450)
!13460 = !DILocalVariable(name: "change", scope: !13450, file: !1753, line: 210, type: !1751)
!13461 = !DILocation(line: 210, column: 31, scope: !13450)
!13462 = !DILocation(line: 212, column: 20, scope: !13450)
!13463 = !DILocation(line: 212, column: 19, scope: !13450)
!13464 = !DILocation(line: 212, column: 11, scope: !13450)
!13465 = !DILocalVariable(name: "octal_mode", scope: !13466, file: !1753, line: 217, type: !70)
!13466 = distinct !DILexicalBlock(scope: !13467, file: !1753, line: 216, column: 15)
!13467 = distinct !DILexicalBlock(scope: !13450, file: !1753, line: 213, column: 13)
!13468 = !DILocation(line: 217, column: 30, scope: !13466)
!13469 = !DILocation(line: 219, column: 17, scope: !13466)
!13470 = !DILocation(line: 221, column: 38, scope: !13471)
!13471 = distinct !DILexicalBlock(scope: !13466, file: !1753, line: 220, column: 19)
!13472 = !DILocation(line: 221, column: 36, scope: !13471)
!13473 = !DILocation(line: 221, column: 53, scope: !13471)
!13474 = !DILocation(line: 221, column: 51, scope: !13471)
!13475 = !DILocation(line: 221, column: 49, scope: !13471)
!13476 = !DILocation(line: 221, column: 56, scope: !13471)
!13477 = !DILocation(line: 221, column: 32, scope: !13471)
!13478 = !DILocation(line: 222, column: 32, scope: !13479)
!13479 = distinct !DILexicalBlock(scope: !13471, file: !1753, line: 222, column: 25)
!13480 = !DILocation(line: 222, column: 30, scope: !13479)
!13481 = !DILocation(line: 222, column: 25, scope: !13471)
!13482 = !DILocation(line: 223, column: 23, scope: !13479)
!13483 = !DILocation(line: 224, column: 19, scope: !13471)
!13484 = !DILocation(line: 225, column: 32, scope: !13466)
!13485 = !DILocation(line: 225, column: 31, scope: !13466)
!13486 = !DILocation(line: 225, column: 28, scope: !13466)
!13487 = !DILocation(line: 225, column: 34, scope: !13466)
!13488 = !DILocation(line: 225, column: 38, scope: !13466)
!13489 = !DILocation(line: 225, column: 37, scope: !13466)
!13490 = !DILocation(line: 225, column: 40, scope: !13466)
!13491 = !DILocation(line: 0, scope: !13466)
!13492 = distinct !{!13492, !13469, !13493}
!13493 = !DILocation(line: 225, column: 45, scope: !13466)
!13494 = !DILocation(line: 227, column: 21, scope: !13495)
!13495 = distinct !DILexicalBlock(scope: !13466, file: !1753, line: 227, column: 21)
!13496 = !DILocation(line: 227, column: 30, scope: !13495)
!13497 = !DILocation(line: 227, column: 35, scope: !13495)
!13498 = !DILocation(line: 227, column: 34, scope: !13495)
!13499 = !DILocation(line: 227, column: 37, scope: !13495)
!13500 = !DILocation(line: 227, column: 41, scope: !13495)
!13501 = !DILocation(line: 227, column: 40, scope: !13495)
!13502 = !DILocation(line: 227, column: 43, scope: !13495)
!13503 = !DILocation(line: 227, column: 21, scope: !13466)
!13504 = !DILocation(line: 228, column: 19, scope: !13495)
!13505 = !DILocation(line: 229, column: 38, scope: !13466)
!13506 = !DILocation(line: 229, column: 26, scope: !13466)
!13507 = !DILocation(line: 230, column: 40, scope: !13466)
!13508 = !DILocation(line: 230, column: 25, scope: !13466)
!13509 = !DILocation(line: 230, column: 23, scope: !13466)
!13510 = !DILocation(line: 231, column: 22, scope: !13466)
!13511 = !DILocation(line: 232, column: 17, scope: !13466)
!13512 = !DILocation(line: 238, column: 21, scope: !13467)
!13513 = !DILocation(line: 239, column: 16, scope: !13467)
!13514 = !DILocation(line: 240, column: 15, scope: !13467)
!13515 = !DILocation(line: 244, column: 21, scope: !13467)
!13516 = !DILocation(line: 245, column: 16, scope: !13467)
!13517 = !DILocation(line: 246, column: 15, scope: !13467)
!13518 = !DILocation(line: 250, column: 21, scope: !13467)
!13519 = !DILocation(line: 251, column: 16, scope: !13467)
!13520 = !DILocation(line: 252, column: 15, scope: !13467)
!13521 = !DILocation(line: 255, column: 21, scope: !13467)
!13522 = !DILocation(line: 256, column: 20, scope: !13467)
!13523 = !DILocation(line: 258, column: 15, scope: !13467)
!13524 = !DILocation(line: 259, column: 26, scope: !13525)
!13525 = distinct !DILexicalBlock(scope: !13526, file: !1753, line: 258, column: 15)
!13526 = distinct !DILexicalBlock(scope: !13467, file: !1753, line: 258, column: 15)
!13527 = !DILocation(line: 259, column: 25, scope: !13525)
!13528 = !DILocation(line: 259, column: 17, scope: !13525)
!13529 = !DILocation(line: 262, column: 27, scope: !13530)
!13530 = distinct !DILexicalBlock(scope: !13525, file: !1753, line: 260, column: 19)
!13531 = !DILocation(line: 263, column: 21, scope: !13530)
!13532 = !DILocation(line: 265, column: 27, scope: !13530)
!13533 = !DILocation(line: 266, column: 21, scope: !13530)
!13534 = !DILocation(line: 268, column: 27, scope: !13530)
!13535 = !DILocation(line: 269, column: 21, scope: !13530)
!13536 = !DILocation(line: 271, column: 26, scope: !13530)
!13537 = !DILocation(line: 272, column: 21, scope: !13530)
!13538 = !DILocation(line: 275, column: 27, scope: !13530)
!13539 = !DILocation(line: 276, column: 21, scope: !13530)
!13540 = !DILocation(line: 279, column: 27, scope: !13530)
!13541 = !DILocation(line: 280, column: 21, scope: !13530)
!13542 = !DILocation(line: 282, column: 21, scope: !13530)
!13543 = !DILocation(line: 283, column: 19, scope: !13530)
!13544 = !DILocation(line: 258, column: 24, scope: !13525)
!13545 = !DILocation(line: 258, column: 15, scope: !13525)
!13546 = distinct !{!13546, !13547, !13548}
!13547 = !DILocation(line: 258, column: 15, scope: !13526)
!13548 = !DILocation(line: 283, column: 19, scope: !13526)
!13549 = !DILabel(scope: !13467, name: "no_more_values", file: !1753, line: 284)
!13550 = !DILocation(line: 284, column: 13, scope: !13467)
!13551 = !DILocation(line: 285, column: 13, scope: !13467)
!13552 = !DILocation(line: 287, column: 21, scope: !13450)
!13553 = !DILocation(line: 287, column: 28, scope: !13450)
!13554 = !DILocation(line: 287, column: 18, scope: !13450)
!13555 = !DILocation(line: 288, column: 24, scope: !13450)
!13556 = !DILocation(line: 288, column: 11, scope: !13450)
!13557 = !DILocation(line: 288, column: 19, scope: !13450)
!13558 = !DILocation(line: 288, column: 22, scope: !13450)
!13559 = !{!13560, !2634, i64 0}
!13560 = !{!"mode_change", !2634, i64 0, !2634, i64 1, !2633, i64 4, !2633, i64 8, !2633, i64 12}
!13561 = !DILocation(line: 289, column: 26, scope: !13450)
!13562 = !DILocation(line: 289, column: 11, scope: !13450)
!13563 = !DILocation(line: 289, column: 19, scope: !13450)
!13564 = !DILocation(line: 289, column: 24, scope: !13450)
!13565 = !{!13560, !2634, i64 1}
!13566 = !DILocation(line: 290, column: 30, scope: !13450)
!13567 = !DILocation(line: 290, column: 11, scope: !13450)
!13568 = !DILocation(line: 290, column: 19, scope: !13450)
!13569 = !DILocation(line: 290, column: 28, scope: !13450)
!13570 = !{!13560, !2633, i64 4}
!13571 = !DILocation(line: 291, column: 27, scope: !13450)
!13572 = !DILocation(line: 291, column: 11, scope: !13450)
!13573 = !DILocation(line: 291, column: 19, scope: !13450)
!13574 = !DILocation(line: 291, column: 25, scope: !13450)
!13575 = !{!13560, !2633, i64 8}
!13576 = !DILocation(line: 293, column: 14, scope: !13450)
!13577 = !DILocation(line: 293, column: 26, scope: !13450)
!13578 = !DILocation(line: 293, column: 38, scope: !13450)
!13579 = !DILocation(line: 293, column: 49, scope: !13450)
!13580 = !DILocation(line: 293, column: 60, scope: !13450)
!13581 = !DILocation(line: 293, column: 58, scope: !13450)
!13582 = !DILocation(line: 293, column: 68, scope: !13450)
!13583 = !DILocation(line: 292, column: 11, scope: !13450)
!13584 = !DILocation(line: 292, column: 19, scope: !13450)
!13585 = !DILocation(line: 292, column: 29, scope: !13450)
!13586 = !{!13560, !2633, i64 12}
!13587 = !DILocation(line: 294, column: 9, scope: !13450)
!13588 = !DILocation(line: 295, column: 15, scope: !13420)
!13589 = !DILocation(line: 295, column: 14, scope: !13420)
!13590 = !DILocation(line: 295, column: 17, scope: !13420)
!13591 = !DILocation(line: 295, column: 24, scope: !13420)
!13592 = !DILocation(line: 295, column: 28, scope: !13420)
!13593 = !DILocation(line: 295, column: 27, scope: !13420)
!13594 = !DILocation(line: 295, column: 30, scope: !13420)
!13595 = !DILocation(line: 295, column: 37, scope: !13420)
!13596 = !DILocation(line: 295, column: 41, scope: !13420)
!13597 = !DILocation(line: 295, column: 40, scope: !13420)
!13598 = !DILocation(line: 295, column: 43, scope: !13420)
!13599 = distinct !{!13599, !13448, !13600}
!13600 = !DILocation(line: 295, column: 49, scope: !13420)
!13601 = !DILocation(line: 297, column: 12, scope: !13602)
!13602 = distinct !DILexicalBlock(scope: !13420, file: !1753, line: 297, column: 11)
!13603 = !DILocation(line: 297, column: 11, scope: !13602)
!13604 = !DILocation(line: 297, column: 14, scope: !13602)
!13605 = !DILocation(line: 297, column: 11, scope: !13420)
!13606 = !DILocation(line: 298, column: 9, scope: !13602)
!13607 = !DILocation(line: 299, column: 5, scope: !13420)
!13608 = !DILocation(line: 176, column: 28, scope: !13421)
!13609 = !DILocation(line: 176, column: 3, scope: !13421)
!13610 = distinct !{!13610, !13611, !13612}
!13611 = !DILocation(line: 176, column: 3, scope: !13416)
!13612 = !DILocation(line: 299, column: 5, scope: !13416)
!13613 = !DILocation(line: 301, column: 8, scope: !13614)
!13614 = distinct !DILexicalBlock(scope: !13310, file: !1753, line: 301, column: 7)
!13615 = !DILocation(line: 301, column: 7, scope: !13614)
!13616 = !DILocation(line: 301, column: 10, scope: !13614)
!13617 = !DILocation(line: 301, column: 7, scope: !13310)
!13618 = !DILocation(line: 303, column: 7, scope: !13619)
!13619 = distinct !DILexicalBlock(scope: !13614, file: !1753, line: 302, column: 5)
!13620 = !DILocation(line: 303, column: 10, scope: !13619)
!13621 = !DILocation(line: 303, column: 16, scope: !13619)
!13622 = !DILocation(line: 303, column: 21, scope: !13619)
!13623 = !DILocation(line: 304, column: 14, scope: !13619)
!13624 = !DILocation(line: 304, column: 7, scope: !13619)
!13625 = !DILocation(line: 301, column: 13, scope: !13614)
!13626 = !DILabel(scope: !13310, name: "invalid", file: !1753, line: 307)
!13627 = !DILocation(line: 307, column: 1, scope: !13310)
!13628 = !DILocation(line: 308, column: 9, scope: !13310)
!13629 = !DILocation(line: 308, column: 3, scope: !13310)
!13630 = !DILocation(line: 309, column: 3, scope: !13310)
!13631 = !DILocation(line: 310, column: 1, scope: !13310)
!13632 = distinct !DISubprogram(name: "octal_to_mode", scope: !1753, file: !1753, line: 54, type: !1765, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1746, retainedNodes: !209)
!13633 = !DILocalVariable(name: "octal", arg: 1, scope: !13632, file: !1753, line: 54, type: !70)
!13634 = !DILocation(line: 54, column: 29, scope: !13632)
!13635 = !DILocation(line: 62, column: 13, scope: !13632)
!13636 = !DILocation(line: 58, column: 3, scope: !13632)
!13637 = distinct !DISubprogram(name: "make_node_op_equals", scope: !1753, file: !1753, line: 112, type: !1767, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1746, retainedNodes: !209)
!13638 = !DILocalVariable(name: "new_mode", arg: 1, scope: !13637, file: !1753, line: 112, type: !139)
!13639 = !DILocation(line: 112, column: 29, scope: !13637)
!13640 = !DILocalVariable(name: "mentioned", arg: 2, scope: !13637, file: !1753, line: 112, type: !139)
!13641 = !DILocation(line: 112, column: 46, scope: !13637)
!13642 = !DILocalVariable(name: "p", scope: !13637, file: !1753, line: 114, type: !1751)
!13643 = !DILocation(line: 114, column: 23, scope: !13637)
!13644 = !DILocation(line: 114, column: 27, scope: !13637)
!13645 = !DILocation(line: 115, column: 3, scope: !13637)
!13646 = !DILocation(line: 115, column: 6, scope: !13637)
!13647 = !DILocation(line: 115, column: 9, scope: !13637)
!13648 = !DILocation(line: 116, column: 3, scope: !13637)
!13649 = !DILocation(line: 116, column: 6, scope: !13637)
!13650 = !DILocation(line: 116, column: 11, scope: !13637)
!13651 = !DILocation(line: 117, column: 3, scope: !13637)
!13652 = !DILocation(line: 117, column: 6, scope: !13637)
!13653 = !DILocation(line: 117, column: 15, scope: !13637)
!13654 = !DILocation(line: 118, column: 14, scope: !13637)
!13655 = !DILocation(line: 118, column: 3, scope: !13637)
!13656 = !DILocation(line: 118, column: 6, scope: !13637)
!13657 = !DILocation(line: 118, column: 12, scope: !13637)
!13658 = !DILocation(line: 119, column: 18, scope: !13637)
!13659 = !DILocation(line: 119, column: 3, scope: !13637)
!13660 = !DILocation(line: 119, column: 6, scope: !13637)
!13661 = !DILocation(line: 119, column: 16, scope: !13637)
!13662 = !DILocation(line: 120, column: 3, scope: !13637)
!13663 = !DILocation(line: 120, column: 8, scope: !13637)
!13664 = !DILocation(line: 120, column: 13, scope: !13637)
!13665 = !DILocation(line: 121, column: 10, scope: !13637)
!13666 = !DILocation(line: 121, column: 3, scope: !13637)
!13667 = distinct !DISubprogram(name: "mode_create_from_ref", scope: !1753, file: !1753, line: 316, type: !1749, scopeLine: 317, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1746, retainedNodes: !209)
!13668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !271, line: 46, size: 1152, elements: !13669)
!13669 = !{!13670, !13671, !13672, !13673, !13674, !13675, !13676, !13677, !13678, !13679, !13680, !13681, !13686, !13687, !13688}
!13670 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !13668, file: !271, line: 48, baseType: !274, size: 64)
!13671 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !13668, file: !271, line: 53, baseType: !276, size: 64, offset: 64)
!13672 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !13668, file: !271, line: 61, baseType: !278, size: 64, offset: 128)
!13673 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !13668, file: !271, line: 62, baseType: !140, size: 32, offset: 192)
!13674 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !13668, file: !271, line: 64, baseType: !128, size: 32, offset: 224)
!13675 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !13668, file: !271, line: 65, baseType: !130, size: 32, offset: 256)
!13676 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !13668, file: !271, line: 67, baseType: !7, size: 32, offset: 288)
!13677 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !13668, file: !271, line: 69, baseType: !274, size: 64, offset: 320)
!13678 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !13668, file: !271, line: 74, baseType: !29, size: 64, offset: 384)
!13679 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !13668, file: !271, line: 78, baseType: !286, size: 64, offset: 448)
!13680 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !13668, file: !271, line: 80, baseType: !288, size: 64, offset: 512)
!13681 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !13668, file: !271, line: 91, baseType: !13682, size: 128, offset: 576)
!13682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !291, line: 9, size: 128, elements: !13683)
!13683 = !{!13684, !13685}
!13684 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !13682, file: !291, line: 11, baseType: !294, size: 64)
!13685 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !13682, file: !291, line: 12, baseType: !296, size: 64, offset: 64)
!13686 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !13668, file: !271, line: 92, baseType: !13682, size: 128, offset: 704)
!13687 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !13668, file: !271, line: 93, baseType: !13682, size: 128, offset: 832)
!13688 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !13668, file: !271, line: 106, baseType: !300, size: 192, offset: 960)
!13689 = !DILocalVariable(name: "ref_file", arg: 1, scope: !13667, file: !1753, line: 316, type: !180)
!13690 = !DILocation(line: 316, column: 35, scope: !13667)
!13691 = !DILocalVariable(name: "ref_stats", scope: !13667, file: !1753, line: 318, type: !13668)
!13692 = !DILocation(line: 318, column: 15, scope: !13667)
!13693 = !DILocation(line: 320, column: 13, scope: !13694)
!13694 = distinct !DILexicalBlock(scope: !13667, file: !1753, line: 320, column: 7)
!13695 = !DILocation(line: 320, column: 7, scope: !13694)
!13696 = !DILocation(line: 320, column: 35, scope: !13694)
!13697 = !DILocation(line: 320, column: 7, scope: !13667)
!13698 = !DILocation(line: 321, column: 5, scope: !13694)
!13699 = !DILocation(line: 322, column: 41, scope: !13667)
!13700 = !DILocation(line: 322, column: 10, scope: !13667)
!13701 = !DILocation(line: 322, column: 3, scope: !13667)
!13702 = !DILocation(line: 323, column: 1, scope: !13667)
!13703 = distinct !DISubprogram(name: "mode_adjust", scope: !1753, file: !1753, line: 339, type: !1760, scopeLine: 341, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1746, retainedNodes: !209)
!13704 = !DILocalVariable(name: "oldmode", arg: 1, scope: !13703, file: !1753, line: 339, type: !139)
!13705 = !DILocation(line: 339, column: 21, scope: !13703)
!13706 = !DILocalVariable(name: "dir", arg: 2, scope: !13703, file: !1753, line: 339, type: !142)
!13707 = !DILocation(line: 339, column: 35, scope: !13703)
!13708 = !DILocalVariable(name: "umask_value", arg: 3, scope: !13703, file: !1753, line: 339, type: !139)
!13709 = !DILocation(line: 339, column: 47, scope: !13703)
!13710 = !DILocalVariable(name: "changes", arg: 4, scope: !13703, file: !1753, line: 340, type: !1762)
!13711 = !DILocation(line: 340, column: 40, scope: !13703)
!13712 = !DILocalVariable(name: "pmode_bits", arg: 5, scope: !13703, file: !1753, line: 340, type: !1764)
!13713 = !DILocation(line: 340, column: 57, scope: !13703)
!13714 = !DILocalVariable(name: "newmode", scope: !13703, file: !1753, line: 343, type: !139)
!13715 = !DILocation(line: 343, column: 10, scope: !13703)
!13716 = !DILocation(line: 343, column: 20, scope: !13703)
!13717 = !DILocation(line: 343, column: 28, scope: !13703)
!13718 = !DILocalVariable(name: "mode_bits", scope: !13703, file: !1753, line: 346, type: !139)
!13719 = !DILocation(line: 346, column: 10, scope: !13703)
!13720 = !DILocation(line: 348, column: 3, scope: !13703)
!13721 = !DILocation(line: 348, column: 10, scope: !13722)
!13722 = distinct !DILexicalBlock(scope: !13723, file: !1753, line: 348, column: 3)
!13723 = distinct !DILexicalBlock(scope: !13703, file: !1753, line: 348, column: 3)
!13724 = !DILocation(line: 348, column: 19, scope: !13722)
!13725 = !DILocation(line: 348, column: 24, scope: !13722)
!13726 = !DILocation(line: 348, column: 3, scope: !13723)
!13727 = !DILocalVariable(name: "affected", scope: !13728, file: !1753, line: 350, type: !139)
!13728 = distinct !DILexicalBlock(scope: !13722, file: !1753, line: 349, column: 5)
!13729 = !DILocation(line: 350, column: 14, scope: !13728)
!13730 = !DILocation(line: 350, column: 25, scope: !13728)
!13731 = !DILocation(line: 350, column: 34, scope: !13728)
!13732 = !DILocalVariable(name: "omit_change", scope: !13728, file: !1753, line: 351, type: !139)
!13733 = !DILocation(line: 351, column: 14, scope: !13728)
!13734 = !DILocation(line: 352, column: 10, scope: !13728)
!13735 = !DILocation(line: 352, column: 43, scope: !13728)
!13736 = !DILocation(line: 352, column: 52, scope: !13728)
!13737 = !DILocation(line: 352, column: 41, scope: !13728)
!13738 = !DILocation(line: 352, column: 39, scope: !13728)
!13739 = !DILocalVariable(name: "value", scope: !13728, file: !1753, line: 353, type: !139)
!13740 = !DILocation(line: 353, column: 14, scope: !13728)
!13741 = !DILocation(line: 353, column: 22, scope: !13728)
!13742 = !DILocation(line: 353, column: 31, scope: !13728)
!13743 = !DILocation(line: 355, column: 15, scope: !13728)
!13744 = !DILocation(line: 355, column: 24, scope: !13728)
!13745 = !DILocation(line: 355, column: 7, scope: !13728)
!13746 = !DILocation(line: 358, column: 11, scope: !13747)
!13747 = distinct !DILexicalBlock(scope: !13728, file: !1753, line: 356, column: 9)
!13748 = !DILocation(line: 362, column: 20, scope: !13747)
!13749 = !DILocation(line: 362, column: 17, scope: !13747)
!13750 = !DILocation(line: 365, column: 22, scope: !13747)
!13751 = !DILocation(line: 365, column: 28, scope: !13747)
!13752 = !DILocation(line: 367, column: 24, scope: !13747)
!13753 = !DILocation(line: 367, column: 30, scope: !13747)
!13754 = !DILocation(line: 367, column: 21, scope: !13747)
!13755 = !DILocation(line: 369, column: 24, scope: !13747)
!13756 = !DILocation(line: 369, column: 30, scope: !13747)
!13757 = !DILocation(line: 369, column: 21, scope: !13747)
!13758 = !DILocation(line: 365, column: 17, scope: !13747)
!13759 = !DILocation(line: 371, column: 11, scope: !13747)
!13760 = !DILocation(line: 376, column: 16, scope: !13761)
!13761 = distinct !DILexicalBlock(scope: !13747, file: !1753, line: 376, column: 15)
!13762 = !DILocation(line: 376, column: 24, scope: !13761)
!13763 = !DILocation(line: 376, column: 59, scope: !13761)
!13764 = !DILocation(line: 376, column: 57, scope: !13761)
!13765 = !DILocation(line: 376, column: 15, scope: !13747)
!13766 = !DILocation(line: 377, column: 19, scope: !13761)
!13767 = !DILocation(line: 377, column: 13, scope: !13761)
!13768 = !DILocation(line: 378, column: 11, scope: !13747)
!13769 = !DILocation(line: 384, column: 17, scope: !13728)
!13770 = !DILocation(line: 384, column: 28, scope: !13728)
!13771 = !DILocation(line: 384, column: 40, scope: !13728)
!13772 = !DILocation(line: 384, column: 39, scope: !13728)
!13773 = !DILocation(line: 384, column: 57, scope: !13728)
!13774 = !DILocation(line: 384, column: 55, scope: !13728)
!13775 = !DILocation(line: 384, column: 53, scope: !13728)
!13776 = !DILocation(line: 384, column: 13, scope: !13728)
!13777 = !DILocation(line: 386, column: 15, scope: !13728)
!13778 = !DILocation(line: 386, column: 24, scope: !13728)
!13779 = !DILocation(line: 386, column: 7, scope: !13728)
!13780 = !DILocalVariable(name: "preserved", scope: !13781, file: !1753, line: 393, type: !139)
!13781 = distinct !DILexicalBlock(scope: !13782, file: !1753, line: 392, column: 11)
!13782 = distinct !DILexicalBlock(scope: !13728, file: !1753, line: 387, column: 9)
!13783 = !DILocation(line: 393, column: 20, scope: !13781)
!13784 = !DILocation(line: 393, column: 33, scope: !13781)
!13785 = !DILocation(line: 393, column: 45, scope: !13781)
!13786 = !DILocation(line: 393, column: 44, scope: !13781)
!13787 = !DILocation(line: 393, column: 61, scope: !13781)
!13788 = !DILocation(line: 393, column: 59, scope: !13781)
!13789 = !DILocation(line: 394, column: 45, scope: !13781)
!13790 = !DILocation(line: 394, column: 44, scope: !13781)
!13791 = !DILocation(line: 394, column: 42, scope: !13781)
!13792 = !DILocation(line: 394, column: 23, scope: !13781)
!13793 = !DILocation(line: 395, column: 24, scope: !13781)
!13794 = !DILocation(line: 395, column: 34, scope: !13781)
!13795 = !DILocation(line: 395, column: 32, scope: !13781)
!13796 = !DILocation(line: 395, column: 47, scope: !13781)
!13797 = !DILocation(line: 395, column: 45, scope: !13781)
!13798 = !DILocation(line: 395, column: 21, scope: !13781)
!13799 = !DILocation(line: 396, column: 13, scope: !13781)
!13800 = !DILocation(line: 400, column: 24, scope: !13782)
!13801 = !DILocation(line: 400, column: 21, scope: !13782)
!13802 = !DILocation(line: 401, column: 22, scope: !13782)
!13803 = !DILocation(line: 401, column: 19, scope: !13782)
!13804 = !DILocation(line: 402, column: 11, scope: !13782)
!13805 = !DILocation(line: 405, column: 24, scope: !13782)
!13806 = !DILocation(line: 405, column: 21, scope: !13782)
!13807 = !DILocation(line: 406, column: 23, scope: !13782)
!13808 = !DILocation(line: 406, column: 22, scope: !13782)
!13809 = !DILocation(line: 406, column: 19, scope: !13782)
!13810 = !DILocation(line: 407, column: 11, scope: !13782)
!13811 = !DILocation(line: 409, column: 5, scope: !13728)
!13812 = !DILocation(line: 348, column: 45, scope: !13722)
!13813 = !DILocation(line: 348, column: 3, scope: !13722)
!13814 = distinct !{!13814, !13726, !13815}
!13815 = !DILocation(line: 409, column: 5, scope: !13723)
!13816 = !DILocation(line: 411, column: 7, scope: !13817)
!13817 = distinct !DILexicalBlock(scope: !13703, file: !1753, line: 411, column: 7)
!13818 = !DILocation(line: 411, column: 7, scope: !13703)
!13819 = !DILocation(line: 412, column: 19, scope: !13817)
!13820 = !DILocation(line: 412, column: 6, scope: !13817)
!13821 = !DILocation(line: 412, column: 17, scope: !13817)
!13822 = !DILocation(line: 412, column: 5, scope: !13817)
!13823 = !DILocation(line: 413, column: 10, scope: !13703)
!13824 = !DILocation(line: 413, column: 3, scope: !13703)
!13825 = distinct !DISubprogram(name: "opendirat", scope: !13826, file: !13826, line: 36, type: !1772, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1769, retainedNodes: !209)
!13826 = !DIFile(filename: "lib/opendirat.c", directory: "/home/mbarbar/software/coreutils-8.31")
!13827 = !DILocalVariable(name: "dir_fd", arg: 1, scope: !13825, file: !13826, line: 36, type: !7)
!13828 = !DILocation(line: 36, column: 16, scope: !13825)
!13829 = !DILocalVariable(name: "dir", arg: 2, scope: !13825, file: !13826, line: 36, type: !180)
!13830 = !DILocation(line: 36, column: 36, scope: !13825)
!13831 = !DILocalVariable(name: "extra_flags", arg: 3, scope: !13825, file: !13826, line: 36, type: !7)
!13832 = !DILocation(line: 36, column: 45, scope: !13825)
!13833 = !DILocalVariable(name: "pnew_fd", arg: 4, scope: !13825, file: !13826, line: 36, type: !193)
!13834 = !DILocation(line: 36, column: 63, scope: !13825)
!13835 = !DILocalVariable(name: "open_flags", scope: !13825, file: !13826, line: 38, type: !7)
!13836 = !DILocation(line: 38, column: 7, scope: !13825)
!13837 = !DILocation(line: 39, column: 36, scope: !13825)
!13838 = !DILocation(line: 39, column: 34, scope: !13825)
!13839 = !DILocalVariable(name: "new_fd", scope: !13825, file: !13826, line: 40, type: !7)
!13840 = !DILocation(line: 40, column: 7, scope: !13825)
!13841 = !DILocation(line: 40, column: 24, scope: !13825)
!13842 = !DILocation(line: 40, column: 32, scope: !13825)
!13843 = !DILocation(line: 40, column: 37, scope: !13825)
!13844 = !DILocation(line: 40, column: 16, scope: !13825)
!13845 = !DILocation(line: 42, column: 7, scope: !13846)
!13846 = distinct !DILexicalBlock(scope: !13825, file: !13826, line: 42, column: 7)
!13847 = !DILocation(line: 42, column: 14, scope: !13846)
!13848 = !DILocation(line: 42, column: 7, scope: !13825)
!13849 = !DILocation(line: 43, column: 5, scope: !13846)
!13850 = !DILocalVariable(name: "dirp", scope: !13825, file: !13826, line: 44, type: !693)
!13851 = !DILocation(line: 44, column: 8, scope: !13825)
!13852 = !DILocation(line: 44, column: 26, scope: !13825)
!13853 = !DILocation(line: 44, column: 15, scope: !13825)
!13854 = !DILocation(line: 45, column: 7, scope: !13855)
!13855 = distinct !DILexicalBlock(scope: !13825, file: !13826, line: 45, column: 7)
!13856 = !DILocation(line: 45, column: 7, scope: !13825)
!13857 = !DILocation(line: 46, column: 16, scope: !13855)
!13858 = !DILocation(line: 46, column: 6, scope: !13855)
!13859 = !DILocation(line: 46, column: 14, scope: !13855)
!13860 = !DILocation(line: 46, column: 5, scope: !13855)
!13861 = !DILocalVariable(name: "fdopendir_errno", scope: !13862, file: !13826, line: 49, type: !7)
!13862 = distinct !DILexicalBlock(scope: !13855, file: !13826, line: 48, column: 5)
!13863 = !DILocation(line: 49, column: 11, scope: !13862)
!13864 = !DILocation(line: 49, column: 29, scope: !13862)
!13865 = !DILocation(line: 50, column: 14, scope: !13862)
!13866 = !DILocation(line: 50, column: 7, scope: !13862)
!13867 = !DILocation(line: 51, column: 15, scope: !13862)
!13868 = !DILocation(line: 51, column: 7, scope: !13862)
!13869 = !DILocation(line: 51, column: 13, scope: !13862)
!13870 = !DILocation(line: 53, column: 10, scope: !13825)
!13871 = !DILocation(line: 53, column: 3, scope: !13825)
!13872 = !DILocation(line: 54, column: 1, scope: !13825)
!13873 = distinct !DISubprogram(name: "set_program_name", scope: !1006, file: !1006, line: 39, type: !202, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !968, retainedNodes: !209)
!13874 = !DILocalVariable(name: "argv0", arg: 1, scope: !13873, file: !1006, line: 39, type: !180)
!13875 = !DILocation(line: 39, column: 31, scope: !13873)
!13876 = !DILocalVariable(name: "slash", scope: !13873, file: !1006, line: 46, type: !180)
!13877 = !DILocation(line: 46, column: 15, scope: !13873)
!13878 = !DILocalVariable(name: "base", scope: !13873, file: !1006, line: 47, type: !180)
!13879 = !DILocation(line: 47, column: 15, scope: !13873)
!13880 = !DILocation(line: 51, column: 7, scope: !13881)
!13881 = distinct !DILexicalBlock(scope: !13873, file: !1006, line: 51, column: 7)
!13882 = !DILocation(line: 51, column: 13, scope: !13881)
!13883 = !DILocation(line: 51, column: 7, scope: !13873)
!13884 = !DILocation(line: 55, column: 14, scope: !13885)
!13885 = distinct !DILexicalBlock(scope: !13881, file: !1006, line: 52, column: 5)
!13886 = !DILocation(line: 54, column: 7, scope: !13885)
!13887 = !DILocation(line: 56, column: 7, scope: !13885)
!13888 = !DILocation(line: 59, column: 20, scope: !13873)
!13889 = !DILocation(line: 59, column: 11, scope: !13873)
!13890 = !DILocation(line: 59, column: 9, scope: !13873)
!13891 = !DILocation(line: 60, column: 11, scope: !13873)
!13892 = !DILocation(line: 60, column: 17, scope: !13873)
!13893 = !DILocation(line: 60, column: 27, scope: !13873)
!13894 = !DILocation(line: 60, column: 33, scope: !13873)
!13895 = !DILocation(line: 60, column: 39, scope: !13873)
!13896 = !DILocation(line: 60, column: 8, scope: !13873)
!13897 = !DILocation(line: 61, column: 7, scope: !13898)
!13898 = distinct !DILexicalBlock(scope: !13873, file: !1006, line: 61, column: 7)
!13899 = !DILocation(line: 61, column: 14, scope: !13898)
!13900 = !DILocation(line: 61, column: 12, scope: !13898)
!13901 = !DILocation(line: 61, column: 20, scope: !13898)
!13902 = !DILocation(line: 61, column: 25, scope: !13898)
!13903 = !DILocation(line: 61, column: 37, scope: !13898)
!13904 = !DILocation(line: 61, column: 42, scope: !13898)
!13905 = !DILocation(line: 61, column: 28, scope: !13898)
!13906 = !DILocation(line: 61, column: 61, scope: !13898)
!13907 = !DILocation(line: 61, column: 7, scope: !13873)
!13908 = !DILocation(line: 63, column: 15, scope: !13909)
!13909 = distinct !DILexicalBlock(scope: !13898, file: !1006, line: 62, column: 5)
!13910 = !DILocation(line: 63, column: 13, scope: !13909)
!13911 = !DILocation(line: 64, column: 20, scope: !13912)
!13912 = distinct !DILexicalBlock(scope: !13909, file: !1006, line: 64, column: 11)
!13913 = !DILocation(line: 64, column: 11, scope: !13912)
!13914 = !DILocation(line: 64, column: 36, scope: !13912)
!13915 = !DILocation(line: 64, column: 11, scope: !13909)
!13916 = !DILocation(line: 66, column: 19, scope: !13917)
!13917 = distinct !DILexicalBlock(scope: !13912, file: !1006, line: 65, column: 9)
!13918 = !DILocation(line: 66, column: 24, scope: !13917)
!13919 = !DILocation(line: 66, column: 17, scope: !13917)
!13920 = !DILocation(line: 70, column: 52, scope: !13917)
!13921 = !DILocation(line: 70, column: 41, scope: !13917)
!13922 = !DILocation(line: 72, column: 9, scope: !13917)
!13923 = !DILocation(line: 73, column: 5, scope: !13909)
!13924 = !DILocation(line: 84, column: 18, scope: !13873)
!13925 = !DILocation(line: 84, column: 16, scope: !13873)
!13926 = !DILocation(line: 90, column: 38, scope: !13873)
!13927 = !DILocation(line: 90, column: 27, scope: !13873)
!13928 = !DILocation(line: 92, column: 1, scope: !13873)
!13929 = distinct !DISubprogram(name: "qcopy_acl", scope: !13930, file: !13930, line: 39, type: !1514, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1774, retainedNodes: !209)
!13930 = !DIFile(filename: "lib/qcopy-acl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!13931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !2247, line: 260, size: 256, elements: !13932)
!13932 = !{!13933, !13934, !13935, !13936}
!13933 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !13931, file: !2247, line: 261, baseType: !139, size: 32)
!13934 = !DIDerivedType(tag: DW_TAG_member, name: "acl", scope: !13931, file: !2247, line: 264, baseType: !2235, size: 64, offset: 64)
!13935 = !DIDerivedType(tag: DW_TAG_member, name: "default_acl", scope: !13931, file: !2247, line: 266, baseType: !2235, size: 64, offset: 128)
!13936 = !DIDerivedType(tag: DW_TAG_member, name: "acls_not_supported", scope: !13931, file: !2247, line: 268, baseType: !142, size: 8, offset: 192)
!13937 = !DILocalVariable(name: "src_name", arg: 1, scope: !13929, file: !13930, line: 39, type: !180)
!13938 = !DILocation(line: 39, column: 24, scope: !13929)
!13939 = !DILocalVariable(name: "source_desc", arg: 2, scope: !13929, file: !13930, line: 39, type: !7)
!13940 = !DILocation(line: 39, column: 38, scope: !13929)
!13941 = !DILocalVariable(name: "dst_name", arg: 3, scope: !13929, file: !13930, line: 39, type: !180)
!13942 = !DILocation(line: 39, column: 63, scope: !13929)
!13943 = !DILocalVariable(name: "dest_desc", arg: 4, scope: !13929, file: !13930, line: 40, type: !7)
!13944 = !DILocation(line: 40, column: 16, scope: !13929)
!13945 = !DILocalVariable(name: "mode", arg: 5, scope: !13929, file: !13930, line: 40, type: !139)
!13946 = !DILocation(line: 40, column: 34, scope: !13929)
!13947 = !DILocalVariable(name: "ctx", scope: !13929, file: !13930, line: 42, type: !13931)
!13948 = !DILocation(line: 42, column: 29, scope: !13929)
!13949 = !DILocalVariable(name: "ret", scope: !13929, file: !13930, line: 43, type: !7)
!13950 = !DILocation(line: 43, column: 7, scope: !13929)
!13951 = !DILocation(line: 45, column: 26, scope: !13929)
!13952 = !DILocation(line: 45, column: 36, scope: !13929)
!13953 = !DILocation(line: 45, column: 49, scope: !13929)
!13954 = !DILocation(line: 45, column: 9, scope: !13929)
!13955 = !DILocation(line: 45, column: 7, scope: !13929)
!13956 = !DILocation(line: 46, column: 7, scope: !13957)
!13957 = distinct !DILexicalBlock(scope: !13929, file: !13930, line: 46, column: 7)
!13958 = !DILocation(line: 46, column: 11, scope: !13957)
!13959 = !DILocation(line: 46, column: 7, scope: !13929)
!13960 = !DILocation(line: 47, column: 5, scope: !13957)
!13961 = !DILocation(line: 48, column: 32, scope: !13929)
!13962 = !DILocation(line: 48, column: 42, scope: !13929)
!13963 = !DILocation(line: 48, column: 9, scope: !13929)
!13964 = !DILocation(line: 48, column: 7, scope: !13929)
!13965 = !DILocation(line: 49, column: 3, scope: !13929)
!13966 = !DILocation(line: 50, column: 10, scope: !13929)
!13967 = !DILocation(line: 50, column: 3, scope: !13929)
!13968 = !DILocation(line: 51, column: 1, scope: !13929)
!13969 = distinct !DISubprogram(name: "qset_acl", scope: !13970, file: !13970, line: 39, type: !1519, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1776, retainedNodes: !209)
!13970 = !DIFile(filename: "lib/qset-acl.c", directory: "/home/mbarbar/software/coreutils-8.31")
!13971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "permission_context", file: !2247, line: 260, size: 256, elements: !13972)
!13972 = !{!13973, !13974, !13975, !13976}
!13973 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !13971, file: !2247, line: 261, baseType: !139, size: 32)
!13974 = !DIDerivedType(tag: DW_TAG_member, name: "acl", scope: !13971, file: !2247, line: 264, baseType: !2235, size: 64, offset: 64)
!13975 = !DIDerivedType(tag: DW_TAG_member, name: "default_acl", scope: !13971, file: !2247, line: 266, baseType: !2235, size: 64, offset: 128)
!13976 = !DIDerivedType(tag: DW_TAG_member, name: "acls_not_supported", scope: !13971, file: !2247, line: 268, baseType: !142, size: 8, offset: 192)
!13977 = !DILocalVariable(name: "name", arg: 1, scope: !13969, file: !13970, line: 39, type: !180)
!13978 = !DILocation(line: 39, column: 23, scope: !13969)
!13979 = !DILocalVariable(name: "desc", arg: 2, scope: !13969, file: !13970, line: 39, type: !7)
!13980 = !DILocation(line: 39, column: 33, scope: !13969)
!13981 = !DILocalVariable(name: "mode", arg: 3, scope: !13969, file: !13970, line: 39, type: !139)
!13982 = !DILocation(line: 39, column: 46, scope: !13969)
!13983 = !DILocalVariable(name: "ctx", scope: !13969, file: !13970, line: 41, type: !13971)
!13984 = !DILocation(line: 41, column: 29, scope: !13969)
!13985 = !DILocalVariable(name: "ret", scope: !13969, file: !13970, line: 42, type: !7)
!13986 = !DILocation(line: 42, column: 7, scope: !13969)
!13987 = !DILocation(line: 44, column: 3, scope: !13969)
!13988 = !DILocation(line: 45, column: 14, scope: !13969)
!13989 = !DILocation(line: 45, column: 7, scope: !13969)
!13990 = !DILocation(line: 45, column: 12, scope: !13969)
!13991 = !{!13992, !2633, i64 0}
!13992 = !{!"permission_context", !2633, i64 0, !2646, i64 8, !2646, i64 16, !2740, i64 24}
!13993 = !DILocation(line: 46, column: 32, scope: !13969)
!13994 = !DILocation(line: 46, column: 38, scope: !13969)
!13995 = !DILocation(line: 46, column: 9, scope: !13969)
!13996 = !DILocation(line: 46, column: 7, scope: !13969)
!13997 = !DILocation(line: 47, column: 3, scope: !13969)
!13998 = !DILocation(line: 48, column: 10, scope: !13969)
!13999 = !DILocation(line: 48, column: 3, scope: !13969)
!14000 = distinct !DISubprogram(name: "clone_quoting_options", scope: !1038, file: !1038, line: 122, type: !1034, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !209)
!14001 = !DILocalVariable(name: "o", arg: 1, scope: !14000, file: !1038, line: 122, type: !1036)
!14002 = !DILocation(line: 122, column: 48, scope: !14000)
!14003 = !DILocalVariable(name: "e", scope: !14000, file: !1038, line: 124, type: !7)
!14004 = !DILocation(line: 124, column: 7, scope: !14000)
!14005 = !DILocation(line: 124, column: 11, scope: !14000)
!14006 = !DILocalVariable(name: "p", scope: !14000, file: !1038, line: 125, type: !1036)
!14007 = !DILocation(line: 125, column: 27, scope: !14000)
!14008 = !DILocation(line: 125, column: 40, scope: !14000)
!14009 = !DILocation(line: 125, column: 44, scope: !14000)
!14010 = !DILocation(line: 125, column: 31, scope: !14000)
!14011 = !DILocation(line: 127, column: 11, scope: !14000)
!14012 = !DILocation(line: 127, column: 3, scope: !14000)
!14013 = !DILocation(line: 127, column: 9, scope: !14000)
!14014 = !DILocation(line: 128, column: 10, scope: !14000)
!14015 = !DILocation(line: 128, column: 3, scope: !14000)
!14016 = distinct !DISubprogram(name: "get_quoting_style", scope: !1038, file: !1038, line: 133, type: !1046, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !209)
!14017 = !DILocalVariable(name: "o", arg: 1, scope: !14016, file: !1038, line: 133, type: !1048)
!14018 = !DILocation(line: 133, column: 50, scope: !14016)
!14019 = !DILocation(line: 135, column: 11, scope: !14016)
!14020 = !DILocation(line: 135, column: 15, scope: !14016)
!14021 = !DILocation(line: 135, column: 46, scope: !14016)
!14022 = !{!14023, !2634, i64 0}
!14023 = !{!"quoting_options", !2634, i64 0, !2633, i64 4, !2634, i64 8, !2646, i64 40, !2646, i64 48}
!14024 = !DILocation(line: 135, column: 3, scope: !14016)
!14025 = distinct !DISubprogram(name: "set_quoting_style", scope: !1038, file: !1038, line: 141, type: !1050, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !209)
!14026 = !DILocalVariable(name: "o", arg: 1, scope: !14025, file: !1038, line: 141, type: !1036)
!14027 = !DILocation(line: 141, column: 44, scope: !14025)
!14028 = !DILocalVariable(name: "s", arg: 2, scope: !14025, file: !1038, line: 141, type: !1012)
!14029 = !DILocation(line: 141, column: 66, scope: !14025)
!14030 = !DILocation(line: 143, column: 47, scope: !14025)
!14031 = !DILocation(line: 143, column: 4, scope: !14025)
!14032 = !DILocation(line: 143, column: 8, scope: !14025)
!14033 = !DILocation(line: 143, column: 39, scope: !14025)
!14034 = !DILocation(line: 143, column: 45, scope: !14025)
!14035 = !DILocation(line: 144, column: 1, scope: !14025)
!14036 = distinct !DISubprogram(name: "set_char_quoting", scope: !1038, file: !1038, line: 152, type: !1052, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !209)
!14037 = !DILocalVariable(name: "o", arg: 1, scope: !14036, file: !1038, line: 152, type: !1036)
!14038 = !DILocation(line: 152, column: 43, scope: !14036)
!14039 = !DILocalVariable(name: "c", arg: 2, scope: !14036, file: !1038, line: 152, type: !10)
!14040 = !DILocation(line: 152, column: 51, scope: !14036)
!14041 = !DILocalVariable(name: "i", arg: 3, scope: !14036, file: !1038, line: 152, type: !7)
!14042 = !DILocation(line: 152, column: 58, scope: !14036)
!14043 = !DILocalVariable(name: "uc", scope: !14036, file: !1038, line: 154, type: !554)
!14044 = !DILocation(line: 154, column: 17, scope: !14036)
!14045 = !DILocation(line: 154, column: 22, scope: !14036)
!14046 = !DILocalVariable(name: "p", scope: !14036, file: !1038, line: 155, type: !1054)
!14047 = !DILocation(line: 155, column: 17, scope: !14036)
!14048 = !DILocation(line: 156, column: 6, scope: !14036)
!14049 = !DILocation(line: 156, column: 10, scope: !14036)
!14050 = !DILocation(line: 156, column: 41, scope: !14036)
!14051 = !DILocation(line: 156, column: 5, scope: !14036)
!14052 = !DILocation(line: 156, column: 59, scope: !14036)
!14053 = !DILocation(line: 156, column: 62, scope: !14036)
!14054 = !DILocation(line: 156, column: 57, scope: !14036)
!14055 = !DILocalVariable(name: "shift", scope: !14036, file: !1038, line: 157, type: !7)
!14056 = !DILocation(line: 157, column: 7, scope: !14036)
!14057 = !DILocation(line: 157, column: 15, scope: !14036)
!14058 = !DILocation(line: 157, column: 18, scope: !14036)
!14059 = !DILocalVariable(name: "r", scope: !14036, file: !1038, line: 158, type: !7)
!14060 = !DILocation(line: 158, column: 7, scope: !14036)
!14061 = !DILocation(line: 158, column: 13, scope: !14036)
!14062 = !DILocation(line: 158, column: 12, scope: !14036)
!14063 = !DILocation(line: 158, column: 18, scope: !14036)
!14064 = !DILocation(line: 158, column: 15, scope: !14036)
!14065 = !DILocation(line: 158, column: 25, scope: !14036)
!14066 = !DILocation(line: 159, column: 11, scope: !14036)
!14067 = !DILocation(line: 159, column: 13, scope: !14036)
!14068 = !DILocation(line: 159, column: 20, scope: !14036)
!14069 = !DILocation(line: 159, column: 18, scope: !14036)
!14070 = !DILocation(line: 159, column: 26, scope: !14036)
!14071 = !DILocation(line: 159, column: 23, scope: !14036)
!14072 = !DILocation(line: 159, column: 4, scope: !14036)
!14073 = !DILocation(line: 159, column: 6, scope: !14036)
!14074 = !DILocation(line: 160, column: 10, scope: !14036)
!14075 = !DILocation(line: 160, column: 3, scope: !14036)
!14076 = distinct !DISubprogram(name: "set_quoting_flags", scope: !1038, file: !1038, line: 168, type: !1055, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !209)
!14077 = !DILocalVariable(name: "o", arg: 1, scope: !14076, file: !1038, line: 168, type: !1036)
!14078 = !DILocation(line: 168, column: 44, scope: !14076)
!14079 = !DILocalVariable(name: "i", arg: 2, scope: !14076, file: !1038, line: 168, type: !7)
!14080 = !DILocation(line: 168, column: 51, scope: !14076)
!14081 = !DILocalVariable(name: "r", scope: !14076, file: !1038, line: 170, type: !7)
!14082 = !DILocation(line: 170, column: 7, scope: !14076)
!14083 = !DILocation(line: 171, column: 8, scope: !14084)
!14084 = distinct !DILexicalBlock(scope: !14076, file: !1038, line: 171, column: 7)
!14085 = !DILocation(line: 171, column: 7, scope: !14076)
!14086 = !DILocation(line: 172, column: 7, scope: !14084)
!14087 = !DILocation(line: 172, column: 5, scope: !14084)
!14088 = !DILocation(line: 173, column: 7, scope: !14076)
!14089 = !DILocation(line: 173, column: 10, scope: !14076)
!14090 = !{!14023, !2633, i64 4}
!14091 = !DILocation(line: 173, column: 5, scope: !14076)
!14092 = !DILocation(line: 174, column: 14, scope: !14076)
!14093 = !DILocation(line: 174, column: 3, scope: !14076)
!14094 = !DILocation(line: 174, column: 6, scope: !14076)
!14095 = !DILocation(line: 174, column: 12, scope: !14076)
!14096 = !DILocation(line: 175, column: 10, scope: !14076)
!14097 = !DILocation(line: 175, column: 3, scope: !14076)
!14098 = distinct !DISubprogram(name: "set_custom_quoting", scope: !1038, file: !1038, line: 179, type: !1057, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !209)
!14099 = !DILocalVariable(name: "o", arg: 1, scope: !14098, file: !1038, line: 179, type: !1036)
!14100 = !DILocation(line: 179, column: 45, scope: !14098)
!14101 = !DILocalVariable(name: "left_quote", arg: 2, scope: !14098, file: !1038, line: 180, type: !180)
!14102 = !DILocation(line: 180, column: 33, scope: !14098)
!14103 = !DILocalVariable(name: "right_quote", arg: 3, scope: !14098, file: !1038, line: 180, type: !180)
!14104 = !DILocation(line: 180, column: 57, scope: !14098)
!14105 = !DILocation(line: 182, column: 8, scope: !14106)
!14106 = distinct !DILexicalBlock(scope: !14098, file: !1038, line: 182, column: 7)
!14107 = !DILocation(line: 182, column: 7, scope: !14098)
!14108 = !DILocation(line: 183, column: 7, scope: !14106)
!14109 = !DILocation(line: 183, column: 5, scope: !14106)
!14110 = !DILocation(line: 184, column: 3, scope: !14098)
!14111 = !DILocation(line: 184, column: 6, scope: !14098)
!14112 = !DILocation(line: 184, column: 12, scope: !14098)
!14113 = !DILocation(line: 185, column: 8, scope: !14114)
!14114 = distinct !DILexicalBlock(scope: !14098, file: !1038, line: 185, column: 7)
!14115 = !DILocation(line: 185, column: 19, scope: !14114)
!14116 = !DILocation(line: 185, column: 23, scope: !14114)
!14117 = !DILocation(line: 185, column: 7, scope: !14098)
!14118 = !DILocation(line: 186, column: 5, scope: !14114)
!14119 = !DILocation(line: 187, column: 19, scope: !14098)
!14120 = !DILocation(line: 187, column: 3, scope: !14098)
!14121 = !DILocation(line: 187, column: 6, scope: !14098)
!14122 = !DILocation(line: 187, column: 17, scope: !14098)
!14123 = !{!14023, !2646, i64 40}
!14124 = !DILocation(line: 188, column: 20, scope: !14098)
!14125 = !DILocation(line: 188, column: 3, scope: !14098)
!14126 = !DILocation(line: 188, column: 6, scope: !14098)
!14127 = !DILocation(line: 188, column: 18, scope: !14098)
!14128 = !{!14023, !2646, i64 48}
!14129 = !DILocation(line: 189, column: 1, scope: !14098)
!14130 = distinct !DISubprogram(name: "quotearg_buffer", scope: !1038, file: !1038, line: 784, type: !1059, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !209)
!14131 = !DILocalVariable(name: "buffer", arg: 1, scope: !14130, file: !1038, line: 784, type: !9)
!14132 = !DILocation(line: 784, column: 24, scope: !14130)
!14133 = !DILocalVariable(name: "buffersize", arg: 2, scope: !14130, file: !1038, line: 784, type: !55)
!14134 = !DILocation(line: 784, column: 39, scope: !14130)
!14135 = !DILocalVariable(name: "arg", arg: 3, scope: !14130, file: !1038, line: 785, type: !180)
!14136 = !DILocation(line: 785, column: 30, scope: !14130)
!14137 = !DILocalVariable(name: "argsize", arg: 4, scope: !14130, file: !1038, line: 785, type: !55)
!14138 = !DILocation(line: 785, column: 42, scope: !14130)
!14139 = !DILocalVariable(name: "o", arg: 5, scope: !14130, file: !1038, line: 786, type: !1048)
!14140 = !DILocation(line: 786, column: 48, scope: !14130)
!14141 = !DILocalVariable(name: "p", scope: !14130, file: !1038, line: 788, type: !1048)
!14142 = !DILocation(line: 788, column: 33, scope: !14130)
!14143 = !DILocation(line: 788, column: 37, scope: !14130)
!14144 = !DILocation(line: 788, column: 41, scope: !14130)
!14145 = !DILocalVariable(name: "e", scope: !14130, file: !1038, line: 789, type: !7)
!14146 = !DILocation(line: 789, column: 7, scope: !14130)
!14147 = !DILocation(line: 789, column: 11, scope: !14130)
!14148 = !DILocalVariable(name: "r", scope: !14130, file: !1038, line: 790, type: !55)
!14149 = !DILocation(line: 790, column: 10, scope: !14130)
!14150 = !DILocation(line: 790, column: 40, scope: !14130)
!14151 = !DILocation(line: 790, column: 48, scope: !14130)
!14152 = !DILocation(line: 790, column: 60, scope: !14130)
!14153 = !DILocation(line: 790, column: 65, scope: !14130)
!14154 = !DILocation(line: 791, column: 40, scope: !14130)
!14155 = !DILocation(line: 791, column: 43, scope: !14130)
!14156 = !DILocation(line: 791, column: 50, scope: !14130)
!14157 = !DILocation(line: 791, column: 53, scope: !14130)
!14158 = !DILocation(line: 791, column: 60, scope: !14130)
!14159 = !DILocation(line: 791, column: 63, scope: !14130)
!14160 = !DILocation(line: 792, column: 40, scope: !14130)
!14161 = !DILocation(line: 792, column: 43, scope: !14130)
!14162 = !DILocation(line: 792, column: 55, scope: !14130)
!14163 = !DILocation(line: 792, column: 58, scope: !14130)
!14164 = !DILocation(line: 790, column: 14, scope: !14130)
!14165 = !DILocation(line: 793, column: 11, scope: !14130)
!14166 = !DILocation(line: 793, column: 3, scope: !14130)
!14167 = !DILocation(line: 793, column: 9, scope: !14130)
!14168 = !DILocation(line: 794, column: 10, scope: !14130)
!14169 = !DILocation(line: 794, column: 3, scope: !14130)
!14170 = distinct !DISubprogram(name: "quotearg_buffer_restyled", scope: !1038, file: !1038, line: 256, type: !1104, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1009, retainedNodes: !209)
!14171 = !DILocalVariable(name: "buffer", arg: 1, scope: !14170, file: !1038, line: 256, type: !9)
!14172 = !DILocation(line: 256, column: 33, scope: !14170)
!14173 = !DILocalVariable(name: "buffersize", arg: 2, scope: !14170, file: !1038, line: 256, type: !55)
!14174 = !DILocation(line: 256, column: 48, scope: !14170)
!14175 = !DILocalVariable(name: "arg", arg: 3, scope: !14170, file: !1038, line: 257, type: !180)
!14176 = !DILocation(line: 257, column: 39, scope: !14170)
!14177 = !DILocalVariable(name: "argsize", arg: 4, scope: !14170, file: !1038, line: 257, type: !55)
!14178 = !DILocation(line: 257, column: 51, scope: !14170)
!14179 = !DILocalVariable(name: "quoting_style", arg: 5, scope: !14170, file: !1038, line: 258, type: !1012)
!14180 = !DILocation(line: 258, column: 46, scope: !14170)
!14181 = !DILocalVariable(name: "flags", arg: 6, scope: !14170, file: !1038, line: 258, type: !7)
!14182 = !DILocation(line: 258, column: 65, scope: !14170)
!14183 = !DILocalVariable(name: "quote_these_too", arg: 7, scope: !14170, file: !1038, line: 259, type: !1106)
!14184 = !DILocation(line: 259, column: 47, scope: !14170)
!14185 = !DILocalVariable(name: "left_quote", arg: 8, scope: !14170, file: !1038, line: 260, type: !180)
!14186 = !DILocation(line: 260, column: 39, scope: !14170)
!14187 = !DILocalVariable(name: "right_quote", arg: 9, scope: !14170, file: !1038, line: 261, type: !180)
!14188 = !DILocation(line: 261, column: 39, scope: !14170)
!14189 = !DILocalVariable(name: "i", scope: !14170, file: !1038, line: 263, type: !55)
!14190 = !DILocation(line: 263, column: 10, scope: !14170)
!14191 = !DILocalVariable(name: "len", scope: !14170, file: !1038, line: 264, type: !55)
!14192 = !DILocation(line: 264, column: 10, scope: !14170)
!14193 = !DILocalVariable(name: "orig_buffersize", scope: !14170, file: !1038, line: 265, type: !55)
!14194 = !DILocation(line: 265, column: 10, scope: !14170)
!14195 = !DILocalVariable(name: "quote_string", scope: !14170, file: !1038, line: 266, type: !180)
!14196 = !DILocation(line: 266, column: 15, scope: !14170)
!14197 = !DILocalVariable(name: "quote_string_len", scope: !14170, file: !1038, line: 267, type: !55)
!14198 = !DILocation(line: 267, column: 10, scope: !14170)
!14199 = !DILocalVariable(name: "backslash_escapes", scope: !14170, file: !1038, line: 268, type: !142)
!14200 = !DILocation(line: 268, column: 8, scope: !14170)
!14201 = !DILocalVariable(name: "unibyte_locale", scope: !14170, file: !1038, line: 269, type: !142)
!14202 = !DILocation(line: 269, column: 8, scope: !14170)
!14203 = !DILocation(line: 269, column: 25, scope: !14170)
!14204 = !DILocation(line: 269, column: 36, scope: !14170)
!14205 = !DILocalVariable(name: "elide_outer_quotes", scope: !14170, file: !1038, line: 270, type: !142)
!14206 = !DILocation(line: 270, column: 8, scope: !14170)
!14207 = !DILocation(line: 270, column: 30, scope: !14170)
!14208 = !DILocation(line: 270, column: 36, scope: !14170)
!14209 = !DILocation(line: 270, column: 61, scope: !14170)
!14210 = !DILocalVariable(name: "pending_shell_escape_end", scope: !14170, file: !1038, line: 271, type: !142)
!14211 = !DILocation(line: 271, column: 8, scope: !14170)
!14212 = !DILocalVariable(name: "encountered_single_quote", scope: !14170, file: !1038, line: 272, type: !142)
!14213 = !DILocation(line: 272, column: 8, scope: !14170)
!14214 = !DILocalVariable(name: "all_c_and_shell_quote_compat", scope: !14170, file: !1038, line: 273, type: !142)
!14215 = !DILocation(line: 273, column: 8, scope: !14170)
!14216 = !DILocation(line: 273, column: 3, scope: !14170)
!14217 = !DILabel(scope: !14170, name: "process_input", file: !1038, line: 314)
!14218 = !DILocation(line: 314, column: 2, scope: !14170)
!14219 = !DILocation(line: 316, column: 11, scope: !14170)
!14220 = !DILocation(line: 316, column: 3, scope: !14170)
!14221 = !DILocation(line: 319, column: 21, scope: !14222)
!14222 = distinct !DILexicalBlock(scope: !14170, file: !1038, line: 317, column: 5)
!14223 = !DILocation(line: 320, column: 26, scope: !14222)
!14224 = !DILocation(line: 321, column: 7, scope: !14222)
!14225 = !DILocation(line: 323, column: 12, scope: !14226)
!14226 = distinct !DILexicalBlock(scope: !14222, file: !1038, line: 323, column: 11)
!14227 = !DILocation(line: 323, column: 11, scope: !14222)
!14228 = !DILocation(line: 324, column: 9, scope: !14226)
!14229 = !DILocation(line: 324, column: 9, scope: !14230)
!14230 = distinct !DILexicalBlock(scope: !14231, file: !1038, line: 324, column: 9)
!14231 = distinct !DILexicalBlock(scope: !14226, file: !1038, line: 324, column: 9)
!14232 = !DILocation(line: 324, column: 9, scope: !14231)
!14233 = !DILocation(line: 325, column: 25, scope: !14222)
!14234 = !DILocation(line: 326, column: 20, scope: !14222)
!14235 = !DILocation(line: 327, column: 24, scope: !14222)
!14236 = !DILocation(line: 328, column: 7, scope: !14222)
!14237 = !DILocation(line: 331, column: 25, scope: !14222)
!14238 = !DILocation(line: 332, column: 26, scope: !14222)
!14239 = !DILocation(line: 333, column: 7, scope: !14222)
!14240 = !DILocation(line: 339, column: 13, scope: !14241)
!14241 = distinct !DILexicalBlock(scope: !14242, file: !1038, line: 339, column: 13)
!14242 = distinct !DILexicalBlock(scope: !14222, file: !1038, line: 338, column: 7)
!14243 = !DILocation(line: 339, column: 27, scope: !14241)
!14244 = !DILocation(line: 339, column: 13, scope: !14242)
!14245 = !DILocation(line: 362, column: 50, scope: !14246)
!14246 = distinct !DILexicalBlock(scope: !14241, file: !1038, line: 340, column: 11)
!14247 = !DILocation(line: 362, column: 26, scope: !14246)
!14248 = !DILocation(line: 362, column: 24, scope: !14246)
!14249 = !DILocation(line: 363, column: 51, scope: !14246)
!14250 = !DILocation(line: 363, column: 27, scope: !14246)
!14251 = !DILocation(line: 363, column: 25, scope: !14246)
!14252 = !DILocation(line: 364, column: 11, scope: !14246)
!14253 = !DILocation(line: 365, column: 14, scope: !14254)
!14254 = distinct !DILexicalBlock(scope: !14242, file: !1038, line: 365, column: 13)
!14255 = !DILocation(line: 365, column: 13, scope: !14242)
!14256 = !DILocation(line: 366, column: 31, scope: !14257)
!14257 = distinct !DILexicalBlock(scope: !14254, file: !1038, line: 366, column: 11)
!14258 = !DILocation(line: 366, column: 29, scope: !14257)
!14259 = !DILocation(line: 366, column: 16, scope: !14257)
!14260 = !DILocation(line: 366, column: 44, scope: !14261)
!14261 = distinct !DILexicalBlock(scope: !14257, file: !1038, line: 366, column: 11)
!14262 = !DILocation(line: 366, column: 43, scope: !14261)
!14263 = !DILocation(line: 366, column: 11, scope: !14257)
!14264 = !DILocation(line: 367, column: 13, scope: !14261)
!14265 = !DILocation(line: 367, column: 13, scope: !14266)
!14266 = distinct !DILexicalBlock(scope: !14267, file: !1038, line: 367, column: 13)
!14267 = distinct !DILexicalBlock(scope: !14261, file: !1038, line: 367, column: 13)
!14268 = !DILocation(line: 367, column: 13, scope: !14267)
!14269 = !DILocation(line: 366, column: 70, scope: !14261)
!14270 = !DILocation(line: 366, column: 11, scope: !14261)
!14271 = distinct !{!14271, !14263, !14272}
!14272 = !DILocation(line: 367, column: 13, scope: !14257)
!14273 = !DILocation(line: 368, column: 27, scope: !14242)
!14274 = !DILocation(line: 369, column: 24, scope: !14242)
!14275 = !DILocation(line: 369, column: 22, scope: !14242)
!14276 = !DILocation(line: 370, column: 36, scope: !14242)
!14277 = !DILocation(line: 370, column: 28, scope: !14242)
!14278 = !DILocation(line: 370, column: 26, scope: !14242)
!14279 = !DILocation(line: 372, column: 7, scope: !14222)
!14280 = !DILocation(line: 375, column: 25, scope: !14222)
!14281 = !DILocation(line: 376, column: 7, scope: !14222)
!14282 = !DILocation(line: 378, column: 26, scope: !14222)
!14283 = !DILocation(line: 379, column: 7, scope: !14222)
!14284 = !DILocation(line: 381, column: 12, scope: !14285)
!14285 = distinct !DILexicalBlock(scope: !14222, file: !1038, line: 381, column: 11)
!14286 = !DILocation(line: 381, column: 11, scope: !14222)
!14287 = !DILocation(line: 382, column: 27, scope: !14285)
!14288 = !DILocation(line: 382, column: 9, scope: !14285)
!14289 = !DILocation(line: 383, column: 7, scope: !14222)
!14290 = !DILocation(line: 385, column: 21, scope: !14222)
!14291 = !DILocation(line: 386, column: 12, scope: !14292)
!14292 = distinct !DILexicalBlock(scope: !14222, file: !1038, line: 386, column: 11)
!14293 = !DILocation(line: 386, column: 11, scope: !14222)
!14294 = !DILocation(line: 387, column: 9, scope: !14292)
!14295 = !DILocation(line: 387, column: 9, scope: !14296)
!14296 = distinct !DILexicalBlock(scope: !14297, file: !1038, line: 387, column: 9)
!14297 = distinct !DILexicalBlock(scope: !14292, file: !1038, line: 387, column: 9)
!14298 = !DILocation(line: 387, column: 9, scope: !14297)
!14299 = !DILocation(line: 388, column: 20, scope: !14222)
!14300 = !DILocation(line: 389, column: 24, scope: !14222)
!14301 = !DILocation(line: 390, column: 7, scope: !14222)
!14302 = !DILocation(line: 393, column: 26, scope: !14222)
!14303 = !DILocation(line: 394, column: 7, scope: !14222)
!14304 = !DILocation(line: 397, column: 7, scope: !14222)
!14305 = !DILocation(line: 400, column: 10, scope: !14306)
!14306 = distinct !DILexicalBlock(scope: !14170, file: !1038, line: 400, column: 3)
!14307 = !DILocation(line: 400, column: 8, scope: !14306)
!14308 = !DILocation(line: 400, column: 19, scope: !14309)
!14309 = distinct !DILexicalBlock(scope: !14306, file: !1038, line: 400, column: 3)
!14310 = !DILocation(line: 400, column: 27, scope: !14309)
!14311 = !DILocation(line: 400, column: 41, scope: !14309)
!14312 = !DILocation(line: 400, column: 45, scope: !14309)
!14313 = !DILocation(line: 400, column: 48, scope: !14309)
!14314 = !DILocation(line: 400, column: 58, scope: !14309)
!14315 = !DILocation(line: 400, column: 63, scope: !14309)
!14316 = !DILocation(line: 400, column: 60, scope: !14309)
!14317 = !DILocation(line: 400, column: 16, scope: !14309)
!14318 = !DILocation(line: 400, column: 3, scope: !14306)
!14319 = !DILocalVariable(name: "c", scope: !14320, file: !1038, line: 402, type: !554)
!14320 = distinct !DILexicalBlock(scope: !14309, file: !1038, line: 401, column: 5)
!14321 = !DILocation(line: 402, column: 21, scope: !14320)
!14322 = !DILocalVariable(name: "esc", scope: !14320, file: !1038, line: 403, type: !554)
!14323 = !DILocation(line: 403, column: 21, scope: !14320)
!14324 = !DILocalVariable(name: "is_right_quote", scope: !14320, file: !1038, line: 404, type: !142)
!14325 = !DILocation(line: 404, column: 12, scope: !14320)
!14326 = !DILocalVariable(name: "escaping", scope: !14320, file: !1038, line: 405, type: !142)
!14327 = !DILocation(line: 405, column: 12, scope: !14320)
!14328 = !DILocalVariable(name: "c_and_shell_quote_compat", scope: !14320, file: !1038, line: 406, type: !142)
!14329 = !DILocation(line: 406, column: 12, scope: !14320)
!14330 = !DILocation(line: 408, column: 11, scope: !14331)
!14331 = distinct !DILexicalBlock(scope: !14320, file: !1038, line: 408, column: 11)
!14332 = !DILocation(line: 409, column: 11, scope: !14331)
!14333 = !DILocation(line: 409, column: 14, scope: !14331)
!14334 = !DILocation(line: 409, column: 28, scope: !14331)
!14335 = !DILocation(line: 410, column: 11, scope: !14331)
!14336 = !DILocation(line: 410, column: 14, scope: !14331)
!14337 = !DILocation(line: 411, column: 11, scope: !14331)
!14338 = !DILocation(line: 411, column: 15, scope: !14331)
!14339 = !DILocation(line: 411, column: 19, scope: !14331)
!14340 = !DILocation(line: 411, column: 17, scope: !14331)
!14341 = !DILocation(line: 412, column: 19, scope: !14331)
!14342 = !DILocation(line: 412, column: 27, scope: !14331)
!14343 = !DILocation(line: 412, column: 39, scope: !14331)
!14344 = !DILocation(line: 412, column: 46, scope: !14331)
!14345 = !DILocation(line: 412, column: 44, scope: !14331)
!14346 = !DILocation(line: 416, column: 40, scope: !14331)
!14347 = !DILocation(line: 416, column: 32, scope: !14331)
!14348 = !DILocation(line: 416, column: 30, scope: !14331)
!14349 = !DILocation(line: 416, column: 48, scope: !14331)
!14350 = !DILocation(line: 412, column: 15, scope: !14331)
!14351 = !DILocation(line: 417, column: 11, scope: !14331)
!14352 = !DILocation(line: 417, column: 22, scope: !14331)
!14353 = !DILocation(line: 417, column: 28, scope: !14331)
!14354 = !DILocation(line: 417, column: 26, scope: !14331)
!14355 = !DILocation(line: 417, column: 31, scope: !14331)
!14356 = !DILocation(line: 417, column: 45, scope: !14331)
!14357 = !DILocation(line: 417, column: 14, scope: !14331)
!14358 = !DILocation(line: 417, column: 63, scope: !14331)
!14359 = !DILocation(line: 408, column: 11, scope: !14320)
!14360 = !DILocation(line: 419, column: 15, scope: !14361)
!14361 = distinct !DILexicalBlock(scope: !14362, file: !1038, line: 419, column: 15)
!14362 = distinct !DILexicalBlock(scope: !14331, file: !1038, line: 418, column: 9)
!14363 = !DILocation(line: 419, column: 15, scope: !14362)
!14364 = !DILocation(line: 420, column: 13, scope: !14361)
!14365 = !DILocation(line: 421, column: 26, scope: !14362)
!14366 = !DILocation(line: 422, column: 9, scope: !14362)
!14367 = !DILocation(line: 424, column: 11, scope: !14320)
!14368 = !DILocation(line: 424, column: 15, scope: !14320)
!14369 = !DILocation(line: 424, column: 9, scope: !14320)
!14370 = !DILocation(line: 425, column: 15, scope: !14320)
!14371 = !DILocation(line: 425, column: 7, scope: !14320)
!14372 = !DILocation(line: 428, column: 15, scope: !14373)
!14373 = distinct !DILexicalBlock(scope: !14374, file: !1038, line: 428, column: 15)
!14374 = distinct !DILexicalBlock(scope: !14320, file: !1038, line: 426, column: 9)
!14375 = !DILocation(line: 428, column: 15, scope: !14374)
!14376 = !DILocation(line: 430, column: 15, scope: !14377)
!14377 = distinct !DILexicalBlock(scope: !14373, file: !1038, line: 429, column: 13)
!14378 = !DILocation(line: 430, column: 15, scope: !14379)
!14379 = distinct !DILexicalBlock(scope: !14380, file: !1038, line: 430, column: 15)
!14380 = distinct !DILexicalBlock(scope: !14377, file: !1038, line: 430, column: 15)
!14381 = !DILocation(line: 430, column: 15, scope: !14380)
!14382 = !DILocation(line: 430, column: 15, scope: !14383)
!14383 = distinct !DILexicalBlock(scope: !14380, file: !1038, line: 430, column: 15)
!14384 = !DILocation(line: 430, column: 15, scope: !14385)
!14385 = distinct !DILexicalBlock(scope: !14383, file: !1038, line: 430, column: 15)
!14386 = !DILocation(line: 430, column: 15, scope: !14387)
!14387 = distinct !DILexicalBlock(scope: !14388, file: !1038, line: 430, column: 15)
!14388 = distinct !DILexicalBlock(scope: !14385, file: !1038, line: 430, column: 15)
!14389 = !DILocation(line: 430, column: 15, scope: !14388)
!14390 = !DILocation(line: 430, column: 15, scope: !14391)
!14391 = distinct !DILexicalBlock(scope: !14392, file: !1038, line: 430, column: 15)
!14392 = distinct !DILexicalBlock(scope: !14385, file: !1038, line: 430, column: 15)
!14393 = !DILocation(line: 430, column: 15, scope: !14392)
!14394 = !DILocation(line: 430, column: 15, scope: !14395)
!14395 = distinct !DILexicalBlock(scope: !14396, file: !1038, line: 430, column: 15)
!14396 = distinct !DILexicalBlock(scope: !14385, file: !1038, line: 430, column: 15)
!14397 = !DILocation(line: 430, column: 15, scope: !14396)
!14398 = !DILocation(line: 430, column: 15, scope: !14399)
!14399 = distinct !DILexicalBlock(scope: !14400, file: !1038, line: 430, column: 15)
!14400 = distinct !DILexicalBlock(scope: !14380, file: !1038, line: 430, column: 15)
!14401 = !DILocation(line: 430, column: 15, scope: !14400)
!14402 = !DILocation(line: 437, column: 19, scope: !14403)
!14403 = distinct !DILexicalBlock(scope: !14377, file: !1038, line: 437, column: 19)
!14404 = !DILocation(line: 437, column: 33, scope: !14403)
!14405 = !DILocation(line: 438, column: 19, scope: !14403)
!14406 = !DILocation(line: 438, column: 22, scope: !14403)
!14407 = !DILocation(line: 438, column: 24, scope: !14403)
!14408 = !DILocation(line: 438, column: 30, scope: !14403)
!14409 = !DILocation(line: 438, column: 28, scope: !14403)
!14410 = !DILocation(line: 438, column: 38, scope: !14403)
!14411 = !DILocation(line: 438, column: 48, scope: !14403)
!14412 = !DILocation(line: 438, column: 52, scope: !14403)
!14413 = !DILocation(line: 438, column: 54, scope: !14403)
!14414 = !DILocation(line: 438, column: 45, scope: !14403)
!14415 = !DILocation(line: 438, column: 59, scope: !14403)
!14416 = !DILocation(line: 438, column: 62, scope: !14403)
!14417 = !DILocation(line: 438, column: 66, scope: !14403)
!14418 = !DILocation(line: 438, column: 68, scope: !14403)
!14419 = !DILocation(line: 438, column: 73, scope: !14403)
!14420 = !DILocation(line: 437, column: 19, scope: !14377)
!14421 = !DILocation(line: 440, column: 19, scope: !14422)
!14422 = distinct !DILexicalBlock(scope: !14403, file: !1038, line: 439, column: 17)
!14423 = !DILocation(line: 440, column: 19, scope: !14424)
!14424 = distinct !DILexicalBlock(scope: !14425, file: !1038, line: 440, column: 19)
!14425 = distinct !DILexicalBlock(scope: !14422, file: !1038, line: 440, column: 19)
!14426 = !DILocation(line: 440, column: 19, scope: !14425)
!14427 = !DILocation(line: 441, column: 19, scope: !14422)
!14428 = !DILocation(line: 441, column: 19, scope: !14429)
!14429 = distinct !DILexicalBlock(scope: !14430, file: !1038, line: 441, column: 19)
!14430 = distinct !DILexicalBlock(scope: !14422, file: !1038, line: 441, column: 19)
!14431 = !DILocation(line: 441, column: 19, scope: !14430)
!14432 = !DILocation(line: 442, column: 17, scope: !14422)
!14433 = !DILocation(line: 443, column: 17, scope: !14377)
!14434 = !DILocation(line: 448, column: 13, scope: !14377)
!14435 = !DILocation(line: 449, column: 20, scope: !14436)
!14436 = distinct !DILexicalBlock(scope: !14373, file: !1038, line: 449, column: 20)
!14437 = !DILocation(line: 449, column: 26, scope: !14436)
!14438 = !DILocation(line: 449, column: 20, scope: !14373)
!14439 = !DILocation(line: 450, column: 13, scope: !14436)
!14440 = !DILocation(line: 451, column: 11, scope: !14374)
!14441 = !DILocation(line: 454, column: 19, scope: !14374)
!14442 = !DILocation(line: 454, column: 11, scope: !14374)
!14443 = !DILocation(line: 457, column: 19, scope: !14444)
!14444 = distinct !DILexicalBlock(scope: !14445, file: !1038, line: 457, column: 19)
!14445 = distinct !DILexicalBlock(scope: !14374, file: !1038, line: 455, column: 13)
!14446 = !DILocation(line: 457, column: 19, scope: !14445)
!14447 = !DILocation(line: 458, column: 17, scope: !14444)
!14448 = !DILocation(line: 459, column: 15, scope: !14445)
!14449 = !DILocation(line: 462, column: 20, scope: !14450)
!14450 = distinct !DILexicalBlock(scope: !14445, file: !1038, line: 462, column: 19)
!14451 = !DILocation(line: 462, column: 26, scope: !14450)
!14452 = !DILocation(line: 463, column: 19, scope: !14450)
!14453 = !DILocation(line: 463, column: 22, scope: !14450)
!14454 = !DILocation(line: 463, column: 24, scope: !14450)
!14455 = !DILocation(line: 463, column: 30, scope: !14450)
!14456 = !DILocation(line: 463, column: 28, scope: !14450)
!14457 = !DILocation(line: 463, column: 38, scope: !14450)
!14458 = !DILocation(line: 463, column: 41, scope: !14450)
!14459 = !DILocation(line: 463, column: 45, scope: !14450)
!14460 = !DILocation(line: 463, column: 47, scope: !14450)
!14461 = !DILocation(line: 463, column: 52, scope: !14450)
!14462 = !DILocation(line: 462, column: 19, scope: !14445)
!14463 = !DILocation(line: 464, column: 25, scope: !14450)
!14464 = !DILocation(line: 464, column: 29, scope: !14450)
!14465 = !DILocation(line: 464, column: 31, scope: !14450)
!14466 = !DILocation(line: 464, column: 17, scope: !14450)
!14467 = !DILocation(line: 471, column: 25, scope: !14468)
!14468 = distinct !DILexicalBlock(scope: !14469, file: !1038, line: 471, column: 25)
!14469 = distinct !DILexicalBlock(scope: !14450, file: !1038, line: 465, column: 19)
!14470 = !DILocation(line: 471, column: 25, scope: !14469)
!14471 = !DILocation(line: 472, column: 23, scope: !14468)
!14472 = !DILocation(line: 473, column: 25, scope: !14469)
!14473 = !DILocation(line: 473, column: 29, scope: !14469)
!14474 = !DILocation(line: 473, column: 31, scope: !14469)
!14475 = !DILocation(line: 473, column: 23, scope: !14469)
!14476 = !DILocation(line: 474, column: 23, scope: !14469)
!14477 = !DILocation(line: 475, column: 21, scope: !14469)
!14478 = !DILocation(line: 475, column: 21, scope: !14479)
!14479 = distinct !DILexicalBlock(scope: !14480, file: !1038, line: 475, column: 21)
!14480 = distinct !DILexicalBlock(scope: !14469, file: !1038, line: 475, column: 21)
!14481 = !DILocation(line: 475, column: 21, scope: !14480)
!14482 = !DILocation(line: 476, column: 21, scope: !14469)
!14483 = !DILocation(line: 476, column: 21, scope: !14484)
!14484 = distinct !DILexicalBlock(scope: !14485, file: !1038, line: 476, column: 21)
!14485 = distinct !DILexicalBlock(scope: !14469, file: !1038, line: 476, column: 21)
!14486 = !DILocation(line: 476, column: 21, scope: !14485)
!14487 = !DILocation(line: 477, column: 21, scope: !14469)
!14488 = !DILocation(line: 477, column: 21, scope: !14489)
!14489 = distinct !DILexicalBlock(scope: !14490, file: !1038, line: 477, column: 21)
!14490 = distinct !DILexicalBlock(scope: !14469, file: !1038, line: 477, column: 21)
!14491 = !DILocation(line: 477, column: 21, scope: !14490)
!14492 = !DILocation(line: 478, column: 21, scope: !14469)
!14493 = !DILocation(line: 478, column: 21, scope: !14494)
!14494 = distinct !DILexicalBlock(scope: !14495, file: !1038, line: 478, column: 21)
!14495 = distinct !DILexicalBlock(scope: !14469, file: !1038, line: 478, column: 21)
!14496 = !DILocation(line: 478, column: 21, scope: !14495)
!14497 = !DILocation(line: 479, column: 21, scope: !14469)
!14498 = !DILocation(line: 482, column: 21, scope: !14469)
!14499 = !DILocation(line: 483, column: 19, scope: !14469)
!14500 = !DILocation(line: 484, column: 15, scope: !14445)
!14501 = !DILocation(line: 487, column: 15, scope: !14445)
!14502 = !DILocation(line: 489, column: 11, scope: !14374)
!14503 = !DILocation(line: 491, column: 24, scope: !14374)
!14504 = !DILocation(line: 491, column: 31, scope: !14374)
!14505 = !DILocation(line: 492, column: 24, scope: !14374)
!14506 = !DILocation(line: 492, column: 31, scope: !14374)
!14507 = !DILocation(line: 493, column: 24, scope: !14374)
!14508 = !DILocation(line: 493, column: 31, scope: !14374)
!14509 = !DILocation(line: 494, column: 24, scope: !14374)
!14510 = !DILocation(line: 494, column: 31, scope: !14374)
!14511 = !DILocation(line: 495, column: 24, scope: !14374)
!14512 = !DILocation(line: 495, column: 31, scope: !14374)
!14513 = !DILocation(line: 496, column: 24, scope: !14374)
!14514 = !DILocation(line: 496, column: 31, scope: !14374)
!14515 = !DILocation(line: 497, column: 24, scope: !14374)
!14516 = !DILocation(line: 497, column: 31, scope: !14374)
!14517 = !DILocation(line: 498, column: 26, scope: !14374)
!14518 = !DILocation(line: 498, column: 24, scope: !14374)
!14519 = !DILocation(line: 500, column: 15, scope: !14520)
!14520 = distinct !DILexicalBlock(scope: !14374, file: !1038, line: 500, column: 15)
!14521 = !DILocation(line: 500, column: 29, scope: !14520)
!14522 = !DILocation(line: 500, column: 15, scope: !14374)
!14523 = !DILocation(line: 502, column: 19, scope: !14524)
!14524 = distinct !DILexicalBlock(scope: !14525, file: !1038, line: 502, column: 19)
!14525 = distinct !DILexicalBlock(scope: !14520, file: !1038, line: 501, column: 13)
!14526 = !DILocation(line: 502, column: 19, scope: !14525)
!14527 = !DILocation(line: 503, column: 17, scope: !14524)
!14528 = !DILocation(line: 504, column: 15, scope: !14525)
!14529 = !DILocation(line: 509, column: 15, scope: !14530)
!14530 = distinct !DILexicalBlock(scope: !14374, file: !1038, line: 509, column: 15)
!14531 = !DILocation(line: 509, column: 33, scope: !14530)
!14532 = !DILocation(line: 509, column: 36, scope: !14530)
!14533 = !DILocation(line: 509, column: 55, scope: !14530)
!14534 = !DILocation(line: 509, column: 58, scope: !14530)
!14535 = !DILocation(line: 509, column: 15, scope: !14374)
!14536 = !DILocation(line: 510, column: 13, scope: !14530)
!14537 = !DILabel(scope: !14374, name: "c_and_shell_escape", file: !1038, line: 512)
!14538 = !DILocation(line: 512, column: 9, scope: !14374)
!14539 = !DILocation(line: 513, column: 15, scope: !14540)
!14540 = distinct !DILexicalBlock(scope: !14374, file: !1038, line: 513, column: 15)
!14541 = !DILocation(line: 513, column: 29, scope: !14540)
!14542 = !DILocation(line: 514, column: 15, scope: !14540)
!14543 = !DILocation(line: 514, column: 18, scope: !14540)
!14544 = !DILocation(line: 513, column: 15, scope: !14374)
!14545 = !DILocation(line: 515, column: 13, scope: !14540)
!14546 = !DILabel(scope: !14374, name: "c_escape", file: !1038, line: 517)
!14547 = !DILocation(line: 517, column: 9, scope: !14374)
!14548 = !DILocation(line: 518, column: 15, scope: !14549)
!14549 = distinct !DILexicalBlock(scope: !14374, file: !1038, line: 518, column: 15)
!14550 = !DILocation(line: 518, column: 15, scope: !14374)
!14551 = !DILocation(line: 520, column: 19, scope: !14552)
!14552 = distinct !DILexicalBlock(scope: !14549, file: !1038, line: 519, column: 13)
!14553 = !DILocation(line: 520, column: 17, scope: !14552)
!14554 = !DILocation(line: 521, column: 15, scope: !14552)
!14555 = !DILocation(line: 523, column: 11, scope: !14374)
!14556 = !DILocation(line: 526, column: 18, scope: !14557)
!14557 = distinct !DILexicalBlock(scope: !14374, file: !1038, line: 526, column: 15)
!14558 = !DILocation(line: 526, column: 26, scope: !14557)
!14559 = !DILocation(line: 526, column: 15, scope: !14374)
!14560 = !DILocation(line: 526, column: 40, scope: !14557)
!14561 = !DILocation(line: 526, column: 47, scope: !14557)
!14562 = !DILocation(line: 526, column: 57, scope: !14557)
!14563 = !DILocation(line: 526, column: 65, scope: !14557)
!14564 = !DILocation(line: 527, column: 13, scope: !14557)
!14565 = !DILocation(line: 528, column: 11, scope: !14374)
!14566 = !DILocation(line: 530, column: 15, scope: !14567)
!14567 = distinct !DILexicalBlock(scope: !14374, file: !1038, line: 530, column: 15)
!14568 = !DILocation(line: 530, column: 17, scope: !14567)
!14569 = !DILocation(line: 530, column: 15, scope: !14374)
!14570 = !DILocation(line: 531, column: 13, scope: !14567)
!14571 = !DILocation(line: 532, column: 11, scope: !14374)
!14572 = !DILocation(line: 534, column: 36, scope: !14374)
!14573 = !DILocation(line: 535, column: 11, scope: !14374)
!14574 = !DILocation(line: 548, column: 15, scope: !14575)
!14575 = distinct !DILexicalBlock(scope: !14374, file: !1038, line: 548, column: 15)
!14576 = !DILocation(line: 548, column: 29, scope: !14575)
!14577 = !DILocation(line: 549, column: 15, scope: !14575)
!14578 = !DILocation(line: 549, column: 18, scope: !14575)
!14579 = !DILocation(line: 548, column: 15, scope: !14374)
!14580 = !DILocation(line: 550, column: 13, scope: !14575)
!14581 = !DILocation(line: 551, column: 11, scope: !14374)
!14582 = !DILocation(line: 554, column: 36, scope: !14374)
!14583 = !DILocation(line: 555, column: 36, scope: !14374)
!14584 = !DILocation(line: 556, column: 15, scope: !14585)
!14585 = distinct !DILexicalBlock(scope: !14374, file: !1038, line: 556, column: 15)
!14586 = !DILocation(line: 556, column: 29, scope: !14585)
!14587 = !DILocation(line: 556, column: 15, scope: !14374)
!14588 = !DILocation(line: 558, column: 19, scope: !14589)
!14589 = distinct !DILexicalBlock(scope: !14590, file: !1038, line: 558, column: 19)
!14590 = distinct !DILexicalBlock(scope: !14585, file: !1038, line: 557, column: 13)
!14591 = !DILocation(line: 558, column: 19, scope: !14590)
!14592 = !DILocation(line: 559, column: 17, scope: !14589)
!14593 = !DILocation(line: 561, column: 19, scope: !14594)
!14594 = distinct !DILexicalBlock(scope: !14590, file: !1038, line: 561, column: 19)
!14595 = !DILocation(line: 561, column: 30, scope: !14594)
!14596 = !DILocation(line: 561, column: 35, scope: !14594)
!14597 = !DILocation(line: 561, column: 19, scope: !14590)
!14598 = !DILocation(line: 566, column: 37, scope: !14599)
!14599 = distinct !DILexicalBlock(scope: !14594, file: !1038, line: 562, column: 17)
!14600 = !DILocation(line: 566, column: 35, scope: !14599)
!14601 = !DILocation(line: 567, column: 30, scope: !14599)
!14602 = !DILocation(line: 568, column: 17, scope: !14599)
!14603 = !DILocation(line: 570, column: 15, scope: !14590)
!14604 = !DILocation(line: 570, column: 15, scope: !14605)
!14605 = distinct !DILexicalBlock(scope: !14606, file: !1038, line: 570, column: 15)
!14606 = distinct !DILexicalBlock(scope: !14590, file: !1038, line: 570, column: 15)
!14607 = !DILocation(line: 570, column: 15, scope: !14606)
!14608 = !DILocation(line: 571, column: 15, scope: !14590)
!14609 = !DILocation(line: 571, column: 15, scope: !14610)
!14610 = distinct !DILexicalBlock(scope: !14611, file: !1038, line: 571, column: 15)
!14611 = distinct !DILexicalBlock(scope: !14590, file: !1038, line: 571, column: 15)
!14612 = !DILocation(line: 571, column: 15, scope: !14611)
!14613 = !DILocation(line: 572, column: 15, scope: !14590)
!14614 = !DILocation(line: 572, column: 15, scope: !14615)
!14615 = distinct !DILexicalBlock(scope: !14616, file: !1038, line: 572, column: 15)
!14616 = distinct !DILexicalBlock(scope: !14590, file: !1038, line: 572, column: 15)
!14617 = !DILocation(line: 572, column: 15, scope: !14616)
!14618 = !DILocation(line: 573, column: 40, scope: !14590)
!14619 = !DILocation(line: 574, column: 13, scope: !14590)
!14620 = !DILocation(line: 575, column: 11, scope: !14374)
!14621 = !DILocation(line: 599, column: 36, scope: !14374)
!14622 = !DILocation(line: 600, column: 11, scope: !14374)
!14623 = !DILocalVariable(name: "m", scope: !14624, file: !1038, line: 610, type: !55)
!14624 = distinct !DILexicalBlock(scope: !14374, file: !1038, line: 608, column: 11)
!14625 = !DILocation(line: 610, column: 20, scope: !14624)
!14626 = !DILocalVariable(name: "printable", scope: !14624, file: !1038, line: 612, type: !142)
!14627 = !DILocation(line: 612, column: 18, scope: !14624)
!14628 = !DILocation(line: 614, column: 17, scope: !14629)
!14629 = distinct !DILexicalBlock(scope: !14624, file: !1038, line: 614, column: 17)
!14630 = !DILocation(line: 614, column: 17, scope: !14624)
!14631 = !DILocation(line: 616, column: 19, scope: !14632)
!14632 = distinct !DILexicalBlock(scope: !14629, file: !1038, line: 615, column: 15)
!14633 = !DILocation(line: 617, column: 29, scope: !14632)
!14634 = !{!14635, !14635, i64 0}
!14635 = !{!"short", !2634, i64 0}
!14636 = !DILocation(line: 617, column: 41, scope: !14632)
!14637 = !DILocation(line: 617, column: 27, scope: !14632)
!14638 = !DILocation(line: 618, column: 15, scope: !14632)
!14639 = !DILocalVariable(name: "mbstate", scope: !14640, file: !1038, line: 621, type: !1110)
!14640 = distinct !DILexicalBlock(scope: !14629, file: !1038, line: 620, column: 15)
!14641 = !DILocation(line: 621, column: 27, scope: !14640)
!14642 = !DILocation(line: 622, column: 17, scope: !14640)
!14643 = !DILocation(line: 624, column: 19, scope: !14640)
!14644 = !DILocation(line: 625, column: 27, scope: !14640)
!14645 = !DILocation(line: 626, column: 21, scope: !14646)
!14646 = distinct !DILexicalBlock(scope: !14640, file: !1038, line: 626, column: 21)
!14647 = !DILocation(line: 626, column: 29, scope: !14646)
!14648 = !DILocation(line: 626, column: 21, scope: !14640)
!14649 = !DILocation(line: 627, column: 37, scope: !14646)
!14650 = !DILocation(line: 627, column: 29, scope: !14646)
!14651 = !DILocation(line: 627, column: 27, scope: !14646)
!14652 = !DILocation(line: 627, column: 19, scope: !14646)
!14653 = !DILocation(line: 629, column: 17, scope: !14640)
!14654 = !DILocalVariable(name: "w", scope: !14655, file: !1038, line: 631, type: !1125)
!14655 = distinct !DILexicalBlock(scope: !14640, file: !1038, line: 630, column: 19)
!14656 = !DILocation(line: 631, column: 29, scope: !14655)
!14657 = !DILocalVariable(name: "bytes", scope: !14655, file: !1038, line: 632, type: !55)
!14658 = !DILocation(line: 632, column: 28, scope: !14655)
!14659 = !DILocation(line: 632, column: 50, scope: !14655)
!14660 = !DILocation(line: 632, column: 54, scope: !14655)
!14661 = !DILocation(line: 632, column: 58, scope: !14655)
!14662 = !DILocation(line: 632, column: 56, scope: !14655)
!14663 = !DILocation(line: 633, column: 45, scope: !14655)
!14664 = !DILocation(line: 633, column: 56, scope: !14655)
!14665 = !DILocation(line: 633, column: 60, scope: !14655)
!14666 = !DILocation(line: 633, column: 58, scope: !14655)
!14667 = !DILocation(line: 633, column: 53, scope: !14655)
!14668 = !DILocation(line: 632, column: 36, scope: !14655)
!14669 = !DILocation(line: 634, column: 25, scope: !14670)
!14670 = distinct !DILexicalBlock(scope: !14655, file: !1038, line: 634, column: 25)
!14671 = !DILocation(line: 634, column: 31, scope: !14670)
!14672 = !DILocation(line: 634, column: 25, scope: !14655)
!14673 = !DILocation(line: 635, column: 23, scope: !14670)
!14674 = !DILocation(line: 636, column: 30, scope: !14675)
!14675 = distinct !DILexicalBlock(scope: !14670, file: !1038, line: 636, column: 30)
!14676 = !DILocation(line: 636, column: 36, scope: !14675)
!14677 = !DILocation(line: 636, column: 30, scope: !14670)
!14678 = !DILocation(line: 638, column: 35, scope: !14679)
!14679 = distinct !DILexicalBlock(scope: !14675, file: !1038, line: 637, column: 23)
!14680 = !DILocation(line: 639, column: 25, scope: !14679)
!14681 = !DILocation(line: 641, column: 30, scope: !14682)
!14682 = distinct !DILexicalBlock(scope: !14675, file: !1038, line: 641, column: 30)
!14683 = !DILocation(line: 641, column: 36, scope: !14682)
!14684 = !DILocation(line: 641, column: 30, scope: !14675)
!14685 = !DILocation(line: 643, column: 35, scope: !14686)
!14686 = distinct !DILexicalBlock(scope: !14682, file: !1038, line: 642, column: 23)
!14687 = !DILocation(line: 644, column: 25, scope: !14686)
!14688 = !DILocation(line: 644, column: 32, scope: !14686)
!14689 = !DILocation(line: 644, column: 36, scope: !14686)
!14690 = !DILocation(line: 644, column: 34, scope: !14686)
!14691 = !DILocation(line: 644, column: 40, scope: !14686)
!14692 = !DILocation(line: 644, column: 38, scope: !14686)
!14693 = !DILocation(line: 644, column: 48, scope: !14686)
!14694 = !DILocation(line: 644, column: 51, scope: !14686)
!14695 = !DILocation(line: 644, column: 55, scope: !14686)
!14696 = !DILocation(line: 644, column: 59, scope: !14686)
!14697 = !DILocation(line: 644, column: 57, scope: !14686)
!14698 = !DILocation(line: 0, scope: !14686)
!14699 = !DILocation(line: 645, column: 28, scope: !14686)
!14700 = distinct !{!14700, !14687, !14699}
!14701 = !DILocation(line: 646, column: 25, scope: !14686)
!14702 = !DILocation(line: 654, column: 44, scope: !14703)
!14703 = distinct !DILexicalBlock(scope: !14704, file: !1038, line: 654, column: 29)
!14704 = distinct !DILexicalBlock(scope: !14682, file: !1038, line: 649, column: 23)
!14705 = !DILocation(line: 655, column: 29, scope: !14703)
!14706 = !DILocation(line: 655, column: 32, scope: !14703)
!14707 = !DILocation(line: 655, column: 46, scope: !14703)
!14708 = !DILocation(line: 654, column: 29, scope: !14704)
!14709 = !DILocalVariable(name: "j", scope: !14710, file: !1038, line: 657, type: !55)
!14710 = distinct !DILexicalBlock(scope: !14703, file: !1038, line: 656, column: 27)
!14711 = !DILocation(line: 657, column: 36, scope: !14710)
!14712 = !DILocation(line: 658, column: 36, scope: !14713)
!14713 = distinct !DILexicalBlock(scope: !14710, file: !1038, line: 658, column: 29)
!14714 = !DILocation(line: 658, column: 34, scope: !14713)
!14715 = !DILocation(line: 658, column: 41, scope: !14716)
!14716 = distinct !DILexicalBlock(scope: !14713, file: !1038, line: 658, column: 29)
!14717 = !DILocation(line: 658, column: 45, scope: !14716)
!14718 = !DILocation(line: 658, column: 43, scope: !14716)
!14719 = !DILocation(line: 658, column: 29, scope: !14713)
!14720 = !DILocation(line: 659, column: 39, scope: !14716)
!14721 = !DILocation(line: 659, column: 43, scope: !14716)
!14722 = !DILocation(line: 659, column: 47, scope: !14716)
!14723 = !DILocation(line: 659, column: 45, scope: !14716)
!14724 = !DILocation(line: 659, column: 51, scope: !14716)
!14725 = !DILocation(line: 659, column: 49, scope: !14716)
!14726 = !DILocation(line: 659, column: 31, scope: !14716)
!14727 = !DILocation(line: 663, column: 35, scope: !14728)
!14728 = distinct !DILexicalBlock(scope: !14716, file: !1038, line: 660, column: 33)
!14729 = !DILocation(line: 666, column: 35, scope: !14728)
!14730 = !DILocation(line: 667, column: 33, scope: !14728)
!14731 = !DILocation(line: 658, column: 53, scope: !14716)
!14732 = !DILocation(line: 658, column: 29, scope: !14716)
!14733 = distinct !{!14733, !14719, !14734}
!14734 = !DILocation(line: 667, column: 33, scope: !14713)
!14735 = !DILocation(line: 668, column: 27, scope: !14710)
!14736 = !DILocation(line: 670, column: 41, scope: !14737)
!14737 = distinct !DILexicalBlock(scope: !14704, file: !1038, line: 670, column: 29)
!14738 = !DILocation(line: 670, column: 31, scope: !14737)
!14739 = !DILocation(line: 670, column: 29, scope: !14704)
!14740 = !DILocation(line: 671, column: 37, scope: !14737)
!14741 = !DILocation(line: 671, column: 27, scope: !14737)
!14742 = !DILocation(line: 672, column: 30, scope: !14704)
!14743 = !DILocation(line: 672, column: 27, scope: !14704)
!14744 = !DILocation(line: 674, column: 19, scope: !14655)
!14745 = !DILocation(line: 675, column: 26, scope: !14640)
!14746 = !DILocation(line: 675, column: 24, scope: !14640)
!14747 = distinct !{!14747, !14653, !14748}
!14748 = !DILocation(line: 675, column: 44, scope: !14640)
!14749 = !DILocation(line: 678, column: 40, scope: !14624)
!14750 = !DILocation(line: 678, column: 38, scope: !14624)
!14751 = !DILocation(line: 680, column: 21, scope: !14752)
!14752 = distinct !DILexicalBlock(scope: !14624, file: !1038, line: 680, column: 17)
!14753 = !DILocation(line: 680, column: 19, scope: !14752)
!14754 = !DILocation(line: 680, column: 23, scope: !14752)
!14755 = !DILocation(line: 680, column: 27, scope: !14752)
!14756 = !DILocation(line: 680, column: 45, scope: !14752)
!14757 = !DILocation(line: 680, column: 50, scope: !14752)
!14758 = !DILocation(line: 680, column: 17, scope: !14624)
!14759 = !DILocalVariable(name: "ilim", scope: !14760, file: !1038, line: 684, type: !55)
!14760 = distinct !DILexicalBlock(scope: !14752, file: !1038, line: 681, column: 15)
!14761 = !DILocation(line: 684, column: 24, scope: !14760)
!14762 = !DILocation(line: 684, column: 31, scope: !14760)
!14763 = !DILocation(line: 684, column: 35, scope: !14760)
!14764 = !DILocation(line: 684, column: 33, scope: !14760)
!14765 = !DILocation(line: 686, column: 17, scope: !14760)
!14766 = !DILocation(line: 688, column: 25, scope: !14767)
!14767 = distinct !DILexicalBlock(scope: !14768, file: !1038, line: 688, column: 25)
!14768 = distinct !DILexicalBlock(scope: !14769, file: !1038, line: 687, column: 19)
!14769 = distinct !DILexicalBlock(scope: !14770, file: !1038, line: 686, column: 17)
!14770 = distinct !DILexicalBlock(scope: !14760, file: !1038, line: 686, column: 17)
!14771 = !DILocation(line: 688, column: 43, scope: !14767)
!14772 = !DILocation(line: 688, column: 48, scope: !14767)
!14773 = !DILocation(line: 688, column: 25, scope: !14768)
!14774 = !DILocation(line: 690, column: 25, scope: !14775)
!14775 = distinct !DILexicalBlock(scope: !14767, file: !1038, line: 689, column: 23)
!14776 = !DILocation(line: 690, column: 25, scope: !14777)
!14777 = distinct !DILexicalBlock(scope: !14778, file: !1038, line: 690, column: 25)
!14778 = distinct !DILexicalBlock(scope: !14775, file: !1038, line: 690, column: 25)
!14779 = !DILocation(line: 690, column: 25, scope: !14778)
!14780 = !DILocation(line: 690, column: 25, scope: !14781)
!14781 = distinct !DILexicalBlock(scope: !14778, file: !1038, line: 690, column: 25)
!14782 = !DILocation(line: 690, column: 25, scope: !14783)
!14783 = distinct !DILexicalBlock(scope: !14781, file: !1038, line: 690, column: 25)
!14784 = !DILocation(line: 690, column: 25, scope: !14785)
!14785 = distinct !DILexicalBlock(scope: !14786, file: !1038, line: 690, column: 25)
!14786 = distinct !DILexicalBlock(scope: !14783, file: !1038, line: 690, column: 25)
!14787 = !DILocation(line: 690, column: 25, scope: !14786)
!14788 = !DILocation(line: 690, column: 25, scope: !14789)
!14789 = distinct !DILexicalBlock(scope: !14790, file: !1038, line: 690, column: 25)
!14790 = distinct !DILexicalBlock(scope: !14783, file: !1038, line: 690, column: 25)
!14791 = !DILocation(line: 690, column: 25, scope: !14790)
!14792 = !DILocation(line: 690, column: 25, scope: !14793)
!14793 = distinct !DILexicalBlock(scope: !14794, file: !1038, line: 690, column: 25)
!14794 = distinct !DILexicalBlock(scope: !14783, file: !1038, line: 690, column: 25)
!14795 = !DILocation(line: 690, column: 25, scope: !14794)
!14796 = !DILocation(line: 690, column: 25, scope: !14797)
!14797 = distinct !DILexicalBlock(scope: !14798, file: !1038, line: 690, column: 25)
!14798 = distinct !DILexicalBlock(scope: !14778, file: !1038, line: 690, column: 25)
!14799 = !DILocation(line: 690, column: 25, scope: !14798)
!14800 = !DILocation(line: 691, column: 25, scope: !14775)
!14801 = !DILocation(line: 691, column: 25, scope: !14802)
!14802 = distinct !DILexicalBlock(scope: !14803, file: !1038, line: 691, column: 25)
!14803 = distinct !DILexicalBlock(scope: !14775, file: !1038, line: 691, column: 25)
!14804 = !DILocation(line: 691, column: 25, scope: !14803)
!14805 = !DILocation(line: 692, column: 25, scope: !14775)
!14806 = !DILocation(line: 692, column: 25, scope: !14807)
!14807 = distinct !DILexicalBlock(scope: !14808, file: !1038, line: 692, column: 25)
!14808 = distinct !DILexicalBlock(scope: !14775, file: !1038, line: 692, column: 25)
!14809 = !DILocation(line: 692, column: 25, scope: !14808)
!14810 = !DILocation(line: 693, column: 36, scope: !14775)
!14811 = !DILocation(line: 693, column: 38, scope: !14775)
!14812 = !DILocation(line: 693, column: 33, scope: !14775)
!14813 = !DILocation(line: 693, column: 29, scope: !14775)
!14814 = !DILocation(line: 693, column: 27, scope: !14775)
!14815 = !DILocation(line: 694, column: 23, scope: !14775)
!14816 = !DILocation(line: 695, column: 30, scope: !14817)
!14817 = distinct !DILexicalBlock(scope: !14767, file: !1038, line: 695, column: 30)
!14818 = !DILocation(line: 695, column: 30, scope: !14767)
!14819 = !DILocation(line: 697, column: 25, scope: !14820)
!14820 = distinct !DILexicalBlock(scope: !14817, file: !1038, line: 696, column: 23)
!14821 = !DILocation(line: 697, column: 25, scope: !14822)
!14822 = distinct !DILexicalBlock(scope: !14823, file: !1038, line: 697, column: 25)
!14823 = distinct !DILexicalBlock(scope: !14820, file: !1038, line: 697, column: 25)
!14824 = !DILocation(line: 697, column: 25, scope: !14823)
!14825 = !DILocation(line: 698, column: 40, scope: !14820)
!14826 = !DILocation(line: 699, column: 23, scope: !14820)
!14827 = !DILocation(line: 700, column: 25, scope: !14828)
!14828 = distinct !DILexicalBlock(scope: !14768, file: !1038, line: 700, column: 25)
!14829 = !DILocation(line: 700, column: 33, scope: !14828)
!14830 = !DILocation(line: 700, column: 35, scope: !14828)
!14831 = !DILocation(line: 700, column: 30, scope: !14828)
!14832 = !DILocation(line: 700, column: 25, scope: !14768)
!14833 = !DILocation(line: 701, column: 23, scope: !14828)
!14834 = !DILocation(line: 702, column: 21, scope: !14768)
!14835 = !DILocation(line: 702, column: 21, scope: !14836)
!14836 = distinct !DILexicalBlock(scope: !14837, file: !1038, line: 702, column: 21)
!14837 = distinct !DILexicalBlock(scope: !14768, file: !1038, line: 702, column: 21)
!14838 = !DILocation(line: 702, column: 21, scope: !14837)
!14839 = !DILocation(line: 702, column: 21, scope: !14840)
!14840 = distinct !DILexicalBlock(scope: !14836, file: !1038, line: 702, column: 21)
!14841 = !DILocation(line: 702, column: 21, scope: !14842)
!14842 = distinct !DILexicalBlock(scope: !14843, file: !1038, line: 702, column: 21)
!14843 = distinct !DILexicalBlock(scope: !14840, file: !1038, line: 702, column: 21)
!14844 = !DILocation(line: 702, column: 21, scope: !14843)
!14845 = !DILocation(line: 702, column: 21, scope: !14846)
!14846 = distinct !DILexicalBlock(scope: !14847, file: !1038, line: 702, column: 21)
!14847 = distinct !DILexicalBlock(scope: !14840, file: !1038, line: 702, column: 21)
!14848 = !DILocation(line: 702, column: 21, scope: !14847)
!14849 = !DILocation(line: 703, column: 21, scope: !14768)
!14850 = !DILocation(line: 703, column: 21, scope: !14851)
!14851 = distinct !DILexicalBlock(scope: !14852, file: !1038, line: 703, column: 21)
!14852 = distinct !DILexicalBlock(scope: !14768, file: !1038, line: 703, column: 21)
!14853 = !DILocation(line: 703, column: 21, scope: !14852)
!14854 = !DILocation(line: 704, column: 25, scope: !14768)
!14855 = !DILocation(line: 704, column: 29, scope: !14768)
!14856 = !DILocation(line: 704, column: 23, scope: !14768)
!14857 = !DILocation(line: 686, column: 17, scope: !14769)
!14858 = distinct !{!14858, !14859, !14860}
!14859 = !DILocation(line: 686, column: 17, scope: !14770)
!14860 = !DILocation(line: 705, column: 19, scope: !14770)
!14861 = !DILocation(line: 707, column: 17, scope: !14760)
!14862 = !DILocation(line: 710, column: 9, scope: !14374)
!14863 = !DILocation(line: 712, column: 16, scope: !14864)
!14864 = distinct !DILexicalBlock(scope: !14320, file: !1038, line: 712, column: 11)
!14865 = !DILocation(line: 712, column: 34, scope: !14864)
!14866 = !DILocation(line: 712, column: 37, scope: !14864)
!14867 = !DILocation(line: 712, column: 51, scope: !14864)
!14868 = !DILocation(line: 713, column: 15, scope: !14864)
!14869 = !DILocation(line: 713, column: 18, scope: !14864)
!14870 = !DILocation(line: 714, column: 14, scope: !14864)
!14871 = !DILocation(line: 714, column: 17, scope: !14864)
!14872 = !DILocation(line: 715, column: 14, scope: !14864)
!14873 = !DILocation(line: 715, column: 17, scope: !14864)
!14874 = !DILocation(line: 715, column: 33, scope: !14864)
!14875 = !DILocation(line: 715, column: 35, scope: !14864)
!14876 = !DILocation(line: 715, column: 51, scope: !14864)
!14877 = !DILocation(line: 715, column: 53, scope: !14864)
!14878 = !DILocation(line: 715, column: 47, scope: !14864)
!14879 = !DILocation(line: 715, column: 65, scope: !14864)
!14880 = !DILocation(line: 716, column: 11, scope: !14864)
!14881 = !DILocation(line: 716, column: 15, scope: !14864)
!14882 = !DILocation(line: 712, column: 11, scope: !14320)
!14883 = !DILocation(line: 717, column: 9, scope: !14864)
!14884 = !DILabel(scope: !14320, name: "store_escape", file: !1038, line: 719)
!14885 = !DILocation(line: 719, column: 5, scope: !14320)
!14886 = !DILocation(line: 720, column: 7, scope: !14320)
!14887 = !DILocation(line: 720, column: 7, scope: !14888)
!14888 = distinct !DILexicalBlock(scope: !14889, file: !1038, line: 720, column: 7)
!14889 = distinct !DILexicalBlock(scope: !14320, file: !1038, line: 720, column: 7)
!14890 = !DILocation(line: 720, column: 7, scope: !14889)
!14891 = !DILocation(line: 720, column: 7, scope: !14892)
!14892 = distinct !DILexicalBlock(scope: !14889, file: !1038, line: 720, column: 7)
!14893 = !DILocation(line: 720, column: 7, scope: !14894)
!14894 = distinct !DILexicalBlock(scope: !14892, file: !1038, line: 720, column: 7)
!14895 = !DILocation(line: 720, column: 7, scope: !14896)
!14896 = distinct !DILexicalBlock(scope: !14897, file: !1038, line: 720, column: 7)
!14897 = distinct !DILexicalBlock(scope: !14894, file: !1038, line: 720, column: 7)
!14898 = !DILocation(line: 720, column: 7, scope: !14897)
!14899 = !DILocation(line: 720, column: 7, scope: !14900)
!14900 = distinct !DILexicalBlock(scope: !14901, file: !1038, line: 720, column: 7)
!14901 = distinct !DILexicalBlock(scope: !14894, file: !1038, line: 720, column: 7)
!14902 = !DILocation(line: 720, column: 7, scope: !14901)
!14903 = !DILocation(line: 720, column: 7, scope: !14904)
!14904 = distinct !DILexicalBlock(scope: !14905, file: !1038, line: 720, column: 7)
!14905 = distinct !DILexicalBlock(scope: !14894, file: !1038, line: 720, column: 7)
!14906 = !DILocation(line: 720, column: 7, scope: !14905)
!14907 = !DILocation(line: 720, column: 7, scope: !14908)
!14908 = distinct !DILexicalBlock(scope: !14909, file: !1038, line: 720, column: 7)
!14909 = distinct !DILexicalBlock(scope: !14889, file: !1038, line: 720, column: 7)
!14910 = !DILocation(line: 720, column: 7, scope: !14909)
!14911 = !DILabel(scope: !14320, name: "store_c", file: !1038, line: 722)
!14912 = !DILocation(line: 722, column: 5, scope: !14320)
!14913 = !DILocation(line: 723, column: 7, scope: !14320)
!14914 = !DILocation(line: 723, column: 7, scope: !14915)
!14915 = distinct !DILexicalBlock(scope: !14916, file: !1038, line: 723, column: 7)
!14916 = distinct !DILexicalBlock(scope: !14320, file: !1038, line: 723, column: 7)
!14917 = !DILocation(line: 723, column: 7, scope: !14916)
!14918 = !DILocation(line: 723, column: 7, scope: !14919)
!14919 = distinct !DILexicalBlock(scope: !14915, file: !1038, line: 723, column: 7)
!14920 = !DILocation(line: 723, column: 7, scope: !14921)
!14921 = distinct !DILexicalBlock(scope: !14922, file: !1038, line: 723, column: 7)
!14922 = distinct !DILexicalBlock(scope: !14919, file: !1038, line: 723, column: 7)
!14923 = !DILocation(line: 723, column: 7, scope: !14922)
!14924 = !DILocation(line: 723, column: 7, scope: !14925)
!14925 = distinct !DILexicalBlock(scope: !14926, file: !1038, line: 723, column: 7)
!14926 = distinct !DILexicalBlock(scope: !14919, file: !1038, line: 723, column: 7)
!14927 = !DILocation(line: 723, column: 7, scope: !14926)
!14928 = !DILocation(line: 724, column: 7, scope: !14320)
!14929 = !DILocation(line: 724, column: 7, scope: !14930)
!14930 = distinct !DILexicalBlock(scope: !14931, file: !1038, line: 724, column: 7)
!14931 = distinct !DILexicalBlock(scope: !14320, file: !1038, line: 724, column: 7)
!14932 = !DILocation(line: 724, column: 7, scope: !14931)
!14933 = !DILocation(line: 726, column: 13, scope: !14934)
!14934 = distinct !DILexicalBlock(scope: !14320, file: !1038, line: 726, column: 11)
!14935 = !DILocation(line: 726, column: 11, scope: !14320)
!14936 = !DILocation(line: 727, column: 38, scope: !14934)
!14937 = !DILocation(line: 727, column: 9, scope: !14934)
!14938 = !DILocation(line: 728, column: 5, scope: !14320)
!14939 = !DILocation(line: 400, column: 75, scope: !14309)
!14940 = !DILocation(line: 400, column: 3, scope: !14309)
!14941 = distinct !{!14941, !14318, !14942}
!14942 = !DILocation(line: 728, column: 5, scope: !14306)
!14943 = !DILocation(line: 730, column: 7, scope: !14944)
!14944 = distinct !DILexicalBlock(scope: !14170, file: !1038, line: 730, column: 7)
!14945 = !DILocation(line: 730, column: 11, scope: !14944)
!14946 = !DILocation(line: 730, column: 16, scope: !14944)
!14947 = !DILocation(line: 730, column: 19, scope: !14944)
!14948 = !DILocation(line: 730, column: 33, scope: !14944)
!14949 = !DILocation(line: 731, column: 7, scope: !14944)
!14950 = !DILocation(line: 731, column: 10, scope: !14944)
!14951 = !DILocation(line: 730, column: 7, scope: !14170)
!14952 = !DILocation(line: 732, column: 5, scope: !14944)
!14953 = !DILocation(line: 738, column: 7, scope: !14954)
!14954 = distinct !DILexicalBlock(scope: !14170, file: !1038, line: 738, column: 7)
!14955 = !DILocation(line: 738, column: 21, scope: !14954)
!14956 = !DILocation(line: 738, column: 51, scope: !14954)
!14957 = !DILocation(line: 738, column: 56, scope: !14954)
!14958 = !DILocation(line: 739, column: 7, scope: !14954)
!14959 = !DILocation(line: 739, column: 10, scope: !14954)
!14960 = !DILocation(line: 738, column: 7, scope: !14170)
!14961 = !DILocation(line: 741, column: 11, scope: !14962)
!14962 = distinct !DILexicalBlock(scope: !14963, file: !1038, line: 741, column: 11)
!14963 = distinct !DILexicalBlock(scope: !14954, file: !1038, line: 740, column: 5)
!14964 = !DILocation(line: 741, column: 11, scope: !14963)
!14965 = !DILocation(line: 742, column: 42, scope: !14962)
!14966 = !DILocation(line: 742, column: 50, scope: !14962)
!14967 = !DILocation(line: 742, column: 67, scope: !14962)
!14968 = !DILocation(line: 742, column: 72, scope: !14962)
!14969 = !DILocation(line: 744, column: 42, scope: !14962)
!14970 = !DILocation(line: 744, column: 49, scope: !14962)
!14971 = !DILocation(line: 745, column: 42, scope: !14962)
!14972 = !DILocation(line: 745, column: 54, scope: !14962)
!14973 = !DILocation(line: 742, column: 16, scope: !14962)
!14974 = !DILocation(line: 742, column: 9, scope: !14962)
!14975 = !DILocation(line: 746, column: 18, scope: !14976)
!14976 = distinct !DILexicalBlock(scope: !14962, file: !1038, line: 746, column: 16)
!14977 = !DILocation(line: 746, column: 29, scope: !14976)
!14978 = !DILocation(line: 746, column: 32, scope: !14976)
!14979 = !DILocation(line: 746, column: 16, scope: !14962)
!14980 = !DILocation(line: 749, column: 24, scope: !14981)
!14981 = distinct !DILexicalBlock(scope: !14976, file: !1038, line: 747, column: 9)
!14982 = !DILocation(line: 749, column: 22, scope: !14981)
!14983 = !DILocation(line: 750, column: 15, scope: !14981)
!14984 = !DILocation(line: 751, column: 11, scope: !14981)
!14985 = !DILocation(line: 753, column: 5, scope: !14963)
!14986 = !DILocation(line: 755, column: 7, scope: !14987)
!14987 = distinct !DILexicalBlock(scope: !14170, file: !1038, line: 755, column: 7)
!14988 = !DILocation(line: 755, column: 20, scope: !14987)
!14989 = !DILocation(line: 755, column: 24, scope: !14987)
!14990 = !DILocation(line: 755, column: 7, scope: !14170)
!14991 = !DILocation(line: 756, column: 5, scope: !14987)
!14992 = !DILocation(line: 756, column: 13, scope: !14993)
!14993 = distinct !DILexicalBlock(scope: !14994, file: !1038, line: 756, column: 5)
!14994 = distinct !DILexicalBlock(scope: !14987, file: !1038, line: 756, column: 5)
!14995 = !DILocation(line: 756, column: 12, scope: !14993)
!14996 = !DILocation(line: 756, column: 5, scope: !14994)
!14997 = !DILocation(line: 757, column: 7, scope: !14993)
!14998 = !DILocation(line: 757, column: 7, scope: !14999)
!14999 = distinct !DILexicalBlock(scope: !15000, file: !1038, line: 757, column: 7)
!15000 = distinct !DILexicalBlock(scope: !14993, file: !1038, line: 757, column: 7)
!15001 = !DILocation(line: 757, column: 7, scope: !15000)
!15002 = !DILocation(line: 756, column: 39, scope: !14993)
!15003 = !DILocation(line: 756, column: 5, scope: !14993)
!15004 = distinct !{!15004, !14996, !15005}
!15005 = !DILocation(line: 757, column: 7, scope: !14994)
!15006 = !DILocation(line: 759, column: 7, scope: !15007)
!15007 = distinct !DILexicalBlock(scope: !14170, file: !1038, line: 759, column: 7)
!15008 = !DILocation(line: 759, column: 13, scope: !15007)
!15009 = !DILocation(line: 759, column: 11, scope: !15007)
!15010 = !DILocation(line: 759, column: 7, scope: !14170)
!15011 = !DILocation(line: 760, column: 5, scope: !15007)
!15012 = !DILocation(line: 760, column: 12, scope: !15007)
!15013 = !DILocation(line: 760, column: 17, scope: !15007)
!15014 = !DILocation(line: 761, column: 10, scope: !14170)
!15015 = !DILocation(line: 761, column: 3, scope: !14170)
!15016 = !DILabel(scope: !14170, name: "force_outer_quoting_style", file: !1038, line: 763)
!15017 = !DILocation(line: 763, column: 2, scope: !14170)
!15018 = !DILocation(line: 766, column: 7, scope: !15019)
!15019 = distinct !DILexicalBlock(scope: !14170, file: !1038, line: 766, column: 7)
!15020 = !DILocation(line: 766, column: 21, scope: !15019)
!15021 = !DILocation(line: 766, column: 51, scope: !15019)
!15022 = !DILocation(line: 766, column: 54, scope: !15019)
!15023 = !DILocation(line: 766, column: 7, scope: !14170)
!15024 = !DILocation(line: 767, column: 19, scope: !15019)
!15025 = !DILocation(line: 767, column: 5, scope: !15019)
!15026 = !DILocation(line: 768, column: 36, scope: !14170)
!15027 = !DILocation(line: 768, column: 44, scope: !14170)
!15028 = !DILocation(line: 768, column: 56, scope: !14170)
!15029 = !DILocation(line: 768, column: 61, scope: !14170)
!15030 = !DILocation(line: 769, column: 36, scope: !14170)
!15031 = !DILocation(line: 770, column: 36, scope: !14170)
!15032 = !DILocation(line: 770, column: 42, scope: !14170)
!15033 = !DILocation(line: 771, column: 36, scope: !14170)
!15034 = !DILocation(line: 771, column: 48, scope: !14170)
!15035 = !DILocation(line: 768, column: 10, scope: !14170)
!15036 = !DILocation(line: 768, column: 3, scope: !14170)
!15037 = !DILocation(line: 772, column: 1, scope: !14170)
!15038 = distinct !DISubprogram(name: "gettext_quote", scope: !1038, file: !1038, line: 207, type: !1126, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1009, retainedNodes: !209)
!15039 = !DILocalVariable(name: "msgid", arg: 1, scope: !15038, file: !1038, line: 207, type: !180)
!15040 = !DILocation(line: 207, column: 28, scope: !15038)
!15041 = !DILocalVariable(name: "s", arg: 2, scope: !15038, file: !1038, line: 207, type: !1012)
!15042 = !DILocation(line: 207, column: 54, scope: !15038)
!15043 = !DILocalVariable(name: "translation", scope: !15038, file: !1038, line: 209, type: !180)
!15044 = !DILocation(line: 209, column: 15, scope: !15038)
!15045 = !DILocation(line: 209, column: 29, scope: !15038)
!15046 = !DILocalVariable(name: "locale_code", scope: !15038, file: !1038, line: 210, type: !180)
!15047 = !DILocation(line: 210, column: 15, scope: !15038)
!15048 = !DILocation(line: 212, column: 7, scope: !15049)
!15049 = distinct !DILexicalBlock(scope: !15038, file: !1038, line: 212, column: 7)
!15050 = !DILocation(line: 212, column: 22, scope: !15049)
!15051 = !DILocation(line: 212, column: 19, scope: !15049)
!15052 = !DILocation(line: 212, column: 7, scope: !15038)
!15053 = !DILocation(line: 213, column: 12, scope: !15049)
!15054 = !DILocation(line: 213, column: 5, scope: !15049)
!15055 = !DILocation(line: 233, column: 17, scope: !15038)
!15056 = !DILocation(line: 233, column: 15, scope: !15038)
!15057 = !DILocation(line: 234, column: 7, scope: !15058)
!15058 = distinct !DILexicalBlock(scope: !15038, file: !1038, line: 234, column: 7)
!15059 = !DILocation(line: 234, column: 7, scope: !15038)
!15060 = !DILocation(line: 235, column: 12, scope: !15058)
!15061 = !DILocation(line: 235, column: 21, scope: !15058)
!15062 = !DILocation(line: 235, column: 5, scope: !15058)
!15063 = !DILocation(line: 236, column: 7, scope: !15064)
!15064 = distinct !DILexicalBlock(scope: !15038, file: !1038, line: 236, column: 7)
!15065 = !DILocation(line: 236, column: 7, scope: !15038)
!15066 = !DILocation(line: 237, column: 12, scope: !15064)
!15067 = !DILocation(line: 237, column: 21, scope: !15064)
!15068 = !DILocation(line: 237, column: 5, scope: !15064)
!15069 = !DILocation(line: 239, column: 11, scope: !15038)
!15070 = !DILocation(line: 239, column: 13, scope: !15038)
!15071 = !DILocation(line: 239, column: 3, scope: !15038)
!15072 = !DILocation(line: 240, column: 1, scope: !15038)
!15073 = distinct !DISubprogram(name: "quotearg_alloc", scope: !1038, file: !1038, line: 799, type: !1061, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !209)
!15074 = !DILocalVariable(name: "arg", arg: 1, scope: !15073, file: !1038, line: 799, type: !180)
!15075 = !DILocation(line: 799, column: 29, scope: !15073)
!15076 = !DILocalVariable(name: "argsize", arg: 2, scope: !15073, file: !1038, line: 799, type: !55)
!15077 = !DILocation(line: 799, column: 41, scope: !15073)
!15078 = !DILocalVariable(name: "o", arg: 3, scope: !15073, file: !1038, line: 800, type: !1048)
!15079 = !DILocation(line: 800, column: 47, scope: !15073)
!15080 = !DILocation(line: 802, column: 30, scope: !15073)
!15081 = !DILocation(line: 802, column: 35, scope: !15073)
!15082 = !DILocation(line: 802, column: 50, scope: !15073)
!15083 = !DILocation(line: 802, column: 10, scope: !15073)
!15084 = !DILocation(line: 802, column: 3, scope: !15073)
!15085 = distinct !DISubprogram(name: "quotearg_alloc_mem", scope: !1038, file: !1038, line: 812, type: !1063, scopeLine: 814, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !209)
!15086 = !DILocalVariable(name: "arg", arg: 1, scope: !15085, file: !1038, line: 812, type: !180)
!15087 = !DILocation(line: 812, column: 33, scope: !15085)
!15088 = !DILocalVariable(name: "argsize", arg: 2, scope: !15085, file: !1038, line: 812, type: !55)
!15089 = !DILocation(line: 812, column: 45, scope: !15085)
!15090 = !DILocalVariable(name: "size", arg: 3, scope: !15085, file: !1038, line: 812, type: !712)
!15091 = !DILocation(line: 812, column: 62, scope: !15085)
!15092 = !DILocalVariable(name: "o", arg: 4, scope: !15085, file: !1038, line: 813, type: !1048)
!15093 = !DILocation(line: 813, column: 51, scope: !15085)
!15094 = !DILocalVariable(name: "p", scope: !15085, file: !1038, line: 815, type: !1048)
!15095 = !DILocation(line: 815, column: 33, scope: !15085)
!15096 = !DILocation(line: 815, column: 37, scope: !15085)
!15097 = !DILocation(line: 815, column: 41, scope: !15085)
!15098 = !DILocalVariable(name: "e", scope: !15085, file: !1038, line: 816, type: !7)
!15099 = !DILocation(line: 816, column: 7, scope: !15085)
!15100 = !DILocation(line: 816, column: 11, scope: !15085)
!15101 = !DILocalVariable(name: "flags", scope: !15085, file: !1038, line: 818, type: !7)
!15102 = !DILocation(line: 818, column: 7, scope: !15085)
!15103 = !DILocation(line: 818, column: 15, scope: !15085)
!15104 = !DILocation(line: 818, column: 18, scope: !15085)
!15105 = !DILocation(line: 818, column: 27, scope: !15085)
!15106 = !DILocation(line: 818, column: 24, scope: !15085)
!15107 = !DILocalVariable(name: "bufsize", scope: !15085, file: !1038, line: 819, type: !55)
!15108 = !DILocation(line: 819, column: 10, scope: !15085)
!15109 = !DILocation(line: 819, column: 52, scope: !15085)
!15110 = !DILocation(line: 819, column: 57, scope: !15085)
!15111 = !DILocation(line: 819, column: 66, scope: !15085)
!15112 = !DILocation(line: 819, column: 69, scope: !15085)
!15113 = !DILocation(line: 820, column: 46, scope: !15085)
!15114 = !DILocation(line: 820, column: 53, scope: !15085)
!15115 = !DILocation(line: 820, column: 56, scope: !15085)
!15116 = !DILocation(line: 821, column: 46, scope: !15085)
!15117 = !DILocation(line: 821, column: 49, scope: !15085)
!15118 = !DILocation(line: 822, column: 46, scope: !15085)
!15119 = !DILocation(line: 822, column: 49, scope: !15085)
!15120 = !DILocation(line: 819, column: 20, scope: !15085)
!15121 = !DILocation(line: 822, column: 62, scope: !15085)
!15122 = !DILocalVariable(name: "buf", scope: !15085, file: !1038, line: 823, type: !9)
!15123 = !DILocation(line: 823, column: 9, scope: !15085)
!15124 = !DILocation(line: 823, column: 27, scope: !15085)
!15125 = !DILocation(line: 823, column: 15, scope: !15085)
!15126 = !DILocation(line: 824, column: 29, scope: !15085)
!15127 = !DILocation(line: 824, column: 34, scope: !15085)
!15128 = !DILocation(line: 824, column: 43, scope: !15085)
!15129 = !DILocation(line: 824, column: 48, scope: !15085)
!15130 = !DILocation(line: 824, column: 57, scope: !15085)
!15131 = !DILocation(line: 824, column: 60, scope: !15085)
!15132 = !DILocation(line: 824, column: 67, scope: !15085)
!15133 = !DILocation(line: 825, column: 29, scope: !15085)
!15134 = !DILocation(line: 825, column: 32, scope: !15085)
!15135 = !DILocation(line: 826, column: 29, scope: !15085)
!15136 = !DILocation(line: 826, column: 32, scope: !15085)
!15137 = !DILocation(line: 826, column: 44, scope: !15085)
!15138 = !DILocation(line: 826, column: 47, scope: !15085)
!15139 = !DILocation(line: 824, column: 3, scope: !15085)
!15140 = !DILocation(line: 827, column: 11, scope: !15085)
!15141 = !DILocation(line: 827, column: 3, scope: !15085)
!15142 = !DILocation(line: 827, column: 9, scope: !15085)
!15143 = !DILocation(line: 828, column: 7, scope: !15144)
!15144 = distinct !DILexicalBlock(scope: !15085, file: !1038, line: 828, column: 7)
!15145 = !DILocation(line: 828, column: 7, scope: !15085)
!15146 = !DILocation(line: 829, column: 13, scope: !15144)
!15147 = !DILocation(line: 829, column: 21, scope: !15144)
!15148 = !DILocation(line: 829, column: 6, scope: !15144)
!15149 = !DILocation(line: 829, column: 11, scope: !15144)
!15150 = !DILocation(line: 829, column: 5, scope: !15144)
!15151 = !DILocation(line: 830, column: 10, scope: !15085)
!15152 = !DILocation(line: 830, column: 3, scope: !15085)
!15153 = distinct !DISubprogram(name: "quotearg_free", scope: !1038, file: !1038, line: 848, type: !200, scopeLine: 849, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !209)
!15154 = !DILocalVariable(name: "sv", scope: !15153, file: !1038, line: 850, type: !1065)
!15155 = !DILocation(line: 850, column: 19, scope: !15153)
!15156 = !DILocation(line: 850, column: 24, scope: !15153)
!15157 = !DILocalVariable(name: "i", scope: !15153, file: !1038, line: 851, type: !7)
!15158 = !DILocation(line: 851, column: 7, scope: !15153)
!15159 = !DILocation(line: 852, column: 10, scope: !15160)
!15160 = distinct !DILexicalBlock(scope: !15153, file: !1038, line: 852, column: 3)
!15161 = !DILocation(line: 852, column: 8, scope: !15160)
!15162 = !DILocation(line: 852, column: 15, scope: !15163)
!15163 = distinct !DILexicalBlock(scope: !15160, file: !1038, line: 852, column: 3)
!15164 = !DILocation(line: 852, column: 19, scope: !15163)
!15165 = !DILocation(line: 852, column: 17, scope: !15163)
!15166 = !DILocation(line: 852, column: 3, scope: !15160)
!15167 = !DILocation(line: 853, column: 11, scope: !15163)
!15168 = !DILocation(line: 853, column: 14, scope: !15163)
!15169 = !DILocation(line: 853, column: 17, scope: !15163)
!15170 = !{!15171, !2646, i64 8}
!15171 = !{!"slotvec", !2913, i64 0, !2646, i64 8}
!15172 = !DILocation(line: 853, column: 5, scope: !15163)
!15173 = !DILocation(line: 852, column: 28, scope: !15163)
!15174 = !DILocation(line: 852, column: 3, scope: !15163)
!15175 = distinct !{!15175, !15166, !15176}
!15176 = !DILocation(line: 853, column: 20, scope: !15160)
!15177 = !DILocation(line: 854, column: 7, scope: !15178)
!15178 = distinct !DILexicalBlock(scope: !15153, file: !1038, line: 854, column: 7)
!15179 = !DILocation(line: 854, column: 13, scope: !15178)
!15180 = !DILocation(line: 854, column: 17, scope: !15178)
!15181 = !DILocation(line: 854, column: 7, scope: !15153)
!15182 = !DILocation(line: 856, column: 13, scope: !15183)
!15183 = distinct !DILexicalBlock(scope: !15178, file: !1038, line: 855, column: 5)
!15184 = !DILocation(line: 856, column: 19, scope: !15183)
!15185 = !DILocation(line: 856, column: 7, scope: !15183)
!15186 = !DILocation(line: 857, column: 21, scope: !15183)
!15187 = !{!15171, !2913, i64 0}
!15188 = !DILocation(line: 858, column: 20, scope: !15183)
!15189 = !DILocation(line: 859, column: 5, scope: !15183)
!15190 = !DILocation(line: 860, column: 7, scope: !15191)
!15191 = distinct !DILexicalBlock(scope: !15153, file: !1038, line: 860, column: 7)
!15192 = !DILocation(line: 860, column: 10, scope: !15191)
!15193 = !DILocation(line: 860, column: 7, scope: !15153)
!15194 = !DILocation(line: 862, column: 13, scope: !15195)
!15195 = distinct !DILexicalBlock(scope: !15191, file: !1038, line: 861, column: 5)
!15196 = !DILocation(line: 862, column: 7, scope: !15195)
!15197 = !DILocation(line: 863, column: 15, scope: !15195)
!15198 = !DILocation(line: 864, column: 5, scope: !15195)
!15199 = !DILocation(line: 865, column: 10, scope: !15153)
!15200 = !DILocation(line: 866, column: 1, scope: !15153)
!15201 = distinct !DISubprogram(name: "quotearg_n", scope: !1038, file: !1038, line: 931, type: !1070, scopeLine: 932, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !209)
!15202 = !DILocalVariable(name: "n", arg: 1, scope: !15201, file: !1038, line: 931, type: !7)
!15203 = !DILocation(line: 931, column: 17, scope: !15201)
!15204 = !DILocalVariable(name: "arg", arg: 2, scope: !15201, file: !1038, line: 931, type: !180)
!15205 = !DILocation(line: 931, column: 32, scope: !15201)
!15206 = !DILocation(line: 933, column: 30, scope: !15201)
!15207 = !DILocation(line: 933, column: 33, scope: !15201)
!15208 = !DILocation(line: 933, column: 10, scope: !15201)
!15209 = !DILocation(line: 933, column: 3, scope: !15201)
!15210 = distinct !DISubprogram(name: "quotearg_n_options", scope: !1038, file: !1038, line: 877, type: !1128, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1009, retainedNodes: !209)
!15211 = !DILocalVariable(name: "n", arg: 1, scope: !15210, file: !1038, line: 877, type: !7)
!15212 = !DILocation(line: 877, column: 25, scope: !15210)
!15213 = !DILocalVariable(name: "arg", arg: 2, scope: !15210, file: !1038, line: 877, type: !180)
!15214 = !DILocation(line: 877, column: 40, scope: !15210)
!15215 = !DILocalVariable(name: "argsize", arg: 3, scope: !15210, file: !1038, line: 877, type: !55)
!15216 = !DILocation(line: 877, column: 52, scope: !15210)
!15217 = !DILocalVariable(name: "options", arg: 4, scope: !15210, file: !1038, line: 878, type: !1048)
!15218 = !DILocation(line: 878, column: 51, scope: !15210)
!15219 = !DILocalVariable(name: "e", scope: !15210, file: !1038, line: 880, type: !7)
!15220 = !DILocation(line: 880, column: 7, scope: !15210)
!15221 = !DILocation(line: 880, column: 11, scope: !15210)
!15222 = !DILocalVariable(name: "sv", scope: !15210, file: !1038, line: 882, type: !1065)
!15223 = !DILocation(line: 882, column: 19, scope: !15210)
!15224 = !DILocation(line: 882, column: 24, scope: !15210)
!15225 = !DILocation(line: 884, column: 7, scope: !15226)
!15226 = distinct !DILexicalBlock(scope: !15210, file: !1038, line: 884, column: 7)
!15227 = !DILocation(line: 884, column: 9, scope: !15226)
!15228 = !DILocation(line: 884, column: 7, scope: !15210)
!15229 = !DILocation(line: 885, column: 5, scope: !15226)
!15230 = !DILocation(line: 887, column: 7, scope: !15231)
!15231 = distinct !DILexicalBlock(scope: !15210, file: !1038, line: 887, column: 7)
!15232 = !DILocation(line: 887, column: 17, scope: !15231)
!15233 = !DILocation(line: 887, column: 14, scope: !15231)
!15234 = !DILocation(line: 887, column: 7, scope: !15210)
!15235 = !DILocalVariable(name: "preallocated", scope: !15236, file: !1038, line: 889, type: !142)
!15236 = distinct !DILexicalBlock(scope: !15231, file: !1038, line: 888, column: 5)
!15237 = !DILocation(line: 889, column: 12, scope: !15236)
!15238 = !DILocation(line: 889, column: 28, scope: !15236)
!15239 = !DILocation(line: 889, column: 31, scope: !15236)
!15240 = !DILocalVariable(name: "nmax", scope: !15236, file: !1038, line: 890, type: !7)
!15241 = !DILocation(line: 890, column: 11, scope: !15236)
!15242 = !DILocation(line: 892, column: 11, scope: !15243)
!15243 = distinct !DILexicalBlock(scope: !15236, file: !1038, line: 892, column: 11)
!15244 = !DILocation(line: 892, column: 18, scope: !15243)
!15245 = !DILocation(line: 892, column: 16, scope: !15243)
!15246 = !DILocation(line: 892, column: 11, scope: !15236)
!15247 = !DILocation(line: 893, column: 9, scope: !15243)
!15248 = !DILocation(line: 895, column: 32, scope: !15236)
!15249 = !DILocation(line: 895, column: 54, scope: !15236)
!15250 = !DILocation(line: 895, column: 59, scope: !15236)
!15251 = !DILocation(line: 895, column: 61, scope: !15236)
!15252 = !DILocation(line: 895, column: 58, scope: !15236)
!15253 = !DILocation(line: 895, column: 66, scope: !15236)
!15254 = !DILocation(line: 895, column: 22, scope: !15236)
!15255 = !DILocation(line: 895, column: 20, scope: !15236)
!15256 = !DILocation(line: 895, column: 15, scope: !15236)
!15257 = !DILocation(line: 896, column: 11, scope: !15258)
!15258 = distinct !DILexicalBlock(scope: !15236, file: !1038, line: 896, column: 11)
!15259 = !DILocation(line: 896, column: 11, scope: !15236)
!15260 = !DILocation(line: 897, column: 10, scope: !15258)
!15261 = !DILocation(line: 897, column: 15, scope: !15258)
!15262 = !{i64 0, i64 8, !3285, i64 8, i64 8, !2645}
!15263 = !DILocation(line: 897, column: 9, scope: !15258)
!15264 = !DILocation(line: 898, column: 15, scope: !15236)
!15265 = !DILocation(line: 898, column: 20, scope: !15236)
!15266 = !DILocation(line: 898, column: 18, scope: !15236)
!15267 = !DILocation(line: 898, column: 7, scope: !15236)
!15268 = !DILocation(line: 898, column: 32, scope: !15236)
!15269 = !DILocation(line: 898, column: 34, scope: !15236)
!15270 = !DILocation(line: 898, column: 40, scope: !15236)
!15271 = !DILocation(line: 898, column: 38, scope: !15236)
!15272 = !DILocation(line: 898, column: 31, scope: !15236)
!15273 = !DILocation(line: 898, column: 48, scope: !15236)
!15274 = !DILocation(line: 899, column: 16, scope: !15236)
!15275 = !DILocation(line: 899, column: 18, scope: !15236)
!15276 = !DILocation(line: 899, column: 14, scope: !15236)
!15277 = !DILocation(line: 900, column: 5, scope: !15236)
!15278 = !DILocalVariable(name: "size", scope: !15279, file: !1038, line: 903, type: !55)
!15279 = distinct !DILexicalBlock(scope: !15210, file: !1038, line: 902, column: 3)
!15280 = !DILocation(line: 903, column: 12, scope: !15279)
!15281 = !DILocation(line: 903, column: 19, scope: !15279)
!15282 = !DILocation(line: 903, column: 22, scope: !15279)
!15283 = !DILocation(line: 903, column: 25, scope: !15279)
!15284 = !DILocalVariable(name: "val", scope: !15279, file: !1038, line: 904, type: !9)
!15285 = !DILocation(line: 904, column: 11, scope: !15279)
!15286 = !DILocation(line: 904, column: 17, scope: !15279)
!15287 = !DILocation(line: 904, column: 20, scope: !15279)
!15288 = !DILocation(line: 904, column: 23, scope: !15279)
!15289 = !DILocalVariable(name: "flags", scope: !15279, file: !1038, line: 906, type: !7)
!15290 = !DILocation(line: 906, column: 9, scope: !15279)
!15291 = !DILocation(line: 906, column: 17, scope: !15279)
!15292 = !DILocation(line: 906, column: 26, scope: !15279)
!15293 = !DILocation(line: 906, column: 32, scope: !15279)
!15294 = !DILocalVariable(name: "qsize", scope: !15279, file: !1038, line: 907, type: !55)
!15295 = !DILocation(line: 907, column: 12, scope: !15279)
!15296 = !DILocation(line: 907, column: 46, scope: !15279)
!15297 = !DILocation(line: 907, column: 51, scope: !15279)
!15298 = !DILocation(line: 907, column: 57, scope: !15279)
!15299 = !DILocation(line: 907, column: 62, scope: !15279)
!15300 = !DILocation(line: 908, column: 46, scope: !15279)
!15301 = !DILocation(line: 908, column: 55, scope: !15279)
!15302 = !DILocation(line: 908, column: 62, scope: !15279)
!15303 = !DILocation(line: 909, column: 46, scope: !15279)
!15304 = !DILocation(line: 909, column: 55, scope: !15279)
!15305 = !DILocation(line: 910, column: 46, scope: !15279)
!15306 = !DILocation(line: 910, column: 55, scope: !15279)
!15307 = !DILocation(line: 911, column: 46, scope: !15279)
!15308 = !DILocation(line: 911, column: 55, scope: !15279)
!15309 = !DILocation(line: 907, column: 20, scope: !15279)
!15310 = !DILocation(line: 913, column: 9, scope: !15311)
!15311 = distinct !DILexicalBlock(scope: !15279, file: !1038, line: 913, column: 9)
!15312 = !DILocation(line: 913, column: 17, scope: !15311)
!15313 = !DILocation(line: 913, column: 14, scope: !15311)
!15314 = !DILocation(line: 913, column: 9, scope: !15279)
!15315 = !DILocation(line: 915, column: 29, scope: !15316)
!15316 = distinct !DILexicalBlock(scope: !15311, file: !1038, line: 914, column: 7)
!15317 = !DILocation(line: 915, column: 35, scope: !15316)
!15318 = !DILocation(line: 915, column: 27, scope: !15316)
!15319 = !DILocation(line: 915, column: 9, scope: !15316)
!15320 = !DILocation(line: 915, column: 12, scope: !15316)
!15321 = !DILocation(line: 915, column: 15, scope: !15316)
!15322 = !DILocation(line: 915, column: 20, scope: !15316)
!15323 = !DILocation(line: 916, column: 13, scope: !15324)
!15324 = distinct !DILexicalBlock(scope: !15316, file: !1038, line: 916, column: 13)
!15325 = !DILocation(line: 916, column: 17, scope: !15324)
!15326 = !DILocation(line: 916, column: 13, scope: !15316)
!15327 = !DILocation(line: 917, column: 17, scope: !15324)
!15328 = !DILocation(line: 917, column: 11, scope: !15324)
!15329 = !DILocation(line: 918, column: 39, scope: !15316)
!15330 = !DILocation(line: 918, column: 27, scope: !15316)
!15331 = !DILocation(line: 918, column: 25, scope: !15316)
!15332 = !DILocation(line: 918, column: 9, scope: !15316)
!15333 = !DILocation(line: 918, column: 12, scope: !15316)
!15334 = !DILocation(line: 918, column: 15, scope: !15316)
!15335 = !DILocation(line: 918, column: 19, scope: !15316)
!15336 = !DILocation(line: 919, column: 35, scope: !15316)
!15337 = !DILocation(line: 919, column: 40, scope: !15316)
!15338 = !DILocation(line: 919, column: 46, scope: !15316)
!15339 = !DILocation(line: 919, column: 51, scope: !15316)
!15340 = !DILocation(line: 919, column: 60, scope: !15316)
!15341 = !DILocation(line: 919, column: 69, scope: !15316)
!15342 = !DILocation(line: 920, column: 35, scope: !15316)
!15343 = !DILocation(line: 920, column: 42, scope: !15316)
!15344 = !DILocation(line: 920, column: 51, scope: !15316)
!15345 = !DILocation(line: 921, column: 35, scope: !15316)
!15346 = !DILocation(line: 921, column: 44, scope: !15316)
!15347 = !DILocation(line: 922, column: 35, scope: !15316)
!15348 = !DILocation(line: 922, column: 44, scope: !15316)
!15349 = !DILocation(line: 919, column: 9, scope: !15316)
!15350 = !DILocation(line: 923, column: 7, scope: !15316)
!15351 = !DILocation(line: 925, column: 13, scope: !15279)
!15352 = !DILocation(line: 925, column: 5, scope: !15279)
!15353 = !DILocation(line: 925, column: 11, scope: !15279)
!15354 = !DILocation(line: 926, column: 12, scope: !15279)
!15355 = !DILocation(line: 926, column: 5, scope: !15279)
!15356 = distinct !DISubprogram(name: "quotearg_n_mem", scope: !1038, file: !1038, line: 937, type: !1072, scopeLine: 938, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !209)
!15357 = !DILocalVariable(name: "n", arg: 1, scope: !15356, file: !1038, line: 937, type: !7)
!15358 = !DILocation(line: 937, column: 21, scope: !15356)
!15359 = !DILocalVariable(name: "arg", arg: 2, scope: !15356, file: !1038, line: 937, type: !180)
!15360 = !DILocation(line: 937, column: 36, scope: !15356)
!15361 = !DILocalVariable(name: "argsize", arg: 3, scope: !15356, file: !1038, line: 937, type: !55)
!15362 = !DILocation(line: 937, column: 48, scope: !15356)
!15363 = !DILocation(line: 939, column: 30, scope: !15356)
!15364 = !DILocation(line: 939, column: 33, scope: !15356)
!15365 = !DILocation(line: 939, column: 38, scope: !15356)
!15366 = !DILocation(line: 939, column: 10, scope: !15356)
!15367 = !DILocation(line: 939, column: 3, scope: !15356)
!15368 = distinct !DISubprogram(name: "quotearg", scope: !1038, file: !1038, line: 943, type: !218, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !209)
!15369 = !DILocalVariable(name: "arg", arg: 1, scope: !15368, file: !1038, line: 943, type: !180)
!15370 = !DILocation(line: 943, column: 23, scope: !15368)
!15371 = !DILocation(line: 945, column: 25, scope: !15368)
!15372 = !DILocation(line: 945, column: 10, scope: !15368)
!15373 = !DILocation(line: 945, column: 3, scope: !15368)
!15374 = distinct !DISubprogram(name: "quotearg_mem", scope: !1038, file: !1038, line: 949, type: !1074, scopeLine: 950, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !209)
!15375 = !DILocalVariable(name: "arg", arg: 1, scope: !15374, file: !1038, line: 949, type: !180)
!15376 = !DILocation(line: 949, column: 27, scope: !15374)
!15377 = !DILocalVariable(name: "argsize", arg: 2, scope: !15374, file: !1038, line: 949, type: !55)
!15378 = !DILocation(line: 949, column: 39, scope: !15374)
!15379 = !DILocation(line: 951, column: 29, scope: !15374)
!15380 = !DILocation(line: 951, column: 34, scope: !15374)
!15381 = !DILocation(line: 951, column: 10, scope: !15374)
!15382 = !DILocation(line: 951, column: 3, scope: !15374)
!15383 = distinct !DISubprogram(name: "quotearg_n_style", scope: !1038, file: !1038, line: 955, type: !1076, scopeLine: 956, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !209)
!15384 = !DILocalVariable(name: "n", arg: 1, scope: !15383, file: !1038, line: 955, type: !7)
!15385 = !DILocation(line: 955, column: 23, scope: !15383)
!15386 = !DILocalVariable(name: "s", arg: 2, scope: !15383, file: !1038, line: 955, type: !1012)
!15387 = !DILocation(line: 955, column: 45, scope: !15383)
!15388 = !DILocalVariable(name: "arg", arg: 3, scope: !15383, file: !1038, line: 955, type: !180)
!15389 = !DILocation(line: 955, column: 60, scope: !15383)
!15390 = !DILocalVariable(name: "o", scope: !15383, file: !1038, line: 957, type: !1049)
!15391 = !DILocation(line: 957, column: 32, scope: !15383)
!15392 = !DILocation(line: 957, column: 64, scope: !15383)
!15393 = !DILocation(line: 957, column: 36, scope: !15383)
!15394 = !DILocation(line: 958, column: 30, scope: !15383)
!15395 = !DILocation(line: 958, column: 33, scope: !15383)
!15396 = !DILocation(line: 958, column: 10, scope: !15383)
!15397 = !DILocation(line: 958, column: 3, scope: !15383)
!15398 = distinct !DISubprogram(name: "quoting_options_from_style", scope: !1038, file: !1038, line: 193, type: !1130, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1009, retainedNodes: !209)
!15399 = !DILocalVariable(name: "style", arg: 1, scope: !15398, file: !1038, line: 193, type: !1012)
!15400 = !DILocation(line: 193, column: 48, scope: !15398)
!15401 = !DILocalVariable(name: "o", scope: !15398, file: !1038, line: 195, type: !1037)
!15402 = !DILocation(line: 195, column: 26, scope: !15398)
!15403 = !DILocation(line: 196, column: 7, scope: !15404)
!15404 = distinct !DILexicalBlock(scope: !15398, file: !1038, line: 196, column: 7)
!15405 = !DILocation(line: 196, column: 13, scope: !15404)
!15406 = !DILocation(line: 196, column: 7, scope: !15398)
!15407 = !DILocation(line: 197, column: 5, scope: !15404)
!15408 = !DILocation(line: 198, column: 13, scope: !15398)
!15409 = !DILocation(line: 198, column: 5, scope: !15398)
!15410 = !DILocation(line: 198, column: 11, scope: !15398)
!15411 = !DILocation(line: 199, column: 3, scope: !15398)
!15412 = distinct !DISubprogram(name: "quotearg_n_style_mem", scope: !1038, file: !1038, line: 962, type: !1078, scopeLine: 964, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !209)
!15413 = !DILocalVariable(name: "n", arg: 1, scope: !15412, file: !1038, line: 962, type: !7)
!15414 = !DILocation(line: 962, column: 27, scope: !15412)
!15415 = !DILocalVariable(name: "s", arg: 2, scope: !15412, file: !1038, line: 962, type: !1012)
!15416 = !DILocation(line: 962, column: 49, scope: !15412)
!15417 = !DILocalVariable(name: "arg", arg: 3, scope: !15412, file: !1038, line: 963, type: !180)
!15418 = !DILocation(line: 963, column: 35, scope: !15412)
!15419 = !DILocalVariable(name: "argsize", arg: 4, scope: !15412, file: !1038, line: 963, type: !55)
!15420 = !DILocation(line: 963, column: 47, scope: !15412)
!15421 = !DILocalVariable(name: "o", scope: !15412, file: !1038, line: 965, type: !1049)
!15422 = !DILocation(line: 965, column: 32, scope: !15412)
!15423 = !DILocation(line: 965, column: 64, scope: !15412)
!15424 = !DILocation(line: 965, column: 36, scope: !15412)
!15425 = !DILocation(line: 966, column: 30, scope: !15412)
!15426 = !DILocation(line: 966, column: 33, scope: !15412)
!15427 = !DILocation(line: 966, column: 38, scope: !15412)
!15428 = !DILocation(line: 966, column: 10, scope: !15412)
!15429 = !DILocation(line: 966, column: 3, scope: !15412)
!15430 = distinct !DISubprogram(name: "quotearg_style", scope: !1038, file: !1038, line: 970, type: !1080, scopeLine: 971, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !209)
!15431 = !DILocalVariable(name: "s", arg: 1, scope: !15430, file: !1038, line: 970, type: !1012)
!15432 = !DILocation(line: 970, column: 36, scope: !15430)
!15433 = !DILocalVariable(name: "arg", arg: 2, scope: !15430, file: !1038, line: 970, type: !180)
!15434 = !DILocation(line: 970, column: 51, scope: !15430)
!15435 = !DILocation(line: 972, column: 31, scope: !15430)
!15436 = !DILocation(line: 972, column: 34, scope: !15430)
!15437 = !DILocation(line: 972, column: 10, scope: !15430)
!15438 = !DILocation(line: 972, column: 3, scope: !15430)
!15439 = distinct !DISubprogram(name: "quotearg_style_mem", scope: !1038, file: !1038, line: 976, type: !1082, scopeLine: 977, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !209)
!15440 = !DILocalVariable(name: "s", arg: 1, scope: !15439, file: !1038, line: 976, type: !1012)
!15441 = !DILocation(line: 976, column: 40, scope: !15439)
!15442 = !DILocalVariable(name: "arg", arg: 2, scope: !15439, file: !1038, line: 976, type: !180)
!15443 = !DILocation(line: 976, column: 55, scope: !15439)
!15444 = !DILocalVariable(name: "argsize", arg: 3, scope: !15439, file: !1038, line: 976, type: !55)
!15445 = !DILocation(line: 976, column: 67, scope: !15439)
!15446 = !DILocation(line: 978, column: 35, scope: !15439)
!15447 = !DILocation(line: 978, column: 38, scope: !15439)
!15448 = !DILocation(line: 978, column: 43, scope: !15439)
!15449 = !DILocation(line: 978, column: 10, scope: !15439)
!15450 = !DILocation(line: 978, column: 3, scope: !15439)
!15451 = distinct !DISubprogram(name: "quotearg_char_mem", scope: !1038, file: !1038, line: 982, type: !1084, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !209)
!15452 = !DILocalVariable(name: "arg", arg: 1, scope: !15451, file: !1038, line: 982, type: !180)
!15453 = !DILocation(line: 982, column: 32, scope: !15451)
!15454 = !DILocalVariable(name: "argsize", arg: 2, scope: !15451, file: !1038, line: 982, type: !55)
!15455 = !DILocation(line: 982, column: 44, scope: !15451)
!15456 = !DILocalVariable(name: "ch", arg: 3, scope: !15451, file: !1038, line: 982, type: !10)
!15457 = !DILocation(line: 982, column: 58, scope: !15451)
!15458 = !DILocalVariable(name: "options", scope: !15451, file: !1038, line: 984, type: !1037)
!15459 = !DILocation(line: 984, column: 26, scope: !15451)
!15460 = !DILocation(line: 985, column: 13, scope: !15451)
!15461 = !{i64 0, i64 4, !3292, i64 4, i64 4, !2632, i64 8, i64 32, !3292, i64 40, i64 8, !2645, i64 48, i64 8, !2645}
!15462 = !DILocation(line: 986, column: 31, scope: !15451)
!15463 = !DILocation(line: 986, column: 3, scope: !15451)
!15464 = !DILocation(line: 987, column: 33, scope: !15451)
!15465 = !DILocation(line: 987, column: 38, scope: !15451)
!15466 = !DILocation(line: 987, column: 10, scope: !15451)
!15467 = !DILocation(line: 987, column: 3, scope: !15451)
!15468 = distinct !DISubprogram(name: "quotearg_char", scope: !1038, file: !1038, line: 991, type: !1086, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !209)
!15469 = !DILocalVariable(name: "arg", arg: 1, scope: !15468, file: !1038, line: 991, type: !180)
!15470 = !DILocation(line: 991, column: 28, scope: !15468)
!15471 = !DILocalVariable(name: "ch", arg: 2, scope: !15468, file: !1038, line: 991, type: !10)
!15472 = !DILocation(line: 991, column: 38, scope: !15468)
!15473 = !DILocation(line: 993, column: 29, scope: !15468)
!15474 = !DILocation(line: 993, column: 44, scope: !15468)
!15475 = !DILocation(line: 993, column: 10, scope: !15468)
!15476 = !DILocation(line: 993, column: 3, scope: !15468)
!15477 = distinct !DISubprogram(name: "quotearg_colon", scope: !1038, file: !1038, line: 997, type: !218, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !209)
!15478 = !DILocalVariable(name: "arg", arg: 1, scope: !15477, file: !1038, line: 997, type: !180)
!15479 = !DILocation(line: 997, column: 29, scope: !15477)
!15480 = !DILocation(line: 999, column: 25, scope: !15477)
!15481 = !DILocation(line: 999, column: 10, scope: !15477)
!15482 = !DILocation(line: 999, column: 3, scope: !15477)
!15483 = distinct !DISubprogram(name: "quotearg_colon_mem", scope: !1038, file: !1038, line: 1003, type: !1074, scopeLine: 1004, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !209)
!15484 = !DILocalVariable(name: "arg", arg: 1, scope: !15483, file: !1038, line: 1003, type: !180)
!15485 = !DILocation(line: 1003, column: 33, scope: !15483)
!15486 = !DILocalVariable(name: "argsize", arg: 2, scope: !15483, file: !1038, line: 1003, type: !55)
!15487 = !DILocation(line: 1003, column: 45, scope: !15483)
!15488 = !DILocation(line: 1005, column: 29, scope: !15483)
!15489 = !DILocation(line: 1005, column: 34, scope: !15483)
!15490 = !DILocation(line: 1005, column: 10, scope: !15483)
!15491 = !DILocation(line: 1005, column: 3, scope: !15483)
!15492 = distinct !DISubprogram(name: "quotearg_n_style_colon", scope: !1038, file: !1038, line: 1009, type: !1076, scopeLine: 1010, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !209)
!15493 = !DILocalVariable(name: "n", arg: 1, scope: !15492, file: !1038, line: 1009, type: !7)
!15494 = !DILocation(line: 1009, column: 29, scope: !15492)
!15495 = !DILocalVariable(name: "s", arg: 2, scope: !15492, file: !1038, line: 1009, type: !1012)
!15496 = !DILocation(line: 1009, column: 51, scope: !15492)
!15497 = !DILocalVariable(name: "arg", arg: 3, scope: !15492, file: !1038, line: 1009, type: !180)
!15498 = !DILocation(line: 1009, column: 66, scope: !15492)
!15499 = !DILocalVariable(name: "options", scope: !15492, file: !1038, line: 1011, type: !1037)
!15500 = !DILocation(line: 1011, column: 26, scope: !15492)
!15501 = !DILocation(line: 1012, column: 41, scope: !15492)
!15502 = !DILocation(line: 1012, column: 13, scope: !15492)
!15503 = !DILocation(line: 1013, column: 3, scope: !15492)
!15504 = !DILocation(line: 1014, column: 30, scope: !15492)
!15505 = !DILocation(line: 1014, column: 33, scope: !15492)
!15506 = !DILocation(line: 1014, column: 10, scope: !15492)
!15507 = !DILocation(line: 1014, column: 3, scope: !15492)
!15508 = distinct !DISubprogram(name: "quotearg_n_custom", scope: !1038, file: !1038, line: 1018, type: !1088, scopeLine: 1020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !209)
!15509 = !DILocalVariable(name: "n", arg: 1, scope: !15508, file: !1038, line: 1018, type: !7)
!15510 = !DILocation(line: 1018, column: 24, scope: !15508)
!15511 = !DILocalVariable(name: "left_quote", arg: 2, scope: !15508, file: !1038, line: 1018, type: !180)
!15512 = !DILocation(line: 1018, column: 39, scope: !15508)
!15513 = !DILocalVariable(name: "right_quote", arg: 3, scope: !15508, file: !1038, line: 1019, type: !180)
!15514 = !DILocation(line: 1019, column: 32, scope: !15508)
!15515 = !DILocalVariable(name: "arg", arg: 4, scope: !15508, file: !1038, line: 1019, type: !180)
!15516 = !DILocation(line: 1019, column: 57, scope: !15508)
!15517 = !DILocation(line: 1021, column: 33, scope: !15508)
!15518 = !DILocation(line: 1021, column: 36, scope: !15508)
!15519 = !DILocation(line: 1021, column: 48, scope: !15508)
!15520 = !DILocation(line: 1021, column: 61, scope: !15508)
!15521 = !DILocation(line: 1021, column: 10, scope: !15508)
!15522 = !DILocation(line: 1021, column: 3, scope: !15508)
!15523 = distinct !DISubprogram(name: "quotearg_n_custom_mem", scope: !1038, file: !1038, line: 1026, type: !1090, scopeLine: 1029, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !209)
!15524 = !DILocalVariable(name: "n", arg: 1, scope: !15523, file: !1038, line: 1026, type: !7)
!15525 = !DILocation(line: 1026, column: 28, scope: !15523)
!15526 = !DILocalVariable(name: "left_quote", arg: 2, scope: !15523, file: !1038, line: 1026, type: !180)
!15527 = !DILocation(line: 1026, column: 43, scope: !15523)
!15528 = !DILocalVariable(name: "right_quote", arg: 3, scope: !15523, file: !1038, line: 1027, type: !180)
!15529 = !DILocation(line: 1027, column: 36, scope: !15523)
!15530 = !DILocalVariable(name: "arg", arg: 4, scope: !15523, file: !1038, line: 1028, type: !180)
!15531 = !DILocation(line: 1028, column: 36, scope: !15523)
!15532 = !DILocalVariable(name: "argsize", arg: 5, scope: !15523, file: !1038, line: 1028, type: !55)
!15533 = !DILocation(line: 1028, column: 48, scope: !15523)
!15534 = !DILocalVariable(name: "o", scope: !15523, file: !1038, line: 1030, type: !1037)
!15535 = !DILocation(line: 1030, column: 26, scope: !15523)
!15536 = !DILocation(line: 1030, column: 30, scope: !15523)
!15537 = !DILocation(line: 1031, column: 27, scope: !15523)
!15538 = !DILocation(line: 1031, column: 39, scope: !15523)
!15539 = !DILocation(line: 1031, column: 3, scope: !15523)
!15540 = !DILocation(line: 1032, column: 30, scope: !15523)
!15541 = !DILocation(line: 1032, column: 33, scope: !15523)
!15542 = !DILocation(line: 1032, column: 38, scope: !15523)
!15543 = !DILocation(line: 1032, column: 10, scope: !15523)
!15544 = !DILocation(line: 1032, column: 3, scope: !15523)
!15545 = distinct !DISubprogram(name: "quotearg_custom", scope: !1038, file: !1038, line: 1036, type: !1092, scopeLine: 1038, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !209)
!15546 = !DILocalVariable(name: "left_quote", arg: 1, scope: !15545, file: !1038, line: 1036, type: !180)
!15547 = !DILocation(line: 1036, column: 30, scope: !15545)
!15548 = !DILocalVariable(name: "right_quote", arg: 2, scope: !15545, file: !1038, line: 1036, type: !180)
!15549 = !DILocation(line: 1036, column: 54, scope: !15545)
!15550 = !DILocalVariable(name: "arg", arg: 3, scope: !15545, file: !1038, line: 1037, type: !180)
!15551 = !DILocation(line: 1037, column: 30, scope: !15545)
!15552 = !DILocation(line: 1039, column: 32, scope: !15545)
!15553 = !DILocation(line: 1039, column: 44, scope: !15545)
!15554 = !DILocation(line: 1039, column: 57, scope: !15545)
!15555 = !DILocation(line: 1039, column: 10, scope: !15545)
!15556 = !DILocation(line: 1039, column: 3, scope: !15545)
!15557 = distinct !DISubprogram(name: "quotearg_custom_mem", scope: !1038, file: !1038, line: 1043, type: !1094, scopeLine: 1045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !209)
!15558 = !DILocalVariable(name: "left_quote", arg: 1, scope: !15557, file: !1038, line: 1043, type: !180)
!15559 = !DILocation(line: 1043, column: 34, scope: !15557)
!15560 = !DILocalVariable(name: "right_quote", arg: 2, scope: !15557, file: !1038, line: 1043, type: !180)
!15561 = !DILocation(line: 1043, column: 58, scope: !15557)
!15562 = !DILocalVariable(name: "arg", arg: 3, scope: !15557, file: !1038, line: 1044, type: !180)
!15563 = !DILocation(line: 1044, column: 34, scope: !15557)
!15564 = !DILocalVariable(name: "argsize", arg: 4, scope: !15557, file: !1038, line: 1044, type: !55)
!15565 = !DILocation(line: 1044, column: 46, scope: !15557)
!15566 = !DILocation(line: 1046, column: 36, scope: !15557)
!15567 = !DILocation(line: 1046, column: 48, scope: !15557)
!15568 = !DILocation(line: 1046, column: 61, scope: !15557)
!15569 = !DILocation(line: 1047, column: 33, scope: !15557)
!15570 = !DILocation(line: 1046, column: 10, scope: !15557)
!15571 = !DILocation(line: 1046, column: 3, scope: !15557)
!15572 = distinct !DISubprogram(name: "quote_n_mem", scope: !1038, file: !1038, line: 1061, type: !1096, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !209)
!15573 = !DILocalVariable(name: "n", arg: 1, scope: !15572, file: !1038, line: 1061, type: !7)
!15574 = !DILocation(line: 1061, column: 18, scope: !15572)
!15575 = !DILocalVariable(name: "arg", arg: 2, scope: !15572, file: !1038, line: 1061, type: !180)
!15576 = !DILocation(line: 1061, column: 33, scope: !15572)
!15577 = !DILocalVariable(name: "argsize", arg: 3, scope: !15572, file: !1038, line: 1061, type: !55)
!15578 = !DILocation(line: 1061, column: 45, scope: !15572)
!15579 = !DILocation(line: 1063, column: 30, scope: !15572)
!15580 = !DILocation(line: 1063, column: 33, scope: !15572)
!15581 = !DILocation(line: 1063, column: 38, scope: !15572)
!15582 = !DILocation(line: 1063, column: 10, scope: !15572)
!15583 = !DILocation(line: 1063, column: 3, scope: !15572)
!15584 = distinct !DISubprogram(name: "quote_mem", scope: !1038, file: !1038, line: 1067, type: !1098, scopeLine: 1068, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !209)
!15585 = !DILocalVariable(name: "arg", arg: 1, scope: !15584, file: !1038, line: 1067, type: !180)
!15586 = !DILocation(line: 1067, column: 24, scope: !15584)
!15587 = !DILocalVariable(name: "argsize", arg: 2, scope: !15584, file: !1038, line: 1067, type: !55)
!15588 = !DILocation(line: 1067, column: 36, scope: !15584)
!15589 = !DILocation(line: 1069, column: 26, scope: !15584)
!15590 = !DILocation(line: 1069, column: 31, scope: !15584)
!15591 = !DILocation(line: 1069, column: 10, scope: !15584)
!15592 = !DILocation(line: 1069, column: 3, scope: !15584)
!15593 = distinct !DISubprogram(name: "quote_n", scope: !1038, file: !1038, line: 1073, type: !1100, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !209)
!15594 = !DILocalVariable(name: "n", arg: 1, scope: !15593, file: !1038, line: 1073, type: !7)
!15595 = !DILocation(line: 1073, column: 14, scope: !15593)
!15596 = !DILocalVariable(name: "arg", arg: 2, scope: !15593, file: !1038, line: 1073, type: !180)
!15597 = !DILocation(line: 1073, column: 29, scope: !15593)
!15598 = !DILocation(line: 1075, column: 23, scope: !15593)
!15599 = !DILocation(line: 1075, column: 26, scope: !15593)
!15600 = !DILocation(line: 1075, column: 10, scope: !15593)
!15601 = !DILocation(line: 1075, column: 3, scope: !15593)
!15602 = distinct !DISubprogram(name: "quote", scope: !1038, file: !1038, line: 1079, type: !1102, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1009, retainedNodes: !209)
!15603 = !DILocalVariable(name: "arg", arg: 1, scope: !15602, file: !1038, line: 1079, type: !180)
!15604 = !DILocation(line: 1079, column: 20, scope: !15602)
!15605 = !DILocation(line: 1081, column: 22, scope: !15602)
!15606 = !DILocation(line: 1081, column: 10, scope: !15602)
!15607 = !DILocation(line: 1081, column: 3, scope: !15602)
!15608 = distinct !DISubprogram(name: "renameatu", scope: !15609, file: !15609, line: 77, type: !1782, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1779, retainedNodes: !209)
!15609 = !DIFile(filename: "lib/renameatu.c", directory: "/home/mbarbar/software/coreutils-8.31")
!15610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !271, line: 46, size: 1152, elements: !15611)
!15611 = !{!15612, !15613, !15614, !15615, !15616, !15617, !15618, !15619, !15620, !15621, !15622, !15623, !15628, !15629, !15630}
!15612 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !15610, file: !271, line: 48, baseType: !274, size: 64)
!15613 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !15610, file: !271, line: 53, baseType: !276, size: 64, offset: 64)
!15614 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !15610, file: !271, line: 61, baseType: !278, size: 64, offset: 128)
!15615 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !15610, file: !271, line: 62, baseType: !140, size: 32, offset: 192)
!15616 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !15610, file: !271, line: 64, baseType: !128, size: 32, offset: 224)
!15617 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !15610, file: !271, line: 65, baseType: !130, size: 32, offset: 256)
!15618 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !15610, file: !271, line: 67, baseType: !7, size: 32, offset: 288)
!15619 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !15610, file: !271, line: 69, baseType: !274, size: 64, offset: 320)
!15620 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !15610, file: !271, line: 74, baseType: !29, size: 64, offset: 384)
!15621 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !15610, file: !271, line: 78, baseType: !286, size: 64, offset: 448)
!15622 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !15610, file: !271, line: 80, baseType: !288, size: 64, offset: 512)
!15623 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !15610, file: !271, line: 91, baseType: !15624, size: 128, offset: 576)
!15624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !291, line: 9, size: 128, elements: !15625)
!15625 = !{!15626, !15627}
!15626 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !15624, file: !291, line: 11, baseType: !294, size: 64)
!15627 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !15624, file: !291, line: 12, baseType: !296, size: 64, offset: 64)
!15628 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !15610, file: !271, line: 92, baseType: !15624, size: 128, offset: 704)
!15629 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !15610, file: !271, line: 93, baseType: !15624, size: 128, offset: 832)
!15630 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !15610, file: !271, line: 106, baseType: !300, size: 192, offset: 960)
!15631 = !DILocalVariable(name: "fd1", arg: 1, scope: !15608, file: !15609, line: 77, type: !7)
!15632 = !DILocation(line: 77, column: 16, scope: !15608)
!15633 = !DILocalVariable(name: "src", arg: 2, scope: !15608, file: !15609, line: 77, type: !180)
!15634 = !DILocation(line: 77, column: 33, scope: !15608)
!15635 = !DILocalVariable(name: "fd2", arg: 3, scope: !15608, file: !15609, line: 77, type: !7)
!15636 = !DILocation(line: 77, column: 42, scope: !15608)
!15637 = !DILocalVariable(name: "dst", arg: 4, scope: !15608, file: !15609, line: 77, type: !180)
!15638 = !DILocation(line: 77, column: 59, scope: !15608)
!15639 = !DILocalVariable(name: "flags", arg: 5, scope: !15608, file: !15609, line: 78, type: !70)
!15640 = !DILocation(line: 78, column: 25, scope: !15608)
!15641 = !DILocalVariable(name: "ret_val", scope: !15608, file: !15609, line: 80, type: !7)
!15642 = !DILocation(line: 80, column: 7, scope: !15608)
!15643 = !DILocalVariable(name: "err", scope: !15608, file: !15609, line: 81, type: !7)
!15644 = !DILocation(line: 81, column: 7, scope: !15608)
!15645 = !DILocation(line: 84, column: 24, scope: !15608)
!15646 = !DILocation(line: 84, column: 29, scope: !15608)
!15647 = !DILocation(line: 84, column: 34, scope: !15608)
!15648 = !DILocation(line: 84, column: 39, scope: !15608)
!15649 = !DILocation(line: 84, column: 44, scope: !15608)
!15650 = !DILocation(line: 84, column: 13, scope: !15608)
!15651 = !DILocation(line: 84, column: 11, scope: !15608)
!15652 = !DILocation(line: 85, column: 9, scope: !15608)
!15653 = !DILocation(line: 85, column: 7, scope: !15608)
!15654 = !DILocation(line: 99, column: 10, scope: !15655)
!15655 = distinct !DILexicalBlock(scope: !15608, file: !15609, line: 99, column: 7)
!15656 = !DILocation(line: 99, column: 18, scope: !15655)
!15657 = !DILocation(line: 99, column: 22, scope: !15655)
!15658 = !DILocation(line: 99, column: 26, scope: !15655)
!15659 = !DILocation(line: 99, column: 30, scope: !15655)
!15660 = !DILocation(line: 99, column: 40, scope: !15655)
!15661 = !DILocation(line: 99, column: 43, scope: !15655)
!15662 = !DILocation(line: 99, column: 47, scope: !15655)
!15663 = !DILocation(line: 99, column: 57, scope: !15655)
!15664 = !DILocation(line: 99, column: 60, scope: !15655)
!15665 = !DILocation(line: 99, column: 64, scope: !15655)
!15666 = !DILocation(line: 99, column: 7, scope: !15608)
!15667 = !DILocation(line: 100, column: 12, scope: !15655)
!15668 = !DILocation(line: 100, column: 5, scope: !15655)
!15669 = !DILocalVariable(name: "src_len", scope: !15670, file: !15609, line: 104, type: !55)
!15670 = distinct !DILexicalBlock(scope: !15608, file: !15609, line: 103, column: 3)
!15671 = !DILocation(line: 104, column: 10, scope: !15670)
!15672 = !DILocalVariable(name: "dst_len", scope: !15670, file: !15609, line: 105, type: !55)
!15673 = !DILocation(line: 105, column: 10, scope: !15670)
!15674 = !DILocalVariable(name: "src_temp", scope: !15670, file: !15609, line: 106, type: !9)
!15675 = !DILocation(line: 106, column: 9, scope: !15670)
!15676 = !DILocation(line: 106, column: 29, scope: !15670)
!15677 = !DILocalVariable(name: "dst_temp", scope: !15670, file: !15609, line: 107, type: !9)
!15678 = !DILocation(line: 107, column: 9, scope: !15670)
!15679 = !DILocation(line: 107, column: 29, scope: !15670)
!15680 = !DILocalVariable(name: "src_slash", scope: !15670, file: !15609, line: 108, type: !142)
!15681 = !DILocation(line: 108, column: 8, scope: !15670)
!15682 = !DILocalVariable(name: "dst_slash", scope: !15670, file: !15609, line: 109, type: !142)
!15683 = !DILocation(line: 109, column: 8, scope: !15670)
!15684 = !DILocalVariable(name: "rename_errno", scope: !15670, file: !15609, line: 110, type: !7)
!15685 = !DILocation(line: 110, column: 7, scope: !15670)
!15686 = !DILocalVariable(name: "src_st", scope: !15670, file: !15609, line: 111, type: !15610)
!15687 = !DILocation(line: 111, column: 15, scope: !15670)
!15688 = !DILocalVariable(name: "dst_st", scope: !15670, file: !15609, line: 112, type: !15610)
!15689 = !DILocation(line: 112, column: 15, scope: !15670)
!15690 = !DILocalVariable(name: "dst_found_nonexistent", scope: !15670, file: !15609, line: 113, type: !142)
!15691 = !DILocation(line: 113, column: 8, scope: !15670)
!15692 = !DILocation(line: 115, column: 7, scope: !15693)
!15693 = distinct !DILexicalBlock(scope: !15670, file: !15609, line: 115, column: 7)
!15694 = !DILocation(line: 115, column: 13, scope: !15693)
!15695 = !DILocation(line: 115, column: 7, scope: !15670)
!15696 = !DILocation(line: 118, column: 11, scope: !15697)
!15697 = distinct !DILexicalBlock(scope: !15698, file: !15609, line: 118, column: 11)
!15698 = distinct !DILexicalBlock(scope: !15693, file: !15609, line: 116, column: 5)
!15699 = !DILocation(line: 118, column: 17, scope: !15697)
!15700 = !DILocation(line: 118, column: 11, scope: !15698)
!15701 = !DILocation(line: 119, column: 16, scope: !15697)
!15702 = !DILocation(line: 119, column: 9, scope: !15697)
!15703 = !DILocation(line: 124, column: 24, scope: !15704)
!15704 = distinct !DILexicalBlock(scope: !15705, file: !15609, line: 124, column: 15)
!15705 = distinct !DILexicalBlock(scope: !15697, file: !15609, line: 121, column: 9)
!15706 = !DILocation(line: 124, column: 29, scope: !15704)
!15707 = !DILocation(line: 124, column: 15, scope: !15704)
!15708 = !DILocation(line: 124, column: 43, scope: !15704)
!15709 = !DILocation(line: 124, column: 48, scope: !15704)
!15710 = !DILocation(line: 124, column: 51, scope: !15704)
!15711 = !DILocation(line: 124, column: 57, scope: !15704)
!15712 = !DILocation(line: 124, column: 15, scope: !15705)
!15713 = !DILocation(line: 125, column: 20, scope: !15704)
!15714 = !DILocation(line: 125, column: 13, scope: !15704)
!15715 = !DILocation(line: 126, column: 15, scope: !15716)
!15716 = distinct !DILexicalBlock(scope: !15705, file: !15609, line: 126, column: 15)
!15717 = !DILocation(line: 126, column: 21, scope: !15716)
!15718 = !DILocation(line: 126, column: 15, scope: !15705)
!15719 = !DILocation(line: 127, column: 13, scope: !15716)
!15720 = !DILocation(line: 128, column: 33, scope: !15705)
!15721 = !DILocation(line: 130, column: 5, scope: !15698)
!15722 = !DILocation(line: 133, column: 21, scope: !15670)
!15723 = !DILocation(line: 133, column: 13, scope: !15670)
!15724 = !DILocation(line: 133, column: 11, scope: !15670)
!15725 = !DILocation(line: 134, column: 21, scope: !15670)
!15726 = !DILocation(line: 134, column: 13, scope: !15670)
!15727 = !DILocation(line: 134, column: 11, scope: !15670)
!15728 = !DILocation(line: 135, column: 8, scope: !15729)
!15729 = distinct !DILexicalBlock(scope: !15670, file: !15609, line: 135, column: 7)
!15730 = !DILocation(line: 135, column: 16, scope: !15729)
!15731 = !DILocation(line: 135, column: 20, scope: !15729)
!15732 = !DILocation(line: 135, column: 7, scope: !15670)
!15733 = !DILocation(line: 136, column: 22, scope: !15729)
!15734 = !DILocation(line: 136, column: 27, scope: !15729)
!15735 = !DILocation(line: 136, column: 32, scope: !15729)
!15736 = !DILocation(line: 136, column: 37, scope: !15729)
!15737 = !DILocation(line: 136, column: 12, scope: !15729)
!15738 = !DILocation(line: 136, column: 5, scope: !15729)
!15739 = !DILocation(line: 138, column: 15, scope: !15670)
!15740 = !DILocation(line: 138, column: 19, scope: !15670)
!15741 = !DILocation(line: 138, column: 27, scope: !15670)
!15742 = !DILocation(line: 138, column: 32, scope: !15670)
!15743 = !DILocation(line: 138, column: 13, scope: !15670)
!15744 = !DILocation(line: 139, column: 15, scope: !15670)
!15745 = !DILocation(line: 139, column: 19, scope: !15670)
!15746 = !DILocation(line: 139, column: 27, scope: !15670)
!15747 = !DILocation(line: 139, column: 32, scope: !15670)
!15748 = !DILocation(line: 139, column: 13, scope: !15670)
!15749 = !DILocation(line: 140, column: 8, scope: !15750)
!15750 = distinct !DILexicalBlock(scope: !15670, file: !15609, line: 140, column: 7)
!15751 = !DILocation(line: 140, column: 18, scope: !15750)
!15752 = !DILocation(line: 140, column: 22, scope: !15750)
!15753 = !DILocation(line: 140, column: 7, scope: !15670)
!15754 = !DILocation(line: 141, column: 22, scope: !15750)
!15755 = !DILocation(line: 141, column: 27, scope: !15750)
!15756 = !DILocation(line: 141, column: 32, scope: !15750)
!15757 = !DILocation(line: 141, column: 37, scope: !15750)
!15758 = !DILocation(line: 141, column: 12, scope: !15750)
!15759 = !DILocation(line: 141, column: 5, scope: !15750)
!15760 = !DILocation(line: 147, column: 16, scope: !15761)
!15761 = distinct !DILexicalBlock(scope: !15670, file: !15609, line: 147, column: 7)
!15762 = !DILocation(line: 147, column: 21, scope: !15761)
!15763 = !DILocation(line: 147, column: 7, scope: !15761)
!15764 = !DILocation(line: 147, column: 7, scope: !15670)
!15765 = !DILocation(line: 148, column: 5, scope: !15761)
!15766 = !DILocation(line: 149, column: 7, scope: !15767)
!15767 = distinct !DILexicalBlock(scope: !15670, file: !15609, line: 149, column: 7)
!15768 = !DILocation(line: 149, column: 7, scope: !15670)
!15769 = !DILocation(line: 151, column: 12, scope: !15770)
!15770 = distinct !DILexicalBlock(scope: !15771, file: !15609, line: 151, column: 11)
!15771 = distinct !DILexicalBlock(scope: !15767, file: !15609, line: 150, column: 5)
!15772 = !DILocation(line: 151, column: 11, scope: !15771)
!15773 = !DILocation(line: 152, column: 16, scope: !15770)
!15774 = !DILocation(line: 152, column: 9, scope: !15770)
!15775 = !DILocation(line: 153, column: 5, scope: !15771)
!15776 = !DILocation(line: 154, column: 21, scope: !15777)
!15777 = distinct !DILexicalBlock(scope: !15767, file: !15609, line: 154, column: 12)
!15778 = !DILocation(line: 154, column: 26, scope: !15777)
!15779 = !DILocation(line: 154, column: 12, scope: !15777)
!15780 = !DILocation(line: 154, column: 12, scope: !15767)
!15781 = !DILocation(line: 156, column: 11, scope: !15782)
!15782 = distinct !DILexicalBlock(scope: !15783, file: !15609, line: 156, column: 11)
!15783 = distinct !DILexicalBlock(scope: !15777, file: !15609, line: 155, column: 5)
!15784 = !DILocation(line: 156, column: 17, scope: !15782)
!15785 = !DILocation(line: 156, column: 27, scope: !15782)
!15786 = !DILocation(line: 156, column: 31, scope: !15782)
!15787 = !DILocation(line: 156, column: 11, scope: !15783)
!15788 = !DILocation(line: 157, column: 9, scope: !15782)
!15789 = !DILocation(line: 158, column: 5, scope: !15783)
!15790 = !DILocation(line: 159, column: 13, scope: !15791)
!15791 = distinct !DILexicalBlock(scope: !15777, file: !15609, line: 159, column: 12)
!15792 = !DILocation(line: 159, column: 12, scope: !15777)
!15793 = !DILocation(line: 160, column: 12, scope: !15791)
!15794 = !DILocation(line: 160, column: 5, scope: !15791)
!15795 = !DILocation(line: 161, column: 13, scope: !15796)
!15796 = distinct !DILexicalBlock(scope: !15791, file: !15609, line: 161, column: 12)
!15797 = !DILocation(line: 161, column: 12, scope: !15791)
!15798 = !DILocation(line: 162, column: 12, scope: !15796)
!15799 = !DILocation(line: 162, column: 5, scope: !15796)
!15800 = !DILocation(line: 214, column: 23, scope: !15670)
!15801 = !DILocation(line: 214, column: 28, scope: !15670)
!15802 = !DILocation(line: 214, column: 38, scope: !15670)
!15803 = !DILocation(line: 214, column: 43, scope: !15670)
!15804 = !DILocation(line: 214, column: 13, scope: !15670)
!15805 = !DILocation(line: 214, column: 11, scope: !15670)
!15806 = !DILocation(line: 215, column: 18, scope: !15670)
!15807 = !DILocation(line: 215, column: 16, scope: !15670)
!15808 = !DILocation(line: 216, column: 3, scope: !15670)
!15809 = !DILabel(scope: !15670, name: "out", file: !15609, line: 217)
!15810 = !DILocation(line: 217, column: 2, scope: !15670)
!15811 = !DILocation(line: 218, column: 7, scope: !15812)
!15812 = distinct !DILexicalBlock(scope: !15670, file: !15609, line: 218, column: 7)
!15813 = !DILocation(line: 218, column: 19, scope: !15812)
!15814 = !DILocation(line: 218, column: 16, scope: !15812)
!15815 = !DILocation(line: 218, column: 7, scope: !15670)
!15816 = !DILocation(line: 219, column: 11, scope: !15812)
!15817 = !DILocation(line: 219, column: 5, scope: !15812)
!15818 = !DILocation(line: 220, column: 7, scope: !15819)
!15819 = distinct !DILexicalBlock(scope: !15670, file: !15609, line: 220, column: 7)
!15820 = !DILocation(line: 220, column: 19, scope: !15819)
!15821 = !DILocation(line: 220, column: 16, scope: !15819)
!15822 = !DILocation(line: 220, column: 7, scope: !15670)
!15823 = !DILocation(line: 221, column: 11, scope: !15819)
!15824 = !DILocation(line: 221, column: 5, scope: !15819)
!15825 = !DILocation(line: 222, column: 11, scope: !15670)
!15826 = !DILocation(line: 222, column: 3, scope: !15670)
!15827 = !DILocation(line: 222, column: 9, scope: !15670)
!15828 = !DILocation(line: 223, column: 10, scope: !15670)
!15829 = !DILocation(line: 223, column: 3, scope: !15670)
!15830 = !DILocation(line: 233, column: 1, scope: !15608)
!15831 = distinct !DISubprogram(name: "errno_fail", scope: !15609, file: !15609, line: 33, type: !1784, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1779, retainedNodes: !209)
!15832 = !DILocalVariable(name: "e", arg: 1, scope: !15831, file: !15609, line: 33, type: !7)
!15833 = !DILocation(line: 33, column: 17, scope: !15831)
!15834 = !DILocation(line: 35, column: 11, scope: !15831)
!15835 = !DILocation(line: 35, column: 3, scope: !15831)
!15836 = !DILocation(line: 35, column: 9, scope: !15831)
!15837 = !DILocation(line: 36, column: 3, scope: !15831)
!15838 = distinct !DISubprogram(name: "safe_read", scope: !15839, file: !15839, line: 56, type: !1691, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1786, retainedNodes: !209)
!15839 = !DIFile(filename: "lib/safe-read.c", directory: "/home/mbarbar/software/coreutils-8.31")
!15840 = !DILocalVariable(name: "fd", arg: 1, scope: !15838, file: !15839, line: 56, type: !7)
!15841 = !DILocation(line: 56, column: 14, scope: !15838)
!15842 = !DILocalVariable(name: "buf", arg: 2, scope: !15838, file: !15839, line: 56, type: !53)
!15843 = !DILocation(line: 56, column: 30, scope: !15838)
!15844 = !DILocalVariable(name: "count", arg: 3, scope: !15838, file: !15839, line: 56, type: !55)
!15845 = !DILocation(line: 56, column: 42, scope: !15838)
!15846 = !DILocation(line: 58, column: 3, scope: !15838)
!15847 = !DILocalVariable(name: "result", scope: !15848, file: !15839, line: 60, type: !692)
!15848 = distinct !DILexicalBlock(scope: !15849, file: !15839, line: 59, column: 5)
!15849 = distinct !DILexicalBlock(scope: !15850, file: !15839, line: 58, column: 3)
!15850 = distinct !DILexicalBlock(scope: !15838, file: !15839, line: 58, column: 3)
!15851 = !DILocation(line: 60, column: 15, scope: !15848)
!15852 = !DILocation(line: 60, column: 28, scope: !15848)
!15853 = !DILocation(line: 60, column: 32, scope: !15848)
!15854 = !DILocation(line: 60, column: 37, scope: !15848)
!15855 = !DILocation(line: 60, column: 24, scope: !15848)
!15856 = !DILocation(line: 62, column: 16, scope: !15857)
!15857 = distinct !DILexicalBlock(scope: !15848, file: !15839, line: 62, column: 11)
!15858 = !DILocation(line: 62, column: 13, scope: !15857)
!15859 = !DILocation(line: 62, column: 11, scope: !15848)
!15860 = !DILocation(line: 63, column: 16, scope: !15857)
!15861 = !DILocation(line: 63, column: 9, scope: !15857)
!15862 = !DILocation(line: 64, column: 16, scope: !15863)
!15863 = distinct !DILexicalBlock(scope: !15857, file: !15839, line: 64, column: 16)
!15864 = !DILocation(line: 64, column: 16, scope: !15857)
!15865 = !DILocation(line: 65, column: 9, scope: !15863)
!15866 = distinct !{!15866, !15867, !15868}
!15867 = !DILocation(line: 58, column: 3, scope: !15850)
!15868 = !DILocation(line: 70, column: 5, scope: !15850)
!15869 = !DILocation(line: 66, column: 16, scope: !15870)
!15870 = distinct !DILexicalBlock(scope: !15863, file: !15839, line: 66, column: 16)
!15871 = !DILocation(line: 66, column: 22, scope: !15870)
!15872 = !DILocation(line: 66, column: 32, scope: !15870)
!15873 = !DILocation(line: 66, column: 53, scope: !15870)
!15874 = !DILocation(line: 66, column: 51, scope: !15870)
!15875 = !DILocation(line: 66, column: 16, scope: !15863)
!15876 = !DILocation(line: 67, column: 15, scope: !15870)
!15877 = !DILocation(line: 67, column: 9, scope: !15870)
!15878 = !DILocation(line: 69, column: 16, scope: !15870)
!15879 = !DILocation(line: 69, column: 9, scope: !15870)
!15880 = !DILocation(line: 58, column: 3, scope: !15849)
!15881 = !DILocation(line: 71, column: 1, scope: !15838)
!15882 = distinct !DISubprogram(name: "safe_write", scope: !1787, file: !1787, line: 56, type: !1696, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1789, retainedNodes: !209)
!15883 = !DILocalVariable(name: "fd", arg: 1, scope: !15882, file: !1787, line: 56, type: !7)
!15884 = !DILocation(line: 56, column: 14, scope: !15882)
!15885 = !DILocalVariable(name: "buf", arg: 2, scope: !15882, file: !1787, line: 56, type: !513)
!15886 = !DILocation(line: 56, column: 30, scope: !15882)
!15887 = !DILocalVariable(name: "count", arg: 3, scope: !15882, file: !1787, line: 56, type: !55)
!15888 = !DILocation(line: 56, column: 42, scope: !15882)
!15889 = !DILocation(line: 58, column: 3, scope: !15882)
!15890 = !DILocalVariable(name: "result", scope: !15891, file: !1787, line: 60, type: !692)
!15891 = distinct !DILexicalBlock(scope: !15892, file: !1787, line: 59, column: 5)
!15892 = distinct !DILexicalBlock(scope: !15893, file: !1787, line: 58, column: 3)
!15893 = distinct !DILexicalBlock(scope: !15882, file: !1787, line: 58, column: 3)
!15894 = !DILocation(line: 60, column: 15, scope: !15891)
!15895 = !DILocation(line: 60, column: 28, scope: !15891)
!15896 = !DILocation(line: 60, column: 32, scope: !15891)
!15897 = !DILocation(line: 60, column: 37, scope: !15891)
!15898 = !DILocation(line: 60, column: 24, scope: !15891)
!15899 = !DILocation(line: 62, column: 16, scope: !15900)
!15900 = distinct !DILexicalBlock(scope: !15891, file: !1787, line: 62, column: 11)
!15901 = !DILocation(line: 62, column: 13, scope: !15900)
!15902 = !DILocation(line: 62, column: 11, scope: !15891)
!15903 = !DILocation(line: 63, column: 16, scope: !15900)
!15904 = !DILocation(line: 63, column: 9, scope: !15900)
!15905 = !DILocation(line: 64, column: 16, scope: !15906)
!15906 = distinct !DILexicalBlock(scope: !15900, file: !1787, line: 64, column: 16)
!15907 = !DILocation(line: 64, column: 16, scope: !15900)
!15908 = !DILocation(line: 65, column: 9, scope: !15906)
!15909 = distinct !{!15909, !15910, !15911}
!15910 = !DILocation(line: 58, column: 3, scope: !15893)
!15911 = !DILocation(line: 70, column: 5, scope: !15893)
!15912 = !DILocation(line: 66, column: 16, scope: !15913)
!15913 = distinct !DILexicalBlock(scope: !15906, file: !1787, line: 66, column: 16)
!15914 = !DILocation(line: 66, column: 22, scope: !15913)
!15915 = !DILocation(line: 66, column: 32, scope: !15913)
!15916 = !DILocation(line: 66, column: 53, scope: !15913)
!15917 = !DILocation(line: 66, column: 51, scope: !15913)
!15918 = !DILocation(line: 66, column: 16, scope: !15906)
!15919 = !DILocation(line: 67, column: 15, scope: !15913)
!15920 = !DILocation(line: 67, column: 9, scope: !15913)
!15921 = !DILocation(line: 69, column: 16, scope: !15913)
!15922 = !DILocation(line: 69, column: 9, scope: !15913)
!15923 = !DILocation(line: 58, column: 3, scope: !15892)
!15924 = !DILocation(line: 71, column: 1, scope: !15882)
!15925 = distinct !DISubprogram(name: "same_name", scope: !15926, file: !15926, line: 61, type: !1795, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1792, retainedNodes: !209)
!15926 = !DIFile(filename: "lib/same.c", directory: "/home/mbarbar/software/coreutils-8.31")
!15927 = !DILocalVariable(name: "source", arg: 1, scope: !15925, file: !15926, line: 61, type: !180)
!15928 = !DILocation(line: 61, column: 24, scope: !15925)
!15929 = !DILocalVariable(name: "dest", arg: 2, scope: !15925, file: !15926, line: 61, type: !180)
!15930 = !DILocation(line: 61, column: 44, scope: !15925)
!15931 = !DILocation(line: 63, column: 33, scope: !15925)
!15932 = !DILocation(line: 63, column: 51, scope: !15925)
!15933 = !DILocation(line: 63, column: 10, scope: !15925)
!15934 = !DILocation(line: 63, column: 3, scope: !15925)
!15935 = distinct !DISubprogram(name: "same_nameat", scope: !15926, file: !15926, line: 70, type: !1797, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1792, retainedNodes: !209)
!15936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !271, line: 46, size: 1152, elements: !15937)
!15937 = !{!15938, !15939, !15940, !15941, !15942, !15943, !15944, !15945, !15946, !15947, !15948, !15949, !15954, !15955, !15956}
!15938 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !15936, file: !271, line: 48, baseType: !274, size: 64)
!15939 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !15936, file: !271, line: 53, baseType: !276, size: 64, offset: 64)
!15940 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !15936, file: !271, line: 61, baseType: !278, size: 64, offset: 128)
!15941 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !15936, file: !271, line: 62, baseType: !140, size: 32, offset: 192)
!15942 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !15936, file: !271, line: 64, baseType: !128, size: 32, offset: 224)
!15943 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !15936, file: !271, line: 65, baseType: !130, size: 32, offset: 256)
!15944 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !15936, file: !271, line: 67, baseType: !7, size: 32, offset: 288)
!15945 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !15936, file: !271, line: 69, baseType: !274, size: 64, offset: 320)
!15946 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !15936, file: !271, line: 74, baseType: !29, size: 64, offset: 384)
!15947 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !15936, file: !271, line: 78, baseType: !286, size: 64, offset: 448)
!15948 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !15936, file: !271, line: 80, baseType: !288, size: 64, offset: 512)
!15949 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !15936, file: !271, line: 91, baseType: !15950, size: 128, offset: 576)
!15950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !291, line: 9, size: 128, elements: !15951)
!15951 = !{!15952, !15953}
!15952 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !15950, file: !291, line: 11, baseType: !294, size: 64)
!15953 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !15950, file: !291, line: 12, baseType: !296, size: 64, offset: 64)
!15954 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !15936, file: !271, line: 92, baseType: !15950, size: 128, offset: 704)
!15955 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !15936, file: !271, line: 93, baseType: !15950, size: 128, offset: 832)
!15956 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !15936, file: !271, line: 106, baseType: !300, size: 192, offset: 960)
!15957 = !DILocalVariable(name: "source_dfd", arg: 1, scope: !15935, file: !15926, line: 70, type: !7)
!15958 = !DILocation(line: 70, column: 18, scope: !15935)
!15959 = !DILocalVariable(name: "source", arg: 2, scope: !15935, file: !15926, line: 70, type: !180)
!15960 = !DILocation(line: 70, column: 42, scope: !15935)
!15961 = !DILocalVariable(name: "dest_dfd", arg: 3, scope: !15935, file: !15926, line: 71, type: !7)
!15962 = !DILocation(line: 71, column: 18, scope: !15935)
!15963 = !DILocalVariable(name: "dest", arg: 4, scope: !15935, file: !15926, line: 71, type: !180)
!15964 = !DILocation(line: 71, column: 40, scope: !15935)
!15965 = !DILocalVariable(name: "source_basename", scope: !15935, file: !15926, line: 74, type: !180)
!15966 = !DILocation(line: 74, column: 15, scope: !15935)
!15967 = !DILocation(line: 74, column: 49, scope: !15935)
!15968 = !DILocation(line: 74, column: 33, scope: !15935)
!15969 = !DILocalVariable(name: "dest_basename", scope: !15935, file: !15926, line: 75, type: !180)
!15970 = !DILocation(line: 75, column: 15, scope: !15935)
!15971 = !DILocation(line: 75, column: 47, scope: !15935)
!15972 = !DILocation(line: 75, column: 31, scope: !15935)
!15973 = !DILocalVariable(name: "source_baselen", scope: !15935, file: !15926, line: 76, type: !55)
!15974 = !DILocation(line: 76, column: 10, scope: !15935)
!15975 = !DILocation(line: 76, column: 37, scope: !15935)
!15976 = !DILocation(line: 76, column: 27, scope: !15935)
!15977 = !DILocalVariable(name: "dest_baselen", scope: !15935, file: !15926, line: 77, type: !55)
!15978 = !DILocation(line: 77, column: 10, scope: !15935)
!15979 = !DILocation(line: 77, column: 35, scope: !15935)
!15980 = !DILocation(line: 77, column: 25, scope: !15935)
!15981 = !DILocalVariable(name: "identical_basenames", scope: !15935, file: !15926, line: 78, type: !142)
!15982 = !DILocation(line: 78, column: 8, scope: !15935)
!15983 = !DILocation(line: 79, column: 6, scope: !15935)
!15984 = !DILocation(line: 79, column: 24, scope: !15935)
!15985 = !DILocation(line: 79, column: 21, scope: !15935)
!15986 = !DILocation(line: 80, column: 6, scope: !15935)
!15987 = !DILocation(line: 80, column: 17, scope: !15935)
!15988 = !DILocation(line: 80, column: 34, scope: !15935)
!15989 = !DILocation(line: 80, column: 49, scope: !15935)
!15990 = !DILocation(line: 80, column: 9, scope: !15935)
!15991 = !DILocation(line: 80, column: 63, scope: !15935)
!15992 = !DILocation(line: 0, scope: !15935)
!15993 = !DILocalVariable(name: "compare_dirs", scope: !15935, file: !15926, line: 81, type: !142)
!15994 = !DILocation(line: 81, column: 8, scope: !15935)
!15995 = !DILocation(line: 81, column: 23, scope: !15935)
!15996 = !DILocalVariable(name: "same", scope: !15935, file: !15926, line: 82, type: !142)
!15997 = !DILocation(line: 82, column: 8, scope: !15935)
!15998 = !DILocation(line: 92, column: 7, scope: !15999)
!15999 = distinct !DILexicalBlock(scope: !15935, file: !15926, line: 92, column: 7)
!16000 = !DILocation(line: 92, column: 7, scope: !15935)
!16001 = !DILocalVariable(name: "source_dir_stats", scope: !16002, file: !15926, line: 94, type: !15936)
!16002 = distinct !DILexicalBlock(scope: !15999, file: !15926, line: 93, column: 5)
!16003 = !DILocation(line: 94, column: 19, scope: !16002)
!16004 = !DILocalVariable(name: "dest_dir_stats", scope: !16002, file: !15926, line: 95, type: !15936)
!16005 = !DILocation(line: 95, column: 19, scope: !16002)
!16006 = !DILocalVariable(name: "source_dirname", scope: !16002, file: !15926, line: 98, type: !9)
!16007 = !DILocation(line: 98, column: 13, scope: !16002)
!16008 = !DILocation(line: 98, column: 40, scope: !16002)
!16009 = !DILocation(line: 98, column: 30, scope: !16002)
!16010 = !DILocalVariable(name: "flags", scope: !16002, file: !15926, line: 99, type: !7)
!16011 = !DILocation(line: 99, column: 11, scope: !16002)
!16012 = !DILocation(line: 100, column: 20, scope: !16013)
!16013 = distinct !DILexicalBlock(scope: !16002, file: !15926, line: 100, column: 11)
!16014 = !DILocation(line: 100, column: 32, scope: !16013)
!16015 = !DILocation(line: 100, column: 67, scope: !16013)
!16016 = !DILocation(line: 100, column: 11, scope: !16013)
!16017 = !DILocation(line: 100, column: 74, scope: !16013)
!16018 = !DILocation(line: 100, column: 11, scope: !16002)
!16019 = !DILocation(line: 103, column: 21, scope: !16020)
!16020 = distinct !DILexicalBlock(scope: !16013, file: !15926, line: 101, column: 9)
!16021 = !DILocation(line: 103, column: 34, scope: !16020)
!16022 = !DILocation(line: 103, column: 11, scope: !16020)
!16023 = !DILocation(line: 104, column: 9, scope: !16020)
!16024 = !DILocation(line: 105, column: 13, scope: !16002)
!16025 = !DILocation(line: 105, column: 7, scope: !16002)
!16026 = !DILocalVariable(name: "dest_dirname", scope: !16002, file: !15926, line: 107, type: !9)
!16027 = !DILocation(line: 107, column: 13, scope: !16002)
!16028 = !DILocation(line: 107, column: 38, scope: !16002)
!16029 = !DILocation(line: 107, column: 28, scope: !16002)
!16030 = !DILocation(line: 137, column: 20, scope: !16031)
!16031 = distinct !DILexicalBlock(scope: !16002, file: !15926, line: 137, column: 11)
!16032 = !DILocation(line: 137, column: 30, scope: !16031)
!16033 = !DILocation(line: 137, column: 61, scope: !16031)
!16034 = !DILocation(line: 137, column: 11, scope: !16031)
!16035 = !DILocation(line: 137, column: 68, scope: !16031)
!16036 = !DILocation(line: 137, column: 11, scope: !16002)
!16037 = !DILocation(line: 140, column: 21, scope: !16038)
!16038 = distinct !DILexicalBlock(scope: !16031, file: !15926, line: 138, column: 9)
!16039 = !DILocation(line: 140, column: 34, scope: !16038)
!16040 = !DILocation(line: 140, column: 11, scope: !16038)
!16041 = !DILocation(line: 141, column: 9, scope: !16038)
!16042 = !DILocation(line: 142, column: 14, scope: !16002)
!16043 = !DILocation(line: 0, scope: !16002)
!16044 = !DILocation(line: 142, column: 12, scope: !16002)
!16045 = !DILocation(line: 145, column: 13, scope: !16002)
!16046 = !DILocation(line: 145, column: 7, scope: !16002)
!16047 = !DILocation(line: 146, column: 5, scope: !16002)
!16048 = !DILocation(line: 148, column: 10, scope: !15935)
!16049 = !DILocation(line: 148, column: 3, scope: !15935)
!16050 = distinct !DISubprogram(name: "streamsavedir", scope: !1164, file: !1164, line: 91, type: !1160, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1149, retainedNodes: !209)
!16051 = !DILocalVariable(name: "dirp", arg: 1, scope: !16050, file: !1164, line: 91, type: !693)
!16052 = !DILocation(line: 91, column: 21, scope: !16050)
!16053 = !DILocalVariable(name: "option", arg: 2, scope: !16050, file: !1164, line: 91, type: !1152)
!16054 = !DILocation(line: 91, column: 47, scope: !16050)
!16055 = !DILocalVariable(name: "name_space", scope: !16050, file: !1164, line: 93, type: !9)
!16056 = !DILocation(line: 93, column: 9, scope: !16050)
!16057 = !DILocalVariable(name: "allocated", scope: !16050, file: !1164, line: 94, type: !55)
!16058 = !DILocation(line: 94, column: 10, scope: !16050)
!16059 = !DILocalVariable(name: "entries", scope: !16050, file: !1164, line: 95, type: !1162)
!16060 = !DILocation(line: 95, column: 15, scope: !16050)
!16061 = !DILocalVariable(name: "entries_allocated", scope: !16050, file: !1164, line: 96, type: !55)
!16062 = !DILocation(line: 96, column: 10, scope: !16050)
!16063 = !DILocalVariable(name: "entries_used", scope: !16050, file: !1164, line: 97, type: !55)
!16064 = !DILocation(line: 97, column: 10, scope: !16050)
!16065 = !DILocalVariable(name: "used", scope: !16050, file: !1164, line: 98, type: !55)
!16066 = !DILocation(line: 98, column: 10, scope: !16050)
!16067 = !DILocalVariable(name: "readdir_errno", scope: !16050, file: !1164, line: 99, type: !7)
!16068 = !DILocation(line: 99, column: 7, scope: !16050)
!16069 = !DILocalVariable(name: "cmp", scope: !16050, file: !1164, line: 100, type: !1170)
!16070 = !DILocation(line: 100, column: 23, scope: !16050)
!16071 = !DILocation(line: 100, column: 55, scope: !16050)
!16072 = !DILocation(line: 100, column: 29, scope: !16050)
!16073 = !DILocation(line: 102, column: 7, scope: !16074)
!16074 = distinct !DILexicalBlock(scope: !16050, file: !1164, line: 102, column: 7)
!16075 = !DILocation(line: 102, column: 12, scope: !16074)
!16076 = !DILocation(line: 102, column: 7, scope: !16050)
!16077 = !DILocation(line: 103, column: 5, scope: !16074)
!16078 = !DILocation(line: 105, column: 3, scope: !16050)
!16079 = !DILocalVariable(name: "dp", scope: !16080, file: !1164, line: 107, type: !1176)
!16080 = distinct !DILexicalBlock(scope: !16081, file: !1164, line: 106, column: 5)
!16081 = distinct !DILexicalBlock(scope: !16082, file: !1164, line: 105, column: 3)
!16082 = distinct !DILexicalBlock(scope: !16050, file: !1164, line: 105, column: 3)
!16083 = !DILocation(line: 107, column: 28, scope: !16080)
!16084 = !DILocalVariable(name: "entry", scope: !16080, file: !1164, line: 108, type: !180)
!16085 = !DILocation(line: 108, column: 19, scope: !16080)
!16086 = !DILocation(line: 110, column: 7, scope: !16080)
!16087 = !DILocation(line: 110, column: 13, scope: !16080)
!16088 = !DILocation(line: 111, column: 21, scope: !16080)
!16089 = !DILocation(line: 111, column: 12, scope: !16080)
!16090 = !DILocation(line: 111, column: 10, scope: !16080)
!16091 = !DILocation(line: 112, column: 13, scope: !16092)
!16092 = distinct !DILexicalBlock(scope: !16080, file: !1164, line: 112, column: 11)
!16093 = !DILocation(line: 112, column: 11, scope: !16080)
!16094 = !DILocation(line: 113, column: 9, scope: !16092)
!16095 = !DILocation(line: 117, column: 15, scope: !16080)
!16096 = !DILocation(line: 117, column: 19, scope: !16080)
!16097 = !DILocation(line: 117, column: 13, scope: !16080)
!16098 = !DILocation(line: 118, column: 11, scope: !16099)
!16099 = distinct !DILexicalBlock(scope: !16080, file: !1164, line: 118, column: 11)
!16100 = !DILocation(line: 118, column: 17, scope: !16099)
!16101 = !DILocation(line: 118, column: 26, scope: !16099)
!16102 = !DILocation(line: 118, column: 39, scope: !16099)
!16103 = !DILocation(line: 118, column: 48, scope: !16099)
!16104 = !DILocation(line: 118, column: 64, scope: !16099)
!16105 = !DILocation(line: 118, column: 11, scope: !16080)
!16106 = !DILocalVariable(name: "entry_size", scope: !16107, file: !1164, line: 120, type: !55)
!16107 = distinct !DILexicalBlock(scope: !16099, file: !1164, line: 119, column: 9)
!16108 = !DILocation(line: 120, column: 18, scope: !16107)
!16109 = !DILocation(line: 120, column: 31, scope: !16107)
!16110 = !DILocation(line: 120, column: 52, scope: !16107)
!16111 = !DILocation(line: 121, column: 15, scope: !16112)
!16112 = distinct !DILexicalBlock(scope: !16107, file: !1164, line: 121, column: 15)
!16113 = !DILocation(line: 121, column: 15, scope: !16107)
!16114 = !DILocation(line: 123, column: 19, scope: !16115)
!16115 = distinct !DILexicalBlock(scope: !16116, file: !1164, line: 123, column: 19)
!16116 = distinct !DILexicalBlock(scope: !16112, file: !1164, line: 122, column: 13)
!16117 = !DILocation(line: 123, column: 40, scope: !16115)
!16118 = !DILocation(line: 123, column: 37, scope: !16115)
!16119 = !DILocation(line: 123, column: 19, scope: !16116)
!16120 = !DILocalVariable(name: "n", scope: !16121, file: !1164, line: 125, type: !55)
!16121 = distinct !DILexicalBlock(scope: !16115, file: !1164, line: 124, column: 17)
!16122 = !DILocation(line: 125, column: 26, scope: !16121)
!16123 = !DILocation(line: 125, column: 30, scope: !16121)
!16124 = !DILocation(line: 126, column: 41, scope: !16121)
!16125 = !DILocation(line: 126, column: 29, scope: !16121)
!16126 = !DILocation(line: 126, column: 27, scope: !16121)
!16127 = !DILocation(line: 127, column: 39, scope: !16121)
!16128 = !DILocation(line: 127, column: 37, scope: !16121)
!16129 = !DILocation(line: 128, column: 17, scope: !16121)
!16130 = !DILocation(line: 129, column: 53, scope: !16116)
!16131 = !DILocation(line: 129, column: 44, scope: !16116)
!16132 = !DILocation(line: 129, column: 15, scope: !16116)
!16133 = !DILocation(line: 129, column: 23, scope: !16116)
!16134 = !DILocation(line: 129, column: 37, scope: !16116)
!16135 = !DILocation(line: 129, column: 42, scope: !16116)
!16136 = !{!16137, !2646, i64 0}
!16137 = !{!"", !2646, i64 0, !2913, i64 8}
!16138 = !DILocation(line: 131, column: 43, scope: !16116)
!16139 = !DILocation(line: 131, column: 47, scope: !16116)
!16140 = !{!16141, !2913, i64 0}
!16141 = !{!"dirent", !2913, i64 0, !2913, i64 8, !14635, i64 16, !2634, i64 18, !2634, i64 19}
!16142 = !DILocation(line: 131, column: 15, scope: !16116)
!16143 = !DILocation(line: 131, column: 23, scope: !16116)
!16144 = !DILocation(line: 131, column: 37, scope: !16116)
!16145 = !DILocation(line: 131, column: 41, scope: !16116)
!16146 = !{!16137, !2913, i64 8}
!16147 = !DILocation(line: 133, column: 27, scope: !16116)
!16148 = !DILocation(line: 134, column: 13, scope: !16116)
!16149 = !DILocation(line: 137, column: 19, scope: !16150)
!16150 = distinct !DILexicalBlock(scope: !16151, file: !1164, line: 137, column: 19)
!16151 = distinct !DILexicalBlock(scope: !16112, file: !1164, line: 136, column: 13)
!16152 = !DILocation(line: 137, column: 31, scope: !16150)
!16153 = !DILocation(line: 137, column: 29, scope: !16150)
!16154 = !DILocation(line: 137, column: 39, scope: !16150)
!16155 = !DILocation(line: 137, column: 36, scope: !16150)
!16156 = !DILocation(line: 137, column: 19, scope: !16151)
!16157 = !DILocalVariable(name: "n", scope: !16158, file: !1164, line: 139, type: !55)
!16158 = distinct !DILexicalBlock(scope: !16150, file: !1164, line: 138, column: 17)
!16159 = !DILocation(line: 139, column: 26, scope: !16158)
!16160 = !DILocation(line: 139, column: 30, scope: !16158)
!16161 = !DILocation(line: 139, column: 37, scope: !16158)
!16162 = !DILocation(line: 139, column: 35, scope: !16158)
!16163 = !DILocation(line: 140, column: 23, scope: !16164)
!16164 = distinct !DILexicalBlock(scope: !16158, file: !1164, line: 140, column: 23)
!16165 = !DILocation(line: 140, column: 27, scope: !16164)
!16166 = !DILocation(line: 140, column: 25, scope: !16164)
!16167 = !DILocation(line: 140, column: 23, scope: !16158)
!16168 = !DILocation(line: 141, column: 21, scope: !16164)
!16169 = !DILocation(line: 142, column: 44, scope: !16158)
!16170 = !DILocation(line: 142, column: 32, scope: !16158)
!16171 = !DILocation(line: 142, column: 30, scope: !16158)
!16172 = !DILocation(line: 143, column: 31, scope: !16158)
!16173 = !DILocation(line: 143, column: 29, scope: !16158)
!16174 = !DILocation(line: 144, column: 17, scope: !16158)
!16175 = !DILocation(line: 145, column: 23, scope: !16151)
!16176 = !DILocation(line: 145, column: 36, scope: !16151)
!16177 = !DILocation(line: 145, column: 34, scope: !16151)
!16178 = !DILocation(line: 145, column: 42, scope: !16151)
!16179 = !DILocation(line: 145, column: 49, scope: !16151)
!16180 = !DILocation(line: 145, column: 15, scope: !16151)
!16181 = !DILocation(line: 147, column: 19, scope: !16107)
!16182 = !DILocation(line: 147, column: 16, scope: !16107)
!16183 = !DILocation(line: 148, column: 9, scope: !16107)
!16184 = !DILocation(line: 105, column: 3, scope: !16081)
!16185 = distinct !{!16185, !16186, !16187}
!16186 = !DILocation(line: 105, column: 3, scope: !16082)
!16187 = !DILocation(line: 149, column: 5, scope: !16082)
!16188 = !DILocation(line: 151, column: 19, scope: !16050)
!16189 = !DILocation(line: 151, column: 17, scope: !16050)
!16190 = !DILocation(line: 152, column: 7, scope: !16191)
!16191 = distinct !DILexicalBlock(scope: !16050, file: !1164, line: 152, column: 7)
!16192 = !DILocation(line: 152, column: 21, scope: !16191)
!16193 = !DILocation(line: 152, column: 7, scope: !16050)
!16194 = !DILocation(line: 154, column: 13, scope: !16195)
!16195 = distinct !DILexicalBlock(scope: !16191, file: !1164, line: 153, column: 5)
!16196 = !DILocation(line: 154, column: 7, scope: !16195)
!16197 = !DILocation(line: 155, column: 13, scope: !16195)
!16198 = !DILocation(line: 155, column: 7, scope: !16195)
!16199 = !DILocation(line: 156, column: 15, scope: !16195)
!16200 = !DILocation(line: 156, column: 7, scope: !16195)
!16201 = !DILocation(line: 156, column: 13, scope: !16195)
!16202 = !DILocation(line: 157, column: 7, scope: !16195)
!16203 = !DILocation(line: 160, column: 7, scope: !16204)
!16204 = distinct !DILexicalBlock(scope: !16050, file: !1164, line: 160, column: 7)
!16205 = !DILocation(line: 160, column: 7, scope: !16050)
!16206 = !DILocalVariable(name: "i", scope: !16207, file: !1164, line: 162, type: !55)
!16207 = distinct !DILexicalBlock(scope: !16204, file: !1164, line: 161, column: 5)
!16208 = !DILocation(line: 162, column: 14, scope: !16207)
!16209 = !DILocation(line: 164, column: 11, scope: !16210)
!16210 = distinct !DILexicalBlock(scope: !16207, file: !1164, line: 164, column: 11)
!16211 = !DILocation(line: 164, column: 11, scope: !16207)
!16212 = !DILocation(line: 165, column: 16, scope: !16210)
!16213 = !DILocation(line: 165, column: 25, scope: !16210)
!16214 = !DILocation(line: 165, column: 56, scope: !16210)
!16215 = !DILocation(line: 165, column: 9, scope: !16210)
!16216 = !DILocation(line: 166, column: 29, scope: !16207)
!16217 = !DILocation(line: 166, column: 34, scope: !16207)
!16218 = !DILocation(line: 166, column: 20, scope: !16207)
!16219 = !DILocation(line: 166, column: 18, scope: !16207)
!16220 = !DILocation(line: 167, column: 12, scope: !16207)
!16221 = !DILocation(line: 168, column: 14, scope: !16222)
!16222 = distinct !DILexicalBlock(scope: !16207, file: !1164, line: 168, column: 7)
!16223 = !DILocation(line: 168, column: 12, scope: !16222)
!16224 = !DILocation(line: 168, column: 19, scope: !16225)
!16225 = distinct !DILexicalBlock(scope: !16222, file: !1164, line: 168, column: 7)
!16226 = !DILocation(line: 168, column: 23, scope: !16225)
!16227 = !DILocation(line: 168, column: 21, scope: !16225)
!16228 = !DILocation(line: 168, column: 7, scope: !16222)
!16229 = !DILocalVariable(name: "dest", scope: !16230, file: !1164, line: 170, type: !9)
!16230 = distinct !DILexicalBlock(scope: !16225, file: !1164, line: 169, column: 9)
!16231 = !DILocation(line: 170, column: 17, scope: !16230)
!16232 = !DILocation(line: 170, column: 24, scope: !16230)
!16233 = !DILocation(line: 170, column: 37, scope: !16230)
!16234 = !DILocation(line: 170, column: 35, scope: !16230)
!16235 = !DILocation(line: 171, column: 27, scope: !16230)
!16236 = !DILocation(line: 171, column: 33, scope: !16230)
!16237 = !DILocation(line: 171, column: 41, scope: !16230)
!16238 = !DILocation(line: 171, column: 44, scope: !16230)
!16239 = !DILocation(line: 171, column: 19, scope: !16230)
!16240 = !DILocation(line: 171, column: 52, scope: !16230)
!16241 = !DILocation(line: 171, column: 50, scope: !16230)
!16242 = !DILocation(line: 171, column: 57, scope: !16230)
!16243 = !DILocation(line: 171, column: 16, scope: !16230)
!16244 = !DILocation(line: 172, column: 17, scope: !16230)
!16245 = !DILocation(line: 172, column: 25, scope: !16230)
!16246 = !DILocation(line: 172, column: 28, scope: !16230)
!16247 = !DILocation(line: 172, column: 11, scope: !16230)
!16248 = !DILocation(line: 173, column: 9, scope: !16230)
!16249 = !DILocation(line: 168, column: 38, scope: !16225)
!16250 = !DILocation(line: 168, column: 7, scope: !16225)
!16251 = distinct !{!16251, !16228, !16252}
!16252 = !DILocation(line: 173, column: 9, scope: !16222)
!16253 = !DILocation(line: 174, column: 13, scope: !16207)
!16254 = !DILocation(line: 174, column: 7, scope: !16207)
!16255 = !DILocation(line: 175, column: 5, scope: !16207)
!16256 = !DILocation(line: 176, column: 12, scope: !16257)
!16257 = distinct !DILexicalBlock(scope: !16204, file: !1164, line: 176, column: 12)
!16258 = !DILocation(line: 176, column: 20, scope: !16257)
!16259 = !DILocation(line: 176, column: 17, scope: !16257)
!16260 = !DILocation(line: 176, column: 12, scope: !16204)
!16261 = !DILocation(line: 177, column: 28, scope: !16257)
!16262 = !DILocation(line: 177, column: 40, scope: !16257)
!16263 = !DILocation(line: 177, column: 45, scope: !16257)
!16264 = !DILocation(line: 177, column: 18, scope: !16257)
!16265 = !DILocation(line: 177, column: 16, scope: !16257)
!16266 = !DILocation(line: 177, column: 5, scope: !16257)
!16267 = !DILocation(line: 179, column: 3, scope: !16050)
!16268 = !DILocation(line: 179, column: 14, scope: !16050)
!16269 = !DILocation(line: 179, column: 20, scope: !16050)
!16270 = !DILocation(line: 180, column: 10, scope: !16050)
!16271 = !DILocation(line: 180, column: 3, scope: !16050)
!16272 = !DILocation(line: 181, column: 1, scope: !16050)
!16273 = distinct !DISubprogram(name: "direntry_cmp_name", scope: !1164, file: !1164, line: 51, type: !1172, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1149, retainedNodes: !209)
!16274 = !DILocalVariable(name: "a", arg: 1, scope: !16273, file: !1164, line: 51, type: !513)
!16275 = !DILocation(line: 51, column: 32, scope: !16273)
!16276 = !DILocalVariable(name: "b", arg: 2, scope: !16273, file: !1164, line: 51, type: !513)
!16277 = !DILocation(line: 51, column: 47, scope: !16273)
!16278 = !DILocalVariable(name: "dea", scope: !16273, file: !1164, line: 53, type: !1187)
!16279 = !DILocation(line: 53, column: 21, scope: !16273)
!16280 = !DILocation(line: 53, column: 27, scope: !16273)
!16281 = !DILocalVariable(name: "deb", scope: !16273, file: !1164, line: 54, type: !1187)
!16282 = !DILocation(line: 54, column: 21, scope: !16273)
!16283 = !DILocation(line: 54, column: 27, scope: !16273)
!16284 = !DILocation(line: 56, column: 18, scope: !16273)
!16285 = !DILocation(line: 56, column: 23, scope: !16273)
!16286 = !DILocation(line: 56, column: 29, scope: !16273)
!16287 = !DILocation(line: 56, column: 34, scope: !16273)
!16288 = !DILocation(line: 56, column: 10, scope: !16273)
!16289 = !DILocation(line: 56, column: 3, scope: !16273)
!16290 = distinct !DISubprogram(name: "direntry_cmp_inode", scope: !1164, file: !1164, line: 63, type: !1172, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1149, retainedNodes: !209)
!16291 = !DILocalVariable(name: "a", arg: 1, scope: !16290, file: !1164, line: 63, type: !513)
!16292 = !DILocation(line: 63, column: 33, scope: !16290)
!16293 = !DILocalVariable(name: "b", arg: 2, scope: !16290, file: !1164, line: 63, type: !513)
!16294 = !DILocation(line: 63, column: 48, scope: !16290)
!16295 = !DILocalVariable(name: "dea", scope: !16290, file: !1164, line: 65, type: !1187)
!16296 = !DILocation(line: 65, column: 21, scope: !16290)
!16297 = !DILocation(line: 65, column: 27, scope: !16290)
!16298 = !DILocalVariable(name: "deb", scope: !16290, file: !1164, line: 66, type: !1187)
!16299 = !DILocation(line: 66, column: 21, scope: !16290)
!16300 = !DILocation(line: 66, column: 27, scope: !16290)
!16301 = !DILocation(line: 68, column: 10, scope: !16290)
!16302 = !DILocation(line: 68, column: 15, scope: !16290)
!16303 = !DILocation(line: 68, column: 21, scope: !16290)
!16304 = !DILocation(line: 68, column: 26, scope: !16290)
!16305 = !DILocation(line: 68, column: 19, scope: !16290)
!16306 = !DILocation(line: 68, column: 37, scope: !16290)
!16307 = !DILocation(line: 68, column: 42, scope: !16290)
!16308 = !DILocation(line: 68, column: 48, scope: !16290)
!16309 = !DILocation(line: 68, column: 53, scope: !16290)
!16310 = !DILocation(line: 68, column: 46, scope: !16290)
!16311 = !DILocation(line: 68, column: 3, scope: !16290)
!16312 = distinct !DISubprogram(name: "savedir", scope: !1164, file: !1164, line: 189, type: !1185, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1149, retainedNodes: !209)
!16313 = !DILocalVariable(name: "dir", arg: 1, scope: !16312, file: !1164, line: 189, type: !180)
!16314 = !DILocation(line: 189, column: 22, scope: !16312)
!16315 = !DILocalVariable(name: "option", arg: 2, scope: !16312, file: !1164, line: 189, type: !1152)
!16316 = !DILocation(line: 189, column: 47, scope: !16312)
!16317 = !DILocalVariable(name: "dirp", scope: !16312, file: !1164, line: 191, type: !693)
!16318 = !DILocation(line: 191, column: 8, scope: !16312)
!16319 = !DILocation(line: 191, column: 24, scope: !16312)
!16320 = !DILocation(line: 191, column: 15, scope: !16312)
!16321 = !DILocation(line: 192, column: 9, scope: !16322)
!16322 = distinct !DILexicalBlock(scope: !16312, file: !1164, line: 192, column: 7)
!16323 = !DILocation(line: 192, column: 7, scope: !16312)
!16324 = !DILocation(line: 193, column: 5, scope: !16322)
!16325 = !DILocalVariable(name: "name_space", scope: !16326, file: !1164, line: 196, type: !9)
!16326 = distinct !DILexicalBlock(scope: !16322, file: !1164, line: 195, column: 5)
!16327 = !DILocation(line: 196, column: 13, scope: !16326)
!16328 = !DILocation(line: 196, column: 41, scope: !16326)
!16329 = !DILocation(line: 196, column: 47, scope: !16326)
!16330 = !DILocation(line: 196, column: 26, scope: !16326)
!16331 = !DILocation(line: 197, column: 21, scope: !16332)
!16332 = distinct !DILexicalBlock(scope: !16326, file: !1164, line: 197, column: 11)
!16333 = !DILocation(line: 197, column: 11, scope: !16332)
!16334 = !DILocation(line: 197, column: 27, scope: !16332)
!16335 = !DILocation(line: 197, column: 11, scope: !16326)
!16336 = !DILocalVariable(name: "closedir_errno", scope: !16337, file: !1164, line: 199, type: !7)
!16337 = distinct !DILexicalBlock(scope: !16332, file: !1164, line: 198, column: 9)
!16338 = !DILocation(line: 199, column: 15, scope: !16337)
!16339 = !DILocation(line: 199, column: 32, scope: !16337)
!16340 = !DILocation(line: 200, column: 17, scope: !16337)
!16341 = !DILocation(line: 200, column: 11, scope: !16337)
!16342 = !DILocation(line: 201, column: 19, scope: !16337)
!16343 = !DILocation(line: 201, column: 11, scope: !16337)
!16344 = !DILocation(line: 201, column: 17, scope: !16337)
!16345 = !DILocation(line: 202, column: 11, scope: !16337)
!16346 = !DILocation(line: 204, column: 14, scope: !16326)
!16347 = !DILocation(line: 204, column: 7, scope: !16326)
!16348 = !DILocation(line: 206, column: 1, scope: !16312)
!16349 = distinct !DISubprogram(name: "savewd_init", scope: !101, file: !101, line: 79, type: !1813, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1799, retainedNodes: !209)
!16350 = !DILocalVariable(name: "wd", arg: 1, scope: !16349, file: !101, line: 79, type: !1815)
!16351 = !DILocation(line: 79, column: 29, scope: !16349)
!16352 = !DILocation(line: 81, column: 3, scope: !16349)
!16353 = !DILocation(line: 81, column: 7, scope: !16349)
!16354 = !DILocation(line: 81, column: 13, scope: !16349)
!16355 = !{!16356, !2634, i64 0}
!16356 = !{!"savewd", !2634, i64 0, !2634, i64 4}
!16357 = !DILocation(line: 82, column: 1, scope: !16349)
!16358 = distinct !DISubprogram(name: "savewd_errno", scope: !101, file: !101, line: 124, type: !1816, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1799, retainedNodes: !209)
!16359 = !DILocalVariable(name: "wd", arg: 1, scope: !16358, file: !101, line: 124, type: !1818)
!16360 = !DILocation(line: 124, column: 36, scope: !16358)
!16361 = !DILocation(line: 126, column: 11, scope: !16358)
!16362 = !DILocation(line: 126, column: 15, scope: !16358)
!16363 = !DILocation(line: 126, column: 21, scope: !16358)
!16364 = !DILocation(line: 126, column: 38, scope: !16358)
!16365 = !DILocation(line: 126, column: 42, scope: !16358)
!16366 = !DILocation(line: 126, column: 46, scope: !16358)
!16367 = !DILocation(line: 126, column: 3, scope: !16358)
!16368 = distinct !DISubprogram(name: "savewd_chdir", scope: !16369, file: !16369, line: 106, type: !1820, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1799, retainedNodes: !209)
!16369 = !DIFile(filename: "lib/savewd.c", directory: "/home/mbarbar/software/coreutils-8.31")
!16370 = !DILocalVariable(name: "wd", arg: 1, scope: !16368, file: !16369, line: 106, type: !1815)
!16371 = !DILocation(line: 106, column: 30, scope: !16368)
!16372 = !DILocalVariable(name: "dir", arg: 2, scope: !16368, file: !16369, line: 106, type: !180)
!16373 = !DILocation(line: 106, column: 46, scope: !16368)
!16374 = !DILocalVariable(name: "options", arg: 3, scope: !16368, file: !16369, line: 106, type: !7)
!16375 = !DILocation(line: 106, column: 55, scope: !16368)
!16376 = !DILocalVariable(name: "open_result", arg: 4, scope: !16368, file: !16369, line: 107, type: !193)
!16377 = !DILocation(line: 107, column: 19, scope: !16368)
!16378 = !DILocalVariable(name: "fd", scope: !16368, file: !16369, line: 109, type: !7)
!16379 = !DILocation(line: 109, column: 7, scope: !16368)
!16380 = !DILocalVariable(name: "result", scope: !16368, file: !16369, line: 110, type: !7)
!16381 = !DILocation(line: 110, column: 7, scope: !16368)
!16382 = !DILocation(line: 114, column: 7, scope: !16383)
!16383 = distinct !DILexicalBlock(scope: !16368, file: !16369, line: 114, column: 7)
!16384 = !DILocation(line: 115, column: 7, scope: !16383)
!16385 = !DILocation(line: 115, column: 11, scope: !16383)
!16386 = !DILocation(line: 115, column: 19, scope: !16383)
!16387 = !DILocation(line: 114, column: 7, scope: !16368)
!16388 = !DILocation(line: 117, column: 18, scope: !16389)
!16389 = distinct !DILexicalBlock(scope: !16383, file: !16369, line: 116, column: 5)
!16390 = !DILocation(line: 119, column: 22, scope: !16389)
!16391 = !DILocation(line: 119, column: 30, scope: !16389)
!16392 = !DILocation(line: 119, column: 19, scope: !16389)
!16393 = !DILocation(line: 117, column: 12, scope: !16389)
!16394 = !DILocation(line: 117, column: 10, scope: !16389)
!16395 = !DILocation(line: 121, column: 11, scope: !16396)
!16396 = distinct !DILexicalBlock(scope: !16389, file: !16369, line: 121, column: 11)
!16397 = !DILocation(line: 121, column: 11, scope: !16389)
!16398 = !DILocation(line: 123, column: 28, scope: !16399)
!16399 = distinct !DILexicalBlock(scope: !16396, file: !16369, line: 122, column: 9)
!16400 = !DILocation(line: 123, column: 11, scope: !16399)
!16401 = !DILocation(line: 123, column: 26, scope: !16399)
!16402 = !DILocation(line: 124, column: 28, scope: !16399)
!16403 = !DILocation(line: 124, column: 11, scope: !16399)
!16404 = !DILocation(line: 124, column: 26, scope: !16399)
!16405 = !DILocation(line: 125, column: 9, scope: !16399)
!16406 = !DILocation(line: 127, column: 11, scope: !16407)
!16407 = distinct !DILexicalBlock(scope: !16389, file: !16369, line: 127, column: 11)
!16408 = !DILocation(line: 127, column: 14, scope: !16407)
!16409 = !DILocation(line: 127, column: 18, scope: !16407)
!16410 = !DILocation(line: 127, column: 21, scope: !16407)
!16411 = !DILocation(line: 127, column: 27, scope: !16407)
!16412 = !DILocation(line: 127, column: 11, scope: !16389)
!16413 = !DILocation(line: 128, column: 16, scope: !16407)
!16414 = !DILocation(line: 128, column: 9, scope: !16407)
!16415 = !DILocation(line: 129, column: 5, scope: !16389)
!16416 = !DILocation(line: 131, column: 7, scope: !16417)
!16417 = distinct !DILexicalBlock(scope: !16368, file: !16369, line: 131, column: 7)
!16418 = !DILocation(line: 131, column: 14, scope: !16417)
!16419 = !DILocation(line: 131, column: 19, scope: !16417)
!16420 = !DILocation(line: 131, column: 30, scope: !16417)
!16421 = !DILocation(line: 131, column: 27, scope: !16417)
!16422 = !DILocation(line: 131, column: 33, scope: !16417)
!16423 = !DILocation(line: 131, column: 36, scope: !16417)
!16424 = !DILocation(line: 131, column: 44, scope: !16417)
!16425 = !DILocation(line: 131, column: 7, scope: !16368)
!16426 = !DILocation(line: 133, column: 24, scope: !16427)
!16427 = distinct !DILexicalBlock(scope: !16428, file: !16369, line: 133, column: 11)
!16428 = distinct !DILexicalBlock(scope: !16417, file: !16369, line: 132, column: 5)
!16429 = !DILocation(line: 133, column: 11, scope: !16427)
!16430 = !DILocation(line: 133, column: 11, scope: !16428)
!16431 = !DILocation(line: 135, column: 23, scope: !16432)
!16432 = distinct !DILexicalBlock(scope: !16427, file: !16369, line: 134, column: 9)
!16433 = !DILocation(line: 136, column: 18, scope: !16432)
!16434 = !DILocation(line: 137, column: 9, scope: !16432)
!16435 = !DILocation(line: 140, column: 21, scope: !16436)
!16436 = distinct !DILexicalBlock(scope: !16427, file: !16369, line: 139, column: 9)
!16437 = !DILocation(line: 140, column: 24, scope: !16436)
!16438 = !DILocation(line: 140, column: 37, scope: !16436)
!16439 = !DILocation(line: 140, column: 30, scope: !16436)
!16440 = !DILocation(line: 140, column: 52, scope: !16436)
!16441 = !DILocation(line: 140, column: 44, scope: !16436)
!16442 = !DILocation(line: 140, column: 18, scope: !16436)
!16443 = !DILocation(line: 142, column: 15, scope: !16444)
!16444 = distinct !DILexicalBlock(scope: !16436, file: !16369, line: 142, column: 15)
!16445 = !DILocation(line: 142, column: 22, scope: !16444)
!16446 = !DILocation(line: 142, column: 15, scope: !16436)
!16447 = !DILocation(line: 143, column: 21, scope: !16444)
!16448 = !DILocation(line: 143, column: 25, scope: !16444)
!16449 = !DILocation(line: 143, column: 13, scope: !16444)
!16450 = !DILocation(line: 146, column: 17, scope: !16451)
!16451 = distinct !DILexicalBlock(scope: !16444, file: !16369, line: 144, column: 15)
!16452 = !DILocation(line: 146, column: 21, scope: !16451)
!16453 = !DILocation(line: 146, column: 27, scope: !16451)
!16454 = !DILocation(line: 147, column: 17, scope: !16451)
!16455 = !DILocation(line: 152, column: 17, scope: !16451)
!16456 = !DILocation(line: 155, column: 17, scope: !16457)
!16457 = distinct !DILexicalBlock(scope: !16458, file: !16369, line: 155, column: 17)
!16458 = distinct !DILexicalBlock(scope: !16451, file: !16369, line: 155, column: 17)
!16459 = !DILocation(line: 155, column: 17, scope: !16458)
!16460 = !DILocation(line: 156, column: 17, scope: !16451)
!16461 = !DILocation(line: 159, column: 17, scope: !16462)
!16462 = distinct !DILexicalBlock(scope: !16463, file: !16369, line: 159, column: 17)
!16463 = distinct !DILexicalBlock(scope: !16451, file: !16369, line: 159, column: 17)
!16464 = !DILocation(line: 160, column: 15, scope: !16451)
!16465 = !DILocation(line: 162, column: 5, scope: !16428)
!16466 = !DILocation(line: 164, column: 12, scope: !16467)
!16467 = distinct !DILexicalBlock(scope: !16368, file: !16369, line: 164, column: 7)
!16468 = !DILocation(line: 164, column: 9, scope: !16467)
!16469 = !DILocation(line: 164, column: 15, scope: !16467)
!16470 = !DILocation(line: 164, column: 20, scope: !16467)
!16471 = !DILocation(line: 164, column: 7, scope: !16368)
!16472 = !DILocalVariable(name: "e", scope: !16473, file: !16369, line: 166, type: !7)
!16473 = distinct !DILexicalBlock(scope: !16467, file: !16369, line: 165, column: 5)
!16474 = !DILocation(line: 166, column: 11, scope: !16473)
!16475 = !DILocation(line: 166, column: 15, scope: !16473)
!16476 = !DILocation(line: 167, column: 14, scope: !16473)
!16477 = !DILocation(line: 167, column: 7, scope: !16473)
!16478 = !DILocation(line: 168, column: 15, scope: !16473)
!16479 = !DILocation(line: 168, column: 7, scope: !16473)
!16480 = !DILocation(line: 168, column: 13, scope: !16473)
!16481 = !DILocation(line: 169, column: 5, scope: !16473)
!16482 = !DILocation(line: 171, column: 10, scope: !16368)
!16483 = !DILocation(line: 171, column: 3, scope: !16368)
!16484 = distinct !DISubprogram(name: "savewd_save", scope: !16369, file: !16369, line: 51, type: !1829, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1799, retainedNodes: !209)
!16485 = !DILocalVariable(name: "wd", arg: 1, scope: !16484, file: !16369, line: 51, type: !1815)
!16486 = !DILocation(line: 51, column: 29, scope: !16484)
!16487 = !DILocation(line: 53, column: 11, scope: !16484)
!16488 = !DILocation(line: 53, column: 15, scope: !16484)
!16489 = !DILocation(line: 53, column: 3, scope: !16484)
!16490 = !DILocalVariable(name: "fd", scope: !16491, file: !16369, line: 58, type: !7)
!16491 = distinct !DILexicalBlock(scope: !16492, file: !16369, line: 57, column: 7)
!16492 = distinct !DILexicalBlock(scope: !16484, file: !16369, line: 54, column: 5)
!16493 = !DILocation(line: 58, column: 13, scope: !16491)
!16494 = !DILocation(line: 58, column: 18, scope: !16491)
!16495 = !DILocation(line: 59, column: 18, scope: !16496)
!16496 = distinct !DILexicalBlock(scope: !16491, file: !16369, line: 59, column: 13)
!16497 = !DILocation(line: 59, column: 15, scope: !16496)
!16498 = !DILocation(line: 59, column: 13, scope: !16491)
!16499 = !DILocation(line: 61, column: 13, scope: !16500)
!16500 = distinct !DILexicalBlock(scope: !16496, file: !16369, line: 60, column: 11)
!16501 = !DILocation(line: 61, column: 17, scope: !16500)
!16502 = !DILocation(line: 61, column: 23, scope: !16500)
!16503 = !DILocation(line: 62, column: 26, scope: !16500)
!16504 = !DILocation(line: 62, column: 13, scope: !16500)
!16505 = !DILocation(line: 62, column: 17, scope: !16500)
!16506 = !DILocation(line: 62, column: 21, scope: !16500)
!16507 = !DILocation(line: 62, column: 24, scope: !16500)
!16508 = !DILocation(line: 63, column: 13, scope: !16500)
!16509 = !DILocation(line: 65, column: 13, scope: !16510)
!16510 = distinct !DILexicalBlock(scope: !16491, file: !16369, line: 65, column: 13)
!16511 = !DILocation(line: 65, column: 19, scope: !16510)
!16512 = !DILocation(line: 65, column: 29, scope: !16510)
!16513 = !DILocation(line: 65, column: 32, scope: !16510)
!16514 = !DILocation(line: 65, column: 38, scope: !16510)
!16515 = !DILocation(line: 65, column: 13, scope: !16491)
!16516 = !DILocation(line: 67, column: 13, scope: !16517)
!16517 = distinct !DILexicalBlock(scope: !16510, file: !16369, line: 66, column: 11)
!16518 = !DILocation(line: 67, column: 17, scope: !16517)
!16519 = !DILocation(line: 67, column: 23, scope: !16517)
!16520 = !DILocation(line: 68, column: 30, scope: !16517)
!16521 = !DILocation(line: 68, column: 13, scope: !16517)
!16522 = !DILocation(line: 68, column: 17, scope: !16517)
!16523 = !DILocation(line: 68, column: 21, scope: !16517)
!16524 = !DILocation(line: 68, column: 28, scope: !16517)
!16525 = !DILocation(line: 69, column: 13, scope: !16517)
!16526 = !DILocation(line: 72, column: 7, scope: !16492)
!16527 = !DILocation(line: 72, column: 11, scope: !16492)
!16528 = !DILocation(line: 72, column: 17, scope: !16492)
!16529 = !DILocation(line: 73, column: 7, scope: !16492)
!16530 = !DILocation(line: 73, column: 11, scope: !16492)
!16531 = !DILocation(line: 73, column: 15, scope: !16492)
!16532 = !DILocation(line: 73, column: 21, scope: !16492)
!16533 = !DILocation(line: 74, column: 7, scope: !16492)
!16534 = !DILocation(line: 76, column: 11, scope: !16535)
!16535 = distinct !DILexicalBlock(scope: !16492, file: !16369, line: 76, column: 11)
!16536 = !DILocation(line: 76, column: 15, scope: !16535)
!16537 = !DILocation(line: 76, column: 19, scope: !16535)
!16538 = !DILocation(line: 76, column: 25, scope: !16535)
!16539 = !DILocation(line: 76, column: 11, scope: !16492)
!16540 = !DILocation(line: 81, column: 27, scope: !16541)
!16541 = distinct !DILexicalBlock(scope: !16535, file: !16369, line: 77, column: 9)
!16542 = !DILocation(line: 81, column: 11, scope: !16541)
!16543 = !DILocation(line: 81, column: 15, scope: !16541)
!16544 = !DILocation(line: 81, column: 19, scope: !16541)
!16545 = !DILocation(line: 81, column: 25, scope: !16541)
!16546 = !DILocation(line: 82, column: 15, scope: !16547)
!16547 = distinct !DILexicalBlock(scope: !16541, file: !16369, line: 82, column: 15)
!16548 = !DILocation(line: 82, column: 19, scope: !16547)
!16549 = !DILocation(line: 82, column: 23, scope: !16547)
!16550 = !DILocation(line: 82, column: 29, scope: !16547)
!16551 = !DILocation(line: 82, column: 15, scope: !16541)
!16552 = !DILocation(line: 84, column: 23, scope: !16553)
!16553 = distinct !DILexicalBlock(scope: !16554, file: !16369, line: 84, column: 19)
!16554 = distinct !DILexicalBlock(scope: !16547, file: !16369, line: 83, column: 13)
!16555 = !DILocation(line: 84, column: 27, scope: !16553)
!16556 = !DILocation(line: 84, column: 31, scope: !16553)
!16557 = !DILocation(line: 84, column: 21, scope: !16553)
!16558 = !DILocation(line: 84, column: 19, scope: !16554)
!16559 = !DILocation(line: 85, column: 17, scope: !16553)
!16560 = !DILocation(line: 86, column: 15, scope: !16554)
!16561 = !DILocation(line: 86, column: 19, scope: !16554)
!16562 = !DILocation(line: 86, column: 25, scope: !16554)
!16563 = !DILocation(line: 87, column: 32, scope: !16554)
!16564 = !DILocation(line: 87, column: 15, scope: !16554)
!16565 = !DILocation(line: 87, column: 19, scope: !16554)
!16566 = !DILocation(line: 87, column: 23, scope: !16554)
!16567 = !DILocation(line: 87, column: 30, scope: !16554)
!16568 = !DILocation(line: 88, column: 13, scope: !16554)
!16569 = !DILocation(line: 89, column: 9, scope: !16541)
!16570 = !DILocation(line: 90, column: 7, scope: !16492)
!16571 = !DILocation(line: 96, column: 7, scope: !16492)
!16572 = !DILocation(line: 99, column: 7, scope: !16573)
!16573 = distinct !DILexicalBlock(scope: !16574, file: !16369, line: 99, column: 7)
!16574 = distinct !DILexicalBlock(scope: !16492, file: !16369, line: 99, column: 7)
!16575 = !DILocation(line: 102, column: 3, scope: !16484)
!16576 = !DILocation(line: 103, column: 1, scope: !16484)
!16577 = distinct !DISubprogram(name: "savewd_restore", scope: !16369, file: !16369, line: 175, type: !1822, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1799, retainedNodes: !209)
!16578 = !DILocalVariable(name: "wd", arg: 1, scope: !16577, file: !16369, line: 175, type: !1815)
!16579 = !DILocation(line: 175, column: 32, scope: !16577)
!16580 = !DILocalVariable(name: "status", arg: 2, scope: !16577, file: !16369, line: 175, type: !7)
!16581 = !DILocation(line: 175, column: 40, scope: !16577)
!16582 = !DILocation(line: 177, column: 11, scope: !16577)
!16583 = !DILocation(line: 177, column: 15, scope: !16577)
!16584 = !DILocation(line: 177, column: 3, scope: !16577)
!16585 = !DILocation(line: 183, column: 7, scope: !16586)
!16586 = distinct !DILexicalBlock(scope: !16577, file: !16369, line: 178, column: 5)
!16587 = !DILocation(line: 187, column: 19, scope: !16588)
!16588 = distinct !DILexicalBlock(scope: !16586, file: !16369, line: 187, column: 11)
!16589 = !DILocation(line: 187, column: 23, scope: !16588)
!16590 = !DILocation(line: 187, column: 27, scope: !16588)
!16591 = !DILocation(line: 187, column: 11, scope: !16588)
!16592 = !DILocation(line: 187, column: 31, scope: !16588)
!16593 = !DILocation(line: 187, column: 11, scope: !16586)
!16594 = !DILocation(line: 189, column: 11, scope: !16595)
!16595 = distinct !DILexicalBlock(scope: !16588, file: !16369, line: 188, column: 9)
!16596 = !DILocation(line: 189, column: 15, scope: !16595)
!16597 = !DILocation(line: 189, column: 21, scope: !16595)
!16598 = !DILocation(line: 190, column: 11, scope: !16595)
!16599 = !DILocalVariable(name: "chdir_errno", scope: !16600, file: !16369, line: 194, type: !7)
!16600 = distinct !DILexicalBlock(scope: !16588, file: !16369, line: 193, column: 9)
!16601 = !DILocation(line: 194, column: 15, scope: !16600)
!16602 = !DILocation(line: 194, column: 29, scope: !16600)
!16603 = !DILocation(line: 195, column: 18, scope: !16600)
!16604 = !DILocation(line: 195, column: 22, scope: !16600)
!16605 = !DILocation(line: 195, column: 26, scope: !16600)
!16606 = !DILocation(line: 195, column: 11, scope: !16600)
!16607 = !DILocation(line: 196, column: 11, scope: !16600)
!16608 = !DILocation(line: 196, column: 15, scope: !16600)
!16609 = !DILocation(line: 196, column: 21, scope: !16600)
!16610 = !DILocation(line: 197, column: 28, scope: !16600)
!16611 = !DILocation(line: 197, column: 11, scope: !16600)
!16612 = !DILocation(line: 197, column: 15, scope: !16600)
!16613 = !DILocation(line: 197, column: 19, scope: !16600)
!16614 = !DILocation(line: 197, column: 26, scope: !16600)
!16615 = !DILocation(line: 199, column: 7, scope: !16586)
!16616 = !DILocation(line: 202, column: 15, scope: !16586)
!16617 = !DILocation(line: 202, column: 19, scope: !16586)
!16618 = !DILocation(line: 202, column: 23, scope: !16586)
!16619 = !DILocation(line: 202, column: 7, scope: !16586)
!16620 = !DILocation(line: 202, column: 13, scope: !16586)
!16621 = !DILocation(line: 203, column: 7, scope: !16586)
!16622 = !DILocalVariable(name: "child", scope: !16623, file: !16369, line: 209, type: !111)
!16623 = distinct !DILexicalBlock(scope: !16586, file: !16369, line: 208, column: 7)
!16624 = !DILocation(line: 209, column: 15, scope: !16623)
!16625 = !DILocation(line: 209, column: 23, scope: !16623)
!16626 = !DILocation(line: 209, column: 27, scope: !16623)
!16627 = !DILocation(line: 209, column: 31, scope: !16623)
!16628 = !DILocation(line: 210, column: 13, scope: !16629)
!16629 = distinct !DILexicalBlock(scope: !16623, file: !16369, line: 210, column: 13)
!16630 = !DILocation(line: 210, column: 19, scope: !16629)
!16631 = !DILocation(line: 210, column: 13, scope: !16623)
!16632 = !DILocation(line: 211, column: 18, scope: !16629)
!16633 = !DILocation(line: 211, column: 11, scope: !16629)
!16634 = !DILocation(line: 212, column: 17, scope: !16635)
!16635 = distinct !DILexicalBlock(scope: !16623, file: !16369, line: 212, column: 13)
!16636 = !DILocation(line: 212, column: 15, scope: !16635)
!16637 = !DILocation(line: 212, column: 13, scope: !16623)
!16638 = !DILocalVariable(name: "child_status", scope: !16639, file: !16369, line: 214, type: !7)
!16639 = distinct !DILexicalBlock(scope: !16635, file: !16369, line: 213, column: 11)
!16640 = !DILocation(line: 214, column: 17, scope: !16639)
!16641 = !DILocation(line: 215, column: 13, scope: !16639)
!16642 = !DILocation(line: 215, column: 29, scope: !16639)
!16643 = !DILocation(line: 215, column: 20, scope: !16639)
!16644 = !DILocation(line: 215, column: 54, scope: !16639)
!16645 = !DILocation(line: 216, column: 15, scope: !16646)
!16646 = distinct !DILexicalBlock(scope: !16647, file: !16369, line: 216, column: 15)
!16647 = distinct !DILexicalBlock(scope: !16639, file: !16369, line: 216, column: 15)
!16648 = !DILocation(line: 216, column: 15, scope: !16647)
!16649 = distinct !{!16649, !16641, !16650}
!16650 = !DILocation(line: 216, column: 15, scope: !16639)
!16651 = !DILocation(line: 217, column: 13, scope: !16639)
!16652 = !DILocation(line: 217, column: 17, scope: !16639)
!16653 = !DILocation(line: 217, column: 21, scope: !16639)
!16654 = !DILocation(line: 217, column: 27, scope: !16639)
!16655 = !DILocation(line: 218, column: 19, scope: !16656)
!16656 = distinct !DILexicalBlock(scope: !16639, file: !16369, line: 218, column: 17)
!16657 = !DILocation(line: 218, column: 17, scope: !16639)
!16658 = !DILocation(line: 219, column: 22, scope: !16656)
!16659 = !DILocation(line: 219, column: 15, scope: !16656)
!16660 = !DILocation(line: 220, column: 20, scope: !16639)
!16661 = !DILocation(line: 220, column: 13, scope: !16639)
!16662 = !DILocation(line: 223, column: 7, scope: !16586)
!16663 = !DILocation(line: 226, column: 7, scope: !16664)
!16664 = distinct !DILexicalBlock(scope: !16665, file: !16369, line: 226, column: 7)
!16665 = distinct !DILexicalBlock(scope: !16586, file: !16369, line: 226, column: 7)
!16666 = !DILocation(line: 229, column: 3, scope: !16577)
!16667 = !DILocation(line: 230, column: 1, scope: !16577)
!16668 = distinct !DISubprogram(name: "savewd_finish", scope: !16369, file: !16369, line: 233, type: !1813, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1799, retainedNodes: !209)
!16669 = !DILocalVariable(name: "wd", arg: 1, scope: !16668, file: !16369, line: 233, type: !1815)
!16670 = !DILocation(line: 233, column: 31, scope: !16668)
!16671 = !DILocation(line: 235, column: 11, scope: !16668)
!16672 = !DILocation(line: 235, column: 15, scope: !16668)
!16673 = !DILocation(line: 235, column: 3, scope: !16668)
!16674 = !DILocation(line: 239, column: 7, scope: !16675)
!16675 = distinct !DILexicalBlock(scope: !16668, file: !16369, line: 236, column: 5)
!16676 = !DILocation(line: 243, column: 14, scope: !16675)
!16677 = !DILocation(line: 243, column: 18, scope: !16675)
!16678 = !DILocation(line: 243, column: 22, scope: !16675)
!16679 = !DILocation(line: 243, column: 7, scope: !16675)
!16680 = !DILocation(line: 244, column: 7, scope: !16675)
!16681 = !DILocation(line: 247, column: 7, scope: !16682)
!16682 = distinct !DILexicalBlock(scope: !16683, file: !16369, line: 247, column: 7)
!16683 = distinct !DILexicalBlock(scope: !16675, file: !16369, line: 247, column: 7)
!16684 = !DILocation(line: 247, column: 7, scope: !16683)
!16685 = !DILocation(line: 248, column: 7, scope: !16675)
!16686 = !DILocation(line: 251, column: 7, scope: !16687)
!16687 = distinct !DILexicalBlock(scope: !16688, file: !16369, line: 251, column: 7)
!16688 = distinct !DILexicalBlock(scope: !16675, file: !16369, line: 251, column: 7)
!16689 = !DILocation(line: 254, column: 3, scope: !16668)
!16690 = !DILocation(line: 254, column: 7, scope: !16668)
!16691 = !DILocation(line: 254, column: 13, scope: !16668)
!16692 = !DILocation(line: 255, column: 1, scope: !16668)
!16693 = distinct !DISubprogram(name: "savewd_process_files", scope: !16369, file: !16369, line: 274, type: !1824, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1799, retainedNodes: !209)
!16694 = !DILocalVariable(name: "n_files", arg: 1, scope: !16693, file: !16369, line: 274, type: !7)
!16695 = !DILocation(line: 274, column: 27, scope: !16693)
!16696 = !DILocalVariable(name: "file", arg: 2, scope: !16693, file: !16369, line: 274, type: !184)
!16697 = !DILocation(line: 274, column: 43, scope: !16693)
!16698 = !DILocalVariable(name: "act", arg: 3, scope: !16693, file: !16369, line: 275, type: !1826)
!16699 = !DILocation(line: 275, column: 29, scope: !16693)
!16700 = !DILocalVariable(name: "options", arg: 4, scope: !16693, file: !16369, line: 276, type: !53)
!16701 = !DILocation(line: 276, column: 29, scope: !16693)
!16702 = !DILocalVariable(name: "i", scope: !16693, file: !16369, line: 278, type: !7)
!16703 = !DILocation(line: 278, column: 7, scope: !16693)
!16704 = !DILocalVariable(name: "last_relative", scope: !16693, file: !16369, line: 279, type: !7)
!16705 = !DILocation(line: 279, column: 7, scope: !16693)
!16706 = !DILocalVariable(name: "exit_status", scope: !16693, file: !16369, line: 280, type: !7)
!16707 = !DILocation(line: 280, column: 7, scope: !16693)
!16708 = !DILocalVariable(name: "wd", scope: !16693, file: !16369, line: 281, type: !1803)
!16709 = !DILocation(line: 281, column: 17, scope: !16693)
!16710 = !DILocation(line: 282, column: 3, scope: !16693)
!16711 = !DILocation(line: 284, column: 24, scope: !16712)
!16712 = distinct !DILexicalBlock(scope: !16693, file: !16369, line: 284, column: 3)
!16713 = !DILocation(line: 284, column: 32, scope: !16712)
!16714 = !DILocation(line: 284, column: 22, scope: !16712)
!16715 = !DILocation(line: 284, column: 8, scope: !16712)
!16716 = !DILocation(line: 284, column: 42, scope: !16717)
!16717 = distinct !DILexicalBlock(scope: !16712, file: !16369, line: 284, column: 3)
!16718 = !DILocation(line: 284, column: 39, scope: !16717)
!16719 = !DILocation(line: 284, column: 3, scope: !16712)
!16720 = !DILocation(line: 285, column: 11, scope: !16721)
!16721 = distinct !DILexicalBlock(scope: !16717, file: !16369, line: 285, column: 9)
!16722 = !DILocation(line: 285, column: 9, scope: !16717)
!16723 = !DILocation(line: 286, column: 7, scope: !16721)
!16724 = !DILocation(line: 284, column: 70, scope: !16717)
!16725 = !DILocation(line: 284, column: 3, scope: !16717)
!16726 = distinct !{!16726, !16719, !16727}
!16727 = !DILocation(line: 286, column: 7, scope: !16712)
!16728 = !DILocation(line: 288, column: 3, scope: !16693)
!16729 = !DILocation(line: 288, column: 10, scope: !16730)
!16730 = distinct !DILexicalBlock(scope: !16731, file: !16369, line: 288, column: 3)
!16731 = distinct !DILexicalBlock(scope: !16693, file: !16369, line: 288, column: 3)
!16732 = !DILocation(line: 288, column: 14, scope: !16730)
!16733 = !DILocation(line: 288, column: 12, scope: !16730)
!16734 = !DILocation(line: 288, column: 3, scope: !16731)
!16735 = !DILocation(line: 290, column: 13, scope: !16736)
!16736 = distinct !DILexicalBlock(scope: !16737, file: !16369, line: 290, column: 11)
!16737 = distinct !DILexicalBlock(scope: !16730, file: !16369, line: 289, column: 5)
!16738 = !DILocation(line: 290, column: 11, scope: !16737)
!16739 = !DILocalVariable(name: "s", scope: !16740, file: !16369, line: 292, type: !7)
!16740 = distinct !DILexicalBlock(scope: !16736, file: !16369, line: 291, column: 9)
!16741 = !DILocation(line: 292, column: 15, scope: !16740)
!16742 = !DILocation(line: 292, column: 19, scope: !16740)
!16743 = !DILocation(line: 292, column: 24, scope: !16740)
!16744 = !DILocation(line: 292, column: 29, scope: !16740)
!16745 = !DILocation(line: 292, column: 38, scope: !16740)
!16746 = !DILocation(line: 293, column: 15, scope: !16747)
!16747 = distinct !DILexicalBlock(scope: !16740, file: !16369, line: 293, column: 15)
!16748 = !DILocation(line: 293, column: 29, scope: !16747)
!16749 = !DILocation(line: 293, column: 27, scope: !16747)
!16750 = !DILocation(line: 293, column: 15, scope: !16740)
!16751 = !DILocation(line: 294, column: 27, scope: !16747)
!16752 = !DILocation(line: 294, column: 25, scope: !16747)
!16753 = !DILocation(line: 294, column: 13, scope: !16747)
!16754 = !DILocation(line: 295, column: 9, scope: !16740)
!16755 = !DILocation(line: 297, column: 13, scope: !16756)
!16756 = distinct !DILexicalBlock(scope: !16737, file: !16369, line: 297, column: 11)
!16757 = !DILocation(line: 297, column: 11, scope: !16737)
!16758 = !DILocalVariable(name: "r", scope: !16759, file: !16369, line: 299, type: !7)
!16759 = distinct !DILexicalBlock(scope: !16756, file: !16369, line: 298, column: 9)
!16760 = !DILocation(line: 299, column: 15, scope: !16759)
!16761 = !DILocation(line: 299, column: 40, scope: !16759)
!16762 = !DILocation(line: 299, column: 19, scope: !16759)
!16763 = !DILocation(line: 300, column: 15, scope: !16764)
!16764 = distinct !DILexicalBlock(scope: !16759, file: !16369, line: 300, column: 15)
!16765 = !DILocation(line: 300, column: 29, scope: !16764)
!16766 = !DILocation(line: 300, column: 27, scope: !16764)
!16767 = !DILocation(line: 300, column: 15, scope: !16759)
!16768 = !DILocation(line: 301, column: 27, scope: !16764)
!16769 = !DILocation(line: 301, column: 25, scope: !16764)
!16770 = !DILocation(line: 301, column: 13, scope: !16764)
!16771 = !DILocation(line: 302, column: 9, scope: !16759)
!16772 = !DILocation(line: 303, column: 5, scope: !16737)
!16773 = !DILocation(line: 288, column: 30, scope: !16730)
!16774 = !DILocation(line: 288, column: 3, scope: !16730)
!16775 = distinct !{!16775, !16734, !16776}
!16776 = !DILocation(line: 303, column: 5, scope: !16731)
!16777 = !DILocation(line: 305, column: 3, scope: !16693)
!16778 = !DILocation(line: 307, column: 3, scope: !16693)
!16779 = !DILocation(line: 307, column: 10, scope: !16780)
!16780 = distinct !DILexicalBlock(scope: !16781, file: !16369, line: 307, column: 3)
!16781 = distinct !DILexicalBlock(scope: !16693, file: !16369, line: 307, column: 3)
!16782 = !DILocation(line: 307, column: 14, scope: !16780)
!16783 = !DILocation(line: 307, column: 12, scope: !16780)
!16784 = !DILocation(line: 307, column: 3, scope: !16781)
!16785 = !DILocalVariable(name: "s", scope: !16786, file: !16369, line: 309, type: !7)
!16786 = distinct !DILexicalBlock(scope: !16780, file: !16369, line: 308, column: 5)
!16787 = !DILocation(line: 309, column: 11, scope: !16786)
!16788 = !DILocation(line: 309, column: 15, scope: !16786)
!16789 = !DILocation(line: 309, column: 20, scope: !16786)
!16790 = !DILocation(line: 309, column: 25, scope: !16786)
!16791 = !DILocation(line: 309, column: 34, scope: !16786)
!16792 = !DILocation(line: 310, column: 11, scope: !16793)
!16793 = distinct !DILexicalBlock(scope: !16786, file: !16369, line: 310, column: 11)
!16794 = !DILocation(line: 310, column: 25, scope: !16793)
!16795 = !DILocation(line: 310, column: 23, scope: !16793)
!16796 = !DILocation(line: 310, column: 11, scope: !16786)
!16797 = !DILocation(line: 311, column: 23, scope: !16793)
!16798 = !DILocation(line: 311, column: 21, scope: !16793)
!16799 = !DILocation(line: 311, column: 9, scope: !16793)
!16800 = !DILocation(line: 312, column: 5, scope: !16786)
!16801 = !DILocation(line: 307, column: 24, scope: !16780)
!16802 = !DILocation(line: 307, column: 3, scope: !16780)
!16803 = distinct !{!16803, !16784, !16804}
!16804 = !DILocation(line: 312, column: 5, scope: !16781)
!16805 = !DILocation(line: 314, column: 10, scope: !16693)
!16806 = !DILocation(line: 314, column: 3, scope: !16693)
!16807 = distinct !DISubprogram(name: "savewd_delegating", scope: !16369, file: !16369, line: 268, type: !1831, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1799, retainedNodes: !209)
!16808 = !DILocalVariable(name: "wd", arg: 1, scope: !16807, file: !16369, line: 268, type: !1818)
!16809 = !DILocation(line: 268, column: 41, scope: !16807)
!16810 = !DILocation(line: 270, column: 10, scope: !16807)
!16811 = !DILocation(line: 270, column: 14, scope: !16807)
!16812 = !DILocation(line: 270, column: 20, scope: !16807)
!16813 = !DILocation(line: 270, column: 37, scope: !16807)
!16814 = !DILocation(line: 270, column: 44, scope: !16807)
!16815 = !DILocation(line: 270, column: 48, scope: !16807)
!16816 = !DILocation(line: 270, column: 52, scope: !16807)
!16817 = !DILocation(line: 270, column: 42, scope: !16807)
!16818 = !DILocation(line: 0, scope: !16807)
!16819 = !DILocation(line: 270, column: 3, scope: !16807)
!16820 = distinct !DISubprogram(name: "getcon", scope: !1840, file: !1840, line: 87, type: !1836, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1833, retainedNodes: !209)
!16821 = !DILocalVariable(name: "con", arg: 1, scope: !16820, file: !1840, line: 87, type: !1838)
!16822 = !DILocation(line: 87, column: 29, scope: !16820)
!16823 = !DILocation(line: 88, column: 5, scope: !16820)
!16824 = !DILocation(line: 88, column: 11, scope: !16820)
!16825 = !DILocation(line: 88, column: 22, scope: !16820)
!16826 = distinct !DISubprogram(name: "freecon", scope: !1840, file: !1840, line: 90, type: !1841, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1833, retainedNodes: !209)
!16827 = !DILocalVariable(name: "con", arg: 1, scope: !16826, file: !1840, line: 90, type: !1839)
!16828 = !DILocation(line: 90, column: 29, scope: !16826)
!16829 = !DILocation(line: 90, column: 56, scope: !16826)
!16830 = distinct !DISubprogram(name: "getfscreatecon", scope: !1840, file: !1840, line: 93, type: !1836, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1833, retainedNodes: !209)
!16831 = !DILocalVariable(name: "con", arg: 1, scope: !16830, file: !1840, line: 93, type: !1838)
!16832 = !DILocation(line: 93, column: 37, scope: !16830)
!16833 = !DILocation(line: 94, column: 5, scope: !16830)
!16834 = !DILocation(line: 94, column: 11, scope: !16830)
!16835 = !DILocation(line: 94, column: 22, scope: !16830)
!16836 = distinct !DISubprogram(name: "setfscreatecon", scope: !1840, file: !1840, line: 96, type: !1843, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1833, retainedNodes: !209)
!16837 = !DILocalVariable(name: "con", arg: 1, scope: !16836, file: !1840, line: 96, type: !1839)
!16838 = !DILocation(line: 96, column: 36, scope: !16836)
!16839 = !DILocation(line: 97, column: 5, scope: !16836)
!16840 = !DILocation(line: 97, column: 11, scope: !16836)
!16841 = !DILocation(line: 97, column: 22, scope: !16836)
!16842 = distinct !DISubprogram(name: "matchpathcon", scope: !1840, file: !1840, line: 99, type: !1845, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1833, retainedNodes: !209)
!16843 = !DILocalVariable(name: "file", arg: 1, scope: !16842, file: !1840, line: 99, type: !180)
!16844 = !DILocation(line: 99, column: 27, scope: !16842)
!16845 = !DILocalVariable(name: "m", arg: 2, scope: !16842, file: !1840, line: 100, type: !139)
!16846 = !DILocation(line: 100, column: 22, scope: !16842)
!16847 = !DILocalVariable(name: "con", arg: 3, scope: !16842, file: !1840, line: 101, type: !1838)
!16848 = !DILocation(line: 101, column: 23, scope: !16842)
!16849 = !DILocation(line: 102, column: 5, scope: !16842)
!16850 = !DILocation(line: 102, column: 11, scope: !16842)
!16851 = !DILocation(line: 102, column: 22, scope: !16842)
!16852 = distinct !DISubprogram(name: "getfilecon", scope: !1840, file: !1840, line: 104, type: !1847, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1833, retainedNodes: !209)
!16853 = !DILocalVariable(name: "file", arg: 1, scope: !16852, file: !1840, line: 104, type: !180)
!16854 = !DILocation(line: 104, column: 25, scope: !16852)
!16855 = !DILocalVariable(name: "con", arg: 2, scope: !16852, file: !1840, line: 105, type: !1838)
!16856 = !DILocation(line: 105, column: 33, scope: !16852)
!16857 = !DILocation(line: 106, column: 5, scope: !16852)
!16858 = !DILocation(line: 106, column: 11, scope: !16852)
!16859 = !DILocation(line: 106, column: 22, scope: !16852)
!16860 = distinct !DISubprogram(name: "lgetfilecon", scope: !1840, file: !1840, line: 108, type: !1847, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1833, retainedNodes: !209)
!16861 = !DILocalVariable(name: "file", arg: 1, scope: !16860, file: !1840, line: 108, type: !180)
!16862 = !DILocation(line: 108, column: 26, scope: !16860)
!16863 = !DILocalVariable(name: "con", arg: 2, scope: !16860, file: !1840, line: 109, type: !1838)
!16864 = !DILocation(line: 109, column: 34, scope: !16860)
!16865 = !DILocation(line: 110, column: 5, scope: !16860)
!16866 = !DILocation(line: 110, column: 11, scope: !16860)
!16867 = !DILocation(line: 110, column: 22, scope: !16860)
!16868 = distinct !DISubprogram(name: "fgetfilecon", scope: !1840, file: !1840, line: 112, type: !1849, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1833, retainedNodes: !209)
!16869 = !DILocalVariable(name: "fd", arg: 1, scope: !16868, file: !1840, line: 112, type: !7)
!16870 = !DILocation(line: 112, column: 18, scope: !16868)
!16871 = !DILocalVariable(name: "con", arg: 2, scope: !16868, file: !1840, line: 112, type: !1838)
!16872 = !DILocation(line: 112, column: 42, scope: !16868)
!16873 = !DILocation(line: 113, column: 5, scope: !16868)
!16874 = !DILocation(line: 113, column: 11, scope: !16868)
!16875 = !DILocation(line: 113, column: 22, scope: !16868)
!16876 = distinct !DISubprogram(name: "setfilecon", scope: !1840, file: !1840, line: 115, type: !1851, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1833, retainedNodes: !209)
!16877 = !DILocalVariable(name: "file", arg: 1, scope: !16876, file: !1840, line: 115, type: !180)
!16878 = !DILocation(line: 115, column: 25, scope: !16876)
!16879 = !DILocalVariable(name: "con", arg: 2, scope: !16876, file: !1840, line: 116, type: !1839)
!16880 = !DILocation(line: 116, column: 32, scope: !16876)
!16881 = !DILocation(line: 117, column: 5, scope: !16876)
!16882 = !DILocation(line: 117, column: 11, scope: !16876)
!16883 = !DILocation(line: 117, column: 22, scope: !16876)
!16884 = distinct !DISubprogram(name: "lsetfilecon", scope: !1840, file: !1840, line: 119, type: !1851, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1833, retainedNodes: !209)
!16885 = !DILocalVariable(name: "file", arg: 1, scope: !16884, file: !1840, line: 119, type: !180)
!16886 = !DILocation(line: 119, column: 26, scope: !16884)
!16887 = !DILocalVariable(name: "con", arg: 2, scope: !16884, file: !1840, line: 120, type: !1839)
!16888 = !DILocation(line: 120, column: 33, scope: !16884)
!16889 = !DILocation(line: 121, column: 5, scope: !16884)
!16890 = !DILocation(line: 121, column: 11, scope: !16884)
!16891 = !DILocation(line: 121, column: 22, scope: !16884)
!16892 = distinct !DISubprogram(name: "fsetfilecon", scope: !1840, file: !1840, line: 123, type: !1853, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1833, retainedNodes: !209)
!16893 = !DILocalVariable(name: "fd", arg: 1, scope: !16892, file: !1840, line: 123, type: !7)
!16894 = !DILocation(line: 123, column: 18, scope: !16892)
!16895 = !DILocalVariable(name: "con", arg: 2, scope: !16892, file: !1840, line: 124, type: !1839)
!16896 = !DILocation(line: 124, column: 33, scope: !16892)
!16897 = !DILocation(line: 125, column: 5, scope: !16892)
!16898 = !DILocation(line: 125, column: 11, scope: !16892)
!16899 = !DILocation(line: 125, column: 22, scope: !16892)
!16900 = distinct !DISubprogram(name: "security_check_context", scope: !1840, file: !1840, line: 128, type: !1843, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1833, retainedNodes: !209)
!16901 = !DILocalVariable(name: "con", arg: 1, scope: !16900, file: !1840, line: 128, type: !1839)
!16902 = !DILocation(line: 128, column: 44, scope: !16900)
!16903 = !DILocation(line: 129, column: 5, scope: !16900)
!16904 = !DILocation(line: 129, column: 11, scope: !16900)
!16905 = !DILocation(line: 129, column: 22, scope: !16900)
!16906 = distinct !DISubprogram(name: "security_check_context_raw", scope: !1840, file: !1840, line: 131, type: !1843, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1833, retainedNodes: !209)
!16907 = !DILocalVariable(name: "con", arg: 1, scope: !16906, file: !1840, line: 131, type: !1839)
!16908 = !DILocation(line: 131, column: 48, scope: !16906)
!16909 = !DILocation(line: 132, column: 5, scope: !16906)
!16910 = !DILocation(line: 132, column: 11, scope: !16906)
!16911 = !DILocation(line: 132, column: 22, scope: !16906)
!16912 = distinct !DISubprogram(name: "setexeccon", scope: !1840, file: !1840, line: 134, type: !1843, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1833, retainedNodes: !209)
!16913 = !DILocalVariable(name: "con", arg: 1, scope: !16912, file: !1840, line: 134, type: !1839)
!16914 = !DILocation(line: 134, column: 32, scope: !16912)
!16915 = !DILocation(line: 135, column: 5, scope: !16912)
!16916 = !DILocation(line: 135, column: 11, scope: !16912)
!16917 = !DILocation(line: 135, column: 22, scope: !16912)
!16918 = distinct !DISubprogram(name: "security_compute_create", scope: !1840, file: !1840, line: 137, type: !1855, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1833, retainedNodes: !209)
!16919 = !DILocalVariable(name: "scon", arg: 1, scope: !16918, file: !1840, line: 137, type: !1839)
!16920 = !DILocation(line: 137, column: 45, scope: !16918)
!16921 = !DILocalVariable(name: "tcon", arg: 2, scope: !16918, file: !1840, line: 138, type: !1839)
!16922 = !DILocation(line: 138, column: 45, scope: !16918)
!16923 = !DILocalVariable(name: "tclass", arg: 3, scope: !16918, file: !1840, line: 139, type: !1857)
!16924 = !DILocation(line: 139, column: 43, scope: !16918)
!16925 = !DILocalVariable(name: "newcon", arg: 4, scope: !16918, file: !1840, line: 140, type: !1838)
!16926 = !DILocation(line: 140, column: 46, scope: !16918)
!16927 = !DILocation(line: 141, column: 5, scope: !16918)
!16928 = !DILocation(line: 141, column: 11, scope: !16918)
!16929 = !DILocation(line: 141, column: 22, scope: !16918)
!16930 = distinct !DISubprogram(name: "string_to_security_class", scope: !1840, file: !1840, line: 143, type: !1858, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1833, retainedNodes: !209)
!16931 = !DILocalVariable(name: "name", arg: 1, scope: !16930, file: !1840, line: 143, type: !180)
!16932 = !DILocation(line: 143, column: 39, scope: !16930)
!16933 = !DILocation(line: 144, column: 5, scope: !16930)
!16934 = !DILocation(line: 144, column: 11, scope: !16930)
!16935 = !DILocation(line: 144, column: 22, scope: !16930)
!16936 = distinct !DISubprogram(name: "matchpathcon_init_prefix", scope: !1840, file: !1840, line: 146, type: !1860, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1833, retainedNodes: !209)
!16937 = !DILocalVariable(name: "path", arg: 1, scope: !16936, file: !1840, line: 146, type: !180)
!16938 = !DILocation(line: 146, column: 39, scope: !16936)
!16939 = !DILocalVariable(name: "prefix", arg: 2, scope: !16936, file: !1840, line: 147, type: !180)
!16940 = !DILocation(line: 147, column: 39, scope: !16936)
!16941 = !DILocation(line: 148, column: 5, scope: !16936)
!16942 = !DILocation(line: 148, column: 11, scope: !16936)
!16943 = !DILocation(line: 148, column: 22, scope: !16936)
!16944 = distinct !DISubprogram(name: "get_stat_atime_ns", scope: !16945, file: !16945, line: 66, type: !1865, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1862, retainedNodes: !209)
!16945 = !DIFile(filename: "./lib/stat-time.h", directory: "/home/mbarbar/software/coreutils-8.31")
!16946 = !DILocalVariable(name: "st", arg: 1, scope: !16944, file: !16945, line: 66, type: !1867)
!16947 = !DILocation(line: 66, column: 39, scope: !16944)
!16948 = !DILocation(line: 69, column: 10, scope: !16944)
!16949 = !DILocation(line: 69, column: 38, scope: !16944)
!16950 = !{!2912, !2913, i64 80}
!16951 = !DILocation(line: 69, column: 3, scope: !16944)
!16952 = distinct !DISubprogram(name: "get_stat_ctime_ns", scope: !16945, file: !16945, line: 79, type: !1865, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1862, retainedNodes: !209)
!16953 = !DILocalVariable(name: "st", arg: 1, scope: !16952, file: !16945, line: 79, type: !1867)
!16954 = !DILocation(line: 79, column: 39, scope: !16952)
!16955 = !DILocation(line: 82, column: 10, scope: !16952)
!16956 = !DILocation(line: 82, column: 38, scope: !16952)
!16957 = !{!2912, !2913, i64 112}
!16958 = !DILocation(line: 82, column: 3, scope: !16952)
!16959 = distinct !DISubprogram(name: "get_stat_mtime_ns", scope: !16945, file: !16945, line: 92, type: !1865, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1862, retainedNodes: !209)
!16960 = !DILocalVariable(name: "st", arg: 1, scope: !16959, file: !16945, line: 92, type: !1867)
!16961 = !DILocation(line: 92, column: 39, scope: !16959)
!16962 = !DILocation(line: 95, column: 10, scope: !16959)
!16963 = !DILocation(line: 95, column: 38, scope: !16959)
!16964 = !{!2912, !2913, i64 96}
!16965 = !DILocation(line: 95, column: 3, scope: !16959)
!16966 = distinct !DISubprogram(name: "get_stat_birthtime_ns", scope: !16945, file: !16945, line: 105, type: !1865, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1862, retainedNodes: !209)
!16967 = !DILocalVariable(name: "st", arg: 1, scope: !16966, file: !16945, line: 105, type: !1867)
!16968 = !DILocation(line: 105, column: 43, scope: !16966)
!16969 = !DILocation(line: 112, column: 3, scope: !16966)
!16970 = distinct !DISubprogram(name: "get_stat_atime", scope: !16945, file: !16945, line: 118, type: !1890, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1862, retainedNodes: !209)
!16971 = !DILocalVariable(name: "st", arg: 1, scope: !16970, file: !16945, line: 118, type: !1867)
!16972 = !DILocation(line: 118, column: 36, scope: !16970)
!16973 = !DILocation(line: 121, column: 10, scope: !16970)
!16974 = !DILocation(line: 121, column: 3, scope: !16970)
!16975 = distinct !DISubprogram(name: "get_stat_ctime", scope: !16945, file: !16945, line: 132, type: !1890, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1862, retainedNodes: !209)
!16976 = !DILocalVariable(name: "st", arg: 1, scope: !16975, file: !16945, line: 132, type: !1867)
!16977 = !DILocation(line: 132, column: 36, scope: !16975)
!16978 = !DILocation(line: 135, column: 10, scope: !16975)
!16979 = !DILocation(line: 135, column: 3, scope: !16975)
!16980 = distinct !DISubprogram(name: "get_stat_mtime", scope: !16945, file: !16945, line: 146, type: !1890, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1862, retainedNodes: !209)
!16981 = !DILocalVariable(name: "st", arg: 1, scope: !16980, file: !16945, line: 146, type: !1867)
!16982 = !DILocation(line: 146, column: 36, scope: !16980)
!16983 = !DILocation(line: 149, column: 10, scope: !16980)
!16984 = !DILocation(line: 149, column: 3, scope: !16980)
!16985 = distinct !DISubprogram(name: "get_stat_birthtime", scope: !16945, file: !16945, line: 161, type: !1890, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1862, retainedNodes: !209)
!16986 = !DILocalVariable(name: "st", arg: 1, scope: !16985, file: !16945, line: 161, type: !1867)
!16987 = !DILocation(line: 161, column: 40, scope: !16985)
!16988 = !DILocalVariable(name: "t", scope: !16985, file: !16945, line: 163, type: !1883)
!16989 = !DILocation(line: 163, column: 19, scope: !16985)
!16990 = !DILocation(line: 183, column: 5, scope: !16985)
!16991 = !DILocation(line: 183, column: 12, scope: !16985)
!16992 = !{!2914, !2913, i64 0}
!16993 = !DILocation(line: 184, column: 5, scope: !16985)
!16994 = !DILocation(line: 184, column: 13, scope: !16985)
!16995 = !{!2914, !2913, i64 8}
!16996 = !DILocation(line: 202, column: 3, scope: !16985)
!16997 = distinct !DISubprogram(name: "stat_time_normalize", scope: !16945, file: !16945, line: 211, type: !1892, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1862, retainedNodes: !209)
!16998 = !DILocalVariable(name: "result", arg: 1, scope: !16997, file: !16945, line: 211, type: !7)
!16999 = !DILocation(line: 211, column: 26, scope: !16997)
!17000 = !DILocalVariable(name: "st", arg: 2, scope: !16997, file: !16945, line: 211, type: !1894)
!17001 = !DILocation(line: 211, column: 47, scope: !16997)
!17002 = !DILocation(line: 243, column: 10, scope: !16997)
!17003 = !DILocation(line: 243, column: 3, scope: !16997)
!17004 = distinct !DISubprogram(name: "statat", scope: !17005, file: !17005, line: 102, type: !1898, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1895, retainedNodes: !209)
!17005 = !DIFile(filename: "./lib/openat.h", directory: "/home/mbarbar/software/coreutils-8.31")
!17006 = !DILocalVariable(name: "fd", arg: 1, scope: !17004, file: !17005, line: 102, type: !7)
!17007 = !DILocation(line: 102, column: 13, scope: !17004)
!17008 = !DILocalVariable(name: "name", arg: 2, scope: !17004, file: !17005, line: 102, type: !180)
!17009 = !DILocation(line: 102, column: 29, scope: !17004)
!17010 = !DILocalVariable(name: "st", arg: 3, scope: !17004, file: !17005, line: 102, type: !1900)
!17011 = !DILocation(line: 102, column: 48, scope: !17004)
!17012 = !DILocation(line: 104, column: 19, scope: !17004)
!17013 = !DILocation(line: 104, column: 23, scope: !17004)
!17014 = !DILocation(line: 104, column: 29, scope: !17004)
!17015 = !DILocation(line: 104, column: 10, scope: !17004)
!17016 = !DILocation(line: 104, column: 3, scope: !17004)
!17017 = distinct !DISubprogram(name: "lstatat", scope: !17005, file: !17005, line: 108, type: !1898, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1895, retainedNodes: !209)
!17018 = !DILocalVariable(name: "fd", arg: 1, scope: !17017, file: !17005, line: 108, type: !7)
!17019 = !DILocation(line: 108, column: 14, scope: !17017)
!17020 = !DILocalVariable(name: "name", arg: 2, scope: !17017, file: !17005, line: 108, type: !180)
!17021 = !DILocation(line: 108, column: 30, scope: !17017)
!17022 = !DILocalVariable(name: "st", arg: 3, scope: !17017, file: !17005, line: 108, type: !1900)
!17023 = !DILocation(line: 108, column: 49, scope: !17017)
!17024 = !DILocation(line: 110, column: 19, scope: !17017)
!17025 = !DILocation(line: 110, column: 23, scope: !17017)
!17026 = !DILocation(line: 110, column: 29, scope: !17017)
!17027 = !DILocation(line: 110, column: 10, scope: !17017)
!17028 = !DILocation(line: 110, column: 3, scope: !17017)
!17029 = distinct !DISubprogram(name: "try_tempname_len", scope: !1213, file: !1213, line: 188, type: !1195, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1192, retainedNodes: !209)
!17030 = !DILocalVariable(name: "tmpl", arg: 1, scope: !17029, file: !1213, line: 188, type: !9)
!17031 = !DILocation(line: 188, column: 25, scope: !17029)
!17032 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !17029, file: !1213, line: 188, type: !7)
!17033 = !DILocation(line: 188, column: 35, scope: !17029)
!17034 = !DILocalVariable(name: "args", arg: 3, scope: !17029, file: !1213, line: 188, type: !53)
!17035 = !DILocation(line: 188, column: 52, scope: !17029)
!17036 = !DILocalVariable(name: "tryfunc", arg: 4, scope: !17029, file: !1213, line: 189, type: !1197)
!17037 = !DILocation(line: 189, column: 25, scope: !17029)
!17038 = !DILocalVariable(name: "x_suffix_len", arg: 5, scope: !17029, file: !1213, line: 189, type: !55)
!17039 = !DILocation(line: 189, column: 59, scope: !17029)
!17040 = !DILocalVariable(name: "len", scope: !17029, file: !1213, line: 191, type: !55)
!17041 = !DILocation(line: 191, column: 10, scope: !17029)
!17042 = !DILocalVariable(name: "XXXXXX", scope: !17029, file: !1213, line: 192, type: !9)
!17043 = !DILocation(line: 192, column: 9, scope: !17029)
!17044 = !DILocalVariable(name: "count", scope: !17029, file: !1213, line: 193, type: !70)
!17045 = !DILocation(line: 193, column: 16, scope: !17029)
!17046 = !DILocalVariable(name: "fd", scope: !17029, file: !1213, line: 194, type: !7)
!17047 = !DILocation(line: 194, column: 7, scope: !17029)
!17048 = !DILocalVariable(name: "save_errno", scope: !17029, file: !1213, line: 195, type: !7)
!17049 = !DILocation(line: 195, column: 7, scope: !17029)
!17050 = !DILocation(line: 195, column: 20, scope: !17029)
!17051 = !DILocalVariable(name: "rand_src", scope: !17029, file: !1213, line: 196, type: !1198)
!17052 = !DILocation(line: 196, column: 26, scope: !17029)
!17053 = !DILocalVariable(name: "attempts", scope: !17029, file: !1213, line: 212, type: !70)
!17054 = !DILocation(line: 212, column: 16, scope: !17029)
!17055 = !DILocation(line: 215, column: 17, scope: !17029)
!17056 = !DILocation(line: 215, column: 9, scope: !17029)
!17057 = !DILocation(line: 215, column: 7, scope: !17029)
!17058 = !DILocation(line: 216, column: 7, scope: !17059)
!17059 = distinct !DILexicalBlock(scope: !17029, file: !1213, line: 216, column: 7)
!17060 = !DILocation(line: 216, column: 13, scope: !17059)
!17061 = !DILocation(line: 216, column: 28, scope: !17059)
!17062 = !DILocation(line: 216, column: 26, scope: !17059)
!17063 = !DILocation(line: 216, column: 11, scope: !17059)
!17064 = !DILocation(line: 217, column: 7, scope: !17059)
!17065 = !DILocation(line: 217, column: 29, scope: !17059)
!17066 = !DILocation(line: 217, column: 34, scope: !17059)
!17067 = !DILocation(line: 217, column: 40, scope: !17059)
!17068 = !DILocation(line: 217, column: 38, scope: !17059)
!17069 = !DILocation(line: 217, column: 55, scope: !17059)
!17070 = !DILocation(line: 217, column: 53, scope: !17059)
!17071 = !DILocation(line: 218, column: 28, scope: !17059)
!17072 = !DILocation(line: 217, column: 12, scope: !17059)
!17073 = !DILocation(line: 216, column: 7, scope: !17029)
!17074 = !DILocation(line: 220, column: 7, scope: !17075)
!17075 = distinct !DILexicalBlock(scope: !17059, file: !1213, line: 219, column: 5)
!17076 = !DILocation(line: 221, column: 7, scope: !17075)
!17077 = !DILocation(line: 225, column: 13, scope: !17029)
!17078 = !DILocation(line: 225, column: 18, scope: !17029)
!17079 = !DILocation(line: 225, column: 24, scope: !17029)
!17080 = !DILocation(line: 225, column: 22, scope: !17029)
!17081 = !DILocation(line: 225, column: 39, scope: !17029)
!17082 = !DILocation(line: 225, column: 37, scope: !17029)
!17083 = !DILocation(line: 225, column: 10, scope: !17029)
!17084 = !DILocation(line: 228, column: 37, scope: !17029)
!17085 = !DILocation(line: 228, column: 14, scope: !17029)
!17086 = !DILocation(line: 228, column: 12, scope: !17029)
!17087 = !DILocation(line: 229, column: 9, scope: !17088)
!17088 = distinct !DILexicalBlock(scope: !17029, file: !1213, line: 229, column: 7)
!17089 = !DILocation(line: 229, column: 7, scope: !17029)
!17090 = !DILocation(line: 230, column: 5, scope: !17088)
!17091 = !DILocation(line: 232, column: 14, scope: !17092)
!17092 = distinct !DILexicalBlock(scope: !17029, file: !1213, line: 232, column: 3)
!17093 = !DILocation(line: 232, column: 8, scope: !17092)
!17094 = !DILocation(line: 232, column: 19, scope: !17095)
!17095 = distinct !DILexicalBlock(scope: !17092, file: !1213, line: 232, column: 3)
!17096 = !DILocation(line: 232, column: 27, scope: !17095)
!17097 = !DILocation(line: 232, column: 25, scope: !17095)
!17098 = !DILocation(line: 232, column: 3, scope: !17092)
!17099 = !DILocalVariable(name: "i", scope: !17100, file: !1213, line: 234, type: !55)
!17100 = distinct !DILexicalBlock(scope: !17095, file: !1213, line: 233, column: 5)
!17101 = !DILocation(line: 234, column: 14, scope: !17100)
!17102 = !DILocation(line: 236, column: 14, scope: !17103)
!17103 = distinct !DILexicalBlock(scope: !17100, file: !1213, line: 236, column: 7)
!17104 = !DILocation(line: 236, column: 12, scope: !17103)
!17105 = !DILocation(line: 236, column: 19, scope: !17106)
!17106 = distinct !DILexicalBlock(scope: !17103, file: !1213, line: 236, column: 7)
!17107 = !DILocation(line: 236, column: 23, scope: !17106)
!17108 = !DILocation(line: 236, column: 21, scope: !17106)
!17109 = !DILocation(line: 236, column: 7, scope: !17103)
!17110 = !DILocation(line: 237, column: 45, scope: !17106)
!17111 = !DILocation(line: 237, column: 29, scope: !17106)
!17112 = !DILocation(line: 237, column: 21, scope: !17106)
!17113 = !DILocation(line: 237, column: 9, scope: !17106)
!17114 = !DILocation(line: 237, column: 16, scope: !17106)
!17115 = !DILocation(line: 237, column: 19, scope: !17106)
!17116 = !DILocation(line: 236, column: 38, scope: !17106)
!17117 = !DILocation(line: 236, column: 7, scope: !17106)
!17118 = distinct !{!17118, !17109, !17119}
!17119 = !DILocation(line: 237, column: 74, scope: !17103)
!17120 = !DILocation(line: 239, column: 12, scope: !17100)
!17121 = !DILocation(line: 239, column: 21, scope: !17100)
!17122 = !DILocation(line: 239, column: 27, scope: !17100)
!17123 = !DILocation(line: 239, column: 10, scope: !17100)
!17124 = !DILocation(line: 240, column: 11, scope: !17125)
!17125 = distinct !DILexicalBlock(scope: !17100, file: !1213, line: 240, column: 11)
!17126 = !DILocation(line: 240, column: 14, scope: !17125)
!17127 = !DILocation(line: 240, column: 11, scope: !17100)
!17128 = !DILocation(line: 242, column: 11, scope: !17129)
!17129 = distinct !DILexicalBlock(scope: !17125, file: !1213, line: 241, column: 9)
!17130 = !DILocation(line: 243, column: 11, scope: !17129)
!17131 = !DILocation(line: 245, column: 16, scope: !17132)
!17132 = distinct !DILexicalBlock(scope: !17125, file: !1213, line: 245, column: 16)
!17133 = !DILocation(line: 245, column: 22, scope: !17132)
!17134 = !DILocation(line: 245, column: 16, scope: !17125)
!17135 = !DILocation(line: 247, column: 14, scope: !17136)
!17136 = distinct !DILexicalBlock(scope: !17132, file: !1213, line: 246, column: 9)
!17137 = !DILocation(line: 248, column: 11, scope: !17136)
!17138 = !DILocation(line: 250, column: 5, scope: !17100)
!17139 = !DILocation(line: 232, column: 37, scope: !17095)
!17140 = !DILocation(line: 232, column: 3, scope: !17095)
!17141 = distinct !{!17141, !17098, !17142}
!17142 = !DILocation(line: 250, column: 5, scope: !17092)
!17143 = !DILocation(line: 252, column: 21, scope: !17029)
!17144 = !DILocation(line: 252, column: 3, scope: !17029)
!17145 = !DILocation(line: 255, column: 3, scope: !17029)
!17146 = !DILocation(line: 256, column: 3, scope: !17029)
!17147 = !DILabel(scope: !17029, name: "done", file: !1213, line: 258)
!17148 = !DILocation(line: 258, column: 2, scope: !17029)
!17149 = !DILocalVariable(name: "saved_errno", scope: !17150, file: !1213, line: 260, type: !7)
!17150 = distinct !DILexicalBlock(scope: !17029, file: !1213, line: 259, column: 3)
!17151 = !DILocation(line: 260, column: 9, scope: !17150)
!17152 = !DILocation(line: 260, column: 23, scope: !17150)
!17153 = !DILocation(line: 261, column: 23, scope: !17150)
!17154 = !DILocation(line: 261, column: 5, scope: !17150)
!17155 = !DILocation(line: 262, column: 5, scope: !17150)
!17156 = !DILocation(line: 264, column: 10, scope: !17029)
!17157 = !DILocation(line: 264, column: 3, scope: !17029)
!17158 = !DILocation(line: 265, column: 1, scope: !17029)
!17159 = distinct !DISubprogram(name: "check_x_suffix", scope: !1213, file: !1213, line: 178, type: !1210, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1192, retainedNodes: !209)
!17160 = !DILocalVariable(name: "s", arg: 1, scope: !17159, file: !1213, line: 178, type: !180)
!17161 = !DILocation(line: 178, column: 29, scope: !17159)
!17162 = !DILocalVariable(name: "len", arg: 2, scope: !17159, file: !1213, line: 178, type: !55)
!17163 = !DILocation(line: 178, column: 39, scope: !17159)
!17164 = !DILocation(line: 180, column: 10, scope: !17159)
!17165 = !DILocation(line: 180, column: 25, scope: !17159)
!17166 = !DILocation(line: 180, column: 17, scope: !17159)
!17167 = !DILocation(line: 180, column: 14, scope: !17159)
!17168 = !DILocation(line: 180, column: 3, scope: !17159)
!17169 = distinct !DISubprogram(name: "gen_tempname_len", scope: !1213, file: !1213, line: 307, type: !1204, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1192, retainedNodes: !209)
!17170 = !DILocalVariable(name: "tmpl", arg: 1, scope: !17169, file: !1213, line: 307, type: !9)
!17171 = !DILocation(line: 307, column: 25, scope: !17169)
!17172 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !17169, file: !1213, line: 307, type: !7)
!17173 = !DILocation(line: 307, column: 35, scope: !17169)
!17174 = !DILocalVariable(name: "flags", arg: 3, scope: !17169, file: !1213, line: 307, type: !7)
!17175 = !DILocation(line: 307, column: 50, scope: !17169)
!17176 = !DILocalVariable(name: "kind", arg: 4, scope: !17169, file: !1213, line: 307, type: !7)
!17177 = !DILocation(line: 307, column: 61, scope: !17169)
!17178 = !DILocalVariable(name: "x_suffix_len", arg: 5, scope: !17169, file: !1213, line: 308, type: !55)
!17179 = !DILocation(line: 308, column: 26, scope: !17169)
!17180 = !DILocalVariable(name: "tryfunc", scope: !17169, file: !1213, line: 310, type: !1197)
!17181 = !DILocation(line: 310, column: 9, scope: !17169)
!17182 = !DILocation(line: 312, column: 11, scope: !17169)
!17183 = !DILocation(line: 312, column: 3, scope: !17169)
!17184 = !DILocation(line: 315, column: 15, scope: !17185)
!17185 = distinct !DILexicalBlock(scope: !17169, file: !1213, line: 313, column: 5)
!17186 = !DILocation(line: 316, column: 7, scope: !17185)
!17187 = !DILocation(line: 319, column: 15, scope: !17185)
!17188 = !DILocation(line: 320, column: 7, scope: !17185)
!17189 = !DILocation(line: 323, column: 15, scope: !17185)
!17190 = !DILocation(line: 324, column: 7, scope: !17185)
!17191 = !DILocation(line: 327, column: 7, scope: !17192)
!17192 = distinct !DILexicalBlock(scope: !17193, file: !1213, line: 327, column: 7)
!17193 = distinct !DILexicalBlock(scope: !17185, file: !1213, line: 327, column: 7)
!17194 = !DILocation(line: 330, column: 28, scope: !17169)
!17195 = !DILocation(line: 330, column: 34, scope: !17169)
!17196 = !DILocation(line: 330, column: 45, scope: !17169)
!17197 = !DILocation(line: 330, column: 53, scope: !17169)
!17198 = !DILocation(line: 330, column: 62, scope: !17169)
!17199 = !DILocation(line: 330, column: 10, scope: !17169)
!17200 = !DILocation(line: 330, column: 3, scope: !17169)
!17201 = distinct !DISubprogram(name: "try_file", scope: !1213, file: !1213, line: 268, type: !656, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1192, retainedNodes: !209)
!17202 = !DILocalVariable(name: "tmpl", arg: 1, scope: !17201, file: !1213, line: 268, type: !9)
!17203 = !DILocation(line: 268, column: 17, scope: !17201)
!17204 = !DILocalVariable(name: "flags", arg: 2, scope: !17201, file: !1213, line: 268, type: !53)
!17205 = !DILocation(line: 268, column: 29, scope: !17201)
!17206 = !DILocalVariable(name: "openflags", scope: !17201, file: !1213, line: 270, type: !193)
!17207 = !DILocation(line: 270, column: 8, scope: !17201)
!17208 = !DILocation(line: 270, column: 20, scope: !17201)
!17209 = !DILocation(line: 271, column: 18, scope: !17201)
!17210 = !DILocation(line: 272, column: 20, scope: !17201)
!17211 = !DILocation(line: 272, column: 19, scope: !17201)
!17212 = !DILocation(line: 272, column: 30, scope: !17201)
!17213 = !DILocation(line: 273, column: 18, scope: !17201)
!17214 = !DILocation(line: 273, column: 27, scope: !17201)
!17215 = !DILocation(line: 273, column: 37, scope: !17201)
!17216 = !DILocation(line: 271, column: 10, scope: !17201)
!17217 = !DILocation(line: 271, column: 3, scope: !17201)
!17218 = distinct !DISubprogram(name: "try_dir", scope: !1213, file: !1213, line: 277, type: !656, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1192, retainedNodes: !209)
!17219 = !DILocalVariable(name: "tmpl", arg: 1, scope: !17218, file: !1213, line: 277, type: !9)
!17220 = !DILocation(line: 277, column: 16, scope: !17218)
!17221 = !DILocalVariable(name: "flags", arg: 2, scope: !17218, file: !1213, line: 277, type: !53)
!17222 = !DILocation(line: 277, column: 28, scope: !17218)
!17223 = !DILocation(line: 279, column: 19, scope: !17218)
!17224 = !DILocation(line: 279, column: 10, scope: !17218)
!17225 = !DILocation(line: 279, column: 3, scope: !17218)
!17226 = distinct !DISubprogram(name: "try_nocreate", scope: !1213, file: !1213, line: 283, type: !656, scopeLine: 284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1192, retainedNodes: !209)
!17227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !271, line: 46, size: 1152, elements: !17228)
!17228 = !{!17229, !17230, !17231, !17232, !17233, !17234, !17235, !17236, !17237, !17238, !17239, !17240, !17245, !17246, !17247}
!17229 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !17227, file: !271, line: 48, baseType: !274, size: 64)
!17230 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !17227, file: !271, line: 53, baseType: !276, size: 64, offset: 64)
!17231 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !17227, file: !271, line: 61, baseType: !278, size: 64, offset: 128)
!17232 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !17227, file: !271, line: 62, baseType: !140, size: 32, offset: 192)
!17233 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !17227, file: !271, line: 64, baseType: !128, size: 32, offset: 224)
!17234 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !17227, file: !271, line: 65, baseType: !130, size: 32, offset: 256)
!17235 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !17227, file: !271, line: 67, baseType: !7, size: 32, offset: 288)
!17236 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !17227, file: !271, line: 69, baseType: !274, size: 64, offset: 320)
!17237 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !17227, file: !271, line: 74, baseType: !29, size: 64, offset: 384)
!17238 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !17227, file: !271, line: 78, baseType: !286, size: 64, offset: 448)
!17239 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !17227, file: !271, line: 80, baseType: !288, size: 64, offset: 512)
!17240 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !17227, file: !271, line: 91, baseType: !17241, size: 128, offset: 576)
!17241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !291, line: 9, size: 128, elements: !17242)
!17242 = !{!17243, !17244}
!17243 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !17241, file: !291, line: 11, baseType: !294, size: 64)
!17244 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !17241, file: !291, line: 12, baseType: !296, size: 64, offset: 64)
!17245 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !17227, file: !271, line: 92, baseType: !17241, size: 128, offset: 704)
!17246 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !17227, file: !271, line: 93, baseType: !17241, size: 128, offset: 832)
!17247 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !17227, file: !271, line: 106, baseType: !300, size: 192, offset: 960)
!17248 = !DILocalVariable(name: "tmpl", arg: 1, scope: !17226, file: !1213, line: 283, type: !9)
!17249 = !DILocation(line: 283, column: 21, scope: !17226)
!17250 = !DILocalVariable(name: "flags", arg: 2, scope: !17226, file: !1213, line: 283, type: !53)
!17251 = !DILocation(line: 283, column: 33, scope: !17226)
!17252 = !DILocalVariable(name: "st", scope: !17226, file: !1213, line: 285, type: !17227)
!17253 = !DILocation(line: 285, column: 17, scope: !17226)
!17254 = !DILocation(line: 287, column: 7, scope: !17255)
!17255 = distinct !DILexicalBlock(scope: !17226, file: !1213, line: 287, column: 7)
!17256 = !DILocation(line: 287, column: 41, scope: !17255)
!17257 = !DILocation(line: 287, column: 46, scope: !17255)
!17258 = !DILocation(line: 287, column: 49, scope: !17255)
!17259 = !DILocation(line: 287, column: 55, scope: !17255)
!17260 = !DILocation(line: 287, column: 7, scope: !17226)
!17261 = !DILocation(line: 288, column: 5, scope: !17255)
!17262 = !DILocation(line: 289, column: 10, scope: !17226)
!17263 = !DILocation(line: 289, column: 16, scope: !17226)
!17264 = !DILocation(line: 289, column: 3, scope: !17226)
!17265 = distinct !DISubprogram(name: "gen_tempname", scope: !1213, file: !1213, line: 334, type: !1206, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1192, retainedNodes: !209)
!17266 = !DILocalVariable(name: "tmpl", arg: 1, scope: !17265, file: !1213, line: 334, type: !9)
!17267 = !DILocation(line: 334, column: 23, scope: !17265)
!17268 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !17265, file: !1213, line: 334, type: !7)
!17269 = !DILocation(line: 334, column: 33, scope: !17265)
!17270 = !DILocalVariable(name: "flags", arg: 3, scope: !17265, file: !1213, line: 334, type: !7)
!17271 = !DILocation(line: 334, column: 48, scope: !17265)
!17272 = !DILocalVariable(name: "kind", arg: 4, scope: !17265, file: !1213, line: 334, type: !7)
!17273 = !DILocation(line: 334, column: 59, scope: !17265)
!17274 = !DILocation(line: 336, column: 28, scope: !17265)
!17275 = !DILocation(line: 336, column: 34, scope: !17265)
!17276 = !DILocation(line: 336, column: 45, scope: !17265)
!17277 = !DILocation(line: 336, column: 52, scope: !17265)
!17278 = !DILocation(line: 336, column: 10, scope: !17265)
!17279 = !DILocation(line: 336, column: 3, scope: !17265)
!17280 = distinct !DISubprogram(name: "try_tempname", scope: !1213, file: !1213, line: 340, type: !1208, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1192, retainedNodes: !209)
!17281 = !DILocalVariable(name: "tmpl", arg: 1, scope: !17280, file: !1213, line: 340, type: !9)
!17282 = !DILocation(line: 340, column: 23, scope: !17280)
!17283 = !DILocalVariable(name: "suffixlen", arg: 2, scope: !17280, file: !1213, line: 340, type: !7)
!17284 = !DILocation(line: 340, column: 33, scope: !17280)
!17285 = !DILocalVariable(name: "args", arg: 3, scope: !17280, file: !1213, line: 340, type: !53)
!17286 = !DILocation(line: 340, column: 50, scope: !17280)
!17287 = !DILocalVariable(name: "tryfunc", arg: 4, scope: !17280, file: !1213, line: 341, type: !1197)
!17288 = !DILocation(line: 341, column: 23, scope: !17280)
!17289 = !DILocation(line: 343, column: 28, scope: !17280)
!17290 = !DILocation(line: 343, column: 34, scope: !17280)
!17291 = !DILocation(line: 343, column: 45, scope: !17280)
!17292 = !DILocation(line: 343, column: 51, scope: !17280)
!17293 = !DILocation(line: 343, column: 10, scope: !17280)
!17294 = !DILocation(line: 343, column: 3, scope: !17280)
!17295 = distinct !DISubprogram(name: "fd_safer", scope: !17296, file: !17296, line: 37, type: !1784, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1922, retainedNodes: !209)
!17296 = !DIFile(filename: "lib/fd-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!17297 = !DILocalVariable(name: "fd", arg: 1, scope: !17295, file: !17296, line: 37, type: !7)
!17298 = !DILocation(line: 37, column: 15, scope: !17295)
!17299 = !DILocation(line: 39, column: 23, scope: !17300)
!17300 = distinct !DILexicalBlock(scope: !17295, file: !17296, line: 39, column: 7)
!17301 = !DILocation(line: 39, column: 20, scope: !17300)
!17302 = !DILocation(line: 39, column: 26, scope: !17300)
!17303 = !DILocation(line: 39, column: 29, scope: !17300)
!17304 = !DILocation(line: 39, column: 32, scope: !17300)
!17305 = !DILocation(line: 39, column: 7, scope: !17295)
!17306 = !DILocalVariable(name: "f", scope: !17307, file: !17296, line: 41, type: !7)
!17307 = distinct !DILexicalBlock(scope: !17300, file: !17296, line: 40, column: 5)
!17308 = !DILocation(line: 41, column: 11, scope: !17307)
!17309 = !DILocation(line: 41, column: 26, scope: !17307)
!17310 = !DILocation(line: 41, column: 15, scope: !17307)
!17311 = !DILocalVariable(name: "e", scope: !17307, file: !17296, line: 42, type: !7)
!17312 = !DILocation(line: 42, column: 11, scope: !17307)
!17313 = !DILocation(line: 42, column: 15, scope: !17307)
!17314 = !DILocation(line: 43, column: 14, scope: !17307)
!17315 = !DILocation(line: 43, column: 7, scope: !17307)
!17316 = !DILocation(line: 44, column: 15, scope: !17307)
!17317 = !DILocation(line: 44, column: 7, scope: !17307)
!17318 = !DILocation(line: 44, column: 13, scope: !17307)
!17319 = !DILocation(line: 45, column: 12, scope: !17307)
!17320 = !DILocation(line: 45, column: 10, scope: !17307)
!17321 = !DILocation(line: 46, column: 5, scope: !17307)
!17322 = !DILocation(line: 48, column: 10, scope: !17295)
!17323 = !DILocation(line: 48, column: 3, scope: !17295)
!17324 = distinct !DISubprogram(name: "utimecmp", scope: !1217, file: !1217, line: 123, type: !1246, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1243, retainedNodes: !209)
!17325 = !DILocalVariable(name: "dst_name", arg: 1, scope: !17324, file: !1217, line: 123, type: !180)
!17326 = !DILocation(line: 123, column: 23, scope: !17324)
!17327 = !DILocalVariable(name: "dst_stat", arg: 2, scope: !17324, file: !1217, line: 124, type: !1220)
!17328 = !DILocation(line: 124, column: 30, scope: !17324)
!17329 = !DILocalVariable(name: "src_stat", arg: 3, scope: !17324, file: !1217, line: 125, type: !1220)
!17330 = !DILocation(line: 125, column: 30, scope: !17324)
!17331 = !DILocalVariable(name: "options", arg: 4, scope: !17324, file: !1217, line: 126, type: !7)
!17332 = !DILocation(line: 126, column: 15, scope: !17324)
!17333 = !DILocation(line: 128, column: 32, scope: !17324)
!17334 = !DILocation(line: 128, column: 42, scope: !17324)
!17335 = !DILocation(line: 128, column: 52, scope: !17324)
!17336 = !DILocation(line: 128, column: 62, scope: !17324)
!17337 = !DILocation(line: 128, column: 10, scope: !17324)
!17338 = !DILocation(line: 128, column: 3, scope: !17324)
!17339 = !DILocalVariable(name: "dfd", arg: 1, scope: !1216, file: !1217, line: 132, type: !7)
!17340 = !DILocation(line: 132, column: 17, scope: !1216)
!17341 = !DILocalVariable(name: "dst_name", arg: 2, scope: !1216, file: !1217, line: 132, type: !180)
!17342 = !DILocation(line: 132, column: 34, scope: !1216)
!17343 = !DILocalVariable(name: "dst_stat", arg: 3, scope: !1216, file: !1217, line: 133, type: !1220)
!17344 = !DILocation(line: 133, column: 32, scope: !1216)
!17345 = !DILocalVariable(name: "src_stat", arg: 4, scope: !1216, file: !1217, line: 134, type: !1220)
!17346 = !DILocation(line: 134, column: 32, scope: !1216)
!17347 = !DILocalVariable(name: "options", arg: 5, scope: !1216, file: !1217, line: 135, type: !7)
!17348 = !DILocation(line: 135, column: 17, scope: !1216)
!17349 = !DILocalVariable(name: "dst_s", scope: !1216, file: !1217, line: 153, type: !1248)
!17350 = !DILocation(line: 153, column: 10, scope: !1216)
!17351 = !DILocation(line: 153, column: 18, scope: !1216)
!17352 = !DILocation(line: 153, column: 28, scope: !1216)
!17353 = !{!2912, !2913, i64 88}
!17354 = !DILocalVariable(name: "src_s", scope: !1216, file: !1217, line: 154, type: !1248)
!17355 = !DILocation(line: 154, column: 10, scope: !1216)
!17356 = !DILocation(line: 154, column: 18, scope: !1216)
!17357 = !DILocation(line: 154, column: 28, scope: !1216)
!17358 = !DILocalVariable(name: "dst_ns", scope: !1216, file: !1217, line: 155, type: !7)
!17359 = !DILocation(line: 155, column: 7, scope: !1216)
!17360 = !DILocation(line: 155, column: 35, scope: !1216)
!17361 = !DILocation(line: 155, column: 16, scope: !1216)
!17362 = !DILocalVariable(name: "src_ns", scope: !1216, file: !1217, line: 156, type: !7)
!17363 = !DILocation(line: 156, column: 7, scope: !1216)
!17364 = !DILocation(line: 156, column: 35, scope: !1216)
!17365 = !DILocation(line: 156, column: 16, scope: !1216)
!17366 = !DILocation(line: 158, column: 7, scope: !17367)
!17367 = distinct !DILexicalBlock(scope: !1216, file: !1217, line: 158, column: 7)
!17368 = !DILocation(line: 158, column: 15, scope: !17367)
!17369 = !DILocation(line: 158, column: 7, scope: !1216)
!17370 = !DILocalVariable(name: "dst_res", scope: !17371, file: !1217, line: 167, type: !1250)
!17371 = distinct !DILexicalBlock(scope: !17367, file: !1217, line: 159, column: 5)
!17372 = !DILocation(line: 167, column: 22, scope: !17371)
!17373 = !DILocalVariable(name: "tmp_dst_res", scope: !17371, file: !1217, line: 168, type: !1251)
!17374 = !DILocation(line: 168, column: 21, scope: !17371)
!17375 = !DILocalVariable(name: "res", scope: !17371, file: !1217, line: 171, type: !7)
!17376 = !DILocation(line: 171, column: 11, scope: !17371)
!17377 = !DILocation(line: 176, column: 11, scope: !17378)
!17378 = distinct !DILexicalBlock(scope: !17371, file: !1217, line: 176, column: 11)
!17379 = !DILocation(line: 176, column: 20, scope: !17378)
!17380 = !DILocation(line: 176, column: 17, scope: !17378)
!17381 = !DILocation(line: 176, column: 26, scope: !17378)
!17382 = !DILocation(line: 176, column: 29, scope: !17378)
!17383 = !DILocation(line: 176, column: 39, scope: !17378)
!17384 = !DILocation(line: 176, column: 36, scope: !17378)
!17385 = !DILocation(line: 176, column: 11, scope: !17371)
!17386 = !DILocation(line: 177, column: 9, scope: !17378)
!17387 = !DILocation(line: 178, column: 11, scope: !17388)
!17388 = distinct !DILexicalBlock(scope: !17371, file: !1217, line: 178, column: 11)
!17389 = !DILocation(line: 178, column: 20, scope: !17388)
!17390 = !DILocation(line: 178, column: 26, scope: !17388)
!17391 = !DILocation(line: 178, column: 17, scope: !17388)
!17392 = !DILocation(line: 178, column: 11, scope: !17371)
!17393 = !DILocation(line: 179, column: 9, scope: !17388)
!17394 = !DILocation(line: 180, column: 11, scope: !17395)
!17395 = distinct !DILexicalBlock(scope: !17371, file: !1217, line: 180, column: 11)
!17396 = !DILocation(line: 180, column: 20, scope: !17395)
!17397 = !DILocation(line: 180, column: 26, scope: !17395)
!17398 = !DILocation(line: 180, column: 17, scope: !17395)
!17399 = !DILocation(line: 180, column: 11, scope: !17371)
!17400 = !DILocation(line: 181, column: 9, scope: !17395)
!17401 = !DILocation(line: 185, column: 13, scope: !17402)
!17402 = distinct !DILexicalBlock(scope: !17371, file: !1217, line: 185, column: 11)
!17403 = !DILocation(line: 185, column: 11, scope: !17371)
!17404 = !DILocation(line: 186, column: 14, scope: !17402)
!17405 = !DILocation(line: 186, column: 12, scope: !17402)
!17406 = !DILocation(line: 186, column: 9, scope: !17402)
!17407 = !DILocation(line: 187, column: 11, scope: !17408)
!17408 = distinct !DILexicalBlock(scope: !17371, file: !1217, line: 187, column: 11)
!17409 = !DILocation(line: 187, column: 11, scope: !17371)
!17410 = !DILocation(line: 189, column: 17, scope: !17411)
!17411 = distinct !DILexicalBlock(scope: !17412, file: !1217, line: 189, column: 15)
!17412 = distinct !DILexicalBlock(scope: !17408, file: !1217, line: 188, column: 9)
!17413 = !DILocation(line: 189, column: 15, scope: !17412)
!17414 = !DILocation(line: 191, column: 29, scope: !17415)
!17415 = distinct !DILexicalBlock(scope: !17411, file: !1217, line: 190, column: 13)
!17416 = !DILocation(line: 191, column: 27, scope: !17415)
!17417 = !DILocation(line: 192, column: 20, scope: !17418)
!17418 = distinct !DILexicalBlock(scope: !17415, file: !1217, line: 192, column: 19)
!17419 = !DILocation(line: 192, column: 19, scope: !17415)
!17420 = !DILocation(line: 193, column: 17, scope: !17418)
!17421 = !DILocation(line: 194, column: 15, scope: !17415)
!17422 = !DILocation(line: 194, column: 28, scope: !17415)
!17423 = !DILocation(line: 194, column: 39, scope: !17415)
!17424 = !{!17425, !2633, i64 8}
!17425 = !{!"fs_res", !2913, i64 0, !2633, i64 8, !2740, i64 12}
!17426 = !DILocation(line: 195, column: 15, scope: !17415)
!17427 = !DILocation(line: 195, column: 28, scope: !17415)
!17428 = !DILocation(line: 195, column: 34, scope: !17415)
!17429 = !{!17425, !2740, i64 12}
!17430 = !DILocation(line: 196, column: 13, scope: !17415)
!17431 = !DILocation(line: 197, column: 30, scope: !17412)
!17432 = !DILocation(line: 197, column: 40, scope: !17412)
!17433 = !DILocation(line: 197, column: 11, scope: !17412)
!17434 = !DILocation(line: 197, column: 24, scope: !17412)
!17435 = !DILocation(line: 197, column: 28, scope: !17412)
!17436 = !{!17425, !2913, i64 0}
!17437 = !DILocation(line: 198, column: 34, scope: !17412)
!17438 = !DILocation(line: 198, column: 38, scope: !17412)
!17439 = !DILocation(line: 198, column: 21, scope: !17412)
!17440 = !DILocation(line: 198, column: 19, scope: !17412)
!17441 = !DILocation(line: 199, column: 17, scope: !17442)
!17442 = distinct !DILexicalBlock(scope: !17412, file: !1217, line: 199, column: 15)
!17443 = !DILocation(line: 199, column: 15, scope: !17412)
!17444 = !DILocation(line: 200, column: 13, scope: !17442)
!17445 = !DILocation(line: 202, column: 15, scope: !17446)
!17446 = distinct !DILexicalBlock(scope: !17412, file: !1217, line: 202, column: 15)
!17447 = !DILocation(line: 202, column: 26, scope: !17446)
!17448 = !DILocation(line: 202, column: 23, scope: !17446)
!17449 = !DILocation(line: 202, column: 15, scope: !17412)
!17450 = !DILocation(line: 206, column: 27, scope: !17451)
!17451 = distinct !DILexicalBlock(scope: !17446, file: !1217, line: 203, column: 13)
!17452 = !DILocation(line: 207, column: 13, scope: !17451)
!17453 = !DILocation(line: 208, column: 9, scope: !17412)
!17454 = !DILocation(line: 210, column: 9, scope: !17408)
!17455 = !DILabel(scope: !17456, name: "low_memory", file: !1217, line: 211)
!17456 = distinct !DILexicalBlock(scope: !17408, file: !1217, line: 210, column: 9)
!17457 = !DILocation(line: 211, column: 9, scope: !17456)
!17458 = !DILocation(line: 212, column: 15, scope: !17459)
!17459 = distinct !DILexicalBlock(scope: !17456, file: !1217, line: 212, column: 15)
!17460 = !DILocation(line: 212, column: 15, scope: !17456)
!17461 = !DILocation(line: 214, column: 33, scope: !17462)
!17462 = distinct !DILexicalBlock(scope: !17459, file: !1217, line: 213, column: 13)
!17463 = !DILocation(line: 214, column: 43, scope: !17462)
!17464 = !DILocation(line: 214, column: 27, scope: !17462)
!17465 = !DILocation(line: 214, column: 31, scope: !17462)
!17466 = !DILocation(line: 215, column: 38, scope: !17462)
!17467 = !DILocation(line: 215, column: 42, scope: !17462)
!17468 = !DILocation(line: 215, column: 25, scope: !17462)
!17469 = !DILocation(line: 215, column: 23, scope: !17462)
!17470 = !DILocation(line: 216, column: 13, scope: !17462)
!17471 = !DILocation(line: 217, column: 16, scope: !17472)
!17472 = distinct !DILexicalBlock(scope: !17456, file: !1217, line: 217, column: 15)
!17473 = !DILocation(line: 217, column: 15, scope: !17456)
!17474 = !DILocation(line: 219, column: 23, scope: !17475)
!17475 = distinct !DILexicalBlock(scope: !17472, file: !1217, line: 218, column: 13)
!17476 = !DILocation(line: 220, column: 15, scope: !17475)
!17477 = !DILocation(line: 220, column: 24, scope: !17475)
!17478 = !DILocation(line: 220, column: 35, scope: !17475)
!17479 = !DILocation(line: 221, column: 15, scope: !17475)
!17480 = !DILocation(line: 221, column: 24, scope: !17475)
!17481 = !DILocation(line: 221, column: 30, scope: !17475)
!17482 = !DILocation(line: 222, column: 13, scope: !17475)
!17483 = !DILocation(line: 225, column: 13, scope: !17371)
!17484 = !DILocation(line: 225, column: 22, scope: !17371)
!17485 = !DILocation(line: 225, column: 11, scope: !17371)
!17486 = !DILocation(line: 257, column: 13, scope: !17487)
!17487 = distinct !DILexicalBlock(scope: !17371, file: !1217, line: 257, column: 11)
!17488 = !DILocation(line: 257, column: 22, scope: !17487)
!17489 = !DILocation(line: 257, column: 11, scope: !17371)
!17490 = !DILocalVariable(name: "dst_a_s", scope: !17491, file: !1217, line: 262, type: !1248)
!17491 = distinct !DILexicalBlock(scope: !17487, file: !1217, line: 258, column: 9)
!17492 = !DILocation(line: 262, column: 18, scope: !17491)
!17493 = !DILocation(line: 262, column: 28, scope: !17491)
!17494 = !DILocation(line: 262, column: 38, scope: !17491)
!17495 = !{!2912, !2913, i64 72}
!17496 = !DILocalVariable(name: "dst_c_s", scope: !17491, file: !1217, line: 263, type: !1248)
!17497 = !DILocation(line: 263, column: 18, scope: !17491)
!17498 = !DILocation(line: 263, column: 28, scope: !17491)
!17499 = !DILocation(line: 263, column: 38, scope: !17491)
!17500 = !{!2912, !2913, i64 104}
!17501 = !DILocalVariable(name: "dst_m_s", scope: !17491, file: !1217, line: 264, type: !1248)
!17502 = !DILocation(line: 264, column: 18, scope: !17491)
!17503 = !DILocation(line: 264, column: 28, scope: !17491)
!17504 = !DILocalVariable(name: "dst_a_ns", scope: !17491, file: !1217, line: 265, type: !7)
!17505 = !DILocation(line: 265, column: 15, scope: !17491)
!17506 = !DILocation(line: 265, column: 45, scope: !17491)
!17507 = !DILocation(line: 265, column: 26, scope: !17491)
!17508 = !DILocalVariable(name: "dst_c_ns", scope: !17491, file: !1217, line: 266, type: !7)
!17509 = !DILocation(line: 266, column: 15, scope: !17491)
!17510 = !DILocation(line: 266, column: 45, scope: !17491)
!17511 = !DILocation(line: 266, column: 26, scope: !17491)
!17512 = !DILocalVariable(name: "dst_m_ns", scope: !17491, file: !1217, line: 267, type: !7)
!17513 = !DILocation(line: 267, column: 15, scope: !17491)
!17514 = !DILocation(line: 267, column: 26, scope: !17491)
!17515 = !DILocalVariable(name: "odd_second", scope: !17516, file: !1217, line: 276, type: !142)
!17516 = distinct !DILexicalBlock(scope: !17491, file: !1217, line: 275, column: 11)
!17517 = !DILocation(line: 276, column: 18, scope: !17516)
!17518 = !DILocation(line: 276, column: 32, scope: !17516)
!17519 = !DILocation(line: 276, column: 42, scope: !17516)
!17520 = !DILocation(line: 276, column: 40, scope: !17516)
!17521 = !DILocation(line: 276, column: 52, scope: !17516)
!17522 = !DILocation(line: 276, column: 50, scope: !17516)
!17523 = !DILocation(line: 276, column: 61, scope: !17516)
!17524 = !DILocation(line: 276, column: 31, scope: !17516)
!17525 = !DILocalVariable(name: "a", scope: !17526, file: !1217, line: 285, type: !7)
!17526 = distinct !DILexicalBlock(scope: !17527, file: !1217, line: 284, column: 15)
!17527 = distinct !DILexicalBlock(scope: !17516, file: !1217, line: 278, column: 17)
!17528 = !DILocation(line: 285, column: 21, scope: !17526)
!17529 = !DILocation(line: 285, column: 25, scope: !17526)
!17530 = !DILocalVariable(name: "c", scope: !17526, file: !1217, line: 286, type: !7)
!17531 = !DILocation(line: 286, column: 21, scope: !17526)
!17532 = !DILocation(line: 286, column: 25, scope: !17526)
!17533 = !DILocalVariable(name: "m", scope: !17526, file: !1217, line: 287, type: !7)
!17534 = !DILocation(line: 287, column: 21, scope: !17526)
!17535 = !DILocation(line: 287, column: 25, scope: !17526)
!17536 = !DILocalVariable(name: "SR10", scope: !17526, file: !1217, line: 291, type: !7)
!17537 = !DILocation(line: 291, column: 21, scope: !17526)
!17538 = !DILocation(line: 291, column: 54, scope: !17526)
!17539 = !DILocation(line: 293, column: 22, scope: !17540)
!17540 = distinct !DILexicalBlock(scope: !17526, file: !1217, line: 293, column: 21)
!17541 = !DILocation(line: 293, column: 26, scope: !17540)
!17542 = !DILocation(line: 293, column: 24, scope: !17540)
!17543 = !DILocation(line: 293, column: 33, scope: !17540)
!17544 = !DILocation(line: 293, column: 37, scope: !17540)
!17545 = !DILocation(line: 293, column: 35, scope: !17540)
!17546 = !DILocation(line: 293, column: 31, scope: !17540)
!17547 = !DILocation(line: 293, column: 44, scope: !17540)
!17548 = !DILocation(line: 293, column: 48, scope: !17540)
!17549 = !DILocation(line: 293, column: 46, scope: !17540)
!17550 = !DILocation(line: 293, column: 42, scope: !17540)
!17551 = !DILocation(line: 293, column: 54, scope: !17540)
!17552 = !DILocation(line: 293, column: 21, scope: !17526)
!17553 = !DILocation(line: 294, column: 23, scope: !17540)
!17554 = !DILocation(line: 294, column: 19, scope: !17540)
!17555 = !DILocation(line: 296, column: 30, scope: !17556)
!17556 = distinct !DILexicalBlock(scope: !17540, file: !1217, line: 296, column: 19)
!17557 = !DILocation(line: 296, column: 28, scope: !17556)
!17558 = !DILocation(line: 296, column: 41, scope: !17556)
!17559 = !DILocation(line: 296, column: 38, scope: !17556)
!17560 = !DILocation(line: 296, column: 52, scope: !17556)
!17561 = !DILocation(line: 296, column: 49, scope: !17556)
!17562 = !DILocation(line: 296, column: 63, scope: !17556)
!17563 = !DILocation(line: 296, column: 60, scope: !17556)
!17564 = !DILocation(line: 296, column: 24, scope: !17556)
!17565 = !DILocation(line: 297, column: 25, scope: !17566)
!17566 = distinct !DILexicalBlock(scope: !17556, file: !1217, line: 296, column: 19)
!17567 = !DILocation(line: 297, column: 31, scope: !17566)
!17568 = !DILocation(line: 297, column: 40, scope: !17566)
!17569 = !DILocation(line: 297, column: 29, scope: !17566)
!17570 = !DILocation(line: 298, column: 25, scope: !17566)
!17571 = !DILocation(line: 298, column: 29, scope: !17566)
!17572 = !DILocation(line: 298, column: 31, scope: !17566)
!17573 = !DILocation(line: 298, column: 38, scope: !17566)
!17574 = !DILocation(line: 298, column: 40, scope: !17566)
!17575 = !DILocation(line: 298, column: 36, scope: !17566)
!17576 = !DILocation(line: 298, column: 47, scope: !17566)
!17577 = !DILocation(line: 298, column: 49, scope: !17566)
!17578 = !DILocation(line: 298, column: 45, scope: !17566)
!17579 = !DILocation(line: 298, column: 55, scope: !17566)
!17580 = !DILocation(line: 0, scope: !17566)
!17581 = !DILocation(line: 296, column: 19, scope: !17556)
!17582 = !DILocation(line: 300, column: 25, scope: !17583)
!17583 = distinct !DILexicalBlock(scope: !17566, file: !1217, line: 300, column: 25)
!17584 = !DILocation(line: 300, column: 29, scope: !17583)
!17585 = !DILocation(line: 300, column: 25, scope: !17566)
!17586 = !DILocation(line: 302, column: 31, scope: !17587)
!17587 = distinct !DILexicalBlock(scope: !17588, file: !1217, line: 302, column: 29)
!17588 = distinct !DILexicalBlock(scope: !17583, file: !1217, line: 301, column: 23)
!17589 = !DILocation(line: 302, column: 29, scope: !17588)
!17590 = !DILocation(line: 303, column: 31, scope: !17587)
!17591 = !DILocation(line: 303, column: 27, scope: !17587)
!17592 = !DILocation(line: 304, column: 25, scope: !17588)
!17593 = !DILocation(line: 300, column: 32, scope: !17583)
!17594 = !DILocation(line: 299, column: 28, scope: !17566)
!17595 = !DILocation(line: 299, column: 37, scope: !17566)
!17596 = !DILocation(line: 299, column: 46, scope: !17566)
!17597 = !DILocation(line: 299, column: 55, scope: !17566)
!17598 = !DILocation(line: 296, column: 19, scope: !17566)
!17599 = distinct !{!17599, !17581, !17600}
!17600 = !DILocation(line: 305, column: 23, scope: !17556)
!17601 = !DILocation(line: 308, column: 35, scope: !17516)
!17602 = !DILocation(line: 308, column: 13, scope: !17516)
!17603 = !DILocation(line: 308, column: 22, scope: !17516)
!17604 = !DILocation(line: 308, column: 33, scope: !17516)
!17605 = !DILocation(line: 311, column: 36, scope: !17606)
!17606 = distinct !DILexicalBlock(scope: !17491, file: !1217, line: 311, column: 15)
!17607 = !DILocation(line: 311, column: 34, scope: !17606)
!17608 = !DILocation(line: 311, column: 15, scope: !17491)
!17609 = !DILocalVariable(name: "timespec", scope: !17610, file: !1217, line: 313, type: !1256)
!17610 = distinct !DILexicalBlock(scope: !17606, file: !1217, line: 312, column: 13)
!17611 = !DILocation(line: 313, column: 31, scope: !17610)
!17612 = !DILocalVariable(name: "dst_status", scope: !17610, file: !1217, line: 314, type: !1222)
!17613 = !DILocation(line: 314, column: 27, scope: !17610)
!17614 = !DILocation(line: 318, column: 25, scope: !17610)
!17615 = !DILocation(line: 318, column: 32, scope: !17610)
!17616 = !DILocation(line: 318, column: 22, scope: !17610)
!17617 = !DILocalVariable(name: "s", scope: !17618, file: !1217, line: 324, type: !1248)
!17618 = distinct !DILexicalBlock(scope: !17610, file: !1217, line: 323, column: 15)
!17619 = !DILocation(line: 324, column: 24, scope: !17618)
!17620 = !DILocation(line: 324, column: 28, scope: !17618)
!17621 = !DILocation(line: 324, column: 39, scope: !17618)
!17622 = !DILocation(line: 324, column: 43, scope: !17618)
!17623 = !DILocation(line: 324, column: 36, scope: !17618)
!17624 = !DILocation(line: 324, column: 34, scope: !17618)
!17625 = !DILocation(line: 325, column: 21, scope: !17626)
!17626 = distinct !DILexicalBlock(scope: !17618, file: !1217, line: 325, column: 21)
!17627 = !DILocation(line: 325, column: 29, scope: !17626)
!17628 = !DILocation(line: 325, column: 27, scope: !17626)
!17629 = !DILocation(line: 325, column: 35, scope: !17626)
!17630 = !DILocation(line: 325, column: 39, scope: !17626)
!17631 = !DILocation(line: 325, column: 48, scope: !17626)
!17632 = !DILocation(line: 325, column: 45, scope: !17626)
!17633 = !DILocation(line: 325, column: 54, scope: !17626)
!17634 = !DILocation(line: 325, column: 57, scope: !17626)
!17635 = !DILocation(line: 325, column: 67, scope: !17626)
!17636 = !DILocation(line: 325, column: 64, scope: !17626)
!17637 = !DILocation(line: 325, column: 21, scope: !17618)
!17638 = !DILocation(line: 326, column: 19, scope: !17626)
!17639 = !DILocation(line: 327, column: 21, scope: !17640)
!17640 = distinct !DILexicalBlock(scope: !17618, file: !1217, line: 327, column: 21)
!17641 = !DILocation(line: 327, column: 29, scope: !17640)
!17642 = !DILocation(line: 327, column: 27, scope: !17640)
!17643 = !DILocation(line: 328, column: 21, scope: !17640)
!17644 = !DILocation(line: 328, column: 25, scope: !17640)
!17645 = !DILocation(line: 328, column: 34, scope: !17640)
!17646 = !DILocation(line: 328, column: 31, scope: !17640)
!17647 = !DILocation(line: 328, column: 36, scope: !17640)
!17648 = !DILocation(line: 328, column: 39, scope: !17640)
!17649 = !DILocation(line: 328, column: 48, scope: !17640)
!17650 = !DILocation(line: 328, column: 57, scope: !17640)
!17651 = !DILocation(line: 328, column: 66, scope: !17640)
!17652 = !DILocation(line: 328, column: 64, scope: !17640)
!17653 = !DILocation(line: 328, column: 55, scope: !17640)
!17654 = !DILocation(line: 328, column: 46, scope: !17640)
!17655 = !DILocation(line: 327, column: 21, scope: !17618)
!17656 = !DILocation(line: 329, column: 19, scope: !17640)
!17657 = !DILocation(line: 338, column: 36, scope: !17610)
!17658 = !DILocation(line: 338, column: 15, scope: !17610)
!17659 = !DILocation(line: 338, column: 27, scope: !17610)
!17660 = !DILocation(line: 338, column: 34, scope: !17610)
!17661 = !DILocation(line: 339, column: 37, scope: !17610)
!17662 = !DILocation(line: 339, column: 15, scope: !17610)
!17663 = !DILocation(line: 339, column: 27, scope: !17610)
!17664 = !DILocation(line: 339, column: 35, scope: !17610)
!17665 = !DILocation(line: 340, column: 36, scope: !17610)
!17666 = !DILocation(line: 340, column: 47, scope: !17610)
!17667 = !DILocation(line: 340, column: 51, scope: !17610)
!17668 = !DILocation(line: 340, column: 46, scope: !17610)
!17669 = !DILocation(line: 340, column: 44, scope: !17610)
!17670 = !DILocation(line: 340, column: 15, scope: !17610)
!17671 = !DILocation(line: 340, column: 27, scope: !17610)
!17672 = !DILocation(line: 340, column: 34, scope: !17610)
!17673 = !DILocation(line: 341, column: 37, scope: !17610)
!17674 = !DILocation(line: 341, column: 48, scope: !17610)
!17675 = !DILocation(line: 341, column: 52, scope: !17610)
!17676 = !DILocation(line: 341, column: 46, scope: !17610)
!17677 = !DILocation(line: 341, column: 15, scope: !17610)
!17678 = !DILocation(line: 341, column: 27, scope: !17610)
!17679 = !DILocation(line: 341, column: 35, scope: !17610)
!17680 = !DILocation(line: 343, column: 30, scope: !17681)
!17681 = distinct !DILexicalBlock(scope: !17610, file: !1217, line: 343, column: 19)
!17682 = !DILocation(line: 343, column: 35, scope: !17681)
!17683 = !DILocation(line: 343, column: 45, scope: !17681)
!17684 = !DILocation(line: 343, column: 19, scope: !17681)
!17685 = !DILocation(line: 343, column: 19, scope: !17610)
!17686 = !DILocation(line: 344, column: 17, scope: !17681)
!17687 = !DILocalVariable(name: "stat_result", scope: !17688, file: !1217, line: 348, type: !7)
!17688 = distinct !DILexicalBlock(scope: !17610, file: !1217, line: 347, column: 15)
!17689 = !DILocation(line: 348, column: 21, scope: !17688)
!17690 = !DILocation(line: 349, column: 30, scope: !17688)
!17691 = !DILocation(line: 349, column: 35, scope: !17688)
!17692 = !DILocation(line: 349, column: 21, scope: !17688)
!17693 = !DILocation(line: 351, column: 21, scope: !17694)
!17694 = distinct !DILexicalBlock(scope: !17688, file: !1217, line: 351, column: 21)
!17695 = !DILocation(line: 352, column: 35, scope: !17694)
!17696 = !DILocation(line: 352, column: 46, scope: !17694)
!17697 = !DILocation(line: 352, column: 44, scope: !17694)
!17698 = !DILocation(line: 352, column: 21, scope: !17694)
!17699 = !DILocation(line: 353, column: 24, scope: !17694)
!17700 = !DILocation(line: 353, column: 58, scope: !17694)
!17701 = !DILocation(line: 353, column: 56, scope: !17694)
!17702 = !DILocation(line: 353, column: 21, scope: !17694)
!17703 = !DILocation(line: 351, column: 21, scope: !17688)
!17704 = !DILocation(line: 357, column: 42, scope: !17705)
!17705 = distinct !DILexicalBlock(scope: !17694, file: !1217, line: 354, column: 19)
!17706 = !DILocation(line: 357, column: 21, scope: !17705)
!17707 = !DILocation(line: 357, column: 33, scope: !17705)
!17708 = !DILocation(line: 357, column: 40, scope: !17705)
!17709 = !DILocation(line: 358, column: 43, scope: !17705)
!17710 = !DILocation(line: 358, column: 21, scope: !17705)
!17711 = !DILocation(line: 358, column: 33, scope: !17705)
!17712 = !DILocation(line: 358, column: 41, scope: !17705)
!17713 = !DILocation(line: 359, column: 32, scope: !17705)
!17714 = !DILocation(line: 359, column: 37, scope: !17705)
!17715 = !DILocation(line: 359, column: 47, scope: !17705)
!17716 = !DILocation(line: 359, column: 21, scope: !17705)
!17717 = !DILocation(line: 360, column: 19, scope: !17705)
!17718 = !DILocation(line: 362, column: 21, scope: !17719)
!17719 = distinct !DILexicalBlock(scope: !17688, file: !1217, line: 362, column: 21)
!17720 = !DILocation(line: 362, column: 33, scope: !17719)
!17721 = !DILocation(line: 362, column: 21, scope: !17688)
!17722 = !DILocation(line: 363, column: 19, scope: !17719)
!17723 = !DILocalVariable(name: "old_res", scope: !17724, file: !1217, line: 369, type: !7)
!17724 = distinct !DILexicalBlock(scope: !17610, file: !1217, line: 368, column: 15)
!17725 = !DILocation(line: 369, column: 21, scope: !17724)
!17726 = !DILocation(line: 369, column: 31, scope: !17724)
!17727 = !DILocalVariable(name: "a", scope: !17724, file: !1217, line: 370, type: !7)
!17728 = !DILocation(line: 370, column: 21, scope: !17724)
!17729 = !DILocation(line: 370, column: 48, scope: !17724)
!17730 = !DILocation(line: 370, column: 57, scope: !17724)
!17731 = !DILocation(line: 370, column: 34, scope: !17724)
!17732 = !DILocation(line: 371, column: 28, scope: !17724)
!17733 = !DILocation(line: 371, column: 26, scope: !17724)
!17734 = !DILocation(line: 370, column: 25, scope: !17724)
!17735 = !DILocation(line: 373, column: 21, scope: !17724)
!17736 = !DILocation(line: 375, column: 27, scope: !17737)
!17737 = distinct !DILexicalBlock(scope: !17724, file: !1217, line: 375, column: 17)
!17738 = !DILocation(line: 375, column: 24, scope: !17737)
!17739 = !DILocation(line: 375, column: 22, scope: !17737)
!17740 = !DILocation(line: 375, column: 32, scope: !17741)
!17741 = distinct !DILexicalBlock(scope: !17737, file: !1217, line: 375, column: 17)
!17742 = !DILocation(line: 375, column: 34, scope: !17741)
!17743 = !DILocation(line: 375, column: 39, scope: !17741)
!17744 = !DILocation(line: 375, column: 17, scope: !17737)
!17745 = !DILocation(line: 377, column: 25, scope: !17746)
!17746 = distinct !DILexicalBlock(scope: !17747, file: !1217, line: 377, column: 25)
!17747 = distinct !DILexicalBlock(scope: !17741, file: !1217, line: 376, column: 19)
!17748 = !DILocation(line: 377, column: 29, scope: !17746)
!17749 = !DILocation(line: 377, column: 25, scope: !17747)
!17750 = !DILocation(line: 379, column: 29, scope: !17751)
!17751 = distinct !DILexicalBlock(scope: !17746, file: !1217, line: 378, column: 23)
!17752 = !DILocation(line: 380, column: 25, scope: !17751)
!17753 = !DILocation(line: 382, column: 25, scope: !17747)
!17754 = !DILocation(line: 383, column: 25, scope: !17755)
!17755 = distinct !DILexicalBlock(scope: !17747, file: !1217, line: 383, column: 25)
!17756 = !DILocation(line: 383, column: 32, scope: !17755)
!17757 = !DILocation(line: 383, column: 29, scope: !17755)
!17758 = !DILocation(line: 383, column: 25, scope: !17747)
!17759 = !DILocation(line: 384, column: 23, scope: !17755)
!17760 = !DILocation(line: 385, column: 19, scope: !17747)
!17761 = !DILocation(line: 375, column: 47, scope: !17741)
!17762 = !DILocation(line: 375, column: 17, scope: !17741)
!17763 = distinct !{!17763, !17744, !17764}
!17764 = !DILocation(line: 385, column: 19, scope: !17737)
!17765 = !DILocation(line: 387, column: 13, scope: !17610)
!17766 = !DILocation(line: 389, column: 33, scope: !17491)
!17767 = !DILocation(line: 389, column: 11, scope: !17491)
!17768 = !DILocation(line: 389, column: 20, scope: !17491)
!17769 = !DILocation(line: 389, column: 31, scope: !17491)
!17770 = !DILocation(line: 390, column: 11, scope: !17491)
!17771 = !DILocation(line: 390, column: 20, scope: !17491)
!17772 = !DILocation(line: 390, column: 26, scope: !17491)
!17773 = !DILocation(line: 391, column: 9, scope: !17491)
!17774 = !DILocation(line: 394, column: 19, scope: !17371)
!17775 = !DILocation(line: 394, column: 23, scope: !17371)
!17776 = !DILocation(line: 394, column: 16, scope: !17371)
!17777 = !DILocation(line: 394, column: 13, scope: !17371)
!17778 = !DILocation(line: 395, column: 17, scope: !17371)
!17779 = !DILocation(line: 395, column: 26, scope: !17371)
!17780 = !DILocation(line: 395, column: 24, scope: !17371)
!17781 = !DILocation(line: 395, column: 14, scope: !17371)
!17782 = !DILocation(line: 396, column: 5, scope: !17371)
!17783 = !DILocation(line: 399, column: 11, scope: !1216)
!17784 = !DILocation(line: 399, column: 19, scope: !1216)
!17785 = !DILocation(line: 399, column: 17, scope: !1216)
!17786 = !DILocation(line: 400, column: 13, scope: !1216)
!17787 = !DILocation(line: 400, column: 21, scope: !1216)
!17788 = !DILocation(line: 400, column: 19, scope: !1216)
!17789 = !DILocation(line: 401, column: 13, scope: !1216)
!17790 = !DILocation(line: 401, column: 22, scope: !1216)
!17791 = !DILocation(line: 401, column: 20, scope: !1216)
!17792 = !DILocation(line: 402, column: 13, scope: !1216)
!17793 = !DILocation(line: 402, column: 22, scope: !1216)
!17794 = !DILocation(line: 402, column: 20, scope: !1216)
!17795 = !DILocation(line: 399, column: 3, scope: !1216)
!17796 = !DILocation(line: 403, column: 1, scope: !1216)
!17797 = distinct !DISubprogram(name: "dev_info_hash", scope: !1217, file: !1217, line: 85, type: !633, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1243, retainedNodes: !209)
!17798 = !DILocalVariable(name: "x", arg: 1, scope: !17797, file: !1217, line: 85, type: !513)
!17799 = !DILocation(line: 85, column: 28, scope: !17797)
!17800 = !DILocalVariable(name: "table_size", arg: 2, scope: !17797, file: !1217, line: 85, type: !55)
!17801 = !DILocation(line: 85, column: 38, scope: !17797)
!17802 = !DILocalVariable(name: "p", scope: !17797, file: !1217, line: 87, type: !1257)
!17803 = !DILocation(line: 87, column: 24, scope: !17797)
!17804 = !DILocation(line: 87, column: 28, scope: !17797)
!17805 = !DILocation(line: 96, column: 10, scope: !17797)
!17806 = !DILocation(line: 96, column: 13, scope: !17797)
!17807 = !DILocation(line: 96, column: 19, scope: !17797)
!17808 = !DILocation(line: 96, column: 17, scope: !17797)
!17809 = !DILocation(line: 96, column: 3, scope: !17797)
!17810 = distinct !DISubprogram(name: "dev_info_compare", scope: !1217, file: !1217, line: 101, type: !635, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1243, retainedNodes: !209)
!17811 = !DILocalVariable(name: "x", arg: 1, scope: !17810, file: !1217, line: 101, type: !513)
!17812 = !DILocation(line: 101, column: 31, scope: !17810)
!17813 = !DILocalVariable(name: "y", arg: 2, scope: !17810, file: !1217, line: 101, type: !513)
!17814 = !DILocation(line: 101, column: 46, scope: !17810)
!17815 = !DILocalVariable(name: "a", scope: !17810, file: !1217, line: 103, type: !1257)
!17816 = !DILocation(line: 103, column: 24, scope: !17810)
!17817 = !DILocation(line: 103, column: 28, scope: !17810)
!17818 = !DILocalVariable(name: "b", scope: !17810, file: !1217, line: 104, type: !1257)
!17819 = !DILocation(line: 104, column: 24, scope: !17810)
!17820 = !DILocation(line: 104, column: 28, scope: !17810)
!17821 = !DILocation(line: 105, column: 10, scope: !17810)
!17822 = !DILocation(line: 105, column: 13, scope: !17810)
!17823 = !DILocation(line: 105, column: 20, scope: !17810)
!17824 = !DILocation(line: 105, column: 23, scope: !17810)
!17825 = !DILocation(line: 105, column: 17, scope: !17810)
!17826 = !DILocation(line: 105, column: 3, scope: !17810)
!17827 = distinct !DISubprogram(name: "lutimensat", scope: !17828, file: !17828, line: 42, type: !1267, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1264, retainedNodes: !209)
!17828 = !DIFile(filename: "./lib/utimens.h", directory: "/home/mbarbar/software/coreutils-8.31")
!17829 = !DILocalVariable(name: "dir", arg: 1, scope: !17827, file: !17828, line: 42, type: !7)
!17830 = !DILocation(line: 42, column: 17, scope: !17827)
!17831 = !DILocalVariable(name: "file", arg: 2, scope: !17827, file: !17828, line: 42, type: !180)
!17832 = !DILocation(line: 42, column: 34, scope: !17827)
!17833 = !DILocalVariable(name: "times", arg: 3, scope: !17827, file: !17828, line: 42, type: !1269)
!17834 = !DILocation(line: 42, column: 62, scope: !17827)
!17835 = !DILocation(line: 44, column: 21, scope: !17827)
!17836 = !DILocation(line: 44, column: 26, scope: !17827)
!17837 = !DILocation(line: 44, column: 32, scope: !17827)
!17838 = !DILocation(line: 44, column: 10, scope: !17827)
!17839 = !DILocation(line: 44, column: 3, scope: !17827)
!17840 = distinct !DISubprogram(name: "fdutimens", scope: !1314, file: !1314, line: 170, type: !1267, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1264, retainedNodes: !209)
!17841 = !DILocalVariable(name: "fd", arg: 1, scope: !17840, file: !1314, line: 170, type: !7)
!17842 = !DILocation(line: 170, column: 16, scope: !17840)
!17843 = !DILocalVariable(name: "file", arg: 2, scope: !17840, file: !1314, line: 170, type: !180)
!17844 = !DILocation(line: 170, column: 32, scope: !17840)
!17845 = !DILocalVariable(name: "timespec", arg: 3, scope: !17840, file: !1314, line: 170, type: !1269)
!17846 = !DILocation(line: 170, column: 60, scope: !17840)
!17847 = !DILocalVariable(name: "adjusted_timespec", scope: !17840, file: !1314, line: 172, type: !1275)
!17848 = !DILocation(line: 172, column: 19, scope: !17840)
!17849 = !DILocalVariable(name: "ts", scope: !17840, file: !1314, line: 173, type: !1276)
!17850 = !DILocation(line: 173, column: 20, scope: !17840)
!17851 = !DILocation(line: 173, column: 25, scope: !17840)
!17852 = !DILocation(line: 173, column: 36, scope: !17840)
!17853 = !DILocalVariable(name: "adjustment_needed", scope: !17840, file: !1314, line: 174, type: !7)
!17854 = !DILocation(line: 174, column: 7, scope: !17840)
!17855 = !DILocalVariable(name: "st", scope: !17840, file: !1314, line: 175, type: !1293)
!17856 = !DILocation(line: 175, column: 15, scope: !17840)
!17857 = !DILocation(line: 177, column: 7, scope: !17858)
!17858 = distinct !DILexicalBlock(scope: !17840, file: !1314, line: 177, column: 7)
!17859 = !DILocation(line: 177, column: 7, scope: !17840)
!17860 = !DILocation(line: 179, column: 7, scope: !17861)
!17861 = distinct !DILexicalBlock(scope: !17858, file: !1314, line: 178, column: 5)
!17862 = !DILocation(line: 179, column: 30, scope: !17861)
!17863 = !DILocation(line: 180, column: 7, scope: !17861)
!17864 = !DILocation(line: 180, column: 30, scope: !17861)
!17865 = !DILocation(line: 181, column: 46, scope: !17861)
!17866 = !DILocation(line: 181, column: 27, scope: !17861)
!17867 = !DILocation(line: 181, column: 25, scope: !17861)
!17868 = !DILocation(line: 182, column: 5, scope: !17861)
!17869 = !DILocation(line: 183, column: 7, scope: !17870)
!17870 = distinct !DILexicalBlock(scope: !17840, file: !1314, line: 183, column: 7)
!17871 = !DILocation(line: 183, column: 25, scope: !17870)
!17872 = !DILocation(line: 183, column: 7, scope: !17840)
!17873 = !DILocation(line: 184, column: 5, scope: !17870)
!17874 = !DILocation(line: 189, column: 7, scope: !17875)
!17875 = distinct !DILexicalBlock(scope: !17840, file: !1314, line: 189, column: 7)
!17876 = !DILocation(line: 189, column: 10, scope: !17875)
!17877 = !DILocation(line: 189, column: 14, scope: !17875)
!17878 = !DILocation(line: 189, column: 18, scope: !17875)
!17879 = !DILocation(line: 189, column: 7, scope: !17840)
!17880 = !DILocation(line: 191, column: 7, scope: !17881)
!17881 = distinct !DILexicalBlock(scope: !17875, file: !1314, line: 190, column: 5)
!17882 = !DILocation(line: 191, column: 13, scope: !17881)
!17883 = !DILocation(line: 192, column: 7, scope: !17881)
!17884 = !DILocation(line: 218, column: 12, scope: !17885)
!17885 = distinct !DILexicalBlock(scope: !17840, file: !1314, line: 218, column: 7)
!17886 = !DILocation(line: 218, column: 9, scope: !17885)
!17887 = !DILocation(line: 218, column: 7, scope: !17840)
!17888 = !DILocalVariable(name: "result", scope: !17889, file: !1314, line: 220, type: !7)
!17889 = distinct !DILexicalBlock(scope: !17885, file: !1314, line: 219, column: 5)
!17890 = !DILocation(line: 220, column: 11, scope: !17889)
!17891 = !DILocation(line: 234, column: 11, scope: !17892)
!17892 = distinct !DILexicalBlock(scope: !17889, file: !1314, line: 234, column: 11)
!17893 = !DILocation(line: 234, column: 29, scope: !17892)
!17894 = !DILocation(line: 234, column: 11, scope: !17889)
!17895 = !DILocation(line: 236, column: 15, scope: !17896)
!17896 = distinct !DILexicalBlock(scope: !17897, file: !1314, line: 236, column: 15)
!17897 = distinct !DILexicalBlock(scope: !17892, file: !1314, line: 235, column: 9)
!17898 = !DILocation(line: 236, column: 18, scope: !17896)
!17899 = !DILocation(line: 236, column: 15, scope: !17897)
!17900 = !DILocation(line: 236, column: 30, scope: !17896)
!17901 = !DILocation(line: 236, column: 24, scope: !17896)
!17902 = !DILocation(line: 236, column: 50, scope: !17896)
!17903 = !DILocation(line: 236, column: 43, scope: !17896)
!17904 = !DILocation(line: 237, column: 13, scope: !17896)
!17905 = !DILocation(line: 238, column: 15, scope: !17906)
!17906 = distinct !DILexicalBlock(scope: !17897, file: !1314, line: 238, column: 15)
!17907 = !DILocation(line: 238, column: 21, scope: !17906)
!17908 = !DILocation(line: 238, column: 29, scope: !17906)
!17909 = !DILocation(line: 238, column: 15, scope: !17897)
!17910 = !DILocation(line: 239, column: 13, scope: !17906)
!17911 = !DILocation(line: 239, column: 21, scope: !17906)
!17912 = !DILocation(line: 240, column: 20, scope: !17913)
!17913 = distinct !DILexicalBlock(scope: !17906, file: !1314, line: 240, column: 20)
!17914 = !DILocation(line: 240, column: 26, scope: !17913)
!17915 = !DILocation(line: 240, column: 34, scope: !17913)
!17916 = !DILocation(line: 240, column: 20, scope: !17906)
!17917 = !DILocation(line: 241, column: 13, scope: !17913)
!17918 = !DILocation(line: 241, column: 21, scope: !17913)
!17919 = !DILocation(line: 243, column: 28, scope: !17897)
!17920 = !DILocation(line: 244, column: 9, scope: !17897)
!17921 = !DILocation(line: 247, column: 11, scope: !17922)
!17922 = distinct !DILexicalBlock(scope: !17889, file: !1314, line: 247, column: 11)
!17923 = !DILocation(line: 247, column: 14, scope: !17922)
!17924 = !DILocation(line: 247, column: 11, scope: !17889)
!17925 = !DILocation(line: 249, column: 41, scope: !17926)
!17926 = distinct !DILexicalBlock(scope: !17922, file: !1314, line: 248, column: 9)
!17927 = !DILocation(line: 249, column: 47, scope: !17926)
!17928 = !DILocation(line: 249, column: 20, scope: !17926)
!17929 = !DILocation(line: 249, column: 18, scope: !17926)
!17930 = !DILocation(line: 258, column: 19, scope: !17931)
!17931 = distinct !DILexicalBlock(scope: !17926, file: !1314, line: 258, column: 15)
!17932 = !DILocation(line: 258, column: 17, scope: !17931)
!17933 = !DILocation(line: 258, column: 15, scope: !17926)
!17934 = !DILocation(line: 259, column: 13, scope: !17931)
!17935 = !DILocation(line: 259, column: 19, scope: !17931)
!17936 = !DILocation(line: 261, column: 15, scope: !17937)
!17937 = distinct !DILexicalBlock(scope: !17926, file: !1314, line: 261, column: 15)
!17938 = !DILocation(line: 261, column: 22, scope: !17937)
!17939 = !DILocation(line: 261, column: 27, scope: !17937)
!17940 = !DILocation(line: 261, column: 30, scope: !17937)
!17941 = !DILocation(line: 261, column: 36, scope: !17937)
!17942 = !DILocation(line: 261, column: 15, scope: !17926)
!17943 = !DILocation(line: 263, column: 38, scope: !17944)
!17944 = distinct !DILexicalBlock(scope: !17937, file: !1314, line: 262, column: 13)
!17945 = !DILocation(line: 264, column: 22, scope: !17944)
!17946 = !DILocation(line: 264, column: 15, scope: !17944)
!17947 = !DILocation(line: 266, column: 9, scope: !17926)
!17948 = !DILocation(line: 269, column: 16, scope: !17949)
!17949 = distinct !DILexicalBlock(scope: !17889, file: !1314, line: 269, column: 11)
!17950 = !DILocation(line: 269, column: 13, scope: !17949)
!17951 = !DILocation(line: 269, column: 11, scope: !17889)
!17952 = !DILocation(line: 271, column: 30, scope: !17953)
!17953 = distinct !DILexicalBlock(scope: !17949, file: !1314, line: 270, column: 9)
!17954 = !DILocation(line: 271, column: 34, scope: !17953)
!17955 = !DILocation(line: 271, column: 20, scope: !17953)
!17956 = !DILocation(line: 271, column: 18, scope: !17953)
!17957 = !DILocation(line: 274, column: 19, scope: !17958)
!17958 = distinct !DILexicalBlock(scope: !17953, file: !1314, line: 274, column: 15)
!17959 = !DILocation(line: 274, column: 17, scope: !17958)
!17960 = !DILocation(line: 274, column: 15, scope: !17953)
!17961 = !DILocation(line: 275, column: 13, scope: !17958)
!17962 = !DILocation(line: 275, column: 19, scope: !17958)
!17963 = !DILocation(line: 277, column: 15, scope: !17964)
!17964 = distinct !DILexicalBlock(scope: !17953, file: !1314, line: 277, column: 15)
!17965 = !DILocation(line: 277, column: 22, scope: !17964)
!17966 = !DILocation(line: 277, column: 27, scope: !17964)
!17967 = !DILocation(line: 277, column: 30, scope: !17964)
!17968 = !DILocation(line: 277, column: 36, scope: !17964)
!17969 = !DILocation(line: 277, column: 15, scope: !17953)
!17970 = !DILocation(line: 279, column: 38, scope: !17971)
!17971 = distinct !DILexicalBlock(scope: !17964, file: !1314, line: 278, column: 13)
!17972 = !DILocation(line: 280, column: 22, scope: !17971)
!17973 = !DILocation(line: 280, column: 15, scope: !17971)
!17974 = !DILocation(line: 282, column: 9, scope: !17953)
!17975 = !DILocation(line: 284, column: 5, scope: !17889)
!17976 = !DILocation(line: 285, column: 26, scope: !17840)
!17977 = !DILocation(line: 286, column: 27, scope: !17840)
!17978 = !DILocation(line: 377, column: 7, scope: !17979)
!17979 = distinct !DILexicalBlock(scope: !17840, file: !1314, line: 377, column: 7)
!17980 = !DILocation(line: 377, column: 7, scope: !17840)
!17981 = !DILocation(line: 379, column: 11, scope: !17982)
!17982 = distinct !DILexicalBlock(scope: !17983, file: !1314, line: 379, column: 11)
!17983 = distinct !DILexicalBlock(scope: !17979, file: !1314, line: 378, column: 5)
!17984 = !DILocation(line: 379, column: 29, scope: !17982)
!17985 = !DILocation(line: 380, column: 11, scope: !17982)
!17986 = !DILocation(line: 380, column: 15, scope: !17982)
!17987 = !DILocation(line: 380, column: 18, scope: !17982)
!17988 = !DILocation(line: 379, column: 11, scope: !17983)
!17989 = !DILocation(line: 380, column: 30, scope: !17982)
!17990 = !DILocation(line: 380, column: 24, scope: !17982)
!17991 = !DILocation(line: 380, column: 50, scope: !17982)
!17992 = !DILocation(line: 380, column: 43, scope: !17982)
!17993 = !DILocation(line: 381, column: 9, scope: !17982)
!17994 = !DILocation(line: 382, column: 11, scope: !17995)
!17995 = distinct !DILexicalBlock(scope: !17983, file: !1314, line: 382, column: 11)
!17996 = !DILocation(line: 382, column: 14, scope: !17995)
!17997 = !DILocation(line: 382, column: 17, scope: !17995)
!17998 = !DILocation(line: 382, column: 11, scope: !17983)
!17999 = !DILocation(line: 383, column: 9, scope: !17995)
!18000 = !DILocation(line: 384, column: 5, scope: !17983)
!18001 = !DILocalVariable(name: "timeval", scope: !18002, file: !1314, line: 388, type: !1277)
!18002 = distinct !DILexicalBlock(scope: !17840, file: !1314, line: 386, column: 3)
!18003 = !DILocation(line: 388, column: 20, scope: !18002)
!18004 = !DILocalVariable(name: "t", scope: !18002, file: !1314, line: 389, type: !1284)
!18005 = !DILocation(line: 389, column: 21, scope: !18002)
!18006 = !DILocation(line: 390, column: 9, scope: !18007)
!18007 = distinct !DILexicalBlock(scope: !18002, file: !1314, line: 390, column: 9)
!18008 = !DILocation(line: 390, column: 9, scope: !18002)
!18009 = !DILocation(line: 392, column: 29, scope: !18010)
!18010 = distinct !DILexicalBlock(scope: !18007, file: !1314, line: 391, column: 7)
!18011 = !DILocation(line: 392, column: 35, scope: !18010)
!18012 = !DILocation(line: 392, column: 9, scope: !18010)
!18013 = !DILocation(line: 392, column: 20, scope: !18010)
!18014 = !DILocation(line: 392, column: 27, scope: !18010)
!18015 = !{!18016, !2913, i64 0}
!18016 = !{!"timeval", !2913, i64 0, !2913, i64 8}
!18017 = !DILocation(line: 393, column: 30, scope: !18010)
!18018 = !DILocation(line: 393, column: 36, scope: !18010)
!18019 = !DILocation(line: 393, column: 44, scope: !18010)
!18020 = !DILocation(line: 393, column: 9, scope: !18010)
!18021 = !DILocation(line: 393, column: 20, scope: !18010)
!18022 = !DILocation(line: 393, column: 28, scope: !18010)
!18023 = !{!18016, !2913, i64 8}
!18024 = !DILocation(line: 394, column: 29, scope: !18010)
!18025 = !DILocation(line: 394, column: 35, scope: !18010)
!18026 = !DILocation(line: 394, column: 9, scope: !18010)
!18027 = !DILocation(line: 394, column: 20, scope: !18010)
!18028 = !DILocation(line: 394, column: 27, scope: !18010)
!18029 = !DILocation(line: 395, column: 30, scope: !18010)
!18030 = !DILocation(line: 395, column: 36, scope: !18010)
!18031 = !DILocation(line: 395, column: 44, scope: !18010)
!18032 = !DILocation(line: 395, column: 9, scope: !18010)
!18033 = !DILocation(line: 395, column: 20, scope: !18010)
!18034 = !DILocation(line: 395, column: 28, scope: !18010)
!18035 = !DILocation(line: 396, column: 13, scope: !18010)
!18036 = !DILocation(line: 396, column: 11, scope: !18010)
!18037 = !DILocation(line: 397, column: 7, scope: !18010)
!18038 = !DILocation(line: 399, column: 9, scope: !18007)
!18039 = !DILocation(line: 401, column: 9, scope: !18040)
!18040 = distinct !DILexicalBlock(scope: !18002, file: !1314, line: 401, column: 9)
!18041 = !DILocation(line: 401, column: 12, scope: !18040)
!18042 = !DILocation(line: 401, column: 9, scope: !18002)
!18043 = !DILocation(line: 404, column: 37, scope: !18044)
!18044 = distinct !DILexicalBlock(scope: !18040, file: !1314, line: 402, column: 7)
!18045 = !DILocation(line: 404, column: 43, scope: !18044)
!18046 = !DILocation(line: 404, column: 16, scope: !18044)
!18047 = !DILocation(line: 404, column: 9, scope: !18044)
!18048 = !DILocation(line: 425, column: 13, scope: !18049)
!18049 = distinct !DILexicalBlock(scope: !18050, file: !1314, line: 425, column: 13)
!18050 = distinct !DILexicalBlock(scope: !18040, file: !1314, line: 408, column: 7)
!18051 = !DILocation(line: 425, column: 29, scope: !18049)
!18052 = !DILocation(line: 425, column: 13, scope: !18050)
!18053 = !DILocation(line: 433, column: 17, scope: !18054)
!18054 = distinct !DILexicalBlock(scope: !18055, file: !1314, line: 433, column: 17)
!18055 = distinct !DILexicalBlock(scope: !18049, file: !1314, line: 426, column: 11)
!18056 = !DILocation(line: 433, column: 17, scope: !18055)
!18057 = !DILocalVariable(name: "abig", scope: !18058, file: !1314, line: 435, type: !142)
!18058 = distinct !DILexicalBlock(scope: !18054, file: !1314, line: 434, column: 15)
!18059 = !DILocation(line: 435, column: 22, scope: !18058)
!18060 = !DILocation(line: 435, column: 39, scope: !18058)
!18061 = !DILocation(line: 435, column: 44, scope: !18058)
!18062 = !DILocation(line: 435, column: 36, scope: !18058)
!18063 = !DILocalVariable(name: "mbig", scope: !18058, file: !1314, line: 436, type: !142)
!18064 = !DILocation(line: 436, column: 22, scope: !18058)
!18065 = !DILocation(line: 436, column: 39, scope: !18058)
!18066 = !DILocation(line: 436, column: 44, scope: !18058)
!18067 = !DILocation(line: 436, column: 36, scope: !18058)
!18068 = !DILocation(line: 437, column: 22, scope: !18069)
!18069 = distinct !DILexicalBlock(scope: !18058, file: !1314, line: 437, column: 21)
!18070 = !DILocation(line: 437, column: 29, scope: !18069)
!18071 = !DILocation(line: 437, column: 27, scope: !18069)
!18072 = !DILocation(line: 437, column: 35, scope: !18069)
!18073 = !DILocation(line: 437, column: 45, scope: !18069)
!18074 = !DILocation(line: 437, column: 38, scope: !18069)
!18075 = !DILocation(line: 437, column: 54, scope: !18069)
!18076 = !DILocation(line: 437, column: 21, scope: !18058)
!18077 = !DILocalVariable(name: "adiff", scope: !18078, file: !1314, line: 441, type: !1248)
!18078 = distinct !DILexicalBlock(scope: !18069, file: !1314, line: 438, column: 19)
!18079 = !DILocation(line: 441, column: 28, scope: !18078)
!18080 = !DILocation(line: 441, column: 39, scope: !18078)
!18081 = !DILocation(line: 441, column: 50, scope: !18078)
!18082 = !DILocation(line: 441, column: 55, scope: !18078)
!18083 = !DILocation(line: 441, column: 48, scope: !18078)
!18084 = !DILocalVariable(name: "mdiff", scope: !18078, file: !1314, line: 442, type: !1248)
!18085 = !DILocation(line: 442, column: 28, scope: !18078)
!18086 = !DILocation(line: 442, column: 39, scope: !18078)
!18087 = !DILocation(line: 442, column: 50, scope: !18078)
!18088 = !DILocation(line: 442, column: 55, scope: !18078)
!18089 = !DILocation(line: 442, column: 48, scope: !18078)
!18090 = !DILocalVariable(name: "tt", scope: !18078, file: !1314, line: 444, type: !1284)
!18091 = !DILocation(line: 444, column: 37, scope: !18078)
!18092 = !DILocalVariable(name: "truncated_timeval", scope: !18078, file: !1314, line: 445, type: !1277)
!18093 = !DILocation(line: 445, column: 36, scope: !18078)
!18094 = !DILocation(line: 446, column: 21, scope: !18078)
!18095 = !DILocation(line: 446, column: 44, scope: !18078)
!18096 = !DILocation(line: 447, column: 21, scope: !18078)
!18097 = !DILocation(line: 447, column: 44, scope: !18078)
!18098 = !DILocation(line: 448, column: 25, scope: !18099)
!18099 = distinct !DILexicalBlock(scope: !18078, file: !1314, line: 448, column: 25)
!18100 = !DILocation(line: 448, column: 30, scope: !18099)
!18101 = !DILocation(line: 448, column: 33, scope: !18099)
!18102 = !DILocation(line: 448, column: 39, scope: !18099)
!18103 = !DILocation(line: 448, column: 44, scope: !18099)
!18104 = !DILocation(line: 448, column: 47, scope: !18099)
!18105 = !DILocation(line: 448, column: 71, scope: !18099)
!18106 = !DILocation(line: 448, column: 25, scope: !18078)
!18107 = !DILocation(line: 450, column: 30, scope: !18108)
!18108 = distinct !DILexicalBlock(scope: !18099, file: !1314, line: 449, column: 23)
!18109 = !DILocation(line: 450, column: 28, scope: !18108)
!18110 = !DILocation(line: 451, column: 25, scope: !18108)
!18111 = !DILocation(line: 451, column: 31, scope: !18108)
!18112 = !DILocation(line: 451, column: 39, scope: !18108)
!18113 = !DILocation(line: 452, column: 23, scope: !18108)
!18114 = !DILocation(line: 453, column: 25, scope: !18115)
!18115 = distinct !DILexicalBlock(scope: !18078, file: !1314, line: 453, column: 25)
!18116 = !DILocation(line: 453, column: 30, scope: !18115)
!18117 = !DILocation(line: 453, column: 33, scope: !18115)
!18118 = !DILocation(line: 453, column: 39, scope: !18115)
!18119 = !DILocation(line: 453, column: 44, scope: !18115)
!18120 = !DILocation(line: 453, column: 47, scope: !18115)
!18121 = !DILocation(line: 453, column: 71, scope: !18115)
!18122 = !DILocation(line: 453, column: 25, scope: !18078)
!18123 = !DILocation(line: 455, column: 30, scope: !18124)
!18124 = distinct !DILexicalBlock(scope: !18115, file: !1314, line: 454, column: 23)
!18125 = !DILocation(line: 455, column: 28, scope: !18124)
!18126 = !DILocation(line: 456, column: 25, scope: !18124)
!18127 = !DILocation(line: 456, column: 31, scope: !18124)
!18128 = !DILocation(line: 456, column: 39, scope: !18124)
!18129 = !DILocation(line: 457, column: 23, scope: !18124)
!18130 = !DILocation(line: 458, column: 25, scope: !18131)
!18131 = distinct !DILexicalBlock(scope: !18078, file: !1314, line: 458, column: 25)
!18132 = !DILocation(line: 458, column: 25, scope: !18078)
!18133 = !DILocation(line: 459, column: 23, scope: !18131)
!18134 = !DILocation(line: 460, column: 19, scope: !18078)
!18135 = !DILocation(line: 461, column: 15, scope: !18058)
!18136 = !DILocation(line: 464, column: 13, scope: !18055)
!18137 = !DILocation(line: 470, column: 10, scope: !18138)
!18138 = distinct !DILexicalBlock(scope: !18002, file: !1314, line: 470, column: 9)
!18139 = !DILocation(line: 470, column: 9, scope: !18002)
!18140 = !DILocation(line: 476, column: 9, scope: !18141)
!18141 = distinct !DILexicalBlock(scope: !18138, file: !1314, line: 471, column: 7)
!18142 = !DILocation(line: 482, column: 20, scope: !18002)
!18143 = !DILocation(line: 482, column: 26, scope: !18002)
!18144 = !DILocation(line: 482, column: 12, scope: !18002)
!18145 = !DILocation(line: 482, column: 5, scope: !18002)
!18146 = !DILocation(line: 500, column: 1, scope: !17840)
!18147 = distinct !DISubprogram(name: "validate_timespec", scope: !1314, file: !1314, line: 87, type: !1287, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1264, retainedNodes: !209)
!18148 = !DILocalVariable(name: "timespec", arg: 1, scope: !18147, file: !1314, line: 87, type: !1276)
!18149 = !DILocation(line: 87, column: 36, scope: !18147)
!18150 = !DILocalVariable(name: "result", scope: !18147, file: !1314, line: 89, type: !7)
!18151 = !DILocation(line: 89, column: 7, scope: !18147)
!18152 = !DILocalVariable(name: "utime_omit_count", scope: !18147, file: !1314, line: 90, type: !7)
!18153 = !DILocation(line: 90, column: 7, scope: !18147)
!18154 = !DILocation(line: 91, column: 8, scope: !18155)
!18155 = distinct !DILexicalBlock(scope: !18147, file: !1314, line: 91, column: 7)
!18156 = !DILocation(line: 91, column: 20, scope: !18155)
!18157 = !DILocation(line: 91, column: 28, scope: !18155)
!18158 = !DILocation(line: 92, column: 8, scope: !18155)
!18159 = !DILocation(line: 92, column: 11, scope: !18155)
!18160 = !DILocation(line: 92, column: 23, scope: !18155)
!18161 = !DILocation(line: 92, column: 31, scope: !18155)
!18162 = !DILocation(line: 93, column: 8, scope: !18155)
!18163 = !DILocation(line: 93, column: 19, scope: !18155)
!18164 = !DILocation(line: 93, column: 31, scope: !18155)
!18165 = !DILocation(line: 93, column: 16, scope: !18155)
!18166 = !DILocation(line: 94, column: 14, scope: !18155)
!18167 = !DILocation(line: 94, column: 17, scope: !18155)
!18168 = !DILocation(line: 94, column: 29, scope: !18155)
!18169 = !DILocation(line: 94, column: 37, scope: !18155)
!18170 = !DILocation(line: 95, column: 7, scope: !18155)
!18171 = !DILocation(line: 95, column: 11, scope: !18155)
!18172 = !DILocation(line: 95, column: 23, scope: !18155)
!18173 = !DILocation(line: 95, column: 31, scope: !18155)
!18174 = !DILocation(line: 96, column: 11, scope: !18155)
!18175 = !DILocation(line: 96, column: 14, scope: !18155)
!18176 = !DILocation(line: 96, column: 26, scope: !18155)
!18177 = !DILocation(line: 96, column: 34, scope: !18155)
!18178 = !DILocation(line: 97, column: 11, scope: !18155)
!18179 = !DILocation(line: 97, column: 22, scope: !18155)
!18180 = !DILocation(line: 97, column: 34, scope: !18155)
!18181 = !DILocation(line: 97, column: 19, scope: !18155)
!18182 = !DILocation(line: 98, column: 17, scope: !18155)
!18183 = !DILocation(line: 98, column: 20, scope: !18155)
!18184 = !DILocation(line: 98, column: 32, scope: !18155)
!18185 = !DILocation(line: 98, column: 40, scope: !18155)
!18186 = !DILocation(line: 91, column: 7, scope: !18147)
!18187 = !DILocation(line: 100, column: 7, scope: !18188)
!18188 = distinct !DILexicalBlock(scope: !18155, file: !1314, line: 99, column: 5)
!18189 = !DILocation(line: 100, column: 13, scope: !18188)
!18190 = !DILocation(line: 101, column: 7, scope: !18188)
!18191 = !DILocation(line: 107, column: 7, scope: !18192)
!18192 = distinct !DILexicalBlock(scope: !18147, file: !1314, line: 107, column: 7)
!18193 = !DILocation(line: 107, column: 19, scope: !18192)
!18194 = !DILocation(line: 107, column: 27, scope: !18192)
!18195 = !DILocation(line: 108, column: 7, scope: !18192)
!18196 = !DILocation(line: 108, column: 10, scope: !18192)
!18197 = !DILocation(line: 108, column: 22, scope: !18192)
!18198 = !DILocation(line: 108, column: 30, scope: !18192)
!18199 = !DILocation(line: 107, column: 7, scope: !18147)
!18200 = !DILocation(line: 110, column: 7, scope: !18201)
!18201 = distinct !DILexicalBlock(scope: !18192, file: !1314, line: 109, column: 5)
!18202 = !DILocation(line: 110, column: 19, scope: !18201)
!18203 = !DILocation(line: 110, column: 26, scope: !18201)
!18204 = !DILocation(line: 111, column: 14, scope: !18201)
!18205 = !DILocation(line: 112, column: 11, scope: !18206)
!18206 = distinct !DILexicalBlock(scope: !18201, file: !1314, line: 112, column: 11)
!18207 = !DILocation(line: 112, column: 23, scope: !18206)
!18208 = !DILocation(line: 112, column: 31, scope: !18206)
!18209 = !DILocation(line: 112, column: 11, scope: !18201)
!18210 = !DILocation(line: 113, column: 25, scope: !18206)
!18211 = !DILocation(line: 113, column: 9, scope: !18206)
!18212 = !DILocation(line: 114, column: 5, scope: !18201)
!18213 = !DILocation(line: 115, column: 7, scope: !18214)
!18214 = distinct !DILexicalBlock(scope: !18147, file: !1314, line: 115, column: 7)
!18215 = !DILocation(line: 115, column: 19, scope: !18214)
!18216 = !DILocation(line: 115, column: 27, scope: !18214)
!18217 = !DILocation(line: 116, column: 7, scope: !18214)
!18218 = !DILocation(line: 116, column: 10, scope: !18214)
!18219 = !DILocation(line: 116, column: 22, scope: !18214)
!18220 = !DILocation(line: 116, column: 30, scope: !18214)
!18221 = !DILocation(line: 115, column: 7, scope: !18147)
!18222 = !DILocation(line: 118, column: 7, scope: !18223)
!18223 = distinct !DILexicalBlock(scope: !18214, file: !1314, line: 117, column: 5)
!18224 = !DILocation(line: 118, column: 19, scope: !18223)
!18225 = !DILocation(line: 118, column: 26, scope: !18223)
!18226 = !DILocation(line: 119, column: 14, scope: !18223)
!18227 = !DILocation(line: 120, column: 11, scope: !18228)
!18228 = distinct !DILexicalBlock(scope: !18223, file: !1314, line: 120, column: 11)
!18229 = !DILocation(line: 120, column: 23, scope: !18228)
!18230 = !DILocation(line: 120, column: 31, scope: !18228)
!18231 = !DILocation(line: 120, column: 11, scope: !18223)
!18232 = !DILocation(line: 121, column: 25, scope: !18228)
!18233 = !DILocation(line: 121, column: 9, scope: !18228)
!18234 = !DILocation(line: 122, column: 5, scope: !18223)
!18235 = !DILocation(line: 123, column: 10, scope: !18147)
!18236 = !DILocation(line: 123, column: 20, scope: !18147)
!18237 = !DILocation(line: 123, column: 37, scope: !18147)
!18238 = !DILocation(line: 123, column: 17, scope: !18147)
!18239 = !DILocation(line: 123, column: 3, scope: !18147)
!18240 = !DILocation(line: 124, column: 1, scope: !18147)
!18241 = distinct !DISubprogram(name: "update_timespec", scope: !1314, file: !1314, line: 133, type: !1289, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1264, retainedNodes: !209)
!18242 = !DILocalVariable(name: "statbuf", arg: 1, scope: !18241, file: !1314, line: 133, type: !1291)
!18243 = !DILocation(line: 133, column: 37, scope: !18241)
!18244 = !DILocalVariable(name: "ts", arg: 2, scope: !18241, file: !1314, line: 133, type: !1310)
!18245 = !DILocation(line: 133, column: 63, scope: !18241)
!18246 = !DILocalVariable(name: "timespec", scope: !18241, file: !1314, line: 135, type: !1276)
!18247 = !DILocation(line: 135, column: 20, scope: !18241)
!18248 = !DILocation(line: 135, column: 32, scope: !18241)
!18249 = !DILocation(line: 135, column: 31, scope: !18241)
!18250 = !DILocation(line: 136, column: 7, scope: !18251)
!18251 = distinct !DILexicalBlock(scope: !18241, file: !1314, line: 136, column: 7)
!18252 = !DILocation(line: 136, column: 19, scope: !18251)
!18253 = !DILocation(line: 136, column: 27, scope: !18251)
!18254 = !DILocation(line: 137, column: 7, scope: !18251)
!18255 = !DILocation(line: 137, column: 10, scope: !18251)
!18256 = !DILocation(line: 137, column: 22, scope: !18251)
!18257 = !DILocation(line: 137, column: 30, scope: !18251)
!18258 = !DILocation(line: 136, column: 7, scope: !18241)
!18259 = !DILocation(line: 138, column: 5, scope: !18251)
!18260 = !DILocation(line: 139, column: 7, scope: !18261)
!18261 = distinct !DILexicalBlock(scope: !18241, file: !1314, line: 139, column: 7)
!18262 = !DILocation(line: 139, column: 19, scope: !18261)
!18263 = !DILocation(line: 139, column: 27, scope: !18261)
!18264 = !DILocation(line: 140, column: 7, scope: !18261)
!18265 = !DILocation(line: 140, column: 10, scope: !18261)
!18266 = !DILocation(line: 140, column: 22, scope: !18261)
!18267 = !DILocation(line: 140, column: 30, scope: !18261)
!18268 = !DILocation(line: 139, column: 7, scope: !18241)
!18269 = !DILocation(line: 142, column: 8, scope: !18270)
!18270 = distinct !DILexicalBlock(scope: !18261, file: !1314, line: 141, column: 5)
!18271 = !DILocation(line: 142, column: 11, scope: !18270)
!18272 = !DILocation(line: 143, column: 7, scope: !18270)
!18273 = !DILocation(line: 146, column: 7, scope: !18274)
!18274 = distinct !DILexicalBlock(scope: !18241, file: !1314, line: 146, column: 7)
!18275 = !DILocation(line: 146, column: 19, scope: !18274)
!18276 = !DILocation(line: 146, column: 27, scope: !18274)
!18277 = !DILocation(line: 146, column: 7, scope: !18241)
!18278 = !DILocation(line: 147, column: 5, scope: !18274)
!18279 = !DILocation(line: 147, column: 35, scope: !18274)
!18280 = !DILocation(line: 147, column: 19, scope: !18274)
!18281 = !DILocation(line: 148, column: 12, scope: !18282)
!18282 = distinct !DILexicalBlock(scope: !18274, file: !1314, line: 148, column: 12)
!18283 = !DILocation(line: 148, column: 24, scope: !18282)
!18284 = !DILocation(line: 148, column: 32, scope: !18282)
!18285 = !DILocation(line: 148, column: 12, scope: !18274)
!18286 = !DILocation(line: 149, column: 15, scope: !18282)
!18287 = !DILocation(line: 149, column: 5, scope: !18282)
!18288 = !DILocation(line: 151, column: 7, scope: !18289)
!18289 = distinct !DILexicalBlock(scope: !18241, file: !1314, line: 151, column: 7)
!18290 = !DILocation(line: 151, column: 19, scope: !18289)
!18291 = !DILocation(line: 151, column: 27, scope: !18289)
!18292 = !DILocation(line: 151, column: 7, scope: !18241)
!18293 = !DILocation(line: 152, column: 5, scope: !18289)
!18294 = !DILocation(line: 152, column: 35, scope: !18289)
!18295 = !DILocation(line: 152, column: 19, scope: !18289)
!18296 = !DILocation(line: 153, column: 12, scope: !18297)
!18297 = distinct !DILexicalBlock(scope: !18289, file: !1314, line: 153, column: 12)
!18298 = !DILocation(line: 153, column: 24, scope: !18297)
!18299 = !DILocation(line: 153, column: 32, scope: !18297)
!18300 = !DILocation(line: 153, column: 12, scope: !18289)
!18301 = !DILocation(line: 154, column: 15, scope: !18297)
!18302 = !DILocation(line: 154, column: 5, scope: !18297)
!18303 = !DILocation(line: 156, column: 3, scope: !18241)
!18304 = !DILocation(line: 157, column: 1, scope: !18241)
!18305 = distinct !DISubprogram(name: "utimens", scope: !1314, file: !1314, line: 505, type: !1285, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1264, retainedNodes: !209)
!18306 = !DILocalVariable(name: "file", arg: 1, scope: !18305, file: !1314, line: 505, type: !180)
!18307 = !DILocation(line: 505, column: 22, scope: !18305)
!18308 = !DILocalVariable(name: "timespec", arg: 2, scope: !18305, file: !1314, line: 505, type: !1269)
!18309 = !DILocation(line: 505, column: 50, scope: !18305)
!18310 = !DILocation(line: 507, column: 25, scope: !18305)
!18311 = !DILocation(line: 507, column: 31, scope: !18305)
!18312 = !DILocation(line: 507, column: 10, scope: !18305)
!18313 = !DILocation(line: 507, column: 3, scope: !18305)
!18314 = distinct !DISubprogram(name: "lutimens", scope: !1314, file: !1314, line: 515, type: !1285, scopeLine: 516, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1264, retainedNodes: !209)
!18315 = !DILocalVariable(name: "file", arg: 1, scope: !18314, file: !1314, line: 515, type: !180)
!18316 = !DILocation(line: 515, column: 23, scope: !18314)
!18317 = !DILocalVariable(name: "timespec", arg: 2, scope: !18314, file: !1314, line: 515, type: !1269)
!18318 = !DILocation(line: 515, column: 51, scope: !18314)
!18319 = !DILocalVariable(name: "adjusted_timespec", scope: !18314, file: !1314, line: 517, type: !1275)
!18320 = !DILocation(line: 517, column: 19, scope: !18314)
!18321 = !DILocalVariable(name: "ts", scope: !18314, file: !1314, line: 518, type: !1276)
!18322 = !DILocation(line: 518, column: 20, scope: !18314)
!18323 = !DILocation(line: 518, column: 25, scope: !18314)
!18324 = !DILocation(line: 518, column: 36, scope: !18314)
!18325 = !DILocalVariable(name: "adjustment_needed", scope: !18314, file: !1314, line: 519, type: !7)
!18326 = !DILocation(line: 519, column: 7, scope: !18314)
!18327 = !DILocalVariable(name: "st", scope: !18314, file: !1314, line: 520, type: !1293)
!18328 = !DILocation(line: 520, column: 15, scope: !18314)
!18329 = !DILocation(line: 522, column: 7, scope: !18330)
!18330 = distinct !DILexicalBlock(scope: !18314, file: !1314, line: 522, column: 7)
!18331 = !DILocation(line: 522, column: 7, scope: !18314)
!18332 = !DILocation(line: 524, column: 7, scope: !18333)
!18333 = distinct !DILexicalBlock(scope: !18330, file: !1314, line: 523, column: 5)
!18334 = !DILocation(line: 524, column: 30, scope: !18333)
!18335 = !DILocation(line: 525, column: 7, scope: !18333)
!18336 = !DILocation(line: 525, column: 30, scope: !18333)
!18337 = !DILocation(line: 526, column: 46, scope: !18333)
!18338 = !DILocation(line: 526, column: 27, scope: !18333)
!18339 = !DILocation(line: 526, column: 25, scope: !18333)
!18340 = !DILocation(line: 527, column: 5, scope: !18333)
!18341 = !DILocation(line: 528, column: 7, scope: !18342)
!18342 = distinct !DILexicalBlock(scope: !18314, file: !1314, line: 528, column: 7)
!18343 = !DILocation(line: 528, column: 25, scope: !18342)
!18344 = !DILocation(line: 528, column: 7, scope: !18314)
!18345 = !DILocation(line: 529, column: 5, scope: !18342)
!18346 = !DILocation(line: 537, column: 12, scope: !18347)
!18347 = distinct !DILexicalBlock(scope: !18314, file: !1314, line: 537, column: 7)
!18348 = !DILocation(line: 537, column: 9, scope: !18347)
!18349 = !DILocation(line: 537, column: 7, scope: !18314)
!18350 = !DILocalVariable(name: "result", scope: !18351, file: !1314, line: 539, type: !7)
!18351 = distinct !DILexicalBlock(scope: !18347, file: !1314, line: 538, column: 5)
!18352 = !DILocation(line: 539, column: 11, scope: !18351)
!18353 = !DILocation(line: 553, column: 11, scope: !18354)
!18354 = distinct !DILexicalBlock(scope: !18351, file: !1314, line: 553, column: 11)
!18355 = !DILocation(line: 553, column: 29, scope: !18354)
!18356 = !DILocation(line: 553, column: 11, scope: !18351)
!18357 = !DILocation(line: 555, column: 22, scope: !18358)
!18358 = distinct !DILexicalBlock(scope: !18359, file: !1314, line: 555, column: 15)
!18359 = distinct !DILexicalBlock(scope: !18354, file: !1314, line: 554, column: 9)
!18360 = !DILocation(line: 555, column: 15, scope: !18358)
!18361 = !DILocation(line: 555, column: 15, scope: !18359)
!18362 = !DILocation(line: 556, column: 13, scope: !18358)
!18363 = !DILocation(line: 557, column: 15, scope: !18364)
!18364 = distinct !DILexicalBlock(scope: !18359, file: !1314, line: 557, column: 15)
!18365 = !DILocation(line: 557, column: 21, scope: !18364)
!18366 = !DILocation(line: 557, column: 29, scope: !18364)
!18367 = !DILocation(line: 557, column: 15, scope: !18359)
!18368 = !DILocation(line: 558, column: 13, scope: !18364)
!18369 = !DILocation(line: 558, column: 21, scope: !18364)
!18370 = !DILocation(line: 559, column: 20, scope: !18371)
!18371 = distinct !DILexicalBlock(scope: !18364, file: !1314, line: 559, column: 20)
!18372 = !DILocation(line: 559, column: 26, scope: !18371)
!18373 = !DILocation(line: 559, column: 34, scope: !18371)
!18374 = !DILocation(line: 559, column: 20, scope: !18364)
!18375 = !DILocation(line: 560, column: 13, scope: !18371)
!18376 = !DILocation(line: 560, column: 21, scope: !18371)
!18377 = !DILocation(line: 562, column: 28, scope: !18359)
!18378 = !DILocation(line: 563, column: 9, scope: !18359)
!18379 = !DILocation(line: 565, column: 37, scope: !18351)
!18380 = !DILocation(line: 565, column: 43, scope: !18351)
!18381 = !DILocation(line: 565, column: 16, scope: !18351)
!18382 = !DILocation(line: 565, column: 14, scope: !18351)
!18383 = !DILocation(line: 574, column: 15, scope: !18384)
!18384 = distinct !DILexicalBlock(scope: !18351, file: !1314, line: 574, column: 11)
!18385 = !DILocation(line: 574, column: 13, scope: !18384)
!18386 = !DILocation(line: 574, column: 11, scope: !18351)
!18387 = !DILocation(line: 575, column: 9, scope: !18384)
!18388 = !DILocation(line: 575, column: 15, scope: !18384)
!18389 = !DILocation(line: 577, column: 11, scope: !18390)
!18390 = distinct !DILexicalBlock(scope: !18351, file: !1314, line: 577, column: 11)
!18391 = !DILocation(line: 577, column: 18, scope: !18390)
!18392 = !DILocation(line: 577, column: 23, scope: !18390)
!18393 = !DILocation(line: 577, column: 26, scope: !18390)
!18394 = !DILocation(line: 577, column: 32, scope: !18390)
!18395 = !DILocation(line: 577, column: 11, scope: !18351)
!18396 = !DILocation(line: 579, column: 34, scope: !18397)
!18397 = distinct !DILexicalBlock(scope: !18390, file: !1314, line: 578, column: 9)
!18398 = !DILocation(line: 580, column: 35, scope: !18397)
!18399 = !DILocation(line: 581, column: 18, scope: !18397)
!18400 = !DILocation(line: 581, column: 11, scope: !18397)
!18401 = !DILocation(line: 583, column: 5, scope: !18351)
!18402 = !DILocation(line: 584, column: 27, scope: !18314)
!18403 = !DILocation(line: 591, column: 7, scope: !18404)
!18404 = distinct !DILexicalBlock(scope: !18314, file: !1314, line: 591, column: 7)
!18405 = !DILocation(line: 591, column: 7, scope: !18314)
!18406 = !DILocation(line: 593, column: 11, scope: !18407)
!18407 = distinct !DILexicalBlock(scope: !18408, file: !1314, line: 593, column: 11)
!18408 = distinct !DILexicalBlock(scope: !18404, file: !1314, line: 592, column: 5)
!18409 = !DILocation(line: 593, column: 29, scope: !18407)
!18410 = !DILocation(line: 593, column: 34, scope: !18407)
!18411 = !DILocation(line: 593, column: 44, scope: !18407)
!18412 = !DILocation(line: 593, column: 37, scope: !18407)
!18413 = !DILocation(line: 593, column: 11, scope: !18408)
!18414 = !DILocation(line: 594, column: 9, scope: !18407)
!18415 = !DILocation(line: 595, column: 11, scope: !18416)
!18416 = distinct !DILexicalBlock(scope: !18408, file: !1314, line: 595, column: 11)
!18417 = !DILocation(line: 595, column: 14, scope: !18416)
!18418 = !DILocation(line: 595, column: 17, scope: !18416)
!18419 = !DILocation(line: 595, column: 11, scope: !18408)
!18420 = !DILocation(line: 596, column: 9, scope: !18416)
!18421 = !DILocation(line: 597, column: 5, scope: !18408)
!18422 = !DILocation(line: 624, column: 9, scope: !18423)
!18423 = distinct !DILexicalBlock(scope: !18314, file: !1314, line: 624, column: 7)
!18424 = !DILocation(line: 624, column: 54, scope: !18423)
!18425 = !DILocation(line: 624, column: 64, scope: !18423)
!18426 = !DILocation(line: 624, column: 57, scope: !18423)
!18427 = !DILocation(line: 624, column: 7, scope: !18314)
!18428 = !DILocation(line: 625, column: 5, scope: !18423)
!18429 = !DILocation(line: 626, column: 8, scope: !18430)
!18430 = distinct !DILexicalBlock(scope: !18314, file: !1314, line: 626, column: 7)
!18431 = !DILocation(line: 626, column: 7, scope: !18314)
!18432 = !DILocation(line: 627, column: 27, scope: !18430)
!18433 = !DILocation(line: 627, column: 33, scope: !18430)
!18434 = !DILocation(line: 627, column: 12, scope: !18430)
!18435 = !DILocation(line: 627, column: 5, scope: !18430)
!18436 = !DILocation(line: 628, column: 3, scope: !18314)
!18437 = !DILocation(line: 628, column: 9, scope: !18314)
!18438 = !DILocation(line: 629, column: 3, scope: !18314)
!18439 = !DILocation(line: 630, column: 1, scope: !18314)
!18440 = distinct !DISubprogram(name: "verror", scope: !18441, file: !18441, line: 43, type: !1928, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1925, retainedNodes: !209)
!18441 = !DIFile(filename: "lib/verror.c", directory: "/home/mbarbar/software/coreutils-8.31")
!18442 = !DILocalVariable(name: "status", arg: 1, scope: !18440, file: !18441, line: 43, type: !7)
!18443 = !DILocation(line: 43, column: 13, scope: !18440)
!18444 = !DILocalVariable(name: "errnum", arg: 2, scope: !18440, file: !18441, line: 43, type: !7)
!18445 = !DILocation(line: 43, column: 25, scope: !18440)
!18446 = !DILocalVariable(name: "format", arg: 3, scope: !18440, file: !18441, line: 43, type: !180)
!18447 = !DILocation(line: 43, column: 45, scope: !18440)
!18448 = !DILocalVariable(name: "args", arg: 4, scope: !18440, file: !18441, line: 43, type: !1930)
!18449 = !DILocation(line: 43, column: 61, scope: !18440)
!18450 = !DILocation(line: 45, column: 19, scope: !18440)
!18451 = !DILocation(line: 45, column: 27, scope: !18440)
!18452 = !DILocation(line: 45, column: 44, scope: !18440)
!18453 = !DILocation(line: 45, column: 52, scope: !18440)
!18454 = !DILocation(line: 45, column: 3, scope: !18440)
!18455 = !DILocation(line: 46, column: 1, scope: !18440)
!18456 = distinct !DISubprogram(name: "verror_at_line", scope: !18441, file: !18441, line: 55, type: !1937, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1925, retainedNodes: !209)
!18457 = !DILocalVariable(name: "status", arg: 1, scope: !18456, file: !18441, line: 55, type: !7)
!18458 = !DILocation(line: 55, column: 21, scope: !18456)
!18459 = !DILocalVariable(name: "errnum", arg: 2, scope: !18456, file: !18441, line: 55, type: !7)
!18460 = !DILocation(line: 55, column: 33, scope: !18456)
!18461 = !DILocalVariable(name: "file", arg: 3, scope: !18456, file: !18441, line: 55, type: !180)
!18462 = !DILocation(line: 55, column: 53, scope: !18456)
!18463 = !DILocalVariable(name: "line_number", arg: 4, scope: !18456, file: !18441, line: 56, type: !70)
!18464 = !DILocation(line: 56, column: 30, scope: !18456)
!18465 = !DILocalVariable(name: "format", arg: 5, scope: !18456, file: !18441, line: 56, type: !180)
!18466 = !DILocation(line: 56, column: 55, scope: !18456)
!18467 = !DILocalVariable(name: "args", arg: 6, scope: !18456, file: !18441, line: 56, type: !1930)
!18468 = !DILocation(line: 56, column: 71, scope: !18456)
!18469 = !DILocalVariable(name: "message", scope: !18456, file: !18441, line: 58, type: !9)
!18470 = !DILocation(line: 58, column: 9, scope: !18456)
!18471 = !DILocation(line: 58, column: 31, scope: !18456)
!18472 = !DILocation(line: 58, column: 39, scope: !18456)
!18473 = !DILocation(line: 58, column: 19, scope: !18456)
!18474 = !DILocation(line: 59, column: 7, scope: !18475)
!18475 = distinct !DILexicalBlock(scope: !18456, file: !18441, line: 59, column: 7)
!18476 = !DILocation(line: 59, column: 7, scope: !18456)
!18477 = !DILocation(line: 64, column: 11, scope: !18478)
!18478 = distinct !DILexicalBlock(scope: !18479, file: !18441, line: 64, column: 11)
!18479 = distinct !DILexicalBlock(scope: !18475, file: !18441, line: 60, column: 5)
!18480 = !DILocation(line: 64, column: 11, scope: !18479)
!18481 = !DILocation(line: 65, column: 24, scope: !18478)
!18482 = !DILocation(line: 65, column: 32, scope: !18478)
!18483 = !DILocation(line: 65, column: 40, scope: !18478)
!18484 = !DILocation(line: 65, column: 46, scope: !18478)
!18485 = !DILocation(line: 65, column: 65, scope: !18478)
!18486 = !DILocation(line: 65, column: 9, scope: !18478)
!18487 = !DILocation(line: 67, column: 16, scope: !18478)
!18488 = !DILocation(line: 67, column: 24, scope: !18478)
!18489 = !DILocation(line: 67, column: 38, scope: !18478)
!18490 = !DILocation(line: 67, column: 9, scope: !18478)
!18491 = !DILocation(line: 68, column: 5, scope: !18479)
!18492 = !DILocation(line: 73, column: 17, scope: !18493)
!18493 = distinct !DILexicalBlock(scope: !18475, file: !18441, line: 70, column: 5)
!18494 = !DILocation(line: 73, column: 24, scope: !18493)
!18495 = !DILocation(line: 73, column: 7, scope: !18493)
!18496 = !DILocation(line: 74, column: 7, scope: !18493)
!18497 = !DILocation(line: 76, column: 9, scope: !18456)
!18498 = !DILocation(line: 76, column: 3, scope: !18456)
!18499 = !DILocation(line: 77, column: 1, scope: !18456)
!18500 = distinct !DISubprogram(name: "version_etc_arn", scope: !18501, file: !18501, line: 61, type: !1942, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1939, retainedNodes: !209)
!18501 = !DIFile(filename: "lib/version-etc.c", directory: "/home/mbarbar/software/coreutils-8.31")
!18502 = !DILocalVariable(name: "stream", arg: 1, scope: !18500, file: !18501, line: 61, type: !1944)
!18503 = !DILocation(line: 61, column: 24, scope: !18500)
!18504 = !DILocalVariable(name: "command_name", arg: 2, scope: !18500, file: !18501, line: 62, type: !180)
!18505 = !DILocation(line: 62, column: 30, scope: !18500)
!18506 = !DILocalVariable(name: "package", arg: 3, scope: !18500, file: !18501, line: 62, type: !180)
!18507 = !DILocation(line: 62, column: 56, scope: !18500)
!18508 = !DILocalVariable(name: "version", arg: 4, scope: !18500, file: !18501, line: 63, type: !180)
!18509 = !DILocation(line: 63, column: 30, scope: !18500)
!18510 = !DILocalVariable(name: "authors", arg: 5, scope: !18500, file: !18501, line: 64, type: !1344)
!18511 = !DILocation(line: 64, column: 39, scope: !18500)
!18512 = !DILocalVariable(name: "n_authors", arg: 6, scope: !18500, file: !18501, line: 64, type: !55)
!18513 = !DILocation(line: 64, column: 55, scope: !18500)
!18514 = !DILocation(line: 66, column: 7, scope: !18515)
!18515 = distinct !DILexicalBlock(scope: !18500, file: !18501, line: 66, column: 7)
!18516 = !DILocation(line: 66, column: 7, scope: !18500)
!18517 = !DILocation(line: 67, column: 14, scope: !18515)
!18518 = !DILocation(line: 67, column: 38, scope: !18515)
!18519 = !DILocation(line: 67, column: 52, scope: !18515)
!18520 = !DILocation(line: 67, column: 61, scope: !18515)
!18521 = !DILocation(line: 67, column: 5, scope: !18515)
!18522 = !DILocation(line: 69, column: 14, scope: !18515)
!18523 = !DILocation(line: 69, column: 33, scope: !18515)
!18524 = !DILocation(line: 69, column: 42, scope: !18515)
!18525 = !DILocation(line: 69, column: 5, scope: !18515)
!18526 = !DILocation(line: 83, column: 12, scope: !18500)
!18527 = !DILocation(line: 83, column: 43, scope: !18500)
!18528 = !DILocation(line: 83, column: 3, scope: !18500)
!18529 = !DILocation(line: 85, column: 3, scope: !18500)
!18530 = !DILocation(line: 94, column: 11, scope: !18500)
!18531 = !DILocation(line: 94, column: 3, scope: !18500)
!18532 = !DILocation(line: 99, column: 7, scope: !18533)
!18533 = distinct !DILexicalBlock(scope: !18500, file: !18501, line: 95, column: 5)
!18534 = !DILocation(line: 102, column: 16, scope: !18533)
!18535 = !DILocation(line: 102, column: 24, scope: !18533)
!18536 = !DILocation(line: 102, column: 47, scope: !18533)
!18537 = !DILocation(line: 102, column: 7, scope: !18533)
!18538 = !DILocation(line: 103, column: 7, scope: !18533)
!18539 = !DILocation(line: 106, column: 16, scope: !18533)
!18540 = !DILocation(line: 106, column: 24, scope: !18533)
!18541 = !DILocation(line: 106, column: 54, scope: !18533)
!18542 = !DILocation(line: 106, column: 66, scope: !18533)
!18543 = !DILocation(line: 106, column: 7, scope: !18533)
!18544 = !DILocation(line: 107, column: 7, scope: !18533)
!18545 = !DILocation(line: 110, column: 16, scope: !18533)
!18546 = !DILocation(line: 110, column: 24, scope: !18533)
!18547 = !DILocation(line: 111, column: 16, scope: !18533)
!18548 = !DILocation(line: 111, column: 28, scope: !18533)
!18549 = !DILocation(line: 111, column: 40, scope: !18533)
!18550 = !DILocation(line: 110, column: 7, scope: !18533)
!18551 = !DILocation(line: 112, column: 7, scope: !18533)
!18552 = !DILocation(line: 117, column: 16, scope: !18533)
!18553 = !DILocation(line: 117, column: 24, scope: !18533)
!18554 = !DILocation(line: 118, column: 16, scope: !18533)
!18555 = !DILocation(line: 118, column: 28, scope: !18533)
!18556 = !DILocation(line: 118, column: 40, scope: !18533)
!18557 = !DILocation(line: 118, column: 52, scope: !18533)
!18558 = !DILocation(line: 117, column: 7, scope: !18533)
!18559 = !DILocation(line: 119, column: 7, scope: !18533)
!18560 = !DILocation(line: 124, column: 16, scope: !18533)
!18561 = !DILocation(line: 124, column: 24, scope: !18533)
!18562 = !DILocation(line: 125, column: 16, scope: !18533)
!18563 = !DILocation(line: 125, column: 28, scope: !18533)
!18564 = !DILocation(line: 125, column: 40, scope: !18533)
!18565 = !DILocation(line: 125, column: 52, scope: !18533)
!18566 = !DILocation(line: 125, column: 64, scope: !18533)
!18567 = !DILocation(line: 124, column: 7, scope: !18533)
!18568 = !DILocation(line: 126, column: 7, scope: !18533)
!18569 = !DILocation(line: 131, column: 16, scope: !18533)
!18570 = !DILocation(line: 131, column: 24, scope: !18533)
!18571 = !DILocation(line: 132, column: 16, scope: !18533)
!18572 = !DILocation(line: 132, column: 28, scope: !18533)
!18573 = !DILocation(line: 132, column: 40, scope: !18533)
!18574 = !DILocation(line: 132, column: 52, scope: !18533)
!18575 = !DILocation(line: 132, column: 64, scope: !18533)
!18576 = !DILocation(line: 133, column: 16, scope: !18533)
!18577 = !DILocation(line: 131, column: 7, scope: !18533)
!18578 = !DILocation(line: 134, column: 7, scope: !18533)
!18579 = !DILocation(line: 139, column: 16, scope: !18533)
!18580 = !DILocation(line: 139, column: 24, scope: !18533)
!18581 = !DILocation(line: 140, column: 16, scope: !18533)
!18582 = !DILocation(line: 140, column: 28, scope: !18533)
!18583 = !DILocation(line: 140, column: 40, scope: !18533)
!18584 = !DILocation(line: 140, column: 52, scope: !18533)
!18585 = !DILocation(line: 140, column: 64, scope: !18533)
!18586 = !DILocation(line: 141, column: 16, scope: !18533)
!18587 = !DILocation(line: 141, column: 28, scope: !18533)
!18588 = !DILocation(line: 139, column: 7, scope: !18533)
!18589 = !DILocation(line: 142, column: 7, scope: !18533)
!18590 = !DILocation(line: 147, column: 16, scope: !18533)
!18591 = !DILocation(line: 147, column: 24, scope: !18533)
!18592 = !DILocation(line: 149, column: 17, scope: !18533)
!18593 = !DILocation(line: 149, column: 29, scope: !18533)
!18594 = !DILocation(line: 149, column: 41, scope: !18533)
!18595 = !DILocation(line: 149, column: 53, scope: !18533)
!18596 = !DILocation(line: 149, column: 65, scope: !18533)
!18597 = !DILocation(line: 150, column: 17, scope: !18533)
!18598 = !DILocation(line: 150, column: 29, scope: !18533)
!18599 = !DILocation(line: 150, column: 41, scope: !18533)
!18600 = !DILocation(line: 147, column: 7, scope: !18533)
!18601 = !DILocation(line: 151, column: 7, scope: !18533)
!18602 = !DILocation(line: 156, column: 16, scope: !18533)
!18603 = !DILocation(line: 156, column: 24, scope: !18533)
!18604 = !DILocation(line: 158, column: 16, scope: !18533)
!18605 = !DILocation(line: 158, column: 28, scope: !18533)
!18606 = !DILocation(line: 158, column: 40, scope: !18533)
!18607 = !DILocation(line: 158, column: 52, scope: !18533)
!18608 = !DILocation(line: 158, column: 64, scope: !18533)
!18609 = !DILocation(line: 159, column: 16, scope: !18533)
!18610 = !DILocation(line: 159, column: 28, scope: !18533)
!18611 = !DILocation(line: 159, column: 40, scope: !18533)
!18612 = !DILocation(line: 159, column: 52, scope: !18533)
!18613 = !DILocation(line: 156, column: 7, scope: !18533)
!18614 = !DILocation(line: 160, column: 7, scope: !18533)
!18615 = !DILocation(line: 167, column: 16, scope: !18533)
!18616 = !DILocation(line: 167, column: 24, scope: !18533)
!18617 = !DILocation(line: 169, column: 17, scope: !18533)
!18618 = !DILocation(line: 169, column: 29, scope: !18533)
!18619 = !DILocation(line: 169, column: 41, scope: !18533)
!18620 = !DILocation(line: 169, column: 53, scope: !18533)
!18621 = !DILocation(line: 169, column: 65, scope: !18533)
!18622 = !DILocation(line: 170, column: 17, scope: !18533)
!18623 = !DILocation(line: 170, column: 29, scope: !18533)
!18624 = !DILocation(line: 170, column: 41, scope: !18533)
!18625 = !DILocation(line: 170, column: 53, scope: !18533)
!18626 = !DILocation(line: 167, column: 7, scope: !18533)
!18627 = !DILocation(line: 171, column: 7, scope: !18533)
!18628 = !DILocation(line: 173, column: 1, scope: !18500)
!18629 = distinct !DISubprogram(name: "version_etc_ar", scope: !18501, file: !18501, line: 180, type: !1981, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1939, retainedNodes: !209)
!18630 = !DILocalVariable(name: "stream", arg: 1, scope: !18629, file: !18501, line: 180, type: !1944)
!18631 = !DILocation(line: 180, column: 23, scope: !18629)
!18632 = !DILocalVariable(name: "command_name", arg: 2, scope: !18629, file: !18501, line: 181, type: !180)
!18633 = !DILocation(line: 181, column: 29, scope: !18629)
!18634 = !DILocalVariable(name: "package", arg: 3, scope: !18629, file: !18501, line: 181, type: !180)
!18635 = !DILocation(line: 181, column: 55, scope: !18629)
!18636 = !DILocalVariable(name: "version", arg: 4, scope: !18629, file: !18501, line: 182, type: !180)
!18637 = !DILocation(line: 182, column: 29, scope: !18629)
!18638 = !DILocalVariable(name: "authors", arg: 5, scope: !18629, file: !18501, line: 182, type: !1344)
!18639 = !DILocation(line: 182, column: 59, scope: !18629)
!18640 = !DILocalVariable(name: "n_authors", scope: !18629, file: !18501, line: 184, type: !55)
!18641 = !DILocation(line: 184, column: 10, scope: !18629)
!18642 = !DILocation(line: 186, column: 18, scope: !18643)
!18643 = distinct !DILexicalBlock(scope: !18629, file: !18501, line: 186, column: 3)
!18644 = !DILocation(line: 186, column: 8, scope: !18643)
!18645 = !DILocation(line: 186, column: 23, scope: !18646)
!18646 = distinct !DILexicalBlock(scope: !18643, file: !18501, line: 186, column: 3)
!18647 = !DILocation(line: 186, column: 31, scope: !18646)
!18648 = !DILocation(line: 186, column: 3, scope: !18643)
!18649 = !DILocation(line: 186, column: 52, scope: !18646)
!18650 = !DILocation(line: 186, column: 3, scope: !18646)
!18651 = distinct !{!18651, !18648, !18652}
!18652 = !DILocation(line: 187, column: 5, scope: !18643)
!18653 = !DILocation(line: 188, column: 20, scope: !18629)
!18654 = !DILocation(line: 188, column: 28, scope: !18629)
!18655 = !DILocation(line: 188, column: 42, scope: !18629)
!18656 = !DILocation(line: 188, column: 51, scope: !18629)
!18657 = !DILocation(line: 188, column: 60, scope: !18629)
!18658 = !DILocation(line: 188, column: 69, scope: !18629)
!18659 = !DILocation(line: 188, column: 3, scope: !18629)
!18660 = !DILocation(line: 189, column: 1, scope: !18629)
!18661 = distinct !DISubprogram(name: "version_etc_va", scope: !18501, file: !18501, line: 196, type: !1983, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1939, retainedNodes: !209)
!18662 = !DILocalVariable(name: "stream", arg: 1, scope: !18661, file: !18501, line: 196, type: !1944)
!18663 = !DILocation(line: 196, column: 23, scope: !18661)
!18664 = !DILocalVariable(name: "command_name", arg: 2, scope: !18661, file: !18501, line: 197, type: !180)
!18665 = !DILocation(line: 197, column: 29, scope: !18661)
!18666 = !DILocalVariable(name: "package", arg: 3, scope: !18661, file: !18501, line: 197, type: !180)
!18667 = !DILocation(line: 197, column: 55, scope: !18661)
!18668 = !DILocalVariable(name: "version", arg: 4, scope: !18661, file: !18501, line: 198, type: !180)
!18669 = !DILocation(line: 198, column: 29, scope: !18661)
!18670 = !DILocalVariable(name: "authors", arg: 5, scope: !18661, file: !18501, line: 198, type: !1985)
!18671 = !DILocation(line: 198, column: 46, scope: !18661)
!18672 = !DILocalVariable(name: "n_authors", scope: !18661, file: !18501, line: 200, type: !55)
!18673 = !DILocation(line: 200, column: 10, scope: !18661)
!18674 = !DILocalVariable(name: "authtab", scope: !18661, file: !18501, line: 201, type: !1992)
!18675 = !DILocation(line: 201, column: 15, scope: !18661)
!18676 = !DILocation(line: 203, column: 18, scope: !18677)
!18677 = distinct !DILexicalBlock(scope: !18661, file: !18501, line: 203, column: 3)
!18678 = !DILocation(line: 203, column: 8, scope: !18677)
!18679 = !DILocation(line: 204, column: 8, scope: !18680)
!18680 = distinct !DILexicalBlock(scope: !18677, file: !18501, line: 203, column: 3)
!18681 = !DILocation(line: 204, column: 18, scope: !18680)
!18682 = !DILocation(line: 205, column: 10, scope: !18680)
!18683 = !DILocation(line: 205, column: 35, scope: !18680)
!18684 = !DILocation(line: 205, column: 22, scope: !18680)
!18685 = !DILocation(line: 205, column: 14, scope: !18680)
!18686 = !DILocation(line: 205, column: 33, scope: !18680)
!18687 = !DILocation(line: 205, column: 67, scope: !18680)
!18688 = !DILocation(line: 0, scope: !18680)
!18689 = !DILocation(line: 203, column: 3, scope: !18677)
!18690 = !DILocation(line: 206, column: 17, scope: !18680)
!18691 = !DILocation(line: 203, column: 3, scope: !18680)
!18692 = distinct !{!18692, !18689, !18693}
!18693 = !DILocation(line: 207, column: 5, scope: !18677)
!18694 = !DILocation(line: 208, column: 20, scope: !18661)
!18695 = !DILocation(line: 208, column: 28, scope: !18661)
!18696 = !DILocation(line: 208, column: 42, scope: !18661)
!18697 = !DILocation(line: 208, column: 51, scope: !18661)
!18698 = !DILocation(line: 209, column: 20, scope: !18661)
!18699 = !DILocation(line: 209, column: 29, scope: !18661)
!18700 = !DILocation(line: 208, column: 3, scope: !18661)
!18701 = !DILocation(line: 210, column: 1, scope: !18661)
!18702 = distinct !DISubprogram(name: "version_etc", scope: !18501, file: !18501, line: 227, type: !18703, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1939, retainedNodes: !209)
!18703 = !DISubroutineType(types: !18704)
!18704 = !{null, !1944, !180, !180, !180, null}
!18705 = !DILocalVariable(name: "stream", arg: 1, scope: !18702, file: !18501, line: 227, type: !1944)
!18706 = !DILocation(line: 227, column: 20, scope: !18702)
!18707 = !DILocalVariable(name: "command_name", arg: 2, scope: !18702, file: !18501, line: 228, type: !180)
!18708 = !DILocation(line: 228, column: 26, scope: !18702)
!18709 = !DILocalVariable(name: "package", arg: 3, scope: !18702, file: !18501, line: 228, type: !180)
!18710 = !DILocation(line: 228, column: 52, scope: !18702)
!18711 = !DILocalVariable(name: "version", arg: 4, scope: !18702, file: !18501, line: 229, type: !180)
!18712 = !DILocation(line: 229, column: 26, scope: !18702)
!18713 = !DILocalVariable(name: "authors", scope: !18702, file: !18501, line: 231, type: !1995)
!18714 = !DILocation(line: 231, column: 11, scope: !18702)
!18715 = !DILocation(line: 233, column: 3, scope: !18702)
!18716 = !DILocation(line: 234, column: 19, scope: !18702)
!18717 = !DILocation(line: 234, column: 27, scope: !18702)
!18718 = !DILocation(line: 234, column: 41, scope: !18702)
!18719 = !DILocation(line: 234, column: 50, scope: !18702)
!18720 = !DILocation(line: 234, column: 59, scope: !18702)
!18721 = !DILocation(line: 234, column: 3, scope: !18702)
!18722 = !DILocation(line: 235, column: 3, scope: !18702)
!18723 = !DILocation(line: 236, column: 1, scope: !18702)
!18724 = distinct !DISubprogram(name: "emit_bug_reporting_address", scope: !18501, file: !18501, line: 239, type: !200, scopeLine: 240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1939, retainedNodes: !209)
!18725 = !DILocation(line: 245, column: 11, scope: !18724)
!18726 = !DILocation(line: 245, column: 3, scope: !18724)
!18727 = !DILocation(line: 251, column: 11, scope: !18724)
!18728 = !DILocation(line: 251, column: 3, scope: !18724)
!18729 = !DILocation(line: 256, column: 3, scope: !18724)
!18730 = !DILocation(line: 258, column: 1, scope: !18724)
!18731 = !DILocation(line: 37, column: 9, scope: !18732)
!18732 = distinct !DILexicalBlock(scope: !1327, file: !1328, line: 37, column: 7)
!18733 = !DILocation(line: 37, column: 7, scope: !1327)
!18734 = !DILocalVariable(name: "can", scope: !18735, file: !1328, line: 39, type: !142)
!18735 = distinct !DILexicalBlock(scope: !18732, file: !1328, line: 38, column: 5)
!18736 = !DILocation(line: 39, column: 12, scope: !18735)
!18737 = !DILocation(line: 44, column: 14, scope: !18735)
!18738 = !DILocation(line: 44, column: 25, scope: !18735)
!18739 = !DILocation(line: 44, column: 11, scope: !18735)
!18740 = !DILocation(line: 46, column: 19, scope: !18735)
!18741 = !DILocation(line: 46, column: 17, scope: !18735)
!18742 = !DILocation(line: 47, column: 19, scope: !18735)
!18743 = !DILocation(line: 48, column: 5, scope: !18735)
!18744 = !DILocation(line: 50, column: 10, scope: !1327)
!18745 = !DILocation(line: 50, column: 3, scope: !1327)
!18746 = distinct !DISubprogram(name: "xnmalloc", scope: !18747, file: !18747, line: 99, type: !2002, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1999, retainedNodes: !209)
!18747 = !DIFile(filename: "./lib/xalloc.h", directory: "/home/mbarbar/software/coreutils-8.31")
!18748 = !DILocalVariable(name: "n", arg: 1, scope: !18746, file: !18747, line: 99, type: !55)
!18749 = !DILocation(line: 99, column: 18, scope: !18746)
!18750 = !DILocalVariable(name: "s", arg: 2, scope: !18746, file: !18747, line: 99, type: !55)
!18751 = !DILocation(line: 99, column: 28, scope: !18746)
!18752 = !DILocation(line: 101, column: 7, scope: !18753)
!18753 = distinct !DILexicalBlock(scope: !18746, file: !18747, line: 101, column: 7)
!18754 = !DILocation(line: 101, column: 7, scope: !18746)
!18755 = !DILocation(line: 102, column: 5, scope: !18753)
!18756 = !DILocation(line: 103, column: 19, scope: !18746)
!18757 = !DILocation(line: 103, column: 23, scope: !18746)
!18758 = !DILocation(line: 103, column: 21, scope: !18746)
!18759 = !DILocation(line: 103, column: 10, scope: !18746)
!18760 = !DILocation(line: 103, column: 3, scope: !18746)
!18761 = distinct !DISubprogram(name: "xmalloc", scope: !18762, file: !18762, line: 39, type: !2010, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1999, retainedNodes: !209)
!18762 = !DIFile(filename: "lib/xmalloc.c", directory: "/home/mbarbar/software/coreutils-8.31")
!18763 = !DILocalVariable(name: "n", arg: 1, scope: !18761, file: !18762, line: 39, type: !55)
!18764 = !DILocation(line: 39, column: 17, scope: !18761)
!18765 = !DILocalVariable(name: "p", scope: !18761, file: !18762, line: 41, type: !53)
!18766 = !DILocation(line: 41, column: 9, scope: !18761)
!18767 = !DILocation(line: 41, column: 21, scope: !18761)
!18768 = !DILocation(line: 41, column: 13, scope: !18761)
!18769 = !DILocation(line: 42, column: 8, scope: !18770)
!18770 = distinct !DILexicalBlock(scope: !18761, file: !18762, line: 42, column: 7)
!18771 = !DILocation(line: 42, column: 10, scope: !18770)
!18772 = !DILocation(line: 42, column: 13, scope: !18770)
!18773 = !DILocation(line: 42, column: 15, scope: !18770)
!18774 = !DILocation(line: 42, column: 7, scope: !18761)
!18775 = !DILocation(line: 43, column: 5, scope: !18770)
!18776 = !DILocation(line: 44, column: 10, scope: !18761)
!18777 = !DILocation(line: 44, column: 3, scope: !18761)
!18778 = distinct !DISubprogram(name: "xnrealloc", scope: !18747, file: !18747, line: 112, type: !2004, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1999, retainedNodes: !209)
!18779 = !DILocalVariable(name: "p", arg: 1, scope: !18778, file: !18747, line: 112, type: !53)
!18780 = !DILocation(line: 112, column: 18, scope: !18778)
!18781 = !DILocalVariable(name: "n", arg: 2, scope: !18778, file: !18747, line: 112, type: !55)
!18782 = !DILocation(line: 112, column: 28, scope: !18778)
!18783 = !DILocalVariable(name: "s", arg: 3, scope: !18778, file: !18747, line: 112, type: !55)
!18784 = !DILocation(line: 112, column: 38, scope: !18778)
!18785 = !DILocation(line: 114, column: 7, scope: !18786)
!18786 = distinct !DILexicalBlock(scope: !18778, file: !18747, line: 114, column: 7)
!18787 = !DILocation(line: 114, column: 7, scope: !18778)
!18788 = !DILocation(line: 115, column: 5, scope: !18786)
!18789 = !DILocation(line: 116, column: 20, scope: !18778)
!18790 = !DILocation(line: 116, column: 23, scope: !18778)
!18791 = !DILocation(line: 116, column: 27, scope: !18778)
!18792 = !DILocation(line: 116, column: 25, scope: !18778)
!18793 = !DILocation(line: 116, column: 10, scope: !18778)
!18794 = !DILocation(line: 116, column: 3, scope: !18778)
!18795 = distinct !DISubprogram(name: "xrealloc", scope: !18762, file: !18762, line: 51, type: !2012, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1999, retainedNodes: !209)
!18796 = !DILocalVariable(name: "p", arg: 1, scope: !18795, file: !18762, line: 51, type: !53)
!18797 = !DILocation(line: 51, column: 17, scope: !18795)
!18798 = !DILocalVariable(name: "n", arg: 2, scope: !18795, file: !18762, line: 51, type: !55)
!18799 = !DILocation(line: 51, column: 27, scope: !18795)
!18800 = !DILocation(line: 53, column: 8, scope: !18801)
!18801 = distinct !DILexicalBlock(scope: !18795, file: !18762, line: 53, column: 7)
!18802 = !DILocation(line: 53, column: 10, scope: !18801)
!18803 = !DILocation(line: 53, column: 13, scope: !18801)
!18804 = !DILocation(line: 53, column: 7, scope: !18795)
!18805 = !DILocation(line: 57, column: 13, scope: !18806)
!18806 = distinct !DILexicalBlock(scope: !18801, file: !18762, line: 54, column: 5)
!18807 = !DILocation(line: 57, column: 7, scope: !18806)
!18808 = !DILocation(line: 58, column: 7, scope: !18806)
!18809 = !DILocation(line: 61, column: 16, scope: !18795)
!18810 = !DILocation(line: 61, column: 19, scope: !18795)
!18811 = !DILocation(line: 61, column: 7, scope: !18795)
!18812 = !DILocation(line: 61, column: 5, scope: !18795)
!18813 = !DILocation(line: 62, column: 8, scope: !18814)
!18814 = distinct !DILexicalBlock(scope: !18795, file: !18762, line: 62, column: 7)
!18815 = !DILocation(line: 62, column: 10, scope: !18814)
!18816 = !DILocation(line: 62, column: 13, scope: !18814)
!18817 = !DILocation(line: 62, column: 7, scope: !18795)
!18818 = !DILocation(line: 63, column: 5, scope: !18814)
!18819 = !DILocation(line: 64, column: 10, scope: !18795)
!18820 = !DILocation(line: 64, column: 3, scope: !18795)
!18821 = !DILocation(line: 65, column: 1, scope: !18795)
!18822 = distinct !DISubprogram(name: "x2nrealloc", scope: !18747, file: !18747, line: 174, type: !2006, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1999, retainedNodes: !209)
!18823 = !DILocalVariable(name: "p", arg: 1, scope: !18822, file: !18747, line: 174, type: !53)
!18824 = !DILocation(line: 174, column: 19, scope: !18822)
!18825 = !DILocalVariable(name: "pn", arg: 2, scope: !18822, file: !18747, line: 174, type: !712)
!18826 = !DILocation(line: 174, column: 30, scope: !18822)
!18827 = !DILocalVariable(name: "s", arg: 3, scope: !18822, file: !18747, line: 174, type: !55)
!18828 = !DILocation(line: 174, column: 41, scope: !18822)
!18829 = !DILocalVariable(name: "n", scope: !18822, file: !18747, line: 176, type: !55)
!18830 = !DILocation(line: 176, column: 10, scope: !18822)
!18831 = !DILocation(line: 176, column: 15, scope: !18822)
!18832 = !DILocation(line: 176, column: 14, scope: !18822)
!18833 = !DILocation(line: 178, column: 9, scope: !18834)
!18834 = distinct !DILexicalBlock(scope: !18822, file: !18747, line: 178, column: 7)
!18835 = !DILocation(line: 178, column: 7, scope: !18822)
!18836 = !DILocation(line: 180, column: 13, scope: !18837)
!18837 = distinct !DILexicalBlock(scope: !18838, file: !18747, line: 180, column: 11)
!18838 = distinct !DILexicalBlock(scope: !18834, file: !18747, line: 179, column: 5)
!18839 = !DILocation(line: 180, column: 11, scope: !18838)
!18840 = !DILocation(line: 188, column: 32, scope: !18841)
!18841 = distinct !DILexicalBlock(scope: !18837, file: !18747, line: 181, column: 9)
!18842 = !DILocation(line: 188, column: 30, scope: !18841)
!18843 = !DILocation(line: 188, column: 13, scope: !18841)
!18844 = !DILocation(line: 189, column: 17, scope: !18841)
!18845 = !DILocation(line: 189, column: 16, scope: !18841)
!18846 = !DILocation(line: 189, column: 13, scope: !18841)
!18847 = !DILocation(line: 190, column: 9, scope: !18841)
!18848 = !DILocation(line: 191, column: 11, scope: !18849)
!18849 = distinct !DILexicalBlock(scope: !18838, file: !18747, line: 191, column: 11)
!18850 = !DILocation(line: 191, column: 11, scope: !18838)
!18851 = !DILocation(line: 192, column: 9, scope: !18849)
!18852 = !DILocation(line: 193, column: 5, scope: !18838)
!18853 = !DILocation(line: 200, column: 71, scope: !18854)
!18854 = distinct !DILexicalBlock(scope: !18855, file: !18747, line: 200, column: 11)
!18855 = distinct !DILexicalBlock(scope: !18834, file: !18747, line: 195, column: 5)
!18856 = !DILocation(line: 200, column: 69, scope: !18854)
!18857 = !DILocation(line: 201, column: 14, scope: !18854)
!18858 = !DILocation(line: 201, column: 11, scope: !18854)
!18859 = !DILocation(line: 200, column: 11, scope: !18855)
!18860 = !DILocation(line: 202, column: 9, scope: !18854)
!18861 = !DILocation(line: 203, column: 12, scope: !18855)
!18862 = !DILocation(line: 203, column: 14, scope: !18855)
!18863 = !DILocation(line: 203, column: 18, scope: !18855)
!18864 = !DILocation(line: 203, column: 9, scope: !18855)
!18865 = !DILocation(line: 206, column: 9, scope: !18822)
!18866 = !DILocation(line: 206, column: 4, scope: !18822)
!18867 = !DILocation(line: 206, column: 7, scope: !18822)
!18868 = !DILocation(line: 207, column: 20, scope: !18822)
!18869 = !DILocation(line: 207, column: 23, scope: !18822)
!18870 = !DILocation(line: 207, column: 27, scope: !18822)
!18871 = !DILocation(line: 207, column: 25, scope: !18822)
!18872 = !DILocation(line: 207, column: 10, scope: !18822)
!18873 = !DILocation(line: 207, column: 3, scope: !18822)
!18874 = distinct !DISubprogram(name: "xcharalloc", scope: !18747, file: !18747, line: 216, type: !2008, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1999, retainedNodes: !209)
!18875 = !DILocalVariable(name: "n", arg: 1, scope: !18874, file: !18747, line: 216, type: !55)
!18876 = !DILocation(line: 216, column: 20, scope: !18874)
!18877 = !DILocation(line: 218, column: 10, scope: !18874)
!18878 = !DILocation(line: 218, column: 3, scope: !18874)
!18879 = distinct !DISubprogram(name: "x2realloc", scope: !18762, file: !18762, line: 74, type: !2014, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1999, retainedNodes: !209)
!18880 = !DILocalVariable(name: "p", arg: 1, scope: !18879, file: !18762, line: 74, type: !53)
!18881 = !DILocation(line: 74, column: 18, scope: !18879)
!18882 = !DILocalVariable(name: "pn", arg: 2, scope: !18879, file: !18762, line: 74, type: !712)
!18883 = !DILocation(line: 74, column: 29, scope: !18879)
!18884 = !DILocation(line: 76, column: 22, scope: !18879)
!18885 = !DILocation(line: 76, column: 25, scope: !18879)
!18886 = !DILocation(line: 76, column: 10, scope: !18879)
!18887 = !DILocation(line: 76, column: 3, scope: !18879)
!18888 = distinct !DISubprogram(name: "xzalloc", scope: !18762, file: !18762, line: 84, type: !2010, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1999, retainedNodes: !209)
!18889 = !DILocalVariable(name: "s", arg: 1, scope: !18888, file: !18762, line: 84, type: !55)
!18890 = !DILocation(line: 84, column: 17, scope: !18888)
!18891 = !DILocation(line: 86, column: 27, scope: !18888)
!18892 = !DILocation(line: 86, column: 18, scope: !18888)
!18893 = !DILocation(line: 86, column: 34, scope: !18888)
!18894 = !DILocation(line: 86, column: 10, scope: !18888)
!18895 = !DILocation(line: 86, column: 3, scope: !18888)
!18896 = distinct !DISubprogram(name: "xcalloc", scope: !18762, file: !18762, line: 93, type: !2002, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1999, retainedNodes: !209)
!18897 = !DILocalVariable(name: "n", arg: 1, scope: !18896, file: !18762, line: 93, type: !55)
!18898 = !DILocation(line: 93, column: 17, scope: !18896)
!18899 = !DILocalVariable(name: "s", arg: 2, scope: !18896, file: !18762, line: 93, type: !55)
!18900 = !DILocation(line: 93, column: 27, scope: !18896)
!18901 = !DILocalVariable(name: "p", scope: !18896, file: !18762, line: 95, type: !53)
!18902 = !DILocation(line: 95, column: 9, scope: !18896)
!18903 = !DILocation(line: 100, column: 7, scope: !18904)
!18904 = distinct !DILexicalBlock(scope: !18896, file: !18762, line: 100, column: 7)
!18905 = !DILocation(line: 101, column: 7, scope: !18904)
!18906 = !DILocation(line: 101, column: 26, scope: !18904)
!18907 = !DILocation(line: 101, column: 29, scope: !18904)
!18908 = !DILocation(line: 101, column: 18, scope: !18904)
!18909 = !DILocation(line: 101, column: 16, scope: !18904)
!18910 = !DILocation(line: 100, column: 7, scope: !18896)
!18911 = !DILocation(line: 102, column: 5, scope: !18904)
!18912 = !DILocation(line: 103, column: 10, scope: !18896)
!18913 = !DILocation(line: 103, column: 3, scope: !18896)
!18914 = distinct !DISubprogram(name: "xmemdup", scope: !18762, file: !18762, line: 111, type: !511, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1999, retainedNodes: !209)
!18915 = !DILocalVariable(name: "p", arg: 1, scope: !18914, file: !18762, line: 111, type: !513)
!18916 = !DILocation(line: 111, column: 22, scope: !18914)
!18917 = !DILocalVariable(name: "s", arg: 2, scope: !18914, file: !18762, line: 111, type: !55)
!18918 = !DILocation(line: 111, column: 32, scope: !18914)
!18919 = !DILocation(line: 113, column: 27, scope: !18914)
!18920 = !DILocation(line: 113, column: 18, scope: !18914)
!18921 = !DILocation(line: 113, column: 31, scope: !18914)
!18922 = !DILocation(line: 113, column: 34, scope: !18914)
!18923 = !DILocation(line: 113, column: 10, scope: !18914)
!18924 = !DILocation(line: 113, column: 3, scope: !18914)
!18925 = distinct !DISubprogram(name: "xstrdup", scope: !18762, file: !18762, line: 119, type: !218, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1999, retainedNodes: !209)
!18926 = !DILocalVariable(name: "string", arg: 1, scope: !18925, file: !18762, line: 119, type: !180)
!18927 = !DILocation(line: 119, column: 22, scope: !18925)
!18928 = !DILocation(line: 121, column: 19, scope: !18925)
!18929 = !DILocation(line: 121, column: 35, scope: !18925)
!18930 = !DILocation(line: 121, column: 27, scope: !18925)
!18931 = !DILocation(line: 121, column: 43, scope: !18925)
!18932 = !DILocation(line: 121, column: 10, scope: !18925)
!18933 = !DILocation(line: 121, column: 3, scope: !18925)
!18934 = distinct !DISubprogram(name: "xalloc_die", scope: !18935, file: !18935, line: 32, type: !200, scopeLine: 33, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagDefinition, unit: !2016, retainedNodes: !209)
!18935 = !DIFile(filename: "lib/xalloc-die.c", directory: "/home/mbarbar/software/coreutils-8.31")
!18936 = !DILocation(line: 34, column: 10, scope: !18934)
!18937 = !DILocation(line: 34, column: 33, scope: !18934)
!18938 = !DILocation(line: 34, column: 3, scope: !18934)
!18939 = !DILocation(line: 40, column: 3, scope: !18934)
!18940 = distinct !DISubprogram(name: "xstrtoul", scope: !18941, file: !18941, line: 76, type: !2031, scopeLine: 78, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2019, retainedNodes: !209)
!18941 = !DIFile(filename: "./lib/xstrtol.c", directory: "/home/mbarbar/software/coreutils-8.31")
!18942 = !DILocalVariable(name: "s", arg: 1, scope: !18940, file: !18941, line: 76, type: !180)
!18943 = !DILocation(line: 76, column: 24, scope: !18940)
!18944 = !DILocalVariable(name: "ptr", arg: 2, scope: !18940, file: !18941, line: 76, type: !184)
!18945 = !DILocation(line: 76, column: 34, scope: !18940)
!18946 = !DILocalVariable(name: "strtol_base", arg: 3, scope: !18940, file: !18941, line: 76, type: !7)
!18947 = !DILocation(line: 76, column: 43, scope: !18940)
!18948 = !DILocalVariable(name: "val", arg: 4, scope: !18940, file: !18941, line: 77, type: !2034)
!18949 = !DILocation(line: 77, column: 24, scope: !18940)
!18950 = !DILocalVariable(name: "valid_suffixes", arg: 5, scope: !18940, file: !18941, line: 77, type: !180)
!18951 = !DILocation(line: 77, column: 41, scope: !18940)
!18952 = !DILocalVariable(name: "t_ptr", scope: !18940, file: !18941, line: 79, type: !9)
!18953 = !DILocation(line: 79, column: 9, scope: !18940)
!18954 = !DILocalVariable(name: "p", scope: !18940, file: !18941, line: 80, type: !184)
!18955 = !DILocation(line: 80, column: 10, scope: !18940)
!18956 = !DILocalVariable(name: "tmp", scope: !18940, file: !18941, line: 81, type: !57)
!18957 = !DILocation(line: 81, column: 14, scope: !18940)
!18958 = !DILocalVariable(name: "err", scope: !18940, file: !18941, line: 82, type: !2033)
!18959 = !DILocation(line: 82, column: 16, scope: !18940)
!18960 = !DILocation(line: 84, column: 3, scope: !18961)
!18961 = distinct !DILexicalBlock(scope: !18962, file: !18941, line: 84, column: 3)
!18962 = distinct !DILexicalBlock(scope: !18940, file: !18941, line: 84, column: 3)
!18963 = !DILocation(line: 84, column: 3, scope: !18962)
!18964 = !DILocation(line: 86, column: 8, scope: !18940)
!18965 = !DILocation(line: 86, column: 14, scope: !18940)
!18966 = !DILocation(line: 86, column: 5, scope: !18940)
!18967 = !DILocation(line: 88, column: 3, scope: !18940)
!18968 = !DILocation(line: 88, column: 9, scope: !18940)
!18969 = !DILocalVariable(name: "q", scope: !18970, file: !18941, line: 92, type: !180)
!18970 = distinct !DILexicalBlock(scope: !18971, file: !18941, line: 91, column: 5)
!18971 = distinct !DILexicalBlock(scope: !18940, file: !18941, line: 90, column: 7)
!18972 = !DILocation(line: 92, column: 19, scope: !18970)
!18973 = !DILocation(line: 92, column: 23, scope: !18970)
!18974 = !DILocalVariable(name: "ch", scope: !18970, file: !18941, line: 93, type: !554)
!18975 = !DILocation(line: 93, column: 21, scope: !18970)
!18976 = !DILocation(line: 93, column: 27, scope: !18970)
!18977 = !DILocation(line: 93, column: 26, scope: !18970)
!18978 = !DILocation(line: 94, column: 7, scope: !18970)
!18979 = !DILocation(line: 94, column: 14, scope: !18970)
!18980 = !DILocation(line: 95, column: 15, scope: !18970)
!18981 = !DILocation(line: 95, column: 14, scope: !18970)
!18982 = !DILocation(line: 95, column: 12, scope: !18970)
!18983 = distinct !{!18983, !18978, !18984}
!18984 = !DILocation(line: 95, column: 17, scope: !18970)
!18985 = !DILocation(line: 96, column: 11, scope: !18986)
!18986 = distinct !DILexicalBlock(scope: !18970, file: !18941, line: 96, column: 11)
!18987 = !DILocation(line: 96, column: 14, scope: !18986)
!18988 = !DILocation(line: 96, column: 11, scope: !18970)
!18989 = !DILocation(line: 97, column: 9, scope: !18986)
!18990 = !DILocation(line: 100, column: 19, scope: !18940)
!18991 = !DILocation(line: 100, column: 22, scope: !18940)
!18992 = !DILocation(line: 100, column: 25, scope: !18940)
!18993 = !DILocation(line: 100, column: 9, scope: !18940)
!18994 = !DILocation(line: 100, column: 7, scope: !18940)
!18995 = !DILocation(line: 102, column: 8, scope: !18996)
!18996 = distinct !DILexicalBlock(scope: !18940, file: !18941, line: 102, column: 7)
!18997 = !DILocation(line: 102, column: 7, scope: !18996)
!18998 = !DILocation(line: 102, column: 13, scope: !18996)
!18999 = !DILocation(line: 102, column: 10, scope: !18996)
!19000 = !DILocation(line: 102, column: 7, scope: !18940)
!19001 = !DILocation(line: 106, column: 11, scope: !19002)
!19002 = distinct !DILexicalBlock(scope: !19003, file: !18941, line: 106, column: 11)
!19003 = distinct !DILexicalBlock(scope: !18996, file: !18941, line: 103, column: 5)
!19004 = !DILocation(line: 106, column: 26, scope: !19002)
!19005 = !DILocation(line: 106, column: 31, scope: !19002)
!19006 = !DILocation(line: 106, column: 30, scope: !19002)
!19007 = !DILocation(line: 106, column: 29, scope: !19002)
!19008 = !DILocation(line: 106, column: 33, scope: !19002)
!19009 = !DILocation(line: 106, column: 44, scope: !19002)
!19010 = !DILocation(line: 106, column: 62, scope: !19002)
!19011 = !DILocation(line: 106, column: 61, scope: !19002)
!19012 = !DILocation(line: 106, column: 60, scope: !19002)
!19013 = !DILocation(line: 106, column: 36, scope: !19002)
!19014 = !DILocation(line: 106, column: 11, scope: !19003)
!19015 = !DILocation(line: 107, column: 13, scope: !19002)
!19016 = !DILocation(line: 107, column: 9, scope: !19002)
!19017 = !DILocation(line: 109, column: 9, scope: !19002)
!19018 = !DILocation(line: 110, column: 5, scope: !19003)
!19019 = !DILocation(line: 111, column: 12, scope: !19020)
!19020 = distinct !DILexicalBlock(scope: !18996, file: !18941, line: 111, column: 12)
!19021 = !DILocation(line: 111, column: 18, scope: !19020)
!19022 = !DILocation(line: 111, column: 12, scope: !18996)
!19023 = !DILocation(line: 113, column: 11, scope: !19024)
!19024 = distinct !DILexicalBlock(scope: !19025, file: !18941, line: 113, column: 11)
!19025 = distinct !DILexicalBlock(scope: !19020, file: !18941, line: 112, column: 5)
!19026 = !DILocation(line: 113, column: 17, scope: !19024)
!19027 = !DILocation(line: 113, column: 11, scope: !19025)
!19028 = !DILocation(line: 114, column: 9, scope: !19024)
!19029 = !DILocation(line: 115, column: 11, scope: !19025)
!19030 = !DILocation(line: 116, column: 5, scope: !19025)
!19031 = !DILocation(line: 121, column: 8, scope: !19032)
!19032 = distinct !DILexicalBlock(scope: !18940, file: !18941, line: 121, column: 7)
!19033 = !DILocation(line: 121, column: 7, scope: !18940)
!19034 = !DILocation(line: 123, column: 14, scope: !19035)
!19035 = distinct !DILexicalBlock(scope: !19032, file: !18941, line: 122, column: 5)
!19036 = !DILocation(line: 123, column: 8, scope: !19035)
!19037 = !DILocation(line: 123, column: 12, scope: !19035)
!19038 = !DILocation(line: 124, column: 14, scope: !19035)
!19039 = !DILocation(line: 124, column: 7, scope: !19035)
!19040 = !DILocation(line: 127, column: 9, scope: !19041)
!19041 = distinct !DILexicalBlock(scope: !18940, file: !18941, line: 127, column: 7)
!19042 = !DILocation(line: 127, column: 8, scope: !19041)
!19043 = !DILocation(line: 127, column: 7, scope: !19041)
!19044 = !DILocation(line: 127, column: 11, scope: !19041)
!19045 = !DILocation(line: 127, column: 7, scope: !18940)
!19046 = !DILocalVariable(name: "base", scope: !19047, file: !18941, line: 129, type: !7)
!19047 = distinct !DILexicalBlock(scope: !19041, file: !18941, line: 128, column: 5)
!19048 = !DILocation(line: 129, column: 11, scope: !19047)
!19049 = !DILocalVariable(name: "suffixes", scope: !19047, file: !18941, line: 130, type: !7)
!19050 = !DILocation(line: 130, column: 11, scope: !19047)
!19051 = !DILocalVariable(name: "overflow", scope: !19047, file: !18941, line: 131, type: !2033)
!19052 = !DILocation(line: 131, column: 20, scope: !19047)
!19053 = !DILocation(line: 133, column: 20, scope: !19054)
!19054 = distinct !DILexicalBlock(scope: !19047, file: !18941, line: 133, column: 11)
!19055 = !DILocation(line: 133, column: 38, scope: !19054)
!19056 = !DILocation(line: 133, column: 37, scope: !19054)
!19057 = !DILocation(line: 133, column: 36, scope: !19054)
!19058 = !DILocation(line: 133, column: 12, scope: !19054)
!19059 = !DILocation(line: 133, column: 11, scope: !19047)
!19060 = !DILocation(line: 135, column: 18, scope: !19061)
!19061 = distinct !DILexicalBlock(scope: !19054, file: !18941, line: 134, column: 9)
!19062 = !DILocation(line: 135, column: 12, scope: !19061)
!19063 = !DILocation(line: 135, column: 16, scope: !19061)
!19064 = !DILocation(line: 136, column: 18, scope: !19061)
!19065 = !DILocation(line: 136, column: 22, scope: !19061)
!19066 = !DILocation(line: 136, column: 11, scope: !19061)
!19067 = !DILocation(line: 139, column: 17, scope: !19047)
!19068 = !DILocation(line: 139, column: 16, scope: !19047)
!19069 = !DILocation(line: 139, column: 15, scope: !19047)
!19070 = !DILocation(line: 139, column: 7, scope: !19047)
!19071 = !DILocation(line: 151, column: 23, scope: !19072)
!19072 = distinct !DILexicalBlock(scope: !19073, file: !18941, line: 151, column: 15)
!19073 = distinct !DILexicalBlock(scope: !19047, file: !18941, line: 140, column: 9)
!19074 = !DILocation(line: 151, column: 15, scope: !19072)
!19075 = !DILocation(line: 151, column: 15, scope: !19073)
!19076 = !DILocation(line: 152, column: 21, scope: !19072)
!19077 = !DILocation(line: 152, column: 13, scope: !19072)
!19078 = !DILocation(line: 155, column: 21, scope: !19079)
!19079 = distinct !DILexicalBlock(scope: !19080, file: !18941, line: 155, column: 21)
!19080 = distinct !DILexicalBlock(scope: !19072, file: !18941, line: 153, column: 15)
!19081 = !DILocation(line: 155, column: 29, scope: !19079)
!19082 = !DILocation(line: 155, column: 21, scope: !19080)
!19083 = !DILocation(line: 156, column: 28, scope: !19079)
!19084 = !DILocation(line: 156, column: 19, scope: !19079)
!19085 = !DILocation(line: 157, column: 17, scope: !19080)
!19086 = !DILocation(line: 161, column: 22, scope: !19080)
!19087 = !DILocation(line: 162, column: 25, scope: !19080)
!19088 = !DILocation(line: 163, column: 17, scope: !19080)
!19089 = !DILocation(line: 164, column: 15, scope: !19080)
!19090 = !DILocation(line: 165, column: 9, scope: !19073)
!19091 = !DILocation(line: 167, column: 17, scope: !19047)
!19092 = !DILocation(line: 167, column: 16, scope: !19047)
!19093 = !DILocation(line: 167, column: 15, scope: !19047)
!19094 = !DILocation(line: 167, column: 7, scope: !19047)
!19095 = !DILocation(line: 170, column: 22, scope: !19096)
!19096 = distinct !DILexicalBlock(scope: !19047, file: !18941, line: 168, column: 9)
!19097 = !DILocation(line: 170, column: 20, scope: !19096)
!19098 = !DILocation(line: 171, column: 11, scope: !19096)
!19099 = !DILocation(line: 177, column: 22, scope: !19096)
!19100 = !DILocation(line: 177, column: 20, scope: !19096)
!19101 = !DILocation(line: 178, column: 11, scope: !19096)
!19102 = !DILocation(line: 181, column: 20, scope: !19096)
!19103 = !DILocation(line: 182, column: 11, scope: !19096)
!19104 = !DILocation(line: 185, column: 48, scope: !19096)
!19105 = !DILocation(line: 185, column: 22, scope: !19096)
!19106 = !DILocation(line: 185, column: 20, scope: !19096)
!19107 = !DILocation(line: 186, column: 11, scope: !19096)
!19108 = !DILocation(line: 190, column: 48, scope: !19096)
!19109 = !DILocation(line: 190, column: 22, scope: !19096)
!19110 = !DILocation(line: 190, column: 20, scope: !19096)
!19111 = !DILocation(line: 191, column: 11, scope: !19096)
!19112 = !DILocation(line: 195, column: 48, scope: !19096)
!19113 = !DILocation(line: 195, column: 22, scope: !19096)
!19114 = !DILocation(line: 195, column: 20, scope: !19096)
!19115 = !DILocation(line: 196, column: 11, scope: !19096)
!19116 = !DILocation(line: 200, column: 48, scope: !19096)
!19117 = !DILocation(line: 200, column: 22, scope: !19096)
!19118 = !DILocation(line: 200, column: 20, scope: !19096)
!19119 = !DILocation(line: 201, column: 11, scope: !19096)
!19120 = !DILocation(line: 204, column: 48, scope: !19096)
!19121 = !DILocation(line: 204, column: 22, scope: !19096)
!19122 = !DILocation(line: 204, column: 20, scope: !19096)
!19123 = !DILocation(line: 205, column: 11, scope: !19096)
!19124 = !DILocation(line: 209, column: 48, scope: !19096)
!19125 = !DILocation(line: 209, column: 22, scope: !19096)
!19126 = !DILocation(line: 209, column: 20, scope: !19096)
!19127 = !DILocation(line: 210, column: 11, scope: !19096)
!19128 = !DILocation(line: 213, column: 22, scope: !19096)
!19129 = !DILocation(line: 213, column: 20, scope: !19096)
!19130 = !DILocation(line: 214, column: 11, scope: !19096)
!19131 = !DILocation(line: 217, column: 48, scope: !19096)
!19132 = !DILocation(line: 217, column: 22, scope: !19096)
!19133 = !DILocation(line: 217, column: 20, scope: !19096)
!19134 = !DILocation(line: 218, column: 11, scope: !19096)
!19135 = !DILocation(line: 221, column: 48, scope: !19096)
!19136 = !DILocation(line: 221, column: 22, scope: !19096)
!19137 = !DILocation(line: 221, column: 20, scope: !19096)
!19138 = !DILocation(line: 222, column: 11, scope: !19096)
!19139 = !DILocation(line: 225, column: 18, scope: !19096)
!19140 = !DILocation(line: 225, column: 12, scope: !19096)
!19141 = !DILocation(line: 225, column: 16, scope: !19096)
!19142 = !DILocation(line: 226, column: 18, scope: !19096)
!19143 = !DILocation(line: 226, column: 22, scope: !19096)
!19144 = !DILocation(line: 226, column: 11, scope: !19096)
!19145 = !DILocation(line: 229, column: 14, scope: !19047)
!19146 = !DILocation(line: 229, column: 11, scope: !19047)
!19147 = !DILocation(line: 230, column: 13, scope: !19047)
!19148 = !DILocation(line: 230, column: 8, scope: !19047)
!19149 = !DILocation(line: 230, column: 10, scope: !19047)
!19150 = !DILocation(line: 231, column: 13, scope: !19151)
!19151 = distinct !DILexicalBlock(scope: !19047, file: !18941, line: 231, column: 11)
!19152 = !DILocation(line: 231, column: 12, scope: !19151)
!19153 = !DILocation(line: 231, column: 11, scope: !19151)
!19154 = !DILocation(line: 231, column: 11, scope: !19047)
!19155 = !DILocation(line: 232, column: 13, scope: !19151)
!19156 = !DILocation(line: 232, column: 9, scope: !19151)
!19157 = !DILocation(line: 233, column: 5, scope: !19047)
!19158 = !DILocation(line: 235, column: 10, scope: !18940)
!19159 = !DILocation(line: 235, column: 4, scope: !18940)
!19160 = !DILocation(line: 235, column: 8, scope: !18940)
!19161 = !DILocation(line: 236, column: 10, scope: !18940)
!19162 = !DILocation(line: 236, column: 3, scope: !18940)
!19163 = !DILocation(line: 237, column: 1, scope: !18940)
!19164 = distinct !DISubprogram(name: "bkm_scale", scope: !18941, file: !18941, line: 48, type: !2035, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2019, retainedNodes: !209)
!19165 = !DILocalVariable(name: "x", arg: 1, scope: !19164, file: !18941, line: 48, type: !2034)
!19166 = !DILocation(line: 48, column: 24, scope: !19164)
!19167 = !DILocalVariable(name: "scale_factor", arg: 2, scope: !19164, file: !18941, line: 48, type: !7)
!19168 = !DILocation(line: 48, column: 31, scope: !19164)
!19169 = !DILocation(line: 55, column: 26, scope: !19170)
!19170 = distinct !DILexicalBlock(scope: !19164, file: !18941, line: 55, column: 7)
!19171 = !DILocation(line: 55, column: 24, scope: !19170)
!19172 = !DILocation(line: 55, column: 42, scope: !19170)
!19173 = !DILocation(line: 55, column: 41, scope: !19170)
!19174 = !DILocation(line: 55, column: 39, scope: !19170)
!19175 = !DILocation(line: 55, column: 7, scope: !19164)
!19176 = !DILocation(line: 57, column: 8, scope: !19177)
!19177 = distinct !DILexicalBlock(scope: !19170, file: !18941, line: 56, column: 5)
!19178 = !DILocation(line: 57, column: 10, scope: !19177)
!19179 = !DILocation(line: 58, column: 7, scope: !19177)
!19180 = !DILocation(line: 60, column: 9, scope: !19164)
!19181 = !DILocation(line: 60, column: 4, scope: !19164)
!19182 = !DILocation(line: 60, column: 6, scope: !19164)
!19183 = !DILocation(line: 61, column: 3, scope: !19164)
!19184 = !DILocation(line: 62, column: 1, scope: !19164)
!19185 = distinct !DISubprogram(name: "bkm_scale_by_power", scope: !18941, file: !18941, line: 65, type: !2037, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2019, retainedNodes: !209)
!19186 = !DILocalVariable(name: "x", arg: 1, scope: !19185, file: !18941, line: 65, type: !2034)
!19187 = !DILocation(line: 65, column: 33, scope: !19185)
!19188 = !DILocalVariable(name: "base", arg: 2, scope: !19185, file: !18941, line: 65, type: !7)
!19189 = !DILocation(line: 65, column: 40, scope: !19185)
!19190 = !DILocalVariable(name: "power", arg: 3, scope: !19185, file: !18941, line: 65, type: !7)
!19191 = !DILocation(line: 65, column: 50, scope: !19185)
!19192 = !DILocalVariable(name: "err", scope: !19185, file: !18941, line: 67, type: !2033)
!19193 = !DILocation(line: 67, column: 16, scope: !19185)
!19194 = !DILocation(line: 68, column: 3, scope: !19185)
!19195 = !DILocation(line: 68, column: 15, scope: !19185)
!19196 = !DILocation(line: 69, column: 23, scope: !19185)
!19197 = !DILocation(line: 69, column: 26, scope: !19185)
!19198 = !DILocation(line: 69, column: 12, scope: !19185)
!19199 = !DILocation(line: 69, column: 9, scope: !19185)
!19200 = distinct !{!19200, !19194, !19201}
!19201 = !DILocation(line: 69, column: 30, scope: !19185)
!19202 = !DILocation(line: 70, column: 10, scope: !19185)
!19203 = !DILocation(line: 70, column: 3, scope: !19185)
!19204 = distinct !DISubprogram(name: "xvasprintf", scope: !19205, file: !19205, line: 76, type: !2042, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2039, retainedNodes: !209)
!19205 = !DIFile(filename: "lib/xvasprintf.c", directory: "/home/mbarbar/software/coreutils-8.31")
!19206 = !DILocalVariable(name: "format", arg: 1, scope: !19204, file: !19205, line: 76, type: !180)
!19207 = !DILocation(line: 76, column: 25, scope: !19204)
!19208 = !DILocalVariable(name: "args", arg: 2, scope: !19204, file: !19205, line: 76, type: !2044)
!19209 = !DILocation(line: 76, column: 41, scope: !19204)
!19210 = !DILocalVariable(name: "result", scope: !19204, file: !19205, line: 78, type: !9)
!19211 = !DILocation(line: 78, column: 9, scope: !19204)
!19212 = !DILocalVariable(name: "argcount", scope: !19213, file: !19205, line: 84, type: !55)
!19213 = distinct !DILexicalBlock(scope: !19204, file: !19205, line: 83, column: 3)
!19214 = !DILocation(line: 84, column: 12, scope: !19213)
!19215 = !DILocalVariable(name: "f", scope: !19213, file: !19205, line: 85, type: !180)
!19216 = !DILocation(line: 85, column: 17, scope: !19213)
!19217 = !DILocation(line: 87, column: 14, scope: !19218)
!19218 = distinct !DILexicalBlock(scope: !19213, file: !19205, line: 87, column: 5)
!19219 = !DILocation(line: 87, column: 12, scope: !19218)
!19220 = !DILocation(line: 87, column: 10, scope: !19218)
!19221 = !DILocation(line: 89, column: 14, scope: !19222)
!19222 = distinct !DILexicalBlock(scope: !19223, file: !19205, line: 89, column: 13)
!19223 = distinct !DILexicalBlock(scope: !19224, file: !19205, line: 88, column: 7)
!19224 = distinct !DILexicalBlock(scope: !19218, file: !19205, line: 87, column: 5)
!19225 = !DILocation(line: 89, column: 13, scope: !19222)
!19226 = !DILocation(line: 89, column: 16, scope: !19222)
!19227 = !DILocation(line: 89, column: 13, scope: !19223)
!19228 = !DILocation(line: 91, column: 27, scope: !19222)
!19229 = !DILocation(line: 91, column: 37, scope: !19222)
!19230 = !DILocation(line: 91, column: 18, scope: !19222)
!19231 = !DILocation(line: 91, column: 11, scope: !19222)
!19232 = !DILocation(line: 92, column: 14, scope: !19233)
!19233 = distinct !DILexicalBlock(scope: !19223, file: !19205, line: 92, column: 13)
!19234 = !DILocation(line: 92, column: 13, scope: !19233)
!19235 = !DILocation(line: 92, column: 16, scope: !19233)
!19236 = !DILocation(line: 92, column: 13, scope: !19223)
!19237 = !DILocation(line: 93, column: 11, scope: !19233)
!19238 = !DILocation(line: 94, column: 10, scope: !19223)
!19239 = !DILocation(line: 95, column: 14, scope: !19240)
!19240 = distinct !DILexicalBlock(scope: !19223, file: !19205, line: 95, column: 13)
!19241 = !DILocation(line: 95, column: 13, scope: !19240)
!19242 = !DILocation(line: 95, column: 16, scope: !19240)
!19243 = !DILocation(line: 95, column: 13, scope: !19223)
!19244 = !DILocation(line: 96, column: 11, scope: !19240)
!19245 = !DILocation(line: 97, column: 10, scope: !19223)
!19246 = !DILocation(line: 98, column: 17, scope: !19223)
!19247 = !DILocation(line: 87, column: 5, scope: !19224)
!19248 = distinct !{!19248, !19249, !19250}
!19249 = !DILocation(line: 87, column: 5, scope: !19218)
!19250 = !DILocation(line: 99, column: 7, scope: !19218)
!19251 = !DILocation(line: 102, column: 27, scope: !19252)
!19252 = distinct !DILexicalBlock(scope: !19204, file: !19205, line: 102, column: 7)
!19253 = !DILocation(line: 102, column: 35, scope: !19252)
!19254 = !DILocation(line: 102, column: 7, scope: !19252)
!19255 = !DILocation(line: 102, column: 41, scope: !19252)
!19256 = !DILocation(line: 102, column: 7, scope: !19204)
!19257 = !DILocation(line: 104, column: 11, scope: !19258)
!19258 = distinct !DILexicalBlock(scope: !19259, file: !19205, line: 104, column: 11)
!19259 = distinct !DILexicalBlock(scope: !19252, file: !19205, line: 103, column: 5)
!19260 = !DILocation(line: 104, column: 17, scope: !19258)
!19261 = !DILocation(line: 104, column: 11, scope: !19259)
!19262 = !DILocation(line: 105, column: 9, scope: !19258)
!19263 = !DILocation(line: 106, column: 7, scope: !19259)
!19264 = !DILocation(line: 109, column: 10, scope: !19204)
!19265 = !DILocation(line: 109, column: 3, scope: !19204)
!19266 = !DILocation(line: 110, column: 1, scope: !19204)
!19267 = distinct !DISubprogram(name: "xstrcat", scope: !19205, file: !19205, line: 33, type: !2051, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2039, retainedNodes: !209)
!19268 = !DILocalVariable(name: "argcount", arg: 1, scope: !19267, file: !19205, line: 33, type: !55)
!19269 = !DILocation(line: 33, column: 17, scope: !19267)
!19270 = !DILocalVariable(name: "args", arg: 2, scope: !19267, file: !19205, line: 33, type: !2044)
!19271 = !DILocation(line: 33, column: 35, scope: !19267)
!19272 = !DILocalVariable(name: "result", scope: !19267, file: !19205, line: 35, type: !9)
!19273 = !DILocation(line: 35, column: 9, scope: !19267)
!19274 = !DILocalVariable(name: "ap", scope: !19267, file: !19205, line: 36, type: !2053)
!19275 = !DILocation(line: 36, column: 11, scope: !19267)
!19276 = !DILocalVariable(name: "totalsize", scope: !19267, file: !19205, line: 37, type: !55)
!19277 = !DILocation(line: 37, column: 10, scope: !19267)
!19278 = !DILocalVariable(name: "i", scope: !19267, file: !19205, line: 38, type: !55)
!19279 = !DILocation(line: 38, column: 10, scope: !19267)
!19280 = !DILocalVariable(name: "p", scope: !19267, file: !19205, line: 39, type: !9)
!19281 = !DILocation(line: 39, column: 9, scope: !19267)
!19282 = !DILocation(line: 42, column: 13, scope: !19267)
!19283 = !DILocation(line: 43, column: 3, scope: !19267)
!19284 = !DILocation(line: 44, column: 12, scope: !19285)
!19285 = distinct !DILexicalBlock(scope: !19267, file: !19205, line: 44, column: 3)
!19286 = !DILocation(line: 44, column: 10, scope: !19285)
!19287 = !DILocation(line: 44, column: 8, scope: !19285)
!19288 = !DILocation(line: 44, column: 22, scope: !19289)
!19289 = distinct !DILexicalBlock(scope: !19285, file: !19205, line: 44, column: 3)
!19290 = !DILocation(line: 44, column: 24, scope: !19289)
!19291 = !DILocation(line: 44, column: 3, scope: !19285)
!19292 = !DILocalVariable(name: "next", scope: !19293, file: !19205, line: 46, type: !180)
!19293 = distinct !DILexicalBlock(scope: !19289, file: !19205, line: 45, column: 5)
!19294 = !DILocation(line: 46, column: 19, scope: !19293)
!19295 = !DILocation(line: 46, column: 26, scope: !19293)
!19296 = !DILocation(line: 47, column: 25, scope: !19293)
!19297 = !DILocation(line: 47, column: 44, scope: !19293)
!19298 = !DILocation(line: 47, column: 36, scope: !19293)
!19299 = !DILocation(line: 47, column: 19, scope: !19293)
!19300 = !DILocation(line: 47, column: 17, scope: !19293)
!19301 = !DILocation(line: 48, column: 5, scope: !19293)
!19302 = !DILocation(line: 44, column: 30, scope: !19289)
!19303 = !DILocation(line: 44, column: 3, scope: !19289)
!19304 = distinct !{!19304, !19291, !19305}
!19305 = !DILocation(line: 48, column: 5, scope: !19285)
!19306 = !DILocation(line: 49, column: 3, scope: !19267)
!19307 = !DILocation(line: 54, column: 7, scope: !19308)
!19308 = distinct !DILexicalBlock(scope: !19267, file: !19205, line: 54, column: 7)
!19309 = !DILocation(line: 54, column: 17, scope: !19308)
!19310 = !DILocation(line: 54, column: 29, scope: !19308)
!19311 = !DILocation(line: 54, column: 32, scope: !19308)
!19312 = !DILocation(line: 54, column: 42, scope: !19308)
!19313 = !DILocation(line: 54, column: 7, scope: !19267)
!19314 = !DILocation(line: 56, column: 7, scope: !19315)
!19315 = distinct !DILexicalBlock(scope: !19308, file: !19205, line: 55, column: 5)
!19316 = !DILocation(line: 56, column: 13, scope: !19315)
!19317 = !DILocation(line: 57, column: 7, scope: !19315)
!19318 = !DILocation(line: 61, column: 12, scope: !19267)
!19319 = !DILocation(line: 61, column: 10, scope: !19267)
!19320 = !DILocation(line: 62, column: 7, scope: !19267)
!19321 = !DILocation(line: 62, column: 5, scope: !19267)
!19322 = !DILocation(line: 63, column: 12, scope: !19323)
!19323 = distinct !DILexicalBlock(scope: !19267, file: !19205, line: 63, column: 3)
!19324 = !DILocation(line: 63, column: 10, scope: !19323)
!19325 = !DILocation(line: 63, column: 8, scope: !19323)
!19326 = !DILocation(line: 63, column: 22, scope: !19327)
!19327 = distinct !DILexicalBlock(scope: !19323, file: !19205, line: 63, column: 3)
!19328 = !DILocation(line: 63, column: 24, scope: !19327)
!19329 = !DILocation(line: 63, column: 3, scope: !19323)
!19330 = !DILocalVariable(name: "next", scope: !19331, file: !19205, line: 65, type: !180)
!19331 = distinct !DILexicalBlock(scope: !19327, file: !19205, line: 64, column: 5)
!19332 = !DILocation(line: 65, column: 19, scope: !19331)
!19333 = !DILocation(line: 65, column: 26, scope: !19331)
!19334 = !DILocalVariable(name: "len", scope: !19331, file: !19205, line: 66, type: !55)
!19335 = !DILocation(line: 66, column: 14, scope: !19331)
!19336 = !DILocation(line: 66, column: 28, scope: !19331)
!19337 = !DILocation(line: 66, column: 20, scope: !19331)
!19338 = !DILocation(line: 67, column: 15, scope: !19331)
!19339 = !DILocation(line: 67, column: 18, scope: !19331)
!19340 = !DILocation(line: 67, column: 24, scope: !19331)
!19341 = !DILocation(line: 67, column: 7, scope: !19331)
!19342 = !DILocation(line: 68, column: 12, scope: !19331)
!19343 = !DILocation(line: 68, column: 9, scope: !19331)
!19344 = !DILocation(line: 69, column: 5, scope: !19331)
!19345 = !DILocation(line: 63, column: 30, scope: !19327)
!19346 = !DILocation(line: 63, column: 3, scope: !19327)
!19347 = distinct !{!19347, !19329, !19348}
!19348 = !DILocation(line: 69, column: 5, scope: !19323)
!19349 = !DILocation(line: 70, column: 4, scope: !19267)
!19350 = !DILocation(line: 70, column: 6, scope: !19267)
!19351 = !DILocation(line: 72, column: 10, scope: !19267)
!19352 = !DILocation(line: 72, column: 3, scope: !19267)
!19353 = !DILocation(line: 73, column: 1, scope: !19267)
!19354 = distinct !DISubprogram(name: "yesno", scope: !19355, file: !19355, line: 32, type: !1329, scopeLine: 33, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2057, retainedNodes: !209)
!19355 = !DIFile(filename: "lib/yesno.c", directory: "/home/mbarbar/software/coreutils-8.31")
!19356 = !DILocalVariable(name: "yes", scope: !19354, file: !19355, line: 34, type: !142)
!19357 = !DILocation(line: 34, column: 8, scope: !19354)
!19358 = !DILocalVariable(name: "response", scope: !19354, file: !19355, line: 37, type: !9)
!19359 = !DILocation(line: 37, column: 9, scope: !19354)
!19360 = !DILocalVariable(name: "response_size", scope: !19354, file: !19355, line: 38, type: !55)
!19361 = !DILocation(line: 38, column: 10, scope: !19354)
!19362 = !DILocalVariable(name: "response_len", scope: !19354, file: !19355, line: 39, type: !692)
!19363 = !DILocation(line: 39, column: 11, scope: !19354)
!19364 = !DILocation(line: 39, column: 62, scope: !19354)
!19365 = !DILocation(line: 39, column: 26, scope: !19354)
!19366 = !DILocation(line: 41, column: 7, scope: !19367)
!19367 = distinct !DILexicalBlock(scope: !19354, file: !19355, line: 41, column: 7)
!19368 = !DILocation(line: 41, column: 20, scope: !19367)
!19369 = !DILocation(line: 41, column: 7, scope: !19354)
!19370 = !DILocation(line: 42, column: 9, scope: !19367)
!19371 = !DILocation(line: 42, column: 5, scope: !19367)
!19372 = !DILocation(line: 47, column: 11, scope: !19373)
!19373 = distinct !DILexicalBlock(scope: !19374, file: !19355, line: 47, column: 11)
!19374 = distinct !DILexicalBlock(scope: !19367, file: !19355, line: 44, column: 5)
!19375 = !DILocation(line: 47, column: 20, scope: !19373)
!19376 = !DILocation(line: 47, column: 33, scope: !19373)
!19377 = !DILocation(line: 47, column: 38, scope: !19373)
!19378 = !DILocation(line: 47, column: 11, scope: !19374)
!19379 = !DILocation(line: 48, column: 9, scope: !19373)
!19380 = !DILocation(line: 48, column: 18, scope: !19373)
!19381 = !DILocation(line: 48, column: 31, scope: !19373)
!19382 = !DILocation(line: 48, column: 36, scope: !19373)
!19383 = !DILocation(line: 49, column: 27, scope: !19374)
!19384 = !DILocation(line: 49, column: 18, scope: !19374)
!19385 = !DILocation(line: 49, column: 16, scope: !19374)
!19386 = !DILocation(line: 49, column: 11, scope: !19374)
!19387 = !DILocation(line: 52, column: 9, scope: !19354)
!19388 = !DILocation(line: 52, column: 3, scope: !19354)
!19389 = !DILocation(line: 62, column: 10, scope: !19354)
!19390 = !DILocation(line: 62, column: 3, scope: !19354)
!19391 = distinct !DISubprogram(name: "rpl_fflush", scope: !19392, file: !19392, line: 129, type: !2097, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2094, retainedNodes: !209)
!19392 = !DIFile(filename: "lib/fflush.c", directory: "/home/mbarbar/software/coreutils-8.31")
!19393 = !DILocalVariable(name: "stream", arg: 1, scope: !19391, file: !19392, line: 129, type: !2099)
!19394 = !DILocation(line: 129, column: 19, scope: !19391)
!19395 = !DILocation(line: 150, column: 7, scope: !19396)
!19396 = distinct !DILexicalBlock(scope: !19391, file: !19392, line: 150, column: 7)
!19397 = !DILocation(line: 150, column: 14, scope: !19396)
!19398 = !DILocation(line: 150, column: 22, scope: !19396)
!19399 = !DILocation(line: 150, column: 27, scope: !19396)
!19400 = !DILocation(line: 150, column: 7, scope: !19391)
!19401 = !DILocation(line: 151, column: 20, scope: !19396)
!19402 = !DILocation(line: 151, column: 12, scope: !19396)
!19403 = !DILocation(line: 151, column: 5, scope: !19396)
!19404 = !DILocation(line: 156, column: 44, scope: !19391)
!19405 = !DILocation(line: 156, column: 3, scope: !19391)
!19406 = !DILocation(line: 158, column: 18, scope: !19391)
!19407 = !DILocation(line: 158, column: 10, scope: !19391)
!19408 = !DILocation(line: 158, column: 3, scope: !19391)
!19409 = !DILocation(line: 232, column: 1, scope: !19391)
!19410 = distinct !DISubprogram(name: "clear_ungetc_buffer_preserving_position", scope: !19392, file: !19392, line: 41, type: !2133, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2094, retainedNodes: !209)
!19411 = !DILocalVariable(name: "fp", arg: 1, scope: !19410, file: !19392, line: 41, type: !2099)
!19412 = !DILocation(line: 41, column: 48, scope: !19410)
!19413 = !DILocation(line: 43, column: 7, scope: !19414)
!19414 = distinct !DILexicalBlock(scope: !19410, file: !19392, line: 43, column: 7)
!19415 = !DILocation(line: 43, column: 11, scope: !19414)
!19416 = !{!19417, !2633, i64 0}
!19417 = !{!"_IO_FILE", !2633, i64 0, !2646, i64 8, !2646, i64 16, !2646, i64 24, !2646, i64 32, !2646, i64 40, !2646, i64 48, !2646, i64 56, !2646, i64 64, !2646, i64 72, !2646, i64 80, !2646, i64 88, !2646, i64 96, !2646, i64 104, !2633, i64 112, !2633, i64 116, !2913, i64 120, !14635, i64 128, !2634, i64 130, !2634, i64 131, !2646, i64 136, !2913, i64 144, !2646, i64 152, !2646, i64 160, !2646, i64 168, !2646, i64 176, !2913, i64 184, !2633, i64 192, !2634, i64 196}
!19418 = !DILocation(line: 43, column: 18, scope: !19414)
!19419 = !DILocation(line: 43, column: 7, scope: !19410)
!19420 = !DILocation(line: 45, column: 13, scope: !19414)
!19421 = !DILocation(line: 45, column: 5, scope: !19414)
!19422 = !DILocation(line: 46, column: 1, scope: !19410)
!19423 = distinct !DISubprogram(name: "freadahead", scope: !19424, file: !19424, line: 34, type: !2138, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2135, retainedNodes: !209)
!19424 = !DIFile(filename: "lib/freadahead.c", directory: "/home/mbarbar/software/coreutils-8.31")
!19425 = !DILocalVariable(name: "fp", arg: 1, scope: !19423, file: !19424, line: 34, type: !2140)
!19426 = !DILocation(line: 34, column: 19, scope: !19423)
!19427 = !DILocation(line: 38, column: 7, scope: !19428)
!19428 = distinct !DILexicalBlock(scope: !19423, file: !19424, line: 38, column: 7)
!19429 = !DILocation(line: 38, column: 11, scope: !19428)
!19430 = !{!19417, !2646, i64 40}
!19431 = !DILocation(line: 38, column: 27, scope: !19428)
!19432 = !DILocation(line: 38, column: 31, scope: !19428)
!19433 = !{!19417, !2646, i64 32}
!19434 = !DILocation(line: 38, column: 25, scope: !19428)
!19435 = !DILocation(line: 38, column: 7, scope: !19423)
!19436 = !DILocation(line: 39, column: 5, scope: !19428)
!19437 = !DILocation(line: 40, column: 11, scope: !19423)
!19438 = !DILocation(line: 40, column: 15, scope: !19423)
!19439 = !{!19417, !2646, i64 16}
!19440 = !DILocation(line: 40, column: 30, scope: !19423)
!19441 = !DILocation(line: 40, column: 34, scope: !19423)
!19442 = !{!19417, !2646, i64 8}
!19443 = !DILocation(line: 40, column: 28, scope: !19423)
!19444 = !DILocation(line: 41, column: 13, scope: !19423)
!19445 = !DILocation(line: 41, column: 17, scope: !19423)
!19446 = !DILocation(line: 41, column: 24, scope: !19423)
!19447 = !DILocation(line: 41, column: 42, scope: !19423)
!19448 = !DILocation(line: 41, column: 46, scope: !19423)
!19449 = !{!19417, !2646, i64 88}
!19450 = !DILocation(line: 41, column: 61, scope: !19423)
!19451 = !DILocation(line: 41, column: 65, scope: !19423)
!19452 = !{!19417, !2646, i64 72}
!19453 = !DILocation(line: 41, column: 59, scope: !19423)
!19454 = !DILocation(line: 41, column: 10, scope: !19423)
!19455 = !DILocation(line: 40, column: 3, scope: !19423)
!19456 = !DILocation(line: 103, column: 1, scope: !19423)
!19457 = distinct !DISubprogram(name: "rpl_fseeko", scope: !19458, file: !19458, line: 28, type: !2177, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2174, retainedNodes: !209)
!19458 = !DIFile(filename: "lib/fseeko.c", directory: "/home/mbarbar/software/coreutils-8.31")
!19459 = !DILocalVariable(name: "fp", arg: 1, scope: !19457, file: !19458, line: 28, type: !2179)
!19460 = !DILocation(line: 28, column: 15, scope: !19457)
!19461 = !DILocalVariable(name: "offset", arg: 2, scope: !19457, file: !19458, line: 28, type: !352)
!19462 = !DILocation(line: 28, column: 25, scope: !19457)
!19463 = !DILocalVariable(name: "whence", arg: 3, scope: !19457, file: !19458, line: 28, type: !7)
!19464 = !DILocation(line: 28, column: 37, scope: !19457)
!19465 = !DILocation(line: 52, column: 7, scope: !19466)
!19466 = distinct !DILexicalBlock(scope: !19457, file: !19458, line: 52, column: 7)
!19467 = !DILocation(line: 52, column: 11, scope: !19466)
!19468 = !DILocation(line: 52, column: 27, scope: !19466)
!19469 = !DILocation(line: 52, column: 31, scope: !19466)
!19470 = !DILocation(line: 52, column: 24, scope: !19466)
!19471 = !DILocation(line: 53, column: 7, scope: !19466)
!19472 = !DILocation(line: 53, column: 10, scope: !19466)
!19473 = !DILocation(line: 53, column: 14, scope: !19466)
!19474 = !DILocation(line: 53, column: 31, scope: !19466)
!19475 = !DILocation(line: 53, column: 35, scope: !19466)
!19476 = !DILocation(line: 53, column: 28, scope: !19466)
!19477 = !DILocation(line: 54, column: 7, scope: !19466)
!19478 = !DILocation(line: 54, column: 10, scope: !19466)
!19479 = !DILocation(line: 54, column: 14, scope: !19466)
!19480 = !DILocation(line: 54, column: 28, scope: !19466)
!19481 = !DILocation(line: 52, column: 7, scope: !19457)
!19482 = !DILocalVariable(name: "pos", scope: !19483, file: !19458, line: 117, type: !352)
!19483 = distinct !DILexicalBlock(scope: !19466, file: !19458, line: 113, column: 5)
!19484 = !DILocation(line: 117, column: 13, scope: !19483)
!19485 = !DILocation(line: 117, column: 34, scope: !19483)
!19486 = !DILocation(line: 117, column: 26, scope: !19483)
!19487 = !DILocation(line: 117, column: 39, scope: !19483)
!19488 = !DILocation(line: 117, column: 47, scope: !19483)
!19489 = !DILocation(line: 117, column: 19, scope: !19483)
!19490 = !DILocation(line: 118, column: 11, scope: !19491)
!19491 = distinct !DILexicalBlock(scope: !19483, file: !19458, line: 118, column: 11)
!19492 = !DILocation(line: 118, column: 15, scope: !19491)
!19493 = !DILocation(line: 118, column: 11, scope: !19483)
!19494 = !DILocation(line: 124, column: 11, scope: !19495)
!19495 = distinct !DILexicalBlock(scope: !19491, file: !19458, line: 119, column: 9)
!19496 = !DILocation(line: 129, column: 7, scope: !19483)
!19497 = !DILocation(line: 129, column: 11, scope: !19483)
!19498 = !DILocation(line: 129, column: 18, scope: !19483)
!19499 = !DILocation(line: 130, column: 21, scope: !19483)
!19500 = !DILocation(line: 130, column: 7, scope: !19483)
!19501 = !DILocation(line: 130, column: 11, scope: !19483)
!19502 = !DILocation(line: 130, column: 19, scope: !19483)
!19503 = !{!19417, !2913, i64 144}
!19504 = !DILocation(line: 161, column: 7, scope: !19483)
!19505 = !DILocation(line: 163, column: 18, scope: !19457)
!19506 = !DILocation(line: 163, column: 22, scope: !19457)
!19507 = !DILocation(line: 163, column: 30, scope: !19457)
!19508 = !DILocation(line: 163, column: 10, scope: !19457)
!19509 = !DILocation(line: 163, column: 3, scope: !19457)
!19510 = !DILocation(line: 164, column: 1, scope: !19457)
!19511 = distinct !DISubprogram(name: "rpl_mbrtowc", scope: !19512, file: !19512, line: 385, type: !2216, scopeLine: 386, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2213, retainedNodes: !209)
!19512 = !DIFile(filename: "lib/mbrtowc.c", directory: "/home/mbarbar/software/coreutils-8.31")
!19513 = !DILocalVariable(name: "pwc", arg: 1, scope: !19511, file: !19512, line: 385, type: !2218)
!19514 = !DILocation(line: 385, column: 23, scope: !19511)
!19515 = !DILocalVariable(name: "s", arg: 2, scope: !19511, file: !19512, line: 385, type: !180)
!19516 = !DILocation(line: 385, column: 40, scope: !19511)
!19517 = !DILocalVariable(name: "n", arg: 3, scope: !19511, file: !19512, line: 385, type: !55)
!19518 = !DILocation(line: 385, column: 50, scope: !19511)
!19519 = !DILocalVariable(name: "ps", arg: 4, scope: !19511, file: !19512, line: 385, type: !2219)
!19520 = !DILocation(line: 385, column: 64, scope: !19511)
!19521 = !DILocalVariable(name: "ret", scope: !19511, file: !19512, line: 387, type: !55)
!19522 = !DILocation(line: 387, column: 10, scope: !19511)
!19523 = !DILocalVariable(name: "wc", scope: !19511, file: !19512, line: 388, type: !1125)
!19524 = !DILocation(line: 388, column: 11, scope: !19511)
!19525 = !DILocation(line: 404, column: 9, scope: !19526)
!19526 = distinct !DILexicalBlock(scope: !19511, file: !19512, line: 404, column: 7)
!19527 = !DILocation(line: 404, column: 7, scope: !19511)
!19528 = !DILocation(line: 405, column: 9, scope: !19526)
!19529 = !DILocation(line: 405, column: 5, scope: !19526)
!19530 = !DILocation(line: 439, column: 18, scope: !19511)
!19531 = !DILocation(line: 439, column: 23, scope: !19511)
!19532 = !DILocation(line: 439, column: 26, scope: !19511)
!19533 = !DILocation(line: 439, column: 29, scope: !19511)
!19534 = !DILocation(line: 439, column: 9, scope: !19511)
!19535 = !DILocation(line: 439, column: 7, scope: !19511)
!19536 = !DILocation(line: 447, column: 22, scope: !19537)
!19537 = distinct !DILexicalBlock(scope: !19511, file: !19512, line: 447, column: 7)
!19538 = !DILocation(line: 447, column: 19, scope: !19537)
!19539 = !DILocation(line: 447, column: 26, scope: !19537)
!19540 = !DILocation(line: 447, column: 29, scope: !19537)
!19541 = !DILocation(line: 447, column: 31, scope: !19537)
!19542 = !DILocation(line: 447, column: 36, scope: !19537)
!19543 = !DILocation(line: 447, column: 41, scope: !19537)
!19544 = !DILocation(line: 447, column: 7, scope: !19511)
!19545 = !DILocalVariable(name: "uc", scope: !19546, file: !19512, line: 449, type: !554)
!19546 = distinct !DILexicalBlock(scope: !19537, file: !19512, line: 448, column: 5)
!19547 = !DILocation(line: 449, column: 21, scope: !19546)
!19548 = !DILocation(line: 449, column: 27, scope: !19546)
!19549 = !DILocation(line: 449, column: 26, scope: !19546)
!19550 = !DILocation(line: 450, column: 14, scope: !19546)
!19551 = !DILocation(line: 450, column: 8, scope: !19546)
!19552 = !DILocation(line: 450, column: 12, scope: !19546)
!19553 = !DILocation(line: 451, column: 7, scope: !19546)
!19554 = !DILocation(line: 455, column: 10, scope: !19511)
!19555 = !DILocation(line: 455, column: 3, scope: !19511)
!19556 = !DILocation(line: 456, column: 1, scope: !19511)
!19557 = distinct !DISubprogram(name: "acl_access_nontrivial", scope: !19558, file: !19558, line: 47, type: !2233, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2230, retainedNodes: !209)
!19558 = !DIFile(filename: "lib/acl-internal.c", directory: "/home/mbarbar/software/coreutils-8.31")
!19559 = !DILocalVariable(name: "acl", arg: 1, scope: !19557, file: !19558, line: 47, type: !2235)
!19560 = !DILocation(line: 47, column: 30, scope: !19557)
!19561 = !DILocalVariable(name: "ace", scope: !19557, file: !19558, line: 56, type: !2239)
!19562 = !DILocation(line: 56, column: 15, scope: !19557)
!19563 = !DILocalVariable(name: "got_one", scope: !19557, file: !19558, line: 57, type: !7)
!19564 = !DILocation(line: 57, column: 7, scope: !19557)
!19565 = !DILocation(line: 59, column: 33, scope: !19566)
!19566 = distinct !DILexicalBlock(scope: !19557, file: !19558, line: 59, column: 3)
!19567 = !DILocation(line: 59, column: 18, scope: !19566)
!19568 = !DILocation(line: 59, column: 16, scope: !19566)
!19569 = !DILocation(line: 59, column: 8, scope: !19566)
!19570 = !DILocation(line: 60, column: 8, scope: !19571)
!19571 = distinct !DILexicalBlock(scope: !19566, file: !19558, line: 59, column: 3)
!19572 = !DILocation(line: 60, column: 16, scope: !19571)
!19573 = !DILocation(line: 59, column: 3, scope: !19566)
!19574 = !DILocalVariable(name: "tag", scope: !19575, file: !19558, line: 63, type: !2242)
!19575 = distinct !DILexicalBlock(scope: !19571, file: !19558, line: 62, column: 5)
!19576 = !DILocation(line: 63, column: 17, scope: !19575)
!19577 = !DILocation(line: 64, column: 29, scope: !19578)
!19578 = distinct !DILexicalBlock(scope: !19575, file: !19558, line: 64, column: 11)
!19579 = !DILocation(line: 64, column: 11, scope: !19578)
!19580 = !DILocation(line: 64, column: 40, scope: !19578)
!19581 = !DILocation(line: 64, column: 11, scope: !19575)
!19582 = !DILocation(line: 65, column: 9, scope: !19578)
!19583 = !DILocation(line: 66, column: 13, scope: !19584)
!19584 = distinct !DILexicalBlock(scope: !19575, file: !19558, line: 66, column: 11)
!19585 = !DILocation(line: 66, column: 17, scope: !19584)
!19586 = !DILocation(line: 66, column: 33, scope: !19584)
!19587 = !DILocation(line: 66, column: 36, scope: !19584)
!19588 = !DILocation(line: 66, column: 40, scope: !19584)
!19589 = !DILocation(line: 66, column: 57, scope: !19584)
!19590 = !DILocation(line: 66, column: 60, scope: !19584)
!19591 = !DILocation(line: 66, column: 64, scope: !19584)
!19592 = !DILocation(line: 66, column: 11, scope: !19575)
!19593 = !DILocation(line: 67, column: 9, scope: !19584)
!19594 = !DILocation(line: 68, column: 5, scope: !19575)
!19595 = !DILocation(line: 61, column: 33, scope: !19571)
!19596 = !DILocation(line: 61, column: 18, scope: !19571)
!19597 = !DILocation(line: 61, column: 16, scope: !19571)
!19598 = !DILocation(line: 59, column: 3, scope: !19571)
!19599 = distinct !{!19599, !19573, !19600}
!19600 = !DILocation(line: 68, column: 5, scope: !19566)
!19601 = !DILocation(line: 69, column: 10, scope: !19557)
!19602 = !DILocation(line: 69, column: 3, scope: !19557)
!19603 = !DILocation(line: 116, column: 1, scope: !19557)
!19604 = distinct !DISubprogram(name: "acl_default_nontrivial", scope: !19558, file: !19558, line: 119, type: !2233, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2230, retainedNodes: !209)
!19605 = !DILocalVariable(name: "acl", arg: 1, scope: !19604, file: !19558, line: 119, type: !2235)
!19606 = !DILocation(line: 119, column: 31, scope: !19604)
!19607 = !DILocation(line: 122, column: 24, scope: !19604)
!19608 = !DILocation(line: 122, column: 11, scope: !19604)
!19609 = !DILocation(line: 122, column: 29, scope: !19604)
!19610 = !DILocation(line: 122, column: 3, scope: !19604)
!19611 = distinct !DISubprogram(name: "free_permission_context", scope: !19558, file: !19558, line: 479, type: !2243, scopeLine: 480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2230, retainedNodes: !209)
!19612 = !DILocalVariable(name: "ctx", arg: 1, scope: !19611, file: !19558, line: 479, type: !2245)
!19613 = !DILocation(line: 479, column: 53, scope: !19611)
!19614 = !DILocation(line: 483, column: 7, scope: !19615)
!19615 = distinct !DILexicalBlock(scope: !19611, file: !19558, line: 483, column: 7)
!19616 = !DILocation(line: 483, column: 12, scope: !19615)
!19617 = !{!13992, !2646, i64 8}
!19618 = !DILocation(line: 483, column: 7, scope: !19611)
!19619 = !DILocation(line: 484, column: 15, scope: !19615)
!19620 = !DILocation(line: 484, column: 20, scope: !19615)
!19621 = !DILocation(line: 484, column: 5, scope: !19615)
!19622 = !DILocation(line: 486, column: 7, scope: !19623)
!19623 = distinct !DILexicalBlock(scope: !19611, file: !19558, line: 486, column: 7)
!19624 = !DILocation(line: 486, column: 12, scope: !19623)
!19625 = !{!13992, !2646, i64 16}
!19626 = !DILocation(line: 486, column: 7, scope: !19611)
!19627 = !DILocation(line: 487, column: 15, scope: !19623)
!19628 = !DILocation(line: 487, column: 20, scope: !19623)
!19629 = !DILocation(line: 487, column: 5, scope: !19623)
!19630 = !DILocation(line: 507, column: 1, scope: !19611)
!19631 = distinct !DISubprogram(name: "get_permissions", scope: !19632, file: !19632, line: 33, type: !2256, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2253, retainedNodes: !209)
!19632 = !DIFile(filename: "lib/get-permissions.c", directory: "/home/mbarbar/software/coreutils-8.31")
!19633 = !DILocalVariable(name: "name", arg: 1, scope: !19631, file: !19632, line: 33, type: !180)
!19634 = !DILocation(line: 33, column: 30, scope: !19631)
!19635 = !DILocalVariable(name: "desc", arg: 2, scope: !19631, file: !19632, line: 33, type: !7)
!19636 = !DILocation(line: 33, column: 40, scope: !19631)
!19637 = !DILocalVariable(name: "mode", arg: 3, scope: !19631, file: !19632, line: 33, type: !139)
!19638 = !DILocation(line: 33, column: 53, scope: !19631)
!19639 = !DILocalVariable(name: "ctx", arg: 4, scope: !19631, file: !19632, line: 34, type: !2258)
!19640 = !DILocation(line: 34, column: 45, scope: !19631)
!19641 = !DILocation(line: 36, column: 11, scope: !19631)
!19642 = !DILocation(line: 36, column: 3, scope: !19631)
!19643 = !DILocation(line: 37, column: 15, scope: !19631)
!19644 = !DILocation(line: 37, column: 3, scope: !19631)
!19645 = !DILocation(line: 37, column: 8, scope: !19631)
!19646 = !DILocation(line: 37, column: 13, scope: !19631)
!19647 = !DILocation(line: 45, column: 26, scope: !19648)
!19648 = distinct !DILexicalBlock(scope: !19631, file: !19632, line: 45, column: 7)
!19649 = !DILocation(line: 45, column: 31, scope: !19648)
!19650 = !DILocation(line: 45, column: 7, scope: !19631)
!19651 = !DILocation(line: 46, column: 28, scope: !19648)
!19652 = !DILocation(line: 46, column: 16, scope: !19648)
!19653 = !DILocation(line: 46, column: 5, scope: !19648)
!19654 = !DILocation(line: 46, column: 10, scope: !19648)
!19655 = !DILocation(line: 46, column: 14, scope: !19648)
!19656 = !DILocation(line: 48, column: 30, scope: !19648)
!19657 = !DILocation(line: 48, column: 16, scope: !19648)
!19658 = !DILocation(line: 48, column: 5, scope: !19648)
!19659 = !DILocation(line: 48, column: 10, scope: !19648)
!19660 = !DILocation(line: 48, column: 14, scope: !19648)
!19661 = !DILocation(line: 49, column: 7, scope: !19662)
!19662 = distinct !DILexicalBlock(scope: !19631, file: !19632, line: 49, column: 7)
!19663 = !DILocation(line: 49, column: 12, scope: !19662)
!19664 = !DILocation(line: 49, column: 16, scope: !19662)
!19665 = !DILocation(line: 49, column: 7, scope: !19631)
!19666 = !DILocation(line: 50, column: 29, scope: !19662)
!19667 = !DILocation(line: 50, column: 12, scope: !19662)
!19668 = !DILocation(line: 50, column: 5, scope: !19662)
!19669 = !DILocation(line: 56, column: 7, scope: !19670)
!19670 = distinct !DILexicalBlock(scope: !19631, file: !19632, line: 56, column: 7)
!19671 = !DILocation(line: 56, column: 7, scope: !19631)
!19672 = !DILocation(line: 58, column: 40, scope: !19673)
!19673 = distinct !DILexicalBlock(scope: !19670, file: !19632, line: 57, column: 5)
!19674 = !DILocation(line: 58, column: 26, scope: !19673)
!19675 = !DILocation(line: 58, column: 7, scope: !19673)
!19676 = !DILocation(line: 58, column: 12, scope: !19673)
!19677 = !DILocation(line: 58, column: 24, scope: !19673)
!19678 = !DILocation(line: 59, column: 11, scope: !19679)
!19679 = distinct !DILexicalBlock(scope: !19673, file: !19632, line: 59, column: 11)
!19680 = !DILocation(line: 59, column: 16, scope: !19679)
!19681 = !DILocation(line: 59, column: 28, scope: !19679)
!19682 = !DILocation(line: 59, column: 11, scope: !19673)
!19683 = !DILocation(line: 60, column: 9, scope: !19679)
!19684 = !DILocation(line: 61, column: 5, scope: !19673)
!19685 = !DILocation(line: 289, column: 3, scope: !19631)
!19686 = !DILocation(line: 291, column: 1, scope: !19631)
!19687 = distinct !DISubprogram(name: "chmod_or_fchmod", scope: !19688, file: !19688, line: 760, type: !1519, scopeLine: 761, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2265, retainedNodes: !209)
!19688 = !DIFile(filename: "lib/set-permissions.c", directory: "/home/mbarbar/software/coreutils-8.31")
!19689 = !DILocalVariable(name: "name", arg: 1, scope: !19687, file: !19688, line: 760, type: !180)
!19690 = !DILocation(line: 760, column: 30, scope: !19687)
!19691 = !DILocalVariable(name: "desc", arg: 2, scope: !19687, file: !19688, line: 760, type: !7)
!19692 = !DILocation(line: 760, column: 40, scope: !19687)
!19693 = !DILocalVariable(name: "mode", arg: 3, scope: !19687, file: !19688, line: 760, type: !139)
!19694 = !DILocation(line: 760, column: 53, scope: !19687)
!19695 = !DILocation(line: 762, column: 22, scope: !19696)
!19696 = distinct !DILexicalBlock(scope: !19687, file: !19688, line: 762, column: 7)
!19697 = !DILocation(line: 762, column: 27, scope: !19696)
!19698 = !DILocation(line: 762, column: 7, scope: !19687)
!19699 = !DILocation(line: 763, column: 20, scope: !19696)
!19700 = !DILocation(line: 763, column: 26, scope: !19696)
!19701 = !DILocation(line: 763, column: 12, scope: !19696)
!19702 = !DILocation(line: 763, column: 5, scope: !19696)
!19703 = !DILocation(line: 765, column: 19, scope: !19696)
!19704 = !DILocation(line: 765, column: 25, scope: !19696)
!19705 = !DILocation(line: 765, column: 12, scope: !19696)
!19706 = !DILocation(line: 765, column: 5, scope: !19696)
!19707 = !DILocation(line: 766, column: 1, scope: !19687)
!19708 = distinct !DISubprogram(name: "set_permissions", scope: !19688, file: !19688, line: 776, type: !2268, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2265, retainedNodes: !209)
!19709 = !DILocalVariable(name: "ctx", arg: 1, scope: !19708, file: !19688, line: 776, type: !2270)
!19710 = !DILocation(line: 776, column: 45, scope: !19708)
!19711 = !DILocalVariable(name: "name", arg: 2, scope: !19708, file: !19688, line: 776, type: !180)
!19712 = !DILocation(line: 776, column: 62, scope: !19708)
!19713 = !DILocalVariable(name: "desc", arg: 3, scope: !19708, file: !19688, line: 776, type: !7)
!19714 = !DILocation(line: 776, column: 72, scope: !19708)
!19715 = !DILocalVariable(name: "acls_set", scope: !19708, file: !19688, line: 778, type: !142)
!19716 = !DILocation(line: 778, column: 8, scope: !19708)
!19717 = !DILocalVariable(name: "early_chmod", scope: !19708, file: !19688, line: 779, type: !142)
!19718 = !DILocation(line: 779, column: 8, scope: !19708)
!19719 = !DILocalVariable(name: "must_chmod", scope: !19708, file: !19688, line: 780, type: !142)
!19720 = !DILocation(line: 780, column: 8, scope: !19708)
!19721 = !DILocalVariable(name: "ret", scope: !19708, file: !19688, line: 781, type: !7)
!19722 = !DILocation(line: 781, column: 7, scope: !19708)
!19723 = !DILocation(line: 796, column: 40, scope: !19708)
!19724 = !DILocation(line: 796, column: 45, scope: !19708)
!19725 = !DILocation(line: 796, column: 50, scope: !19708)
!19726 = !DILocation(line: 796, column: 36, scope: !19708)
!19727 = !DILocation(line: 796, column: 15, scope: !19708)
!19728 = !DILocation(line: 804, column: 7, scope: !19729)
!19729 = distinct !DILexicalBlock(scope: !19708, file: !19688, line: 804, column: 7)
!19730 = !DILocation(line: 804, column: 7, scope: !19708)
!19731 = !DILocation(line: 806, column: 30, scope: !19732)
!19732 = distinct !DILexicalBlock(scope: !19729, file: !19688, line: 805, column: 5)
!19733 = !DILocation(line: 806, column: 36, scope: !19732)
!19734 = !DILocation(line: 806, column: 42, scope: !19732)
!19735 = !DILocation(line: 806, column: 47, scope: !19732)
!19736 = !DILocation(line: 806, column: 13, scope: !19732)
!19737 = !DILocation(line: 806, column: 11, scope: !19732)
!19738 = !DILocation(line: 807, column: 11, scope: !19739)
!19739 = distinct !DILexicalBlock(scope: !19732, file: !19688, line: 807, column: 11)
!19740 = !DILocation(line: 807, column: 15, scope: !19739)
!19741 = !DILocation(line: 807, column: 11, scope: !19732)
!19742 = !DILocation(line: 808, column: 9, scope: !19739)
!19743 = !DILocation(line: 809, column: 5, scope: !19732)
!19744 = !DILocation(line: 812, column: 19, scope: !19708)
!19745 = !DILocation(line: 812, column: 24, scope: !19708)
!19746 = !DILocation(line: 812, column: 30, scope: !19708)
!19747 = !DILocation(line: 812, column: 9, scope: !19708)
!19748 = !DILocation(line: 812, column: 7, scope: !19708)
!19749 = !DILocation(line: 813, column: 9, scope: !19750)
!19750 = distinct !DILexicalBlock(scope: !19708, file: !19688, line: 813, column: 7)
!19751 = !DILocation(line: 813, column: 7, scope: !19708)
!19752 = !DILocalVariable(name: "saved_errno", scope: !19753, file: !19688, line: 815, type: !7)
!19753 = distinct !DILexicalBlock(scope: !19750, file: !19688, line: 814, column: 5)
!19754 = !DILocation(line: 815, column: 11, scope: !19753)
!19755 = !DILocation(line: 815, column: 25, scope: !19753)
!19756 = !DILocation(line: 815, column: 31, scope: !19753)
!19757 = !DILocation(line: 821, column: 23, scope: !19753)
!19758 = !DILocation(line: 821, column: 28, scope: !19753)
!19759 = !DILocation(line: 821, column: 34, scope: !19753)
!19760 = !DILocation(line: 821, column: 13, scope: !19753)
!19761 = !DILocation(line: 821, column: 11, scope: !19753)
!19762 = !DILocation(line: 822, column: 13, scope: !19763)
!19763 = distinct !DILexicalBlock(scope: !19753, file: !19688, line: 822, column: 11)
!19764 = !DILocation(line: 822, column: 11, scope: !19753)
!19765 = !DILocation(line: 823, column: 20, scope: !19763)
!19766 = !DILocation(line: 823, column: 9, scope: !19763)
!19767 = !DILocation(line: 825, column: 11, scope: !19768)
!19768 = distinct !DILexicalBlock(scope: !19753, file: !19688, line: 825, column: 11)
!19769 = !DILocation(line: 825, column: 11, scope: !19753)
!19770 = !DILocation(line: 827, column: 19, scope: !19771)
!19771 = distinct !DILexicalBlock(scope: !19768, file: !19688, line: 826, column: 9)
!19772 = !DILocation(line: 827, column: 11, scope: !19771)
!19773 = !DILocation(line: 827, column: 17, scope: !19771)
!19774 = !DILocation(line: 828, column: 15, scope: !19771)
!19775 = !DILocation(line: 829, column: 9, scope: !19771)
!19776 = !DILocation(line: 830, column: 5, scope: !19753)
!19777 = !DILocation(line: 833, column: 7, scope: !19778)
!19778 = distinct !DILexicalBlock(scope: !19708, file: !19688, line: 833, column: 7)
!19779 = !DILocation(line: 833, column: 18, scope: !19778)
!19780 = !DILocation(line: 833, column: 23, scope: !19778)
!19781 = !DILocation(line: 833, column: 7, scope: !19708)
!19782 = !DILocalVariable(name: "saved_errno", scope: !19783, file: !19688, line: 835, type: !7)
!19783 = distinct !DILexicalBlock(scope: !19778, file: !19688, line: 834, column: 5)
!19784 = !DILocation(line: 835, column: 11, scope: !19783)
!19785 = !DILocation(line: 835, column: 25, scope: !19783)
!19786 = !DILocation(line: 835, column: 31, scope: !19783)
!19787 = !DILocation(line: 837, column: 30, scope: !19783)
!19788 = !DILocation(line: 837, column: 36, scope: !19783)
!19789 = !DILocation(line: 837, column: 42, scope: !19783)
!19790 = !DILocation(line: 837, column: 47, scope: !19783)
!19791 = !DILocation(line: 837, column: 13, scope: !19783)
!19792 = !DILocation(line: 837, column: 11, scope: !19783)
!19793 = !DILocation(line: 839, column: 11, scope: !19794)
!19794 = distinct !DILexicalBlock(scope: !19783, file: !19688, line: 839, column: 11)
!19795 = !DILocation(line: 839, column: 11, scope: !19783)
!19796 = !DILocation(line: 841, column: 19, scope: !19797)
!19797 = distinct !DILexicalBlock(scope: !19794, file: !19688, line: 840, column: 9)
!19798 = !DILocation(line: 841, column: 11, scope: !19797)
!19799 = !DILocation(line: 841, column: 17, scope: !19797)
!19800 = !DILocation(line: 842, column: 15, scope: !19797)
!19801 = !DILocation(line: 843, column: 9, scope: !19797)
!19802 = !DILocation(line: 844, column: 5, scope: !19783)
!19803 = !DILocation(line: 846, column: 10, scope: !19708)
!19804 = !DILocation(line: 846, column: 3, scope: !19708)
!19805 = !DILocation(line: 847, column: 1, scope: !19708)
!19806 = distinct !DISubprogram(name: "set_acls", scope: !19688, file: !19688, line: 485, type: !2277, scopeLine: 487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2265, retainedNodes: !209)
!19807 = !DILocalVariable(name: "ctx", arg: 1, scope: !19806, file: !19688, line: 485, type: !2270)
!19808 = !DILocation(line: 485, column: 38, scope: !19806)
!19809 = !DILocalVariable(name: "name", arg: 2, scope: !19806, file: !19688, line: 485, type: !180)
!19810 = !DILocation(line: 485, column: 55, scope: !19806)
!19811 = !DILocalVariable(name: "desc", arg: 3, scope: !19806, file: !19688, line: 485, type: !7)
!19812 = !DILocation(line: 485, column: 65, scope: !19806)
!19813 = !DILocalVariable(name: "from_mode", arg: 4, scope: !19806, file: !19688, line: 486, type: !7)
!19814 = !DILocation(line: 486, column: 15, scope: !19806)
!19815 = !DILocalVariable(name: "must_chmod", arg: 5, scope: !19806, file: !19688, line: 486, type: !406)
!19816 = !DILocation(line: 486, column: 32, scope: !19806)
!19817 = !DILocalVariable(name: "acls_set", arg: 6, scope: !19806, file: !19688, line: 486, type: !406)
!19818 = !DILocation(line: 486, column: 50, scope: !19806)
!19819 = !DILocalVariable(name: "ret", scope: !19806, file: !19688, line: 488, type: !7)
!19820 = !DILocation(line: 488, column: 7, scope: !19806)
!19821 = !DILocation(line: 503, column: 9, scope: !19822)
!19822 = distinct !DILexicalBlock(scope: !19806, file: !19688, line: 503, column: 7)
!19823 = !DILocation(line: 503, column: 14, scope: !19822)
!19824 = !{!13992, !2740, i64 24}
!19825 = !DILocation(line: 503, column: 7, scope: !19806)
!19826 = !DILocation(line: 505, column: 11, scope: !19827)
!19827 = distinct !DILexicalBlock(scope: !19828, file: !19688, line: 505, column: 11)
!19828 = distinct !DILexicalBlock(scope: !19822, file: !19688, line: 504, column: 5)
!19829 = !DILocation(line: 505, column: 15, scope: !19827)
!19830 = !DILocation(line: 505, column: 20, scope: !19827)
!19831 = !DILocation(line: 505, column: 23, scope: !19827)
!19832 = !DILocation(line: 505, column: 11, scope: !19828)
!19833 = !DILocation(line: 507, column: 15, scope: !19834)
!19834 = distinct !DILexicalBlock(scope: !19835, file: !19688, line: 507, column: 15)
!19835 = distinct !DILexicalBlock(scope: !19827, file: !19688, line: 506, column: 9)
!19836 = !DILocation(line: 507, column: 20, scope: !19834)
!19837 = !DILocation(line: 507, column: 15, scope: !19835)
!19838 = !DILocation(line: 508, column: 23, scope: !19834)
!19839 = !DILocation(line: 508, column: 28, scope: !19834)
!19840 = !DILocation(line: 508, column: 13, scope: !19834)
!19841 = !DILocation(line: 509, column: 37, scope: !19835)
!19842 = !DILocation(line: 509, column: 42, scope: !19835)
!19843 = !DILocation(line: 509, column: 22, scope: !19835)
!19844 = !DILocation(line: 509, column: 11, scope: !19835)
!19845 = !DILocation(line: 509, column: 16, scope: !19835)
!19846 = !DILocation(line: 509, column: 20, scope: !19835)
!19847 = !DILocation(line: 510, column: 15, scope: !19848)
!19848 = distinct !DILexicalBlock(scope: !19835, file: !19688, line: 510, column: 15)
!19849 = !DILocation(line: 510, column: 20, scope: !19848)
!19850 = !DILocation(line: 510, column: 24, scope: !19848)
!19851 = !DILocation(line: 510, column: 15, scope: !19835)
!19852 = !DILocation(line: 511, column: 17, scope: !19848)
!19853 = !DILocation(line: 511, column: 13, scope: !19848)
!19854 = !DILocation(line: 512, column: 9, scope: !19835)
!19855 = !DILocation(line: 514, column: 11, scope: !19856)
!19856 = distinct !DILexicalBlock(scope: !19828, file: !19688, line: 514, column: 11)
!19857 = !DILocation(line: 514, column: 15, scope: !19856)
!19858 = !DILocation(line: 514, column: 20, scope: !19856)
!19859 = !DILocation(line: 514, column: 23, scope: !19856)
!19860 = !DILocation(line: 514, column: 28, scope: !19856)
!19861 = !DILocation(line: 514, column: 11, scope: !19828)
!19862 = !DILocation(line: 516, column: 34, scope: !19863)
!19863 = distinct !DILexicalBlock(scope: !19864, file: !19688, line: 516, column: 15)
!19864 = distinct !DILexicalBlock(scope: !19856, file: !19688, line: 515, column: 9)
!19865 = !DILocation(line: 516, column: 39, scope: !19863)
!19866 = !DILocation(line: 516, column: 15, scope: !19864)
!19867 = !DILocation(line: 517, column: 31, scope: !19863)
!19868 = !DILocation(line: 517, column: 37, scope: !19863)
!19869 = !DILocation(line: 517, column: 42, scope: !19863)
!19870 = !DILocation(line: 517, column: 19, scope: !19863)
!19871 = !DILocation(line: 517, column: 17, scope: !19863)
!19872 = !DILocation(line: 517, column: 13, scope: !19863)
!19873 = !DILocation(line: 519, column: 33, scope: !19863)
!19874 = !DILocation(line: 519, column: 56, scope: !19863)
!19875 = !DILocation(line: 519, column: 61, scope: !19863)
!19876 = !DILocation(line: 519, column: 19, scope: !19863)
!19877 = !DILocation(line: 519, column: 17, scope: !19863)
!19878 = !DILocation(line: 520, column: 15, scope: !19879)
!19879 = distinct !DILexicalBlock(scope: !19864, file: !19688, line: 520, column: 15)
!19880 = !DILocation(line: 520, column: 19, scope: !19879)
!19881 = !DILocation(line: 520, column: 15, scope: !19864)
!19882 = !DILocation(line: 522, column: 38, scope: !19883)
!19883 = distinct !DILexicalBlock(scope: !19884, file: !19688, line: 522, column: 19)
!19884 = distinct !DILexicalBlock(scope: !19879, file: !19688, line: 521, column: 13)
!19885 = !DILocation(line: 522, column: 21, scope: !19883)
!19886 = !DILocation(line: 522, column: 19, scope: !19884)
!19887 = !DILocation(line: 524, column: 19, scope: !19888)
!19888 = distinct !DILexicalBlock(scope: !19883, file: !19688, line: 523, column: 17)
!19889 = !DILocation(line: 524, column: 24, scope: !19888)
!19890 = !DILocation(line: 524, column: 43, scope: !19888)
!19891 = !DILocation(line: 525, column: 23, scope: !19892)
!19892 = distinct !DILexicalBlock(scope: !19888, file: !19688, line: 525, column: 23)
!19893 = !DILocation(line: 525, column: 33, scope: !19892)
!19894 = !DILocation(line: 525, column: 59, scope: !19892)
!19895 = !DILocation(line: 525, column: 64, scope: !19892)
!19896 = !DILocation(line: 525, column: 36, scope: !19892)
!19897 = !DILocation(line: 525, column: 69, scope: !19892)
!19898 = !DILocation(line: 525, column: 23, scope: !19888)
!19899 = !DILocation(line: 526, column: 25, scope: !19892)
!19900 = !DILocation(line: 526, column: 21, scope: !19892)
!19901 = !DILocation(line: 527, column: 17, scope: !19888)
!19902 = !DILocation(line: 528, column: 13, scope: !19884)
!19903 = !DILocation(line: 531, column: 16, scope: !19904)
!19904 = distinct !DILexicalBlock(scope: !19879, file: !19688, line: 530, column: 13)
!19905 = !DILocation(line: 531, column: 25, scope: !19904)
!19906 = !DILocation(line: 532, column: 19, scope: !19907)
!19907 = distinct !DILexicalBlock(scope: !19904, file: !19688, line: 532, column: 19)
!19908 = !DILocation(line: 532, column: 19, scope: !19904)
!19909 = !DILocation(line: 534, column: 25, scope: !19910)
!19910 = distinct !DILexicalBlock(scope: !19911, file: !19688, line: 534, column: 23)
!19911 = distinct !DILexicalBlock(scope: !19907, file: !19688, line: 533, column: 17)
!19912 = !DILocation(line: 534, column: 35, scope: !19910)
!19913 = !DILocation(line: 534, column: 38, scope: !19910)
!19914 = !DILocation(line: 534, column: 43, scope: !19910)
!19915 = !DILocation(line: 534, column: 55, scope: !19910)
!19916 = !DILocation(line: 535, column: 47, scope: !19910)
!19917 = !DILocation(line: 535, column: 52, scope: !19910)
!19918 = !DILocation(line: 535, column: 23, scope: !19910)
!19919 = !DILocation(line: 534, column: 23, scope: !19911)
!19920 = !DILocation(line: 536, column: 41, scope: !19910)
!19921 = !DILocation(line: 537, column: 41, scope: !19910)
!19922 = !DILocation(line: 537, column: 46, scope: !19910)
!19923 = !DILocation(line: 536, column: 27, scope: !19910)
!19924 = !DILocation(line: 536, column: 25, scope: !19910)
!19925 = !DILocation(line: 536, column: 21, scope: !19910)
!19926 = !DILocation(line: 539, column: 48, scope: !19910)
!19927 = !DILocation(line: 539, column: 27, scope: !19910)
!19928 = !DILocation(line: 539, column: 25, scope: !19910)
!19929 = !DILocation(line: 540, column: 17, scope: !19911)
!19930 = !DILocation(line: 542, column: 9, scope: !19864)
!19931 = !DILocation(line: 543, column: 5, scope: !19828)
!19932 = !DILocation(line: 749, column: 10, scope: !19806)
!19933 = !DILocation(line: 749, column: 3, scope: !19806)
!19934 = distinct !DISubprogram(name: "__argmatch_die", scope: !1388, file: !1388, line: 62, type: !200, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1339, retainedNodes: !209)
!19935 = !DILocation(line: 64, column: 3, scope: !19934)
!19936 = !DILocation(line: 65, column: 1, scope: !19934)
!19937 = distinct !DISubprogram(name: "argmatch", scope: !1388, file: !1388, line: 84, type: !1342, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1339, retainedNodes: !209)
!19938 = !DILocalVariable(name: "arg", arg: 1, scope: !19937, file: !1388, line: 84, type: !180)
!19939 = !DILocation(line: 84, column: 23, scope: !19937)
!19940 = !DILocalVariable(name: "arglist", arg: 2, scope: !19937, file: !1388, line: 84, type: !1344)
!19941 = !DILocation(line: 84, column: 47, scope: !19937)
!19942 = !DILocalVariable(name: "vallist", arg: 3, scope: !19937, file: !1388, line: 85, type: !180)
!19943 = !DILocation(line: 85, column: 23, scope: !19937)
!19944 = !DILocalVariable(name: "valsize", arg: 4, scope: !19937, file: !1388, line: 85, type: !55)
!19945 = !DILocation(line: 85, column: 39, scope: !19937)
!19946 = !DILocalVariable(name: "i", scope: !19937, file: !1388, line: 87, type: !55)
!19947 = !DILocation(line: 87, column: 10, scope: !19937)
!19948 = !DILocalVariable(name: "arglen", scope: !19937, file: !1388, line: 88, type: !55)
!19949 = !DILocation(line: 88, column: 10, scope: !19937)
!19950 = !DILocalVariable(name: "matchind", scope: !19937, file: !1388, line: 89, type: !652)
!19951 = !DILocation(line: 89, column: 13, scope: !19937)
!19952 = !DILocalVariable(name: "ambiguous", scope: !19937, file: !1388, line: 90, type: !142)
!19953 = !DILocation(line: 90, column: 8, scope: !19937)
!19954 = !DILocation(line: 92, column: 20, scope: !19937)
!19955 = !DILocation(line: 92, column: 12, scope: !19937)
!19956 = !DILocation(line: 92, column: 10, scope: !19937)
!19957 = !DILocation(line: 95, column: 10, scope: !19958)
!19958 = distinct !DILexicalBlock(scope: !19937, file: !1388, line: 95, column: 3)
!19959 = !DILocation(line: 95, column: 8, scope: !19958)
!19960 = !DILocation(line: 95, column: 15, scope: !19961)
!19961 = distinct !DILexicalBlock(scope: !19958, file: !1388, line: 95, column: 3)
!19962 = !DILocation(line: 95, column: 23, scope: !19961)
!19963 = !DILocation(line: 95, column: 3, scope: !19958)
!19964 = !DILocation(line: 97, column: 21, scope: !19965)
!19965 = distinct !DILexicalBlock(scope: !19966, file: !1388, line: 97, column: 11)
!19966 = distinct !DILexicalBlock(scope: !19961, file: !1388, line: 96, column: 5)
!19967 = !DILocation(line: 97, column: 29, scope: !19965)
!19968 = !DILocation(line: 97, column: 33, scope: !19965)
!19969 = !DILocation(line: 97, column: 38, scope: !19965)
!19970 = !DILocation(line: 97, column: 12, scope: !19965)
!19971 = !DILocation(line: 97, column: 11, scope: !19966)
!19972 = !DILocation(line: 99, column: 23, scope: !19973)
!19973 = distinct !DILexicalBlock(scope: !19974, file: !1388, line: 99, column: 15)
!19974 = distinct !DILexicalBlock(scope: !19965, file: !1388, line: 98, column: 9)
!19975 = !DILocation(line: 99, column: 31, scope: !19973)
!19976 = !DILocation(line: 99, column: 15, scope: !19973)
!19977 = !DILocation(line: 99, column: 38, scope: !19973)
!19978 = !DILocation(line: 99, column: 35, scope: !19973)
!19979 = !DILocation(line: 99, column: 15, scope: !19974)
!19980 = !DILocation(line: 101, column: 20, scope: !19973)
!19981 = !DILocation(line: 101, column: 13, scope: !19973)
!19982 = !DILocation(line: 102, column: 20, scope: !19983)
!19983 = distinct !DILexicalBlock(scope: !19973, file: !1388, line: 102, column: 20)
!19984 = !DILocation(line: 102, column: 29, scope: !19983)
!19985 = !DILocation(line: 102, column: 20, scope: !19973)
!19986 = !DILocation(line: 104, column: 24, scope: !19983)
!19987 = !DILocation(line: 104, column: 22, scope: !19983)
!19988 = !DILocation(line: 104, column: 13, scope: !19983)
!19989 = !DILocation(line: 108, column: 19, scope: !19990)
!19990 = distinct !DILexicalBlock(scope: !19991, file: !1388, line: 108, column: 19)
!19991 = distinct !DILexicalBlock(scope: !19983, file: !1388, line: 106, column: 13)
!19992 = !DILocation(line: 108, column: 27, scope: !19990)
!19993 = !DILocation(line: 109, column: 19, scope: !19990)
!19994 = !DILocation(line: 109, column: 30, scope: !19990)
!19995 = !DILocation(line: 109, column: 40, scope: !19990)
!19996 = !DILocation(line: 109, column: 50, scope: !19990)
!19997 = !DILocation(line: 109, column: 48, scope: !19990)
!19998 = !DILocation(line: 109, column: 38, scope: !19990)
!19999 = !DILocation(line: 110, column: 30, scope: !19990)
!20000 = !DILocation(line: 110, column: 40, scope: !19990)
!20001 = !DILocation(line: 110, column: 50, scope: !19990)
!20002 = !DILocation(line: 110, column: 48, scope: !19990)
!20003 = !DILocation(line: 110, column: 38, scope: !19990)
!20004 = !DILocation(line: 110, column: 53, scope: !19990)
!20005 = !DILocation(line: 109, column: 22, scope: !19990)
!20006 = !DILocation(line: 108, column: 19, scope: !19991)
!20007 = !DILocation(line: 114, column: 29, scope: !20008)
!20008 = distinct !DILexicalBlock(scope: !19990, file: !1388, line: 111, column: 17)
!20009 = !DILocation(line: 115, column: 17, scope: !20008)
!20010 = !DILocation(line: 117, column: 9, scope: !19974)
!20011 = !DILocation(line: 118, column: 5, scope: !19966)
!20012 = !DILocation(line: 95, column: 28, scope: !19961)
!20013 = !DILocation(line: 95, column: 3, scope: !19961)
!20014 = distinct !{!20014, !19963, !20015}
!20015 = !DILocation(line: 118, column: 5, scope: !19958)
!20016 = !DILocation(line: 119, column: 7, scope: !20017)
!20017 = distinct !DILexicalBlock(scope: !19937, file: !1388, line: 119, column: 7)
!20018 = !DILocation(line: 119, column: 7, scope: !19937)
!20019 = !DILocation(line: 120, column: 5, scope: !20017)
!20020 = !DILocation(line: 122, column: 12, scope: !20017)
!20021 = !DILocation(line: 122, column: 5, scope: !20017)
!20022 = !DILocation(line: 123, column: 1, scope: !19937)
!20023 = distinct !DISubprogram(name: "argmatch_invalid", scope: !1388, file: !1388, line: 131, type: !1345, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1339, retainedNodes: !209)
!20024 = !DILocalVariable(name: "context", arg: 1, scope: !20023, file: !1388, line: 131, type: !180)
!20025 = !DILocation(line: 131, column: 31, scope: !20023)
!20026 = !DILocalVariable(name: "value", arg: 2, scope: !20023, file: !1388, line: 131, type: !180)
!20027 = !DILocation(line: 131, column: 52, scope: !20023)
!20028 = !DILocalVariable(name: "problem", arg: 3, scope: !20023, file: !1388, line: 131, type: !652)
!20029 = !DILocation(line: 131, column: 69, scope: !20023)
!20030 = !DILocalVariable(name: "format", scope: !20023, file: !1388, line: 133, type: !180)
!20031 = !DILocation(line: 133, column: 15, scope: !20023)
!20032 = !DILocation(line: 133, column: 25, scope: !20023)
!20033 = !DILocation(line: 133, column: 33, scope: !20023)
!20034 = !DILocation(line: 134, column: 27, scope: !20023)
!20035 = !DILocation(line: 135, column: 27, scope: !20023)
!20036 = !DILocation(line: 137, column: 16, scope: !20023)
!20037 = !DILocation(line: 137, column: 69, scope: !20023)
!20038 = !DILocation(line: 137, column: 24, scope: !20023)
!20039 = !DILocation(line: 138, column: 22, scope: !20023)
!20040 = !DILocation(line: 138, column: 10, scope: !20023)
!20041 = !DILocation(line: 137, column: 3, scope: !20023)
!20042 = !DILocation(line: 139, column: 1, scope: !20023)
!20043 = distinct !DISubprogram(name: "argmatch_valid", scope: !1388, file: !1388, line: 146, type: !1347, scopeLine: 148, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1339, retainedNodes: !209)
!20044 = !DILocalVariable(name: "arglist", arg: 1, scope: !20043, file: !1388, line: 146, type: !1344)
!20045 = !DILocation(line: 146, column: 36, scope: !20043)
!20046 = !DILocalVariable(name: "vallist", arg: 2, scope: !20043, file: !1388, line: 147, type: !180)
!20047 = !DILocation(line: 147, column: 29, scope: !20043)
!20048 = !DILocalVariable(name: "valsize", arg: 3, scope: !20043, file: !1388, line: 147, type: !55)
!20049 = !DILocation(line: 147, column: 45, scope: !20043)
!20050 = !DILocalVariable(name: "i", scope: !20043, file: !1388, line: 149, type: !55)
!20051 = !DILocation(line: 149, column: 10, scope: !20043)
!20052 = !DILocalVariable(name: "last_val", scope: !20043, file: !1388, line: 150, type: !180)
!20053 = !DILocation(line: 150, column: 15, scope: !20043)
!20054 = !DILocation(line: 154, column: 3, scope: !20043)
!20055 = !DILocation(line: 155, column: 10, scope: !20056)
!20056 = distinct !DILexicalBlock(scope: !20043, file: !1388, line: 155, column: 3)
!20057 = !DILocation(line: 155, column: 8, scope: !20056)
!20058 = !DILocation(line: 155, column: 15, scope: !20059)
!20059 = distinct !DILexicalBlock(scope: !20056, file: !1388, line: 155, column: 3)
!20060 = !DILocation(line: 155, column: 23, scope: !20059)
!20061 = !DILocation(line: 155, column: 3, scope: !20056)
!20062 = !DILocation(line: 156, column: 10, scope: !20063)
!20063 = distinct !DILexicalBlock(scope: !20059, file: !1388, line: 156, column: 9)
!20064 = !DILocation(line: 156, column: 12, scope: !20063)
!20065 = !DILocation(line: 157, column: 9, scope: !20063)
!20066 = !DILocation(line: 157, column: 20, scope: !20063)
!20067 = !DILocation(line: 157, column: 30, scope: !20063)
!20068 = !DILocation(line: 157, column: 40, scope: !20063)
!20069 = !DILocation(line: 157, column: 50, scope: !20063)
!20070 = !DILocation(line: 157, column: 48, scope: !20063)
!20071 = !DILocation(line: 157, column: 38, scope: !20063)
!20072 = !DILocation(line: 157, column: 53, scope: !20063)
!20073 = !DILocation(line: 157, column: 12, scope: !20063)
!20074 = !DILocation(line: 156, column: 9, scope: !20059)
!20075 = !DILocation(line: 159, column: 18, scope: !20076)
!20076 = distinct !DILexicalBlock(scope: !20063, file: !1388, line: 158, column: 7)
!20077 = !DILocation(line: 159, column: 45, scope: !20076)
!20078 = !DILocation(line: 159, column: 53, scope: !20076)
!20079 = !DILocation(line: 159, column: 38, scope: !20076)
!20080 = !DILocation(line: 159, column: 9, scope: !20076)
!20081 = !DILocation(line: 160, column: 20, scope: !20076)
!20082 = !DILocation(line: 160, column: 30, scope: !20076)
!20083 = !DILocation(line: 160, column: 40, scope: !20076)
!20084 = !DILocation(line: 160, column: 38, scope: !20076)
!20085 = !DILocation(line: 160, column: 28, scope: !20076)
!20086 = !DILocation(line: 160, column: 18, scope: !20076)
!20087 = !DILocation(line: 161, column: 7, scope: !20076)
!20088 = !DILocation(line: 164, column: 18, scope: !20089)
!20089 = distinct !DILexicalBlock(scope: !20063, file: !1388, line: 163, column: 7)
!20090 = !DILocation(line: 164, column: 41, scope: !20089)
!20091 = !DILocation(line: 164, column: 49, scope: !20089)
!20092 = !DILocation(line: 164, column: 34, scope: !20089)
!20093 = !DILocation(line: 164, column: 9, scope: !20089)
!20094 = !DILocation(line: 157, column: 60, scope: !20063)
!20095 = !DILocation(line: 155, column: 28, scope: !20059)
!20096 = !DILocation(line: 155, column: 3, scope: !20059)
!20097 = distinct !{!20097, !20061, !20098}
!20098 = !DILocation(line: 165, column: 7, scope: !20056)
!20099 = !DILocation(line: 166, column: 3, scope: !20043)
!20100 = !DILocation(line: 167, column: 1, scope: !20043)
!20101 = distinct !DISubprogram(name: "__xargmatch_internal", scope: !1388, file: !1388, line: 176, type: !1383, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1339, retainedNodes: !209)
!20102 = !DILocalVariable(name: "context", arg: 1, scope: !20101, file: !1388, line: 176, type: !180)
!20103 = !DILocation(line: 176, column: 35, scope: !20101)
!20104 = !DILocalVariable(name: "arg", arg: 2, scope: !20101, file: !1388, line: 177, type: !180)
!20105 = !DILocation(line: 177, column: 35, scope: !20101)
!20106 = !DILocalVariable(name: "arglist", arg: 3, scope: !20101, file: !1388, line: 177, type: !1344)
!20107 = !DILocation(line: 177, column: 59, scope: !20101)
!20108 = !DILocalVariable(name: "vallist", arg: 4, scope: !20101, file: !1388, line: 178, type: !180)
!20109 = !DILocation(line: 178, column: 35, scope: !20101)
!20110 = !DILocalVariable(name: "valsize", arg: 5, scope: !20101, file: !1388, line: 178, type: !55)
!20111 = !DILocation(line: 178, column: 51, scope: !20101)
!20112 = !DILocalVariable(name: "exit_fn", arg: 6, scope: !20101, file: !1388, line: 179, type: !730)
!20113 = !DILocation(line: 179, column: 40, scope: !20101)
!20114 = !DILocalVariable(name: "res", scope: !20101, file: !1388, line: 181, type: !652)
!20115 = !DILocation(line: 181, column: 13, scope: !20101)
!20116 = !DILocation(line: 181, column: 29, scope: !20101)
!20117 = !DILocation(line: 181, column: 34, scope: !20101)
!20118 = !DILocation(line: 181, column: 43, scope: !20101)
!20119 = !DILocation(line: 181, column: 52, scope: !20101)
!20120 = !DILocation(line: 181, column: 19, scope: !20101)
!20121 = !DILocation(line: 182, column: 7, scope: !20122)
!20122 = distinct !DILexicalBlock(scope: !20101, file: !1388, line: 182, column: 7)
!20123 = !DILocation(line: 182, column: 11, scope: !20122)
!20124 = !DILocation(line: 182, column: 7, scope: !20101)
!20125 = !DILocation(line: 184, column: 12, scope: !20122)
!20126 = !DILocation(line: 184, column: 5, scope: !20122)
!20127 = !DILocation(line: 187, column: 21, scope: !20101)
!20128 = !DILocation(line: 187, column: 30, scope: !20101)
!20129 = !DILocation(line: 187, column: 35, scope: !20101)
!20130 = !DILocation(line: 187, column: 3, scope: !20101)
!20131 = !DILocation(line: 188, column: 19, scope: !20101)
!20132 = !DILocation(line: 188, column: 28, scope: !20101)
!20133 = !DILocation(line: 188, column: 37, scope: !20101)
!20134 = !DILocation(line: 188, column: 3, scope: !20101)
!20135 = !DILocation(line: 189, column: 5, scope: !20101)
!20136 = !DILocation(line: 189, column: 3, scope: !20101)
!20137 = !DILocation(line: 191, column: 3, scope: !20101)
!20138 = !DILocation(line: 192, column: 1, scope: !20101)
!20139 = distinct !DISubprogram(name: "argmatch_to_argument", scope: !1388, file: !1388, line: 197, type: !1385, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1339, retainedNodes: !209)
!20140 = !DILocalVariable(name: "value", arg: 1, scope: !20139, file: !1388, line: 197, type: !180)
!20141 = !DILocation(line: 197, column: 35, scope: !20139)
!20142 = !DILocalVariable(name: "arglist", arg: 2, scope: !20139, file: !1388, line: 198, type: !1344)
!20143 = !DILocation(line: 198, column: 42, scope: !20139)
!20144 = !DILocalVariable(name: "vallist", arg: 3, scope: !20139, file: !1388, line: 199, type: !180)
!20145 = !DILocation(line: 199, column: 35, scope: !20139)
!20146 = !DILocalVariable(name: "valsize", arg: 4, scope: !20139, file: !1388, line: 199, type: !55)
!20147 = !DILocation(line: 199, column: 51, scope: !20139)
!20148 = !DILocalVariable(name: "i", scope: !20139, file: !1388, line: 201, type: !55)
!20149 = !DILocation(line: 201, column: 10, scope: !20139)
!20150 = !DILocation(line: 203, column: 10, scope: !20151)
!20151 = distinct !DILexicalBlock(scope: !20139, file: !1388, line: 203, column: 3)
!20152 = !DILocation(line: 203, column: 8, scope: !20151)
!20153 = !DILocation(line: 203, column: 15, scope: !20154)
!20154 = distinct !DILexicalBlock(scope: !20151, file: !1388, line: 203, column: 3)
!20155 = !DILocation(line: 203, column: 23, scope: !20154)
!20156 = !DILocation(line: 203, column: 3, scope: !20151)
!20157 = !DILocation(line: 204, column: 18, scope: !20158)
!20158 = distinct !DILexicalBlock(scope: !20154, file: !1388, line: 204, column: 9)
!20159 = !DILocation(line: 204, column: 25, scope: !20158)
!20160 = !DILocation(line: 204, column: 35, scope: !20158)
!20161 = !DILocation(line: 204, column: 45, scope: !20158)
!20162 = !DILocation(line: 204, column: 43, scope: !20158)
!20163 = !DILocation(line: 204, column: 33, scope: !20158)
!20164 = !DILocation(line: 204, column: 48, scope: !20158)
!20165 = !DILocation(line: 204, column: 10, scope: !20158)
!20166 = !DILocation(line: 204, column: 9, scope: !20154)
!20167 = !DILocation(line: 205, column: 14, scope: !20158)
!20168 = !DILocation(line: 205, column: 22, scope: !20158)
!20169 = !DILocation(line: 205, column: 7, scope: !20158)
!20170 = !DILocation(line: 204, column: 55, scope: !20158)
!20171 = !DILocation(line: 203, column: 28, scope: !20154)
!20172 = !DILocation(line: 203, column: 3, scope: !20154)
!20173 = distinct !{!20173, !20156, !20174}
!20174 = !DILocation(line: 205, column: 23, scope: !20151)
!20175 = !DILocation(line: 206, column: 3, scope: !20139)
!20176 = !DILocation(line: 207, column: 1, scope: !20139)
!20177 = distinct !DISubprogram(name: "rotl64", scope: !20178, file: !20178, line: 39, type: !2282, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2279, retainedNodes: !209)
!20178 = !DIFile(filename: "./lib/bitrotate.h", directory: "/home/mbarbar/software/coreutils-8.31")
!20179 = !DILocalVariable(name: "x", arg: 1, scope: !20177, file: !20178, line: 39, type: !1484)
!20180 = !DILocation(line: 39, column: 18, scope: !20177)
!20181 = !DILocalVariable(name: "n", arg: 2, scope: !20177, file: !20178, line: 39, type: !7)
!20182 = !DILocation(line: 39, column: 25, scope: !20177)
!20183 = !DILocation(line: 41, column: 12, scope: !20177)
!20184 = !DILocation(line: 41, column: 17, scope: !20177)
!20185 = !DILocation(line: 41, column: 14, scope: !20177)
!20186 = !DILocation(line: 41, column: 23, scope: !20177)
!20187 = !DILocation(line: 41, column: 34, scope: !20177)
!20188 = !DILocation(line: 41, column: 32, scope: !20177)
!20189 = !DILocation(line: 41, column: 25, scope: !20177)
!20190 = !DILocation(line: 41, column: 20, scope: !20177)
!20191 = !DILocation(line: 41, column: 3, scope: !20177)
!20192 = distinct !DISubprogram(name: "rotr64", scope: !20178, file: !20178, line: 48, type: !2282, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2279, retainedNodes: !209)
!20193 = !DILocalVariable(name: "x", arg: 1, scope: !20192, file: !20178, line: 48, type: !1484)
!20194 = !DILocation(line: 48, column: 18, scope: !20192)
!20195 = !DILocalVariable(name: "n", arg: 2, scope: !20192, file: !20178, line: 48, type: !7)
!20196 = !DILocation(line: 48, column: 25, scope: !20192)
!20197 = !DILocation(line: 50, column: 12, scope: !20192)
!20198 = !DILocation(line: 50, column: 17, scope: !20192)
!20199 = !DILocation(line: 50, column: 14, scope: !20192)
!20200 = !DILocation(line: 50, column: 23, scope: !20192)
!20201 = !DILocation(line: 50, column: 34, scope: !20192)
!20202 = !DILocation(line: 50, column: 32, scope: !20192)
!20203 = !DILocation(line: 50, column: 25, scope: !20192)
!20204 = !DILocation(line: 50, column: 20, scope: !20192)
!20205 = !DILocation(line: 50, column: 3, scope: !20192)
!20206 = distinct !DISubprogram(name: "rotl32", scope: !20178, file: !20178, line: 58, type: !2284, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2279, retainedNodes: !209)
!20207 = !DILocalVariable(name: "x", arg: 1, scope: !20206, file: !20178, line: 58, type: !1489)
!20208 = !DILocation(line: 58, column: 18, scope: !20206)
!20209 = !DILocalVariable(name: "n", arg: 2, scope: !20206, file: !20178, line: 58, type: !7)
!20210 = !DILocation(line: 58, column: 25, scope: !20206)
!20211 = !DILocation(line: 60, column: 12, scope: !20206)
!20212 = !DILocation(line: 60, column: 17, scope: !20206)
!20213 = !DILocation(line: 60, column: 14, scope: !20206)
!20214 = !DILocation(line: 60, column: 23, scope: !20206)
!20215 = !DILocation(line: 60, column: 34, scope: !20206)
!20216 = !DILocation(line: 60, column: 32, scope: !20206)
!20217 = !DILocation(line: 60, column: 25, scope: !20206)
!20218 = !DILocation(line: 60, column: 20, scope: !20206)
!20219 = !DILocation(line: 60, column: 3, scope: !20206)
!20220 = distinct !DISubprogram(name: "rotr32", scope: !20178, file: !20178, line: 67, type: !2284, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2279, retainedNodes: !209)
!20221 = !DILocalVariable(name: "x", arg: 1, scope: !20220, file: !20178, line: 67, type: !1489)
!20222 = !DILocation(line: 67, column: 18, scope: !20220)
!20223 = !DILocalVariable(name: "n", arg: 2, scope: !20220, file: !20178, line: 67, type: !7)
!20224 = !DILocation(line: 67, column: 25, scope: !20220)
!20225 = !DILocation(line: 69, column: 12, scope: !20220)
!20226 = !DILocation(line: 69, column: 17, scope: !20220)
!20227 = !DILocation(line: 69, column: 14, scope: !20220)
!20228 = !DILocation(line: 69, column: 23, scope: !20220)
!20229 = !DILocation(line: 69, column: 34, scope: !20220)
!20230 = !DILocation(line: 69, column: 32, scope: !20220)
!20231 = !DILocation(line: 69, column: 25, scope: !20220)
!20232 = !DILocation(line: 69, column: 20, scope: !20220)
!20233 = !DILocation(line: 69, column: 3, scope: !20220)
!20234 = distinct !DISubprogram(name: "rotl_sz", scope: !20178, file: !20178, line: 76, type: !2286, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2279, retainedNodes: !209)
!20235 = !DILocalVariable(name: "x", arg: 1, scope: !20234, file: !20178, line: 76, type: !55)
!20236 = !DILocation(line: 76, column: 17, scope: !20234)
!20237 = !DILocalVariable(name: "n", arg: 2, scope: !20234, file: !20178, line: 76, type: !7)
!20238 = !DILocation(line: 76, column: 24, scope: !20234)
!20239 = !DILocation(line: 78, column: 12, scope: !20234)
!20240 = !DILocation(line: 78, column: 17, scope: !20234)
!20241 = !DILocation(line: 78, column: 14, scope: !20234)
!20242 = !DILocation(line: 78, column: 23, scope: !20234)
!20243 = !DILocation(line: 78, column: 53, scope: !20234)
!20244 = !DILocation(line: 78, column: 51, scope: !20234)
!20245 = !DILocation(line: 78, column: 25, scope: !20234)
!20246 = !DILocation(line: 78, column: 20, scope: !20234)
!20247 = !DILocation(line: 78, column: 3, scope: !20234)
!20248 = distinct !DISubprogram(name: "rotr_sz", scope: !20178, file: !20178, line: 85, type: !2286, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2279, retainedNodes: !209)
!20249 = !DILocalVariable(name: "x", arg: 1, scope: !20248, file: !20178, line: 85, type: !55)
!20250 = !DILocation(line: 85, column: 17, scope: !20248)
!20251 = !DILocalVariable(name: "n", arg: 2, scope: !20248, file: !20178, line: 85, type: !7)
!20252 = !DILocation(line: 85, column: 24, scope: !20248)
!20253 = !DILocation(line: 87, column: 12, scope: !20248)
!20254 = !DILocation(line: 87, column: 17, scope: !20248)
!20255 = !DILocation(line: 87, column: 14, scope: !20248)
!20256 = !DILocation(line: 87, column: 23, scope: !20248)
!20257 = !DILocation(line: 87, column: 53, scope: !20248)
!20258 = !DILocation(line: 87, column: 51, scope: !20248)
!20259 = !DILocation(line: 87, column: 25, scope: !20248)
!20260 = !DILocation(line: 87, column: 20, scope: !20248)
!20261 = !DILocation(line: 87, column: 3, scope: !20248)
!20262 = distinct !DISubprogram(name: "rotl16", scope: !20178, file: !20178, line: 96, type: !2288, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2279, retainedNodes: !209)
!20263 = !DILocalVariable(name: "x", arg: 1, scope: !20262, file: !20178, line: 96, type: !2290)
!20264 = !DILocation(line: 96, column: 18, scope: !20262)
!20265 = !DILocalVariable(name: "n", arg: 2, scope: !20262, file: !20178, line: 96, type: !7)
!20266 = !DILocation(line: 96, column: 25, scope: !20262)
!20267 = !DILocation(line: 98, column: 12, scope: !20262)
!20268 = !DILocation(line: 98, column: 17, scope: !20262)
!20269 = !DILocation(line: 98, column: 14, scope: !20262)
!20270 = !DILocation(line: 98, column: 23, scope: !20262)
!20271 = !DILocation(line: 98, column: 34, scope: !20262)
!20272 = !DILocation(line: 98, column: 32, scope: !20262)
!20273 = !DILocation(line: 98, column: 25, scope: !20262)
!20274 = !DILocation(line: 98, column: 20, scope: !20262)
!20275 = !DILocation(line: 98, column: 39, scope: !20262)
!20276 = !DILocation(line: 98, column: 10, scope: !20262)
!20277 = !DILocation(line: 98, column: 3, scope: !20262)
!20278 = distinct !DISubprogram(name: "rotr16", scope: !20178, file: !20178, line: 107, type: !2288, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2279, retainedNodes: !209)
!20279 = !DILocalVariable(name: "x", arg: 1, scope: !20278, file: !20178, line: 107, type: !2290)
!20280 = !DILocation(line: 107, column: 18, scope: !20278)
!20281 = !DILocalVariable(name: "n", arg: 2, scope: !20278, file: !20178, line: 107, type: !7)
!20282 = !DILocation(line: 107, column: 25, scope: !20278)
!20283 = !DILocation(line: 109, column: 12, scope: !20278)
!20284 = !DILocation(line: 109, column: 17, scope: !20278)
!20285 = !DILocation(line: 109, column: 14, scope: !20278)
!20286 = !DILocation(line: 109, column: 23, scope: !20278)
!20287 = !DILocation(line: 109, column: 34, scope: !20278)
!20288 = !DILocation(line: 109, column: 32, scope: !20278)
!20289 = !DILocation(line: 109, column: 25, scope: !20278)
!20290 = !DILocation(line: 109, column: 20, scope: !20278)
!20291 = !DILocation(line: 109, column: 39, scope: !20278)
!20292 = !DILocation(line: 109, column: 10, scope: !20278)
!20293 = !DILocation(line: 109, column: 3, scope: !20278)
!20294 = distinct !DISubprogram(name: "rotl8", scope: !20178, file: !20178, line: 118, type: !2292, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2279, retainedNodes: !209)
!20295 = !DILocalVariable(name: "x", arg: 1, scope: !20294, file: !20178, line: 118, type: !2294)
!20296 = !DILocation(line: 118, column: 16, scope: !20294)
!20297 = !DILocalVariable(name: "n", arg: 2, scope: !20294, file: !20178, line: 118, type: !7)
!20298 = !DILocation(line: 118, column: 23, scope: !20294)
!20299 = !DILocation(line: 120, column: 12, scope: !20294)
!20300 = !DILocation(line: 120, column: 17, scope: !20294)
!20301 = !DILocation(line: 120, column: 14, scope: !20294)
!20302 = !DILocation(line: 120, column: 23, scope: !20294)
!20303 = !DILocation(line: 120, column: 33, scope: !20294)
!20304 = !DILocation(line: 120, column: 31, scope: !20294)
!20305 = !DILocation(line: 120, column: 25, scope: !20294)
!20306 = !DILocation(line: 120, column: 20, scope: !20294)
!20307 = !DILocation(line: 120, column: 38, scope: !20294)
!20308 = !DILocation(line: 120, column: 10, scope: !20294)
!20309 = !DILocation(line: 120, column: 3, scope: !20294)
!20310 = distinct !DISubprogram(name: "rotr8", scope: !20178, file: !20178, line: 129, type: !2292, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2279, retainedNodes: !209)
!20311 = !DILocalVariable(name: "x", arg: 1, scope: !20310, file: !20178, line: 129, type: !2294)
!20312 = !DILocation(line: 129, column: 16, scope: !20310)
!20313 = !DILocalVariable(name: "n", arg: 2, scope: !20310, file: !20178, line: 129, type: !7)
!20314 = !DILocation(line: 129, column: 23, scope: !20310)
!20315 = !DILocation(line: 131, column: 12, scope: !20310)
!20316 = !DILocation(line: 131, column: 17, scope: !20310)
!20317 = !DILocation(line: 131, column: 14, scope: !20310)
!20318 = !DILocation(line: 131, column: 23, scope: !20310)
!20319 = !DILocation(line: 131, column: 33, scope: !20310)
!20320 = !DILocation(line: 131, column: 31, scope: !20310)
!20321 = !DILocation(line: 131, column: 25, scope: !20310)
!20322 = !DILocation(line: 131, column: 20, scope: !20310)
!20323 = !DILocation(line: 131, column: 38, scope: !20310)
!20324 = !DILocation(line: 131, column: 10, scope: !20310)
!20325 = !DILocation(line: 131, column: 3, scope: !20310)
!20326 = distinct !DISubprogram(name: "c_strcasecmp", scope: !20327, file: !20327, line: 27, type: !1860, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2296, retainedNodes: !209)
!20327 = !DIFile(filename: "lib/c-strcasecmp.c", directory: "/home/mbarbar/software/coreutils-8.31")
!20328 = !DILocalVariable(name: "s1", arg: 1, scope: !20326, file: !20327, line: 27, type: !180)
!20329 = !DILocation(line: 27, column: 27, scope: !20326)
!20330 = !DILocalVariable(name: "s2", arg: 2, scope: !20326, file: !20327, line: 27, type: !180)
!20331 = !DILocation(line: 27, column: 43, scope: !20326)
!20332 = !DILocalVariable(name: "p1", scope: !20326, file: !20327, line: 29, type: !552)
!20333 = !DILocation(line: 29, column: 33, scope: !20326)
!20334 = !DILocation(line: 29, column: 62, scope: !20326)
!20335 = !DILocalVariable(name: "p2", scope: !20326, file: !20327, line: 30, type: !552)
!20336 = !DILocation(line: 30, column: 33, scope: !20326)
!20337 = !DILocation(line: 30, column: 62, scope: !20326)
!20338 = !DILocalVariable(name: "c1", scope: !20326, file: !20327, line: 31, type: !554)
!20339 = !DILocation(line: 31, column: 17, scope: !20326)
!20340 = !DILocalVariable(name: "c2", scope: !20326, file: !20327, line: 31, type: !554)
!20341 = !DILocation(line: 31, column: 21, scope: !20326)
!20342 = !DILocation(line: 33, column: 7, scope: !20343)
!20343 = distinct !DILexicalBlock(scope: !20326, file: !20327, line: 33, column: 7)
!20344 = !DILocation(line: 33, column: 13, scope: !20343)
!20345 = !DILocation(line: 33, column: 10, scope: !20343)
!20346 = !DILocation(line: 33, column: 7, scope: !20326)
!20347 = !DILocation(line: 34, column: 5, scope: !20343)
!20348 = !DILocation(line: 36, column: 3, scope: !20326)
!20349 = !DILocation(line: 38, column: 24, scope: !20350)
!20350 = distinct !DILexicalBlock(scope: !20326, file: !20327, line: 37, column: 5)
!20351 = !DILocation(line: 38, column: 23, scope: !20350)
!20352 = !DILocation(line: 38, column: 12, scope: !20350)
!20353 = !DILocation(line: 38, column: 10, scope: !20350)
!20354 = !DILocation(line: 39, column: 24, scope: !20350)
!20355 = !DILocation(line: 39, column: 23, scope: !20350)
!20356 = !DILocation(line: 39, column: 12, scope: !20350)
!20357 = !DILocation(line: 39, column: 10, scope: !20350)
!20358 = !DILocation(line: 41, column: 11, scope: !20359)
!20359 = distinct !DILexicalBlock(scope: !20350, file: !20327, line: 41, column: 11)
!20360 = !DILocation(line: 41, column: 14, scope: !20359)
!20361 = !DILocation(line: 41, column: 11, scope: !20350)
!20362 = !DILocation(line: 42, column: 9, scope: !20359)
!20363 = !DILocation(line: 44, column: 7, scope: !20350)
!20364 = !DILocation(line: 45, column: 7, scope: !20350)
!20365 = !DILocation(line: 46, column: 5, scope: !20350)
!20366 = !DILocation(line: 47, column: 10, scope: !20326)
!20367 = !DILocation(line: 47, column: 16, scope: !20326)
!20368 = !DILocation(line: 47, column: 13, scope: !20326)
!20369 = distinct !{!20369, !20348, !20370}
!20370 = !DILocation(line: 47, column: 18, scope: !20326)
!20371 = !DILocation(line: 50, column: 12, scope: !20372)
!20372 = distinct !DILexicalBlock(scope: !20326, file: !20327, line: 49, column: 7)
!20373 = !DILocation(line: 50, column: 17, scope: !20372)
!20374 = !DILocation(line: 50, column: 15, scope: !20372)
!20375 = !DILocation(line: 50, column: 5, scope: !20372)
!20376 = !DILocation(line: 56, column: 1, scope: !20326)
!20377 = distinct !DISubprogram(name: "close_stream", scope: !20378, file: !20378, line: 56, type: !2302, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2299, retainedNodes: !209)
!20378 = !DIFile(filename: "lib/close-stream.c", directory: "/home/mbarbar/software/coreutils-8.31")
!20379 = !DILocalVariable(name: "stream", arg: 1, scope: !20377, file: !20378, line: 56, type: !2304)
!20380 = !DILocation(line: 56, column: 21, scope: !20377)
!20381 = !DILocalVariable(name: "some_pending", scope: !20377, file: !20378, line: 58, type: !2338)
!20382 = !DILocation(line: 58, column: 14, scope: !20377)
!20383 = !DILocation(line: 58, column: 42, scope: !20377)
!20384 = !DILocation(line: 58, column: 30, scope: !20377)
!20385 = !DILocation(line: 58, column: 50, scope: !20377)
!20386 = !DILocalVariable(name: "prev_fail", scope: !20377, file: !20378, line: 59, type: !2338)
!20387 = !DILocation(line: 59, column: 14, scope: !20377)
!20388 = !DILocation(line: 59, column: 27, scope: !20377)
!20389 = !DILocation(line: 59, column: 43, scope: !20377)
!20390 = !DILocalVariable(name: "fclose_fail", scope: !20377, file: !20378, line: 60, type: !2338)
!20391 = !DILocation(line: 60, column: 14, scope: !20377)
!20392 = !DILocation(line: 60, column: 37, scope: !20377)
!20393 = !DILocation(line: 60, column: 29, scope: !20377)
!20394 = !DILocation(line: 60, column: 45, scope: !20377)
!20395 = !DILocation(line: 70, column: 7, scope: !20396)
!20396 = distinct !DILexicalBlock(scope: !20377, file: !20378, line: 70, column: 7)
!20397 = !DILocation(line: 70, column: 17, scope: !20396)
!20398 = !DILocation(line: 70, column: 21, scope: !20396)
!20399 = !DILocation(line: 70, column: 33, scope: !20396)
!20400 = !DILocation(line: 70, column: 37, scope: !20396)
!20401 = !DILocation(line: 70, column: 50, scope: !20396)
!20402 = !DILocation(line: 70, column: 53, scope: !20396)
!20403 = !DILocation(line: 70, column: 59, scope: !20396)
!20404 = !DILocation(line: 70, column: 7, scope: !20377)
!20405 = !DILocation(line: 72, column: 13, scope: !20406)
!20406 = distinct !DILexicalBlock(scope: !20407, file: !20378, line: 72, column: 11)
!20407 = distinct !DILexicalBlock(scope: !20396, file: !20378, line: 71, column: 5)
!20408 = !DILocation(line: 72, column: 11, scope: !20407)
!20409 = !DILocation(line: 73, column: 9, scope: !20406)
!20410 = !DILocation(line: 73, column: 15, scope: !20406)
!20411 = !DILocation(line: 74, column: 7, scope: !20407)
!20412 = !DILocation(line: 77, column: 3, scope: !20377)
!20413 = !DILocation(line: 78, column: 1, scope: !20377)
!20414 = distinct !DISubprogram(name: "opendir_safer", scope: !20415, file: !20415, line: 31, type: !2342, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2339, retainedNodes: !209)
!20415 = !DIFile(filename: "lib/opendir-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!20416 = !DILocalVariable(name: "name", arg: 1, scope: !20414, file: !20415, line: 31, type: !180)
!20417 = !DILocation(line: 31, column: 28, scope: !20414)
!20418 = !DILocalVariable(name: "dp", scope: !20414, file: !20415, line: 33, type: !693)
!20419 = !DILocation(line: 33, column: 8, scope: !20414)
!20420 = !DILocation(line: 33, column: 22, scope: !20414)
!20421 = !DILocation(line: 33, column: 13, scope: !20414)
!20422 = !DILocation(line: 35, column: 7, scope: !20423)
!20423 = distinct !DILexicalBlock(scope: !20414, file: !20415, line: 35, column: 7)
!20424 = !DILocation(line: 35, column: 7, scope: !20414)
!20425 = !DILocalVariable(name: "fd", scope: !20426, file: !20415, line: 37, type: !7)
!20426 = distinct !DILexicalBlock(scope: !20423, file: !20415, line: 36, column: 5)
!20427 = !DILocation(line: 37, column: 11, scope: !20426)
!20428 = !DILocation(line: 37, column: 23, scope: !20426)
!20429 = !DILocation(line: 37, column: 16, scope: !20426)
!20430 = !DILocation(line: 39, column: 16, scope: !20431)
!20431 = distinct !DILexicalBlock(scope: !20426, file: !20415, line: 39, column: 11)
!20432 = !DILocation(line: 39, column: 13, scope: !20431)
!20433 = !DILocation(line: 39, column: 19, scope: !20431)
!20434 = !DILocation(line: 39, column: 22, scope: !20431)
!20435 = !DILocation(line: 39, column: 25, scope: !20431)
!20436 = !DILocation(line: 39, column: 11, scope: !20426)
!20437 = !DILocalVariable(name: "newdp", scope: !20438, file: !20415, line: 49, type: !693)
!20438 = distinct !DILexicalBlock(scope: !20431, file: !20415, line: 40, column: 9)
!20439 = !DILocation(line: 49, column: 16, scope: !20438)
!20440 = !DILocalVariable(name: "e", scope: !20438, file: !20415, line: 50, type: !7)
!20441 = !DILocation(line: 50, column: 15, scope: !20438)
!20442 = !DILocalVariable(name: "f", scope: !20438, file: !20415, line: 52, type: !7)
!20443 = !DILocation(line: 52, column: 15, scope: !20438)
!20444 = !DILocation(line: 52, column: 26, scope: !20438)
!20445 = !DILocation(line: 52, column: 19, scope: !20438)
!20446 = !DILocation(line: 53, column: 15, scope: !20447)
!20447 = distinct !DILexicalBlock(scope: !20438, file: !20415, line: 53, column: 15)
!20448 = !DILocation(line: 53, column: 17, scope: !20447)
!20449 = !DILocation(line: 53, column: 15, scope: !20438)
!20450 = !DILocation(line: 55, column: 19, scope: !20451)
!20451 = distinct !DILexicalBlock(scope: !20447, file: !20415, line: 54, column: 13)
!20452 = !DILocation(line: 55, column: 17, scope: !20451)
!20453 = !DILocation(line: 56, column: 21, scope: !20451)
!20454 = !DILocation(line: 57, column: 13, scope: !20451)
!20455 = !DILocation(line: 60, column: 34, scope: !20456)
!20456 = distinct !DILexicalBlock(scope: !20447, file: !20415, line: 59, column: 13)
!20457 = !DILocation(line: 60, column: 23, scope: !20456)
!20458 = !DILocation(line: 60, column: 21, scope: !20456)
!20459 = !DILocation(line: 61, column: 19, scope: !20456)
!20460 = !DILocation(line: 61, column: 17, scope: !20456)
!20461 = !DILocation(line: 62, column: 21, scope: !20462)
!20462 = distinct !DILexicalBlock(scope: !20456, file: !20415, line: 62, column: 19)
!20463 = !DILocation(line: 62, column: 19, scope: !20456)
!20464 = !DILocation(line: 63, column: 24, scope: !20462)
!20465 = !DILocation(line: 63, column: 17, scope: !20462)
!20466 = !DILocation(line: 69, column: 21, scope: !20438)
!20467 = !DILocation(line: 69, column: 11, scope: !20438)
!20468 = !DILocation(line: 70, column: 19, scope: !20438)
!20469 = !DILocation(line: 70, column: 11, scope: !20438)
!20470 = !DILocation(line: 70, column: 17, scope: !20438)
!20471 = !DILocation(line: 71, column: 16, scope: !20438)
!20472 = !DILocation(line: 71, column: 14, scope: !20438)
!20473 = !DILocation(line: 72, column: 9, scope: !20438)
!20474 = !DILocation(line: 73, column: 5, scope: !20426)
!20475 = !DILocation(line: 75, column: 10, scope: !20414)
!20476 = !DILocation(line: 75, column: 3, scope: !20414)
!20477 = distinct !DISubprogram(name: "gettime", scope: !20478, file: !20478, line: 29, type: !2347, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2344, retainedNodes: !209)
!20478 = !DIFile(filename: "lib/gettime.c", directory: "/home/mbarbar/software/coreutils-8.31")
!20479 = !DILocalVariable(name: "ts", arg: 1, scope: !20477, file: !20478, line: 29, type: !2349)
!20480 = !DILocation(line: 29, column: 27, scope: !20477)
!20481 = !DILocation(line: 32, column: 34, scope: !20477)
!20482 = !DILocation(line: 32, column: 3, scope: !20477)
!20483 = !DILocation(line: 39, column: 1, scope: !20477)
!20484 = distinct !DISubprogram(name: "current_timespec", scope: !20478, file: !20478, line: 44, type: !2354, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2344, retainedNodes: !209)
!20485 = !DILocalVariable(name: "ts", scope: !20484, file: !20478, line: 46, type: !2350)
!20486 = !DILocation(line: 46, column: 19, scope: !20484)
!20487 = !DILocation(line: 47, column: 3, scope: !20484)
!20488 = !DILocation(line: 48, column: 3, scope: !20484)
!20489 = distinct !DISubprogram(name: "hard_locale", scope: !20490, file: !20490, line: 38, type: !256, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2356, retainedNodes: !209)
!20490 = !DIFile(filename: "lib/hard-locale.c", directory: "/home/mbarbar/software/coreutils-8.31")
!20491 = !DILocalVariable(name: "category", arg: 1, scope: !20489, file: !20490, line: 38, type: !7)
!20492 = !DILocation(line: 38, column: 18, scope: !20489)
!20493 = !DILocalVariable(name: "hard", scope: !20489, file: !20490, line: 40, type: !142)
!20494 = !DILocation(line: 40, column: 8, scope: !20489)
!20495 = !DILocalVariable(name: "p", scope: !20489, file: !20490, line: 41, type: !180)
!20496 = !DILocation(line: 41, column: 15, scope: !20489)
!20497 = !DILocation(line: 41, column: 30, scope: !20489)
!20498 = !DILocation(line: 41, column: 19, scope: !20489)
!20499 = !DILocation(line: 43, column: 7, scope: !20500)
!20500 = distinct !DILexicalBlock(scope: !20489, file: !20490, line: 43, column: 7)
!20501 = !DILocation(line: 43, column: 7, scope: !20489)
!20502 = !DILocation(line: 47, column: 23, scope: !20503)
!20503 = distinct !DILexicalBlock(scope: !20504, file: !20490, line: 47, column: 15)
!20504 = distinct !DILexicalBlock(scope: !20505, file: !20490, line: 46, column: 9)
!20505 = distinct !DILexicalBlock(scope: !20506, file: !20490, line: 45, column: 11)
!20506 = distinct !DILexicalBlock(scope: !20500, file: !20490, line: 44, column: 5)
!20507 = !DILocation(line: 47, column: 15, scope: !20503)
!20508 = !DILocation(line: 47, column: 31, scope: !20503)
!20509 = !DILocation(line: 47, column: 36, scope: !20503)
!20510 = !DILocation(line: 47, column: 47, scope: !20503)
!20511 = !DILocation(line: 47, column: 39, scope: !20503)
!20512 = !DILocation(line: 47, column: 59, scope: !20503)
!20513 = !DILocation(line: 47, column: 15, scope: !20504)
!20514 = !DILocation(line: 48, column: 18, scope: !20503)
!20515 = !DILocation(line: 48, column: 13, scope: !20503)
!20516 = !DILocation(line: 69, column: 5, scope: !20506)
!20517 = !DILocation(line: 71, column: 10, scope: !20489)
!20518 = !DILocation(line: 71, column: 3, scope: !20489)
!20519 = distinct !DISubprogram(name: "hash_pjw", scope: !20520, file: !20520, line: 31, type: !633, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2359, retainedNodes: !209)
!20520 = !DIFile(filename: "lib/hash-pjw.c", directory: "/home/mbarbar/software/coreutils-8.31")
!20521 = !DILocalVariable(name: "x", arg: 1, scope: !20519, file: !20520, line: 31, type: !513)
!20522 = !DILocation(line: 31, column: 23, scope: !20519)
!20523 = !DILocalVariable(name: "tablesize", arg: 2, scope: !20519, file: !20520, line: 31, type: !55)
!20524 = !DILocation(line: 31, column: 33, scope: !20519)
!20525 = !DILocalVariable(name: "s", scope: !20519, file: !20520, line: 33, type: !180)
!20526 = !DILocation(line: 33, column: 15, scope: !20519)
!20527 = !DILocalVariable(name: "h", scope: !20519, file: !20520, line: 34, type: !55)
!20528 = !DILocation(line: 34, column: 10, scope: !20519)
!20529 = !DILocation(line: 36, column: 12, scope: !20530)
!20530 = distinct !DILexicalBlock(scope: !20519, file: !20520, line: 36, column: 3)
!20531 = !DILocation(line: 36, column: 10, scope: !20530)
!20532 = !DILocation(line: 36, column: 8, scope: !20530)
!20533 = !DILocation(line: 36, column: 16, scope: !20534)
!20534 = distinct !DILexicalBlock(scope: !20530, file: !20520, line: 36, column: 3)
!20535 = !DILocation(line: 36, column: 15, scope: !20534)
!20536 = !DILocation(line: 36, column: 3, scope: !20530)
!20537 = !DILocation(line: 37, column: 10, scope: !20534)
!20538 = !DILocation(line: 37, column: 9, scope: !20534)
!20539 = !DILocation(line: 37, column: 16, scope: !20534)
!20540 = !DILocation(line: 37, column: 18, scope: !20534)
!20541 = !DILocation(line: 37, column: 27, scope: !20534)
!20542 = !DILocation(line: 37, column: 29, scope: !20534)
!20543 = !DILocation(line: 37, column: 24, scope: !20534)
!20544 = !DILocation(line: 37, column: 12, scope: !20534)
!20545 = !DILocation(line: 37, column: 7, scope: !20534)
!20546 = !DILocation(line: 37, column: 5, scope: !20534)
!20547 = !DILocation(line: 36, column: 20, scope: !20534)
!20548 = !DILocation(line: 36, column: 3, scope: !20534)
!20549 = distinct !{!20549, !20536, !20550}
!20550 = !DILocation(line: 37, column: 48, scope: !20530)
!20551 = !DILocation(line: 39, column: 10, scope: !20519)
!20552 = !DILocation(line: 39, column: 14, scope: !20519)
!20553 = !DILocation(line: 39, column: 12, scope: !20519)
!20554 = !DILocation(line: 39, column: 3, scope: !20519)
!20555 = distinct !DISubprogram(name: "locale_charset", scope: !20556, file: !20556, line: 687, type: !2365, scopeLine: 688, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2362, retainedNodes: !209)
!20556 = !DIFile(filename: "lib/localcharset.c", directory: "/home/mbarbar/software/coreutils-8.31")
!20557 = !DILocalVariable(name: "codeset", scope: !20555, file: !20556, line: 689, type: !180)
!20558 = !DILocation(line: 689, column: 15, scope: !20555)
!20559 = !DILocation(line: 696, column: 13, scope: !20555)
!20560 = !DILocation(line: 696, column: 11, scope: !20555)
!20561 = !DILocation(line: 754, column: 7, scope: !20562)
!20562 = distinct !DILexicalBlock(scope: !20555, file: !20556, line: 754, column: 7)
!20563 = !DILocation(line: 754, column: 15, scope: !20562)
!20564 = !DILocation(line: 754, column: 7, scope: !20555)
!20565 = !DILocation(line: 756, column: 13, scope: !20562)
!20566 = !DILocation(line: 756, column: 5, scope: !20562)
!20567 = !DILocation(line: 907, column: 13, scope: !20568)
!20568 = distinct !DILexicalBlock(scope: !20569, file: !20556, line: 907, column: 13)
!20569 = distinct !DILexicalBlock(scope: !20570, file: !20556, line: 897, column: 7)
!20570 = distinct !DILexicalBlock(scope: !20555, file: !20556, line: 856, column: 3)
!20571 = !DILocation(line: 907, column: 24, scope: !20568)
!20572 = !DILocation(line: 907, column: 13, scope: !20569)
!20573 = !DILocation(line: 908, column: 19, scope: !20568)
!20574 = !DILocation(line: 908, column: 11, scope: !20568)
!20575 = !DILocation(line: 995, column: 10, scope: !20555)
!20576 = !DILocation(line: 995, column: 3, scope: !20555)
!20577 = distinct !DISubprogram(name: "dirchownmod", scope: !20578, file: !20578, line: 61, type: !2369, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2366, retainedNodes: !209)
!20578 = !DIFile(filename: "lib/dirchownmod.c", directory: "/home/mbarbar/software/coreutils-8.31")
!20579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !271, line: 46, size: 1152, elements: !20580)
!20580 = !{!20581, !20582, !20583, !20584, !20585, !20586, !20587, !20588, !20589, !20590, !20591, !20592, !20597, !20598, !20599}
!20581 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !20579, file: !271, line: 48, baseType: !274, size: 64)
!20582 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !20579, file: !271, line: 53, baseType: !276, size: 64, offset: 64)
!20583 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !20579, file: !271, line: 61, baseType: !278, size: 64, offset: 128)
!20584 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !20579, file: !271, line: 62, baseType: !140, size: 32, offset: 192)
!20585 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !20579, file: !271, line: 64, baseType: !128, size: 32, offset: 224)
!20586 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !20579, file: !271, line: 65, baseType: !130, size: 32, offset: 256)
!20587 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !20579, file: !271, line: 67, baseType: !7, size: 32, offset: 288)
!20588 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !20579, file: !271, line: 69, baseType: !274, size: 64, offset: 320)
!20589 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !20579, file: !271, line: 74, baseType: !29, size: 64, offset: 384)
!20590 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !20579, file: !271, line: 78, baseType: !286, size: 64, offset: 448)
!20591 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !20579, file: !271, line: 80, baseType: !288, size: 64, offset: 512)
!20592 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !20579, file: !271, line: 91, baseType: !20593, size: 128, offset: 576)
!20593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !291, line: 9, size: 128, elements: !20594)
!20594 = !{!20595, !20596}
!20595 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !20593, file: !291, line: 11, baseType: !294, size: 64)
!20596 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !20593, file: !291, line: 12, baseType: !296, size: 64, offset: 64)
!20597 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !20579, file: !271, line: 92, baseType: !20593, size: 128, offset: 704)
!20598 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !20579, file: !271, line: 93, baseType: !20593, size: 128, offset: 832)
!20599 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !20579, file: !271, line: 106, baseType: !300, size: 192, offset: 960)
!20600 = !DILocalVariable(name: "fd", arg: 1, scope: !20577, file: !20578, line: 61, type: !7)
!20601 = !DILocation(line: 61, column: 18, scope: !20577)
!20602 = !DILocalVariable(name: "dir", arg: 2, scope: !20577, file: !20578, line: 61, type: !180)
!20603 = !DILocation(line: 61, column: 34, scope: !20577)
!20604 = !DILocalVariable(name: "mkdir_mode", arg: 3, scope: !20577, file: !20578, line: 61, type: !139)
!20605 = !DILocation(line: 61, column: 46, scope: !20577)
!20606 = !DILocalVariable(name: "owner", arg: 4, scope: !20577, file: !20578, line: 62, type: !127)
!20607 = !DILocation(line: 62, column: 20, scope: !20577)
!20608 = !DILocalVariable(name: "group", arg: 5, scope: !20577, file: !20578, line: 62, type: !129)
!20609 = !DILocation(line: 62, column: 33, scope: !20577)
!20610 = !DILocalVariable(name: "mode", arg: 6, scope: !20577, file: !20578, line: 63, type: !139)
!20611 = !DILocation(line: 63, column: 21, scope: !20577)
!20612 = !DILocalVariable(name: "mode_bits", arg: 7, scope: !20577, file: !20578, line: 63, type: !139)
!20613 = !DILocation(line: 63, column: 34, scope: !20577)
!20614 = !DILocalVariable(name: "st", scope: !20577, file: !20578, line: 65, type: !20579)
!20615 = !DILocation(line: 65, column: 15, scope: !20577)
!20616 = !DILocalVariable(name: "result", scope: !20577, file: !20578, line: 66, type: !7)
!20617 = !DILocation(line: 66, column: 7, scope: !20577)
!20618 = !DILocation(line: 66, column: 17, scope: !20577)
!20619 = !DILocation(line: 66, column: 20, scope: !20577)
!20620 = !DILocation(line: 66, column: 32, scope: !20577)
!20621 = !DILocation(line: 66, column: 26, scope: !20577)
!20622 = !DILocation(line: 66, column: 51, scope: !20577)
!20623 = !DILocation(line: 66, column: 44, scope: !20577)
!20624 = !DILocation(line: 68, column: 7, scope: !20625)
!20625 = distinct !DILexicalBlock(scope: !20577, file: !20578, line: 68, column: 7)
!20626 = !DILocation(line: 68, column: 14, scope: !20625)
!20627 = !DILocation(line: 68, column: 7, scope: !20577)
!20628 = !DILocalVariable(name: "dir_mode", scope: !20629, file: !20578, line: 70, type: !139)
!20629 = distinct !DILexicalBlock(scope: !20625, file: !20578, line: 69, column: 5)
!20630 = !DILocation(line: 70, column: 14, scope: !20629)
!20631 = !DILocation(line: 70, column: 28, scope: !20629)
!20632 = !DILocation(line: 76, column: 13, scope: !20633)
!20633 = distinct !DILexicalBlock(scope: !20629, file: !20578, line: 76, column: 11)
!20634 = !DILocation(line: 76, column: 11, scope: !20629)
!20635 = !DILocation(line: 78, column: 11, scope: !20636)
!20636 = distinct !DILexicalBlock(scope: !20633, file: !20578, line: 77, column: 9)
!20637 = !DILocation(line: 78, column: 17, scope: !20636)
!20638 = !DILocation(line: 79, column: 18, scope: !20636)
!20639 = !DILocation(line: 80, column: 9, scope: !20636)
!20640 = !DILocalVariable(name: "indeterminate", scope: !20641, file: !20578, line: 87, type: !139)
!20641 = distinct !DILexicalBlock(scope: !20633, file: !20578, line: 82, column: 9)
!20642 = !DILocation(line: 87, column: 18, scope: !20641)
!20643 = !DILocation(line: 94, column: 16, scope: !20644)
!20644 = distinct !DILexicalBlock(scope: !20641, file: !20578, line: 94, column: 15)
!20645 = !DILocation(line: 94, column: 22, scope: !20644)
!20646 = !DILocation(line: 94, column: 36, scope: !20644)
!20647 = !DILocation(line: 94, column: 39, scope: !20644)
!20648 = !DILocation(line: 94, column: 51, scope: !20644)
!20649 = !DILocation(line: 94, column: 45, scope: !20644)
!20650 = !DILocation(line: 95, column: 15, scope: !20644)
!20651 = !DILocation(line: 95, column: 19, scope: !20644)
!20652 = !DILocation(line: 95, column: 25, scope: !20644)
!20653 = !DILocation(line: 95, column: 39, scope: !20644)
!20654 = !DILocation(line: 95, column: 42, scope: !20644)
!20655 = !DILocation(line: 95, column: 54, scope: !20644)
!20656 = !DILocation(line: 95, column: 48, scope: !20644)
!20657 = !DILocation(line: 94, column: 15, scope: !20641)
!20658 = !DILocation(line: 97, column: 30, scope: !20659)
!20659 = distinct !DILexicalBlock(scope: !20644, file: !20578, line: 96, column: 13)
!20660 = !DILocation(line: 97, column: 27, scope: !20659)
!20661 = !DILocation(line: 97, column: 25, scope: !20659)
!20662 = !DILocation(line: 98, column: 35, scope: !20659)
!20663 = !DILocation(line: 98, column: 39, scope: !20659)
!20664 = !DILocation(line: 98, column: 46, scope: !20659)
!20665 = !DILocation(line: 98, column: 27, scope: !20659)
!20666 = !DILocation(line: 99, column: 27, scope: !20659)
!20667 = !DILocation(line: 99, column: 38, scope: !20659)
!20668 = !DILocation(line: 100, column: 35, scope: !20659)
!20669 = !DILocation(line: 100, column: 40, scope: !20659)
!20670 = !DILocation(line: 100, column: 47, scope: !20659)
!20671 = !DILocation(line: 100, column: 27, scope: !20659)
!20672 = !DILocation(line: 101, column: 34, scope: !20659)
!20673 = !DILocation(line: 101, column: 39, scope: !20659)
!20674 = !DILocation(line: 101, column: 46, scope: !20659)
!20675 = !DILocation(line: 101, column: 27, scope: !20659)
!20676 = !DILocation(line: 97, column: 22, scope: !20659)
!20677 = !DILocation(line: 108, column: 19, scope: !20678)
!20678 = distinct !DILexicalBlock(scope: !20659, file: !20578, line: 108, column: 19)
!20679 = !DILocation(line: 108, column: 26, scope: !20678)
!20680 = !DILocation(line: 108, column: 31, scope: !20678)
!20681 = !DILocation(line: 108, column: 35, scope: !20678)
!20682 = !DILocation(line: 108, column: 44, scope: !20678)
!20683 = !DILocation(line: 108, column: 19, scope: !20659)
!20684 = !DILocation(line: 109, column: 33, scope: !20678)
!20685 = !DILocation(line: 109, column: 42, scope: !20678)
!20686 = !DILocation(line: 109, column: 31, scope: !20678)
!20687 = !DILocation(line: 109, column: 17, scope: !20678)
!20688 = !DILocation(line: 110, column: 13, scope: !20659)
!20689 = !DILocation(line: 115, column: 15, scope: !20690)
!20690 = distinct !DILexicalBlock(scope: !20641, file: !20578, line: 115, column: 15)
!20691 = !DILocation(line: 115, column: 22, scope: !20690)
!20692 = !DILocation(line: 115, column: 27, scope: !20690)
!20693 = !DILocation(line: 115, column: 33, scope: !20690)
!20694 = !DILocation(line: 115, column: 44, scope: !20690)
!20695 = !DILocation(line: 115, column: 42, scope: !20690)
!20696 = !DILocation(line: 115, column: 52, scope: !20690)
!20697 = !DILocation(line: 115, column: 50, scope: !20690)
!20698 = !DILocation(line: 115, column: 69, scope: !20690)
!20699 = !DILocation(line: 115, column: 67, scope: !20690)
!20700 = !DILocation(line: 115, column: 15, scope: !20641)
!20701 = !DILocalVariable(name: "chmod_mode", scope: !20702, file: !20578, line: 117, type: !139)
!20702 = distinct !DILexicalBlock(scope: !20690, file: !20578, line: 116, column: 13)
!20703 = !DILocation(line: 117, column: 22, scope: !20702)
!20704 = !DILocation(line: 118, column: 17, scope: !20702)
!20705 = !DILocation(line: 118, column: 25, scope: !20702)
!20706 = !DILocation(line: 118, column: 34, scope: !20702)
!20707 = !DILocation(line: 118, column: 55, scope: !20702)
!20708 = !DILocation(line: 118, column: 54, scope: !20702)
!20709 = !DILocation(line: 118, column: 52, scope: !20702)
!20710 = !DILocation(line: 118, column: 22, scope: !20702)
!20711 = !DILocation(line: 119, column: 45, scope: !20702)
!20712 = !DILocation(line: 119, column: 42, scope: !20702)
!20713 = !DILocation(line: 119, column: 25, scope: !20702)
!20714 = !DILocation(line: 120, column: 35, scope: !20702)
!20715 = !DILocation(line: 120, column: 39, scope: !20702)
!20716 = !DILocation(line: 120, column: 27, scope: !20702)
!20717 = !DILocation(line: 121, column: 27, scope: !20702)
!20718 = !DILocation(line: 121, column: 38, scope: !20702)
!20719 = !DILocation(line: 122, column: 35, scope: !20702)
!20720 = !DILocation(line: 122, column: 40, scope: !20702)
!20721 = !DILocation(line: 122, column: 27, scope: !20702)
!20722 = !DILocation(line: 123, column: 34, scope: !20702)
!20723 = !DILocation(line: 123, column: 39, scope: !20702)
!20724 = !DILocation(line: 123, column: 27, scope: !20702)
!20725 = !DILocation(line: 119, column: 22, scope: !20702)
!20726 = !DILocation(line: 124, column: 13, scope: !20702)
!20727 = !DILocation(line: 126, column: 5, scope: !20629)
!20728 = !DILocation(line: 128, column: 12, scope: !20729)
!20729 = distinct !DILexicalBlock(scope: !20577, file: !20578, line: 128, column: 7)
!20730 = !DILocation(line: 128, column: 9, scope: !20729)
!20731 = !DILocation(line: 128, column: 7, scope: !20577)
!20732 = !DILocation(line: 130, column: 11, scope: !20733)
!20733 = distinct !DILexicalBlock(scope: !20734, file: !20578, line: 130, column: 11)
!20734 = distinct !DILexicalBlock(scope: !20729, file: !20578, line: 129, column: 5)
!20735 = !DILocation(line: 130, column: 18, scope: !20733)
!20736 = !DILocation(line: 130, column: 11, scope: !20734)
!20737 = !DILocation(line: 131, column: 25, scope: !20733)
!20738 = !DILocation(line: 131, column: 18, scope: !20733)
!20739 = !DILocation(line: 131, column: 16, scope: !20733)
!20740 = !DILocation(line: 131, column: 9, scope: !20733)
!20741 = !DILocalVariable(name: "e", scope: !20742, file: !20578, line: 134, type: !7)
!20742 = distinct !DILexicalBlock(scope: !20733, file: !20578, line: 133, column: 9)
!20743 = !DILocation(line: 134, column: 15, scope: !20742)
!20744 = !DILocation(line: 134, column: 19, scope: !20742)
!20745 = !DILocation(line: 135, column: 18, scope: !20742)
!20746 = !DILocation(line: 135, column: 11, scope: !20742)
!20747 = !DILocation(line: 136, column: 19, scope: !20742)
!20748 = !DILocation(line: 136, column: 11, scope: !20742)
!20749 = !DILocation(line: 136, column: 17, scope: !20742)
!20750 = !DILocation(line: 138, column: 5, scope: !20734)
!20751 = !DILocation(line: 140, column: 10, scope: !20577)
!20752 = !DILocation(line: 140, column: 3, scope: !20577)
!20753 = distinct !DISubprogram(name: "openat_safer", scope: !20754, file: !20754, line: 29, type: !20755, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2371, retainedNodes: !209)
!20754 = !DIFile(filename: "lib/openat-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!20755 = !DISubroutineType(types: !20756)
!20756 = !{!7, !7, !180, !7, null}
!20757 = !DILocalVariable(name: "fd", arg: 1, scope: !20753, file: !20754, line: 29, type: !7)
!20758 = !DILocation(line: 29, column: 19, scope: !20753)
!20759 = !DILocalVariable(name: "file", arg: 2, scope: !20753, file: !20754, line: 29, type: !180)
!20760 = !DILocation(line: 29, column: 35, scope: !20753)
!20761 = !DILocalVariable(name: "flags", arg: 3, scope: !20753, file: !20754, line: 29, type: !7)
!20762 = !DILocation(line: 29, column: 45, scope: !20753)
!20763 = !DILocalVariable(name: "mode", scope: !20753, file: !20754, line: 31, type: !139)
!20764 = !DILocation(line: 31, column: 10, scope: !20753)
!20765 = !DILocation(line: 33, column: 7, scope: !20766)
!20766 = distinct !DILexicalBlock(scope: !20753, file: !20754, line: 33, column: 7)
!20767 = !DILocation(line: 33, column: 13, scope: !20766)
!20768 = !DILocation(line: 33, column: 7, scope: !20753)
!20769 = !DILocalVariable(name: "ap", scope: !20770, file: !20754, line: 35, type: !2376)
!20770 = distinct !DILexicalBlock(scope: !20766, file: !20754, line: 34, column: 5)
!20771 = !DILocation(line: 35, column: 15, scope: !20770)
!20772 = !DILocation(line: 36, column: 7, scope: !20770)
!20773 = !DILocation(line: 40, column: 14, scope: !20770)
!20774 = !DILocation(line: 40, column: 12, scope: !20770)
!20775 = !DILocation(line: 42, column: 7, scope: !20770)
!20776 = !DILocation(line: 43, column: 5, scope: !20770)
!20777 = !DILocation(line: 45, column: 28, scope: !20753)
!20778 = !DILocation(line: 45, column: 32, scope: !20753)
!20779 = !DILocation(line: 45, column: 38, scope: !20753)
!20780 = !DILocation(line: 45, column: 45, scope: !20753)
!20781 = !DILocation(line: 45, column: 20, scope: !20753)
!20782 = !DILocation(line: 45, column: 10, scope: !20753)
!20783 = !DILocation(line: 45, column: 3, scope: !20753)
!20784 = distinct !DISubprogram(name: "randint_new", scope: !2392, file: !2392, line: 71, type: !2388, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2385, retainedNodes: !209)
!20785 = !DILocalVariable(name: "source", arg: 1, scope: !20784, file: !2392, line: 71, type: !2395)
!20786 = !DILocation(line: 71, column: 38, scope: !20784)
!20787 = !DILocalVariable(name: "s", scope: !20784, file: !2392, line: 73, type: !2390)
!20788 = !DILocation(line: 73, column: 26, scope: !20784)
!20789 = !DILocation(line: 73, column: 30, scope: !20784)
!20790 = !DILocation(line: 74, column: 15, scope: !20784)
!20791 = !DILocation(line: 74, column: 3, scope: !20784)
!20792 = !DILocation(line: 74, column: 6, scope: !20784)
!20793 = !DILocation(line: 74, column: 13, scope: !20784)
!20794 = !{!20795, !2646, i64 0}
!20795 = !{!"randint_source", !2646, i64 0, !2913, i64 8, !2913, i64 16}
!20796 = !DILocation(line: 75, column: 16, scope: !20784)
!20797 = !DILocation(line: 75, column: 19, scope: !20784)
!20798 = !DILocation(line: 75, column: 27, scope: !20784)
!20799 = !{!20795, !2913, i64 16}
!20800 = !DILocation(line: 75, column: 3, scope: !20784)
!20801 = !DILocation(line: 75, column: 6, scope: !20784)
!20802 = !DILocation(line: 75, column: 14, scope: !20784)
!20803 = !{!20795, !2913, i64 8}
!20804 = !DILocation(line: 76, column: 10, scope: !20784)
!20805 = !DILocation(line: 76, column: 3, scope: !20784)
!20806 = distinct !DISubprogram(name: "randint_all_new", scope: !2392, file: !2392, line: 84, type: !2401, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2385, retainedNodes: !209)
!20807 = !DILocalVariable(name: "name", arg: 1, scope: !20806, file: !2392, line: 84, type: !180)
!20808 = !DILocation(line: 84, column: 30, scope: !20806)
!20809 = !DILocalVariable(name: "bytes_bound", arg: 2, scope: !20806, file: !2392, line: 84, type: !55)
!20810 = !DILocation(line: 84, column: 43, scope: !20806)
!20811 = !DILocalVariable(name: "source", scope: !20806, file: !2392, line: 86, type: !2395)
!20812 = !DILocation(line: 86, column: 27, scope: !20806)
!20813 = !DILocation(line: 86, column: 50, scope: !20806)
!20814 = !DILocation(line: 86, column: 56, scope: !20806)
!20815 = !DILocation(line: 86, column: 36, scope: !20806)
!20816 = !DILocation(line: 87, column: 11, scope: !20806)
!20817 = !DILocation(line: 87, column: 33, scope: !20806)
!20818 = !DILocation(line: 87, column: 20, scope: !20806)
!20819 = !DILocation(line: 87, column: 3, scope: !20806)
!20820 = distinct !DISubprogram(name: "randint_get_source", scope: !2392, file: !2392, line: 93, type: !2403, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2385, retainedNodes: !209)
!20821 = !DILocalVariable(name: "s", arg: 1, scope: !20820, file: !2392, line: 93, type: !2405)
!20822 = !DILocation(line: 93, column: 50, scope: !20820)
!20823 = !DILocation(line: 95, column: 10, scope: !20820)
!20824 = !DILocation(line: 95, column: 13, scope: !20820)
!20825 = !DILocation(line: 95, column: 3, scope: !20820)
!20826 = distinct !DISubprogram(name: "randint_genmax", scope: !2392, file: !2392, line: 114, type: !2407, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2385, retainedNodes: !209)
!20827 = !DILocalVariable(name: "s", arg: 1, scope: !20826, file: !2392, line: 114, type: !2390)
!20828 = !DILocation(line: 114, column: 40, scope: !20826)
!20829 = !DILocalVariable(name: "genmax", arg: 2, scope: !20826, file: !2392, line: 114, type: !2399)
!20830 = !DILocation(line: 114, column: 51, scope: !20826)
!20831 = !DILocalVariable(name: "source", scope: !20826, file: !2392, line: 116, type: !2395)
!20832 = !DILocation(line: 116, column: 27, scope: !20826)
!20833 = !DILocation(line: 116, column: 36, scope: !20826)
!20834 = !DILocation(line: 116, column: 39, scope: !20826)
!20835 = !DILocalVariable(name: "randnum", scope: !20826, file: !2392, line: 117, type: !2399)
!20836 = !DILocation(line: 117, column: 11, scope: !20826)
!20837 = !DILocation(line: 117, column: 21, scope: !20826)
!20838 = !DILocation(line: 117, column: 24, scope: !20826)
!20839 = !DILocalVariable(name: "randmax", scope: !20826, file: !2392, line: 118, type: !2399)
!20840 = !DILocation(line: 118, column: 11, scope: !20826)
!20841 = !DILocation(line: 118, column: 21, scope: !20826)
!20842 = !DILocation(line: 118, column: 24, scope: !20826)
!20843 = !DILocalVariable(name: "choices", scope: !20826, file: !2392, line: 119, type: !2399)
!20844 = !DILocation(line: 119, column: 11, scope: !20826)
!20845 = !DILocation(line: 119, column: 21, scope: !20826)
!20846 = !DILocation(line: 119, column: 28, scope: !20826)
!20847 = !DILocation(line: 121, column: 3, scope: !20826)
!20848 = !DILocation(line: 123, column: 11, scope: !20849)
!20849 = distinct !DILexicalBlock(scope: !20850, file: !2392, line: 123, column: 11)
!20850 = distinct !DILexicalBlock(scope: !20826, file: !2392, line: 122, column: 5)
!20851 = !DILocation(line: 123, column: 21, scope: !20849)
!20852 = !DILocation(line: 123, column: 19, scope: !20849)
!20853 = !DILocation(line: 123, column: 11, scope: !20850)
!20854 = !DILocalVariable(name: "i", scope: !20855, file: !2392, line: 128, type: !55)
!20855 = distinct !DILexicalBlock(scope: !20849, file: !2392, line: 124, column: 9)
!20856 = !DILocation(line: 128, column: 18, scope: !20855)
!20857 = !DILocalVariable(name: "rmax", scope: !20855, file: !2392, line: 129, type: !2399)
!20858 = !DILocation(line: 129, column: 19, scope: !20855)
!20859 = !DILocation(line: 129, column: 26, scope: !20855)
!20860 = !DILocalVariable(name: "buf", scope: !20855, file: !2392, line: 130, type: !2409)
!20861 = !DILocation(line: 130, column: 25, scope: !20855)
!20862 = !DILocation(line: 132, column: 11, scope: !20855)
!20863 = !DILocation(line: 134, column: 34, scope: !20864)
!20864 = distinct !DILexicalBlock(scope: !20855, file: !2392, line: 133, column: 13)
!20865 = !DILocation(line: 134, column: 22, scope: !20864)
!20866 = !DILocation(line: 134, column: 40, scope: !20864)
!20867 = !DILocation(line: 134, column: 20, scope: !20864)
!20868 = !DILocation(line: 135, column: 16, scope: !20864)
!20869 = !DILocation(line: 136, column: 13, scope: !20864)
!20870 = !DILocation(line: 137, column: 18, scope: !20855)
!20871 = !DILocation(line: 137, column: 25, scope: !20855)
!20872 = !DILocation(line: 137, column: 23, scope: !20855)
!20873 = distinct !{!20873, !20862, !20874}
!20874 = !DILocation(line: 137, column: 31, scope: !20855)
!20875 = !DILocation(line: 139, column: 21, scope: !20855)
!20876 = !DILocation(line: 139, column: 29, scope: !20855)
!20877 = !DILocation(line: 139, column: 34, scope: !20855)
!20878 = !DILocation(line: 139, column: 11, scope: !20855)
!20879 = !DILocation(line: 148, column: 13, scope: !20855)
!20880 = !DILocation(line: 150, column: 11, scope: !20855)
!20881 = !DILocation(line: 152, column: 37, scope: !20882)
!20882 = distinct !DILexicalBlock(scope: !20855, file: !2392, line: 151, column: 13)
!20883 = !DILocation(line: 152, column: 25, scope: !20882)
!20884 = !DILocation(line: 152, column: 52, scope: !20882)
!20885 = !DILocation(line: 152, column: 48, scope: !20882)
!20886 = !DILocation(line: 152, column: 46, scope: !20882)
!20887 = !DILocation(line: 152, column: 23, scope: !20882)
!20888 = !DILocation(line: 153, column: 37, scope: !20882)
!20889 = !DILocation(line: 153, column: 25, scope: !20882)
!20890 = !DILocation(line: 153, column: 46, scope: !20882)
!20891 = !DILocation(line: 153, column: 23, scope: !20882)
!20892 = !DILocation(line: 154, column: 16, scope: !20882)
!20893 = !DILocation(line: 155, column: 13, scope: !20882)
!20894 = !DILocation(line: 156, column: 18, scope: !20855)
!20895 = !DILocation(line: 156, column: 28, scope: !20855)
!20896 = !DILocation(line: 156, column: 26, scope: !20855)
!20897 = distinct !{!20897, !20880, !20898}
!20898 = !DILocation(line: 156, column: 34, scope: !20855)
!20899 = !DILocation(line: 157, column: 9, scope: !20855)
!20900 = !DILocation(line: 159, column: 11, scope: !20901)
!20901 = distinct !DILexicalBlock(scope: !20850, file: !2392, line: 159, column: 11)
!20902 = !DILocation(line: 159, column: 22, scope: !20901)
!20903 = !DILocation(line: 159, column: 19, scope: !20901)
!20904 = !DILocation(line: 159, column: 11, scope: !20850)
!20905 = !DILocation(line: 161, column: 24, scope: !20906)
!20906 = distinct !DILexicalBlock(scope: !20901, file: !2392, line: 160, column: 9)
!20907 = !DILocation(line: 161, column: 27, scope: !20906)
!20908 = !DILocation(line: 161, column: 35, scope: !20906)
!20909 = !DILocation(line: 161, column: 11, scope: !20906)
!20910 = !DILocation(line: 161, column: 14, scope: !20906)
!20911 = !DILocation(line: 161, column: 22, scope: !20906)
!20912 = !DILocation(line: 162, column: 18, scope: !20906)
!20913 = !DILocation(line: 162, column: 11, scope: !20906)
!20914 = !DILocalVariable(name: "excess_choices", scope: !20915, file: !2392, line: 176, type: !2399)
!20915 = distinct !DILexicalBlock(scope: !20901, file: !2392, line: 165, column: 9)
!20916 = !DILocation(line: 176, column: 19, scope: !20915)
!20917 = !DILocation(line: 176, column: 36, scope: !20915)
!20918 = !DILocation(line: 176, column: 46, scope: !20915)
!20919 = !DILocation(line: 176, column: 44, scope: !20915)
!20920 = !DILocalVariable(name: "unusable_choices", scope: !20915, file: !2392, line: 177, type: !2399)
!20921 = !DILocation(line: 177, column: 19, scope: !20915)
!20922 = !DILocation(line: 177, column: 38, scope: !20915)
!20923 = !DILocation(line: 177, column: 55, scope: !20915)
!20924 = !DILocation(line: 177, column: 53, scope: !20915)
!20925 = !DILocalVariable(name: "last_usable_choice", scope: !20915, file: !2392, line: 178, type: !2399)
!20926 = !DILocation(line: 178, column: 19, scope: !20915)
!20927 = !DILocation(line: 178, column: 40, scope: !20915)
!20928 = !DILocation(line: 178, column: 50, scope: !20915)
!20929 = !DILocation(line: 178, column: 48, scope: !20915)
!20930 = !DILocalVariable(name: "reduced_randnum", scope: !20915, file: !2392, line: 179, type: !2399)
!20931 = !DILocation(line: 179, column: 19, scope: !20915)
!20932 = !DILocation(line: 179, column: 37, scope: !20915)
!20933 = !DILocation(line: 179, column: 47, scope: !20915)
!20934 = !DILocation(line: 179, column: 45, scope: !20915)
!20935 = !DILocation(line: 181, column: 15, scope: !20936)
!20936 = distinct !DILexicalBlock(scope: !20915, file: !2392, line: 181, column: 15)
!20937 = !DILocation(line: 181, column: 26, scope: !20936)
!20938 = !DILocation(line: 181, column: 23, scope: !20936)
!20939 = !DILocation(line: 181, column: 15, scope: !20915)
!20940 = !DILocation(line: 183, column: 28, scope: !20941)
!20941 = distinct !DILexicalBlock(scope: !20936, file: !2392, line: 182, column: 13)
!20942 = !DILocation(line: 183, column: 38, scope: !20941)
!20943 = !DILocation(line: 183, column: 36, scope: !20941)
!20944 = !DILocation(line: 183, column: 15, scope: !20941)
!20945 = !DILocation(line: 183, column: 18, scope: !20941)
!20946 = !DILocation(line: 183, column: 26, scope: !20941)
!20947 = !DILocation(line: 184, column: 28, scope: !20941)
!20948 = !DILocation(line: 184, column: 45, scope: !20941)
!20949 = !DILocation(line: 184, column: 43, scope: !20941)
!20950 = !DILocation(line: 184, column: 15, scope: !20941)
!20951 = !DILocation(line: 184, column: 18, scope: !20941)
!20952 = !DILocation(line: 184, column: 26, scope: !20941)
!20953 = !DILocation(line: 185, column: 22, scope: !20941)
!20954 = !DILocation(line: 185, column: 15, scope: !20941)
!20955 = !DILocation(line: 190, column: 21, scope: !20915)
!20956 = !DILocation(line: 190, column: 19, scope: !20915)
!20957 = !DILocation(line: 191, column: 21, scope: !20915)
!20958 = !DILocation(line: 191, column: 38, scope: !20915)
!20959 = !DILocation(line: 191, column: 19, scope: !20915)
!20960 = distinct !{!20960, !20847, !20961}
!20961 = !DILocation(line: 193, column: 5, scope: !20826)
!20962 = !DILocation(line: 194, column: 1, scope: !20826)
!20963 = distinct !DISubprogram(name: "shift_left", scope: !2392, file: !2392, line: 104, type: !2414, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2385, retainedNodes: !209)
!20964 = !DILocalVariable(name: "x", arg: 1, scope: !20963, file: !2392, line: 104, type: !2399)
!20965 = !DILocation(line: 104, column: 43, scope: !20963)
!20966 = !DILocation(line: 106, column: 27, scope: !20963)
!20967 = !DILocation(line: 106, column: 29, scope: !20963)
!20968 = !DILocation(line: 106, column: 3, scope: !20963)
!20969 = distinct !DISubprogram(name: "randint_free", scope: !2392, file: !2392, line: 199, type: !2410, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2385, retainedNodes: !209)
!20970 = !DILocalVariable(name: "s", arg: 1, scope: !20969, file: !2392, line: 199, type: !2390)
!20971 = !DILocation(line: 199, column: 38, scope: !20969)
!20972 = !DILocation(line: 201, column: 19, scope: !20969)
!20973 = !DILocation(line: 201, column: 3, scope: !20969)
!20974 = !DILocation(line: 202, column: 9, scope: !20969)
!20975 = !DILocation(line: 202, column: 3, scope: !20969)
!20976 = !DILocation(line: 203, column: 1, scope: !20969)
!20977 = distinct !DISubprogram(name: "randint_all_free", scope: !2392, file: !2392, line: 209, type: !2412, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2385, retainedNodes: !209)
!20978 = !DILocalVariable(name: "s", arg: 1, scope: !20977, file: !2392, line: 209, type: !2390)
!20979 = !DILocation(line: 209, column: 42, scope: !20977)
!20980 = !DILocalVariable(name: "r", scope: !20977, file: !2392, line: 211, type: !7)
!20981 = !DILocation(line: 211, column: 7, scope: !20977)
!20982 = !DILocation(line: 211, column: 26, scope: !20977)
!20983 = !DILocation(line: 211, column: 29, scope: !20977)
!20984 = !DILocation(line: 211, column: 11, scope: !20977)
!20985 = !DILocalVariable(name: "e", scope: !20977, file: !2392, line: 212, type: !7)
!20986 = !DILocation(line: 212, column: 7, scope: !20977)
!20987 = !DILocation(line: 212, column: 11, scope: !20977)
!20988 = !DILocation(line: 213, column: 17, scope: !20977)
!20989 = !DILocation(line: 213, column: 3, scope: !20977)
!20990 = !DILocation(line: 214, column: 11, scope: !20977)
!20991 = !DILocation(line: 214, column: 3, scope: !20977)
!20992 = !DILocation(line: 214, column: 9, scope: !20977)
!20993 = !DILocation(line: 215, column: 10, scope: !20977)
!20994 = !DILocation(line: 215, column: 3, scope: !20977)
!20995 = distinct !DISubprogram(name: "randread_new", scope: !2423, file: !2423, line: 204, type: !2419, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2416, retainedNodes: !209)
!20996 = !DILocalVariable(name: "name", arg: 1, scope: !20995, file: !2423, line: 204, type: !180)
!20997 = !DILocation(line: 204, column: 27, scope: !20995)
!20998 = !DILocalVariable(name: "bytes_bound", arg: 2, scope: !20995, file: !2423, line: 204, type: !55)
!20999 = !DILocation(line: 204, column: 40, scope: !20995)
!21000 = !DILocation(line: 206, column: 7, scope: !21001)
!21001 = distinct !DILexicalBlock(scope: !20995, file: !2423, line: 206, column: 7)
!21002 = !DILocation(line: 206, column: 19, scope: !21001)
!21003 = !DILocation(line: 206, column: 7, scope: !20995)
!21004 = !DILocation(line: 207, column: 12, scope: !21001)
!21005 = !DILocation(line: 207, column: 5, scope: !21001)
!21006 = !DILocalVariable(name: "source", scope: !21007, file: !2423, line: 210, type: !2426)
!21007 = distinct !DILexicalBlock(scope: !21001, file: !2423, line: 209, column: 5)
!21008 = !DILocation(line: 210, column: 13, scope: !21007)
!21009 = !DILocalVariable(name: "s", scope: !21007, file: !2423, line: 211, type: !2421)
!21010 = !DILocation(line: 211, column: 31, scope: !21007)
!21011 = !DILocation(line: 213, column: 11, scope: !21012)
!21012 = distinct !DILexicalBlock(scope: !21007, file: !2423, line: 213, column: 11)
!21013 = !DILocation(line: 213, column: 11, scope: !21007)
!21014 = !DILocation(line: 214, column: 38, scope: !21015)
!21015 = distinct !DILexicalBlock(scope: !21012, file: !2423, line: 214, column: 13)
!21016 = !DILocation(line: 214, column: 25, scope: !21015)
!21017 = !DILocation(line: 214, column: 23, scope: !21015)
!21018 = !DILocation(line: 214, column: 13, scope: !21012)
!21019 = !DILocation(line: 215, column: 11, scope: !21015)
!21020 = !DILocation(line: 214, column: 49, scope: !21015)
!21021 = !DILocation(line: 217, column: 23, scope: !21007)
!21022 = !DILocation(line: 217, column: 31, scope: !21007)
!21023 = !DILocation(line: 217, column: 11, scope: !21007)
!21024 = !DILocation(line: 217, column: 9, scope: !21007)
!21025 = !DILocation(line: 219, column: 11, scope: !21026)
!21026 = distinct !DILexicalBlock(scope: !21007, file: !2423, line: 219, column: 11)
!21027 = !DILocation(line: 219, column: 11, scope: !21007)
!21028 = !DILocation(line: 220, column: 18, scope: !21026)
!21029 = !DILocation(line: 220, column: 26, scope: !21026)
!21030 = !DILocation(line: 220, column: 29, scope: !21026)
!21031 = !DILocation(line: 220, column: 33, scope: !21026)
!21032 = !DILocation(line: 220, column: 44, scope: !21026)
!21033 = !DILocation(line: 220, column: 9, scope: !21026)
!21034 = !DILocation(line: 223, column: 11, scope: !21035)
!21035 = distinct !DILexicalBlock(scope: !21026, file: !2423, line: 222, column: 9)
!21036 = !DILocation(line: 223, column: 14, scope: !21035)
!21037 = !DILocation(line: 223, column: 18, scope: !21035)
!21038 = !DILocation(line: 223, column: 24, scope: !21035)
!21039 = !DILocation(line: 223, column: 33, scope: !21035)
!21040 = !DILocation(line: 224, column: 22, scope: !21035)
!21041 = !DILocation(line: 224, column: 25, scope: !21035)
!21042 = !DILocation(line: 224, column: 29, scope: !21035)
!21043 = !DILocation(line: 224, column: 35, scope: !21035)
!21044 = !DILocation(line: 224, column: 41, scope: !21035)
!21045 = !DILocation(line: 225, column: 22, scope: !21035)
!21046 = !DILocation(line: 224, column: 11, scope: !21035)
!21047 = !DILocation(line: 226, column: 24, scope: !21035)
!21048 = !DILocation(line: 226, column: 27, scope: !21035)
!21049 = !DILocation(line: 226, column: 31, scope: !21035)
!21050 = !DILocation(line: 226, column: 37, scope: !21035)
!21051 = !DILocation(line: 226, column: 11, scope: !21035)
!21052 = !DILocation(line: 229, column: 14, scope: !21007)
!21053 = !DILocation(line: 229, column: 7, scope: !21007)
!21054 = !DILocation(line: 231, column: 1, scope: !20995)
!21055 = distinct !DISubprogram(name: "simple_new", scope: !2423, file: !2423, line: 137, type: !2501, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2416, retainedNodes: !209)
!21056 = !DILocalVariable(name: "source", arg: 1, scope: !21055, file: !2423, line: 137, type: !2426)
!21057 = !DILocation(line: 137, column: 19, scope: !21055)
!21058 = !DILocalVariable(name: "handler_arg", arg: 2, scope: !21055, file: !2423, line: 137, type: !513)
!21059 = !DILocation(line: 137, column: 39, scope: !21055)
!21060 = !DILocalVariable(name: "s", scope: !21055, file: !2423, line: 139, type: !2421)
!21061 = !DILocation(line: 139, column: 27, scope: !21055)
!21062 = !DILocation(line: 139, column: 31, scope: !21055)
!21063 = !DILocation(line: 140, column: 15, scope: !21055)
!21064 = !DILocation(line: 140, column: 3, scope: !21055)
!21065 = !DILocation(line: 140, column: 6, scope: !21055)
!21066 = !DILocation(line: 140, column: 13, scope: !21055)
!21067 = !{!21068, !2646, i64 0}
!21068 = !{!"randread_source", !2646, i64 0, !2646, i64 8, !2646, i64 16, !2634, i64 24}
!21069 = !DILocation(line: 141, column: 3, scope: !21055)
!21070 = !DILocation(line: 141, column: 6, scope: !21055)
!21071 = !DILocation(line: 141, column: 14, scope: !21055)
!21072 = !{!21068, !2646, i64 8}
!21073 = !DILocation(line: 142, column: 20, scope: !21055)
!21074 = !DILocation(line: 142, column: 3, scope: !21055)
!21075 = !DILocation(line: 142, column: 6, scope: !21055)
!21076 = !DILocation(line: 142, column: 18, scope: !21055)
!21077 = !{!21068, !2646, i64 16}
!21078 = !DILocation(line: 143, column: 10, scope: !21055)
!21079 = !DILocation(line: 143, column: 3, scope: !21055)
!21080 = distinct !DISubprogram(name: "get_nonce", scope: !2423, file: !2423, line: 151, type: !2503, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2416, retainedNodes: !209)
!21081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !1279, line: 8, size: 128, elements: !21082)
!21082 = !{!21083, !21084}
!21083 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !21081, file: !1279, line: 10, baseType: !294, size: 64)
!21084 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !21081, file: !1279, line: 11, baseType: !1283, size: 64, offset: 64)
!21085 = !DILocalVariable(name: "buffer", arg: 1, scope: !21080, file: !2423, line: 151, type: !53)
!21086 = !DILocation(line: 151, column: 18, scope: !21080)
!21087 = !DILocalVariable(name: "bufsize", arg: 2, scope: !21080, file: !2423, line: 151, type: !55)
!21088 = !DILocation(line: 151, column: 33, scope: !21080)
!21089 = !DILocalVariable(name: "bytes_bound", arg: 3, scope: !21080, file: !2423, line: 151, type: !55)
!21090 = !DILocation(line: 151, column: 49, scope: !21080)
!21091 = !DILocalVariable(name: "buf", scope: !21080, file: !2423, line: 153, type: !9)
!21092 = !DILocation(line: 153, column: 9, scope: !21080)
!21093 = !DILocation(line: 153, column: 15, scope: !21080)
!21094 = !DILocalVariable(name: "seeded", scope: !21080, file: !2423, line: 154, type: !692)
!21095 = !DILocation(line: 154, column: 11, scope: !21080)
!21096 = !DILocalVariable(name: "fd", scope: !21080, file: !2423, line: 157, type: !7)
!21097 = !DILocation(line: 157, column: 7, scope: !21080)
!21098 = !DILocation(line: 157, column: 12, scope: !21080)
!21099 = !DILocation(line: 158, column: 12, scope: !21100)
!21100 = distinct !DILexicalBlock(scope: !21080, file: !2423, line: 158, column: 7)
!21101 = !DILocation(line: 158, column: 9, scope: !21100)
!21102 = !DILocation(line: 158, column: 7, scope: !21080)
!21103 = !DILocation(line: 160, column: 22, scope: !21104)
!21104 = distinct !DILexicalBlock(scope: !21100, file: !2423, line: 159, column: 5)
!21105 = !DILocation(line: 160, column: 26, scope: !21104)
!21106 = !DILocation(line: 160, column: 31, scope: !21104)
!21107 = !DILocation(line: 160, column: 16, scope: !21104)
!21108 = !DILocation(line: 160, column: 14, scope: !21104)
!21109 = !DILocation(line: 161, column: 11, scope: !21110)
!21110 = distinct !DILexicalBlock(scope: !21104, file: !2423, line: 161, column: 11)
!21111 = !DILocation(line: 161, column: 18, scope: !21110)
!21112 = !DILocation(line: 161, column: 11, scope: !21104)
!21113 = !DILocation(line: 162, column: 16, scope: !21110)
!21114 = !DILocation(line: 162, column: 9, scope: !21110)
!21115 = !DILocation(line: 163, column: 14, scope: !21104)
!21116 = !DILocation(line: 163, column: 7, scope: !21104)
!21117 = !DILocation(line: 164, column: 5, scope: !21104)
!21118 = !DILocation(line: 177, column: 3, scope: !21119)
!21119 = distinct !DILexicalBlock(scope: !21080, file: !2423, line: 177, column: 3)
!21120 = !DILocation(line: 177, column: 3, scope: !21080)
!21121 = !DILocalVariable(name: "v", scope: !21122, file: !2423, line: 177, type: !21081)
!21122 = distinct !DILexicalBlock(scope: !21119, file: !2423, line: 177, column: 3)
!21123 = !DILocation(line: 177, column: 3, scope: !21122)
!21124 = !DILocalVariable(name: "nbytes", scope: !21122, file: !2423, line: 177, type: !55)
!21125 = !DILocation(line: 178, column: 3, scope: !21126)
!21126 = distinct !DILexicalBlock(scope: !21080, file: !2423, line: 178, column: 3)
!21127 = !DILocation(line: 178, column: 3, scope: !21080)
!21128 = !DILocalVariable(name: "v", scope: !21129, file: !2423, line: 178, type: !111)
!21129 = distinct !DILexicalBlock(scope: !21126, file: !2423, line: 178, column: 3)
!21130 = !DILocation(line: 178, column: 3, scope: !21129)
!21131 = !DILocalVariable(name: "nbytes", scope: !21129, file: !2423, line: 178, type: !55)
!21132 = !DILocation(line: 179, column: 3, scope: !21133)
!21133 = distinct !DILexicalBlock(scope: !21080, file: !2423, line: 179, column: 3)
!21134 = !DILocation(line: 179, column: 3, scope: !21080)
!21135 = !DILocalVariable(name: "v", scope: !21136, file: !2423, line: 179, type: !111)
!21136 = distinct !DILexicalBlock(scope: !21133, file: !2423, line: 179, column: 3)
!21137 = !DILocation(line: 179, column: 3, scope: !21136)
!21138 = !DILocalVariable(name: "nbytes", scope: !21136, file: !2423, line: 179, type: !55)
!21139 = !DILocation(line: 180, column: 3, scope: !21140)
!21140 = distinct !DILexicalBlock(scope: !21080, file: !2423, line: 180, column: 3)
!21141 = !DILocation(line: 180, column: 3, scope: !21080)
!21142 = !DILocalVariable(name: "v", scope: !21143, file: !2423, line: 180, type: !127)
!21143 = distinct !DILexicalBlock(scope: !21140, file: !2423, line: 180, column: 3)
!21144 = !DILocation(line: 180, column: 3, scope: !21143)
!21145 = !DILocalVariable(name: "nbytes", scope: !21143, file: !2423, line: 180, type: !55)
!21146 = !DILocation(line: 181, column: 3, scope: !21147)
!21147 = distinct !DILexicalBlock(scope: !21080, file: !2423, line: 181, column: 3)
!21148 = !DILocation(line: 181, column: 3, scope: !21080)
!21149 = !DILocalVariable(name: "v", scope: !21150, file: !2423, line: 181, type: !127)
!21150 = distinct !DILexicalBlock(scope: !21147, file: !2423, line: 181, column: 3)
!21151 = !DILocation(line: 181, column: 3, scope: !21150)
!21152 = !DILocalVariable(name: "nbytes", scope: !21150, file: !2423, line: 181, type: !55)
!21153 = !DILocation(line: 189, column: 1, scope: !21080)
!21154 = distinct !DISubprogram(name: "randread_error", scope: !2423, file: !2423, line: 124, type: !2462, scopeLine: 125, flags: DIFlagPrototyped | DIFlagNoReturn, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2416, retainedNodes: !209)
!21155 = !DILocalVariable(name: "file_name", arg: 1, scope: !21154, file: !2423, line: 124, type: !513)
!21156 = !DILocation(line: 124, column: 29, scope: !21154)
!21157 = !DILocation(line: 126, column: 7, scope: !21158)
!21158 = distinct !DILexicalBlock(scope: !21154, file: !2423, line: 126, column: 7)
!21159 = !DILocation(line: 126, column: 7, scope: !21154)
!21160 = !DILocation(line: 127, column: 12, scope: !21158)
!21161 = !DILocation(line: 127, column: 26, scope: !21158)
!21162 = !DILocation(line: 128, column: 12, scope: !21158)
!21163 = !DILocation(line: 128, column: 18, scope: !21158)
!21164 = !DILocation(line: 128, column: 25, scope: !21158)
!21165 = !DILocation(line: 128, column: 48, scope: !21158)
!21166 = !DILocation(line: 129, column: 19, scope: !21158)
!21167 = !DILocation(line: 129, column: 12, scope: !21158)
!21168 = !DILocation(line: 127, column: 5, scope: !21158)
!21169 = !DILocation(line: 130, column: 3, scope: !21154)
!21170 = distinct !DISubprogram(name: "randread_set_handler", scope: !2423, file: !2423, line: 242, type: !2493, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2416, retainedNodes: !209)
!21171 = !DILocalVariable(name: "s", arg: 1, scope: !21170, file: !2423, line: 242, type: !2421)
!21172 = !DILocation(line: 242, column: 47, scope: !21170)
!21173 = !DILocalVariable(name: "handler", arg: 2, scope: !21170, file: !2423, line: 242, type: !2461)
!21174 = !DILocation(line: 242, column: 57, scope: !21170)
!21175 = !DILocation(line: 244, column: 16, scope: !21170)
!21176 = !DILocation(line: 244, column: 3, scope: !21170)
!21177 = !DILocation(line: 244, column: 6, scope: !21170)
!21178 = !DILocation(line: 244, column: 14, scope: !21170)
!21179 = !DILocation(line: 245, column: 1, scope: !21170)
!21180 = distinct !DISubprogram(name: "randread_set_handler_arg", scope: !2423, file: !2423, line: 248, type: !2495, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2416, retainedNodes: !209)
!21181 = !DILocalVariable(name: "s", arg: 1, scope: !21180, file: !2423, line: 248, type: !2421)
!21182 = !DILocation(line: 248, column: 51, scope: !21180)
!21183 = !DILocalVariable(name: "handler_arg", arg: 2, scope: !21180, file: !2423, line: 248, type: !513)
!21184 = !DILocation(line: 248, column: 66, scope: !21180)
!21185 = !DILocation(line: 250, column: 20, scope: !21180)
!21186 = !DILocation(line: 250, column: 3, scope: !21180)
!21187 = !DILocation(line: 250, column: 6, scope: !21180)
!21188 = !DILocation(line: 250, column: 18, scope: !21180)
!21189 = !DILocation(line: 251, column: 1, scope: !21180)
!21190 = distinct !DISubprogram(name: "randread", scope: !2423, file: !2423, line: 326, type: !2497, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2416, retainedNodes: !209)
!21191 = !DILocalVariable(name: "s", arg: 1, scope: !21190, file: !2423, line: 326, type: !2421)
!21192 = !DILocation(line: 326, column: 35, scope: !21190)
!21193 = !DILocalVariable(name: "buf", arg: 2, scope: !21190, file: !2423, line: 326, type: !53)
!21194 = !DILocation(line: 326, column: 44, scope: !21190)
!21195 = !DILocalVariable(name: "size", arg: 3, scope: !21190, file: !2423, line: 326, type: !55)
!21196 = !DILocation(line: 326, column: 56, scope: !21190)
!21197 = !DILocation(line: 328, column: 7, scope: !21198)
!21198 = distinct !DILexicalBlock(scope: !21190, file: !2423, line: 328, column: 7)
!21199 = !DILocation(line: 328, column: 10, scope: !21198)
!21200 = !DILocation(line: 328, column: 7, scope: !21190)
!21201 = !DILocation(line: 329, column: 17, scope: !21198)
!21202 = !DILocation(line: 329, column: 20, scope: !21198)
!21203 = !DILocation(line: 329, column: 25, scope: !21198)
!21204 = !DILocation(line: 329, column: 5, scope: !21198)
!21205 = !DILocation(line: 331, column: 17, scope: !21198)
!21206 = !DILocation(line: 331, column: 20, scope: !21198)
!21207 = !DILocation(line: 331, column: 24, scope: !21198)
!21208 = !DILocation(line: 331, column: 31, scope: !21198)
!21209 = !DILocation(line: 331, column: 36, scope: !21198)
!21210 = !DILocation(line: 331, column: 5, scope: !21198)
!21211 = !DILocation(line: 332, column: 1, scope: !21190)
!21212 = distinct !DISubprogram(name: "readsource", scope: !2423, file: !2423, line: 258, type: !2505, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2416, retainedNodes: !209)
!21213 = !DILocalVariable(name: "s", arg: 1, scope: !21212, file: !2423, line: 258, type: !2421)
!21214 = !DILocation(line: 258, column: 37, scope: !21212)
!21215 = !DILocalVariable(name: "p", arg: 2, scope: !21212, file: !2423, line: 258, type: !2507)
!21216 = !DILocation(line: 258, column: 55, scope: !21212)
!21217 = !DILocalVariable(name: "size", arg: 3, scope: !21212, file: !2423, line: 258, type: !55)
!21218 = !DILocation(line: 258, column: 65, scope: !21212)
!21219 = !DILocation(line: 260, column: 3, scope: !21212)
!21220 = !DILocalVariable(name: "inbytes", scope: !21221, file: !2423, line: 262, type: !55)
!21221 = distinct !DILexicalBlock(scope: !21212, file: !2423, line: 261, column: 5)
!21222 = !DILocation(line: 262, column: 14, scope: !21221)
!21223 = !DILocation(line: 262, column: 24, scope: !21221)
!21224 = !DILocalVariable(name: "fread_errno", scope: !21221, file: !2423, line: 263, type: !7)
!21225 = !DILocation(line: 263, column: 11, scope: !21221)
!21226 = !DILocation(line: 263, column: 25, scope: !21221)
!21227 = !DILocation(line: 264, column: 12, scope: !21221)
!21228 = !DILocation(line: 264, column: 9, scope: !21221)
!21229 = !DILocation(line: 265, column: 15, scope: !21221)
!21230 = !DILocation(line: 265, column: 12, scope: !21221)
!21231 = !DILocation(line: 266, column: 11, scope: !21232)
!21232 = distinct !DILexicalBlock(scope: !21221, file: !2423, line: 266, column: 11)
!21233 = !DILocation(line: 266, column: 16, scope: !21232)
!21234 = !DILocation(line: 266, column: 11, scope: !21221)
!21235 = !DILocation(line: 267, column: 9, scope: !21232)
!21236 = !DILocation(line: 268, column: 16, scope: !21221)
!21237 = !DILocation(line: 268, column: 37, scope: !21221)
!21238 = !DILocation(line: 268, column: 7, scope: !21221)
!21239 = !DILocation(line: 268, column: 13, scope: !21221)
!21240 = !DILocation(line: 269, column: 7, scope: !21221)
!21241 = !DILocation(line: 269, column: 10, scope: !21221)
!21242 = !DILocation(line: 269, column: 19, scope: !21221)
!21243 = !DILocation(line: 269, column: 22, scope: !21221)
!21244 = distinct !{!21244, !21219, !21245}
!21245 = !DILocation(line: 270, column: 5, scope: !21212)
!21246 = !DILocation(line: 271, column: 1, scope: !21212)
!21247 = distinct !DISubprogram(name: "readisaac", scope: !2423, file: !2423, line: 278, type: !2508, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2416, retainedNodes: !209)
!21248 = !DILocalVariable(name: "isaac", arg: 1, scope: !21247, file: !2423, line: 278, type: !2510)
!21249 = !DILocation(line: 278, column: 26, scope: !21247)
!21250 = !DILocalVariable(name: "p", arg: 2, scope: !21247, file: !2423, line: 278, type: !53)
!21251 = !DILocation(line: 278, column: 39, scope: !21247)
!21252 = !DILocalVariable(name: "size", arg: 3, scope: !21247, file: !2423, line: 278, type: !55)
!21253 = !DILocation(line: 278, column: 49, scope: !21247)
!21254 = !DILocalVariable(name: "inbytes", scope: !21247, file: !2423, line: 280, type: !55)
!21255 = !DILocation(line: 280, column: 10, scope: !21247)
!21256 = !DILocation(line: 280, column: 20, scope: !21247)
!21257 = !DILocation(line: 280, column: 27, scope: !21247)
!21258 = !{!21259, !2913, i64 0}
!21259 = !{!"isaac", !2913, i64 0, !21260, i64 8, !2634, i64 2080}
!21260 = !{!"isaac_state", !2634, i64 0, !2913, i64 2048, !2913, i64 2056, !2913, i64 2064}
!21261 = !DILocation(line: 282, column: 3, scope: !21247)
!21262 = !DILocalVariable(name: "char_p", scope: !21263, file: !2423, line: 284, type: !9)
!21263 = distinct !DILexicalBlock(scope: !21247, file: !2423, line: 283, column: 5)
!21264 = !DILocation(line: 284, column: 13, scope: !21263)
!21265 = !DILocation(line: 284, column: 22, scope: !21263)
!21266 = !DILocation(line: 286, column: 11, scope: !21267)
!21267 = distinct !DILexicalBlock(scope: !21263, file: !2423, line: 286, column: 11)
!21268 = !DILocation(line: 286, column: 19, scope: !21267)
!21269 = !DILocation(line: 286, column: 16, scope: !21267)
!21270 = !DILocation(line: 286, column: 11, scope: !21263)
!21271 = !DILocation(line: 288, column: 19, scope: !21272)
!21272 = distinct !DILexicalBlock(scope: !21267, file: !2423, line: 287, column: 9)
!21273 = !DILocation(line: 288, column: 22, scope: !21272)
!21274 = !DILocation(line: 288, column: 29, scope: !21272)
!21275 = !DILocation(line: 288, column: 34, scope: !21272)
!21276 = !DILocation(line: 288, column: 36, scope: !21272)
!21277 = !DILocation(line: 288, column: 52, scope: !21272)
!21278 = !DILocation(line: 288, column: 50, scope: !21272)
!21279 = !DILocation(line: 288, column: 61, scope: !21272)
!21280 = !DILocation(line: 288, column: 11, scope: !21272)
!21281 = !DILocation(line: 289, column: 29, scope: !21272)
!21282 = !DILocation(line: 289, column: 39, scope: !21272)
!21283 = !DILocation(line: 289, column: 37, scope: !21272)
!21284 = !DILocation(line: 289, column: 11, scope: !21272)
!21285 = !DILocation(line: 289, column: 18, scope: !21272)
!21286 = !DILocation(line: 289, column: 27, scope: !21272)
!21287 = !DILocation(line: 290, column: 11, scope: !21272)
!21288 = !DILocation(line: 293, column: 15, scope: !21263)
!21289 = !DILocation(line: 293, column: 18, scope: !21263)
!21290 = !DILocation(line: 293, column: 25, scope: !21263)
!21291 = !DILocation(line: 293, column: 30, scope: !21263)
!21292 = !DILocation(line: 293, column: 32, scope: !21263)
!21293 = !DILocation(line: 293, column: 48, scope: !21263)
!21294 = !DILocation(line: 293, column: 46, scope: !21263)
!21295 = !DILocation(line: 293, column: 57, scope: !21263)
!21296 = !DILocation(line: 293, column: 7, scope: !21263)
!21297 = !DILocation(line: 294, column: 11, scope: !21263)
!21298 = !DILocation(line: 294, column: 20, scope: !21263)
!21299 = !DILocation(line: 294, column: 18, scope: !21263)
!21300 = !DILocation(line: 294, column: 9, scope: !21263)
!21301 = !DILocation(line: 295, column: 15, scope: !21263)
!21302 = !DILocation(line: 295, column: 12, scope: !21263)
!21303 = !DILocation(line: 299, column: 11, scope: !21304)
!21304 = distinct !DILexicalBlock(scope: !21263, file: !2423, line: 299, column: 11)
!21305 = !DILocation(line: 299, column: 11, scope: !21263)
!21306 = !DILocalVariable(name: "wp", scope: !21307, file: !2423, line: 301, type: !2511)
!21307 = distinct !DILexicalBlock(scope: !21304, file: !2423, line: 300, column: 9)
!21308 = !DILocation(line: 301, column: 23, scope: !21307)
!21309 = !DILocation(line: 301, column: 28, scope: !21307)
!21310 = !DILocation(line: 302, column: 11, scope: !21307)
!21311 = !DILocation(line: 302, column: 33, scope: !21307)
!21312 = !DILocation(line: 302, column: 30, scope: !21307)
!21313 = !DILocation(line: 304, column: 30, scope: !21314)
!21314 = distinct !DILexicalBlock(scope: !21307, file: !2423, line: 303, column: 13)
!21315 = !DILocation(line: 304, column: 37, scope: !21314)
!21316 = !DILocation(line: 304, column: 44, scope: !21314)
!21317 = !DILocation(line: 304, column: 15, scope: !21314)
!21318 = !DILocation(line: 305, column: 18, scope: !21314)
!21319 = !DILocation(line: 306, column: 20, scope: !21314)
!21320 = !DILocation(line: 307, column: 19, scope: !21321)
!21321 = distinct !DILexicalBlock(scope: !21314, file: !2423, line: 307, column: 19)
!21322 = !DILocation(line: 307, column: 24, scope: !21321)
!21323 = !DILocation(line: 307, column: 19, scope: !21314)
!21324 = !DILocation(line: 309, column: 19, scope: !21325)
!21325 = distinct !DILexicalBlock(scope: !21321, file: !2423, line: 308, column: 17)
!21326 = !DILocation(line: 309, column: 26, scope: !21325)
!21327 = !DILocation(line: 309, column: 35, scope: !21325)
!21328 = !DILocation(line: 310, column: 19, scope: !21325)
!21329 = distinct !{!21329, !21310, !21330}
!21330 = !DILocation(line: 312, column: 13, scope: !21307)
!21331 = !DILocation(line: 313, column: 15, scope: !21307)
!21332 = !DILocation(line: 313, column: 13, scope: !21307)
!21333 = !DILocation(line: 314, column: 9, scope: !21307)
!21334 = !DILocation(line: 316, column: 22, scope: !21263)
!21335 = !DILocation(line: 316, column: 29, scope: !21263)
!21336 = !DILocation(line: 316, column: 36, scope: !21263)
!21337 = !DILocation(line: 316, column: 43, scope: !21263)
!21338 = !DILocation(line: 316, column: 48, scope: !21263)
!21339 = !DILocation(line: 316, column: 7, scope: !21263)
!21340 = !DILocation(line: 317, column: 15, scope: !21263)
!21341 = distinct !{!21341, !21261, !21342}
!21342 = !DILocation(line: 318, column: 5, scope: !21247)
!21343 = !DILocation(line: 319, column: 1, scope: !21247)
!21344 = distinct !DISubprogram(name: "randread_free", scope: !2423, file: !2423, line: 341, type: !2499, scopeLine: 342, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2416, retainedNodes: !209)
!21345 = !DILocalVariable(name: "s", arg: 1, scope: !21344, file: !2423, line: 341, type: !2421)
!21346 = !DILocation(line: 341, column: 40, scope: !21344)
!21347 = !DILocalVariable(name: "source", scope: !21344, file: !2423, line: 343, type: !2426)
!21348 = !DILocation(line: 343, column: 9, scope: !21344)
!21349 = !DILocation(line: 343, column: 18, scope: !21344)
!21350 = !DILocation(line: 343, column: 21, scope: !21344)
!21351 = !DILocation(line: 344, column: 19, scope: !21344)
!21352 = !DILocation(line: 344, column: 3, scope: !21344)
!21353 = !DILocation(line: 345, column: 9, scope: !21344)
!21354 = !DILocation(line: 345, column: 3, scope: !21344)
!21355 = !DILocation(line: 346, column: 11, scope: !21344)
!21356 = !DILocation(line: 346, column: 28, scope: !21344)
!21357 = !DILocation(line: 346, column: 20, scope: !21344)
!21358 = !DILocation(line: 346, column: 3, scope: !21344)
!21359 = distinct !DISubprogram(name: "isaac_refill", scope: !21360, file: !21360, line: 90, type: !2515, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2512, retainedNodes: !209)
!21360 = !DIFile(filename: "lib/rand-isaac.c", directory: "/home/mbarbar/software/coreutils-8.31")
!21361 = !DILocalVariable(name: "s", arg: 1, scope: !21359, file: !21360, line: 90, type: !2517)
!21362 = !DILocation(line: 90, column: 35, scope: !21359)
!21363 = !DILocalVariable(name: "result", arg: 2, scope: !21359, file: !21360, line: 90, type: !2511)
!21364 = !DILocation(line: 90, column: 49, scope: !21359)
!21365 = !DILocalVariable(name: "a", scope: !21359, file: !21360, line: 93, type: !2479)
!21366 = !DILocation(line: 93, column: 14, scope: !21359)
!21367 = !DILocation(line: 93, column: 18, scope: !21359)
!21368 = !DILocation(line: 93, column: 21, scope: !21359)
!21369 = !{!21260, !2913, i64 2048}
!21370 = !DILocalVariable(name: "b", scope: !21359, file: !21360, line: 94, type: !2479)
!21371 = !DILocation(line: 94, column: 14, scope: !21359)
!21372 = !DILocation(line: 94, column: 18, scope: !21359)
!21373 = !DILocation(line: 94, column: 21, scope: !21359)
!21374 = !{!21260, !2913, i64 2056}
!21375 = !DILocation(line: 94, column: 28, scope: !21359)
!21376 = !DILocation(line: 94, column: 31, scope: !21359)
!21377 = !DILocation(line: 94, column: 26, scope: !21359)
!21378 = !{!21260, !2913, i64 2064}
!21379 = !DILocation(line: 94, column: 23, scope: !21359)
!21380 = !DILocalVariable(name: "m", scope: !21359, file: !21360, line: 97, type: !2511)
!21381 = !DILocation(line: 97, column: 15, scope: !21359)
!21382 = !DILocation(line: 97, column: 19, scope: !21359)
!21383 = !DILocation(line: 97, column: 22, scope: !21359)
!21384 = !DILocalVariable(name: "r", scope: !21359, file: !21360, line: 98, type: !2511)
!21385 = !DILocation(line: 98, column: 15, scope: !21359)
!21386 = !DILocation(line: 98, column: 19, scope: !21359)
!21387 = !DILocation(line: 116, column: 3, scope: !21359)
!21388 = !DILocalVariable(name: "x", scope: !21389, file: !21360, line: 118, type: !2479)
!21389 = distinct !DILexicalBlock(scope: !21390, file: !21360, line: 118, column: 7)
!21390 = distinct !DILexicalBlock(scope: !21359, file: !21360, line: 117, column: 5)
!21391 = !DILocation(line: 118, column: 7, scope: !21389)
!21392 = !DILocalVariable(name: "y", scope: !21389, file: !21360, line: 118, type: !2479)
!21393 = !DILocalVariable(name: "x", scope: !21394, file: !21360, line: 119, type: !2479)
!21394 = distinct !DILexicalBlock(scope: !21390, file: !21360, line: 119, column: 7)
!21395 = !DILocation(line: 119, column: 7, scope: !21394)
!21396 = !DILocalVariable(name: "y", scope: !21394, file: !21360, line: 119, type: !2479)
!21397 = !DILocalVariable(name: "x", scope: !21398, file: !21360, line: 120, type: !2479)
!21398 = distinct !DILexicalBlock(scope: !21390, file: !21360, line: 120, column: 7)
!21399 = !DILocation(line: 120, column: 7, scope: !21398)
!21400 = !DILocalVariable(name: "y", scope: !21398, file: !21360, line: 120, type: !2479)
!21401 = !DILocalVariable(name: "x", scope: !21402, file: !21360, line: 121, type: !2479)
!21402 = distinct !DILexicalBlock(scope: !21390, file: !21360, line: 121, column: 7)
!21403 = !DILocation(line: 121, column: 7, scope: !21402)
!21404 = !DILocalVariable(name: "y", scope: !21402, file: !21360, line: 121, type: !2479)
!21405 = !DILocation(line: 122, column: 9, scope: !21390)
!21406 = !DILocation(line: 123, column: 5, scope: !21390)
!21407 = !DILocation(line: 124, column: 13, scope: !21359)
!21408 = !DILocation(line: 124, column: 21, scope: !21359)
!21409 = !DILocation(line: 124, column: 24, scope: !21359)
!21410 = !DILocation(line: 124, column: 26, scope: !21359)
!21411 = !DILocation(line: 124, column: 19, scope: !21359)
!21412 = distinct !{!21412, !21387, !21413}
!21413 = !DILocation(line: 124, column: 32, scope: !21359)
!21414 = !DILocation(line: 126, column: 3, scope: !21359)
!21415 = !DILocalVariable(name: "x", scope: !21416, file: !21360, line: 128, type: !2479)
!21416 = distinct !DILexicalBlock(scope: !21417, file: !21360, line: 128, column: 7)
!21417 = distinct !DILexicalBlock(scope: !21359, file: !21360, line: 127, column: 5)
!21418 = !DILocation(line: 128, column: 7, scope: !21416)
!21419 = !DILocalVariable(name: "y", scope: !21416, file: !21360, line: 128, type: !2479)
!21420 = !DILocalVariable(name: "x", scope: !21421, file: !21360, line: 129, type: !2479)
!21421 = distinct !DILexicalBlock(scope: !21417, file: !21360, line: 129, column: 7)
!21422 = !DILocation(line: 129, column: 7, scope: !21421)
!21423 = !DILocalVariable(name: "y", scope: !21421, file: !21360, line: 129, type: !2479)
!21424 = !DILocalVariable(name: "x", scope: !21425, file: !21360, line: 130, type: !2479)
!21425 = distinct !DILexicalBlock(scope: !21417, file: !21360, line: 130, column: 7)
!21426 = !DILocation(line: 130, column: 7, scope: !21425)
!21427 = !DILocalVariable(name: "y", scope: !21425, file: !21360, line: 130, type: !2479)
!21428 = !DILocalVariable(name: "x", scope: !21429, file: !21360, line: 131, type: !2479)
!21429 = distinct !DILexicalBlock(scope: !21417, file: !21360, line: 131, column: 7)
!21430 = !DILocation(line: 131, column: 7, scope: !21429)
!21431 = !DILocalVariable(name: "y", scope: !21429, file: !21360, line: 131, type: !2479)
!21432 = !DILocation(line: 132, column: 9, scope: !21417)
!21433 = !DILocation(line: 133, column: 5, scope: !21417)
!21434 = !DILocation(line: 134, column: 13, scope: !21359)
!21435 = !DILocation(line: 134, column: 21, scope: !21359)
!21436 = !DILocation(line: 134, column: 24, scope: !21359)
!21437 = !DILocation(line: 134, column: 26, scope: !21359)
!21438 = !DILocation(line: 134, column: 19, scope: !21359)
!21439 = distinct !{!21439, !21414, !21440}
!21440 = !DILocation(line: 134, column: 39, scope: !21359)
!21441 = !DILocation(line: 136, column: 10, scope: !21359)
!21442 = !DILocation(line: 136, column: 3, scope: !21359)
!21443 = !DILocation(line: 136, column: 6, scope: !21359)
!21444 = !DILocation(line: 136, column: 8, scope: !21359)
!21445 = !DILocation(line: 137, column: 10, scope: !21359)
!21446 = !DILocation(line: 137, column: 3, scope: !21359)
!21447 = !DILocation(line: 137, column: 6, scope: !21359)
!21448 = !DILocation(line: 137, column: 8, scope: !21359)
!21449 = !DILocation(line: 138, column: 1, scope: !21359)
!21450 = distinct !DISubprogram(name: "ind", scope: !21360, file: !21360, line: 68, type: !2526, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2512, retainedNodes: !209)
!21451 = !DILocalVariable(name: "m", arg: 1, scope: !21450, file: !21360, line: 68, type: !2528)
!21452 = !DILocation(line: 68, column: 24, scope: !21450)
!21453 = !DILocalVariable(name: "x", arg: 2, scope: !21450, file: !21360, line: 68, type: !2479)
!21454 = !DILocation(line: 68, column: 38, scope: !21450)
!21455 = !DILocalVariable(name: "void_m", scope: !21456, file: !21360, line: 75, type: !513)
!21456 = distinct !DILexicalBlock(scope: !21457, file: !21360, line: 71, column: 5)
!21457 = distinct !DILexicalBlock(scope: !21450, file: !21360, line: 70, column: 7)
!21458 = !DILocation(line: 75, column: 19, scope: !21456)
!21459 = !DILocation(line: 75, column: 28, scope: !21456)
!21460 = !DILocalVariable(name: "base_p", scope: !21456, file: !21360, line: 76, type: !180)
!21461 = !DILocation(line: 76, column: 19, scope: !21456)
!21462 = !DILocation(line: 76, column: 28, scope: !21456)
!21463 = !DILocalVariable(name: "word_p", scope: !21456, file: !21360, line: 77, type: !513)
!21464 = !DILocation(line: 77, column: 19, scope: !21456)
!21465 = !DILocation(line: 77, column: 28, scope: !21456)
!21466 = !DILocation(line: 77, column: 38, scope: !21456)
!21467 = !DILocation(line: 77, column: 40, scope: !21456)
!21468 = !DILocation(line: 77, column: 35, scope: !21456)
!21469 = !DILocalVariable(name: "p", scope: !21456, file: !21360, line: 78, type: !2528)
!21470 = !DILocation(line: 78, column: 25, scope: !21456)
!21471 = !DILocation(line: 78, column: 29, scope: !21456)
!21472 = !DILocation(line: 79, column: 15, scope: !21456)
!21473 = !DILocation(line: 79, column: 14, scope: !21456)
!21474 = !DILocation(line: 79, column: 7, scope: !21456)
!21475 = distinct !DISubprogram(name: "just", scope: !21360, file: !21360, line: 60, type: !2530, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2512, retainedNodes: !209)
!21476 = !DILocalVariable(name: "a", arg: 1, scope: !21475, file: !21360, line: 60, type: !2479)
!21477 = !DILocation(line: 60, column: 18, scope: !21475)
!21478 = !DILocalVariable(name: "desired_bits", scope: !21475, file: !21360, line: 62, type: !2479)
!21479 = !DILocation(line: 62, column: 14, scope: !21475)
!21480 = !DILocation(line: 63, column: 10, scope: !21475)
!21481 = !DILocation(line: 63, column: 14, scope: !21475)
!21482 = !DILocation(line: 63, column: 12, scope: !21475)
!21483 = !DILocation(line: 63, column: 3, scope: !21475)
!21484 = distinct !DISubprogram(name: "isaac_seed", scope: !21360, file: !21360, line: 248, type: !2524, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2512, retainedNodes: !209)
!21485 = !DILocalVariable(name: "s", arg: 1, scope: !21484, file: !21360, line: 248, type: !2517)
!21486 = !DILocation(line: 248, column: 33, scope: !21484)
!21487 = !DILocalVariable(name: "a", scope: !21484, file: !21360, line: 250, type: !2479)
!21488 = !DILocation(line: 250, column: 14, scope: !21484)
!21489 = !DILocalVariable(name: "b", scope: !21484, file: !21360, line: 251, type: !2479)
!21490 = !DILocation(line: 251, column: 14, scope: !21484)
!21491 = !DILocalVariable(name: "c", scope: !21484, file: !21360, line: 252, type: !2479)
!21492 = !DILocation(line: 252, column: 14, scope: !21484)
!21493 = !DILocalVariable(name: "d", scope: !21484, file: !21360, line: 253, type: !2479)
!21494 = !DILocation(line: 253, column: 14, scope: !21484)
!21495 = !DILocalVariable(name: "e", scope: !21484, file: !21360, line: 254, type: !2479)
!21496 = !DILocation(line: 254, column: 14, scope: !21484)
!21497 = !DILocalVariable(name: "f", scope: !21484, file: !21360, line: 255, type: !2479)
!21498 = !DILocation(line: 255, column: 14, scope: !21484)
!21499 = !DILocalVariable(name: "g", scope: !21484, file: !21360, line: 256, type: !2479)
!21500 = !DILocation(line: 256, column: 14, scope: !21484)
!21501 = !DILocalVariable(name: "h", scope: !21484, file: !21360, line: 257, type: !2479)
!21502 = !DILocation(line: 257, column: 14, scope: !21484)
!21503 = !DILocalVariable(name: "i", scope: !21504, file: !21360, line: 269, type: !7)
!21504 = distinct !DILexicalBlock(scope: !21484, file: !21360, line: 269, column: 3)
!21505 = !DILocation(line: 269, column: 3, scope: !21504)
!21506 = !DILocation(line: 269, column: 3, scope: !21507)
!21507 = distinct !DILexicalBlock(scope: !21504, file: !21360, line: 269, column: 3)
!21508 = !DILocation(line: 269, column: 3, scope: !21509)
!21509 = distinct !DILexicalBlock(scope: !21507, file: !21360, line: 269, column: 3)
!21510 = !DILocation(line: 269, column: 3, scope: !21511)
!21511 = distinct !DILexicalBlock(scope: !21509, file: !21360, line: 269, column: 3)
!21512 = !DILocation(line: 269, column: 3, scope: !21513)
!21513 = distinct !DILexicalBlock(scope: !21511, file: !21360, line: 269, column: 3)
!21514 = distinct !{!21514, !21506, !21506}
!21515 = !DILocalVariable(name: "i", scope: !21516, file: !21360, line: 270, type: !7)
!21516 = distinct !DILexicalBlock(scope: !21484, file: !21360, line: 270, column: 3)
!21517 = !DILocation(line: 270, column: 3, scope: !21516)
!21518 = !DILocation(line: 270, column: 3, scope: !21519)
!21519 = distinct !DILexicalBlock(scope: !21516, file: !21360, line: 270, column: 3)
!21520 = !DILocation(line: 270, column: 3, scope: !21521)
!21521 = distinct !DILexicalBlock(scope: !21519, file: !21360, line: 270, column: 3)
!21522 = !DILocation(line: 270, column: 3, scope: !21523)
!21523 = distinct !DILexicalBlock(scope: !21521, file: !21360, line: 270, column: 3)
!21524 = !DILocation(line: 270, column: 3, scope: !21525)
!21525 = distinct !DILexicalBlock(scope: !21523, file: !21360, line: 270, column: 3)
!21526 = distinct !{!21526, !21518, !21518}
!21527 = !DILocation(line: 272, column: 17, scope: !21484)
!21528 = !DILocation(line: 272, column: 20, scope: !21484)
!21529 = !DILocation(line: 272, column: 22, scope: !21484)
!21530 = !DILocation(line: 272, column: 10, scope: !21484)
!21531 = !DILocation(line: 272, column: 13, scope: !21484)
!21532 = !DILocation(line: 272, column: 15, scope: !21484)
!21533 = !DILocation(line: 272, column: 3, scope: !21484)
!21534 = !DILocation(line: 272, column: 6, scope: !21484)
!21535 = !DILocation(line: 272, column: 8, scope: !21484)
!21536 = !DILocation(line: 273, column: 1, scope: !21484)
!21537 = distinct !DISubprogram(name: "dup_safer", scope: !21538, file: !21538, line: 31, type: !1784, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2532, retainedNodes: !209)
!21538 = !DIFile(filename: "lib/dup-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!21539 = !DILocalVariable(name: "fd", arg: 1, scope: !21537, file: !21538, line: 31, type: !7)
!21540 = !DILocation(line: 31, column: 16, scope: !21537)
!21541 = !DILocation(line: 33, column: 17, scope: !21537)
!21542 = !DILocation(line: 33, column: 10, scope: !21537)
!21543 = !DILocation(line: 33, column: 3, scope: !21537)
!21544 = distinct !DISubprogram(name: "xsum", scope: !21545, file: !21545, line: 63, type: !2538, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2535, retainedNodes: !209)
!21545 = !DIFile(filename: "./lib/xsize.h", directory: "/home/mbarbar/software/coreutils-8.31")
!21546 = !DILocalVariable(name: "size1", arg: 1, scope: !21544, file: !21545, line: 63, type: !55)
!21547 = !DILocation(line: 63, column: 14, scope: !21544)
!21548 = !DILocalVariable(name: "size2", arg: 2, scope: !21544, file: !21545, line: 63, type: !55)
!21549 = !DILocation(line: 63, column: 28, scope: !21544)
!21550 = !DILocalVariable(name: "sum", scope: !21544, file: !21545, line: 65, type: !55)
!21551 = !DILocation(line: 65, column: 10, scope: !21544)
!21552 = !DILocation(line: 65, column: 16, scope: !21544)
!21553 = !DILocation(line: 65, column: 24, scope: !21544)
!21554 = !DILocation(line: 65, column: 22, scope: !21544)
!21555 = !DILocation(line: 66, column: 11, scope: !21544)
!21556 = !DILocation(line: 66, column: 18, scope: !21544)
!21557 = !DILocation(line: 66, column: 15, scope: !21544)
!21558 = !DILocation(line: 66, column: 26, scope: !21544)
!21559 = !DILocation(line: 66, column: 3, scope: !21544)
!21560 = distinct !DISubprogram(name: "xsum3", scope: !21545, file: !21545, line: 74, type: !1530, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2535, retainedNodes: !209)
!21561 = !DILocalVariable(name: "size1", arg: 1, scope: !21560, file: !21545, line: 74, type: !55)
!21562 = !DILocation(line: 74, column: 15, scope: !21560)
!21563 = !DILocalVariable(name: "size2", arg: 2, scope: !21560, file: !21545, line: 74, type: !55)
!21564 = !DILocation(line: 74, column: 29, scope: !21560)
!21565 = !DILocalVariable(name: "size3", arg: 3, scope: !21560, file: !21545, line: 74, type: !55)
!21566 = !DILocation(line: 74, column: 43, scope: !21560)
!21567 = !DILocation(line: 76, column: 22, scope: !21560)
!21568 = !DILocation(line: 76, column: 29, scope: !21560)
!21569 = !DILocation(line: 76, column: 16, scope: !21560)
!21570 = !DILocation(line: 76, column: 37, scope: !21560)
!21571 = !DILocation(line: 76, column: 10, scope: !21560)
!21572 = !DILocation(line: 76, column: 3, scope: !21560)
!21573 = distinct !DISubprogram(name: "xsum4", scope: !21545, file: !21545, line: 84, type: !2540, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2535, retainedNodes: !209)
!21574 = !DILocalVariable(name: "size1", arg: 1, scope: !21573, file: !21545, line: 84, type: !55)
!21575 = !DILocation(line: 84, column: 15, scope: !21573)
!21576 = !DILocalVariable(name: "size2", arg: 2, scope: !21573, file: !21545, line: 84, type: !55)
!21577 = !DILocation(line: 84, column: 29, scope: !21573)
!21578 = !DILocalVariable(name: "size3", arg: 3, scope: !21573, file: !21545, line: 84, type: !55)
!21579 = !DILocation(line: 84, column: 43, scope: !21573)
!21580 = !DILocalVariable(name: "size4", arg: 4, scope: !21573, file: !21545, line: 84, type: !55)
!21581 = !DILocation(line: 84, column: 57, scope: !21573)
!21582 = !DILocation(line: 86, column: 28, scope: !21573)
!21583 = !DILocation(line: 86, column: 35, scope: !21573)
!21584 = !DILocation(line: 86, column: 22, scope: !21573)
!21585 = !DILocation(line: 86, column: 43, scope: !21573)
!21586 = !DILocation(line: 86, column: 16, scope: !21573)
!21587 = !DILocation(line: 86, column: 51, scope: !21573)
!21588 = !DILocation(line: 86, column: 10, scope: !21573)
!21589 = !DILocation(line: 86, column: 3, scope: !21573)
!21590 = distinct !DISubprogram(name: "xmax", scope: !21545, file: !21545, line: 94, type: !2538, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2535, retainedNodes: !209)
!21591 = !DILocalVariable(name: "size1", arg: 1, scope: !21590, file: !21545, line: 94, type: !55)
!21592 = !DILocation(line: 94, column: 14, scope: !21590)
!21593 = !DILocalVariable(name: "size2", arg: 2, scope: !21590, file: !21545, line: 94, type: !55)
!21594 = !DILocation(line: 94, column: 28, scope: !21590)
!21595 = !DILocation(line: 98, column: 11, scope: !21590)
!21596 = !DILocation(line: 98, column: 20, scope: !21590)
!21597 = !DILocation(line: 98, column: 17, scope: !21590)
!21598 = !DILocation(line: 98, column: 28, scope: !21590)
!21599 = !DILocation(line: 98, column: 36, scope: !21590)
!21600 = !DILocation(line: 98, column: 3, scope: !21590)
!21601 = distinct !DISubprogram(name: "rpl_fclose", scope: !21602, file: !21602, line: 58, type: !2545, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2542, retainedNodes: !209)
!21602 = !DIFile(filename: "lib/fclose.c", directory: "/home/mbarbar/software/coreutils-8.31")
!21603 = !DILocalVariable(name: "fp", arg: 1, scope: !21601, file: !21602, line: 58, type: !2547)
!21604 = !DILocation(line: 58, column: 19, scope: !21601)
!21605 = !DILocalVariable(name: "saved_errno", scope: !21601, file: !21602, line: 60, type: !7)
!21606 = !DILocation(line: 60, column: 7, scope: !21601)
!21607 = !DILocalVariable(name: "fd", scope: !21601, file: !21602, line: 61, type: !7)
!21608 = !DILocation(line: 61, column: 7, scope: !21601)
!21609 = !DILocalVariable(name: "result", scope: !21601, file: !21602, line: 62, type: !7)
!21610 = !DILocation(line: 62, column: 7, scope: !21601)
!21611 = !DILocation(line: 65, column: 16, scope: !21601)
!21612 = !DILocation(line: 65, column: 8, scope: !21601)
!21613 = !DILocation(line: 65, column: 6, scope: !21601)
!21614 = !DILocation(line: 66, column: 7, scope: !21615)
!21615 = distinct !DILexicalBlock(scope: !21601, file: !21602, line: 66, column: 7)
!21616 = !DILocation(line: 66, column: 10, scope: !21615)
!21617 = !DILocation(line: 66, column: 7, scope: !21601)
!21618 = !DILocation(line: 67, column: 28, scope: !21615)
!21619 = !DILocation(line: 67, column: 12, scope: !21615)
!21620 = !DILocation(line: 67, column: 5, scope: !21615)
!21621 = !DILocation(line: 72, column: 9, scope: !21622)
!21622 = distinct !DILexicalBlock(scope: !21601, file: !21602, line: 72, column: 7)
!21623 = !DILocation(line: 72, column: 23, scope: !21622)
!21624 = !DILocation(line: 72, column: 41, scope: !21622)
!21625 = !DILocation(line: 72, column: 33, scope: !21622)
!21626 = !DILocation(line: 72, column: 26, scope: !21622)
!21627 = !DILocation(line: 72, column: 59, scope: !21622)
!21628 = !DILocation(line: 73, column: 7, scope: !21622)
!21629 = !DILocation(line: 73, column: 18, scope: !21622)
!21630 = !DILocation(line: 73, column: 10, scope: !21622)
!21631 = !DILocation(line: 72, column: 7, scope: !21601)
!21632 = !DILocation(line: 74, column: 19, scope: !21622)
!21633 = !DILocation(line: 74, column: 17, scope: !21622)
!21634 = !DILocation(line: 74, column: 5, scope: !21622)
!21635 = !DILocation(line: 100, column: 28, scope: !21601)
!21636 = !DILocation(line: 100, column: 12, scope: !21601)
!21637 = !DILocation(line: 100, column: 10, scope: !21601)
!21638 = !DILocation(line: 105, column: 7, scope: !21639)
!21639 = distinct !DILexicalBlock(scope: !21601, file: !21602, line: 105, column: 7)
!21640 = !DILocation(line: 105, column: 19, scope: !21639)
!21641 = !DILocation(line: 105, column: 7, scope: !21601)
!21642 = !DILocation(line: 107, column: 15, scope: !21643)
!21643 = distinct !DILexicalBlock(scope: !21639, file: !21602, line: 106, column: 5)
!21644 = !DILocation(line: 107, column: 7, scope: !21643)
!21645 = !DILocation(line: 107, column: 13, scope: !21643)
!21646 = !DILocation(line: 108, column: 14, scope: !21643)
!21647 = !DILocation(line: 109, column: 5, scope: !21643)
!21648 = !DILocation(line: 111, column: 10, scope: !21601)
!21649 = !DILocation(line: 111, column: 3, scope: !21601)
!21650 = !DILocation(line: 112, column: 1, scope: !21601)
!21651 = distinct !DISubprogram(name: "rpl_fcntl", scope: !1392, file: !1392, line: 201, type: !21652, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1393, retainedNodes: !209)
!21652 = !DISubroutineType(types: !21653)
!21653 = !{!7, !7, !7, null}
!21654 = !DILocalVariable(name: "fd", arg: 1, scope: !21651, file: !1392, line: 201, type: !7)
!21655 = !DILocation(line: 201, column: 12, scope: !21651)
!21656 = !DILocalVariable(name: "action", arg: 2, scope: !21651, file: !1392, line: 201, type: !7)
!21657 = !DILocation(line: 201, column: 20, scope: !21651)
!21658 = !DILocalVariable(name: "arg", scope: !21651, file: !1392, line: 207, type: !1396)
!21659 = !DILocation(line: 207, column: 11, scope: !21651)
!21660 = !DILocalVariable(name: "result", scope: !21651, file: !1392, line: 208, type: !7)
!21661 = !DILocation(line: 208, column: 7, scope: !21651)
!21662 = !DILocation(line: 209, column: 3, scope: !21651)
!21663 = !DILocation(line: 210, column: 11, scope: !21651)
!21664 = !DILocation(line: 210, column: 3, scope: !21651)
!21665 = !DILocalVariable(name: "target", scope: !21666, file: !1392, line: 214, type: !7)
!21666 = distinct !DILexicalBlock(scope: !21667, file: !1392, line: 213, column: 7)
!21667 = distinct !DILexicalBlock(scope: !21651, file: !1392, line: 211, column: 5)
!21668 = !DILocation(line: 214, column: 13, scope: !21666)
!21669 = !DILocation(line: 214, column: 22, scope: !21666)
!21670 = !DILocation(line: 215, column: 35, scope: !21666)
!21671 = !DILocation(line: 215, column: 39, scope: !21666)
!21672 = !DILocation(line: 215, column: 18, scope: !21666)
!21673 = !DILocation(line: 215, column: 16, scope: !21666)
!21674 = !DILocation(line: 216, column: 9, scope: !21666)
!21675 = !DILocalVariable(name: "target", scope: !21676, file: !1392, line: 221, type: !7)
!21676 = distinct !DILexicalBlock(scope: !21667, file: !1392, line: 220, column: 7)
!21677 = !DILocation(line: 221, column: 13, scope: !21676)
!21678 = !DILocation(line: 221, column: 22, scope: !21676)
!21679 = !DILocation(line: 222, column: 43, scope: !21676)
!21680 = !DILocation(line: 222, column: 47, scope: !21676)
!21681 = !DILocation(line: 222, column: 18, scope: !21676)
!21682 = !DILocation(line: 222, column: 16, scope: !21676)
!21683 = !DILocation(line: 223, column: 9, scope: !21676)
!21684 = !DILocation(line: 258, column: 17, scope: !21685)
!21685 = distinct !DILexicalBlock(scope: !21667, file: !1392, line: 256, column: 7)
!21686 = !DILocation(line: 258, column: 9, scope: !21685)
!21687 = !DILocation(line: 327, column: 29, scope: !21688)
!21688 = distinct !DILexicalBlock(scope: !21685, file: !1392, line: 259, column: 11)
!21689 = !DILocation(line: 327, column: 33, scope: !21688)
!21690 = !DILocation(line: 327, column: 22, scope: !21688)
!21691 = !DILocation(line: 327, column: 20, scope: !21688)
!21692 = !DILocation(line: 328, column: 13, scope: !21688)
!21693 = !DILocalVariable(name: "x", scope: !21694, file: !1392, line: 422, type: !7)
!21694 = distinct !DILexicalBlock(scope: !21688, file: !1392, line: 421, column: 13)
!21695 = !DILocation(line: 422, column: 19, scope: !21694)
!21696 = !DILocation(line: 422, column: 23, scope: !21694)
!21697 = !DILocation(line: 423, column: 31, scope: !21694)
!21698 = !DILocation(line: 423, column: 35, scope: !21694)
!21699 = !DILocation(line: 423, column: 43, scope: !21694)
!21700 = !DILocation(line: 423, column: 24, scope: !21694)
!21701 = !DILocation(line: 423, column: 22, scope: !21694)
!21702 = !DILocation(line: 425, column: 13, scope: !21688)
!21703 = !DILocalVariable(name: "p", scope: !21704, file: !1392, line: 430, type: !53)
!21704 = distinct !DILexicalBlock(scope: !21688, file: !1392, line: 429, column: 13)
!21705 = !DILocation(line: 430, column: 21, scope: !21704)
!21706 = !DILocation(line: 430, column: 25, scope: !21704)
!21707 = !DILocation(line: 431, column: 31, scope: !21704)
!21708 = !DILocation(line: 431, column: 35, scope: !21704)
!21709 = !DILocation(line: 431, column: 43, scope: !21704)
!21710 = !DILocation(line: 431, column: 24, scope: !21704)
!21711 = !DILocation(line: 431, column: 22, scope: !21704)
!21712 = !DILocation(line: 433, column: 13, scope: !21688)
!21713 = !DILocation(line: 438, column: 9, scope: !21685)
!21714 = !DILocation(line: 441, column: 3, scope: !21651)
!21715 = !DILocation(line: 442, column: 10, scope: !21651)
!21716 = !DILocation(line: 442, column: 3, scope: !21651)
!21717 = distinct !DISubprogram(name: "rpl_fcntl_DUPFD", scope: !1392, file: !1392, line: 446, type: !505, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1393, retainedNodes: !209)
!21718 = !DILocalVariable(name: "fd", arg: 1, scope: !21717, file: !1392, line: 446, type: !7)
!21719 = !DILocation(line: 446, column: 22, scope: !21717)
!21720 = !DILocalVariable(name: "target", arg: 2, scope: !21717, file: !1392, line: 446, type: !7)
!21721 = !DILocation(line: 446, column: 30, scope: !21717)
!21722 = !DILocalVariable(name: "result", scope: !21717, file: !1392, line: 448, type: !7)
!21723 = !DILocation(line: 448, column: 7, scope: !21717)
!21724 = !DILocation(line: 481, column: 19, scope: !21717)
!21725 = !DILocation(line: 481, column: 32, scope: !21717)
!21726 = !DILocation(line: 481, column: 12, scope: !21717)
!21727 = !DILocation(line: 481, column: 10, scope: !21717)
!21728 = !DILocation(line: 483, column: 10, scope: !21717)
!21729 = !DILocation(line: 483, column: 3, scope: !21717)
!21730 = !DILocalVariable(name: "fd", arg: 1, scope: !1391, file: !1392, line: 487, type: !7)
!21731 = !DILocation(line: 487, column: 30, scope: !1391)
!21732 = !DILocalVariable(name: "target", arg: 2, scope: !1391, file: !1392, line: 487, type: !7)
!21733 = !DILocation(line: 487, column: 38, scope: !1391)
!21734 = !DILocalVariable(name: "result", scope: !1391, file: !1392, line: 489, type: !7)
!21735 = !DILocation(line: 489, column: 7, scope: !1391)
!21736 = !DILocation(line: 507, column: 12, scope: !21737)
!21737 = distinct !DILexicalBlock(scope: !1391, file: !1392, line: 507, column: 7)
!21738 = !DILocation(line: 507, column: 9, scope: !21737)
!21739 = !DILocation(line: 507, column: 7, scope: !1391)
!21740 = !DILocation(line: 509, column: 23, scope: !21741)
!21741 = distinct !DILexicalBlock(scope: !21737, file: !1392, line: 508, column: 5)
!21742 = !DILocation(line: 509, column: 44, scope: !21741)
!21743 = !DILocation(line: 509, column: 16, scope: !21741)
!21744 = !DILocation(line: 509, column: 14, scope: !21741)
!21745 = !DILocation(line: 510, column: 16, scope: !21746)
!21746 = distinct !DILexicalBlock(scope: !21741, file: !1392, line: 510, column: 11)
!21747 = !DILocation(line: 510, column: 13, scope: !21746)
!21748 = !DILocation(line: 510, column: 23, scope: !21746)
!21749 = !DILocation(line: 510, column: 26, scope: !21746)
!21750 = !DILocation(line: 510, column: 32, scope: !21746)
!21751 = !DILocation(line: 510, column: 11, scope: !21741)
!21752 = !DILocation(line: 512, column: 30, scope: !21753)
!21753 = distinct !DILexicalBlock(scope: !21746, file: !1392, line: 511, column: 9)
!21754 = !DILocation(line: 517, column: 9, scope: !21753)
!21755 = !DILocation(line: 520, column: 37, scope: !21756)
!21756 = distinct !DILexicalBlock(scope: !21746, file: !1392, line: 519, column: 9)
!21757 = !DILocation(line: 520, column: 41, scope: !21756)
!21758 = !DILocation(line: 520, column: 20, scope: !21756)
!21759 = !DILocation(line: 520, column: 18, scope: !21756)
!21760 = !DILocation(line: 521, column: 15, scope: !21761)
!21761 = distinct !DILexicalBlock(scope: !21756, file: !1392, line: 521, column: 15)
!21762 = !DILocation(line: 521, column: 22, scope: !21761)
!21763 = !DILocation(line: 521, column: 15, scope: !21756)
!21764 = !DILocation(line: 522, column: 32, scope: !21761)
!21765 = !DILocation(line: 522, column: 13, scope: !21761)
!21766 = !DILocation(line: 524, column: 5, scope: !21741)
!21767 = !DILocation(line: 527, column: 31, scope: !21737)
!21768 = !DILocation(line: 527, column: 35, scope: !21737)
!21769 = !DILocation(line: 527, column: 14, scope: !21737)
!21770 = !DILocation(line: 527, column: 12, scope: !21737)
!21771 = !DILocation(line: 528, column: 12, scope: !21772)
!21772 = distinct !DILexicalBlock(scope: !1391, file: !1392, line: 528, column: 7)
!21773 = !DILocation(line: 528, column: 9, scope: !21772)
!21774 = !DILocation(line: 528, column: 19, scope: !21772)
!21775 = !DILocation(line: 528, column: 22, scope: !21772)
!21776 = !DILocation(line: 528, column: 41, scope: !21772)
!21777 = !DILocation(line: 528, column: 7, scope: !1391)
!21778 = !DILocalVariable(name: "flags", scope: !21779, file: !1392, line: 530, type: !7)
!21779 = distinct !DILexicalBlock(scope: !21772, file: !1392, line: 529, column: 5)
!21780 = !DILocation(line: 530, column: 11, scope: !21779)
!21781 = !DILocation(line: 530, column: 26, scope: !21779)
!21782 = !DILocation(line: 530, column: 19, scope: !21779)
!21783 = !DILocation(line: 531, column: 11, scope: !21784)
!21784 = distinct !DILexicalBlock(scope: !21779, file: !1392, line: 531, column: 11)
!21785 = !DILocation(line: 531, column: 17, scope: !21784)
!21786 = !DILocation(line: 531, column: 21, scope: !21784)
!21787 = !DILocation(line: 531, column: 31, scope: !21784)
!21788 = !DILocation(line: 531, column: 48, scope: !21784)
!21789 = !DILocation(line: 531, column: 54, scope: !21784)
!21790 = !DILocation(line: 531, column: 24, scope: !21784)
!21791 = !DILocation(line: 531, column: 68, scope: !21784)
!21792 = !DILocation(line: 531, column: 11, scope: !21779)
!21793 = !DILocalVariable(name: "saved_errno", scope: !21794, file: !1392, line: 533, type: !7)
!21794 = distinct !DILexicalBlock(scope: !21784, file: !1392, line: 532, column: 9)
!21795 = !DILocation(line: 533, column: 15, scope: !21794)
!21796 = !DILocation(line: 533, column: 29, scope: !21794)
!21797 = !DILocation(line: 534, column: 18, scope: !21794)
!21798 = !DILocation(line: 534, column: 11, scope: !21794)
!21799 = !DILocation(line: 535, column: 19, scope: !21794)
!21800 = !DILocation(line: 535, column: 11, scope: !21794)
!21801 = !DILocation(line: 535, column: 17, scope: !21794)
!21802 = !DILocation(line: 536, column: 18, scope: !21794)
!21803 = !DILocation(line: 537, column: 9, scope: !21794)
!21804 = !DILocation(line: 538, column: 5, scope: !21779)
!21805 = !DILocation(line: 540, column: 10, scope: !1391)
!21806 = !DILocation(line: 540, column: 3, scope: !1391)
!21807 = distinct !DISubprogram(name: "acl_errno_valid", scope: !21808, file: !21808, line: 30, type: !256, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2581, retainedNodes: !209)
!21808 = !DIFile(filename: "lib/acl-errno-valid.c", directory: "/home/mbarbar/software/coreutils-8.31")
!21809 = !DILocalVariable(name: "errnum", arg: 1, scope: !21807, file: !21808, line: 30, type: !7)
!21810 = !DILocation(line: 30, column: 22, scope: !21807)
!21811 = !DILocation(line: 34, column: 11, scope: !21807)
!21812 = !DILocation(line: 34, column: 3, scope: !21807)
!21813 = !DILocation(line: 36, column: 17, scope: !21814)
!21814 = distinct !DILexicalBlock(scope: !21807, file: !21808, line: 35, column: 5)
!21815 = !DILocation(line: 37, column: 18, scope: !21814)
!21816 = !DILocation(line: 41, column: 18, scope: !21814)
!21817 = !DILocation(line: 49, column: 22, scope: !21814)
!21818 = !DILocation(line: 50, column: 14, scope: !21814)
!21819 = !DILocation(line: 52, column: 1, scope: !21807)
!21820 = distinct !DISubprogram(name: "c_isalnum", scope: !21821, file: !21821, line: 169, type: !256, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2584, retainedNodes: !209)
!21821 = !DIFile(filename: "./lib/c-ctype.h", directory: "/home/mbarbar/software/coreutils-8.31")
!21822 = !DILocalVariable(name: "c", arg: 1, scope: !21820, file: !21821, line: 169, type: !7)
!21823 = !DILocation(line: 169, column: 16, scope: !21820)
!21824 = !DILocation(line: 171, column: 11, scope: !21820)
!21825 = !DILocation(line: 171, column: 3, scope: !21820)
!21826 = !DILocation(line: 176, column: 7, scope: !21827)
!21827 = distinct !DILexicalBlock(scope: !21820, file: !21821, line: 172, column: 5)
!21828 = !DILocation(line: 178, column: 7, scope: !21827)
!21829 = !DILocation(line: 180, column: 1, scope: !21820)
!21830 = distinct !DISubprogram(name: "c_isalpha", scope: !21821, file: !21821, line: 183, type: !256, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2584, retainedNodes: !209)
!21831 = !DILocalVariable(name: "c", arg: 1, scope: !21830, file: !21821, line: 183, type: !7)
!21832 = !DILocation(line: 183, column: 16, scope: !21830)
!21833 = !DILocation(line: 185, column: 11, scope: !21830)
!21834 = !DILocation(line: 185, column: 3, scope: !21830)
!21835 = !DILocation(line: 189, column: 7, scope: !21836)
!21836 = distinct !DILexicalBlock(scope: !21830, file: !21821, line: 186, column: 5)
!21837 = !DILocation(line: 191, column: 7, scope: !21836)
!21838 = !DILocation(line: 193, column: 1, scope: !21830)
!21839 = distinct !DISubprogram(name: "c_isascii", scope: !21821, file: !21821, line: 198, type: !256, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2584, retainedNodes: !209)
!21840 = !DILocalVariable(name: "c", arg: 1, scope: !21839, file: !21821, line: 198, type: !7)
!21841 = !DILocation(line: 198, column: 16, scope: !21839)
!21842 = !DILocation(line: 200, column: 11, scope: !21839)
!21843 = !DILocation(line: 200, column: 3, scope: !21839)
!21844 = !DILocation(line: 208, column: 7, scope: !21845)
!21845 = distinct !DILexicalBlock(scope: !21839, file: !21821, line: 201, column: 5)
!21846 = !DILocation(line: 210, column: 7, scope: !21845)
!21847 = !DILocation(line: 212, column: 1, scope: !21839)
!21848 = distinct !DISubprogram(name: "c_isblank", scope: !21821, file: !21821, line: 215, type: !256, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2584, retainedNodes: !209)
!21849 = !DILocalVariable(name: "c", arg: 1, scope: !21848, file: !21821, line: 215, type: !7)
!21850 = !DILocation(line: 215, column: 16, scope: !21848)
!21851 = !DILocation(line: 217, column: 10, scope: !21848)
!21852 = !DILocation(line: 217, column: 12, scope: !21848)
!21853 = !DILocation(line: 217, column: 19, scope: !21848)
!21854 = !DILocation(line: 217, column: 22, scope: !21848)
!21855 = !DILocation(line: 217, column: 24, scope: !21848)
!21856 = !DILocation(line: 217, column: 3, scope: !21848)
!21857 = distinct !DISubprogram(name: "c_iscntrl", scope: !21821, file: !21821, line: 221, type: !256, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2584, retainedNodes: !209)
!21858 = !DILocalVariable(name: "c", arg: 1, scope: !21857, file: !21821, line: 221, type: !7)
!21859 = !DILocation(line: 221, column: 16, scope: !21857)
!21860 = !DILocation(line: 223, column: 11, scope: !21857)
!21861 = !DILocation(line: 223, column: 3, scope: !21857)
!21862 = !DILocation(line: 226, column: 7, scope: !21863)
!21863 = distinct !DILexicalBlock(scope: !21857, file: !21821, line: 224, column: 5)
!21864 = !DILocation(line: 228, column: 7, scope: !21863)
!21865 = !DILocation(line: 230, column: 1, scope: !21857)
!21866 = distinct !DISubprogram(name: "c_isdigit", scope: !21821, file: !21821, line: 233, type: !256, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2584, retainedNodes: !209)
!21867 = !DILocalVariable(name: "c", arg: 1, scope: !21866, file: !21821, line: 233, type: !7)
!21868 = !DILocation(line: 233, column: 16, scope: !21866)
!21869 = !DILocation(line: 235, column: 11, scope: !21866)
!21870 = !DILocation(line: 235, column: 3, scope: !21866)
!21871 = !DILocation(line: 238, column: 7, scope: !21872)
!21872 = distinct !DILexicalBlock(scope: !21866, file: !21821, line: 236, column: 5)
!21873 = !DILocation(line: 240, column: 7, scope: !21872)
!21874 = !DILocation(line: 242, column: 1, scope: !21866)
!21875 = distinct !DISubprogram(name: "c_isgraph", scope: !21821, file: !21821, line: 245, type: !256, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2584, retainedNodes: !209)
!21876 = !DILocalVariable(name: "c", arg: 1, scope: !21875, file: !21821, line: 245, type: !7)
!21877 = !DILocation(line: 245, column: 16, scope: !21875)
!21878 = !DILocation(line: 247, column: 11, scope: !21875)
!21879 = !DILocation(line: 247, column: 3, scope: !21875)
!21880 = !DILocation(line: 253, column: 7, scope: !21881)
!21881 = distinct !DILexicalBlock(scope: !21875, file: !21821, line: 248, column: 5)
!21882 = !DILocation(line: 255, column: 7, scope: !21881)
!21883 = !DILocation(line: 257, column: 1, scope: !21875)
!21884 = distinct !DISubprogram(name: "c_islower", scope: !21821, file: !21821, line: 260, type: !256, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2584, retainedNodes: !209)
!21885 = !DILocalVariable(name: "c", arg: 1, scope: !21884, file: !21821, line: 260, type: !7)
!21886 = !DILocation(line: 260, column: 16, scope: !21884)
!21887 = !DILocation(line: 262, column: 11, scope: !21884)
!21888 = !DILocation(line: 262, column: 3, scope: !21884)
!21889 = !DILocation(line: 265, column: 7, scope: !21890)
!21890 = distinct !DILexicalBlock(scope: !21884, file: !21821, line: 263, column: 5)
!21891 = !DILocation(line: 267, column: 7, scope: !21890)
!21892 = !DILocation(line: 269, column: 1, scope: !21884)
!21893 = distinct !DISubprogram(name: "c_isprint", scope: !21821, file: !21821, line: 272, type: !256, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2584, retainedNodes: !209)
!21894 = !DILocalVariable(name: "c", arg: 1, scope: !21893, file: !21821, line: 272, type: !7)
!21895 = !DILocation(line: 272, column: 16, scope: !21893)
!21896 = !DILocation(line: 274, column: 11, scope: !21893)
!21897 = !DILocation(line: 274, column: 3, scope: !21893)
!21898 = !DILocation(line: 281, column: 7, scope: !21899)
!21899 = distinct !DILexicalBlock(scope: !21893, file: !21821, line: 275, column: 5)
!21900 = !DILocation(line: 283, column: 7, scope: !21899)
!21901 = !DILocation(line: 285, column: 1, scope: !21893)
!21902 = distinct !DISubprogram(name: "c_ispunct", scope: !21821, file: !21821, line: 288, type: !256, scopeLine: 289, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2584, retainedNodes: !209)
!21903 = !DILocalVariable(name: "c", arg: 1, scope: !21902, file: !21821, line: 288, type: !7)
!21904 = !DILocation(line: 288, column: 16, scope: !21902)
!21905 = !DILocation(line: 290, column: 11, scope: !21902)
!21906 = !DILocation(line: 290, column: 3, scope: !21902)
!21907 = !DILocation(line: 293, column: 7, scope: !21908)
!21908 = distinct !DILexicalBlock(scope: !21902, file: !21821, line: 291, column: 5)
!21909 = !DILocation(line: 295, column: 7, scope: !21908)
!21910 = !DILocation(line: 297, column: 1, scope: !21902)
!21911 = distinct !DISubprogram(name: "c_isspace", scope: !21821, file: !21821, line: 300, type: !256, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2584, retainedNodes: !209)
!21912 = !DILocalVariable(name: "c", arg: 1, scope: !21911, file: !21821, line: 300, type: !7)
!21913 = !DILocation(line: 300, column: 16, scope: !21911)
!21914 = !DILocation(line: 302, column: 11, scope: !21911)
!21915 = !DILocation(line: 302, column: 3, scope: !21911)
!21916 = !DILocation(line: 305, column: 7, scope: !21917)
!21917 = distinct !DILexicalBlock(scope: !21911, file: !21821, line: 303, column: 5)
!21918 = !DILocation(line: 307, column: 7, scope: !21917)
!21919 = !DILocation(line: 309, column: 1, scope: !21911)
!21920 = distinct !DISubprogram(name: "c_isupper", scope: !21821, file: !21821, line: 312, type: !256, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2584, retainedNodes: !209)
!21921 = !DILocalVariable(name: "c", arg: 1, scope: !21920, file: !21821, line: 312, type: !7)
!21922 = !DILocation(line: 312, column: 16, scope: !21920)
!21923 = !DILocation(line: 314, column: 11, scope: !21920)
!21924 = !DILocation(line: 314, column: 3, scope: !21920)
!21925 = !DILocation(line: 317, column: 7, scope: !21926)
!21926 = distinct !DILexicalBlock(scope: !21920, file: !21821, line: 315, column: 5)
!21927 = !DILocation(line: 319, column: 7, scope: !21926)
!21928 = !DILocation(line: 321, column: 1, scope: !21920)
!21929 = distinct !DISubprogram(name: "c_isxdigit", scope: !21821, file: !21821, line: 324, type: !256, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2584, retainedNodes: !209)
!21930 = !DILocalVariable(name: "c", arg: 1, scope: !21929, file: !21821, line: 324, type: !7)
!21931 = !DILocation(line: 324, column: 17, scope: !21929)
!21932 = !DILocation(line: 326, column: 11, scope: !21929)
!21933 = !DILocation(line: 326, column: 3, scope: !21929)
!21934 = !DILocation(line: 330, column: 7, scope: !21935)
!21935 = distinct !DILexicalBlock(scope: !21929, file: !21821, line: 327, column: 5)
!21936 = !DILocation(line: 332, column: 7, scope: !21935)
!21937 = !DILocation(line: 334, column: 1, scope: !21929)
!21938 = distinct !DISubprogram(name: "c_tolower", scope: !21821, file: !21821, line: 337, type: !1784, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2584, retainedNodes: !209)
!21939 = !DILocalVariable(name: "c", arg: 1, scope: !21938, file: !21821, line: 337, type: !7)
!21940 = !DILocation(line: 337, column: 16, scope: !21938)
!21941 = !DILocation(line: 339, column: 11, scope: !21938)
!21942 = !DILocation(line: 339, column: 3, scope: !21938)
!21943 = !DILocation(line: 342, column: 14, scope: !21944)
!21944 = distinct !DILexicalBlock(scope: !21938, file: !21821, line: 340, column: 5)
!21945 = !DILocation(line: 342, column: 16, scope: !21944)
!21946 = !DILocation(line: 342, column: 22, scope: !21944)
!21947 = !DILocation(line: 342, column: 7, scope: !21944)
!21948 = !DILocation(line: 344, column: 14, scope: !21944)
!21949 = !DILocation(line: 344, column: 7, scope: !21944)
!21950 = !DILocation(line: 346, column: 1, scope: !21938)
!21951 = distinct !DISubprogram(name: "c_toupper", scope: !21821, file: !21821, line: 349, type: !1784, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2584, retainedNodes: !209)
!21952 = !DILocalVariable(name: "c", arg: 1, scope: !21951, file: !21821, line: 349, type: !7)
!21953 = !DILocation(line: 349, column: 16, scope: !21951)
!21954 = !DILocation(line: 351, column: 11, scope: !21951)
!21955 = !DILocation(line: 351, column: 3, scope: !21951)
!21956 = !DILocation(line: 354, column: 14, scope: !21957)
!21957 = distinct !DILexicalBlock(scope: !21951, file: !21821, line: 352, column: 5)
!21958 = !DILocation(line: 354, column: 16, scope: !21957)
!21959 = !DILocation(line: 354, column: 22, scope: !21957)
!21960 = !DILocation(line: 354, column: 7, scope: !21957)
!21961 = !DILocation(line: 356, column: 14, scope: !21957)
!21962 = !DILocation(line: 356, column: 7, scope: !21957)
!21963 = !DILocation(line: 358, column: 1, scope: !21951)
!21964 = distinct !DISubprogram(name: "fopen_safer", scope: !21965, file: !21965, line: 31, type: !2590, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2587, retainedNodes: !209)
!21965 = !DIFile(filename: "lib/fopen-safer.c", directory: "/home/mbarbar/software/coreutils-8.31")
!21966 = !DILocalVariable(name: "file", arg: 1, scope: !21964, file: !21965, line: 31, type: !180)
!21967 = !DILocation(line: 31, column: 26, scope: !21964)
!21968 = !DILocalVariable(name: "mode", arg: 2, scope: !21964, file: !21965, line: 31, type: !180)
!21969 = !DILocation(line: 31, column: 44, scope: !21964)
!21970 = !DILocalVariable(name: "fp", scope: !21964, file: !21965, line: 33, type: !2592)
!21971 = !DILocation(line: 33, column: 9, scope: !21964)
!21972 = !DILocation(line: 33, column: 21, scope: !21964)
!21973 = !DILocation(line: 33, column: 27, scope: !21964)
!21974 = !DILocation(line: 33, column: 14, scope: !21964)
!21975 = !DILocation(line: 35, column: 7, scope: !21976)
!21976 = distinct !DILexicalBlock(scope: !21964, file: !21965, line: 35, column: 7)
!21977 = !DILocation(line: 35, column: 7, scope: !21964)
!21978 = !DILocalVariable(name: "fd", scope: !21979, file: !21965, line: 37, type: !7)
!21979 = distinct !DILexicalBlock(scope: !21976, file: !21965, line: 36, column: 5)
!21980 = !DILocation(line: 37, column: 11, scope: !21979)
!21981 = !DILocation(line: 37, column: 24, scope: !21979)
!21982 = !DILocation(line: 37, column: 16, scope: !21979)
!21983 = !DILocation(line: 39, column: 16, scope: !21984)
!21984 = distinct !DILexicalBlock(scope: !21979, file: !21965, line: 39, column: 11)
!21985 = !DILocation(line: 39, column: 13, scope: !21984)
!21986 = !DILocation(line: 39, column: 19, scope: !21984)
!21987 = !DILocation(line: 39, column: 22, scope: !21984)
!21988 = !DILocation(line: 39, column: 25, scope: !21984)
!21989 = !DILocation(line: 39, column: 11, scope: !21979)
!21990 = !DILocalVariable(name: "f", scope: !21991, file: !21965, line: 41, type: !7)
!21991 = distinct !DILexicalBlock(scope: !21984, file: !21965, line: 40, column: 9)
!21992 = !DILocation(line: 41, column: 15, scope: !21991)
!21993 = !DILocation(line: 41, column: 30, scope: !21991)
!21994 = !DILocation(line: 41, column: 19, scope: !21991)
!21995 = !DILocation(line: 43, column: 15, scope: !21996)
!21996 = distinct !DILexicalBlock(scope: !21991, file: !21965, line: 43, column: 15)
!21997 = !DILocation(line: 43, column: 17, scope: !21996)
!21998 = !DILocation(line: 43, column: 15, scope: !21991)
!21999 = !DILocalVariable(name: "e", scope: !22000, file: !21965, line: 45, type: !7)
!22000 = distinct !DILexicalBlock(scope: !21996, file: !21965, line: 44, column: 13)
!22001 = !DILocation(line: 45, column: 19, scope: !22000)
!22002 = !DILocation(line: 45, column: 23, scope: !22000)
!22003 = !DILocation(line: 46, column: 23, scope: !22000)
!22004 = !DILocation(line: 46, column: 15, scope: !22000)
!22005 = !DILocation(line: 47, column: 23, scope: !22000)
!22006 = !DILocation(line: 47, column: 15, scope: !22000)
!22007 = !DILocation(line: 47, column: 21, scope: !22000)
!22008 = !DILocation(line: 48, column: 15, scope: !22000)
!22009 = !DILocation(line: 51, column: 23, scope: !22010)
!22010 = distinct !DILexicalBlock(scope: !21991, file: !21965, line: 51, column: 15)
!22011 = !DILocation(line: 51, column: 15, scope: !22010)
!22012 = !DILocation(line: 51, column: 27, scope: !22010)
!22013 = !DILocation(line: 52, column: 15, scope: !22010)
!22014 = !DILocation(line: 52, column: 34, scope: !22010)
!22015 = !DILocation(line: 52, column: 37, scope: !22010)
!22016 = !DILocation(line: 52, column: 26, scope: !22010)
!22017 = !DILocation(line: 52, column: 24, scope: !22010)
!22018 = !DILocation(line: 51, column: 15, scope: !21991)
!22019 = !DILocalVariable(name: "e", scope: !22020, file: !21965, line: 54, type: !7)
!22020 = distinct !DILexicalBlock(scope: !22010, file: !21965, line: 53, column: 13)
!22021 = !DILocation(line: 54, column: 19, scope: !22020)
!22022 = !DILocation(line: 54, column: 23, scope: !22020)
!22023 = !DILocation(line: 55, column: 22, scope: !22020)
!22024 = !DILocation(line: 55, column: 15, scope: !22020)
!22025 = !DILocation(line: 56, column: 23, scope: !22020)
!22026 = !DILocation(line: 56, column: 15, scope: !22020)
!22027 = !DILocation(line: 56, column: 21, scope: !22020)
!22028 = !DILocation(line: 57, column: 15, scope: !22020)
!22029 = !DILocation(line: 59, column: 9, scope: !21991)
!22030 = !DILocation(line: 60, column: 5, scope: !21979)
!22031 = !DILocation(line: 62, column: 10, scope: !21964)
!22032 = !DILocation(line: 62, column: 3, scope: !21964)
!22033 = !DILocation(line: 63, column: 1, scope: !21964)
